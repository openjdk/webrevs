{"files":[{"patch":"@@ -102,0 +102,1 @@\n+          $(TOPDIR)\/src\/$1\/share\/classes\/com\/sun\/tools\/javac\/launcher\/MemoryClassLoader.java \\\n","filename":"make\/CompileInterimLangtools.gmk","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-    --override-methods=summary --syntax-highlight\n+    --override-methods=summary\n","filename":"make\/Docs.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+\t    -Xlog:aot=off \\\n@@ -84,0 +85,1 @@\n+\t    -Xlog:aot=off \\\n@@ -92,0 +94,1 @@\n+\t    -Xlog:aot=off \\\n@@ -106,0 +109,1 @@\n+\t    -Xlog:aot=off \\\n","filename":"make\/GenerateLinkOptData.gmk","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-    $1_$2_CDS_DUMP_FLAGS += -Xlog:cds+map*=trace:file=$$(JDK_IMAGE_DIR)\/$$($1_$2_CDS_ARCHIVE).cdsmap:none:filesize=0\n+    $1_$2_CDS_DUMP_FLAGS += -Xlog:aot+map*=trace:file=$$(JDK_IMAGE_DIR)\/$$($1_$2_CDS_ARCHIVE).cdsmap:none:filesize=0\n","filename":"make\/Images.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -757,1 +757,1 @@\n-\t        -Xlog:class+load,cds,cds+class=debug:file=$$($1_AOT_JDK_CONF).log  -Xlog:cds*=error \\\n+\t        -Xlog:class+load,aot,aot+class=debug:file=$$($1_AOT_JDK_CONF).log -Xlog:cds*=error -Xlog:aot*=error \\\n@@ -765,1 +765,1 @@\n-\t        $$($1_VM_OPTIONS) -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CACHE).log -Xlog:cds*=error \\\n+\t        $$($1_VM_OPTIONS) -Xlog:aot,aot+class=debug:file=$$($1_AOT_JDK_CACHE).log -Xlog:cds*=error -Xlog:aot*=error \\\n","filename":"make\/RunTests.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -311,0 +311,4 @@\n+    private static final String REQUIRES_IDENTITY_ANNOTATION =\n+            \"Ljdk\/internal\/RequiresIdentity;\";\n+    private static final String REQUIRES_IDENTITY_ANNOTATION_INTERNAL =\n+            \"Ljdk\/internal\/RequiresIdentity+Annotation;\";\n@@ -318,1 +322,2 @@\n-                    RESTRICTED_ANNOTATION));\n+                    RESTRICTED_ANNOTATION,\n+                    REQUIRES_IDENTITY_ANNOTATION));\n@@ -1035,0 +1040,6 @@\n+        if (REQUIRES_IDENTITY_ANNOTATION.equals(annotationType)) {\n+            \/\/the non-public RequiresIdentity annotation will not be available in ct.sym,\n+            \/\/replace with purely synthetic javac-internal annotation:\n+            annotationType = REQUIRES_IDENTITY_ANNOTATION_INTERNAL;\n+        }\n+\n@@ -2216,0 +2227,1 @@\n+            case RuntimeVisibleTypeAnnotationsAttribute a -> {\/* do nothing for now *\/}\n","filename":"make\/langtools\/src\/classes\/build\/tools\/symbolgenerator\/CreateSymbols.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -71,0 +71,1 @@\n+    DISABLED_WARNINGS_microsoft_debugInit.c := 5287, \\\n","filename":"make\/modules\/jdk.jdwp.agent\/Lib.gmk","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -131,1 +131,2 @@\n-  sub(tmp1, tmp1, tmp2, ext::sxtw, 3);\n+  \/\/ For Cortex-A53 offset is 4 because 2 nops are generated.\n+  sub(tmp1, tmp1, tmp2, ext::sxtw, VM_Version::supports_a53mac() ? 4 : 3);\n@@ -139,0 +140,5 @@\n+    \/\/ maddw generates an extra nop for Cortex-A53 (see maddw definition in macroAssembler).\n+    \/\/ Generate 2nd nop to have 4 instructions per iteration.\n+    if (VM_Version::supports_a53mac()) {\n+      nop();\n+    }\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2591,0 +2591,117 @@\n+  address generate_unsafecopy_common_error_exit() {\n+    address start_pc = __ pc();\n+      __ leave();\n+      __ mov(r0, 0);\n+      __ ret(lr);\n+    return start_pc;\n+  }\n+\n+  \/\/\n+  \/\/  Generate 'unsafe' set memory stub\n+  \/\/  Though just as safe as the other stubs, it takes an unscaled\n+  \/\/  size_t (# bytes) argument instead of an element count.\n+  \/\/\n+  \/\/  This fill operation is atomicity preserving: as long as the\n+  \/\/  address supplied is sufficiently aligned, all writes of up to 64\n+  \/\/  bits in size are single-copy atomic.\n+  \/\/\n+  \/\/  Input:\n+  \/\/    c_rarg0   - destination array address\n+  \/\/    c_rarg1   - byte count (size_t)\n+  \/\/    c_rarg2   - byte value\n+  \/\/\n+  address generate_unsafe_setmemory() {\n+    __ align(CodeEntryAlignment);\n+    StubCodeMark mark(this, StubGenStubId::unsafe_setmemory_id);\n+    address start = __ pc();\n+\n+    Register dest = c_rarg0, count = c_rarg1, value = c_rarg2;\n+    Label tail;\n+\n+    UnsafeMemoryAccessMark umam(this, true, false);\n+\n+    __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n+\n+    __ dup(v0, __ T16B, value);\n+\n+    if (AvoidUnalignedAccesses) {\n+      __ cmp(count, (u1)16);\n+      __ br(__ LO, tail);\n+\n+      __ mov(rscratch1, 16);\n+      __ andr(rscratch2, dest, 15);\n+      __ sub(rscratch1, rscratch1, rscratch2);  \/\/ Bytes needed to 16-align dest\n+      __ strq(v0, Address(dest));\n+      __ sub(count, count, rscratch1);\n+      __ add(dest, dest, rscratch1);\n+    }\n+\n+    __ subs(count, count, (u1)64);\n+    __ br(__ LO, tail);\n+    {\n+      Label again;\n+      __ bind(again);\n+      __ stpq(v0, v0, Address(dest));\n+      __ stpq(v0, v0, Address(dest, 32));\n+\n+      __ subs(count, count, 64);\n+      __ add(dest, dest, 64);\n+      __ br(__ HS, again);\n+    }\n+\n+    __ bind(tail);\n+    \/\/ The count of bytes is off by 64, but we don't need to correct\n+    \/\/ it because we're only going to use the least-significant few\n+    \/\/ count bits from here on.\n+    \/\/ __ add(count, count, 64);\n+\n+    {\n+      Label dont;\n+      __ tbz(count, exact_log2(32), dont);\n+      __ stpq(v0, v0, __ post(dest, 32));\n+      __ bind(dont);\n+    }\n+    {\n+      Label dont;\n+      __ tbz(count, exact_log2(16), dont);\n+      __ strq(v0, __ post(dest, 16));\n+      __ bind(dont);\n+    }\n+    {\n+      Label dont;\n+      __ tbz(count, exact_log2(8), dont);\n+      __ strd(v0, __ post(dest, 8));\n+      __ bind(dont);\n+    }\n+\n+    Label finished;\n+    __ tst(count, 7);\n+    __ br(__ EQ, finished);\n+\n+    {\n+      Label dont;\n+      __ tbz(count, exact_log2(4), dont);\n+      __ strs(v0, __ post(dest, 4));\n+      __ bind(dont);\n+    }\n+    {\n+      Label dont;\n+      __ tbz(count, exact_log2(2), dont);\n+      __ bfi(value, value, 8, 8);\n+      __ strh(value, __ post(dest, 2));\n+      __ bind(dont);\n+    }\n+    {\n+      Label dont;\n+      __ tbz(count, exact_log2(1), dont);\n+      __ strb(value, Address(dest));\n+      __ bind(dont);\n+    }\n+\n+    __ bind(finished);\n+    __ leave();\n+    __ ret(lr);\n+\n+    return start;\n+  }\n+\n@@ -2640,0 +2757,3 @@\n+    address ucm_common_error_exit       =  generate_unsafecopy_common_error_exit();\n+    UnsafeMemoryAccess::set_common_exit_stub_pc(ucm_common_error_exit);\n+\n@@ -8134,1 +8254,2 @@\n-    __ sub(rscratch1, rscratch1, rscratch2, ext::uxtw, 3);\n+    \/\/ For Cortex-A53 offset is 4 because 2 nops are generated.\n+    __ sub(rscratch1, rscratch1, rscratch2, ext::uxtw, VM_Version::supports_a53mac() ? 4 : 3);\n@@ -8142,0 +8263,5 @@\n+      \/\/ maddw generates an extra nop for Cortex-A53 (see maddw definition in macroAssembler).\n+      \/\/ Generate 2nd nop to have 4 instructions per iteration.\n+      if (VM_Version::supports_a53mac()) {\n+        __ nop();\n+      }\n@@ -11414,0 +11540,2 @@\n+    StubRoutines::_unsafe_setmemory = generate_unsafe_setmemory();\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":129,"deletions":1,"binary":false,"changes":130,"status":"modified"},{"patch":"@@ -1936,1 +1936,0 @@\n-    case Op_SubHF:\n@@ -1938,0 +1937,1 @@\n+    case Op_SubHF:\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,3 +98,0 @@\n-      case Op_VectorCastHF2F:\n-      case Op_VectorCastF2HF:\n-        return UseZvfh;\n@@ -116,0 +113,12 @@\n+      case Op_VectorCastHF2F:\n+      case Op_VectorCastF2HF:\n+      case Op_AddVHF:\n+      case Op_DivVHF:\n+      case Op_MaxVHF:\n+      case Op_MinVHF:\n+      case Op_MulVHF:\n+      case Op_SqrtVHF:\n+      case Op_SubVHF:\n+        return UseZvfh;\n+      case Op_FmaVHF:\n+        return UseZvfh && UseFMA;\n@@ -145,4 +154,0 @@\n-definitions %{\n-  int_def VEC_COST             (200, 200);\n-%}\n-\n@@ -154,1 +159,0 @@\n-  ins_cost(VEC_COST);\n@@ -166,1 +170,0 @@\n-  ins_cost(VEC_COST);\n@@ -288,1 +291,0 @@\n-  ins_cost(VEC_COST);\n@@ -303,1 +305,0 @@\n-  ins_cost(VEC_COST);\n@@ -320,1 +321,0 @@\n-  ins_cost(VEC_COST);\n@@ -337,1 +337,0 @@\n-  ins_cost(VEC_COST);\n@@ -354,1 +353,0 @@\n-  ins_cost(VEC_COST);\n@@ -366,0 +364,14 @@\n+instruct vadd_hfp(vReg dst, vReg src1, vReg src2) %{\n+  match(Set dst (AddVHF src1 src2));\n+  format %{ \"vadd_hfp $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    assert(UseZvfh, \"must\");\n+    assert(Matcher::vector_element_basic_type(this) == T_SHORT, \"must\");\n+    __ vsetvli_helper(T_SHORT, Matcher::vector_length(this));\n+    __ vfadd_vv(as_VectorRegister($dst$$reg),\n+                as_VectorRegister($src1$$reg),\n+                as_VectorRegister($src2$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -369,1 +381,0 @@\n-  ins_cost(VEC_COST);\n@@ -388,1 +399,0 @@\n-  ins_cost(VEC_COST);\n@@ -403,1 +413,0 @@\n-  ins_cost(VEC_COST);\n@@ -538,1 +547,0 @@\n-  ins_cost(VEC_COST);\n@@ -549,0 +557,13 @@\n+instruct vsub_hfp(vReg dst, vReg src1, vReg src2) %{\n+  match(Set dst (SubVHF src1 src2));\n+  format %{ \"vsub_hfp $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    assert(UseZvfh, \"must\");\n+    assert(Matcher::vector_element_basic_type(this) == T_SHORT, \"must\");\n+    __ vsetvli_helper(T_SHORT, Matcher::vector_length(this));\n+    __ vfsub_vv(as_VectorRegister($dst$$reg), as_VectorRegister($src1$$reg),\n+                as_VectorRegister($src2$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -552,1 +573,0 @@\n-  ins_cost(VEC_COST);\n@@ -570,1 +590,0 @@\n-  ins_cost(VEC_COST);\n@@ -584,1 +603,0 @@\n-  ins_cost(VEC_COST);\n@@ -660,1 +678,0 @@\n-  ins_cost(VEC_COST);\n@@ -677,1 +694,0 @@\n-  ins_cost(VEC_COST);\n@@ -694,1 +710,0 @@\n-  ins_cost(VEC_COST);\n@@ -711,1 +726,0 @@\n-  ins_cost(VEC_COST);\n@@ -728,1 +742,0 @@\n-  ins_cost(VEC_COST);\n@@ -745,1 +758,0 @@\n-  ins_cost(VEC_COST);\n@@ -762,1 +774,0 @@\n-  ins_cost(VEC_COST);\n@@ -779,1 +790,0 @@\n-  ins_cost(VEC_COST);\n@@ -795,1 +805,0 @@\n-  ins_cost(VEC_COST);\n@@ -811,1 +820,0 @@\n-  ins_cost(VEC_COST);\n@@ -951,1 +959,0 @@\n-  ins_cost(VEC_COST);\n@@ -967,1 +974,0 @@\n-  ins_cost(VEC_COST);\n@@ -1107,1 +1113,0 @@\n-  ins_cost(VEC_COST);\n@@ -1123,1 +1128,0 @@\n-  ins_cost(VEC_COST);\n@@ -1545,0 +1549,14 @@\n+instruct vdiv_hfp(vReg dst, vReg src1, vReg src2) %{\n+  match(Set dst (DivVHF src1 src2));\n+  format %{ \"vdiv_hfp $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    assert(UseZvfh, \"must\");\n+    assert(Matcher::vector_element_basic_type(this) == T_SHORT, \"must\");\n+    __ vsetvli_helper(T_SHORT, Matcher::vector_length(this));\n+    __ vfdiv_vv(as_VectorRegister($dst$$reg),\n+                as_VectorRegister($src1$$reg),\n+                as_VectorRegister($src2$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -1548,1 +1566,0 @@\n-  ins_cost(VEC_COST);\n@@ -1565,1 +1582,0 @@\n-  ins_cost(VEC_COST);\n@@ -1583,1 +1599,0 @@\n-  ins_cost(VEC_COST);\n@@ -1598,1 +1613,0 @@\n-  ins_cost(VEC_COST);\n@@ -1615,1 +1629,0 @@\n-  ins_cost(VEC_COST);\n@@ -1630,1 +1643,0 @@\n-  ins_cost(VEC_COST);\n@@ -1645,1 +1657,0 @@\n-  ins_cost(VEC_COST);\n@@ -1659,1 +1670,0 @@\n-  ins_cost(VEC_COST);\n@@ -1675,1 +1685,0 @@\n-  ins_cost(VEC_COST);\n@@ -1689,1 +1698,0 @@\n-  ins_cost(VEC_COST);\n@@ -1701,0 +1709,30 @@\n+\/\/ vector float-point max\/min (half precision)\n+\n+instruct vmax_hfp(vReg dst, vReg src1, vReg src2, vRegMask_V0 v0) %{\n+  match(Set dst (MaxVHF src1 src2));\n+  effect(TEMP_DEF dst, TEMP v0);\n+  format %{ \"vmax_hfp $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    assert(UseZvfh, \"must\");\n+    assert(Matcher::vector_element_basic_type(this) == T_SHORT, \"must\");\n+    __ minmax_fp_v(as_VectorRegister($dst$$reg),\n+                   as_VectorRegister($src1$$reg), as_VectorRegister($src2$$reg),\n+                   T_SHORT, false \/* is_min *\/, Matcher::vector_length(this));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vmin_hfp(vReg dst, vReg src1, vReg src2, vRegMask_V0 v0) %{\n+  match(Set dst (MinVHF src1 src2));\n+  effect(TEMP_DEF dst, TEMP v0);\n+  format %{ \"vmin_hfp $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    assert(UseZvfh, \"must\");\n+    assert(Matcher::vector_element_basic_type(this) == T_SHORT, \"must\");\n+    __ minmax_fp_v(as_VectorRegister($dst$$reg),\n+                   as_VectorRegister($src1$$reg), as_VectorRegister($src2$$reg),\n+                   T_SHORT, true \/* is_min *\/, Matcher::vector_length(this));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -1708,1 +1746,0 @@\n-  ins_cost(VEC_COST);\n@@ -1724,1 +1761,0 @@\n-  ins_cost(VEC_COST);\n@@ -1742,1 +1778,0 @@\n-  ins_cost(VEC_COST);\n@@ -1759,1 +1794,0 @@\n-  ins_cost(VEC_COST);\n@@ -1773,0 +1807,15 @@\n+\/\/ dst_src1 = src2 * src3 + dst_src1 (half precision)\n+instruct vhfmla(vReg dst_src1, vReg src2, vReg src3) %{\n+  match(Set dst_src1 (FmaVHF dst_src1 (Binary src2 src3)));\n+  format %{ \"vhfmla $dst_src1, $dst_src1, $src2, $src3\" %}\n+  ins_encode %{\n+    assert(UseFMA, \"Needs FMA instructions support.\");\n+    assert(UseZvfh, \"must\");\n+    assert(Matcher::vector_element_basic_type(this) == T_SHORT, \"must\");\n+    __ vsetvli_helper(T_SHORT, Matcher::vector_length(this));\n+    __ vfmacc_vv(as_VectorRegister($dst_src1$$reg),\n+                 as_VectorRegister($src2$$reg), as_VectorRegister($src3$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -1777,1 +1826,0 @@\n-  ins_cost(VEC_COST);\n@@ -1812,1 +1860,0 @@\n-  ins_cost(VEC_COST);\n@@ -1827,1 +1874,0 @@\n-  ins_cost(VEC_COST);\n@@ -1861,1 +1907,0 @@\n-  ins_cost(VEC_COST);\n@@ -1876,1 +1921,0 @@\n-  ins_cost(VEC_COST);\n@@ -1909,1 +1953,0 @@\n-  ins_cost(VEC_COST);\n@@ -1923,1 +1966,0 @@\n-  ins_cost(VEC_COST);\n@@ -1959,1 +2001,0 @@\n-  ins_cost(VEC_COST);\n@@ -1995,1 +2036,0 @@\n-  ins_cost(VEC_COST);\n@@ -2030,1 +2070,0 @@\n-  ins_cost(VEC_COST);\n@@ -2041,0 +2080,13 @@\n+instruct vmul_hfp(vReg dst, vReg src1, vReg src2) %{\n+  match(Set dst (MulVHF src1 src2));\n+  format %{ \"vmul_hfp $dst, $src1, $src2\" %}\n+  ins_encode %{\n+    assert(UseZvfh, \"must\");\n+    assert(Matcher::vector_element_basic_type(this) == T_SHORT, \"must\");\n+    __ vsetvli_helper(T_SHORT, Matcher::vector_length(this));\n+    __ vfmul_vv(as_VectorRegister($dst$$reg), as_VectorRegister($src1$$reg),\n+                as_VectorRegister($src2$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -2044,1 +2096,0 @@\n-  ins_cost(VEC_COST);\n@@ -2062,1 +2113,0 @@\n-  ins_cost(VEC_COST);\n@@ -2076,1 +2126,0 @@\n-  ins_cost(VEC_COST);\n@@ -2150,1 +2199,0 @@\n-  ins_cost(VEC_COST);\n@@ -2165,1 +2213,0 @@\n-  ins_cost(VEC_COST);\n@@ -2181,1 +2228,0 @@\n-  ins_cost(VEC_COST);\n@@ -2196,1 +2242,0 @@\n-  ins_cost(VEC_COST);\n@@ -2215,1 +2260,0 @@\n-  ins_cost(VEC_COST);\n@@ -2230,1 +2274,0 @@\n-  ins_cost(VEC_COST);\n@@ -2249,1 +2292,0 @@\n-  ins_cost(VEC_COST);\n@@ -2265,1 +2307,0 @@\n-  ins_cost(VEC_COST);\n@@ -2285,1 +2326,0 @@\n-  ins_cost(VEC_COST);\n@@ -2300,1 +2340,0 @@\n-  ins_cost(VEC_COST);\n@@ -2319,1 +2358,0 @@\n-  ins_cost(VEC_COST);\n@@ -2335,1 +2373,0 @@\n-  ins_cost(VEC_COST);\n@@ -2355,1 +2392,0 @@\n-  ins_cost(VEC_COST);\n@@ -2370,1 +2406,0 @@\n-  ins_cost(VEC_COST);\n@@ -2389,1 +2424,0 @@\n-  ins_cost(VEC_COST);\n@@ -2405,1 +2439,0 @@\n-  ins_cost(VEC_COST);\n@@ -2425,1 +2458,0 @@\n-  ins_cost(VEC_COST);\n@@ -2440,1 +2472,0 @@\n-  ins_cost(VEC_COST);\n@@ -2463,1 +2494,0 @@\n-  ins_cost(VEC_COST);\n@@ -2479,1 +2509,0 @@\n-  ins_cost(VEC_COST);\n@@ -2495,1 +2524,0 @@\n-  ins_cost(VEC_COST);\n@@ -2511,1 +2539,0 @@\n-  ins_cost(VEC_COST);\n@@ -2531,1 +2558,0 @@\n-  ins_cost(VEC_COST);\n@@ -2547,1 +2573,0 @@\n-  ins_cost(VEC_COST);\n@@ -2562,1 +2587,0 @@\n-  ins_cost(VEC_COST);\n@@ -2577,1 +2601,0 @@\n-  ins_cost(VEC_COST);\n@@ -2596,1 +2619,0 @@\n-  ins_cost(VEC_COST);\n@@ -2611,1 +2633,0 @@\n-  ins_cost(VEC_COST);\n@@ -2631,1 +2652,0 @@\n-  ins_cost(VEC_COST);\n@@ -2647,1 +2667,0 @@\n-  ins_cost(VEC_COST);\n@@ -2666,1 +2685,0 @@\n-  ins_cost(VEC_COST);\n@@ -2681,1 +2699,0 @@\n-  ins_cost(VEC_COST);\n@@ -2701,1 +2718,0 @@\n-  ins_cost(VEC_COST);\n@@ -2717,1 +2733,0 @@\n-  ins_cost(VEC_COST);\n@@ -2734,1 +2749,0 @@\n-  ins_cost(VEC_COST);\n@@ -2749,1 +2763,0 @@\n-  ins_cost(VEC_COST);\n@@ -2766,1 +2779,0 @@\n-  ins_cost(VEC_COST);\n@@ -2782,1 +2794,0 @@\n-  ins_cost(VEC_COST);\n@@ -2800,1 +2811,0 @@\n-  ins_cost(VEC_COST);\n@@ -2815,1 +2825,0 @@\n-  ins_cost(VEC_COST);\n@@ -2832,1 +2841,0 @@\n-  ins_cost(VEC_COST);\n@@ -2848,1 +2856,0 @@\n-  ins_cost(VEC_COST);\n@@ -2927,1 +2934,0 @@\n-  ins_cost(VEC_COST);\n@@ -2940,1 +2946,0 @@\n-  ins_cost(VEC_COST);\n@@ -2952,1 +2957,0 @@\n-  ins_cost(VEC_COST);\n@@ -2965,1 +2969,0 @@\n-  ins_cost(VEC_COST);\n@@ -2974,0 +2977,12 @@\n+instruct replicateHF(vReg dst, fRegF src) %{\n+  predicate(Matcher::vector_element_basic_type(n) == T_SHORT);\n+  match(Set dst (Replicate src));\n+  format %{ \"replicateHF $dst, $src\" %}\n+  ins_encode %{\n+    assert(UseZvfh, \"must\");\n+    __ vsetvli_helper(T_SHORT, Matcher::vector_length(this));\n+    __ vfmv_v_f(as_VectorRegister($dst$$reg), $src$$FloatRegister);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -2977,1 +2992,0 @@\n-  ins_cost(VEC_COST);\n@@ -2989,1 +3003,0 @@\n-  ins_cost(VEC_COST);\n@@ -3028,1 +3041,0 @@\n-  ins_cost(VEC_COST);\n@@ -3047,1 +3059,0 @@\n-  ins_cost(VEC_COST);\n@@ -3066,1 +3077,0 @@\n-  ins_cost(VEC_COST);\n@@ -3078,1 +3088,0 @@\n-  ins_cost(VEC_COST);\n@@ -3090,1 +3099,0 @@\n-  ins_cost(VEC_COST);\n@@ -3108,1 +3116,0 @@\n-  ins_cost(VEC_COST);\n@@ -3126,1 +3133,0 @@\n-  ins_cost(VEC_COST);\n@@ -3139,1 +3145,0 @@\n-  ins_cost(VEC_COST);\n@@ -3152,1 +3157,0 @@\n-  ins_cost(VEC_COST);\n@@ -3171,1 +3175,0 @@\n-  ins_cost(VEC_COST);\n@@ -3190,1 +3193,0 @@\n-  ins_cost(VEC_COST);\n@@ -3202,1 +3204,0 @@\n-  ins_cost(VEC_COST);\n@@ -3214,1 +3215,0 @@\n-  ins_cost(VEC_COST);\n@@ -3235,1 +3235,0 @@\n-  ins_cost(VEC_COST);\n@@ -3256,1 +3255,0 @@\n-  ins_cost(VEC_COST);\n@@ -3269,1 +3267,0 @@\n-  ins_cost(VEC_COST);\n@@ -3282,1 +3279,0 @@\n-  ins_cost(VEC_COST);\n@@ -3301,1 +3297,0 @@\n-  ins_cost(VEC_COST);\n@@ -3320,1 +3315,0 @@\n-  ins_cost(VEC_COST);\n@@ -3332,1 +3326,0 @@\n-  ins_cost(VEC_COST);\n@@ -3344,1 +3337,0 @@\n-  ins_cost(VEC_COST);\n@@ -3365,1 +3357,0 @@\n-  ins_cost(VEC_COST);\n@@ -3386,1 +3377,0 @@\n-  ins_cost(VEC_COST);\n@@ -3399,1 +3389,0 @@\n-  ins_cost(VEC_COST);\n@@ -3412,1 +3401,0 @@\n-  ins_cost(VEC_COST);\n@@ -3430,1 +3418,0 @@\n-  ins_cost(VEC_COST);\n@@ -3448,1 +3435,0 @@\n-  ins_cost(VEC_COST);\n@@ -3466,1 +3452,0 @@\n-  ins_cost(VEC_COST);\n@@ -3483,1 +3468,0 @@\n-  ins_cost(VEC_COST);\n@@ -3500,1 +3484,0 @@\n-  ins_cost(VEC_COST);\n@@ -3517,1 +3500,0 @@\n-  ins_cost(VEC_COST);\n@@ -3534,1 +3516,0 @@\n-  ins_cost(VEC_COST);\n@@ -3550,1 +3531,0 @@\n-  ins_cost(VEC_COST);\n@@ -3572,1 +3552,0 @@\n-  ins_cost(VEC_COST);\n@@ -3594,1 +3573,0 @@\n-  ins_cost(VEC_COST);\n@@ -3612,1 +3590,0 @@\n-  ins_cost(VEC_COST);\n@@ -3629,1 +3606,0 @@\n-  ins_cost(VEC_COST);\n@@ -3650,1 +3626,0 @@\n-  ins_cost(VEC_COST);\n@@ -3671,1 +3646,0 @@\n-  ins_cost(VEC_COST);\n@@ -3688,1 +3662,0 @@\n-  ins_cost(VEC_COST);\n@@ -3704,1 +3677,0 @@\n-  ins_cost(VEC_COST);\n@@ -3721,1 +3693,0 @@\n-  ins_cost(VEC_COST);\n@@ -3738,1 +3709,0 @@\n-  ins_cost(VEC_COST);\n@@ -3751,1 +3721,0 @@\n-  ins_cost(VEC_COST);\n@@ -3763,1 +3732,0 @@\n-  ins_cost(VEC_COST);\n@@ -3781,1 +3749,0 @@\n-  ins_cost(VEC_COST);\n@@ -3799,1 +3766,0 @@\n-  ins_cost(VEC_COST);\n@@ -3813,1 +3779,0 @@\n-  ins_cost(VEC_COST);\n@@ -4017,0 +3982,12 @@\n+instruct vsqrt_hfp(vReg dst, vReg src) %{\n+  match(Set dst (SqrtVHF src));\n+  format %{ \"vsqrt_hfp $dst, $src\" %}\n+  ins_encode %{\n+    assert(UseZvfh, \"must\");\n+    assert(Matcher::vector_element_basic_type(this) == T_SHORT, \"must\");\n+    __ vsetvli_helper(T_SHORT, Matcher::vector_length(this));\n+    __ vfsqrt_v(as_VectorRegister($dst$$reg), as_VectorRegister($src$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -4020,1 +3997,0 @@\n-  ins_cost(VEC_COST);\n@@ -4035,1 +4011,0 @@\n-  ins_cost(VEC_COST);\n@@ -4334,1 +4309,0 @@\n-  ins_cost(VEC_COST);\n@@ -5203,1 +5177,0 @@\n-  ins_cost(VEC_COST);\n@@ -5217,1 +5190,0 @@\n-  ins_cost(VEC_COST);\n@@ -5232,1 +5204,0 @@\n-  ins_cost(VEC_COST);\n@@ -5245,1 +5216,0 @@\n-  ins_cost(VEC_COST);\n@@ -5260,1 +5230,0 @@\n-  ins_cost(VEC_COST);\n@@ -5273,1 +5242,0 @@\n-  ins_cost(VEC_COST);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":135,"deletions":167,"binary":false,"changes":302,"status":"modified"},{"patch":"@@ -243,3 +243,9 @@\n-  if (UseZvfh && !UseRVV) {\n-    warning(\"Cannot enable UseZvfh on cpu without RVV support.\");\n-    FLAG_SET_DEFAULT(UseZvfh, false);\n+  if (UseZvfh) {\n+    if (!UseRVV) {\n+      warning(\"Cannot enable UseZvfh on cpu without RVV support.\");\n+      FLAG_SET_DEFAULT(UseZvfh, false);\n+    }\n+    if (!UseZfh) {\n+      warning(\"Cannot enable UseZvfh on cpu without Zfh support.\");\n+      FLAG_SET_DEFAULT(UseZvfh, false);\n+    }\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-  intptr_t* tos          = operand_stack_base - tempcount - popframe_extra_args;\n+  intptr_t* esp          = operand_stack_base - tempcount - popframe_extra_args - 1;\n@@ -209,1 +209,1 @@\n-  interpreter_frame->interpreter_frame_set_tos_address(tos);\n+  interpreter_frame->interpreter_frame_set_esp(esp);\n","filename":"src\/hotspot\/cpu\/s390\/abstractInterpreter_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -501,3 +501,0 @@\n-  \/\/ Where z_ijava_state.esp is saved.\n-  inline intptr_t** interpreter_frame_esp_addr() const;\n-\n@@ -505,0 +502,4 @@\n+\n+  inline intptr_t* interpreter_frame_esp() const;\n+  \/\/ Where z_ijava_state.esp is saved.\n+  inline void interpreter_frame_set_esp(intptr_t* esp);\n@@ -506,1 +507,0 @@\n-  inline void interpreter_frame_set_tos_address(intptr_t* x);\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -229,0 +229,4 @@\n+inline intptr_t* frame::interpreter_frame_esp() const {\n+  return (intptr_t*) at_relative(_z_ijava_idx(esp));\n+}\n+\n@@ -230,2 +234,4 @@\n-inline intptr_t** frame::interpreter_frame_esp_addr() const {\n-  return (intptr_t**) &(ijava_state()->esp);\n+inline void frame::interpreter_frame_set_esp(intptr_t* esp) {\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized esp\n+  ijava_state()->esp = (intptr_t) (esp - fp());\n@@ -236,5 +242,1 @@\n-  return *interpreter_frame_esp_addr() + 1;\n-}\n-\n-inline void frame::interpreter_frame_set_tos_address(intptr_t* x) {\n-  *interpreter_frame_esp_addr() = x - 1;\n+  return interpreter_frame_esp() + Interpreter::stackElementWords;\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.inline.hpp","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -668,2 +668,7 @@\n-void InterpreterMacroAssembler::save_esp() {\n-  z_stg(Z_esp, Address(Z_fp, _z_ijava_state_neg(esp)));\n+void InterpreterMacroAssembler::save_esp(Register fp) {\n+  if (fp == noreg) {\n+    fp = Z_fp;\n+  }\n+  z_sgrk(Z_R0, Z_esp, fp);\n+  z_srag(Z_R0, Z_R0, Interpreter::logStackElementSize);\n+  z_stg(Z_R0, Address(fp, _z_ijava_state_neg(esp)));\n@@ -675,0 +680,2 @@\n+  z_slag(Z_esp, Z_esp, Interpreter::logStackElementSize);\n+  z_agr(Z_esp, Z_fp);\n","filename":"src\/hotspot\/cpu\/s390\/interp_masm_s390.cpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-  void save_esp();\n+  void save_esp(Register fp = noreg);\n","filename":"src\/hotspot\/cpu\/s390\/interp_masm_s390.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1183,1 +1183,2 @@\n-  __ z_stg(Z_esp, _z_ijava_state_neg(esp), fp);\n+\n+  __ save_esp(fp);\n","filename":"src\/hotspot\/cpu\/s390\/templateInterpreterGenerator_s390.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1358,10 +1358,1 @@\n-                                                      int constant,\n-                                                      bool decrement) {\n-  \/\/ Counter address\n-  Address data(mdp_in, constant);\n-\n-  increment_mdp_data_at(data, decrement);\n-}\n-\n-void InterpreterMacroAssembler::increment_mdp_data_at(Address data,\n-                                                      bool decrement) {\n+                                                      int constant) {\n@@ -1369,19 +1360,2 @@\n-  \/\/ %%% this does 64bit counters at best it is wasting space\n-  \/\/ at worst it is a rare bug when counters overflow\n-\n-  if (decrement) {\n-    \/\/ Decrement the register.  Set condition codes.\n-    addptr(data, -DataLayout::counter_increment);\n-    \/\/ If the decrement causes the counter to overflow, stay negative\n-    Label L;\n-    jcc(Assembler::negative, L);\n-    addptr(data, DataLayout::counter_increment);\n-    bind(L);\n-  } else {\n-    assert(DataLayout::counter_increment == 1,\n-           \"flow-free idiom only works with 1\");\n-    \/\/ Increment the register.  Set carry flag.\n-    addptr(data, DataLayout::counter_increment);\n-    \/\/ If the increment causes the counter to overflow, pull back by 1.\n-    sbbptr(data, 0);\n-  }\n+  Address data(mdp_in, constant);\n+  addptr(data, DataLayout::counter_increment);\n@@ -1392,6 +1366,5 @@\n-                                                      Register reg,\n-                                                      int constant,\n-                                                      bool decrement) {\n-  Address data(mdp_in, reg, Address::times_1, constant);\n-\n-  increment_mdp_data_at(data, decrement);\n+                                                      Register index,\n+                                                      int constant) {\n+  assert(ProfileInterpreter, \"must be profiling interpreter\");\n+  Address data(mdp_in, index, Address::times_1, constant);\n+  addptr(data, DataLayout::counter_increment);\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":8,"deletions":35,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -229,5 +229,2 @@\n-  void increment_mdp_data_at(Address data, bool decrement = false);\n-  void increment_mdp_data_at(Register mdp_in, int constant,\n-                             bool decrement = false);\n-  void increment_mdp_data_at(Register mdp_in, Register reg, int constant,\n-                             bool decrement = false);\n+  void increment_mdp_data_at(Register mdp_in, int constant);\n+  void increment_mdp_data_at(Register mdp_in, Register index, int constant);\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -4377,0 +4377,2 @@\n+  generate_kyber_stubs();\n+\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -493,1 +493,4 @@\n-  \/\/ Dilithium stubs and helper functions\n+  \/\/ Kyber stubs\n+  void generate_kyber_stubs();\n+\n+  \/\/ Dilithium stubs\n@@ -495,1 +498,0 @@\n-  \/\/ BASE64 stubs\n@@ -497,0 +499,1 @@\n+  \/\/ BASE64 stubs\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,952 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"asm\/assembler.hpp\"\n+#include \"asm\/assembler.inline.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"stubGenerator_x86_64.hpp\"\n+\n+#define __ _masm->\n+\n+#define xmm(i) as_XMMRegister(i)\n+\n+#ifdef PRODUCT\n+#define BLOCK_COMMENT(str) \/* nothing *\/\n+#else\n+#define BLOCK_COMMENT(str) __ block_comment(str)\n+#endif \/\/ PRODUCT\n+\n+#define BIND(label) bind(label); BLOCK_COMMENT(#label \":\")\n+\n+\/\/ Constants\n+\/\/\n+ATTRIBUTE_ALIGNED(64) static const uint16_t kyberAvx512Consts[] = {\n+    0xF301, 0xF301, 0xF301, 0xF301, \/\/ q^-1 mod montR\n+    0x0D01, 0x0D01, 0x0D01, 0x0D01, \/\/ q\n+    0x4EBF, 0x4EBF, 0x4EBF, 0x4EBF, \/\/ Barrett multiplier\n+    0x0200, 0x0200, 0x0200, 0x0200, \/\/(dim\/2)^-1 mod q\n+    0x0549, 0x0549, 0x0549, 0x0549, \/\/ montR^2 mod q\n+    0x0F00, 0x0F00, 0x0F00, 0x0F00  \/\/ mask for kyber12to16\n+  };\n+\n+static int qInvModROffset = 0;\n+static int qOffset = 8;\n+static int barretMultiplierOffset = 16;\n+static int dimHalfInverseOffset = 24;\n+static int montRSquareModqOffset = 32;\n+static int f00Offset = 40;\n+\n+static address kyberAvx512ConstsAddr(int offset) {\n+  return ((address) kyberAvx512Consts) + offset;\n+}\n+\n+const Register scratch = r10;\n+\n+ATTRIBUTE_ALIGNED(64) static const uint16_t kyberAvx512NttPerms[] = {\n+\/\/ 0\n+    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,\n+    0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,\n+    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,\n+    0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,\n+    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n+    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n+    0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,\n+    0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,\n+\/\/ 128\n+    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n+    0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,\n+    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,\n+    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,\n+    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n+    0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,\n+    0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,\n+    0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,\n+\/\/ 256\n+    0x00, 0x01, 0x02, 0x03, 0x20, 0x21, 0x22, 0x23,\n+    0x08, 0x09, 0x0A, 0x0B, 0x28, 0x29, 0x2A, 0x2B,\n+    0x10, 0x11, 0x12, 0x13, 0x30, 0x31, 0x32, 0x33,\n+    0x18, 0x19, 0x1A, 0x1B, 0x38, 0x39, 0x3A, 0x3B,\n+    0x04, 0x05, 0x06, 0x07, 0x24, 0x25, 0x26, 0x27,\n+    0x0C, 0x0D, 0x0E, 0x0F, 0x2C, 0x2D, 0x2E, 0x2F,\n+    0x14, 0x15, 0x16, 0x17, 0x34, 0x35, 0x36, 0x37,\n+    0x1C, 0x1D, 0x1E, 0x1F, 0x3C, 0x3D, 0x3E, 0x3F,\n+\/\/ 384\n+    0x00, 0x01, 0x20, 0x21, 0x04, 0x05, 0x24, 0x25,\n+    0x08, 0x09, 0x28, 0x29, 0x0C, 0x0D, 0x2C, 0x2D,\n+    0x10, 0x11, 0x30, 0x31, 0x14, 0x15, 0x34, 0x35,\n+    0x18, 0x19, 0x38, 0x39, 0x1C, 0x1D, 0x3C, 0x3D,\n+    0x02, 0x03, 0x22, 0x23, 0x06, 0x07, 0x26, 0x27,\n+    0x0A, 0x0B, 0x2A, 0x2B, 0x0E, 0x0F, 0x2E, 0x2F,\n+    0x12, 0x13, 0x32, 0x33, 0x16, 0x17, 0x36, 0x37,\n+    0x1A, 0x1B, 0x3A, 0x3B, 0x1E, 0x1F, 0x3E, 0x3F,\n+\/\/ 512\n+    0x10, 0x11, 0x30, 0x31, 0x12, 0x13, 0x32, 0x33,\n+    0x14, 0x15, 0x34, 0x35, 0x16, 0x17, 0x36, 0x37,\n+    0x18, 0x19, 0x38, 0x39, 0x1A, 0x1B, 0x3A, 0x3B,\n+    0x1C, 0x1D, 0x3C, 0x3D, 0x1E, 0x1F, 0x3E, 0x3F,\n+    0x00, 0x01, 0x20, 0x21, 0x02, 0x03, 0x22, 0x23,\n+    0x04, 0x05, 0x24, 0x25, 0x06, 0x07, 0x26, 0x27,\n+    0x08, 0x09, 0x28, 0x29, 0x0A, 0x0B, 0x2A, 0x2B,\n+    0x0C, 0x0D, 0x2C, 0x2D, 0x0E, 0x0F, 0x2E, 0x2F\n+  };\n+\n+static address kyberAvx512NttPermsAddr() {\n+  return (address) kyberAvx512NttPerms;\n+}\n+\n+ATTRIBUTE_ALIGNED(64) static const uint16_t kyberAvx512InverseNttPerms[] = {\n+\/\/ 0\n+    0x02, 0x03, 0x06, 0x07, 0x0A, 0x0B, 0x0E, 0x0F,\n+    0x12, 0x13, 0x16, 0x17, 0x1A, 0x1B, 0x1E, 0x1F,\n+    0x22, 0x23, 0x26, 0x27, 0x2A, 0x2B, 0x2E, 0x2F,\n+    0x32, 0x33, 0x36, 0x37, 0x3A, 0x3B, 0x3E, 0x3F,\n+    0x00, 0x01, 0x04, 0x05, 0x08, 0x09, 0x0C, 0x0D,\n+    0x10, 0x11, 0x14, 0x15, 0x18, 0x19, 0x1C, 0x1D,\n+    0x20, 0x21, 0x24, 0x25, 0x28, 0x29, 0x2C, 0x2D,\n+    0x30, 0x31, 0x34, 0x35, 0x38, 0x39, 0x3C, 0x3D,\n+\/\/ 128\n+    0x00, 0x01, 0x20, 0x21, 0x04, 0x05, 0x24, 0x25,\n+    0x08, 0x09, 0x28, 0x29, 0x0C, 0x0D, 0x2C, 0x2D,\n+    0x10, 0x11, 0x30, 0x31, 0x14, 0x15, 0x34, 0x35,\n+    0x18, 0x19, 0x38, 0x39, 0x1C, 0x1D, 0x3C, 0x3D,\n+    0x02, 0x03, 0x22, 0x23, 0x06, 0x07, 0x26, 0x27,\n+    0x0A, 0x0B, 0x2A, 0x2B, 0x0E, 0x0F, 0x2E, 0x2F,\n+    0x12, 0x13, 0x32, 0x33, 0x16, 0x17, 0x36, 0x37,\n+    0x1A, 0x1B, 0x3A, 0x3B, 0x1E, 0x1F, 0x3E, 0x3F,\n+\/\/ 256\n+    0x00, 0x01, 0x02, 0x03, 0x20, 0x21, 0x22, 0x23,\n+    0x08, 0x09, 0x0A, 0x0B, 0x28, 0x29, 0x2A, 0x2B,\n+    0x10, 0x11, 0x12, 0x13, 0x30, 0x31, 0x32, 0x33,\n+    0x18, 0x19, 0x1A, 0x1B, 0x38, 0x39, 0x3A, 0x3B,\n+    0x04, 0x05, 0x06, 0x07, 0x24, 0x25, 0x26, 0x27,\n+    0x0C, 0x0D, 0x0E, 0x0F, 0x2C, 0x2D, 0x2E, 0x2F,\n+    0x14, 0x15, 0x16, 0x17, 0x34, 0x35, 0x36, 0x37,\n+    0x1C, 0x1D, 0x1E, 0x1F, 0x3C, 0x3D, 0x3E, 0x3F,\n+\/\/ 384\n+    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n+    0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,\n+    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,\n+    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,\n+    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n+    0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,\n+    0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,\n+    0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,\n+\/\/ 512\n+    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,\n+    0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,\n+    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,\n+    0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,\n+    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n+    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n+    0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,\n+    0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F\n+  };\n+\n+static address kyberAvx512InverseNttPermsAddr() {\n+  return (address) kyberAvx512InverseNttPerms;\n+}\n+\n+ATTRIBUTE_ALIGNED(64) static const uint16_t kyberAvx512_nttMultPerms[] = {\n+    0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0E,\n+    0x10, 0x12, 0x14, 0x16, 0x18, 0x1A, 0x1C, 0x1E,\n+    0x20, 0x22, 0x24, 0x26, 0x28, 0x2A, 0x2C, 0x2E,\n+    0x30, 0x32, 0x34, 0x36, 0x38, 0x3A, 0x3C, 0x3E,\n+\n+    0x01, 0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F,\n+    0x11, 0x13, 0x15, 0x17, 0x19, 0x1B, 0x1D, 0x1F,\n+    0x21, 0x23, 0x25, 0x27, 0x29, 0x2B, 0x2D, 0x2F,\n+    0x31, 0x33, 0x35, 0x37, 0x39, 0x3B, 0x3D, 0x3F,\n+\n+    0x00, 0x20, 0x01, 0x21, 0x02, 0x22, 0x03, 0x23,\n+    0x04, 0x24, 0x05, 0x25, 0x06, 0x26, 0x07, 0x27,\n+    0x08, 0x28, 0x09, 0x29, 0x0A, 0x2A, 0x0B, 0x2B,\n+    0x0C, 0x2C, 0x0D, 0x2D, 0x0E, 0x2E, 0x0F, 0x2F,\n+\n+    0x10, 0x30, 0x11, 0x31, 0x12, 0x32, 0x13, 0x33,\n+    0x14, 0x34, 0x15, 0x35, 0x16, 0x36, 0x17, 0x37,\n+    0x18, 0x38, 0x19, 0x39, 0x1A, 0x3A, 0x1B, 0x3B,\n+    0x1C, 0x3C, 0x1D, 0x3D, 0x1E, 0x3E, 0x1F, 0x3F\n+  };\n+\n+static address kyberAvx512_nttMultPermsAddr() {\n+  return (address) kyberAvx512_nttMultPerms;\n+}\n+\n+  ATTRIBUTE_ALIGNED(64) static const uint16_t kyberAvx512_12To16Perms[] = {\n+\/\/ 0\n+    0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15,\n+    0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D,\n+    0x30, 0x33, 0x36, 0x39, 0x3C, 0x3F, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x01, 0x04, 0x07, 0x0A, 0x0D, 0x10, 0x13, 0x16,\n+    0x19, 0x1C, 0x1F, 0x22, 0x25, 0x28, 0x2B, 0x2E,\n+    0x31, 0x34, 0x37, 0x3A, 0x3D, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+\/\/ 128\n+    0x02, 0x05, 0x08, 0x0B, 0x0E, 0x11, 0x14, 0x17,\n+    0x1A, 0x1D, 0x20, 0x23, 0x26, 0x29, 0x2C, 0x2F,\n+    0x32, 0x35, 0x38, 0x3B, 0x3E, 0x00, 0x00, 0x00,\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n+    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n+    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x22, 0x25,\n+    0x28, 0x2B, 0x2E, 0x31, 0x34, 0x37, 0x3A, 0x3D,\n+\/\/ 256\n+    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n+    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n+    0x10, 0x11, 0x12, 0x13, 0x14, 0x20, 0x23, 0x26,\n+    0x29, 0x2C, 0x2F, 0x32, 0x35, 0x38, 0x3B, 0x3E,\n+    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n+    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n+    0x10, 0x11, 0x12, 0x13, 0x14, 0x21, 0x24, 0x27,\n+    0x2A, 0x2D, 0x30, 0x33, 0x36, 0x39, 0x3C, 0x3F,\n+\/\/ 384\n+    0x00, 0x20, 0x01, 0x21, 0x02, 0x22, 0x03, 0x23,\n+    0x04, 0x24, 0x05, 0x25, 0x06, 0x26, 0x07, 0x27,\n+    0x08, 0x28, 0x09, 0x29, 0x0A, 0x2A, 0x0B, 0x2B,\n+    0x0C, 0x2C, 0x0D, 0x2D, 0x0E, 0x2E, 0x0F, 0x2F,\n+    0x10, 0x30, 0x11, 0x31, 0x12, 0x32, 0x13, 0x33,\n+    0x14, 0x34, 0x15, 0x35, 0x16, 0x36, 0x17, 0x37,\n+    0x18, 0x38, 0x19, 0x39, 0x1A, 0x3A, 0x1B, 0x3B,\n+    0x1C, 0x3C, 0x1D, 0x3D, 0x1E, 0x3E, 0x1F, 0x3F\n+  };\n+\n+static address kyberAvx512_12To16PermsAddr() {\n+  return (address) kyberAvx512_12To16Perms;\n+}\n+\n+static void load4regs(int destRegs[], Register address, int offset,\n+                      MacroAssembler *_masm) {\n+  for (int i = 0; i < 4; i++) {\n+    __ evmovdquw(xmm(destRegs[i]), Address(address, offset + i * 64),\n+                 Assembler::AVX_512bit);\n+  }\n+}\n+\n+\/\/ For z = montmul(a,b), z will be  between -q and q and congruent\n+\/\/ to a * b * R^-1 mod q, where R > 2 * q, R is a power of 2,\n+\/\/ -R\/2 * q <= a * b < R\/2 * q.\n+\/\/ (See e.g. Algorithm 3 in https:\/\/eprint.iacr.org\/2018\/039.pdf)\n+\/\/ For the Java code, we use R = 2^20 and for the intrinsic, R = 2^16.\n+\/\/ In our computations, b is always c * R mod q, so the montmul() really\n+\/\/ computes a * c mod q. In the Java code, we use 32-bit numbers for the\n+\/\/ computations, and we use R = 2^20 because that way the a * b numbers\n+\/\/ that occur during all computations stay in the required range.\n+\/\/ For the intrinsics, we use R = 2^16, because this way we can do twice\n+\/\/ as much work in parallel, the only drawback is that we should do some Barrett\n+\/\/ reductions in kyberInverseNtt so that the numbers stay in the required range.\n+static void montmul(int outputRegs[], int inputRegs1[], int inputRegs2[],\n+             int scratchRegs1[], int scratchRegs2[], MacroAssembler *_masm) {\n+   for (int i = 0; i < 4; i++) {\n+     __ evpmullw(xmm(scratchRegs1[i]), k0, xmm(inputRegs1[i]),\n+                 xmm(inputRegs2[i]), false, Assembler::AVX_512bit);\n+   }\n+   for (int i = 0; i < 4; i++) {\n+     __ evpmulhw(xmm(scratchRegs2[i]), k0, xmm(inputRegs1[i]),\n+                 xmm(inputRegs2[i]), false, Assembler::AVX_512bit);\n+   }\n+   for (int i = 0; i < 4; i++) {\n+     __ evpmullw(xmm(scratchRegs1[i]), k0, xmm(scratchRegs1[i]),\n+                 xmm31, false, Assembler::AVX_512bit);\n+   }\n+   for (int i = 0; i < 4; i++) {\n+     __ evpmulhw(xmm(scratchRegs1[i]), k0, xmm(scratchRegs1[i]),\n+                 xmm30, false, Assembler::AVX_512bit);\n+   }\n+   for (int i = 0; i < 4; i++) {\n+     __ evpsubw(xmm(outputRegs[i]), k0, xmm(scratchRegs2[i]),\n+                xmm(scratchRegs1[i]), false, Assembler::AVX_512bit);\n+   }\n+}\n+\n+static void sub_add(int subResult[], int addResult[], int input1[], int input2[],\n+                    MacroAssembler *_masm) {\n+  for (int i = 0; i < 4; i++) {\n+    __ evpsubw(xmm(subResult[i]), k0, xmm(input1[i]), xmm(input2[i]),\n+               false, Assembler::AVX_512bit);\n+    __ evpaddw(xmm(addResult[i]), k0, xmm(input1[i]), xmm(input2[i]),\n+               false, Assembler::AVX_512bit);\n+  }\n+}\n+\n+\/\/ result2 also acts as input1\n+\/\/ result1 also acts as perm1\n+static void permute(int result1[], int result2[], int input2[], int perm2,\n+                    MacroAssembler *_masm) {\n+\n+  for (int i = 1; i < 4; i++) {\n+    __ evmovdquw(xmm(result1[i]), xmm(result1[0]), Assembler::AVX_512bit);\n+  }\n+\n+  for (int i = 0; i < 4; i++) {\n+    __ evpermi2w(xmm(result1[i]), xmm(result2[i]), xmm(input2[i]),\n+                 Assembler::AVX_512bit);\n+    __ evpermt2w(xmm(result2[i]), xmm(perm2), xmm(input2[i]),\n+                 Assembler::AVX_512bit);\n+  }\n+}\n+\n+static void store4regs(Register address, int offset, int sourceRegs[],\n+                       MacroAssembler *_masm) {\n+  for (int i = 0; i < 4; i++) {\n+    __ evmovdquw(Address(address, offset + i * 64), xmm(sourceRegs[i]),\n+                 Assembler::AVX_512bit);\n+  }\n+}\n+\n+\/\/ In all 3 invocations of this function we use the same registers:\n+\/\/ xmm0-xmm7 for the input and the result,\n+\/\/ xmm8-xmm15 as scratch registers and\n+\/\/ xmm16-xmm17 for the constants,\n+\/\/ so we don't pass register arguments.\n+static void barrettReduce(MacroAssembler *_masm) {\n+  for (int i = 0; i < 8; i++) {\n+    __ evpmulhw(xmm(i + 8), k0, xmm(i), xmm16, false, Assembler::AVX_512bit);\n+  }\n+\n+  for (int i = 0; i < 8; i++) {\n+    __ evpsraw(xmm(i + 8), k0, xmm(i + 8), 10, false, Assembler::AVX_512bit);\n+  }\n+\n+  for (int i = 0; i < 8; i++) {\n+    __ evpmullw(xmm(i + 8), k0, xmm(i + 8), xmm17, false, Assembler::AVX_512bit);\n+  }\n+\n+  for (int i = 0; i < 8; i++) {\n+    __ evpsubw(xmm(i), k0, xmm(i), xmm(i + 8), false, Assembler::AVX_512bit);\n+  }\n+}\n+\n+static int xmm0_3[] = {0, 1, 2, 3};\n+static int xmm0145[] = {0, 1, 4, 5};\n+static int xmm0246[] = {0, 2, 4, 6};\n+static int xmm0829[] = {0, 8, 2, 9};\n+static int xmm1001[] = {1, 0, 0, 1};\n+static int xmm1357[] = {1, 3, 5, 7};\n+static int xmm2367[] = {2, 3, 6, 7};\n+static int xmm2_0_10_8[] = {2, 0, 10, 8};\n+static int xmm3223[] = {3, 2, 2, 3};\n+static int xmm4_7[] = {4, 5, 6, 7};\n+static int xmm5454[] = {5, 4, 5, 4};\n+static int xmm7676[] = {7, 6, 7, 6};\n+static int xmm8_11[] = {8, 9, 10, 11};\n+static int xmm12_15[] = {12, 13, 14, 15};\n+static int xmm16_19[] = {16, 17, 18, 19};\n+static int xmm20_23[] = {20, 21, 22, 23};\n+static int xmm23_23[] = {23, 23, 23, 23};\n+static int xmm24_27[] = {24, 25, 26, 27};\n+static int xmm26_29[] = {26, 27, 28, 29};\n+static int xmm28_31[] = {28, 29, 30, 31};\n+static int xmm29_29[] = {29, 29, 29, 29};\n+\n+\/\/ Kyber NTT function.\n+\/\/\n+\/\/ coeffs (short[256]) = c_rarg0\n+\/\/ ntt_zetas (short[256]) = c_rarg1\n+address generate_kyberNtt_avx512(StubGenerator *stubgen,\n+                                 MacroAssembler *_masm) {\n+  __ align(CodeEntryAlignment);\n+  StubGenStubId stub_id = kyberNtt_id;\n+  StubCodeMark mark(stubgen, stub_id);\n+  address start = __ pc();\n+  __ enter();\n+\n+  const Register coeffs = c_rarg0;\n+  const Register zetas = c_rarg1;\n+\n+  const Register perms = r11;\n+\n+  __ lea(perms, ExternalAddress(kyberAvx512NttPermsAddr()));\n+\n+  load4regs(xmm4_7, coeffs, 256, _masm);\n+  load4regs(xmm20_23, zetas, 0, _masm);\n+\n+  __ vpbroadcastq(xmm30,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+  __ vpbroadcastq(xmm31,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qInvModROffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q^-1 mod montR\n+\n+  load4regs(xmm0_3, coeffs, 0, _masm);\n+\n+  \/\/ Each level represents one iteration of the outer for loop of the Java version.\n+  \/\/ level 0\n+  montmul(xmm8_11, xmm4_7, xmm20_23, xmm8_11, xmm4_7, _masm);\n+  load4regs(xmm20_23, zetas, 256, _masm);\n+  sub_add(xmm4_7, xmm0_3, xmm0_3, xmm8_11, _masm);\n+\n+  \/\/level 1\n+  montmul(xmm12_15, xmm2367, xmm20_23, xmm12_15, xmm8_11, _masm);\n+  load4regs(xmm20_23, zetas, 512, _masm);\n+  sub_add(xmm2367, xmm0145, xmm0145, xmm12_15, _masm);\n+\n+  \/\/ level 2\n+  montmul(xmm8_11, xmm1357, xmm20_23, xmm12_15, xmm8_11, _masm);\n+  __ evmovdquw(xmm12, Address(perms, 0), Assembler::AVX_512bit);\n+  __ evmovdquw(xmm16, Address(perms, 64), Assembler::AVX_512bit);\n+  load4regs(xmm20_23, zetas, 768, _masm);\n+  sub_add(xmm1357, xmm0246, xmm0246, xmm8_11, _masm);\n+\n+  \/\/level 3\n+  permute(xmm12_15, xmm0246, xmm1357, 16, _masm);\n+  montmul(xmm8_11, xmm12_15, xmm20_23, xmm16_19, xmm8_11, _masm);\n+  __ evmovdquw(xmm16, Address(perms, 128), Assembler::AVX_512bit);\n+  __ evmovdquw(xmm24, Address(perms, 192), Assembler::AVX_512bit);\n+  load4regs(xmm20_23, zetas, 1024, _masm);\n+  sub_add(xmm1357, xmm0246, xmm0246, xmm8_11, _masm);\n+\n+  \/\/ level 4\n+  permute(xmm16_19, xmm0246, xmm1357, 24, _masm);\n+  montmul(xmm8_11, xmm0246, xmm20_23, xmm24_27, xmm8_11, _masm);\n+  __ evmovdquw(xmm1, Address(perms, 256), Assembler::AVX_512bit);\n+  __ evmovdquw(xmm24, Address(perms, 320), Assembler::AVX_512bit);\n+  load4regs(xmm20_23, zetas, 1280, _masm);\n+  sub_add(xmm12_15, xmm0246, xmm16_19, xmm8_11, _masm);\n+\n+  \/\/ level 5\n+  permute(xmm1357, xmm0246, xmm12_15, 24, _masm);\n+  montmul(xmm16_19, xmm0246, xmm20_23, xmm16_19, xmm8_11, _masm);\n+\n+  __ evmovdquw(xmm12, Address(perms, 384), Assembler::AVX_512bit);\n+  __ evmovdquw(xmm8, Address(perms, 448), Assembler::AVX_512bit);\n+\n+  load4regs(xmm20_23, zetas, 1536, _masm);\n+  sub_add(xmm24_27, xmm0246, xmm1357, xmm16_19, _masm);\n+\n+  \/\/ level 6\n+  permute(xmm12_15, xmm0246, xmm24_27, 8, _masm);\n+\n+  __ evmovdquw(xmm1, Address(perms, 512), Assembler::AVX_512bit);\n+  __ evmovdquw(xmm24, Address(perms, 576), Assembler::AVX_512bit);\n+\n+  montmul(xmm16_19, xmm0246, xmm20_23, xmm16_19, xmm8_11, _masm);\n+  sub_add(xmm20_23, xmm0246, xmm12_15, xmm16_19, _masm);\n+\n+  permute(xmm1357, xmm0246, xmm20_23, 24, _masm);\n+\n+  store4regs(coeffs, 0, xmm0_3, _masm);\n+  store4regs(coeffs, 256, xmm4_7, _masm);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ mov64(rax, 0); \/\/ return 0\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+\/\/ Kyber Inverse NTT function\n+\/\/\n+\/\/ coeffs (short[256]) = c_rarg0\n+\/\/ ntt_zetas (short[256]) = c_rarg1\n+address generate_kyberInverseNtt_avx512(StubGenerator *stubgen,\n+                                        MacroAssembler *_masm) {\n+\n+  __ align(CodeEntryAlignment);\n+  StubGenStubId stub_id = kyberInverseNtt_id;\n+  StubCodeMark mark(stubgen, stub_id);\n+  address start = __ pc();\n+  __ enter();\n+\n+  const Register coeffs = c_rarg0;\n+  const Register zetas = c_rarg1;\n+\n+  const Register perms = r11;\n+\n+  __ lea(perms, ExternalAddress(kyberAvx512InverseNttPermsAddr()));\n+  __ evmovdquw(xmm12, Address(perms, 0), Assembler::AVX_512bit);\n+  __ evmovdquw(xmm16, Address(perms, 64), Assembler::AVX_512bit);\n+\n+  __ vpbroadcastq(xmm31,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qInvModROffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q^-1 mod montR\n+  __ vpbroadcastq(xmm30,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+  __ vpbroadcastq(xmm29,\n+                  ExternalAddress(kyberAvx512ConstsAddr(dimHalfInverseOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ (dim\/2)^-1 mod q\n+\n+  load4regs(xmm0_3, coeffs, 0, _masm);\n+  load4regs(xmm4_7, coeffs, 256, _masm);\n+\n+  \/\/ Each level represents one iteration of the outer for loop of the Java version.\n+  \/\/ level 0\n+  load4regs(xmm8_11, zetas, 0, _masm);\n+  permute(xmm12_15, xmm0246, xmm1357, 16, _masm);\n+\n+  __ evmovdquw(xmm1, Address(perms, 128), Assembler::AVX_512bit);\n+  __ evmovdquw(xmm20, Address(perms, 192), Assembler::AVX_512bit);\n+\n+  sub_add(xmm16_19, xmm0246, xmm0246, xmm12_15, _masm);\n+  montmul(xmm12_15, xmm16_19, xmm8_11, xmm12_15, xmm8_11, _masm);\n+\n+  \/\/ level 1\n+  load4regs(xmm8_11, zetas, 256, _masm);\n+  permute(xmm1357, xmm0246, xmm12_15, 20, _masm);\n+  sub_add(xmm16_19, xmm0246, xmm1357, xmm0246, _masm);\n+\n+  __ evmovdquw(xmm1, Address(perms, 256), Assembler::AVX_512bit);\n+  __ evmovdquw(xmm20, Address(perms, 320), Assembler::AVX_512bit);\n+\n+  montmul(xmm12_15, xmm16_19, xmm8_11, xmm12_15, xmm8_11, _masm);\n+\n+  \/\/ level2\n+  load4regs(xmm8_11, zetas, 512, _masm);\n+  permute(xmm1357, xmm0246, xmm12_15, 20, _masm);\n+  sub_add(xmm16_19, xmm0246, xmm1357,  xmm0246,_masm);\n+\n+  __ evmovdquw(xmm1, Address(perms, 384), Assembler::AVX_512bit);\n+  __ evmovdquw(xmm20, Address(perms, 448), Assembler::AVX_512bit);\n+\n+  montmul(xmm12_15, xmm16_19, xmm8_11, xmm12_15, xmm8_11, _masm);\n+\n+  __ vpbroadcastq(xmm16,\n+                  ExternalAddress(kyberAvx512ConstsAddr(barretMultiplierOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ Barrett multiplier\n+  __ vpbroadcastq(xmm17,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+\n+  permute(xmm1357, xmm0246, xmm12_15, 20, _masm);\n+  barrettReduce(_masm);\n+\n+\/\/ level 3\n+  load4regs(xmm8_11, zetas, 768, _masm);\n+  sub_add(xmm16_19, xmm0246, xmm1357, xmm0246, _masm);\n+\n+  __ evmovdquw(xmm1, Address(perms, 512), Assembler::AVX_512bit);\n+  __ evmovdquw(xmm20, Address(perms, 576), Assembler::AVX_512bit);\n+\n+  montmul(xmm12_15, xmm16_19, xmm8_11, xmm12_15, xmm8_11, _masm);\n+  permute(xmm1357, xmm0246, xmm12_15, 20, _masm);\n+\n+  \/\/ level 4\n+  load4regs(xmm8_11, zetas, 1024, _masm);\n+\n+  __ vpbroadcastq(xmm16,\n+                  ExternalAddress(kyberAvx512ConstsAddr(barretMultiplierOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ Barrett multiplier\n+  __ vpbroadcastq(xmm17,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+\n+  sub_add(xmm12_15, xmm0246, xmm0246, xmm1357, _masm);\n+  montmul(xmm1357, xmm12_15, xmm8_11, xmm1357, xmm8_11, _masm);\n+  barrettReduce(_masm);\n+\n+  \/\/ level 5\n+  load4regs(xmm8_11, zetas, 1280, _masm);\n+  sub_add(xmm12_15, xmm0145, xmm0145, xmm2367, _masm);\n+  montmul(xmm2367, xmm12_15, xmm8_11, xmm2367, xmm8_11, _masm);\n+\n+  \/\/ level 6\n+  load4regs(xmm8_11, zetas, 1536, _masm);\n+  sub_add(xmm12_15, xmm0_3, xmm0_3, xmm4_7, _masm);\n+  montmul(xmm4_7, xmm12_15, xmm8_11, xmm4_7, xmm8_11, _masm);\n+\n+  montmul(xmm8_11, xmm29_29, xmm0_3, xmm8_11, xmm0_3, _masm);\n+  montmul(xmm12_15, xmm29_29, xmm4_7, xmm12_15, xmm4_7, _masm);\n+\n+  store4regs(coeffs, 0, xmm8_11, _masm);\n+  store4regs(coeffs, 256, xmm12_15, _masm);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ mov64(rax, 0); \/\/ return 0\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+\/\/ Kyber multiply polynomials in the NTT domain.\n+\/\/\n+\/\/ result (short[256]) = c_rarg0\n+\/\/ ntta (short[256]) = c_rarg1\n+\/\/ nttb (short[256]) = c_rarg2\n+\/\/ zetas (short[128]) = c_rarg3\n+address generate_kyberNttMult_avx512(StubGenerator *stubgen,\n+                                     MacroAssembler *_masm) {\n+\n+  __ align(CodeEntryAlignment);\n+  StubGenStubId stub_id = kyberNttMult_id;\n+  StubCodeMark mark(stubgen, stub_id);\n+  address start = __ pc();\n+  __ enter();\n+\n+  const Register result = c_rarg0;\n+  const Register ntta = c_rarg1;\n+  const Register nttb = c_rarg2;\n+  const Register zetas = c_rarg3;\n+\n+  const Register perms = r11;\n+  const Register loopCnt = r12;\n+\n+  __ push(r12);\n+  __ movl(loopCnt, 2);\n+\n+  Label Loop;\n+\n+  __ lea(perms, ExternalAddress(kyberAvx512_nttMultPermsAddr()));\n+\n+\n+  load4regs(xmm26_29, perms, 0, _masm);\n+  __ vpbroadcastq(xmm31,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qInvModROffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q^-1 mod montR\n+  __ vpbroadcastq(xmm30,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+  __ vpbroadcastq(xmm23,\n+                  ExternalAddress(kyberAvx512ConstsAddr(montRSquareModqOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ montR^2 mod q\n+\n+  __ BIND(Loop);\n+\n+    __ evmovdquw(xmm1, Address(ntta, 0), Assembler::AVX_512bit);\n+    __ evmovdquw(xmm8, Address(ntta, 64), Assembler::AVX_512bit);\n+    __ evmovdquw(xmm3, Address(ntta, 128), Assembler::AVX_512bit);\n+    __ evmovdquw(xmm9, Address(ntta, 192), Assembler::AVX_512bit);\n+\n+    __ evmovdquw(xmm5, Address(nttb, 0), Assembler::AVX_512bit);\n+    __ evmovdquw(xmm10, Address(nttb, 64), Assembler::AVX_512bit);\n+    __ evmovdquw(xmm7, Address(nttb, 128), Assembler::AVX_512bit);\n+    __ evmovdquw(xmm11, Address(nttb, 192), Assembler::AVX_512bit);\n+\n+    __ evmovdquw(xmm0, xmm26, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm2, xmm26, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm4, xmm26, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm6, xmm26, Assembler::AVX_512bit);\n+\n+    __ evpermi2w(xmm0, xmm1, xmm8, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm1, xmm27, xmm8, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm2, xmm3, xmm9, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm3, xmm27, xmm9, Assembler::AVX_512bit);\n+\n+    __ evpermi2w(xmm4, xmm5, xmm10, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm5, xmm27, xmm10, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm6, xmm7, xmm11, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm7, xmm27, xmm11, Assembler::AVX_512bit);\n+\n+    __ evmovdquw(xmm24, Address(zetas, 0), Assembler::AVX_512bit);\n+    __ evmovdquw(xmm25, Address(zetas, 64), Assembler::AVX_512bit);\n+\n+    montmul(xmm16_19, xmm1001, xmm5454, xmm16_19, xmm12_15, _masm);\n+\n+    montmul(xmm0145, xmm3223, xmm7676, xmm0145, xmm12_15, _masm);\n+\n+    __ evpmullw(xmm2, k0, xmm16, xmm24, false, Assembler::AVX_512bit);\n+    __ evpmullw(xmm3, k0, xmm0, xmm25, false, Assembler::AVX_512bit);\n+    __ evpmulhw(xmm12, k0, xmm16, xmm24, false, Assembler::AVX_512bit);\n+    __ evpmulhw(xmm13, k0, xmm0, xmm25, false, Assembler::AVX_512bit);\n+\n+    __ evpmullw(xmm2, k0, xmm2, xmm31, false, Assembler::AVX_512bit);\n+    __ evpmullw(xmm3, k0, xmm3, xmm31, false, Assembler::AVX_512bit);\n+    __ evpmulhw(xmm2, k0, xmm30, xmm2, false, Assembler::AVX_512bit);\n+    __ evpmulhw(xmm3, k0, xmm30, xmm3, false, Assembler::AVX_512bit);\n+\n+    __ evpsubw(xmm2, k0, xmm12, xmm2, false, Assembler::AVX_512bit);\n+    __ evpsubw(xmm3, k0, xmm13, xmm3, false, Assembler::AVX_512bit);\n+\n+    __ evpaddw(xmm0, k0, xmm2, xmm17, false, Assembler::AVX_512bit);\n+    __ evpaddw(xmm8, k0, xmm3, xmm1, false, Assembler::AVX_512bit);\n+    __ evpaddw(xmm2, k0, xmm18, xmm19, false, Assembler::AVX_512bit);\n+    __ evpaddw(xmm9, k0, xmm4, xmm5, false, Assembler::AVX_512bit);\n+\n+    montmul(xmm1357, xmm0829, xmm23_23, xmm1357, xmm0829, _masm);\n+\n+    __ evmovdquw(xmm0, xmm28, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm2, xmm28, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm0, xmm1, xmm5, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm1, xmm29, xmm5, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm2, xmm3, xmm7, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm3, xmm29, xmm7, Assembler::AVX_512bit);\n+\n+    store4regs(result, 0, xmm0_3, _masm);\n+\n+    __ addptr(ntta, 256);\n+    __ addptr(nttb, 256);\n+    __ addptr(result, 256);\n+    __ addptr(zetas, 128);\n+    __ subl(loopCnt, 1);\n+    __ jcc(Assembler::greater, Loop);\n+\n+  __ pop(r12);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ mov64(rax, 0); \/\/ return 0\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+\/\/ Kyber add 2 polynomials.\n+\/\/\n+\/\/ result (short[256]) = c_rarg0\n+\/\/ a (short[256]) = c_rarg1\n+\/\/ b (short[256]) = c_rarg2\n+address generate_kyberAddPoly_2_avx512(StubGenerator *stubgen,\n+                                       MacroAssembler *_masm) {\n+\n+  __ align(CodeEntryAlignment);\n+  StubGenStubId stub_id = kyberAddPoly_2_id;\n+  StubCodeMark mark(stubgen, stub_id);\n+  address start = __ pc();\n+  __ enter();\n+\n+  const Register result = c_rarg0;\n+  const Register a = c_rarg1;\n+  const Register b = c_rarg2;\n+\n+  __ vpbroadcastq(xmm31,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+\n+  for (int i = 0; i < 8; i++) {\n+    __ evmovdquw(xmm(i), Address(a, 64 * i), Assembler::AVX_512bit);\n+    __ evmovdquw(xmm(i + 8), Address(b, 64 * i), Assembler::AVX_512bit);\n+  }\n+\n+  for (int i = 0; i < 8; i++) {\n+    __ evpaddw(xmm(i), k0, xmm(i), xmm(i + 8), false, Assembler::AVX_512bit);\n+  }\n+\n+  for (int i = 0; i < 8; i++) {\n+    __ evpaddw(xmm(i), k0, xmm(i), xmm31, false, Assembler::AVX_512bit);\n+  }\n+\n+  store4regs(result, 0, xmm0_3, _masm);\n+  store4regs(result, 256, xmm4_7, _masm);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ mov64(rax, 0); \/\/ return 0\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+\/\/ Kyber add 3 polynomials.\n+\/\/\n+\/\/ result (short[256]) = c_rarg0\n+\/\/ a (short[256]) = c_rarg1\n+\/\/ b (short[256]) = c_rarg2\n+\/\/ c (short[256]) = c_rarg3\n+address generate_kyberAddPoly_3_avx512(StubGenerator *stubgen,\n+                                       MacroAssembler *_masm) {\n+\n+  __ align(CodeEntryAlignment);\n+  StubGenStubId stub_id = kyberAddPoly_3_id;\n+  StubCodeMark mark(stubgen, stub_id);\n+  address start = __ pc();\n+  __ enter();\n+\n+  const Register result = c_rarg0;\n+  const Register a = c_rarg1;\n+  const Register b = c_rarg2;\n+  const Register c = c_rarg3;\n+\n+  __ vpbroadcastq(xmm31,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+\n+  for (int i = 0; i < 8; i++) {\n+    __ evmovdquw(xmm(i), Address(a, 64 * i), Assembler::AVX_512bit);\n+    __ evmovdquw(xmm(i + 8), Address(b, 64 * i), Assembler::AVX_512bit);\n+    __ evmovdquw(xmm(i + 16), Address(c, 64 * i), Assembler::AVX_512bit);\n+  }\n+\n+  __ evpaddw(xmm31, k0, xmm31, xmm31, false, Assembler::AVX_512bit);\n+\n+  for (int i = 0; i < 8; i++) {\n+    __ evpaddw(xmm(i), k0, xmm(i), xmm(i + 8), false, Assembler::AVX_512bit);\n+  }\n+\n+  for (int i = 0; i < 8; i++) {\n+    __ evpaddw(xmm(i), k0, xmm(i), xmm(i + 16), false, Assembler::AVX_512bit);\n+  }\n+\n+  for (int i = 0; i < 8; i++) {\n+    __ evpaddw(xmm(i), k0, xmm(i), xmm31, false, Assembler::AVX_512bit);\n+  }\n+\n+  store4regs(result, 0, xmm0_3, _masm);\n+  store4regs(result, 256, xmm4_7, _masm);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ mov64(rax, 0); \/\/ return 0\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+\/\/ Kyber parse XOF output to polynomial coefficient candidates.\n+\/\/\n+\/\/ condensed (byte[168]) = c_rarg0\n+\/\/ condensedOffs (int) = c_rarg1\n+\/\/ parsed (short[112]) = c_rarg2\n+\/\/ parsedLength (int) = c_rarg3\n+address generate_kyber12To16_avx512(StubGenerator *stubgen,\n+                                    MacroAssembler *_masm) {\n+\n+  __ align(CodeEntryAlignment);\n+  StubGenStubId stub_id = kyber12To16_id;\n+  StubCodeMark mark(stubgen, stub_id);\n+  address start = __ pc();\n+  __ enter();\n+\n+  const Register condensed = c_rarg0;\n+  const Register condensedOffs = c_rarg1;\n+  const Register parsed = c_rarg2;\n+  const Register parsedLength = c_rarg3;\n+\n+  const Register perms = r11;\n+\n+  Label Loop;\n+\n+  __ addptr(condensed, condensedOffs);\n+\n+  __ lea(perms, ExternalAddress(kyberAvx512_12To16PermsAddr()));\n+\n+  load4regs(xmm24_27, perms, 0, _masm);\n+  load4regs(xmm28_31, perms, 256, _masm);\n+  __ vpbroadcastq(xmm23,\n+                  ExternalAddress(kyberAvx512ConstsAddr(f00Offset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ 0xF00\n+\n+  __ BIND(Loop);\n+    __ evmovdqub(xmm0, Address(condensed, 0),Assembler::AVX_256bit);\n+    __ evmovdqub(xmm1, Address(condensed, 32),Assembler::AVX_256bit);\n+    __ evmovdqub(xmm2, Address(condensed, 64),Assembler::AVX_256bit);\n+    __ evmovdqub(xmm8, Address(condensed, 96),Assembler::AVX_256bit);\n+    __ evmovdqub(xmm9, Address(condensed, 128),Assembler::AVX_256bit);\n+    __ evmovdqub(xmm10, Address(condensed, 160),Assembler::AVX_256bit);\n+    __ vpmovzxbw(xmm0, xmm0, Assembler::AVX_512bit);\n+    __ vpmovzxbw(xmm1, xmm1, Assembler::AVX_512bit);\n+    __ vpmovzxbw(xmm2, xmm2, Assembler::AVX_512bit);\n+    __ vpmovzxbw(xmm8, xmm8, Assembler::AVX_512bit);\n+    __ vpmovzxbw(xmm9, xmm9, Assembler::AVX_512bit);\n+    __ vpmovzxbw(xmm10, xmm10, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm3, xmm24, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm4, xmm25, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm5, xmm26, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm11, xmm24, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm12, xmm25, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm13, xmm26, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm3, xmm0, xmm1, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm4, xmm0, xmm1, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm5, xmm0, xmm1, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm11, xmm8, xmm9, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm12, xmm8, xmm9, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm13, xmm8, xmm9, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm3, xmm27, xmm2, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm4, xmm28, xmm2, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm5, xmm29, xmm2, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm11, xmm27, xmm10, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm12, xmm28, xmm10, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm13, xmm29, xmm10, Assembler::AVX_512bit);\n+\n+    __ evpsraw(xmm2, k0, xmm4, 4, false, Assembler::AVX_512bit);\n+    __ evpsllw(xmm0, k0, xmm4, 8, false, Assembler::AVX_512bit);\n+    __ evpsllw(xmm1, k0, xmm5, 4, false, Assembler::AVX_512bit);\n+    __ evpsllw(xmm8, k0, xmm12, 8, false, Assembler::AVX_512bit);\n+    __ evpsraw(xmm10, k0, xmm12, 4, false, Assembler::AVX_512bit);\n+    __ evpsllw(xmm9, k0, xmm13, 4, false, Assembler::AVX_512bit);\n+    __ evpandq(xmm0, k0, xmm0, xmm23, false, Assembler::AVX_512bit);\n+    __ evpandq(xmm8, k0, xmm8, xmm23, false, Assembler::AVX_512bit);\n+    __ evpaddw(xmm1, k0, xmm1, xmm2, false, Assembler::AVX_512bit);\n+    __ evpaddw(xmm0, k0, xmm0, xmm3, false, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm2, xmm30, Assembler::AVX_512bit);\n+    __ evpaddw(xmm9, k0, xmm9, xmm10, false, Assembler::AVX_512bit);\n+    __ evpaddw(xmm8, k0, xmm8, xmm11, false, Assembler::AVX_512bit);\n+    __ evmovdquw(xmm10, xmm30, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm2, xmm0, xmm1, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm0, xmm31, xmm1, Assembler::AVX_512bit);\n+    __ evpermi2w(xmm10, xmm8, xmm9, Assembler::AVX_512bit);\n+    __ evpermt2w(xmm8, xmm31, xmm9, Assembler::AVX_512bit);\n+\n+    store4regs(parsed, 0, xmm2_0_10_8, _masm);\n+\n+    __ addptr(condensed, 192);\n+    __ addptr(parsed, 256);\n+    __ subl(parsedLength, 128);\n+    __ jcc(Assembler::greater, Loop);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ mov64(rax, 0); \/\/ return 0\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+\n+\/\/ Kyber barrett reduce function.\n+\/\/\n+\/\/ coeffs (short[256]) = c_rarg0\n+address generate_kyberBarrettReduce_avx512(StubGenerator *stubgen,\n+                                           MacroAssembler *_masm) {\n+\n+  __ align(CodeEntryAlignment);\n+  StubGenStubId stub_id = kyberBarrettReduce_id;\n+  StubCodeMark mark(stubgen, stub_id);\n+  address start = __ pc();\n+  __ enter();\n+\n+  const Register coeffs = c_rarg0;\n+\n+  __ vpbroadcastq(xmm16,\n+                  ExternalAddress(kyberAvx512ConstsAddr(barretMultiplierOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ Barrett multiplier\n+  __ vpbroadcastq(xmm17,\n+                  ExternalAddress(kyberAvx512ConstsAddr(qOffset)),\n+                  Assembler::AVX_512bit, scratch); \/\/ q\n+\n+  load4regs(xmm0_3, coeffs, 0, _masm);\n+  load4regs(xmm4_7, coeffs, 256, _masm);\n+\n+  barrettReduce(_masm);\n+\n+  store4regs(coeffs, 0, xmm0_3, _masm);\n+  store4regs(coeffs, 256, xmm4_7, _masm);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ mov64(rax, 0); \/\/ return 0\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+void StubGenerator::generate_kyber_stubs() {\n+  \/\/ Generate Kyber intrinsics code\n+  if (UseKyberIntrinsics) {\n+    if (VM_Version::supports_evex()) {\n+      StubRoutines::_kyberNtt = generate_kyberNtt_avx512(this, _masm);\n+      StubRoutines::_kyberInverseNtt = generate_kyberInverseNtt_avx512(this, _masm);\n+      StubRoutines::_kyberNttMult = generate_kyberNttMult_avx512(this, _masm);\n+      StubRoutines::_kyberAddPoly_2 = generate_kyberAddPoly_2_avx512(this, _masm);\n+      StubRoutines::_kyberAddPoly_3 = generate_kyberAddPoly_3_avx512(this, _masm);\n+      StubRoutines::_kyber12To16 = generate_kyber12To16_avx512(this, _masm);\n+      StubRoutines::_kyberBarrettReduce = generate_kyberBarrettReduce_avx512(this, _masm);\n+    }\n+  }\n+}\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_kyber.cpp","additions":952,"deletions":0,"binary":false,"changes":952,"status":"added"},{"patch":"@@ -1250,0 +1250,14 @@\n+  \/\/ Kyber Intrinsics\n+  \/\/ Currently we only have them for AVX512\n+#ifdef _LP64\n+  if (supports_evex() && supports_avx512bw()) {\n+      if (FLAG_IS_DEFAULT(UseKyberIntrinsics)) {\n+          UseKyberIntrinsics = true;\n+      }\n+  } else\n+#endif\n+  if (UseKyberIntrinsics) {\n+     warning(\"Intrinsics for ML-KEM are not available on this CPU.\");\n+     FLAG_SET_DEFAULT(UseKyberIntrinsics, false);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -763,2 +763,3 @@\n-    int limit = 3;\n-    do {\n+    int trials_remaining = 4;\n+    useconds_t next_delay = 1000;\n+    while (true) {\n@@ -766,1 +767,13 @@\n-    } while (ret == EAGAIN && limit-- > 0);\n+\n+      if (ret != EAGAIN) {\n+        break;\n+      }\n+\n+      if (--trials_remaining <= 0) {\n+        break;\n+      }\n+\n+      log_debug(os, thread)(\"Failed to start native thread (%s), retrying after %dus.\", os::errno_name(ret), next_delay);\n+      ::usleep(next_delay);\n+      next_delay *= 2;\n+    }\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -646,2 +646,3 @@\n-    int limit = 3;\n-    do {\n+    int trials_remaining = 4;\n+    useconds_t next_delay = 1000;\n+    while (true) {\n@@ -649,1 +650,13 @@\n-    } while (ret == EAGAIN && limit-- > 0);\n+\n+      if (ret != EAGAIN) {\n+        break;\n+      }\n+\n+      if (--trials_remaining <= 0) {\n+        break;\n+      }\n+\n+      log_debug(os, thread)(\"Failed to start native thread (%s), retrying after %dus.\", os::errno_name(ret), next_delay);\n+      ::usleep(next_delay);\n+      next_delay *= 2;\n+    }\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1059,2 +1059,3 @@\n-    int limit = 3;\n-    do {\n+    int trials_remaining = 4;\n+    useconds_t next_delay = 1000;\n+    while (true) {\n@@ -1062,1 +1063,13 @@\n-    } while (ret == EAGAIN && limit-- > 0);\n+\n+      if (ret != EAGAIN) {\n+        break;\n+      }\n+\n+      if (--trials_remaining <= 0) {\n+        break;\n+      }\n+\n+      log_debug(os, thread)(\"Failed to start native thread (%s), retrying after %dus.\", os::errno_name(ret), next_delay);\n+      ::usleep(next_delay);\n+      next_delay *= 2;\n+    }\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -67,0 +67,5 @@\n+  void close_impl() {\n+    FlushFileBuffers(_hPipe);\n+    CloseHandle(_hPipe);\n+    _hPipe = INVALID_HANDLE_VALUE;\n+  }\n@@ -95,4 +100,8 @@\n-      ThreadBlockInVM tbivm(JavaThread::current());\n-      FlushFileBuffers(_hPipe);\n-      CloseHandle(_hPipe);\n-      _hPipe = INVALID_HANDLE_VALUE;\n+      JavaThread* current = JavaThread::current();\n+      \/\/ if we fail to read\/parse request from Win32AttachListener::dequeue, current thread is already blocked\n+      if (current->thread_state() == _thread_blocked) {\n+        close_impl();\n+      } else {\n+        ThreadBlockInVM tbivm(current);\n+        close_impl();\n+      }\n","filename":"src\/hotspot\/os\/windows\/attachListener_windows.cpp","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -760,2 +760,3 @@\n-  int limit = 3;\n-  do {\n+  int trials_remaining = 4;\n+  DWORD next_delay_ms = 1;\n+  while (true) {\n@@ -769,1 +770,17 @@\n-  } while (thread_handle == nullptr && errno == EAGAIN && limit-- > 0);\n+\n+    if (thread_handle != nullptr) {\n+      break;\n+    }\n+\n+    if (errno != EAGAIN) {\n+      break;\n+    }\n+\n+    if (--trials_remaining <= 0) {\n+      break;\n+    }\n+\n+    log_debug(os, thread)(\"Failed to start native thread (%s), retrying after %dms.\", os::errno_name(errno), next_delay_ms);\n+    Sleep(next_delay_ms);\n+    next_delay_ms *= 2;\n+  }\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1609,4 +1609,2 @@\n-  char* rfilename = NEW_RESOURCE_ARRAY(char, strlen(filename) + 1);\n-  char* robjectname = NEW_RESOURCE_ARRAY(char, strlen(objectname) + 1);\n-  strcpy(rfilename, filename);\n-  strcpy(robjectname, objectname);\n+  char* rfilename = ResourceArea::strdup(THREAD, filename);\n+  char* robjectname = ResourceArea::strdup(THREAD, objectname);\n","filename":"src\/hotspot\/os\/windows\/perfMemory_windows.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1965,1 +1965,1 @@\n-      \/\/ This prevent s insert_anti_dependencies from complaining. It will\n+      \/\/ This prevents raise_above_anti_dependences from complaining. It will\n","filename":"src\/hotspot\/share\/adlc\/output_h.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"compiler\/compilationLog.hpp\"\n@@ -655,0 +656,7 @@\n+  \/\/ record the bailout for hserr envlog\n+  if (CompilationLog::log() != nullptr) {\n+    CompilerThread* thread = CompilerThread::current();\n+    CompileTask* task = thread->task();\n+    CompilationLog::log()->log_failure(thread, task, msg, nullptr);\n+  }\n+\n","filename":"src\/hotspot\/share\/c1\/c1_Compilation.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-#include \"cds\/aotClassLinker.hpp\"\n@@ -28,0 +27,2 @@\n+#include \"cds\/aotClassLinker.hpp\"\n+#include \"cds\/aotLogging.hpp\"\n@@ -100,1 +101,1 @@\n-        log_trace(cds, heap, mirror)(\n+        log_trace(aot, heap, mirror)(\n@@ -158,1 +159,1 @@\n-      if (log_is_enabled(Debug, cds)) {\n+      if (aot_log_is_enabled(Debug, aot)) {\n@@ -160,1 +161,1 @@\n-        log_debug(cds)(\"Skipping %s: %s class\", k->name()->as_C_string(),\n+        aot_log_debug(aot)(\"Skipping %s: %s class\", k->name()->as_C_string(),\n","filename":"src\/hotspot\/share\/cds\/aotArtifactFinder.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-  \/\/    java -XX:AOTMode=create -Xlog:cds -XX:AOTCache=jc.aot -XX:AOTConfiguration=jc.aotconfig\n+  \/\/    java -XX:AOTMode=create -Xlog:aot -XX:AOTCache=jc.aot -XX:AOTConfiguration=jc.aotconfig\n@@ -353,1 +353,1 @@\n-    if (log_is_enabled(Info, cds, init)) {\n+    if (log_is_enabled(Info, aot, init)) {\n@@ -355,1 +355,1 @@\n-      log_info(cds, init)(\"Calling %s::runtimeSetup()\", ik->external_name());\n+      log_info(aot, init)(\"Calling %s::runtimeSetup()\", ik->external_name());\n@@ -378,1 +378,1 @@\n-    log_info(cds)(\"Debug build only: force initialization of AOTInitTestClass %s\", AOTInitTestClass);\n+    log_info(aot)(\"Debug build only: force initialization of AOTInitTestClass %s\", AOTInitTestClass);\n","filename":"src\/hotspot\/share\/cds\/aotClassInitializer.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-  if (log_is_enabled(Info, cds, aot, link)) {\n+  if (log_is_enabled(Info, aot, link)) {\n@@ -118,1 +118,1 @@\n-    log_info(cds, aot, link)(\"%s %s %p\", class_category_name(ik), ik->external_name(), ik);\n+    log_info(aot, link)(\"%s %s %p\", class_category_name(ik), ik->external_name(), ik);\n@@ -148,1 +148,1 @@\n-        log_warning(cds, aot, link)(\"%s cannot be aot-linked because it nest host is not aot-linked\", ik->external_name());\n+        log_warning(aot, link)(\"%s cannot be aot-linked because it nest host is not aot-linked\", ik->external_name());\n@@ -231,1 +231,1 @@\n-    log_info(cds, aot, link)(\"wrote %d class(es) for category %s\", list.length(), category);\n+    log_info(aot, link)(\"wrote %d class(es) for category %s\", list.length(), category);\n","filename":"src\/hotspot\/share\/cds\/aotClassLinker.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -253,1 +254,1 @@\n-    log_error(cds)(\"Unable to open file %s.\", path);\n+    aot_log_error(aot)(\"Unable to open file %s.\", path);\n@@ -362,1 +363,1 @@\n-        log_warning(cds)(\"Warning: Duplicate name in Manifest: %s.\\n\"\n+        log_warning(aot)(\"Warning: Duplicate name in Manifest: %s.\\n\"\n@@ -395,1 +396,1 @@\n-      log_warning(cds)(\"Required classpath entry does not exist: %s\", runtime_path);\n+      aot_log_warning(aot)(\"Required classpath entry does not exist: %s\", runtime_path);\n@@ -400,1 +401,1 @@\n-      log_warning(cds)(\"'%s' must not exist\", runtime_path);\n+      aot_log_warning(aot)(\"'%s' must not exist\", runtime_path);\n@@ -404,1 +405,1 @@\n-      log_warning(cds)(\"'%s' must be a file\", runtime_path);\n+      aot_log_warning(aot)(\"'%s' must be a file\", runtime_path);\n@@ -408,1 +409,1 @@\n-      log_warning(cds)(\"directory is not empty: '%s'\", runtime_path);\n+      aot_log_warning(aot)(\"directory is not empty: '%s'\", runtime_path);\n@@ -413,1 +414,1 @@\n-      log_warning(cds)(\"'%s' must not exist\", runtime_path);\n+      aot_log_warning(aot)(\"'%s' must not exist\", runtime_path);\n@@ -415,1 +416,1 @@\n-        log_error(cds)(\"CDS archive has aot-linked classes. It cannot be used because the \"\n+        aot_log_error(aot)(\"CDS archive has aot-linked classes. It cannot be used because the \"\n@@ -419,1 +420,1 @@\n-        log_warning(cds)(\"Archived non-system classes are disabled because the \"\n+        aot_log_warning(aot)(\"Archived non-system classes are disabled because the \"\n@@ -428,1 +429,1 @@\n-      log_warning(cds)(\"'%s' must be a directory\", runtime_path);\n+      aot_log_warning(aot)(\"'%s' must be a directory\", runtime_path);\n@@ -434,1 +435,1 @@\n-      log_warning(cds)(\"This file is not the one used while building the shared archive file: '%s'%s%s\",\n+      aot_log_warning(aot)(\"This file is not the one used while building the shared archive file: '%s'%s%s\",\n@@ -692,1 +693,1 @@\n-        log_error(cds)(\"Error: non-empty directory '%s'\", cs->path());\n+        aot_log_error(aot)(\"Error: non-empty directory '%s'\", cs->path());\n@@ -717,1 +718,1 @@\n-        log_warning(cds)(\"class %s cannot be archived because it was not defined from %s as claimed\",\n+        aot_log_warning(aot)(\"class %s cannot be archived because it was not defined from %s as claimed\",\n@@ -779,1 +780,1 @@\n-        log_warning(cds)(\"%s classpath has fewer elements than expected\", which);\n+        aot_log_warning(aot)(\"%s classpath has fewer elements than expected\", which);\n@@ -787,1 +788,1 @@\n-        log_warning(cds)(\"The name of %s classpath [%d] does not match: expected '%s', got '%s'\",\n+        aot_log_warning(aot)(\"The name of %s classpath [%d] does not match: expected '%s', got '%s'\",\n@@ -803,1 +804,1 @@\n-      log_warning(cds)(\"boot classpath is longer than expected\");\n+      aot_log_warning(aot)(\"boot classpath is longer than expected\");\n@@ -872,1 +873,1 @@\n-        log_warning(cds)(\"module path has fewer elements than expected\");\n+        aot_log_warning(aot)(\"module path has fewer elements than expected\");\n@@ -1024,1 +1025,1 @@\n-        log_error(cds)(\"class path and\/or module path are not compatible with the \"\n+        aot_log_error(aot)(\"class path and\/or module path are not compatible with the \"\n@@ -1028,1 +1029,1 @@\n-        log_error(cds)(\"%s%s\", mismatch_msg, hint_msg);\n+        aot_log_error(aot)(\"%s%s\", mismatch_msg, hint_msg);\n@@ -1032,2 +1033,1 @@\n-      log_warning(cds)(\"%s%s\", mismatch_msg, hint_msg);\n-      MetaspaceShared::report_loading_error(nullptr);\n+      MetaspaceShared::report_loading_error(\"%s%s\", mismatch_msg, hint_msg);\n","filename":"src\/hotspot\/share\/cds\/aotClassLocation.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-        log_trace(cds, resolve)(\"Resolved class  [%3d] %s -> %s\", cp_index, ik->external_name(),\n+        log_trace(aot, resolve)(\"Resolved class  [%3d] %s -> %s\", cp_index, ik->external_name(),\n@@ -295,1 +295,1 @@\n-  if (log_is_enabled(Trace, cds, resolve)) {\n+  if (log_is_enabled(Trace, aot, resolve)) {\n@@ -300,1 +300,1 @@\n-    log_trace(cds, resolve)(\"%s %s [%3d] %s -> %s.%s:%s\",\n+    log_trace(aot, resolve)(\"%s %s [%3d] %s -> %s.%s:%s\",\n@@ -329,1 +329,1 @@\n-      if (log_is_enabled(Trace, cds, resolve)) {\n+      if (log_is_enabled(Trace, aot, resolve)) {\n@@ -331,1 +331,1 @@\n-        log_trace(cds, resolve)(\"%s indy   [%3d] %s\",\n+        log_trace(aot, resolve)(\"%s indy   [%3d] %s\",\n@@ -353,1 +353,1 @@\n-        if (log_is_enabled(Warning, cds, resolve)) {\n+        if (log_is_enabled(Warning, aot, resolve)) {\n@@ -355,1 +355,1 @@\n-          log_warning(cds, resolve)(\"Cannot aot-resolve Lambda proxy because %s is excluded\", k->external_name());\n+          log_warning(aot, resolve)(\"Cannot aot-resolve Lambda proxy because %s is excluded\", k->external_name());\n@@ -386,1 +386,1 @@\n-  if (log_is_enabled(Debug, cds, resolve)) {\n+  if (log_is_enabled(Debug, aot, resolve)) {\n@@ -388,1 +388,1 @@\n-    log_debug(cds, resolve)(\"%s aot-resolve Lambda proxy of interface type %s\",\n+    log_debug(aot, resolve)(\"%s aot-resolve Lambda proxy of interface type %s\",\n@@ -402,1 +402,1 @@\n-  if (log_is_enabled(Debug, cds, resolve)) {\n+  if (log_is_enabled(Debug, aot, resolve)) {\n@@ -404,1 +404,1 @@\n-    log_debug(cds, resolve)(\"Checking MethodType for LambdaMetafactory BSM arg %d: %s\", arg_i, sig->as_C_string());\n+    log_debug(aot, resolve)(\"Checking MethodType for LambdaMetafactory BSM arg %d: %s\", arg_i, sig->as_C_string());\n@@ -418,1 +418,1 @@\n-  if (log_is_enabled(Debug, cds, resolve)) {\n+  if (log_is_enabled(Debug, aot, resolve)) {\n@@ -420,1 +420,1 @@\n-    log_debug(cds, resolve)(\"Checking MethodType of MethodHandle for LambdaMetafactory BSM arg %d: %s\", arg_i, sig->as_C_string());\n+    log_debug(aot, resolve)(\"Checking MethodType of MethodHandle for LambdaMetafactory BSM arg %d: %s\", arg_i, sig->as_C_string());\n@@ -455,1 +455,1 @@\n-    if (log_is_enabled(Debug, cds, resolve)) {\n+    if (log_is_enabled(Debug, aot, resolve)) {\n@@ -457,1 +457,1 @@\n-      log_debug(cds, resolve)(\"Checking StringConcatFactory callsite signature [%d]: %s\", cp_index, factory_type_sig->as_C_string());\n+      log_debug(aot, resolve)(\"Checking StringConcatFactory callsite signature [%d]: %s\", cp_index, factory_type_sig->as_C_string());\n@@ -507,1 +507,1 @@\n-    if (log_is_enabled(Debug, cds, resolve)) {\n+    if (log_is_enabled(Debug, aot, resolve)) {\n@@ -509,1 +509,1 @@\n-      log_debug(cds, resolve)(\"Checking lambda callsite signature [%d]: %s\", cp_index, factory_type_sig->as_C_string());\n+      log_debug(aot, resolve)(\"Checking lambda callsite signature [%d]: %s\", cp_index, factory_type_sig->as_C_string());\n","filename":"src\/hotspot\/share\/cds\/aotConstantPoolResolver.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-    log_error(cds)(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n+    log_error(aot)(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n@@ -93,1 +93,1 @@\n-    log_error(cds)(\"%s: %s\", current->pending_exception()->klass()->external_name(),\n+    log_error(aot)(\"%s: %s\", current->pending_exception()->klass()->external_name(),\n@@ -182,1 +182,1 @@\n-    if (log_is_enabled(Info, cds, aot, load)) {\n+    if (log_is_enabled(Info, aot, load)) {\n@@ -184,3 +184,3 @@\n-      log_info(cds, aot, load)(\"%-5s %s%s%s\", category_name, ik->external_name(),\n-                               ik->is_loaded() ? \" (already loaded)\" : \"\",\n-                               ik->is_hidden() ? \" (hidden)\" : \"\");\n+      log_info(aot, load)(\"%-5s %s%s%s\", category_name, ik->external_name(),\n+                          ik->is_loaded() ? \" (already loaded)\" : \"\",\n+                          ik->is_hidden() ? \" (hidden)\" : \"\");\n@@ -202,3 +202,3 @@\n-          log_error(cds)(\"Unable to resolve %s class from CDS archive: %s\", category_name, ik->external_name());\n-          log_error(cds)(\"Expected: \" INTPTR_FORMAT \", actual: \" INTPTR_FORMAT, p2i(ik), p2i(actual));\n-          log_error(cds)(\"JVMTI class retransformation is not supported when archive was generated with -XX:+AOTClassLinking.\");\n+          log_error(aot)(\"Unable to resolve %s class from %s: %s\", category_name, CDSConfig::type_of_archive_being_loaded(), ik->external_name());\n+          log_error(aot)(\"Expected: \" INTPTR_FORMAT \", actual: \" INTPTR_FORMAT, p2i(ik), p2i(actual));\n+          log_error(aot)(\"JVMTI class retransformation is not supported when archive was generated with -XX:+AOTClassLinking.\");\n@@ -239,1 +239,1 @@\n-      if (log_is_enabled(Info, cds, aot, load)) {\n+      if (log_is_enabled(Info, aot, load)) {\n@@ -242,2 +242,2 @@\n-        log_info(cds, aot, load)(\"%s %s (initiated, defined by %s)\", category_name, ik->external_name(),\n-                                 defining_loader);\n+        log_info(aot, load)(\"%s %s (initiated, defined by %s)\", category_name, ik->external_name(),\n+                            defining_loader);\n","filename":"src\/hotspot\/share\/cds\/aotLinkedClassBulkLoader.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -0,0 +1,167 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_CDS_AOTLOGGING_HPP\n+#define SHARE_CDS_AOTLOGGING_HPP\n+\n+#include \"cds\/cds_globals.hpp\"\n+#include \"cds\/cdsConfig.hpp\"\n+#include \"logging\/log.hpp\"\n+\n+\/\/ UL Logging for AOT\n+\/\/ ==================\n+\/\/\n+\/\/ The old \"CDS\" feature is rebranded as \"AOT\" in JEP 483. Therefore, UL logging\n+\/\/ related to the AOT features should be using the [aot] tag.\n+\/\/\n+\/\/ However, some old scripts may be using -Xlog:cds for diagnostic purposes. To\n+\/\/ provide a fair amount of backwards compatibility for such scripts, some AOT\n+\/\/ logs that are likely to be used by such scripts are printed using the macros\n+\/\/ in this header file.\n+\/\/\n+\/\/ NOTE: MOST of the AOT logs will be using the usual macros such as log_info(aot)(...).\n+\/\/ The information below does NOT apply to such logs.\n+\/\/\n+\/\/ CDS Compatibility Logs & Compatibility Macros\n+\/\/ =============================================\n+\/\/\n+\/\/ A subset of the original CDS logs (the \"CDS Compatibility Logs\") have been\n+\/\/ chosen in JDK 25. These logs are guarded using the aot_log_xxx compatibility\n+\/\/ macros. Before JDK 25, such code looked like this:\n+\/\/\n+\/\/      log_info(cds)(\"trying to map %s%s\", info, _full_path);\n+\/\/      log_warning(cds)(\"Unable to read the file header.\");\n+\/\/\n+\/\/ New code since JDK 25:\n+\/\/\n+\/\/      aot_log_info(aot)(\"trying to map %s%s\", info, _full_path);\n+\/\/      aot_log_warning(aot)(\"Unable to read the file header.\");\n+\/\/\n+\/\/ The messages printed with the log_aot_xxx() macros work as if they are\n+\/\/ using the [cds] tag when running with the \"classic\" CDS workflow (i.e.,\n+\/\/ new -XX:AOTxxx flags are not used).\n+\/\/\n+\/\/      $ java -Xlog:cds -XX:SharedArchiveFile=bad.jsa ...\n+\/\/      [0.020s][info][cds] trying to map bad.jsa\n+\/\/      [0.020s][warning][cds] Unable to read the file header\n+\/\/\n+\/\/ However, when running new AOT flags such as-XX:AOTCache, these messages are\n+\/\/ under the [aot] tag:\n+\/\/\n+\/\/      $ java -Xlog:aot -XX:AOTCache=bad.aot ...\n+\/\/      [0.020s][info][aot] trying to map bad.aot\n+\/\/      [0.020s][warning][aot] Unable to read the file header\n+\/\/\n+\/\/ Rules on selection and printing\n+\/\/\n+\/\/ [1] When using AOT cache\n+\/\/     - These logs are selected via the aot tag, and not the cds tag.\n+\/\/       They are always printed with [aot] decoration\n+\/\/\n+\/\/ [2] When using CDS archives\n+\/\/     - These logs are selected via the cds tag, and not the aot tag.\n+\/\/       They are always printed with [cds] decoration\n+\/\/\n+\/\/ Deprecation Process\n+\/\/ ===================\n+\/\/\n+\/\/ This is modeled after the deprecate\/obsolete\/expire process of VM options in arguments.cpp\n+\/\/\n+\/\/ JDK 25 - When no -XX:AOTxxx flags are used, the CDS Compatibility Logs must be selected\n+\/\/          with -Xlog:cds\n+\/\/\n+\/\/ JDK 26 - Same as above, except that when -Xlog:cds is specified in the command-line, a warning\n+\/\/          message is printed to indicate that -Xlog:cds is deprecated.\n+\/\/\n+\/\/ JDK 27 - The CDS Compatibility Logs must be selected with -Xlog:aot.\n+\/\/\n+\/\/          When -Xlog:cds is specified in the command-line, a warning message is printed to\n+\/\/          indicate that -Xlog:cds is obsolete.\n+\/\/\n+\/\/ JDK 28 - When -Xlog:cds is specified in the command-line, the VM will exit with an error message:\n+\/\/\n+\/\/          [0.002s][error][logging] Invalid tag 'cds' in log selection.\n+\/\/          Invalid -Xlog option '-Xlog:cds', see error log for details.\n+\/\/\n+\n+\/\/ The following macros are inspired by the same macros (without the aot_ prefix) in logging\/log.hpp\n+\n+#define aot_log_is_enabled(level, ...) (AOTLogImpl<LOG_TAGS(__VA_ARGS__)>::is_level(LogLevel::level))\n+\n+#define aot_log_error(...)    (!aot_log_is_enabled(Error, __VA_ARGS__))   ? (void)0 : AOTLogImpl<LOG_TAGS(__VA_ARGS__)>::write<LogLevel::Error>\n+#define aot_log_warning(...)  (!aot_log_is_enabled(Warning, __VA_ARGS__)) ? (void)0 : AOTLogImpl<LOG_TAGS(__VA_ARGS__)>::write<LogLevel::Warning>\n+#define aot_log_info(...)     (!aot_log_is_enabled(Info, __VA_ARGS__))    ? (void)0 : AOTLogImpl<LOG_TAGS(__VA_ARGS__)>::write<LogLevel::Info>\n+#define aot_log_debug(...)    (!aot_log_is_enabled(Debug, __VA_ARGS__))   ? (void)0 : AOTLogImpl<LOG_TAGS(__VA_ARGS__)>::write<LogLevel::Debug>\n+#define aot_log_trace(...)    (!aot_log_is_enabled(Trace, __VA_ARGS__))   ? (void)0 : AOTLogImpl<LOG_TAGS(__VA_ARGS__)>::write<LogLevel::Trace>\n+\n+template <LogTagType IGNORED, LogTagType T1 = LogTag::__NO_TAG, LogTagType T2 = LogTag::__NO_TAG, LogTagType T3 = LogTag::__NO_TAG,\n+          LogTagType T4 = LogTag::__NO_TAG, LogTagType GuardTag = LogTag::__NO_TAG>\n+class AOTLogImpl {\n+ public:\n+  \/\/ Make sure no more than the maximum number of tags have been given.\n+  \/\/ The GuardTag allows this to be detected if\/when it happens. If the GuardTag\n+  \/\/ is not __NO_TAG, the number of tags given exceeds the maximum allowed.\n+  STATIC_ASSERT(GuardTag == LogTag::__NO_TAG); \/\/ Number of logging tags exceeds maximum supported!\n+\n+  \/\/ Empty constructor to avoid warnings on MSVC about unused variables\n+  \/\/ when the log instance is only used for static functions.\n+  AOTLogImpl() {\n+  }\n+\n+  static bool is_level(LogLevelType level) {\n+    if (CDSConfig::new_aot_flags_used()) {\n+      return LogTagSetMapping<LogTag::_aot, T1, T2, T3, T4>::tagset().is_level(level);\n+    } else {\n+      return LogTagSetMapping<LogTag::_cds, T1, T2, T3, T4>::tagset().is_level(level);\n+    }\n+  }\n+\n+  ATTRIBUTE_PRINTF(2, 3)\n+  static void write(LogLevelType level, const char* fmt, ...) {\n+    va_list args;\n+    va_start(args, fmt);\n+    vwrite(level, fmt, args);\n+    va_end(args);\n+  }\n+\n+  template <LogLevelType Level>\n+  ATTRIBUTE_PRINTF(1, 2)\n+  static void write(const char* fmt, ...) {\n+    va_list args;\n+    va_start(args, fmt);\n+    vwrite(Level, fmt, args);\n+    va_end(args);\n+  }\n+\n+  ATTRIBUTE_PRINTF(2, 0)\n+  static void vwrite(LogLevelType level, const char* fmt, va_list args) {\n+    if (CDSConfig::new_aot_flags_used()) {\n+      LogTagSetMapping<LogTag::_aot, T1, T2, T3, T4>::tagset().vwrite(level, fmt, args);\n+    } else {\n+      LogTagSetMapping<LogTag::_cds, T1, T2, T3, T4>::tagset().vwrite(level, fmt, args);\n+    }\n+  }\n+};\n+\n+#endif\n","filename":"src\/hotspot\/share\/cds\/aotLogging.hpp","additions":167,"deletions":0,"binary":false,"changes":167,"status":"added"},{"patch":"@@ -200,1 +200,1 @@\n-      log_error(cds, heap)(\"Cannot archive reference object \" PTR_FORMAT \" of class %s\",\n+      log_error(aot, heap)(\"Cannot archive reference object \" PTR_FORMAT \" of class %s\",\n@@ -202,1 +202,1 @@\n-      log_error(cds, heap)(\"referent = \" PTR_FORMAT\n+      log_error(aot, heap)(\"referent = \" PTR_FORMAT\n@@ -207,1 +207,1 @@\n-      log_error(cds, heap)(\"This object requires special clean up as its queue is not ReferenceQueue::N\" \"ULL (\"\n+      log_error(aot, heap)(\"This object requires special clean up as its queue is not ReferenceQueue::N\" \"ULL (\"\n@@ -209,1 +209,1 @@\n-      log_error(cds, heap)(\"%s\", (referent == nullptr) ?\n+      log_error(aot, heap)(\"%s\", (referent == nullptr) ?\n@@ -215,1 +215,1 @@\n-    if (log_is_enabled(Info, cds, ref)) {\n+    if (log_is_enabled(Info, aot, ref)) {\n@@ -217,1 +217,1 @@\n-      log_info(cds, ref)(\"Reference obj:\"\n+      log_info(aot, ref)(\"Reference obj:\"\n","filename":"src\/hotspot\/share\/cds\/aotReferenceObjSupport.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -136,1 +137,1 @@\n-    log_trace(cds)(\"Ref: [\" PTR_FORMAT \"] -> \" PTR_FORMAT \" => \" PTR_FORMAT,\n+    log_trace(aot)(\"Ref: [\" PTR_FORMAT \"] -> \" PTR_FORMAT \" => \" PTR_FORMAT,\n@@ -254,1 +255,1 @@\n-  log_info(cds)(\"Gathering classes and symbols ... \");\n+  aot_log_info(aot)(\"Gathering classes and symbols ... \");\n@@ -284,1 +285,1 @@\n-    log_info(cds)(\"Sorting symbols ... \");\n+    aot_log_info(aot)(\"Sorting symbols ... \");\n@@ -306,1 +307,1 @@\n-  log_info(cds)(\"Sorting classes ... \");\n+  aot_log_info(aot)(\"Sorting classes ... \");\n@@ -318,1 +319,1 @@\n-    log_error(cds)(\"Failed to reserve %zu bytes of output buffer.\", buffer_size);\n+    aot_log_error(aot)(\"Failed to reserve %zu bytes of output buffer.\", buffer_size);\n@@ -325,1 +326,1 @@\n-  log_info(cds)(\"Reserved output buffer space at \" PTR_FORMAT \" [%zu bytes]\",\n+  aot_log_info(aot)(\"Reserved output buffer space at \" PTR_FORMAT \" [%zu bytes]\",\n@@ -367,3 +368,3 @@\n-    log_error(cds)(\"my_archive_requested_bottom = \" INTPTR_FORMAT, p2i(my_archive_requested_bottom));\n-    log_error(cds)(\"my_archive_requested_top    = \" INTPTR_FORMAT, p2i(my_archive_requested_top));\n-    log_error(cds)(\"SharedBaseAddress (\" INTPTR_FORMAT \") is too high. \"\n+    aot_log_error(aot)(\"my_archive_requested_bottom = \" INTPTR_FORMAT, p2i(my_archive_requested_bottom));\n+    aot_log_error(aot)(\"my_archive_requested_top    = \" INTPTR_FORMAT, p2i(my_archive_requested_top));\n+    aot_log_error(aot)(\"SharedBaseAddress (\" INTPTR_FORMAT \") is too high. \"\n@@ -427,1 +428,1 @@\n-      log_info(cds, hashtables)(\"Expanded _src_obj_table table to %d\", _src_obj_table.table_size());\n+      log_info(aot, hashtables)(\"Expanded _src_obj_table table to %d\", _src_obj_table.table_size());\n@@ -506,1 +507,1 @@\n-  log_info(cds)(\"Gathering all archivable objects ... \");\n+  aot_log_info(aot)(\"Gathering all archivable objects ... \");\n@@ -593,1 +594,1 @@\n-  log_info(cds)(\"Allocating RW objects ... \");\n+  aot_log_info(aot)(\"Allocating RW objects ... \");\n@@ -608,1 +609,1 @@\n-  log_info(cds)(\"Allocating RO objects ... \");\n+  aot_log_info(aot)(\"Allocating RO objects ... \");\n@@ -629,1 +630,1 @@\n-  log_info(cds)(\"done (%d objects)\", src_objs->objs()->length());\n+  aot_log_info(aot)(\"done (%d objects)\", src_objs->objs()->length());\n@@ -679,1 +680,1 @@\n-      log_info(cds, hashtables)(\"Expanded _buffered_to_src_table table to %d\", _buffered_to_src_table.table_size());\n+      log_info(aot, hashtables)(\"Expanded _buffered_to_src_table table to %d\", _buffered_to_src_table.table_size());\n@@ -689,1 +690,1 @@\n-  log_trace(cds)(\"Copy: \" PTR_FORMAT \" ==> \" PTR_FORMAT \" %d\", p2i(src), p2i(dest), bytes);\n+  log_trace(aot)(\"Copy: \" PTR_FORMAT \" ==> \" PTR_FORMAT \" %d\", p2i(src), p2i(dest), bytes);\n@@ -755,1 +756,1 @@\n-  log_info(cds)(\"Relocating embedded pointers in core regions ... \");\n+  aot_log_info(aot)(\"Relocating embedded pointers in core regions ... \");\n@@ -926,1 +927,1 @@\n-    if (log_is_enabled(Debug, cds, class)) {\n+    if (aot_log_is_enabled(Debug, aot, class)) {\n@@ -928,1 +929,1 @@\n-      log_debug(cds, class)(\"klasses[%5d] = \" PTR_FORMAT \" %-5s %s%s%s%s%s%s%s%s\", i,\n+      aot_log_debug(aot, class)(\"klasses[%5d] = \" PTR_FORMAT \" %-5s %s%s%s%s%s%s%s%s\", i,\n@@ -937,11 +938,11 @@\n-  log_info(cds)(\"Number of classes %d\", num_instance_klasses + num_obj_array_klasses + num_type_array_klasses);\n-  log_info(cds)(\"    instance classes   \" STATS_FORMAT, STATS_PARAMS(instance_klasses));\n-  log_info(cds)(\"      boot             \" STATS_FORMAT, STATS_PARAMS(boot_klasses));\n-  log_info(cds)(\"        vm             \" STATS_FORMAT, STATS_PARAMS(vm_klasses));\n-  log_info(cds)(\"      platform         \" STATS_FORMAT, STATS_PARAMS(platform_klasses));\n-  log_info(cds)(\"      app              \" STATS_FORMAT, STATS_PARAMS(app_klasses));\n-  log_info(cds)(\"      unregistered     \" STATS_FORMAT, STATS_PARAMS(unregistered_klasses));\n-  log_info(cds)(\"      (enum)           \" STATS_FORMAT, STATS_PARAMS(enum_klasses));\n-  log_info(cds)(\"      (hidden)         \" STATS_FORMAT, STATS_PARAMS(hidden_klasses));\n-  log_info(cds)(\"      (old)            \" STATS_FORMAT, STATS_PARAMS(old_klasses));\n-  log_info(cds)(\"      (unlinked)       = %5d, boot = %d, plat = %d, app = %d, unreg = %d\",\n+  aot_log_info(aot)(\"Number of classes %d\", num_instance_klasses + num_obj_array_klasses + num_type_array_klasses);\n+  aot_log_info(aot)(\"    instance classes   \" STATS_FORMAT, STATS_PARAMS(instance_klasses));\n+  aot_log_info(aot)(\"      boot             \" STATS_FORMAT, STATS_PARAMS(boot_klasses));\n+  aot_log_info(aot)(\"        vm             \" STATS_FORMAT, STATS_PARAMS(vm_klasses));\n+  aot_log_info(aot)(\"      platform         \" STATS_FORMAT, STATS_PARAMS(platform_klasses));\n+  aot_log_info(aot)(\"      app              \" STATS_FORMAT, STATS_PARAMS(app_klasses));\n+  aot_log_info(aot)(\"      unregistered     \" STATS_FORMAT, STATS_PARAMS(unregistered_klasses));\n+  aot_log_info(aot)(\"      (enum)           \" STATS_FORMAT, STATS_PARAMS(enum_klasses));\n+  aot_log_info(aot)(\"      (hidden)         \" STATS_FORMAT, STATS_PARAMS(hidden_klasses));\n+  aot_log_info(aot)(\"      (old)            \" STATS_FORMAT, STATS_PARAMS(old_klasses));\n+  aot_log_info(aot)(\"      (unlinked)       = %5d, boot = %d, plat = %d, app = %d, unreg = %d\",\n@@ -949,3 +950,3 @@\n-  log_info(cds)(\"    obj array classes  = %5d\", num_obj_array_klasses);\n-  log_info(cds)(\"    type array classes = %5d\", num_type_array_klasses);\n-  log_info(cds)(\"               symbols = %5d\", _symbols->length());\n+  aot_log_info(aot)(\"    obj array classes  = %5d\", num_obj_array_klasses);\n+  aot_log_info(aot)(\"    type array classes = %5d\", num_type_array_klasses);\n+  aot_log_info(aot)(\"               symbols = %5d\", _symbols->length());\n@@ -1053,1 +1054,1 @@\n-    log_debug(cds)(\"Relocating archive from [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] to \"\n+    aot_log_debug(aot)(\"Relocating archive from [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] to \"\n@@ -1157,1 +1158,1 @@\n-    log_debug(cds, map)(_LOG_PREFIX \" %s\",\n+    log_debug(aot, map)(_LOG_PREFIX \" %s\",\n@@ -1162,1 +1163,1 @@\n-    log_debug(cds, map)(_LOG_PREFIX \" %s\",\n+    log_debug(aot, map)(_LOG_PREFIX \" %s\",\n@@ -1205,1 +1206,1 @@\n-          log_debug(cds, map)(_LOG_PREFIX \" %s\", p2i(runtime_dest), type_name, bytes,\n+          log_debug(aot, map)(_LOG_PREFIX \" %s\", p2i(runtime_dest), type_name, bytes,\n@@ -1210,1 +1211,1 @@\n-        log_debug(cds, map)(_LOG_PREFIX, p2i(runtime_dest), type_name, bytes);\n+        log_debug(aot, map)(_LOG_PREFIX, p2i(runtime_dest), type_name, bytes);\n@@ -1220,1 +1221,1 @@\n-      log_debug(cds, map)(PTR_FORMAT \": @@ Misc data %zu bytes\",\n+      log_debug(aot, map)(PTR_FORMAT \": @@ Misc data %zu bytes\",\n@@ -1244,1 +1245,1 @@\n-    log_info(cds, map)(\"[%-18s \" PTR_FORMAT \" - \" PTR_FORMAT \" %9zu bytes]\",\n+    log_info(aot, map)(\"[%-18s \" PTR_FORMAT \" - \" PTR_FORMAT \" %9zu bytes]\",\n@@ -1255,1 +1256,1 @@\n-    LogStreamHandle(Info, cds, map) st;\n+    LogStreamHandle(Info, aot, map) st;\n@@ -1364,1 +1365,1 @@\n-    LogStreamHandle(Trace, cds, map, oops) st;\n+    LogStreamHandle(Trace, aot, map, oops) st;\n@@ -1432,1 +1433,1 @@\n-    LogStreamHandle(Trace, cds, map, oops) st;\n+    LogStreamHandle(Trace, aot, map, oops) st;\n@@ -1493,1 +1494,1 @@\n-    LogStreamHandle(Trace, cds, map) lsh;\n+    LogStreamHandle(Trace, aot, map) lsh;\n@@ -1506,1 +1507,1 @@\n-    LogStreamHandle(Info, cds, map) lsh;\n+    LogStreamHandle(Info, aot, map) lsh;\n@@ -1516,1 +1517,1 @@\n-    log_info(cds, map)(\"%s CDS archive map for %s\", CDSConfig::is_dumping_static_archive() ? \"Static\" : \"Dynamic\", mapinfo->full_path());\n+    log_info(aot, map)(\"%s CDS archive map for %s\", CDSConfig::is_dumping_static_archive() ? \"Static\" : \"Dynamic\", mapinfo->full_path());\n@@ -1540,1 +1541,1 @@\n-    log_info(cds, map)(\"[End of CDS archive map]\");\n+    log_info(aot, map)(\"[End of CDS archive map]\");\n@@ -1577,2 +1578,2 @@\n-  if (log_is_enabled(Info, cds)) {\n-    log_info(cds)(\"Full module graph = %s\", CDSConfig::is_dumping_full_module_graph() ? \"enabled\" : \"disabled\");\n+  if (log_is_enabled(Info, aot)) {\n+    log_info(aot)(\"Full module graph = %s\", CDSConfig::is_dumping_full_module_graph() ? \"enabled\" : \"disabled\");\n@@ -1582,1 +1583,1 @@\n-  if (log_is_enabled(Info, cds, map)) {\n+  if (log_is_enabled(Info, aot, map)) {\n@@ -1616,1 +1617,1 @@\n-  log_debug(cds)(\"total   : %9zu [100.0%% of total] out of %9zu bytes [%5.1f%% used]\",\n+  aot_log_debug(aot)(\"total   : %9zu [100.0%% of total] out of %9zu bytes [%5.1f%% used]\",\n@@ -1621,1 +1622,1 @@\n-  log_debug(cds)(\"bm space: %9zu [ %4.1f%% of total] out of %9zu bytes [100.0%% used]\",\n+  aot_log_debug(aot)(\"bm space: %9zu [ %4.1f%% of total] out of %9zu bytes [100.0%% used]\",\n@@ -1629,1 +1630,1 @@\n-  log_debug(cds)(\"hp space: %9zu [ %4.1f%% of total] out of %9zu bytes [100.0%% used] at \" INTPTR_FORMAT,\n+  aot_log_debug(aot)(\"hp space: %9zu [ %4.1f%% of total] out of %9zu bytes [100.0%% used] at \" INTPTR_FORMAT,\n@@ -1640,1 +1641,1 @@\n-  log_error(cds)(\"Unable to allocate from '%s' region: Please reduce the number of shared classes.\", name);\n+  log_error(aot)(\"Unable to allocate from '%s' region: Please reduce the number of shared classes.\", name);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":55,"deletions":54,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-  log_info(cds)(\"patching heap embedded pointers: narrowOop 0x%8x -> 0x%8x\",\n+  log_info(aot)(\"patching heap embedded pointers: narrowOop 0x%8x -> 0x%8x\",\n@@ -178,1 +178,1 @@\n-    log_info(cds)(\"CDS heap data relocation quick delta = 0x%x\", quick_delta);\n+    log_info(aot)(\"heap data relocation quick delta = 0x%x\", quick_delta);\n@@ -180,1 +180,1 @@\n-      log_info(cds)(\"CDS heap data relocation unnecessary, quick_delta = 0\");\n+      log_info(aot)(\"heap data relocation unnecessary, quick_delta = 0\");\n@@ -186,1 +186,1 @@\n-    log_info(cds)(\"CDS heap data quick relocation not possible\");\n+    log_info(aot)(\"heap data quick relocation not possible\");\n@@ -304,1 +304,1 @@\n-    log_warning(cds)(\"Loading of heap region %d has failed. Archived objects are disabled\", loaded_region->_region_index);\n+    log_warning(aot)(\"Loading of heap region %d has failed. Archived objects are disabled\", loaded_region->_region_index);\n@@ -309,1 +309,1 @@\n-  log_info(cds)(\"Loaded heap    region #%d at base \" INTPTR_FORMAT \" top \" INTPTR_FORMAT\n+  log_info(aot)(\"Loaded heap    region #%d at base \" INTPTR_FORMAT \" top \" INTPTR_FORMAT\n@@ -411,1 +411,1 @@\n-  log_info(cds, heap)(\"Verify all oops and pointers in loaded heap\");\n+  log_info(aot, heap)(\"Verify all oops and pointers in loaded heap\");\n@@ -462,1 +462,1 @@\n-    log_info(cds, heap)(\"Patching native pointers in heap region\");\n+    log_info(aot, heap)(\"Patching native pointers in heap region\");\n","filename":"src\/hotspot\/share\/cds\/archiveHeapLoader.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -250,1 +250,1 @@\n-    log_info(cds, heap)(\"archived obj root segment [%d] = %zu bytes, obj = \" PTR_FORMAT,\n+    log_info(aot, heap)(\"archived obj root segment [%d] = %zu bytes, obj = \" PTR_FORMAT,\n@@ -296,1 +296,1 @@\n-  log_info(cds)(\"sorting heap objects\");\n+  log_info(aot)(\"sorting heap objects\");\n@@ -306,1 +306,1 @@\n-  log_info(cds)(\"computed ranks\");\n+  log_info(aot)(\"computed ranks\");\n@@ -308,1 +308,1 @@\n-  log_info(cds)(\"sorting heap objects done\");\n+  log_info(aot)(\"sorting heap objects done\");\n@@ -333,1 +333,1 @@\n-  log_info(cds)(\"Size of heap region = %zu bytes, %d objects, %d roots, %d native ptrs\",\n+  log_info(aot)(\"Size of heap region = %zu bytes, %d objects, %d roots, %d native ptrs\",\n@@ -399,1 +399,1 @@\n-    log_info(cds, heap)(\"Inserting filler obj array of %d elements (%zu bytes total) @ buffer offset %zu\",\n+    log_info(aot, heap)(\"Inserting filler obj array of %d elements (%zu bytes total) @ buffer offset %zu\",\n@@ -477,1 +477,1 @@\n-      log_info(cds, heap)(\"Heap end = %p\", heap_end);\n+      log_info(aot, heap)(\"Heap end = %p\", heap_end);\n@@ -641,1 +641,1 @@\n-  log_info(cds)(\"%s = %7zu ... %7zu (%3zu%% ... %3zu%% = %3zu%%)\", which,\n+  log_info(aot)(\"%s = %7zu ... %7zu (%3zu%% ... %3zu%% = %3zu%%)\", which,\n@@ -768,1 +768,1 @@\n-  log_info(cds, heap)(\"calculate_ptrmap: marked %d non-null native pointers for heap region (%zu bits)\",\n+  log_info(aot, heap)(\"calculate_ptrmap: marked %d non-null native pointers for heap region (%zu bits)\",\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -171,1 +172,1 @@\n-      DEBUG_ONLY(log_trace(cds, reloc)(\"Clearing pointer [\" PTR_FORMAT  \"] -> null @ %9zu\", p2i(ptr_loc), offset));\n+      DEBUG_ONLY(log_trace(aot, reloc)(\"Clearing pointer [\" PTR_FORMAT  \"] -> null @ %9zu\", p2i(ptr_loc), offset));\n@@ -210,1 +211,1 @@\n-      log_error(cds)(\"Out of memory in the CDS archive: Please reduce the number of shared classes.\");\n+      aot_log_error(aot)(\"Out of memory in the CDS archive: Please reduce the number of shared classes.\");\n@@ -236,1 +237,1 @@\n-    log_error(cds)(\"Failed to expand shared space to %zu bytes\",\n+    aot_log_error(aot)(\"Failed to expand shared space to %zu bytes\",\n@@ -247,1 +248,1 @@\n-  log_debug(cds)(\"Expanding %s spaces by %7zu bytes [total %9zu bytes ending at %p]\",\n+  log_debug(aot)(\"Expanding %s spaces by %7zu bytes [total %9zu bytes ending at %p]\",\n@@ -274,1 +275,1 @@\n-  log_debug(cds)(\"%s space: %9zu [ %4.1f%% of total] out of %9zu bytes [%5.1f%% used] at \" INTPTR_FORMAT,\n+  log_debug(aot)(\"%s space: %9zu [ %4.1f%% of total] out of %9zu bytes [%5.1f%% used] at \" INTPTR_FORMAT,\n@@ -280,1 +281,1 @@\n-  log_error(cds)(\"[%-8s] \" PTR_FORMAT \" - \" PTR_FORMAT \" capacity =%9d, allocated =%9d\",\n+  aot_log_error(aot)(\"[%-8s] \" PTR_FORMAT \" - \" PTR_FORMAT \" capacity =%9d, allocated =%9d\",\n@@ -283,1 +284,1 @@\n-    log_error(cds)(\" required = %d\", int(needed_bytes));\n+    aot_log_error(aot)(\" required = %d\", int(needed_bytes));\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -139,6 +139,6 @@\n-    log_debug(cds, reloc)(\"SharedDataRelocator::_patch_base     = \" PTR_FORMAT, p2i(_patch_base));\n-    log_debug(cds, reloc)(\"SharedDataRelocator::_patch_end      = \" PTR_FORMAT, p2i(_patch_end));\n-    log_debug(cds, reloc)(\"SharedDataRelocator::_valid_old_base = \" PTR_FORMAT, p2i(_valid_old_base));\n-    log_debug(cds, reloc)(\"SharedDataRelocator::_valid_old_end  = \" PTR_FORMAT, p2i(_valid_old_end));\n-    log_debug(cds, reloc)(\"SharedDataRelocator::_valid_new_base = \" PTR_FORMAT, p2i(_valid_new_base));\n-    log_debug(cds, reloc)(\"SharedDataRelocator::_valid_new_end  = \" PTR_FORMAT, p2i(_valid_new_end));\n+    log_debug(aot, reloc)(\"SharedDataRelocator::_patch_base     = \" PTR_FORMAT, p2i(_patch_base));\n+    log_debug(aot, reloc)(\"SharedDataRelocator::_patch_end      = \" PTR_FORMAT, p2i(_patch_end));\n+    log_debug(aot, reloc)(\"SharedDataRelocator::_valid_old_base = \" PTR_FORMAT, p2i(_valid_old_base));\n+    log_debug(aot, reloc)(\"SharedDataRelocator::_valid_old_end  = \" PTR_FORMAT, p2i(_valid_old_end));\n+    log_debug(aot, reloc)(\"SharedDataRelocator::_valid_new_base = \" PTR_FORMAT, p2i(_valid_new_base));\n+    log_debug(aot, reloc)(\"SharedDataRelocator::_valid_new_end  = \" PTR_FORMAT, p2i(_valid_new_end));\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -49,1 +50,1 @@\n-  DEBUG_ONLY(log_trace(cds, reloc)(\"Patch2: @%8d [\" PTR_FORMAT \"] \" PTR_FORMAT \" -> \" PTR_FORMAT,\n+  DEBUG_ONLY(aot_log_trace(aot, reloc)(\"Patch2: @%8d [\" PTR_FORMAT \"] \" PTR_FORMAT \" -> \" PTR_FORMAT,\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.inline.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -114,0 +115,4 @@\n+    char jvm_path[JVM_MAXPATHLEN];\n+    os::jvm_path(jvm_path, sizeof(jvm_path));\n+    char *end = strrchr(jvm_path, *os::file_separator());\n+    if (end != nullptr) *end = '\\0';\n@@ -115,3 +120,1 @@\n-    const char* subdir = WINDOWS_ONLY(\"bin\") NOT_WINDOWS(\"lib\");\n-    tmp.print(\"%s%s%s%s%s%sclasses\", Arguments::get_java_home(), os::file_separator(), subdir,\n-              os::file_separator(), Abstract_VM_Version::vm_variant(), os::file_separator());\n+    tmp.print(\"%s%sclasses\", jvm_path, os::file_separator());\n@@ -244,1 +247,1 @@\n-            log_error(cds)(\"Not a valid archive (%s)\", SharedArchiveFile);\n+            aot_log_error(aot)(\"Not a valid %s (%s)\", type_of_archive_being_loaded(), SharedArchiveFile);\n@@ -288,1 +291,1 @@\n-    log_info(cds)(\"optimized module handling: disabled due to incompatible property: %s=%s\", key, value);\n+    aot_log_info(aot)(\"optimized module handling: disabled due to incompatible property: %s=%s\", key, value);\n@@ -303,1 +306,1 @@\n-      log_info(cds)(\"full module graph: disabled due to incompatible property: %s=%s\", key, value);\n+      aot_log_info(aot)(\"full module graph: disabled due to incompatible property: %s=%s\", key, value);\n@@ -373,1 +376,1 @@\n-        log_warning(cds)(\"AOT cache is disabled when the %s option is specified.\", option);\n+        aot_log_warning(aot)(\"AOT cache is disabled when the %s option is specified.\", option);\n@@ -375,1 +378,1 @@\n-        log_info(cds)(\"CDS is disabled when the %s option is specified.\", option);\n+        aot_log_info(aot)(\"CDS is disabled when the %s option is specified.\", option);\n@@ -435,1 +438,1 @@\n-    \/\/ AOTCache\/AOTConfiguration\/AOTMode not used.\n+    \/\/ AOTCache\/AOTConfiguration\/AOTMode not used -> using the \"classic CDS\" workflow.\n@@ -573,1 +576,1 @@\n-      log_info(cds)(\"reduced -Xcomp to -Xmixed for static dumping\");\n+      aot_log_info(aot)(\"reduced -Xcomp to -Xmixed for static dumping\");\n@@ -598,1 +601,1 @@\n-      log_warning(cds)(\"-XX:+AutoCreateSharedArchive requires -XX:SharedArchiveFile\");\n+      aot_log_warning(aot)(\"-XX:+AutoCreateSharedArchive requires -XX:SharedArchiveFile\");\n@@ -602,1 +605,1 @@\n-      log_warning(cds)(\"-XX:+AutoCreateSharedArchive does not work with ArchiveClassesAtExit\");\n+      aot_log_warning(aot)(\"-XX:+AutoCreateSharedArchive does not work with ArchiveClassesAtExit\");\n@@ -618,1 +621,1 @@\n-      log_info(cds)(\"All non-system classes will be verified (-Xverify:remote) during CDS dump time.\");\n+      aot_log_info(aot)(\"All non-system classes will be verified (-Xverify:remote) during CDS dump time.\");\n@@ -639,1 +642,1 @@\n-      log_error(cds)(\"-XX:+RecordDynamicDumpInfo%s\", __THEMSG);\n+      aot_log_error(aot)(\"-XX:+RecordDynamicDumpInfo%s\", __THEMSG);\n@@ -643,1 +646,1 @@\n-      log_warning(cds)(\"-XX:ArchiveClassesAtExit\" __THEMSG);\n+      aot_log_warning(aot)(\"-XX:ArchiveClassesAtExit\" __THEMSG);\n@@ -790,1 +793,1 @@\n-  log_info(cds)(\"Archived java heap is not supported: %s\", reason);\n+  aot_log_info(aot)(\"Archived java heap is not supported: %s\", reason);\n@@ -844,1 +847,1 @@\n-      log_info(cds)(\"full module graph cannot be dumped: %s\", reason);\n+      aot_log_info(aot)(\"full module graph cannot be dumped: %s\", reason);\n@@ -854,1 +857,1 @@\n-      log_info(cds)(\"full module graph cannot be loaded: %s\", reason);\n+      aot_log_info(aot)(\"full module graph cannot be loaded: %s\", reason);\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-  log_info(cds, heap)(\"Archived enum obj @%d %s::%s (\" INTPTR_FORMAT \")\",\n+  log_info(aot, heap)(\"Archived enum obj @%d %s::%s (\" INTPTR_FORMAT \")\",\n@@ -116,1 +116,1 @@\n-  if (log_is_enabled(Info, cds, heap)) {\n+  if (log_is_enabled(Info, aot, heap)) {\n@@ -118,1 +118,1 @@\n-    log_info(cds, heap)(\"Initializing Enum class: %s\", k->external_name());\n+    log_info(aot, heap)(\"Initializing Enum class: %s\", k->external_name());\n","filename":"src\/hotspot\/share\/cds\/cdsEnumKlass.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-    log_error(cds, heap)(\"Scanned %d objects. Found %d case(s) where \"\n+    log_error(aot, heap)(\"Scanned %d objects. Found %d case(s) where \"\n@@ -157,1 +157,1 @@\n-    log_error(cds, heap)(\"Please see cdsHeapVerifier.cpp and aotClassInitializer.cpp for details\");\n+    log_error(aot, heap)(\"Please see cdsHeapVerifier.cpp and aotClassInitializer.cpp for details\");\n@@ -288,1 +288,1 @@\n-    LogStream ls(Log(cds, heap)::warning());\n+    LogStream ls(Log(aot, heap)::warning());\n","filename":"src\/hotspot\/share\/cds\/cdsHeapVerifier.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -71,1 +72,1 @@\n-  log_info(cds)(\"Parsing %s%s\", file,\n+  aot_log_info(aot)(\"Parsing %s%s\", file,\n@@ -166,1 +167,1 @@\n-    log_warning(cds)(\"%s: %s\", PENDING_EXCEPTION->klass()->external_name(), ex_msg);\n+    aot_log_warning(aot)(\"%s: %s\", PENDING_EXCEPTION->klass()->external_name(), ex_msg);\n@@ -170,1 +171,1 @@\n-    log_warning(cds)(\"Preload Warning: Cannot find %s\", _class_name);\n+    aot_log_warning(aot)(\"Preload Warning: Cannot find %s\", _class_name);\n@@ -175,1 +176,1 @@\n-  if (log_is_enabled(Trace, cds)) {\n+  if (aot_log_is_enabled(Trace, aot)) {\n@@ -177,1 +178,1 @@\n-    log_trace(cds)(\"Shared spaces preloaded: %s\", klass->external_name());\n+    log_trace(aot)(\"Shared spaces preloaded: %s\", klass->external_name());\n@@ -398,1 +399,1 @@\n-objArrayOop ClassListParser::get_specified_interfaces(TRAPS) {\n+GrowableArray<InstanceKlass *> ClassListParser::get_specified_interfaces() {\n@@ -400,8 +401,3 @@\n-  if (n == 0) {\n-    return nullptr;\n-  } else {\n-    objArrayOop array = oopFactory::new_objArray(vmClasses::Class_klass(), n, CHECK_NULL);\n-    for (int i = 0; i < n; i++) {\n-      array->obj_at_put(i, lookup_class_by_id(_interfaces->at(i))->java_mirror());\n-    }\n-    return array;\n+  GrowableArray<InstanceKlass *> specified_interfaces(n);\n+  for (int i = 0; i < n; i++) {\n+    specified_interfaces.append(lookup_class_by_id(_interfaces->at(i)));\n@@ -409,0 +405,1 @@\n+  return specified_interfaces;\n@@ -505,1 +502,1 @@\n-  LogTarget(Warning, cds, resolve) lt;\n+  LogTarget(Warning, aot, resolve) lt;\n@@ -512,0 +509,19 @@\n+\/\/ If an unregistered class U is specified to have a registered supertype S1\n+\/\/ named SN but an unregistered class S2 also named SN has already been loaded\n+\/\/ S2 will be incorrectly used as the supertype of U instead of S1 due to\n+\/\/ limitations in the loading mechanism of unregistered classes.\n+void ClassListParser::check_supertype_obstruction(int specified_supertype_id, const InstanceKlass* specified_supertype, TRAPS) {\n+  if (specified_supertype->is_shared_unregistered_class()) {\n+    return; \/\/ Only registered supertypes can be obstructed\n+  }\n+  const InstanceKlass* obstructor = SystemDictionaryShared::get_unregistered_class(specified_supertype->name());\n+  if (obstructor == nullptr) {\n+    return; \/\/ No unregistered types with the same name have been loaded, i.e. no obstruction\n+  }\n+  \/\/ 'specified_supertype' is S1, 'obstructor' is S2 from the explanation above\n+  ResourceMark rm;\n+  THROW_MSG(vmSymbols::java_lang_UnsupportedOperationException(),\n+            err_msg(\"%s (id %d) has super-type %s (id %d) obstructed by another class with the same name\",\n+                    _class_name, _id, specified_supertype->external_name(), specified_supertype_id));\n+}\n+\n@@ -530,1 +546,1 @@\n-    log_info(cds)(\"Prohibited package for non-bootstrap classes: %s.class from %s\",\n+    aot_log_info(aot)(\"Prohibited package for non-bootstrap classes: %s.class from %s\",\n@@ -536,1 +552,0 @@\n-  char * source_path = os::strdup_check_oom(ClassLoader::uri_to_path(_source));\n@@ -538,5 +553,11 @@\n-  Handle super_class(THREAD, specified_super->java_mirror());\n-  objArrayOop r = get_specified_interfaces(CHECK_NULL);\n-  objArrayHandle interfaces(THREAD, r);\n-  InstanceKlass* k = UnregisteredClasses::load_class(class_name, source_path,\n-                                                     super_class, interfaces, CHECK_NULL);\n+  GrowableArray<InstanceKlass*> specified_interfaces = get_specified_interfaces();\n+  \/\/ Obstruction must be checked before the class loading attempt because it may\n+  \/\/ cause class loading errors (JVMS 5.3.5.3-5.3.5.4)\n+  check_supertype_obstruction(_super, specified_super, CHECK_NULL);\n+  for (int i = 0; i < _interfaces->length(); i++) {\n+    check_supertype_obstruction(_interfaces->at(i), specified_interfaces.at(i), CHECK_NULL);\n+  }\n+\n+  const char* source_path = ClassLoader::uri_to_path(_source);\n+  InstanceKlass* k = UnregisteredClasses::load_class(class_name, source_path, CHECK_NULL);\n+\n@@ -558,0 +579,9 @@\n+  for (int i = 0; i < _interfaces->length(); i++) {\n+    InstanceKlass* specified_interface = specified_interfaces.at(i);\n+    if (!k->local_interfaces()->contains(specified_interface)) {\n+      print_specified_interfaces();\n+      print_actual_interfaces(k);\n+      error(\"Specified interface %s (id %d) is not directly implemented\",\n+            specified_interface->external_name(), _interfaces->at(i));\n+      }\n+  }\n@@ -626,1 +656,1 @@\n-    log_warning(cds)(\"resolve_indy for class %s has encountered exception: %s %s\",\n+    aot_log_warning(aot)(\"resolve_indy for class %s has encountered exception: %s %s\",\n@@ -666,1 +696,1 @@\n-        log_debug(cds, lambda)(\"is_supported_invokedynamic check failed for cp_index %d\", pool_index);\n+        log_debug(aot, lambda)(\"is_supported_invokedynamic check failed for cp_index %d\", pool_index);\n@@ -689,1 +719,1 @@\n-      log_warning(cds)(\"No invoke dynamic constant pool entry can be found for class %s. The classlist is probably out-of-date.\",\n+      aot_log_warning(aot)(\"No invoke dynamic constant pool entry can be found for class %s. The classlist is probably out-of-date.\",\n@@ -751,1 +781,1 @@\n-      log_info(cds, hashtables)(\"Expanded id2klass_table() to %d\", id2klass_table()->table_size());\n+      log_info(aot, hashtables)(\"Expanded id2klass_table() to %d\", id2klass_table()->table_size());\n@@ -855,1 +885,1 @@\n-    if (log_is_enabled(Warning, cds, resolve)) {\n+    if (log_is_enabled(Warning, aot, resolve)) {\n@@ -857,1 +887,1 @@\n-      log_warning(cds, resolve)(\"Cannot aot-resolve constants for %s because it is excluded\", ik->external_name());\n+      log_warning(aot, resolve)(\"Cannot aot-resolve constants for %s because it is excluded\", ik->external_name());\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":58,"deletions":28,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -140,1 +140,2 @@\n-  objArrayOop get_specified_interfaces(TRAPS);\n+  GrowableArray<InstanceKlass*> get_specified_interfaces();\n+  void check_supertype_obstruction(int specified_supertype_id, const InstanceKlass* specified_supertype, TRAPS);\n","filename":"src\/hotspot\/share\/cds\/classListParser.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    log_warning(cds)(\"DumpLoadedClassList and CDS are not supported in exploded build\");\n+    log_warning(aot)(\"DumpLoadedClassList and CDS are not supported in exploded build\");\n","filename":"src\/hotspot\/share\/cds\/classListWriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-  log_debug(cds, vtables)(\"Copying %3d vtable entries for %s\", n, name);\n+  log_debug(aot, vtables)(\"Copying %3d vtable entries for %s\", n, name);\n@@ -175,1 +175,1 @@\n-  log_debug(cds, vtables)(\"Found   %3d vtable entries for %s\", vtable_len, name);\n+  log_debug(aot, vtables)(\"Found   %3d vtable entries for %s\", vtable_len, name);\n","filename":"src\/hotspot\/share\/cds\/cppVtables.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  LogMessage(cds) msg;\n+  LogMessage(aot) msg;\n","filename":"src\/hotspot\/share\/cds\/dumpAllocStats.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-  if (log_is_enabled(Trace, cds, verification)) {\n+  if (log_is_enabled(Trace, aot, verification)) {\n@@ -76,1 +76,1 @@\n-    log_trace(cds, verification)(\"add_verification_constraint: %s: %s must be subclass of %s [0x%x] array len %d flags len %d\",\n+    log_trace(aot, verification)(\"add_verification_constraint: %s: %s must be subclass of %s [0x%x] array len %d flags len %d\",\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -104,1 +105,1 @@\n-      log_info(cds)(\"Verify %s\", info);\n+      log_info(aot)(\"Verify %s\", info);\n@@ -123,2 +124,2 @@\n-    log_info(cds,dynamic)(\"CDS dynamic dump: clinit = \" JLONG_FORMAT \"ms)\",\n-                          ClassLoader::class_init_time_ms());\n+    log_info(cds, dynamic)(\"CDS dynamic dump: clinit = \" JLONG_FORMAT \"ms)\",\n+                           ClassLoader::class_init_time_ms());\n@@ -139,1 +140,1 @@\n-    log_info(cds)(\"Make classes shareable\");\n+    log_info(aot)(\"Make classes shareable\");\n@@ -164,1 +165,1 @@\n-      log_info(cds)(\"Adjust lambda proxy class dictionary\");\n+      log_info(aot)(\"Adjust lambda proxy class dictionary\");\n@@ -381,1 +382,1 @@\n-  log_debug(cds)(\"Total array klasses gathered for dynamic archive: %d\", DynamicArchive::num_array_klasses());\n+  log_debug(aot)(\"Total array klasses gathered for dynamic archive: %d\", DynamicArchive::num_array_klasses());\n@@ -393,1 +394,1 @@\n-      log_warning(cds)(\"This %s was created with AllowArchivingWithJavaAgent. It should be used \"\n+      aot_log_warning(aot)(\"This %s was created with AllowArchivingWithJavaAgent. It should be used \"\n@@ -448,1 +449,1 @@\n-    log_debug(cds)(\"Total array klasses read from dynamic archive: %d\", _dynamic_archive_array_klasses->length());\n+    log_debug(aot)(\"Total array klasses read from dynamic archive: %d\", _dynamic_archive_array_klasses->length());\n@@ -504,2 +505,2 @@\n-    log_error(cds)(\"Dynamic dump has failed\");\n-    log_error(cds)(\"%s: %s\", ex->klass()->external_name(),\n+    aot_log_error(aot)(\"Dynamic dump has failed\");\n+    aot_log_error(aot)(\"%s: %s\", ex->klass()->external_name(),\n@@ -529,1 +530,1 @@\n-    log_warning(cds)(\"Dynamic archive cannot be used: static archive header checksum verification failed.\");\n+    aot_log_warning(aot)(\"Dynamic archive cannot be used: static archive header checksum verification failed.\");\n@@ -536,1 +537,1 @@\n-      log_warning(cds)(\"Dynamic archive cannot be used: static archive region #%d checksum verification failed.\", i);\n+      aot_log_warning(aot)(\"Dynamic archive cannot be used: static archive region #%d checksum verification failed.\", i);\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -408,1 +409,1 @@\n-      log_warning(cds)(\n+      aot_log_warning(aot)(\n@@ -414,1 +415,1 @@\n-        log_warning(cds)(\n+        aot_log_warning(aot)(\n@@ -469,1 +470,1 @@\n-      log_info(cds)(\"Specified %s not found (%s)\", CDSConfig::type_of_archive_being_loaded(), _archive_name);\n+      aot_log_info(aot)(\"Specified %s not found (%s)\", CDSConfig::type_of_archive_being_loaded(), _archive_name);\n@@ -486,1 +487,1 @@\n-      log_warning(cds)(\"Unable to read generic CDS file map header from %s\", file_type);\n+      aot_log_warning(aot)(\"Unable to read generic CDS file map header from %s\", file_type);\n@@ -493,1 +494,1 @@\n-      log_warning(cds)(\"The %s has a bad magic number: %#x\", file_type, gen_header._magic);\n+      aot_log_warning(aot)(\"The %s has a bad magic number: %#x\", file_type, gen_header._magic);\n@@ -498,1 +499,1 @@\n-      log_warning(cds)(\"Cannot handle %s version 0x%x. Must be at least 0x%x.\",\n+      aot_log_warning(aot)(\"Cannot handle %s version 0x%x. Must be at least 0x%x.\",\n@@ -504,1 +505,1 @@\n-      log_warning(cds)(\"The %s version 0x%x does not match the required version 0x%x.\",\n+      aot_log_warning(aot)(\"The %s version 0x%x does not match the required version 0x%x.\",\n@@ -510,1 +511,1 @@\n-      log_warning(cds)(\"Archive file header larger than archive file\");\n+      aot_log_warning(aot)(\"Archive file header larger than archive file\");\n@@ -520,1 +521,1 @@\n-      log_warning(cds)(\"Unable to read file map header from %s\", file_type);\n+      aot_log_warning(aot)(\"Unable to read file map header from %s\", file_type);\n@@ -565,3 +566,3 @@\n-        log_info(cds)(\"_crc expected: %d\", header->crc());\n-        log_info(cds)(\"       actual: %d\", actual_crc);\n-        log_warning(cds)(\"Header checksum verification failed.\");\n+        aot_log_info(aot)(\"_crc expected: %d\", header->crc());\n+        aot_log_info(aot)(\"       actual: %d\", actual_crc);\n+        aot_log_warning(aot)(\"Header checksum verification failed.\");\n@@ -580,1 +581,1 @@\n-      log_warning(cds)(\"base_archive_name offset\/size overflow: \" UINT32_FORMAT \"\/\" UINT32_FORMAT,\n+      aot_log_warning(aot)(\"base_archive_name offset\/size overflow: \" UINT32_FORMAT \"\/\" UINT32_FORMAT,\n@@ -587,1 +588,1 @@\n-        log_warning(cds)(\"static shared archive must have zero _base_archive_name_offset\");\n+        aot_log_warning(aot)(\"static shared archive must have zero _base_archive_name_offset\");\n@@ -591,1 +592,1 @@\n-        log_warning(cds)(\"static shared archive must have zero _base_archive_name_size\");\n+        aot_log_warning(aot)(\"static shared archive must have zero _base_archive_name_size\");\n@@ -599,1 +600,1 @@\n-        log_warning(cds)(\"Invalid base_archive_name offset\/size: \" UINT32_FORMAT \"\/\" UINT32_FORMAT,\n+        aot_log_warning(aot)(\"Invalid base_archive_name offset\/size: \" UINT32_FORMAT \"\/\" UINT32_FORMAT,\n@@ -605,1 +606,1 @@\n-          log_warning(cds)(\"Invalid base_archive_name offset\/size (out of range): \"\n+          aot_log_warning(aot)(\"Invalid base_archive_name offset\/size (out of range): \"\n@@ -612,1 +613,1 @@\n-          log_warning(cds)(\"Base archive name is damaged\");\n+          aot_log_warning(aot)(\"Base archive name is damaged\");\n@@ -616,1 +617,1 @@\n-          log_warning(cds)(\"Base archive %s does not exist\", name);\n+          aot_log_warning(aot)(\"Base archive %s does not exist\", name);\n@@ -651,1 +652,1 @@\n-     log_warning(cds)(\"AutoCreateSharedArchive is ignored because %s is a static archive\", archive_name);\n+     aot_log_warning(aot)(\"AutoCreateSharedArchive is ignored because %s is a static archive\", archive_name);\n@@ -679,1 +680,1 @@\n-    log_warning(cds)(\"Unable to read the file header.\");\n+    aot_log_warning(aot)(\"Unable to read the file header.\");\n@@ -691,1 +692,1 @@\n-        log_warning(cds)(\"Not a valid %s (%s)\", file_type, _full_path);\n+        aot_log_warning(aot)(\"Not a valid %s (%s)\", file_type, _full_path);\n@@ -693,1 +694,1 @@\n-        log_warning(cds)(\"Not a base shared archive: %s\", _full_path);\n+        aot_log_warning(aot)(\"Not a base shared archive: %s\", _full_path);\n@@ -699,1 +700,1 @@\n-      log_warning(cds)(\"Not a top shared archive: %s\", _full_path);\n+      aot_log_warning(aot)(\"Not a top shared archive: %s\", _full_path);\n@@ -709,1 +710,1 @@\n-    log_warning(cds)(\"Failed to read file header from the top archive file\\n\");\n+    aot_log_warning(aot)(\"Failed to read file header from the top archive file\\n\");\n@@ -714,3 +715,3 @@\n-    log_info(cds)(\"_version expected: 0x%x\", CURRENT_CDS_ARCHIVE_VERSION);\n-    log_info(cds)(\"           actual: 0x%x\", header()->version());\n-    log_warning(cds)(\"The %s has the wrong version.\", file_type);\n+    aot_log_info(aot)(\"_version expected: 0x%x\", CURRENT_CDS_ARCHIVE_VERSION);\n+    aot_log_info(aot)(\"           actual: 0x%x\", header()->version());\n+    aot_log_warning(aot)(\"The %s has the wrong version.\", file_type);\n@@ -725,4 +726,4 @@\n-      log_info(cds)(\"_header_size: \" UINT32_FORMAT, header_size);\n-      log_info(cds)(\"base_archive_name_size: \" UINT32_FORMAT, header()->base_archive_name_size());\n-      log_info(cds)(\"base_archive_name_offset: \" UINT32_FORMAT, header()->base_archive_name_offset());\n-      log_warning(cds)(\"The %s has an incorrect header size.\", file_type);\n+      aot_log_info(aot)(\"_header_size: \" UINT32_FORMAT, header_size);\n+      aot_log_info(aot)(\"base_archive_name_size: \" UINT32_FORMAT, header()->base_archive_name_size());\n+      aot_log_info(aot)(\"base_archive_name_offset: \" UINT32_FORMAT, header()->base_archive_name_offset());\n+      aot_log_warning(aot)(\"The %s has an incorrect header size.\", file_type);\n@@ -736,1 +737,1 @@\n-    log_warning(cds)(\"JVM version identifier is corrupted.\");\n+    aot_log_warning(aot)(\"JVM version identifier is corrupted.\");\n@@ -743,3 +744,3 @@\n-    log_info(cds)(\"_jvm_ident expected: %s\", expected_ident);\n-    log_info(cds)(\"             actual: %s\", actual_ident);\n-    log_warning(cds)(\"The %s was created by a different\"\n+    aot_log_info(aot)(\"_jvm_ident expected: %s\", expected_ident);\n+    aot_log_info(aot)(\"             actual: %s\", actual_ident);\n+    aot_log_warning(aot)(\"The %s was created by a different\"\n@@ -757,1 +758,1 @@\n-      log_warning(cds)(\"The %s has been truncated.\", file_type);\n+      aot_log_warning(aot)(\"The %s has been truncated.\", file_type);\n@@ -771,1 +772,1 @@\n-    log_error(cds)(\"Unable to seek to position %zu\", pos);\n+    aot_log_error(aot)(\"Unable to seek to position %zu\", pos);\n@@ -784,1 +785,1 @@\n-  log_info(cds)(\"trying to map %s%s\", info, _full_path);\n+  aot_log_info(aot)(\"trying to map %s%s\", info, _full_path);\n@@ -788,1 +789,1 @@\n-      log_info(cds)(\"Specified %s not found (%s)\", file_type, _full_path);\n+      aot_log_info(aot)(\"Specified %s not found (%s)\", file_type, _full_path);\n@@ -790,1 +791,1 @@\n-      log_warning(cds)(\"Failed to open %s (%s)\", file_type,\n+      aot_log_warning(aot)(\"Failed to open %s (%s)\", file_type,\n@@ -795,1 +796,1 @@\n-    log_info(cds)(\"Opened %s %s.\", file_type, _full_path);\n+    aot_log_info(aot)(\"Opened %s %s.\", file_type, _full_path);\n@@ -806,2 +807,1 @@\n-  LogMessage(cds) msg;\n-  if (msg.is_info()) {\n+  if (CDSConfig::new_aot_flags_used()) {\n@@ -809,1 +809,1 @@\n-      msg.info(\"Writing binary AOTConfiguration file: \");\n+      log_info(aot)(\"Writing binary AOTConfiguration file: %s\",  _full_path);\n@@ -811,1 +811,1 @@\n-      msg.info(\"Dumping shared data to file: \");\n+      log_info(aot)(\"Writing binary AOTConfiguration file: %s\",  _full_path);\n@@ -813,1 +813,2 @@\n-    msg.info(\"   %s\", _full_path);\n+  } else {\n+    aot_log_info(aot)(\"Dumping shared data to file: %s\", _full_path);\n@@ -825,1 +826,1 @@\n-    log_error(cds)(\"Unable to create %s %s: (%s).\", CDSConfig::type_of_archive_being_written(), _full_path,\n+    aot_log_error(aot)(\"Unable to create %s %s: (%s).\", CDSConfig::type_of_archive_being_written(), _full_path,\n@@ -891,1 +892,1 @@\n-    log_warning(cds)(\"Checksum verification failed.\");\n+    aot_log_warning(aot)(\"Checksum verification failed.\");\n@@ -913,1 +914,1 @@\n-  log_debug(cds, reloc)(\"mapped %s relocation %smap @ \" INTPTR_FORMAT \" (%zu bits)\",\n+  aot_log_debug(aot, reloc)(\"mapped %s relocation %smap @ \" INTPTR_FORMAT \" (%zu bits)\",\n@@ -981,1 +982,1 @@\n-    log_info(cds)(\"Shared file region (%s) %d: %8zu\"\n+    aot_log_info(aot)(\"Shared file region (%s) %d: %8zu\"\n@@ -986,1 +987,1 @@\n-     log_info(cds)(\"Shared file region (%s) %d: %8zu\"\n+     aot_log_info(aot)(\"Shared file region (%s) %d: %8zu\"\n@@ -1177,1 +1178,1 @@\n-    log_error(cds)(\"Unable to remap shared readonly space (errno=%d).\", errno);\n+    aot_log_error(aot)(\"Unable to remap shared readonly space (errno=%d).\", errno);\n@@ -1181,1 +1182,1 @@\n-    log_error(cds)(\"Unable to remap shared readonly space (errno=%d).\", errno);\n+    aot_log_error(aot)(\"Unable to remap shared readonly space (errno=%d).\", errno);\n@@ -1212,1 +1213,1 @@\n-    log_info(cds)(\"Mapped %s region #%d at base \" INTPTR_FORMAT \" top \" INTPTR_FORMAT \" (%s)\", is_static() ? \"static \" : \"dynamic\",\n+    aot_log_info(aot)(\"Mapped %s region #%d at base \" INTPTR_FORMAT \" top \" INTPTR_FORMAT \" (%s)\", is_static() ? \"static \" : \"dynamic\",\n@@ -1229,1 +1230,1 @@\n-    log_info(cds)(\"Commit %s region #%d at base \" INTPTR_FORMAT \" top \" INTPTR_FORMAT \" (%s)%s\",\n+    aot_log_info(aot)(\"Commit %s region #%d at base \" INTPTR_FORMAT \" top \" INTPTR_FORMAT \" (%s)%s\",\n@@ -1233,1 +1234,1 @@\n-      log_error(cds)(\"Failed to commit %s region #%d (%s)\", is_static() ? \"static \" : \"dynamic\",\n+      aot_log_error(aot)(\"Failed to commit %s region #%d (%s)\", is_static() ? \"static \" : \"dynamic\",\n@@ -1282,1 +1283,1 @@\n-      log_info(cds)(\"Failed to read %s shared space into reserved space at \" INTPTR_FORMAT,\n+      aot_log_info(aot)(\"Failed to read %s shared space into reserved space at \" INTPTR_FORMAT,\n@@ -1296,1 +1297,1 @@\n-      log_info(cds)(\"Unable to map %s shared space at \" INTPTR_FORMAT,\n+      aot_log_info(aot)(\"Unable to map %s shared space at \" INTPTR_FORMAT,\n@@ -1336,1 +1337,1 @@\n-    log_error(cds)(\"relocation bitmap CRC error\");\n+    aot_log_error(aot)(\"relocation bitmap CRC error\");\n@@ -1345,1 +1346,1 @@\n-  log_info(cds)(\"Mapped %s region #%d at base \" INTPTR_FORMAT \" top \" INTPTR_FORMAT \" (%s)\",\n+  aot_log_info(aot)(\"Mapped %s region #%d at base \" INTPTR_FORMAT \" top \" INTPTR_FORMAT \" (%s)\",\n@@ -1362,1 +1363,1 @@\n-      log_info(cds)(\"Failed to read aot code shared space into reserved space at \" INTPTR_FORMAT,\n+      aot_log_info(aot)(\"Failed to read aot code shared space into reserved space at \" INTPTR_FORMAT,\n@@ -1375,1 +1376,1 @@\n-    log_info(cds)(\"failed to map aot code region\");\n+    aot_log_info(aot)(\"failed to map aot code region\");\n@@ -1381,1 +1382,1 @@\n-    log_info(cds)(\"Mapped static  region #%d at base \" INTPTR_FORMAT \" top \" INTPTR_FORMAT \" (%s)\",\n+    aot_log_info(aot)(\"Mapped static  region #%d at base \" INTPTR_FORMAT \" top \" INTPTR_FORMAT \" (%s)\",\n@@ -1417,1 +1418,1 @@\n-  log_debug(cds, reloc)(\"runtime archive relocation start\");\n+  aot_log_debug(aot, reloc)(\"runtime archive relocation start\");\n@@ -1464,1 +1465,1 @@\n-    log_debug(cds, reloc)(\"runtime archive relocation done\");\n+    aot_log_debug(aot, reloc)(\"runtime archive relocation done\");\n@@ -1513,1 +1514,1 @@\n-  log_info(cds)(\"Requested heap region [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] = %8zu bytes\",\n+  aot_log_info(aot)(\"Requested heap region [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] = %8zu bytes\",\n@@ -1543,1 +1544,1 @@\n-      log_error(cds)(\"%s has aot-linked classes but the archived \"\n+      aot_log_error(aot)(\"%s has aot-linked classes but the archived \"\n@@ -1577,1 +1578,1 @@\n-  log_info(cds)(\"CDS archive was created with max heap size = %zuM, and the following configuration:\",\n+  aot_log_info(aot)(\"CDS archive was created with max heap size = %zuM, and the following configuration:\",\n@@ -1579,1 +1580,1 @@\n-  log_info(cds)(\"    narrow_klass_base at mapping start address, narrow_klass_pointer_bits = %d, narrow_klass_shift = %d\",\n+  aot_log_info(aot)(\"    narrow_klass_base at mapping start address, narrow_klass_pointer_bits = %d, narrow_klass_shift = %d\",\n@@ -1581,1 +1582,1 @@\n-  log_info(cds)(\"    narrow_oop_mode = %d, narrow_oop_base = \" PTR_FORMAT \", narrow_oop_shift = %d\",\n+  aot_log_info(aot)(\"    narrow_oop_mode = %d, narrow_oop_base = \" PTR_FORMAT \", narrow_oop_shift = %d\",\n@@ -1583,1 +1584,1 @@\n-  log_info(cds)(\"The current max heap size = %zuM, G1HeapRegion::GrainBytes = %zu\",\n+  aot_log_info(aot)(\"The current max heap size = %zuM, G1HeapRegion::GrainBytes = %zu\",\n@@ -1585,1 +1586,1 @@\n-  log_info(cds)(\"    narrow_klass_base = \" PTR_FORMAT \", arrow_klass_pointer_bits = %d, narrow_klass_shift = %d\",\n+  aot_log_info(aot)(\"    narrow_klass_base = \" PTR_FORMAT \", arrow_klass_pointer_bits = %d, narrow_klass_shift = %d\",\n@@ -1587,1 +1588,1 @@\n-  log_info(cds)(\"    narrow_oop_mode = %d, narrow_oop_base = \" PTR_FORMAT \", narrow_oop_shift = %d\",\n+  aot_log_info(aot)(\"    narrow_oop_mode = %d, narrow_oop_base = \" PTR_FORMAT \", narrow_oop_shift = %d\",\n@@ -1589,1 +1590,1 @@\n-  log_info(cds)(\"    heap range = [\" PTR_FORMAT \" - \"  PTR_FORMAT \"]\",\n+  aot_log_info(aot)(\"    heap range = [\" PTR_FORMAT \" - \"  PTR_FORMAT \"]\",\n@@ -1616,5 +1617,14 @@\n-    LogTarget(Info, cds) lt;\n-    if (lt.is_enabled()) {\n-      LogStream ls(lt);\n-      ls.print_raw(ss.base());\n-      header()->print(&ls);\n+    if (CDSConfig::new_aot_flags_used()) {\n+      LogTarget(Info, aot) lt;\n+      if (lt.is_enabled()) {\n+        LogStream ls(lt);\n+        ls.print_raw(ss.base());\n+        header()->print(&ls);\n+      }\n+    } else {\n+      LogTarget(Info, cds) lt;\n+      if (lt.is_enabled()) {\n+        LogStream ls(lt);\n+        ls.print_raw(ss.base());\n+        header()->print(&ls);\n+      }\n@@ -1707,1 +1717,1 @@\n-  log_info(cds)(\"Preferred address to map heap data (to avoid relocation) is \" INTPTR_FORMAT, p2i(requested_start));\n+  aot_log_info(aot)(\"Preferred address to map heap data (to avoid relocation) is \" INTPTR_FORMAT, p2i(requested_start));\n@@ -1728,1 +1738,1 @@\n-      log_error(cds)(\"Failed to read archived heap region into \" INTPTR_FORMAT, p2i(addr));\n+      aot_log_error(aot)(\"Failed to read archived heap region into \" INTPTR_FORMAT, p2i(addr));\n@@ -1739,1 +1749,1 @@\n-      log_info(cds)(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n+      aot_log_info(aot)(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n@@ -1777,1 +1787,1 @@\n-  log_info(cds)(\"Heap data mapped at \" INTPTR_FORMAT \", size = %8zu bytes\",\n+  aot_log_info(aot)(\"Heap data mapped at \" INTPTR_FORMAT \", size = %8zu bytes\",\n@@ -1779,1 +1789,1 @@\n-  log_info(cds)(\"CDS heap data relocation delta = %zd bytes\", delta);\n+  aot_log_info(aot)(\"CDS heap data relocation delta = %zd bytes\", delta);\n@@ -1839,1 +1849,1 @@\n-      log_info(cds)(\"Unmapping region #%d at base \" INTPTR_FORMAT \" (%s)\", i, p2i(mapped_base),\n+      aot_log_info(aot)(\"Unmapping region #%d at base \" INTPTR_FORMAT \" (%s)\", i, p2i(mapped_base),\n@@ -1844,1 +1854,1 @@\n-        log_info(cds)(\"Region #%d (%s) is in a reserved space, it will be freed when the space is released\", i, shared_region_name[i]);\n+        aot_log_info(aot)(\"Region #%d (%s) is in a reserved space, it will be freed when the space is released\", i, shared_region_name[i]);\n@@ -1911,1 +1921,1 @@\n-      log_error(cds)(\"%s has aot-linked classes. It cannot be used when JVMTI ClassFileLoadHook is in use.\",\n+      aot_log_error(aot)(\"%s has aot-linked classes. It cannot be used when JVMTI ClassFileLoadHook is in use.\",\n@@ -1916,1 +1926,1 @@\n-      log_error(cds)(\"%s has aot-linked classes. It cannot be used when JVMTI early vm start is in use.\",\n+      aot_log_error(aot)(\"%s has aot-linked classes. It cannot be used when JVMTI early vm start is in use.\",\n@@ -1921,1 +1931,1 @@\n-      log_error(cds)(\"%s has aot-linked classes. It cannot be used when archived full module graph is not used.\",\n+      aot_log_error(aot)(\"%s has aot-linked classes. It cannot be used when archived full module graph is not used.\",\n@@ -1928,1 +1938,1 @@\n-      log_error(cds)(\"%s has aot-linked classes. It cannot be used with -Djava.security.manager=%s.\",\n+      aot_log_error(aot)(\"%s has aot-linked classes. It cannot be used with -Djava.security.manager=%s.\",\n@@ -1935,1 +1945,1 @@\n-      log_error(cds)(\"%s has aot-linked classes. It cannot be used with JDWP agent\", archive_type);\n+      aot_log_error(aot)(\"%s has aot-linked classes. It cannot be used with JDWP agent\", archive_type);\n@@ -1977,1 +1987,1 @@\n-    log_info(cds)(\"The %s's ObjectAlignmentInBytes of %d\"\n+    aot_log_info(aot)(\"The %s's ObjectAlignmentInBytes of %d\"\n@@ -1983,1 +1993,1 @@\n-    log_info(cds)(\"The %s's CompactStrings setting (%s)\"\n+    aot_log_info(aot)(\"The %s's CompactStrings setting (%s)\"\n@@ -1995,1 +2005,1 @@\n-      log_error(cds)(\"%s has aot-linked classes. It cannot be used when the \"\n+      aot_log_error(aot)(\"%s has aot-linked classes. It cannot be used when the \"\n@@ -1999,1 +2009,1 @@\n-    log_warning(cds)(\"Archived non-system classes are disabled because the \"\n+    aot_log_warning(aot)(\"Archived non-system classes are disabled because the \"\n@@ -2008,1 +2018,1 @@\n-    log_info(cds)(\"The %s's BytecodeVerificationLocal setting (%s)\"\n+    aot_log_info(aot)(\"The %s's BytecodeVerificationLocal setting (%s)\"\n@@ -2020,1 +2030,1 @@\n-    log_info(cds)(\"The %s was created with less restrictive \"\n+    aot_log_info(aot)(\"The %s was created with less restrictive \"\n@@ -2032,1 +2042,1 @@\n-    log_warning(cds)(\"The setting of the AllowArchivingWithJavaAgent is different \"\n+    aot_log_warning(aot)(\"The setting of the AllowArchivingWithJavaAgent is different \"\n@@ -2038,1 +2048,1 @@\n-    log_warning(cds)(\"This %s was created with AllowArchivingWithJavaAgent. It should be used \"\n+    aot_log_warning(aot)(\"This %s was created with AllowArchivingWithJavaAgent. It should be used \"\n@@ -2042,1 +2052,1 @@\n-  log_info(cds)(\"The %s was created with UseCompressedOops = %d, UseCompressedClassPointers = %d, UseCompactObjectHeaders = %d\",\n+  aot_log_info(aot)(\"The %s was created with UseCompressedOops = %d, UseCompressedClassPointers = %d, UseCompactObjectHeaders = %d\",\n@@ -2045,1 +2055,1 @@\n-    log_warning(cds)(\"Unable to use %s.\\nThe saved state of UseCompressedOops and UseCompressedClassPointers is \"\n+    aot_log_warning(aot)(\"Unable to use %s.\\nThe saved state of UseCompressedOops and UseCompressedClassPointers is \"\n@@ -2069,1 +2079,1 @@\n-    log_warning(cds)(\"Unable to use %s.\\nThe %s's UseCompactObjectHeaders setting (%s)\"\n+    aot_log_warning(aot)(\"Unable to use %s.\\nThe %s's UseCompactObjectHeaders setting (%s)\"\n@@ -2078,1 +2088,1 @@\n-    log_info(cds)(\"optimized module handling: disabled because archive was created without optimized module handling\");\n+    aot_log_info(aot)(\"optimized module handling: disabled because archive was created without optimized module handling\");\n@@ -2166,1 +2176,1 @@\n-  log_debug(cds, jvmti)(\"classfile data for %s [%d: %s] = %d bytes\", class_name, path_index,\n+  log_debug(aot, jvmti)(\"classfile data for %s [%d: %s] = %d bytes\", class_name, path_index,\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":115,"deletions":105,"binary":false,"changes":220,"status":"modified"},{"patch":"@@ -184,3 +184,3 @@\n-          log_error(cds)(\"Unable to resolve class from CDS archive: %s\", ik->external_name());\n-          log_error(cds)(\"Expected: \" INTPTR_FORMAT \", actual: \" INTPTR_FORMAT, p2i(ik), p2i(actual));\n-          log_error(cds)(\"Please check if your VM command-line is the same as in the training run\");\n+          log_error(aot)(\"Unable to resolve class from CDS archive: %s\", ik->external_name());\n+          log_error(aot)(\"Expected: \" INTPTR_FORMAT \", actual: \" INTPTR_FORMAT, p2i(ik), p2i(actual));\n+          log_error(aot)(\"Please check if your VM command-line is the same as in the training run\");\n@@ -208,1 +208,1 @@\n-      log_error(cds)(\"%s: %s\", PENDING_EXCEPTION->klass()->external_name(),\n+      log_error(aot)(\"%s: %s\", PENDING_EXCEPTION->klass()->external_name(),\n@@ -210,2 +210,2 @@\n-      log_error(cds)(\"Please check if your VM command-line is the same as in the training run\");\n-      MetaspaceShared::unrecoverable_writing_error(\"Unexpected exception, use -Xlog:cds,exceptions=trace for detail\");\n+      log_error(aot)(\"Please check if your VM command-line is the same as in the training run\");\n+      MetaspaceShared::unrecoverable_writing_error(\"Unexpected exception, use -Xlog:aot,exceptions=trace for detail\");\n","filename":"src\/hotspot\/share\/cds\/finalImageRecipes.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -177,1 +178,1 @@\n-      if (log_is_enabled(Debug, cds)) {\n+      if (log_is_enabled(Debug, aot)) {\n@@ -179,1 +180,1 @@\n-        log_debug(cds)(\"  calling %s\", method->name_and_sig_as_C_string());\n+        log_debug(aot)(\"  calling %s\", method->name_and_sig_as_C_string());\n@@ -191,1 +192,1 @@\n-  log_debug(cds)(\"Resetting platform loader\");\n+  log_debug(aot)(\"Resetting platform loader\");\n@@ -193,1 +194,1 @@\n-  log_debug(cds)(\"Resetting system loader\");\n+  log_debug(aot)(\"Resetting system loader\");\n@@ -203,1 +204,1 @@\n-  log_debug(cds)(\"Resetting boot loader\");\n+  log_debug(aot)(\"Resetting boot loader\");\n@@ -280,1 +281,1 @@\n-    if (log_is_enabled(Debug, cds, heap)) {\n+    if (log_is_enabled(Debug, aot, heap)) {\n@@ -282,1 +283,1 @@\n-      log_debug(cds, heap)(\"Clearing root %d: was \" PTR_FORMAT, index, p2i(old));\n+      log_debug(aot, heap)(\"Clearing root %d: was \" PTR_FORMAT, index, p2i(old));\n@@ -297,1 +298,1 @@\n-    log_debug(cds, heap)(\"Cannot archive, object (\" PTR_FORMAT \") is too large: %zu\",\n+    log_debug(aot, heap)(\"Cannot archive, object (\" PTR_FORMAT \") is too large: %zu\",\n@@ -345,1 +346,1 @@\n-    if (log_is_enabled(Debug, cds, heap)) {\n+    if (log_is_enabled(Debug, aot, heap)) {\n@@ -347,1 +348,1 @@\n-      LogTarget(Debug, cds, heap) log;\n+      LogTarget(Debug, aot, heap) log;\n@@ -572,1 +573,1 @@\n-  if (log_is_enabled(Debug, cds, init)) {\n+  if (log_is_enabled(Debug, aot, init)) {\n@@ -574,1 +575,1 @@\n-    log_debug(cds, init)(\"copied %3d field(s) in aot-initialized mirror %s%s%s\", nfields, ik->external_name(),\n+    log_debug(aot, init)(\"copied %3d field(s) in aot-initialized mirror %s%s%s\", nfields, ik->external_name(),\n@@ -657,1 +658,1 @@\n-      log_info(cds)(\"Heap range = [\" PTR_FORMAT \" - \"  PTR_FORMAT \"]\",\n+      aot_log_info(aot)(\"Heap range = [\" PTR_FORMAT \" - \"  PTR_FORMAT \"]\",\n@@ -820,1 +821,1 @@\n-  if (log_is_enabled(Debug, cds, heap)) {\n+  if (log_is_enabled(Debug, aot, heap)) {\n@@ -823,1 +824,1 @@\n-      log_debug(cds, heap)(\"Adding klass %s\", orig_k->external_name());\n+      log_debug(aot, heap)(\"Adding klass %s\", orig_k->external_name());\n@@ -866,1 +867,1 @@\n-  log_error(cds, heap)(\"Class %s not allowed in archive heap. Must be in java.base%s%s\",\n+  log_error(aot, heap)(\"Class %s not allowed in archive heap. Must be in java.base%s%s\",\n@@ -878,1 +879,1 @@\n-      log_info(cds, heap)(\"non-early: %s\", k->external_name());\n+      log_info(aot, heap)(\"non-early: %s\", k->external_name());\n@@ -906,1 +907,1 @@\n-    log_info(cds, heap)(\n+    log_info(aot, heap)(\n@@ -945,1 +946,1 @@\n-      if (log_is_enabled(Info, cds, heap)) {\n+      if (log_is_enabled(Info, aot, heap)) {\n@@ -951,1 +952,1 @@\n-        log_info(cds, heap)(\n+        log_info(aot, heap)(\n@@ -1020,1 +1021,1 @@\n-  if (log_is_enabled(Info, cds, heap)) {\n+  if (log_is_enabled(Info, aot, heap)) {\n@@ -1055,1 +1056,1 @@\n-    log_info(cds, heap)(\"Verify heap %s initializing static field(s) in %s\",\n+    log_info(aot, heap)(\"Verify heap %s initializing static field(s) in %s\",\n@@ -1069,1 +1070,1 @@\n-      log_info(cds, heap)(\"Trigger GC %s initializing static field(s) in %s\",\n+      log_info(aot, heap)(\"Trigger GC %s initializing static field(s) in %s\",\n@@ -1188,1 +1189,1 @@\n-    log_info(cds, heap)(\"Skip initializing ArchivedModuleGraph subgraph: is_using_optimized_module_handling=%s num_module_paths=%d\",\n+    log_info(aot, heap)(\"Skip initializing ArchivedModuleGraph subgraph: is_using_optimized_module_handling=%s num_module_paths=%d\",\n@@ -1231,1 +1232,1 @@\n-    if (log_is_enabled(Info, cds, heap)) {\n+    if (log_is_enabled(Info, aot, heap)) {\n@@ -1233,1 +1234,1 @@\n-      log_info(cds, heap)(\"subgraph %s is not recorded\",\n+      log_info(aot, heap)(\"subgraph %s is not recorded\",\n@@ -1239,1 +1240,1 @@\n-      if (log_is_enabled(Info, cds, heap)) {\n+      if (log_is_enabled(Info, aot, heap)) {\n@@ -1241,1 +1242,1 @@\n-        log_info(cds, heap)(\"subgraph %s cannot be used because full module graph is disabled\",\n+        log_info(aot, heap)(\"subgraph %s cannot be used because full module graph is disabled\",\n@@ -1248,1 +1249,1 @@\n-      if (log_is_enabled(Info, cds, heap)) {\n+      if (log_is_enabled(Info, aot, heap)) {\n@@ -1250,1 +1251,1 @@\n-        log_info(cds, heap)(\"subgraph %s cannot be used because JVMTI ClassFileLoadHook is enabled\",\n+        log_info(aot, heap)(\"subgraph %s cannot be used because JVMTI ClassFileLoadHook is enabled\",\n@@ -1256,1 +1257,1 @@\n-    if (log_is_enabled(Info, cds, heap)) {\n+    if (log_is_enabled(Info, aot, heap)) {\n@@ -1258,1 +1259,1 @@\n-      log_info(cds, heap)(\"%s subgraph %s \", do_init ? \"init\" : \"resolve\", k->external_name());\n+      log_info(aot, heap)(\"%s subgraph %s \", do_init ? \"init\" : \"resolve\", k->external_name());\n@@ -1330,1 +1331,1 @@\n-      log_debug(cds, heap)(\"  \" PTR_FORMAT \" init field @ %2d = \" PTR_FORMAT, p2i(k), field_offset, p2i(v));\n+      log_debug(aot, heap)(\"  \" PTR_FORMAT \" init field @ %2d = \" PTR_FORMAT, p2i(k), field_offset, p2i(v));\n@@ -1335,1 +1336,1 @@\n-    if (log_is_enabled(Info, cds, heap)) {\n+    if (log_is_enabled(Info, aot, heap)) {\n@@ -1337,1 +1338,1 @@\n-      log_info(cds, heap)(\"initialize_from_archived_subgraph %s \" PTR_FORMAT \"%s%s\",\n+      log_info(aot, heap)(\"initialize_from_archived_subgraph %s \" PTR_FORMAT \"%s%s\",\n@@ -1409,1 +1410,1 @@\n-      if (!_record_klasses_only && log_is_enabled(Debug, cds, heap)) {\n+      if (!_record_klasses_only && log_is_enabled(Debug, aot, heap)) {\n@@ -1411,1 +1412,1 @@\n-        log_debug(cds, heap)(\"(%d) %s[%d] ==> \" PTR_FORMAT \" size %zu %s\", _level,\n+        log_debug(aot, heap)(\"(%d) %s[%d] ==> \" PTR_FORMAT \" size %zu %s\", _level,\n@@ -1414,2 +1415,2 @@\n-        if (log_is_enabled(Trace, cds, heap)) {\n-          LogTarget(Trace, cds, heap) log;\n+        if (log_is_enabled(Trace, aot, heap)) {\n+          LogTarget(Trace, aot, heap) log;\n@@ -1502,1 +1503,1 @@\n-    log_error(cds, heap)(\"Cannot archive object \" PTR_FORMAT \" of class %s\", p2i(orig_obj), orig_obj->klass()->external_name());\n+    log_error(aot, heap)(\"Cannot archive object \" PTR_FORMAT \" of class %s\", p2i(orig_obj), orig_obj->klass()->external_name());\n@@ -1507,1 +1508,1 @@\n-  if (log_is_enabled(Debug, cds, heap) && java_lang_Class::is_instance(orig_obj)) {\n+  if (log_is_enabled(Debug, aot, heap) && java_lang_Class::is_instance(orig_obj)) {\n@@ -1509,1 +1510,1 @@\n-    LogTarget(Debug, cds, heap) log;\n+    LogTarget(Debug, aot, heap) log;\n@@ -1548,1 +1549,1 @@\n-      log_error(cds, heap)(\"(%d) Unknown java.lang.Class object is in the archived sub-graph\", level);\n+      log_error(aot, heap)(\"(%d) Unknown java.lang.Class object is in the archived sub-graph\", level);\n@@ -1568,1 +1569,1 @@\n-      log_error(cds, heap)(\n+      log_error(aot, heap)(\n@@ -1653,1 +1654,1 @@\n-  log_debug(cds, heap)(\"Start archiving from: %s::%s (\" PTR_FORMAT \")\", klass_name, field_name, p2i(f));\n+  log_debug(aot, heap)(\"Start archiving from: %s::%s (\" PTR_FORMAT \")\", klass_name, field_name, p2i(f));\n@@ -1656,2 +1657,2 @@\n-    if (log_is_enabled(Trace, cds, heap)) {\n-      LogTarget(Trace, cds, heap) log;\n+    if (log_is_enabled(Trace, aot, heap)) {\n+      LogTarget(Trace, aot, heap) log;\n@@ -1664,1 +1665,1 @@\n-      log_error(cds, heap)(\"Archiving failed %s::%s (some reachable objects cannot be archived)\",\n+      log_error(aot, heap)(\"Archiving failed %s::%s (some reachable objects cannot be archived)\",\n@@ -1671,1 +1672,1 @@\n-      log_info(cds, heap)(\"Archived field %s::%s => \" PTR_FORMAT, klass_name, field_name, p2i(f));\n+      log_info(aot, heap)(\"Archived field %s::%s => \" PTR_FORMAT, klass_name, field_name, p2i(f));\n@@ -1790,1 +1791,1 @@\n-  log_info(cds, heap)(\"Start recording subgraph(s) for archived fields in %s\", class_name);\n+  log_info(aot, heap)(\"Start recording subgraph(s) for archived fields in %s\", class_name);\n@@ -1801,1 +1802,1 @@\n-  log_info(cds, heap)(\"Done recording subgraph(s) for archived fields in %s: \"\n+  log_info(aot, heap)(\"Done recording subgraph(s) for archived fields in %s: \"\n@@ -1853,1 +1854,1 @@\n-      log_warning(cds)(\"Loading ArchiveHeapTestClass %s ...\", test_class_name);\n+      log_warning(aot)(\"Loading ArchiveHeapTestClass %s ...\", test_class_name);\n@@ -1901,1 +1902,1 @@\n-      log_warning(cds)(\"Initializing ArchiveHeapTestClass %s ...\", test_class_name);\n+      log_warning(aot)(\"Initializing ArchiveHeapTestClass %s ...\", test_class_name);\n@@ -2057,1 +2058,1 @@\n-  log_info(cds, heap)(\"Archived subgraph records = %d\",\n+  log_info(aot, heap)(\"Archived subgraph records = %d\",\n@@ -2059,3 +2060,3 @@\n-  log_info(cds, heap)(\"  Walked %d objects\", _num_total_walked_objs);\n-  log_info(cds, heap)(\"  Archived %d objects\", _num_total_archived_objs);\n-  log_info(cds, heap)(\"  Recorded %d klasses\", _num_total_recorded_klasses);\n+  log_info(aot, heap)(\"  Walked %d objects\", _num_total_walked_objs);\n+  log_info(aot, heap)(\"  Archived %d objects\", _num_total_archived_objs);\n+  log_info(aot, heap)(\"  Recorded %d klasses\", _num_total_recorded_klasses);\n@@ -2068,1 +2069,1 @@\n-  log_info(cds, heap)(\"  Verified %d references\", _num_total_verifications);\n+  log_info(aot, heap)(\"  Verified %d references\", _num_total_verifications);\n@@ -2095,1 +2096,1 @@\n-    LogStream ls(Log(cds, heap)::error());\n+    LogStream ls(Log(aot, heap)::error());\n@@ -2168,1 +2169,1 @@\n-    log_info(cds, heap)(\"%8zu objects are <= %-6zu\"\n+    log_info(aot, heap)(\"%8zu objects are <= %-6zu\"\n@@ -2175,1 +2176,1 @@\n-  log_info(cds, heap)(\"%8zu huge  objects               (total %8zu bytes\"\n+  log_info(aot, heap)(\"%8zu huge  objects               (total %8zu bytes\"\n@@ -2179,1 +2180,1 @@\n-  log_info(cds, heap)(\"%8zu total objects               (total %8zu bytes\"\n+  log_info(aot, heap)(\"%8zu total objects               (total %8zu bytes\"\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":63,"deletions":62,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    log_info(cds)(\"Regenerate MethodHandle Holder classes...\");\n+    log_info(aot)(\"Regenerate MethodHandle Holder classes...\");\n@@ -89,1 +89,1 @@\n-    log_info(cds)(\"Regenerate MethodHandle Holder classes...done\");\n+    log_info(aot)(\"Regenerate MethodHandle Holder classes...done\");\n@@ -117,1 +117,1 @@\n-    log_info(cds)(\"Nothing to regenerate for holder classes\");\n+    log_info(aot)(\"Nothing to regenerate for holder classes\");\n@@ -153,1 +153,1 @@\n-      log_error(cds)(\"%s: %s\", PENDING_EXCEPTION->klass()->external_name(),\n+      log_error(aot)(\"%s: %s\", PENDING_EXCEPTION->klass()->external_name(),\n@@ -156,1 +156,1 @@\n-        log_error(cds)(\"Failed to generate LambdaForm holder classes. Is your classlist out of date?\");\n+        log_error(aot)(\"Failed to generate LambdaForm holder classes. Is your classlist out of date?\");\n@@ -158,1 +158,1 @@\n-        log_error(cds)(\"Failed to generate LambdaForm holder classes. Was the base archive generated with an outdated classlist?\");\n+        log_error(aot)(\"Failed to generate LambdaForm holder classes. Was the base archive generated with an outdated classlist?\");\n@@ -229,1 +229,1 @@\n-  log_info(cds, lambda)(\"Regenerated class %s, old: \" INTPTR_FORMAT \" new: \" INTPTR_FORMAT,\n+  log_info(aot, lambda)(\"Regenerated class %s, old: \" INTPTR_FORMAT \" new: \" INTPTR_FORMAT,\n@@ -259,1 +259,1 @@\n-    log_debug(cds)(\"Total LF lines stored into %s: %d\", CDSConfig::type_of_archive_being_written(), count);\n+    log_debug(aot)(\"Total LF lines stored into %s: %d\", CDSConfig::type_of_archive_being_written(), count);\n@@ -271,1 +271,1 @@\n-    log_debug(cds)(\"Total LF lines read from %s: %d\", CDSConfig::type_of_archive_being_loaded(), _static_archive_invokers->length());\n+    log_debug(aot)(\"Total LF lines read from %s: %d\", CDSConfig::type_of_archive_being_loaded(), _static_archive_invokers->length());\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-  LogTarget(Debug, cds, lambda) log;\n+  LogTarget(Debug, aot, lambda) log;\n@@ -271,1 +271,1 @@\n-    if (info != nullptr && log_is_enabled(Debug, cds)) {\n+    if (info != nullptr && log_is_enabled(Debug, aot)) {\n@@ -273,1 +273,1 @@\n-      log_debug(cds)(\"Used all static archived lambda proxy classes for: %s %s%s\",\n+      log_debug(aot)(\"Used all static archived lambda proxy classes for: %s %s%s\",\n@@ -284,1 +284,1 @@\n-    if (info != nullptr && log_is_enabled(Debug, cds)) {\n+    if (info != nullptr && log_is_enabled(Debug, aot)) {\n@@ -286,1 +286,1 @@\n-      log_debug(cds)(\"Used all dynamic archived lambda proxy classes for: %s %s%s\",\n+      log_debug(aot)(\"Used all dynamic archived lambda proxy classes for: %s %s%s\",\n@@ -309,1 +309,1 @@\n-      if (log_is_enabled(Debug, cds)) {\n+      if (log_is_enabled(Debug, aot)) {\n@@ -311,1 +311,1 @@\n-        log_debug(cds)(\"Loaded lambda proxy: %s \", proxy_klass->external_name());\n+        log_debug(aot)(\"Loaded lambda proxy: %s \", proxy_klass->external_name());\n@@ -416,1 +416,1 @@\n-    log_info(cds,dynamic)(\"Archiving hidden %s\", info._proxy_klasses->at(0)->external_name());\n+    log_info(cds, dynamic)(\"Archiving hidden %s\", info._proxy_klasses->at(0)->external_name());\n","filename":"src\/hotspot\/share\/cds\/lambdaProxyClassDictionary.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -191,1 +192,1 @@\n-      log_info(cds, hashtables)(\"Expanded _dumped_classes table to %d\", _dumped_classes.table_size());\n+      log_info(aot, hashtables)(\"Expanded _dumped_classes table to %d\", _dumped_classes.table_size());\n@@ -262,1 +263,1 @@\n-    log_info(cds)(\"SharedBaseAddress (\" INTPTR_FORMAT \") aligned up to \" INTPTR_FORMAT,\n+    aot_log_info(aot)(\"SharedBaseAddress (\" INTPTR_FORMAT \") aligned up to \" INTPTR_FORMAT,\n@@ -280,1 +281,1 @@\n-  log_warning(cds)(\"SharedBaseAddress (\" INTPTR_FORMAT \") is %s. Reverted to \" INTPTR_FORMAT,\n+  aot_log_warning(aot)(\"SharedBaseAddress (\" INTPTR_FORMAT \") is %s. Reverted to \" INTPTR_FORMAT,\n@@ -295,1 +296,1 @@\n-  log_info(cds)(\"Core region alignment: %zu\", core_region_alignment());\n+  aot_log_info(aot)(\"Core region alignment: %zu\", core_region_alignment());\n@@ -319,1 +320,1 @@\n-    log_error(cds)(\"Unable to reserve memory for symbols: %zu bytes.\", symbol_rs_size);\n+    aot_log_error(aot)(\"Unable to reserve memory for symbols: %zu bytes.\", symbol_rs_size);\n@@ -355,1 +356,1 @@\n-      log_error(cds)(\"string length too large: %d\", utf8_length);\n+      aot_log_error(aot)(\"string length too large: %d\", utf8_length);\n@@ -372,1 +373,1 @@\n-        log_warning(cds, heap)(\"[line %d] extra interned string allocation failed; size too large: %d\",\n+        log_warning(aot, heap)(\"[line %d] extra interned string allocation failed; size too large: %d\",\n@@ -378,1 +379,1 @@\n-          log_warning(cds, heap)(\"[line %d] extra interned string ignored; size too large: %d\",\n+          log_warning(aot, heap)(\"[line %d] extra interned string ignored; size too large: %d\",\n@@ -412,1 +413,1 @@\n-  log_info(cds)(\"Archived %d method handle intrinsics (%d bytes)\", len, word_size * BytesPerWord);\n+  log_info(aot)(\"Archived %d method handle intrinsics (%d bytes)\", len, word_size * BytesPerWord);\n@@ -544,1 +545,1 @@\n-    log_info(cds)(\"Dumping symbol table ...\");\n+    log_info(aot)(\"Dumping symbol table ...\");\n@@ -661,1 +662,1 @@\n-  log_info(cds)(\"Make classes shareable\");\n+  log_info(aot)(\"Make classes shareable\");\n@@ -673,1 +674,1 @@\n-    log_info(cds)(\"Adjust lambda proxy class dictionary\");\n+    log_info(aot)(\"Adjust lambda proxy class dictionary\");\n@@ -799,1 +800,1 @@\n-      log_error(cds)(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n+      aot_log_error(aot)(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n@@ -803,1 +804,1 @@\n-      log_error(cds)(\"%s: %s\", PENDING_EXCEPTION->klass()->external_name(),\n+      aot_log_error(aot)(\"%s: %s\", PENDING_EXCEPTION->klass()->external_name(),\n@@ -805,1 +806,2 @@\n-      MetaspaceShared::writing_error(\"Unexpected exception, use -Xlog:cds,exceptions=trace for detail\");\n+      MetaspaceShared::writing_error(err_msg(\"Unexpected exception, use -Xlog:aot%s,exceptions=trace for detail\",\n+                                             CDSConfig::new_aot_flags_used() ? \"\" : \",cds\"));\n@@ -842,1 +844,1 @@\n-    log_debug(cds)(\"Setting MinHeapSize to 4G for CDS dumping, original size = %zuM\", MinHeapSize\/M);\n+    log_debug(aot)(\"Setting MinHeapSize to 4G for CDS dumping, original size = %zuM\", MinHeapSize\/M);\n@@ -846,1 +848,1 @@\n-    log_debug(cds)(\"Setting InitialHeapSize to 4G for CDS dumping, original size = %zuM\", InitialHeapSize\/M);\n+    log_debug(aot)(\"Setting InitialHeapSize to 4G for CDS dumping, original size = %zuM\", InitialHeapSize\/M);\n@@ -850,1 +852,1 @@\n-    log_debug(cds)(\"Setting MaxHeapSize to 4G for CDS dumping, original size = %zuM\", MaxHeapSize\/M);\n+    log_debug(aot)(\"Setting MaxHeapSize to 4G for CDS dumping, original size = %zuM\", MaxHeapSize\/M);\n@@ -873,1 +875,1 @@\n-  log_info(cds)(\"Loading classes to share ...\");\n+  aot_log_info(aot)(\"Loading classes to share ...\");\n@@ -894,1 +896,1 @@\n-  log_info(cds)(\"Loading classes to share: done.\");\n+  aot_log_info(aot)(\"Loading classes to share: done.\");\n@@ -912,1 +914,1 @@\n-      log_info(cds)(\"Reading extra data from %s ...\", SharedArchiveConfigFile);\n+      log_info(aot)(\"Reading extra data from %s ...\", SharedArchiveConfigFile);\n@@ -914,1 +916,1 @@\n-      log_info(cds)(\"Reading extra data: done.\");\n+      log_info(aot)(\"Reading extra data: done.\");\n@@ -919,1 +921,1 @@\n-    log_info(cds)(\"Reading lambda form invokers from JDK default classlist ...\");\n+    log_info(aot)(\"Reading lambda form invokers from JDK default classlist ...\");\n@@ -943,1 +945,1 @@\n-      log_info(cds)(\"Loading extra classes from %s ...\", ExtraSharedClassListFile);\n+      log_info(aot)(\"Loading extra classes from %s ...\", ExtraSharedClassListFile);\n@@ -950,1 +952,1 @@\n-  log_info(cds)(\"Rewriting and linking classes ...\");\n+  log_info(aot)(\"Rewriting and linking classes ...\");\n@@ -957,1 +959,1 @@\n-  log_info(cds)(\"Rewriting and linking classes: done\");\n+  log_info(aot)(\"Rewriting and linking classes: done\");\n@@ -978,1 +980,1 @@\n-      log_debug(cds)(\"Resetting Class::reflectionFactory\");\n+      log_debug(aot)(\"Resetting Class::reflectionFactory\");\n@@ -993,1 +995,1 @@\n-    log_info(cds)(\"Not dumping heap, reset CDSConfig::_is_using_optimized_module_handling\");\n+    log_info(aot)(\"Not dumping heap, reset CDSConfig::_is_using_optimized_module_handling\");\n@@ -1029,1 +1031,1 @@\n-    log_warning(cds)(\"This %s was created with AllowArchivingWithJavaAgent. It should be used \"\n+    aot_log_warning(aot)(\"This %s was created with AllowArchivingWithJavaAgent. It should be used \"\n@@ -1062,1 +1064,1 @@\n-      log_warning(cds)(\"Preload Warning: Verification failed for %s\",\n+      aot_log_warning(aot)(\"Preload Warning: Verification failed for %s\",\n@@ -1119,1 +1121,1 @@\n-  report_loading_error(message);\n+  report_loading_error(\"%s\", message);\n@@ -1131,2 +1133,5 @@\n-  \/\/ If the user doesn't specify any CDS options, we will try to load the default CDS archive, which\n-  \/\/ may fail due to incompatible VM options. Print at the info level to avoid excessive verbosity.\n+  \/\/ When using AOT cache, errors messages are always printed on the error channel.\n+  LogStream ls_aot(LogLevel::Error, LogTagSetMapping<LOG_TAGS(aot)>::tagset());\n+\n+  \/\/ If we are loading load the default CDS archive, it may fail due to incompatible VM options.\n+  \/\/ Print at the info level to avoid excessive verbosity.\n@@ -1135,4 +1140,7 @@\n-  Log(cds) log;\n-  LogStream ls_error(log.error());\n-  LogStream ls_info(log.info());\n-  LogStream& ls = (!CDSConfig::is_using_archive()) || CDSConfig::is_using_only_default_archive() ? ls_info : ls_error;\n+  LogLevelType level = (!CDSConfig::is_using_archive() || CDSConfig::is_using_only_default_archive()) ?\n+                        LogLevel::Info : LogLevel::Error;\n+  LogStream ls_cds(level, LogTagSetMapping<LOG_TAGS(cds)>::tagset());\n+\n+  LogStream& ls = CDSConfig::new_aot_flags_used() ? ls_aot : ls_cds;\n+  va_list ap;\n+  va_start(ap, format);\n@@ -1142,1 +1150,2 @@\n-    ls.print_cr(\"An error has occurred while processing the %s. Run with -Xlog:cds for details.\", CDSConfig::type_of_archive_being_loaded());\n+    ls.print_cr(\"An error has occurred while processing the %s. Run with -Xlog:%s for details.\",\n+                CDSConfig::type_of_archive_being_loaded(), CDSConfig::new_aot_flags_used() ? \"aot\" : \"aot,cds\");\n@@ -1145,0 +1154,1 @@\n+  ls.vprint_cr(format, ap);\n@@ -1146,6 +1156,1 @@\n-  if (format != nullptr) {\n-    va_list ap;\n-    va_start(ap, format);\n-    ls.vprint_cr(format, ap);\n-    va_end(ap);\n-  }\n+  va_end(ap);\n@@ -1164,1 +1169,1 @@\n-  log_error(cds)(\"An error has occurred while writing the shared archive file.\");\n+  aot_log_error(aot)(\"An error has occurred while writing the shared archive file.\");\n@@ -1166,1 +1171,1 @@\n-    log_error(cds)(\"%s\", message);\n+    aot_log_error(aot)(\"%s\", message);\n@@ -1178,1 +1183,1 @@\n-    log_info(cds)(\"Core region alignment: %zu\", static_mapinfo->core_region_alignment());\n+    aot_log_info(aot)(\"Core region alignment: %zu\", static_mapinfo->core_region_alignment());\n@@ -1181,1 +1186,1 @@\n-    log_info(cds)(\"ArchiveRelocationMode: %d\", ArchiveRelocationMode);\n+    aot_log_info(aot)(\"ArchiveRelocationMode: %d\", ArchiveRelocationMode);\n@@ -1188,1 +1193,1 @@\n-      log_info(cds)(\"Try to map archive(s) at an alternative address\");\n+      aot_log_info(aot)(\"Try to map archive(s) at an alternative address\");\n@@ -1209,1 +1214,1 @@\n-      log_warning(cds)(\"-XX:ArchiveClassesAtExit is unsupported when base CDS archive is not loaded. Run with -Xlog:cds for more info.\");\n+      aot_log_warning(aot)(\"-XX:ArchiveClassesAtExit is unsupported when base CDS archive is not loaded. Run with -Xlog:cds for more info.\");\n@@ -1278,1 +1283,1 @@\n-    log_info(cds)(\"Archive(s) were created with -XX:SharedBaseAddress=0. Always map at os-selected address.\");\n+    aot_log_info(aot)(\"Archive(s) were created with -XX:SharedBaseAddress=0. Always map at os-selected address.\");\n@@ -1286,1 +1291,1 @@\n-      log_info(cds)(\"ArchiveRelocationMode == 1: always map archive(s) at an alternative address\");\n+      aot_log_info(aot)(\"ArchiveRelocationMode == 1: always map archive(s) at an alternative address\");\n@@ -1291,1 +1296,1 @@\n-    log_info(cds)(\"ArchiveRelocationMode == 2: never map archive(s) at an alternative address\");\n+    aot_log_info(aot)(\"ArchiveRelocationMode == 2: never map archive(s) at an alternative address\");\n@@ -1312,1 +1317,1 @@\n-    log_debug(cds)(\"Failed to reserve spaces (use_requested_addr=%u)\", (unsigned)use_requested_addr);\n+    aot_log_debug(aot)(\"Failed to reserve spaces (use_requested_addr=%u)\", (unsigned)use_requested_addr);\n@@ -1342,1 +1347,1 @@\n-    log_info(cds)(\"Reserved archive_space_rs [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu) bytes%s\",\n+    aot_log_info(aot)(\"Reserved archive_space_rs [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu) bytes%s\",\n@@ -1345,1 +1350,1 @@\n-    log_info(cds)(\"Reserved class_space_rs   [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu) bytes\",\n+    aot_log_info(aot)(\"Reserved class_space_rs   [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] (%zu) bytes\",\n@@ -1367,1 +1372,1 @@\n-        log_info(cds)(\"Windows mmap workaround: releasing archive space.\");\n+        aot_log_info(aot)(\"Windows mmap workaround: releasing archive space.\");\n@@ -1384,1 +1389,1 @@\n-            log_debug(cds)(\"Failed to re-reserve protection zone\");\n+            aot_log_debug(aot)(\"Failed to re-reserve protection zone\");\n@@ -1409,1 +1414,1 @@\n-      log_info(cds)(\"ArchiveRelocationMode == 1: always map archive(s) at an alternative address\");\n+      aot_log_info(aot)(\"ArchiveRelocationMode == 1: always map archive(s) at an alternative address\");\n@@ -1478,2 +1483,2 @@\n-    log_info(cds)(\"initial optimized module handling: %s\", CDSConfig::is_using_optimized_module_handling() ? \"enabled\" : \"disabled\");\n-    log_info(cds)(\"initial full module graph: %s\", CDSConfig::is_using_full_module_graph() ? \"enabled\" : \"disabled\");\n+    log_info(aot)(\"initial optimized module handling: %s\", CDSConfig::is_using_optimized_module_handling() ? \"enabled\" : \"disabled\");\n+    log_info(aot)(\"initial full module graph: %s\", CDSConfig::is_using_full_module_graph() ? \"enabled\" : \"disabled\");\n@@ -1625,1 +1630,1 @@\n-    log_info(cds)(\"CDS initialization: Cannot use SharedBaseAddress \" PTR_FORMAT \" with precomputed shift %d.\",\n+    aot_log_info(aot)(\"CDS initialization: Cannot use SharedBaseAddress \" PTR_FORMAT \" with precomputed shift %d.\",\n@@ -1709,1 +1714,1 @@\n-    log_debug(cds)(\"Released shared space (archive + class) \" INTPTR_FORMAT, p2i(total_space_rs.base()));\n+    aot_log_debug(aot)(\"Released shared space (archive + class) \" INTPTR_FORMAT, p2i(total_space_rs.base()));\n@@ -1714,1 +1719,1 @@\n-      log_debug(cds)(\"Released shared space (archive) \" INTPTR_FORMAT, p2i(archive_space_rs.base()));\n+      aot_log_debug(aot)(\"Released shared space (archive) \" INTPTR_FORMAT, p2i(archive_space_rs.base()));\n@@ -1719,1 +1724,1 @@\n-      log_debug(cds)(\"Released shared space (classes) \" INTPTR_FORMAT, p2i(class_space_rs.base()));\n+      aot_log_debug(aot)(\"Released shared space (classes) \" INTPTR_FORMAT, p2i(class_space_rs.base()));\n@@ -1829,1 +1834,1 @@\n-  LogStreamHandle(Info, cds) lsh;\n+  LogStreamHandle(Info, aot) lsh;\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":71,"deletions":66,"binary":false,"changes":137,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-  static void unrecoverable_loading_error(const char* message = nullptr) ATTRIBUTE_PRINTF(1, 0);\n+  static void unrecoverable_loading_error(const char* message = \"unrecoverable error\");\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-      log_warning(cds)(\"Method in original class is missing from regenerated class: \" INTPTR_FORMAT \" %s\",\n+      log_warning(aot)(\"Method in original class is missing from regenerated class: \" INTPTR_FORMAT \" %s\",\n","filename":"src\/hotspot\/share\/cds\/regeneratedClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,4 +27,0 @@\n-#include \"classfile\/classFileStream.hpp\"\n-#include \"classfile\/classLoader.inline.hpp\"\n-#include \"classfile\/classLoaderExt.hpp\"\n-#include \"classfile\/javaClasses.inline.hpp\"\n@@ -34,2 +30,0 @@\n-#include \"memory\/oopFactory.hpp\"\n-#include \"memory\/resourceArea.hpp\"\n@@ -37,0 +31,1 @@\n+#include \"oops\/oopHandle.hpp\"\n@@ -38,0 +33,1 @@\n+#include \"runtime\/handles.hpp\"\n@@ -42,1 +38,3 @@\n-InstanceKlass* UnregisteredClasses::_UnregisteredClassLoader_klass = nullptr;\n+static InstanceKlass* _UnregisteredClassLoader_klass;\n+static InstanceKlass* _UnregisteredClassLoader_Source_klass;\n+static OopHandle _unregistered_class_loader;\n@@ -45,5 +43,2 @@\n-  if (_UnregisteredClassLoader_klass == nullptr) {\n-    \/\/ no need for synchronization as this function is called single-threaded.\n-    Symbol* klass_name = SymbolTable::new_symbol(\"jdk\/internal\/misc\/CDS$UnregisteredClassLoader\");\n-    Klass* k = SystemDictionary::resolve_or_fail(klass_name, true, CHECK);\n-    _UnregisteredClassLoader_klass = InstanceKlass::cast(k);\n+  if (_UnregisteredClassLoader_klass != nullptr) {\n+    return;\n@@ -51,0 +46,18 @@\n+\n+  Symbol* klass_name;\n+  Klass* k;\n+\n+  \/\/ no need for synchronization as this function is called single-threaded.\n+  klass_name = SymbolTable::new_symbol(\"jdk\/internal\/misc\/CDS$UnregisteredClassLoader\");\n+  k = SystemDictionary::resolve_or_fail(klass_name, true, CHECK);\n+  _UnregisteredClassLoader_klass = InstanceKlass::cast(k);\n+\n+  klass_name = SymbolTable::new_symbol(\"jdk\/internal\/misc\/CDS$UnregisteredClassLoader$Source\");\n+  k = SystemDictionary::resolve_or_fail(klass_name, true, CHECK);\n+  _UnregisteredClassLoader_Source_klass = InstanceKlass::cast(k);\n+\n+  precond(_unregistered_class_loader.is_empty());\n+  HandleMark hm(THREAD);\n+  const Handle cl = JavaCalls::construct_new_instance(_UnregisteredClassLoader_klass,\n+                                                      vmSymbols::void_method_signature(), CHECK);\n+  _unregistered_class_loader = OopHandle(Universe::vm_global(), cl());\n@@ -56,2 +69,1 @@\n-InstanceKlass* UnregisteredClasses::load_class(Symbol* name, const char* path,\n-                                               Handle super_class, objArrayHandle interfaces, TRAPS) {\n+InstanceKlass* UnregisteredClasses::load_class(Symbol* name, const char* path, TRAPS) {\n@@ -65,1 +77,4 @@\n-  \/\/ Call CDS$UnregisteredClassLoader::load(String name, Class<?> superClass, Class<?>[] interfaces)\n+  assert(!_unregistered_class_loader.is_empty(), \"not initialized\");\n+  Handle classloader(THREAD, _unregistered_class_loader.resolve());\n+\n+  \/\/ Call CDS$UnregisteredClassLoader::load(String name, String source)\n@@ -67,3 +82,1 @@\n-  Symbol* methodSignature = SymbolTable::new_symbol(\"(Ljava\/lang\/String;Ljava\/lang\/Class;[Ljava\/lang\/Class;)Ljava\/lang\/Class;\");\n-  Symbol* path_symbol = SymbolTable::new_symbol(path);\n-  Handle classloader = get_classloader(path_symbol, CHECK_NULL);\n+  Symbol* methodSignature = SymbolTable::new_symbol(\"(Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/Class;\");\n@@ -71,0 +84,1 @@\n+  Handle path_string = java_lang_String::create_from_str(path, CHECK_NULL);\n@@ -73,5 +87,0 @@\n-  JavaCallArguments args(3);\n-  args.set_receiver(classloader);\n-  args.push_oop(ext_class_name);\n-  args.push_oop(super_class);\n-  args.push_oop(interfaces);\n@@ -79,1 +88,2 @@\n-                          UnregisteredClassLoader_klass(),\n+                          classloader,\n+                          _UnregisteredClassLoader_klass,\n@@ -82,1 +92,2 @@\n-                          &args,\n+                          ext_class_name,\n+                          path_string,\n@@ -85,10 +96,0 @@\n-  oop obj = result.get_oop();\n-  return InstanceKlass::cast(java_lang_Class::as_Klass(obj));\n-}\n-\n-class UnregisteredClasses::ClassLoaderTable : public ResourceHashtable<\n-  Symbol*, OopHandle,\n-  137, \/\/ prime number\n-  AnyObj::C_HEAP> {};\n-\n-static UnregisteredClasses::ClassLoaderTable* _classloader_table = nullptr;\n@@ -96,9 +97,1 @@\n-Handle UnregisteredClasses::create_classloader(Symbol* path, TRAPS) {\n-  ResourceMark rm(THREAD);\n-  JavaValue result(T_OBJECT);\n-  Handle path_string = java_lang_String::create_from_str(path->as_C_string(), CHECK_NH);\n-  Handle classloader = JavaCalls::construct_new_instance(\n-                           UnregisteredClassLoader_klass(),\n-                           vmSymbols::string_void_signature(),\n-                           path_string, CHECK_NH);\n-  return classloader;\n+  return InstanceKlass::cast(java_lang_Class::as_Klass(result.get_oop()));\n@@ -107,12 +100,3 @@\n-Handle UnregisteredClasses::get_classloader(Symbol* path, TRAPS) {\n-  if (_classloader_table == nullptr) {\n-    _classloader_table = new (mtClass)ClassLoaderTable();\n-  }\n-  OopHandle* classloader_ptr = _classloader_table->get(path);\n-  if (classloader_ptr != nullptr) {\n-    return Handle(THREAD, (*classloader_ptr).resolve());\n-  } else {\n-    Handle classloader = create_classloader(path, CHECK_NH);\n-    _classloader_table->put(path, OopHandle(Universe::vm_global(), classloader()));\n-    path->increment_refcount();\n-    return classloader;\n+bool UnregisteredClasses::check_for_exclusion(const InstanceKlass* k) {\n+  if (_UnregisteredClassLoader_klass == nullptr) {\n+    return false; \/\/ Uninitialized\n@@ -120,0 +104,2 @@\n+  return k == _UnregisteredClassLoader_klass ||\n+         k->implements_interface(_UnregisteredClassLoader_Source_klass);\n","filename":"src\/hotspot\/share\/cds\/unregisteredClasses.cpp","additions":42,"deletions":56,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -36,3 +36,1 @@\n-  static InstanceKlass* load_class(Symbol* h_name, const char* path,\n-                                   Handle super_class, objArrayHandle interfaces,\n-                                   TRAPS);\n+  static InstanceKlass* load_class(Symbol* name, const char* path, TRAPS);\n@@ -40,12 +38,2 @@\n-  static InstanceKlass* UnregisteredClassLoader_klass() {\n-    return _UnregisteredClassLoader_klass;\n-  }\n-\n-  class ClassLoaderTable;\n-\n-private:\n-  \/\/ Don't put this in vmClasses as it's used only with CDS dumping.\n-  static InstanceKlass* _UnregisteredClassLoader_klass;\n-\n-  static Handle create_classloader(Symbol* path, TRAPS);\n-  static Handle get_classloader(Symbol* path, TRAPS);\n+  \/\/ Returns true if the class is loaded internally for dumping unregistered classes.\n+  static bool check_for_exclusion(const InstanceKlass* k);\n","filename":"src\/hotspot\/share\/cds\/unregisteredClasses.hpp","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1179,0 +1179,9 @@\n+  \/\/ record the bailout for hserr envlog\n+  if (reason != nullptr) {\n+    if (CompilationLog::log() != nullptr) {\n+      CompilerThread* thread = CompilerThread::current();\n+      CompileTask* task = thread->task();\n+      CompilationLog::log()->log_failure(thread, task, reason, nullptr);\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1535,2 +1535,1 @@\n-  char* orig_copy = NEW_RESOURCE_ARRAY_IN_THREAD(thread, char, strlen(orig)+1);\n-  strcpy(orig_copy, orig);\n+  char* orig_copy = ResourceArea::strdup(thread, orig);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -195,1 +196,1 @@\n-    log_info(cds)(\"use_full_module_graph = true; java.base = \" INTPTR_FORMAT,\n+    aot_log_info(aot)(\"use_full_module_graph = true; java.base = \" INTPTR_FORMAT,\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataShared.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-    log_warning(cds)(\"CDS heap objects cannot be written because class %s maybe modified by ClassFileLoadHook.\",\n+    log_warning(aot)(\"heap objects cannot be written because class %s maybe modified by ClassFileLoadHook.\",\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-  LogMessage(cds, hashtables) msg;\n+  LogMessage(aot, hashtables) msg;\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1221,1 +1221,1 @@\n-  log_debug(cds, mirror)(\"Archived mirror is: \" PTR_FORMAT, p2i(m));\n+  log_debug(aot, mirror)(\"Archived mirror is: \" PTR_FORMAT, p2i(m));\n@@ -1246,1 +1246,1 @@\n-  if (log_is_enabled(Trace, cds, heap, mirror)) {\n+  if (log_is_enabled(Trace, aot, heap, mirror)) {\n@@ -1248,1 +1248,1 @@\n-    log_trace(cds, heap, mirror)(\n+    log_trace(aot, heap, mirror)(\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -430,1 +430,1 @@\n-  if (log_is_enabled(Info, cds, module)) {\n+  if (log_is_enabled(Info, aot, module)) {\n@@ -432,1 +432,1 @@\n-    LogStream ls(Log(cds, module)::info());\n+    LogStream ls(Log(aot, module)::info());\n@@ -538,1 +538,1 @@\n-  if (log_is_enabled(Info, cds, module)) {\n+  if (log_is_enabled(Info, aot, module)) {\n@@ -540,1 +540,1 @@\n-    LogStream ls(Log(cds, module)::info());\n+    LogStream ls(Log(aot, module)::info());\n","filename":"src\/hotspot\/share\/classfile\/moduleEntry.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -492,1 +493,1 @@\n-    log_info(cds, module)(\"Archived java.lang.Module oop \" PTR_FORMAT \" with no ModuleEntry*\", p2i(orig_module_obj));\n+    log_info(aot, module)(\"Archived java.lang.Module oop \" PTR_FORMAT \" with no ModuleEntry*\", p2i(orig_module_obj));\n@@ -496,1 +497,1 @@\n-    if (log_is_enabled(Info, cds, module)) {\n+    if (log_is_enabled(Info, aot, module)) {\n@@ -498,1 +499,1 @@\n-      LogStream ls(Log(cds, module)::info());\n+      LogStream ls(Log(aot, module)::info());\n@@ -587,0 +588,1 @@\n+  {\"jdk.module.addreads\", true},               \/\/ --add-reads\n@@ -601,1 +603,1 @@\n-  log_info(cds)(\"archived module property %s: %s\", _prop,\n+  aot_log_info(aot)(\"archived module property %s: %s\", _prop,\n@@ -642,2 +644,1 @@\n-    char* p = resource_allocate_bytes(strlen(prop_value) + 1);\n-    strcpy(p, prop_value);\n+    char* p = ResourceArea::strdup(prop_value);\n@@ -695,2 +696,2 @@\n-    log_info(cds)(\"optimized module handling: %s\", CDSConfig::is_using_optimized_module_handling() ? \"enabled\" : \"disabled\");\n-    log_info(cds)(\"full module graph: %s\", CDSConfig::is_using_full_module_graph() ? \"enabled\" : \"disabled\");\n+    aot_log_info(aot)(\"optimized module handling: %s\", CDSConfig::is_using_optimized_module_handling() ? \"enabled\" : \"disabled\");\n+    aot_log_info(aot)(\"full module graph: %s\", CDSConfig::is_using_full_module_graph() ? \"enabled\" : \"disabled\");\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -958,1 +958,1 @@\n-  log_info(cds)(\"allocated string table for %d strings\", total);\n+  log_info(aot)(\"allocated string table for %d strings\", total);\n@@ -964,1 +964,1 @@\n-    log_info(cds)(\"string table array (single level) length = %d\", total);\n+    log_info(aot)(\"string table array (single level) length = %d\", total);\n@@ -975,1 +975,1 @@\n-      log_error(cds)(\"Too many strings to be archived: %zu\", _items_count);\n+      log_error(aot)(\"Too many strings to be archived: %zu\", _items_count);\n@@ -983,1 +983,1 @@\n-    log_info(cds)(\"string table array (primary) length = %d\", primary_array_length);\n+    log_info(aot)(\"string table array (primary) length = %d\", primary_array_length);\n@@ -996,1 +996,1 @@\n-      log_info(cds)(\"string table array (secondary)[%d] length = %d\", i, len);\n+      log_info(aot)(\"string table array (secondary)[%d] length = %d\", i, len);\n@@ -1067,1 +1067,1 @@\n-  log_info(cds)(\"Archived %d interned strings\", index);\n+  log_info(aot)(\"Archived %d interned strings\", index);\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -232,1 +233,1 @@\n-  log_warning(cds)(\"Skipping %s: %s\", k->name()->as_C_string(), reason);\n+  aot_log_warning(aot)(\"Skipping %s: %s\", k->name()->as_C_string(), reason);\n@@ -276,1 +277,1 @@\n-        log_info(cds)(\"Skipping %s because it is dynamically generated\", k->name()->as_C_string());\n+        aot_log_info(aot)(\"Skipping %s because it is dynamically generated\", k->name()->as_C_string());\n@@ -326,0 +327,6 @@\n+  if (UnregisteredClasses::check_for_exclusion(k)) {\n+    ResourceMark rm;\n+    aot_log_info(aot)(\"Skipping %s: used only when dumping CDS archive\", k->name()->as_C_string());\n+    return true;\n+  }\n+\n@@ -329,1 +336,1 @@\n-    log_warning(cds)(\"Skipping %s: super class %s is excluded\", k->name()->as_C_string(), super->name()->as_C_string());\n+    aot_log_warning(aot)(\"Skipping %s: super class %s is excluded\", k->name()->as_C_string(), super->name()->as_C_string());\n@@ -339,1 +346,1 @@\n-      log_warning(cds)(\"Skipping %s: interface %s is excluded\", k->name()->as_C_string(), intf->name()->as_C_string());\n+      aot_log_warning(aot)(\"Skipping %s: interface %s is excluded\", k->name()->as_C_string(), intf->name()->as_C_string());\n@@ -344,6 +351,0 @@\n-  if (k == UnregisteredClasses::UnregisteredClassLoader_klass()) {\n-    ResourceMark rm;\n-    log_info(cds)(\"Skipping %s: used only when dumping CDS archive\", k->name()->as_C_string());\n-    return true;\n-  }\n-\n@@ -468,0 +469,9 @@\n+InstanceKlass* SystemDictionaryShared::get_unregistered_class(Symbol* name) {\n+  assert(CDSConfig::is_dumping_archive() || ClassListWriter::is_enabled(), \"sanity\");\n+  if (_unregistered_classes_table == nullptr) {\n+    return nullptr;\n+  }\n+  InstanceKlass** k = _unregistered_classes_table->get(name);\n+  return k != nullptr ? *k : nullptr;\n+}\n+\n@@ -818,1 +828,1 @@\n-      if (log_is_enabled(Trace, cds, verification)) {\n+      if (log_is_enabled(Trace, aot, verification)) {\n@@ -820,1 +830,1 @@\n-        log_trace(cds, verification)(\"check_verification_constraint: %s: %s must be subclass of %s [0x%x]\",\n+        log_trace(aot, verification)(\"check_verification_constraint: %s: %s must be subclass of %s [0x%x]\",\n@@ -1036,1 +1046,1 @@\n-      if (log_is_enabled(Trace, cds, hashtables)) {\n+      if (log_is_enabled(Trace, aot, hashtables)) {\n@@ -1038,1 +1048,1 @@\n-        log_trace(cds,hashtables)(\"%s dictionary: %s\", (_is_builtin ? \"builtin\" : \"unregistered\"), info._klass->external_name());\n+        log_trace(aot, hashtables)(\"%s dictionary: %s\", (_is_builtin ? \"builtin\" : \"unregistered\"), info._klass->external_name());\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":24,"deletions":14,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -252,0 +252,1 @@\n+  static InstanceKlass* get_unregistered_class(Symbol* name);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -508,0 +508,1 @@\n+    break;\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -132,0 +132,1 @@\n+  AOTStubCaching = false;\n@@ -137,0 +138,1 @@\n+    AOTStubCaching = false;\n@@ -140,0 +142,11 @@\n+  if (VerifyOops) {\n+    \/\/ Disable AOT stubs caching when VerifyOops flag is on.\n+    \/\/ Verify oops code generated a lot of C strings which overflow\n+    \/\/ AOT C string table (which has fixed size).\n+    \/\/ AOT C string table will be reworked later to handle such cases.\n+    \/\/\n+    \/\/ Note: AOT adapters are not affected - they don't have oop operations.\n+    log_info(aot, codecache, init)(\"AOT Stubs Caching is not supported with VerifyOops.\");\n+    FLAG_SET_ERGO(AOTStubCaching, false);\n+  }\n+\n@@ -1246,1 +1259,1 @@\n-#if defined(AARCH64)\n+#if defined(AARCH64) && !defined(ZERO)\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.cpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -54,1 +54,5 @@\n-  lm.print(\"%4d   COMPILE SKIPPED: %s\", task->compile_id(), reason);\n+  if (task == nullptr) {\n+    lm.print(\"Id not known, task was 0;  COMPILE SKIPPED: %s\", reason);\n+  } else {\n+    lm.print(\"%4d   COMPILE SKIPPED: %s\", task->compile_id(), reason);\n+  }\n","filename":"src\/hotspot\/share\/compiler\/compilationLog.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -86,1 +86,2 @@\n-NOT_PRODUCT(cflags(IGVPrintLevel,       intx, PrintIdealGraphLevel, IGVPrintLevel)) \\\n+NOT_PRODUCT(cflags(PhasePrintLevel, intx, PrintPhaseLevel, PhasePrintLevel)) \\\n+NOT_PRODUCT(cflags(IGVPrintLevel,   intx, PrintIdealGraphLevel, IGVPrintLevel)) \\\n@@ -205,1 +206,1 @@\n-  bool should_print_phase(const CompilerPhaseType cpt) const {\n+  bool should_print_ideal_phase(const CompilerPhaseType cpt) const {\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,0 +87,1 @@\n+NOT_PRODUCT(option(PhasePrintLevel, \"PhasePrintLevel\", Intx)) \\\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -789,1 +789,1 @@\n-void G1CollectedHeap::prepare_for_mutator_after_full_collection() {\n+void G1CollectedHeap::prepare_for_mutator_after_full_collection(size_t allocation_word_size) {\n@@ -794,1 +794,1 @@\n-  resize_heap_if_necessary();\n+  resize_heap_if_necessary(allocation_word_size);\n@@ -844,1 +844,2 @@\n-                                         bool do_maximal_compaction) {\n+                                         bool do_maximal_compaction,\n+                                         size_t allocation_word_size) {\n@@ -856,1 +857,1 @@\n-  collector.complete_collection();\n+  collector.complete_collection(allocation_word_size);\n@@ -868,1 +869,2 @@\n-                     false \/* do_maximal_compaction *\/);\n+                     false \/* do_maximal_compaction *\/,\n+                     size_t(0) \/* allocation_word_size *\/);\n@@ -875,1 +877,2 @@\n-                                    false \/* do_maximal_compaction *\/);\n+                                    false \/* do_maximal_compaction *\/,\n+                                    size_t(0) \/* allocation_word_size *\/);\n@@ -882,1 +885,1 @@\n-void G1CollectedHeap::resize_heap_if_necessary() {\n+void G1CollectedHeap::resize_heap_if_necessary(size_t allocation_word_size) {\n@@ -886,1 +889,1 @@\n-  size_t resize_amount = _heap_sizing_policy->full_collection_resize_amount(should_expand);\n+  size_t resize_amount = _heap_sizing_policy->full_collection_resize_amount(should_expand, allocation_word_size);\n@@ -930,2 +933,3 @@\n-    *gc_succeeded = do_full_collection(maximal_compaction \/* clear_all_soft_refs *\/ ,\n-                                       maximal_compaction \/* do_maximal_compaction *\/);\n+    *gc_succeeded = do_full_collection(maximal_compaction \/* clear_all_soft_refs *\/,\n+                                       maximal_compaction \/* do_maximal_compaction *\/,\n+                                       word_size \/* allocation_word_size *\/);\n@@ -1863,24 +1867,0 @@\n-bool G1CollectedHeap::try_collect_fullgc(GCCause::Cause cause,\n-                                         const G1GCCounters& counters_before) {\n-  assert_heap_not_locked();\n-\n-  while(true) {\n-    VM_G1CollectFull op(counters_before.total_collections(),\n-                        counters_before.total_full_collections(),\n-                        cause);\n-    VMThread::execute(&op);\n-\n-    \/\/ Request is trivially finished.\n-    if (!GCCause::is_explicit_full_gc(cause) || op.gc_succeeded()) {\n-      return op.gc_succeeded();\n-    }\n-\n-    {\n-      MutexLocker ml(Heap_lock);\n-      if (counters_before.total_full_collections() != total_full_collections()) {\n-        return true;\n-      }\n-    }\n-  }\n-}\n-\n@@ -1905,1 +1885,5 @@\n-    return try_collect_fullgc(cause, counters_before);\n+    VM_G1CollectFull op(counters_before.total_collections(),\n+                        counters_before.total_full_collections(),\n+                        cause);\n+    VMThread::execute(&op);\n+    return op.gc_succeeded();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":19,"deletions":35,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -283,3 +283,0 @@\n-  bool try_collect_fullgc(GCCause::Cause cause,\n-                          const G1GCCounters& counters_before);\n-\n@@ -483,0 +480,2 @@\n+  \/\/ - if allocation_word_size is set, then this allocation size will\n+  \/\/    be accounted for in case shrinking of the heap happens.\n@@ -486,1 +485,2 @@\n-                          bool do_maximal_compaction);\n+                          bool do_maximal_compaction,\n+                          size_t allocation_word_size);\n@@ -504,1 +504,1 @@\n-  void prepare_for_mutator_after_full_collection();\n+  void prepare_for_mutator_after_full_collection(size_t allocation_word_size);\n@@ -563,1 +563,1 @@\n-  void resize_heap_if_necessary();\n+  void resize_heap_if_necessary(size_t allocation_word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1464,1 +1464,1 @@\n-    _g1h->resize_heap_if_necessary();\n+    _g1h->resize_heap_if_necessary(size_t(0) \/* allocation_word_size *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-void G1FullCollector::complete_collection() {\n+void G1FullCollector::complete_collection(size_t allocation_word_size) {\n@@ -245,1 +245,1 @@\n-  _heap->prepare_for_mutator_after_full_collection();\n+  _heap->prepare_for_mutator_after_full_collection(allocation_word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-  void complete_collection();\n+  void complete_collection(size_t allocation_word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -223,1 +223,12 @@\n-size_t G1HeapSizingPolicy::full_collection_resize_amount(bool& expand) {\n+size_t G1HeapSizingPolicy::full_collection_resize_amount(bool& expand, size_t allocation_word_size) {\n+  \/\/ If the full collection was triggered by an allocation failure, we should account\n+  \/\/ for the bytes required for this allocation under used_after_gc. This prevents\n+  \/\/ unnecessary shrinking that would be followed by an expand call to satisfy the\n+  \/\/ allocation.\n+  size_t allocation_bytes = allocation_word_size * HeapWordSize;\n+  if (_g1h->is_humongous(allocation_word_size)) {\n+    \/\/ Humongous objects are allocated in entire regions, we must calculate\n+    \/\/ required space in terms of full regions, not just the object size.\n+    allocation_bytes = G1HeapRegion::align_up_to_region_byte_size(allocation_bytes);\n+  }\n+\n@@ -227,1 +238,1 @@\n-  const size_t used_after_gc = capacity_after_gc -\n+  const size_t used_after_gc = capacity_after_gc + allocation_bytes -\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-  size_t full_collection_resize_amount(bool& expand);\n+  size_t full_collection_resize_amount(bool& expand, size_t allocation_word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,2 +53,3 @@\n-  _gc_succeeded = g1h->do_full_collection(false \/* clear_all_soft_refs *\/,\n-                                          false \/* do_maximal_compaction *\/);\n+  g1h->do_full_collection(false \/* clear_all_soft_refs *\/,\n+                          false \/* do_maximal_compaction *\/,\n+                          size_t(0) \/* allocation_word_size *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,2 +34,0 @@\n-  bool _gc_succeeded;\n-\n@@ -43,2 +41,1 @@\n-    VM_GC_Operation(gc_count_before, cause, full_gc_count_before, true),\n-    _gc_succeeded(false) { }\n+    VM_GC_Operation(gc_count_before, cause, full_gc_count_before, true) { }\n@@ -47,1 +44,1 @@\n-  bool gc_succeeded() const { return _gc_succeeded; }\n+  bool gc_succeeded() const { return prologue_succeeded(); }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -505,15 +505,2 @@\n-  while (true) {\n-    VM_ParallelGCCollect op(gc_count, full_gc_count, cause);\n-    VMThread::execute(&op);\n-\n-    if (!GCCause::is_explicit_full_gc(cause)) {\n-      return;\n-    }\n-\n-    {\n-      MutexLocker ml(Heap_lock);\n-      if (full_gc_count != total_full_collections()) {\n-        return;\n-      }\n-    }\n-  }\n+  VM_ParallelGCCollect op(gc_count, full_gc_count, cause);\n+  VMThread::execute(&op);\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -610,18 +610,5 @@\n-  while (true) {\n-    VM_SerialGCCollect op(!should_run_young_gc,\n-                          gc_count_before,\n-                          full_gc_count_before,\n-                          cause);\n-    VMThread::execute(&op);\n-    if (!GCCause::is_explicit_full_gc(cause)) {\n-      return;\n-    }\n-\n-    {\n-      MutexLocker ml(Heap_lock);\n-      \/\/ Read the GC count while holding the Heap_lock\n-      if (full_gc_count_before != total_full_collections()) {\n-        return;\n-      }\n-    }\n-  }\n+  VM_SerialGCCollect op(!should_run_young_gc,\n+                        gc_count_before,\n+                        full_gc_count_before,\n+                        cause);\n+  VMThread::execute(&op);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":5,"deletions":18,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1,293 +0,0 @@\n-\/*\n- * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef SHARE_GC_Z_ZINTRUSIVERBTREE_HPP\n-#define SHARE_GC_Z_ZINTRUSIVERBTREE_HPP\n-\n-#include \"metaprogramming\/enableIf.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-#include \"utilities\/macros.hpp\"\n-\n-enum class ZIntrusiveRBTreeDirection { LEFT, RIGHT };\n-\n-class ZIntrusiveRBTreeNode {\n-  template <typename Key, typename Compare>\n-  friend class ZIntrusiveRBTree;\n-\n-public:\n-  enum Color { RED = 0b0, BLACK = 0b1 };\n-\n-private:\n-  class ColoredNodePtr {\n-  private:\n-    static constexpr uintptr_t COLOR_MASK = 0b1;\n-    static constexpr uintptr_t NODE_MASK = ~COLOR_MASK;\n-\n-    uintptr_t _value;\n-\n-  public:\n-    ColoredNodePtr(ZIntrusiveRBTreeNode* node = nullptr, Color color = RED);\n-\n-    constexpr Color color() const;\n-    constexpr bool is_black() const;\n-    constexpr bool is_red() const;\n-\n-    ZIntrusiveRBTreeNode* node() const;\n-    ZIntrusiveRBTreeNode* red_node() const;\n-    ZIntrusiveRBTreeNode* black_node() const;\n-  };\n-\n-private:\n-  ColoredNodePtr _colored_parent;\n-  ZIntrusiveRBTreeNode* _left;\n-  ZIntrusiveRBTreeNode* _right;\n-\n-  template <ZIntrusiveRBTreeDirection DIRECTION>\n-  const ZIntrusiveRBTreeNode* find_next_node() const;\n-\n-  template <ZIntrusiveRBTreeDirection DIRECTION>\n-  const ZIntrusiveRBTreeNode* child() const;\n-  template <ZIntrusiveRBTreeDirection DIRECTION>\n-  ZIntrusiveRBTreeNode* child();\n-\n-  template <ZIntrusiveRBTreeDirection DIRECTION>\n-  ZIntrusiveRBTreeNode* const* child_addr() const;\n-\n-  template <ZIntrusiveRBTreeDirection DIRECTION>\n-  bool has_child() const;\n-\n-  template <ZIntrusiveRBTreeDirection DIRECTION>\n-  void update_child(ZIntrusiveRBTreeNode* new_child);\n-\n-  void link_node(ZIntrusiveRBTreeNode* parent, ZIntrusiveRBTreeNode** insert_location);\n-\n-  void copy_parent_and_color(ZIntrusiveRBTreeNode* other);\n-  void update_parent_and_color(ZIntrusiveRBTreeNode* parent, Color color);\n-\n-  void update_parent(ZIntrusiveRBTreeNode* parent);\n-  void update_color(Color color);\n-\n-  void update_left_child(ZIntrusiveRBTreeNode* new_child);\n-  void update_right_child(ZIntrusiveRBTreeNode* new_child);\n-\n-  const ZIntrusiveRBTreeNode* parent() const;\n-  ZIntrusiveRBTreeNode* parent();\n-  const ZIntrusiveRBTreeNode* red_parent() const;\n-  ZIntrusiveRBTreeNode* red_parent();\n-  const ZIntrusiveRBTreeNode* black_parent() const;\n-  ZIntrusiveRBTreeNode* black_parent();\n-\n-  bool has_parent() const;\n-\n-  Color color() const;\n-  bool is_black() const;\n-  bool is_red() const;\n-  static bool is_black(ZIntrusiveRBTreeNode* node);\n-\n-  ZIntrusiveRBTreeNode* const* left_child_addr() const;\n-  ZIntrusiveRBTreeNode* const* right_child_addr() const;\n-\n-  const ZIntrusiveRBTreeNode* left_child() const;\n-  ZIntrusiveRBTreeNode* left_child();\n-  const ZIntrusiveRBTreeNode* right_child() const;\n-  ZIntrusiveRBTreeNode* right_child();\n-\n-  bool has_left_child() const;\n-  bool has_right_child() const;\n-\n-public:\n-  ZIntrusiveRBTreeNode();\n-\n-  const ZIntrusiveRBTreeNode* prev() const;\n-  ZIntrusiveRBTreeNode* prev();\n-  const ZIntrusiveRBTreeNode* next() const;\n-  ZIntrusiveRBTreeNode* next();\n-};\n-\n-template <typename Key, typename Compare>\n-class ZIntrusiveRBTree {\n-public:\n-  class FindCursor {\n-    friend class ZIntrusiveRBTree<Key, Compare>;\n-\n-  private:\n-    ZIntrusiveRBTreeNode** _insert_location;\n-    ZIntrusiveRBTreeNode* _parent;\n-    bool _left_most;\n-    bool _right_most;\n-    DEBUG_ONLY(uintptr_t _sequence_number;)\n-\n-    FindCursor(ZIntrusiveRBTreeNode** insert_location, ZIntrusiveRBTreeNode* parent, bool left_most, bool right_most DEBUG_ONLY(COMMA uintptr_t sequence_number));\n-    FindCursor();\n-\n-#ifdef ASSERT\n-    bool is_valid(uintptr_t sequence_number) const;\n-#endif\n-\n-  public:\n-    FindCursor(const FindCursor&) = default;\n-    FindCursor& operator=(const FindCursor&) = default;\n-\n-    bool is_valid() const;\n-    bool found() const;\n-    ZIntrusiveRBTreeNode* node() const;\n-    bool is_left_most() const;\n-    bool is_right_most() const;\n-    ZIntrusiveRBTreeNode* parent() const;\n-    ZIntrusiveRBTreeNode** insert_location() const;\n-  };\n-\n-private:\n-  ZIntrusiveRBTreeNode* _root_node;\n-  ZIntrusiveRBTreeNode* _left_most;\n-  ZIntrusiveRBTreeNode* _right_most;\n-  DEBUG_ONLY(uintptr_t _sequence_number;)\n-\n-  NONCOPYABLE(ZIntrusiveRBTree);\n-\n-#ifdef ASSERT\n-  template <bool swap_left_right>\n-  bool verify_node(ZIntrusiveRBTreeNode* parent, ZIntrusiveRBTreeNode* left_child, ZIntrusiveRBTreeNode* right_child);\n-  template <bool swap_left_right>\n-  bool verify_node(ZIntrusiveRBTreeNode* parent);\n-  template <bool swap_left_right>\n-  bool verify_node(ZIntrusiveRBTreeNode* parent, ZIntrusiveRBTreeNode* left_child);\n-  struct any_t {};\n-  template <bool swap_left_right>\n-  bool verify_node(ZIntrusiveRBTreeNode* parent, any_t, ZIntrusiveRBTreeNode* right_child);\n-#endif \/\/ ASSERT\n-\n-  ZIntrusiveRBTreeNode* const* root_node_addr() const;\n-\n-  void update_child_or_root(ZIntrusiveRBTreeNode* old_node, ZIntrusiveRBTreeNode* new_node, ZIntrusiveRBTreeNode* parent);\n-  void rotate_and_update_child_or_root(ZIntrusiveRBTreeNode* old_node, ZIntrusiveRBTreeNode* new_node, ZIntrusiveRBTreeNode::Color color);\n-\n-  template <ZIntrusiveRBTreeDirection PARENT_SIBLING_DIRECTION>\n-  void rebalance_insert_with_sibling(ZIntrusiveRBTreeNode* node, ZIntrusiveRBTreeNode* parent, ZIntrusiveRBTreeNode* grand_parent);\n-  template <ZIntrusiveRBTreeDirection PARENT_SIBLING_DIRECTION>\n-  bool rebalance_insert_with_parent_sibling(ZIntrusiveRBTreeNode** node_addr, ZIntrusiveRBTreeNode** parent_addr, ZIntrusiveRBTreeNode* grand_parent);\n-  void rebalance_insert(ZIntrusiveRBTreeNode* new_node);\n-\n-  template <ZIntrusiveRBTreeDirection SIBLING_DIRECTION>\n-  bool rebalance_remove_with_sibling(ZIntrusiveRBTreeNode** node_addr, ZIntrusiveRBTreeNode** parent_addr);\n-  void rebalance_remove(ZIntrusiveRBTreeNode* rebalance_from);\n-\n-  FindCursor make_cursor(ZIntrusiveRBTreeNode* const* insert_location, ZIntrusiveRBTreeNode* parent, bool left_most, bool right_most) const;\n-  template <ZIntrusiveRBTreeDirection DIRECTION>\n-  FindCursor find_next(const FindCursor& cursor) const;\n-\n-public:\n-  ZIntrusiveRBTree();\n-\n-  ZIntrusiveRBTreeNode* first() const;\n-  ZIntrusiveRBTreeNode* last() const;\n-\n-  FindCursor root_cursor() const;\n-  FindCursor get_cursor(const ZIntrusiveRBTreeNode* node) const;\n-  FindCursor prev_cursor(const ZIntrusiveRBTreeNode* node) const;\n-  FindCursor next_cursor(const ZIntrusiveRBTreeNode* node) const;\n-  FindCursor prev(const FindCursor& cursor) const;\n-  FindCursor next(const FindCursor& cursor) const;\n-  FindCursor find(const Key& key) const;\n-\n-  void insert(ZIntrusiveRBTreeNode* new_node, const FindCursor& find_cursor);\n-  void replace(ZIntrusiveRBTreeNode* new_node, const FindCursor& find_cursor);\n-  void remove(const FindCursor& find_cursor);\n-\n-  void verify_tree();\n-\n-public:\n-  template <bool IsConst, bool Reverse>\n-  class IteratorImplementation;\n-\n-  using Iterator = IteratorImplementation<false, false>;\n-  using ConstIterator = IteratorImplementation<true, false>;\n-  using ReverseIterator = IteratorImplementation<false, true>;\n-  using ConstReverseIterator = IteratorImplementation<true, true>;\n-\n-  \/\/ remove and replace invalidate the iterators\n-  \/\/ however the iterators provide a remove and replace\n-  \/\/ function which does not invalidate that iterator nor\n-  \/\/ any end iterator\n-  Iterator begin();\n-  Iterator end();\n-  ConstIterator begin() const;\n-  ConstIterator end() const;\n-  ConstIterator cbegin() const;\n-  ConstIterator cend() const;\n-  ReverseIterator rbegin();\n-  ReverseIterator rend();\n-  ConstReverseIterator rbegin() const;\n-  ConstReverseIterator rend() const;\n-  ConstReverseIterator crbegin() const;\n-  ConstReverseIterator crend() const;\n-};\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-class ZIntrusiveRBTree<Key, Compare>::IteratorImplementation {\n-  friend IteratorImplementation<true, Reverse>;\n-\n-public:\n-  using difference_type   = std::ptrdiff_t;\n-  using value_type        = const ZIntrusiveRBTreeNode;\n-  using pointer           = value_type*;\n-  using reference         = value_type&;\n-\n-private:\n-  ZIntrusiveRBTree<Key, Compare>* _tree;\n-  const ZIntrusiveRBTreeNode* _node;\n-  bool _removed;\n-\n-  bool at_end() const;\n-\n-public:\n-  IteratorImplementation(ZIntrusiveRBTree<Key, Compare>& tree, pointer node);\n-  IteratorImplementation(const IteratorImplementation<IsConst, Reverse>&) = default;\n-  template <bool Enable = IsConst, ENABLE_IF(Enable)>\n-  IteratorImplementation(const IteratorImplementation<false, Reverse>& other);\n-\n-  reference operator*() const;\n-  pointer operator->();\n-  IteratorImplementation& operator--();\n-  IteratorImplementation operator--(int);\n-  IteratorImplementation& operator++();\n-  IteratorImplementation operator++(int);\n-\n-  template <bool Enable = !IsConst, ENABLE_IF(Enable)>\n-  void replace(ZIntrusiveRBTreeNode * new_node);\n-  template <bool Enable = !IsConst, ENABLE_IF(Enable)>\n-  void remove();\n-\n-  \/\/ Note: friend operator overloads defined inside class declaration because of problems with ADL\n-  friend bool operator==(const IteratorImplementation& a, const IteratorImplementation& b) {\n-    precond(a._tree == b._tree);\n-    return a._node == b._node;\n-  }\n-  friend bool operator!=(const IteratorImplementation& a, const IteratorImplementation& b) {\n-    precond(a._tree == b._tree);\n-    return a._node != b._node;\n-  }\n-};\n-\n-#endif \/\/ SHARE_GC_Z_ZINTRUSIVERBTREE_HPP\n","filename":"src\/hotspot\/share\/gc\/z\/zIntrusiveRBTree.hpp","additions":0,"deletions":293,"binary":false,"changes":293,"status":"deleted"},{"patch":"@@ -1,1351 +0,0 @@\n-\/*\n- * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef SHARE_GC_Z_ZINTRUSIVERBTREE_INLINE_HPP\n-#define SHARE_GC_Z_ZINTRUSIVERBTREE_INLINE_HPP\n-\n-#include \"gc\/z\/zIntrusiveRBTree.hpp\"\n-\n-#include \"metaprogramming\/enableIf.hpp\"\n-#include \"utilities\/debug.hpp\"\n-\n-static constexpr ZIntrusiveRBTreeDirection other(const ZIntrusiveRBTreeDirection& direction) {\n-  return direction == ZIntrusiveRBTreeDirection::LEFT ? ZIntrusiveRBTreeDirection::RIGHT : ZIntrusiveRBTreeDirection::LEFT;\n-}\n-\n-inline ZIntrusiveRBTreeNode::ColoredNodePtr::ColoredNodePtr(ZIntrusiveRBTreeNode* node, Color color)\n-  : _value(reinterpret_cast<uintptr_t>(node) | color) {}\n-\n-inline constexpr ZIntrusiveRBTreeNode::Color ZIntrusiveRBTreeNode::ColoredNodePtr::color() const {\n-  return static_cast<Color>(_value & COLOR_MASK);\n-}\n-\n-inline constexpr bool ZIntrusiveRBTreeNode::ColoredNodePtr::is_black() const {\n-  return color() == BLACK;\n-}\n-\n-inline constexpr bool ZIntrusiveRBTreeNode::ColoredNodePtr::is_red() const {\n-  return color() == RED;\n-}\n-\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::ColoredNodePtr::node() const {\n-  return reinterpret_cast<ZIntrusiveRBTreeNode*>(_value & NODE_MASK);\n-}\n-\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::ColoredNodePtr::red_node() const {\n-  precond(is_red());\n-  return reinterpret_cast<ZIntrusiveRBTreeNode*>(_value);\n-}\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::ColoredNodePtr::black_node() const {\n-  precond(is_black());\n-  return reinterpret_cast<ZIntrusiveRBTreeNode*>(_value ^ BLACK);\n-}\n-\n-template <ZIntrusiveRBTreeDirection DIRECTION>\n-inline const ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::find_next_node() const {\n-  constexpr ZIntrusiveRBTreeDirection OTHER_DIRECTION = other(DIRECTION);\n-  const ZIntrusiveRBTreeNode* node = this;\n-\n-  \/\/ Down the tree\n-  if (node->has_child<DIRECTION>()) {\n-    node = node->child<DIRECTION>();\n-    while (node->has_child<OTHER_DIRECTION>()) {\n-      node = node->child<OTHER_DIRECTION>();\n-    }\n-    return node;\n-  }\n-\n-  \/\/ Up the tree\n-  const ZIntrusiveRBTreeNode* parent = node->parent();\n-  while (parent != nullptr && node == parent->child<DIRECTION>()) {\n-    node = parent;\n-    parent = node->parent();\n-  }\n-  return parent;\n-}\n-\n-template <ZIntrusiveRBTreeDirection DIRECTION>\n-inline const ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::child() const {\n-  if (DIRECTION == ZIntrusiveRBTreeDirection::LEFT) {\n-    return _left;\n-  }\n-  assert(DIRECTION == ZIntrusiveRBTreeDirection::RIGHT, \"must be\");\n-  return _right;\n-}\n-\n-template <ZIntrusiveRBTreeDirection DIRECTION>\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::child() {\n-  return const_cast<ZIntrusiveRBTreeNode*>(const_cast<const ZIntrusiveRBTreeNode*>(this)->template child<DIRECTION>());\n-}\n-\n-template <ZIntrusiveRBTreeDirection DIRECTION>\n-inline ZIntrusiveRBTreeNode* const* ZIntrusiveRBTreeNode::child_addr() const {\n-  if (DIRECTION == ZIntrusiveRBTreeDirection::LEFT) {\n-    return &_left;\n-  }\n-  assert(DIRECTION == ZIntrusiveRBTreeDirection::RIGHT, \"must be\");\n-  return &_right;\n-}\n-\n-template <ZIntrusiveRBTreeDirection DIRECTION>\n-inline bool ZIntrusiveRBTreeNode::has_child() const {\n-  if (DIRECTION == ZIntrusiveRBTreeDirection::LEFT) {\n-    return _left != nullptr;\n-  }\n-  assert(DIRECTION == ZIntrusiveRBTreeDirection::RIGHT, \"must be\");\n-  return _right != nullptr;\n-}\n-\n-template <ZIntrusiveRBTreeDirection DIRECTION>\n-inline void ZIntrusiveRBTreeNode::update_child(ZIntrusiveRBTreeNode* new_child) {\n-  if (DIRECTION == ZIntrusiveRBTreeDirection::LEFT) {\n-    _left = new_child;\n-    return;\n-  }\n-  assert(DIRECTION == ZIntrusiveRBTreeDirection::RIGHT, \"must be\");\n-  _right = new_child;\n-}\n-\n-inline void ZIntrusiveRBTreeNode::link_node(ZIntrusiveRBTreeNode* parent, ZIntrusiveRBTreeNode** insert_location) {\n-  \/\/ Newly linked node is always red\n-  _colored_parent = ColoredNodePtr(parent, RED);\n-  _left = nullptr;\n-  _right = nullptr;\n-\n-  \/\/ Link into location\n-  *insert_location = this;\n-}\n-\n-inline void ZIntrusiveRBTreeNode::copy_parent_and_color(ZIntrusiveRBTreeNode* other) {\n-  _colored_parent = other->_colored_parent;\n-}\n-\n-inline void ZIntrusiveRBTreeNode::update_parent_and_color(ZIntrusiveRBTreeNode* parent, Color color) {\n-  _colored_parent = ColoredNodePtr(parent, color);\n-}\n-\n-inline void ZIntrusiveRBTreeNode::update_parent(ZIntrusiveRBTreeNode* parent) {\n-  _colored_parent = ColoredNodePtr(parent, color());\n-}\n-\n-inline void ZIntrusiveRBTreeNode::update_color(Color color) {\n-  _colored_parent = ColoredNodePtr(parent(), color);\n-}\n-\n-inline void ZIntrusiveRBTreeNode::update_left_child(ZIntrusiveRBTreeNode* new_child) {\n-  update_child<ZIntrusiveRBTreeDirection::LEFT>(new_child);\n-}\n-\n-inline void ZIntrusiveRBTreeNode::update_right_child(ZIntrusiveRBTreeNode* new_child) {\n-  update_child<ZIntrusiveRBTreeDirection::RIGHT>(new_child);\n-}\n-\n-inline const ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::parent() const {\n-  return _colored_parent.node();\n-}\n-\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::parent() {\n-  return const_cast<ZIntrusiveRBTreeNode*>(const_cast<const ZIntrusiveRBTreeNode*>(this)->parent());\n-}\n-\n-inline const ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::red_parent() const {\n-  return _colored_parent.red_node();\n-}\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::red_parent() {\n-  return const_cast<ZIntrusiveRBTreeNode*>(const_cast<const ZIntrusiveRBTreeNode*>(this)->red_parent());\n-}\n-\n-inline const ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::black_parent() const {\n-  return _colored_parent.black_node();\n-}\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::black_parent() {\n-  return const_cast<ZIntrusiveRBTreeNode*>(const_cast<const ZIntrusiveRBTreeNode*>(this)->black_parent());\n-}\n-\n-inline bool ZIntrusiveRBTreeNode::has_parent() const {\n-  return _colored_parent.node() != nullptr;\n-}\n-\n-inline ZIntrusiveRBTreeNode::Color ZIntrusiveRBTreeNode::color() const {\n-  return _colored_parent.color();\n-}\n-\n-inline bool ZIntrusiveRBTreeNode::is_black() const {\n-  return _colored_parent.is_black();\n-}\n-\n-inline bool ZIntrusiveRBTreeNode::is_red() const {\n-  return _colored_parent.is_red();\n-}\n-\n-inline bool ZIntrusiveRBTreeNode::is_black(ZIntrusiveRBTreeNode* node) {\n-  return node == nullptr || node->is_black();\n-}\n-\n-inline ZIntrusiveRBTreeNode* const* ZIntrusiveRBTreeNode::left_child_addr() const {\n-  return child_addr<ZIntrusiveRBTreeDirection::LEFT>();\n-}\n-\n-inline ZIntrusiveRBTreeNode* const* ZIntrusiveRBTreeNode::right_child_addr() const {\n-  return child_addr<ZIntrusiveRBTreeDirection::RIGHT>();\n-}\n-\n-inline const ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::left_child() const {\n-  return child<ZIntrusiveRBTreeDirection::LEFT>();\n-}\n-\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::left_child() {\n-  return const_cast<ZIntrusiveRBTreeNode*>(const_cast<const ZIntrusiveRBTreeNode*>(this)->left_child());\n-}\n-\n-inline const ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::right_child() const {\n-  return child<ZIntrusiveRBTreeDirection::RIGHT>();\n-}\n-\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::right_child() {\n-  return const_cast<ZIntrusiveRBTreeNode*>(const_cast<const ZIntrusiveRBTreeNode*>(this)->right_child());\n-}\n-\n-inline bool ZIntrusiveRBTreeNode::has_left_child() const {\n-  return has_child<ZIntrusiveRBTreeDirection::LEFT>();\n-}\n-\n-inline bool ZIntrusiveRBTreeNode::has_right_child() const {\n-  return has_child<ZIntrusiveRBTreeDirection::RIGHT>();\n-}\n-\n-inline ZIntrusiveRBTreeNode::ZIntrusiveRBTreeNode() {}\n-\n-inline const ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::prev() const {\n-  return find_next_node<ZIntrusiveRBTreeDirection::LEFT>();\n-}\n-\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::prev() {\n-  return const_cast<ZIntrusiveRBTreeNode*>(const_cast<const ZIntrusiveRBTreeNode*>(this)->prev());\n-}\n-\n-inline const ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::next() const {\n-  return find_next_node<ZIntrusiveRBTreeDirection::RIGHT>();\n-}\n-\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTreeNode::next() {\n-  return const_cast<ZIntrusiveRBTreeNode*>(const_cast<const ZIntrusiveRBTreeNode*>(this)->next());\n-}\n-\n-#ifdef ASSERT\n-template <typename Key, typename Compare>\n-template <bool swap_left_right>\n-inline bool ZIntrusiveRBTree<Key, Compare>::verify_node(ZIntrusiveRBTreeNode* parent, ZIntrusiveRBTreeNode* left_child, ZIntrusiveRBTreeNode* right_child) {\n-  if (swap_left_right) {\n-    ::swap(left_child, right_child);\n-  }\n-  assert(parent->left_child() == left_child, swap_left_right ? \"Bad child Swapped\" : \"Bad child\");\n-  assert(parent->right_child() == right_child, swap_left_right ? \"Bad child Swapped\" : \"Bad child\");\n-  if (left_child != nullptr) {\n-    assert(left_child->parent() == parent, swap_left_right ? \"Bad parent Swapped\" : \"Bad parent\");\n-  }\n-  if (right_child != nullptr) {\n-    assert(right_child->parent() == parent, swap_left_right ? \"Bad parent Swapped\" : \"Bad parent\");\n-  }\n-  return true;\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool swap_left_right>\n-inline bool ZIntrusiveRBTree<Key, Compare>::verify_node(ZIntrusiveRBTreeNode* parent) {\n-  if (parent == nullptr) {\n-    return true;\n-  }\n-  if (swap_left_right) {\n-    return verify_node<swap_left_right>(parent, parent->right_child());\n-  }\n-  return verify_node<swap_left_right>(parent, parent->left_child());\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool swap_left_right>\n-inline bool ZIntrusiveRBTree<Key, Compare>::verify_node(ZIntrusiveRBTreeNode* parent, ZIntrusiveRBTreeNode* left_child) {\n-  if (swap_left_right) {\n-    return verify_node<swap_left_right>(parent, left_child, parent->left_child());\n-  }\n-  return verify_node<swap_left_right>(parent, left_child, parent->right_child());\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool swap_left_right>\n-inline bool ZIntrusiveRBTree<Key, Compare>::verify_node(ZIntrusiveRBTreeNode* parent, any_t, ZIntrusiveRBTreeNode* right_child) {\n-  if (swap_left_right) {\n-    return verify_node<swap_left_right>(parent, parent->right_child(), right_child);\n-  }\n-  return verify_node<swap_left_right>(parent, parent->left_child(), right_child);\n-}\n-#endif \/\/ ASSERT\n-\n-template <typename Key, typename Compare>\n-inline ZIntrusiveRBTreeNode* const* ZIntrusiveRBTree<Key, Compare>::root_node_addr() const {\n-  return &_root_node;\n-}\n-\n-template <typename Key, typename Compare>\n-void ZIntrusiveRBTree<Key, Compare>::update_child_or_root(ZIntrusiveRBTreeNode* old_node, ZIntrusiveRBTreeNode* new_node, ZIntrusiveRBTreeNode* parent) {\n-  if (parent == nullptr) {\n-    \/\/ Update root\n-    _root_node = new_node;\n-    return;\n-  }\n-  if (old_node == parent->left_child()) {\n-    parent->update_left_child(new_node);\n-    return;\n-  }\n-  assert(old_node == parent->right_child(), \"must be\");\n-  parent->update_right_child(new_node);\n-}\n-\n-template <typename Key, typename Compare>\n-inline void ZIntrusiveRBTree<Key, Compare>::rotate_and_update_child_or_root(ZIntrusiveRBTreeNode* old_node, ZIntrusiveRBTreeNode* new_node, ZIntrusiveRBTreeNode::Color color) {\n-  ZIntrusiveRBTreeNode* const parent = old_node->parent();\n-  new_node->copy_parent_and_color(old_node);\n-  old_node->update_parent_and_color(new_node, color);\n-  update_child_or_root(old_node, new_node, parent);\n-}\n-\n-template <typename Key, typename Compare>\n-template <ZIntrusiveRBTreeDirection PARENT_SIBLING_DIRECTION>\n-inline void ZIntrusiveRBTree<Key, Compare>::rebalance_insert_with_sibling(ZIntrusiveRBTreeNode* node, ZIntrusiveRBTreeNode* parent, ZIntrusiveRBTreeNode* grand_parent) {\n-  DEBUG_ONLY(const bool swap_left_right = PARENT_SIBLING_DIRECTION == ZIntrusiveRBTreeDirection::LEFT;)\n-  constexpr ZIntrusiveRBTreeDirection OTHER_DIRECTION = other(PARENT_SIBLING_DIRECTION);\n-  ZIntrusiveRBTreeNode* sibling = parent->template child<PARENT_SIBLING_DIRECTION>();\n-  DEBUG_ONLY(bool rotated_parent = false;)\n-  if (node == sibling) {\n-    DEBUG_ONLY(rotated_parent = true;)\n-    \/\/ Rotate up node through parent\n-    ZIntrusiveRBTreeNode* child = node->template child<OTHER_DIRECTION>();\n-\n-    \/\/\/\/ PRE\n-    \/\/\n-    \/\/      G          G\n-    \/\/     \/            \\\n-    \/\/    p      or      p\n-    \/\/     \\            \/\n-    \/\/      n          n\n-    \/\/     \/            \\\n-    \/\/   (c)            (c)\n-    \/\/\n-    \/\/\/\/\n-    precond(grand_parent->is_black());\n-    precond(parent->is_red());\n-    precond(node->is_red());\n-    precond(verify_node<swap_left_right>(grand_parent, parent));\n-    precond(verify_node<swap_left_right>(parent, any_t{}, node));\n-    precond(verify_node<swap_left_right>(node, child));\n-    precond(verify_node<swap_left_right>(child));\n-\n-    \/\/ Fix children\n-    parent->template update_child<PARENT_SIBLING_DIRECTION>(child);\n-    node->template update_child<OTHER_DIRECTION>(parent);\n-\n-    \/\/ Fix parents and colors\n-    if (child != nullptr) {\n-      child->update_parent_and_color(parent, ZIntrusiveRBTreeNode::BLACK);\n-    }\n-    parent->update_parent_and_color(node, ZIntrusiveRBTreeNode::RED);\n-\n-    \/\/\/\/ POST\n-    \/\/\n-    \/\/        G          G\n-    \/\/       \/            \\\n-    \/\/      n      or      n\n-    \/\/     \/                \\\n-    \/\/    p                  p\n-    \/\/     \\                \/\n-    \/\/     (C)            (C)\n-    \/\/\n-    \/\/\/\/\n-    postcond(grand_parent->is_black());\n-    postcond(parent->is_red());\n-    postcond(node->is_red());\n-    postcond(ZIntrusiveRBTreeNode::is_black(child));\n-    \/\/ The grand_parent is updated in the next rotation\n-    \/\/ postcond(verify_node<swap_left_right>(grand_parent, node));\n-    postcond(verify_node<swap_left_right>(node, parent));\n-    postcond(verify_node<swap_left_right>(parent, any_t{}, child));\n-    postcond(verify_node<swap_left_right>(child));\n-\n-    parent = node;\n-    sibling = parent->template child<PARENT_SIBLING_DIRECTION>();\n-    DEBUG_ONLY(node = parent->template child<OTHER_DIRECTION>();)\n-  }\n-\n-  \/\/\/\/ PRE\n-  \/\/\n-  \/\/        G        G\n-  \/\/       \/          \\\n-  \/\/      p     or     p\n-  \/\/     \/ \\          \/ \\\n-  \/\/    n  (s)      (s)  n\n-  \/\/\n-  \/\/\/\/\n-  precond(grand_parent->is_black());\n-  precond(parent->is_red());\n-  precond(node->is_red());\n-  precond(rotated_parent || verify_node<swap_left_right>(grand_parent, parent));\n-  precond(verify_node<swap_left_right>(parent, node, sibling));\n-  precond(verify_node<swap_left_right>(node));\n-  precond(verify_node<swap_left_right>(sibling));\n-\n-  \/\/ Rotate up parent through grand-parent\n-\n-  \/\/ Fix children\n-  grand_parent->template update_child<OTHER_DIRECTION>(sibling);\n-  parent->template update_child<PARENT_SIBLING_DIRECTION>(grand_parent);\n-\n-  \/\/ Fix parents and colors\n-  if (sibling != nullptr) {\n-    sibling->update_parent_and_color(grand_parent, ZIntrusiveRBTreeNode::BLACK);\n-  }\n-  rotate_and_update_child_or_root(grand_parent, parent, ZIntrusiveRBTreeNode::RED);\n-\n-  \/\/\/\/ POST\n-  \/\/\n-  \/\/      P          P\n-  \/\/     \/ \\        \/ \\\n-  \/\/    n   g  or  g   n\n-  \/\/       \/        \\\n-  \/\/     (S)        (S)\n-  \/\/\n-  \/\/\/\/\n-  postcond(parent->is_black());\n-  postcond(grand_parent->is_red());\n-  postcond(node->is_red());\n-  postcond(ZIntrusiveRBTreeNode::is_black(sibling));\n-  postcond(verify_node<swap_left_right>(parent, node, grand_parent));\n-  postcond(verify_node<swap_left_right>(node));\n-  postcond(verify_node<swap_left_right>(grand_parent, sibling));\n-  postcond(verify_node<swap_left_right>(sibling));\n-}\n-\n-template <typename Key, typename Compare>\n-template <ZIntrusiveRBTreeDirection PARENT_SIBLING_DIRECTION>\n-inline bool ZIntrusiveRBTree<Key, Compare>::rebalance_insert_with_parent_sibling(ZIntrusiveRBTreeNode** node_addr, ZIntrusiveRBTreeNode** parent_addr, ZIntrusiveRBTreeNode* grand_parent) {\n-  DEBUG_ONLY(const bool swap_left_right = PARENT_SIBLING_DIRECTION == ZIntrusiveRBTreeDirection::LEFT;)\n-  constexpr ZIntrusiveRBTreeDirection OTHER_DIRECTION = other(PARENT_SIBLING_DIRECTION);\n-  ZIntrusiveRBTreeNode* const parent_sibling = grand_parent->template child<PARENT_SIBLING_DIRECTION>();\n-  ZIntrusiveRBTreeNode*& node = *node_addr;\n-  ZIntrusiveRBTreeNode*& parent = *parent_addr;\n-  if (parent_sibling != nullptr && parent_sibling->is_red()) {\n-    \/\/\/\/ PRE\n-    \/\/\n-    \/\/       G          G\n-    \/\/      \/ \\        \/ \\\n-    \/\/     p   u  or  u   p\n-    \/\/    \/ \\            \/ \\\n-    \/\/   n | n          n | n\n-    \/\/\n-    \/\/\/\/\n-    precond(grand_parent->is_black());\n-    precond(parent_sibling->is_red());\n-    precond(parent->is_red());\n-    precond(node->is_red());\n-    precond(verify_node<swap_left_right>(grand_parent, parent, parent_sibling));\n-    precond(parent->left_child() == node || parent->right_child() == node);\n-    precond(verify_node<swap_left_right>(parent));\n-    precond(verify_node<swap_left_right>(parent_sibling));\n-    precond(verify_node<swap_left_right>(node));\n-\n-    \/\/ Flip colors of parent, parent sibling and grand parent\n-    parent_sibling->update_parent_and_color(grand_parent, ZIntrusiveRBTreeNode::BLACK);\n-    parent->update_parent_and_color(grand_parent, ZIntrusiveRBTreeNode::BLACK);\n-    ZIntrusiveRBTreeNode* grand_grand_parent = grand_parent->black_parent();\n-    grand_parent->update_parent_and_color(grand_grand_parent, ZIntrusiveRBTreeNode::RED);\n-\n-    \/\/\/\/ POST\n-    \/\/\n-    \/\/       g          g\n-    \/\/      \/ \\        \/ \\\n-    \/\/     P   U  or  U   P\n-    \/\/    \/ \\            \/ \\\n-    \/\/   n | n          n | n\n-    \/\/\n-    \/\/\/\/\n-    postcond(grand_parent->is_red());\n-    postcond(parent_sibling->is_black());\n-    postcond(parent->is_black());\n-    postcond(node->is_red());\n-    postcond(verify_node<swap_left_right>(grand_parent, parent, parent_sibling));\n-    postcond(parent->left_child() == node || parent->right_child() == node);\n-    postcond(verify_node<swap_left_right>(parent));\n-    postcond(verify_node<swap_left_right>(parent_sibling));\n-    postcond(verify_node<swap_left_right>(node));\n-\n-    \/\/ Recurse up the tree\n-    node = grand_parent;\n-    parent = grand_grand_parent;\n-    return false; \/\/ Not finished\n-  }\n-\n-  rebalance_insert_with_sibling<PARENT_SIBLING_DIRECTION>(node, parent, grand_parent);\n-  return true; \/\/ Finished\n-}\n-\n-template <typename Key, typename Compare>\n-inline void ZIntrusiveRBTree<Key, Compare>::rebalance_insert(ZIntrusiveRBTreeNode* new_node) {\n-  ZIntrusiveRBTreeNode* node = new_node;\n-  ZIntrusiveRBTreeNode* parent = node->red_parent();\n-  for (;;) {\n-    precond(node->is_red());\n-    if (parent == nullptr) {\n-      \/\/ Recursive (or root) case\n-      node->update_parent_and_color(parent, ZIntrusiveRBTreeNode::BLACK);\n-      break;\n-    }\n-    if (parent->is_black()) {\n-      \/\/ Tree is balanced\n-      break;\n-    }\n-    ZIntrusiveRBTreeNode* grand_parent = parent->red_parent();\n-    if (parent == grand_parent->left_child() ? rebalance_insert_with_parent_sibling<ZIntrusiveRBTreeDirection::RIGHT>(&node, &parent, grand_parent)\n-                                            : rebalance_insert_with_parent_sibling<ZIntrusiveRBTreeDirection::LEFT>(&node, &parent, grand_parent)) {\n-      break;\n-    }\n-  }\n-}\n-\n-template <typename Key, typename Compare>\n-template <ZIntrusiveRBTreeDirection SIBLING_DIRECTION>\n-inline bool ZIntrusiveRBTree<Key, Compare>::rebalance_remove_with_sibling(ZIntrusiveRBTreeNode** node_addr, ZIntrusiveRBTreeNode** parent_addr) {\n-  DEBUG_ONLY(const bool swap_left_right = SIBLING_DIRECTION == ZIntrusiveRBTreeDirection::LEFT;)\n-  constexpr ZIntrusiveRBTreeDirection OTHER_DIRECTION = other(SIBLING_DIRECTION);\n-  ZIntrusiveRBTreeNode*& node = *node_addr;\n-  ZIntrusiveRBTreeNode*& parent = *parent_addr;\n-  ZIntrusiveRBTreeNode* sibling = parent->template child<SIBLING_DIRECTION>();\n-  if (sibling->is_red()) {\n-    ZIntrusiveRBTreeNode* sibling_child = sibling->template child<OTHER_DIRECTION>();\n-    \/\/\/\/ PRE\n-    \/\/\n-    \/\/     P          P\n-    \/\/    \/ \\        \/ \\\n-    \/\/   N   s  or  s   N\n-    \/\/      \/        \\\n-    \/\/     SC        SC\n-    \/\/\n-    \/\/\/\/\n-    precond(parent->is_black());\n-    precond(ZIntrusiveRBTreeNode::is_black(node));\n-    precond(sibling->is_red());\n-    precond(ZIntrusiveRBTreeNode::is_black(sibling_child));\n-    precond(verify_node<swap_left_right>(parent, node, sibling));\n-    precond(verify_node<swap_left_right>(node));\n-    precond(verify_node<swap_left_right>(sibling, sibling_child));\n-    precond(verify_node<swap_left_right>(sibling_child));\n-\n-    \/\/ Rotate sibling up through parent\n-\n-    \/\/ Fix children\n-    parent->template update_child<SIBLING_DIRECTION>(sibling_child);\n-    sibling->template update_child<OTHER_DIRECTION>(parent);\n-\n-    \/\/ Fix parents and colors\n-    sibling_child->update_parent_and_color(parent, ZIntrusiveRBTreeNode::BLACK);\n-    rotate_and_update_child_or_root(parent, sibling, ZIntrusiveRBTreeNode::RED);\n-\n-    \/\/\/\/ POST\n-    \/\/\n-    \/\/       S         S\n-    \/\/      \/           \\\n-    \/\/     p             p\n-    \/\/    \/ \\           \/ \\\n-    \/\/   N   SC        SC  N\n-    \/\/\n-    \/\/\/\/\n-    postcond(sibling->is_black());\n-    postcond(parent->is_red());\n-    postcond(ZIntrusiveRBTreeNode::is_black(node));\n-    postcond(ZIntrusiveRBTreeNode::is_black(sibling_child));\n-    postcond(verify_node<swap_left_right>(sibling, parent));\n-    postcond(verify_node<swap_left_right>(parent, node, sibling_child));\n-    postcond(verify_node<swap_left_right>(node));\n-    postcond(verify_node<swap_left_right>(sibling_child));\n-\n-    \/\/ node has a new sibling\n-    sibling = sibling_child;\n-  }\n-\n-  ZIntrusiveRBTreeNode* sibling_child = sibling->template child<SIBLING_DIRECTION>();\n-  DEBUG_ONLY(bool rotated_parent = false;)\n-  if (ZIntrusiveRBTreeNode::is_black(sibling_child)) {\n-    DEBUG_ONLY(rotated_parent = true;)\n-    ZIntrusiveRBTreeNode* sibling_other_child = sibling->template child<OTHER_DIRECTION>();\n-    if (ZIntrusiveRBTreeNode::is_black(sibling_other_child)) {\n-      \/\/\/\/ PRE\n-      \/\/\n-      \/\/    (p)        (p)\n-      \/\/    \/ \\        \/ \\\n-      \/\/   N   S  or  S   N\n-      \/\/\n-      \/\/\/\/\n-      precond(ZIntrusiveRBTreeNode::is_black(node));\n-      precond(sibling->is_black());\n-      precond(verify_node<swap_left_right>(parent, node, sibling));\n-\n-      \/\/ Flip sibling color to RED\n-      sibling->update_parent_and_color(parent, ZIntrusiveRBTreeNode::RED);\n-\n-      \/\/\/\/ POST\n-      \/\/\n-      \/\/    (p)        (p)\n-      \/\/    \/ \\        \/ \\\n-      \/\/   N   s  or  s   N\n-      \/\/\n-      \/\/\/\/\n-      postcond(ZIntrusiveRBTreeNode::is_black(node));\n-      postcond(sibling->is_red());\n-      postcond(verify_node<swap_left_right>(parent, node, sibling));\n-\n-      if (parent->is_black()) {\n-        \/\/ We did not introduce a RED-RED edge, if parent is\n-        \/\/ the root we are done, else recurse up the tree\n-        if (parent->parent() != nullptr) {\n-          node = parent;\n-          parent = node->parent();\n-          return false;\n-        }\n-        return true;\n-      }\n-      \/\/ Change RED-RED edge to BLACK-RED edge\n-      parent->update_color(ZIntrusiveRBTreeNode::BLACK);\n-      return true;\n-    }\n-\n-    ZIntrusiveRBTreeNode* sibling_grand_child = sibling_other_child->template child<SIBLING_DIRECTION>();\n-    \/\/\/\/ PRE\n-    \/\/\n-    \/\/    (p)          (p)\n-    \/\/    \/ \\          \/ \\\n-    \/\/   N   S        S   N\n-    \/\/      \/     or   \\\n-    \/\/    soc          soc\n-    \/\/      \\          \/\n-    \/\/     (sgc)     (sgc)\n-    \/\/\n-    \/\/\/\/\n-    precond(ZIntrusiveRBTreeNode::is_black(node));\n-    precond(sibling->is_black());\n-    precond(sibling_other_child->is_red());\n-    precond(verify_node<swap_left_right>(parent, node, sibling));\n-    precond(verify_node<swap_left_right>(node));\n-    precond(verify_node<swap_left_right>(sibling, sibling_other_child, sibling_child));\n-    precond(verify_node<swap_left_right>(sibling_other_child, any_t{}, sibling_grand_child));\n-    precond(verify_node<swap_left_right>(sibling_grand_child));\n-\n-    \/\/ Rotate sibling other child through the sibling\n-\n-    \/\/ Fix children\n-    sibling->template update_child<OTHER_DIRECTION>(sibling_grand_child);\n-    sibling_other_child->template update_child<SIBLING_DIRECTION>(sibling);\n-    parent->template update_child<SIBLING_DIRECTION>(sibling_other_child);\n-\n-    \/\/ Fix parents and colors\n-    if (sibling_grand_child != nullptr) {\n-      sibling_grand_child->update_parent_and_color(sibling, ZIntrusiveRBTreeNode::BLACK);\n-    }\n-    \/\/ Defer updating the sibling and sibling other child parents until\n-    \/\/ after we rotate below. This will also fix the any potential RED-RED\n-    \/\/ edge between parent and sibling_other_child\n-\n-    \/\/\/\/ POST\n-    \/\/\n-    \/\/    (p)            (p)\n-    \/\/    \/ \\            \/ \\\n-    \/\/   N  soc   or   soc  N\n-    \/\/      \/ \\        \/ \\\n-    \/\/    SGC  S      S  SGC\n-    \/\/\n-    \/\/\/\/\n-    postcond(ZIntrusiveRBTreeNode::is_black(node));\n-    postcond(sibling->is_black());\n-    postcond(sibling_other_child->is_red());\n-    postcond(ZIntrusiveRBTreeNode::is_black(sibling_grand_child));\n-    \/\/ Deferred\n-    \/\/ postcond(verify_node<swap_left_right>(parent, node, sibling_other_child));\n-    postcond(verify_node<swap_left_right>(node));\n-    \/\/ postcond(verify_node<swap_left_right>(sibling_other_child, sibling_grand_child, sibling));\n-    postcond(verify_node<swap_left_right>(sibling_grand_child));\n-    postcond(verify_node<swap_left_right>(sibling));\n-\n-    \/\/ node has a new sibling\n-    sibling_child = sibling;\n-    sibling = sibling_other_child;\n-  }\n-\n-  ZIntrusiveRBTreeNode* sibling_other_child = sibling->template child<OTHER_DIRECTION>();\n-  \/\/\/\/ PRE\n-  \/\/\n-  \/\/    (p)              (p)\n-  \/\/    \/ \\              \/ \\\n-  \/\/   N   S     or     S   N\n-  \/\/      \/ \\          \/ \\\n-  \/\/   (soc)(sc)    (sc)(soc)\n-  \/\/\n-  \/\/\/\/\n-  DEBUG_ONLY(ZIntrusiveRBTreeNode::Color parent_color = parent->color();)\n-  precond(ZIntrusiveRBTreeNode::is_black(node));\n-  precond(rotated_parent || sibling->is_black());\n-  DEBUG_ONLY(bool sibling_other_child_is_black = ZIntrusiveRBTreeNode::is_black(sibling_other_child);)\n-  precond(rotated_parent || verify_node<swap_left_right>(parent, node, sibling));\n-  precond(verify_node<swap_left_right>(node));\n-  precond(rotated_parent || verify_node<swap_left_right>(sibling, sibling_other_child, sibling_child));\n-  postcond(verify_node<swap_left_right>(sibling_other_child));\n-  postcond(verify_node<swap_left_right>(sibling_child));\n-\n-  \/\/ Rotate sibling through parent and fix colors\n-\n-  \/\/ Fix children\n-  parent->template update_child<SIBLING_DIRECTION>(sibling_other_child);\n-  sibling->template update_child<OTHER_DIRECTION>(parent);\n-\n-  \/\/ Fix parents and colors\n-  sibling_child->update_parent_and_color(sibling, ZIntrusiveRBTreeNode::BLACK);\n-  if (sibling_other_child != nullptr) {\n-    sibling_other_child->update_parent(parent);\n-  }\n-  rotate_and_update_child_or_root(parent, sibling, ZIntrusiveRBTreeNode::BLACK);\n-\n-  \/\/\/\/ POST\n-  \/\/\n-  \/\/      (s)           (s)\n-  \/\/      \/ \\           \/ \\\n-  \/\/     P   SC  or    SC  P\n-  \/\/    \/ \\               \/ \\\n-  \/\/   N (soc)         (soc) N\n-  \/\/\n-  \/\/\/\/\n-  postcond(sibling->color() == parent_color);\n-  postcond(parent->is_black());\n-  postcond(sibling_child->is_black());\n-  postcond(ZIntrusiveRBTreeNode::is_black(node));\n-  postcond(sibling_other_child_is_black == ZIntrusiveRBTreeNode::is_black(sibling_other_child));\n-  postcond(verify_node<swap_left_right>(sibling, parent, sibling_child));\n-  postcond(verify_node<swap_left_right>(parent, node, sibling_other_child));\n-  postcond(verify_node<swap_left_right>(sibling_child));\n-  postcond(verify_node<swap_left_right>(node));\n-  postcond(verify_node<swap_left_right>(sibling_other_child));\n-  return true;\n-}\n-\n-template <typename Key, typename Compare>\n-inline void ZIntrusiveRBTree<Key, Compare>::rebalance_remove(ZIntrusiveRBTreeNode* rebalance_from) {\n-  ZIntrusiveRBTreeNode* node = nullptr;\n-  ZIntrusiveRBTreeNode* parent = rebalance_from;\n-\n-  for (;;) {\n-    precond(ZIntrusiveRBTreeNode::is_black(node));\n-    precond(parent != nullptr);\n-    if (node == parent->left_child() ? rebalance_remove_with_sibling<ZIntrusiveRBTreeDirection::RIGHT>(&node, &parent)\n-                                    : rebalance_remove_with_sibling<ZIntrusiveRBTreeDirection::LEFT>(&node, &parent)) {\n-      break;\n-    }\n-  }\n-}\n-\n-template <typename Key, typename Compare>\n-inline ZIntrusiveRBTree<Key, Compare>::FindCursor::FindCursor(ZIntrusiveRBTreeNode** insert_location, ZIntrusiveRBTreeNode* parent, bool left_most, bool right_most DEBUG_ONLY(COMMA uintptr_t sequence_number))\n-  : _insert_location(insert_location),\n-    _parent(parent),\n-    _left_most(left_most),\n-    _right_most(right_most)\n-    DEBUG_ONLY(COMMA _sequence_number(sequence_number)) {}\n-\n-template <typename Key, typename Compare>\n-inline ZIntrusiveRBTree<Key, Compare>::FindCursor::FindCursor()\n-  : _insert_location(nullptr),\n-    _parent(nullptr),\n-    _left_most(),\n-    _right_most()\n-    DEBUG_ONLY(COMMA _sequence_number()) {}\n-\n-#ifdef ASSERT\n-template <typename Key, typename Compare>\n-inline bool ZIntrusiveRBTree<Key, Compare>::FindCursor::is_valid(uintptr_t sequence_number) const {\n-  return is_valid() && _sequence_number == sequence_number;\n-}\n-#endif \/\/ ASSERT\n-\n-template <typename Key, typename Compare>\n-inline bool ZIntrusiveRBTree<Key, Compare>::FindCursor::is_valid() const {\n-  return insert_location() != nullptr;\n-}\n-\n-template <typename Key, typename Compare>\n-inline bool ZIntrusiveRBTree<Key, Compare>::FindCursor::found() const {\n-  return node() != nullptr;\n-}\n-\n-template <typename Key, typename Compare>\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTree<Key, Compare>::FindCursor::node() const {\n-  precond(is_valid());\n-  return *_insert_location == nullptr ? nullptr : *_insert_location;\n-}\n-\n-template <typename Key, typename Compare>\n-inline bool ZIntrusiveRBTree<Key, Compare>::FindCursor::is_left_most() const {\n-  precond(is_valid());\n-  return _left_most;\n-}\n-\n-template <typename Key, typename Compare>\n-inline bool ZIntrusiveRBTree<Key, Compare>::FindCursor::is_right_most() const {\n-  precond(is_valid());\n-  return _right_most;\n-}\n-\n-template <typename Key, typename Compare>\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTree<Key, Compare>::FindCursor::parent() const {\n-  precond(is_valid());\n-  return _parent;\n-}\n-\n-template <typename Key, typename Compare>\n-inline ZIntrusiveRBTreeNode** ZIntrusiveRBTree<Key, Compare>::FindCursor::insert_location() const {\n-  return _insert_location;\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::FindCursor ZIntrusiveRBTree<Key, Compare>::make_cursor(ZIntrusiveRBTreeNode* const* insert_location, ZIntrusiveRBTreeNode* parent, bool left_most, bool right_most) const {\n-  return FindCursor(const_cast<ZIntrusiveRBTreeNode**>(insert_location), parent, left_most, right_most DEBUG_ONLY(COMMA _sequence_number));\n-}\n-\n-template <typename Key, typename Compare>\n-template <ZIntrusiveRBTreeDirection DIRECTION>\n-inline typename ZIntrusiveRBTree<Key, Compare>::FindCursor ZIntrusiveRBTree<Key, Compare>::find_next(const FindCursor& cursor) const {\n-  constexpr ZIntrusiveRBTreeDirection OTHER_DIRECTION = other(DIRECTION);\n-  if (cursor.found()) {\n-    ZIntrusiveRBTreeNode* const node = cursor.node();\n-    const ZIntrusiveRBTreeNode* const next_node = node->template find_next_node<DIRECTION>();\n-    if (next_node != nullptr) {\n-      return get_cursor(next_node);\n-    }\n-    const bool is_right_most = DIRECTION == ZIntrusiveRBTreeDirection::RIGHT && node == _right_most;\n-    const bool is_left_most = DIRECTION == ZIntrusiveRBTreeDirection::LEFT && node == _left_most;\n-    return make_cursor(node->template child_addr<DIRECTION>(), node, is_left_most, is_right_most);\n-  }\n-  ZIntrusiveRBTreeNode* const parent = cursor.parent();\n-  if (parent == nullptr) {\n-    assert(&_root_node == cursor.insert_location(), \"must be\");\n-    \/\/ tree is empty\n-    return FindCursor();\n-  }\n-  if (parent->template child_addr<OTHER_DIRECTION>() == cursor.insert_location()) {\n-    \/\/ Cursor at leaf in other direction, parent is next in direction\n-    return get_cursor(parent);\n-  }\n-  assert(parent->template child_addr<DIRECTION>() == cursor.insert_location(), \"must be\");\n-  \/\/ Cursor at leaf in direction, parent->next in direction is also cursors next in direction\n-  return get_cursor(parent->template find_next_node<DIRECTION>());\n-}\n-\n-template <typename Key, typename Compare>\n-inline ZIntrusiveRBTree<Key, Compare>::ZIntrusiveRBTree()\n-  : _root_node(nullptr),\n-    _left_most(nullptr),\n-    _right_most(nullptr)\n-    DEBUG_ONLY(COMMA _sequence_number()) {}\n-\n-template <typename Key, typename Compare>\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTree<Key, Compare>::first() const {\n-  return _left_most;\n-}\n-\n-template <typename Key, typename Compare>\n-inline ZIntrusiveRBTreeNode* ZIntrusiveRBTree<Key, Compare>::last() const {\n-  return _right_most;\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::FindCursor ZIntrusiveRBTree<Key, Compare>::root_cursor() const {\n-  const bool is_left_most = _root_node == _left_most;\n-  const bool is_right_most = _root_node == _right_most;\n-  return make_cursor(&_root_node, nullptr, is_left_most, is_right_most);\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::FindCursor ZIntrusiveRBTree<Key, Compare>::get_cursor(const ZIntrusiveRBTreeNode* node) const {\n-  if (node == nullptr) {\n-    \/\/ Return a invalid cursor\n-    return FindCursor();\n-  }\n-  const bool is_left_most = node == _left_most;\n-  const bool is_right_most = node == _right_most;\n-  if (node->has_parent()) {\n-    const ZIntrusiveRBTreeNode* const parent = node->parent();\n-    if (parent->left_child() == node) {\n-      return make_cursor(parent->left_child_addr(), nullptr, is_left_most, is_right_most);\n-    }\n-    assert(parent->right_child() == node, \"must be\");\n-      return make_cursor(parent->right_child_addr(), nullptr, is_left_most, is_right_most);\n-  }\n-  \/\/ No parent, root node\n-  return make_cursor(&_root_node, nullptr, is_left_most, is_right_most);\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::FindCursor ZIntrusiveRBTree<Key, Compare>::prev_cursor(const ZIntrusiveRBTreeNode* node) const {\n-  return prev(get_cursor(node));\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::FindCursor ZIntrusiveRBTree<Key, Compare>::next_cursor(const ZIntrusiveRBTreeNode* node) const {\n-  return next(get_cursor(node));\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::FindCursor ZIntrusiveRBTree<Key, Compare>::prev(const FindCursor& cursor) const {\n-  return find_next<ZIntrusiveRBTreeDirection::LEFT>(cursor);\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::FindCursor ZIntrusiveRBTree<Key, Compare>::next(const FindCursor& cursor) const {\n-  return find_next<ZIntrusiveRBTreeDirection::RIGHT>(cursor);\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::FindCursor ZIntrusiveRBTree<Key, Compare>::find(const Key& key) const {\n-  Compare compare_fn;\n-  ZIntrusiveRBTreeNode* const* insert_location = root_node_addr();\n-  ZIntrusiveRBTreeNode* parent = nullptr;\n-  bool left_most = true;\n-  bool right_most = true;\n-  while (*insert_location != nullptr) {\n-    int result = compare_fn(key, *insert_location);\n-    if (result == 0) {\n-      assert(*insert_location != _left_most || left_most, \"must be\");\n-      assert(*insert_location != _right_most || right_most, \"must be\");\n-      return make_cursor(insert_location, parent, *insert_location == _left_most, *insert_location == _right_most);\n-    }\n-    parent = *insert_location;\n-    if (result < 0) {\n-      insert_location = parent->left_child_addr();\n-      \/\/ We took one step to the left, cannot be right_most.\n-      right_most = false;\n-    } else {\n-      insert_location = parent->right_child_addr();\n-      \/\/ We took one step to the right, cannot be left_most.\n-      left_most = false;\n-    }\n-  }\n-  return make_cursor(insert_location, parent, left_most, right_most);\n-}\n-\n-template <typename Key, typename Compare>\n-inline void ZIntrusiveRBTree<Key, Compare>::insert(ZIntrusiveRBTreeNode* new_node, const FindCursor& find_cursor) {\n-  precond(find_cursor.is_valid(_sequence_number));\n-  precond(!find_cursor.found());\n-  DEBUG_ONLY(_sequence_number++;)\n-\n-  \/\/ Link in the new node\n-  new_node->link_node(find_cursor.parent(), find_cursor.insert_location());\n-\n-  \/\/ Keep track of first and last node(s)\n-  if (find_cursor.is_left_most()) {\n-    _left_most = new_node;\n-  }\n-  if (find_cursor.is_right_most()) {\n-    _right_most = new_node;\n-  }\n-\n-  rebalance_insert(new_node);\n-}\n-\n-template <typename Key, typename Compare>\n-inline void ZIntrusiveRBTree<Key, Compare>::replace(ZIntrusiveRBTreeNode* new_node, const FindCursor& find_cursor) {\n-  precond(find_cursor.is_valid(_sequence_number));\n-  precond(find_cursor.found());\n-  DEBUG_ONLY(_sequence_number++;)\n-\n-  const ZIntrusiveRBTreeNode* const node = find_cursor.node();\n-\n-  if (new_node != node) {\n-    \/\/ Node has changed\n-\n-    \/\/ Copy the node to new location\n-    *new_node = *node;\n-\n-    \/\/ Update insert location\n-    *find_cursor.insert_location() = new_node;\n-\n-    \/\/ Update children's parent\n-    if (new_node->has_left_child()) {\n-      new_node->left_child()->update_parent(new_node);\n-    }\n-    if (new_node->has_right_child()) {\n-      new_node->right_child()->update_parent(new_node);\n-    }\n-\n-    \/\/ Keep track of first and last node(s)\n-    if (find_cursor.is_left_most()) {\n-      assert(_left_most == node, \"must be\");\n-      _left_most = new_node;\n-    }\n-    if (find_cursor.is_right_most()) {\n-      assert(_right_most == node, \"must be\");\n-      _right_most = new_node;\n-    }\n-  }\n-}\n-\n-template <typename Key, typename Compare>\n-inline void ZIntrusiveRBTree<Key, Compare>::remove(const FindCursor& find_cursor) {\n-  precond(find_cursor.is_valid(_sequence_number));\n-  precond(find_cursor.found());\n-  DEBUG_ONLY(_sequence_number++;)\n-\n-  ZIntrusiveRBTreeNode* const node = find_cursor.node();\n-  ZIntrusiveRBTreeNode* const parent = node->parent();\n-\n-  \/\/ Keep track of first and last node(s)\n-  if (find_cursor.is_left_most()) {\n-    assert(_left_most == node, \"must be\");\n-    _left_most = _left_most->next();\n-  }\n-  if (find_cursor.is_right_most()) {\n-    assert(_right_most == node, \"must be\");\n-    _right_most = _right_most->prev();\n-  }\n-\n-  ZIntrusiveRBTreeNode* rebalance_from = nullptr;\n-\n-  if (!node->has_left_child() && !node->has_right_child()) {\n-    \/\/ No children\n-\n-    \/\/ Remove node\n-    update_child_or_root(node, nullptr, parent);\n-    if (node->is_black()) {\n-      \/\/ We unbalanced the tree\n-      rebalance_from = parent;\n-    }\n-  } else if (!node->has_left_child() || !node->has_right_child()) {\n-    assert(node->has_right_child() || node->has_left_child(), \"must be\");\n-    \/\/ Only one child\n-    ZIntrusiveRBTreeNode* child = node->has_left_child() ? node->left_child() : node->right_child();\n-\n-    \/\/ Let child take nodes places\n-    update_child_or_root(node, child, parent);\n-\n-    \/\/ And update parent and color\n-    child->copy_parent_and_color(node);\n-  } else {\n-    assert(node->has_left_child() && node->has_right_child(), \"must be\");\n-    \/\/ Find next node and let it take the nodes place\n-    \/\/ This asymmetry always swap next instead of prev,\n-    \/\/ I wonder how this behaves w.r.t. our mapped cache\n-    \/\/ strategy of mostly removing from the left side of\n-    \/\/ the tree\n-\n-    \/\/ This will never walk up the tree, hope the compiler sees this.\n-    ZIntrusiveRBTreeNode* next_node = node->next();\n-\n-    ZIntrusiveRBTreeNode* next_node_parent = next_node->parent();\n-    ZIntrusiveRBTreeNode* next_node_child = next_node->right_child();\n-    if (next_node_parent != node) {\n-      \/\/ Not the direct descendant, adopt node's child\n-      ZIntrusiveRBTreeNode* node_child = node->right_child();\n-      next_node->update_right_child(node_child);\n-      node_child->update_parent(next_node);\n-\n-      \/\/ And let parent adopt their grand child\n-      next_node_parent->update_left_child(next_node_child);\n-    } else {\n-      next_node_parent = next_node;\n-    }\n-    \/\/ Adopt node's other child\n-    ZIntrusiveRBTreeNode* node_child = node->left_child();\n-    next_node->update_left_child(node_child);\n-    node_child->update_parent(next_node);\n-\n-    update_child_or_root(node, next_node, parent);\n-\n-    \/\/ Update parent(s) and colors\n-    if (next_node_child != nullptr) {\n-      next_node_child->update_parent_and_color(next_node_parent, ZIntrusiveRBTreeNode::BLACK);\n-    } else if (next_node->is_black()) {\n-      rebalance_from = next_node_parent;\n-    }\n-    next_node->copy_parent_and_color(node);\n-  }\n-\n-  if (rebalance_from == nullptr) {\n-    \/\/ Removal did not unbalance the tree\n-    return;\n-  }\n-\n-  rebalance_remove(rebalance_from);\n-}\n-\n-template <typename Key, typename Compare>\n-inline void ZIntrusiveRBTree<Key, Compare>::verify_tree() {\n-  \/\/ Properties:\n-  \/\/  (a) Node's are either BLACK or RED\n-  \/\/  (b) All nullptr children are counted as BLACK\n-  \/\/  (c) Compare::operator(Node*, Node*) <=> 0 is transitive\n-  \/\/ Invariants:\n-  \/\/  (1) Root node is BLACK\n-  \/\/  (2) All RED nodes only have BLACK children\n-  \/\/  (3) Every simple path from the root to a leaf\n-  \/\/      contains the same amount of BLACK nodes\n-  \/\/  (4) A node's children must have that node as\n-  \/\/      its parent\n-  \/\/  (5) Each node N in the sub-tree formed from a\n-  \/\/      node A's child must:\n-  \/\/        if left child:  Compare::operator(A, N) < 0\n-  \/\/        if right child: Compare::operator(A, N) > 0\n-  \/\/\n-  \/\/ Note: 1-4 may not hold during a call to insert\n-  \/\/       and remove.\n-\n-  \/\/ Helpers\n-  const auto is_leaf = [](ZIntrusiveRBTreeNode* node) {\n-    return node == nullptr;\n-  };\n-  const auto is_black = [&](ZIntrusiveRBTreeNode* node) {\n-    return is_leaf(node) || node->is_black();\n-  };\n-  const auto is_red = [&](ZIntrusiveRBTreeNode* node) {\n-    return !is_black(node);\n-  };\n-\n-  \/\/ Verify (1)\n-  ZIntrusiveRBTreeNode* const root_node = _root_node;\n-  guarantee(is_black(root_node), \"Invariant (1)\");\n-\n-  \/\/ Verify (2)\n-  const auto verify_2 = [&](ZIntrusiveRBTreeNode* node) {\n-    guarantee(!is_red(node) || is_black(node->left_child()), \"Invariant (2)\");\n-    guarantee(!is_red(node) || is_black(node->right_child()), \"Invariant (2)\");\n-  };\n-\n-  \/\/ Verify (3)\n-  size_t first_simple_path_black_nodes_traversed = 0;\n-  const auto verify_3 = [&](ZIntrusiveRBTreeNode* node, size_t black_nodes_traversed) {\n-    if (!is_leaf(node)) { return; }\n-    if (first_simple_path_black_nodes_traversed == 0) {\n-      first_simple_path_black_nodes_traversed = black_nodes_traversed;\n-    }\n-    guarantee(first_simple_path_black_nodes_traversed == black_nodes_traversed, \"Invariant (3)\");\n-  };\n-\n-  \/\/ Verify (4)\n-  const auto verify_4 = [&](ZIntrusiveRBTreeNode* node) {\n-    if (is_leaf(node)) { return; }\n-    guarantee(!node->has_left_child() || node->left_child()->parent() == node, \"Invariant (4)\");\n-    guarantee(!node->has_right_child() || node->right_child()->parent() == node, \"Invariant (4)\");\n-  };\n-  guarantee(root_node == nullptr || root_node->parent() == nullptr, \"Invariant (4)\");\n-\n-  \/\/ Verify (5)\n-  const auto verify_5 = [&](ZIntrusiveRBTreeNode* node) {\n-    \/\/ Because of the transitive property of Compare (c) we simply check\n-    \/\/ this that (5) hold for each parent child pair.\n-    if (is_leaf(node)) { return; }\n-    Compare compare_fn;\n-    guarantee(!node->has_left_child() || compare_fn(node->left_child(), node) < 0, \"Invariant (5)\");\n-    guarantee(!node->has_right_child() || compare_fn(node->right_child(), node) > 0, \"Invariant (5)\");\n-  };\n-\n-  \/\/ Walk every simple path by recursively descending the tree from the root\n-  const auto recursive_walk = [&](auto&& recurse, ZIntrusiveRBTreeNode* node, size_t black_nodes_traversed) {\n-    if (is_black(node)) { black_nodes_traversed++; }\n-    verify_2(node);\n-    verify_3(node, black_nodes_traversed);\n-    verify_4(node);\n-    verify_5(node);\n-    if (is_leaf(node)) { return; }\n-    recurse(recurse, node->left_child(), black_nodes_traversed);\n-    recurse(recurse, node->right_child(), black_nodes_traversed);\n-  };\n-  recursive_walk(recursive_walk, root_node, 0);\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::Iterator ZIntrusiveRBTree<Key, Compare>::begin() {\n-  return Iterator(*this, first());\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::Iterator ZIntrusiveRBTree<Key, Compare>::end() {\n-  return Iterator(*this, nullptr);\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::ConstIterator ZIntrusiveRBTree<Key, Compare>::begin() const {\n-  return cbegin();\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::ConstIterator ZIntrusiveRBTree<Key, Compare>::end() const {\n-  return cend();\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::ConstIterator ZIntrusiveRBTree<Key, Compare>::cbegin() const {\n-  return const_cast<ZIntrusiveRBTree<Key, Compare>*>(this)->begin();\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::ConstIterator ZIntrusiveRBTree<Key, Compare>::cend() const {\n-  return const_cast<ZIntrusiveRBTree<Key, Compare>*>(this)->end();\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::ReverseIterator ZIntrusiveRBTree<Key, Compare>::rbegin() {\n-  return ReverseIterator(*this, last());\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::ReverseIterator ZIntrusiveRBTree<Key, Compare>::rend() {\n-  return ReverseIterator(*this, nullptr);\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::ConstReverseIterator ZIntrusiveRBTree<Key, Compare>::rbegin() const {\n-  return crbegin();\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::ConstReverseIterator ZIntrusiveRBTree<Key, Compare>::rend() const {\n-  return crend();\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::ConstReverseIterator ZIntrusiveRBTree<Key, Compare>::crbegin() const {\n-  return const_cast<ZIntrusiveRBTree<Key, Compare>*>(this)->rbegin();\n-}\n-\n-template <typename Key, typename Compare>\n-inline typename ZIntrusiveRBTree<Key, Compare>::ConstReverseIterator ZIntrusiveRBTree<Key, Compare>::crend() const {\n-  return const_cast<ZIntrusiveRBTree<Key, Compare>*>(this)->rend();\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-inline bool ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::at_end() const {\n-  return _node == nullptr;\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-inline ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::IteratorImplementation(ZIntrusiveRBTree<Key, Compare>& tree, pointer node)\n-: _tree(&tree),\n-  _node(node),\n-  _removed(false) {}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-template <bool Enable, ENABLE_IF_SDEFN(Enable)>\n-inline ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::IteratorImplementation(const IteratorImplementation<false, Reverse>& other)\n-: _tree(other._tree),\n-  _node(other._node),\n-  _removed(false) {}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-inline typename ZIntrusiveRBTree<Key, Compare>::template IteratorImplementation<IsConst, Reverse>::reference ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::operator*() const {\n-  precond(!_removed);\n-  return *_node;\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-inline typename ZIntrusiveRBTree<Key, Compare>::template IteratorImplementation<IsConst, Reverse>::pointer ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::operator->() {\n-  precond(!_removed);\n-  return _node;\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-inline typename ZIntrusiveRBTree<Key, Compare>::template IteratorImplementation<IsConst, Reverse>& ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::operator--() {\n-  if (_removed) {\n-    _removed = false;\n-  } else if (Reverse) {\n-    precond(_node != _tree->last());\n-    _node = at_end() ? _tree->first() : _node->next();\n-  } else {\n-    precond(_node != _tree->first());\n-    _node = at_end() ? _tree->last() : _node->prev();\n-  }\n-  return *this;\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-inline typename ZIntrusiveRBTree<Key, Compare>::template IteratorImplementation<IsConst, Reverse> ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::operator--(int) {\n-  IteratorImplementation tmp = *this;\n-  --(*this);\n-  return tmp;\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-inline typename ZIntrusiveRBTree<Key, Compare>::template IteratorImplementation<IsConst, Reverse>& ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::operator++() {\n-  if (_removed) {\n-    _removed = false;\n-  } else if (Reverse) {\n-    precond(!at_end());\n-    _node = _node->prev();\n-  } else {\n-    precond(!at_end());\n-    _node = _node->next();\n-  }\n-  return *this;\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-inline typename ZIntrusiveRBTree<Key, Compare>::template IteratorImplementation<IsConst, Reverse> ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::operator++(int) {\n-  IteratorImplementation tmp = *this;\n-  ++(*this);\n-  return tmp;\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-template <bool Enable, ENABLE_IF_SDEFN(Enable)>\n-void ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::replace(ZIntrusiveRBTreeNode* new_node) {\n-  precond(!_removed);\n-  precond(!at_end());\n-  FindCursor cursor = _tree->get_cursor(_node);\n-  _node = new_node;\n-  _tree->replace(new_node, cursor);\n-}\n-\n-template <typename Key, typename Compare>\n-template <bool IsConst, bool Reverse>\n-template <bool Enable, ENABLE_IF_SDEFN(Enable)>\n-void ZIntrusiveRBTree<Key, Compare>::IteratorImplementation<IsConst, Reverse>::remove() {\n-  precond(!_removed);\n-  precond(!at_end());\n-  FindCursor cursor = _tree->get_cursor(_node);\n-  ++(*this);\n-  _removed = true;\n-  _tree->remove(cursor);\n-}\n-\n-#endif \/\/ SHARE_GC_Z_ZINTRUSIVERBTREE_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/z\/zIntrusiveRBTree.inline.hpp","additions":0,"deletions":1351,"binary":false,"changes":1351,"status":"deleted"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"gc\/z\/zIntrusiveRBTree.inline.hpp\"\n@@ -35,0 +34,1 @@\n+#include \"utilities\/rbTree.inline.hpp\"\n@@ -121,1 +121,1 @@\n-int ZMappedCache::EntryCompare::operator()(ZMappedCache::TreeNode* a, ZMappedCache::TreeNode* b) {\n+int ZMappedCache::EntryCompare::cmp(const IntrusiveRBNode* a, const IntrusiveRBNode* b) {\n@@ -131,1 +131,1 @@\n-int ZMappedCache::EntryCompare::operator()(zoffset key, ZMappedCache::TreeNode* node) {\n+int ZMappedCache::EntryCompare::cmp(zoffset key, const IntrusiveRBNode* node) {\n@@ -140,0 +140,105 @@\n+void ZMappedCache::Tree::verify() const {\n+#ifdef ASSERT\n+  \/\/ Verify\n+\n+  if (size() < 10) {\n+    \/\/ Only verify whole tree if the node count is low\n+    verify_self();\n+  }\n+\n+  \/\/ Verify the externally tracked left most and right most nodes\n+  verify_left_most();\n+  verify_right_most();\n+#endif \/\/ ASSERT\n+}\n+\n+void ZMappedCache::Tree::verify_left_most() const {\n+  assert(leftmost() == _left_most, \"must be \" PTR_FORMAT \" == \" PTR_FORMAT,\n+          p2i(leftmost()), p2i(this));\n+}\n+\n+void ZMappedCache::Tree::verify_right_most() const {\n+  assert(rightmost() == _right_most, \"must be \" PTR_FORMAT \" == \" PTR_FORMAT,\n+          p2i(rightmost()), p2i(this));\n+}\n+\n+ZMappedCache::Tree::Tree()\n+  : TreeImpl(),\n+    _left_most(nullptr),\n+    _right_most(nullptr) {}\n+\n+void ZMappedCache::Tree::insert(TreeNode* node, const TreeCursor& cursor) {\n+  \/\/ Insert in tree\n+  TreeImpl::insert_at_cursor(node, cursor);\n+\n+  if (_left_most == nullptr || EntryCompare::cmp(node, _left_most) < 0) {\n+    \/\/ Keep track of left most node\n+    _left_most = node;\n+  }\n+\n+  if (_right_most == nullptr || EntryCompare::cmp(_right_most, node) < 0) {\n+    \/\/ Keep track of right most node\n+    _right_most = node;\n+  }\n+\n+  \/\/ Verify\n+  verify();\n+}\n+\n+void ZMappedCache::Tree::remove(TreeNode* node) {\n+  if (_left_most == node) {\n+    \/\/ Keep track of left most node\n+    _left_most = node->next();\n+  }\n+\n+  if (_right_most == node) {\n+    \/\/ Keep track of right most node\n+    _right_most = node->prev();\n+  }\n+\n+  \/\/ Remove from tree\n+  TreeImpl::remove(node);\n+}\n+\n+void ZMappedCache::Tree::replace(TreeNode* old_node, TreeNode* new_node, const TreeCursor& cursor) {\n+  if (_left_most == old_node) {\n+    \/\/ Keep track of left most node\n+    _left_most = new_node;\n+  }\n+\n+  if (_right_most == old_node) {\n+    \/\/ Keep track of right most node\n+    _right_most = new_node;\n+  }\n+\n+  \/\/ Replace in tree\n+  TreeImpl::replace_at_cursor(new_node, cursor);\n+\n+  \/\/ Verify\n+  verify();\n+}\n+\n+size_t ZMappedCache::Tree::size_atomic() const {\n+  return Atomic::load(&_num_nodes);\n+}\n+\n+const ZMappedCache::TreeNode* ZMappedCache::Tree::left_most() const {\n+  verify_left_most();\n+  return _left_most;\n+}\n+\n+ZMappedCache::TreeNode* ZMappedCache::Tree::left_most() {\n+  verify_left_most();\n+  return _left_most;\n+}\n+\n+const ZMappedCache::TreeNode* ZMappedCache::Tree::right_most() const {\n+  verify_right_most();\n+  return _right_most;\n+}\n+\n+ZMappedCache::TreeNode* ZMappedCache::Tree::right_most() {\n+  verify_right_most();\n+  return _right_most;\n+}\n+\n@@ -165,1 +270,1 @@\n-void ZMappedCache::tree_insert(const Tree::FindCursor& cursor, const ZVirtualMemory& vmem) {\n+void ZMappedCache::cache_insert(const TreeCursor& cursor, const ZVirtualMemory& vmem) {\n@@ -168,3 +273,0 @@\n-  \/\/ Insert creates a new entry\n-  _entry_count += 1;\n-\n@@ -172,1 +274,2 @@\n-  _tree.insert(entry->node_addr(), cursor);\n+  TreeNode* node = entry->node_addr();\n+  _tree.insert(node, cursor);\n@@ -182,5 +285,3 @@\n-void ZMappedCache::tree_remove(const Tree::FindCursor& cursor, const ZVirtualMemory& vmem) {\n-  ZMappedCacheEntry* entry = ZMappedCacheEntry::cast_to_entry(cursor.node());\n-\n-  \/\/ Remove destroys an old entry\n-  _entry_count -= 1;\n+void ZMappedCache::cache_remove(const TreeCursor& cursor, const ZVirtualMemory& vmem) {\n+  TreeNode* const node = cursor.node();\n+  ZMappedCacheEntry* entry = ZMappedCacheEntry::cast_to_entry(node);\n@@ -189,1 +290,1 @@\n-  _tree.remove(cursor);\n+  _tree.remove(node);\n@@ -191,1 +292,1 @@\n-  \/\/ Insert in size-class lists\n+  \/\/ Remove from size-class lists\n@@ -202,1 +303,1 @@\n-void ZMappedCache::tree_replace(const Tree::FindCursor& cursor, const ZVirtualMemory& vmem) {\n+void ZMappedCache::cache_replace(const TreeCursor& cursor, const ZVirtualMemory& vmem) {\n@@ -204,0 +305,1 @@\n+  IntrusiveRBNode* const new_node = entry->node_addr();\n@@ -205,2 +307,2 @@\n-  ZMappedCache::TreeNode* const node = cursor.node();\n-  ZMappedCacheEntry* const old_entry = ZMappedCacheEntry::cast_to_entry(node);\n+  ZMappedCache::TreeNode* const old_node = cursor.node();\n+  ZMappedCacheEntry* const old_entry = ZMappedCacheEntry::cast_to_entry(old_node);\n@@ -210,1 +312,1 @@\n-  _tree.replace(entry->node_addr(), cursor);\n+  _tree.replace(old_node, new_node, cursor);\n@@ -232,1 +334,1 @@\n-void ZMappedCache::tree_update(ZMappedCacheEntry* entry, const ZVirtualMemory& vmem) {\n+void ZMappedCache::cache_update(ZMappedCacheEntry* entry, const ZVirtualMemory& vmem) {\n@@ -284,1 +386,1 @@\n-      tree_update(entry, unused_vmem);\n+      cache_update(entry, unused_vmem);\n@@ -292,3 +394,3 @@\n-      auto cursor = _tree.get_cursor(entry->node_addr());\n-      assert(cursor.is_valid(), \"must be\");\n-      tree_replace(cursor, unused_vmem);\n+      TreeCursor cursor = _tree.cursor(entry->node_addr());\n+      assert(cursor.valid(), \"must be\");\n+      cache_replace(cursor, unused_vmem);\n@@ -299,3 +401,3 @@\n-    auto cursor = _tree.get_cursor(entry->node_addr());\n-    assert(cursor.is_valid(), \"must be\");\n-    tree_remove(cursor, vmem);\n+    TreeCursor cursor = _tree.cursor(entry->node_addr());\n+    assert(cursor.valid(), \"must be\");\n+    cache_remove(cursor, vmem);\n@@ -387,1 +489,1 @@\n-    for (ZMappedCache::TreeNode* node = _tree.last(); node != nullptr; node = node->prev()) {\n+    for (ZMappedCache::TreeNode* node = _tree.right_most(); node != nullptr; node = node->prev()) {\n@@ -402,1 +504,1 @@\n-    for (ZMappedCache::TreeNode* node = _tree.first(); node != nullptr; node = node->next()) {\n+    for (ZMappedCache::TreeNode* node = _tree.left_most(); node != nullptr; node = node->next()) {\n@@ -452,1 +554,0 @@\n-    _entry_count(0),\n@@ -460,2 +561,2 @@\n-  Tree::FindCursor current_cursor = _tree.find(vmem.start());\n-  Tree::FindCursor next_cursor = _tree.next(current_cursor);\n+  TreeCursor current_cursor = _tree.cursor(vmem.start());\n+  TreeCursor next_cursor = _tree.next(current_cursor);\n@@ -464,1 +565,1 @@\n-  const bool extends_right = next_cursor.is_valid() && next_cursor.found() &&\n+  const bool extends_right = next_cursor.valid() && next_cursor.found() &&\n@@ -480,1 +581,1 @@\n-    tree_remove(current_cursor, left_vmem);\n+    cache_remove(current_cursor, left_vmem);\n@@ -483,1 +584,1 @@\n-    tree_update(next_entry, new_vmem);\n+    cache_update(next_entry, new_vmem);\n@@ -495,1 +596,1 @@\n-    tree_replace(current_cursor, new_vmem);\n+    cache_replace(current_cursor, new_vmem);\n@@ -510,1 +611,1 @@\n-    tree_update(next_entry, new_vmem);\n+    cache_update(next_entry, new_vmem);\n@@ -515,1 +616,1 @@\n-  tree_insert(current_cursor, vmem);\n+  cache_insert(current_cursor, vmem);\n@@ -574,4 +675,4 @@\n-  \/\/ values may be inconsistent. As such we read the _entry_count only once. And\n-  \/\/ use is_empty_error_reporter_safe and size_error_reporter_safe on the size\n-  \/\/ class lists.\n-  const size_t entry_count = Atomic::load(&_entry_count);\n+  \/\/ values may be inconsistent. As such we read size using _tree.size_atomic()\n+  \/\/ only once. And use is_empty_error_reporter_safe and\n+  \/\/ size_error_reporter_safe on the size class lists.\n+  const size_t entry_count = _tree.size_atomic();\n@@ -624,1 +725,1 @@\n-  for (ZMappedCache::TreeNode* node = _tree.first(); node != nullptr; node = node->next()) {\n+  for (const ZMappedCache::TreeNode* node = _tree.left_most(); node != nullptr; node = node->next()) {\n","filename":"src\/hotspot\/share\/gc\/z\/zMappedCache.cpp","additions":144,"deletions":43,"binary":false,"changes":187,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"gc\/z\/zIntrusiveRBTree.hpp\"\n@@ -34,0 +33,1 @@\n+#include \"utilities\/rbTree.hpp\"\n@@ -43,2 +43,2 @@\n-    int operator()(ZIntrusiveRBTreeNode* a, ZIntrusiveRBTreeNode* b);\n-    int operator()(zoffset key, ZIntrusiveRBTreeNode* node);\n+    static int cmp(zoffset a, const IntrusiveRBNode* b);\n+    static int cmp(const IntrusiveRBNode*  a, const IntrusiveRBNode* b);\n@@ -51,2 +51,3 @@\n-  using Tree              = ZIntrusiveRBTree<zoffset, EntryCompare>;\n-  using TreeNode          = ZIntrusiveRBTreeNode;\n+  using TreeImpl          = IntrusiveRBTree<zoffset, EntryCompare>;\n+  using TreeCursor        = TreeImpl::Cursor;\n+  using TreeNode          = IntrusiveRBNode;\n@@ -56,0 +57,29 @@\n+  class Tree : private TreeImpl {\n+  private:\n+    TreeNode* _left_most;\n+    TreeNode* _right_most;\n+\n+    void verify() const;\n+    void verify_left_most() const;\n+    void verify_right_most() const;\n+\n+  public:\n+    Tree();\n+\n+    void insert(TreeNode* node, const TreeCursor& cursor);\n+    void remove(TreeNode* node);\n+    void replace(TreeNode* old_node, TreeNode* new_node, const TreeCursor& cursor);\n+\n+    size_t size_atomic() const;\n+    using TreeImpl::size;\n+\n+    using TreeImpl::cursor;\n+    using TreeImpl::next;\n+\n+    const TreeNode* left_most() const;\n+    TreeNode* left_most();\n+\n+    const TreeNode* right_most() const;\n+    TreeNode* right_most();\n+  };\n+\n@@ -63,1 +93,0 @@\n-  size_t        _entry_count;\n@@ -71,4 +100,4 @@\n-  void tree_insert(const Tree::FindCursor& cursor, const ZVirtualMemory& vmem);\n-  void tree_remove(const Tree::FindCursor& cursor, const ZVirtualMemory& vmem);\n-  void tree_replace(const Tree::FindCursor& cursor, const ZVirtualMemory& vmem);\n-  void tree_update(ZMappedCacheEntry* entry, const ZVirtualMemory& vmem);\n+  void cache_insert(const TreeCursor& cursor, const ZVirtualMemory& vmem);\n+  void cache_remove(const TreeCursor& cursor, const ZVirtualMemory& vmem);\n+  void cache_replace(const TreeCursor& cursor, const ZVirtualMemory& vmem);\n+  void cache_update(ZMappedCacheEntry* entry, const ZVirtualMemory& vmem);\n","filename":"src\/hotspot\/share\/gc\/z\/zMappedCache.hpp","additions":39,"deletions":10,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -1053,1 +1053,1 @@\n-    log_info(cds, resolve)(\"Not resolved: class not linked: %s %s %s\",\n+    log_info(aot, resolve)(\"Not resolved: class not linked: %s %s %s\",\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    THROW_MSG_NULL(vmSymbols::java_lang_InternalError(), \"JVMCI is not enabled\")\n+    THROW_MSG_NULL(vmSymbols::java_lang_InternalError(), JVMCI_NOT_ENABLED_ERROR_MESSAGE)\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -723,1 +723,1 @@\n-    JVMCI_THROW_MSG_NULL(InternalError, \"JVMCI is not enabled\");\n+    JVMCI_THROW_MSG_NULL(InternalError, JVMCI_NOT_ENABLED_ERROR_MESSAGE);\n@@ -735,1 +735,1 @@\n-    JVMCI_THROW_MSG_0(InternalError, \"JVMCI is not enabled\");\n+    JVMCI_THROW_MSG_0(InternalError, JVMCI_NOT_ENABLED_ERROR_MESSAGE);\n@@ -1518,1 +1518,1 @@\n-    JVMCI_THROW_MSG(InternalError, \"JVMCI is not enabled\");\n+    JVMCI_THROW_MSG(InternalError, JVMCI_NOT_ENABLED_ERROR_MESSAGE);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+#define JVMCI_NOT_ENABLED_ERROR_MESSAGE \"JVMCI is not enabled. Must specify '-XX:+EnableJVMCI' or '--add-modules=jdk.internal.vm.ci' to the java launcher.\"\n+\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,10 @@\n-          \"Enable JVMCI. Defaults to true if UseJVMCICompiler is true.\")    \\\n+          \"Enable JVMCI support in the VM. \"                                \\\n+          \"Defaults to true if UseJVMCICompiler is true or \"                \\\n+          \"--add-modules=jdk.internal.vm.ci was specified. \"                \\\n+          \"The behavior of --add-modules=jdk.internal.vm.ci is triggered \"  \\\n+          \"if any of the following is true: \"                               \\\n+          \"1. -XX:+EnableJVMCI is set to true on the command line. \"        \\\n+          \"2. -XX:+EnableJVMCI is set to true by jdk\/internal\/vm\/options \"  \\\n+          \"   in the java.base module. \"                                    \\\n+          \"3. EnableJVMCI is defaulted to true by UseJVMCICompiler and \"    \\\n+          \"   libjvmci is not enabled\")                                     \\\n","filename":"src\/hotspot\/share\/jvmci\/jvmci_globals.hpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -499,0 +499,6 @@\n+  declare_preprocessor_constant(\"INCLUDE_SERIALGC\", INCLUDE_SERIALGC)     \\\n+  declare_preprocessor_constant(\"INCLUDE_PARALLELGC\", INCLUDE_PARALLELGC) \\\n+  declare_preprocessor_constant(\"INCLUDE_G1GC\", INCLUDE_G1GC)             \\\n+  declare_preprocessor_constant(\"INCLUDE_ZGC\", INCLUDE_ZGC)               \\\n+  declare_preprocessor_constant(\"INCLUDE_SHENANDOAHGC\", INCLUDE_SHENANDOAHGC) \\\n+                                                                          \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -171,0 +171,1 @@\n+  FileLocker flocker(_stream);\n@@ -180,4 +181,1 @@\n-  FileLocker flocker(_stream);\n-  int written = write_internal(decorations, msg);\n-\n-  return flush() ? written : -1;\n+  return write_blocking(decorations, msg);\n","filename":"src\/hotspot\/share\/logging\/logFileStreamOutput.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -219,0 +219,7 @@\n+  char* strdup(const char* s) {\n+    const size_t sz = strlen(s) + 1;\n+    char* ptr = (char*)Amalloc(sz);\n+    memcpy(ptr, s, sz);\n+    return ptr;\n+  }\n+\n","filename":"src\/hotspot\/share\/memory\/arena.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-      log_info(cds, hashtables)(\"Expanded _has_been_visited table to %d\", _has_been_visited.table_size());\n+      log_info(aot, hashtables)(\"Expanded _has_been_visited table to %d\", _has_been_visited.table_size());\n","filename":"src\/hotspot\/share\/memory\/metaspaceClosure.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -203,1 +203,1 @@\n-      log_trace(cds)(\"Iter(OtherArray): %p [%d]\", array, array->length());\n+      log_trace(aot)(\"Iter(OtherArray): %p [%d]\", array, array->length());\n@@ -207,1 +207,1 @@\n-      log_trace(cds)(\"Iter(OtherArray): %p [%d]\", array, array->length());\n+      log_trace(aot)(\"Iter(OtherArray): %p [%d]\", array, array->length());\n@@ -225,1 +225,1 @@\n-      log_trace(cds)(\"Iter(MSOArray): %p [%d]\", array, array->length());\n+      log_trace(aot)(\"Iter(MSOArray): %p [%d]\", array, array->length());\n@@ -247,1 +247,1 @@\n-      log_trace(cds)(\"Iter(MSOPointerArray): %p [%d]\", array, array->length());\n+      log_trace(aot)(\"Iter(MSOPointerArray): %p [%d]\", array, array->length());\n","filename":"src\/hotspot\/share\/memory\/metaspaceClosure.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -146,0 +146,8 @@\n+\n+  static char* strdup(const char* src) {\n+    return static_cast<Arena*>(Thread::current()->resource_area())->strdup(src);\n+  }\n+\n+  static char* strdup(Thread* thread, const char* src) {\n+    return static_cast<Arena*>(thread->resource_area())->strdup(src);\n+  }\n","filename":"src\/hotspot\/share\/memory\/resourceArea.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-  log_trace(cds)(\"Iter(Annotations): %p\", this);\n+  log_trace(aot)(\"Iter(Annotations): %p\", this);\n","filename":"src\/hotspot\/share\/oops\/annotations.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-  log_trace(cds)(\"Iter(ArrayKlass): %p (%s)\", this, external_name());\n+  log_trace(aot)(\"Iter(ArrayKlass): %p (%s)\", this, external_name());\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -420,1 +420,1 @@\n-  log_trace(cds)(\"Iter(ConstMethod): %p\", this);\n+  log_trace(aot)(\"Iter(ConstMethod): %p\", this);\n","filename":"src\/hotspot\/share\/oops\/constMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-  log_trace(cds)(\"Iter(ConstantPool): %p\", this);\n+  log_trace(aot)(\"Iter(ConstantPool): %p\", this);\n@@ -505,1 +505,1 @@\n-  log_info(cds, resolve)(\"Archiving CP entries for %s\", pool_holder()->name()->as_C_string());\n+  log_info(aot, resolve)(\"Archiving CP entries for %s\", pool_holder()->name()->as_C_string());\n@@ -564,1 +564,1 @@\n-  LogStreamHandle(Trace, cds, resolve) log;\n+  LogStreamHandle(Trace, aot, resolve) log;\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -441,1 +441,1 @@\n-      LogStreamHandle(Trace, cds, resolve) log;\n+      LogStreamHandle(Trace, aot, resolve) log;\n@@ -481,1 +481,1 @@\n-      LogStreamHandle(Trace, cds, resolve) log;\n+      LogStreamHandle(Trace, aot, resolve) log;\n@@ -521,1 +521,1 @@\n-      LogStreamHandle(Trace, cds, resolve) log;\n+      LogStreamHandle(Trace, aot, resolve) log;\n@@ -709,1 +709,1 @@\n-  log_trace(cds)(\"Iter(ConstantPoolCache): %p\", this);\n+  log_trace(aot)(\"Iter(ConstantPoolCache): %p\", this);\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -940,1 +940,1 @@\n-  if (log_is_enabled(Info, cds, init)) {\n+  if (log_is_enabled(Info, aot, init)) {\n@@ -942,1 +942,1 @@\n-    log_info(cds, init)(\"%s (aot-inited)\", external_name());\n+    log_info(aot, init)(\"%s (aot-inited)\", external_name());\n@@ -2868,1 +2868,1 @@\n-  if (log_is_enabled(Trace, cds)) {\n+  if (log_is_enabled(Trace, aot)) {\n@@ -2870,1 +2870,1 @@\n-    log_trace(cds)(\"Iter(InstanceKlass): %p (%s)\", this, external_name());\n+    log_trace(aot)(\"Iter(InstanceKlass): %p (%s)\", this, external_name());\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -747,1 +747,1 @@\n-  if (log_is_enabled(Trace, cds)) {\n+  if (log_is_enabled(Trace, aot)) {\n@@ -749,1 +749,1 @@\n-    log_trace(cds)(\"Iter(Klass): %p (%s)\", this, external_name());\n+    log_trace(aot)(\"Iter(Klass): %p (%s)\", this, external_name());\n@@ -778,1 +778,1 @@\n-  if (log_is_enabled(Trace, cds, unshareable)) {\n+  if (log_is_enabled(Trace, aot, unshareable)) {\n@@ -780,1 +780,1 @@\n-    log_trace(cds, unshareable)(\"remove: %s\", external_name());\n+    log_trace(aot, unshareable)(\"remove: %s\", external_name());\n@@ -804,1 +804,1 @@\n-  if (log_is_enabled(Trace, cds, unshareable)) {\n+  if (log_is_enabled(Trace, aot, unshareable)) {\n@@ -806,1 +806,1 @@\n-    log_trace(cds, unshareable)(\"remove java_mirror: %s\", external_name());\n+    log_trace(aot, unshareable)(\"remove java_mirror: %s\", external_name());\n@@ -842,1 +842,1 @@\n-  if (log_is_enabled(Trace, cds, unshareable)) {\n+  if (log_is_enabled(Trace, aot, unshareable)) {\n@@ -845,1 +845,1 @@\n-    log_trace(cds, unshareable)(\"restore: %s with class loader: %s\", external_name(),\n+    log_trace(aot, unshareable)(\"restore: %s with class loader: %s\", external_name(),\n@@ -878,1 +878,1 @@\n-    log_debug(cds, mirror)(\"%s has raw archived mirror\", external_name());\n+    log_debug(aot, mirror)(\"%s has raw archived mirror\", external_name());\n@@ -889,1 +889,1 @@\n-    log_debug(cds, mirror)(\"No archived mirror data for %s\", external_name());\n+    log_debug(aot, mirror)(\"No archived mirror data for %s\", external_name());\n@@ -898,1 +898,1 @@\n-    log_trace(cds, mirror)(\"Recreate mirror for %s\", external_name());\n+    log_trace(aot, mirror)(\"Recreate mirror for %s\", external_name());\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -399,1 +399,1 @@\n-  log_trace(cds)(\"Iter(Method): %p\", this);\n+  log_trace(aot)(\"Iter(Method): %p\", this);\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1795,1 +1795,1 @@\n-  log_trace(cds)(\"Iter(MethodData): %p\", this);\n+  log_trace(aot)(\"Iter(MethodData): %p\", this);\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-  log_trace(cds)(\"Iter(RecordComponent): %p\", this);\n+  log_trace(aot)(\"Iter(RecordComponent): %p\", this);\n","filename":"src\/hotspot\/share\/oops\/recordComponent.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -410,2 +410,2 @@\n-  if (log_is_enabled(Trace, cds)) {\n-    LogStream trace_stream(Log(cds)::trace());\n+  if (log_is_enabled(Trace, aot)) {\n+    LogStream trace_stream(Log(aot)::trace());\n","filename":"src\/hotspot\/share\/oops\/symbol.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -213,1 +213,1 @@\n-  \/\/ Mark and visited bits for an LCA calculation in insert_anti_dependences.\n+  \/\/ Mark and visited bits for an LCA calculation in raise_above_anti_dependences.\n@@ -490,1 +490,1 @@\n-  Block* insert_anti_dependences(Block* LCA, Node* load, bool verify = false);\n+  Block* raise_above_anti_dependences(Block* LCA, Node* load, bool verify = false);\n@@ -493,1 +493,1 @@\n-    const_cast<PhaseCFG*>(this)->insert_anti_dependences(LCA, load, true);\n+    const_cast<PhaseCFG*>(this)->raise_above_anti_dependences(LCA, load, true);\n","filename":"src\/hotspot\/share\/opto\/block.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -370,0 +370,8 @@\n+  product(uint, SuperWordAutomaticAlignment, 1, DIAGNOSTIC,                 \\\n+          \"0 = Disabled (unless AlignVector is enabled)\"                    \\\n+          \"Else: align with a load or store of the largest vector width,\"   \\\n+          \"      and if there are loads and stores of the largest width:\"   \\\n+          \"1 = Prefer alignment with vector store (default)\"                \\\n+          \"2 = Prefer alignment with vector load.\")                         \\\n+          range(0, 2)                                                       \\\n+                                                                            \\\n@@ -389,0 +397,9 @@\n+  develop(intx, PrintPhaseLevel, 0,                                         \\\n+          \"Level of detail of the phase trace print. \"                      \\\n+          \"System-wide value, -1=printing is disabled, \"                    \\\n+          \"0=print nothing except PhasePrintLevel directives, \"             \\\n+          \"6=all details printed. \"                                         \\\n+          \"Level of detail of printouts can be set on a per-method level \"  \\\n+          \"as well by using CompileCommand=PrintPhaseLevel.\")                        \\\n+          range(-1, 6)                                                      \\\n+                                                                            \\\n@@ -844,0 +861,3 @@\n+                                                                            \\\n+  develop(bool, StressLoopPeeling, false,                                   \\\n+          \"Randomize loop peeling decision\")                                \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"compiler\/compilerDefinitions.hpp\"\n@@ -593,0 +594,4 @@\n+void Compile::print_phase(const char* phase_name) {\n+  tty->print_cr(\"%u.\\t%s\", ++_phase_counter, phase_name);\n+}\n+\n@@ -750,1 +755,2 @@\n-      StressIncrementalInlining || StressMacroExpansion || StressUnstableIfTraps || StressBailout) {\n+      StressIncrementalInlining || StressMacroExpansion || StressUnstableIfTraps || StressBailout ||\n+      StressLoopPeeling) {\n@@ -1096,0 +1102,1 @@\n+  _phase_counter = 0;\n@@ -5695,1 +5702,4 @@\n-  if (should_print_phase(cpt)) {\n+  if (should_print_phase(level)) {\n+    print_phase(name);\n+  }\n+  if (should_print_ideal_phase(cpt)) {\n@@ -5726,1 +5736,0 @@\n-bool Compile::should_print_phase(CompilerPhaseType cpt) {\n@@ -5728,5 +5737,7 @@\n-  if (_directive->should_print_phase(cpt)) {\n-    return true;\n-  }\n-#endif\n-  return false;\n+bool Compile::should_print_phase(const int level) const {\n+  return PrintPhaseLevel > 0 && directive()->PhasePrintLevelOption >= level &&\n+         _method != nullptr; \/\/ Do not print phases for stubs.\n+}\n+\n+bool Compile::should_print_ideal_phase(CompilerPhaseType cpt) const {\n+  return _directive->should_print_ideal_phase(cpt);\n@@ -5735,1 +5746,0 @@\n-#ifndef PRODUCT\n@@ -5742,1 +5752,0 @@\n-#endif\n@@ -5745,1 +5754,2 @@\n-#ifndef PRODUCT\n+  PRODUCT_RETURN_(return false;);\n+\n@@ -5755,3 +5765,0 @@\n-#else\n-  return false;\n-#endif\n@@ -5760,1 +5767,0 @@\n-#ifndef PRODUCT\n@@ -5849,1 +5855,1 @@\n-#endif\n+#endif \/\/ !PRODUCT\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":22,"deletions":16,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -353,0 +353,1 @@\n+  uint                  _phase_counter;         \/\/ Counter for the number of already printed phases\n@@ -664,1 +665,1 @@\n-  bool          method_has_option(CompileCommandEnum option) {\n+  bool          method_has_option(CompileCommandEnum option) const {\n@@ -671,0 +672,1 @@\n+  void          print_phase(const char* phase_name);\n@@ -688,2 +690,0 @@\n-  bool should_print_igv(int level);\n-  bool should_print_phase(CompilerPhaseType cpt);\n@@ -694,0 +694,3 @@\n+  bool should_print_igv(int level);\n+  bool should_print_phase(int level) const;\n+  bool should_print_ideal_phase(CompilerPhaseType cpt) const;\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -459,0 +459,1 @@\n+  assert(early->dominates(LCA), \"precondition failed\");\n@@ -473,1 +474,1 @@\n-      assert(early->dominates(LCA), \"early is high enough\");\n+      assert(early->dominates(LCA), \"unsound LCA update\");\n@@ -546,1 +547,1 @@\n-\/\/ This function is used by insert_anti_dependences to find unrelated loads for stores in implicit null checks.\n+\/\/ This function is used by raise_above_anti_dependences to find unrelated loads for stores in implicit null checks.\n@@ -600,1 +601,1 @@\n-    \/\/ times as well. When PhaseCFG::insert_anti_dependences() goes over\n+    \/\/ times as well. When PhaseCFG::raise_above_anti_dependences() goes over\n@@ -665,5 +666,2 @@\n-\/\/--------------------------insert_anti_dependences---------------------------\n-\/\/ A load may need to witness memory that nearby stores can overwrite.\n-\/\/ For each nearby store, either insert an \"anti-dependence\" edge\n-\/\/ from the load to the store, or else move LCA upward to force the\n-\/\/ load to (eventually) be scheduled in a block above the store.\n+\/\/ Enforce a scheduling of the given 'load' that ensures anti-dependent stores\n+\/\/ do not overwrite the load's input memory state before the load executes.\n@@ -671,2 +669,5 @@\n-\/\/ Do not add edges to stores on distinct control-flow paths;\n-\/\/ only add edges to stores which might interfere.\n+\/\/ The given 'load' has a current scheduling range in the dominator tree that\n+\/\/ starts at the load's early block (computed in schedule_early) and ends at\n+\/\/ the given 'LCA' block for the load. However, there may still exist\n+\/\/ anti-dependent stores between the early block and the LCA that overwrite\n+\/\/ memory that the load must witness. For such stores, we must\n@@ -674,8 +675,52 @@\n-\/\/ Return the (updated) LCA.  There will not be any possibly interfering\n-\/\/ store between the load's \"early block\" and the updated LCA.\n-\/\/ Any stores in the updated LCA will have new precedence edges\n-\/\/ back to the load.  The caller is expected to schedule the load\n-\/\/ in the LCA, in which case the precedence edges will make LCM\n-\/\/ preserve anti-dependences.  The caller may also hoist the load\n-\/\/ above the LCA, if it is not the early block.\n-Block* PhaseCFG::insert_anti_dependences(Block* LCA, Node* load, bool verify) {\n+\/\/   1. raise the load's LCA to force the load to (eventually) be scheduled at\n+\/\/      latest in the store's block, and\n+\/\/   2. if the load may get scheduled in the store's block, additionally insert\n+\/\/      an anti-dependence edge (i.e., precedence edge) from the load to the\n+\/\/      store to ensure LCM schedules the load before the store within the\n+\/\/      block.\n+\/\/\n+\/\/ For a given store, we say that the store is on a _distinct_ control-flow\n+\/\/ path relative to the load if there are no paths from early to LCA that go\n+\/\/ through the store's block. Such stores are not anti-dependent, and there is\n+\/\/ no need to update the LCA nor to add anti-dependence edges.\n+\/\/\n+\/\/ Due to the presence of loops, we must also raise the LCA above\n+\/\/ anti-dependent memory Phis. We defer the details (see later comments in the\n+\/\/ method) and for now look at an example without loops.\n+\/\/\n+\/\/          CFG               DOMINATOR TREE\n+\/\/\n+\/\/       B1 (early,L)              B1\n+\/\/       |\\________                \/\\\\___\n+\/\/       |         \\              \/  \\   \\\n+\/\/       B2 (L,S)   \\            B2  B7  B6\n+\/\/      \/  \\         \\           \/\\\\___\n+\/\/     B3  B4 (S)    B7 (S)     \/  \\   \\\n+\/\/      \\  \/         \/         B3  B4  B5\n+\/\/       B5 (LCA,L) \/\n+\/\/        \\    ____\/\n+\/\/         \\  \/\n+\/\/          B6\n+\/\/\n+\/\/ Here, the load's scheduling range when calling raise_above_anti_dependences\n+\/\/ is between early and LCA in the dominator tree, i.e., in block B1, B2, or B5\n+\/\/ (indicated with \"L\"). However, there are a number of stores (indicated with\n+\/\/ \"S\") that overwrite the memory which the load must witness. First, consider\n+\/\/ the store in B4. We cannot legally schedule the load in B4, so an\n+\/\/ anti-dependence edge is redundant. However, we must raise the LCA above\n+\/\/ B4, which means that the updated LCA is B2. Now, consider the store in B2.\n+\/\/ The LCA is already B2, so we do not need to raise it any further.\n+\/\/ If we, eventually, decide to schedule the load in B2, it could happen that\n+\/\/ LCM decides to place the load after the anti-dependent store in B2.\n+\/\/ Therefore, we now need to add an anti-dependence edge between the load and\n+\/\/ the B2 store, ensuring that the load is scheduled before the store. Finally,\n+\/\/ the store in B7 is on a distinct control-flow path. Therefore, B7 requires\n+\/\/ no action.\n+\/\/\n+\/\/ The raise_above_anti_dependences method returns the updated LCA and ensures\n+\/\/ there are no anti-dependent stores in any block between the load's early\n+\/\/ block and the updated LCA. Any stores in the updated LCA will have new\n+\/\/ anti-dependence edges back to the load. The caller may schedule the load in\n+\/\/ the updated LCA, or it may hoist the load above the updated LCA, if the\n+\/\/ updated LCA is not the early block.\n+Block* PhaseCFG::raise_above_anti_dependences(Block* LCA, Node* load, const bool verify) {\n@@ -714,5 +759,5 @@\n-  \/\/ Note the earliest legal placement of 'load', as determined by\n-  \/\/ by the unique point in the dom tree where all memory effects\n-  \/\/ and other inputs are first available.  (Computed by schedule_early.)\n-  \/\/ For normal loads, 'early' is the shallowest place (dom graph wise)\n-  \/\/ to look for anti-deps between this load and any store.\n+  \/\/ Record the earliest legal placement of 'load', as determined by the unique\n+  \/\/ point in the dominator tree where all memory effects and other inputs are\n+  \/\/ first available (computed by schedule_early). For normal loads, 'early' is\n+  \/\/ the shallowest place (dominator-tree wise) to look for anti-dependences\n+  \/\/ between this load and any store.\n@@ -722,2 +767,2 @@\n-  \/\/ memory or address inputs. This block may be different than the\n-  \/\/ schedule_early block in that it could be at an even shallower depth in the\n+  \/\/ memory or address inputs. This block may be different from the\n+  \/\/ schedule_early block when it is at an even shallower depth in the\n@@ -732,0 +777,2 @@\n+  assert(early->dominates(LCA_orig), \"precondition failed\");\n+\n@@ -733,20 +780,0 @@\n-  DefUseMemStatesQueue worklist_def_use_mem_states(area); \/\/ prior memory state to store and possible-def to explore\n-  Node_List non_early_stores(area); \/\/ all relevant stores outside of early\n-  bool must_raise_LCA = false;\n-\n-  \/\/ 'load' uses some memory state; look for users of the same state.\n-  \/\/ Recurse through MergeMem nodes to the stores that use them.\n-\n-  \/\/ Each of these stores is a possible definition of memory\n-  \/\/ that 'load' needs to use.  We need to force 'load'\n-  \/\/ to occur before each such store.  When the store is in\n-  \/\/ the same block as 'load', we insert an anti-dependence\n-  \/\/ edge load->store.\n-\n-  \/\/ The relevant stores \"nearby\" the load consist of a tree rooted\n-  \/\/ at initial_mem, with internal nodes of type MergeMem.\n-  \/\/ Therefore, the branches visited by the worklist are of this form:\n-  \/\/    initial_mem -> (MergeMem ->)* Memory state modifying node\n-  \/\/ Memory state modifying nodes include Store and Phi nodes and any node for which needs_anti_dependence_check()\n-  \/\/ returns false.\n-  \/\/ The anti-dependence constraints apply only to the fringe of this tree.\n@@ -754,0 +781,16 @@\n+  \/\/ Bookkeeping of possibly anti-dependent stores that we find outside the\n+  \/\/ early block and that may need anti-dependence edges. Note that stores in\n+  \/\/ non_early_stores are not necessarily dominated by early. The search starts\n+  \/\/ from initial_mem, which can reside in a block that dominates early, and\n+  \/\/ therefore, stores we find may be in blocks that are on completely distinct\n+  \/\/ control-flow paths compared to early. However, in the end, only stores in\n+  \/\/ blocks dominated by early matter. The reason for bookkeeping not only\n+  \/\/ relevant stores is efficiency: we lazily record all possible\n+  \/\/ anti-dependent stores and add anti-dependence edges only to the relevant\n+  \/\/ ones at the very end of this method when we know the final updated LCA.\n+  Node_List non_early_stores(area);\n+\n+  \/\/ Whether we must raise the LCA after the main worklist loop below.\n+  bool must_raise_LCA_above_marks = false;\n+\n+  \/\/ The input load uses some memory state (initial_mem).\n@@ -755,0 +798,20 @@\n+  \/\/ To find anti-dependences we must look for users of the same memory state.\n+  \/\/ To do this, we search the memory graph downwards from initial_mem. During\n+  \/\/ this search, we encounter different types of nodes that we handle\n+  \/\/ according to the following three categories:\n+  \/\/\n+  \/\/ - MergeMems\n+  \/\/ - Memory-state-modifying nodes (informally referred to as \"stores\" above\n+  \/\/   and below)\n+  \/\/ - Memory Phis\n+  \/\/\n+  \/\/ MergeMems do not modify the memory state. Anti-dependent stores or memory\n+  \/\/ Phis may, however, exist downstream of MergeMems. Therefore, we must\n+  \/\/ permit the search to continue through MergeMems. Stores may raise the LCA\n+  \/\/ and may potentially also require an anti-dependence edge. Memory Phis may\n+  \/\/ raise the LCA but never require anti-dependence edges. See the comments\n+  \/\/ throughout the worklist loop below for further details.\n+  \/\/\n+  \/\/ It may be useful to think of the anti-dependence search as traversing a\n+  \/\/ tree rooted at initial_mem, with internal nodes of type MergeMem and\n+  \/\/ memory Phis and stores as (potentially repeated) leaves.\n@@ -770,8 +833,26 @@\n-  worklist_def_use_mem_states.push(nullptr, initial_mem);\n-  while (worklist_def_use_mem_states.is_nonempty()) {\n-    \/\/ Examine a nearby store to see if it might interfere with our load.\n-    Node* def_mem_state = worklist_def_use_mem_states.top_def();\n-    Node* use_mem_state = worklist_def_use_mem_states.top_use();\n-    worklist_def_use_mem_states.pop();\n-\n-    uint op = use_mem_state->Opcode();\n+  \/\/ To administer the search, we use a worklist consisting of (def,use)-pairs\n+  \/\/ of memory states, corresponding to edges in the search tree (and edges\n+  \/\/ in the memory graph). We need to keep track of search tree edges in the\n+  \/\/ worklist rather than individual nodes due to memory Phis (see details\n+  \/\/ below).\n+  DefUseMemStatesQueue worklist(area);\n+  \/\/ We start the search at initial_mem and indicate the search root with the\n+  \/\/ edge (nullptr, initial_mem).\n+  worklist.push(nullptr, initial_mem);\n+\n+  \/\/ The worklist loop\n+  while (worklist.is_nonempty()) {\n+    \/\/ Pop the next edge from the worklist\n+    Node* def_mem_state = worklist.top_def();\n+    Node* use_mem_state = worklist.top_use();\n+    worklist.pop();\n+\n+    \/\/ We are either\n+    \/\/ - at the root of the search with the edge (nullptr, initial_mem),\n+    \/\/ - just past initial_mem with the edge (initial_mem, use_mem_state), or\n+    \/\/ - just past a MergeMem with the edge (MergeMem, use_mem_state).\n+    assert(def_mem_state == nullptr || def_mem_state == initial_mem ||\n+           def_mem_state->is_MergeMem(),\n+           \"unexpected memory state\");\n+\n+    const uint op = use_mem_state->Opcode();\n@@ -790,9 +871,7 @@\n-    \/\/ MergeMems do not directly have anti-deps.\n-    \/\/ Treat them as internal nodes in a forward tree of memory states,\n-    \/\/ the leaves of which are each a 'possible-def'.\n-    if (use_mem_state == initial_mem    \/\/ root (exclusive) of tree we are searching\n-        || op == Op_MergeMem    \/\/ internal node of tree we are searching\n-        ) {\n-      def_mem_state = use_mem_state;   \/\/ It's not a possibly interfering store.\n-      if (use_mem_state == initial_mem)\n-        initial_mem = nullptr;  \/\/ only process initial memory once\n+    \/\/ If we are either at the search root or have found a MergeMem, we step\n+    \/\/ past use_mem_state and populate the search worklist with edges\n+    \/\/ (use_mem_state, child) for use_mem_state's children.\n+    if (def_mem_state == nullptr \/\/ root (exclusive) of tree we are searching\n+        || op == Op_MergeMem     \/\/ internal node of tree we are searching\n+    ) {\n+      def_mem_state = use_mem_state;\n@@ -803,2 +882,3 @@\n-          \/\/ use_mem_state is also a kind of load (i.e. needs_anti_dependence_check), and it is not a memory state\n-          \/\/ modifying node (store, Phi or MergeMem). Hence, load can't be anti dependent on this node.\n+          \/\/ use_mem_state is also a kind of load (i.e.,\n+          \/\/ needs_anti_dependence_check), and it is not a store nor a memory\n+          \/\/ Phi. Hence, it is not anti-dependent on the load.\n@@ -807,1 +887,1 @@\n-        worklist_def_use_mem_states.push(def_mem_state, use_mem_state);\n+        worklist.push(def_mem_state, use_mem_state);\n@@ -809,0 +889,2 @@\n+      \/\/ Nothing more to do for the current (nullptr, initial_mem) or\n+      \/\/ (initial_mem\/MergeMem, MergeMem) edge, move on.\n@@ -812,0 +894,3 @@\n+    assert(!use_mem_state->is_MergeMem(),\n+           \"use_mem_state should be either a store or a memory Phi\");\n+\n@@ -814,3 +899,3 @@\n-    \/\/ Compute the alias index.  Loads and stores with different alias\n-    \/\/ indices do not need anti-dependence edges.  Wide MemBar's are\n-    \/\/ anti-dependent on everything (except immutable memories).\n+    \/\/ Compute the alias index. If the use_mem_state has an alias index\n+    \/\/ different from the load's, it is not anti-dependent. Wide MemBar's\n+    \/\/ are anti-dependent with everything (except immutable memories).\n@@ -823,1 +908,1 @@\n-      MachNode* mstore = use_mem_state->as_Mach();\n+      MachNode* muse = use_mem_state->as_Mach();\n@@ -829,3 +914,3 @@\n-        if (mstore->ideal_Opcode() == Op_CallStaticJava) {\n-          assert(mstore->is_MachSafePoint(), \"\");\n-          MachSafePointNode* ms = (MachSafePointNode*) mstore;\n+        if (muse->ideal_Opcode() == Op_CallStaticJava) {\n+          assert(muse->is_MachSafePoint(), \"\");\n+          MachSafePointNode* ms = (MachSafePointNode*)muse;\n@@ -836,1 +921,1 @@\n-            \/\/ (other than Raw) and so do not require anti-dependence edges.\n+            \/\/ (other than Raw) and so are not anti-dependent.\n@@ -843,1 +928,1 @@\n-        if (mstore->ideal_Opcode() == Op_SafePoint)\n+        if (muse->ideal_Opcode() == Op_SafePoint) {\n@@ -845,0 +930,1 @@\n+        }\n@@ -849,1 +935,1 @@\n-        \/\/ Inserting an anti-dep between such a safepoint and a use\n+        \/\/ Inserting an anti-dependence edge between such a safepoint and a use\n@@ -853,1 +939,1 @@\n-        if (mstore->ideal_Opcode() == Op_SafePoint && load->in(0) == mstore)\n+        if (muse->ideal_Opcode() == Op_SafePoint && load->in(0) == muse) {\n@@ -855,0 +941,1 @@\n+        }\n@@ -858,6 +945,17 @@\n-    \/\/ Identify a block that the current load must be above,\n-    \/\/ or else observe that 'store' is all the way up in the\n-    \/\/ earliest legal block for 'load'.  In the latter case,\n-    \/\/ immediately insert an anti-dependence edge.\n-    Block* store_block = get_block_for_node(use_mem_state);\n-    assert(store_block != nullptr, \"unused killing projections skipped above\");\n+    \/\/ Determine the block of the use_mem_state.\n+    Block* use_mem_state_block = get_block_for_node(use_mem_state);\n+    assert(use_mem_state_block != nullptr,\n+           \"unused killing projections skipped above\");\n+\n+    \/\/ For efficiency, we take a lazy approach to both raising the LCA and\n+    \/\/ adding anti-dependence edges. In this worklist loop, we only mark blocks\n+    \/\/ which we must raise the LCA above (set_raise_LCA_mark), and keep\n+    \/\/ track of nodes that potentially need anti-dependence edges\n+    \/\/ (non_early_stores). The only exceptions to this are if we\n+    \/\/ immediately see that we have to raise the LCA all the way to the early\n+    \/\/ block, and if we find stores in the early block (which always need\n+    \/\/ anti-dependence edges).\n+    \/\/\n+    \/\/ After the worklist loop, we perform an efficient combined LCA-raising\n+    \/\/ operation over all marks and only then add anti-dependence edges where\n+    \/\/ strictly necessary according to the new raised LCA.\n@@ -866,2 +964,5 @@\n-      \/\/ Loop-phis need to raise load before input. (Other phis are treated\n-      \/\/ as store below.)\n+      \/\/ We have reached a memory Phi node. On our search from initial_mem to\n+      \/\/ the Phi, we have found no anti-dependences (otherwise, we would have\n+      \/\/ already terminated the search along this branch). Consider the example\n+      \/\/ below, indicating a Phi node and its node inputs (we omit the control\n+      \/\/ input).\n@@ -869,3 +970,5 @@\n-      \/\/ 'load' uses memory which is one (or more) of the Phi's inputs.\n-      \/\/ It must be scheduled not before the Phi, but rather before\n-      \/\/ each of the relevant Phi inputs.\n+      \/\/    def_mem_state\n+      \/\/          |\n+      \/\/          | ? ?\n+      \/\/          \\ | \/\n+      \/\/           Phi\n@@ -873,3 +976,5 @@\n-      \/\/ Instead of finding the LCA of all inputs to a Phi that match 'mem',\n-      \/\/ we mark each corresponding predecessor block and do a combined\n-      \/\/ hoisting operation later (raise_LCA_above_marks).\n+      \/\/ We reached the Phi from def_mem_state and know that, on this\n+      \/\/ particular input, the memory that the load must witness is not\n+      \/\/ overwritten. However, for the Phi's other inputs (? in the\n+      \/\/ illustration), we have no information and must thus conservatively\n+      \/\/ assume that the load's memory is overwritten at and below the Phi.\n@@ -877,1 +982,21 @@\n-      \/\/ Do not assert(store_block != early, \"Phi merging memory after access\")\n+      \/\/ It is impossible to schedule the load before the Phi in\n+      \/\/ the same block as the Phi (use_mem_state_block), and anti-dependence\n+      \/\/ edges are, therefore, redundant. We must, however, find the\n+      \/\/ predecessor block of use_mem_state_block that corresponds to\n+      \/\/ def_mem_state, and raise the LCA above that block. Note that this block\n+      \/\/ is not necessarily def_mem_state's block! See the continuation of our\n+      \/\/ previous example below (now illustrating blocks instead of nodes)\n+      \/\/\n+      \/\/    def_mem_state's block\n+      \/\/          |\n+      \/\/          |\n+      \/\/      pred_block\n+      \/\/          |\n+      \/\/          |   ?   ?\n+      \/\/          |   |   |\n+      \/\/      use_mem_state_block\n+      \/\/\n+      \/\/ Here, we must raise the LCA above pred_block rather than\n+      \/\/ def_mem_state's block.\n+      \/\/\n+      \/\/ Do not assert(use_mem_state_block != early, \"Phi merging memory after access\")\n@@ -879,0 +1004,4 @@\n+      if (LCA == early) {\n+        \/\/ Don't bother if LCA is already raised all the way\n+        continue;\n+      }\n@@ -883,1 +1012,1 @@\n-          Block* pred_block = get_block_for_node(store_block->pred(j));\n+          Block* pred_block = get_block_for_node(use_mem_state_block->pred(j));\n@@ -885,3 +1014,1 @@\n-            \/\/ If any predecessor of the Phi matches the load's \"early block\",\n-            \/\/ we do not need a precedence edge between the Phi and 'load'\n-            \/\/ since the load will be forced into a block preceding the Phi.\n+            \/\/ Lazily set the LCA mark\n@@ -889,6 +1016,5 @@\n-            assert(!LCA_orig->dominates(pred_block) ||\n-                   early->dominates(pred_block), \"early is high enough\");\n-            must_raise_LCA = true;\n-          } else {\n-            \/\/ anti-dependent upon PHI pinned below 'early', no edge needed\n-            LCA = early;             \/\/ but can not schedule below 'early'\n+            must_raise_LCA_above_marks = true;\n+          } else \/* if (pred_block == early) *\/ {\n+            \/\/ We know already now that we must raise LCA all the way to early.\n+            LCA = early;\n+            \/\/ This turns off the process of gathering non_early_stores.\n@@ -899,12 +1025,8 @@\n-    } else if (store_block != early) {\n-      \/\/ 'store' is between the current LCA and earliest possible block.\n-      \/\/ Label its block, and decide later on how to raise the LCA\n-      \/\/ to include the effect on LCA of this store.\n-      \/\/ If this store's block gets chosen as the raised LCA, we\n-      \/\/ will find him on the non_early_stores list and stick him\n-      \/\/ with a precedence edge.\n-      \/\/ (But, don't bother if LCA is already raised all the way.)\n-      if (LCA != early && !unrelated_load_in_store_null_block(use_mem_state, load)) {\n-        store_block->set_raise_LCA_mark(load_index);\n-        must_raise_LCA = true;\n-        non_early_stores.push(use_mem_state);\n+    } else if (use_mem_state_block != early) {\n+      \/\/ We found an anti-dependent store outside the load's 'early' block. The\n+      \/\/ store may be between the current LCA and the earliest possible block\n+      \/\/ (but it could very well also be on a distinct control-flow path).\n+      \/\/ Lazily set the LCA mark and push to non_early_stores.\n+      if (LCA == early) {\n+        \/\/ Don't bother if LCA is already raised all the way\n+        continue;\n@@ -912,4 +1034,10 @@\n-    } else {\n-      \/\/ Found a possibly-interfering store in the load's 'early' block.\n-      \/\/ This means 'load' cannot sink at all in the dominator tree.\n-      \/\/ Add an anti-dep edge, and squeeze 'load' into the highest block.\n+      if (unrelated_load_in_store_null_block(use_mem_state, load)) {\n+        continue;\n+      }\n+      use_mem_state_block->set_raise_LCA_mark(load_index);\n+      must_raise_LCA_above_marks = true;\n+      non_early_stores.push(use_mem_state);\n+    } else \/* if (use_mem_state_block == early) *\/ {\n+      \/\/ We found an anti-dependent store in the load's 'early' block.\n+      \/\/ Therefore, we know already now that we must raise LCA all the way to\n+      \/\/ early and that we need to add an anti-dependence edge to the store.\n@@ -927,1 +1055,1 @@\n-  \/\/ (Worklist is now empty; all nearby stores have been visited.)\n+  \/\/ Worklist is now empty; we have visited all possible anti-dependences.\n@@ -931,2 +1059,4 @@\n-  \/\/ precedence edges.\n-  if (LCA == early)  return LCA;\n+  \/\/ anti-dependence edges.\n+  if (LCA == early) {\n+    return LCA;\n+  }\n@@ -934,11 +1064,6 @@\n-  \/\/ We get here only if there are no possibly-interfering stores\n-  \/\/ in the load's 'early' block.  Move LCA up above all predecessors\n-  \/\/ which contain stores we have noted.\n-  \/\/\n-  \/\/ The raised LCA block can be a home to such interfering stores,\n-  \/\/ but its predecessors must not contain any such stores.\n-  \/\/\n-  \/\/ The raised LCA will be a lower bound for placing the load,\n-  \/\/ preventing the load from sinking past any block containing\n-  \/\/ a store that may invalidate the memory state required by 'load'.\n-  if (must_raise_LCA)\n+  \/\/ We get here only if there are no anti-dependent stores in the load's\n+  \/\/ 'early' block and if no memory Phi has forced LCA to the early block. Now\n+  \/\/ we must raise the LCA above the blocks for all the anti-dependent stores\n+  \/\/ and above the predecessor blocks of anti-dependent memory Phis we reached\n+  \/\/ during the search.\n+  if (must_raise_LCA_above_marks) {\n@@ -946,1 +1071,8 @@\n-  if (LCA == early)  return LCA;\n+  }\n+\n+  \/\/ If LCA == early at this point, there were no stores that required\n+  \/\/ anti-dependence edges in the early block. Otherwise, we would have eagerly\n+  \/\/ raised the LCA to early already in the worklist loop.\n+  if (LCA == early) {\n+    return LCA;\n+  }\n@@ -948,3 +1080,16 @@\n-  \/\/ Insert anti-dependence edges from 'load' to each store\n-  \/\/ in the non-early LCA block.\n-  \/\/ Mine the non_early_stores list for such stores.\n+  \/\/ The raised LCA block can now be a home to anti-dependent stores for which\n+  \/\/ we still need to add anti-dependence edges, but no LCA predecessor block\n+  \/\/ contains any such stores (otherwise, we would have raised the LCA even\n+  \/\/ higher).\n+  \/\/\n+  \/\/ The raised LCA will be a lower bound for placing the load, preventing the\n+  \/\/ load from sinking past any block containing a store that may overwrite\n+  \/\/ memory that the load must witness.\n+  \/\/\n+  \/\/ Now we need to insert the necessary anti-dependence edges from 'load' to\n+  \/\/ each store in the non-early LCA block. We have recorded all such potential\n+  \/\/ stores in non_early_stores.\n+  \/\/\n+  \/\/ If LCA->raise_LCA_mark() != load_index, it means that we raised the LCA to\n+  \/\/ a block in which we did not find any anti-dependent stores. So, no need to\n+  \/\/ search for any such stores.\n@@ -956,1 +1101,2 @@\n-        \/\/ add anti_dependence from store to load in its own block\n+        \/\/ Add anti-dependence edge from the load to the store in the non-early\n+        \/\/ LCA.\n@@ -965,5 +1111,0 @@\n-        \/\/ Any other stores we found must be either inside the new LCA\n-        \/\/ or else outside the original LCA.  In the latter case, they\n-        \/\/ did not interfere with any use of 'load'.\n-        assert(LCA->dominates(store_block)\n-               || !LCA_orig->dominates(store_block), \"no stray stores\");\n@@ -974,0 +1115,2 @@\n+  assert(LCA->dominates(LCA_orig), \"unsound updated LCA\");\n+\n@@ -1538,1 +1681,1 @@\n-      LCA = insert_anti_dependences(LCA, self);\n+      LCA = raise_above_anti_dependences(LCA, self);\n","filename":"src\/hotspot\/share\/opto\/gcm.cpp","additions":285,"deletions":142,"binary":false,"changes":427,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-  bool ascii;\n+  bool _ascii;\n@@ -190,1 +190,1 @@\n-    : Node(control, arymem, s1, s2, c), ascii(ascii) {}\n+    : Node(control, arymem, s1, s2, c), _ascii(ascii) {}\n@@ -192,1 +192,1 @@\n-  bool is_ascii() { return ascii; }\n+  bool is_ascii() { return _ascii; }\n@@ -201,0 +201,5 @@\n+  virtual uint size_of() const { return sizeof(EncodeISOArrayNode); }\n+  virtual uint hash() const { return Node::hash() + _ascii; }\n+  virtual bool cmp(const Node& n) const {\n+    return Node::cmp(n) && _ascii == ((EncodeISOArrayNode&)n).is_ascii();\n+  }\n","filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -520,1 +520,1 @@\n-        insert_anti_dependences(block, n);\n+        raise_above_anti_dependences(block, n);\n@@ -1393,1 +1393,1 @@\n-        insert_anti_dependences(sb, clone);\n+        raise_above_anti_dependences(sb, clone);\n","filename":"src\/hotspot\/share\/opto\/lcm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8364,0 +8364,1 @@\n+\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -494,1 +494,1 @@\n-  if (_body.size() > 255) {\n+  if (_body.size() > 255 && !StressLoopPeeling) {\n@@ -509,0 +509,1 @@\n+      \/\/ Peeling is not legal here (cf. assert in do_peeling), we don't even stress peel!\n@@ -513,0 +514,15 @@\n+#ifndef PRODUCT\n+  \/\/ It is now safe to peel or not.\n+  if (StressLoopPeeling) {\n+    LoopNode* loop_head = _head->as_Loop();\n+    static constexpr uint max_peeling_opportunities = 5;\n+    if (loop_head->_stress_peeling_attempts < max_peeling_opportunities) {\n+      loop_head->_stress_peeling_attempts++;\n+      \/\/ In case of stress, let's just pick randomly...\n+      return ((phase->C->random() % 2) == 0) ? estimate : 0;\n+    }\n+    return 0;\n+  }\n+  \/\/ ...otherwise, let's apply our heuristic.\n+#endif\n+\n@@ -816,1 +832,4 @@\n-    initialize_assertion_predicates_for_peeled_loop(new_head->as_CountedLoop(), head->as_CountedLoop(),\n+    CountedLoopNode* cl = head->as_CountedLoop();\n+    Node* init = cl->init_trip();\n+    Node* init_ctrl = cl->skip_strip_mined()->in(LoopNode::EntryControl);\n+    initialize_assertion_predicates_for_peeled_loop(new_head->as_CountedLoop(), cl,\n@@ -818,1 +837,2 @@\n- }\n+    cast_incr_before_loop(init, init_ctrl, cl);\n+  }\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -139,0 +139,4 @@\n+#ifndef PRODUCT\n+  uint _stress_peeling_attempts = 0;\n+#endif\n+\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -503,0 +503,1 @@\n+  virtual uint size_of() const { return sizeof(MachConstantNode); }\n@@ -573,0 +574,2 @@\n+private:\n+  bool _do_polling;\n@@ -578,5 +581,1 @@\n-\n-private:\n-  bool _do_polling;\n-\n-public:\n+  virtual uint size_of() const { return sizeof(MachEpilogNode); }\n@@ -606,0 +605,1 @@\n+  virtual uint size_of() const { return sizeof(MachNopNode); }\n@@ -833,0 +833,1 @@\n+  virtual uint size_of() const { return sizeof(MachJumpNode); }\n@@ -931,0 +932,1 @@\n+  virtual uint size_of() const { return sizeof(MachSafePointNode); }\n@@ -1046,0 +1048,1 @@\n+  virtual uint size_of() const { return sizeof(MachCallDynamicJavaNode); }\n@@ -1079,0 +1082,1 @@\n+  virtual uint size_of() const { return sizeof(MachHaltNode); }\n","filename":"src\/hotspot\/share\/opto\/machnode.hpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1134,0 +1134,5 @@\n+  virtual uint size_of() const { return sizeof(ClearArrayNode); }\n+  virtual uint hash() const { return Node::hash() + _is_large; }\n+  virtual bool cmp(const Node& n) const {\n+    return Node::cmp(n) && _is_large == ((ClearArrayNode&)n).is_large();\n+  }\n","filename":"src\/hotspot\/share\/opto\/memnode.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3130,1 +3130,1 @@\n-            if (u->in(j) == n) {\n+            if (u->in(j) == n && r->in(j) != nullptr) {\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -127,0 +127,1 @@\n+  virtual uint size_of() const { return sizeof(OpaqueMultiversioningNode); }\n@@ -270,0 +271,1 @@\n+  virtual uint size_of() const { return sizeof(ProfileBooleanNode); }\n","filename":"src\/hotspot\/share\/opto\/opaquenode.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1517,0 +1517,1 @@\n+\n@@ -1589,0 +1590,1 @@\n+\n@@ -2080,1 +2082,1 @@\n-  if (!StressCompiledExceptionHandlers && doit) {\n+  if (DeoptimizeOnAllocationException && doit) {\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -605,1 +605,1 @@\n-  static const TypeFunc* kyberNtt_Type() {\n+  static inline const TypeFunc* kyberNtt_Type() {\n@@ -610,1 +610,1 @@\n-  static const TypeFunc* kyberInverseNtt_Type() {\n+  static inline const TypeFunc* kyberInverseNtt_Type() {\n@@ -615,1 +615,1 @@\n-  static const TypeFunc* kyberNttMult_Type() {\n+  static inline const TypeFunc* kyberNttMult_Type() {\n@@ -620,1 +620,1 @@\n-  static const TypeFunc* kyberAddPoly_2_Type() {\n+  static inline const TypeFunc* kyberAddPoly_2_Type() {\n@@ -625,1 +625,1 @@\n-  static const TypeFunc* kyberAddPoly_3_Type() {\n+  static inline const TypeFunc* kyberAddPoly_3_Type() {\n@@ -630,1 +630,1 @@\n-  static const TypeFunc* kyber12To16_Type() {\n+  static inline const TypeFunc* kyber12To16_Type() {\n@@ -635,1 +635,1 @@\n-  static const TypeFunc* kyberBarrettReduce_Type() {\n+  static inline const TypeFunc* kyberBarrettReduce_Type() {\n","filename":"src\/hotspot\/share\/opto\/runtime.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2668,1 +2668,12 @@\n-    if (vw > max_aw) {\n+    \/\/ Generally, we prefer to align with the largest memory op (load or store).\n+    \/\/ If there are multiple, then SuperWordAutomaticAlignment determines if we\n+    \/\/ prefer loads or stores.\n+    \/\/ When a load or store is misaligned, this can lead to the load or store\n+    \/\/ being split, when it goes over a cache line. Most CPUs can schedule\n+    \/\/ more loads than stores per cycle (often 2 loads and 1 store). Hence,\n+    \/\/ it is worse if a store is split, and less bad if a load is split.\n+    \/\/ By default, we have SuperWordAutomaticAlignment=1, i.e. we align with a\n+    \/\/ store if possible, to avoid splitting that store.\n+    bool prefer_store = mem_ref != nullptr && SuperWordAutomaticAlignment == 1 && mem_ref->is_Load() && p0->is_Store();\n+    bool prefer_load  = mem_ref != nullptr && SuperWordAutomaticAlignment == 2 && mem_ref->is_Store() && p0->is_Load();\n+    if (vw > max_aw || (vw == max_aw && (prefer_load || prefer_store))) {\n@@ -2695,0 +2706,10 @@\n+\n+  if (!VLoop::vectors_should_be_aligned() && SuperWordAutomaticAlignment == 0) {\n+#ifdef ASSERT\n+    if (_trace._align_vector) {\n+      tty->print_cr(\"\\nVTransform::adjust_pre_loop_limit_to_align_main_loop_vectors: disabled.\");\n+    }\n+#endif\n+    return;\n+  }\n+\n@@ -2915,0 +2936,1 @@\n+    TRACE_ALIGN_VECTOR_NODE(invar_variable);\n@@ -2924,0 +2946,1 @@\n+    TRACE_ALIGN_VECTOR_NODE(invar_scale_con);\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2960,1 +2960,1 @@\n-    if (log_is_enabled(Info, cds)) {\n+    if (log_is_enabled(Info, aot)) {\n@@ -2963,1 +2963,1 @@\n-      log_info(cds)(\"JVM_StartThread() ignored: %s\", t->klass()->external_name());\n+      log_info(aot)(\"JVM_StartThread() ignored: %s\", t->klass()->external_name());\n@@ -3663,1 +3663,1 @@\n-    log_debug(cds)(\"JVM_GetRandomSeedForDumping() = \" JLONG_FORMAT, seed);\n+    log_debug(aot)(\"JVM_GetRandomSeedForDumping() = \" JLONG_FORMAT, seed);\n@@ -3726,1 +3726,1 @@\n-      log_debug(cds)(\"NeedsClassInitBarrierForCDS: %s\", k->external_name());\n+      log_debug(aot)(\"NeedsClassInitBarrierForCDS: %s\", k->external_name());\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -471,2 +471,1 @@\n-      char* prefix_copy = NEW_RESOURCE_ARRAY(char, strlen(prefix)+1);\n-      strcpy(prefix_copy, prefix);\n+      char* prefix_copy = ResourceArea::strdup(prefix);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -957,1 +957,1 @@\n-    log_debug(cds, heap)(\"skipped dormant archived object \" INTPTR_FORMAT \" (%s)\", p2i(o),\n+    log_debug(aot, heap)(\"skipped dormant archived object \" INTPTR_FORMAT \" (%s)\", p2i(o),\n@@ -1043,1 +1043,1 @@\n-    log_debug(cds, heap)(\"skipped dormant archived object \" INTPTR_FORMAT \" (%s)\", p2i(obj),\n+    log_debug(aot, heap)(\"skipped dormant archived object \" INTPTR_FORMAT \" (%s)\", p2i(obj),\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1250,0 +1250,3 @@\n+  \/\/ caller->constants->copy_bootstrap_arguments_at performs a runtime\n+  \/\/ range check, but let's assert earlier as well.\n+  assert(start < end && start >= 0, \"invariant\");\n@@ -1270,40 +1273,0 @@\n-  objArrayHandle buf(THREAD, (objArrayOop) JNIHandles::resolve(buf_jh));\n-  if (start < 0) {\n-    for (int pseudo_index = -4; pseudo_index < 0; pseudo_index++) {\n-      if (start == pseudo_index) {\n-        if (start >= end || 0 > pos || pos >= buf->length())  break;\n-        oop pseudo_arg = nullptr;\n-        switch (pseudo_index) {\n-        case -4:  \/\/ bootstrap method\n-          {\n-            int bsm_index = caller->constants()->bootstrap_method_ref_index_at(bss_index_in_pool);\n-            pseudo_arg = caller->constants()->resolve_possibly_cached_constant_at(bsm_index, CHECK);\n-            break;\n-          }\n-        case -3:  \/\/ name\n-          {\n-            Symbol* name = caller->constants()->name_ref_at(bss_index_in_pool, Bytecodes::_invokedynamic);\n-            Handle str = java_lang_String::create_from_symbol(name, CHECK);\n-            pseudo_arg = str();\n-            break;\n-          }\n-        case -2:  \/\/ type\n-          {\n-            Symbol* type = caller->constants()->signature_ref_at(bss_index_in_pool, Bytecodes::_invokedynamic);\n-            Handle th;\n-            if (type->char_at(0) == JVM_SIGNATURE_FUNC) {\n-              th = SystemDictionary::find_method_handle_type(type, caller, CHECK);\n-            } else {\n-              th = SystemDictionary::find_java_mirror_for_type(type, caller, SignatureStream::NCDFError, CHECK);\n-            }\n-            pseudo_arg = th();\n-            break;\n-          }\n-        case -1:  \/\/ argument count\n-          {\n-            int argc = caller->constants()->bootstrap_argument_count_at(bss_index_in_pool);\n-            jvalue argc_value; argc_value.i = (jint)argc;\n-            pseudo_arg = java_lang_boxing_object::create(T_INT, &argc_value, CHECK);\n-            break;\n-          }\n-        }\n@@ -1311,7 +1274,2 @@\n-        \/\/ Store the pseudo-argument, and advance the pointers.\n-        buf->obj_at_put(pos++, pseudo_arg);\n-        ++start;\n-      }\n-    }\n-    \/\/ When we are done with this there may be regular arguments to process too.\n-  }\n+  objArrayHandle buf(THREAD, (objArrayOop)JNIHandles::resolve(buf_jh));\n+\n","filename":"src\/hotspot\/share\/prims\/methodHandles.cpp","additions":5,"deletions":47,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotLogging.hpp\"\n@@ -89,0 +90,3 @@\n+#if INCLUDE_JVMCI\n+bool   Arguments::_jvmci_module_added           = false;\n+#endif\n@@ -335,2 +339,1 @@\n-    if (matches_property_suffix(property_suffix, ADDREADS, ADDREADS_LEN) ||\n-        matches_property_suffix(property_suffix, PATCH, PATCH_LEN) ||\n+    if (matches_property_suffix(property_suffix, PATCH, PATCH_LEN) ||\n@@ -347,0 +350,1 @@\n+          matches_property_suffix(property_suffix, ADDREADS, ADDREADS_LEN) ||\n@@ -1366,1 +1370,1 @@\n-    log_error(cds)(\"%s is incompatible with other specified options.\",\n+    aot_log_error(aot)(\"%s is incompatible with other specified options.\",\n@@ -1375,1 +1379,1 @@\n-      log_warning(cds)(\"Unable to use AOT cache: %s\", message);\n+      log_warning(aot)(\"Unable to use AOT cache: %s\", message);\n@@ -1377,1 +1381,1 @@\n-      log_info(cds)(\"Unable to use shared archive: %s\", message);\n+      aot_log_info(aot)(\"Unable to use shared archive: %s\", message);\n@@ -1566,1 +1570,1 @@\n-          log_info(cds)(\"UseCompressedOops and UseCompressedClassPointers have been disabled due to\"\n+          aot_log_info(aot)(\"UseCompressedOops and UseCompressedClassPointers have been disabled due to\"\n@@ -1801,3 +1805,3 @@\n-    PropertyList_unique_add(&_system_properties, \"jdk.internal.vm.ci.enabled\", \"true\",\n-        AddProperty, UnwriteableProperty, InternalProperty);\n-    if (ClassLoader::is_module_observable(\"jdk.internal.vm.ci\")) {\n+    \/\/ Add the JVMCI module if not using libjvmci or EnableJVMCI\n+    \/\/ was explicitly set on the command line or in the jimage.\n+    if ((!UseJVMCINativeLibrary || FLAG_IS_CMDLINE(EnableJVMCI) || FLAG_IS_JIMAGE_RESOURCE(EnableJVMCI)) && ClassLoader::is_module_observable(\"jdk.internal.vm.ci\") && !_jvmci_module_added) {\n@@ -2311,0 +2315,13 @@\n+#if INCLUDE_JVMCI\n+      if (!_jvmci_module_added) {\n+        const char *jvmci_module = strstr(tail, \"jdk.internal.vm.ci\");\n+        if (jvmci_module != nullptr) {\n+          char before = *(jvmci_module - 1);\n+          char after  = *(jvmci_module + strlen(\"jdk.internal.vm.ci\"));\n+          if ((before == '=' || before == ',') && (after == '\\0' || after == ',')) {\n+            FLAG_SET_DEFAULT(EnableJVMCI, true);\n+            _jvmci_module_added = true;\n+          }\n+        }\n+      }\n+#endif\n@@ -3699,1 +3716,1 @@\n-      log_is_enabled(Info, cds)) {\n+      log_is_enabled(Info, cds) || log_is_enabled(Info, aot)) {\n@@ -3703,0 +3720,1 @@\n+    LogConfiguration::configure_stdout(LogLevel::Off, true, LOG_TAGS(aot));\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":28,"deletions":10,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -201,0 +201,4 @@\n+#if INCLUDE_JVMCI\n+  \/\/ was jdk.internal.vm.ci module specified in the --add-modules option?\n+  static bool _jvmci_module_added;\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -330,0 +330,1 @@\n+                                                                            \\\n@@ -653,0 +654,4 @@\n+  product(bool, DeoptimizeOnAllocationException, false, DIAGNOSTIC,         \\\n+          \"Deoptimize on exception during allocation instead of using the \" \\\n+          \"compiled exception handlers\")                                    \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -122,0 +122,1 @@\n+  OrderAccess::fence();\n@@ -147,0 +148,1 @@\n+  OrderAccess::fence();\n@@ -173,0 +175,1 @@\n+  OrderAccess::fence();\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,0 +52,10 @@\n+\/\/ The Mutex class used to explicitly guarantee fence(); lock(); acquire(); semantics with\n+\/\/ a hand crafted implementation. That may or may not be a desirable contract for a Mutex,\n+\/\/ but is nevertheless something that older HotSpot code may or may not rely on for correctness.\n+\/\/ Newer code is encouraged not to rely more on this feature, but it is not generally safe to\n+\/\/ remove the fences, until all usages of Mutex have been evaluated on a case-by-case basis, whether\n+\/\/ they actually rely on this stronger contract, or not.\n+\n+\/\/ Having a fence does not have any significant impact on peformance, as this is an internal VM\n+\/\/ mutex and is generally not in hot code paths.\n+\n","filename":"src\/hotspot\/share\/runtime\/mutex.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3345,1 +3345,1 @@\n-    LogStreamHandle(Trace, cds) lsh;\n+    LogStreamHandle(Trace, aot) lsh;\n@@ -3359,1 +3359,1 @@\n-        log_trace(cds)(\"Added fp=%p (%s), entry=%p to the archived adater table\", buffered_fp, buffered_fp->as_basic_args_string(), buffered_entry);\n+        log_trace(aot)(\"Added fp=%p (%s), entry=%p to the archived adater table\", buffered_fp, buffered_fp->as_basic_args_string(), buffered_entry);\n@@ -3363,1 +3363,1 @@\n-        log_trace(cds)(\"Skipping adapter handler %p (fp=%s) as it is not archived\", entry, fp->as_basic_args_string());\n+        log_trace(aot)(\"Skipping adapter handler %p (fp=%s) as it is not archived\", entry, fp->as_basic_args_string());\n@@ -3411,1 +3411,1 @@\n-      log_warning(cds)(\"Failed to link AdapterHandlerEntry (fp=%s) to its code in the AOT code cache\", _fingerprint->as_basic_args_string());\n+      log_warning(aot)(\"Failed to link AdapterHandlerEntry (fp=%s) to its code in the AOT code cache\", _fingerprint->as_basic_args_string());\n@@ -3521,1 +3521,1 @@\n-  LogStreamHandle(Trace, cds) lsh;\n+  LogStreamHandle(Trace, aot) lsh;\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -915,1 +915,1 @@\n-    if (log_is_enabled(Trace, cds, heap)) {\n+    if (log_is_enabled(Trace, aot, heap)) {\n@@ -918,1 +918,1 @@\n-        log_trace(cds, heap)(\"skipped dormant archived object \" INTPTR_FORMAT \" (%s) referenced by \" INTPTR_FORMAT \" (%s)\",\n+        log_trace(aot, heap)(\"skipped dormant archived object \" INTPTR_FORMAT \" (%s) referenced by \" INTPTR_FORMAT \" (%s)\",\n@@ -922,1 +922,1 @@\n-        log_trace(cds, heap)(\"skipped dormant archived object \" INTPTR_FORMAT \" (%s)\",\n+        log_trace(aot, heap)(\"skipped dormant archived object \" INTPTR_FORMAT \" (%s)\",\n@@ -3200,1 +3200,1 @@\n-    log_debug(cds, heap)(\"Error %s while dumping heap\", error());\n+    log_debug(aot, heap)(\"Error %s while dumping heap\", error());\n@@ -3232,2 +3232,1 @@\n-    char* str = NEW_RESOURCE_ARRAY(char, strlen(error())+1);\n-    strcpy(str, error());\n+    char* str = ResourceArea::strdup(error());\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1184,1 +1184,0 @@\n-        mlKemBarrettReduce(a);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/ML_KEM.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -81,0 +81,1 @@\n+ * - HKDF-SHA256, HKDF-SHA384, and HKDF-SHA512\n@@ -90,1 +91,1 @@\n-    + \"Diffie-Hellman, HMAC, ChaCha20, DHKEM, and ML-KEM)\";\n+    + \"Diffie-Hellman, HMAC, ChaCha20, DHKEM, ML-KEM, and HKDF)\";\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/SunJCE.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -598,1 +598,1 @@\n-        int ascii = JLA.countPositives(bytearr, 0, utflen);\n+        int ascii = JLA.uncheckedCountPositives(bytearr, 0, utflen);\n@@ -602,1 +602,1 @@\n-                str = JLA.newStringNoRepl(bytearr, StandardCharsets.ISO_8859_1);\n+                str = JLA.uncheckedNewStringNoRepl(bytearr, StandardCharsets.ISO_8859_1);\n@@ -624,1 +624,1 @@\n-            JLA.inflateBytesToChars(bytearr, 0, chararr, 0, ascii);\n+            JLA.uncheckedInflateBytesToChars(bytearr, 0, chararr, 0, ascii);\n","filename":"src\/java.base\/share\/classes\/java\/io\/DataInputStream.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3734,1 +3734,1 @@\n-                int ascii = JLA.countPositives(buf, pos, Math.min(avail, (int)utflen));\n+                int ascii = JLA.uncheckedCountPositives(buf, pos, Math.min(avail, (int)utflen));\n@@ -3747,1 +3747,1 @@\n-                    JLA.inflateBytesToChars(buf, pos, cbuf, 0, ascii);\n+                    JLA.uncheckedInflateBytesToChars(buf, pos, cbuf, 0, ascii);\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -927,1 +927,1 @@\n-            DecimalDigits.getCharsLatin1(i, spaceNeeded, value);\n+            DecimalDigits.uncheckedGetCharsLatin1(i, spaceNeeded, value);\n@@ -929,1 +929,1 @@\n-            DecimalDigits.getCharsUTF16(i, spaceNeeded, value);\n+            DecimalDigits.uncheckedGetCharsUTF16(i, spaceNeeded, value);\n@@ -954,1 +954,1 @@\n-            DecimalDigits.getCharsLatin1(l, spaceNeeded, value);\n+            DecimalDigits.uncheckedGetCharsLatin1(l, spaceNeeded, value);\n@@ -956,1 +956,1 @@\n-            DecimalDigits.getCharsUTF16(l, spaceNeeded, value);\n+            DecimalDigits.uncheckedGetCharsUTF16(l, spaceNeeded, value);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * Lazily associate a computed value with (potentially) every type.\n+ * Lazily associate a computed value with any {@code Class} object.\n@@ -43,1 +43,26 @@\n- * @param <T> the type of the derived value\n+ * <p>\n+ * The basic operation of a {@code ClassValue} is {@link #get get}, which\n+ * returns the associated value, initially created by an invocation to {@link\n+ * #computeValue computeValue}; multiple invocations may happen under race, but\n+ * exactly one value is associated to a {@code Class} and returned.\n+ * <p>\n+ * Another operation is {@link #remove remove}: it clears the associated value\n+ * (if it exists), and ensures the next associated value is computed with input\n+ * states up-to-date with the removal.\n+ * <p>\n+ * For a particular association, there is a total order for accesses to the\n+ * associated value.  Accesses are atomic; they include:\n+ * <ul>\n+ * <li>A read-only access by {@code get}<\/li>\n+ * <li>An attempt to associate the return value of a {@code computeValue} by\n+ * {@code get}<\/li>\n+ * <li>Clearing of an association by {@code remove}<\/li>\n+ * <\/ul>\n+ * A {@code get} call always include at least one access; a {@code remove} call\n+ * always has exactly one access; a {@code computeValue} call always happens\n+ * between two accesses.  This establishes the order of {@code computeValue}\n+ * calls with respect to {@code remove} calls and determines whether the\n+ * results of a {@code computeValue} can be successfully associated by a {@code\n+ * get}.\n+ *\n+ * @param <T> the type of the associated value\n@@ -56,1 +81,1 @@\n-     * Computes the given class's derived value for this {@code ClassValue}.\n+     * Computes the value to associate to the given {@code Class}.\n@@ -58,2 +83,2 @@\n-     * This method will be invoked within the first thread that accesses\n-     * the value with the {@link #get get} method.\n+     * This method is invoked when the initial read-only access by {@link #get\n+     * get} finds no associated value.\n@@ -61,3 +86,3 @@\n-     * Normally, this method is invoked at most once per class,\n-     * but it may be invoked again if there has been a call to\n-     * {@link #remove remove}.\n+     * If this method throws an exception, the initiating {@code get} call will\n+     * not attempt to associate a value, and may terminate by returning the\n+     * associated value if it exists, or by propagating that exception otherwise.\n@@ -65,2 +90,12 @@\n-     * If this method throws an exception, the corresponding call to {@code get}\n-     * will terminate abnormally with that exception, and no class value will be recorded.\n+     * Otherwise, the value is computed and returned.  An attempt to associate\n+     * the return value happens, with one of the following outcomes:\n+     * <ul>\n+     * <li>The associated value is present; it is returned and no association\n+     * is done.<\/li>\n+     * <li>The most recent {@link #remove remove} call, if it exists, does not\n+     * happen-before (JLS {@jls 17.4.5}) the finish of the {@code computeValue}\n+     * that computed the value to associate.  A new invocation to {@code\n+     * computeValue}, which that {@code remove} call happens-before, will\n+     * re-establish this happens-before relationship.<\/li>\n+     * <li>Otherwise, this value is successfully associated and returned.<\/li>\n+     * <\/ul>\n@@ -68,2 +103,12 @@\n-     * @param type the type whose class value must be computed\n-     * @return the newly computed value associated with this {@code ClassValue}, for the given class or interface\n+     * @apiNote\n+     * A {@code computeValue} call may, due to class loading or other\n+     * circumstances, recursively call {@code get} or {@code remove} for the\n+     * same {@code type}.  The recursive {@code get}, if the recursion stops,\n+     * successfully finishes and this initiating {@code get} observes the\n+     * associated value from recursion.  The recursive {@code remove} is no-op,\n+     * since being on the same thread, the {@code remove} already happens-before\n+     * the finish of this {@code computeValue}; the result from this {@code\n+     * computeValue} still may be associated.\n+     *\n+     * @param type the {@code Class} to associate a value to\n+     * @return the newly computed value to associate\n@@ -76,9 +121,1 @@\n-     * Returns the value for the given class.\n-     * If no value has yet been computed, it is obtained by\n-     * an invocation of the {@link #computeValue computeValue} method.\n-     * <p>\n-     * The actual installation of the value on the class\n-     * is performed atomically.\n-     * At that point, if several racing threads have\n-     * computed values, one is chosen, and returned to\n-     * all the racing threads.\n+     * {@return the value associated to the given {@code Class}}\n@@ -86,2 +123,4 @@\n-     * The {@code type} parameter is typically a class, but it may be any type,\n-     * such as an interface, a primitive type (like {@code int.class}), or {@code void.class}.\n+     * This method first performs a read-only access, and returns the associated\n+     * value if it exists.  Otherwise, this method tries to associate a value\n+     * from a {@link #computeValue computeValue} invocation until the associated\n+     * value exists, which could be associated by a competing thread.\n@@ -89,5 +128,2 @@\n-     * In the absence of {@code remove} calls, a class value has a simple\n-     * state diagram:  uninitialized and initialized.\n-     * When {@code remove} calls are made,\n-     * the rules for value observation are more complex.\n-     * See the documentation for {@link #remove remove} for more information.\n+     * This method may throw an exception from a {@code computeValue} invocation.\n+     * In this case, no association happens.\n@@ -95,3 +131,2 @@\n-     * @param type the type whose class value must be computed or retrieved\n-     * @return the current value associated with this {@code ClassValue}, for the given class or interface\n-     * @throws NullPointerException if the argument is null\n+     * @param type the {@code Class} to retrieve the associated value for\n+     * @throws NullPointerException if the argument is {@code null}\n@@ -111,1 +146,1 @@\n-            return e.value();\n+            return e.value;\n@@ -121,48 +156,5 @@\n-     * Removes the associated value for the given class.\n-     * If this value is subsequently {@linkplain #get read} for the same class,\n-     * its value will be reinitialized by invoking its {@link #computeValue computeValue} method.\n-     * This may result in an additional invocation of the\n-     * {@code computeValue} method for the given class.\n-     * <p>\n-     * In order to explain the interaction between {@code get} and {@code remove} calls,\n-     * we must model the state transitions of a class value to take into account\n-     * the alternation between uninitialized and initialized states.\n-     * To do this, number these states sequentially from zero, and note that\n-     * uninitialized (or removed) states are numbered with even numbers,\n-     * while initialized (or re-initialized) states have odd numbers.\n-     * <p>\n-     * When a thread {@code T} removes a class value in state {@code 2N},\n-     * nothing happens, since the class value is already uninitialized.\n-     * Otherwise, the state is advanced atomically to {@code 2N+1}.\n-     * <p>\n-     * When a thread {@code T} queries a class value in state {@code 2N},\n-     * the thread first attempts to initialize the class value to state {@code 2N+1}\n-     * by invoking {@code computeValue} and installing the resulting value.\n-     * <p>\n-     * When {@code T} attempts to install the newly computed value,\n-     * if the state is still at {@code 2N}, the class value will be initialized\n-     * with the computed value, advancing it to state {@code 2N+1}.\n-     * <p>\n-     * Otherwise, whether the new state is even or odd,\n-     * {@code T} will discard the newly computed value\n-     * and retry the {@code get} operation.\n-     * <p>\n-     * Discarding and retrying is an important proviso,\n-     * since otherwise {@code T} could potentially install\n-     * a disastrously stale value.  For example:\n-     * <ul>\n-     * <li>{@code T} calls {@code CV.get(C)} and sees state {@code 2N}\n-     * <li>{@code T} quickly computes a time-dependent value {@code V0} and gets ready to install it\n-     * <li>{@code T} is hit by an unlucky paging or scheduling event, and goes to sleep for a long time\n-     * <li>...meanwhile, {@code T2} also calls {@code CV.get(C)} and sees state {@code 2N}\n-     * <li>{@code T2} quickly computes a similar time-dependent value {@code V1} and installs it on {@code CV.get(C)}\n-     * <li>{@code T2} (or a third thread) then calls {@code CV.remove(C)}, undoing {@code T2}'s work\n-     * <li> the previous actions of {@code T2} are repeated several times\n-     * <li> also, the relevant computed values change over time: {@code V1}, {@code V2}, ...\n-     * <li>...meanwhile, {@code T} wakes up and attempts to install {@code V0}; <em>this must fail<\/em>\n-     * <\/ul>\n-     * We can assume in the above scenario that {@code CV.computeValue} uses locks to properly\n-     * observe the time-dependent states as it computes {@code V1}, etc.\n-     * This does not remove the threat of a stale value, since there is a window of time\n-     * between the return of {@code computeValue} in {@code T} and the installation\n-     * of the new value.  No user synchronization is possible during this time.\n+     * Removes the associated value for the given {@code Class} and invalidates\n+     * all out-of-date computations.  If this association is subsequently\n+     * {@linkplain #get accessed}, this removal happens-before (JLS {@jls\n+     * 17.4.5}) the finish of the {@link #computeValue computeValue} call that\n+     * returned the associated value.\n@@ -171,1 +163,1 @@\n-     * @throws NullPointerException if the argument is null\n+     * @throws NullPointerException if the argument is {@code null}\n@@ -175,1 +167,1 @@\n-        map.removeEntry(this);\n+        map.removeAccess(this);\n@@ -181,1 +173,1 @@\n-        map.changeEntry(this, value);\n+        map.forcedAssociateAccess(this, value);\n@@ -193,0 +185,1 @@\n+        \/\/ reads non-null due to StoreStore barrier in critical section in initializeMap\n@@ -210,1 +203,1 @@\n-            return e.value();\n+            return e.value;\n@@ -223,4 +216,10 @@\n-        for (;;) {\n-            Entry<T> e = map.startEntry(this);\n-            if (!e.isPromise())\n-                return e.value();\n+        var accessed = map.readAccess(this);\n+        if (accessed instanceof Entry) {\n+            @SuppressWarnings(\"unchecked\")\n+            var cast = (Entry<T>) accessed;\n+            return cast.value;\n+        }\n+\n+        RemovalToken token = (RemovalToken) accessed; \/\/ nullable\n+        for (; ; ) {\n+            T value;\n@@ -228,6 +227,26 @@\n-                \/\/ Try to make a real entry for the promised version.\n-                e = makeEntry(e.version(), computeValue(type));\n-            } finally {\n-                \/\/ Whether computeValue throws or returns normally,\n-                \/\/ be sure to remove the empty entry.\n-                e = map.finishEntry(this, e);\n+                value = computeValue(type);\n+            } catch (Throwable ex) {\n+                \/\/ no value is associated, but there may be already associated\n+                \/\/ value. Return that if it exists.\n+                accessed = map.readAccess(this);\n+                if (accessed instanceof Entry) {\n+                    @SuppressWarnings(\"unchecked\")\n+                    var cast = (Entry<T>) accessed;\n+                    return cast.value;\n+                }\n+                \/\/ report failure here, but allow other callers to try again\n+                if (ex instanceof RuntimeException rte) {\n+                    throw rte;\n+                } else {\n+                    throw ex instanceof Error err ? err : new Error(ex);\n+                }\n+            }\n+            \/\/ computeValue succeed, proceed to associate\n+            accessed = map.associateAccess(this, token, value);\n+            if (accessed instanceof Entry) {\n+                @SuppressWarnings(\"unchecked\")\n+                var cast = (Entry<T>) accessed;\n+                return cast.value;\n+            } else {\n+                token = (RemovalToken) accessed;\n+                \/\/ repeat\n@@ -235,3 +254,0 @@\n-            if (e != null)\n-                return e.value();\n-            \/\/ else try again, in case a racing thread called remove (so e == null)\n@@ -245,1 +261,1 @@\n-        return (e != null && e.get() == this.version);\n+        return (e != null && e.version() == this.version);\n@@ -303,1 +319,1 @@\n-    Version<T> version() { return version; }\n+\n@@ -305,7 +321,32 @@\n-    static class Version<T> {\n-        private final ClassValue<T> classValue;\n-        private final Entry<T> promise = new Entry<>(this);\n-        Version(ClassValue<T> classValue) { this.classValue = classValue; }\n-        ClassValue<T> classValue() { return classValue; }\n-        Entry<T> promise() { return promise; }\n-        boolean isLive() { return classValue.version() == this; }\n+\n+    record Version<T>(\/* Object identity, *\/ClassValue<T> classValue) {\n+        boolean isLive() {\n+            return classValue.version == this;\n+        }\n+    }\n+\n+    \/**\n+     * Besides a value (represented by an Entry), a \"removal token\" object,\n+     * including the value {@code null}, can be present at a ClassValue-Class\n+     * coordinate.  A removal token indicates whether the value from a\n+     * computation is up-to-date; the value is up-to-date if the token is the\n+     * same before and after computation (no removal during this period), or if\n+     * the token is from the same thread (removed during computeValue).\n+     * {@code null} is the initial state, meaning all computations are valid.\n+     * Later tokens are always non-null, no matter if they replace existing\n+     * entries or outdated tokens.\n+     *\/\n+    private static final class RemovalToken {\n+        \/\/ Use thread ID, which presumably don't duplicate and is cheaper than WeakReference\n+        private final long actorId;\n+\n+        private RemovalToken() {\n+            this.actorId = Thread.currentThread().threadId();\n+        }\n+\n+        \/\/ Arguments are intentionally nullable, to allow initial tokens\n+        private static boolean allowsAssociation(RemovalToken current, RemovalToken start) {\n+            \/\/ No removal token after the initial can be null\n+            assert current != null || start == null : current + \" : \" + start;\n+            return current == start || current.actorId == Thread.currentThread().threadId();\n+        }\n@@ -315,0 +356,3 @@\n+     *  Shared for the map and the cache array.\n+     *  The version is only meaningful for the cache array; whatever in the map\n+     *  is authentic, but state informs the cache an entry may be out-of-date.\n@@ -316,3 +360,2 @@\n-     *  <li> promise if value == Entry.this\n-     *  <li> else dead if version == null\n-     *  <li> else stale if version != classValue.version\n+     *  <li> dead if version == null\n+     *  <li> stale if version != classValue.version\n@@ -320,2 +363,0 @@\n-     *  Promises are never put into the cache; they only live in the\n-     *  backing map while a computeValue call is in flight.\n@@ -325,2 +366,4 @@\n-    static class Entry<T> extends WeakReference<Version<T>> {\n-        final Object value;  \/\/ usually of type T, but sometimes (Entry)this\n+    static final class Entry<T> {\n+        final T value;\n+        final WeakReference<Version<T>> version; \/\/ The version exists only for cache invalidation\n+\n@@ -328,8 +371,2 @@\n-            super(version);\n-            this.value = value;  \/\/ for a regular entry, value is of type T\n-        }\n-        private void assertNotPromise() { assert(!isPromise()); }\n-        \/** For creating a promise. *\/\n-        Entry(Version<T> version) {\n-            super(version);\n-            this.value = this;  \/\/ for a promise, value is not of type T, but Entry!\n+            this.value = value;\n+            this.version = new WeakReference<>(version);\n@@ -337,5 +374,2 @@\n-        \/** Fetch the value.  This entry must not be a promise. *\/\n-        @SuppressWarnings(\"unchecked\")  \/\/ if !isPromise, type is T\n-        T value() { assertNotPromise(); return (T) value; }\n-        boolean isPromise() { return value == this; }\n-        Version<T> version() { return get(); }\n+\n+        Version<T> version() { return version.get(); }\n@@ -349,2 +383,2 @@\n-            if (v.isLive())  return true;\n-            clear();\n+            if (v.isLive()) return true;\n+            version.clear();\n@@ -354,6 +388,1 @@\n-            assertNotPromise();\n-            @SuppressWarnings(\"unchecked\")  \/\/ if !isPromise, type is T\n-            Entry<T> e2 = new Entry<>(v2, (T) value);\n-            clear();\n-            \/\/ value = null -- caller must drop\n-            return e2;\n+            return version.refersTo(v2) ? this : new Entry<>(v2, value);\n@@ -382,5 +411,6 @@\n-                \/\/ Place a Store fence after construction and before publishing to emulate\n-                \/\/ ClassValueMap containing final fields. This ensures it can be\n-                \/\/ published safely in the non-volatile field Class.classValueMap,\n-                \/\/ since stores to the fields of ClassValueMap will not be reordered\n-                \/\/ to occur after the store to the field type.classValueMap\n+                \/\/ getCacheCarefully anticipates entry array to be non-null when\n+                \/\/ a ClassValueMap is published to it.  However, ClassValueMap\n+                \/\/ has no final field, so compiler does not emit a fence, and\n+                \/\/ we must manually issue a Store-Store barrier to prevent\n+                \/\/ the assignment below to be reordered with the store to\n+                \/\/ entry array in the constructor above\n@@ -415,0 +445,1 @@\n+     *  The state may be assigned value or unassigned token.\n@@ -417,1 +448,1 @@\n-    static class ClassValueMap extends WeakHashMap<ClassValue.Identity, Entry<?>> {\n+    static final class ClassValueMap extends WeakHashMap<ClassValue.Identity, Object> {\n@@ -436,28 +467,11 @@\n-        \/** Initiate a query.  Store a promise (placeholder) if there is no value yet. *\/\n-        synchronized\n-        <T> Entry<T> startEntry(ClassValue<T> classValue) {\n-            @SuppressWarnings(\"unchecked\")  \/\/ one map has entries for all value types <T>\n-            Entry<T> e = (Entry<T>) get(classValue.identity);\n-            Version<T> v = classValue.version();\n-            if (e == null) {\n-                e = v.promise();\n-                \/\/ The presence of a promise means that a value is pending for v.\n-                \/\/ Eventually, finishEntry will overwrite the promise.\n-                put(classValue.identity, e);\n-                \/\/ Note that the promise is never entered into the cache!\n-                return e;\n-            } else if (e.isPromise()) {\n-                \/\/ Somebody else has asked the same question.\n-                \/\/ Let the races begin!\n-                if (e.version() != v) {\n-                    e = v.promise();\n-                    put(classValue.identity, e);\n-                }\n-                return e;\n-            } else {\n-                \/\/ there is already a completed entry here; report it\n-                if (e.version() != v) {\n-                    \/\/ There is a stale but valid entry here; make it fresh again.\n-                    \/\/ Once an entry is in the hash table, we don't care what its version is.\n-                    e = e.refreshVersion(v);\n-                    put(classValue.identity, e);\n+        \/\/ A simple read access to this map, for the initial step of get or failure recovery.\n+        \/\/ This may refresh the entry for the cache, but the associated value always stays the same.\n+        synchronized <T> Object readAccess(ClassValue<T> classValue) {\n+            var item = get(classValue.identity);\n+            if (item instanceof Entry) {\n+                @SuppressWarnings(\"unchecked\")\n+                var entry = (Entry<T>) item;\n+                \/\/ cache refresh\n+                var updated = entry.refreshVersion(classValue.version);\n+                if (updated != entry) {\n+                    put(classValue.identity, updated);\n@@ -465,4 +479,0 @@\n-                \/\/ Add to the cache, to enable the fast path, next time.\n-                checkCacheLoad();\n-                addToCache(classValue, e);\n-                return e;\n@@ -470,0 +480,1 @@\n+            return item;\n@@ -472,17 +483,9 @@\n-        \/** Finish a query.  Overwrite a matching placeholder.  Drop stale incoming values. *\/\n-        synchronized\n-        <T> Entry<T> finishEntry(ClassValue<T> classValue, Entry<T> e) {\n-            @SuppressWarnings(\"unchecked\")  \/\/ one map has entries for all value types <T>\n-            Entry<T> e0 = (Entry<T>) get(classValue.identity);\n-            if (e == e0) {\n-                \/\/ We can get here during exception processing, unwinding from computeValue.\n-                assert(e.isPromise());\n-                remove(classValue.identity);\n-                return null;\n-            } else if (e0 != null && e0.isPromise() && e0.version() == e.version()) {\n-                \/\/ If e0 matches the intended entry, there has not been a remove call\n-                \/\/ between the previous startEntry and now.  So now overwrite e0.\n-                Version<T> v = classValue.version();\n-                if (e.version() != v)\n-                    e = e.refreshVersion(v);\n-                put(classValue.identity, e);\n+        \/\/ An association attempt, for when a computeValue returns a value.\n+        synchronized <T> Object associateAccess(ClassValue<T> classValue, RemovalToken startToken, T value) {\n+            var item = readAccess(classValue);\n+            if (item instanceof Entry)\n+                return item; \/\/ value already associated\n+            var currentToken = (RemovalToken) item;\n+            if (RemovalToken.allowsAssociation(currentToken, startToken)) {\n+                var entry = makeEntry(classValue.version, value);\n+                put(classValue.identity, entry);\n@@ -491,5 +494,2 @@\n-                addToCache(classValue, e);\n-                return e;\n-            } else {\n-                \/\/ Some sort of mismatch; caller must try again.\n-                return null;\n+                addToCache(classValue, entry);\n+                return entry;\n@@ -497,0 +497,1 @@\n+            return currentToken;\n@@ -499,17 +500,6 @@\n-        \/** Remove an entry. *\/\n-        synchronized\n-        void removeEntry(ClassValue<?> classValue) {\n-            Entry<?> e = remove(classValue.identity);\n-            \/\/ e == null: Uninitialized, and no pending calls to computeValue.\n-            \/\/ remove(identity) didn't change anything.  No change.\n-            \/\/ e.isPromise(): computeValue already used outdated values.\n-            \/\/ remove(identity) discarded the outdated computation promise.\n-            \/\/ finishEntry will retry when it discovers the promise is removed.\n-            \/\/ No cache invalidation.  No further action needed.\n-            if (e != null && !e.isPromise()) {\n-                \/\/ Initialized.\n-                \/\/ Bump forward to invalidate racy-read cached entries.\n-                classValue.bumpVersion();\n-                \/\/ Make all cache elements for this guy go stale.\n-                removeStaleEntries(classValue);\n-            }\n+        \/\/ A removal, requiring subsequent associations to be up-to-date with it.\n+        synchronized void removeAccess(ClassValue<?> classValue) {\n+            \/\/ Always put in a token to invalidate ongoing computations\n+            put(classValue.identity, new RemovalToken());\n+            classValue.bumpVersion();\n+            removeStaleEntries(classValue);\n@@ -518,15 +508,6 @@\n-        \/** Change the value for an entry. *\/\n-        synchronized\n-        <T> void changeEntry(ClassValue<T> classValue, T value) {\n-            @SuppressWarnings(\"unchecked\")  \/\/ one map has entries for all value types <T>\n-            Entry<T> e0 = (Entry<T>) get(classValue.identity);\n-            Version<T> version = classValue.version();\n-            if (e0 != null) {\n-                if (e0.version() == version && e0.value() == value)\n-                    \/\/ no value change => no version change needed\n-                    return;\n-                classValue.bumpVersion();\n-                removeStaleEntries(classValue);\n-            }\n-            Entry<T> e = makeEntry(version, value);\n-            put(classValue.identity, e);\n+        \/\/ A forced association, requires cache to flush.\n+        synchronized <T> void forcedAssociateAccess(ClassValue<T> classValue, T value) {\n+            classValue.bumpVersion();\n+            removeStaleEntries();\n+            var entry = makeEntry(classValue.version, value);\n+            put(classValue.identity, entry);\n@@ -535,1 +516,1 @@\n-            addToCache(classValue, e);\n+            addToCache(classValue, entry);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassValue.java","additions":208,"deletions":227,"binary":false,"changes":435,"status":"modified"},{"patch":"@@ -445,1 +445,1 @@\n-            DecimalDigits.getCharsLatin1(i, size, buf);\n+            DecimalDigits.uncheckedGetCharsLatin1(i, size, buf);\n@@ -449,1 +449,1 @@\n-            DecimalDigits.getCharsUTF16(i, size, buf);\n+            DecimalDigits.uncheckedGetCharsUTF16(i, size, buf);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -476,1 +476,1 @@\n-            DecimalDigits.getCharsLatin1(i, size, buf);\n+            DecimalDigits.uncheckedGetCharsLatin1(i, size, buf);\n@@ -480,1 +480,1 @@\n-            DecimalDigits.getCharsUTF16(i, size, buf);\n+            DecimalDigits.uncheckedGetCharsUTF16(i, size, buf);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -318,1 +318,1 @@\n-            index = DecimalDigits.getCharsLatin1(value, index, buf);\n+            index = DecimalDigits.uncheckedGetCharsLatin1(value, index, buf);\n@@ -323,1 +323,1 @@\n-            index = DecimalDigits.getCharsUTF16(value, index, buf);\n+            index = DecimalDigits.uncheckedGetCharsUTF16(value, index, buf);\n@@ -344,1 +344,1 @@\n-            index = DecimalDigits.getCharsLatin1(value, index, buf);\n+            index = DecimalDigits.uncheckedGetCharsLatin1(value, index, buf);\n@@ -349,1 +349,1 @@\n-            index = DecimalDigits.getCharsUTF16(value, index, buf);\n+            index = DecimalDigits.uncheckedGetCharsUTF16(value, index, buf);\n@@ -716,1 +716,1 @@\n-            index = DecimalDigits.getCharsLatin1(value, index, buf);\n+            index = DecimalDigits.uncheckedGetCharsLatin1(value, index, buf);\n@@ -720,1 +720,1 @@\n-            index = DecimalDigits.getCharsUTF16(value, index, buf);\n+            index = DecimalDigits.uncheckedGetCharsUTF16(value, index, buf);\n@@ -740,1 +740,1 @@\n-            index = DecimalDigits.getCharsLatin1(value, index, buf);\n+            index = DecimalDigits.uncheckedGetCharsLatin1(value, index, buf);\n@@ -744,1 +744,1 @@\n-            index = DecimalDigits.getCharsUTF16(value, index, buf);\n+            index = DecimalDigits.uncheckedGetCharsUTF16(value, index, buf);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringConcatHelper.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2137,1 +2137,1 @@\n-            public int countPositives(byte[] bytes, int offset, int length) {\n+            public int uncheckedCountPositives(byte[] bytes, int offset, int length) {\n@@ -2143,1 +2143,1 @@\n-            public String newStringNoRepl(byte[] bytes, Charset cs) throws CharacterCodingException  {\n+            public String uncheckedNewStringNoRepl(byte[] bytes, Charset cs) throws CharacterCodingException  {\n@@ -2146,1 +2146,1 @@\n-            public char getUTF16Char(byte[] bytes, int index) {\n+            public char uncheckedGetUTF16Char(byte[] bytes, int index) {\n@@ -2149,1 +2149,1 @@\n-            public void putCharUTF16(byte[] bytes, int index, int ch) {\n+            public void uncheckedPutCharUTF16(byte[] bytes, int index, int ch) {\n@@ -2152,1 +2152,1 @@\n-            public byte[] getBytesNoRepl(String s, Charset cs) throws CharacterCodingException {\n+            public byte[] uncheckedGetBytesNoRepl(String s, Charset cs) throws CharacterCodingException {\n@@ -2164,1 +2164,1 @@\n-            public void inflateBytesToChars(byte[] src, int srcOff, char[] dst, int dstOff, int len) {\n+            public void uncheckedInflateBytesToChars(byte[] src, int srcOff, char[] dst, int dstOff, int len) {\n@@ -2168,1 +2168,1 @@\n-            public int decodeASCII(byte[] src, int srcOff, char[] dst, int dstOff, int len) {\n+            public int uncheckedDecodeASCII(byte[] src, int srcOff, char[] dst, int dstOff, int len) {\n@@ -2172,1 +2172,1 @@\n-            public int encodeASCII(char[] src, int srcOff, byte[] dst, int dstOff, int len) {\n+            public int uncheckedEncodeASCII(char[] src, int srcOff, byte[] dst, int dstOff, int len) {\n@@ -2208,1 +2208,1 @@\n-            public Object stringConcat1(String[] constants) {\n+            public Object uncheckedStringConcat1(String[] constants) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1261,1 +1261,1 @@\n-                Object concat1 = JLA.stringConcat1(constants);\n+                Object concat1 = JLA.uncheckedStringConcat1(constants);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-    public Cleanable register(Object obj, Runnable action) {\n+    public Cleanable register(@jdk.internal.RequiresIdentity Object obj, Runnable action) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Cleaner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-public non-sealed class PhantomReference<T> extends Reference<T> {\n+public non-sealed class PhantomReference<@jdk.internal.RequiresIdentity T> extends Reference<T> {\n@@ -115,1 +115,1 @@\n-    public PhantomReference(T referent, ReferenceQueue<? super T> q) {\n+    public PhantomReference(@jdk.internal.RequiresIdentity T referent, ReferenceQueue<? super T> q) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/PhantomReference.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-public abstract sealed class Reference<T>\n+public abstract sealed class Reference<@jdk.internal.RequiresIdentity T>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-public class ReferenceQueue<T> {\n+public class ReferenceQueue<@jdk.internal.RequiresIdentity T> {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/ReferenceQueue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-public non-sealed class SoftReference<T> extends Reference<T> {\n+public non-sealed class SoftReference<@jdk.internal.RequiresIdentity T> extends Reference<T> {\n@@ -97,1 +97,1 @@\n-    public SoftReference(T referent) {\n+    public SoftReference(@jdk.internal.RequiresIdentity T referent) {\n@@ -112,1 +112,1 @@\n-    public SoftReference(T referent, ReferenceQueue<? super T> q) {\n+    public SoftReference(@jdk.internal.RequiresIdentity T referent, ReferenceQueue<? super T> q) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/SoftReference.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-public non-sealed class WeakReference<T> extends Reference<T> {\n+public non-sealed class WeakReference<@jdk.internal.RequiresIdentity T> extends Reference<T> {\n@@ -69,1 +69,1 @@\n-    public WeakReference(T referent) {\n+    public WeakReference(@jdk.internal.RequiresIdentity T referent) {\n@@ -83,1 +83,1 @@\n-    public WeakReference(T referent, ReferenceQueue<? super T> q) {\n+    public WeakReference(@jdk.internal.RequiresIdentity T referent, ReferenceQueue<? super T> q) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/WeakReference.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import jdk.internal.math.FormattedFPDecimal;\n@@ -1396,5 +1397,12 @@\n-        \/\/ Reminder: a zero double returns '0.0', so we cannot fastpath\n-        \/\/ to use the constant ZERO.  This might be important enough to\n-        \/\/ justify a factory approach, a cache, or a few private\n-        \/\/ constants, later.\n-        return new BigDecimal(Double.toString(val));\n+        if (!Double.isFinite(val)) {\n+            throw new NumberFormatException(\"Infinite or NaN\");\n+        }\n+\n+        var fmt = FormattedFPDecimal.valueForDoubleToString(Math.abs(val));\n+        long s = fmt.getSignificand();\n+        if (val < 0) {\n+            \/\/ Original s is never negative, so no overflow\n+            s = -s;\n+        }\n+\n+        return valueOf(s, -fmt.getExp(), fmt.getPrecision());\n@@ -4141,1 +4149,1 @@\n-            DecimalDigits.getCharsLatin1(highInt, highIntSize, buf);\n+            DecimalDigits.uncheckedGetCharsLatin1(highInt, highIntSize, buf);\n@@ -4143,1 +4151,1 @@\n-            DecimalDigits.putPairLatin1(buf, highIntSize + 1, lowInt);\n+            DecimalDigits.uncheckedPutPairLatin1(buf, highIntSize + 1, lowInt);\n@@ -4145,1 +4153,1 @@\n-                return JLA.newStringNoRepl(buf, StandardCharsets.ISO_8859_1);\n+                return JLA.uncheckedNewStringNoRepl(buf, StandardCharsets.ISO_8859_1);\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -537,1 +537,1 @@\n-                            (statusLine.substring(codePos+1, phrasePos));\n+                            (statusLine, codePos+1, phrasePos, 10);\n","filename":"src\/java.base\/share\/classes\/java\/net\/HttpURLConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,4 +31,4 @@\n- * This class represents a Network Interface address. In short it's an\n- * IP address, a subnet mask and a broadcast address when the address is\n- * an IPv4 one. An IP address and a network prefix length in the case\n- * of IPv6 address.\n+ * This class represents a Network Interface address. In the case of\n+ * IPv4, this comprises the IP address, a subnet mask, and a broadcast\n+ * address if the interface supports broadcast. In the case of IPv6,\n+ * it comprises the IP address and a network prefix length.\n@@ -65,0 +65,3 @@\n+     * <p>\n+     * Certain network interfaces, such as the loopback interface, do not support\n+     * broadcasting and will also return {@code null}.\n","filename":"src\/java.base\/share\/classes\/java\/net\/InterfaceAddress.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -637,2 +637,2 @@\n-     * @see <a href=\"..\/..\/lang\/System.html#file.encoding\">file.encoding<\/a>\n-     * @see <a href=\"..\/..\/lang\/System.html#native.encoding\">native.encoding<\/a>\n+     * @see System##file.encoding file.encoding\n+     * @see System##native.encoding native.encoding\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/Charset.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3046,1 +3046,1 @@\n-        return JLA.newStringNoRepl(ba, cs);\n+        return JLA.uncheckedNewStringNoRepl(ba, cs);\n@@ -3365,1 +3365,1 @@\n-        byte[] bytes = JLA.getBytesNoRepl(String.valueOf(csq), cs);\n+        byte[] bytes = JLA.uncheckedGetBytesNoRepl(String.valueOf(csq), cs);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Files.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2691,0 +2691,1 @@\n+    \/\/ used by java.util.Vector\n@@ -2709,0 +2710,2 @@\n+        transient SynchronizedList<E> reversedView = null;\n+        transient final boolean isReversed;\n@@ -2710,0 +2713,1 @@\n+        \/\/ constructs a forward view, using 'this' as the mutex\n@@ -2713,0 +2717,1 @@\n+            this.isReversed = false;\n@@ -2714,0 +2719,2 @@\n+\n+        \/\/ constructs a forward view, using 'mutex' as the mutex\n@@ -2717,0 +2724,9 @@\n+            this.isReversed = false;\n+        }\n+\n+        \/\/ constructs the reversed view; first arg should be reversed view of backing list\n+        SynchronizedList(List<E> revList, Object mutex, SynchronizedList<E> forward) {\n+            super(revList, mutex);\n+            this.list = revList;\n+            this.reversedView = forward;\n+            this.isReversed = true;\n@@ -2727,1 +2743,0 @@\n-\n@@ -2740,1 +2755,0 @@\n-\n@@ -2747,1 +2761,0 @@\n-\n@@ -2751,1 +2764,0 @@\n-\n@@ -2755,1 +2767,0 @@\n-\n@@ -2759,1 +2770,0 @@\n-\n@@ -2766,2 +2776,0 @@\n-\n-        @Override\n@@ -2771,1 +2779,0 @@\n-        @Override\n@@ -2775,0 +2782,64 @@\n+        public void addFirst(E element) {\n+            synchronized (mutex) {list.addFirst(element);}\n+        }\n+        public void addLast(E element) {\n+            synchronized (mutex) {list.addLast(element);}\n+        }\n+        public E getFirst() {\n+            synchronized (mutex) {return list.getFirst();}\n+        }\n+        public E getLast() {\n+            synchronized (mutex) {return list.getLast();}\n+        }\n+        public E removeFirst() {\n+            synchronized (mutex) {return list.removeFirst();}\n+        }\n+        public E removeLast() {\n+            synchronized (mutex) {return list.removeLast();}\n+        }\n+\n+        \/**\n+         * Reversed view handling. The reversedView field is transient\n+         * and is initialized to null upon construction of the wrapper\n+         * and upon deserialization. Reversed views are not serializable.\n+         * The reversed view is created on first call to the reversed()\n+         * method.\n+         *\n+         * There are four objects at play here:\n+         *\n+         * L = original list\n+         * Lr = reversed view of original list\n+         * S = synchronized forward wrapper: its backing list is L\n+         * Sr = synchronized reversed wrapper: its backing list is Lr\n+         *\n+         * The reversedView field of S points to Sr and vice versa.\n+         * This enables the reversed() method always to return the same\n+         * object, and for S.reversed().reversed() to return S. This isn't\n+         * strictly necessary, because all internal locking is done on S\n+         * (which is passed around as mutex). But in the case where the\n+         * client does external locking, it's good to minimize the number\n+         * of different instances. Note however that external locking on\n+         * the reversed wrapper Sr can't be made to work properly with\n+         * internal or external locking on the forward wrapper S. (Sublists\n+         * of a synchronized wrapper, reversed or not, have the same issue.)\n+         *\n+         * An alternative would be to have a ReversedSynchronizedList view class. However,\n+         * that would require two extra classes (one RandomAccess and one not) and it would\n+         * complicate the serialization story.\n+         *\/\n+        public List<E> reversed() {\n+            synchronized (mutex) {\n+                if (reversedView == null) {\n+                    reversedView = new SynchronizedList<>(list.reversed(), mutex, this);\n+                }\n+                return reversedView;\n+            }\n+        }\n+\n+        @java.io.Serial\n+        private void writeObject(ObjectOutputStream out) throws IOException {\n+            if (isReversed) {\n+                throw new java.io.NotSerializableException();\n+            }\n+            out.defaultWriteObject();\n+        }\n@@ -2811,0 +2882,13 @@\n+        SynchronizedRandomAccessList(List<E> list, Object mutex, SynchronizedList<E> forward) {\n+            super(list, mutex, forward);\n+        }\n+\n+        public List<E> reversed() {\n+            synchronized (mutex) {\n+                if (reversedView == null) {\n+                    reversedView = new SynchronizedRandomAccessList<>(list.reversed(), mutex, this);\n+                }\n+                return reversedView;\n+            }\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/Collections.java","additions":93,"deletions":9,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -465,1 +465,1 @@\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n+            return jla.uncheckedNewStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n@@ -699,1 +699,1 @@\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n+            return jla.uncheckedNewStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n@@ -735,1 +735,1 @@\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n+            return jla.uncheckedNewStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n@@ -763,1 +763,1 @@\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n+            return jla.uncheckedNewStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n@@ -799,1 +799,1 @@\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n+            return jla.uncheckedNewStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n@@ -827,1 +827,1 @@\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n+            return jla.uncheckedNewStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n","filename":"src\/java.base\/share\/classes\/java\/util\/HexFormat.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -484,1 +484,1 @@\n-            return jla.newStringNoRepl(buf, StandardCharsets.ISO_8859_1);\n+            return jla.uncheckedNewStringNoRepl(buf, StandardCharsets.ISO_8859_1);\n","filename":"src\/java.base\/share\/classes\/java\/util\/UUID.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-public class WeakHashMap<K,V>\n+public class WeakHashMap<@jdk.internal.RequiresIdentity K,V>\n@@ -479,1 +479,1 @@\n-    public V put(K key, V value) {\n+    public V put(@jdk.internal.RequiresIdentity K key, V value) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -269,1 +269,1 @@\n-            int asciiLen = JLA.countPositives(a, off, len);\n+            int asciiLen = JLA.uncheckedCountPositives(a, off, len);\n@@ -292,1 +292,1 @@\n-                byte[] encoded = JLA.getBytesNoRepl(str, UTF_8.INSTANCE);\n+                byte[] encoded = JLA.uncheckedGetBytesNoRepl(str, UTF_8.INSTANCE);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.javac.PreviewFeature;\n@@ -101,1 +100,1 @@\n- * @since 24\n+ * @since 25\n@@ -103,1 +102,0 @@\n-@PreviewFeature(feature = PreviewFeature.Feature.KEY_DERIVATION)\n@@ -482,0 +480,19 @@\n+    \/\/ Rethrows the IAPE thrown by an implementation, adding an explanation\n+    \/\/ for the situation in which it fails.\n+    private void rethrow(InvalidAlgorithmParameterException e)\n+            throws InvalidAlgorithmParameterException {\n+        var source = serviceIterator == null\n+                ? \"specified\" : \"previously selected\";\n+        if (!skipDebug && pdebug != null) {\n+            pdebug.println(\"A \" + this.getAlgorithm()\n+                    + \" derivation cannot be performed \"\n+                    + \"using the supplied derivation \"\n+                    + \"inputs with the \" + source + \" \"\n+                    + theOne.provider().getName()\n+                    + \" provider.\");\n+        }\n+        throw new InvalidAlgorithmParameterException(\n+                \"The \" + source + \" \" + theOne.provider.getName()\n+                + \" provider does not support this input\", e);\n+    }\n+\n@@ -526,1 +543,6 @@\n-            return theOne.spi().engineDeriveKey(alg, derivationSpec);\n+            try {\n+                return theOne.spi().engineDeriveKey(alg, derivationSpec);\n+            } catch (InvalidAlgorithmParameterException e) {\n+                rethrow(e);\n+                return null; \/\/ will not be called\n+            }\n@@ -557,1 +579,6 @@\n-            return theOne.spi().engineDeriveData(derivationSpec);\n+            try {\n+                return theOne.spi().engineDeriveData(derivationSpec);\n+            } catch (InvalidAlgorithmParameterException e) {\n+                rethrow(e);\n+                return null; \/\/ will not be called\n+            }\n@@ -616,0 +643,5 @@\n+                        if (!skipDebug && pdebug != null) {\n+                            pdebug.println(\"The provider \"\n+                                    + currOne.provider().getName()\n+                                    + \" is selected\");\n+                        }\n@@ -652,1 +684,2 @@\n-                throw new InvalidAlgorithmParameterException(lastException);\n+                throw new InvalidAlgorithmParameterException(\n+                        \"No provider supports this input\", lastException);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":39,"deletions":6,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-import jdk.internal.javac.PreviewFeature;\n-\n@@ -47,1 +45,1 @@\n- * @since 24\n+ * @since 25\n@@ -49,1 +47,0 @@\n-@PreviewFeature(feature = PreviewFeature.Feature.KEY_DERIVATION)\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDFParameters.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import jdk.internal.javac.PreviewFeature;\n-\n@@ -72,1 +70,1 @@\n- * @since 24\n+ * @since 25\n@@ -74,1 +72,0 @@\n-@PreviewFeature(feature = PreviewFeature.Feature.KEY_DERIVATION)\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDFSpi.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import jdk.internal.javac.PreviewFeature;\n-\n@@ -78,1 +76,1 @@\n- * @since 24\n+ * @since 25\n@@ -80,1 +78,0 @@\n-@PreviewFeature(feature = PreviewFeature.Feature.KEY_DERIVATION)\n@@ -95,1 +92,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.KEY_DERIVATION)\n@@ -299,1 +295,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.KEY_DERIVATION)\n@@ -353,1 +348,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.KEY_DERIVATION)\n@@ -422,1 +416,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.KEY_DERIVATION)\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/HKDFParameterSpec.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import static java.lang.annotation.ElementType.PARAMETER;\n+import static java.lang.annotation.ElementType.TYPE_PARAMETER;\n+\n+\/**\n+ * Indicates that the annotated parameter or type parameter is not expected to be a\n+ * Value Based class.\n+ * Using a parameter or type parameter of a <a href=\"..\/lang\/doc-files\/ValueBased.html\">value-based classes<\/a>\n+ * should produce warnings about behavior that is inconsistent with identity based semantics.\n+ *\n+ * Note this internal annotation is handled specially by the javac compiler.\n+ * To work properly with {@code --release older-release}, it requires special\n+ * handling in {@code make\/langtools\/src\/classes\/build\/tools\/symbolgenerator\/CreateSymbols.java}\n+ * and {@code src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java}.\n+ *\n+ * @since 25\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(value={PARAMETER, TYPE_PARAMETER})\n+public @interface RequiresIdentity {\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/RequiresIdentity.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -49,1 +49,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/ValueBased.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -306,0 +306,2 @@\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks.<\/b>\n@@ -307,1 +309,1 @@\n-    int countPositives(byte[] ba, int off, int len);\n+    int uncheckedCountPositives(byte[] ba, int off, int len);\n@@ -315,5 +317,6 @@\n-     * Constructs a new {@code String} by decoding the specified subarray of\n-     * bytes using the specified {@linkplain java.nio.charset.Charset charset}.\n-     *\n-     * The caller of this method shall relinquish and transfer the ownership of\n-     * the byte array to the callee since the later will not make a copy.\n+     * Constructs a new {@code String} by decoding the specified byte array\n+     * using the specified {@linkplain java.nio.charset.Charset charset}.\n+     * <p>\n+     * <b>WARNING: The caller of this method shall relinquish and transfer the\n+     * ownership of the byte array to the callee<\/b>, since the latter will not\n+     * make a copy.\n@@ -326,1 +329,1 @@\n-    String newStringNoRepl(byte[] bytes, Charset cs) throws CharacterCodingException;\n+    String uncheckedNewStringNoRepl(byte[] bytes, Charset cs) throws CharacterCodingException;\n@@ -329,7 +332,9 @@\n-     * Encode the given string into a sequence of bytes using the specified Charset.\n-     *\n-     * This method avoids copying the String's internal representation if the input\n-     * is ASCII.\n-     *\n-     * This method throws CharacterCodingException instead of replacing when\n-     * malformed input or unmappable characters are encountered.\n+     * Encode the given string into a sequence of bytes using the specified\n+     * {@linkplain java.nio.charset.Charset charset}.\n+     * <p>\n+     * <b>WARNING: This method returns the {@code byte[]} backing the provided\n+     * {@code String}, if the input is ASCII. Hence, the returned byte array\n+     * must not be modified.<\/b>\n+     * <p>\n+     * This method throws {@code CharacterCodingException} instead of replacing\n+     * when malformed input or unmappable characters are encountered.\n@@ -342,1 +347,1 @@\n-    byte[] getBytesNoRepl(String s, Charset cs) throws CharacterCodingException;\n+    byte[] uncheckedGetBytesNoRepl(String s, Charset cs) throws CharacterCodingException;\n@@ -345,1 +350,1 @@\n-     * Returns a new string by decoding from the given utf8 bytes array.\n+     * Returns a new string by decoding from the given UTF-8 bytes array.\n@@ -355,2 +360,4 @@\n-     * Get the char at index in a byte[] in internal UTF-16 representation,\n-     * with no bounds checks.\n+     * Get the {@code char} at {@code index} in a {@code byte[]} in internal\n+     * UTF-16 representation.\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks.<\/b>\n@@ -362,1 +369,1 @@\n-    char getUTF16Char(byte[] bytes, int index);\n+    char uncheckedGetUTF16Char(byte[] bytes, int index);\n@@ -365,2 +372,4 @@\n-     * Put the char at index in a byte[] in internal UTF-16 representation,\n-     * with no bounds checks.\n+     * Put the {@code ch} at {@code index} in a {@code byte[]} in internal\n+     * UTF-16 representation.\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks.<\/b>\n@@ -371,1 +380,1 @@\n-    void putCharUTF16(byte[] bytes, int index, int ch);\n+    void uncheckedPutCharUTF16(byte[] bytes, int index, int ch);\n@@ -383,1 +392,4 @@\n-     * Inflated copy from byte[] to char[], as defined by StringLatin1.inflate\n+     * Inflated copy from {@code byte[]} to {@code char[]}, as defined by\n+     * {@code StringLatin1.inflate}.\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks.<\/b>\n@@ -385,1 +397,1 @@\n-    void inflateBytesToChars(byte[] src, int srcOff, char[] dst, int dstOff, int len);\n+    void uncheckedInflateBytesToChars(byte[] src, int srcOff, char[] dst, int dstOff, int len);\n@@ -390,0 +402,2 @@\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks.<\/b>\n@@ -393,1 +407,1 @@\n-    int decodeASCII(byte[] src, int srcOff, char[] dst, int dstOff, int len);\n+    int uncheckedDecodeASCII(byte[] src, int srcOff, char[] dst, int dstOff, int len);\n@@ -407,1 +421,1 @@\n-     * Encodes ASCII codepoints as possible from the source array into\n+     * Encodes as many ASCII codepoints as possible from the source array into\n@@ -409,1 +423,3 @@\n-     * compatible\n+     * compatible.\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks.<\/b>\n@@ -413,1 +429,1 @@\n-    int encodeASCII(char[] src, int srcOff, byte[] dst, int dstOff, int len);\n+    int uncheckedEncodeASCII(char[] src, int srcOff, byte[] dst, int dstOff, int len);\n@@ -446,1 +462,8 @@\n-    Object stringConcat1(String[] constants);\n+    \/**\n+     * Creates helper for string concatenation.\n+     * <p>\n+     * <b>WARNING: The caller of this method shall relinquish and transfer the\n+     * ownership of the string array to the callee<\/b>, since the latter will not\n+     * make a copy.\n+     *\/\n+    Object uncheckedStringConcat1(String[] constants);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":52,"deletions":29,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-            int singleBytes = JLA.countPositives(rawBytes, offset, rawLen);\n+            int singleBytes = JLA.uncheckedCountPositives(rawBytes, offset, rawLen);\n@@ -236,1 +236,1 @@\n-            JLA.inflateBytesToChars(rawBytes, offset, chararr, 0, singleBytes);\n+            JLA.uncheckedInflateBytesToChars(rawBytes, offset, chararr, 0, singleBytes);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/CaptureStateUtil.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    private static final int NATIVE_THRESHOLD_FILL = powerOfPropertyOr(\"fill\", Architecture.isAARCH64() ? 18 : 5);\n+    private static final int NATIVE_THRESHOLD_FILL = powerOfPropertyOr(\"fill\", 5);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SegmentBulkOperations.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,2 +81,1 @@\n-        @JEP(number=478, title=\"Key Derivation Function API\", status=\"Preview\")\n-        KEY_DERIVATION,\n+        KEY_DERIVATION, \/\/remove when the boot JDK is JDK 25\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/javac\/PreviewFeature.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,2 +60,1 @@\n-        FormattedFPDecimal fd = new FormattedFPDecimal();\n-        DoubleToDecimal.split(v, fd);\n+        FormattedFPDecimal fd = split(v);\n@@ -72,0 +71,68 @@\n+    private static FormattedFPDecimal split(double v) {\n+        FormattedFPDecimal fd = new FormattedFPDecimal();\n+        DoubleToDecimal.split(v, fd);\n+        return fd;\n+    }\n+\n+    \/**\n+     * Returns a FormattedFPDecimal with the appropriate precision for\n+     * {@link Double#toString(double)}.\n+     *\n+     * @see java.math.BigDecimal#valueOf(double)\n+     *\/\n+    public static FormattedFPDecimal valueForDoubleToString(double v) {\n+        final FormattedFPDecimal fd = split(v);\n+        final int expR = fd.getExponentRounded();\n+\n+        \/\/ Adjust precision, following rules for Double.toString. There is\n+        \/\/ always at least one digit and some cases require an extra one to\n+        \/\/ force a digit after the decimal. No additional rounding is performed;\n+        \/\/ no significant trailing digits are removed.\n+\n+        final int targetPrec =\n+                \/\/ No extra trailing digit needed\n+                (-3 <= expR && expR < 0) ? 1\n+\n+                \/\/ Keep digits to left of decimal, plus leave a trailing zero\n+                : (0 <= expR && expR < 7) ? expR + 2 :\n+\n+                \/\/ Otherwise, require at least 2 digits, to include trailing\n+                \/\/ digit when there is a single digit\n+                2;\n+\n+\n+        long s = fd.f;\n+        int prec = fd.n;\n+\n+        if (prec < targetPrec) {\n+            \/\/ Add zeros needed to reach target precision\n+            final int addZeros = targetPrec - prec;\n+            s *= MathUtils.pow10(addZeros); \/\/ addZeros will be at most 8\n+            prec = targetPrec;\n+        } else {\n+            \/\/ Remove trailing zeros to try to reach target precision\n+            while (prec > targetPrec && s % 10 == 0) {\n+                s = s \/ 10;\n+                prec--;\n+            }\n+        }\n+\n+        \/\/ Calculate new e based on updated precision\n+        final int eNew = expR - prec + 1;  \/\/ expR is defined as prec + e - 1\n+        fd.set(s, eNew, prec);\n+\n+        return fd;\n+    }\n+\n+    public long getSignificand() {\n+        return f;\n+    }\n+\n+    public int getPrecision() {\n+        return n;\n+    }\n+\n+    public int getExp() {\n+        return e;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FormattedFPDecimal.java","additions":70,"deletions":3,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-            JLA.putCharUTF16(str, index, (char) c);\n+            JLA.uncheckedPutCharUTF16(str, index, (char) c);\n@@ -96,1 +96,1 @@\n-            JLA.putCharUTF16(str, index + i, '0' + (t >>> 28));\n+            JLA.uncheckedPutCharUTF16(str, index + i, '0' + (t >>> 28));\n@@ -125,1 +125,1 @@\n-            while (JLA.getUTF16Char(str, index - 1) == '0') {\n+            while (JLA.uncheckedGetUTF16Char(str, index - 1) == '0') {\n@@ -129,1 +129,1 @@\n-            if (JLA.getUTF16Char(str, index - 1) == '.') {\n+            if (JLA.uncheckedGetUTF16Char(str, index - 1) == '.') {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/ToDecimal.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -34,3 +34,1 @@\n-import java.net.URL;\n-import java.net.URLClassLoader;\n-import java.nio.file.InvalidPathException;\n+import java.nio.file.Files;\n@@ -40,0 +38,1 @@\n+import java.util.HashMap;\n@@ -43,0 +42,1 @@\n+import java.util.jar.JarFile;\n@@ -402,4 +402,4 @@\n-    private static class UnregisteredClassLoader extends URLClassLoader {\n-        private String currentClassName;\n-        private Class<?> currentSuperClass;\n-        private Class<?>[] currentInterfaces;\n+    private static class UnregisteredClassLoader extends ClassLoader {\n+        static {\n+            registerAsParallelCapable();\n+        }\n@@ -407,12 +407,2 @@\n-        \/**\n-         * Used only by native code. Construct an UnregisteredClassLoader for loading\n-         * unregistered classes from the specified file. If the file doesn't exist,\n-         * the exception will be caughted by native code which will print a warning message and continue.\n-         *\n-         * @param fileName path of the the JAR file to load unregistered classes from.\n-         *\/\n-        private UnregisteredClassLoader(String fileName) throws InvalidPathException, IOException {\n-            super(toURLArray(fileName), \/*parent*\/null);\n-            currentClassName = null;\n-            currentSuperClass = null;\n-            currentInterfaces = null;\n+        static interface Source {\n+            public byte[] readClassFile(String className) throws IOException;\n@@ -421,3 +411,17 @@\n-        private static URL[] toURLArray(String fileName) throws InvalidPathException, IOException {\n-            if (!((new File(fileName)).exists())) {\n-                throw new IOException(\"No such file: \" + fileName);\n+        static class JarSource implements Source {\n+            private final JarFile jar;\n+\n+            JarSource(File file) throws IOException {\n+                jar = new JarFile(file);\n+            }\n+\n+            @Override\n+            public byte[] readClassFile(String className) throws IOException {\n+                final var entryName = className.replace('.', '\/').concat(\".class\");\n+                final var entry = jar.getEntry(entryName);\n+                if (entry == null) {\n+                    throw new IOException(\"No such entry: \" + entryName + \" in \" + jar.getName());\n+                }\n+                try (final var in = jar.getInputStream(entry)) {\n+                    return in.readAllBytes();\n+                }\n@@ -425,6 +429,0 @@\n-            return new URL[] {\n-                \/\/ Use an intermediate File object to construct a URI\/URL without\n-                \/\/ authority component as URLClassPath can't handle URLs with a UNC\n-                \/\/ server name in the authority component.\n-                Path.of(fileName).toRealPath().toFile().toURI().toURL()\n-            };\n@@ -433,0 +431,2 @@\n+        static class DirSource implements Source {\n+            private final String basePath;\n@@ -434,30 +434,10 @@\n-        \/**\n-         * Load the class of the given <code>\/name<code> from the JAR file that was given to\n-         * the constructor of the current UnregisteredClassLoader instance. This class must be\n-         * a direct subclass of <code>superClass<\/code>. This class must be declared to implement\n-         * the specified <code>interfaces<\/code>.\n-         * <p>\n-         * This method must be called in a single threaded context. It will never be recursed (thus\n-         * the asserts)\n-         *\n-         * @param name the name of the class to be loaded.\n-         * @param superClass must not be null. The named class must have a super class.\n-         * @param interfaces could be null if the named class does not implement any interfaces.\n-         *\/\n-        private Class<?> load(String name, Class<?> superClass, Class<?>[] interfaces)\n-            throws ClassNotFoundException\n-        {\n-            assert currentClassName == null;\n-            assert currentSuperClass == null;\n-            assert currentInterfaces == null;\n-\n-            try {\n-                currentClassName = name;\n-                currentSuperClass = superClass;\n-                currentInterfaces = interfaces;\n-\n-                return findClass(name);\n-            } finally {\n-                currentClassName = null;\n-                currentSuperClass = null;\n-                currentInterfaces = null;\n+            DirSource(File dir) {\n+                assert dir.isDirectory();\n+                basePath = dir.toString();\n+            }\n+\n+            @Override\n+            public byte[] readClassFile(String className) throws IOException {\n+                final var subPath = className.replace('.', File.separatorChar).concat(\".class\");\n+                final var fullPath = Path.of(basePath, subPath);\n+                return Files.readAllBytes(fullPath);\n@@ -467,21 +447,6 @@\n-        \/**\n-         * This method must be called from inside the <code>load()<\/code> method. The <code>\/name<code>\n-         * can be only:\n-         * <ul>\n-         * <li> the <code>name<\/code> parameter for <code>load()<\/code>\n-         * <li> the name of the <code>superClass<\/code> parameter for <code>load()<\/code>\n-         * <li> the name of one of the interfaces in <code>interfaces<\/code> parameter for <code>load()<\/code>\n-         * <ul>\n-         *\n-         * For all other cases, a <code>ClassNotFoundException<\/code> will be thrown.\n-         *\/\n-        protected Class<?> findClass(final String name)\n-            throws ClassNotFoundException\n-        {\n-            Objects.requireNonNull(currentClassName);\n-            Objects.requireNonNull(currentSuperClass);\n-\n-            if (name.equals(currentClassName)) {\n-                \/\/ Note: the following call will call back to <code>this.findClass(name)<\/code> to\n-                \/\/ resolve the super types of the named class.\n-                return super.findClass(name);\n+        private final HashMap<String, Source> sources = new HashMap<>();\n+\n+        private Source resolveSource(String path) throws IOException {\n+            Source source = sources.get(path);\n+            if (source != null) {\n+                return source;\n@@ -489,2 +454,4 @@\n-            if (name.equals(currentSuperClass.getName())) {\n-                return currentSuperClass;\n+\n+            final var file = new File(path);\n+            if (!file.exists()) {\n+                throw new IOException(\"No such file: \" + path);\n@@ -492,6 +459,6 @@\n-            if (currentInterfaces != null) {\n-                for (Class<?> c : currentInterfaces) {\n-                    if (name.equals(c.getName())) {\n-                        return c;\n-                    }\n-                }\n+            if (file.isFile()) {\n+                source = new JarSource(file);\n+            } else if (file.isDirectory()) {\n+                source = new DirSource(file);\n+            } else {\n+                throw new IOException(\"Not a normal file: \" + path);\n@@ -499,0 +466,1 @@\n+            sources.put(path, source);\n@@ -500,1 +468,39 @@\n-            throw new ClassNotFoundException(name);\n+            return source;\n+        }\n+\n+        \/**\n+         * Load the class of the given <code>name<\/code> from the given <code>source<\/code>.\n+         * <p>\n+         * All super classes and interfaces of the named class must have already been loaded:\n+         * either defined by this class loader (unregistered ones) or loaded, possibly indirectly,\n+         * by the system class loader (registered ones).\n+         * <p>\n+         * If the named class has a registered super class or interface named N there should be no\n+         * unregistered class or interface named N loaded yet.\n+         *\n+         * @param name the name of the class to be loaded.\n+         * @param source path to a directory or a JAR file from which the named class should be\n+         *               loaded.\n+         *\/\n+        private Class<?> load(String name, String source) throws IOException {\n+            final Source resolvedSource = resolveSource(source);\n+            final byte[] bytes = resolvedSource.readClassFile(name);\n+            \/\/ 'defineClass()' may cause loading of supertypes of this unregistered class by VM\n+            \/\/ calling 'this.loadClass()'.\n+            \/\/\n+            \/\/ For any supertype S named SN specified in the classlist the following is ensured by\n+            \/\/ the CDS implementation:\n+            \/\/ - if S is an unregistered class it must have already been defined by this class\n+            \/\/   loader and thus will be found by 'this.findLoadedClass(SN)',\n+            \/\/ - if S is not an unregistered class there should be no unregistered class named SN\n+            \/\/   loaded yet so either S has previously been (indirectly) loaded by this class loader\n+            \/\/   and thus it will be found when calling 'this.findLoadedClass(SN)' or it will be\n+            \/\/   found when delegating to the system class loader, which must have already loaded S,\n+            \/\/   by calling 'this.getParent().loadClass(SN, false)'.\n+            \/\/ See the implementation of 'ClassLoader.loadClass()' for details.\n+            \/\/\n+            \/\/ Therefore, we should resolve all supertypes to the expected ones as specified by the\n+            \/\/ \"super:\" and \"interfaces:\" attributes in the classlist. This invariant is validated\n+            \/\/ by the C++ function 'ClassListParser::load_class_from_source()'.\n+            assert getParent() == getSystemClassLoader();\n+            return defineClass(name, bytes, 0, bytes.length);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/CDS.java","additions":94,"deletions":88,"binary":false,"changes":182,"status":"modified"},{"patch":"@@ -54,1 +54,0 @@\n-     * <li>not be abstract<\/li>\n@@ -92,1 +91,1 @@\n-        if (mainMethod == null) {\n+        if (mainMethod == null || !isValidMainMethod(mainMethod)) {\n@@ -96,1 +95,1 @@\n-        if (mainMethod == null) {\n+        if (mainMethod == null || !isValidMainMethod(mainMethod)) {\n@@ -100,1 +99,2 @@\n-        int mods = mainMethod.getModifiers();\n+        return mainMethod;\n+    }\n@@ -102,5 +102,3 @@\n-        if (Modifier.isAbstract(mods) ||\n-                mainMethod.getReturnType() != void.class ||\n-                Modifier.isPrivate(mods)) {\n-            return null;\n-        }\n+    private static boolean isValidMainMethod(Method mainMethodCandidate) {\n+        return mainMethodCandidate.getReturnType() == void.class &&\n+               !Modifier.isPrivate(mainMethodCandidate.getModifiers());\n@@ -108,1 +106,0 @@\n-        return mainMethod;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/MethodFinder.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -144,2 +144,1 @@\n-               getProperty(\"jdk.module.limitmods\") == null &&     \/\/ --limit-modules\n-               getProperty(\"jdk.module.addreads.0\") == null;      \/\/ --add-reads\n+               getProperty(\"jdk.module.limitmods\") == null;       \/\/ --limit-modules\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModuleBootstrap.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-            case 1 -> 31 * initialValue + JLA.getUTF16Char(a, fromIndex);\n+            case 1 -> 31 * initialValue + JLA.uncheckedGetUTF16Char(a, fromIndex);\n@@ -423,1 +423,1 @@\n-            result = 31 * result + JLA.getUTF16Char(value, i);\n+            result = 31 * result + JLA.uncheckedGetUTF16Char(value, i);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ArraysSupport.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -146,0 +146,2 @@\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks. <\/b>\n@@ -152,2 +154,1 @@\n-    public static int getCharsLatin1(int i, int index, byte[] buf) {\n-        \/\/ Used by trusted callers.  Assumes all necessary bounds checks have been done by the caller.\n+    public static int uncheckedGetCharsLatin1(int i, int index, byte[] buf) {\n@@ -166,1 +167,1 @@\n-            putPairLatin1(buf, charPos, (q * 100) - i);\n+            uncheckedPutPairLatin1(buf, charPos, (q * 100) - i);\n@@ -173,1 +174,1 @@\n-            putPairLatin1(buf, charPos, -i);\n+            uncheckedPutPairLatin1(buf, charPos, -i);\n@@ -175,1 +176,1 @@\n-            putCharLatin1(buf, --charPos, '0' - i);\n+            uncheckedPutCharLatin1(buf, --charPos, '0' - i);\n@@ -179,1 +180,1 @@\n-            putCharLatin1(buf, --charPos, '-');\n+            uncheckedPutCharLatin1(buf, --charPos, '-');\n@@ -196,0 +197,2 @@\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks. <\/b>\n@@ -202,2 +205,1 @@\n-    public static int getCharsLatin1(long i, int index, byte[] buf) {\n-        \/\/ Used by trusted callers.  Assumes all necessary bounds checks have been done by the caller.\n+    public static int uncheckedGetCharsLatin1(long i, int index, byte[] buf) {\n@@ -216,1 +218,1 @@\n-            putPairLatin1(buf, charPos, (int)((q * 100) - i));\n+            uncheckedPutPairLatin1(buf, charPos, (int)((q * 100) - i));\n@@ -226,1 +228,1 @@\n-            putPairLatin1(buf, charPos, (q2 * 100) - i2);\n+            uncheckedPutPairLatin1(buf, charPos, (q2 * 100) - i2);\n@@ -233,1 +235,1 @@\n-            putPairLatin1(buf, charPos, -i2);\n+            uncheckedPutPairLatin1(buf, charPos, -i2);\n@@ -235,1 +237,1 @@\n-            putCharLatin1(buf, --charPos, '0' - i2);\n+            uncheckedPutCharLatin1(buf, --charPos, '0' - i2);\n@@ -239,1 +241,1 @@\n-            putCharLatin1(buf, --charPos, '-');\n+            uncheckedPutCharLatin1(buf, --charPos, '-');\n@@ -246,1 +248,1 @@\n-     * This is a variant of {@link DecimalDigits#getCharsLatin1(int, int, byte[])}, but for\n+     * This is a variant of {@link DecimalDigits#uncheckedGetCharsLatin1(int, int, byte[])}, but for\n@@ -248,0 +250,2 @@\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks.<\/b>\n@@ -254,2 +258,1 @@\n-    public static int getCharsUTF16(int i, int index, byte[] buf) {\n-        \/\/ Used by trusted callers.  Assumes all necessary bounds checks have been done by the caller.\n+    public static int uncheckedGetCharsUTF16(int i, int index, byte[] buf) {\n@@ -268,1 +271,1 @@\n-            putPairUTF16(buf, charPos, (q * 100) - i);\n+            uncheckedPutPairUTF16(buf, charPos, (q * 100) - i);\n@@ -275,1 +278,1 @@\n-            putPairUTF16(buf, charPos, -i);\n+            uncheckedPutPairUTF16(buf, charPos, -i);\n@@ -277,1 +280,1 @@\n-            putCharUTF16(buf, --charPos, '0' - i);\n+            uncheckedPutCharUTF16(buf, --charPos, '0' - i);\n@@ -281,1 +284,1 @@\n-            putCharUTF16(buf, --charPos, '-');\n+            uncheckedPutCharUTF16(buf, --charPos, '-');\n@@ -288,1 +291,1 @@\n-     * This is a variant of {@link DecimalDigits#getCharsLatin1(long, int, byte[])}, but for\n+     * This is a variant of {@link DecimalDigits#uncheckedGetCharsLatin1(long, int, byte[])}, but for\n@@ -290,0 +293,2 @@\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks.<\/b>\n@@ -296,2 +301,1 @@\n-    public static int getCharsUTF16(long i, int index, byte[] buf) {\n-        \/\/ Used by trusted callers.  Assumes all necessary bounds checks have been done by the caller.\n+    public static int uncheckedGetCharsUTF16(long i, int index, byte[] buf) {\n@@ -310,1 +314,1 @@\n-            putPairUTF16(buf, charPos, (int)((q * 100) - i));\n+            uncheckedPutPairUTF16(buf, charPos, (int)((q * 100) - i));\n@@ -320,1 +324,1 @@\n-            putPairUTF16(buf, charPos, (q2 * 100) - i2);\n+            uncheckedPutPairUTF16(buf, charPos, (q2 * 100) - i2);\n@@ -327,1 +331,1 @@\n-            putPairUTF16(buf, charPos, -i2);\n+            uncheckedPutPairUTF16(buf, charPos, -i2);\n@@ -329,1 +333,1 @@\n-            putCharUTF16(buf, --charPos, '0' - i2);\n+            uncheckedPutCharUTF16(buf, --charPos, '0' - i2);\n@@ -333,1 +337,1 @@\n-            putCharUTF16(buf, --charPos, '-');\n+            uncheckedPutCharUTF16(buf, --charPos, '-');\n@@ -339,1 +343,1 @@\n-     * This is a variant of {@link DecimalDigits#getCharsUTF16(long, int, byte[])}, but for\n+     * This is a variant of {@link DecimalDigits#uncheckedGetCharsUTF16(long, int, byte[])}, but for\n@@ -348,1 +352,0 @@\n-        \/\/ Used by trusted callers.  Assumes all necessary bounds checks have been done by the caller.\n@@ -405,0 +408,3 @@\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks.<\/b>\n+     *\n@@ -409,1 +415,1 @@\n-    public static void putPairLatin1(byte[] buf, int charPos, int v) {\n+    public static void uncheckedPutPairLatin1(byte[] buf, int charPos, int v) {\n@@ -411,2 +417,2 @@\n-        putCharLatin1(buf, charPos, packed & 0xFF);\n-        putCharLatin1(buf, charPos + 1, packed >> 8);\n+        uncheckedPutCharLatin1(buf, charPos, packed & 0xFF);\n+        uncheckedPutCharLatin1(buf, charPos + 1, packed >> 8);\n@@ -418,0 +424,3 @@\n+     * <p>\n+     * <b>WARNING: This method does not perform any bound checks.<\/b>\n+     *\n@@ -422,1 +431,1 @@\n-    public static void putPairUTF16(byte[] buf, int charPos, int v) {\n+    public static void uncheckedPutPairUTF16(byte[] buf, int charPos, int v) {\n@@ -424,2 +433,2 @@\n-        putCharUTF16(buf, charPos, packed & 0xFF);\n-        putCharUTF16(buf, charPos + 1, packed >> 8);\n+        uncheckedPutCharUTF16(buf, charPos, packed & 0xFF);\n+        uncheckedPutCharUTF16(buf, charPos + 1, packed >> 8);\n@@ -428,1 +437,2 @@\n-    private static void putCharLatin1(byte[] buf, int charPos, int c) {\n+    private static void uncheckedPutCharLatin1(byte[] buf, int charPos, int c) {\n+        assert charPos >= 0 && charPos < buf.length;\n@@ -432,1 +442,2 @@\n-    private static void putCharUTF16(byte[] buf, int charPos, int c) {\n+    private static void uncheckedPutCharUTF16(byte[] buf, int charPos, int c) {\n+        assert charPos >= 0 && charPos < (buf.length >> 1);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/DecimalDigits.java","additions":49,"deletions":38,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,2 +171,2 @@\n-            JLA.putCharUTF16(buffer, --index, pair >> 8);\n-            JLA.putCharUTF16(buffer, --index, pair & 0xFF);\n+            JLA.uncheckedPutCharUTF16(buffer, --index, pair >> 8);\n+            JLA.uncheckedPutCharUTF16(buffer, --index, pair & 0xFF);\n@@ -177,1 +177,1 @@\n-        JLA.putCharUTF16(buffer, --index, (byte) (digits >> 8));\n+        JLA.uncheckedPutCharUTF16(buffer, --index, (byte) (digits >> 8));\n@@ -180,1 +180,1 @@\n-            JLA.putCharUTF16(buffer, --index, (byte) (digits & 0xFF));\n+            JLA.uncheckedPutCharUTF16(buffer, --index, (byte) (digits & 0xFF));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/HexDigits.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -158,1 +158,0 @@\n-        jdk.crypto.cryptoki, \/\/ participates in preview features\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -951,0 +951,3 @@\n+            if (Modifier.isAbstract(mainClass.getModifiers())) {\n+                abort(null, \"java.launcher.cls.error8\", className);\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/LauncherHelper.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -282,0 +282,3 @@\n+java.launcher.cls.error8=\\\n+    Error: abstract class {0} can not be instantiated\\n\\\n+    please use a concrete class\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher.properties","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -199,1 +199,1 @@\n-            int n = JLA.decodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n+            int n = JLA.uncheckedDecodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n@@ -449,1 +449,1 @@\n-            int n = JLA.encodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n+            int n = JLA.uncheckedEncodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n@@ -554,1 +554,1 @@\n-            int n = JLA.encodeASCII(sa, sp, da, dp, Math.min(len, da.length));\n+            int n = JLA.uncheckedEncodeASCII(sa, sp, da, dp, Math.min(len, da.length));\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/CESU_8.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,1 @@\n-import sun.nio.cs.Surrogate;\n-import sun.nio.cs.ArrayDecoder;\n-import sun.nio.cs.ArrayEncoder;\n+\n@@ -173,1 +171,1 @@\n-                    int n = JLA.decodeASCII(sa, sp, da, dp, Math.min(dl - dp, sl - sp));\n+                    int n = JLA.uncheckedDecodeASCII(sa, sp, da, dp, Math.min(dl - dp, sl - sp));\n@@ -605,1 +603,1 @@\n-                    int n = JLA.encodeASCII(sa, sp, da, dp, Math.min(dl - dp, sl - sp));\n+                    int n = JLA.uncheckedEncodeASCII(sa, sp, da, dp, Math.min(dl - dp, sl - sp));\n@@ -691,1 +689,1 @@\n-                int n = JLA.encodeASCII(src, sp, dst, dp, len);\n+                int n = JLA.uncheckedEncodeASCII(src, sp, dst, dp, len);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/DoubleByte.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-            JLA.inflateBytesToChars(sa, sp, da, dp, decodeLen);\n+            JLA.uncheckedInflateBytesToChars(sa, sp, da, dp, decodeLen);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/ISO_8859_1.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-import java.util.Arrays;\n+\n@@ -98,1 +98,1 @@\n-                int n = JLA.decodeASCII(sa, sp, da, dp, Math.min(dl - dp, sl - sp));\n+                int n = JLA.uncheckedDecodeASCII(sa, sp, da, dp, Math.min(dl - dp, sl - sp));\n@@ -220,1 +220,1 @@\n-                int n = JLA.encodeASCII(sa, sp, da, dp, len);\n+                int n = JLA.uncheckedEncodeASCII(sa, sp, da, dp, len);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/SingleByte.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-            int n = JLA.decodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n+            int n = JLA.uncheckedDecodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n@@ -162,1 +162,1 @@\n-            int n = JLA.encodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n+            int n = JLA.uncheckedEncodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/US_ASCII.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import java.nio.charset.CodingErrorAction;\n@@ -231,1 +230,1 @@\n-            int n = JLA.decodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n+            int n = JLA.uncheckedDecodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n@@ -456,1 +455,1 @@\n-            int n = JLA.encodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n+            int n = JLA.uncheckedEncodeASCII(sa, sp, da, dp, Math.min(sl - sp, dl - dp));\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/UTF_8.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-Github: https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/1cbd6e71a9b83620b1d0b11e49d3d9ff48c27e22\/public_suffix_list.dat\n-Date: 2024-05-07\n+Github: https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/823beb1425def931c8b0b170a6bc33b424c3f9b0\/public_suffix_list.dat\n+Date: 2025-05-12\n","filename":"src\/java.base\/share\/data\/publicsuffixlist\/VERSION","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -17,1 +17,0 @@\n-net.ac\n@@ -19,0 +18,1 @@\n+net.ac\n@@ -21,1 +21,2 @@\n-\/\/ ad : https:\/\/en.wikipedia.org\/wiki\/.ad\n+\/\/ ad : https:\/\/www.iana.org\/domains\/root\/db\/ad.html\n+\/\/ Confirmed by Amadeu Abril i Abril (CORE) <amadeu.abril@corenic.org> 2024-11-17\n@@ -23,1 +24,0 @@\n-nom.ad\n@@ -25,1 +25,1 @@\n-\/\/ ae : https:\/\/tdra.gov.ae\/en\/aeda\/ae-policies\n+\/\/ ae : https:\/\/www.iana.org\/domains\/root\/db\/ae.html\n@@ -27,0 +27,1 @@\n+ac.ae\n@@ -28,0 +29,2 @@\n+gov.ae\n+mil.ae\n@@ -31,3 +34,0 @@\n-ac.ae\n-gov.ae\n-mil.ae\n@@ -35,1 +35,1 @@\n-\/\/ aero : see https:\/\/www.information.aero\/index.php?id=66\n+\/\/ aero : https:\/\/information.aero\/registration\/policies\/dmp\n@@ -37,0 +37,11 @@\n+\/\/ 2LDs\n+airline.aero\n+airport.aero\n+\/\/ 2LDs (currently not accepting registration, seemingly never have)\n+\/\/ As of 2024-07, these are marked as reserved for potential 3LD\n+\/\/ registrations (clause 11 \"allocated subdomains\" in the 2006 TLD\n+\/\/ policy), but the relevant industry partners have not opened them up\n+\/\/ for registration. Current status can be determined from the TLD's\n+\/\/ policy document: 2LDs that are open for registration must list\n+\/\/ their policy in the TLD's policy. Any 2LD without such a policy is\n+\/\/ not open for registrations.\n@@ -43,3 +54,0 @@\n-aircraft.aero\n-airline.aero\n-airport.aero\n@@ -47,1 +55,0 @@\n-airtraffic.aero\n@@ -49,0 +56,2 @@\n+aircraft.aero\n+airtraffic.aero\n@@ -50,1 +59,0 @@\n-amusement.aero\n@@ -81,0 +89,1 @@\n+freight.aero\n@@ -95,0 +104,1 @@\n+marketplace.aero\n@@ -117,0 +127,1 @@\n+taxi.aero\n@@ -124,1 +135,1 @@\n-\/\/ af : http:\/\/www.nic.af\/help.jsp\n+\/\/ af : https:\/\/www.nic.af\/domain-price\n@@ -126,1 +137,0 @@\n-gov.af\n@@ -128,2 +138,0 @@\n-org.af\n-net.af\n@@ -131,0 +139,3 @@\n+gov.af\n+net.af\n+org.af\n@@ -134,0 +145,1 @@\n+co.ag\n@@ -135,1 +147,0 @@\n-org.ag\n@@ -137,1 +148,0 @@\n-co.ag\n@@ -139,0 +149,1 @@\n+org.ag\n@@ -142,1 +153,0 @@\n-off.ai\n@@ -145,0 +155,1 @@\n+off.ai\n@@ -157,0 +168,1 @@\n+\/\/ Confirmed by ISOC AM <isoc@isoc.am> 2024-11-18\n@@ -164,2 +176,2 @@\n-\/\/ ao : https:\/\/en.wikipedia.org\/wiki\/.ao\n-\/\/ http:\/\/www.dns.ao\/REGISTR.DOC\n+\/\/ ao : https:\/\/www.iana.org\/domains\/root\/db\/ao.html\n+\/\/ https:\/\/www.dns.ao\/ao\/\n@@ -167,0 +179,1 @@\n+co.ao\n@@ -168,0 +181,2 @@\n+edu.ao\n+gov.ao\n@@ -169,0 +184,1 @@\n+it.ao\n@@ -170,1 +186,1 @@\n-co.ao\n+org.ao\n@@ -172,1 +188,0 @@\n-it.ao\n@@ -174,1 +189,1 @@\n-\/\/ aq : https:\/\/en.wikipedia.org\/wiki\/.aq\n+\/\/ aq : https:\/\/www.iana.org\/domains\/root\/db\/aq.html\n@@ -191,0 +206,1 @@\n+seg.ar\n@@ -194,1 +210,1 @@\n-\/\/ arpa : https:\/\/en.wikipedia.org\/wiki\/.arpa\n+\/\/ arpa : https:\/\/www.iana.org\/domains\/root\/db\/arpa.html\n@@ -198,0 +214,1 @@\n+home.arpa\n@@ -204,1 +221,1 @@\n-\/\/ as : https:\/\/en.wikipedia.org\/wiki\/.as\n+\/\/ as : https:\/\/www.iana.org\/domains\/root\/db\/as.html\n@@ -208,1 +225,1 @@\n-\/\/ asia : https:\/\/en.wikipedia.org\/wiki\/.asia\n+\/\/ asia : https:\/\/www.iana.org\/domains\/root\/db\/asia.html\n@@ -211,1 +228,1 @@\n-\/\/ at : https:\/\/en.wikipedia.org\/wiki\/.at\n+\/\/ at : https:\/\/www.iana.org\/domains\/root\/db\/at.html\n@@ -215,0 +232,1 @@\n+sth.ac.at\n@@ -218,1 +236,0 @@\n-sth.ac.at\n@@ -220,2 +237,3 @@\n-\/\/ au : https:\/\/en.wikipedia.org\/wiki\/.au\n-\/\/ http:\/\/www.auda.org.au\/\n+\/\/ au : https:\/\/www.iana.org\/domains\/root\/db\/au.html\n+\/\/ https:\/\/www.auda.org.au\/\n+\/\/ Confirmed by registry <general@auda.org.au> 2024-11-17\n@@ -224,0 +242,1 @@\n+asn.au\n@@ -225,2 +244,0 @@\n-net.au\n-org.au\n@@ -229,1 +246,0 @@\n-asn.au\n@@ -231,0 +247,2 @@\n+net.au\n+org.au\n@@ -232,1 +250,0 @@\n-info.au\n@@ -235,1 +252,1 @@\n-\/\/ CGDNs - http:\/\/www.cgdn.org.au\/\n+\/\/ CGDNs : https:\/\/www.auda.org.au\/au-domain-names\/the-different-au-domain-names\/state-and-territory-domain-names\/\n@@ -255,3 +272,3 @@\n-\/\/ act.gov.au  Bug 984824 - Removed at request of Greg Tankard\n-\/\/ nsw.gov.au  Bug 547985 - Removed at request of <Shae.Donelan@services.nsw.gov.au>\n-\/\/ nt.gov.au  Bug 940478 - Removed at request of Greg Connors <Greg.Connors@nt.gov.au>\n+\/\/ act.gov.au - Bug 984824 - Removed at request of Greg Tankard\n+\/\/ nsw.gov.au - Bug 547985 - Removed at request of <Shae.Donelan@services.nsw.gov.au>\n+\/\/ nt.gov.au - Bug 940478 - Removed at request of Greg Connors <Greg.Connors@nt.gov.au>\n@@ -267,1 +284,1 @@\n-\/\/ aw : https:\/\/en.wikipedia.org\/wiki\/.aw\n+\/\/ aw : https:\/\/www.iana.org\/domains\/root\/db\/aw.html\n@@ -271,1 +288,1 @@\n-\/\/ ax : https:\/\/en.wikipedia.org\/wiki\/.ax\n+\/\/ ax : https:\/\/www.iana.org\/domains\/root\/db\/ax.html\n@@ -274,1 +291,2 @@\n-\/\/ az : https:\/\/en.wikipedia.org\/wiki\/.az\n+\/\/ az : https:\/\/www.iana.org\/domains\/root\/db\/az.html\n+\/\/ Confirmed via https:\/\/whois.az\/?page_id=10 2024-12-11\n@@ -276,0 +294,2 @@\n+biz.az\n+co.az\n@@ -277,4 +297,0 @@\n-net.az\n-int.az\n-gov.az\n-org.az\n@@ -282,0 +298,1 @@\n+gov.az\n@@ -283,1 +300,1 @@\n-pp.az\n+int.az\n@@ -286,0 +303,5 @@\n+net.az\n+org.az\n+pp.az\n+\/\/ No longer available for registration, however domains exist as of 2024-12-11\n+\/\/ see https:\/\/whois.az\/?page_id=783\n@@ -287,1 +309,0 @@\n-biz.az\n@@ -289,1 +310,1 @@\n-\/\/ ba : http:\/\/nic.ba\/users_data\/files\/pravilnik_o_registraciji.pdf\n+\/\/ ba : https:\/\/www.iana.org\/domains\/root\/db\/ba.html\n@@ -298,1 +319,1 @@\n-\/\/ bb : https:\/\/en.wikipedia.org\/wiki\/.bb\n+\/\/ bb : https:\/\/www.iana.org\/domains\/root\/db\/bb.html\n@@ -311,1 +332,1 @@\n-\/\/ bd : https:\/\/en.wikipedia.org\/wiki\/.bd\n+\/\/ bd : https:\/\/www.iana.org\/domains\/root\/db\/bd.html\n@@ -314,1 +335,1 @@\n-\/\/ be : https:\/\/en.wikipedia.org\/wiki\/.be\n+\/\/ be : https:\/\/www.iana.org\/domains\/root\/db\/be.html\n@@ -319,1 +340,1 @@\n-\/\/ bf : https:\/\/en.wikipedia.org\/wiki\/.bf\n+\/\/ bf : https:\/\/www.iana.org\/domains\/root\/db\/bf.html\n@@ -323,1 +344,1 @@\n-\/\/ bg : https:\/\/en.wikipedia.org\/wiki\/.bg\n+\/\/ bg : https:\/\/www.iana.org\/domains\/root\/db\/bg.html\n@@ -326,0 +347,10 @@\n+0.bg\n+1.bg\n+2.bg\n+3.bg\n+4.bg\n+5.bg\n+6.bg\n+7.bg\n+8.bg\n+9.bg\n@@ -352,10 +383,0 @@\n-0.bg\n-1.bg\n-2.bg\n-3.bg\n-4.bg\n-5.bg\n-6.bg\n-7.bg\n-8.bg\n-9.bg\n@@ -363,1 +384,1 @@\n-\/\/ bh : https:\/\/en.wikipedia.org\/wiki\/.bh\n+\/\/ bh : https:\/\/www.iana.org\/domains\/root\/db\/bh.html\n@@ -367,0 +388,1 @@\n+gov.bh\n@@ -369,1 +391,0 @@\n-gov.bh\n@@ -371,1 +392,1 @@\n-\/\/ bi : https:\/\/en.wikipedia.org\/wiki\/.bi\n+\/\/ bi : https:\/\/www.iana.org\/domains\/root\/db\/bi.html\n@@ -380,1 +401,1 @@\n-\/\/ biz : https:\/\/en.wikipedia.org\/wiki\/.biz\n+\/\/ biz : https:\/\/www.iana.org\/domains\/root\/db\/biz.html\n@@ -384,1 +405,1 @@\n-\/\/ submitted by registry <contact@nic.bj>\n+\/\/ Submitted by registry <contact@nic.bj>\n@@ -402,1 +423,0 @@\n-resto.bj\n@@ -404,0 +424,1 @@\n+resto.bj\n@@ -407,1 +428,1 @@\n-\/\/ bm : http:\/\/www.bermudanic.bm\/dnr-text.txt\n+\/\/ bm : https:\/\/www.bermudanic.bm\/domain-registration\/index.php\n@@ -423,1 +444,2 @@\n-\/\/ bo : https:\/\/nic.bo\/delegacion2015.php#h-1.10\n+\/\/ bo : https:\/\/nic.bo\n+\/\/ Confirmed by registry <soporte@nic.bo> 2024-11-19\n@@ -429,2 +451,0 @@\n-org.bo\n-net.bo\n@@ -432,0 +452,2 @@\n+net.bo\n+org.bo\n@@ -457,0 +479,1 @@\n+plurinacional.bo\n@@ -459,1 +482,0 @@\n-plurinacional.bo\n@@ -487,0 +509,1 @@\n+bet.br\n@@ -574,0 +597,1 @@\n+leilao.br\n@@ -644,2 +668,0 @@\n-net.bs\n-org.bs\n@@ -648,0 +670,2 @@\n+net.bs\n+org.bs\n@@ -649,1 +673,1 @@\n-\/\/ bt : https:\/\/en.wikipedia.org\/wiki\/.bt\n+\/\/ bt : https:\/\/www.iana.org\/domains\/root\/db\/bt.html\n@@ -661,3 +685,2 @@\n-\/\/ bw : https:\/\/en.wikipedia.org\/wiki\/.bw\n-\/\/ http:\/\/www.gobin.info\/domainname\/bw.doc\n-\/\/ list of other 2nd level tlds ?\n+\/\/ bw : https:\/\/www.iana.org\/domains\/root\/db\/bw.html\n+\/\/ https:\/\/nic.net.bw\/bw-name-structure\n@@ -665,0 +688,1 @@\n+ac.bw\n@@ -666,0 +690,2 @@\n+gov.bw\n+net.bw\n@@ -668,1 +694,1 @@\n-\/\/ by : https:\/\/en.wikipedia.org\/wiki\/.by\n+\/\/ by : https:\/\/www.iana.org\/domains\/root\/db\/by.html\n@@ -678,1 +704,0 @@\n-\n@@ -682,1 +707,1 @@\n-\/\/ bz : https:\/\/en.wikipedia.org\/wiki\/.bz\n+\/\/ bz : https:\/\/www.iana.org\/domains\/root\/db\/bz.html\n@@ -685,0 +710,1 @@\n+co.bz\n@@ -686,2 +712,0 @@\n-net.bz\n-org.bz\n@@ -690,0 +714,2 @@\n+net.bz\n+org.bz\n@@ -691,1 +717,1 @@\n-\/\/ ca : https:\/\/en.wikipedia.org\/wiki\/.ca\n+\/\/ ca : https:\/\/www.iana.org\/domains\/root\/db\/ca.html\n@@ -712,1 +738,1 @@\n-\/\/ cat : https:\/\/en.wikipedia.org\/wiki\/.cat\n+\/\/ cat : https:\/\/www.iana.org\/domains\/root\/db\/cat.html\n@@ -715,1 +741,1 @@\n-\/\/ cc : https:\/\/en.wikipedia.org\/wiki\/.cc\n+\/\/ cc : https:\/\/www.iana.org\/domains\/root\/db\/cc.html\n@@ -718,2 +744,2 @@\n-\/\/ cd : https:\/\/en.wikipedia.org\/wiki\/.cd\n-\/\/ see also: https:\/\/www.nic.cd\/domain\/insertDomain_2.jsp?act=1\n+\/\/ cd : https:\/\/www.iana.org\/domains\/root\/db\/cd.html\n+\/\/ https:\/\/www.nic.cd\n@@ -723,1 +749,1 @@\n-\/\/ cf : https:\/\/en.wikipedia.org\/wiki\/.cf\n+\/\/ cf : https:\/\/www.iana.org\/domains\/root\/db\/cf.html\n@@ -726,1 +752,1 @@\n-\/\/ cg : https:\/\/en.wikipedia.org\/wiki\/.cg\n+\/\/ cg : https:\/\/www.iana.org\/domains\/root\/db\/cg.html\n@@ -729,1 +755,1 @@\n-\/\/ ch : https:\/\/en.wikipedia.org\/wiki\/.ch\n+\/\/ ch : https:\/\/www.iana.org\/domains\/root\/db\/ch.html\n@@ -732,2 +758,1 @@\n-\/\/ ci : https:\/\/en.wikipedia.org\/wiki\/.ci\n-\/\/ http:\/\/www.nic.ci\/index.php?page=charte\n+\/\/ ci : https:\/\/www.iana.org\/domains\/root\/db\/ci.html\n@@ -735,3 +760,3 @@\n-org.ci\n-or.ci\n-com.ci\n+ac.ci\n+aéroport.ci\n+asso.ci\n@@ -739,1 +764,1 @@\n-edu.ci\n+com.ci\n@@ -741,2 +766,1 @@\n-ac.ci\n-net.ci\n+edu.ci\n@@ -744,5 +768,0 @@\n-asso.ci\n-aéroport.ci\n-int.ci\n-presse.ci\n-md.ci\n@@ -750,0 +769,4 @@\n+int.ci\n+net.ci\n+or.ci\n+org.ci\n@@ -751,1 +774,1 @@\n-\/\/ ck : https:\/\/en.wikipedia.org\/wiki\/.ck\n+\/\/ ck : https:\/\/www.iana.org\/domains\/root\/db\/ck.html\n@@ -763,1 +786,1 @@\n-\/\/ cm : https:\/\/en.wikipedia.org\/wiki\/.cm plus bug 981927\n+\/\/ cm : https:\/\/www.iana.org\/domains\/root\/db\/cm.html plus bug 981927\n@@ -770,1 +793,1 @@\n-\/\/ cn : https:\/\/en.wikipedia.org\/wiki\/.cn\n+\/\/ cn : https:\/\/www.iana.org\/domains\/root\/db\/cn.html\n@@ -777,0 +800,1 @@\n+mil.cn\n@@ -779,1 +803,0 @@\n-mil.cn\n@@ -781,1 +804,0 @@\n-网络.cn\n@@ -783,0 +805,1 @@\n+网络.cn\n@@ -790,1 +813,0 @@\n-gz.cn\n@@ -792,0 +814,1 @@\n+gz.cn\n@@ -796,0 +819,1 @@\n+hk.cn\n@@ -802,0 +826,1 @@\n+mo.cn\n@@ -811,0 +836,1 @@\n+tw.cn\n@@ -815,3 +841,0 @@\n-hk.cn\n-mo.cn\n-tw.cn\n@@ -819,2 +842,3 @@\n-\/\/ co : https:\/\/en.wikipedia.org\/wiki\/.co\n-\/\/ Submitted by registry <tecnico@uniandes.edu.co>\n+\/\/ co : https:\/\/www.iana.org\/domains\/root\/db\/co.html\n+\/\/ https:\/\/www.cointernet.com.co\/como-funciona-un-dominio-restringido\n+\/\/ Confirmed by registry <gonzalo@cointernet.com.co> 2024-11-18\n@@ -822,1 +846,0 @@\n-arts.co\n@@ -825,1 +848,0 @@\n-firm.co\n@@ -827,2 +849,0 @@\n-info.co\n-int.co\n@@ -833,2 +853,0 @@\n-rec.co\n-web.co\n@@ -836,1 +854,1 @@\n-\/\/ com : https:\/\/en.wikipedia.org\/wiki\/.com\n+\/\/ com : https:\/\/www.iana.org\/domains\/root\/db\/com.html\n@@ -839,1 +857,1 @@\n-\/\/ coop : https:\/\/en.wikipedia.org\/wiki\/.coop\n+\/\/ coop : https:\/\/www.iana.org\/domains\/root\/db\/coop.html\n@@ -842,1 +860,1 @@\n-\/\/ cr : http:\/\/www.nic.cr\/niccr_publico\/showRegistroDominiosScreen.do\n+\/\/ cr : https:\/\/nic.cr\/capitulo-1-registro-de-un-nombre-de-dominio\/\n@@ -852,1 +870,1 @@\n-\/\/ cu : https:\/\/en.wikipedia.org\/wiki\/.cu\n+\/\/ cu : https:\/\/www.iana.org\/domains\/root\/db\/cu.html\n@@ -856,3 +874,1 @@\n-org.cu\n-net.cu\n-gov.cu\n+gob.cu\n@@ -860,0 +876,3 @@\n+nat.cu\n+net.cu\n+org.cu\n@@ -861,2 +880,3 @@\n-\/\/ cv : https:\/\/en.wikipedia.org\/wiki\/.cv\n-\/\/ cv : http:\/\/www.dns.cv\/tldcv_portal\/do?com=DS;5446457100;111;+PAGE(4000018)+K-CAT-CODIGO(RDOM)+RCNT(100); <- registration rules\n+\/\/ cv : https:\/\/www.iana.org\/domains\/root\/db\/cv.html\n+\/\/ https:\/\/ola.cv\/domain-extensions-under-cv\/\n+\/\/ Confirmed by registry <support@ola.cv> 2024-11-26\n@@ -866,0 +886,1 @@\n+id.cv\n@@ -867,0 +888,1 @@\n+net.cv\n@@ -869,0 +891,1 @@\n+publ.cv\n@@ -870,2 +893,2 @@\n-\/\/ cw : http:\/\/www.una.cw\/cw_registry\/\n-\/\/ Confirmed by registry <registry@una.net> 2013-03-26\n+\/\/ cw : https:\/\/www.uoc.cw\/cw-registry\n+\/\/ Confirmed by registry <registry@uoc.cw> 2024-11-19\n@@ -878,1 +901,1 @@\n-\/\/ cx : https:\/\/en.wikipedia.org\/wiki\/.cx\n+\/\/ cx : https:\/\/www.iana.org\/domains\/root\/db\/cx.html\n@@ -884,2 +907,2 @@\n-\/\/ Submitted by registry Panayiotou Fotia <cydns@ucy.ac.cy>\n-\/\/ namespace policies URL https:\/\/www.nic.cy\/portal\/\/sites\/default\/files\/symfonia_gia_eggrafi.pdf\n+\/\/ Submitted by Panayiotou Fotia <cydns@ucy.ac.cy>\n+\/\/ https:\/\/nic.cy\/wp-content\/uploads\/2024\/01\/Create-Request-for-domain-name-registration-1.pdf\n@@ -900,1 +923,1 @@\n-\/\/ cz : https:\/\/en.wikipedia.org\/wiki\/.cz\n+\/\/ cz : https:\/\/www.iana.org\/domains\/root\/db\/cz.html\n@@ -903,1 +926,1 @@\n-\/\/ de : https:\/\/en.wikipedia.org\/wiki\/.de\n+\/\/ de : https:\/\/www.iana.org\/domains\/root\/db\/de.html\n@@ -908,1 +931,1 @@\n-\/\/ dj : https:\/\/en.wikipedia.org\/wiki\/.dj\n+\/\/ dj : https:\/\/www.iana.org\/domains\/root\/db\/dj.html\n@@ -911,1 +934,1 @@\n-\/\/ dk : https:\/\/en.wikipedia.org\/wiki\/.dk\n+\/\/ dk : https:\/\/www.iana.org\/domains\/root\/db\/dk.html\n@@ -915,1 +938,3 @@\n-\/\/ dm : https:\/\/en.wikipedia.org\/wiki\/.dm\n+\/\/ dm : https:\/\/www.iana.org\/domains\/root\/db\/dm.html\n+\/\/ https:\/\/nic.dm\/policies\/pdf\/DMRulesandGuidelines2024v1.pdf\n+\/\/ Confirmed by registry <admin@dotdm.dm> 2024-11-19\n@@ -917,0 +942,1 @@\n+co.dm\n@@ -918,2 +944,0 @@\n-net.dm\n-org.dm\n@@ -922,0 +946,2 @@\n+net.dm\n+org.dm\n@@ -923,1 +949,1 @@\n-\/\/ do : https:\/\/en.wikipedia.org\/wiki\/.do\n+\/\/ do : https:\/\/www.iana.org\/domains\/root\/db\/do.html\n@@ -943,1 +969,0 @@\n-org.dz\n@@ -945,0 +970,1 @@\n+org.dz\n@@ -949,1 +975,1 @@\n-\/\/ ec : http:\/\/www.nic.ec\/reg\/paso1.asp\n+\/\/ ec : https:\/\/www.nic.ec\/\n@@ -953,2 +979,1 @@\n-info.ec\n-net.ec\n+edu.ec\n@@ -956,0 +981,3 @@\n+gob.ec\n+gov.ec\n+info.ec\n@@ -958,5 +986,0 @@\n-pro.ec\n-org.ec\n-edu.ec\n-gov.ec\n-gob.ec\n@@ -964,0 +987,3 @@\n+net.ec\n+org.ec\n+pro.ec\n@@ -965,1 +991,1 @@\n-\/\/ edu : https:\/\/en.wikipedia.org\/wiki\/.edu\n+\/\/ edu : https:\/\/www.iana.org\/domains\/root\/db\/edu.html\n@@ -968,1 +994,1 @@\n-\/\/ ee : http:\/\/www.eenet.ee\/EENet\/dom_reeglid.html#lisa_B\n+\/\/ ee : https:\/\/www.internet.ee\/domains\/general-domains-and-procedure-for-registration-of-sub-domains-under-general-domains\n@@ -970,0 +996,2 @@\n+aip.ee\n+com.ee\n@@ -971,0 +999,1 @@\n+fie.ee\n@@ -972,1 +1001,0 @@\n-riik.ee\n@@ -975,3 +1003,0 @@\n-com.ee\n-pri.ee\n-aip.ee\n@@ -979,1 +1004,2 @@\n-fie.ee\n+pri.ee\n+riik.ee\n@@ -981,1 +1007,2 @@\n-\/\/ eg : https:\/\/en.wikipedia.org\/wiki\/.eg\n+\/\/ eg : https:\/\/www.iana.org\/domains\/root\/db\/eg.html\n+\/\/ https:\/\/domain.eg\/en\/domain-rules\/subdomain-names-types\/\n@@ -983,0 +1010,1 @@\n+ac.eg\n@@ -987,0 +1015,2 @@\n+info.eg\n+me.eg\n@@ -992,0 +1022,2 @@\n+sport.eg\n+tv.eg\n@@ -993,1 +1025,1 @@\n-\/\/ er : https:\/\/en.wikipedia.org\/wiki\/.er\n+\/\/ er : https:\/\/www.iana.org\/domains\/root\/db\/er.html\n@@ -996,1 +1028,1 @@\n-\/\/ es : https:\/\/www.nic.es\/site_ingles\/ingles\/dominios\/index.html\n+\/\/ es : https:\/\/www.dominios.es\/en\n@@ -999,0 +1031,2 @@\n+edu.es\n+gob.es\n@@ -1001,2 +1035,0 @@\n-gob.es\n-edu.es\n@@ -1004,1 +1036,1 @@\n-\/\/ et : https:\/\/en.wikipedia.org\/wiki\/.et\n+\/\/ et : https:\/\/www.iana.org\/domains\/root\/db\/et.html\n@@ -1006,0 +1038,1 @@\n+biz.et\n@@ -1007,2 +1040,0 @@\n-gov.et\n-org.et\n@@ -1010,2 +1041,1 @@\n-biz.et\n-name.et\n+gov.et\n@@ -1013,0 +1043,1 @@\n+name.et\n@@ -1014,0 +1045,1 @@\n+org.et\n@@ -1015,1 +1047,1 @@\n-\/\/ eu : https:\/\/en.wikipedia.org\/wiki\/.eu\n+\/\/ eu : https:\/\/www.iana.org\/domains\/root\/db\/eu.html\n@@ -1018,1 +1050,1 @@\n-\/\/ fi : https:\/\/en.wikipedia.org\/wiki\/.fi\n+\/\/ fi : https:\/\/www.iana.org\/domains\/root\/db\/fi.html\n@@ -1020,1 +1052,1 @@\n-\/\/ aland.fi : https:\/\/en.wikipedia.org\/wiki\/.ax\n+\/\/ aland.fi : https:\/\/www.iana.org\/domains\/root\/db\/ax.html\n@@ -1024,1 +1056,0 @@\n-\/\/ TODO: Check for updates (expected to be phased out around Q1\/2009)\n@@ -1041,1 +1072,1 @@\n-\/\/ fk : https:\/\/en.wikipedia.org\/wiki\/.fk\n+\/\/ fk : https:\/\/www.iana.org\/domains\/root\/db\/fk.html\n@@ -1044,1 +1075,2 @@\n-\/\/ fm : https:\/\/en.wikipedia.org\/wiki\/.fm\n+\/\/ fm : https:\/\/www.iana.org\/domains\/root\/db\/fm.html\n+fm\n@@ -1049,1 +1081,0 @@\n-fm\n@@ -1051,1 +1082,1 @@\n-\/\/ fo : https:\/\/en.wikipedia.org\/wiki\/.fo\n+\/\/ fo : https:\/\/www.iana.org\/domains\/root\/db\/fo.html\n@@ -1068,1 +1099,1 @@\n-\/\/ ga : https:\/\/en.wikipedia.org\/wiki\/.ga\n+\/\/ ga : https:\/\/www.iana.org\/domains\/root\/db\/ga.html\n@@ -1075,1 +1106,2 @@\n-\/\/ gd : https:\/\/en.wikipedia.org\/wiki\/.gd\n+\/\/ gd : https:\/\/www.iana.org\/domains\/root\/db\/gd.html\n+gd\n@@ -1078,1 +1110,0 @@\n-gd\n@@ -1080,1 +1111,2 @@\n-\/\/ ge : http:\/\/www.nic.net.ge\/policy_en.pdf\n+\/\/ ge : https:\/\/nic.ge\/en\/administrator\/the-ge-domain-regulations\n+\/\/ Confirmed by registry <info@nic.ge> 2024-11-20\n@@ -1085,2 +1117,0 @@\n-org.ge\n-mil.ge\n@@ -1088,0 +1118,1 @@\n+org.ge\n@@ -1089,0 +1120,1 @@\n+school.ge\n@@ -1090,1 +1122,1 @@\n-\/\/ gf : https:\/\/en.wikipedia.org\/wiki\/.gf\n+\/\/ gf : https:\/\/www.iana.org\/domains\/root\/db\/gf.html\n@@ -1093,1 +1125,1 @@\n-\/\/ gg : http:\/\/www.channelisles.net\/register-domains\/\n+\/\/ gg : https:\/\/www.channelisles.net\/register-1\/register-direct\n@@ -1100,2 +1132,2 @@\n-\/\/ gh : https:\/\/en.wikipedia.org\/wiki\/.gh\n-\/\/ see also: http:\/\/www.nic.gh\/reg_now.php\n+\/\/ gh : https:\/\/www.iana.org\/domains\/root\/db\/gh.html\n+\/\/ https:\/\/www.nic.gh\/\n@@ -1108,1 +1140,0 @@\n-org.gh\n@@ -1110,0 +1141,1 @@\n+org.gh\n@@ -1114,1 +1146,1 @@\n-ltd.gi\n+edu.gi\n@@ -1116,0 +1148,1 @@\n+ltd.gi\n@@ -1117,1 +1150,0 @@\n-edu.gi\n@@ -1120,1 +1152,1 @@\n-\/\/ gl : https:\/\/en.wikipedia.org\/wiki\/.gl\n+\/\/ gl : https:\/\/www.iana.org\/domains\/root\/db\/gl.html\n@@ -1139,1 +1171,0 @@\n-org.gn\n@@ -1141,0 +1172,1 @@\n+org.gn\n@@ -1142,1 +1174,1 @@\n-\/\/ gov : https:\/\/en.wikipedia.org\/wiki\/.gov\n+\/\/ gov : https:\/\/www.iana.org\/domains\/root\/db\/gov.html\n@@ -1147,0 +1179,1 @@\n+asso.gp\n@@ -1148,2 +1181,0 @@\n-net.gp\n-mobi.gp\n@@ -1151,0 +1182,2 @@\n+mobi.gp\n+net.gp\n@@ -1152,1 +1185,0 @@\n-asso.gp\n@@ -1154,1 +1186,1 @@\n-\/\/ gq : https:\/\/en.wikipedia.org\/wiki\/.gq\n+\/\/ gq : https:\/\/www.iana.org\/domains\/root\/db\/gq.html\n@@ -1157,1 +1189,1 @@\n-\/\/ gr : https:\/\/grweb.ics.forth.gr\/english\/1617-B-2005.html\n+\/\/ gr : https:\/\/www.iana.org\/domains\/root\/db\/gr.html\n@@ -1162,0 +1194,1 @@\n+gov.gr\n@@ -1164,1 +1197,0 @@\n-gov.gr\n@@ -1166,1 +1198,1 @@\n-\/\/ gs : https:\/\/en.wikipedia.org\/wiki\/.gs\n+\/\/ gs : https:\/\/www.iana.org\/domains\/root\/db\/gs.html\n@@ -1192,1 +1224,1 @@\n-\/\/ gw : https:\/\/en.wikipedia.org\/wiki\/.gw\n+\/\/ gw : https:\/\/www.iana.org\/domains\/root\/db\/gw.html\n@@ -1196,1 +1228,1 @@\n-\/\/ gy : https:\/\/en.wikipedia.org\/wiki\/.gy\n+\/\/ gy : https:\/\/www.iana.org\/domains\/root\/db\/gy.html\n@@ -1215,0 +1247,2 @@\n+个人.hk\n+個人.hk\n@@ -1216,2 +1250,0 @@\n-教育.hk\n-敎育.hk\n@@ -1219,2 +1251,2 @@\n-個人.hk\n-个人.hk\n+敎育.hk\n+教育.hk\n@@ -1222,0 +1254,3 @@\n+組織.hk\n+組织.hk\n+網絡.hk\n@@ -1223,1 +1258,0 @@\n-网络.hk\n@@ -1225,2 +1259,0 @@\n-網絡.hk\n-网絡.hk\n@@ -1228,2 +1260,2 @@\n-組織.hk\n-組织.hk\n+网絡.hk\n+网络.hk\n@@ -1231,1 +1263,1 @@\n-\/\/ hm : https:\/\/en.wikipedia.org\/wiki\/.hm\n+\/\/ hm : https:\/\/www.iana.org\/domains\/root\/db\/hm.html\n@@ -1234,1 +1266,1 @@\n-\/\/ hn : http:\/\/www.nic.hn\/politicas\/ps02,,05.html\n+\/\/ hn : https:\/\/www.iana.org\/domains\/root\/db\/hn.html\n@@ -1238,3 +1270,0 @@\n-org.hn\n-net.hn\n-mil.hn\n@@ -1242,0 +1271,3 @@\n+mil.hn\n+net.hn\n+org.hn\n@@ -1245,1 +1277,1 @@\n-iz.hr\n+com.hr\n@@ -1247,0 +1279,1 @@\n+iz.hr\n@@ -1248,1 +1281,0 @@\n-com.hr\n@@ -1252,0 +1284,3 @@\n+adult.ht\n+art.ht\n+asso.ht\n@@ -1253,1 +1288,2 @@\n-shop.ht\n+coop.ht\n+edu.ht\n@@ -1255,0 +1291,1 @@\n+gouv.ht\n@@ -1256,1 +1293,1 @@\n-adult.ht\n+med.ht\n@@ -1258,1 +1295,0 @@\n-pro.ht\n@@ -1260,3 +1296,1 @@\n-med.ht\n-art.ht\n-coop.ht\n+perso.ht\n@@ -1264,2 +1298,1 @@\n-asso.ht\n-edu.ht\n+pro.ht\n@@ -1267,2 +1300,1 @@\n-gouv.ht\n-perso.ht\n+shop.ht\n@@ -1270,1 +1302,1 @@\n-\/\/ hu : http:\/\/www.domain.hu\/domain\/English\/sld.html\n+\/\/ hu : https:\/\/www.iana.org\/domains\/root\/db\/hu.html\n@@ -1273,6 +1305,0 @@\n-co.hu\n-info.hu\n-org.hu\n-priv.hu\n-sport.hu\n-tm.hu\n@@ -1284,0 +1310,1 @@\n+co.hu\n@@ -1290,0 +1317,1 @@\n+info.hu\n@@ -1296,0 +1324,2 @@\n+org.hu\n+priv.hu\n@@ -1299,0 +1329,1 @@\n+sport.hu\n@@ -1301,0 +1332,1 @@\n+tm.hu\n@@ -1305,1 +1337,1 @@\n-\/\/ id : https:\/\/pandi.id\/en\/domain\/registration-requirements\/\n+\/\/ id : https:\/\/www.iana.org\/domains\/root\/db\/id.html\n@@ -1320,1 +1352,1 @@\n-\/\/ ie : https:\/\/en.wikipedia.org\/wiki\/.ie\n+\/\/ ie : https:\/\/www.iana.org\/domains\/root\/db\/ie.html\n@@ -1324,3 +1356,3 @@\n-\/\/ il :         http:\/\/www.isoc.org.il\/domains\/\n-\/\/ see also:    https:\/\/en.isoc.org.il\/il-cctld\/registration-rules\n-\/\/ ISOC-IL      (operated by .il Registry)\n+\/\/ il : http:\/\/www.isoc.org.il\/domains\/\n+\/\/ see also: https:\/\/en.isoc.org.il\/il-cctld\/registration-rules\n+\/\/ ISOC-IL (operated by .il Registry)\n@@ -1352,1 +1384,0 @@\n-com.im\n@@ -1354,0 +1385,2 @@\n+plc.co.im\n+com.im\n@@ -1356,1 +1389,0 @@\n-plc.co.im\n@@ -1360,1 +1392,1 @@\n-\/\/ in : https:\/\/en.wikipedia.org\/wiki\/.in\n+\/\/ in : https:\/\/www.iana.org\/domains\/root\/db\/in.html\n@@ -1407,1 +1439,1 @@\n-\/\/ info : https:\/\/en.wikipedia.org\/wiki\/.info\n+\/\/ info : https:\/\/www.iana.org\/domains\/root\/db\/info.html\n@@ -1410,1 +1442,1 @@\n-\/\/ int : https:\/\/en.wikipedia.org\/wiki\/.int\n+\/\/ int : https:\/\/www.iana.org\/domains\/root\/db\/int.html\n@@ -1416,1 +1448,0 @@\n-\/\/ list of other 2nd level tlds ?\n@@ -1418,0 +1449,1 @@\n+co.io\n@@ -1419,0 +1451,6 @@\n+edu.io\n+gov.io\n+mil.io\n+net.io\n+nom.io\n+org.io\n@@ -1422,1 +1460,1 @@\n-gov.iq\n+com.iq\n@@ -1424,0 +1462,1 @@\n+gov.iq\n@@ -1425,2 +1464,0 @@\n-com.iq\n-org.iq\n@@ -1428,0 +1465,1 @@\n+org.iq\n@@ -1446,1 +1484,1 @@\n-\/\/ Confirmed by registry <marius@isgate.is> 2008-12-06\n+\/\/ Confirmed by registry <marius@isgate.is> 2024-11-17\n@@ -1448,8 +1486,3 @@\n-net.is\n-com.is\n-edu.is\n-gov.is\n-org.is\n-int.is\n-\n-\/\/ it : https:\/\/en.wikipedia.org\/wiki\/.it\n+\n+\/\/ it : https:\/\/www.iana.org\/domains\/root\/db\/it.html\n+\/\/ https:\/\/www.nic.it\/\n@@ -1457,1 +1490,0 @@\n-gov.it\n@@ -1459,3 +1491,3 @@\n-\/\/ Reserved geo-names (regions and provinces):\n-\/\/ https:\/\/www.nic.it\/sites\/default\/files\/archivio\/docs\/Regulation_assignation_v7.1.pdf\n-\/\/ Regions\n+gov.it\n+\/\/ Regions (3.3.1)\n+\/\/ https:\/\/www.nic.it\/en\/manage-your-it\/forms-and-docs -> \"Assignment and Management of domain names\"\n@@ -1520,0 +1552,1 @@\n+trentino.it\n@@ -1532,1 +1565,0 @@\n-trentino.it\n@@ -1576,1 +1608,1 @@\n-\/\/ Provinces\n+\/\/ Provinces (3.3.2)\n@@ -1604,0 +1636,1 @@\n+balsan.it\n@@ -1607,1 +1640,0 @@\n-balsan.it\n@@ -1621,1 +1653,0 @@\n-bolzano-altoadige.it\n@@ -1623,0 +1654,2 @@\n+bolzano-altoadige.it\n+bozen.it\n@@ -1626,1 +1659,0 @@\n-bozen.it\n@@ -1632,0 +1664,1 @@\n+bulsan.it\n@@ -1635,1 +1668,0 @@\n-bulsan.it\n@@ -1737,0 +1769,1 @@\n+monza.it\n@@ -1739,1 +1772,0 @@\n-monza.it\n@@ -1818,1 +1850,0 @@\n-suedtirol.it\n@@ -1820,0 +1851,1 @@\n+suedtirol.it\n@@ -1868,1 +1900,1 @@\n-\/\/ je : http:\/\/www.channelisles.net\/register-domains\/\n+\/\/ je : https:\/\/www.iana.org\/domains\/root\/db\/je.html\n@@ -1878,1 +1910,2 @@\n-\/\/ jo : http:\/\/www.dns.jo\/Registration_policy.aspx\n+\/\/ jo : https:\/\/www.dns.jo\/JoFamily.aspx\n+\/\/ Confirmed by registry <DNS@modee.gov.jo> 2024-11-17\n@@ -1880,0 +1913,2 @@\n+agri.jo\n+ai.jo\n@@ -1881,2 +1916,0 @@\n-org.jo\n-net.jo\n@@ -1884,1 +1917,2 @@\n-sch.jo\n+eng.jo\n+fm.jo\n@@ -1887,1 +1921,6 @@\n-name.jo\n+net.jo\n+org.jo\n+per.jo\n+phd.jo\n+sch.jo\n+tv.jo\n@@ -1889,1 +1928,1 @@\n-\/\/ jobs : https:\/\/en.wikipedia.org\/wiki\/.jobs\n+\/\/ jobs : https:\/\/www.iana.org\/domains\/root\/db\/jobs.html\n@@ -1892,1 +1931,1 @@\n-\/\/ jp : https:\/\/en.wikipedia.org\/wiki\/.jp\n+\/\/ jp : https:\/\/www.iana.org\/domains\/root\/db\/jp.html\n@@ -1894,1 +1933,1 @@\n-\/\/ Submitted by registry <info@jprs.jp>\n+\/\/ Confirmed by registry <info@jprs.jp> 2024-11-22\n@@ -1954,3 +1993,3 @@\n-栃木.jp\n-愛知.jp\n-愛媛.jp\n+三重.jp\n+京都.jp\n+佐賀.jp\n@@ -1958,2 +1997,0 @@\n-熊本.jp\n-茨城.jp\n@@ -1963,7 +2000,0 @@\n-長崎.jp\n-長野.jp\n-新潟.jp\n-青森.jp\n-静岡.jp\n-東京.jp\n-石川.jp\n@@ -1971,3 +2001,0 @@\n-三重.jp\n-京都.jp\n-佐賀.jp\n@@ -1983,1 +2010,0 @@\n-岩手.jp\n@@ -1986,0 +2012,1 @@\n+岩手.jp\n@@ -1989,0 +2016,5 @@\n+愛媛.jp\n+愛知.jp\n+新潟.jp\n+東京.jp\n+栃木.jp\n@@ -1991,0 +2023,2 @@\n+熊本.jp\n+石川.jp\n@@ -1997,0 +2031,5 @@\n+茨城.jp\n+長崎.jp\n+長野.jp\n+青森.jp\n+静岡.jp\n@@ -2003,0 +2042,3 @@\n+\/\/ 2024-11-22: JPRS confirmed that jp geographic type names no longer accept new registrations.\n+\/\/ Once all existing registrations expire (marking full discontinuation), these suffixes\n+\/\/ will be removed from the PSL.\n@@ -2004,6 +2046,0 @@\n-*.kitakyushu.jp\n-*.kobe.jp\n-*.nagoya.jp\n-*.sapporo.jp\n-*.sendai.jp\n-*.yokohama.jp\n@@ -2011,0 +2047,1 @@\n+*.kitakyushu.jp\n@@ -2012,0 +2049,1 @@\n+*.kobe.jp\n@@ -2013,0 +2051,1 @@\n+*.nagoya.jp\n@@ -2014,0 +2053,1 @@\n+*.sapporo.jp\n@@ -2015,0 +2055,1 @@\n+*.sendai.jp\n@@ -2016,0 +2057,1 @@\n+*.yokohama.jp\n@@ -3706,2 +3748,0 @@\n-org.kg\n-net.kg\n@@ -3712,0 +3752,2 @@\n+net.kg\n+org.kg\n@@ -3716,1 +3758,1 @@\n-\/\/ ki : http:\/\/www.ki\/dns\/index.html\n+\/\/ ki : https:\/\/www.iana.org\/domains\/root\/db\/ki.html\n@@ -3718,1 +3760,0 @@\n-edu.ki\n@@ -3720,2 +3761,2 @@\n-net.ki\n-org.ki\n+com.ki\n+edu.ki\n@@ -3724,1 +3765,2 @@\n-com.ki\n+net.ki\n+org.ki\n@@ -3726,1 +3768,1 @@\n-\/\/ km : https:\/\/en.wikipedia.org\/wiki\/.km\n+\/\/ km : https:\/\/www.iana.org\/domains\/root\/db\/km.html\n@@ -3729,2 +3771,3 @@\n-org.km\n-nom.km\n+ass.km\n+com.km\n+edu.km\n@@ -3732,0 +3775,3 @@\n+mil.km\n+nom.km\n+org.km\n@@ -3734,4 +3780,0 @@\n-edu.km\n-mil.km\n-ass.km\n-com.km\n@@ -3739,2 +3781,1 @@\n-\/\/ https:\/\/en.wikipedia.org\/wiki\/.km says they're available for registration:\n-coop.km\n+\/\/ https:\/\/www.iana.org\/domains\/root\/db\/km.html says they're available for registration:\n@@ -3742,1 +3783,2 @@\n-presse.km\n+coop.km\n+gouv.km\n@@ -3746,0 +3788,1 @@\n+presse.km\n@@ -3747,1 +3790,0 @@\n-gouv.km\n@@ -3749,1 +3791,1 @@\n-\/\/ kn : https:\/\/en.wikipedia.org\/wiki\/.kn\n+\/\/ kn : https:\/\/www.iana.org\/domains\/root\/db\/kn.html\n@@ -3752,2 +3794,0 @@\n-net.kn\n-org.kn\n@@ -3756,0 +3796,2 @@\n+net.kn\n+org.kn\n@@ -3766,2 +3808,2 @@\n-\/\/ kr : https:\/\/en.wikipedia.org\/wiki\/.kr\n-\/\/ see also: http:\/\/domain.nida.or.kr\/eng\/registration.jsp\n+\/\/ kr : https:\/\/www.iana.org\/domains\/root\/db\/kr.html\n+\/\/ see also: https:\/\/krnic.kisa.or.kr\/jsp\/infoboard\/law\/domBylawsReg.jsp\n@@ -3770,0 +3812,1 @@\n+ai.kr\n@@ -3774,0 +3817,2 @@\n+io.kr\n+it.kr\n@@ -3775,0 +3820,1 @@\n+me.kr\n@@ -3819,1 +3865,1 @@\n-\/\/ kz : https:\/\/en.wikipedia.org\/wiki\/.kz\n+\/\/ kz : https:\/\/www.iana.org\/domains\/root\/db\/kz.html\n@@ -3822,1 +3868,1 @@\n-org.kz\n+com.kz\n@@ -3824,1 +3870,0 @@\n-net.kz\n@@ -3827,1 +3872,2 @@\n-com.kz\n+net.kz\n+org.kz\n@@ -3829,1 +3875,1 @@\n-\/\/ la : https:\/\/en.wikipedia.org\/wiki\/.la\n+\/\/ la : https:\/\/www.iana.org\/domains\/root\/db\/la.html\n@@ -3832,3 +3878,1 @@\n-int.la\n-net.la\n-info.la\n+com.la\n@@ -3837,2 +3881,3 @@\n-per.la\n-com.la\n+info.la\n+int.la\n+net.la\n@@ -3840,0 +3885,1 @@\n+per.la\n@@ -3841,1 +3887,1 @@\n-\/\/ lb : https:\/\/en.wikipedia.org\/wiki\/.lb\n+\/\/ lb : https:\/\/www.iana.org\/domains\/root\/db\/lb.html\n@@ -3850,1 +3896,1 @@\n-\/\/ lc : https:\/\/en.wikipedia.org\/wiki\/.lc\n+\/\/ lc : https:\/\/www.iana.org\/domains\/root\/db\/lc.html\n@@ -3853,2 +3899,0 @@\n-com.lc\n-net.lc\n@@ -3856,1 +3900,1 @@\n-org.lc\n+com.lc\n@@ -3859,0 +3903,2 @@\n+net.lc\n+org.lc\n@@ -3860,1 +3906,1 @@\n-\/\/ li : https:\/\/en.wikipedia.org\/wiki\/.li\n+\/\/ li : https:\/\/www.iana.org\/domains\/root\/db\/li.html\n@@ -3863,1 +3909,1 @@\n-\/\/ lk : https:\/\/www.nic.lk\/index.php\/domain-registration\/lk-domain-naming-structure\n+\/\/ lk : https:\/\/www.iana.org\/domains\/root\/db\/lk.html\n@@ -3865,4 +3911,2 @@\n-gov.lk\n-sch.lk\n-net.lk\n-int.lk\n+ac.lk\n+assn.lk\n@@ -3870,1 +3914,0 @@\n-org.lk\n@@ -3872,0 +3915,6 @@\n+gov.lk\n+grp.lk\n+hotel.lk\n+int.lk\n+ltd.lk\n+net.lk\n@@ -3873,0 +3922,2 @@\n+org.lk\n+sch.lk\n@@ -3875,5 +3926,0 @@\n-ltd.lk\n-assn.lk\n-grp.lk\n-hotel.lk\n-ac.lk\n@@ -3887,1 +3933,0 @@\n-org.lr\n@@ -3889,0 +3934,1 @@\n+org.lr\n@@ -3903,1 +3949,1 @@\n-\/\/ lt : https:\/\/en.wikipedia.org\/wiki\/.lt\n+\/\/ lt : https:\/\/www.iana.org\/domains\/root\/db\/lt.html\n@@ -3911,1 +3957,1 @@\n-\/\/ lv : http:\/\/www.nic.lv\/DNS\/En\/generic.php\n+\/\/ lv : https:\/\/www.iana.org\/domains\/root\/db\/lv.html\n@@ -3913,0 +3959,1 @@\n+asn.lv\n@@ -3914,0 +3961,1 @@\n+conf.lv\n@@ -3916,2 +3964,0 @@\n-org.lv\n-mil.lv\n@@ -3919,0 +3965,1 @@\n+mil.lv\n@@ -3920,2 +3967,1 @@\n-asn.lv\n-conf.lv\n+org.lv\n@@ -3926,3 +3972,0 @@\n-net.ly\n-gov.ly\n-plc.ly\n@@ -3930,1 +3973,2 @@\n-sch.ly\n+gov.ly\n+id.ly\n@@ -3932,0 +3976,1 @@\n+net.ly\n@@ -3933,1 +3978,2 @@\n-id.ly\n+plc.ly\n+sch.ly\n@@ -3935,1 +3981,1 @@\n-\/\/ ma : https:\/\/en.wikipedia.org\/wiki\/.ma\n+\/\/ ma : https:\/\/www.iana.org\/domains\/root\/db\/ma.html\n@@ -3938,0 +3984,1 @@\n+ac.ma\n@@ -3939,1 +3986,0 @@\n-net.ma\n@@ -3941,0 +3987,1 @@\n+net.ma\n@@ -3942,1 +3989,0 @@\n-ac.ma\n@@ -3947,1 +3993,0 @@\n-tm.mc\n@@ -3949,0 +3994,1 @@\n+tm.mc\n@@ -3950,1 +3996,1 @@\n-\/\/ md : https:\/\/en.wikipedia.org\/wiki\/.md\n+\/\/ md : https:\/\/www.iana.org\/domains\/root\/db\/md.html\n@@ -3953,1 +3999,1 @@\n-\/\/ me : https:\/\/en.wikipedia.org\/wiki\/.me\n+\/\/ me : https:\/\/www.iana.org\/domains\/root\/db\/me.html\n@@ -3955,0 +4001,1 @@\n+ac.me\n@@ -3956,2 +4003,0 @@\n-net.me\n-org.me\n@@ -3959,1 +4004,0 @@\n-ac.me\n@@ -3962,0 +4006,2 @@\n+net.me\n+org.me\n@@ -3964,1 +4010,1 @@\n-\/\/ mg : http:\/\/nic.mg\/nicmg\/?page_id=39\n+\/\/ mg : https:\/\/nic.mg\n@@ -3966,5 +4012,2 @@\n-org.mg\n-nom.mg\n-gov.mg\n-prd.mg\n-tm.mg\n+co.mg\n+com.mg\n@@ -3972,0 +4015,1 @@\n+gov.mg\n@@ -3973,2 +4017,3 @@\n-com.mg\n-co.mg\n+nom.mg\n+org.mg\n+prd.mg\n@@ -3976,1 +4021,1 @@\n-\/\/ mh : https:\/\/en.wikipedia.org\/wiki\/.mh\n+\/\/ mh : https:\/\/www.iana.org\/domains\/root\/db\/mh.html\n@@ -3979,1 +4024,1 @@\n-\/\/ mil : https:\/\/en.wikipedia.org\/wiki\/.mil\n+\/\/ mil : https:\/\/www.iana.org\/domains\/root\/db\/mil.html\n@@ -3982,1 +4027,1 @@\n-\/\/ mk : https:\/\/en.wikipedia.org\/wiki\/.mk\n+\/\/ mk : https:\/\/www.iana.org\/domains\/root\/db\/mk.html\n@@ -3986,2 +4031,0 @@\n-org.mk\n-net.mk\n@@ -3992,0 +4035,2 @@\n+net.mk\n+org.mk\n@@ -3993,2 +4038,2 @@\n-\/\/ ml : http:\/\/www.gobin.info\/domainname\/ml-template.doc\n-\/\/ see also: https:\/\/en.wikipedia.org\/wiki\/.ml\n+\/\/ ml : https:\/\/www.iana.org\/domains\/root\/db\/ml.html\n+\/\/ Confirmed by Boubacar NDIAYE <bndiaye@agetic.gouv.ml> 2024-12-31\n@@ -3996,0 +4041,3 @@\n+ac.ml\n+art.ml\n+asso.ml\n@@ -4000,0 +4048,2 @@\n+info.ml\n+inst.ml\n@@ -4002,0 +4052,1 @@\n+pr.ml\n@@ -4004,1 +4055,1 @@\n-\/\/ mm : https:\/\/en.wikipedia.org\/wiki\/.mm\n+\/\/ mm : https:\/\/www.iana.org\/domains\/root\/db\/mm.html\n@@ -4007,1 +4058,1 @@\n-\/\/ mn : https:\/\/en.wikipedia.org\/wiki\/.mn\n+\/\/ mn : https:\/\/www.iana.org\/domains\/root\/db\/mn.html\n@@ -4009,1 +4060,0 @@\n-gov.mn\n@@ -4011,0 +4061,1 @@\n+gov.mn\n@@ -4016,2 +4067,0 @@\n-net.mo\n-org.mo\n@@ -4020,0 +4069,2 @@\n+net.mo\n+org.mo\n@@ -4021,1 +4072,1 @@\n-\/\/ mobi : https:\/\/en.wikipedia.org\/wiki\/.mobi\n+\/\/ mobi : https:\/\/www.iana.org\/domains\/root\/db\/mobi.html\n@@ -4028,1 +4079,1 @@\n-\/\/ mq : https:\/\/en.wikipedia.org\/wiki\/.mq\n+\/\/ mq : https:\/\/www.iana.org\/domains\/root\/db\/mq.html\n@@ -4031,1 +4082,1 @@\n-\/\/ mr : https:\/\/en.wikipedia.org\/wiki\/.mr\n+\/\/ mr : https:\/\/www.iana.org\/domains\/root\/db\/mr.html\n@@ -4035,1 +4086,1 @@\n-\/\/ ms : http:\/\/www.nic.ms\/pdf\/MS_Domain_Name_Rules.pdf\n+\/\/ ms : https:\/\/www.iana.org\/domains\/root\/db\/ms.html\n@@ -4051,1 +4102,1 @@\n-\/\/ mu : https:\/\/en.wikipedia.org\/wiki\/.mu\n+\/\/ mu : https:\/\/www.iana.org\/domains\/root\/db\/mu.html\n@@ -4053,4 +4104,0 @@\n-com.mu\n-net.mu\n-org.mu\n-gov.mu\n@@ -4059,0 +4106,3 @@\n+com.mu\n+gov.mu\n+net.mu\n@@ -4060,0 +4110,1 @@\n+org.mu\n@@ -4064,1 +4115,1 @@\n-\/\/ mv : https:\/\/en.wikipedia.org\/wiki\/.mv\n+\/\/ mv : https:\/\/www.iana.org\/domains\/root\/db\/mv.html\n@@ -4092,1 +4143,0 @@\n-museum.mw\n@@ -4100,2 +4150,0 @@\n-org.mx\n-gob.mx\n@@ -4103,0 +4151,1 @@\n+gob.mx\n@@ -4104,0 +4153,1 @@\n+org.mx\n@@ -4130,1 +4180,0 @@\n-\/\/ http:\/\/www.info.na\/domain\/\n@@ -4132,14 +4181,1 @@\n-info.na\n-pro.na\n-name.na\n-school.na\n-or.na\n-dr.na\n-us.na\n-mx.na\n-ca.na\n-in.na\n-cc.na\n-tv.na\n-ws.na\n-mobi.na\n+alt.na\n@@ -4148,0 +4184,2 @@\n+gov.na\n+net.na\n@@ -4150,1 +4188,2 @@\n-\/\/ name : has 2nd-level tlds, but there's no list of them\n+\/\/ name : http:\/\/www.nic.name\/\n+\/\/ Regarding 2LDs: https:\/\/github.com\/publicsuffix\/list\/issues\/2306\n@@ -4158,1 +4197,1 @@\n-\/\/ ne : https:\/\/en.wikipedia.org\/wiki\/.ne\n+\/\/ ne : https:\/\/www.iana.org\/domains\/root\/db\/ne.html\n@@ -4161,1 +4200,1 @@\n-\/\/ net : https:\/\/en.wikipedia.org\/wiki\/.net\n+\/\/ net : https:\/\/www.iana.org\/domains\/root\/db\/net.html\n@@ -4164,1 +4203,1 @@\n-\/\/ nf : https:\/\/en.wikipedia.org\/wiki\/.nf\n+\/\/ nf : https:\/\/www.iana.org\/domains\/root\/db\/nf.html\n@@ -4166,5 +4205,0 @@\n-com.nf\n-net.nf\n-per.nf\n-rec.nf\n-web.nf\n@@ -4172,0 +4206,1 @@\n+com.nf\n@@ -4174,0 +4209,1 @@\n+net.nf\n@@ -4175,0 +4211,2 @@\n+per.nf\n+rec.nf\n@@ -4176,0 +4214,1 @@\n+web.nf\n@@ -4207,3 +4246,2 @@\n-\/\/ nl : https:\/\/en.wikipedia.org\/wiki\/.nl\n-\/\/      https:\/\/www.sidn.nl\/\n-\/\/      ccTLD for the Netherlands\n+\/\/ nl : https:\/\/www.iana.org\/domains\/root\/db\/nl.html\n+\/\/ https:\/\/www.sidn.nl\/\n@@ -4220,2 +4258,0 @@\n-vgs.no\n-fylkesbibl.no\n@@ -4223,1 +4259,1 @@\n-museum.no\n+fylkesbibl.no\n@@ -4225,0 +4261,1 @@\n+museum.no\n@@ -4226,0 +4263,1 @@\n+vgs.no\n@@ -4227,2 +4265,0 @@\n-mil.no\n-stat.no\n@@ -4230,1 +4266,0 @@\n-kommune.no\n@@ -4232,0 +4267,3 @@\n+kommune.no\n+mil.no\n+stat.no\n@@ -4283,2 +4321,0 @@\n-brumunddal.no\n-bryne.no\n@@ -4287,0 +4323,2 @@\n+brumunddal.no\n+bryne.no\n@@ -4330,0 +4368,2 @@\n+aarborte.no\n+aejrie.no\n@@ -4333,0 +4373,3 @@\n+nes.akershus.no\n+aknoluokta.no\n+ákŋoluokta.no\n@@ -4335,0 +4378,2 @@\n+alaheadju.no\n+álaheadju.no\n@@ -4340,2 +4385,0 @@\n-alaheadju.no\n-álaheadju.no\n@@ -4347,0 +4390,1 @@\n+andasuolo.no\n@@ -4350,1 +4394,0 @@\n-andasuolo.no\n@@ -4360,1 +4403,0 @@\n-askvoll.no\n@@ -4363,0 +4405,1 @@\n+askvoll.no\n@@ -4375,2 +4418,11 @@\n-balestrand.no\n-ballangen.no\n+badaddja.no\n+bådåddjå.no\n+bærum.no\n+bahcavuotna.no\n+báhcavuotna.no\n+bahccavuotna.no\n+báhccavuotna.no\n+baidar.no\n+báidár.no\n+bajddar.no\n+bájddar.no\n@@ -4379,0 +4431,2 @@\n+balestrand.no\n+ballangen.no\n@@ -4380,2 +4434,0 @@\n-bahccavuotna.no\n-báhccavuotna.no\n@@ -4384,0 +4436,5 @@\n+barum.no\n+batsfjord.no\n+båtsfjord.no\n+bearalvahki.no\n+bearalváhki.no\n@@ -4386,4 +4443,0 @@\n-bajddar.no\n-bájddar.no\n-baidar.no\n-báidár.no\n@@ -4394,2 +4447,2 @@\n-bearalvahki.no\n-bearalváhki.no\n+bievat.no\n+bievát.no\n@@ -4404,3 +4457,0 @@\n-badaddja.no\n-bådåddjå.no\n-budejju.no\n@@ -4408,0 +4458,2 @@\n+bomlo.no\n+bømlo.no\n@@ -4411,0 +4463,2 @@\n+budejju.no\n+nes.buskerud.no\n@@ -4413,14 +4467,11 @@\n-barum.no\n-bærum.no\n-bo.telemark.no\n-bø.telemark.no\n-bo.nordland.no\n-bø.nordland.no\n-bievat.no\n-bievát.no\n-bomlo.no\n-bømlo.no\n-batsfjord.no\n-båtsfjord.no\n-bahcavuotna.no\n-báhcavuotna.no\n+cahcesuolo.no\n+čáhcesuolo.no\n+davvenjarga.no\n+davvenjárga.no\n+davvesiida.no\n+deatnu.no\n+dielddanuorri.no\n+divtasvuodna.no\n+divttasvuotna.no\n+donna.no\n+dønna.no\n@@ -4432,2 +4483,0 @@\n-donna.no\n-dønna.no\n@@ -4445,1 +4494,0 @@\n-evenes.no\n@@ -4448,0 +4496,1 @@\n+evenes.no\n@@ -4451,2 +4500,0 @@\n-fuossko.no\n-fuoisku.no\n@@ -4460,0 +4507,2 @@\n+fla.no\n+flå.no\n@@ -4465,2 +4514,0 @@\n-fla.no\n-flå.no\n@@ -4468,0 +4515,2 @@\n+forde.no\n+førde.no\n@@ -4470,0 +4519,2 @@\n+fræna.no\n+frana.no\n@@ -4474,2 +4525,0 @@\n-frana.no\n-fræna.no\n@@ -4478,0 +4527,2 @@\n+fuoisku.no\n+fuossko.no\n@@ -4480,2 +4531,4 @@\n-forde.no\n-førde.no\n+gaivuotna.no\n+gáivuotna.no\n+galsa.no\n+gálsá.no\n@@ -4487,0 +4540,1 @@\n+giehtavuoatna.no\n@@ -4504,2 +4558,0 @@\n-kraanghke.no\n-kråanghke.no\n@@ -4508,0 +4560,5 @@\n+guovdageaidnu.no\n+ha.no\n+hå.no\n+habmer.no\n+hábmer.no\n@@ -4509,0 +4566,2 @@\n+hægebostad.no\n+hagebostad.no\n@@ -4513,5 +4572,0 @@\n-habmer.no\n-hábmer.no\n-hapmir.no\n-hápmir.no\n-hammerfest.no\n@@ -4520,0 +4574,3 @@\n+hammerfest.no\n+hapmir.no\n+hápmir.no\n@@ -4524,2 +4581,0 @@\n-aknoluokta.no\n-ákŋoluokta.no\n@@ -4527,1 +4582,0 @@\n-aarborte.no\n@@ -4529,0 +4583,3 @@\n+os.hedmark.no\n+valer.hedmark.no\n+våler.hedmark.no\n@@ -4532,4 +4589,0 @@\n-heroy.more-og-romsdal.no\n-herøy.møre-og-romsdal.no\n-heroy.nordland.no\n-herøy.nordland.no\n@@ -4547,0 +4600,1 @@\n+os.hordaland.no\n@@ -4549,6 +4603,0 @@\n-hurdal.no\n-hurum.no\n-hvaler.no\n-hyllestad.no\n-hagebostad.no\n-hægebostad.no\n@@ -4559,2 +4607,4 @@\n-ha.no\n-hå.no\n+hurdal.no\n+hurum.no\n+hvaler.no\n+hyllestad.no\n@@ -4565,0 +4615,1 @@\n+ivgu.no\n@@ -4566,1 +4617,0 @@\n-jondal.no\n@@ -4569,1 +4619,3 @@\n-karasjok.no\n+jondal.no\n+kafjord.no\n+kåfjord.no\n@@ -4572,0 +4624,1 @@\n+karasjok.no\n@@ -4573,2 +4626,0 @@\n-galsa.no\n-gálsá.no\n@@ -4578,2 +4629,0 @@\n-guovdageaidnu.no\n-klepp.no\n@@ -4582,0 +4631,1 @@\n+klepp.no\n@@ -4584,0 +4634,2 @@\n+kraanghke.no\n+kråanghke.no\n@@ -4590,0 +4642,3 @@\n+kvæfjord.no\n+kvænangen.no\n+kvafjord.no\n@@ -4591,2 +4646,0 @@\n-rahkkeravju.no\n-ráhkkerávju.no\n@@ -4594,0 +4647,1 @@\n+kvanangen.no\n@@ -4599,11 +4653,5 @@\n-kvafjord.no\n-kvæfjord.no\n-giehtavuoatna.no\n-kvanangen.no\n-kvænangen.no\n-navuotna.no\n-návuotna.no\n-kafjord.no\n-kåfjord.no\n-gaivuotna.no\n-gáivuotna.no\n+laakesvuemie.no\n+lærdal.no\n+lahppi.no\n+láhppi.no\n+lardal.no\n@@ -4611,1 +4659,0 @@\n-lavangen.no\n@@ -4613,2 +4660,3 @@\n-loabat.no\n-loabát.no\n+lavangen.no\n+leangaviika.no\n+leaŋgaviika.no\n@@ -4616,1 +4664,0 @@\n-davvesiida.no\n@@ -4622,2 +4669,1 @@\n-leangaviika.no\n-leaŋgaviika.no\n+lerdal.no\n@@ -4630,1 +4676,0 @@\n-lindesnes.no\n@@ -4633,0 +4678,5 @@\n+lindesnes.no\n+loabat.no\n+loabát.no\n+lodingen.no\n+lødingen.no\n@@ -4635,2 +4685,4 @@\n-lahppi.no\n-láhppi.no\n+lorenskog.no\n+lørenskog.no\n+loten.no\n+løten.no\n@@ -4644,10 +4696,4 @@\n-ivgu.no\n-lardal.no\n-lerdal.no\n-lærdal.no\n-lodingen.no\n-lødingen.no\n-lorenskog.no\n-lørenskog.no\n-loten.no\n-løten.no\n+malatvuopmi.no\n+málatvuopmi.no\n+malselv.no\n+målselv.no\n@@ -4655,4 +4701,0 @@\n-masoy.no\n-måsøy.no\n-muosat.no\n-muosát.no\n@@ -4663,0 +4705,4 @@\n+masoy.no\n+måsøy.no\n+matta-varjjat.no\n+mátta-várjjat.no\n@@ -4670,2 +4716,0 @@\n-moareke.no\n-moåreke.no\n@@ -4674,0 +4718,2 @@\n+moareke.no\n+moåreke.no\n@@ -4677,0 +4723,4 @@\n+heroy.more-og-romsdal.no\n+sande.more-og-romsdal.no\n+herøy.møre-og-romsdal.no\n+sande.møre-og-romsdal.no\n@@ -4680,4 +4730,5 @@\n-malselv.no\n-målselv.no\n-malatvuopmi.no\n-málatvuopmi.no\n+muosat.no\n+muosát.no\n+naamesjevuemie.no\n+nååmesjevuemie.no\n+nærøy.no\n@@ -4685,1 +4736,0 @@\n-aejrie.no\n@@ -4688,3 +4738,0 @@\n-naamesjevuemie.no\n-nååmesjevuemie.no\n-laakesvuemie.no\n@@ -4692,1 +4739,1 @@\n-narvik.no\n+naroy.no\n@@ -4694,0 +4741,1 @@\n+narvik.no\n@@ -4695,0 +4743,2 @@\n+navuotna.no\n+návuotna.no\n@@ -4696,2 +4746,0 @@\n-nes.akershus.no\n-nes.buskerud.no\n@@ -4701,2 +4749,0 @@\n-unjarga.no\n-unjárga.no\n@@ -4711,2 +4757,4 @@\n-davvenjarga.no\n-davvenjárga.no\n+bo.nordland.no\n+bø.nordland.no\n+heroy.nordland.no\n+herøy.nordland.no\n@@ -4715,2 +4763,0 @@\n-raisa.no\n-ráisa.no\n@@ -4719,2 +4765,0 @@\n-naroy.no\n-nærøy.no\n@@ -4726,0 +4770,1 @@\n+omasvuotna.no\n@@ -4736,2 +4781,0 @@\n-os.hedmark.no\n-os.hordaland.no\n@@ -4741,0 +4784,2 @@\n+valer.ostfold.no\n+våler.østfold.no\n@@ -4756,0 +4801,2 @@\n+rade.no\n+råde.no\n@@ -4758,4 +4805,9 @@\n-rakkestad.no\n-rana.no\n-ruovat.no\n-randaberg.no\n+rælingen.no\n+rahkkeravju.no\n+ráhkkerávju.no\n+raisa.no\n+ráisa.no\n+rakkestad.no\n+ralingen.no\n+rana.no\n+randaberg.no\n@@ -4771,1 +4823,0 @@\n-rissa.no\n@@ -4774,0 +4825,1 @@\n+rissa.no\n@@ -4775,4 +4827,0 @@\n-rollag.no\n-rygge.no\n-ralingen.no\n-rælingen.no\n@@ -4781,0 +4829,2 @@\n+rollag.no\n+romsa.no\n@@ -4791,2 +4841,2 @@\n-rade.no\n-råde.no\n+ruovat.no\n+rygge.no\n@@ -4794,2 +4844,0 @@\n-siellak.no\n-saltdal.no\n@@ -4797,1 +4845,0 @@\n-sálát.no\n@@ -4799,0 +4846,2 @@\n+sálát.no\n+saltdal.no\n@@ -4800,3 +4849,0 @@\n-sande.more-og-romsdal.no\n-sande.møre-og-romsdal.no\n-sande.vestfold.no\n@@ -4814,0 +4860,1 @@\n+siellak.no\n@@ -4817,0 +4864,4 @@\n+skanit.no\n+skánit.no\n+skanland.no\n+skånland.no\n@@ -4821,3 +4872,0 @@\n-skiptvet.no\n-skjervoy.no\n-skjervøy.no\n@@ -4826,0 +4874,1 @@\n+skiptvet.no\n@@ -4828,0 +4877,2 @@\n+skjervoy.no\n+skjervøy.no\n@@ -4829,4 +4880,0 @@\n-skanland.no\n-skånland.no\n-skanit.no\n-skánit.no\n@@ -4835,1 +4882,2 @@\n-snillfjord.no\n+snaase.no\n+snåase.no\n@@ -4838,0 +4886,1 @@\n+snillfjord.no\n@@ -4839,2 +4888,0 @@\n-snaase.no\n-snåase.no\n@@ -4842,0 +4889,2 @@\n+sogne.no\n+søgne.no\n@@ -4845,0 +4894,4 @@\n+somna.no\n+sømna.no\n+sondre-land.no\n+søndre-land.no\n@@ -4846,0 +4899,12 @@\n+sor-aurdal.no\n+sør-aurdal.no\n+sor-fron.no\n+sør-fron.no\n+sor-odal.no\n+sør-odal.no\n+sor-varanger.no\n+sør-varanger.no\n+sorfold.no\n+sørfold.no\n+sorreisa.no\n+sørreisa.no\n@@ -4847,0 +4912,2 @@\n+sorum.no\n+sørum.no\n@@ -4859,1 +4926,0 @@\n-omasvuotna.no\n@@ -4871,22 +4937,0 @@\n-sogne.no\n-søgne.no\n-somna.no\n-sømna.no\n-sondre-land.no\n-søndre-land.no\n-sor-aurdal.no\n-sør-aurdal.no\n-sor-fron.no\n-sør-fron.no\n-sor-odal.no\n-sør-odal.no\n-sor-varanger.no\n-sør-varanger.no\n-matta-varjjat.no\n-mátta-várjjat.no\n-sorfold.no\n-sørfold.no\n-sorreisa.no\n-sørreisa.no\n-sorum.no\n-sørum.no\n@@ -4894,1 +4938,2 @@\n-deatnu.no\n+bo.telemark.no\n+bø.telemark.no\n@@ -4899,1 +4944,0 @@\n-dielddanuorri.no\n@@ -4904,0 +4948,2 @@\n+tonsberg.no\n+tønsberg.no\n@@ -4905,0 +4951,2 @@\n+træna.no\n+trana.no\n@@ -4907,0 +4955,4 @@\n+troandin.no\n+trogstad.no\n+trøgstad.no\n+tromsa.no\n@@ -4909,2 +4961,0 @@\n-tromsa.no\n-romsa.no\n@@ -4912,1 +4962,0 @@\n-troandin.no\n@@ -4914,4 +4963,0 @@\n-trana.no\n-træna.no\n-trogstad.no\n-trøgstad.no\n@@ -4922,2 +4967,0 @@\n-divtasvuodna.no\n-divttasvuotna.no\n@@ -4925,1 +4968,0 @@\n-tysvar.no\n@@ -4927,2 +4969,1 @@\n-tonsberg.no\n-tønsberg.no\n+tysvar.no\n@@ -4932,0 +4973,2 @@\n+unjarga.no\n+unjárga.no\n@@ -4933,0 +4976,1 @@\n+vaapste.no\n@@ -4935,2 +4979,7 @@\n-cahcesuolo.no\n-čáhcesuolo.no\n+værøy.no\n+vaga.no\n+vågå.no\n+vagan.no\n+vågan.no\n+vagsoy.no\n+vågsøy.no\n@@ -4945,0 +4994,1 @@\n+varoy.no\n@@ -4946,1 +4996,0 @@\n-vaapste.no\n@@ -4954,0 +5003,1 @@\n+sande.vestfold.no\n@@ -4963,0 +5013,1 @@\n+voagat.no\n@@ -4965,13 +5016,0 @@\n-varoy.no\n-værøy.no\n-vagan.no\n-vågan.no\n-voagat.no\n-vagsoy.no\n-vågsøy.no\n-vaga.no\n-vågå.no\n-valer.ostfold.no\n-våler.østfold.no\n-valer.hedmark.no\n-våler.hedmark.no\n@@ -4986,2 +5024,1 @@\n-info.nr\n-gov.nr\n+com.nr\n@@ -4989,1 +5026,2 @@\n-org.nr\n+gov.nr\n+info.nr\n@@ -4991,1 +5029,1 @@\n-com.nr\n+org.nr\n@@ -4993,1 +5031,1 @@\n-\/\/ nu : https:\/\/en.wikipedia.org\/wiki\/.nu\n+\/\/ nu : https:\/\/www.iana.org\/domains\/root\/db\/nu.html\n@@ -4996,1 +5034,1 @@\n-\/\/ nz : https:\/\/en.wikipedia.org\/wiki\/.nz\n+\/\/ nz : https:\/\/www.iana.org\/domains\/root\/db\/nz.html\n@@ -5009,1 +5047,0 @@\n-mil.nz\n@@ -5011,0 +5048,1 @@\n+mil.nz\n@@ -5016,1 +5054,1 @@\n-\/\/ om : https:\/\/en.wikipedia.org\/wiki\/.om\n+\/\/ om : https:\/\/www.iana.org\/domains\/root\/db\/om.html\n@@ -5031,1 +5069,1 @@\n-\/\/ org : https:\/\/en.wikipedia.org\/wiki\/.org\n+\/\/ org : https:\/\/www.iana.org\/domains\/root\/db\/org.html\n@@ -5038,0 +5076,1 @@\n+abo.pa\n@@ -5039,1 +5078,0 @@\n-gob.pa\n@@ -5041,2 +5079,0 @@\n-org.pa\n-sld.pa\n@@ -5044,1 +5080,1 @@\n-net.pa\n+gob.pa\n@@ -5046,1 +5082,0 @@\n-abo.pa\n@@ -5048,0 +5083,1 @@\n+net.pa\n@@ -5049,0 +5085,2 @@\n+org.pa\n+sld.pa\n@@ -5052,0 +5090,1 @@\n+com.pe\n@@ -5054,1 +5093,0 @@\n-nom.pe\n@@ -5056,2 +5094,0 @@\n-org.pe\n-com.pe\n@@ -5059,0 +5095,2 @@\n+nom.pe\n+org.pe\n@@ -5063,1 +5101,0 @@\n-org.pf\n@@ -5065,0 +5102,1 @@\n+org.pf\n@@ -5066,1 +5104,1 @@\n-\/\/ pg : https:\/\/en.wikipedia.org\/wiki\/.pg\n+\/\/ pg : https:\/\/www.iana.org\/domains\/root\/db\/pg.html\n@@ -5069,1 +5107,1 @@\n-\/\/ ph : http:\/\/www.domains.ph\/FAQ2.asp\n+\/\/ ph : https:\/\/www.iana.org\/domains\/root\/db\/ph.html\n@@ -5073,3 +5111,0 @@\n-net.ph\n-org.ph\n-gov.ph\n@@ -5077,2 +5112,1 @@\n-ngo.ph\n-mil.ph\n+gov.ph\n@@ -5080,0 +5114,4 @@\n+mil.ph\n+net.ph\n+ngo.ph\n+org.ph\n@@ -5081,1 +5119,2 @@\n-\/\/ pk : http:\/\/pk5.pknic.net.pk\/pk5\/msgNamepk.PK\n+\/\/ pk : https:\/\/pk5.pknic.net.pk\/pk5\/msgNamepk.PK\n+\/\/ Contact Email: staff@pknic.net.pk\n@@ -5083,0 +5122,2 @@\n+ac.pk\n+biz.pk\n@@ -5084,1 +5125,0 @@\n-net.pk\n@@ -5086,1 +5126,0 @@\n-org.pk\n@@ -5088,3 +5127,1 @@\n-biz.pk\n-web.pk\n-gov.pk\n+gkp.pk\n@@ -5092,0 +5129,1 @@\n+gog.pk\n@@ -5093,1 +5131,0 @@\n-gon.pk\n@@ -5096,1 +5133,4 @@\n-info.pk\n+gov.pk\n+net.pk\n+org.pk\n+web.pk\n@@ -5098,2 +5138,2 @@\n-\/\/ pl http:\/\/www.dns.pl\/english\/index.html\n-\/\/ Submitted by registry\n+\/\/ pl : https:\/\/www.dns.pl\/en\/\n+\/\/ Confirmed by registry <info@dns.pl> 2024-11-18\n@@ -5104,2 +5144,1 @@\n-\/\/ pl functional domains (http:\/\/www.dns.pl\/english\/index.html)\n-aid.pl\n+\/\/ pl functional domains : https:\/\/www.dns.pl\/en\/list_of_functional_domain_names\n@@ -5107,0 +5146,1 @@\n+aid.pl\n@@ -5115,1 +5155,0 @@\n-miasta.pl\n@@ -5117,0 +5156,1 @@\n+miasta.pl\n@@ -5135,1 +5175,2 @@\n-\/\/ Government domains\n+\/\/ Government domains : https:\/\/www.dns.pl\/informacje_o_rejestracji_domen_gov_pl\n+\/\/ In accordance with the .gov.pl Domain Name Regulations : https:\/\/www.dns.pl\/regulamin_gov_pl\n@@ -5192,1 +5233,1 @@\n-\/\/ pl regional domains (http:\/\/www.dns.pl\/english\/index.html)\n+\/\/ pl regional domains : https:\/\/www.dns.pl\/en\/list_of_regional_domain_names\n@@ -5219,1 +5260,0 @@\n-kazimierz-dolny.pl\n@@ -5224,0 +5264,1 @@\n+kazimierz-dolny.pl\n@@ -5266,1 +5307,0 @@\n-pomorze.pl\n@@ -5268,0 +5308,1 @@\n+pomorze.pl\n@@ -5278,0 +5319,1 @@\n+skoczow.pl\n@@ -5282,1 +5324,0 @@\n-skoczow.pl\n@@ -5316,1 +5357,1 @@\n-\/\/ pn : http:\/\/www.government.pn\/PnRegistry\/policies.htm\n+\/\/ pn : https:\/\/www.iana.org\/domains\/root\/db\/pn.html\n@@ -5318,1 +5359,0 @@\n-gov.pn\n@@ -5320,1 +5360,0 @@\n-org.pn\n@@ -5322,0 +5361,1 @@\n+gov.pn\n@@ -5323,0 +5363,1 @@\n+org.pn\n@@ -5324,1 +5365,1 @@\n-\/\/ post : https:\/\/en.wikipedia.org\/wiki\/.post\n+\/\/ post : https:\/\/www.iana.org\/domains\/root\/db\/post.html\n@@ -5329,0 +5370,1 @@\n+biz.pr\n@@ -5330,3 +5372,0 @@\n-net.pr\n-org.pr\n-gov.pr\n@@ -5334,3 +5373,1 @@\n-isla.pr\n-pro.pr\n-biz.pr\n+gov.pr\n@@ -5338,0 +5375,1 @@\n+isla.pr\n@@ -5339,1 +5377,5 @@\n-\/\/ these aren't mentioned on nic.pr, but on https:\/\/en.wikipedia.org\/wiki\/.pr\n+net.pr\n+org.pr\n+pro.pr\n+\/\/ these aren't mentioned on nic.pr, but on https:\/\/www.iana.org\/domains\/root\/db\/pr.html\n+ac.pr\n@@ -5342,1 +5384,0 @@\n-ac.pr\n@@ -5358,1 +5399,1 @@\n-\/\/ ps : https:\/\/en.wikipedia.org\/wiki\/.ps\n+\/\/ ps : https:\/\/www.iana.org\/domains\/root\/db\/ps.html\n@@ -5361,0 +5402,1 @@\n+com.ps\n@@ -5363,4 +5405,0 @@\n-sec.ps\n-plo.ps\n-com.ps\n-org.ps\n@@ -5368,0 +5406,3 @@\n+org.ps\n+plo.ps\n+sec.ps\n@@ -5371,3 +5412,1 @@\n-net.pt\n-gov.pt\n-org.pt\n+com.pt\n@@ -5375,0 +5414,1 @@\n+gov.pt\n@@ -5376,2 +5416,1 @@\n-publ.pt\n-com.pt\n+net.pt\n@@ -5379,0 +5418,2 @@\n+org.pt\n+publ.pt\n@@ -5380,1 +5421,2 @@\n-\/\/ pw : https:\/\/en.wikipedia.org\/wiki\/.pw\n+\/\/ pw : https:\/\/www.iana.org\/domains\/root\/db\/pw.html\n+\/\/ Confirmed by registry in private correspondence with @dnsguru 2024-12-09\n@@ -5382,8 +5424,3 @@\n-co.pw\n-ne.pw\n-or.pw\n-ed.pw\n-go.pw\n-belau.pw\n-\n-\/\/ py : http:\/\/www.nic.py\/pautas.html#seccion_9\n+gov.pw\n+\n+\/\/ py : https:\/\/www.iana.org\/domains\/root\/db\/py.html\n@@ -5412,0 +5449,1 @@\n+\/\/ Confirmed by registry <support@afnic.fr> 2024-11-18\n@@ -5413,0 +5451,1 @@\n+\/\/ Closed for registration on 2013-03-15 but domains are still maintained\n@@ -5415,1 +5454,0 @@\n-nom.re\n@@ -5444,1 +5482,1 @@\n-\/\/ rw : https:\/\/www.ricta.org.rw\/sites\/default\/files\/resources\/registry_registrar_contract_0.pdf\n+\/\/ rw : https:\/\/www.iana.org\/domains\/root\/db\/rw.html\n@@ -5457,2 +5495,1 @@\n-net.sa\n-org.sa\n+edu.sa\n@@ -5461,0 +5498,2 @@\n+net.sa\n+org.sa\n@@ -5462,1 +5501,0 @@\n-edu.sa\n@@ -5477,0 +5515,1 @@\n+edu.sc\n@@ -5480,1 +5519,0 @@\n-edu.sc\n@@ -5482,1 +5520,1 @@\n-\/\/ sd : http:\/\/www.isoc.sd\/sudanic.isoc.sd\/billing_pricing.htm\n+\/\/ sd : https:\/\/www.iana.org\/domains\/root\/db\/sd.html\n@@ -5486,2 +5524,0 @@\n-net.sd\n-org.sd\n@@ -5489,2 +5525,0 @@\n-med.sd\n-tv.sd\n@@ -5493,3 +5527,8 @@\n-\n-\/\/ se : https:\/\/en.wikipedia.org\/wiki\/.se\n-\/\/ Submitted by registry <patrik.wallstrom@iis.se>\n+med.sd\n+net.sd\n+org.sd\n+tv.sd\n+\n+\/\/ se : https:\/\/www.iana.org\/domains\/root\/db\/se.html\n+\/\/ https:\/\/data.internetstiftelsen.se\/barred_domains_list.txt -> Second level domains & Sub-domains\n+\/\/ Confirmed by Registry Services <registry@internetstiftelsen.se> 2024-11-20\n@@ -5537,1 +5576,2 @@\n-\/\/ sg : http:\/\/www.nic.net.sg\/page\/registration-policies-procedures-and-guidelines\n+\/\/ sg : https:\/\/www.sgnic.sg\/domain-registration\/sg-categories-rules\n+\/\/ Confirmed by registry <dnq@sgnic.sg> 2024-11-19\n@@ -5540,0 +5580,2 @@\n+edu.sg\n+gov.sg\n@@ -5542,3 +5584,0 @@\n-gov.sg\n-edu.sg\n-per.sg\n@@ -5549,1 +5588,0 @@\n-net.sh\n@@ -5551,1 +5589,0 @@\n-org.sh\n@@ -5553,0 +5590,2 @@\n+net.sh\n+org.sh\n@@ -5554,1 +5593,1 @@\n-\/\/ si : https:\/\/en.wikipedia.org\/wiki\/.si\n+\/\/ si : https:\/\/www.iana.org\/domains\/root\/db\/si.html\n@@ -5561,2 +5600,1 @@\n-\/\/ sk : https:\/\/en.wikipedia.org\/wiki\/.sk\n-\/\/ list of 2nd level domains ?\n+\/\/ sk : https:\/\/www.iana.org\/domains\/root\/db\/sk.html\n@@ -5569,1 +5607,0 @@\n-net.sl\n@@ -5572,0 +5609,1 @@\n+net.sl\n@@ -5574,1 +5612,1 @@\n-\/\/ sm : https:\/\/en.wikipedia.org\/wiki\/.sm\n+\/\/ sm : https:\/\/www.iana.org\/domains\/root\/db\/sm.html\n@@ -5577,1 +5615,1 @@\n-\/\/ sn : https:\/\/en.wikipedia.org\/wiki\/.sn\n+\/\/ sn : https:\/\/www.iana.org\/domains\/root\/db\/sn.html\n@@ -5596,1 +5634,1 @@\n-\/\/ sr : https:\/\/en.wikipedia.org\/wiki\/.sr\n+\/\/ sr : https:\/\/www.iana.org\/domains\/root\/db\/sr.html\n@@ -5603,0 +5641,1 @@\n+co.ss\n@@ -5625,1 +5664,1 @@\n-\/\/ su : https:\/\/en.wikipedia.org\/wiki\/.su\n+\/\/ su : https:\/\/www.iana.org\/domains\/root\/db\/su.html\n@@ -5628,1 +5667,1 @@\n-\/\/ sv : http:\/\/www.svnet.org.sv\/niveldos.pdf\n+\/\/ sv : https:\/\/www.iana.org\/domains\/root\/db\/sv.html\n@@ -5636,1 +5675,1 @@\n-\/\/ sx : https:\/\/en.wikipedia.org\/wiki\/.sx\n+\/\/ sx : https:\/\/www.iana.org\/domains\/root\/db\/sx.html\n@@ -5641,2 +5680,1 @@\n-\/\/ sy : https:\/\/en.wikipedia.org\/wiki\/.sy\n-\/\/ see also: http:\/\/www.gobin.info\/domainname\/sy.doc\n+\/\/ sy : https:\/\/www.iana.org\/domains\/root\/db\/sy.html\n@@ -5644,0 +5682,1 @@\n+com.sy\n@@ -5646,1 +5685,0 @@\n-net.sy\n@@ -5648,1 +5686,1 @@\n-com.sy\n+net.sy\n@@ -5651,1 +5689,1 @@\n-\/\/ sz : https:\/\/en.wikipedia.org\/wiki\/.sz\n+\/\/ sz : https:\/\/www.iana.org\/domains\/root\/db\/sz.html\n@@ -5654,1 +5692,0 @@\n-co.sz\n@@ -5656,0 +5693,1 @@\n+co.sz\n@@ -5658,1 +5696,1 @@\n-\/\/ tc : https:\/\/en.wikipedia.org\/wiki\/.tc\n+\/\/ tc : https:\/\/www.iana.org\/domains\/root\/db\/tc.html\n@@ -5661,1 +5699,1 @@\n-\/\/ td : https:\/\/en.wikipedia.org\/wiki\/.td\n+\/\/ td : https:\/\/www.iana.org\/domains\/root\/db\/td.html\n@@ -5664,1 +5702,1 @@\n-\/\/ tel: https:\/\/en.wikipedia.org\/wiki\/.tel\n+\/\/ tel : https:\/\/www.iana.org\/domains\/root\/db\/tel.html\n@@ -5671,1 +5709,1 @@\n-\/\/ tg : https:\/\/en.wikipedia.org\/wiki\/.tg\n+\/\/ tg : https:\/\/www.iana.org\/domains\/root\/db\/tg.html\n@@ -5675,1 +5713,1 @@\n-\/\/ th : https:\/\/en.wikipedia.org\/wiki\/.th\n+\/\/ th : https:\/\/www.iana.org\/domains\/root\/db\/th.html\n@@ -5704,1 +5742,1 @@\n-\/\/ tk : https:\/\/en.wikipedia.org\/wiki\/.tk\n+\/\/ tk : https:\/\/www.iana.org\/domains\/root\/db\/tk.html\n@@ -5707,1 +5745,1 @@\n-\/\/ tl : https:\/\/en.wikipedia.org\/wiki\/.tl\n+\/\/ tl : https:\/\/www.iana.org\/domains\/root\/db\/tl.html\n@@ -5711,1 +5749,2 @@\n-\/\/ tm : http:\/\/www.nic.tm\/local.html\n+\/\/ tm : https:\/\/www.nic.tm\/local.html\n+\/\/ Confirmed by registry <admin@nic.TM> 2024-11-19\n@@ -5713,1 +5752,0 @@\n-com.tm\n@@ -5715,3 +5753,2 @@\n-org.tm\n-net.tm\n-nom.tm\n+com.tm\n+edu.tm\n@@ -5720,1 +5757,3 @@\n-edu.tm\n+net.tm\n+nom.tm\n+org.tm\n@@ -5739,1 +5778,1 @@\n-\/\/ to : https:\/\/en.wikipedia.org\/wiki\/.to\n+\/\/ to : https:\/\/www.iana.org\/domains\/root\/db\/to.html\n@@ -5743,0 +5782,1 @@\n+edu.to\n@@ -5744,0 +5784,1 @@\n+mil.to\n@@ -5746,2 +5787,0 @@\n-edu.to\n-mil.to\n@@ -5763,1 +5802,0 @@\n-mil.tr\n@@ -5766,0 +5804,1 @@\n+mil.tr\n@@ -5779,1 +5818,2 @@\n-\/\/ tt : http:\/\/www.nic.tt\/\n+\/\/ tt : https:\/\/www.nic.tt\/\n+\/\/ Confirmed by registry <admin@nic.tt> 2024-11-19\n@@ -5781,0 +5821,1 @@\n+biz.tt\n@@ -5783,3 +5824,2 @@\n-org.tt\n-net.tt\n-biz.tt\n+edu.tt\n+gov.tt\n@@ -5787,8 +5827,1 @@\n-pro.tt\n-int.tt\n-coop.tt\n-jobs.tt\n-mobi.tt\n-travel.tt\n-museum.tt\n-aero.tt\n+mil.tt\n@@ -5796,2 +5829,3 @@\n-gov.tt\n-edu.tt\n+net.tt\n+org.tt\n+pro.tt\n@@ -5799,1 +5833,1 @@\n-\/\/ tv : https:\/\/en.wikipedia.org\/wiki\/.tv\n+\/\/ tv : https:\/\/www.iana.org\/domains\/root\/db\/tv.html\n@@ -5804,1 +5838,3 @@\n-\/\/ tw : https:\/\/en.wikipedia.org\/wiki\/.tw\n+\/\/ tw : https:\/\/www.iana.org\/domains\/root\/db\/tw.html\n+\/\/ https:\/\/twnic.tw\/dnservice_catag.php\n+\/\/ Confirmed by registry <dns@twnic.tw> 2024-11-26\n@@ -5806,0 +5842,3 @@\n+club.tw\n+com.tw\n+ebiz.tw\n@@ -5807,0 +5846,1 @@\n+game.tw\n@@ -5808,0 +5848,1 @@\n+idv.tw\n@@ -5809,1 +5850,0 @@\n-com.tw\n@@ -5812,7 +5852,0 @@\n-idv.tw\n-game.tw\n-ebiz.tw\n-club.tw\n-網路.tw\n-組織.tw\n-商業.tw\n@@ -5923,0 +5956,2 @@\n+\/\/ https:\/\/www.registry.co.ug, https:\/\/whois.co.ug\n+\/\/ Confirmed by registry <support@i3c.co.ug> 2025-01-20\n@@ -5924,2 +5959,0 @@\n-co.ug\n-or.ug\n@@ -5927,1 +5960,3 @@\n-sc.ug\n+co.ug\n+com.ug\n+edu.ug\n@@ -5929,0 +5964,2 @@\n+gov.ug\n+mil.ug\n@@ -5930,1 +5967,1 @@\n-com.ug\n+or.ug\n@@ -5932,0 +5969,2 @@\n+sc.ug\n+us.ug\n@@ -5933,1 +5972,1 @@\n-\/\/ uk : https:\/\/en.wikipedia.org\/wiki\/.uk\n+\/\/ uk : https:\/\/www.iana.org\/domains\/root\/db\/uk.html\n@@ -5948,1 +5987,2 @@\n-\/\/ us : https:\/\/en.wikipedia.org\/wiki\/.us\n+\/\/ us : https:\/\/www.iana.org\/domains\/root\/db\/us.html\n+\/\/ Confirmed via the .us zone file by William Harrison 2024-12-10\n@@ -5951,1 +5991,0 @@\n-fed.us\n@@ -5953,1 +5992,0 @@\n-kids.us\n@@ -5955,1 +5993,1 @@\n-\/\/ us geographic names\n+\/\/ Geographic Names\n@@ -6004,0 +6042,1 @@\n+va.us\n@@ -6006,1 +6045,0 @@\n-va.us\n@@ -6029,1 +6067,1 @@\n-\/\/ k12.hi.us  Bug 614565 - Hawaii has a state-wide DOE login\n+\/\/ k12.hi.us - Bug 614565 - Hawaii has a state-wide DOE login\n@@ -6046,1 +6084,1 @@\n-\/\/ k12.nd.us  Bug 1028347 - Removed at request of Travis Rosso <trossow@nd.gov>\n+\/\/ k12.nd.us - Bug 1028347 - Removed at request of Travis Rosso <trossow@nd.gov>\n@@ -6058,1 +6096,1 @@\n-\/\/ k12.ri.us  Removed at request of Kim Cournoyer <netsupport@staff.ri.net>\n+\/\/ k12.ri.us - Removed at request of Kim Cournoyer <netsupport@staff.ri.net>\n@@ -6060,1 +6098,1 @@\n-\/\/ k12.sd.us  Bug 934131 - Removed at request of James Booze <James.Booze@k12.sd.us>\n+\/\/ k12.sd.us - Bug 934131 - Removed at request of James Booze <James.Booze@k12.sd.us>\n@@ -6064,0 +6102,1 @@\n+k12.va.us\n@@ -6066,1 +6105,0 @@\n-k12.va.us\n@@ -6069,2 +6107,1 @@\n-\/\/ k12.wv.us  Bug 947705 - Removed at request of Verne Britton <verne@wvnet.edu>\n-k12.wy.us\n+\/\/ k12.wv.us - Bug 947705 - Removed at request of Verne Britton <verne@wvnet.edu>\n@@ -6072,0 +6109,1 @@\n+lib.ak.us\n@@ -6073,0 +6111,1 @@\n+lib.al.us\n@@ -6074,0 +6113,1 @@\n+lib.ar.us\n@@ -6075,0 +6115,1 @@\n+lib.as.us\n@@ -6076,0 +6117,1 @@\n+lib.az.us\n@@ -6077,0 +6119,1 @@\n+lib.ca.us\n@@ -6078,0 +6121,1 @@\n+lib.co.us\n@@ -6079,0 +6123,1 @@\n+lib.ct.us\n@@ -6080,0 +6125,1 @@\n+lib.dc.us\n@@ -6119,0 +6165,1 @@\n+cc.va.us\n@@ -6121,1 +6168,0 @@\n-cc.va.us\n@@ -6126,10 +6172,2 @@\n-lib.ak.us\n-lib.al.us\n-lib.ar.us\n-lib.as.us\n-lib.az.us\n-lib.ca.us\n-lib.co.us\n-lib.ct.us\n-lib.dc.us\n-\/\/ lib.de.us  Issue #243 - Moved to Private section at request of Ed Moore <Ed.Moore@lib.de.us>\n+k12.wy.us\n+\/\/ lib.de.us - Issue #243 - Moved to Private section at request of Ed Moore <Ed.Moore@lib.de.us>\n@@ -6174,0 +6212,1 @@\n+lib.va.us\n@@ -6176,1 +6215,0 @@\n-lib.va.us\n@@ -6179,1 +6217,1 @@\n-\/\/ lib.wv.us  Bug 941670 - Removed at request of Larry W Arnold <arnold@wvlc.lib.wv.us>\n+\/\/ lib.wv.us - Bug 941670 - Removed at request of Larry W Arnold <arnold@wvlc.lib.wv.us>\n@@ -6182,4 +6220,3 @@\n-\/\/  managed independently except for private (PVT), charter (CHTR) and\n-\/\/  parochial (PAROCH) schools.  Those are delegated directly to the\n-\/\/  5LD operators.   <k12-ma-hostmaster _ at _ rsuc.gweep.net>\n-pvt.k12.ma.us\n+\/\/ managed independently except for private (PVT), charter (CHTR) and\n+\/\/ parochial (PAROCH) schools. Those are delegated directly to the\n+\/\/ 5LD operators. <k12-ma-hostmaster@rsuc.gweep.net>\n@@ -6188,0 +6225,1 @@\n+pvt.k12.ma.us\n@@ -6189,2 +6227,2 @@\n-\/\/    see also: http:\/\/domreg.merit.edu\n-\/\/    see also: whois -h whois.domreg.merit.edu help\n+\/\/ see also: https:\/\/domreg.merit.edu : domreg@merit.edu\n+\/\/ see also: whois -h whois.domreg.merit.edu help\n@@ -6216,1 +6254,1 @@\n-\/\/ va : https:\/\/en.wikipedia.org\/wiki\/.va\n+\/\/ va : https:\/\/www.iana.org\/domains\/root\/db\/va.html\n@@ -6219,1 +6257,1 @@\n-\/\/ vc : https:\/\/en.wikipedia.org\/wiki\/.vc\n+\/\/ vc : https:\/\/www.iana.org\/domains\/root\/db\/vc.html\n@@ -6223,2 +6261,1 @@\n-net.vc\n-org.vc\n+edu.vc\n@@ -6227,1 +6264,2 @@\n-edu.vc\n+net.vc\n+org.vc\n@@ -6238,0 +6276,1 @@\n+emprende.ve\n@@ -6253,1 +6292,2 @@\n-\/\/ vg : https:\/\/en.wikipedia.org\/wiki\/.vg\n+\/\/ vg : https:\/\/www.iana.org\/domains\/root\/db\/vg.html\n+\/\/ Confirmed by registry <tld.ops@centralnic.com> 2025-01-10\n@@ -6255,0 +6295,1 @@\n+edu.vg\n@@ -6256,4 +6297,1 @@\n-\/\/ vi : http:\/\/www.nic.vi\/newdomainform.htm\n-\/\/ http:\/\/www.nic.vi\/Domain_Rules\/body_domain_rules.html indicates some other\n-\/\/ TLDs are \"reserved\", such as edu.vi and gov.vi, but doesn't actually say they\n-\/\/ are available for registration (which they do not seem to be).\n+\/\/ vi : https:\/\/www.iana.org\/domains\/root\/db\/vi.html\n@@ -6351,1 +6389,1 @@\n-\/\/ vu : https:\/\/en.wikipedia.org\/wiki\/.vu\n+\/\/ vu : https:\/\/www.iana.org\/domains\/root\/db\/vu.html\n@@ -6362,1 +6400,1 @@\n-\/\/ ws : https:\/\/en.wikipedia.org\/wiki\/.ws\n+\/\/ ws : https:\/\/www.iana.org\/domains\/root\/db\/ws.html\n@@ -6366,0 +6404,2 @@\n+edu.ws\n+gov.ws\n@@ -6368,2 +6408,0 @@\n-gov.ws\n-edu.ws\n@@ -6404,1 +6442,1 @@\n-\/\/ http:\/\/cnnic.cn\/html\/Dir\/2005\/10\/11\/3218.htm\n+\/\/ https:\/\/www.cnnic.cn\/11\/192\/index.html\n@@ -6409,1 +6447,1 @@\n-\/\/ http:\/\/cnnic.cn\/html\/Dir\/2005\/10\/11\/3218.htm\n+\/\/ https:\/\/www.cnnic.com.cn\/AU\/MediaC\/Announcement\/201609\/t20160905_54470.htm\n@@ -6442,0 +6480,1 @@\n+個人.香港\n@@ -6443,1 +6482,0 @@\n-教育.香港\n@@ -6445,2 +6483,1 @@\n-個人.香港\n-網絡.香港\n+教育.香港\n@@ -6448,0 +6485,1 @@\n+網絡.香港\n@@ -6578,2 +6616,1 @@\n-пр.срб\n-орг.срб\n+ак.срб\n@@ -6582,0 +6619,2 @@\n+орг.срб\n+пр.срб\n@@ -6583,1 +6622,0 @@\n-ак.срб\n@@ -6598,1 +6636,1 @@\n-\/\/ xn--mgberp4a5d4a87g (\"AlSaudiah\", Arabic, variant)  : SA\n+\/\/ xn--mgberp4a5d4a87g (\"AlSaudiah\", Arabic, variant): SA\n@@ -6626,3 +6664,0 @@\n-ศึกษา.ไทย\n-ธุรกิจ.ไทย\n-รัฐบาล.ไทย\n@@ -6630,0 +6665,1 @@\n+ธุรกิจ.ไทย\n@@ -6631,0 +6667,2 @@\n+รัฐบาล.ไทย\n+ศึกษา.ไทย\n@@ -6638,1 +6676,1 @@\n-\/\/ http:\/\/www.twnic.net\/english\/dn\/dn_07a.htm\n+\/\/ https:\/\/twnic.tw\/dnservice_catag.php\n@@ -6662,1 +6700,0 @@\n-net.ye\n@@ -6664,0 +6701,1 @@\n+net.ye\n@@ -6666,1 +6704,1 @@\n-\/\/ za : https:\/\/www.zadna.org.za\/content\/page\/domain-information\/\n+\/\/ za : https:\/\/www.iana.org\/domains\/root\/db\/za.html\n@@ -6710,1 +6748,0 @@\n-\n@@ -6713,1 +6750,1 @@\n-\/\/ List of new gTLDs imported from https:\/\/www.icann.org\/resources\/registries\/gtlds\/v2\/gtlds.json on 2024-05-04T15:12:50Z\n+\/\/ List of new gTLDs imported from https:\/\/www.icann.org\/resources\/registries\/gtlds\/v2\/gtlds.json on 2025-04-30T15:19:32Z\n@@ -6943,1 +6980,1 @@\n-\/\/ asda : Wal-Mart Stores, Inc.\n+\/\/ asda : Asda Stores Limited\n@@ -7095,4 +7132,0 @@\n-\/\/ bentley : Bentley Motors Limited\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/bentley.html\n-bentley\n-\n@@ -7659,4 +7692,0 @@\n-\/\/ dabur : Dabur India Limited\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/dabur.html\n-dabur\n-\n@@ -8115,1 +8144,1 @@\n-\/\/ forum : Fegistry, LLC\n+\/\/ forum : Waterford Limited\n@@ -8155,1 +8184,1 @@\n-\/\/ fun : Radix Technologies Inc.\n+\/\/ fun : Radix Technologies Inc SEZC\n@@ -8395,1 +8424,1 @@\n-\/\/ hdfc : HOUSING DEVELOPMENT FINANCE CORPORATION LIMITED\n+\/\/ hdfc : HDFC BANK LIMITED\n@@ -8399,1 +8428,1 @@\n-\/\/ hdfcbank : HDFC Bank Limited\n+\/\/ hdfcbank : HDFC BANK LIMITED\n@@ -8487,1 +8516,1 @@\n-\/\/ host : Radix Technologies Inc.\n+\/\/ host : Radix Technologies Inc SEZC\n@@ -8727,4 +8756,0 @@\n-\/\/ kerrylogistics : Kerry Trading Co. Limited\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/kerrylogistics.html\n-kerrylogistics\n-\n@@ -8811,4 +8836,0 @@\n-\/\/ lancaster : LANCASTER\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/lancaster.html\n-lancaster\n-\n@@ -8927,4 +8948,0 @@\n-\/\/ lipsy : Lipsy Ltd\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/lipsy.html\n-lipsy\n-\n@@ -8979,1 +8996,1 @@\n-\/\/ love : Merchant Law Group LLP\n+\/\/ love : Waterford Limited\n@@ -9027,1 +9044,1 @@\n-\/\/ man : MAN SE\n+\/\/ man : MAN Truck & Bus SE\n@@ -9063,1 +9080,1 @@\n-\/\/ mattel : Mattel Sites, Inc.\n+\/\/ mattel : Mattel IT Services, Inc.\n@@ -9107,0 +9124,4 @@\n+\/\/ merck : Merck Registry Holdings, Inc.\n+\/\/ https:\/\/www.iana.org\/domains\/root\/db\/merck.html\n+merck\n+\n@@ -9231,4 +9252,0 @@\n-\/\/ natura : NATURA COSMÉTICOS S.A.\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/natura.html\n-natura\n-\n@@ -9323,1 +9340,1 @@\n-\/\/ norton : NortonLifeLock Inc.\n+\/\/ norton : Gen Digital Inc.\n@@ -9331,1 +9348,1 @@\n-\/\/ nowruz : Asia Green IT System Bilgisayar San. ve Tic. Ltd. Sti.\n+\/\/ nowruz\n@@ -9399,1 +9416,1 @@\n-\/\/ online : Radix Technologies Inc.\n+\/\/ online : Radix Technologies Inc SEZC\n@@ -9455,1 +9472,1 @@\n-\/\/ pars : Asia Green IT System Bilgisayar San. ve Tic. Ltd. Sti.\n+\/\/ pars\n@@ -9523,1 +9540,1 @@\n-\/\/ pictet : Pictet Europe S.A.\n+\/\/ pictet : Banque Pictet & Cie SA\n@@ -9603,1 +9620,1 @@\n-\/\/ press : Radix Technologies Inc.\n+\/\/ press : Radix Technologies Inc SEZC\n@@ -9691,1 +9708,1 @@\n-\/\/ realty : Internet Naming Company LLC\n+\/\/ realty : Waterford Limited\n@@ -10007,4 +10024,0 @@\n-\/\/ shaw : Shaw Cablesystems G.P.\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/shaw.html\n-shaw\n-\n@@ -10015,1 +10028,1 @@\n-\/\/ shia : Asia Green IT System Bilgisayar San. ve Tic. Ltd. Sti.\n+\/\/ shia\n@@ -10055,1 +10068,1 @@\n-\/\/ site : Radix Technologies Inc.\n+\/\/ site : Radix Technologies Inc SEZC\n@@ -10067,1 +10080,1 @@\n-\/\/ sky : Sky International AG\n+\/\/ sky : Sky UK Limited\n@@ -10135,1 +10148,1 @@\n-\/\/ space : Radix Technologies Inc.\n+\/\/ space : Radix Technologies Inc SEZC\n@@ -10187,1 +10200,1 @@\n-\/\/ store : Radix Technologies Inc.\n+\/\/ store : Radix Technologies Inc SEZC\n@@ -10291,1 +10304,1 @@\n-\/\/ tci : Asia Green IT System Bilgisayar San. ve Tic. Ltd. Sti.\n+\/\/ tci\n@@ -10303,1 +10316,1 @@\n-\/\/ tech : Radix Technologies Inc.\n+\/\/ tech : Radix Technologies Inc SEZC\n@@ -10487,1 +10500,1 @@\n-\/\/ uno : Radix Technologies Inc.\n+\/\/ uno : Radix Technologies Inc SEZC\n@@ -10503,1 +10516,1 @@\n-\/\/ vana : Internet Naming Company LLC\n+\/\/ vana : D3 Registry LLC\n@@ -10651,1 +10664,1 @@\n-\/\/ website : Radix Technologies Inc.\n+\/\/ website : Radix Technologies Inc SEZC\n@@ -10775,1 +10788,1 @@\n-\/\/ xn--3ds443g : TLD REGISTRY LIMITED OY\n+\/\/ xn--3ds443g : Beijing TLD Registry Technology Limited\n@@ -10999,1 +11012,1 @@\n-\/\/ xn--mgbt3dhd : Asia Green IT System Bilgisayar San. ve Tic. Ltd. Sti.\n+\/\/ xn--mgbt3dhd\n@@ -11131,1 +11144,1 @@\n-\/\/ yandex : Yandex Europe B.V.\n+\/\/ yandex : YANDEX, LLC\n@@ -11183,1 +11196,0 @@\n-\n@@ -11185,0 +11197,1 @@\n+\n@@ -11186,0 +11199,1 @@\n+\n@@ -11188,1 +11202,17 @@\n-\/\/ 12CHARS: https:\/\/12chars.com\n+\/\/ .KRD : https:\/\/nic.krd\n+co.krd\n+edu.krd\n+\n+\/\/ .pl domains (grandfathered)\n+art.pl\n+gliwice.pl\n+krakow.pl\n+poznan.pl\n+wroc.pl\n+zakopane.pl\n+\n+\/\/ .US\n+\/\/ Submitted by Ed Moore <Ed.Moore@lib.de.us>\n+lib.de.us\n+\n+\/\/ 12CHARS : https:\/\/12chars.com\n@@ -11200,1 +11230,1 @@\n-\/\/ 611coin : https:\/\/611project.org\/\n+\/\/ 611 blockchain domain name system : https:\/\/611project.net\/\n@@ -11203,4 +11233,0 @@\n-\/\/ AAA workspace : https:\/\/aaa.vodka\n-\/\/ Submitted by Kirill Rezraf <admin@aaa.vodka>\n-aaa.vodka\n-\n@@ -11212,8 +11238,0 @@\n-\/\/ Aaron Marais' Gitlab pages: https:\/\/lab.aaronleem.co.za\n-\/\/ Submitted by Aaron Marais <its_me@aaronleem.co.za>\n-graphox.us\n-\n-\/\/ accesso Technology Group, plc. : https:\/\/accesso.com\/\n-\/\/ Submitted by accesso Team <accessoecommerce@accesso.com>\n-*.devcdnaccesso.com\n-\n@@ -11224,1 +11242,1 @@\n-\/\/ ActiveTrail: https:\/\/www.activetrail.biz\/\n+\/\/ ActiveTrail : https:\/\/www.activetrail.biz\/\n@@ -11232,0 +11250,7 @@\n+\/\/ addr.tools : https:\/\/addr.tools\/\n+\/\/ Submitted by Brian Shea <publicsuffixlist@addr.tools>\n+myaddr.dev\n+myaddr.io\n+dyn.addr.tools\n+myaddr.tools\n+\n@@ -11248,0 +11273,4 @@\n+\/\/ Africa.com Web Solutions Ltd : https:\/\/registry.africa.com\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+africa.com\n+\n@@ -11258,2 +11287,3 @@\n-\/\/ Aiven: https:\/\/aiven.io\/\n-\/\/ Submitted by Etienne Stalmans <security@aiven.io>\n+\/\/ Aiven : https:\/\/aiven.io\/\n+\/\/ Submitted by Aiven Security Team <security+appdomains@aiven.io>\n+aiven.app\n@@ -11289,0 +11319,4 @@\n+\/\/ Alibaba Cloud API Gateway\n+\/\/ Submitted by Alibaba Cloud Security <cloud_product_security_team@alibaba-inc.com>\n+alibabacloudcs.com\n+\n@@ -11293,1 +11327,1 @@\n-\/\/ Altervista: https:\/\/www.altervista.org\n+\/\/ Altervista : https:\/\/www.altervista.org\n@@ -11311,1 +11345,1 @@\n-\/\/ Reference: 9e37648f-a66c-4655-9ab1-5981f8737197\n+\/\/ Reference: 6a4f5a95-8c7d-4077-a7af-9cf1abec0a53\n@@ -11325,0 +11359,1 @@\n+execute-api.ap-southeast-5.amazonaws.com\n@@ -11353,1 +11388,1 @@\n-\/\/ Reference: 09588633-91fe-49d8-b4e7-ec36496d11f3\n+\/\/ Reference: eb4652f0-20f0-43f5-b323-e6cc6ae02ad7\n@@ -11355,0 +11390,1 @@\n+auth.ap-east-1.amazoncognito.com\n@@ -11364,0 +11400,1 @@\n+auth.ap-southeast-5.amazoncognito.com\n@@ -11365,0 +11402,1 @@\n+auth.ca-west-1.amazoncognito.com\n@@ -11381,0 +11419,1 @@\n+auth-fips.us-gov-east-1.amazoncognito.com\n@@ -11390,0 +11429,1 @@\n+*.compute.amazonaws.com.cn\n@@ -11392,1 +11432,0 @@\n-*.compute.amazonaws.com.cn\n@@ -11500,1 +11539,1 @@\n-\/\/ Reference: 87f24ece-a77e-40e8-bb4a-f6b74fe9f975\n+\/\/ Reference: f5ea5d0a-ec6a-4f23-ac1c-553fbff13f5c\n@@ -11507,0 +11546,1 @@\n+*.ap-northeast-3.airflow.amazonaws.com\n@@ -11508,0 +11548,1 @@\n+*.ap-south-2.airflow.amazonaws.com\n@@ -11510,0 +11551,2 @@\n+*.ap-southeast-3.airflow.amazonaws.com\n+*.ap-southeast-4.airflow.amazonaws.com\n@@ -11511,0 +11554,1 @@\n+*.ca-west-1.airflow.amazonaws.com\n@@ -11512,0 +11556,1 @@\n+*.eu-central-2.airflow.amazonaws.com\n@@ -11514,0 +11559,1 @@\n+*.eu-south-2.airflow.amazonaws.com\n@@ -11517,0 +11563,2 @@\n+*.il-central-1.airflow.amazonaws.com\n+*.me-central-1.airflow.amazonaws.com\n@@ -11526,1 +11574,1 @@\n-\/\/ Reference: cd5c8b3a-67b7-4b40-9236-c87ce81a3d10\n+\/\/ Reference: ada5c9df-55e1-4195-a1ce-732d6c81e357\n@@ -11584,0 +11632,1 @@\n+s3-website.dualstack.ap-south-2.amazonaws.com\n@@ -11604,0 +11653,1 @@\n+s3-website.dualstack.ap-southeast-3.amazonaws.com\n@@ -11610,0 +11660,1 @@\n+s3-website.dualstack.ap-southeast-4.amazonaws.com\n@@ -11614,0 +11665,8 @@\n+s3.dualstack.ap-southeast-5.amazonaws.com\n+s3-accesspoint.dualstack.ap-southeast-5.amazonaws.com\n+s3-website.dualstack.ap-southeast-5.amazonaws.com\n+s3.ap-southeast-5.amazonaws.com\n+s3-accesspoint.ap-southeast-5.amazonaws.com\n+s3-deprecated.ap-southeast-5.amazonaws.com\n+s3-object-lambda.ap-southeast-5.amazonaws.com\n+s3-website.ap-southeast-5.amazonaws.com\n@@ -11634,0 +11693,1 @@\n+s3-object-lambda.ca-west-1.amazonaws.com\n@@ -11644,0 +11704,1 @@\n+s3-website.dualstack.eu-central-2.amazonaws.com\n@@ -11663,0 +11724,1 @@\n+s3-website.dualstack.eu-south-2.amazonaws.com\n@@ -11690,0 +11752,1 @@\n+s3-website.dualstack.il-central-1.amazonaws.com\n@@ -11696,0 +11759,1 @@\n+s3-website.dualstack.me-central-1.amazonaws.com\n@@ -11764,0 +11828,1 @@\n+s3-website.dualstack.us-east-2.amazonaws.com\n@@ -11878,1 +11943,1 @@\n-\/\/ Reference: 69c723d9-6e1a-4bff-a203-48eecd203183\n+\/\/ Reference: 475f237e-ab88-4041-9f41-7cfccdf66aeb\n@@ -11890,0 +11955,1 @@\n+studio.eu-central-2.sagemaker.aws\n@@ -11911,0 +11977,5 @@\n+\/\/ Amazon SageMaker with MLflow\n+\/\/ Submited by: AWS Security <psl-maintainers@amazon.com>\n+\/\/ Reference: c19f92b3-a82a-452d-8189-831b572eea7e\n+*.experiments.sagemaker.aws\n+\n@@ -11927,2 +11998,2 @@\n-\/\/ Reference: 5ecce854-c033-4fc4-a755-1a9916d9a9bb\n-*.amplifyapp.com\n+\/\/ Reference: c35bed18-6f4f-424f-9298-5756f2f7d72b\n+amplifyapp.com\n@@ -12057,0 +12128,13 @@\n+\/\/ AWS Transfer Family web apps\n+\/\/ Submitted by AWS Security <psl-maintainers@amazon.com>\n+\/\/ Reference: 67e9cfe6-ac57-49c7-b197-6652711c8e8d\n+transfer-webapp.ap-northeast-1.on.aws\n+transfer-webapp.ap-southeast-1.on.aws\n+transfer-webapp.ap-southeast-2.on.aws\n+transfer-webapp.eu-central-1.on.aws\n+transfer-webapp.eu-north-1.on.aws\n+transfer-webapp.eu-west-1.on.aws\n+transfer-webapp.us-east-1.on.aws\n+transfer-webapp.us-east-2.on.aws\n+transfer-webapp.us-west-2.on.aws\n+\n@@ -12065,5 +12149,0 @@\n-\/\/ Amune : https:\/\/amune.org\/\n-\/\/ Submitted by Team Amune <cert@amune.org>\n-t3l3p0rt.net\n-tele.amune.org\n-\n@@ -12074,1 +12153,1 @@\n-\/\/ Apis Networks: https:\/\/apisnetworks.com\n+\/\/ Apis Networks : https:\/\/apisnetworks.com\n@@ -12091,0 +12170,5 @@\n+\/\/ Appwrite : https:\/\/appwrite.io\n+\/\/ Submitted by Steven Nguyen <security@appwrite.io>\n+appwrite.global\n+*.appwrite.run\n+\n@@ -12099,0 +12183,4 @@\n+\/\/ ArvanCloud EdgeCompute\n+\/\/ Submitted by ArvanCloud CDN <cdn@arvancloud.ir>\n+arvanedge.ir\n+\n@@ -12128,4 +12216,0 @@\n-\/\/ Autocode : https:\/\/autocode.com\n-\/\/ Submitted by Jacob Lee <jacob@autocode.com>\n-autocode.dev\n-\n@@ -12146,1 +12230,1 @@\n-\/\/ AZ.pl sp. z.o.o: https:\/\/az.pl\n+\/\/ AZ.pl sp. z.o.o : https:\/\/az.pl\n@@ -12154,4 +12238,0 @@\n-\/\/ backplane : https:\/\/www.backplane.io\n-\/\/ Submitted by Anthony Voutas <anthony@backplane.io>\n-backplaneapp.io\n-\n@@ -12162,11 +12242,0 @@\n-\/\/ University of Banja Luka : https:\/\/unibl.org\n-\/\/ Domains for Republic of Srpska administrative entity.\n-\/\/ Submitted by Marko Ivanovic <kormang@hotmail.rs>\n-rs.ba\n-\n-\/\/ Banzai Cloud\n-\/\/ Submitted by Janos Matyas <info@banzaicloud.com>\n-*.banzai.cloud\n-app.banzaicloud.io\n-*.backyards.banzaicloud.io\n-\n@@ -12198,8 +12267,0 @@\n-\/\/ BetaInABox\n-\/\/ Submitted by Adrian <adrian@betainabox.com>\n-betainabox.com\n-\n-\/\/ University of Bielsko-Biala regional domain: http:\/\/dns.bielsko.pl\/\n-\/\/ Submitted by Marcin <dns@ath.bielsko.pl>\n-bielsko.pl\n-\n@@ -12222,0 +12283,4 @@\n+\/\/ Block, Inc. : https:\/\/block.xyz\n+\/\/ Submitted by Jonathan Boice <security@block.xyz>\n+square.site\n+\n@@ -12249,0 +12314,3 @@\n+brave.app\n+*.s.brave.app\n+brave.io\n@@ -12260,0 +12328,10 @@\n+\/\/ BRS Media : https:\/\/brsmedia.com\/\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+radio.am\n+radio.fm\n+\n+\/\/ Bubble : https:\/\/bubble.io\/\n+\/\/ Submitted by Merlin Zhao <devops@bubble.io>\n+cdn.bubble.io\n+bubbleapps.io\n+\n@@ -12270,4 +12348,0 @@\n-\/\/ callidomus : https:\/\/www.callidomus.com\/\n-\/\/ Submitted by Marcus Popp <admin@callidomus.com>\n-mycd.eu\n-\n@@ -12289,1 +12363,15 @@\n-\/\/ CentralNic : http:\/\/www.centralnic.com\/names\/domains\n+\/\/ CDDO : https:\/\/www.gov.uk\/guidance\/get-an-api-domain-on-govuk\n+\/\/ Submitted by Jamie Tanna <jamie.tanna@digital.cabinet-office.gov.uk>\n+api.gov.uk\n+\n+\/\/ CDN77.com : http:\/\/www.cdn77.com\n+\/\/ Submitted by Jan Krpes <jan.krpes@cdn77.com>\n+cdn77-storage.com\n+rsc.contentproxy9.cz\n+r.cdn77.net\n+cdn77-ssl.net\n+c.cdn77.org\n+rsc.cdn77.org\n+ssl.origin.cdn77-secure.org\n+\n+\/\/ CentralNic : https:\/\/teaminternet.com\/\n@@ -12291,1 +12379,1 @@\n-ae.org\n+za.bz\n@@ -12294,2 +12382,0 @@\n-com.de\n-com.se\n@@ -12298,3 +12384,0 @@\n-gb.net\n-hu.net\n-jp.net\n@@ -12305,1 +12388,0 @@\n-se.net\n@@ -12307,1 +12389,0 @@\n-uk.net\n@@ -12309,1 +12390,0 @@\n-za.bz\n@@ -12311,0 +12391,8 @@\n+com.de\n+gb.net\n+hu.net\n+jp.net\n+se.net\n+uk.net\n+ae.org\n+com.se\n@@ -12312,12 +12400,3 @@\n-\/\/ No longer operated by CentralNic, these entries should be adopted and\/or removed by current operators\n-\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n-ar.com\n-hu.com\n-kr.com\n-no.com\n-qc.com\n-uy.com\n-\n-\/\/ Africa.com Web Solutions Ltd : https:\/\/registry.africa.com\n-\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n-africa.com\n+\/\/ Cityhost LLC : https:\/\/cityhost.ua\n+\/\/ Submitted by Maksym Rivtin <support@cityhost.net.ua>\n+cx.ua\n@@ -12325,3 +12404,4 @@\n-\/\/ iDOT Services Limited : http:\/\/www.domain.gr.com\n-\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n-gr.com\n+\/\/ Civilized Discourse Construction Kit, Inc. : https:\/\/www.discourse.org\/\n+\/\/ Submitted by Rishabh Nambiar & Michael Brown <team@discourse.org>\n+discourse.group\n+discourse.team\n@@ -12329,4 +12409,8 @@\n-\/\/ Radix FZC : http:\/\/domains.in.net\n-\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n-in.net\n-web.in\n+\/\/ Clerk : https:\/\/www.clerk.dev\n+\/\/ Submitted by Colin Sidoti <systems@clerk.dev>\n+clerk.app\n+clerkstage.app\n+*.lcl.dev\n+*.lclstage.dev\n+*.stg.dev\n+*.stgstage.dev\n@@ -12334,46 +12418,6 @@\n-\/\/ US REGISTRY LLC : http:\/\/us.org\n-\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n-us.org\n-\n-\/\/ co.com Registry, LLC : https:\/\/registry.co.com\n-\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n-co.com\n-\n-\/\/ Roar Domains LLC : https:\/\/roar.basketball\/\n-\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n-aus.basketball\n-nz.basketball\n-\n-\/\/ BRS Media : https:\/\/brsmedia.com\/\n-\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n-radio.am\n-radio.fm\n-\n-\/\/ c.la : http:\/\/www.c.la\/\n-c.la\n-\n-\/\/ certmgr.org : https:\/\/certmgr.org\n-\/\/ Submitted by B. Blechschmidt <hostmaster@certmgr.org>\n-certmgr.org\n-\n-\/\/ Cityhost LLC  : https:\/\/cityhost.ua\n-\/\/ Submitted by Maksym Rivtin <support@cityhost.net.ua>\n-cx.ua\n-\n-\/\/ Civilized Discourse Construction Kit, Inc. : https:\/\/www.discourse.org\/\n-\/\/ Submitted by Rishabh Nambiar & Michael Brown <team@discourse.org>\n-discourse.group\n-discourse.team\n-\n-\/\/ Clever Cloud : https:\/\/www.clever-cloud.com\/\n-\/\/ Submitted by Quentin Adam <noc@clever-cloud.com>\n-cleverapps.io\n-\n-\/\/ Clerk : https:\/\/www.clerk.dev\n-\/\/ Submitted by Colin Sidoti <systems@clerk.dev>\n-clerk.app\n-clerkstage.app\n-*.lcl.dev\n-*.lclstage.dev\n-*.stg.dev\n-*.stgstage.dev\n+\/\/ Clever Cloud : https:\/\/www.clever-cloud.com\/\n+\/\/ Submitted by Quentin Adam <noc@clever-cloud.com>\n+cleverapps.cc\n+*.services.clever-cloud.com\n+cleverapps.io\n+cleverapps.tech\n@@ -12385,0 +12429,27 @@\n+\/\/ Cloud DNS Ltd : http:\/\/www.cloudns.net\n+\/\/ Submitted by Aleksander Hristov <noc@cloudns.net> & Boyan Peychev <boyan@cloudns.net>\n+cloudns.asia\n+cloudns.be\n+cloud-ip.biz\n+cloudns.biz\n+cloudns.cc\n+cloudns.ch\n+cloudns.cl\n+cloudns.club\n+dnsabr.com\n+ip-ddns.com\n+cloudns.cx\n+cloudns.eu\n+cloudns.in\n+cloudns.info\n+ddns-ip.net\n+dns-cloud.net\n+dns-dynamic.net\n+cloudns.nz\n+cloudns.org\n+ip-dynamic.org\n+cloudns.ph\n+cloudns.pro\n+cloudns.pw\n+cloudns.us\n+\n@@ -12399,4 +12470,3 @@\n-\/\/ cloudControl : https:\/\/www.cloudcontrol.com\/\n-\/\/ Submitted by Tobias Wilken <tw@cloudcontrol.com>\n-cloudcontrolled.com\n-cloudcontrolapp.com\n+\/\/ Cloudbees, Inc. : https:\/\/www.cloudbees.com\/\n+\/\/ Submitted by Mohideen Shajith <jaas-sre-infra@cloudbees.com>\n+cloudbeesusercontent.io\n@@ -12416,0 +12486,5 @@\n+cloudflare.net\n+cdn.cloudflare.net\n+cdn.cloudflareanycast.net\n+cdn.cloudflarecn.net\n+cdn.cloudflareglobal.net\n@@ -12422,0 +12497,2 @@\n+lpg.objectstorage.ch\n+rma.objectstorage.ch\n@@ -12427,2 +12504,3 @@\n-\/\/ co.ca : http:\/\/registry.co.ca\/\n-co.ca\n+\/\/ CNPY : https:\/\/cnpy.gdn\n+\/\/ Submitted by Angelo Gladding <angelo@lahacker.net>\n+cnpy.gdn\n@@ -12434,36 +12512,2 @@\n-\/\/ i-registry s.r.o. : http:\/\/www.i-registry.cz\/\n-\/\/ Submitted by Martin Semrad <semrad@i-registry.cz>\n-co.cz\n-\n-\/\/ CDN77.com : http:\/\/www.cdn77.com\n-\/\/ Submitted by Jan Krpes <jan.krpes@cdn77.com>\n-cdn77-storage.com\n-rsc.contentproxy9.cz\n-cdn77-ssl.net\n-r.cdn77.net\n-ssl.origin.cdn77-secure.org\n-c.cdn77.org\n-rsc.cdn77.org\n-\n-\/\/ Cloud DNS Ltd : http:\/\/www.cloudns.net\n-\/\/ Submitted by Aleksander Hristov <noc@cloudns.net> & Boyan Peychev <boyan@cloudns.net>\n-cloudns.asia\n-cloudns.be\n-cloudns.biz\n-cloudns.cc\n-cloudns.ch\n-cloudns.cl\n-cloudns.club\n-dnsabr.com\n-cloudns.cx\n-cloudns.eu\n-cloudns.in\n-cloudns.info\n-dns-cloud.net\n-dns-dynamic.net\n-cloudns.nz\n-cloudns.org\n-cloudns.ph\n-cloudns.pro\n-cloudns.pw\n-cloudns.us\n+\/\/ co.ca : http:\/\/registry.co.ca\/\n+co.ca\n@@ -12471,3 +12515,3 @@\n-\/\/ CNPY : https:\/\/cnpy.gdn\n-\/\/ Submitted by Angelo Gladding <angelo@lahacker.net>\n-cnpy.gdn\n+\/\/ co.com Registry, LLC : https:\/\/registry.co.com\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+co.com\n@@ -12488,0 +12532,4 @@\n+\/\/ Cognition AI, Inc. : https:\/\/cognition.ai\n+\/\/ Submitted by Philip Papurt <domains@cognition.ai>\n+*.devinapps.com\n+\n@@ -12493,0 +12541,4 @@\n+\/\/ Contentful GmbH : https:\/\/www.contentful.com\n+\/\/ Submitted by Contentful Developer Experience Team <prd-ecosystem-dx@contentful.com>\n+ctfcloud.net\n+\n@@ -12495,0 +12547,2 @@\n+convex.app\n+convex.cloud\n@@ -12504,1 +12558,0 @@\n-test.ru\n@@ -12509,1 +12562,0 @@\n-dynamisches-dns.de\n@@ -12511,0 +12563,1 @@\n+dynamisches-dns.de\n@@ -12518,3 +12571,3 @@\n-\/\/ cPanel L.L.C. : https:\/\/www.cpanel.net\/\n-\/\/ Submitted by Dustin Scherer <public.suffix@cpanel.net>\n-*.cprapid.com\n+\/\/ Craft Docs Ltd : https:\/\/www.craft.do\/\n+\/\/ Submitted by Zsombor Fuszenecker <security@craft.do>\n+craft.me\n@@ -12534,22 +12587,3 @@\n-\/\/ Cupcake : https:\/\/cupcake.io\/\n-\/\/ Submitted by Jonathan Rudenberg <jonathan@cupcake.io>\n-cupcake.is\n-\n-\/\/ Curv UG : https:\/\/curv-labs.de\/\n-\/\/ Submitted by Marvin Wiesner <Marvin@curv-labs.de>\n-curv.dev\n-\n-\/\/ Customer OCI - Oracle Dyn https:\/\/cloud.oracle.com\/home https:\/\/dyn.com\/dns\/\n-\/\/ Submitted by Gregory Drake <support@dyn.com>\n-\/\/ Note: This is intended to also include customer-oci.com due to wildcards implicitly including the current label\n-*.customer-oci.com\n-*.oci.customer-oci.com\n-*.ocp.customer-oci.com\n-*.ocs.customer-oci.com\n-\n-\/\/ Cyclic Software : https:\/\/www.cyclic.sh\n-\/\/ Submitted by Kam Lasater <dns-admin@cyclic.sh>\n-cyclic.app\n-cyclic.cloud\n-cyclic-app.com\n-cyclic.co.in\n+\/\/ cyber_Folks S.A. : https:\/\/cyberfolks.pl\n+\/\/ Submitted by Bartlomiej Kida <security@cyberfolks.pl>\n+cfolks.pl\n@@ -12562,20 +12596,0 @@\n-\/\/ Danger Science Group: https:\/\/dangerscience.com\/\n-\/\/ Submitted by Skylar MacDonald <skylar@dangerscience.com>\n-fnwk.site\n-folionetwork.site\n-platform0.app\n-\n-\/\/ Daplie, Inc : https:\/\/daplie.com\n-\/\/ Submitted by AJ ONeal <aj@daplie.com>\n-daplie.me\n-localhost.daplie.me\n-\n-\/\/ Datto, Inc. : https:\/\/www.datto.com\/\n-\/\/ Submitted by Philipp Heckel <ph@datto.com>\n-dattolocal.com\n-dattorelay.com\n-dattoweb.com\n-mydatto.com\n-dattolocal.net\n-mydatto.net\n-\n@@ -12594,5 +12608,0 @@\n-\/\/ dapps.earth : https:\/\/dapps.earth\/\n-\/\/ Submitted by Daniil Burdakov <icqkill@gmail.com>\n-*.dapps.earth\n-*.bzz.dapps.earth\n-\n@@ -12613,3 +12622,20 @@\n-\/\/ DDNS5 : https:\/\/ddns5.com\n-\/\/ Submitted by Cameron Elliott <cameron@cameronelliott.com>\n-ddns5.com\n+\/\/ Datto, Inc. : https:\/\/www.datto.com\/\n+\/\/ Submitted by Philipp Heckel <ph@datto.com>\n+dattolocal.com\n+dattorelay.com\n+dattoweb.com\n+mydatto.com\n+dattolocal.net\n+mydatto.net\n+\n+\/\/ ddnss.de : https:\/\/www.ddnss.de\/\n+\/\/ Submitted by Robert Niedziela <webmaster@ddnss.de>\n+ddnss.de\n+dyn.ddnss.de\n+dyndns.ddnss.de\n+dyn-ip24.de\n+dyndns1.de\n+home-webserver.de\n+dyn.home-webserver.de\n+myhome-server.de\n+ddnss.org\n@@ -12621,0 +12647,5 @@\n+\/\/ Definima : http:\/\/www.definima.com\/\n+\/\/ Submitted by Maxence Bitterli <maxence@definima.com>\n+definima.io\n+definima.net\n+\n@@ -12625,0 +12656,1 @@\n+deno.net\n@@ -12630,1 +12662,1 @@\n-\/\/ Deta: https:\/\/www.deta.sh\/\n+\/\/ Deta : https:\/\/www.deta.sh\/\n@@ -12635,4 +12667,20 @@\n-\/\/ Diher Solutions : https:\/\/diher.solutions\n-\/\/ Submitted by Didi Hermawan <mail@diher.solutions>\n-*.rss.my.id\n-*.diher.solutions\n+\/\/ dhosting.pl Sp. z o.o. : https:\/\/dhosting.pl\/\n+\/\/ Submitted by Michal Kokoszkiewicz <bok@dhosting.pl>\n+dfirma.pl\n+dkonto.pl\n+you2.pl\n+\n+\/\/ DigitalOcean App Platform : https:\/\/www.digitalocean.com\/products\/app-platform\/\n+\/\/ Submitted by Braxton Huggins <psl-maintainers@digitalocean.com>\n+ondigitalocean.app\n+\n+\/\/ DigitalOcean Spaces : https:\/\/www.digitalocean.com\/products\/spaces\/\n+\/\/ Submitted by Robin H. Johnson <psl-maintainers@digitalocean.com>\n+*.digitaloceanspaces.com\n+\n+\/\/ DigitalPlat : https:\/\/www.digitalplat.org\/\n+\/\/ Submitted by Edward Hsing <contact@digitalplat.org>\n+qzz.io\n+us.kg\n+xx.kg\n+dpdns.org\n@@ -12645,1 +12693,1 @@\n-\/\/ DNS Africa Ltd https:\/\/dns.business\n+\/\/ DNS Africa Ltd : https:\/\/dns.business\n@@ -12670,0 +12718,4 @@\n+\/\/ Dreamyoungs, Inc. : https:\/\/durumis.com\n+\/\/ Submitted by Infra Team <infra@durumis.com>\n+durumis.com\n+\n@@ -12674,5 +12726,0 @@\n-\/\/ Drud Holdings, LLC. : https:\/\/www.drud.com\/\n-\/\/ Submitted by Kevin Bridges <kevin@drud.com>\n-drud.io\n-drud.us\n-\n@@ -12683,7 +12730,0 @@\n-\/\/ Bip : https:\/\/bip.sh\n-\/\/ Submitted by Joel Kennedy <joel@bip.sh>\n-bip.sh\n-\n-\/\/ bitbridge.net : Submitted by Craig Welch, abeliidev@gmail.com\n-bitbridge.net\n-\n@@ -12696,0 +12736,20 @@\n+dyndns.biz\n+for-better.biz\n+for-more.biz\n+for-some.biz\n+for-the.biz\n+selfip.biz\n+webhop.biz\n+ftpaccess.cc\n+game-server.cc\n+myphotos.cc\n+scrapping.cc\n+blogdns.com\n+cechire.com\n+dnsalias.com\n+dnsdojo.com\n+doesntexist.com\n+dontexist.com\n+doomdns.com\n+dyn-o-saur.com\n+dynalias.com\n@@ -12710,41 +12770,0 @@\n-dyndns.biz\n-dyndns.info\n-dyndns.org\n-dyndns.tv\n-at-band-camp.net\n-ath.cx\n-barrel-of-knowledge.info\n-barrell-of-knowledge.info\n-better-than.tv\n-blogdns.com\n-blogdns.net\n-blogdns.org\n-blogsite.org\n-boldlygoingnowhere.org\n-broke-it.net\n-buyshouses.net\n-cechire.com\n-dnsalias.com\n-dnsalias.net\n-dnsalias.org\n-dnsdojo.com\n-dnsdojo.net\n-dnsdojo.org\n-does-it.net\n-doesntexist.com\n-doesntexist.org\n-dontexist.com\n-dontexist.net\n-dontexist.org\n-doomdns.com\n-doomdns.org\n-dvrdns.org\n-dyn-o-saur.com\n-dynalias.com\n-dynalias.net\n-dynalias.org\n-dynathome.net\n-dyndns.ws\n-endofinternet.net\n-endofinternet.org\n-endoftheinternet.org\n@@ -12755,7 +12774,0 @@\n-for-better.biz\n-for-more.biz\n-for-our.info\n-for-some.biz\n-for-the.biz\n-forgot.her.name\n-forgot.his.name\n@@ -12765,1 +12777,0 @@\n-from-az.net\n@@ -12767,1 +12778,0 @@\n-from-co.net\n@@ -12780,1 +12790,0 @@\n-from-la.net\n@@ -12783,1 +12792,0 @@\n-from-me.org\n@@ -12796,1 +12804,0 @@\n-from-ny.net\n@@ -12814,4 +12821,0 @@\n-ftpaccess.cc\n-fuettertdasnetz.de\n-game-host.org\n-game-server.cc\n@@ -12819,2 +12822,0 @@\n-gets-it.net\n-go.dyndns.org\n@@ -12822,5 +12823,0 @@\n-gotdns.org\n-groks-the.info\n-groks-this.info\n-ham-radio-op.net\n-here-for-more.info\n@@ -12828,6 +12824,0 @@\n-hobby-site.org\n-home.dyndns.org\n-homedns.org\n-homeftp.net\n-homeftp.org\n-homeip.net\n@@ -12835,2 +12825,0 @@\n-homelinux.net\n-homelinux.org\n@@ -12838,2 +12826,0 @@\n-homeunix.net\n-homeunix.org\n@@ -12841,1 +12827,0 @@\n-in-the-band.net\n@@ -12845,1 +12830,0 @@\n-is-a-bruinsfan.org\n@@ -12847,1 +12831,0 @@\n-is-a-candidate.org\n@@ -12849,1 +12832,0 @@\n-is-a-celticsfan.org\n@@ -12851,2 +12833,0 @@\n-is-a-chef.net\n-is-a-chef.org\n@@ -12861,2 +12841,0 @@\n-is-a-geek.net\n-is-a-geek.org\n@@ -12867,1 +12845,0 @@\n-is-a-knight.org\n@@ -12872,1 +12849,0 @@\n-is-a-linux-user.org\n@@ -12878,1 +12854,0 @@\n-is-a-patsfan.org\n@@ -12885,1 +12860,0 @@\n-is-a-soxfan.org\n@@ -12897,1 +12871,0 @@\n-is-by.us\n@@ -12899,1 +12872,0 @@\n-is-found.org\n@@ -12906,1 +12878,0 @@\n-is-lost.org\n@@ -12908,1 +12879,0 @@\n-is-saved.org\n@@ -12911,5 +12881,0 @@\n-is-very-bad.org\n-is-very-evil.org\n-is-very-good.org\n-is-very-nice.org\n-is-very-sweet.org\n@@ -12918,2 +12883,0 @@\n-isa-geek.net\n-isa-geek.org\n@@ -12922,0 +12885,14 @@\n+likes-pie.com\n+likescandy.com\n+neat-url.com\n+saves-the-whales.com\n+selfip.com\n+sells-for-less.com\n+sells-for-u.com\n+servebbs.com\n+simple-url.com\n+space-to-rent.com\n+teaches-yoga.com\n+writesthisblog.com\n+ath.cx\n+fuettertdasnetz.de\n@@ -12924,4 +12901,0 @@\n-kicks-ass.net\n-kicks-ass.org\n-knowsitall.info\n-land-4-sale.us\n@@ -12930,2 +12903,48 @@\n-likes-pie.com\n-likescandy.com\n+traeumtgerade.de\n+barrel-of-knowledge.info\n+barrell-of-knowledge.info\n+dyndns.info\n+for-our.info\n+groks-the.info\n+groks-this.info\n+here-for-more.info\n+knowsitall.info\n+selfip.info\n+webhop.info\n+forgot.her.name\n+forgot.his.name\n+at-band-camp.net\n+blogdns.net\n+broke-it.net\n+buyshouses.net\n+dnsalias.net\n+dnsdojo.net\n+does-it.net\n+dontexist.net\n+dynalias.net\n+dynathome.net\n+endofinternet.net\n+from-az.net\n+from-co.net\n+from-la.net\n+from-ny.net\n+gets-it.net\n+ham-radio-op.net\n+homeftp.net\n+homeip.net\n+homelinux.net\n+homeunix.net\n+in-the-band.net\n+is-a-chef.net\n+is-a-geek.net\n+isa-geek.net\n+kicks-ass.net\n+office-on-the.net\n+podzone.net\n+scrapper-site.net\n+selfip.net\n+sells-it.net\n+servebbs.net\n+serveftp.net\n+thruhere.net\n+webhop.net\n@@ -12934,0 +12953,43 @@\n+shacknet.nu\n+blogdns.org\n+blogsite.org\n+boldlygoingnowhere.org\n+dnsalias.org\n+dnsdojo.org\n+doesntexist.org\n+dontexist.org\n+doomdns.org\n+dvrdns.org\n+dynalias.org\n+dyndns.org\n+go.dyndns.org\n+home.dyndns.org\n+endofinternet.org\n+endoftheinternet.org\n+from-me.org\n+game-host.org\n+gotdns.org\n+hobby-site.org\n+homedns.org\n+homeftp.org\n+homelinux.org\n+homeunix.org\n+is-a-bruinsfan.org\n+is-a-candidate.org\n+is-a-celticsfan.org\n+is-a-chef.org\n+is-a-geek.org\n+is-a-knight.org\n+is-a-linux-user.org\n+is-a-patsfan.org\n+is-a-soxfan.org\n+is-found.org\n+is-lost.org\n+is-saved.org\n+is-very-bad.org\n+is-very-evil.org\n+is-very-good.org\n+is-very-nice.org\n+is-very-sweet.org\n+isa-geek.org\n+kicks-ass.org\n@@ -12935,6 +12997,0 @@\n-mypets.ws\n-myphotos.cc\n-neat-url.com\n-office-on-the.net\n-on-the-web.tv\n-podzone.net\n@@ -12943,7 +12999,0 @@\n-saves-the-whales.com\n-scrapper-site.net\n-scrapping.cc\n-selfip.biz\n-selfip.com\n-selfip.info\n-selfip.net\n@@ -12951,3 +13000,0 @@\n-sells-for-less.com\n-sells-for-u.com\n-sells-it.net\n@@ -12955,2 +13001,0 @@\n-servebbs.com\n-servebbs.net\n@@ -12958,1 +13002,0 @@\n-serveftp.net\n@@ -12961,3 +13004,0 @@\n-shacknet.nu\n-simple-url.com\n-space-to-rent.com\n@@ -12965,7 +13005,0 @@\n-stuff-4-sale.us\n-teaches-yoga.com\n-thruhere.net\n-traeumtgerade.de\n-webhop.biz\n-webhop.info\n-webhop.net\n@@ -12973,0 +13006,3 @@\n+better-than.tv\n+dyndns.tv\n+on-the-web.tv\n@@ -12974,34 +13010,5 @@\n-writesthisblog.com\n-\n-\/\/ ddnss.de : https:\/\/www.ddnss.de\/\n-\/\/ Submitted by Robert Niedziela <webmaster@ddnss.de>\n-ddnss.de\n-dyn.ddnss.de\n-dyndns.ddnss.de\n-dyndns1.de\n-dyn-ip24.de\n-home-webserver.de\n-dyn.home-webserver.de\n-myhome-server.de\n-ddnss.org\n-\n-\/\/ Definima : http:\/\/www.definima.com\/\n-\/\/ Submitted by Maxence Bitterli <maxence@definima.com>\n-definima.net\n-definima.io\n-\n-\/\/ DigitalOcean App Platform : https:\/\/www.digitalocean.com\/products\/app-platform\/\n-\/\/ Submitted by Braxton Huggins <psl-maintainers@digitalocean.com>\n-ondigitalocean.app\n-\n-\/\/ DigitalOcean Spaces : https:\/\/www.digitalocean.com\/products\/spaces\/\n-\/\/ Submitted by Robin H. Johnson <psl-maintainers@digitalocean.com>\n-*.digitaloceanspaces.com\n-\n-\/\/ DigitalPlat : https:\/\/www.digitalplat.org\/\n-\/\/ Submitted by Edward Hsing <contact@digitalplat.org>\n-us.kg\n-\n-\/\/ dnstrace.pro : https:\/\/dnstrace.pro\/\n-\/\/ Submitted by Chris Partridge <chris@partridge.tech>\n-bci.dnstrace.pro\n+is-by.us\n+land-4-sale.us\n+stuff-4-sale.us\n+dyndns.ws\n+mypets.ws\n@@ -13027,1 +13034,0 @@\n-blogsite.xyz\n@@ -13046,0 +13052,8 @@\n+\/\/ eDirect Corp. : https:\/\/hosting.url.com.tw\/\n+\/\/ Submitted by C.S. chang <cschang@corp.url.com.tw>\n+twmail.cc\n+twmail.net\n+twmail.org\n+mymailer.com.tw\n+url.tw\n+\n@@ -13063,2 +13077,2 @@\n-\/\/ Enalean SAS: https:\/\/www.enalean.com\n-\/\/ Submitted by Thomas Cottier <thomas.cottier@enalean.com>\n+\/\/ Enalean SAS : https:\/\/www.enalean.com\n+\/\/ Submitted by Enalean Security Team <security@enalean.com>\n@@ -13068,2 +13082,2 @@\n-\/\/ Encoretivity AB: https:\/\/encore.dev\n-\/\/ Submitted by André Eriksson <andre@encore.dev>\n+\/\/ Encoretivity AB : https:\/\/encore.cloud\n+\/\/ Submitted by André Eriksson <security@encore.cloud>\n@@ -13072,5 +13086,1 @@\n-\n-\/\/ ECG Robotics, Inc: https:\/\/ecgrobotics.org\n-\/\/ Submitted by <frc1533@ecgrobotics.org>\n-onred.one\n-staging.onred.one\n+lp.dev\n@@ -13082,1 +13092,1 @@\n-\/\/ EU.org https:\/\/eu.org\/\n+\/\/ EU.org : https:\/\/eu.org\/\n@@ -13118,1 +13128,0 @@\n-mc.eu.org\n@@ -13128,1 +13137,0 @@\n-paris.eu.org\n@@ -13131,1 +13139,0 @@\n-q-a.eu.org\n@@ -13156,7 +13163,9 @@\n-\/\/ eDirect Corp. : https:\/\/hosting.url.com.tw\/\n-\/\/ Submitted by C.S. chang <cschang@corp.url.com.tw>\n-twmail.cc\n-twmail.net\n-twmail.org\n-mymailer.com.tw\n-url.tw\n+\/\/ Evervault : https:\/\/evervault.com\n+\/\/ Submitted by Hannah Neary <engineering@evervault.com>\n+relay.evervault.app\n+relay.evervault.dev\n+\n+\/\/ Expo : https:\/\/expo.dev\/\n+\/\/ Submitted by James Ide <psl@expo.dev>\n+expo.app\n+staging.expo.app\n@@ -13254,2 +13263,0 @@\n-fastlylb.net\n-map.fastlylb.net\n@@ -13263,0 +13270,2 @@\n+fastlylb.net\n+map.fastlylb.net\n@@ -13276,0 +13285,6 @@\n+\/\/ FearWorks Media Ltd. : https:\/\/fearworksmedia.co.uk\n+\/\/ Submitted by Keith Fairley <domains@fearworksmedia.co.uk>\n+conn.uk\n+copro.uk\n+hosp.uk\n+\n@@ -13277,1 +13292,1 @@\n-\/\/ submitted by Patrick Uiterwijk <puiterwijk@fedoraproject.org>\n+\/\/ Submitted by Patrick Uiterwijk <puiterwijk@fedoraproject.org>\n@@ -13284,6 +13299,0 @@\n-\/\/ FearWorks Media Ltd. : https:\/\/fearworksmedia.co.uk\n-\/\/ submitted by Keith Fairley <domains@fearworksmedia.co.uk>\n-conn.uk\n-copro.uk\n-hosp.uk\n-\n@@ -13291,1 +13300,1 @@\n-\/\/ submitted by Koen Van Isterdael <k.vanisterdael@fermax.be>\n+\/\/ Submitted by Koen Van Isterdael <k.vanisterdael@fermax.be>\n@@ -13298,0 +13307,5 @@\n+\/\/ Figma : https:\/\/www.figma.com\n+\/\/ Submitted by Nick Frost <psl@figma.com>\n+figma.site\n+preview.site\n+\n@@ -13301,6 +13315,0 @@\n-filegear-au.me\n-filegear-de.me\n-filegear-gb.me\n-filegear-ie.me\n-filegear-jp.me\n-filegear-sg.me\n@@ -13312,8 +13320,0 @@\n-\/\/ Firewebkit : https:\/\/www.firewebkit.com\n-\/\/ Submitted by Majid Qureshi <mqureshi@amrayn.com>\n-fireweb.app\n-\n-\/\/ FLAP : https:\/\/www.flap.cloud\n-\/\/ Submitted by Louis Chemineau <louis@chmn.me>\n-flap.id\n-\n@@ -13322,1 +13322,0 @@\n-onflashdrive.app\n@@ -13325,0 +13324,4 @@\n+\/\/ Fleek Labs Inc : https:\/\/fleek.xyz\n+\/\/ Submitted by Parsa Ghadimi <dev@fleek.xyz>\n+on-fleek.app\n+\n@@ -13329,1 +13332,1 @@\n-\/\/ fly.io: https:\/\/fly.io\n+\/\/ fly.io : https:\/\/fly.io\n@@ -13332,1 +13335,0 @@\n-edgeapp.net\n@@ -13334,4 +13336,1 @@\n-\n-\/\/ Flynn : https:\/\/flynn.io\n-\/\/ Submitted by Jonathan Rudenberg <jonathan@flynn.io>\n-flynnhosting.net\n+edgeapp.net\n@@ -13344,0 +13343,4 @@\n+\/\/ FoundryLabs, Inc : https:\/\/e2b.dev\/\n+\/\/ Submitted by Jiri Sveceny <security@e2b.dev>\n+e2b.app\n+\n@@ -13354,9 +13357,1 @@\n-\/\/ Frusky MEDIA&PR : https:\/\/www.frusky.de\n-\/\/ Submitted by Victor Pupynin <hallo@frusky.de>\n-*.frusky.de\n-\n-\/\/ RavPage : https:\/\/www.ravpage.co.il\n-\/\/ Submitted by Roni Horowitz <roni@responder.co.il>\n-ravpage.co.il\n-\n-\/\/ Frederik Braun https:\/\/frederik-braun.com\n+\/\/ Frederik Braun : https:\/\/frederik-braun.com\n@@ -13364,1 +13359,1 @@\n-0e.vc\n+*.0e.vc\n@@ -13383,0 +13378,4 @@\n+\/\/ Frusky MEDIA&PR : https:\/\/www.frusky.de\n+\/\/ Submitted by Victor Pupynin <hallo@frusky.de>\n+*.frusky.de\n+\n@@ -13387,1 +13386,1 @@\n-\/\/ Future Versatile Group. ：https:\/\/www.fvg-on.net\/\n+\/\/ Future Versatile Group. : https:\/\/www.fvg-on.net\/\n@@ -13422,0 +13421,2 @@\n+campaign.gov.uk\n+service.gov.uk\n@@ -13429,6 +13430,0 @@\n-campaign.gov.uk\n-service.gov.uk\n-\n-\/\/ CDDO : https:\/\/www.gov.uk\/guidance\/get-an-api-domain-on-govuk\n-\/\/ Submitted by Jamie Tanna <jamie.tanna@digital.cabinet-office.gov.uk>\n-api.gov.uk\n@@ -13445,1 +13440,0 @@\n-lab.ms\n@@ -13448,7 +13442,1 @@\n-\/\/ Getlocalcert: https:\/\/www.getlocalcert.net\n-\/\/ Submitted by Robert Alexander <support@getlocalcert.net>\n-localcert.net\n-localhostcert.net\n-corpnet.work\n-\n-\/\/ GignoSystemJapan: http:\/\/gsj.bz\n+\/\/ GignoSystemJapan : http:\/\/gsj.bz\n@@ -13464,1 +13452,1 @@\n-\/\/ GitLab, Inc.\n+\/\/ GitLab, Inc. : https:\/\/about.gitlab.com\/\n@@ -13468,1 +13456,1 @@\n-\/\/ Gitplac.si - https:\/\/gitplac.si\n+\/\/ Gitplac.si : https:\/\/gitplac.si\n@@ -13600,13 +13588,0 @@\n-\/\/ GOV.UK Platform as a Service : https:\/\/www.cloud.service.gov.uk\/\n-\/\/ Submitted by Tom Whitwell <gov-uk-paas-support@digital.cabinet-office.gov.uk>\n-cloudapps.digital\n-london.cloudapps.digital\n-\n-\/\/ GOV.UK Pay : https:\/\/www.payments.service.gov.uk\/\n-\/\/ Submitted by Richard Baker <richard.baker@digital.cabinet-office.gov.uk>\n-pymnt.uk\n-\n-\/\/ GlobeHosting, Inc.\n-\/\/ Submitted by Zoltan Egresi <egresi@globehosting.com>\n-ro.im\n-\n@@ -13618,1 +13593,2 @@\n-\/\/ Submitted by Eduardo Vela <evn@google.com>\n+\/\/ Submitted by Shannon McCabe <public-suffix-editors@google.com>\n+*.hosted.app\n@@ -13624,0 +13600,1 @@\n+blogspot.com\n@@ -13628,1 +13605,0 @@\n-publishproxy.com\n@@ -13636,74 +13612,0 @@\n-blogspot.ae\n-blogspot.al\n-blogspot.am\n-blogspot.ba\n-blogspot.be\n-blogspot.bg\n-blogspot.bj\n-blogspot.ca\n-blogspot.cf\n-blogspot.ch\n-blogspot.cl\n-blogspot.co.at\n-blogspot.co.id\n-blogspot.co.il\n-blogspot.co.ke\n-blogspot.co.nz\n-blogspot.co.uk\n-blogspot.co.za\n-blogspot.com\n-blogspot.com.ar\n-blogspot.com.au\n-blogspot.com.br\n-blogspot.com.by\n-blogspot.com.co\n-blogspot.com.cy\n-blogspot.com.ee\n-blogspot.com.eg\n-blogspot.com.es\n-blogspot.com.mt\n-blogspot.com.ng\n-blogspot.com.tr\n-blogspot.com.uy\n-blogspot.cv\n-blogspot.cz\n-blogspot.de\n-blogspot.dk\n-blogspot.fi\n-blogspot.fr\n-blogspot.gr\n-blogspot.hk\n-blogspot.hr\n-blogspot.hu\n-blogspot.ie\n-blogspot.in\n-blogspot.is\n-blogspot.it\n-blogspot.jp\n-blogspot.kr\n-blogspot.li\n-blogspot.lt\n-blogspot.lu\n-blogspot.md\n-blogspot.mk\n-blogspot.mr\n-blogspot.mx\n-blogspot.my\n-blogspot.nl\n-blogspot.no\n-blogspot.pe\n-blogspot.pt\n-blogspot.qa\n-blogspot.re\n-blogspot.ro\n-blogspot.rs\n-blogspot.ru\n-blogspot.se\n-blogspot.sg\n-blogspot.si\n-blogspot.sk\n-blogspot.sn\n-blogspot.td\n-blogspot.tw\n-blogspot.ug\n-blogspot.vn\n@@ -13715,1 +13617,10 @@\n-\/\/ Government of the Netherlands: https:\/\/www.government.nl\n+\/\/ GOV.UK Pay : https:\/\/www.payments.service.gov.uk\/\n+\/\/ Submitted by Richard Baker <richard.baker@digital.cabinet-office.gov.uk>\n+pymnt.uk\n+\n+\/\/ GOV.UK Platform as a Service : https:\/\/www.cloud.service.gov.uk\/\n+\/\/ Submitted by Tom Whitwell <gov-uk-paas-support@digital.cabinet-office.gov.uk>\n+cloudapps.digital\n+london.cloudapps.digital\n+\n+\/\/ Government of the Netherlands : https:\/\/www.government.nl\n@@ -13719,0 +13630,4 @@\n+\/\/ Grafana Labs : https:\/\/grafana.com\/\n+\/\/ Submitted by Platform Engineering <info@grafana.com>\n+grafana-dev.net\n+\n@@ -13723,4 +13638,0 @@\n-\/\/ Group 53, LLC : https:\/\/www.group53.com\n-\/\/ Submitted by Tyler Todd <noc@nova53.net>\n-awsmppl.com\n-\n@@ -13732,12 +13643,3 @@\n-\/\/ Hakaran group: http:\/\/hakaran.cz\n-\/\/ Submitted by Arseniy Sokolov <security@hakaran.cz>\n-fin.ci\n-free.hr\n-caa.li\n-ua.rs\n-conf.se\n-\n-\/\/ Handshake : https:\/\/handshake.org\n-\/\/ Submitted by Mike Damm <md@md.vc>\n-hs.zone\n-hs.run\n+\/\/ Häkkinen.fi : https:\/\/www.häkkinen.fi\/\n+\/\/ Submitted by Eero Häkkinen <Eero+psl@Häkkinen.fi>\n+häkkinen.fi\n@@ -13753,2 +13655,11 @@\n-\/\/ Heilbronn University of Applied Sciences - Faculty Informatics (GitLab Pages): https:\/\/www.hs-heilbronn.de\n-\/\/ Submitted by Richard Zowalla <mi-admin@hs-heilbronn.de>\n+\/\/ Hatena Co., Ltd. : https:\/\/hatena.co.jp\n+\/\/ Submitted by Masato Nakamura <blog-developers@hatena.ne.jp>\n+hatenablog.com\n+hatenadiary.com\n+hateblo.jp\n+hatenablog.jp\n+hatenadiary.jp\n+hatenadiary.org\n+\n+\/\/ Heilbronn University of Applied Sciences - Faculty Informatics (GitLab Pages) : https:\/\/www.hs-heilbronn.de\n+\/\/ Submitted by Richard Zowalla <it-admin@hs-heilbronn.de>\n@@ -13756,0 +13667,5 @@\n+pages-research.it.hs-heilbronn.de\n+\n+\/\/ HeiyuSpace : https:\/\/lazycat.cloud\n+\/\/ Submitted by Xia Bin <admin@lazycat.cloud>\n+heiyu.space\n@@ -13767,1 +13683,1 @@\n-\/\/ Submitted by Tom Maher <tmaher@heroku.com>\n+\/\/ Submitted by Shumon Huque <public-dns@salesforce.com>\n@@ -13769,1 +13685,5 @@\n-herokussl.com\n+\n+\/\/ Heyflow : https:\/\/www.heyflow.com\n+\/\/ Submitted by Mirko Nitschke <tech@heyflow.com>\n+heyflow.page\n+heyflow.site\n@@ -13778,1 +13698,1 @@\n-\/\/ home.pl S.A.: https:\/\/home.pl\n+\/\/ home.pl S.A. : https:\/\/home.pl\n@@ -13788,4 +13708,0 @@\n-\/\/ Hong Kong Productivity Council: https:\/\/www.hkpc.org\/\n-\/\/ Submitted by SECaaS Team <summchan@hkpc.org>\n-secaas.hk\n-\n@@ -13796,1 +13712,0 @@\n-\n@@ -13801,0 +13716,6 @@\n+biz.ng\n+co.biz.ng\n+dl.biz.ng\n+go.biz.ng\n+lg.biz.ng\n+on.biz.ng\n@@ -13806,2 +13727,1 @@\n-edu.scot\n-sch.so\n+plc.ng\n@@ -13809,5 +13729,1 @@\n-\/\/ HostFly : https:\/\/www.ie.ua\n-\/\/ Submitted by Bohdan Dub <support@hostfly.com.ua>\n-ie.ua\n-\n-\/\/ HostyHosting (hostyhosting.com)\n+\/\/ HostyHosting : https:\/\/hostyhosting.com\n@@ -13816,3 +13732,16 @@\n-\/\/ Häkkinen.fi\n-\/\/ Submitted by Eero Häkkinen <Eero+psl@Häkkinen.fi>\n-häkkinen.fi\n+\/\/ Hugging Face : https:\/\/huggingface.co\n+\/\/ Submitted by Eliott Coyac <website@huggingface.co>\n+hf.space\n+static.hf.space\n+\n+\/\/ Hypernode B.V. : https:\/\/www.hypernode.com\/\n+\/\/ Submitted by Cipriano Groenendal <security@nl.team.blue>\n+hypernode.io\n+\n+\/\/ I-O DATA DEVICE, INC. : http:\/\/www.iodata.com\/\n+\/\/ Submitted by Yuji Minagawa <domains-admin@iodata.jp>\n+iobb.net\n+\n+\/\/ i-registry s.r.o. : http:\/\/www.i-registry.cz\/\n+\/\/ Submitted by Martin Semrad <semrad@i-registry.cz>\n+co.cz\n@@ -13825,0 +13754,4 @@\n+\/\/ iDOT Services Limited : http:\/\/www.domain.gr.com\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+gr.com\n+\n@@ -13829,1 +13762,1 @@\n-\/\/ iliad italia: https:\/\/www.iliad.it\n+\/\/ iliad italia : https:\/\/www.iliad.it\n@@ -13834,6 +13767,1 @@\n-\/\/ Impertrix Solutions : <https:\/\/impertrixcdn.com>\n-\/\/ Submitted by Zhixiang Zhao <csuite@impertrix.com>\n-impertrixcdn.com\n-impertrix.com\n-\n-\/\/ Incsub, LLC: https:\/\/incsub.com\/\n+\/\/ Incsub, LLC : https:\/\/incsub.com\/\n@@ -13854,2 +13782,0 @@\n-in-dsl.net\n-in-dsl.org\n@@ -13857,0 +13783,1 @@\n+in-dsl.net\n@@ -13858,0 +13785,1 @@\n+in-dsl.org\n@@ -13860,0 +13788,4 @@\n+\/\/ Inferno Communications : https:\/\/inferno.co.uk\n+\/\/ Submitted by Connor McFarlane <noc@inferno.co.uk>\n+oninferno.net\n+\n@@ -13902,1 +13834,1 @@\n-\/\/ Internet-Pro, LLP: https:\/\/netangels.ru\/\n+\/\/ Internet-Pro, LLP : https:\/\/netangels.ru\/\n@@ -13906,0 +13838,18 @@\n+\/\/ Inventor Services : https:\/\/inventor.gg\/\n+\/\/ Submitted by Inventor Team <psl@inventor.gg>\n+botdash.app\n+botdash.dev\n+botdash.gg\n+botdash.net\n+botda.sh\n+botdash.xyz\n+\n+\/\/ IONOS SE : https:\/\/www.ionos.com\/\n+\/\/ IONOS Group SE : https:\/\/www.ionos-group.com\/\n+\/\/ Submitted by Henrik Willert <security@ionos.com>\n+apps-1and1.com\n+live-website.com\n+apps-1and1.net\n+websitebuilder.online\n+app-ionos.space\n+\n@@ -13910,0 +13860,6 @@\n+\/\/ IPFS Project : https:\/\/ipfs.tech\/\n+\/\/ Submitted by Interplanetary Shipyard <domains@ipshipyard.com>\n+*.inbrowser.dev\n+*.dweb.link\n+*.inbrowser.link\n+\n@@ -13914,4 +13870,0 @@\n-\/\/ is-a.dev : https:\/\/www.is-a.dev\n-\/\/ Submitted by William Harrison <admin@maintainers.is-a.dev>\n-is-a.dev\n-\n@@ -13922,0 +13874,8 @@\n+\/\/ is-a-good.dev : https:\/\/is-a-good.dev\n+\/\/ Submitted by William Harrison <webmaster@is-a-good.dev>\n+is-a-good.dev\n+\n+\/\/ is-a.dev : https:\/\/is-a.dev\n+\/\/ Submitted by William Harrison <security@is-a.dev>\n+is-a.dev\n+\n@@ -13931,4 +13891,0 @@\n-\/\/ I-O DATA DEVICE, INC. : http:\/\/www.iodata.com\/\n-\/\/ Submitted by Yuji Minagawa <domains-admin@iodata.jp>\n-iobb.net\n-\n@@ -13939,1 +13895,0 @@\n-mycloud.by\n@@ -13961,1 +13916,0 @@\n-amscompute.com\n@@ -13969,1 +13923,0 @@\n-kilatiron.com\n@@ -13972,1 +13925,0 @@\n-lon.wafaicloud.com\n@@ -13984,1 +13936,0 @@\n-cloud-fr1.unispace.io\n@@ -13986,1 +13937,0 @@\n-cloud.jelastic.open.tim.it\n@@ -13988,1 +13938,0 @@\n-upaas.kazteleport.kz\n@@ -13995,1 +13944,0 @@\n-faststacks.net\n@@ -14005,1 +13953,0 @@\n-jelastic.tsukaeru.net\n@@ -14009,1 +13956,0 @@\n-jelastic.regruhosting.ru\n@@ -14032,1 +13978,0 @@\n-jouwweb.site\n@@ -14034,0 +13979,1 @@\n+jouwweb.site\n@@ -14037,1 +13983,0 @@\n-*.triton.zone\n@@ -14039,0 +13984,1 @@\n+*.triton.zone\n@@ -14049,4 +13995,0 @@\n-\/\/ Kakao : https:\/\/www.kakaocorp.com\/\n-\/\/ Submitted by JaeYoong Lee <cec@kakaocorp.com>\n-ktistory.com\n-\n@@ -14057,0 +13999,5 @@\n+\/\/ Katholieke Universiteit Leuven : https:\/\/www.kuleuven.be\n+\/\/ Submitted by Abuse KU Leuven <abuse@kuleuven.be>\n+ezproxy.kuleuven.be\n+kuleuven.cloud\n+\n@@ -14070,1 +14017,1 @@\n-\/\/ KoobinEvent, SL: https:\/\/www.koobin.com\n+\/\/ KoobinEvent, SL : https:\/\/www.koobin.com\n@@ -14074,0 +14021,5 @@\n+\/\/ Krellian Ltd. : https:\/\/krellian.com\n+\/\/ Submitted by Ben Francis <ben@krellian.com>\n+webthings.io\n+krellian.net\n+\n@@ -14078,13 +14030,3 @@\n-\/\/ Katholieke Universiteit Leuven: https:\/\/www.kuleuven.be\n-\/\/ Submitted by Abuse KU Leuven <abuse@kuleuven.be>\n-kuleuven.cloud\n-ezproxy.kuleuven.be\n-\n-\/\/ .KRD : http:\/\/nic.krd\/data\/krd\/Registration%20Policy.pdf\n-co.krd\n-edu.krd\n-\n-\/\/ Krellian Ltd. : https:\/\/krellian.com\n-\/\/ Submitted by Ben Francis <ben@krellian.com>\n-krellian.net\n-webthings.io\n+\/\/ Laravel Holdings, Inc. : https:\/\/laravel.com\n+\/\/ Submitted by André Valentin <security@laravel.com>\n+laravel.cloud\n@@ -14104,3 +14046,8 @@\n-\/\/ Lelux.fi : https:\/\/lelux.fi\/\n-\/\/ Submitted by Lelux Admin <publisuffix@lelux.site>\n-lelux.site\n+\/\/ Liara : https:\/\/liara.ir\n+\/\/ Submitted by Amirhossein Badinloo <info@liara.ir>\n+liara.run\n+iran.liara.run\n+\n+\/\/ libp2p project : https:\/\/libp2p.io\n+\/\/ Submitted by Interplanetary Shipyard <domains@ipshipyard.com>\n+libp2p.direct\n@@ -14122,1 +14069,1 @@\n-\/\/ linkyard ldt: https:\/\/www.linkyard.ch\/\n+\/\/ linkyard ldt : https:\/\/www.linkyard.ch\/\n@@ -14124,1 +14071,0 @@\n-linkyard.cloud\n@@ -14126,0 +14072,1 @@\n+linkyard.cloud\n@@ -14138,0 +14085,5 @@\n+\/\/ Listen53 : https:\/\/www.l53.net\n+\/\/ Submitted by Gerry Keh <biz@l53.net>\n+filegear-sg.me\n+ggff.net\n+\n@@ -14142,3 +14094,17 @@\n-\/\/ localzone.xyz\n-\/\/ Submitted by Kenny Niehage <hello@yahe.sh>\n-localzone.xyz\n+\/\/ LocalCert : https:\/\/localcert.net\n+\/\/ Submitted by William Harrison <security@localcert.net>\n+localcert.net\n+\n+\/\/ Localtonet : https:\/\/localtonet.com\/\n+\/\/ Submitted by Burak Isleyici <support@localtonet.com>\n+localtonet.com\n+*.localto.net\n+\n+\/\/ Lodz University of Technology LODMAN regional domains : https:\/\/www.man.lodz.pl\/dns\n+\/\/ Submitted by Piotr Wilk <dns@man.lodz.pl>\n+lodz.pl\n+pabianice.pl\n+plock.pl\n+sieradz.pl\n+skierniewice.pl\n+zgierz.pl\n@@ -14154,0 +14120,4 @@\n+\/\/ Lõhmus Family, The : https:\/\/lohmus.me\/\n+\/\/ Submitted by Heiki Lõhmus <hostmaster@lohmus.me>\n+lohmus.me\n+\n@@ -14158,3 +14128,4 @@\n-\/\/ Lõhmus Family, The\n-\/\/ Submitted by Heiki Lõhmus <hostmaster at lohmus dot me>\n-lohmus.me\n+\/\/ Lovable : https:\/\/lovable.dev\n+\/\/ Submitted by Fabian Hedin <security@lovable.dev>\n+lovable.app\n+lovableproject.com\n@@ -14180,2 +14151,1 @@\n-barsy.co.uk\n-barsyonline.co.uk\n+barsy.club\n@@ -14184,1 +14154,0 @@\n-barsy.club\n@@ -14186,0 +14155,1 @@\n+barsy.dev\n@@ -14187,0 +14157,1 @@\n+barsy.gr\n@@ -14192,0 +14163,1 @@\n+barsyonline.menu\n@@ -14199,0 +14171,1 @@\n+barsy.rs\n@@ -14200,0 +14173,1 @@\n+barsyonline.shop\n@@ -14201,0 +14175,1 @@\n+barsy.store\n@@ -14203,0 +14178,7 @@\n+barsy.co.uk\n+barsyonline.co.uk\n+\n+\/\/ Luyani Inc. : https:\/\/luyani.com\/\n+\/\/ Submitted by Umut Gumeli <public-suffix-list@luyani.com>\n+luyani.app\n+luyani.net\n@@ -14208,5 +14190,0 @@\n-\/\/ May First - People Link : https:\/\/mayfirst.org\/\n-\/\/ Submitted by Jamie McClelland <info@mayfirst.org>\n-mayfirst.info\n-mayfirst.org\n-\n@@ -14217,3 +14194,11 @@\n-\/\/ Mail Transfer Platform : https:\/\/www.neupeer.com\n-\/\/ Submitted by Li Hui <lihui@neupeer.com>\n-cn.vu\n+\/\/ MathWorks : https:\/\/www.mathworks.com\/\n+\/\/ Submitted by Emily Reed <psl-maintainers@groups.mathworks.com>\n+matlab.cloud\n+modelscape.com\n+mwcloudnonprod.com\n+polyspace.com\n+\n+\/\/ May First - People Link : https:\/\/mayfirst.org\/\n+\/\/ Submitted by Jamie McClelland <info@mayfirst.org>\n+mayfirst.info\n+mayfirst.org\n@@ -14221,1 +14206,1 @@\n-\/\/ Maze Play: https:\/\/www.mazeplay.com\n+\/\/ Maze Play : https:\/\/www.mazeplay.com\n@@ -14225,4 +14210,0 @@\n-\/\/ mcpe.me : https:\/\/mcpe.me\n-\/\/ Submitted by Noa Heyl <hi@noa.dev>\n-mcpe.me\n-\n@@ -14233,1 +14214,0 @@\n-mcpre.ru\n@@ -14235,0 +14215,1 @@\n+mcpre.ru\n@@ -14245,0 +14226,4 @@\n+\/\/ MedusaJS, Inc : https:\/\/medusajs.com\/\n+\/\/ Submitted by Stevche Radevski <engineering@medusajs.com>\n+medusajs.app\n+\n@@ -14260,1 +14245,1 @@\n-\/\/ Submitted by Zdeněk Šustr <zdenek.sustr@cesnet.cz>\n+\/\/ Submitted by Zdeněk Šustr <zdenek.sustr@cesnet.cz> and Radim Janča <janca@cesnet.cz>\n@@ -14263,3 +14248,0 @@\n-\n-\/\/ MetaCentrum, CESNET z.s.p.o. : https:\/\/www.metacentrum.cz\/en\/\n-\/\/ Submitted by Radim Janča <janca@cesnet.cz>\n@@ -14283,0 +14265,1 @@\n+azure-mobile.net\n@@ -14285,2 +14268,0 @@\n-azurewebsites.net\n-azure-mobile.net\n@@ -14300,0 +14281,1 @@\n+azurewebsites.net\n@@ -14305,0 +14287,7 @@\n+\/\/ MikroTik : https:\/\/mikrotik.com\n+\/\/ Submitted by MikroTik SysAdmin Team <support@mikrotik.com>\n+routingthecloud.com\n+sn.mynetname.net\n+routingthecloud.net\n+routingthecloud.org\n+\n@@ -14309,7 +14298,8 @@\n-\/\/ Mintere : https:\/\/mintere.com\/\n-\/\/ Submitted by Ben Aubin <security@mintere.com>\n-mintere.site\n-\n-\/\/ MobileEducation, LLC : https:\/\/joinforte.com\n-\/\/ Submitted by Grayson Martin <grayson.martin@mobileeducation.us>\n-forte.id\n+\/\/ Mittwald CM Service GmbH & Co. KG : https:\/\/mittwald.de\n+\/\/ Submitted by Marco Rieger <security@mittwald.de>\n+mydbserver.com\n+webspaceconfig.de\n+mittwald.info\n+mittwaldserver.info\n+typo3server.info\n+project.space\n@@ -14321,4 +14311,0 @@\n-\/\/ Mozilla Corporation : https:\/\/mozilla.com\n-\/\/ Submitted by Ben Francis <bfrancis@mozilla.com>\n-mozilla-iot.org\n-\n@@ -14338,1 +14324,0 @@\n-customer.mythic-beasts.com\n@@ -14340,0 +14325,1 @@\n+customer.mythic-beasts.com\n@@ -14358,0 +14344,9 @@\n+o365.cloud.nospamproxy.com\n+\n+\/\/ Net libre : https:\/\/www.netlib.re\n+\/\/ Submitted by Philippe PITTOLI <security@netlib.re>\n+netlib.re\n+\n+\/\/ Netfy Domains : https:\/\/netfy.domains\n+\/\/ Submitted by Suranga Ranasinghe <security@mavicsoft.com>\n+netfy.app\n@@ -14367,0 +14362,8 @@\n+\/\/ NFSN, Inc. : https:\/\/www.NearlyFreeSpeech.NET\/\n+\/\/ Submitted by Jeff Wheelhouse <support@nearlyfreespeech.net>\n+nfshost.com\n+\n+\/\/ NFT.Storage : https:\/\/nft.storage\/\n+\/\/ Submitted by Vasco Santos <vasco.santos@protocol.ai> or <support@nft.storage>\n+ipfs.nftstorage.link\n+\n@@ -14388,1 +14391,1 @@\n-\/\/ Nicolaus Copernicus University in Torun - MSK TORMAN (https:\/\/www.man.torun.pl)\n+\/\/ Nicolaus Copernicus University in Torun - MSK TORMAN : https:\/\/www.man.torun.pl\n@@ -14396,3 +14399,87 @@\n-\/\/ NFSN, Inc. : https:\/\/www.NearlyFreeSpeech.NET\/\n-\/\/ Submitted by Jeff Wheelhouse <support@nearlyfreespeech.net>\n-nfshost.com\n+\/\/ No-IP.com : https:\/\/noip.com\/\n+\/\/ Submitted by Deven Reza <publicsuffixlist@noip.com>\n+mmafan.biz\n+myftp.biz\n+no-ip.biz\n+no-ip.ca\n+fantasyleague.cc\n+gotdns.ch\n+3utilities.com\n+blogsyte.com\n+ciscofreak.com\n+damnserver.com\n+ddnsking.com\n+ditchyourip.com\n+dnsiskinky.com\n+dynns.com\n+geekgalaxy.com\n+health-carereform.com\n+homesecuritymac.com\n+homesecuritypc.com\n+myactivedirectory.com\n+mysecuritycamera.com\n+myvnc.com\n+net-freaks.com\n+onthewifi.com\n+point2this.com\n+quicksytes.com\n+securitytactics.com\n+servebeer.com\n+servecounterstrike.com\n+serveexchange.com\n+serveftp.com\n+servegame.com\n+servehalflife.com\n+servehttp.com\n+servehumour.com\n+serveirc.com\n+servemp3.com\n+servep2p.com\n+servepics.com\n+servequake.com\n+servesarcasm.com\n+stufftoread.com\n+unusualperson.com\n+workisboring.com\n+dvrcam.info\n+ilovecollege.info\n+no-ip.info\n+brasilia.me\n+ddns.me\n+dnsfor.me\n+hopto.me\n+loginto.me\n+noip.me\n+webhop.me\n+bounceme.net\n+ddns.net\n+eating-organic.net\n+mydissent.net\n+myeffect.net\n+mymediapc.net\n+mypsx.net\n+mysecuritycamera.net\n+nhlfan.net\n+no-ip.net\n+pgafan.net\n+privatizehealthinsurance.net\n+redirectme.net\n+serveblog.net\n+serveminecraft.net\n+sytes.net\n+cable-modem.org\n+collegefan.org\n+couchpotatofries.org\n+hopto.org\n+mlbfan.org\n+myftp.org\n+mysecuritycamera.org\n+nflfan.org\n+no-ip.org\n+read-books.org\n+ufcfan.org\n+zapto.org\n+no-ip.co.uk\n+golffan.us\n+noip.us\n+pointto.us\n@@ -14400,3 +14487,3 @@\n-\/\/ NFT.Storage : https:\/\/nft.storage\/\n-\/\/ Submitted by Vasco Santos <vasco.santos@protocol.ai> or <support@nft.storage>\n-ipfs.nftstorage.link\n+\/\/ NodeArt : https:\/\/nodeart.io\n+\/\/ Submitted by Konstantin Nosov <Nosov@nodeart.io>\n+stage.nodeart.io\n@@ -14421,0 +14508,4 @@\n+\/\/ Notion Labs, Inc : https:\/\/www.notion.so\/\n+\/\/ Submitted by Jess Yao <trust-core-team@makenotion.com>\n+notion.site\n+\n@@ -14425,3 +14516,0 @@\n-n4t.co\n-001www.com\n-ddnslive.com\n@@ -14430,3 +14518,0 @@\n-16-b.it\n-32-b.it\n-64-b.it\n@@ -14443,1 +14528,0 @@\n-now-dns.top\n@@ -14446,2 +14530,0 @@\n-crafting.xyz\n-zapto.xyz\n@@ -14454,98 +14536,2 @@\n-\/\/ No-IP.com : https:\/\/noip.com\/\n-\/\/ Submitted by Deven Reza <publicsuffixlist@noip.com>\n-blogsyte.com\n-brasilia.me\n-cable-modem.org\n-ciscofreak.com\n-collegefan.org\n-couchpotatofries.org\n-damnserver.com\n-ddns.me\n-ditchyourip.com\n-dnsfor.me\n-dnsiskinky.com\n-dvrcam.info\n-dynns.com\n-eating-organic.net\n-fantasyleague.cc\n-geekgalaxy.com\n-golffan.us\n-health-carereform.com\n-homesecuritymac.com\n-homesecuritypc.com\n-hopto.me\n-ilovecollege.info\n-loginto.me\n-mlbfan.org\n-mmafan.biz\n-myactivedirectory.com\n-mydissent.net\n-myeffect.net\n-mymediapc.net\n-mypsx.net\n-mysecuritycamera.com\n-mysecuritycamera.net\n-mysecuritycamera.org\n-net-freaks.com\n-nflfan.org\n-nhlfan.net\n-no-ip.ca\n-no-ip.co.uk\n-no-ip.net\n-noip.us\n-onthewifi.com\n-pgafan.net\n-point2this.com\n-pointto.us\n-privatizehealthinsurance.net\n-quicksytes.com\n-read-books.org\n-securitytactics.com\n-serveexchange.com\n-servehumour.com\n-servep2p.com\n-servesarcasm.com\n-stufftoread.com\n-ufcfan.org\n-unusualperson.com\n-workisboring.com\n-3utilities.com\n-bounceme.net\n-ddns.net\n-ddnsking.com\n-gotdns.ch\n-hopto.org\n-myftp.biz\n-myftp.org\n-myvnc.com\n-no-ip.biz\n-no-ip.info\n-no-ip.org\n-noip.me\n-redirectme.net\n-servebeer.com\n-serveblog.net\n-servecounterstrike.com\n-serveftp.com\n-servegame.com\n-servehalflife.com\n-servehttp.com\n-serveirc.com\n-serveminecraft.net\n-servemp3.com\n-servepics.com\n-servequake.com\n-sytes.net\n-webhop.me\n-zapto.org\n-\n-\/\/ NodeArt : https:\/\/nodeart.io\n-\/\/ Submitted by Konstantin Nosov <Nosov@nodeart.io>\n-stage.nodeart.io\n-\n-\/\/ Nucleos Inc. : https:\/\/nucleos.com\n-\/\/ Submitted by Piotr Zduniak <piotr@nucleos.com>\n-pcloud.host\n-\n-\/\/ NYC.mn : http:\/\/www.information.nyc.mn\n-\/\/ Submitted by Matthew Brown <mattbrown@nyc.mn>\n+\/\/ NYC.mn : https:\/\/dot.nyc.mn\/\n+\/\/ Submitted by NYC.mn Subdomain Service <nyc.mn@mailfence.com>\n@@ -14555,1 +14541,1 @@\n-\/\/ Submitted by the prvcy.page Registry Team <psl@registry.prvcy.page>\n+\/\/ Submitted by the prvcy.page Registry Team <info@o3o.foundation>\n@@ -14558,0 +14544,4 @@\n+\/\/ Obl.ong : https:\/\/obl.ong\n+\/\/ Submitted by Reese Armstrong <team@obl.ong>\n+obl.ong\n+\n@@ -14560,0 +14550,1 @@\n+observablehq.cloud\n@@ -14562,5 +14553,1 @@\n-\/\/ Octopodal Solutions, LLC. : https:\/\/ulterius.io\/\n-\/\/ Submitted by Andrew Sampson <andrew@ulterius.io>\n-cya.gg\n-\n-\/\/ OMG.LOL : <https:\/\/omg.lol>\n+\/\/ OMG.LOL : https:\/\/omg.lol\n@@ -14574,1 +14561,1 @@\n-\/\/ OmniWe Limited: https:\/\/omniwe.com\n+\/\/ OmniWe Limited : https:\/\/omniwe.com\n@@ -14578,1 +14565,1 @@\n-\/\/ One.com: https:\/\/www.one.com\/\n+\/\/ One.com : https:\/\/www.one.com\/\n@@ -14580,8 +14567,0 @@\n-123hjemmeside.dk\n-123hjemmeside.no\n-123homepage.it\n-123kotisivu.fi\n-123minsida.se\n-123miweb.es\n-123paginaweb.pt\n-123siteweb.fr\n@@ -14589,1 +14568,0 @@\n-123webseite.de\n@@ -14591,0 +14569,1 @@\n+simplesite.com.br\n@@ -14592,0 +14571,8 @@\n+simplesite.com\n+123webseite.de\n+123hjemmeside.dk\n+123miweb.es\n+123kotisivu.fi\n+123siteweb.fr\n+simplesite.gr\n+123homepage.it\n@@ -14594,0 +14581,1 @@\n+123hjemmeside.no\n@@ -14595,3 +14583,0 @@\n-simplesite.com\n-simplesite.com.br\n-simplesite.gr\n@@ -14599,0 +14584,2 @@\n+123paginaweb.pt\n+123minsida.se\n@@ -14600,3 +14587,3 @@\n-\/\/ One Fold Media : http:\/\/www.onefoldmedia.com\/\n-\/\/ Submitted by Eddie Jones <eddie@onefoldmedia.com>\n-nid.io\n+\/\/ ONID : https:\/\/get.onid.ca\n+\/\/ Submitted by ONID Engineering Team <psl@onid.ca>\n+onid.ca\n@@ -14606,0 +14593,1 @@\n+is-a-fullstack.dev\n@@ -14619,1 +14607,7 @@\n-\/\/ OpenResearch GmbH: https:\/\/openresearch.com\/\n+\/\/ OpenHost : https:\/\/registry.openhost.uk\n+\/\/ Submitted by OpenHost Registry Team <support@openhost.uk>\n+16-b.it\n+32-b.it\n+64-b.it\n+\n+\/\/ OpenResearch GmbH : https:\/\/openresearch.com\/\n@@ -14627,0 +14621,11 @@\n+\/\/ Oracle Dyn : https:\/\/cloud.oracle.com\/home https:\/\/dyn.com\/dns\/\n+\/\/ Submitted by Gregory Drake <support@dyn.com>\n+\/\/ Note: This is intended to also include customer-oci.com due to wildcards implicitly including the current label\n+*.customer-oci.com\n+*.oci.customer-oci.com\n+*.ocp.customer-oci.com\n+*.ocs.customer-oci.com\n+*.oraclecloudapps.com\n+*.oraclegovcloudapps.com\n+*.oraclegovcloudapps.uk\n+\n@@ -14632,1 +14637,0 @@\n-\/\/ TLD Nic: http:\/\/nic.can.re - TLD Whois Server: whois.can.re\n@@ -14634,0 +14638,1 @@\n+\/\/ https:\/\/nic.can.re\n@@ -14636,2 +14641,2 @@\n-\/\/ Oursky Limited : https:\/\/authgear.com\/, https:\/\/skygear.io\/\n-\/\/ Submitted by Authgear Team <hello@authgear.com>, Skygear Developer <hello@skygear.io>\n+\/\/ Oursky Limited : https:\/\/authgear.com\/\n+\/\/ Submitted by Authgear Team <hello@authgear.com> & Skygear Developer <hello@skygear.io>\n@@ -14646,1 +14651,1 @@\n-\/\/ OVHcloud: https:\/\/ovhcloud.com\n+\/\/ OVHcloud : https:\/\/ovhcloud.com\n@@ -14648,1 +14653,0 @@\n-*.webpaas.ovh.net\n@@ -14650,0 +14654,1 @@\n+*.webpaas.ovh.net\n@@ -14651,1 +14656,1 @@\n-\/\/ OwnProvider GmbH: http:\/\/www.ownprovider.com\n+\/\/ OwnProvider GmbH : http:\/\/www.ownprovider.com\n@@ -14672,4 +14677,0 @@\n-\/\/ Pagefront : https:\/\/www.pagefronthq.com\/\n-\/\/ Submitted by Jason Kriss <jason@pagefronthq.com>\n-pagefrontapp.com\n-\n@@ -14680,0 +14681,5 @@\n+\/\/ Pantheon Systems, Inc. : https:\/\/pantheon.io\/\n+\/\/ Submitted by Gary Dylina <gary@pantheon.io>\n+gotpantheon.com\n+pantheonsite.io\n+\n@@ -14684,1 +14690,1 @@\n-\/\/ pcarrier.ca Software Inc: https:\/\/pcarrier.ca\/\n+\/\/ pcarrier.ca Software Inc : https:\/\/pcarrier.ca\/\n@@ -14688,0 +14694,1 @@\n+madethis.site\n@@ -14692,12 +14699,3 @@\n-\/\/ .pl domains (grandfathered)\n-art.pl\n-gliwice.pl\n-krakow.pl\n-poznan.pl\n-wroc.pl\n-zakopane.pl\n-\n-\/\/ Pantheon Systems, Inc. : https:\/\/pantheon.io\/\n-\/\/ Submitted by Gary Dylina <gary@pantheon.io>\n-pantheonsite.io\n-gotpantheon.com\n+\/\/ PE Ulyanov Kirill Sergeevich : https:\/\/airy.host\n+\/\/ Submitted by Kirill Ulyanov <k.ulyanov@airy.host>\n+lk3.ru\n@@ -14713,4 +14711,0 @@\n-\/\/ PE Ulyanov Kirill Sergeevich : https:\/\/airy.host\n-\/\/ Submitted by Kirill Ulyanov <k.ulyanov@airy.host>\n-lk3.ru\n-\n@@ -14731,1 +14725,1 @@\n-\/\/ Platter: https:\/\/platter.dev\n+\/\/ Platter : https:\/\/platter.dev\n@@ -14733,1 +14727,0 @@\n-platter-app.com\n@@ -14737,6 +14730,0 @@\n-\/\/ Plesk : https:\/\/www.plesk.com\/\n-\/\/ Submitted by Anton Akhtyamov <program-managers@plesk.com>\n-pdns.page\n-plesk.page\n-pleskns.com\n-\n@@ -14747,4 +14734,0 @@\n-\/\/ Port53 : https:\/\/port53.io\/\n-\/\/ Submitted by Maximilian Schieder <maxi@zeug.co>\n-dyn53.io\n-\n@@ -14766,2 +14749,2 @@\n-\/\/prequalifyme.today : https:\/\/prequalifyme.today\n-\/\/Submitted by DeepakTiwari deepak@ivylead.io\n+\/\/ prequalifyme.today : https:\/\/prequalifyme.today\n+\/\/ Submitted by DeepakTiwari deepak@ivylead.io\n@@ -14778,3 +14761,10 @@\n-\/\/ Protocol Labs : https:\/\/protocol.ai\/\n-\/\/ Submitted by Michael Burns <noc@protocol.ai>\n-*.dweb.link\n+\/\/ PROJECT ELIV : https:\/\/eliv.kr\/\n+\/\/ Submitted by PROJECT ELIV Domain Team <team@eliv.kr>\n+c01.kr\n+eliv-dns.kr\n+mmv.kr\n+vki.kr\n+\n+\/\/ project-study : https:\/\/project-study.com\n+\/\/ Submitted by yumenewa <admin@project-study.com>\n+dev.project-study.com\n@@ -14786,43 +14776,4 @@\n-\/\/ Publication Presse Communication SARL : https:\/\/ppcom.fr\n-\/\/ Submitted by Yaacov Akiba Slama <admin@chirurgiens-dentistes-en-france.fr>\n-chirurgiens-dentistes-en-france.fr\n-byen.site\n-\n-\/\/ pubtls.org: https:\/\/www.pubtls.org\n-\/\/ Submitted by Kor Nielsen <kor@pubtls.org>\n-pubtls.org\n-\n-\/\/ PythonAnywhere LLP: https:\/\/www.pythonanywhere.com\n-\/\/ Submitted by Giles Thomas <giles@pythonanywhere.com>\n-pythonanywhere.com\n-eu.pythonanywhere.com\n-\n-\/\/ QOTO, Org.\n-\/\/ Submitted by Jeffrey Phillips Freeman <jeffrey.freeman@qoto.org>\n-qoto.io\n-\n-\/\/ Qualifio : https:\/\/qualifio.com\/\n-\/\/ Submitted by Xavier De Cock <xdecock@gmail.com>\n-qualifioapp.com\n-\n-\/\/ Quality Unit: https:\/\/qualityunit.com\n-\/\/ Submitted by Vasyl Tsalko <vtsalko@qualityunit.com>\n-ladesk.com\n-\n-\/\/ QuickBackend: https:\/\/www.quickbackend.com\n-\/\/ Submitted by Dani Biro <dani@pymet.com>\n-qbuser.com\n-\n-\/\/ Rad Web Hosting: https:\/\/radwebhosting.com\n-\/\/ Submitted by Scott Claeys <s.claeys@radwebhosting.com>\n-cloudsite.builders\n-myradweb.net\n-servername.us\n-\n-\/\/ Redgate Software: https:\/\/red-gate.com\n-\/\/ Submitted by Andrew Farries <andrew.farries@red-gate.com>\n-instances.spawn.cc\n-\n-\/\/ Redstar Consultants : https:\/\/www.redstarconsultants.com\/\n-\/\/ Submitted by Jons Slemmer <jons@redstarconsultants.com>\n-instantcloud.cn\n+\/\/ Publication Presse Communication SARL : https:\/\/ppcom.fr\n+\/\/ Submitted by Yaacov Akiba Slama <admin@chirurgiens-dentistes-en-france.fr>\n+chirurgiens-dentistes-en-france.fr\n+byen.site\n@@ -14830,3 +14781,8 @@\n-\/\/ Russian Academy of Sciences\n-\/\/ Submitted by Tech Support <support@rasnet.ru>\n-ras.ru\n+\/\/ pubtls.org : https:\/\/www.pubtls.org\n+\/\/ Submitted by Kor Nielsen <kor@pubtls.org>\n+pubtls.org\n+\n+\/\/ PythonAnywhere LLP : https:\/\/www.pythonanywhere.com\n+\/\/ Submitted by Giles Thomas <giles@pythonanywhere.com>\n+pythonanywhere.com\n+eu.pythonanywhere.com\n@@ -14835,1 +14791,1 @@\n-\/\/ Submitted by Daniel Dent (https:\/\/www.danieldent.com\/)\n+\/\/ Submitted by Daniel Dent : https:\/\/www.danieldent.com\/\n@@ -14852,0 +14808,16 @@\n+\/\/ QOTO, Org.\n+\/\/ Submitted by Jeffrey Phillips Freeman <jeffrey.freeman@qoto.org>\n+qoto.io\n+\n+\/\/ Qualifio : https:\/\/qualifio.com\/\n+\/\/ Submitted by Xavier De Cock <xdecock@gmail.com>\n+qualifioapp.com\n+\n+\/\/ Quality Unit : https:\/\/qualityunit.com\n+\/\/ Submitted by Vasyl Tsalko <vtsalko@qualityunit.com>\n+ladesk.com\n+\n+\/\/ QuickBackend : https:\/\/www.quickbackend.com\n+\/\/ Submitted by Dani Biro <dani@pymet.com>\n+qbuser.com\n+\n@@ -14866,3 +14838,15 @@\n-\/\/ Rakuten Games, Inc : https:\/\/dev.viberplay.io\n-\/\/ Submitted by Joshua Zhang <public-suffix@rgames.jp>\n-g.vbrplsbx.io\n+\/\/ Rad Web Hosting : https:\/\/radwebhosting.com\n+\/\/ Submitted by Scott Claeys <s.claeys@radwebhosting.com>\n+cloudsite.builders\n+myradweb.net\n+servername.us\n+\n+\/\/ Radix FZC : http:\/\/domains.in.net\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+web.in\n+in.net\n+\n+\/\/ Raidboxes GmbH : https:\/\/raidboxes.de\n+\/\/ Submitted by Auke Tembrink <hostmaster@raidboxes.de>\n+myrdbx.io\n+site.rb-hosting.io\n@@ -14872,1 +14856,0 @@\n-*.on-k3s.io\n@@ -14874,0 +14857,1 @@\n+*.on-k3s.io\n@@ -14876,0 +14860,4 @@\n+\/\/ RavPage : https:\/\/www.ravpage.co.il\n+\/\/ Submitted by Roni Horowitz <roni@responder.co.il>\n+ravpage.co.il\n+\n@@ -14878,0 +14866,1 @@\n+readthedocs-hosted.com\n@@ -14884,0 +14873,4 @@\n+\/\/ Redgate Software : https:\/\/red-gate.com\n+\/\/ Submitted by Andrew Farries <andrew.farries@red-gate.com>\n+instances.spawn.cc\n+\n@@ -14886,1 +14879,0 @@\n-app.render.com\n@@ -14888,0 +14880,1 @@\n+app.render.com\n@@ -14935,5 +14928,0 @@\n-\/\/ Revitalised Limited : http:\/\/www.revitalised.co.uk\n-\/\/ Submitted by Jack Price <jack@revitalised.co.uk>\n-wellbeingzone.eu\n-wellbeingzone.co.uk\n-\n@@ -14948,0 +14936,10 @@\n+\/\/ Roar Domains LLC : https:\/\/roar.basketball\/\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+aus.basketball\n+nz.basketball\n+\n+\/\/ ROBOT PAYMENT INC. : https:\/\/www.robotpayment.co.jp\/\n+\/\/ Submitted by Kentaro Takamori <takamori.kentaro@robotpayment.co.jp>\n+subsc-pay.com\n+subsc-pay.net\n+\n@@ -14956,1 +14954,7 @@\n-\/\/ Rusnames Limited: http:\/\/rusnames.ru\/\n+\/\/ Ruhr University Bochum : https:\/\/www.ruhr-uni-bochum.de\/\n+\/\/ Submitted by Andreas Jobs <noc@ruhr-uni-bochum.de>\n+rub.de\n+ruhr-uni-bochum.de\n+io.noc.ruhr-uni-bochum.de\n+\n+\/\/ Rusnames Limited : http:\/\/rusnames.ru\/\n@@ -14969,0 +14973,8 @@\n+\/\/ Russian Academy of Sciences\n+\/\/ Submitted by Tech Support <support@rasnet.ru>\n+ras.ru\n+\n+\/\/ Sakura Frp : https:\/\/www.natfrp.com\n+\/\/ Submitted by Bobo Liu <support@natfrp.cloud>\n+nyat.app\n+\n@@ -15019,2 +15031,2 @@\n-\/\/ Salesforce.com, Inc. https:\/\/salesforce.com\/\n-\/\/ Submitted by Michael Biven <mbiven@salesforce.com> and Aaron Romeo <aaron.romeo@salesforce.com>\n+\/\/ Salesforce.com, Inc. : https:\/\/salesforce.com\/\n+\/\/ Submitted by Salesforce Public Suffix List Team <public-suffix-list@salesforce.com>\n@@ -15025,0 +15037,8 @@\n+*.d.crm.dev\n+*.w.crm.dev\n+*.wa.crm.dev\n+*.wb.crm.dev\n+*.wc.crm.dev\n+*.wd.crm.dev\n+*.we.crm.dev\n+*.wf.crm.dev\n@@ -15032,1 +15052,0 @@\n-logoip.de\n@@ -15034,0 +15053,1 @@\n+logoip.de\n@@ -15070,1 +15090,1 @@\n-\/\/ Scottish Government: https:\/\/www.gov.scot\n+\/\/ Scottish Government : https:\/\/www.gov.scot\n@@ -15104,0 +15124,4 @@\n+\/\/ Sendmsg : https:\/\/www.sendmsg.co.il\n+\/\/ Submitted by Assaf Stern <domains@comstar.co.il>\n+minisite.ms\n+\n@@ -15108,7 +15132,3 @@\n-\/\/ Sendmsg: https:\/\/www.sendmsg.co.il\n-\/\/ Submitted by Assaf Stern <domains@comstar.co.il>\n-minisite.ms\n-\n-\/\/ Service Magnet : https:\/\/myservicemagnet.com\n-\/\/ Submitted by Dave Sanders <dave@myservicemagnet.com>\n-magnet.page\n+\/\/ Servebolt AS : https:\/\/servebolt.com\n+\/\/ Submitted by Daniel Kjeserud <cloudops@servebolt.com>\n+servebolt.cloud\n@@ -15122,0 +15142,4 @@\n+\/\/ Shanghai Accounting Society : https:\/\/www.sasf.org.cn\n+\/\/ Submitted by Information Administration <info@sasf.org.cn>\n+as.sh.cn\n+\n@@ -15126,9 +15150,0 @@\n-\/\/ Shift Crypto AG : https:\/\/shiftcrypto.ch\n-\/\/ Submitted by alex <alex@shiftcrypto.ch>\n-shiftcrypto.dev\n-shiftcrypto.io\n-\n-\/\/ ShiftEdit : https:\/\/shiftedit.net\/\n-\/\/ Submitted by Adam Jimenez <adam@shiftcreate.com>\n-shiftedit.io\n-\n@@ -15149,0 +15164,1 @@\n+shopware.shop\n@@ -15167,5 +15183,3 @@\n-\/\/ Skyhat : http:\/\/www.skyhat.io\n-\/\/ Submitted by Shante Adam <shante@skyhat.io>\n-bounty-full.com\n-alpha.bounty-full.com\n-beta.bounty-full.com\n+\/\/ Small Technology Foundation : https:\/\/small-tech.org\n+\/\/ Submitted by Aral Balkan <aral@small-tech.org>\n+small-web.org\n@@ -15173,1 +15187,1 @@\n-\/\/ Smallregistry by Promopixel SARL: https:\/\/www.smallregistry.net\n+\/\/ Smallregistry by Promopixel SARL : https:\/\/www.smallregistry.net\n@@ -15187,4 +15201,0 @@\n-\/\/ Small Technology Foundation : https:\/\/small-tech.org\n-\/\/ Submitted by Aral Balkan <aral@small-tech.org>\n-small-web.org\n-\n@@ -15206,44 +15216,3 @@\n-\/\/ SourceHut : https:\/\/sourcehut.org\n-\/\/ Submitted by Drew DeVault <sir@cmpwn.com>\n-srht.site\n-\n-\/\/ StackBlitz : https:\/\/stackblitz.com\n-\/\/ Submitted by Dominic Elm <hello@stackblitz.com>\n-w-corp-staticblitz.com\n-w-credentialless-staticblitz.com\n-w-staticblitz.com\n-\n-\/\/ Stackhero : https:\/\/www.stackhero.io\n-\/\/ Submitted by Adrien Gillon <adrien+public-suffix-list@stackhero.io>\n-stackhero-network.com\n-\n-\/\/ STACKIT : https:\/\/www.stackit.de\/en\/\n-\/\/ Submitted by STACKIT-DNS Team (Simon Stier) <stackit-dns@mail.schwarz>\n-runs.onstackit.cloud\n-stackit.gg\n-stackit.rocks\n-stackit.run\n-stackit.zone\n-\n-\/\/ Staclar : https:\/\/staclar.com\n-\/\/ Submitted by Q Misell <q@staclar.com>\n-musician.io\n-\/\/ Submitted by Matthias Merkel <matthias.merkel@staclar.com>\n-novecore.site\n-\n-\/\/ staticland : https:\/\/static.land\n-\/\/ Submitted by Seth Vincent <sethvincent@gmail.com>\n-static.land\n-dev.static.land\n-sites.static.land\n-\n-\/\/ Storebase : https:\/\/www.storebase.io\n-\/\/ Submitted by Tony Schirmer <tony@storebase.io>\n-storebase.store\n-\n-\/\/ Strategic System Consulting (eApps Hosting): https:\/\/www.eapps.com\/\n-\/\/ Submitted by Alex Oancea <aoancea@cloudscale365.com>\n-vps-host.net\n-atl.jelastic.vps-host.net\n-njs.jelastic.vps-host.net\n-ric.jelastic.vps-host.net\n+\/\/ Software Consulting Michal Zalewski : https:\/\/www.mafelo.com\n+\/\/ Submitted by Michal Zalewski <security@mafelo.com>\n+mafelo.net\n@@ -15255,0 +15224,4 @@\n+\/\/ SourceHut : https:\/\/sourcehut.org\n+\/\/ Submitted by Drew DeVault <sir@cmpwn.com>\n+srht.site\n+\n@@ -15260,3 +15233,3 @@\n-\/\/ SpaceKit : https:\/\/www.spacekit.io\/\n-\/\/ Submitted by Reza Akhavan <spacekit.io@gmail.com>\n-spacekit.io\n+\/\/ SparrowHost : https:\/\/sparrowhost.in\/\n+\/\/ Submitted by Anant Pandey <info@sparrowhost.in>\n+ind.mom\n@@ -15264,1 +15237,1 @@\n-\/\/ SpeedPartner GmbH: https:\/\/www.speedpartner.de\/\n+\/\/ SpeedPartner GmbH : https:\/\/www.speedpartner.de\/\n@@ -15290,0 +15263,24 @@\n+\/\/ StackBlitz : https:\/\/stackblitz.com\n+\/\/ Submitted by Dominic Elm <hello@stackblitz.com>\n+w-corp-staticblitz.com\n+w-credentialless-staticblitz.com\n+w-staticblitz.com\n+\n+\/\/ Stackhero : https:\/\/www.stackhero.io\n+\/\/ Submitted by Adrien Gillon <adrien+public-suffix-list@stackhero.io>\n+stackhero-network.com\n+\n+\/\/ STACKIT GmbH & Co. KG : https:\/\/www.stackit.de\/en\/\n+\/\/ Submitted by STACKIT-DNS Team (Simon Stier) <dns@stackit.cloud>\n+runs.onstackit.cloud\n+stackit.gg\n+stackit.rocks\n+stackit.run\n+stackit.zone\n+\n+\/\/ Staclar : https:\/\/staclar.com\n+\/\/ Submitted by Q Misell <q@staclar.com>\n+\/\/ Submitted by Matthias Merkel <matthias.merkel@staclar.com>\n+musician.io\n+novecore.site\n+\n@@ -15307,0 +15304,9 @@\n+\/\/ Storacha Network : https:\/\/storacha.network\n+\/\/ Submitted by Alan Shaw <support@storacha.network>\n+ipfs.storacha.link\n+ipfs.w3s.link\n+\n+\/\/ Storebase : https:\/\/www.storebase.io\n+\/\/ Submitted by Tony Schirmer <tony@storebase.io>\n+storebase.store\n+\n@@ -15315,0 +15321,12 @@\n+\/\/ Strapi : https:\/\/strapi.io\/\n+\/\/ Submitted by Florent Baldino <security@strapi.io>\n+strapiapp.com\n+media.strapiapp.com\n+\n+\/\/ Strategic System Consulting (eApps Hosting) : https:\/\/www.eapps.com\/\n+\/\/ Submitted by Alex Oancea <aoancea@cloudscale365.com>\n+vps-host.net\n+atl.jelastic.vps-host.net\n+njs.jelastic.vps-host.net\n+ric.jelastic.vps-host.net\n+\n@@ -15321,4 +15339,0 @@\n-\/\/ Studenten Net Twente : http:\/\/www.snt.utwente.nl\/\n-\/\/ Submitted by Silke Hofstra <syscom@snt.utwente.nl>\n-utwente.io\n-\n@@ -15330,1 +15344,5 @@\n-\/\/ Sub 6 Limited: http:\/\/www.sub6.com\n+\/\/ Studenten Net Twente : http:\/\/www.snt.utwente.nl\/\n+\/\/ Submitted by Silke Hofstra <syscom@snt.utwente.nl>\n+utwente.io\n+\n+\/\/ Sub 6 Limited : http:\/\/www.sub6.com\n@@ -15339,6 +15357,0 @@\n-su.paba.se\n-\n-\/\/ Symfony, SAS : https:\/\/symfony.com\/\n-\/\/ Submitted by Fabien Potencier <fabien@symfony.com>\n-*.s5y.io\n-*.sensiosite.cloud\n@@ -15366,1 +15378,0 @@\n-vpnplus.to\n@@ -15368,0 +15379,1 @@\n+vpnplus.to\n@@ -15371,2 +15383,0 @@\n-tabitorder.co.il\n-mytabit.co.il\n@@ -15374,0 +15384,2 @@\n+mytabit.co.il\n+tabitorder.co.il\n@@ -15380,2 +15392,1 @@\n-\/\/ Submitted by David Anderson <danderson@tailscale.com>\n-beta.tailscale.net\n+\/\/ Submitted by David Anderson <infra+public-suffix-list@tailscale.com>\n@@ -15385,1 +15396,1 @@\n-\/\/ TASK geographical domains (www.task.gda.pl\/uslugi\/dns)\n+\/\/ TASK geographical domains : https:\/\/task.gda.pl\/en\/services\/for-entrepreneurs\/\n@@ -15392,1 +15403,10 @@\n-\/\/ team.blue https:\/\/team.blue\n+\/\/ Tave Creative Corp : https:\/\/tave.com\/\n+\/\/ Submitted by Adrian Ziemkowski <devops@tave.com>\n+taveusercontent.com\n+\n+\/\/ tawk.to, Inc : https:\/\/www.tawk.to\n+\/\/ Submitted by tawk.to developer team <dev-accounts@tawk.to>\n+p.tawk.email\n+p.tawkto.email\n+\n+\/\/ team.blue : https:\/\/team.blue\n@@ -15414,0 +15434,1 @@\n+reservd.dev.thingdust.io\n@@ -15415,0 +15436,1 @@\n+reservd.disrec.thingdust.io\n@@ -15417,2 +15439,0 @@\n-reservd.dev.thingdust.io\n-reservd.disrec.thingdust.io\n@@ -15432,1 +15452,1 @@\n-\/\/ Submitted by Antoine Beaupré <anarcat@torproject.org\n+\/\/ Submitted by Antoine Beaupré <anarcat@torproject.org>\n@@ -15438,1 +15458,0 @@\n-bloxcms.com\n@@ -15464,1 +15483,1 @@\n-\/\/ Submitted by Rory Breuk <rbreuk@transip.nl>\n+\/\/ Submitted by Rory Breuk <rbreuk@transip.nl> and Cedric Dubois <cedric.dubois@team.blue>\n@@ -15467,4 +15486,0 @@\n-*.transurl.nl\n-\n-\/\/ TransIP: https:\/\/www.transip.nl\n-\/\/ Submitted by Cedric Dubois <cedric.dubois@team.blue>\n@@ -15472,0 +15487,1 @@\n+*.transurl.nl\n@@ -15480,2 +15496,0 @@\n-diskstation.eu\n-diskstation.org\n@@ -15492,0 +15506,2 @@\n+diskstation.eu\n+diskstation.org\n@@ -15498,1 +15514,1 @@\n-\/\/ Submitted by Sergi Ferriz <sergi.ferriz@typeform.com>\n+\/\/ Submitted by Typeform <ops@typeform.com>\n@@ -15503,1 +15519,0 @@\n-uber.space\n@@ -15505,0 +15520,1 @@\n+uber.space\n@@ -15509,2 +15525,0 @@\n-hk.org\n-ltd.hk\n@@ -15512,0 +15526,2 @@\n+ltd.hk\n+hk.org\n@@ -15521,0 +15537,9 @@\n+\/\/ United Gameserver GmbH : https:\/\/united-gameserver.de\n+\/\/ Submitted by Stefan Schwarz <sysadm@united-gameserver.de>\n+virtual-user.de\n+virtualuser.de\n+\n+\/\/ United States Writing Corporation : https:\/\/uswriting.co\n+\/\/ Submitted by Andrew Sampson <security@obj.ag>\n+obj.ag\n+\n@@ -15530,4 +15555,4 @@\n-\/\/ United Gameserver GmbH : https:\/\/united-gameserver.de\n-\/\/ Submitted by Stefan Schwarz <sysadm@united-gameserver.de>\n-virtualuser.de\n-virtual-user.de\n+\/\/ University of Banja Luka : https:\/\/unibl.org\n+\/\/ Domains for Republic of Srpska administrative entity.\n+\/\/ Submitted by Marko Ivanovic <kormang@hotmail.rs>\n+rs.ba\n@@ -15535,3 +15560,3 @@\n-\/\/ Upli : https:\/\/upli.io\n-\/\/ Submitted by Lenny Bakkalian <lenny.bakkalian@gmail.com>\n-upli.io\n+\/\/ University of Bielsko-Biala regional domain : http:\/\/dns.bielsko.pl\/\n+\/\/ Submitted by Marcin <dns@ath.bielsko.pl>\n+bielsko.pl\n@@ -15544,3 +15569,3 @@\n-\/\/ .US\n-\/\/ Submitted by Ed Moore <Ed.Moore@lib.de.us>\n-lib.de.us\n+\/\/ US REGISTRY LLC : http:\/\/us.org\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+us.org\n@@ -15548,3 +15573,8 @@\n-\/\/ VeryPositive SIA : http:\/\/very.lv\n-\/\/ Submitted by Danko Aleksejevs <danko@very.lv>\n-2038.io\n+\/\/ V.UA Domain Administrator : https:\/\/domain.v.ua\/\n+\/\/ Submitted by Serhii Rostilo <sergey@rostilo.kiev.ua>\n+v.ua\n+\n+\/\/ Val Town, Inc : https:\/\/val.town\/\n+\/\/ Submitted by Tom MacWright <security@val.town>\n+val.run\n+web.val.run\n@@ -15553,1 +15583,1 @@\n-\/\/ Submitted by Connor Davis <security@vercel.com>\n+\/\/ Submitted by Max Leiter <security@vercel.com>\n@@ -15555,0 +15585,1 @@\n+v0.build\n@@ -15556,0 +15587,1 @@\n+vusercontent.net\n@@ -15558,3 +15590,3 @@\n-\/\/ Viprinet Europe GmbH : http:\/\/www.viprinet.com\n-\/\/ Submitted by Simon Kissel <hostmaster@viprinet.com>\n-router.management\n+\/\/ VeryPositive SIA : http:\/\/very.lv\n+\/\/ Submitted by Danko Aleksejevs <danko@very.lv>\n+2038.io\n@@ -15566,1 +15598,5 @@\n-\/\/ Voorloper.com: https:\/\/voorloper.com\n+\/\/ Viva Republica, Inc. : https:\/\/toss.im\/\n+\/\/ Submitted by Deus Team <deus@toss.im>\n+deus-canvas.com\n+\n+\/\/ Voorloper.com : https:\/\/voorloper.com\n@@ -15570,4 +15606,0 @@\n-\/\/ V.UA Domain Administrator : https:\/\/domain.v.ua\/\n-\/\/ Submitted by Serhii Rostilo <sergey@rostilo.kiev.ua>\n-v.ua\n-\n@@ -15587,1 +15619,1 @@\n-\/\/ WebHare bv: https:\/\/www.webhare.com\/\n+\/\/ WebHare bv : https:\/\/www.webhare.com\/\n@@ -15591,1 +15623,1 @@\n-\/\/ WebHotelier Technologies Ltd: https:\/\/www.webhotelier.net\/\n+\/\/ WebHotelier Technologies Ltd : https:\/\/www.webhotelier.net\/\n@@ -15593,2 +15625,0 @@\n-reserve-online.net\n-reserve-online.com\n@@ -15597,0 +15627,12 @@\n+reserve-online.com\n+reserve-online.net\n+\n+\/\/ WebPros International, LLC : https:\/\/webpros.com\/\n+\/\/ Submitted by Nicolas Rochelemagne <public.suffix@webpros.com>\n+cprapid.com\n+pleskns.com\n+wp2.host\n+pdns.page\n+plesk.page\n+cpanel.site\n+wpsquared.site\n@@ -15598,1 +15640,1 @@\n-\/\/ WebWaddle Ltd: https:\/\/webwaddle.com\/\n+\/\/ WebWaddle Ltd : https:\/\/webwaddle.com\/\n@@ -15602,6 +15644,0 @@\n-\/\/ WeDeploy by Liferay, Inc. : https:\/\/www.wedeploy.com\n-\/\/ Submitted by Henrique Vicente <security@wedeploy.com>\n-wedeploy.io\n-wedeploy.me\n-wedeploy.sh\n-\n@@ -15612,0 +15648,4 @@\n+\/\/ Whatbox Inc. : https:\/\/whatbox.ca\/\n+\/\/ Submitted by Anthony Ryan <servers@whatbox.ca>\n+box.ca\n+\n@@ -15618,1 +15658,0 @@\n-wmflabs.org\n@@ -15621,0 +15660,11 @@\n+wmflabs.org\n+\n+\/\/ William Harrison : https:\/\/wharrison.com.au\n+\/\/ Submitted by William Harrison <security@wharrison.com.au>\n+wdh.app\n+hrsn.dev\n+\n+\/\/ Windsurf : https:\/\/windsurf.com\n+\/\/ Submitted by Douglas Chen <psl@windsurf.com>\n+windsurf.app\n+windsurf.build\n@@ -15627,0 +15677,8 @@\n+\/\/ Wix.com, Inc. : https:\/\/www.wix.com\n+\/\/ Submitted by Shahar Talmi \/ Alon Kochba <publicsuffixlist@wix.com>\n+wixsite.com\n+wixstudio.com\n+editorx.io\n+wixstudio.io\n+wix.run\n+\n@@ -15652,8 +15710,1 @@\n-\/\/ Wix.com, Inc. : https:\/\/www.wix.com\n-\/\/ Submitted by Shahar Talmi <shahar@wix.com>\n-wixsite.com\n-editorx.io\n-wixstudio.io\n-wix.run\n-\n-\/\/ XenonCloud GbR: https:\/\/xenoncloud.net\n+\/\/ XenonCloud GbR : https:\/\/xenoncloud.net\n@@ -15675,1 +15726,1 @@\n-\/\/ Yandex.Cloud LLC: https:\/\/cloud.yandex.com\n+\/\/ Yandex.Cloud LLC : https:\/\/cloud.yandex.com\n@@ -15689,10 +15740,0 @@\n-\/\/ Yombo : https:\/\/yombo.net\n-\/\/ Submitted by Mitch Schwenk <mitch@yombo.net>\n-ybo.faith\n-yombo.me\n-homelink.one\n-ybo.party\n-ybo.review\n-ybo.science\n-ybo.trade\n-\n@@ -15714,0 +15755,8 @@\n+\/\/ Zeabur : https:\/\/zeabur.com\/\n+\/\/ Submitted by Zeabur Team <contact@zeabur.com>\n+zeabur.app\n+\n+\/\/ Zerops : https:\/\/zerops.io\/\n+\/\/ Submitted by Zerops Team <security@zerops.io>\n+*.zerops.app\n+\n@@ -15724,0 +15773,4 @@\n+\/\/ Zone.ID: https:\/\/zone.id\n+\/\/ Submitted by Gx1.org <security@gx1.org>\n+zone.id\n+\n","filename":"src\/java.base\/share\/data\/publicsuffixlist\/public_suffix_list.dat","additions":2108,"deletions":2055,"binary":false,"changes":4163,"status":"modified"},{"patch":"@@ -14,1 +14,1 @@\n-https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/1cbd6e71a9b83620b1d0b11e49d3d9ff48c27e22\/public_suffix_list.dat.\n+https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/823beb1425def931c8b0b170a6bc33b424c3f9b0\/public_suffix_list.dat.\n","filename":"src\/java.base\/share\/legal\/public_suffix.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2704,1 +2704,6 @@\n-:   Enables parallel reference processing. By default, this option is disabled.\n+:   Enables parallel reference processing. By default, collectors employing multiple\n+    threads perform parallel reference processing if the number of parallel threads\n+    to use is larger than one.\n+    The option is available only when the throughput or G1 garbage collector is used\n+    (`-XX:+UseParallelGC` or `-XX:+UseG1GC`). Other collectors employing multiple\n+    threads always perform reference processing in parallel.\n","filename":"src\/java.base\/share\/man\/java.md","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -103,2 +103,14 @@\n-                case LINUX:\n-                    return lm;      \/\/ All options are valid for Linux\n+                case LINUX: {\n+                    \/\/ All options are valid for Linux, but VFORK is deprecated and results\n+                    \/\/ in a warning\n+                    if (lm == LaunchMechanism.VFORK) {\n+                        System.err.println(\"VFORK MODE DEPRECATED\");\n+                        System.err.println(\"\"\"\n+                                          The VFORK launch mechanism has been deprecated for being dangerous.\n+                                          It will be removed in a future java version. Either remove the\n+                                          jdk.lang.Process.launchMechanism property (preferred) or use FORK mode\n+                                          instead (-Djdk.lang.Process.launchMechanism=FORK).\n+                                          \"\"\");\n+                    }\n+                    return lm;\n+                }\n@@ -111,2 +123,0 @@\n-                case WINDOWS:\n-                    \/\/ fall through to throw to Error\n","filename":"src\/java.base\/unix\/classes\/java\/lang\/ProcessImpl.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -51,2 +51,1 @@\n-                 UnixFileAttributes attrs =\n-                     UnixFileAttributes.get(file, followLinks);\n+                 UnixFileAttributes attrs = UnixFileAttributes.get(file, followLinks);\n@@ -55,0 +54,3 @@\n+                if (x.errno() == ENOTDIR) {\n+                    x.setError(ENOENT);\n+                }\n@@ -212,0 +214,3 @@\n+                if (x.errno() == ENOTDIR) {\n+                    x.setError(ENOENT);\n+                }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileAttributeViews.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -842,0 +842,3 @@\n+            if (x.errno() == ENOTDIR) {\n+                x.setError(ENOENT);\n+            }\n@@ -954,0 +957,3 @@\n+            if (x.errno() == ENOTDIR) {\n+                x.setError(ENOENT);\n+            }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystem.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -325,1 +325,4 @@\n-        if (errno != 0)\n+        if (errno != 0) {\n+            if (errno == ENOTDIR) {\n+                errno = ENOENT;\n+            }\n@@ -327,0 +330,1 @@\n+        }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-            return JLA.getBytesNoRepl(input, Util.jnuEncoding());\n+            return JLA.uncheckedGetBytesNoRepl(input, Util.jnuEncoding());\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixPath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -331,1 +331,1 @@\n-  \"  - Switch to legacy launch mechanism with -Djdk.lang.Process.launchMechanism=VFORK\\n\"\n+  \"  - Switch to legacy launch mechanism with -Djdk.lang.Process.launchMechanism=FORK\\n\"\n","filename":"src\/java.base\/unix\/native\/libjava\/ProcessImpl_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,3 @@\n+    private static final boolean ALLOW_DELETE_READ_ONLY_FILES =\n+        Boolean.getBoolean(\"jdk.io.File.allowDeleteReadOnlyFiles\");\n+\n@@ -568,1 +571,1 @@\n-        return delete0(f);\n+        return delete0(f, ALLOW_DELETE_READ_ONLY_FILES);\n@@ -570,1 +573,1 @@\n-    private native boolean delete0(File f);\n+    private native boolean delete0(File f, boolean allowDeleteReadOnlyFiles);\n","filename":"src\/java.base\/windows\/classes\/java\/io\/WinNTFileSystem.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -652,1 +652,1 @@\n-removeFileOrDirectory(const jchar *path)\n+removeFileOrDirectory(const jchar *path, jboolean allowDeleteReadOnlyFiles)\n@@ -655,4 +655,1 @@\n-    DWORD a;\n-\n-    SetFileAttributesW(path, FILE_ATTRIBUTE_NORMAL);\n-    a = GetFileAttributesW(path);\n+    DWORD a = GetFileAttributesW(path);\n@@ -662,0 +659,1 @@\n+        \/\/ read-only attribute cannot be set on directories\n@@ -664,1 +662,14 @@\n-        return !DeleteFileW(path);\n+        \/\/ unset read-only attribute if deleting read-only files is enabled\n+        BOOL readOnlyAttrCleared = FALSE;\n+        if (allowDeleteReadOnlyFiles && ((a & FILE_ATTRIBUTE_READONLY) != 0)) {\n+            DWORD notReadOnlyAttr = a & (~FILE_ATTRIBUTE_READONLY);\n+            readOnlyAttrCleared = SetFileAttributesW(path, notReadOnlyAttr);\n+        }\n+\n+        BOOL deleted = !DeleteFileW(path);\n+\n+        \/\/ reinstate the read-only attribute if it was unset but deletion failed\n+        if (!deleted && readOnlyAttrCleared)\n+            SetFileAttributesW(path, a);\n+\n+        return deleted;\n@@ -669,1 +680,2 @@\n-Java_java_io_WinNTFileSystem_delete0(JNIEnv *env, jobject this, jobject file)\n+Java_java_io_WinNTFileSystem_delete0(JNIEnv *env, jobject this, jobject file,\n+                                     jboolean allowDeleteReadOnlyFiles)\n@@ -676,1 +688,1 @@\n-    if (removeFileOrDirectory(pathbuf) == 0) {\n+    if (removeFileOrDirectory(pathbuf, allowDeleteReadOnlyFiles) == 0) {\n","filename":"src\/java.base\/windows\/native\/libjava\/WinNTFileSystem_md.c","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -46,0 +46,5 @@\n+\/\/ Custom event that is provided by AWT to allow libraries like\n+\/\/ JavaFX to forward native events to AWT even if AWT runs in\n+\/\/ embedded mode.\n+static NSString* awtEmbeddedEvent = @\"AWTEmbeddedEvent\";\n+\n@@ -128,0 +133,8 @@\n+\n+    if (!isApplicationOwner) {\n+        \/\/ Register embedded event listener\n+        NSNotificationCenter *ctr = [NSNotificationCenter defaultCenter];\n+        Class clz = [ApplicationDelegate class];\n+        [ctr addObserver:clz selector:@selector(_embeddedEvent:) name:awtEmbeddedEvent object:nil];\n+    }\n+\n@@ -293,1 +306,0 @@\n-AWT_ASSERT_APPKIT_THREAD;\n@@ -297,0 +309,4 @@\n+    [ApplicationDelegate _openURL:url];\n+\n+    [replyEvent insertDescriptor:[NSAppleEventDescriptor nullDescriptor] atIndex:0];\n+}\n@@ -298,0 +314,2 @@\n++ (void)_openURL:(NSString *)url {\n+AWT_ASSERT_APPKIT_THREAD;\n@@ -306,2 +324,0 @@\n-\n-    [replyEvent insertDescriptor:[NSAppleEventDescriptor nullDescriptor] atIndex:0];\n@@ -478,0 +494,9 @@\n++ (void)_embeddedEvent:(NSNotification *)notification {\n+    NSString *name = notification.userInfo[@\"name\"];\n+\n+    if ([name isEqualToString:@\"openURL\"]) {\n+        NSString *url = notification.userInfo[@\"url\"];\n+        [ApplicationDelegate _openURL:url];\n+    }\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/ApplicationDelegate.m","additions":28,"deletions":3,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1198,5 +1198,4 @@\n-    public synchronized PaintContext createContext(ColorModel cm, Rectangle r,\n-                                                   Rectangle2D r2d,\n-                                                   AffineTransform xform,\n-                                                   RenderingHints hints) {\n-        return new ColorPaintContext(getRGB(), cm);\n+    public PaintContext createContext(ColorModel cm, Rectangle r,\n+                                      Rectangle2D r2d, AffineTransform xform,\n+                                      RenderingHints hints) {\n+        return new ColorPaintContext(getRGB());\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Color.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,0 @@\n-\n-\n@@ -33,1 +31,0 @@\n-import sun.awt.image.IntegerComponentRaster;\n@@ -36,3 +33,3 @@\n-class ColorPaintContext implements PaintContext {\n-    int color;\n-    WritableRaster savedTile;\n+import sun.awt.image.IntegerComponentRaster;\n+\n+final class ColorPaintContext implements PaintContext {\n@@ -40,1 +37,4 @@\n-    protected ColorPaintContext(int color, ColorModel cm) {\n+    private final int color;\n+    private volatile WritableRaster savedTile;\n+\n+    ColorPaintContext(int color) {\n@@ -44,0 +44,1 @@\n+    @Override\n@@ -47,16 +48,1 @@\n-    \/*\n-     * Returns the RGB value representing the color in the default sRGB\n-     * {@link ColorModel}.\n-     * (Bits 24-31 are alpha, 16-23 are red, 8-15 are green, 0-7 are\n-     * blue).\n-     * @return the RGB value of the color in the default sRGB\n-     *         {@code ColorModel}.\n-     * @see java.awt.image.ColorModel#getRGBdefault\n-     * @see #getRed\n-     * @see #getGreen\n-     * @see #getBlue\n-     *\/\n-    int getRGB() {\n-        return color;\n-    }\n-\n+    @Override\n@@ -67,1 +53,2 @@\n-    public synchronized Raster getRaster(int x, int y, int w, int h) {\n+    @Override\n+    public Raster getRaster(int x, int y, int w, int h) {\n@@ -74,2 +61,1 @@\n-            \/\/ Note - markDirty is probably unnecessary since icr is brand new\n-            icr.markDirty();\n+            \/\/ Note - icr.markDirty() is unnecessary since icr is brand new\n@@ -80,1 +66,0 @@\n-\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/ColorPaintContext.java","additions":13,"deletions":28,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -1635,1 +1635,1 @@\n-    private WeakHashMap<AWTEventListener, SelectiveAWTEventListener> listener2SelectiveListener = new WeakHashMap<>();\n+    private final WeakHashMap<AWTEventListener, SelectiveAWTEventListener> listener2SelectiveListener = new WeakHashMap<>();\n@@ -1744,1 +1744,1 @@\n-                listener2SelectiveListener.get(localL);\n+                listener2SelectiveListener.remove(localL);\n@@ -1747,1 +1747,0 @@\n-                listener2SelectiveListener.remove(localL);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Toolkit.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.util.Iterator;\n@@ -271,3 +270,1 @@\n-        if(tagSets.contains(tagSet)) {\n-            tagSets.remove(tagSet);\n-        }\n+        tagSets.remove(tagSet);\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/plugins\/tiff\/TIFFDirectory.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        if (FontUtilities.isDefaultIgnorable(ch)) {\n+        if (FontUtilities.isDefaultIgnorable(ch) || isIgnorableWhitespace(ch)) {\n@@ -96,1 +96,1 @@\n-            if (FontUtilities.isDefaultIgnorable(ch)) {\n+            if (FontUtilities.isDefaultIgnorable(ch) || isIgnorableWhitespace(ch)) {\n@@ -108,0 +108,7 @@\n+    \/\/ Matches behavior in e.g. CMap.getControlCodeGlyph(int, boolean)\n+    \/\/ and RasterPrinterJob.removeControlChars(String)\n+    \/\/ and CCharToGlyphMapper.isIgnorableWhitespace(int)\n+    private static boolean isIgnorableWhitespace(int code) {\n+        return code == 0x0009 || code == 0x000a || code == 0x000d;\n+    }\n+\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/Type1GlyphMapper.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,0 @@\n-import javax.print.attribute.EnumSyntax;\n-import javax.print.attribute.standard.Media;\n@@ -68,0 +66,1 @@\n+    @Serial\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/CustomOutputBin.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -53,1 +53,0 @@\n-import java.io.InputStreamReader;\n@@ -257,1 +256,1 @@\n-    private Integer getGnomeShellMajorVersion() {\n+    public Integer getGnomeShellMajorVersion() {\n@@ -262,3 +261,1 @@\n-            try (InputStreamReader isr = new InputStreamReader(process.getInputStream());\n-                 BufferedReader reader = new BufferedReader(isr)) {\n-\n+            try (BufferedReader reader = process.inputReader()) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/UNIXToolkit.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import sun.awt.screencast.XdgDesktopPortal;\n@@ -42,3 +43,0 @@\n-    private static final String screenshotMethod;\n-    private static final String METHOD_X11 = \"x11\";\n-    private static final String METHOD_SCREENCAST = \"dbusScreencast\";\n@@ -52,13 +50,0 @@\n-\n-        boolean isOnWayland = false;\n-\n-        if (Toolkit.getDefaultToolkit() instanceof SunToolkit sunToolkit) {\n-            isOnWayland = sunToolkit.isRunningOnWayland();\n-        }\n-\n-        screenshotMethod = System.getProperty(\n-                        \"awt.robot.screenshotMethod\",\n-                        isOnWayland\n-                            ? METHOD_SCREENCAST\n-                            : METHOD_X11\n-                );\n@@ -89,0 +74,5 @@\n+        if (XdgDesktopPortal.isRemoteDesktop() && ScreencastHelper.isAvailable()) {\n+            \/\/ We still call mouseMoveImpl on purpose to change the mouse position\n+            \/\/ within the XWayland server so that we can retrieve it later.\n+            ScreencastHelper.remoteDesktopMouseMove(xgc.scaleUp(x), xgc.scaleUp(y));\n+        }\n@@ -93,1 +83,5 @@\n-        mousePressImpl(buttons);\n+        if (XdgDesktopPortal.isRemoteDesktop() && ScreencastHelper.isAvailable()) {\n+            ScreencastHelper.remoteDesktopMouseButton(true, buttons);\n+        } else {\n+            mousePressImpl(buttons);\n+        }\n@@ -98,1 +92,5 @@\n-        mouseReleaseImpl(buttons);\n+        if (XdgDesktopPortal.isRemoteDesktop() && ScreencastHelper.isAvailable()) {\n+            ScreencastHelper.remoteDesktopMouseButton(false, buttons);\n+        } else {\n+            mouseReleaseImpl(buttons);\n+        }\n@@ -103,1 +101,5 @@\n-        mouseWheelImpl(wheelAmt);\n+        if (XdgDesktopPortal.isRemoteDesktop() && ScreencastHelper.isAvailable()) {\n+            ScreencastHelper.remoteDesktopMouseWheel(wheelAmt);\n+        } else {\n+            mouseWheelImpl(wheelAmt);\n+        }\n@@ -108,1 +110,5 @@\n-        keyPressImpl(keycode);\n+        if (XdgDesktopPortal.isRemoteDesktop() && ScreencastHelper.isAvailable()) {\n+            ScreencastHelper.remoteDesktopKey(true, keycode);\n+        } else {\n+            keyPressImpl(keycode);\n+        }\n@@ -113,1 +119,5 @@\n-        keyReleaseImpl(keycode);\n+        if (XdgDesktopPortal.isRemoteDesktop() && ScreencastHelper.isAvailable()) {\n+            ScreencastHelper.remoteDesktopKey(false, keycode);\n+        } else {\n+            keyReleaseImpl(keycode);\n+        }\n@@ -119,3 +129,2 @@\n-        if (screenshotMethod.equals(METHOD_SCREENCAST)\n-            && ScreencastHelper.isAvailable()) {\n-\n+        if ((XdgDesktopPortal.isScreencast()\n+                || XdgDesktopPortal.isRemoteDesktop()) && ScreencastHelper.isAvailable()) {\n@@ -132,2 +141,2 @@\n-        if (screenshotMethod.equals(METHOD_SCREENCAST)\n-            && ScreencastHelper.isAvailable()) {\n+        if ((XdgDesktopPortal.isScreencast()\n+                || XdgDesktopPortal.isRemoteDesktop()) && ScreencastHelper.isAvailable()) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XRobotPeer.java","additions":36,"deletions":27,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,0 +141,2 @@\n+import sun.awt.screencast.ScreencastHelper;\n+import sun.awt.screencast.XdgDesktopPortal;\n@@ -1524,9 +1526,2 @@\n-                numberOfButtons = getNumberOfButtonsImpl();\n-                numberOfButtons = (numberOfButtons > MAX_BUTTONS_SUPPORTED)? MAX_BUTTONS_SUPPORTED : numberOfButtons;\n-                \/\/4th and 5th buttons are for wheel and shouldn't be reported as buttons.\n-                \/\/If we have more than 3 physical buttons and a wheel, we report N-2 buttons.\n-                \/\/If we have 3 physical buttons and a wheel, we report 3 buttons.\n-                \/\/If we have 1,2,3 physical buttons, we report it as is i.e. 1,2 or 3 respectively.\n-                if (numberOfButtons >=5) {\n-                    numberOfButtons -= 2;\n-                } else if (numberOfButtons == 4 || numberOfButtons ==5){\n+                if (XdgDesktopPortal.isRemoteDesktop()\n+                        && ScreencastHelper.isAvailable()) {\n@@ -1534,0 +1529,12 @@\n+                } else {\n+                    numberOfButtons = getNumberOfButtonsImpl();\n+                    numberOfButtons = (numberOfButtons > MAX_BUTTONS_SUPPORTED) ? MAX_BUTTONS_SUPPORTED : numberOfButtons;\n+                    \/\/4th and 5th buttons are for wheel and shouldn't be reported as buttons.\n+                    \/\/If we have more than 3 physical buttons and a wheel, we report N-2 buttons.\n+                    \/\/If we have 3 physical buttons and a wheel, we report 3 buttons.\n+                    \/\/If we have 1,2,3 physical buttons, we report it as is i.e. 1,2 or 3 respectively.\n+                    if (numberOfButtons >= 5) {\n+                        numberOfButtons -= 2;\n+                    } else if (numberOfButtons == 4 || numberOfButtons == 5) {\n+                        numberOfButtons = 3;\n+                    }\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XToolkit.java","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+import java.util.function.Function;\n@@ -54,1 +55,0 @@\n-\n@@ -58,0 +58,4 @@\n+    private static final int NO_STREAMS = -13;\n+\n+    private static final int XDG_METHOD_SCREENCAST = 0;\n+    private static final int XDG_METHOD_REMOTE_DESKTOP = 1;\n@@ -66,2 +70,1 @@\n-    private ScreencastHelper() {\n-    }\n+    private ScreencastHelper() {}\n@@ -74,0 +77,7 @@\n+        boolean shouldLoadNative = XdgDesktopPortal.isRemoteDesktop()\n+                || XdgDesktopPortal.isScreencast();\n+\n+        int methodId = XdgDesktopPortal.isScreencast()\n+                ? XDG_METHOD_SCREENCAST\n+                : XDG_METHOD_REMOTE_DESKTOP;\n+\n@@ -76,1 +86,1 @@\n-              || !loadPipewire(SCREENCAST_DEBUG)) {\n+              || !(shouldLoadNative && loadPipewire(methodId, SCREENCAST_DEBUG))) {\n@@ -92,1 +102,1 @@\n-    private static native boolean loadPipewire(boolean screencastDebug);\n+    private static native boolean loadPipewire(int method, boolean isDebug);\n@@ -189,1 +199,1 @@\n-            } else if (!checkReturnValue(retVal)) {\n+            } else if (!checkReturnValue(retVal, true)) {\n@@ -203,1 +213,1 @@\n-        checkReturnValue(retVal);\n+        checkReturnValue(retVal, true);\n@@ -206,1 +216,2 @@\n-    private static boolean checkReturnValue(int retVal) {\n+    private static boolean checkReturnValue(int retVal,\n+                                            boolean throwException) {\n@@ -208,4 +219,9 @@\n-            \/\/ user explicitly denied the capture, no more tries.\n-            throw new SecurityException(\n-                    \"Screen Capture in the selected area was not allowed\"\n-            );\n+            if (SCREENCAST_DEBUG) {\n+                System.err.println(\"robot action: access denied by user.\");\n+            }\n+            if (throwException) {\n+                \/\/ user explicitly denied the capture, no more tries.\n+                throw new SecurityException(\n+                        \"Screen Capture in the selected area was not allowed\"\n+                );\n+            }\n@@ -214,1 +230,1 @@\n-                System.err.println(\"Screen capture failed.\");\n+                System.err.println(\"robot action: failed.\");\n@@ -221,0 +237,4 @@\n+        } else if (retVal == NO_STREAMS) {\n+            if (SCREENCAST_DEBUG) {\n+                System.err.println(\"robot action: no streams available\");\n+            }\n@@ -224,0 +244,37 @@\n+\n+    private static void performWithToken(Function<String, Integer> func) {\n+        if (!XdgDesktopPortal.isRemoteDesktop() || !IS_NATIVE_LOADED) return;\n+\n+        timerCloseSessionRestart();\n+\n+        for (TokenItem tokenItem : TokenStorage.getTokens(getSystemScreensBounds())) {\n+            int retVal = func.apply(tokenItem.token);\n+\n+            if (retVal >= 0 || !checkReturnValue(retVal, false)) {\n+                return;\n+            }\n+        }\n+\n+        checkReturnValue(func.apply(null), false);\n+    }\n+\n+    public static synchronized void remoteDesktopMouseMove(int x, int y) {\n+        performWithToken((token) -> remoteDesktopMouseMoveImpl(x, y, token));\n+    }\n+\n+    public static synchronized void remoteDesktopMouseButton(boolean isPress, int buttons) {\n+        performWithToken((token) -> remoteDesktopMouseButtonImpl(isPress, buttons, token));\n+    }\n+\n+    public static synchronized void remoteDesktopMouseWheel(int wheel) {\n+        performWithToken((token) -> remoteDesktopMouseWheelImpl(wheel, token));\n+    }\n+\n+    public static synchronized void remoteDesktopKey(boolean isPress, int key) {\n+        performWithToken((token) -> remoteDesktopKeyImpl(isPress, key, token));\n+    }\n+\n+    private static synchronized native int remoteDesktopMouseMoveImpl(int x, int y, String token);\n+    private static synchronized native int remoteDesktopMouseButtonImpl(boolean isPress, int buttons, String token);\n+    private static synchronized native int remoteDesktopMouseWheelImpl(int wheelAmt, String token);\n+    private static synchronized native int remoteDesktopKeyImpl(boolean isPress, int key, String token);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/ScreencastHelper.java","additions":71,"deletions":14,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,0 +70,3 @@\n+    private static final String REL_RD_NAME =\n+            \".java\/robot\/remote-desktop-tokens.properties\";\n+\n@@ -75,3 +78,1 @@\n-        Path propsPath = setupPath();\n-\n-        PROPS_PATH = propsPath;\n+        PROPS_PATH = setupPath();\n@@ -98,2 +99,9 @@\n-        Path path = Path.of(userHome, REL_NAME);\n-        Path secondaryPath = Path.of(userHome, REL_NAME_SECONDARY);\n+        Path path;\n+        Path secondaryPath = null;\n+\n+        if (XdgDesktopPortal.isRemoteDesktop()) {\n+            path = Path.of(userHome, REL_RD_NAME);\n+        } else {\n+            path = Path.of(userHome, REL_NAME);\n+            secondaryPath = Path.of(userHome, REL_NAME_SECONDARY);\n+        }\n@@ -102,1 +110,1 @@\n-                && Files.isWritable(secondaryPath);\n+                && secondaryPath != null && Files.isWritable(secondaryPath);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/TokenStorage.java","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.awt.screencast;\n+\n+import sun.awt.SunToolkit;\n+import sun.awt.UNIXToolkit;\n+\n+import java.awt.Toolkit;\n+\n+public class XdgDesktopPortal {\n+    private static final String METHOD_X11 = \"x11\";\n+    private static final String METHOD_SCREENCAST = \"dbusScreencast\";\n+    private static final String METHOD_REMOTE_DESKTOP = \"dbusRemoteDesktop\";\n+\n+    private static final String method;\n+    private static final boolean isRemoteDesktop;\n+    private static final boolean isScreencast;\n+\n+    private XdgDesktopPortal() {}\n+\n+    static {\n+        boolean isOnWayland = false;\n+\n+        if (Toolkit.getDefaultToolkit() instanceof SunToolkit sunToolkit) {\n+            isOnWayland = sunToolkit.isRunningOnWayland();\n+        }\n+\n+        String defaultMethod = METHOD_X11;\n+        if (isOnWayland) {\n+            Integer gnomeShellVersion = null;\n+\n+            UNIXToolkit toolkit = (UNIXToolkit) Toolkit.getDefaultToolkit();\n+            if (\"gnome\".equals(toolkit.getDesktop())) {\n+                gnomeShellVersion = toolkit.getGnomeShellMajorVersion();\n+            }\n+\n+            defaultMethod = (gnomeShellVersion != null && gnomeShellVersion >= 47)\n+                    ? METHOD_REMOTE_DESKTOP\n+                    : METHOD_SCREENCAST;\n+        }\n+\n+        String m = System.getProperty(\"awt.robot.screenshotMethod\", defaultMethod);\n+\n+        if (!METHOD_REMOTE_DESKTOP.equals(m)\n+                && !METHOD_SCREENCAST.equals(m)\n+                && !METHOD_X11.equals(m)) {\n+            m = defaultMethod;\n+        }\n+\n+        isRemoteDesktop = METHOD_REMOTE_DESKTOP.equals(m);\n+        isScreencast = METHOD_SCREENCAST.equals(m);\n+        method = m;\n+\n+    }\n+\n+    public static String getMethod() {\n+        return method;\n+    }\n+\n+    public static boolean isRemoteDesktop() {\n+        return isRemoteDesktop;\n+    }\n+\n+    public static boolean isScreencast() {\n+        return isScreencast;\n+    }\n+}\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/XdgDesktopPortal.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -620,0 +620,1 @@\n+            \/\/ those function are called only by Screencast \/ Remote desktop\n@@ -623,0 +624,1 @@\n+            fp_g_variant_print = dl_symbol(\"g_variant_print\"); \/\/ since 2.24\n@@ -625,0 +627,1 @@\n+        fp_g_strconcat = dl_symbol(\"g_strconcat\");\n@@ -3105,0 +3108,1 @@\n+    gtk->g_variant_print = fp_g_variant_print;\n@@ -3129,0 +3133,1 @@\n+    gtk->g_strconcat = fp_g_strconcat;\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk3_interface.c","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -402,0 +402,1 @@\n+static gchar* (*fp_g_strconcat)(const gchar* string1, ...);\n@@ -741,0 +742,2 @@\n+static gchar *(*fp_g_variant_print) (GVariant* value, gboolean type_annotate);\n+\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk3_interface.h","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -681,0 +681,1 @@\n+    gchar *(*g_variant_print)(GVariant* value, gboolean type_annotate);\n@@ -737,0 +738,2 @@\n+    gchar* (*g_strconcat)(const gchar* string1, ...);\n+\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk_interface.h","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -97,0 +97,1 @@\n+#include \"canvas.h\"\n@@ -111,0 +112,1 @@\n+gboolean isRemoteDesktop = FALSE;\n@@ -201,1 +203,1 @@\n-static gboolean initScreencast(const gchar *token,\n+static gboolean initPortal(const gchar *token,\n@@ -228,2 +230,2 @@\n-        || (pw.pwFd = getPipewireFd(token,\n-                                    affectedBounds,\n+        || !initAndStartSession(token, &pw.pwFd)\n+        || (pw.pwFd = getPipewireFd(affectedBounds,\n@@ -861,1 +863,1 @@\n-        JNIEnv *env, jclass cls, jboolean screencastDebug\n+        JNIEnv *env, jclass cls, jint method, jboolean screencastDebug\n@@ -865,0 +867,9 @@\n+    if (method != XDG_METHOD_SCREENCAST\n+        && method != XDG_METHOD_REMOTE_DESKTOP) {\n+        return JNI_FALSE;\n+    }\n+\n+    isRemoteDesktop = method == XDG_METHOD_REMOTE_DESKTOP;\n+\n+    DEBUG_SCREENCAST(\"method %d\\n\", method)\n+\n@@ -937,1 +948,1 @@\n-    if (!initScreencast(token, affectedScreenBounds, affectedBoundsLength)) {\n+    if (!initPortal(token, affectedScreenBounds, affectedBoundsLength)) {\n@@ -1100,0 +1111,121 @@\n+\n+\/*\n+ * Class:     sun_awt_screencast_ScreencastHelper\n+ * Method:    remoteDesktopMouseMove\n+ * Signature: (IILjava\/lang\/String;)I\n+ *\/\n+JNIEXPORT jint JNICALL Java_sun_awt_screencast_ScreencastHelper_remoteDesktopMouseMoveImpl\n+        (JNIEnv *env, jclass cls, jint jx, jint jy, jstring jtoken) {\n+\n+\n+    const gchar *token = jtoken\n+                         ? (*env)->GetStringUTFChars(env, jtoken, NULL)\n+                         : NULL;\n+\n+\n+    DEBUG_SCREENCAST(\"moving mouse to\\n\\t%d %d\\n\\twith token |%s|\\n\", jx, jy, token);\n+\n+    gboolean result = initPortal(token, NULL, 0);\n+    DEBUG_SCREENCAST(\"init result %b, moving to %d %d\\n\", result, jx, jy)\n+\n+    if (result) {\n+        if (!remoteDesktopMouseMove(jx, jy)) {\n+            releaseToken(env, jtoken, token);\n+            return RESULT_DENIED;\n+        }\n+    }\n+\n+    releaseToken(env, jtoken, token);\n+\n+    return result ? RESULT_OK : pw.pwFd;\n+}\n+\n+\/*\n+ * Class:     sun_awt_screencast_ScreencastHelper\n+ * Method:    remoteDesktopMouseButtonImpl\n+ * Signature: (ZILjava\/lang\/String;)I\n+ *\/\n+JNIEXPORT jint JNICALL Java_sun_awt_screencast_ScreencastHelper_remoteDesktopMouseButtonImpl\n+        (JNIEnv *env, jclass cls, jboolean isPress, jint buttons, jstring jtoken) {\n+\n+    const gchar *token = jtoken\n+                         ? (*env)->GetStringUTFChars(env, jtoken, NULL)\n+                         : NULL;\n+\n+    gboolean result = initPortal(token, NULL, 0);\n+    DEBUG_SCREENCAST(\"init result %b, mouse pressing %d\\n\", result, buttons)\n+\n+    if (result) {\n+        if (!remoteDesktopMouse(isPress, buttons)) {\n+            releaseToken(env, jtoken, token);\n+            return RESULT_DENIED;\n+        }\n+    }\n+\n+    releaseToken(env, jtoken, token);\n+\n+    return result ? RESULT_OK : pw.pwFd;\n+}\n+\n+\/*\n+ * Class:     sun_awt_screencast_ScreencastHelper\n+ * Method:    remoteDesktopMouseWheelImpl\n+ * Signature: (ILjava\/lang\/String;)I\n+ *\/\n+JNIEXPORT jint JNICALL Java_sun_awt_screencast_ScreencastHelper_remoteDesktopMouseWheelImpl\n+        (JNIEnv *env, jclass cls, jint jWheelAmt, jstring jtoken) {\n+\n+    const gchar *token = jtoken\n+                         ? (*env)->GetStringUTFChars(env, jtoken, NULL)\n+                         : NULL;\n+\n+    gboolean result = initPortal(token, NULL, 0);\n+    DEBUG_SCREENCAST(\"init result %b, mouse wheel %d\\n\", result, jWheelAmt)\n+\n+    if (result) {\n+        if (!remoteDesktopMouseWheel(jWheelAmt)) {\n+            releaseToken(env, jtoken, token);\n+            return RESULT_DENIED;\n+        }\n+    }\n+\n+    releaseToken(env, jtoken, token);\n+\n+    return result ? RESULT_OK : pw.pwFd;\n+}\n+\n+\/*\n+ * Class:     sun_awt_screencast_ScreencastHelper\n+ * Method:    remoteDesktopKeyImpl\n+ * Signature: (ZILjava\/lang\/String;)I\n+ *\/\n+JNIEXPORT jint JNICALL Java_sun_awt_screencast_ScreencastHelper_remoteDesktopKeyImpl\n+        (JNIEnv *env, jclass cls, jboolean isPress, jint jkey, jstring jtoken) {\n+\n+    AWT_LOCK();\n+    int key = awt_getX11KeySym(jkey);\n+    AWT_UNLOCK();\n+\n+    if (key == NoSymbol) {\n+        return RESULT_ERROR;\n+    }\n+\n+    const gchar *token = jtoken\n+                         ? (*env)->GetStringUTFChars(env, jtoken, NULL)\n+                         : NULL;\n+\n+    gboolean result = initPortal(token, NULL, 0);\n+    DEBUG_SCREENCAST(\"init result %b, key %d -> %d isPress %b\\n\", result, jkey, key, isPress)\n+\n+    if (result) {\n+        if (!remoteDesktopKey(isPress, key)) {\n+            releaseToken(env, jtoken, token);\n+            return RESULT_DENIED;\n+        }\n+    }\n+\n+    releaseToken(env, jtoken, token);\n+\n+    return result ? RESULT_OK : pw.pwFd;\n+}\n+\n@@ -1102,2 +1234,1 @@\n-Java_sun_awt_screencast_ScreencastHelper_closeSession(JNIEnv *env, jclass cls) {\n-}\n+Java_sun_awt_screencast_ScreencastHelper_closeSession(JNIEnv *env, jclass cls) {}\n@@ -1120,1 +1251,1 @@\n-        JNIEnv *env, jclass cls, jboolean screencastDebug\n+        JNIEnv *env, jclass cls, jint method, jboolean screencastDebug\n@@ -1124,0 +1255,20 @@\n+\n+JNIEXPORT jint JNICALL Java_sun_awt_screencast_ScreencastHelper_remoteDesktopMouseMoveImpl\n+        (JNIEnv *env, jclass cls, jint jx, jint jy, jstring token) {\n+    return -1;\n+}\n+\n+JNIEXPORT jint JNICALL Java_sun_awt_screencast_ScreencastHelper_remoteDesktopMouseButtonImpl\n+        (JNIEnv *env, jclass cls, jboolean isPress, jint buttons, jstring jtoken) {\n+    return -1;\n+}\n+\n+JNIEXPORT jint JNICALL Java_sun_awt_screencast_ScreencastHelper_remoteDesktopMouseWheelImpl\n+        (JNIEnv *env, jclass cls, jint jWheelAmt, jstring jtoken) {\n+    return -1;\n+}\n+\n+JNIEXPORT jint JNICALL Java_sun_awt_screencast_ScreencastHelper_remoteDesktopKeyImpl\n+        (JNIEnv *env, jclass cls, jboolean isPress, jint jkey, jstring jtoken) {\n+    return -1;\n+}\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_pipewire.c","additions":159,"deletions":8,"binary":false,"changes":167,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,2 @@\n+void print_gvariant_content(gchar *caption, GVariant *response);\n+\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_pipewire.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-#include <sys\/stat.h>\n-#include <fcntl.h>\n@@ -30,2 +28,2 @@\n-#include <pwd.h>\n-#include <unistd.h>\n+\n+#include \"java_awt_event_InputEvent.h\"\n@@ -39,0 +37,1 @@\n+extern gboolean isRemoteDesktop;\n@@ -43,0 +42,5 @@\n+extern int DEBUG_SCREENCAST_ENABLED;\n+\n+GDBusProxy *getProxy() {\n+    return isRemoteDesktop ? portal->remoteDesktopProxy : portal->screenCastProxy;\n+}\n@@ -173,2 +177,3 @@\n- * Checks screencast protocol version\n- * @return FALSE if version < 4, or could not be determined\n+ * Checks the version of the Screencast\/Remote Desktop protocol\n+ * to determine whether it supports the restore_token.\n+ * @return FALSE if version is below required, or could not be determined\n@@ -178,0 +183,5 @@\n+\n+    const gchar *interface = isRemoteDesktop\n+            ? PORTAL_IFACE_REMOTE_DESKTOP\n+            : PORTAL_IFACE_SCREENCAST;\n+\n@@ -180,0 +190,1 @@\n+\n@@ -181,1 +192,1 @@\n-                portal->screenCastProxy,\n+                getProxy(),\n@@ -184,1 +195,1 @@\n-                                   \"org.freedesktop.portal.ScreenCast\",\n+                                   interface,\n@@ -190,0 +201,6 @@\n+        if (isRemoteDesktop) {\n+            print_gvariant_content(\"checkVersion Remote Desktop\", retVersion);\n+        } else {\n+            print_gvariant_content(\"checkVersion ScreenCast\", retVersion);\n+        }\n+\n@@ -191,2 +208,1 @@\n-            DEBUG_SCREENCAST(\"!!! could not detect the screencast version\\n\",\n-                             NULL);\n+            DEBUG_SCREENCAST(\"!!! could not detect the %s version\\n\", interface);\n@@ -203,2 +219,1 @@\n-            DEBUG_SCREENCAST(\"!!! could not get the screencast version\\n\",\n-                             NULL);\n+            DEBUG_SCREENCAST(\"!!! could not get the %s version\\n\", interface);\n@@ -215,3 +230,6 @@\n-    DEBUG_SCREENCAST(\"ScreenCast protocol version %d\\n\", version);\n-    if (version < 4) {\n-        DEBUG_SCREENCAST(\"!!! ScreenCast protocol version %d < 4,\"\n+    gboolean isVersionOk = isRemoteDesktop\n+            ? version >= PORTAL_MIN_VERSION_REMOTE_DESKTOP\n+            : version >= PORTAL_MIN_VERSION_SCREENCAST;\n+\n+    if (!isVersionOk) {\n+        DEBUG_SCREENCAST(\"!!! %s protocol version %d < %d,\"\n@@ -219,1 +237,6 @@\n-                         version);\n+                         interface,\n+                         version,\n+                         isRemoteDesktop\n+                             ? PORTAL_MIN_VERSION_REMOTE_DESKTOP\n+                             : PORTAL_MIN_VERSION_SCREENCAST\n+                         );\n@@ -222,3 +245,1 @@\n-    \/\/ restore_token was added in version 4, without it,\n-    \/\/ user confirmation is required for every screenshot.\n-    return version >= 4;\n+    return isVersionOk;\n@@ -269,3 +290,3 @@\n-            \"org.freedesktop.portal.Desktop\",\n-            \"\/org\/freedesktop\/portal\/desktop\",\n-            \"org.freedesktop.portal.ScreenCast\",\n+            PORTAL_DESKTOP_BUS_NAME,\n+            PORTAL_DESKTOP_OBJECT_PATH,\n+            PORTAL_IFACE_SCREENCAST,\n@@ -280,0 +301,23 @@\n+    } else {\n+        DEBUG_SCREENCAST(\"%s: connection\/sender name %s \/ %s\\n\",\n+                         \"ScreenCast\", name,\n+                         portal->senderName);\n+    }\n+\n+    if (isRemoteDesktop) {\n+        portal->remoteDesktopProxy = gtk->g_dbus_proxy_new_sync(\n+                portal->connection,\n+                G_DBUS_PROXY_FLAGS_NONE,\n+                NULL,\n+                PORTAL_DESKTOP_BUS_NAME,\n+                PORTAL_DESKTOP_OBJECT_PATH,\n+                PORTAL_IFACE_REMOTE_DESKTOP,\n+                NULL,\n+                &err\n+        );\n+\n+        if (err) {\n+            DEBUG_SCREENCAST(\"Failed to get Remote Desktop portal: %s\", err->message);\n+            ERR_HANDLE(err);\n+            return FALSE;\n+        }\n@@ -340,2 +384,2 @@\n-            \"org.freedesktop.portal.Desktop\",\n-            \"org.freedesktop.portal.Request\",\n+            PORTAL_DESKTOP_BUS_NAME,\n+            PORTAL_IFACE_REQUEST,\n@@ -386,1 +430,2 @@\n-        gtk->g_variant_lookup(result, \"session_handle\", \"s\", helper->data);\n+        gboolean returned = gtk->g_variant_lookup(result, \"session_handle\", \"s\", helper->data);\n+        DEBUG_SCREENCAST(\"session_handle returned %b %p\\n\", returned, helper->data)\n@@ -433,0 +478,3 @@\n+\n+    DEBUG_SCREENCAST(\"sessionToken %s \\n\", sessionToken)\n+\n@@ -440,0 +488,6 @@\n+    DEBUG_SCREENCAST(\"portalScreenCastCreateSession: proxy %s %p (rd: %p \/ sc: %p)\\n\",\n+                     isRemoteDesktop ? \"remoteDesktop\" : \"screencast\",\n+                     getProxy(),\n+                     portal->remoteDesktopProxy,\n+                     portal->screenCastProxy);\n+\n@@ -441,1 +495,1 @@\n-            portal->screenCastProxy,\n+            getProxy(),\n@@ -450,0 +504,2 @@\n+    print_gvariant_content(\"CreateSession\", response);\n+\n@@ -458,0 +514,2 @@\n+    DEBUG_SCREENCAST(\"portal->screenCastSessionHandle %s\\n\", portal->screenCastSessionHandle);\n+\n@@ -503,0 +561,33 @@\n+static void callbackRemoteDesktopSelectDevices(\n+        GDBusConnection *connection,\n+        const char *senderName,\n+        const char *objectPath,\n+        const char *interfaceName,\n+        const char *signalName,\n+        GVariant *parameters,\n+        void *data\n+) {\n+    struct DBusCallbackHelper *helper = data;\n+\n+    helper->data = (void *) 0;\n+\n+    uint32_t status;\n+    GVariant* result = NULL;\n+\n+    gtk->g_variant_get(parameters, \"(u@a{sv})\", &status, &result);\n+\n+    if (status != 0) {\n+        DEBUG_SCREENCAST(\"Failed select devices: %u\\n\", status);\n+    } else {\n+        helper->data = (void *) 1;\n+    }\n+\n+    helper->isDone = TRUE;\n+\n+    if (result) {\n+        gtk->g_variant_unref(result);\n+    }\n+\n+    callbackEnd();\n+}\n+\n@@ -548,0 +639,3 @@\n+    \/\/ In the case of Remote Desktop,\n+    \/\/ we add the restore_token and persist_mode to the SelectDevices call.\n+\n@@ -551,8 +645,1 @@\n-    gtk->g_variant_builder_add(\n-            &builder,\n-            \"{sv}\",\n-            \"persist_mode\",\n-            gtk->g_variant_new_uint32(2)\n-    );\n-\n-    if (validateToken(token)) {\n+    if (!isRemoteDesktop) {\n@@ -562,2 +649,2 @@\n-                \"restore_token\",\n-                gtk->g_variant_new_string(token)\n+                \"persist_mode\",\n+                gtk->g_variant_new_uint32(2)\n@@ -567,0 +654,12 @@\n+    if (!isRemoteDesktop) {\n+        if (validateToken(token)) {\n+            DEBUG_SCREENCAST(\">>> adding token %s\\n\", token);\n+            gtk->g_variant_builder_add(\n+                    &builder,\n+                    \"{sv}\",\n+                    \"restore_token\",\n+                    gtk->g_variant_new_string(token)\n+            );\n+        }\n+    }\n+\n@@ -577,0 +676,2 @@\n+    print_gvariant_content(\"SelectSources\", response);\n+\n@@ -627,0 +728,9 @@\n+    print_gvariant_content(\"Streams\", streams);\n+\n+    if (!streams) {\n+        DEBUG_SCREENCAST(\"No streams available with current token\\n\",  NULL);\n+        startHelper->result = RESULT_NO_STREAMS;\n+        helper->isDone = TRUE;\n+        return;\n+    }\n+\n@@ -664,3 +774,1 @@\n-    if (streams) {\n-        gtk->g_variant_unref(streams);\n-    }\n+    gtk->g_variant_unref(streams);\n@@ -709,1 +817,1 @@\n-            portal->screenCastProxy,\n+            getProxy(),\n@@ -718,0 +826,2 @@\n+    print_gvariant_content(\"Start\", response);\n+\n@@ -811,1 +921,1 @@\n-                \"org.freedesktop.portal.Desktop\",\n+                PORTAL_DESKTOP_BUS_NAME,\n@@ -813,1 +923,1 @@\n-                \"org.freedesktop.portal.Session\",\n+                PORTAL_IFACE_SESSION,\n@@ -892,0 +1002,98 @@\n+gboolean remoteDesktopSelectDevicesIfNeeded(const gchar* token) {\n+    if (!isRemoteDesktop || !portal->remoteDesktopProxy) {\n+        DEBUG_SCREENCAST(\"Skipping, remote desktop is not selected \\n\", NULL);\n+        return TRUE;\n+    }\n+\n+    GError* err = NULL;\n+\n+    gchar *requestPath = NULL;\n+    gchar *requestToken = NULL;\n+\n+    struct DBusCallbackHelper helper = {0};\n+\n+\n+    updateRequestPath(\n+            &requestPath,\n+            &requestToken\n+    );\n+\n+    registerScreenCastCallback(\n+            requestPath,\n+            &helper,\n+            callbackRemoteDesktopSelectDevices\n+    );\n+\n+    GVariantBuilder builder;\n+\n+    gtk->g_variant_builder_init(\n+            &builder,\n+            G_VARIANT_TYPE_VARDICT\n+    );\n+\n+    gtk->g_variant_builder_add(\n+            &builder,\n+            \"{sv}\", \"handle_token\",\n+            gtk->g_variant_new_string(requestToken)\n+    );\n+\n+    \/\/ 1: KEYBOARD\n+    \/\/ 2: POINTER\n+    \/\/ 4: TOUCHSCREEN\n+    gtk->g_variant_builder_add(\n+            &builder, \"{sv}\", \"types\",\n+            gtk->g_variant_new_uint32(1 | 2)\n+    );\n+\n+    \/\/ 0: Do not persist (default)\n+    \/\/ 1: Permissions persist as long as the application is running\n+    \/\/ 2: Permissions persist until explicitly revoked\n+    gtk->g_variant_builder_add(\n+            &builder,\n+            \"{sv}\",\n+            \"persist_mode\",\n+            gtk->g_variant_new_uint32(2)\n+    );\n+\n+    if (validateToken(token)) {\n+        gtk->g_variant_builder_add(\n+                &builder,\n+                \"{sv}\",\n+                \"restore_token\",\n+                gtk->g_variant_new_string(token)\n+        );\n+    }\n+\n+    GVariant *response = gtk->g_dbus_proxy_call_sync(\n+            portal->remoteDesktopProxy,\n+            \"SelectDevices\",\n+            gtk->g_variant_new(\"(oa{sv})\", portal->screenCastSessionHandle, &builder),\n+            G_DBUS_CALL_FLAGS_NONE,\n+            -1,\n+            NULL,\n+            &err\n+    );\n+\n+    print_gvariant_content(\"SelectDevices\", response);\n+\n+    if (err) {\n+        DEBUG_SCREENCAST(\"Failed to call SelectDevices: %s\\n\", err->message);\n+        ERR_HANDLE(err);\n+    } else {\n+        waitForCallback(&helper);\n+    }\n+\n+    unregisterScreenCastCallback(&helper);\n+    if (response) {\n+        gtk->g_variant_unref(response);\n+    }\n+\n+    free(requestPath);\n+    free(requestToken);\n+\n+    return helper.data != NULL;\n+}\n+\n+gboolean initAndStartSession(const gchar *token, int *retVal) {\n+\n+    *retVal = RESULT_ERROR;\n@@ -893,3 +1101,0 @@\n-int getPipewireFd(const gchar *token,\n-                  GdkRectangle *affectedBounds,\n-                  gint affectedBoundsLength) {\n@@ -898,1 +1103,1 @@\n-        return RESULT_ERROR;\n+        return FALSE;\n@@ -903,1 +1108,5 @@\n-        return RESULT_ERROR;\n+        return FALSE;\n+    }\n+\n+    if (!remoteDesktopSelectDevicesIfNeeded(token)) {\n+        return FALSE;\n@@ -908,0 +1117,1 @@\n+\n@@ -909,10 +1119,17 @@\n-        DEBUG_SCREENCAST(\"Failed to start\\n\", NULL);\n-        return startResult;\n-    } else {\n-        if (!checkCanCaptureAllRequiredScreens(affectedBounds,\n-                                               affectedBoundsLength)) {\n-            DEBUG_SCREENCAST(\"The location of the screens has changed, \"\n-                             \"the capture area is outside the allowed \"\n-                             \"area.\\n\", NULL)\n-            return RESULT_OUT_OF_BOUNDS;\n-        }\n+        DEBUG_SCREENCAST(\"Failed to start %d\\n\", startResult);\n+        *retVal = startResult;\n+        return FALSE;\n+    }\n+\n+    *retVal = RESULT_OK;\n+    return TRUE;\n+}\n+\n+int getPipewireFd(GdkRectangle *affectedBounds,\n+                  gint affectedBoundsLength) {\n+    if (!checkCanCaptureAllRequiredScreens(affectedBounds,\n+                                           affectedBoundsLength)) {\n+        DEBUG_SCREENCAST(\"The location of the screens has changed, \"\n+                         \"the capture area is outside the allowed \"\n+                         \"area.\\n\", NULL)\n+        return RESULT_OUT_OF_BOUNDS;\n@@ -931,0 +1148,178 @@\n+\n+\n+void print_gvariant_content(gchar *caption, GVariant *response) {\n+    if (!DEBUG_SCREENCAST_ENABLED) {\n+        return;\n+    }\n+\n+    gchar *str = NULL;\n+    if (response != NULL) {\n+        str = gtk->g_variant_print(response, TRUE);\n+    }\n+\n+    DEBUG_SCREENCAST(\"%s response:\\n\\t%s\\n\",\n+                     caption, str);\n+\n+    gtk->g_free(str);\n+}\n+\n+static gboolean callRemoteDesktop(const gchar* methodName, GVariant *params) {\n+    GError *err = NULL;\n+    GVariantBuilder builder;\n+    gtk->g_variant_builder_init (&builder, G_VARIANT_TYPE_VARDICT);\n+\n+    GVariant *response = gtk->g_dbus_proxy_call_sync(\n+            portal->remoteDesktopProxy,\n+            methodName,\n+            params,\n+            G_DBUS_CALL_FLAGS_NONE,\n+            -1,\n+            NULL,\n+            &err\n+    );\n+\n+    gchar * caption = gtk->g_strconcat(\"callRemoteDesktop \", methodName, NULL);\n+    print_gvariant_content(caption, response);\n+    gtk->g_free(caption);\n+\n+    DEBUG_SCREENCAST(\"%s: response %p err %p\\n\", methodName, response, err);\n+\n+    if (err) {\n+        DEBUG_SCREENCAST(\"Failed to call %s: %s\\n\", methodName, err->message);\n+        ERR_HANDLE(err);\n+\n+        \/\/ e.g. user denied mouse keyboard\/interaction\n+        return FALSE;\n+    }\n+\n+    return TRUE;\n+}\n+\n+void clampCoordsIfNeeded(int *x, int *y) {\n+    if (screenSpace.screenCount <= 0 || x == NULL || y == NULL) {\n+        return;\n+    }\n+\n+    GdkRectangle s0 = screenSpace.screens[0].bounds;\n+    int minX = s0.x;\n+    int minY = s0.y;\n+    int maxX = s0.x + s0.width;\n+    int maxY = s0.y + s0.height;\n+\n+    for (int i = 1; i < screenSpace.screenCount; ++i) {\n+        GdkRectangle s = screenSpace.screens[i].bounds;\n+        if (s.x < minX) minX = s.x;\n+        if (s.y < minY) minY = s.y;\n+        if (s.x + s.width > maxX) maxX = s.x + s.width;\n+        if (s.y + s.height > maxY) maxY = s.y + s.height;\n+    }\n+\n+    if (*x < minX) {\n+        *x = minX;\n+    } else if (*x > maxX) {\n+        *x = maxX - 1;\n+    }\n+\n+    if (*y < minY) {\n+        *y = minY;\n+    } else if (*y > maxY) {\n+        *y = maxY - 1;\n+    }\n+}\n+\n+gboolean remoteDesktopMouseMove(int x, int y) {\n+    guint32 streamId = 0;\n+    int relX = -1;\n+    int relY = -1;\n+\n+    DEBUG_SCREENCAST(\"mouseMove %d %d\\n\", x, y);\n+    clampCoordsIfNeeded(&x, &y);\n+    DEBUG_SCREENCAST(\"after clamping %d %d\\n\", x, y);\n+\n+    for (int i = 0; i < screenSpace.screenCount; ++i) {\n+        struct ScreenProps *screenProps = &screenSpace.screens[i];\n+        GdkRectangle rect = screenProps->bounds;\n+\n+        if (x >= rect.x &&\n+             y >= rect.y &&\n+             x <  rect.x + rect.width &&\n+             y <  rect.y + rect.height) {\n+            streamId = screenProps->id;\n+            relX = x - rect.x;\n+            relY = y - rect.y;\n+\n+            DEBUG_SCREENCAST(\"screenId#%i point %dx%d (rel %i %i) inside of screen (%d, %d, %d, %d)\\n\",\n+                             streamId,\n+                             x, y, relX, relY,\n+                             rect.x, rect.y, rect.width, rect.height);\n+\n+            break;\n+        }\n+    }\n+\n+    if (streamId == 0) {\n+        DEBUG_SCREENCAST(\"outside of available screens\\n\", NULL);\n+        return TRUE;\n+    }\n+\n+    GVariantBuilder builder;\n+    gtk->g_variant_builder_init (&builder, G_VARIANT_TYPE_VARDICT);\n+    GVariant *params = gtk->g_variant_new(\"(oa{sv}udd)\", portal->screenCastSessionHandle, &builder,\n+                                          streamId, (double) relX, (double) relY);\n+    return callRemoteDesktop(\"NotifyPointerMotionAbsolute\", params);\n+}\n+\n+gboolean callRemoteDesktopNotifyPointerButton(gboolean isPress, int evdevButton) {\n+    DEBUG_SCREENCAST(\"isPress %d evdevButton %d\\n\", isPress, evdevButton);\n+\n+    GVariantBuilder builder;\n+    gtk->g_variant_builder_init(&builder, G_VARIANT_TYPE_VARDICT);\n+    GVariant *params = gtk->g_variant_new(\"(oa{sv}iu)\",\n+                                          portal->screenCastSessionHandle, &builder, evdevButton, isPress);\n+    return callRemoteDesktop(\"NotifyPointerButton\", params);\n+}\n+\n+gboolean remoteDesktopMouse(gboolean isPress, int buttons) {\n+    DEBUG_SCREENCAST(\"isPress %d awt buttons mask %d\\n\", isPress, buttons);\n+\n+    if (buttons & java_awt_event_InputEvent_BUTTON1_MASK\n+        || buttons & java_awt_event_InputEvent_BUTTON1_DOWN_MASK) {\n+        if (!callRemoteDesktopNotifyPointerButton(isPress, 0x110)) { \/\/ BTN_LEFT\n+            return FALSE;\n+        }\n+    }\n+    if (buttons & java_awt_event_InputEvent_BUTTON2_MASK\n+        || buttons & java_awt_event_InputEvent_BUTTON2_DOWN_MASK) {\n+        if (!callRemoteDesktopNotifyPointerButton(isPress, 0x112)) { \/\/ BTN_MIDDLE\n+            return FALSE;\n+        }\n+\n+    }\n+    if (buttons & java_awt_event_InputEvent_BUTTON3_MASK\n+        || buttons & java_awt_event_InputEvent_BUTTON3_DOWN_MASK) {\n+        if (!callRemoteDesktopNotifyPointerButton(isPress, 0x111)) { \/\/ BTN_RIGHT\n+            return FALSE;\n+        }\n+    }\n+\n+    return TRUE;\n+}\n+\n+gboolean remoteDesktopMouseWheel(int wheelAmt) {\n+    DEBUG_SCREENCAST(\"MouseWheel %d\\n\", wheelAmt);\n+\n+    GVariantBuilder builder;\n+    gtk->g_variant_builder_init(&builder, G_VARIANT_TYPE_VARDICT);\n+    GVariant *params = gtk->g_variant_new(\"(oa{sv}ui)\", portal->screenCastSessionHandle, &builder, 0, wheelAmt);\n+    return callRemoteDesktop(\"NotifyPointerAxisDiscrete\", params);\n+}\n+\n+gboolean remoteDesktopKey(gboolean isPress, int key) {\n+    DEBUG_SCREENCAST(\"Key%s key %d -> \\n\", isPress ? \"Press\" : \"Release\", key);\n+\n+    GVariantBuilder builder;\n+    gtk->g_variant_builder_init(&builder, G_VARIANT_TYPE_VARDICT);\n+    GVariant *params = gtk->g_variant_new (\"(oa{sv}iu)\", portal->screenCastSessionHandle, &builder, key, isPress);\n+    return callRemoteDesktop(\"NotifyKeyboardKeysym\", params);\n+}\n+\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_portal.c","additions":453,"deletions":58,"binary":false,"changes":511,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,11 @@\n+#define PORTAL_DESKTOP_BUS_NAME \"org.freedesktop.portal.Desktop\"\n+#define PORTAL_DESKTOP_OBJECT_PATH \"\/org\/freedesktop\/portal\/desktop\"\n+\n+#define PORTAL_IFACE_REQUEST \"org.freedesktop.portal.Request\"\n+#define PORTAL_IFACE_SESSION \"org.freedesktop.portal.Session\"\n+#define PORTAL_IFACE_SCREENCAST \"org.freedesktop.portal.ScreenCast\"\n+#define PORTAL_IFACE_REMOTE_DESKTOP \"org.freedesktop.portal.RemoteDesktop\"\n+\n+#define PORTAL_MIN_VERSION_SCREENCAST 4\n+#define PORTAL_MIN_VERSION_REMOTE_DESKTOP 2\n+\n@@ -41,3 +52,2 @@\n-int getPipewireFd(const gchar *token,\n-                  GdkRectangle *affectedBounds,\n-                  gint affectedBoundsLength);\n+gboolean initAndStartSession(const gchar *token, int *retVal);\n+int getPipewireFd(GdkRectangle *affectedBounds, gint affectedBoundsLength);\n@@ -51,0 +61,5 @@\n+gboolean remoteDesktopMouseMove(int x, int y);\n+gboolean remoteDesktopMouseWheel(int wheelAmt);\n+gboolean remoteDesktopMouse(gboolean isPress, int buttons);\n+gboolean remoteDesktopKey(gboolean isPress, int key);\n+\n@@ -53,0 +68,1 @@\n+    GDBusProxy *remoteDesktopProxy;\n@@ -69,0 +85,1 @@\n+    RESULT_NO_STREAMS = -13,\n@@ -71,0 +88,6 @@\n+typedef enum {\n+    XDG_METHOD_SCREENCAST = 0,\n+    XDG_METHOD_REMOTE_DESKTOP = 1,\n+} XdgPortalMethod;\n+\n+\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_portal.h","additions":27,"deletions":4,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -84,9 +84,14 @@\n-            \/\/StringBuilder sb = new StringBuilder(256);\n-            \/\/sb.append(\"REQUEST HEADERS:\\n\");\n-            \/\/Log.dumpHeaders(sb, \"    \", systemHeaders);\n-            \/\/Log.dumpHeaders(sb, \"    \", userHeaders);\n-            \/\/Log.logHeaders(sb.toString());\n-\n-            String s = completeHeaders.replaceAll(\"\\r\\n\", \"\\n\");\n-            if (s.endsWith(\"\\n\\n\")) s = s.substring(0, s.length() - 2);\n-            Log.logHeaders(\"REQUEST HEADERS:\\n{0}\\n\", s);\n+            StringBuilder sb = new StringBuilder(completeHeaders.length());\n+            sb.append(\"REQUEST HEADERS:\\n\");\n+            boolean[] firstLine = {true};\n+            completeHeaders.lines().forEach(line -> {\n+                \/\/ First line contains `GET \/foo HTTP\/1.1`.\n+                \/\/ Convert it to look like other `Log.logHeaders()` outputs.\n+                if (firstLine[0]) {\n+                    sb.append(\"  \").append(line).append('\\n');\n+                    firstLine[0] = false;\n+                } else if (!line.isBlank()) {\n+                    sb.append(\"    \").append(line).append('\\n');\n+                }\n+            });\n+            Log.logHeaders(sb.toString());\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1Request.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -227,0 +227,1 @@\n+                    sb.append(\"  %s %s %s\\n\".formatted(request.method(), request.uri(), responseCode));\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1Response.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1688,2 +1688,2 @@\n-            StringBuilder sb = new StringBuilder(\"HEADERS FRAME (stream=\");\n-            sb.append(stream.streamid).append(\")\\n\");\n+            StringBuilder sb = new StringBuilder(\"HEADERS FRAME (streamid=%s):\\n\".formatted(stream.streamid));\n+            sb.append(\"  %s %s\\n\".formatted(stream.request.method(), stream.request.uri()));\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -665,1 +665,2 @@\n-                StringBuilder sb = new StringBuilder(\"RESPONSE HEADERS:\\n\");\n+                StringBuilder sb = new StringBuilder(\"RESPONSE HEADERS (streamid=%s):\\n\".formatted(streamid));\n+                sb.append(\"  %s %s %s\\n\".formatted(request.method(), request.uri(), responseCode));\n@@ -676,1 +677,1 @@\n-                StringBuilder sb = new StringBuilder(\"TRAILING HEADERS:\\n\");\n+                StringBuilder sb = new StringBuilder(\"TRAILING HEADERS (streamid=%s):\\n\".formatted(streamid));\n@@ -1773,2 +1774,2 @@\n-                    StringBuilder sb = new StringBuilder(\"RESPONSE HEADERS\");\n-                    sb.append(\" (streamid=\").append(streamid).append(\"):\\n\");\n+                    StringBuilder sb = new StringBuilder(\"RESPONSE HEADERS (streamid=%s):\\n\".formatted(streamid));\n+                    sb.append(\"  %s %s %s\\n\".formatted(request.method(), request.uri(), responseCode));\n@@ -1785,2 +1786,2 @@\n-                    StringBuilder sb = new StringBuilder(\"TRAILING HEADERS\");\n-                    sb.append(\" (streamid=\").append(streamid).append(\"):\\n\");\n+                    StringBuilder sb = new StringBuilder(\"TRAILING HEADERS (streamid=%s):\\n\".formatted(streamid));\n+                    sb.append(\"  %s %s %s\\n\".formatted(request.method(), request.uri(), responseCode));\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -312,1 +312,1 @@\n-                    int n = JLA.encodeASCII(sa, sp, da, dp, Math.min(dl - dp, sl - sp));\n+                    int n = JLA.uncheckedEncodeASCII(sa, sp, da, dp, Math.min(dl - dp, sl - sp));\n","filename":"src\/jdk.charsets\/share\/classes\/sun\/nio\/cs\/ext\/EUC_JP.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+ *\n+ *   <em>expression<\/em> instanceof <em>pattern<\/em>\n@@ -51,2 +53,23 @@\n-     * Returns the type for which to check.\n-     * @return the type\n+     * Returns the type for which to check, or {@code null} if this {@code instanceof}\n+     * uses a pattern other the {@link BindingPatternTree}.\n+     *\n+     * <p>For {@code instanceof} without a pattern, i.e. in the following form:\n+     * <pre>\n+     *   <em>expression<\/em> instanceof <em>type<\/em>\n+     * <\/pre>\n+     * returns the type.\n+     *\n+     * <p>For {@code instanceof} with a {@link BindingPatternTree}, i.e. in the following form:\n+     * <pre>\n+     *   <em>expression<\/em> instanceof <em>type<\/em> <em>variable_name<\/em>\n+     * <\/pre>\n+     * returns the type.\n+     *\n+     * <p>For instanceof with a pattern, i.e. in the following form:\n+     * <pre>\n+     *   <em>expression<\/em> instanceof <em>pattern<\/em>\n+     * <\/pre>\n+     * returns {@code null}.\n+     *\n+     * @return the type or {@code null} if this {@code instanceof} uses a pattern other than\n+     *         the {@linkplain BindingPatternTree}\n@@ -58,1 +81,1 @@\n-     * Returns the tested pattern, or null if this instanceof does not use\n+     * Returns the tested pattern, or {@code null} if this {@code instanceof} does not use\n@@ -63,1 +86,1 @@\n-     *   <em>expression<\/em> instanceof <em>type<\/em> <em>variable name<\/em>\n+     *   <em>expression<\/em> instanceof <em>pattern<\/em>\n@@ -67,1 +90,1 @@\n-     * <p>For instanceof without a pattern, i.e. in the following form:\n+     * <p>For {@code instanceof} without a pattern, i.e. in the following form:\n@@ -71,1 +94,1 @@\n-     * returns null.\n+     * returns {@code null}.\n@@ -73,1 +96,1 @@\n-     * @return the tested pattern, or null if this instanceof does not use a pattern\n+     * @return the tested pattern, or {@code null} if this {@code instanceof} does not use a pattern\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/InstanceOfTree.java","additions":30,"deletions":7,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.ArrayList;\n@@ -29,0 +30,1 @@\n+import java.util.Collections;\n@@ -30,0 +32,2 @@\n+import java.util.LinkedHashMap;\n+import java.util.List;\n@@ -32,1 +36,1 @@\n-import java.util.concurrent.ConcurrentHashMap;\n+import java.util.Set;\n@@ -122,1 +126,1 @@\n-    private static final Map<String, LintCategory> map = new ConcurrentHashMap<>(20);\n+    private static final Map<String, LintCategory> map = new LinkedHashMap<>(40);\n@@ -152,1 +156,1 @@\n-        if (options.isSet(Option.XLINT) || options.isSet(Option.XLINT_CUSTOM, \"all\")) {\n+        if (options.isSet(Option.XLINT) || options.isSet(Option.XLINT_CUSTOM, Option.LINT_CUSTOM_ALL)) {\n@@ -155,1 +159,1 @@\n-        } else if (options.isSet(Option.XLINT_CUSTOM, \"none\")) {\n+        } else if (options.isSet(Option.XLINT_CUSTOM, Option.LINT_CUSTOM_NONE)) {\n@@ -176,1 +180,1 @@\n-            values.add(LintCategory.SYNCHRONIZATION);\n+            values.add(LintCategory.IDENTITY);\n@@ -182,1 +186,1 @@\n-            if (options.isSet(Option.XLINT_CUSTOM, lc.option)) {\n+            if (options.isExplicitlyEnabled(Option.XLINT, lc)) {\n@@ -184,1 +188,1 @@\n-            } else if (options.isSet(Option.XLINT_CUSTOM, \"-\" + lc.option)) {\n+            } else if (options.isExplicitlyDisabled(Option.XLINT, lc)) {\n@@ -264,0 +268,5 @@\n+        \/**\n+         * Warn about uses of @ValueBased classes where an identity class is expected.\n+         *\/\n+        IDENTITY(\"identity\", true, \"synchronization\"),\n+\n@@ -371,5 +380,0 @@\n-        \/**\n-         * Warn about synchronization attempts on instances of @ValueBased classes.\n-         *\/\n-        SYNCHRONIZATION(\"synchronization\"),\n-\n@@ -418,1 +422,1 @@\n-        LintCategory(String option, boolean annotationSuppression) {\n+        LintCategory(String option, boolean annotationSuppression, String... aliases) {\n@@ -421,1 +425,5 @@\n-            map.put(option, this);\n+            ArrayList<String> optionList = new ArrayList<>(1 + aliases.length);\n+            optionList.add(option);\n+            Collections.addAll(optionList, aliases);\n+            this.optionList = Collections.unmodifiableList(optionList);\n+            this.optionList.forEach(ident -> map.put(ident, this));\n@@ -434,0 +442,7 @@\n+        \/**\n+         * Get all lint category option strings and aliases.\n+         *\/\n+        public static Set<String> options() {\n+            return Collections.unmodifiableSet(map.keySet());\n+        }\n+\n@@ -438,1 +453,1 @@\n-        \/** Get the string representing this category in @SuppressAnnotations and -Xlint options. *\/\n+        \/** Get the \"canonical\" string representing this category in @SuppressAnnotations and -Xlint options. *\/\n@@ -441,0 +456,3 @@\n+        \/** Get a list containing \"option\" followed by zero or more aliases. *\/\n+        public final List<String> optionList;\n+\n@@ -504,14 +522,0 @@\n-    \/**\n-     * Retrieve the recognized lint categories suppressed by the given @SuppressWarnings annotation.\n-     *\n-     * @param annotation @SuppressWarnings annotation, or null\n-     * @return set of lint categories, possibly empty but never null\n-     *\/\n-    private EnumSet<LintCategory> suppressionsFrom(JCAnnotation annotation) {\n-        initializeSymbolsIfNeeded();\n-        if (annotation == null)\n-            return LintCategory.newEmptySet();\n-        Assert.check(annotation.attribute.type.tsym == syms.suppressWarningsType.tsym);\n-        return suppressionsFrom(Stream.of(annotation).map(anno -> anno.attribute));\n-    }\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java","additions":33,"deletions":29,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -229,0 +229,2 @@\n+    public final Type requiresIdentityType;\n+    public final Type requiresIdentityInternalType;\n@@ -629,0 +631,2 @@\n+        requiresIdentityType = enterClass(\"jdk.internal.RequiresIdentity\");\n+        requiresIdentityInternalType = enterSyntheticAnnotation(\"jdk.internal.RequiresIdentity+Annotation\");\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -683,0 +683,4 @@\n+    public boolean isValueBased() {\n+        return tsym != null && (tsym.flags_field & VALUE_BASED) != 0;\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1056,1 +1056,1 @@\n-            if (tree.restype != null && !tree.restype.type.hasTag(VOID))\n+            if (tree.restype != null && !tree.restype.type.hasTag(VOID)) {\n@@ -1058,0 +1058,2 @@\n+            }\n+            chk.checkRequiresIdentity(tree, env.info.lint);\n@@ -1350,0 +1352,1 @@\n+            chk.checkRequiresIdentity(tree, env.info.lint);\n@@ -1975,1 +1978,1 @@\n-        if (identityType && isValueBased(tree.lock.type)) {\n+        if (identityType && tree.lock.type != null && tree.lock.type.isValueBased()) {\n@@ -1981,4 +1984,0 @@\n-        \/\/ where\n-        private boolean isValueBased(Type t) {\n-            return t != null && t.tsym != null && (t.tsym.flags() & VALUE_BASED) != 0;\n-        }\n@@ -2697,0 +2696,1 @@\n+        chk.checkRequiresIdentity(tree, env.info.lint);\n@@ -2939,0 +2939,2 @@\n+            chk.checkRequiresIdentity(tree, env.info.lint);\n+\n@@ -3818,0 +3820,1 @@\n+            chk.checkRequiresIdentity(that, localEnv.info.lint);\n@@ -4121,0 +4124,1 @@\n+        chk.checkRequiresIdentity(tree, env.info.lint);\n@@ -4262,0 +4266,1 @@\n+        chk.checkRequiresIdentity(tree, env.info.lint);\n@@ -5497,2 +5502,7 @@\n-                                log.error(TreeInfo.diagnosticPositionFor(subType.tsym, env.tree),\n-                                        Errors.InvalidPermitsClause(Fragments.DoesntExtendSealed(subType)));\n+                                if(c.isInterface()) {\n+                                    log.error(TreeInfo.diagnosticPositionFor(subType.tsym, env.tree),\n+                                            Errors.InvalidPermitsClause(Fragments.DoesntImplementSealed(kindName(subType.tsym), subType)));\n+                                } else {\n+                                    log.error(TreeInfo.diagnosticPositionFor(subType.tsym, env.tree),\n+                                            Errors.InvalidPermitsClause(Fragments.DoesntExtendSealed(subType)));\n+                                }\n@@ -5621,0 +5631,2 @@\n+        chk.checkRequiresIdentity(tree, env.info.lint);\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.function.Function;\n@@ -49,0 +50,1 @@\n+import com.sun.tools.javac.resources.CompilerProperties;\n@@ -5828,0 +5830,176 @@\n+    void checkRequiresIdentity(JCTree tree, Lint lint) {\n+        switch (tree) {\n+            case JCClassDecl classDecl -> {\n+                Type st = types.supertype(classDecl.sym.type);\n+                if (st != null &&\n+                        \/\/ no need to recheck j.l.Object, shortcut,\n+                        st.tsym != syms.objectType.tsym &&\n+                        \/\/ this one could be null, no explicit extends\n+                        classDecl.extending != null) {\n+                    checkIfIdentityIsExpected(classDecl.extending.pos(), st, lint);\n+                }\n+                for (JCExpression intrface: classDecl.implementing) {\n+                    checkIfIdentityIsExpected(intrface.pos(), intrface.type, lint);\n+                }\n+                for (JCTypeParameter tp : classDecl.typarams) {\n+                    checkIfIdentityIsExpected(tp.pos(), tp.type, lint);\n+                }\n+            }\n+            case JCVariableDecl variableDecl -> {\n+                if (variableDecl.vartype != null &&\n+                        (variableDecl.sym.flags_field & RECORD) == 0 ||\n+                        (variableDecl.sym.flags_field & ~(Flags.PARAMETER | RECORD | GENERATED_MEMBER)) != 0) {\n+                    \/* we don't want to warn twice so if this variable is a compiler generated parameter of\n+                     * a canonical record constructor, we don't want to issue a warning as we will warn the\n+                     * corresponding compiler generated private record field anyways\n+                     *\/\n+                    checkIfIdentityIsExpected(variableDecl.vartype.pos(), variableDecl.vartype.type, lint);\n+                }\n+            }\n+            case JCTypeCast typeCast -> checkIfIdentityIsExpected(typeCast.clazz.pos(), typeCast.clazz.type, lint);\n+            case JCBindingPattern bindingPattern -> {\n+                if (bindingPattern.var.vartype != null) {\n+                    checkIfIdentityIsExpected(bindingPattern.var.vartype.pos(), bindingPattern.var.vartype.type, lint);\n+                }\n+            }\n+            case JCMethodDecl methodDecl -> {\n+                for (JCTypeParameter tp : methodDecl.typarams) {\n+                    checkIfIdentityIsExpected(tp.pos(), tp.type, lint);\n+                }\n+                if (methodDecl.restype != null && !methodDecl.restype.type.hasTag(VOID)) {\n+                    checkIfIdentityIsExpected(methodDecl.restype.pos(), methodDecl.restype.type, lint);\n+                }\n+            }\n+            case JCMemberReference mref -> {\n+                checkIfIdentityIsExpected(mref.expr.pos(), mref.target, lint);\n+                checkIfTypeParamsRequiresIdentity(mref.sym.getMetadata(), mref.typeargs, lint);\n+            }\n+            case JCPolyExpression poly\n+                when (poly instanceof JCNewClass || poly instanceof JCMethodInvocation) -> {\n+                if (poly instanceof JCNewClass newClass) {\n+                    checkIfIdentityIsExpected(newClass.clazz.pos(), newClass.clazz.type, lint);\n+                }\n+                List<JCExpression> argExps = poly instanceof JCNewClass ?\n+                        ((JCNewClass)poly).args :\n+                        ((JCMethodInvocation)poly).args;\n+                Symbol msym = TreeInfo.symbolFor(poly);\n+                if (msym != null) {\n+                    if (!argExps.isEmpty() && msym instanceof MethodSymbol ms && ms.params != null) {\n+                        VarSymbol lastParam = ms.params.head;\n+                        for (VarSymbol param: ms.params) {\n+                            if (param.attribute(syms.requiresIdentityType.tsym) != null && argExps.head.type.isValueBased()) {\n+                                lint.logIfEnabled(argExps.head.pos(), LintWarnings.AttemptToUseValueBasedWhereIdentityExpected);\n+                            }\n+                            lastParam = param;\n+                            argExps = argExps.tail;\n+                        }\n+                        while (argExps != null && !argExps.isEmpty() && lastParam != null) {\n+                            if (lastParam.attribute(syms.requiresIdentityType.tsym) != null && argExps.head.type.isValueBased()) {\n+                                lint.logIfEnabled(argExps.head.pos(), LintWarnings.AttemptToUseValueBasedWhereIdentityExpected);\n+                            }\n+                            argExps = argExps.tail;\n+                        }\n+                    }\n+                    checkIfTypeParamsRequiresIdentity(\n+                            msym.getMetadata(),\n+                            poly instanceof JCNewClass ?\n+                                ((JCNewClass)poly).typeargs :\n+                                ((JCMethodInvocation)poly).typeargs,\n+                            lint);\n+                }\n+            }\n+            default -> throw new AssertionError(\"unexpected tree \" + tree);\n+        }\n+    }\n+\n+    \/** Check if a type required an identity class\n+     *\/\n+    private boolean checkIfIdentityIsExpected(DiagnosticPosition pos, Type t, Lint lint) {\n+        if (t != null &&\n+                lint != null &&\n+                lint.isEnabled(LintCategory.IDENTITY)) {\n+            RequiresIdentityVisitor requiresIdentityVisitor = new RequiresIdentityVisitor();\n+            \/\/ we need to avoid recursion due to self referencing type vars or captures, this is why we need a set\n+            requiresIdentityVisitor.visit(t, new HashSet<>());\n+            if (requiresIdentityVisitor.requiresWarning) {\n+                lint.logIfEnabled(pos, LintWarnings.AttemptToUseValueBasedWhereIdentityExpected);\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    \/\/ where\n+    private class RequiresIdentityVisitor extends Types.SimpleVisitor<Void, Set<Type>> {\n+        boolean requiresWarning = false;\n+\n+        @Override\n+        public Void visitType(Type t, Set<Type> seen) {\n+            return null;\n+        }\n+\n+        @Override\n+        public Void visitWildcardType(WildcardType t, Set<Type> seen) {\n+            return visit(t.type, seen);\n+        }\n+\n+        @Override\n+        public Void visitTypeVar(TypeVar t, Set<Type> seen) {\n+            if (seen.add(t)) {\n+                visit(t.getUpperBound(), seen);\n+            }\n+            return null;\n+        }\n+\n+        @Override\n+        public Void visitCapturedType(CapturedType t, Set<Type> seen) {\n+            if (seen.add(t)) {\n+                visit(t.getUpperBound(), seen);\n+                visit(t.getLowerBound(), seen);\n+            }\n+            return null;\n+        }\n+\n+        @Override\n+        public Void visitArrayType(ArrayType t, Set<Type> seen) {\n+            return visit(t.elemtype, seen);\n+        }\n+\n+        @Override\n+        public Void visitClassType(ClassType t, Set<Type> seen) {\n+            if (t != null && t.tsym != null) {\n+                SymbolMetadata sm = t.tsym.getMetadata();\n+                if (sm != null && !t.getTypeArguments().isEmpty()) {\n+                    if (sm.getTypeAttributes().stream()\n+                            .filter(ta -> ta.type.tsym == syms.requiresIdentityType.tsym &&\n+                                    t.getTypeArguments().get(ta.position.parameter_index) != null &&\n+                                    t.getTypeArguments().get(ta.position.parameter_index).isValueBased()).findAny().isPresent()) {\n+                        requiresWarning = true;\n+                        return null;\n+                    }\n+                }\n+            }\n+            visit(t.getEnclosingType(), seen);\n+            for (Type targ : t.getTypeArguments()) {\n+                visit(targ, seen);\n+            }\n+            return null;\n+        }\n+    } \/\/ RequiresIdentityVisitor\n+\n+    private void checkIfTypeParamsRequiresIdentity(SymbolMetadata sm,\n+                                                     List<JCExpression> typeParamTrees,\n+                                                     Lint lint) {\n+        if (typeParamTrees != null && !typeParamTrees.isEmpty()) {\n+            for (JCExpression targ : typeParamTrees) {\n+                checkIfIdentityIsExpected(targ.pos(), targ.type, lint);\n+            }\n+            if (sm != null)\n+                sm.getTypeAttributes().stream()\n+                        .filter(ta -> (ta.type.tsym == syms.requiresIdentityType.tsym) &&\n+                                typeParamTrees.get(ta.position.parameter_index).type != null &&\n+                                typeParamTrees.get(ta.position.parameter_index).type.isValueBased())\n+                        .forEach(ta -> lint.logIfEnabled(typeParamTrees.get(ta.position.parameter_index).pos(),\n+                                CompilerProperties.LintWarnings.AttemptToUseValueBasedWhereIdentityExpected));\n+        }\n+    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":178,"deletions":0,"binary":false,"changes":178,"status":"modified"},{"patch":"@@ -209,1 +209,5 @@\n-                        minContext.dupTo(resultInfo.checkContext.inferenceContext());\n+                        InferenceContext duppedTo = resultInfo.checkContext.inferenceContext();\n+                        minContext.dupTo(duppedTo);\n+                        if (minContext != inferenceContext) {\n+                            duppedTo.parentIC = inferenceContext;\n+                        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Infer.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -86,0 +86,8 @@\n+    \/* when an inference context (IC) is minimized, the minimized inference context (MIC) contains a\n+     * proper subset of IC's inference vars (IC_IV). In other words there will be at least one inference variable T\n+     * that belongs to IC_IV which doesn't belong to MIC_IV. We need the field below to, among other things,\n+     * check for set membership for cases where the minimized context or any other context derived from it\n+     * needs to deal with an inference variable that has been eliminated from IC_IV while minimizing it\n+     *\/\n+    InferenceContext parentIC;\n+\n@@ -246,1 +254,11 @@\n-        return types.subst(t, inferencevars, instTypes());\n+        ListBuffer<Type> from = new ListBuffer<>();\n+        ListBuffer<Type> to = new ListBuffer<>();\n+        from.addAll(inferencevars);\n+        to.addAll(instTypes());\n+        InferenceContext next = parentIC;\n+        while (next != null) {\n+            from.addAll(next.inferencevars);\n+            to.addAll(next.instTypes());\n+            next = next.parentIC;\n+        }\n+        return types.subst(t, from.toList(), to.toList());\n@@ -554,2 +572,6 @@\n-        return \"Inference vars: \" + inferencevars + '\\n' +\n-               \"Undet vars: \" + undetvars;\n+        String result = \"Inference vars: \" + inferencevars + '\\n' +\n+               \"Undet vars: \" + undetvars + '\\n';\n+        if (parentIC != null) {\n+            result += \"\\nParent : \" + parentIC.toString();\n+        }\n+        return result;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/InferenceContext.java","additions":25,"deletions":3,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-        lintOptions = options.isUnset(Option.XLINT_CUSTOM, \"-\" + LintCategory.OPTIONS.option);\n+        lintOptions = !options.isExplicitlyDisabled(Option.XLINT, LintCategory.OPTIONS);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Modules.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4026,5 +4026,13 @@\n-        return env.info.ctorPrologue &&\n-            (v.flags() & STATIC) == 0 &&\n-            v.owner.kind == TYP &&\n-            types.isSubtype(env.enclClass.type, v.owner.type) &&\n-            (base == null || TreeInfo.isExplicitThisReference(types, (ClassType)env.enclClass.type, base));\n+        if (env.info.ctorPrologue &&\n+                (v.flags() & STATIC) == 0 &&\n+                v.isMemberOf(env.enclClass.sym, types)) {\n+\n+            \/\/ Allow \"Foo.this.x\" when \"Foo\" is (also) an outer class, as this refers to the outer instance\n+            if (base != null) {\n+                return TreeInfo.isExplicitThisReference(types, (ClassType)env.enclClass.type, base);\n+            }\n+\n+            \/\/ It's an early reference to an instance field member of the current instance\n+            return true;\n+        }\n+        return false;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.io.IOError;\n@@ -32,0 +33,1 @@\n+import java.io.UncheckedIOException;\n@@ -51,0 +53,2 @@\n+import jdk.internal.module.Resources;\n+\n@@ -152,7 +156,3 @@\n-        var programPath = programDescriptor.sourceRootPath().resolve(name);\n-        if (Files.exists(programPath)) {\n-            try {\n-                return programPath.toUri().toURL();\n-            } catch (MalformedURLException e) {\n-                throw new RuntimeException(e);\n-            }\n+        URL resource = toResourceInRootPath(name);\n+        if (resource != null) {\n+            return resource;\n@@ -236,1 +236,1 @@\n-            return null;\n+            return toResourceInRootPath(name);\n@@ -274,0 +274,22 @@\n+    \/**\n+     * Resolves a \"resource name\" (as used in the getResource* methods)\n+     * to an existing file relative to source root path, or null otherwise.\n+     *\n+     * @param name the resource name\n+     * @return the URL of the resource, or null\n+     *\/\n+    private URL toResourceInRootPath(String name) {\n+        try {\n+            var path = Resources.toFilePath(programDescriptor.sourceRootPath(), name);\n+            return path == null ? null : path.toUri().toURL();\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        } catch (IOError error) {\n+            Throwable cause = error.getCause();\n+            if (cause instanceof IOException e) {\n+                throw new UncheckedIOException(e);\n+            }\n+            throw new RuntimeException(cause);\n+        }\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/launcher\/MemoryClassLoader.java","additions":31,"deletions":9,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,5 @@\n-                    throw (IOException) error.getCause();\n+                    Throwable cause = error.getCause();\n+                    if (cause instanceof IOException e) {\n+                        throw e;\n+                    }\n+                    throw new RuntimeException(cause);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/launcher\/MemoryModuleFinder.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -230,0 +230,4 @@\n+            if (Modifier.isAbstract(mainClass.getModifiers())) {\n+                throw new Fault(Errors.CantInstantiate(mainClassName));\n+            }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/launcher\/SourceLauncher.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -506,2 +506,1 @@\n-                    boolean lintPaths = options.isUnset(Option.XLINT_CUSTOM,\n-                            \"-\" + LintCategory.PATH.option);\n+                    boolean lintPaths = !options.isExplicitlyDisabled(Option.XLINT, LintCategory.PATH);\n@@ -580,1 +579,1 @@\n-        boolean lintOptions = options.isUnset(Option.XLINT_CUSTOM, \"-\" + LintCategory.OPTIONS.option);\n+        boolean lintOptions = !options.isExplicitlyDisabled(Option.XLINT, LintCategory.OPTIONS);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/Arguments.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+import java.util.stream.Stream;\n@@ -494,1 +495,1 @@\n-                                            \"all\",\n+                                            LINT_CUSTOM_ALL,\n@@ -496,7 +497,4 @@\n-            for (LintCategory lc : LintCategory.values()) {\n-                log.printRawLines(WriterKind.STDOUT,\n-                                  String.format(LINT_KEY_FORMAT,\n-                                                lc.option,\n-                                                log.localize(PrefixKind.JAVAC,\n-                                                             \"opt.Xlint.desc.\" + lc.option)));\n-            }\n+            LintCategory.options().forEach(ident -> log.printRawLines(WriterKind.STDOUT,\n+                              String.format(LINT_KEY_FORMAT,\n+                                            ident,\n+                                            log.localize(PrefixKind.JAVAC, \"opt.Xlint.desc.\" + ident))));\n@@ -505,1 +503,1 @@\n-                                            \"none\",\n+                                            LINT_CUSTOM_NONE,\n@@ -838,0 +836,10 @@\n+    \/**\n+     * Special lint category key meaning \"all lint categories\".\n+     *\/\n+    public static final String LINT_CUSTOM_ALL = \"all\";\n+\n+    \/**\n+     * Special lint category key meaning \"no lint categories\".\n+     *\/\n+    public static final String LINT_CUSTOM_NONE = \"none\";\n+\n@@ -1084,0 +1092,11 @@\n+    \/**\n+     * If this option is named {@code FOO}, obtain the option named {@code FOO_CUSTOM}.\n+     *\n+     * @param option regular option\n+     * @return corresponding custom option\n+     * @throws IllegalArgumentException if no such option exists\n+     *\/\n+    public Option getCustom() {\n+        return Option.valueOf(name() + \"_CUSTOM\");\n+    }\n+\n@@ -1367,6 +1386,5 @@\n-        choices.add(\"all\");\n-        for (Lint.LintCategory c : Lint.LintCategory.values()) {\n-            choices.add(c.option);\n-            choices.add(\"-\" + c.option);\n-        }\n-        choices.add(\"none\");\n+        choices.add(LINT_CUSTOM_ALL);\n+        Lint.LintCategory.options().stream()\n+          .flatMap(ident -> Stream.of(ident, \"-\" + ident))\n+          .forEach(choices::add);\n+        choices.add(LINT_CUSTOM_NONE);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/Option.java","additions":33,"deletions":15,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -3974,1 +3974,5 @@\n-    subclass {0} must extend sealed class\n+    class {0} must extend sealed class\n+\n+# 0: kind name, 1: type\n+compiler.misc.doesnt.implement.sealed=\\\n+    {0} {1} must extend sealed interface\n@@ -4287,1 +4291,1 @@\n-# lint: synchronization\n+# lint: identity\n@@ -4291,0 +4295,4 @@\n+# lint: identity\n+compiler.warn.attempt.to.use.value.based.where.identity.expected=\\\n+    use of a value-based class with an operation that expects reliable identity\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -298,1 +298,7 @@\n-    Warn about synchronization attempts on instances of value-based classes.\n+    Warn about synchronization attempts on instances of value-based classes.\\n\\\n+\\                         This key is a deprecated alias for ''identity'', which has the same uses and\\n\\\n+\\                         effects. Users are encouraged to use the ''identity'' category for all future\\n\\\n+\\                         and existing uses of ''synchronization''.\n+\n+javac.opt.Xlint.desc.identity=\\\n+    Warn about uses of value-based classes where an identity class is expected.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/javac.properties","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,5 @@\n-    can''t find main(String[]) method in class: {0}\n+    can''t find main(String[]) or main() method in class: {0}\n+\n+# 0: string\n+launcher.err.cant.instantiate=\\\n+    abstract class: {0} can not be instantiated\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/launcher.properties","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import com.sun.tools.javac.code.Lint.LintCategory;\n@@ -173,0 +174,52 @@\n+    \/**\n+     * Check whether the given lint category is explicitly enabled or disabled.\n+     *\n+     * <p>\n+     * If the category is neither enabled nor disabled, return the given default value.\n+     *\n+     * @param option the plain (non-custom) option\n+     * @param lc the {@link LintCategory} in question\n+     * @param defaultValue presumed default value\n+     * @return true if {@code lc} would be included\n+     *\/\n+    public boolean isSet(Option option, LintCategory lc, boolean defaultValue) {\n+        Option customOption = option.getCustom();\n+        if (lc.optionList.stream().anyMatch(alias -> isSet(customOption, alias))) {\n+            return true;\n+        }\n+        if (lc.optionList.stream().anyMatch(alias -> isSet(customOption, \"-\" + alias))) {\n+            return false;\n+        }\n+        if (isSet(option) || isSet(customOption, Option.LINT_CUSTOM_ALL)) {\n+            return true;\n+        }\n+        if (isSet(customOption, Option.LINT_CUSTOM_NONE)) {\n+            return false;\n+        }\n+        return defaultValue;\n+    }\n+\n+    \/**\n+     * Determine if a specific {@link LintCategory} was explicitly enabled via a custom option flag\n+     * of the form {@code -Flag:all} or {@code -Flag:key}.\n+     *\n+     * @param option the option\n+     * @param lc the {@link LintCategory} in question\n+     * @return true if {@code lc} has been explicitly enabled\n+     *\/\n+    public boolean isExplicitlyEnabled(Option option, LintCategory lc) {\n+        return isSet(option, lc, false);\n+    }\n+\n+    \/**\n+     * Determine if a specific {@link LintCategory} was explicitly disabled via a custom option flag\n+     * of the form {@code -Flag:none} or {@code -Flag:-key}.\n+     *\n+     * @param option the option\n+     * @param lc the {@link LintCategory} in question\n+     * @return true if {@code lc} has been explicitly disabled\n+     *\/\n+    public boolean isExplicitlyDisabled(Option option, LintCategory lc) {\n+        return !isSet(option, lc, true);\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Options.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -167,0 +167,1 @@\n+ * <tr><th scope=\"row\">{@code identity}             <td>use of a value-based class where an identity class is expected\n@@ -189,1 +190,5 @@\n- * <tr><th scope=\"row\">{@code synchronization}      <td>synchronization attempts on instances of value-based classes\n+ * <tr><th scope=\"row\">{@code synchronization}      <td>synchronization attempts on instances of value-based classes;\n+ *                                                      this key is a deprecated alias for {@code identity}, which has\n+ *                                                      the same uses and effects. Users are encouraged to use the\n+ *                                                      {@code identity} category for all future and existing uses of\n+ *                                                      {@code synchronization}\n","filename":"src\/jdk.compiler\/share\/classes\/module-info.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -599,0 +599,3 @@\n+    -   `identity`: Warns about use of a value-based class where an identity\n+        class is expected\n+\n@@ -649,1 +652,3 @@\n-        of value-based classes.\n+        of value-based classes. This key is a deprecated alias for `identity`,\n+        which has the same uses and effects. Users are encouraged to use the\n+        `identity` category for all future and existing uses of `synchronization`.\n","filename":"src\/jdk.compiler\/share\/man\/javac.md","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,2 +26,0 @@\n-import jdk.internal.javac.ParticipatesInPreview;\n-\n@@ -36,1 +34,0 @@\n-@ParticipatesInPreview\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/module-info.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractShuffle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -898,0 +900,19 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            VectorSpecies<Integer> species = IntVector.SPECIES_128;\n+            Vector<Byte> v = toBitsVector();\n+            v.convertShape(VectorOperators.B2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.B2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+            v.convertShape(VectorOperators.B2I, species, 2)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 2, bo);\n+            v.convertShape(VectorOperators.B2I, species, 3)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 3, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -930,0 +932,19 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            VectorSpecies<Integer> species = IntVector.SPECIES_256;\n+            Vector<Byte> v = toBitsVector();\n+            v.convertShape(VectorOperators.B2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.B2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+            v.convertShape(VectorOperators.B2I, species, 2)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 2, bo);\n+            v.convertShape(VectorOperators.B2I, species, 3)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 3, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -994,0 +996,19 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            VectorSpecies<Integer> species = IntVector.SPECIES_512;\n+            Vector<Byte> v = toBitsVector();\n+            v.convertShape(VectorOperators.B2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.B2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+            v.convertShape(VectorOperators.B2I, species, 2)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 2, bo);\n+            v.convertShape(VectorOperators.B2I, species, 3)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 3, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -882,0 +884,19 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            VectorSpecies<Integer> species = IntVector.SPECIES_64;\n+            Vector<Byte> v = toBitsVector();\n+            v.convertShape(VectorOperators.B2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.B2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+            v.convertShape(VectorOperators.B2I, species, 2)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 2, bo);\n+            v.convertShape(VectorOperators.B2I, species, 3)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 3, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -868,0 +870,19 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            VectorSpecies<Integer> species = IntVector.SPECIES_MAX;\n+            Vector<Byte> v = toBitsVector();\n+            v.convertShape(VectorOperators.B2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.B2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+            v.convertShape(VectorOperators.B2I, species, 2)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 2, bo);\n+            v.convertShape(VectorOperators.B2I, species, 3)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 3, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -867,1 +869,2 @@\n-            }\n+           }\n+\n@@ -870,0 +873,30 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -871,1 +873,2 @@\n-            }\n+           }\n+\n@@ -874,0 +877,30 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -879,1 +881,2 @@\n-            }\n+           }\n+\n@@ -882,0 +885,30 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -865,1 +867,2 @@\n-            }\n+           }\n+\n@@ -868,0 +871,30 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -864,1 +866,2 @@\n-            }\n+           }\n+\n@@ -867,0 +870,30 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -850,0 +852,6 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -858,0 +860,6 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -874,0 +876,6 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -846,0 +848,6 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -843,0 +845,6 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -861,0 +863,6 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -869,0 +871,6 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -885,0 +887,6 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -857,0 +859,6 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -866,0 +868,6 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -868,1 +870,2 @@\n-            }\n+           }\n+\n@@ -871,0 +874,30 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -872,1 +874,2 @@\n-            }\n+           }\n+\n@@ -875,0 +878,30 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -880,1 +882,2 @@\n-            }\n+           }\n+\n@@ -883,0 +886,30 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -866,1 +868,2 @@\n-            }\n+           }\n+\n@@ -869,0 +872,30 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -866,1 +868,2 @@\n-            }\n+           }\n+\n@@ -869,0 +872,30 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -876,0 +878,13 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            VectorSpecies<Integer> species = IntVector.SPECIES_128;\n+            Vector<Short> v = toBitsVector();\n+            v.convertShape(VectorOperators.S2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.S2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -892,0 +894,13 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            VectorSpecies<Integer> species = IntVector.SPECIES_256;\n+            Vector<Short> v = toBitsVector();\n+            v.convertShape(VectorOperators.S2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.S2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -924,0 +926,13 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            VectorSpecies<Integer> species = IntVector.SPECIES_512;\n+            Vector<Short> v = toBitsVector();\n+            v.convertShape(VectorOperators.S2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.S2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -868,0 +870,13 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            VectorSpecies<Integer> species = IntVector.SPECIES_64;\n+            Vector<Short> v = toBitsVector();\n+            v.convertShape(VectorOperators.S2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.S2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -862,0 +864,13 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+            VectorSpecies<Integer> species = IntVector.SPECIES_MAX;\n+            Vector<Short> v = toBitsVector();\n+            v.convertShape(VectorOperators.S2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.S2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,4 @@\n+\n+import java.lang.foreign.MemorySegment;\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -317,0 +321,46 @@\n+    \/**\n+     * Loads a shuffle from a {@linkplain MemorySegment memory segment}\n+     * starting at an offset into the memory segment.\n+     * Bytes are composed into shuffle lanes according\n+     * to the specified byte order.\n+     * The shuffle is arranged into lanes according to\n+     * <a href=\"Vector.html#lane-order\">memory ordering<\/a>.\n+     * <p>\n+     * The following pseudocode illustrates the behavior:\n+     * <pre>{@code\n+     * var slice = ms.asSlice(offset);\n+     * int[] ar = new int[species.length()];\n+     * for (int n = 0; n < ar.length; n++) {\n+     *     ar[n] = slice.getAtIndex(ValuaLayout.JAVA_INT_UNALIGNED, n);\n+     * }\n+     * VectorShuffle<E> r = VectorShuffle.fromArray(species, ar, 0);\n+     * }<\/pre>\n+     *\n+     * @implNote\n+     * This operation is likely to be more efficient if\n+     * the specified byte order is the same as\n+     * {@linkplain ByteOrder#nativeOrder()\n+     * the platform native order},\n+     * since this method will not need to reorder\n+     * the bytes of lane values.\n+     *\n+     * @param species the shuffle species\n+     * @param ms the source indexes in memory which the shuffle will draw from\n+     * @param offset the offset into the segment\n+     * @param bo the byte order\n+     * @param <E> the boxed element type\n+     * @return a shuffle where each lane's source index is set to the given\n+     *         {@code int} value, partially wrapped if exceptional\n+     * @throws IndexOutOfBoundsException if {@code offset < 0}, or\n+     *         {@code offset > sourceIndexes.byteSize() - VLENGTH * 4}\n+     * @since 25\n+     *\/\n+    @ForceInline\n+    public static final <E> VectorShuffle<E> fromMemorySegment(VectorSpecies<E> species, MemorySegment ms,\n+                                                               long offset, ByteOrder bo) {\n+        long memsize = species.length() * 4;\n+        MemorySegment arraySlice = ms.asSlice(offset, memsize);\n+        int[] indices = arraySlice.toArray(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo));\n+        return species.shuffleFromArray(indices,0);\n+    }\n+\n@@ -526,0 +576,39 @@\n+    \/**\n+     * Stores this shuffle into a {@linkplain MemorySegment memory segment}\n+     * starting at an offset using explicit byte order.\n+     * <p>\n+     * Bytes are extracted from shuffle lanes according\n+     * to the specified byte ordering.\n+     * The shuffle lanes are stored according to their\n+     * <a href=\"Vector.html#lane-order\">memory ordering<\/a>.\n+     * <p>\n+     * The following pseudocode illustrates the behavior:\n+     * <pre>{@code\n+     * int[] a = this.toArray();\n+     * var slice = ms.asSlice(offset)\n+     * for (int n = 0; n < a.length; n++) {\n+     *     slice.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, n, a[n]);\n+     * }\n+     * }<\/pre>\n+     *\n+     * @implNote\n+     * This operation is likely to be more efficient if\n+     * the specified byte order is the same as\n+     * {@linkplain ByteOrder#nativeOrder()\n+     * the platform native order},\n+     * since this method will not need to reorder\n+     * the bytes of lane values.\n+     *\n+     * @apiNote Shuffle source indexes are always in the\n+     * range from {@code -VLENGTH} to {@code VLENGTH-1}.\n+     * @param ms the memory segment\n+     * @param offset the offset into the segment\n+     * @param bo the byte order\n+     * @throws IndexOutOfBoundsException if {@code offset < 0} or\n+     *        {@code offset > a.byteSize() - this.length() * 4}\n+     * @throws IllegalArgumentException if the segment {@code ms} is read-only\n+     * @since 25\n+     *\/\n+    public abstract void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo);\n+\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorShuffle.java","additions":90,"deletions":1,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.lang.foreign.ValueLayout;\n+import java.nio.ByteOrder;\n@@ -1216,1 +1218,2 @@\n-            }\n+           }\n+\n@@ -1220,0 +1223,61 @@\n+        @Override\n+        @ForceInline\n+        public void intoMemorySegment(MemorySegment ms, long offset, ByteOrder bo) {\n+#if[byte]\n+            VectorSpecies<Integer> species = IntVector.SPECIES_$BITS$;\n+            Vector<Byte> v = toBitsVector();\n+            v.convertShape(VectorOperators.B2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.B2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+            v.convertShape(VectorOperators.B2I, species, 2)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 2, bo);\n+            v.convertShape(VectorOperators.B2I, species, 3)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize() * 3, bo);\n+#end[byte]\n+#if[short]\n+            VectorSpecies<Integer> species = IntVector.SPECIES_$BITS$;\n+            Vector<Short> v = toBitsVector();\n+            v.convertShape(VectorOperators.S2I, species, 0)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset, bo);\n+            v.convertShape(VectorOperators.S2I, species, 1)\n+                    .reinterpretAsInts()\n+                    .intoMemorySegment(ms, offset + species.vectorByteSize(), bo);\n+#end[short]\n+#if[intOrFloat]\n+            toBitsVector().intoMemorySegment(ms, offset, bo);\n+#end[intOrFloat]\n+#if[longOrDouble]\n+            switch (length()) {\n+                case 1 -> ms.set(ValueLayout.OfInt.JAVA_INT_UNALIGNED, offset, laneSource(0));\n+                case 2 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_64, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 4 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_128, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 8 -> toBitsVector()\n+                       .convertShape(VectorOperators.L2I, IntVector.SPECIES_256, 0)\n+                       .reinterpretAsInts()\n+                       .intoMemorySegment(ms, offset, bo);\n+                case 16 -> toBitsVector()\n+                        .convertShape(VectorOperators.L2I, IntVector.SPECIES_512, 0)\n+                        .reinterpretAsInts()\n+                        .intoMemorySegment(ms, offset, bo);\n+                default -> {\n+                    VectorIntrinsics.checkFromIndexSize(offset, length(), ms.byteSize() \/ 4);\n+                    for (int i = 0; i < length(); i++) {\n+                        ms.setAtIndex(ValueLayout.JAVA_INT_UNALIGNED, offset + (i << 2), laneSource(i));\n+                    }\n+                }\n+            }\n+#end[longOrDouble]\n+         }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":66,"deletions":2,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.util.List;\n@@ -32,1 +33,0 @@\n-import jdk.vm.ci.code.RegisterArray;\n@@ -95,1 +95,1 @@\n-    public static final RegisterArray cpuRegisters = new RegisterArray(\n+    public static final List<Register> cpuRegisters = List.of(\n@@ -141,1 +141,1 @@\n-    public static final RegisterArray simdRegisters = new RegisterArray(\n+    public static final List<Register> simdRegisters = List.of(\n@@ -150,1 +150,1 @@\n-    public static final RegisterArray allRegisters = new RegisterArray(\n+    public static final List<Register> allRegisters = List.of(\n@@ -192,14 +192,1 @@\n-    \/**\n-     * Set of flags to control code emission.\n-     *\/\n-    public enum Flag {\n-        UseCRC32,\n-        UseSIMDForMemoryOps,\n-        AvoidUnalignedAccesses,\n-        UseLSE,\n-        UseBlockZeroing\n-    }\n-\n-    private final EnumSet<Flag> flags;\n-\n-    public AArch64(EnumSet<CPUFeature> features, EnumSet<Flag> flags) {\n+    public AArch64(EnumSet<CPUFeature> features) {\n@@ -208,1 +195,0 @@\n-        this.flags = flags;\n@@ -216,4 +202,0 @@\n-    public EnumSet<Flag> getFlags() {\n-        return flags;\n-    }\n-\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/aarch64\/AArch64.java","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.util.List;\n@@ -37,1 +38,0 @@\n-import jdk.vm.ci.code.RegisterArray;\n@@ -89,1 +89,1 @@\n-    public static final Register[] cpuRegisters = {\n+    public static final List<Register> cpuRegisters = List.of(\n@@ -92,1 +92,8 @@\n-    };\n+    );\n+\n+    public static final List<Register> cpuRegistersAPX = List.of(\n+        rax, rcx, rdx, rbx, rsp, rbp, rsi, rdi,\n+         r8,  r9, r10, r11, r12, r13, r14, r15,\n+        r16, r17, r18, r19, r20, r21, r22, r23,\n+        r24, r25, r26, r27, r28, r29, r30, r31\n+    );\n@@ -133,1 +140,1 @@\n-    public static final Register[] xmmRegistersSSE = {\n+    public static final List<Register> xmmRegistersSSE = List.of(\n@@ -136,1 +143,1 @@\n-    };\n+    );\n@@ -138,1 +145,1 @@\n-    public static final Register[] xmmRegistersAVX512 = {\n+    public static final List<Register> xmmRegistersAVX512 = List.of(\n@@ -143,1 +150,1 @@\n-    };\n+    );\n@@ -156,1 +163,1 @@\n-    public static final RegisterArray valueRegistersSSE = new RegisterArray(\n+    public static final List<Register> valueRegistersSSE = List.of(\n@@ -163,1 +170,1 @@\n-    public static final RegisterArray valueRegistersAVX512 = new RegisterArray(\n+    public static final List<Register> valueRegistersAVX512 = List.of(\n@@ -173,0 +180,21 @@\n+    public static final List<Register> valueRegistersSSEAndAPX = List.of(\n+        rax,  rcx,  rdx,   rbx,   rsp,   rbp,   rsi,   rdi,\n+        r8,   r9,   r10,   r11,   r12,   r13,   r14,   r15,\n+        r16,  r17,  r18,   r19,   r20,   r21,   r22,   r23,\n+        r24,  r25,  r26,   r27,   r28,   r29,   r30,   r31,\n+        xmm0, xmm1, xmm2,  xmm3,  xmm4,  xmm5,  xmm6,  xmm7,\n+        xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15\n+    );\n+\n+    public static final List<Register> valueRegistersAVX512AndAPX = List.of(\n+        rax,  rcx,  rdx,   rbx,   rsp,   rbp,   rsi,   rdi,\n+        r8,   r9,   r10,   r11,   r12,   r13,   r14,   r15,\n+        r16,  r17,  r18,   r19,   r20,   r21,   r22,   r23,\n+        r24,  r25,  r26,   r27,   r28,   r29,   r30,   r31,\n+        xmm0, xmm1, xmm2,  xmm3,  xmm4,  xmm5,  xmm6,  xmm7,\n+        xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,\n+        xmm16, xmm17, xmm18, xmm19, xmm20, xmm21, xmm22, xmm23,\n+        xmm24, xmm25, xmm26, xmm27, xmm28, xmm29, xmm30, xmm31,\n+        k0, k1, k2, k3, k4, k5, k6, k7\n+    );\n+\n@@ -178,1 +206,1 @@\n-    public static final RegisterArray allRegisters = new RegisterArray(\n+    public static final List<Register> allRegisters = List.of(\n@@ -267,10 +295,0 @@\n-    \/**\n-     * Set of flags to control code emission.\n-     *\/\n-    public enum Flag {\n-        UseCountLeadingZerosInstruction,\n-        UseCountTrailingZerosInstruction\n-    }\n-\n-    private final EnumSet<Flag> flags;\n-\n@@ -281,1 +299,1 @@\n-    public AMD64(EnumSet<CPUFeature> features, EnumSet<Flag> flags) {\n+    public AMD64(EnumSet<CPUFeature> features) {\n@@ -284,1 +302,0 @@\n-        this.flags = flags;\n@@ -308,4 +325,0 @@\n-    public EnumSet<Flag> getFlags() {\n-        return flags;\n-    }\n-\n@@ -313,2 +326,8 @@\n-    public RegisterArray getAvailableValueRegisters() {\n-        if (features.contains(CPUFeature.AVX512F)) {\n+    public List<Register> getAvailableValueRegisters() {\n+        if (features.contains(CPUFeature.APX_F)) {\n+            if (features.contains(CPUFeature.AVX512F)) {\n+                return valueRegistersAVX512AndAPX;\n+            } else {\n+                return valueRegistersSSEAndAPX;\n+            }\n+        } else if (features.contains(CPUFeature.AVX512F)) {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/amd64\/AMD64.java","additions":47,"deletions":28,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.util.List;\n@@ -53,1 +54,1 @@\n-    private final RegisterArray registers;\n+    private final List<Register> registers;\n@@ -82,1 +83,1 @@\n-    protected Architecture(String name, PlatformKind wordKind, ByteOrder byteOrder, boolean unalignedMemoryAccess, RegisterArray registers, int implicitMemoryBarriers,\n+    protected Architecture(String name, PlatformKind wordKind, ByteOrder byteOrder, boolean unalignedMemoryAccess, List<Register> registers, int implicitMemoryBarriers,\n@@ -147,1 +148,1 @@\n-    public RegisterArray getRegisters() {\n+    public List<Register> getRegisters() {\n@@ -155,1 +156,1 @@\n-    public RegisterArray getAvailableValueRegisters() {\n+    public List<Register> getAvailableValueRegisters() {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/code\/Architecture.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,2 @@\n+import java.util.List;\n+\n@@ -52,1 +54,1 @@\n-    private final AllocatableValue[] argumentLocations;\n+    private final List<AllocatableValue> argumentLocations;\n@@ -66,1 +68,1 @@\n-        this.argumentLocations = argumentLocations;\n+        this.argumentLocations = List.of(argumentLocations);\n@@ -83,1 +85,1 @@\n-        return argumentLocations[index];\n+        return argumentLocations.get(index);\n@@ -97,1 +99,1 @@\n-        return argumentLocations.length;\n+        return argumentLocations.size();\n@@ -103,6 +105,2 @@\n-    @SuppressFBWarnings(value = \"EI_EXPOSE_REP\", justification = \"FB false positive\")\n-    public AllocatableValue[] getArguments() {\n-        if (argumentLocations.length == 0) {\n-            return argumentLocations;\n-        }\n-        return argumentLocations.clone();\n+    public List<AllocatableValue> getArguments() {\n+        return argumentLocations;\n@@ -128,2 +126,2 @@\n-        for (int i = 0; i < argumentLocations.length; i++) {\n-            Value location = argumentLocations[i];\n+        for (int i = 0; i < argumentLocations.size(); i++) {\n+            Value location = argumentLocations.get(i);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/code\/CallingConvention.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1,106 +0,0 @@\n-\/*\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.vm.ci.code;\n-\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.List;\n-\n-\/**\n- * An immutable ordered list of registers. Only required because Java lacks immutable arrays.\n- *\/\n-public final class RegisterArray implements Iterable<Register> {\n-\n-    private final Register[] registers;\n-    private int hash;\n-\n-    public RegisterArray(Register... registers) {\n-        this.registers = registers;\n-    }\n-\n-    public RegisterArray(Collection<Register> registers) {\n-        this.registers = registers.toArray(new Register[registers.size()]);\n-    }\n-\n-    \/**\n-     * Gets the number of registers.\n-     *\/\n-    public int size() {\n-        return registers.length;\n-    }\n-\n-    \/**\n-     * Gets the register at a given index.\n-     *\n-     * @param index the index of the register to retrieve\n-     *\/\n-    public Register get(int index) {\n-        return registers[index];\n-    }\n-\n-    public void addTo(Collection<Register> collection) {\n-        collection.addAll(Arrays.asList(registers));\n-    }\n-\n-    \/**\n-     * Gets an immutable view of the registers as a list.\n-     *\/\n-    public List<Register> asList() {\n-        return Collections.unmodifiableList(Arrays.asList(registers));\n-    }\n-\n-    \/**\n-     * Gets a copy of the registers as an array.\n-     *\/\n-    public Register[] toArray() {\n-        return registers.clone();\n-    }\n-\n-    @Override\n-    public Iterator<Register> iterator() {\n-        return Arrays.asList(registers).iterator();\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        if (hash == 0 && registers.length > 0) {\n-            hash = Arrays.hashCode(registers);\n-        }\n-        return hash;\n-    }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (obj instanceof RegisterArray) {\n-            return Arrays.equals(registers, ((RegisterArray) obj).registers);\n-        }\n-        return false;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return Arrays.toString(registers);\n-    }\n-}\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/code\/RegisterArray.java","additions":0,"deletions":106,"binary":false,"changes":106,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    public static RegisterAttributes[] createMap(RegisterConfig registerConfig, RegisterArray registers) {\n+    public static List<RegisterAttributes> createMap(RegisterConfig registerConfig, List<Register> registers) {\n@@ -60,3 +60,3 @@\n-        List<Register> callerSaveRegisters = registerConfig.getCallerSaveRegisters().asList();\n-        List<Register> calleeSaveRegisters = registerConfig.getCalleeSaveRegisters() == null ? Collections.emptyList() : registerConfig.getCalleeSaveRegisters().asList();\n-        List<Register> allocatableRegisters = registerConfig.getAllocatableRegisters().asList();\n+        List<Register> callerSaveRegisters = registerConfig.getCallerSaveRegisters();\n+        List<Register> calleeSaveRegisters = registerConfig.getCalleeSaveRegisters() == null ? Collections.emptyList() : registerConfig.getCalleeSaveRegisters();\n+        List<Register> allocatableRegisters = registerConfig.getAllocatableRegisters();\n@@ -77,1 +77,1 @@\n-        return map;\n+        return List.of(map);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/code\/RegisterAttributes.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import java.util.List;\n@@ -74,1 +75,1 @@\n-    RegisterArray getCallingConventionRegisters(Type type, JavaKind kind);\n+    List<Register> getCallingConventionRegisters(Type type, JavaKind kind);\n@@ -79,1 +80,1 @@\n-    RegisterArray getAllocatableRegisters();\n+    List<Register> getAllocatableRegisters();\n@@ -85,1 +86,1 @@\n-    RegisterArray filterAllocatableRegisters(PlatformKind kind, RegisterArray registers);\n+    List<Register> filterAllocatableRegisters(PlatformKind kind, List<Register> registers);\n@@ -90,1 +91,1 @@\n-    RegisterArray getCallerSaveRegisters();\n+    List<Register> getCallerSaveRegisters();\n@@ -95,1 +96,1 @@\n-    RegisterArray getCalleeSaveRegisters();\n+    List<Register> getCalleeSaveRegisters();\n@@ -111,1 +112,1 @@\n-     * @return an array where an element at index i holds the attributes of the register whose\n+     * @return a list where an element at index i holds the attributes of the register whose\n@@ -114,1 +115,1 @@\n-    RegisterAttributes[] getAttributesMap();\n+    List<RegisterAttributes> getAttributesMap();\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/code\/RegisterConfig.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,22 +55,0 @@\n-    private static EnumSet<AArch64.Flag> computeFlags(AArch64HotSpotVMConfig config) {\n-        EnumSet<AArch64.Flag> flags = EnumSet.noneOf(AArch64.Flag.class);\n-\n-        if (config.useCRC32) {\n-            flags.add(AArch64.Flag.UseCRC32);\n-        }\n-        if (config.useSIMDForMemoryOps) {\n-            flags.add(AArch64.Flag.UseSIMDForMemoryOps);\n-        }\n-        if (config.avoidUnalignedAccesses) {\n-            flags.add(AArch64.Flag.AvoidUnalignedAccesses);\n-        }\n-        if (config.useLSE) {\n-            flags.add(AArch64.Flag.UseLSE);\n-        }\n-        if (config.useBlockZeroing) {\n-            flags.add(AArch64.Flag.UseBlockZeroing);\n-        }\n-\n-        return flags;\n-    }\n-\n@@ -81,1 +59,1 @@\n-        Architecture arch = new AArch64(computeFeatures(config), computeFlags(config));\n+        Architecture arch = new AArch64(computeFeatures(config));\n@@ -116,1 +94,0 @@\n-    @SuppressWarnings(\"try\")\n@@ -118,1 +95,0 @@\n-\n@@ -128,2 +104,2 @@\n-        try (InitTimer t = timer(\"create providers\")) {\n-            try (InitTimer rt = timer(\"create MetaAccess provider\")) {\n+        try (InitTimer _ = timer(\"create providers\")) {\n+            try (InitTimer _ = timer(\"create MetaAccess provider\")) {\n@@ -132,1 +108,1 @@\n-            try (InitTimer rt = timer(\"create RegisterConfig\")) {\n+            try (InitTimer _ = timer(\"create RegisterConfig\")) {\n@@ -135,1 +111,1 @@\n-            try (InitTimer rt = timer(\"create CodeCache provider\")) {\n+            try (InitTimer _ = timer(\"create CodeCache provider\")) {\n@@ -138,1 +114,1 @@\n-            try (InitTimer rt = timer(\"create ConstantReflection provider\")) {\n+            try (InitTimer _ = timer(\"create ConstantReflection provider\")) {\n@@ -141,1 +117,1 @@\n-            try (InitTimer rt = timer(\"create StackIntrospection provider\")) {\n+            try (InitTimer _ = timer(\"create StackIntrospection provider\")) {\n@@ -145,1 +121,1 @@\n-        try (InitTimer rt = timer(\"instantiate backend\")) {\n+        try (InitTimer _ = timer(\"instantiate backend\")) {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotJVMCIBackendFactory.java","additions":9,"deletions":33,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-import jdk.vm.ci.code.RegisterArray;\n@@ -82,1 +81,1 @@\n-    private final RegisterArray allocatable;\n+    private final List<Register> allocatable;\n@@ -87,1 +86,1 @@\n-    private final RegisterArray callerSaved;\n+    private final List<Register> callerSaved;\n@@ -91,1 +90,1 @@\n-    private final RegisterAttributes[] attributesMap;\n+    private final List<RegisterAttributes> attributesMap;\n@@ -94,1 +93,1 @@\n-    public RegisterArray getAllocatableRegisters() {\n+    public List<Register> getAllocatableRegisters() {\n@@ -99,1 +98,1 @@\n-    public RegisterArray filterAllocatableRegisters(PlatformKind kind, RegisterArray registers) {\n+    public List<Register> filterAllocatableRegisters(PlatformKind kind, List<Register> registers) {\n@@ -107,1 +106,1 @@\n-        return new RegisterArray(list);\n+        return List.copyOf(list);\n@@ -111,2 +110,2 @@\n-    public RegisterAttributes[] getAttributesMap() {\n-        return attributesMap.clone();\n+    public List<RegisterAttributes> getAttributesMap() {\n+        return attributesMap;\n@@ -115,3 +114,3 @@\n-    private final RegisterArray javaGeneralParameterRegisters = new RegisterArray(r1, r2, r3, r4, r5, r6, r7, r0);\n-    private final RegisterArray nativeGeneralParameterRegisters = new RegisterArray(r0, r1, r2, r3, r4, r5, r6, r7);\n-    private final RegisterArray simdParameterRegisters = new RegisterArray(v0, v1, v2, v3, v4, v5, v6, v7);\n+    private final List<Register> javaGeneralParameterRegisters = List.of(r1, r2, r3, r4, r5, r6, r7, r0);\n+    private final List<Register> nativeGeneralParameterRegisters = List.of(r0, r1, r2, r3, r4, r5, r6, r7);\n+    private final List<Register> simdParameterRegisters = List.of(v0, v1, v2, v3, v4, v5, v6, v7);\n@@ -136,1 +135,1 @@\n-    private static final RegisterArray reservedRegisters = new RegisterArray(rscratch1, rscratch2, threadRegister, fp, lr, r31, zr, sp);\n+    private static final List<Register> reservedRegisters = List.of(rscratch1, rscratch2, threadRegister, fp, lr, r31, zr, sp);\n@@ -138,2 +137,2 @@\n-    private static RegisterArray initAllocatable(Architecture arch, boolean reserveForHeapBase, boolean canUsePlatformRegister) {\n-        RegisterArray allRegisters = arch.getAvailableValueRegisters();\n+    private static List<Register> initAllocatable(Architecture arch, boolean reserveForHeapBase, boolean canUsePlatformRegister) {\n+        List<Register> allRegisters = arch.getAvailableValueRegisters();\n@@ -141,1 +140,0 @@\n-        List<Register> reservedRegistersList = reservedRegisters.asList();\n@@ -145,1 +143,1 @@\n-            if (reservedRegistersList.contains(reg)) {\n+            if (reservedRegisters.contains(reg)) {\n@@ -162,1 +160,1 @@\n-        return new RegisterArray(registers);\n+        return List.of(registers);\n@@ -170,1 +168,1 @@\n-    public AArch64HotSpotRegisterConfig(TargetDescription target, RegisterArray allocatable) {\n+    public AArch64HotSpotRegisterConfig(TargetDescription target, List<Register> allocatable) {\n@@ -175,5 +173,5 @@\n-        allocatable.addTo(callerSaveSet);\n-        simdParameterRegisters.addTo(callerSaveSet);\n-        javaGeneralParameterRegisters.addTo(callerSaveSet);\n-        nativeGeneralParameterRegisters.addTo(callerSaveSet);\n-        callerSaved = new RegisterArray(callerSaveSet);\n+        callerSaveSet.addAll(allocatable);\n+        callerSaveSet.addAll(simdParameterRegisters);\n+        callerSaveSet.addAll(javaGeneralParameterRegisters);\n+        callerSaveSet.addAll(nativeGeneralParameterRegisters);\n+        callerSaved = List.copyOf(callerSaveSet);\n@@ -186,1 +184,1 @@\n-    public RegisterArray getCallerSaveRegisters() {\n+    public List<Register> getCallerSaveRegisters() {\n@@ -191,1 +189,1 @@\n-    public RegisterArray getCalleeSaveRegisters() {\n+    public List<Register> getCalleeSaveRegisters() {\n@@ -212,1 +210,1 @@\n-    public RegisterArray getCallingConventionRegisters(Type type, JavaKind kind) {\n+    public List<Register> getCallingConventionRegisters(Type type, JavaKind kind) {\n@@ -252,1 +250,1 @@\n-    private CallingConvention callingConvention(RegisterArray generalParameterRegisters, JavaType returnType, JavaType[] parameterTypes, HotSpotCallingConventionType type,\n+    private CallingConvention callingConvention(List<Register> generalParameterRegisters, JavaType returnType, JavaType[] parameterTypes, HotSpotCallingConventionType type,\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotRegisterConfig.java","additions":27,"deletions":29,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,12 +40,0 @@\n-\n-    \/\/ CPU Capabilities\n-\n-    \/*\n-     * These flags are set based on the corresponding command line flags.\n-     *\/\n-    final boolean useCRC32 = getFlag(\"UseCRC32\", Boolean.class);\n-    final boolean useSIMDForMemoryOps = getFlag(\"UseSIMDForMemoryOps\", Boolean.class);\n-    final boolean avoidUnalignedAccesses = getFlag(\"AvoidUnalignedAccesses\", Boolean.class);\n-    final boolean useLSE = getFlag(\"UseLSE\", Boolean.class);\n-    final boolean useBlockZeroing = getFlag(\"UseBlockZeroing\", Boolean.class);\n-\n@@ -53,14 +41,0 @@\n-\n-    \/*\n-     * These flags are set if the corresponding support is in the hardware.\n-     *\/\n-    final long aarch64FP = getConstant(\"VM_Version::CPU_FP\", Long.class);\n-    final long aarch64ASIMD = getConstant(\"VM_Version::CPU_ASIMD\", Long.class);\n-    final long aarch64EVTSTRM = getConstant(\"VM_Version::CPU_EVTSTRM\", Long.class);\n-    final long aarch64AES = getConstant(\"VM_Version::CPU_AES\", Long.class);\n-    final long aarch64PMULL = getConstant(\"VM_Version::CPU_PMULL\", Long.class);\n-    final long aarch64SHA1 = getConstant(\"VM_Version::CPU_SHA1\", Long.class);\n-    final long aarch64SHA2 = getConstant(\"VM_Version::CPU_SHA2\", Long.class);\n-    final long aarch64CRC32 = getConstant(\"VM_Version::CPU_CRC32\", Long.class);\n-    final long aarch64LSE = getConstant(\"VM_Version::CPU_LSE\", Long.class);\n-    final long aarch64A53MAC = getConstant(\"VM_Version::CPU_A53MAC\", Long.class);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotVMConfig.java","additions":1,"deletions":27,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-\n+import jdk.internal.util.OperatingSystem;\n@@ -52,1 +52,0 @@\n-        assert config.useSSE >= 2 : \"minimum config for x64\";\n@@ -59,2 +58,2 @@\n-        features.add(AMD64.CPUFeature.SSE);\n-        features.add(AMD64.CPUFeature.SSE2);\n+        assert features.contains(AMD64.CPUFeature.SSE) : \"minimum config for x64\";\n+        assert features.contains(AMD64.CPUFeature.SSE2) : \"minimum config for x64\";\n@@ -64,11 +63,0 @@\n-    private static EnumSet<AMD64.Flag> computeFlags(AMD64HotSpotVMConfig config) {\n-        EnumSet<AMD64.Flag> flags = EnumSet.noneOf(AMD64.Flag.class);\n-        if (config.useCountLeadingZerosInstruction) {\n-            flags.add(AMD64.Flag.UseCountLeadingZerosInstruction);\n-        }\n-        if (config.useCountTrailingZerosInstruction) {\n-            flags.add(AMD64.Flag.UseCountTrailingZerosInstruction);\n-        }\n-        return flags;\n-    }\n-\n@@ -79,1 +67,1 @@\n-        Architecture arch = new AMD64(computeFeatures(config), computeFlags(config));\n+        Architecture arch = new AMD64(computeFeatures(config));\n@@ -88,1 +76,1 @@\n-        return new AMD64HotSpotRegisterConfig(target, config.useCompressedOops, config.windowsOs);\n+        return new AMD64HotSpotRegisterConfig(target, config.useCompressedOops, OperatingSystem.isWindows());\n@@ -110,1 +98,0 @@\n-    @SuppressWarnings(\"try\")\n@@ -121,2 +108,2 @@\n-        try (InitTimer t = timer(\"create providers\")) {\n-            try (InitTimer rt = timer(\"create MetaAccess provider\")) {\n+        try (InitTimer _ = timer(\"create providers\")) {\n+            try (InitTimer _ = timer(\"create MetaAccess provider\")) {\n@@ -125,1 +112,1 @@\n-            try (InitTimer rt = timer(\"create RegisterConfig\")) {\n+            try (InitTimer _ = timer(\"create RegisterConfig\")) {\n@@ -128,1 +115,1 @@\n-            try (InitTimer rt = timer(\"create CodeCache provider\")) {\n+            try (InitTimer _ = timer(\"create CodeCache provider\")) {\n@@ -131,1 +118,1 @@\n-            try (InitTimer rt = timer(\"create ConstantReflection provider\")) {\n+            try (InitTimer _ = timer(\"create ConstantReflection provider\")) {\n@@ -134,1 +121,1 @@\n-            try (InitTimer rt = timer(\"create StackIntrospection provider\")) {\n+            try (InitTimer _ = timer(\"create StackIntrospection provider\")) {\n@@ -138,1 +125,1 @@\n-        try (InitTimer rt = timer(\"instantiate backend\")) {\n+        try (InitTimer _ = timer(\"instantiate backend\")) {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/amd64\/AMD64HotSpotJVMCIBackendFactory.java","additions":12,"deletions":25,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,0 @@\n-import jdk.vm.ci.code.RegisterArray;\n@@ -72,1 +71,1 @@\n-    private final RegisterArray allocatable;\n+    private final List<Register> allocatable;\n@@ -77,1 +76,1 @@\n-    private final RegisterArray callerSaved;\n+    private final List<Register> callerSaved;\n@@ -81,1 +80,1 @@\n-    private final RegisterAttributes[] attributesMap;\n+    private final List<RegisterAttributes> attributesMap;\n@@ -84,1 +83,1 @@\n-    public RegisterArray getAllocatableRegisters() {\n+    public List<Register> getAllocatableRegisters() {\n@@ -89,1 +88,1 @@\n-    public RegisterArray filterAllocatableRegisters(PlatformKind kind, RegisterArray registers) {\n+    public List<Register> filterAllocatableRegisters(PlatformKind kind, List<Register> registers) {\n@@ -97,1 +96,1 @@\n-        RegisterArray ret = new RegisterArray(list);\n+        List<Register> ret = List.copyOf(list);\n@@ -102,2 +101,2 @@\n-    public RegisterAttributes[] getAttributesMap() {\n-        return attributesMap.clone();\n+    public List<RegisterAttributes> getAttributesMap() {\n+        return attributesMap;\n@@ -106,4 +105,4 @@\n-    private final RegisterArray javaGeneralParameterRegisters;\n-    private final RegisterArray nativeGeneralParameterRegisters;\n-    private final RegisterArray javaXMMParameterRegisters;\n-    private final RegisterArray nativeXMMParameterRegisters;\n+    private final List<Register> javaGeneralParameterRegisters;\n+    private final List<Register> nativeGeneralParameterRegisters;\n+    private final List<Register> javaXMMParameterRegisters;\n+    private final List<Register> nativeXMMParameterRegisters;\n@@ -118,1 +117,1 @@\n-    private static final RegisterArray reservedRegisters = new RegisterArray(rsp, r15);\n+    private static final List<Register> reservedRegisters = List.of(rsp, r15);\n@@ -120,2 +119,2 @@\n-    private static RegisterArray initAllocatable(Architecture arch, boolean reserveForHeapBase) {\n-        RegisterArray allRegisters = arch.getAvailableValueRegisters();\n+    private static List<Register> initAllocatable(Architecture arch, boolean reserveForHeapBase) {\n+        List<Register> allRegisters = arch.getAvailableValueRegisters();\n@@ -123,1 +122,0 @@\n-        List<Register> reservedRegistersList = reservedRegisters.asList();\n@@ -127,1 +125,1 @@\n-            if (reservedRegistersList.contains(reg)) {\n+            if (reservedRegisters.contains(reg)) {\n@@ -140,1 +138,1 @@\n-        return new RegisterArray(registers);\n+        return List.of(registers);\n@@ -148,1 +146,1 @@\n-    public AMD64HotSpotRegisterConfig(TargetDescription target, RegisterArray allocatable, boolean windowsOS) {\n+    public AMD64HotSpotRegisterConfig(TargetDescription target, List<Register> allocatable, boolean windowsOS) {\n@@ -153,3 +151,3 @@\n-            javaGeneralParameterRegisters = new RegisterArray(rdx, r8, r9, rdi, rsi, rcx);\n-            nativeGeneralParameterRegisters = new RegisterArray(rcx, rdx, r8, r9);\n-            nativeXMMParameterRegisters = new RegisterArray(xmm0, xmm1, xmm2, xmm3);\n+            javaGeneralParameterRegisters = List.of(rdx, r8, r9, rdi, rsi, rcx);\n+            nativeGeneralParameterRegisters = List.of(rcx, rdx, r8, r9);\n+            nativeXMMParameterRegisters = List.of(xmm0, xmm1, xmm2, xmm3);\n@@ -158,3 +156,3 @@\n-            javaGeneralParameterRegisters = new RegisterArray(rsi, rdx, rcx, r8, r9, rdi);\n-            nativeGeneralParameterRegisters = new RegisterArray(rdi, rsi, rdx, rcx, r8, r9);\n-            nativeXMMParameterRegisters = new RegisterArray(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7);\n+            javaGeneralParameterRegisters = List.of(rsi, rdx, rcx, r8, r9, rdi);\n+            nativeGeneralParameterRegisters = List.of(rdi, rsi, rdx, rcx, r8, r9);\n+            nativeXMMParameterRegisters = List.of(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7);\n@@ -163,1 +161,1 @@\n-        javaXMMParameterRegisters = new RegisterArray(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7);\n+        javaXMMParameterRegisters = List.of(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7);\n@@ -167,5 +165,5 @@\n-        allocatable.addTo(callerSaveSet);\n-        javaXMMParameterRegisters.addTo(callerSaveSet);\n-        callerSaveSet.addAll(javaGeneralParameterRegisters.asList());\n-        nativeGeneralParameterRegisters.addTo(callerSaveSet);\n-        callerSaved = new RegisterArray(callerSaveSet);\n+        callerSaveSet.addAll(allocatable);\n+        callerSaveSet.addAll(javaXMMParameterRegisters);\n+        callerSaveSet.addAll(javaGeneralParameterRegisters);\n+        callerSaveSet.addAll(nativeGeneralParameterRegisters);\n+        callerSaved = List.copyOf(callerSaveSet);\n@@ -178,1 +176,1 @@\n-    public RegisterArray getCallerSaveRegisters() {\n+    public List<Register> getCallerSaveRegisters() {\n@@ -183,1 +181,1 @@\n-    public RegisterArray getCalleeSaveRegisters() {\n+    public List<Register> getCalleeSaveRegisters() {\n@@ -204,1 +202,1 @@\n-    public RegisterArray getCallingConventionRegisters(Type type, JavaKind kind) {\n+    public List<Register> getCallingConventionRegisters(Type type, JavaKind kind) {\n@@ -240,1 +238,1 @@\n-    private CallingConvention callingConvention(RegisterArray generalParameterRegisters, RegisterArray xmmParameterRegisters, boolean unified, JavaType returnType, JavaType[] parameterTypes,\n+    private CallingConvention callingConvention(List<Register> generalParameterRegisters, List<Register> xmmParameterRegisters, boolean unified, JavaType returnType, JavaType[] parameterTypes,\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/amd64\/AMD64HotSpotRegisterConfig.java","additions":35,"deletions":37,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import jdk.vm.ci.services.Services;\n-import jdk.internal.util.OperatingSystem;\n@@ -39,4 +37,0 @@\n-    final boolean windowsOs = OperatingSystem.isWindows();\n-\n-    final boolean useCountLeadingZerosInstruction = getFlag(\"UseCountLeadingZerosInstruction\", Boolean.class);\n-    final boolean useCountTrailingZerosInstruction = getFlag(\"UseCountTrailingZerosInstruction\", Boolean.class);\n@@ -44,1 +38,0 @@\n-\n@@ -48,47 +41,0 @@\n-\n-    \/\/ CPU capabilities\n-    final int useSSE = getFlag(\"UseSSE\", Integer.class);\n-    final int useAVX = getFlag(\"UseAVX\", Integer.class);\n-\n-    \/\/ CPU feature flags\n-    final long amd64CX8 = getConstant(\"VM_Version::CPU_CX8\", Long.class);\n-    final long amd64CMOV = getConstant(\"VM_Version::CPU_CMOV\", Long.class);\n-    final long amd64FXSR = getConstant(\"VM_Version::CPU_FXSR\", Long.class);\n-    final long amd64HT = getConstant(\"VM_Version::CPU_HT\", Long.class);\n-    final long amd64MMX = getConstant(\"VM_Version::CPU_MMX\", Long.class);\n-    final long amd643DNOWPREFETCH = getConstant(\"VM_Version::CPU_3DNOW_PREFETCH\", Long.class);\n-    final long amd64SSE = getConstant(\"VM_Version::CPU_SSE\", Long.class);\n-    final long amd64SSE2 = getConstant(\"VM_Version::CPU_SSE2\", Long.class);\n-    final long amd64SSE3 = getConstant(\"VM_Version::CPU_SSE3\", Long.class);\n-    final long amd64SSSE3 = getConstant(\"VM_Version::CPU_SSSE3\", Long.class);\n-    final long amd64SSE4A = getConstant(\"VM_Version::CPU_SSE4A\", Long.class);\n-    final long amd64SSE41 = getConstant(\"VM_Version::CPU_SSE4_1\", Long.class);\n-    final long amd64SSE42 = getConstant(\"VM_Version::CPU_SSE4_2\", Long.class);\n-    final long amd64POPCNT = getConstant(\"VM_Version::CPU_POPCNT\", Long.class);\n-    final long amd64LZCNT = getConstant(\"VM_Version::CPU_LZCNT\", Long.class);\n-    final long amd64TSC = getConstant(\"VM_Version::CPU_TSC\", Long.class);\n-    final long amd64TSCINV = getConstant(\"VM_Version::CPU_TSCINV\", Long.class);\n-    final long amd64AVX = getConstant(\"VM_Version::CPU_AVX\", Long.class);\n-    final long amd64AVX2 = getConstant(\"VM_Version::CPU_AVX2\", Long.class);\n-    final long amd64AES = getConstant(\"VM_Version::CPU_AES\", Long.class);\n-    final long amd64ERMS = getConstant(\"VM_Version::CPU_ERMS\", Long.class);\n-    final long amd64CLMUL = getConstant(\"VM_Version::CPU_CLMUL\", Long.class);\n-    final long amd64BMI1 = getConstant(\"VM_Version::CPU_BMI1\", Long.class);\n-    final long amd64BMI2 = getConstant(\"VM_Version::CPU_BMI2\", Long.class);\n-    final long amd64RTM = getConstant(\"VM_Version::CPU_RTM\", Long.class);\n-    final long amd64ADX = getConstant(\"VM_Version::CPU_ADX\", Long.class);\n-    final long amd64AVX512F = getConstant(\"VM_Version::CPU_AVX512F\", Long.class);\n-    final long amd64AVX512DQ = getConstant(\"VM_Version::CPU_AVX512DQ\", Long.class);\n-    final long amd64AVX512PF = getConstant(\"VM_Version::CPU_AVX512PF\", Long.class);\n-    final long amd64AVX512ER = getConstant(\"VM_Version::CPU_AVX512ER\", Long.class);\n-    final long amd64AVX512CD = getConstant(\"VM_Version::CPU_AVX512CD\", Long.class);\n-    final long amd64AVX512BW = getConstant(\"VM_Version::CPU_AVX512BW\", Long.class);\n-    final long amd64AVX512VL = getConstant(\"VM_Version::CPU_AVX512VL\", Long.class);\n-    final long amd64SHA = getConstant(\"VM_Version::CPU_SHA\", Long.class);\n-    final long amd64FMA = getConstant(\"VM_Version::CPU_FMA\", Long.class);\n-    final long amd64PKU = getConstant(\"VM_Version::CPU_PKU\", Long.class);\n-    final long amd64OSPKE = getConstant(\"VM_Version::CPU_OSPKE\", Long.class);\n-    final long amd64CET_IBT = getConstant(\"VM_Version::CPU_CET_IBT\", Long.class);\n-    final long amd64CET_SS = getConstant(\"VM_Version::CPU_CET_SS\", Long.class);\n-    final long amd64AVX10_1 = getConstant(\"VM_Version::CPU_AVX10_1\", Long.class);\n-    final long amd64AVX10_2 = getConstant(\"VM_Version::CPU_AVX10_2\", Long.class);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/amd64\/AMD64HotSpotVMConfig.java","additions":0,"deletions":54,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,28 +55,0 @@\n-    private static EnumSet<RISCV64.Flag> computeFlags(RISCV64HotSpotVMConfig config) {\n-        EnumSet<RISCV64.Flag> flags = EnumSet.noneOf(RISCV64.Flag.class);\n-\n-        if (config.useConservativeFence) {\n-            flags.add(RISCV64.Flag.UseConservativeFence);\n-        }\n-        if (config.avoidUnalignedAccesses) {\n-            flags.add(RISCV64.Flag.AvoidUnalignedAccesses);\n-        }\n-        if (config.traceTraps) {\n-            flags.add(RISCV64.Flag.TraceTraps);\n-        }\n-        if (config.useRVV) {\n-            flags.add(RISCV64.Flag.UseRVV);\n-        }\n-        if (config.useRVC) {\n-            flags.add(RISCV64.Flag.UseRVC);\n-        }\n-        if (config.useZba) {\n-            flags.add(RISCV64.Flag.UseZba);\n-        }\n-        if (config.useZbb) {\n-            flags.add(RISCV64.Flag.UseZbb);\n-        }\n-\n-        return flags;\n-    }\n-\n@@ -87,1 +59,1 @@\n-        Architecture arch = new RISCV64(computeFeatures(config), computeFlags(config));\n+        Architecture arch = new RISCV64(computeFeatures(config));\n@@ -118,1 +90,0 @@\n-    @SuppressWarnings(\"try\")\n@@ -129,2 +100,2 @@\n-        try (InitTimer t = timer(\"create providers\")) {\n-            try (InitTimer rt = timer(\"create MetaAccess provider\")) {\n+        try (InitTimer _ = timer(\"create providers\")) {\n+            try (InitTimer _ = timer(\"create MetaAccess provider\")) {\n@@ -133,1 +104,1 @@\n-            try (InitTimer rt = timer(\"create RegisterConfig\")) {\n+            try (InitTimer _ = timer(\"create RegisterConfig\")) {\n@@ -136,1 +107,1 @@\n-            try (InitTimer rt = timer(\"create CodeCache provider\")) {\n+            try (InitTimer _ = timer(\"create CodeCache provider\")) {\n@@ -139,1 +110,1 @@\n-            try (InitTimer rt = timer(\"create ConstantReflection provider\")) {\n+            try (InitTimer _ = timer(\"create ConstantReflection provider\")) {\n@@ -142,1 +113,1 @@\n-            try (InitTimer rt = timer(\"create StackIntrospection provider\")) {\n+            try (InitTimer _ = timer(\"create StackIntrospection provider\")) {\n@@ -146,1 +117,1 @@\n-        try (InitTimer rt = timer(\"instantiate backend\")) {\n+        try (InitTimer _ = timer(\"instantiate backend\")) {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/riscv64\/RISCV64HotSpotJVMCIBackendFactory.java","additions":9,"deletions":38,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-import jdk.vm.ci.code.RegisterArray;\n@@ -82,1 +81,1 @@\n-    private final RegisterArray allocatable;\n+    private final List<Register> allocatable;\n@@ -87,1 +86,1 @@\n-    private final RegisterArray callerSaved;\n+    private final List<Register> callerSaved;\n@@ -91,1 +90,1 @@\n-    private final RegisterAttributes[] attributesMap;\n+    private final List<RegisterAttributes> attributesMap;\n@@ -94,1 +93,1 @@\n-    public RegisterArray getAllocatableRegisters() {\n+    public List<Register> getAllocatableRegisters() {\n@@ -99,1 +98,1 @@\n-    public RegisterArray filterAllocatableRegisters(PlatformKind kind, RegisterArray registers) {\n+    public List<Register> filterAllocatableRegisters(PlatformKind kind, List<Register> registers) {\n@@ -107,1 +106,1 @@\n-        return new RegisterArray(list);\n+        return List.copyOf(list);\n@@ -111,2 +110,2 @@\n-    public RegisterAttributes[] getAttributesMap() {\n-        return attributesMap.clone();\n+    public List<RegisterAttributes> getAttributesMap() {\n+        return attributesMap;\n@@ -115,3 +114,3 @@\n-    private final RegisterArray javaGeneralParameterRegisters = new RegisterArray(x11, x12, x13, x14, x15, x16, x17, x10);\n-    private final RegisterArray nativeGeneralParameterRegisters = new RegisterArray(x10, x11, x12, x13, x14, x15, x16, x17);\n-    private final RegisterArray fpParameterRegisters = new RegisterArray(f10, f11, f12, f13, f14, f15, f16, f17);\n+    private final List<Register> javaGeneralParameterRegisters = List.of(x11, x12, x13, x14, x15, x16, x17, x10);\n+    private final List<Register> nativeGeneralParameterRegisters = List.of(x10, x11, x12, x13, x14, x15, x16, x17);\n+    private final List<Register> fpParameterRegisters = List.of(f10, f11, f12, f13, f14, f15, f16, f17);\n@@ -131,1 +130,1 @@\n-    private static final RegisterArray reservedRegisters = new RegisterArray(zero, ra, sp, gp, tp, t0, t1, t2, fp);\n+    private static final List<Register> reservedRegisters =List.of(zero, ra, sp, gp, tp, t0, t1, t2, fp);\n@@ -133,2 +132,2 @@\n-    private static RegisterArray initAllocatable(Architecture arch, boolean reserveForHeapBase) {\n-        RegisterArray allRegisters = arch.getAvailableValueRegisters();\n+    private static List<Register> initAllocatable(Architecture arch, boolean reserveForHeapBase) {\n+        List<Register> allRegisters = arch.getAvailableValueRegisters();\n@@ -136,1 +135,0 @@\n-        List<Register> reservedRegistersList = reservedRegisters.asList();\n@@ -140,1 +138,1 @@\n-            if (reservedRegistersList.contains(reg)) {\n+            if (reservedRegisters.contains(reg)) {\n@@ -155,1 +153,1 @@\n-        return new RegisterArray(registers);\n+        return List.of(registers);\n@@ -163,1 +161,1 @@\n-    public RISCV64HotSpotRegisterConfig(TargetDescription target, RegisterArray allocatable) {\n+    public RISCV64HotSpotRegisterConfig(TargetDescription target, List<Register> allocatable) {\n@@ -168,5 +166,5 @@\n-        allocatable.addTo(callerSaveSet);\n-        fpParameterRegisters.addTo(callerSaveSet);\n-        javaGeneralParameterRegisters.addTo(callerSaveSet);\n-        nativeGeneralParameterRegisters.addTo(callerSaveSet);\n-        callerSaved = new RegisterArray(callerSaveSet);\n+        callerSaveSet.addAll(allocatable);\n+        callerSaveSet.addAll(fpParameterRegisters);\n+        callerSaveSet.addAll(javaGeneralParameterRegisters);\n+        callerSaveSet.addAll(nativeGeneralParameterRegisters);\n+        callerSaved = List.copyOf(callerSaveSet);\n@@ -179,1 +177,1 @@\n-    public RegisterArray getCallerSaveRegisters() {\n+    public List<Register> getCallerSaveRegisters() {\n@@ -184,1 +182,1 @@\n-    public RegisterArray getCalleeSaveRegisters() {\n+    public List<Register> getCalleeSaveRegisters() {\n@@ -203,1 +201,1 @@\n-    public RegisterArray getCallingConventionRegisters(Type type, JavaKind kind) {\n+    public List<Register> getCallingConventionRegisters(Type type, JavaKind kind) {\n@@ -222,1 +220,1 @@\n-    private CallingConvention callingConvention(RegisterArray generalParameterRegisters, JavaType returnType, JavaType[] parameterTypes, HotSpotCallingConventionType type,\n+    private CallingConvention callingConvention(List<Register> generalParameterRegisters, JavaType returnType, JavaType[] parameterTypes, HotSpotCallingConventionType type,\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/riscv64\/RISCV64HotSpotRegisterConfig.java","additions":27,"deletions":29,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,14 +40,0 @@\n-\n-    \/\/ CPU Capabilities\n-\n-    \/*\n-     * These flags are set based on the corresponding command line flags.\n-     *\/\n-    final boolean useConservativeFence = getFlag(\"UseConservativeFence\", Boolean.class);\n-    final boolean avoidUnalignedAccesses = getFlag(\"AvoidUnalignedAccesses\", Boolean.class);\n-    final boolean traceTraps = getFlag(\"TraceTraps\", Boolean.class);\n-    final boolean useRVV = getFlag(\"UseRVV\", Boolean.class);\n-    final boolean useRVC = getFlag(\"UseRVC\", Boolean.class);\n-    final boolean useZba = getFlag(\"UseZba\", Boolean.class);\n-    final boolean useZbb = getFlag(\"UseZbb\", Boolean.class);\n-\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/riscv64\/RISCV64HotSpotVMConfig.java","additions":1,"deletions":15,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import java.util.List;\n@@ -32,1 +33,0 @@\n-import jdk.vm.ci.code.RegisterArray;\n@@ -80,1 +80,1 @@\n-    public static final RegisterArray cpuRegisters = new RegisterArray(\n+    public static final List<Register> cpuRegisters = List.of(\n@@ -125,1 +125,1 @@\n-    public static final RegisterArray fpRegisters = new RegisterArray(\n+    public static final List<Register> fpRegisters = List.of(\n@@ -134,1 +134,1 @@\n-    public static final RegisterArray allRegisters = new RegisterArray(\n+    public static final List<Register> allRegisters = List.of(\n@@ -163,16 +163,1 @@\n-    \/**\n-     * Set of flags to control code emission.\n-     *\/\n-    public enum Flag {\n-        UseConservativeFence,\n-        AvoidUnalignedAccesses,\n-        TraceTraps,\n-        UseRVV,\n-        UseRVC,\n-        UseZba,\n-        UseZbb\n-    }\n-\n-    private final EnumSet<Flag> flags;\n-\n-    public RISCV64(EnumSet<CPUFeature> features, EnumSet<Flag> flags) {\n+    public RISCV64(EnumSet<CPUFeature> features) {\n@@ -181,1 +166,0 @@\n-        this.flags = flags;\n@@ -189,4 +173,0 @@\n-    public EnumSet<Flag> getFlags() {\n-        return flags;\n-    }\n-\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/riscv64\/RISCV64.java","additions":6,"deletions":26,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-        Services.checkJVMCIEnabled();\n@@ -88,1 +87,0 @@\n-        Services.checkJVMCIEnabled();\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/services\/JVMCIServiceLocator.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,11 +67,0 @@\n-    static final boolean JVMCI_ENABLED = Boolean.parseBoolean(VM.getSavedProperties().get(\"jdk.internal.vm.ci.enabled\"));\n-\n-    \/**\n-     * Checks that JVMCI is enabled in the VM and throws an error if it isn't.\n-     *\/\n-    static void checkJVMCIEnabled() {\n-        if (!JVMCI_ENABLED) {\n-            throw new Error(\"The EnableJVMCI VM option must be true (i.e., -XX:+EnableJVMCI) to use JVMCI\");\n-        }\n-    }\n-\n@@ -87,1 +76,0 @@\n-        checkJVMCIEnabled();\n@@ -116,1 +104,0 @@\n-        checkJVMCIEnabled();\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/services\/Services.java","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -170,3 +170,0 @@\n-    background-color: var(--code-background-color);\n-    padding: 1px 2px;\n-    border-radius: 3px;\n@@ -849,6 +846,0 @@\n-:is(pre, table, sup, sub) code,\n-section[id$=-description] > dl.notes code,\n-div.summary-table code {\n-    background-color: inherit;\n-    padding: initial;\n-}\n@@ -915,2 +906,0 @@\n-    background-color: inherit;\n-    padding: 0;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/stylesheet.css","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-                Element e = null;\n+                Element ref = null;\n@@ -155,3 +155,5 @@\n-                            e = getLinkedElement(element, linkTarget);\n-                            if (e == null) {\n-                                \/\/ TODO: diagnostic output\n+                            ref = getLinkedElement(element, linkTarget);\n+                            if (ref == null) {\n+                                messages.error(utils.getCommentHelper(element).getDocTreePath(tag),\n+                                        \"doclet.link.see.reference_not_found\",\n+                                        linkTarget);\n@@ -167,1 +169,0 @@\n-                    assert e != null;\n@@ -175,1 +176,1 @@\n-                                e,\n+                                ref,\n@@ -178,1 +179,1 @@\n-                                (key, args) -> { \/* TODO: report diagnostic *\/ },\n+                                (key, args) -> { \/* Error has already been reported above *\/ },\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SnippetTaglet.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-        return new Control(new ThresholdSetting(type), def);\n+        return new Control(new ThresholdSetting(type, def), def);\n@@ -316,1 +316,1 @@\n-        return new Control(new CutoffSetting(type), def);\n+        return new Control(new CutoffSetting(type, def), def);\n@@ -322,1 +322,1 @@\n-        return new Control(new ThrottleSetting(type), def);\n+        return new Control(new ThrottleSetting(type, def), def);\n@@ -335,1 +335,1 @@\n-        return new Control(new PeriodSetting(type), def);\n+        return new Control(new PeriodSetting(type, def), def);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventControl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import jdk.jfr.internal.util.Utils;\n@@ -50,1 +51,0 @@\n-    private String value = DEFAULT_VALUE;\n@@ -52,0 +52,2 @@\n+    private final String defaultValue;\n+    private String value;\n@@ -53,2 +55,4 @@\n-    public CutoffSetting(PlatformEventType eventType) {\n-       this.eventType = Objects.requireNonNull(eventType);\n+    public CutoffSetting(PlatformEventType eventType, String defaultValue) {\n+        this.eventType = Objects.requireNonNull(eventType);\n+        this.defaultValue = Utils.validTimespanInfinity(eventType, \"Cutoff\", defaultValue, DEFAULT_VALUE);\n+        this.value = defaultValue;\n@@ -68,1 +72,1 @@\n-        return Objects.requireNonNullElse(text, DEFAULT_VALUE);\n+        return Objects.requireNonNullElse(text, defaultValue);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/settings\/CutoffSetting.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+import jdk.jfr.internal.util.Utils;\n+\n@@ -47,1 +49,0 @@\n-\n@@ -54,1 +55,2 @@\n-    private String value = EVERY_CHUNK;\n+    private final String defaultValue;\n+    private String value;\n@@ -56,1 +58,1 @@\n-    public PeriodSetting(PlatformEventType eventType) {\n+    public PeriodSetting(PlatformEventType eventType, String defaultValue) {\n@@ -58,0 +60,10 @@\n+        this.defaultValue = validPeriod(defaultValue);\n+        this.value = defaultValue;\n+    }\n+\n+    private String validPeriod(String userDefault) {\n+        return switch (userDefault) {\n+            case BEGIN_CHUNK -> BEGIN_CHUNK;\n+            case END_CHUNK -> END_CHUNK;\n+            default -> Utils.validTimespanInfinity(eventType, \"Period\", userDefault, DEFAULT_VALUE);\n+        };\n@@ -98,1 +110,1 @@\n-        return DEFAULT_VALUE; \/\/ \"everyChunk\" is default\n+        return defaultValue;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/settings\/PeriodSetting.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import jdk.jfr.internal.util.Utils;\n@@ -51,1 +52,0 @@\n-    private String value = DEFAULT_VALUE;\n@@ -53,0 +53,2 @@\n+    private final String defaultValue;\n+    private String value;\n@@ -54,1 +56,1 @@\n-    public ThresholdSetting(PlatformEventType eventType) {\n+    public ThresholdSetting(PlatformEventType eventType, String defaultValue) {\n@@ -56,0 +58,2 @@\n+       this.defaultValue = Utils.validTimespanInfinity(eventType, \"Threshold\", defaultValue, DEFAULT_VALUE);\n+       this.value = defaultValue;\n@@ -71,1 +75,1 @@\n-        return Objects.requireNonNullElse(text, DEFAULT_VALUE);\n+        return Objects.requireNonNullElse(text, defaultValue);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/settings\/ThresholdSetting.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -54,1 +54,2 @@\n-    private String value = DEFAULT_VALUE;\n+    private final String defaultValue;\n+    private String value;\n@@ -56,2 +57,15 @@\n-    public ThrottleSetting(PlatformEventType eventType) {\n-       this.eventType = Objects.requireNonNull(eventType);\n+    public ThrottleSetting(PlatformEventType eventType, String defaultValue) {\n+        this.eventType = Objects.requireNonNull(eventType);\n+        this.defaultValue = validRate(defaultValue);\n+        this.value = defaultValue;\n+    }\n+\n+    private String validRate(String defaultValue) {\n+        if (DEFAULT_VALUE.equals(defaultValue)) {\n+            return DEFAULT_VALUE; \/\/ Fast path to avoid parsing\n+        }\n+        if (Rate.of(defaultValue) == null) {\n+            Utils.warnInvalidAnnotation(eventType, \"Throttle\", defaultValue, DEFAULT_VALUE);\n+            return DEFAULT_VALUE;\n+        }\n+        return defaultValue;\n@@ -73,2 +87,1 @@\n-        \/\/ \"off\" is default\n-        return Objects.requireNonNullElse(text, DEFAULT_VALUE);\n+        return Objects.requireNonNullElse(text, defaultValue);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/settings\/ThrottleSetting.java","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+import jdk.jfr.internal.PlatformEventType;\n@@ -462,0 +463,27 @@\n+\n+\n+    public static String validTimespanInfinity(PlatformEventType type, String annotation, String userDefault, String systemDefault) {\n+        if (systemDefault.equals(userDefault)) {\n+            return systemDefault; \/\/ Fast path to avoid parsing\n+        }\n+        if (ValueParser.parseTimespanWithInfinity(userDefault, ValueParser.MISSING) != ValueParser.MISSING) {\n+            return userDefault;\n+        }\n+        warnInvalidAnnotation(type, annotation, userDefault, systemDefault);\n+        return systemDefault;\n+    }\n+\n+    public static void warnInvalidAnnotation(PlatformEventType type, String annotation, String userDefault, String systemDefault) {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"Programming error. Event setting \");\n+        sb.append(\"@\").append(annotation).append(\"(\\\"\").append(userDefault).append(\"\\\")\");\n+        sb.append(\" is invalid on event \");\n+        sb.append(type.getName());\n+        sb.append(\", using \");\n+        sb.append(\"@\").append(annotation).append(\"(\\\"\").append(systemDefault).append(\"\\\")\");\n+        sb.append( \" instead.\");\n+        if (type.isSystem()) {\n+            throw new InternalError(sb.toString()); \/\/ Fail fast for JDK and JVM events\n+        }\n+        Logger.log(LogTag.JFR_SETTING, LogLevel.WARN, sb.toString());\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/util\/Utils.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,4 @@\n+import jdk.jpackage.internal.model.LinuxPackage;\n+import jdk.jpackage.internal.model.LinuxLauncher;\n+import jdk.jpackage.internal.model.Package;\n+import jdk.jpackage.internal.model.Launcher;\n@@ -30,1 +34,0 @@\n-import java.nio.file.Files;\n@@ -41,1 +44,0 @@\n-import java.util.stream.Collectors;\n@@ -46,11 +48,3 @@\n-import jdk.jpackage.internal.Arguments.CLIOptions;\n-import static jdk.jpackage.internal.LinuxAppImageBuilder.DEFAULT_ICON;\n-import static jdk.jpackage.internal.LinuxAppImageBuilder.ICON_PNG;\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n-import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n-import static jdk.jpackage.internal.StandardBundlerParam.SHORTCUT_HINT;\n+import static jdk.jpackage.internal.ApplicationImageUtils.createLauncherIconResource;\n+import jdk.jpackage.internal.model.FileAssociation;\n+import jdk.jpackage.internal.util.CompositeProxy;\n@@ -59,0 +53,1 @@\n+import static jdk.jpackage.internal.util.function.ThrowingFunction.toFunction;\n@@ -73,3 +68,1 @@\n-    private DesktopIntegration(PlatformPackage thePackage,\n-            Map<String, ? super Object> params,\n-            Map<String, ? super Object> mainParams) throws IOException {\n+    private DesktopIntegration(BuildEnv env, LinuxPackage pkg, LinuxLauncher launcher) throws IOException {\n@@ -77,4 +70,2 @@\n-        associations = FileAssociation.fetchFrom(params).stream()\n-                .filter(fa -> !fa.mimeTypes.isEmpty())\n-                .map(LinuxFileAssociation::new)\n-                .collect(Collectors.toUnmodifiableList());\n+        associations = launcher.fileAssociations().stream().map(\n+                LinuxFileAssociation::create).toList();\n@@ -82,3 +73,3 @@\n-        launchers = ADD_LAUNCHERS.fetchFrom(params);\n-\n-        this.thePackage = thePackage;\n+        this.env = env;\n+        this.pkg = pkg;\n+        this.launcher = launcher;\n@@ -89,1 +80,4 @@\n-        boolean withDesktopFile = !associations.isEmpty() || LINUX_SHORTCUT_HINT.fetchFrom(params);\n+        boolean withDesktopFile = !associations.isEmpty() || launcher.shortcut().orElse(false);\n+\n+        var curIconResource = createLauncherIconResource(pkg.app(), launcher,\n+                env::createResource);\n@@ -91,3 +85,1 @@\n-        var curIconResource = LinuxAppImageBuilder.createIconResource(DEFAULT_ICON,\n-                ICON_PNG, params, mainParams);\n-        if (curIconResource == null) {\n+        if (curIconResource.isEmpty()) {\n@@ -98,2 +90,1 @@\n-            if (curIconResource.saveToFile(nullPath)\n-                    != OverridableResource.Source.DefaultResource) {\n+            if (curIconResource.get().saveToFile(nullPath) != OverridableResource.Source.DefaultResource) {\n@@ -105,1 +96,1 @@\n-        desktopFileResource = createResource(\"template.desktop\", params)\n+        desktopFileResource = env.createResource(\"template.desktop\")\n@@ -107,1 +98,1 @@\n-                .setPublicName(APP_NAME.fetchFrom(params) + \".desktop\");\n+                .setPublicName(launcher.name() + \".desktop\");\n@@ -109,1 +100,1 @@\n-        final String escapedAppFileName = APP_NAME.fetchFrom(params).replaceAll(\"\\\\s+\", \"_\");\n+        final String escapedAppFileName = launcher.name().replaceAll(\"\\\\s+\", \"_\");\n@@ -115,1 +106,1 @@\n-                    thePackage.name(), escapedAppFileName);\n+                    pkg.packageName(), escapedAppFileName);\n@@ -117,1 +108,1 @@\n-                    thePackage.name(), escapedAppFileName);\n+                    pkg.packageName(), escapedAppFileName);\n@@ -119,1 +110,1 @@\n-        mimeInfoFile = new DesktopFile(mimeInfoFileName);\n+        mimeInfoFile = createDesktopFile(mimeInfoFileName);\n@@ -122,3 +113,2 @@\n-            desktopFile = new DesktopFile(desktopFileName);\n-            iconFile = new DesktopFile(escapedAppFileName\n-                    + PathUtils.getSuffix(Path.of(DEFAULT_ICON)));\n+            desktopFile = Optional.of(createDesktopFile(desktopFileName));\n+            iconFile = Optional.of(createDesktopFile(escapedAppFileName + \".png\"));\n@@ -126,1 +116,1 @@\n-            if (curIconResource == null) {\n+            if (curIconResource.isEmpty()) {\n@@ -128,2 +118,1 @@\n-                curIconResource = LinuxAppImageBuilder.createIconResource(\n-                        DEFAULT_ICON, ICON_PNG, mainParams, null);\n+                curIconResource = createLauncherIconResource(pkg.app(), pkg.app().mainLauncher().orElseThrow(), env::createResource);\n@@ -132,2 +121,2 @@\n-            desktopFile = null;\n-            iconFile = null;\n+            desktopFile = Optional.empty();\n+            iconFile = Optional.empty();\n@@ -138,26 +127,4 @@\n-        desktopFileData = Collections.unmodifiableMap(\n-                createDataForDesktopFile(params));\n-\n-        nestedIntegrations = new ArrayList<>();\n-        \/\/ Read launchers information from predefine app image\n-        if (launchers.isEmpty() &&\n-                PREDEFINED_APP_IMAGE.fetchFrom(params) != null) {\n-            List<AppImageFile.LauncherInfo> launcherInfos =\n-                    AppImageFile.getLaunchers(\n-                    PREDEFINED_APP_IMAGE.fetchFrom(params), params);\n-            if (!launcherInfos.isEmpty()) {\n-                launcherInfos.remove(0); \/\/ Remove main launcher\n-            }\n-            for (var launcherInfo : launcherInfos) {\n-                Map<String, ? super Object> launcherParams = new HashMap<>();\n-                Arguments.putUnlessNull(launcherParams, CLIOptions.NAME.getId(),\n-                        launcherInfo.getName());\n-                launcherParams = AddLauncherArguments.merge(params,\n-                        launcherParams, ICON.getID(), ICON_PNG.getID(),\n-                        ADD_LAUNCHERS.getID(), FILE_ASSOCIATIONS.getID(),\n-                        PREDEFINED_APP_IMAGE.getID());\n-                if (launcherInfo.isShortcut()) {\n-                    nestedIntegrations.add(new DesktopIntegration(thePackage,\n-                            launcherParams, params));\n-                }\n-            }\n+        desktopFileData = createDataForDesktopFile();\n+\n+        if (launcher != pkg.app().mainLauncher().orElseThrow()) {\n+            nestedIntegrations = List.of();\n@@ -165,9 +132,7 @@\n-            for (var launcherParams : launchers) {\n-                launcherParams = AddLauncherArguments.merge(params,\n-                        launcherParams, ICON.getID(), ICON_PNG.getID(),\n-                        ADD_LAUNCHERS.getID(), FILE_ASSOCIATIONS.getID());\n-                if (SHORTCUT_HINT.fetchFrom(launcherParams)) {\n-                    nestedIntegrations.add(new DesktopIntegration(thePackage,\n-                            launcherParams, params));\n-                }\n-            }\n+            nestedIntegrations = pkg.app().additionalLaunchers().stream().map(v -> {\n+                return (LinuxLauncher)v;\n+            }).filter(l -> {\n+                return l.shortcut().orElse(true);\n+            }).map(toFunction(l -> {\n+                return new DesktopIntegration(env, pkg, l);\n+            })).toList();\n@@ -177,3 +142,2 @@\n-    static ShellCustomAction create(PlatformPackage thePackage,\n-            Map<String, ? super Object> params) throws IOException {\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n+    static ShellCustomAction create(BuildEnv env, Package pkg) throws IOException {\n+        if (pkg.isRuntimeInstaller()) {\n@@ -182,1 +146,2 @@\n-        return new DesktopIntegration(thePackage, params, null);\n+        return new DesktopIntegration(env, (LinuxPackage) pkg,\n+                (LinuxLauncher) pkg.app().mainLauncher().orElseThrow());\n@@ -199,3 +164,1 @@\n-        associations.forEach(assoc -> assoc.data.verify());\n-\n-        if (iconFile != null) {\n+        if (iconFile.isPresent()) {\n@@ -203,1 +166,1 @@\n-            iconResource.saveToFile(iconFile.srcPath());\n+            iconResource.orElseThrow().saveToFile(iconFile.orElseThrow().srcPath());\n@@ -209,1 +172,1 @@\n-        if (desktopFile != null) {\n+        if (desktopFile.isPresent()) {\n@@ -211,1 +174,1 @@\n-            createDesktopFile(data);\n+            saveDesktopFile(data);\n@@ -261,4 +224,1 @@\n-        if (desktopFile != null) {\n-            return List.of(\"xdg-utils\");\n-        }\n-        return Collections.emptyList();\n+        return desktopFile.map(file -> List.of(\"xdg-utils\")).orElseGet(Collections::emptyList);\n@@ -267,2 +227,1 @@\n-    private Map<String, String> createDataForDesktopFile(\n-            Map<String, ? super Object> params) {\n+    private Map<String, String> createDataForDesktopFile() {\n@@ -270,3 +229,3 @@\n-        data.put(\"APPLICATION_NAME\", APP_NAME.fetchFrom(params));\n-        data.put(\"APPLICATION_DESCRIPTION\", DESCRIPTION.fetchFrom(params));\n-        data.put(\"APPLICATION_ICON\", Optional.ofNullable(iconFile).map(\n+        data.put(\"APPLICATION_NAME\", launcher.name());\n+        data.put(\"APPLICATION_DESCRIPTION\", launcher.description());\n+        data.put(\"APPLICATION_ICON\", iconFile.map(\n@@ -274,1 +233,1 @@\n-        data.put(\"DEPLOY_BUNDLE_CATEGORY\", MENU_GROUP.fetchFrom(params));\n+        data.put(\"DEPLOY_BUNDLE_CATEGORY\", pkg.menuGroupName());\n@@ -276,2 +235,2 @@\n-                thePackage.installedApplicationLayout().launchersDirectory().resolve(\n-                        LinuxAppImageBuilder.getLauncherName(params)).toString()));\n+                pkg.asInstalledPackageApplicationLayout().orElseThrow().launchersDirectory().resolve(\n+                        launcher.executableNameWithSuffix()).toString()));\n@@ -291,2 +250,4 @@\n-            registerDesktopFileCmd = String.join(\" \", \"xdg-desktop-menu\",\n-                    \"install\", desktopFile.installPath().toString());\n+            final var desktopFileInstallPath = desktopFile.orElseThrow().installPath().toString();\n+\n+            registerDesktopFileCmd = String.join(\" \",\n+                    \"xdg-desktop-menu\", \"install\", desktopFileInstallPath);\n@@ -294,3 +255,2 @@\n-                    \"do_if_file_belongs_to_single_package\", desktopFile.\n-                            installPath().toString(), \"xdg-desktop-menu\",\n-                    \"uninstall\", desktopFile.installPath().toString());\n+                    \"do_if_file_belongs_to_single_package\", desktopFileInstallPath,\n+                    \"xdg-desktop-menu\", \"uninstall\", desktopFileInstallPath);\n@@ -308,0 +268,2 @@\n+            final var desktopFileInstallPath = desktopFile.orElseThrow().installPath();\n+\n@@ -322,5 +284,3 @@\n-                    \"do_if_file_belongs_to_single_package\", desktopFile.\n-                            installPath().toString(),\n-                    \"desktop_uninstall_default_mime_handler\", desktopFile.\n-                            installPath().getFileName().toString(), String.join(\n-                            \" \", getMimeTypeNamesFromFileAssociations()));\n+                    \"do_if_file_belongs_to_single_package\", desktopFileInstallPath.toString(),\n+                    \"desktop_uninstall_default_mime_handler\", desktopFileInstallPath.getFileName().toString(),\n+                    String.join(\" \", getMimeTypeNamesFromFileAssociations()));\n@@ -370,5 +330,5 @@\n-     * Desktop integration file. xml, icon, etc.\n-     * Resides somewhere in application installation tree.\n-     * Has two paths:\n-     *  - path where it should be placed at package build time;\n-     *  - path where it should be installed by package manager;\n+     * Creates desktop integration file. xml, icon, etc.\n+     *\n+     * Returned instance:\n+     *  - srcPath(): path where it should be placed at package build time;\n+     *  - installPath(): path where it should be installed by package manager;\n@@ -376,22 +336,4 @@\n-    private class DesktopFile {\n-\n-        DesktopFile(String fileName) {\n-            var installPath = thePackage\n-                    .installedApplicationLayout()\n-                    .destktopIntegrationDirectory().resolve(fileName);\n-            var srcPath = thePackage\n-                    .sourceApplicationLayout()\n-                    .destktopIntegrationDirectory().resolve(fileName);\n-\n-            impl = new InstallableFile(srcPath, installPath);\n-        }\n-\n-        Path installPath() {\n-            return impl.installPath();\n-        }\n-\n-        Path srcPath() {\n-            return impl.srcPath();\n-        }\n-\n-        private final InstallableFile impl;\n+    private InstallableFile createDesktopFile(String fileName) {\n+        var srcPath = pkg.asPackageApplicationLayout().orElseThrow().resolveAt(env.appImageDir()).desktopIntegrationDirectory().resolve(fileName);\n+        var installPath = pkg.asInstalledPackageApplicationLayout().orElseThrow().desktopIntegrationDirectory().resolve(fileName);\n+        return new InstallableFile(srcPath, installPath);\n@@ -401,1 +343,1 @@\n-            FileAssociation assoc) throws XMLStreamException {\n+            LinuxFileAssociation fa) throws XMLStreamException {\n@@ -403,1 +345,0 @@\n-        for (var mimeType : assoc.mimeTypes) {\n@@ -405,1 +346,1 @@\n-            xml.writeAttribute(\"type\", mimeType);\n+            xml.writeAttribute(\"type\", fa.mimeType());\n@@ -407,2 +348,2 @@\n-            final String description = assoc.description;\n-            if (description != null && !description.isEmpty()) {\n+            final var description = fa.description().orElse(null);\n+            if (description != null) {\n@@ -414,5 +355,3 @@\n-            for (String ext : assoc.extensions) {\n-                xml.writeStartElement(\"glob\");\n-                xml.writeAttribute(\"pattern\", \"*.\" + ext);\n-                xml.writeEndElement();\n-            }\n+            xml.writeStartElement(\"glob\");\n+            xml.writeAttribute(\"pattern\", \"*.\" + fa.extension());\n+            xml.writeEndElement();\n@@ -421,1 +360,0 @@\n-        }\n@@ -430,2 +368,2 @@\n-            for (var assoc : associations) {\n-                appendFileAssociation(xml, assoc.data);\n+            for (var fa : associations) {\n+                appendFileAssociation(xml, fa);\n@@ -441,2 +379,2 @@\n-        for (var assoc : associations) {\n-            if (assoc.iconSize <= 0) {\n+        for (var fa : associations) {\n+            if (!fa.hasIcon()) {\n@@ -447,4 +385,6 @@\n-            for (var mimeType : assoc.data.mimeTypes) {\n-                if (processedMimeTypes.contains(mimeType)) {\n-                    continue;\n-                }\n+            var mimeType = fa.mimeType();\n+            if (processedMimeTypes.contains(mimeType)) {\n+                continue;\n+            }\n+\n+            processedMimeTypes.add(mimeType);\n@@ -452,1 +392,1 @@\n-                processedMimeTypes.add(mimeType);\n+            final var faIcon = fa.icon().orElseThrow();\n@@ -454,4 +394,3 @@\n-                \/\/ Create icon name for mime type from mime type.\n-                DesktopFile faIconFile = new DesktopFile(mimeType.replace(\n-                        File.separatorChar, '-') + PathUtils.getSuffix(\n-                                assoc.data.iconPath));\n+            \/\/ Create icon name for mime type from mime type.\n+            var faIconFile = createDesktopFile(mimeType.replace(File.separatorChar,\n+                    '-') + PathUtils.getSuffix(faIcon));\n@@ -459,2 +398,1 @@\n-                IOUtils.copyFile(assoc.data.iconPath,\n-                        faIconFile.srcPath());\n+            IOUtils.copyFile(faIcon, faIconFile.srcPath());\n@@ -462,3 +400,1 @@\n-                shellCommands.addIcon(mimeType, faIconFile.installPath(),\n-                        assoc.iconSize);\n-            }\n+            shellCommands.addIcon(mimeType, faIconFile.installPath(), fa.iconSize());\n@@ -468,1 +404,1 @@\n-    private void createDesktopFile(Map<String, String> data) throws IOException {\n+    private void saveDesktopFile(Map<String, String> data) throws IOException {\n@@ -475,1 +411,1 @@\n-                .saveToFile(desktopFile.srcPath());\n+                .saveToFile(desktopFile.orElseThrow().srcPath());\n@@ -479,4 +415,1 @@\n-        return associations.stream()\n-                .map(fa -> fa.data.mimeTypes)\n-                .flatMap(List::stream)\n-                .collect(Collectors.toUnmodifiableList());\n+        return associations.stream().map(FileAssociation::mimeType).toList();\n@@ -485,1 +418,1 @@\n-    private static int getSquareSizeOfImage(File f) {\n+    private static int getSquareSizeOfImage(Path path) {\n@@ -487,1 +420,1 @@\n-            BufferedImage bi = ImageIO.read(f);\n+            BufferedImage bi = ImageIO.read(path.toFile());\n@@ -521,7 +454,13 @@\n-    private static class LinuxFileAssociation {\n-        LinuxFileAssociation(FileAssociation fa) {\n-            this.data = fa;\n-            if (fa.iconPath != null && Files.isReadable(fa.iconPath)) {\n-                iconSize = getSquareSizeOfImage(fa.iconPath.toFile());\n-            } else {\n-                iconSize = -1;\n+    private interface LinuxFileAssociationMixin {\n+        int iconSize();\n+\n+        record Stub(int iconSize) implements LinuxFileAssociationMixin {}\n+    }\n+\n+    private static interface LinuxFileAssociation extends FileAssociation, LinuxFileAssociationMixin {\n+        static LinuxFileAssociation create(FileAssociation fa) {\n+            var iconSize = getIconSize(fa);\n+            if (iconSize <= 0) {\n+                \/\/ nullify the icon\n+                fa = new FileAssociation.Stub(fa.description(), Optional.empty(),\n+                        fa.mimeType(), fa.extension());\n@@ -529,0 +468,4 @@\n+            return CompositeProxy.build()\n+                    .invokeTunnel(CompositeProxyTunnel.INSTANCE)\n+                    .create(LinuxFileAssociation.class, fa,\n+                            new LinuxFileAssociationMixin.Stub(iconSize));\n@@ -531,2 +474,6 @@\n-        final FileAssociation data;\n-        final int iconSize;\n+        private static int getIconSize(FileAssociation fa) {\n+            return Optional.of(fa)\n+                    .flatMap(FileAssociation::icon)\n+                    .map(DesktopIntegration::getSquareSizeOfImage)\n+                    .orElse(-1);\n+        }\n@@ -535,1 +482,3 @@\n-    private final PlatformPackage thePackage;\n+    private final BuildEnv env;\n+    private final LinuxPackage pkg;\n+    private final Launcher launcher;\n@@ -539,3 +488,1 @@\n-    private final List<Map<String, ? super Object>> launchers;\n-\n-    private final OverridableResource iconResource;\n+    private final Optional<OverridableResource> iconResource;\n@@ -544,3 +491,3 @@\n-    private final DesktopFile mimeInfoFile;\n-    private final DesktopFile desktopFile;\n-    private final DesktopFile iconFile;\n+    private final InstallableFile mimeInfoFile;\n+    private final Optional<InstallableFile> desktopFile;\n+    private final Optional<InstallableFile> iconFile;\n@@ -551,17 +498,0 @@\n-\n-    private static final BundlerParamInfo<String> MENU_GROUP =\n-        new StandardBundlerParam<>(\n-                Arguments.CLIOptions.LINUX_MENU_GROUP.getId(),\n-                String.class,\n-                params -> I18N.getString(\"param.menu-group.default\"),\n-                (s, p) -> s\n-        );\n-\n-    private static final StandardBundlerParam<Boolean> LINUX_SHORTCUT_HINT =\n-        new StandardBundlerParam<>(\n-                Arguments.CLIOptions.LINUX_SHORTCUT_HINT.getId(),\n-                Boolean.class,\n-                params -> false,\n-                (s, p) -> (s == null || \"null\".equalsIgnoreCase(s))\n-                        ? false : Boolean.valueOf(s)\n-        );\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/DesktopIntegration.java","additions":138,"deletions":208,"binary":false,"changes":346,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,8 @@\n-        setAppImageSupplier(LinuxAppImageBuilder::new);\n+        setAppImageSupplier((params, output) -> {\n+            \/\/ Order is important!\n+            var app = LinuxFromParams.APPLICATION.fetchFrom(params);\n+            var env = BuildEnvFromParams.BUILD_ENV.fetchFrom(params);\n+            LinuxPackagingPipeline.build()\n+                    .excludeDirFromCopying(output.getParent())\n+                    .create().execute(BuildEnv.withAppImageDir(env, output), app);\n+        });\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxAppBundler.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1,138 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.jpackage.internal;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.text.MessageFormat;\n-import java.util.List;\n-import java.util.Map;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n-\n-import jdk.jpackage.internal.model.PackagerException;\n-import jdk.jpackage.internal.util.PathUtils;\n-\n-public class LinuxAppImageBuilder extends AbstractAppImageBuilder {\n-\n-    static final BundlerParamInfo<Path> ICON_PNG =\n-            new StandardBundlerParam<>(\n-            \"icon.png\",\n-            Path.class,\n-            params -> {\n-                Path f = ICON.fetchFrom(params);\n-                if (f != null && f.getFileName() != null && !f.getFileName()\n-                        .toString().toLowerCase().endsWith(\".png\")) {\n-                    Log.error(MessageFormat.format(\n-                            I18N.getString(\"message.icon-not-png\"), f));\n-                    return null;\n-                }\n-                return f;\n-            },\n-            (s, p) -> Path.of(s));\n-\n-    static final String DEFAULT_ICON = \"JavaApp.png\";\n-\n-    LinuxAppImageBuilder(Path imageOutDir) {\n-        super(imageOutDir);\n-    }\n-\n-    private void writeEntry(InputStream in, Path dstFile) throws IOException {\n-        Files.createDirectories(dstFile.getParent());\n-        Files.copy(in, dstFile);\n-    }\n-\n-    public static String getLauncherName(Map<String, ? super Object> params) {\n-        return APP_NAME.fetchFrom(params);\n-    }\n-\n-    @Override\n-    public void prepareApplicationFiles(Map<String, ? super Object> params)\n-            throws IOException {\n-        appLayout.roots().stream().forEach(dir -> {\n-            try {\n-                IOUtils.writableOutputDir(dir);\n-            } catch (PackagerException pe) {\n-                throw new RuntimeException(pe);\n-            }\n-        });\n-\n-        \/\/ create the primary launcher\n-        createLauncherForEntryPoint(params, null);\n-\n-        \/\/ create app launcher shared library\n-        createLauncherLib();\n-\n-        \/\/ create the additional launchers, if any\n-        List<Map<String, ? super Object>> entryPoints\n-                = ADD_LAUNCHERS.fetchFrom(params);\n-        for (Map<String, ? super Object> entryPoint : entryPoints) {\n-            createLauncherForEntryPoint(AddLauncherArguments.merge(params,\n-                    entryPoint, ICON.getID(), ICON_PNG.getID()), params);\n-        }\n-\n-        \/\/ Copy class path entries to Java folder\n-        copyApplication(params);\n-    }\n-\n-    private void createLauncherLib() throws IOException {\n-        Path path = appLayout.pathGroup().getPath(\n-                ApplicationLayout.PathRole.LINUX_APPLAUNCHER_LIB);\n-        try (InputStream resource = getResourceAsStream(\"libjpackageapplauncheraux.so\")) {\n-            writeEntry(resource, path);\n-        }\n-\n-        path.toFile().setExecutable(true, false);\n-        path.toFile().setWritable(true, true);\n-    }\n-\n-    private void createLauncherForEntryPoint(Map<String, ? super Object> params,\n-            Map<String, ? super Object> mainParams) throws IOException {\n-        \/\/ Copy executable to launchers folder\n-        Path executableFile = appLayout.launchersDirectory().resolve(getLauncherName(params));\n-        try (InputStream is_launcher =\n-                getResourceAsStream(\"jpackageapplauncher\")) {\n-            writeEntry(is_launcher, executableFile);\n-        }\n-\n-        executableFile.toFile().setExecutable(true, false);\n-        executableFile.toFile().setWritable(true, true);\n-\n-        writeCfgFile(params);\n-\n-        var iconResource = createIconResource(DEFAULT_ICON, ICON_PNG, params,\n-                mainParams);\n-        if (iconResource != null) {\n-            Path iconTarget = appLayout.destktopIntegrationDirectory().resolve(\n-                    APP_NAME.fetchFrom(params) + PathUtils.getSuffix(Path.of(\n-                    DEFAULT_ICON)));\n-            iconResource.saveToFile(iconTarget);\n-        }\n-    }\n-}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxAppImageBuilder.java","additions":0,"deletions":138,"binary":false,"changes":138,"status":"deleted"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.util.PathUtils.resolveNullablePath;\n+\n+import java.nio.file.Path;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+interface LinuxApplicationLayout extends ApplicationLayout, LinuxApplicationLayoutMixin {\n+\n+    static LinuxApplicationLayout create(ApplicationLayout layout, Path libAppLauncher) {\n+        return CompositeProxy.build()\n+                .invokeTunnel(CompositeProxyTunnel.INSTANCE)\n+                .create(LinuxApplicationLayout.class, layout, new LinuxApplicationLayoutMixin.Stub(libAppLauncher));\n+    }\n+\n+    @Override\n+    default LinuxApplicationLayout resolveAt(Path root) {\n+        return create(ApplicationLayout.super.resolveAt(root),\n+                resolveNullablePath(root, libAppLauncher()));\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxApplicationLayout.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+\n+\/\/ Must be publc to allow access from AppImageLayout.toPathGroup()\n+public interface LinuxApplicationLayoutMixin {\n+\n+    \/**\n+     * Path to \"libapplauncher.so\".\n+     *\/\n+    Path libAppLauncher();\n+\n+    record Stub(Path libAppLauncher) implements LinuxApplicationLayoutMixin {}\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxApplicationLayoutMixin.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -28,0 +28,4 @@\n+import jdk.jpackage.internal.model.LinuxPackage;\n+import jdk.jpackage.internal.model.PackagerException;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.LinuxDebPackage;\n@@ -37,1 +41,0 @@\n-import java.text.MessageFormat;\n@@ -43,1 +46,0 @@\n-import java.util.Optional;\n@@ -45,0 +47,1 @@\n+import java.util.function.Function;\n@@ -50,11 +53,3 @@\n-import jdk.jpackage.internal.model.ConfigException;\n-import jdk.jpackage.internal.model.PackagerException;\n-\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.StandardBundlerParam.ABOUT_URL;\n-import static jdk.jpackage.internal.StandardBundlerParam.INSTALLER_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.jpackage.internal.StandardBundlerParam.RELEASE;\n-import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n+import jdk.jpackage.internal.model.AppImageLayout;\n+import static jdk.jpackage.internal.util.function.ThrowingFunction.toFunction;\n+import static jdk.jpackage.internal.model.StandardPackageType.LINUX_DEB;\n@@ -64,39 +59,0 @@\n-    \/\/ Debian rules for package naming are used here\n-    \/\/ https:\/\/www.debian.org\/doc\/debian-policy\/ch-controlfields.html#s-f-Source\n-    \/\/\n-    \/\/ Package names must consist only of lower case letters (a-z),\n-    \/\/ digits (0-9), plus (+) and minus (-) signs, and periods (.).\n-    \/\/ They must be at least two characters long and\n-    \/\/ must start with an alphanumeric character.\n-    \/\/\n-    private static final Pattern DEB_PACKAGE_NAME_PATTERN =\n-            Pattern.compile(\"^[a-z][a-z\\\\d\\\\+\\\\-\\\\.]+\");\n-\n-    private static final BundlerParamInfo<String> PACKAGE_NAME =\n-            new StandardBundlerParam<> (\n-            Arguments.CLIOptions.LINUX_BUNDLE_NAME.getId(),\n-            String.class,\n-            params -> {\n-                String nm = INSTALLER_NAME.fetchFrom(params);\n-                if (nm == null) return null;\n-\n-                \/\/ make sure to lower case and spaces\/underscores become dashes\n-                nm = nm.toLowerCase().replaceAll(\"[ _]\", \"-\");\n-                return nm;\n-            },\n-            (s, p) -> {\n-                if (!DEB_PACKAGE_NAME_PATTERN.matcher(s).matches()) {\n-                    try {\n-                        throw new ConfigException(\n-                            MessageFormat.format(I18N.getString(\n-                            \"error.deb-invalid-value-for-package-name\"), s),\n-                            I18N.getString(\n-                            \"error.deb-invalid-value-for-package-name.advice\"));\n-                    } catch (ConfigException ex) {\n-                        throw new IllegalArgumentException(ex);\n-                    }\n-                }\n-\n-                return s;\n-            });\n-\n@@ -107,65 +63,0 @@\n-    private static final String DEB_ARCH;\n-    static {\n-        String debArch;\n-        try {\n-            debArch = Executor.of(TOOL_DPKG, \"--print-architecture\").saveOutput(\n-                    true).executeExpectSuccess().getOutput().get(0);\n-        } catch (IOException ex) {\n-            debArch = null;\n-        }\n-        DEB_ARCH = debArch;\n-    }\n-\n-    private static final String releaseSuffix(Map<String, ? super Object> params) {\n-        return Optional.ofNullable(RELEASE.fetchFrom(params, false)).map(\n-                rel -> \"-\" + rel).orElse(\"\");\n-    }\n-\n-    private static final BundlerParamInfo<String> FULL_PACKAGE_NAME =\n-            new StandardBundlerParam<>(\n-                    \"linux.deb.fullPackageName\", String.class, params -> {\n-                        return PACKAGE_NAME.fetchFrom(params)\n-                            + \"_\" + VERSION.fetchFrom(params)\n-                            + releaseSuffix(params)\n-                            + \"_\" + DEB_ARCH;\n-                    }, (s, p) -> s);\n-\n-    private static final BundlerParamInfo<String> EMAIL =\n-            new StandardBundlerParam<> (\n-            Arguments.CLIOptions.LINUX_DEB_MAINTAINER.getId(),\n-            String.class,\n-            params -> \"Unknown\",\n-            (s, p) -> s);\n-\n-    private static final BundlerParamInfo<String> MAINTAINER =\n-            new StandardBundlerParam<> (\n-            Arguments.CLIOptions.LINUX_DEB_MAINTAINER.getId() + \".internal\",\n-            String.class,\n-            params -> VENDOR.fetchFrom(params) + \" <\"\n-                    + EMAIL.fetchFrom(params) + \">\",\n-            (s, p) -> s);\n-\n-    private static final BundlerParamInfo<String> SECTION =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.LINUX_CATEGORY.getId(),\n-            String.class,\n-            params -> \"misc\",\n-            (s, p) -> s);\n-\n-    private static final BundlerParamInfo<String> LICENSE_TEXT =\n-            new StandardBundlerParam<> (\n-            \"linux.deb.licenseText\",\n-            String.class,\n-            params -> {\n-                try {\n-                    String licenseFile = LICENSE_FILE.fetchFrom(params);\n-                    if (licenseFile != null) {\n-                        return Files.readString(Path.of(licenseFile));\n-                    }\n-                } catch (IOException e) {\n-                    Log.verbose(e);\n-                }\n-                return \"Unknown\";\n-            },\n-            (s, p) -> s);\n-\n@@ -173,1 +64,1 @@\n-        super(PACKAGE_NAME);\n+        super(LinuxFromParams.DEB_PACKAGE);\n@@ -177,2 +68,1 @@\n-    public void doValidate(Map<String, ? super Object> params)\n-            throws ConfigException {\n+    protected void doValidate(BuildEnv env, LinuxPackage pkg) throws ConfigException {\n@@ -181,1 +71,1 @@\n-        if (LICENSE_FILE.fetchFrom(params) == null) {\n+        if (pkg.licenseFile().isEmpty()) {\n@@ -187,2 +77,1 @@\n-    protected List<ToolValidator> getToolValidators(\n-            Map<String, ? super Object> params) {\n+    protected List<ToolValidator> getToolValidators() {\n@@ -194,8 +83,10 @@\n-    protected Path buildPackageBundle(\n-            Map<String, String> replacementData,\n-            Map<String, ? super Object> params, Path outputParentDir) throws\n-            PackagerException, IOException {\n-\n-        prepareProjectConfig(replacementData, params);\n-        adjustPermissionsRecursive(createMetaPackage(params).sourceRoot());\n-        return buildDeb(params, outputParentDir);\n+    protected void createConfigFiles(Map<String, String> replacementData,\n+            BuildEnv env, LinuxPackage pkg) throws IOException {\n+        prepareProjectConfig(replacementData, env, pkg);\n+        adjustPermissionsRecursive(env.appImageDir());\n+    }\n+\n+    @Override\n+    protected Path buildPackageBundle(BuildEnv env, LinuxPackage pkg,\n+            Path outputParentDir) throws PackagerException, IOException {\n+        return buildDeb(env, pkg, outputParentDir);\n@@ -207,3 +98,1 @@\n-    protected void initLibProvidersLookup(\n-            Map<String, ? super Object> params,\n-            LibProvidersLookup libProvidersLookup) {\n+    protected void initLibProvidersLookup(LibProvidersLookup libProvidersLookup) {\n@@ -274,0 +163,2 @@\n+        var debArch = LinuxPackageArch.getValue(LINUX_DEB);\n+\n@@ -280,1 +171,1 @@\n-                        if (name.endsWith(\":\" + DEB_ARCH)) {\n+                        if (name.endsWith(\":\" + debArch)) {\n@@ -283,1 +174,1 @@\n-                                    name.length() - (DEB_ARCH.length() + 1));\n+                                    name.length() - (debArch.length() + 1));\n@@ -298,2 +189,2 @@\n-    protected List<ConfigException> verifyOutputBundle(\n-            Map<String, ? super Object> params, Path packageBundle) {\n+    protected List<ConfigException> verifyOutputBundle(BuildEnv env, LinuxPackage pkg,\n+            Path packageBundle) {\n@@ -305,1 +196,1 @@\n-                new PackageProperty(\"Package\", PACKAGE_NAME.fetchFrom(params),\n+                new PackageProperty(\"Package\", pkg.packageName(),\n@@ -307,2 +198,1 @@\n-                new PackageProperty(\"Version\", String.format(\"%s%s\",\n-                        VERSION.fetchFrom(params), releaseSuffix(params)),\n+                new PackageProperty(\"Version\", ((LinuxDebPackage)pkg).versionWithRelease(),\n@@ -311,2 +201,1 @@\n-                new PackageProperty(\"Architecture\", DEB_ARCH, \"APPLICATION_ARCH\",\n-                        controlFileName));\n+                new PackageProperty(\"Architecture\", pkg.arch(), \"APPLICATION_ARCH\", controlFileName));\n@@ -407,1 +296,1 @@\n-        void create(Map<String, String> data, Map<String, ? super Object> params)\n+        void create(Map<String, String> data, Function<String, OverridableResource> resourceFactory)\n@@ -409,2 +298,1 @@\n-            createResource(\"template.\" + dstFilePath.getFileName().toString(),\n-                    params)\n+            resourceFactory.apply(\"template.\" + dstFilePath.getFileName().toString())\n@@ -424,2 +312,1 @@\n-    private void prepareProjectConfig(Map<String, String> data,\n-            Map<String, ? super Object> params) throws IOException {\n+    private void prepareProjectConfig(Map<String, String> data, BuildEnv env, LinuxPackage pkg) throws IOException {\n@@ -427,1 +314,1 @@\n-        Path configDir = createMetaPackage(params).sourceRoot().resolve(\"DEBIAN\");\n+        Path configDir = env.appImageDir().resolve(\"DEBIAN\");\n@@ -445,6 +332,2 @@\n-        final String installDir = LINUX_INSTALL_DIR.fetchFrom(params);\n-\n-        if (!StandardBundlerParam.isRuntimeInstaller(params)\n-                || (isInstallDirInUsrTree(installDir) || installDir.startsWith(\"\/usr\/\"))) {\n-            debianFiles.add(new DebianFile(\n-                    getConfig_CopyrightFile(params),\n+        ((LinuxDebPackage)pkg).relativeCopyrightFilePath().ifPresent(copyrightFile -> {\n+            debianFiles.add(new DebianFile(env.appImageDir().resolve(copyrightFile),\n@@ -452,1 +335,1 @@\n-        }\n+        });\n@@ -455,1 +338,1 @@\n-            debianFile.create(data, params);\n+            debianFile.create(data, env::createResource);\n@@ -460,2 +343,1 @@\n-    protected Map<String, String> createReplacementData(\n-            Map<String, ? super Object> params) throws IOException {\n+    protected Map<String, String> createReplacementData(BuildEnv env, LinuxPackage pkg) throws IOException {\n@@ -464,5 +346,7 @@\n-        data.put(\"APPLICATION_MAINTAINER\", MAINTAINER.fetchFrom(params));\n-        data.put(\"APPLICATION_SECTION\", SECTION.fetchFrom(params));\n-        data.put(\"APPLICATION_COPYRIGHT\", COPYRIGHT.fetchFrom(params));\n-        data.put(\"APPLICATION_LICENSE_TEXT\", LICENSE_TEXT.fetchFrom(params));\n-        data.put(\"APPLICATION_ARCH\", DEB_ARCH);\n+        String licenseText = pkg.licenseFile().map(toFunction(Files::readString)).orElse(\"Unknown\");\n+\n+        data.put(\"APPLICATION_MAINTAINER\", ((LinuxDebPackage) pkg).maintainer());\n+        data.put(\"APPLICATION_SECTION\", pkg.category().orElseThrow());\n+        data.put(\"APPLICATION_COPYRIGHT\", pkg.app().copyright());\n+        data.put(\"APPLICATION_LICENSE_TEXT\", licenseText);\n+        data.put(\"APPLICATION_ARCH\", pkg.arch());\n@@ -470,6 +354,5 @@\n-                createMetaPackage(params).sourceApplicationLayout().sizeInBytes() >> 10));\n-        data.put(\"APPLICATION_HOMEPAGE\", Optional.ofNullable(\n-                ABOUT_URL.fetchFrom(params)).map(value -> \"Homepage: \" + value).orElse(\n-                \"\"));\n-        data.put(\"APPLICATION_VERSION_WITH_RELEASE\", String.format(\"%s%s\",\n-                VERSION.fetchFrom(params), releaseSuffix(params)));\n+                AppImageLayout.toPathGroup(pkg.packageLayout().resolveAt(\n+                        env.appImageDir())).sizeInBytes() >> 10));\n+        data.put(\"APPLICATION_HOMEPAGE\", pkg.aboutURL().map(\n+                value -> \"Homepage: \" + value).orElse(\"\"));\n+        data.put(\"APPLICATION_VERSION_WITH_RELEASE\", ((LinuxDebPackage) pkg).versionWithRelease());\n@@ -480,31 +363,3 @@\n-    private Path getConfig_CopyrightFile(Map<String, ? super Object> params) {\n-        final String installDir = LINUX_INSTALL_DIR.fetchFrom(params);\n-        final String packageName = PACKAGE_NAME.fetchFrom(params);\n-\n-        final Path installPath;\n-        if (isInstallDirInUsrTree(installDir) || installDir.startsWith(\"\/usr\/\")) {\n-            installPath = Path.of(\"\/usr\/share\/doc\/\", packageName, \"copyright\");\n-        } else {\n-            installPath = Path.of(installDir, packageName, \"share\/doc\/copyright\");\n-        }\n-\n-        return createMetaPackage(params).sourceRoot().resolve(\n-                Path.of(\"\/\").relativize(installPath));\n-    }\n-\n-    private Path buildDeb(Map<String, ? super Object> params,\n-            Path outdir) throws IOException {\n-\n-        PlatformPackage thePackage = createMetaPackage(params);\n-\n-        new ScriptRunner()\n-              .setDirectory(thePackage.sourceRoot())\n-              .setResourceCategoryId(\"resource.post-app-image-script\")\n-              .setScriptNameSuffix(\"post-image\")\n-              .setEnvironmentVariable(\"JpAppImageDir\", thePackage.sourceRoot().toAbsolutePath().toString())\n-              .run(params);\n-\n-        Path outFile = outdir.resolve(\n-                FULL_PACKAGE_NAME.fetchFrom(params)+\".deb\");\n-        Log.verbose(MessageFormat.format(I18N.getString(\n-                \"message.outputting-to-location\"), outFile.toAbsolutePath().toString()));\n+    private Path buildDeb(BuildEnv env, LinuxPackage pkg, Path outdir) throws IOException {\n+        Path outFile = outdir.resolve(pkg.packageFileNameWithSuffix());\n+        Log.verbose(I18N.format(\"message.outputting-to-location\", outFile.toAbsolutePath()));\n@@ -517,1 +372,1 @@\n-        cmdline.addAll(List.of(\"-b\", thePackage.sourceRoot().toString(),\n+        cmdline.addAll(List.of(\"-b\", env.appImageDir().toString(),\n@@ -525,2 +380,1 @@\n-        Log.verbose(MessageFormat.format(I18N.getString(\n-                \"message.output-to-location\"), outFile.toAbsolutePath().toString()));\n+        Log.verbose(I18N.format(\"message.output-to-location\", outFile.toAbsolutePath()));\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxDebBundler.java","additions":58,"deletions":204,"binary":false,"changes":262,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.LinuxDebPackage;\n+import jdk.jpackage.internal.model.LinuxDebPackageMixin;\n+\n+final class LinuxDebPackageBuilder {\n+\n+    LinuxDebPackageBuilder(LinuxPackageBuilder pkgBuilder) {\n+        this.pkgBuilder = Objects.requireNonNull(pkgBuilder);\n+    }\n+\n+    LinuxDebPackage create() throws ConfigException {\n+        if (pkgBuilder.category().isEmpty()) {\n+            pkgBuilder.category(DEFAULTS.category());\n+        }\n+        var pkg = pkgBuilder.create();\n+        return LinuxDebPackage.create(pkg, new LinuxDebPackageMixin.Stub(\n+                Optional.ofNullable(maintainerEmail).orElseGet(\n+                        DEFAULTS::maintainerEmail)));\n+    }\n+\n+    LinuxDebPackageBuilder maintainerEmail(String v) {\n+        maintainerEmail = v;\n+        return this;\n+    }\n+\n+    private record Defaults(String maintainerEmail, String category) {\n+    }\n+\n+    private String maintainerEmail;\n+\n+    private final LinuxPackageBuilder pkgBuilder;\n+\n+    private static final Defaults DEFAULTS = new Defaults(\"Unknown\", \"misc\");\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxDebPackageBuilder.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,142 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.BundlerParamInfo.createStringBundlerParam;\n+import static jdk.jpackage.internal.FromParams.createApplicationBuilder;\n+import static jdk.jpackage.internal.FromParams.createApplicationBundlerParam;\n+import static jdk.jpackage.internal.FromParams.createPackageBuilder;\n+import static jdk.jpackage.internal.FromParams.createPackageBundlerParam;\n+import static jdk.jpackage.internal.LinuxPackagingPipeline.APPLICATION_LAYOUT;\n+import static jdk.jpackage.internal.StandardBundlerParam.SHORTCUT_HINT;\n+import static jdk.jpackage.internal.model.StandardPackageType.LINUX_DEB;\n+import static jdk.jpackage.internal.model.StandardPackageType.LINUX_RPM;\n+import static jdk.jpackage.internal.util.function.ThrowingFunction.toFunction;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.LinuxApplication;\n+import jdk.jpackage.internal.model.LinuxLauncher;\n+import jdk.jpackage.internal.model.LinuxLauncherMixin;\n+import jdk.jpackage.internal.model.LinuxPackage;\n+import jdk.jpackage.internal.model.StandardPackageType;\n+\n+final class LinuxFromParams {\n+\n+    private static LinuxApplication createLinuxApplication(\n+            Map<String, ? super Object> params) throws ConfigException, IOException {\n+        final var launcherFromParams = new LauncherFromParams();\n+        final var app = createApplicationBuilder(params, toFunction(launcherParams -> {\n+            final var launcher = launcherFromParams.create(launcherParams);\n+            final var shortcut = Stream.of(SHORTCUT_HINT, LINUX_SHORTCUT_HINT).map(param -> {\n+                return param.findIn(launcherParams);\n+            }).filter(Optional::isPresent).map(Optional::get).findFirst();\n+            return LinuxLauncher.create(launcher, new LinuxLauncherMixin.Stub(shortcut));\n+        }), APPLICATION_LAYOUT).create();\n+        return LinuxApplication.create(app);\n+    }\n+\n+    private static LinuxPackageBuilder createLinuxPackageBuilder(\n+            Map<String, ? super Object> params, StandardPackageType type) throws ConfigException, IOException {\n+\n+        final var app = APPLICATION.fetchFrom(params);\n+\n+        final var superPkgBuilder = createPackageBuilder(params, app, type);\n+\n+        final var pkgBuilder = new LinuxPackageBuilder(superPkgBuilder);\n+\n+        LINUX_PACKAGE_DEPENDENCIES.copyInto(params, pkgBuilder::additionalDependencies);\n+        LINUX_CATEGORY.copyInto(params, pkgBuilder::category);\n+        LINUX_MENU_GROUP.copyInto(params, pkgBuilder::menuGroupName);\n+        RELEASE.copyInto(params, pkgBuilder::release);\n+        LINUX_PACKAGE_NAME.copyInto(params, pkgBuilder::literalName);\n+\n+        return pkgBuilder;\n+    }\n+\n+    private static LinuxPackage createLinuxRpmPackage(\n+            Map<String, ? super Object> params) throws ConfigException, IOException {\n+\n+        final var superPkgBuilder = createLinuxPackageBuilder(params, LINUX_RPM);\n+\n+        final var pkgBuilder = new LinuxRpmPackageBuilder(superPkgBuilder);\n+\n+        LICENSE_TYPE.copyInto(params, pkgBuilder::licenseType);\n+\n+        return pkgBuilder.create();\n+    }\n+\n+    private static LinuxPackage createLinuxDebPackage(\n+            Map<String, ? super Object> params) throws ConfigException, IOException {\n+\n+        final var superPkgBuilder = createLinuxPackageBuilder(params, LINUX_DEB);\n+\n+        final var pkgBuilder = new LinuxDebPackageBuilder(superPkgBuilder);\n+\n+        MAINTAINER_EMAIL.copyInto(params, pkgBuilder::maintainerEmail);\n+\n+        return pkgBuilder.create();\n+    }\n+\n+    static final BundlerParamInfo<LinuxApplication> APPLICATION = createApplicationBundlerParam(\n+            LinuxFromParams::createLinuxApplication);\n+\n+    static final BundlerParamInfo<LinuxPackage> RPM_PACKAGE = createPackageBundlerParam(\n+            LinuxFromParams::createLinuxRpmPackage);\n+\n+    static final BundlerParamInfo<LinuxPackage> DEB_PACKAGE = createPackageBundlerParam(\n+            LinuxFromParams::createLinuxDebPackage);\n+\n+    private static final BundlerParamInfo<Boolean> LINUX_SHORTCUT_HINT = new BundlerParamInfo<>(\n+            Arguments.CLIOptions.LINUX_SHORTCUT_HINT.getId(),\n+            Boolean.class,\n+            params -> false,\n+            (s, p) -> (s == null || \"null\".equalsIgnoreCase(s)) ? false : Boolean.valueOf(s)\n+    );\n+\n+    private static final BundlerParamInfo<String> LINUX_CATEGORY = createStringBundlerParam(\n+            Arguments.CLIOptions.LINUX_CATEGORY.getId());\n+\n+    private static final BundlerParamInfo<String> LINUX_PACKAGE_DEPENDENCIES = createStringBundlerParam(\n+            Arguments.CLIOptions.LINUX_PACKAGE_DEPENDENCIES.getId());\n+\n+    private static final BundlerParamInfo<String> LINUX_MENU_GROUP = createStringBundlerParam(\n+            Arguments.CLIOptions.LINUX_MENU_GROUP.getId());\n+\n+    private static final BundlerParamInfo<String> RELEASE = createStringBundlerParam(\n+            Arguments.CLIOptions.RELEASE.getId());\n+\n+    private static final BundlerParamInfo<String> LINUX_PACKAGE_NAME = createStringBundlerParam(\n+            Arguments.CLIOptions.LINUX_BUNDLE_NAME.getId());\n+\n+    private static final BundlerParamInfo<String> LICENSE_TYPE = createStringBundlerParam(\n+            Arguments.CLIOptions.LINUX_RPM_LICENSE_TYPE.getId());\n+\n+    private static final BundlerParamInfo<String> MAINTAINER_EMAIL = createStringBundlerParam(\n+            Arguments.CLIOptions.LINUX_DEB_MAINTAINER.getId());\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxFromParams.java","additions":142,"deletions":0,"binary":false,"changes":142,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,2 @@\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.Package;\n@@ -40,4 +41,3 @@\n-    private LinuxLaunchersAsServices(PlatformPackage thePackage,\n-            Map<String, Object> params) throws IOException {\n-        super(thePackage, REQUIRED_PACKAGES, params, li -> {\n-            return new Launcher(thePackage, li.getName(), params);\n+    private LinuxLaunchersAsServices(BuildEnv env, Package pkg) throws IOException {\n+        super(env.appImageDir(), pkg.app(), REQUIRED_PACKAGES, launcher -> {\n+            return new LauncherImpl(env, pkg, launcher);\n@@ -61,3 +61,2 @@\n-    static ShellCustomAction create(PlatformPackage thePackage,\n-            Map<String, Object> params) throws IOException {\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n+    static ShellCustomAction create(BuildEnv env, Package pkg) throws IOException {\n+        if (pkg.isRuntimeInstaller()) {\n@@ -66,1 +65,1 @@\n-        return new LinuxLaunchersAsServices(thePackage, params);\n+        return new LinuxLaunchersAsServices(env, pkg);\n@@ -69,2 +68,1 @@\n-    public static Path getServiceUnitFileName(String packageName,\n-            String launcherName) {\n+    public static Path getServiceUnitFileName(String packageName, String launcherName) {\n@@ -75,1 +73,1 @@\n-    private static class Launcher extends UnixLauncherAsService {\n+    private static final class LauncherImpl extends UnixLauncherAsService {\n@@ -77,5 +75,3 @@\n-        Launcher(PlatformPackage thePackage, String name,\n-                Map<String, Object> mainParams) {\n-            super(name, mainParams, createResource(\"unit-template.service\",\n-                    mainParams).setCategory(I18N.getString(\n-                            \"resource.systemd-unit-file\")));\n+        LauncherImpl(BuildEnv env, Package pkg, Launcher launcher) {\n+            super(pkg.app(), launcher, env.createResource(\"unit-template.service\").setCategory(\n+                    I18N.getString(\"resource.systemd-unit-file\")));\n@@ -83,1 +79,1 @@\n-            unitFilename = getServiceUnitFileName(thePackage.name(), getName());\n+            unitFilename = getServiceUnitFileName(pkg.packageName(), launcher.executableName());\n@@ -85,6 +81,4 @@\n-            getResource()\n-                    .setPublicName(unitFilename)\n-                    .addSubstitutionDataEntry(\"APPLICATION_LAUNCHER\",\n-                            Enquoter.forPropertyValues().applyTo(\n-                                    thePackage.installedApplicationLayout().launchersDirectory().resolve(\n-                                            getName()).toString()));\n+            getResource().setPublicName(unitFilename).addSubstitutionDataEntry(\n+                    \"APPLICATION_LAUNCHER\",\n+                    Enquoter.forPropertyValues().applyTo(\n+                            pkg.asInstalledPackageApplicationLayout().orElseThrow().launchersDirectory().resolve(getName()).toString()));\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxLaunchersAsServices.java","additions":19,"deletions":25,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.io.IOException;\n+import static jdk.jpackage.internal.util.function.ThrowingSupplier.toSupplier;\n+import jdk.jpackage.internal.model.StandardPackageType;\n+\n+final class LinuxPackageArch {\n+\n+    static String getValue(StandardPackageType pkgType) {\n+        switch (pkgType) {\n+            case LINUX_RPM -> {\n+                return RpmPackageArch.VALUE;\n+            }\n+            case LINUX_DEB -> {\n+                return DebPackageArch.VALUE;\n+            }\n+            default -> {\n+                throw new IllegalArgumentException();\n+            }\n+        }\n+    }\n+\n+    private static class DebPackageArch {\n+\n+        static final String VALUE = toSupplier(DebPackageArch::getValue).get();\n+\n+        private static String getValue() throws IOException {\n+            return Executor.of(\"dpkg\", \"--print-architecture\").saveOutput(true)\n+                    .executeExpectSuccess().getOutput().get(0);\n+        }\n+    }\n+\n+    private static class RpmPackageArch {\n+\n+        \/*\n+         * Various ways to get rpm arch. Needed to address JDK-8233143. rpmbuild is mandatory for\n+         * rpm packaging, try it first. rpm is optional and may not be available, use as the last\n+         * resort.\n+         *\/\n+        private static enum RpmArchReader {\n+            Rpmbuild(\"rpmbuild\", \"--eval=%{_target_cpu}\"),\n+            Rpm(\"rpm\", \"--eval=%{_target_cpu}\");\n+\n+            RpmArchReader(String... cmdline) {\n+                this.cmdline = cmdline;\n+            }\n+\n+            String getRpmArch() throws IOException {\n+                Executor exec = Executor.of(cmdline).saveOutput(true);\n+                switch (this) {\n+                    case Rpm -> {\n+                        exec.executeExpectSuccess();\n+                    }\n+                    case Rpmbuild -> {\n+                        if (exec.execute() != 0) {\n+                            return null;\n+                        }\n+                    }\n+                    default -> {\n+                        throw new UnsupportedOperationException();\n+                    }\n+                }\n+                return exec.getOutput().get(0);\n+            }\n+\n+            private final String[] cmdline;\n+        }\n+\n+        static final String VALUE = toSupplier(RpmPackageArch::getValue).get();\n+\n+        private static String getValue() throws IOException {\n+            for (var rpmArchReader : RpmArchReader.values()) {\n+                var rpmArchStr = rpmArchReader.getRpmArch();\n+                if (rpmArchStr != null) {\n+                    return rpmArchStr;\n+                }\n+            }\n+            throw new RuntimeException(\"error.rpm-arch-not-detected\");\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxPackageArch.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"},{"patch":"@@ -0,0 +1,185 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.I18N.buildConfigException;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.regex.Pattern;\n+import jdk.jpackage.internal.model.AppImageLayout;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.LinuxPackage;\n+import jdk.jpackage.internal.model.LinuxPackageMixin;\n+import jdk.jpackage.internal.model.Package;\n+import jdk.jpackage.internal.model.StandardPackageType;\n+\n+final class LinuxPackageBuilder {\n+\n+    LinuxPackageBuilder(PackageBuilder pkgBuilder) {\n+        this.pkgBuilder = Objects.requireNonNull(pkgBuilder);\n+    }\n+\n+    LinuxPackage create() throws ConfigException {\n+        if (literalName != null) {\n+            pkgBuilder.name(literalName);\n+        } else {\n+            \/\/ Lower case and turn spaces\/underscores into dashes\n+            pkgBuilder.name(pkgBuilder.create().packageName().toLowerCase().replaceAll(\"[ _]\", \"-\"));\n+        }\n+\n+        final var pkg = pkgBuilder.create();\n+\n+        final var stdPkgType = pkg.asStandardPackageType();\n+        if (stdPkgType.isPresent()) {\n+            validatePackageName(pkg.packageName(), stdPkgType.orElseThrow());\n+        }\n+\n+        var reply = create(pkg, pkg.packageLayout());\n+        if (reply.isInstallDirInUsrTree()) {\n+            reply = create(pkg, usrTreePackageLayout(pkg.relativeInstallDir(), pkg.packageName()));\n+        }\n+\n+        return reply;\n+    }\n+\n+    private LinuxPackage create(Package pkg, AppImageLayout pkgLayout) throws ConfigException {\n+        return LinuxPackage.create(pkg, new LinuxPackageMixin.Stub(\n+                pkgLayout,\n+                Optional.ofNullable(menuGroupName).orElseGet(DEFAULTS::menuGroupName),\n+                Optional.ofNullable(category),\n+                Optional.ofNullable(additionalDependencies),\n+                Optional.ofNullable(release),\n+                pkg.asStandardPackageType().map(LinuxPackageArch::getValue).orElseThrow()));\n+    }\n+\n+    LinuxPackageBuilder literalName(String v) {\n+        literalName = v;\n+        return this;\n+    }\n+\n+    LinuxPackageBuilder menuGroupName(String v) {\n+        menuGroupName = v;\n+        return this;\n+    }\n+\n+    LinuxPackageBuilder category(String v) {\n+        category = v;\n+        return this;\n+    }\n+\n+    Optional<String> category() {\n+        return Optional.ofNullable(category);\n+    }\n+\n+    LinuxPackageBuilder additionalDependencies(String v) {\n+        additionalDependencies = v;\n+        return this;\n+    }\n+\n+    LinuxPackageBuilder release(String v) {\n+        release = v;\n+        return this;\n+    }\n+\n+    Optional<String> release() {\n+        return Optional.ofNullable(release);\n+    }\n+\n+    private static LinuxApplicationLayout usrTreePackageLayout(Path prefix, String packageName) {\n+        final var lib = prefix.resolve(Path.of(\"lib\", packageName));\n+        return LinuxApplicationLayout.create(\n+                ApplicationLayout.build()\n+                        .launchersDirectory(prefix.resolve(\"bin\"))\n+                        .appDirectory(lib.resolve(\"app\"))\n+                        .runtimeDirectory(lib.resolve(\"runtime\"))\n+                        .desktopIntegrationDirectory(lib)\n+                        .appModsDirectory(lib.resolve(\"app\/mods\"))\n+                        .contentDirectory(lib)\n+                        .create(),\n+                lib.resolve(\"lib\/libapplauncher.so\"));\n+    }\n+\n+    private static void validatePackageName(String packageName,\n+            StandardPackageType pkgType) throws ConfigException {\n+        switch (pkgType) {\n+            case LINUX_DEB -> {\n+                \/\/\n+                \/\/ Debian rules for package naming are used here\n+                \/\/ https:\/\/www.debian.org\/doc\/debian-policy\/ch-controlfields.html#s-f-Source\n+                \/\/\n+                \/\/ Package names must consist only of lower case letters (a-z),\n+                \/\/ digits (0-9), plus (+) and minus (-) signs, and periods (.).\n+                \/\/ They must be at least two characters long and\n+                \/\/ must start with an alphanumeric character.\n+                \/\/\n+                var regexp = Pattern.compile(\"^[a-z][a-z\\\\d\\\\+\\\\-\\\\.]+\");\n+                if (!regexp.matcher(packageName).matches()) {\n+                    throw buildConfigException()\n+                            .message(\"error.deb-invalid-value-for-package-name\", packageName)\n+                            .advice(\"error.deb-invalid-value-for-package-name.advice\")\n+                            .create();\n+                }\n+            }\n+            case LINUX_RPM -> {\n+                \/\/\n+                \/\/ Fedora rules for package naming are used here\n+                \/\/ https:\/\/fedoraproject.org\/wiki\/Packaging:NamingGuidelines?rd=Packaging\/NamingGuidelines\n+                \/\/\n+                \/\/ all Fedora packages must be named using only the following ASCII\n+                \/\/ characters. These characters are displayed here:\n+                \/\/\n+                \/\/ abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._+\n+                \/\/\n+                var regexp = Pattern.compile(\"[a-z\\\\d\\\\+\\\\-\\\\.\\\\_]+\", Pattern.CASE_INSENSITIVE);\n+                if (!regexp.matcher(packageName).matches()) {\n+                    throw buildConfigException()\n+                            .message(\"error.rpm-invalid-value-for-package-name\", packageName)\n+                            .advice(\"error.rpm-invalid-value-for-package-name.advice\")\n+                            .create();\n+                }\n+            }\n+            default -> {\n+            }\n+        }\n+    }\n+\n+    private record Defaults(String menuGroupName) {\n+    }\n+\n+    private String literalName;\n+    private String menuGroupName;\n+    private String category;\n+    private String additionalDependencies;\n+    private String release;\n+\n+    private final PackageBuilder pkgBuilder;\n+\n+    private static final Defaults DEFAULTS = new Defaults(I18N.getString(\n+            \"param.menu-group.default\"));\n+\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxPackageBuilder.java","additions":185,"deletions":0,"binary":false,"changes":185,"status":"added"},{"patch":"@@ -28,1 +28,0 @@\n-import java.nio.file.InvalidPathException;\n@@ -30,1 +29,0 @@\n-import java.nio.file.Files;\n@@ -37,2 +35,0 @@\n-import java.util.Set;\n-import java.util.function.Function;\n@@ -40,1 +36,0 @@\n-import java.util.function.Supplier;\n@@ -42,6 +37,4 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n-\n+import jdk.jpackage.internal.PackagingPipeline.PackageBuildEnv;\n+import jdk.jpackage.internal.PackagingPipeline.PackageTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.PrimaryTaskID;\n+import jdk.jpackage.internal.model.AppImageLayout;\n@@ -49,0 +42,3 @@\n+import jdk.jpackage.internal.model.LinuxDebPackage;\n+import jdk.jpackage.internal.model.LinuxPackage;\n+import jdk.jpackage.internal.model.Package;\n@@ -50,1 +46,0 @@\n-import jdk.jpackage.internal.util.FileUtils;\n@@ -54,3 +49,2 @@\n-    LinuxPackageBundler(BundlerParamInfo<String> packageName) {\n-        this.packageName = packageName;\n-        appImageBundler = new LinuxAppBundler().setDependentTask(true);\n+    LinuxPackageBundler(BundlerParamInfo<? extends LinuxPackage> pkgParam) {\n+        this.pkgParam = pkgParam;\n@@ -66,12 +60,3 @@\n-        \/\/ run basic validation to ensure requirements are met\n-        \/\/ we are not interested in return code, only possible exception\n-        appImageBundler.validate(params);\n-\n-        validateInstallDir(LINUX_INSTALL_DIR.fetchFrom(params));\n-\n-        FileAssociation.verify(FileAssociation.fetchFrom(params));\n-\n-        \/\/ If package name has some restrictions, the string converter will\n-        \/\/ throw an exception if invalid\n-        packageName.getStringConverter().apply(packageName.fetchFrom(params),\n-            params);\n+        \/\/ Order is important!\n+        LinuxPackage pkg = pkgParam.fetchFrom(params);\n+        var env = BuildEnvFromParams.BUILD_ENV.fetchFrom(params);\n@@ -79,1 +64,1 @@\n-        for (var validator: getToolValidators(params)) {\n+        for (var validator: getToolValidators()) {\n@@ -107,1 +92,1 @@\n-        doValidate(params);\n+        doValidate(env, pkg);\n@@ -122,32 +107,3 @@\n-        PlatformPackage thePackage = createMetaPackage(params);\n-\n-        Function<Path, ApplicationLayout> initAppImageLayout = imageRoot -> {\n-            ApplicationLayout layout = appImageLayout(params);\n-            layout.pathGroup().setPath(new Object(),\n-                    AppImageFile.getPathInAppImage(Path.of(\"\")));\n-            return layout.resolveAt(imageRoot);\n-        };\n-\n-        try {\n-            Path appImage = StandardBundlerParam.getPredefinedAppImage(params);\n-\n-            \/\/ we either have an application image or need to build one\n-            if (appImage != null) {\n-                initAppImageLayout.apply(appImage).copy(\n-                        thePackage.sourceApplicationLayout());\n-            } else {\n-                final Path srcAppImageRoot = thePackage.sourceRoot().resolve(\"src\");\n-                appImage = appImageBundler.execute(params, srcAppImageRoot);\n-                ApplicationLayout srcAppLayout = initAppImageLayout.apply(\n-                        appImage);\n-                if (appImage.equals(PREDEFINED_RUNTIME_IMAGE.fetchFrom(params))) {\n-                    \/\/ Application image points to run-time image.\n-                    \/\/ Copy it.\n-                    srcAppLayout.copy(thePackage.sourceApplicationLayout());\n-                } else {\n-                    \/\/ Application image is a newly created directory tree.\n-                    \/\/ Move it.\n-                    srcAppLayout.move(thePackage.sourceApplicationLayout());\n-                    FileUtils.deleteRecursive(srcAppImageRoot);\n-                }\n-            }\n+        \/\/ Order is important!\n+        final LinuxPackage pkg = pkgParam.fetchFrom(params);\n+        final var env = BuildEnvFromParams.BUILD_ENV.fetchFrom(params);\n@@ -155,3 +111,5 @@\n-            for (var ca : customActions) {\n-                ca.init(thePackage, params);\n-            }\n+        final var pipelineBuilder = LinuxPackagingPipeline.build()\n+                .excludeDirFromCopying(outputParentDir)\n+                .task(PackageTaskID.CREATE_PACKAGE_FILE)\n+                        .packageAction(this::buildPackage)\n+                        .add();\n@@ -159,1 +117,3 @@\n-            Map<String, String> data = createDefaultReplacementData(params);\n+        final var createConfigFilesTaskBuilder = pipelineBuilder\n+                .task(PackageTaskID.CREATE_CONFIG_FILES)\n+                .packageAction(this::buildConfigFiles);\n@@ -161,4 +121,7 @@\n-            for (var ca : customActions) {\n-                ShellCustomAction.mergeReplacementData(data, ca.instance.\n-                        create());\n-            }\n+        if (pkg instanceof LinuxDebPackage) {\n+            \/\/ Build deb config files after app image contents are ready because\n+            \/\/ it calculates the size of the image and saves the value in one of the config files.\n+            createConfigFilesTaskBuilder.addDependencies(PrimaryTaskID.BUILD_APPLICATION_IMAGE, PrimaryTaskID.COPY_APP_IMAGE);\n+        }\n+\n+        createConfigFilesTaskBuilder.add();\n@@ -166,1 +129,1 @@\n-            data.putAll(createReplacementData(params));\n+        pipelineBuilder.create().execute(env, pkg, outputParentDir);\n@@ -168,2 +131,7 @@\n-            Path packageBundle = buildPackageBundle(Collections.unmodifiableMap(\n-                    data), params, outputParentDir);\n+        return outputParentDir.resolve(pkg.packageFileNameWithSuffix()).toAbsolutePath();\n+    }\n+\n+    private void buildConfigFiles(PackageBuildEnv<LinuxPackage, AppImageLayout> env) throws PackagerException, IOException {\n+        for (var ca : customActions) {\n+            ca.init(env.env(), env.pkg());\n+        }\n@@ -171,6 +139,1 @@\n-            verifyOutputBundle(params, packageBundle).stream()\n-                    .filter(Objects::nonNull)\n-                    .forEachOrdered(ex -> {\n-                Log.verbose(ex.getLocalizedMessage());\n-                Log.verbose(ex.getAdvice());\n-            });\n+        Map<String, String> data = createDefaultReplacementData(env.env(), env.pkg());\n@@ -178,4 +141,2 @@\n-            return packageBundle;\n-        } catch (IOException ex) {\n-            Log.verbose(ex);\n-            throw new PackagerException(ex);\n+        for (var ca : customActions) {\n+            ShellCustomAction.mergeReplacementData(data, ca.instance.create());\n@@ -183,0 +144,4 @@\n+\n+        data.putAll(createReplacementData(env.env(), env.pkg()));\n+\n+        createConfigFiles(Collections.unmodifiableMap(data), env.env(), env.pkg());\n@@ -185,2 +150,10 @@\n-    private List<String> getListOfNeededPackages(\n-            Map<String, ? super Object> params) throws IOException {\n+    private void buildPackage(PackageBuildEnv<LinuxPackage, AppImageLayout> env) throws PackagerException, IOException {\n+        Path packageBundle = buildPackageBundle(env.env(), env.pkg(), env.outputDir());\n+\n+        verifyOutputBundle(env.env(), env.pkg(), packageBundle).stream()\n+                .filter(Objects::nonNull)\n+                .forEachOrdered(ex -> {\n+            Log.verbose(ex.getLocalizedMessage());\n+            Log.verbose(ex.getAdvice());\n+        });\n+    }\n@@ -188,1 +161,1 @@\n-        PlatformPackage thePackage = createMetaPackage(params);\n+    private List<String> getListOfNeededPackages(BuildEnv env) throws IOException {\n@@ -196,1 +169,1 @@\n-        if (withFindNeededPackages && Files.exists(thePackage.sourceRoot())) {\n+        if (withFindNeededPackages) {\n@@ -198,1 +171,1 @@\n-            initLibProvidersLookup(params, lookup);\n+            initLibProvidersLookup(lookup);\n@@ -200,1 +173,1 @@\n-            neededLibPackages = lookup.execute(thePackage.sourceRoot());\n+            neededLibPackages = lookup.execute(env.appImageDir());\n@@ -203,3 +176,1 @@\n-            if (!Files.exists(thePackage.sourceRoot())) {\n-                Log.info(I18N.getString(\"warning.foreign-app-image\"));\n-            }\n+            Log.info(I18N.getString(\"warning.foreign-app-image\"));\n@@ -218,2 +189,1 @@\n-    private Map<String, String> createDefaultReplacementData(\n-            Map<String, ? super Object> params) throws IOException {\n+    private Map<String, String> createDefaultReplacementData(BuildEnv env, LinuxPackage pkg) throws IOException {\n@@ -222,4 +192,4 @@\n-        data.put(\"APPLICATION_PACKAGE\", createMetaPackage(params).name());\n-        data.put(\"APPLICATION_VENDOR\", VENDOR.fetchFrom(params));\n-        data.put(\"APPLICATION_VERSION\", VERSION.fetchFrom(params));\n-        data.put(\"APPLICATION_DESCRIPTION\", DESCRIPTION.fetchFrom(params));\n+        data.put(\"APPLICATION_PACKAGE\", pkg.packageName());\n+        data.put(\"APPLICATION_VENDOR\", pkg.app().vendor());\n+        data.put(\"APPLICATION_VERSION\", pkg.version());\n+        data.put(\"APPLICATION_DESCRIPTION\", pkg.description());\n@@ -227,2 +197,2 @@\n-        String defaultDeps = String.join(\", \", getListOfNeededPackages(params));\n-        String customDeps = LINUX_PACKAGE_DEPENDENCIES.fetchFrom(params).strip();\n+        String defaultDeps = String.join(\", \", getListOfNeededPackages(env));\n+        String customDeps = pkg.additionalDependencies().orElse(\"\");\n@@ -239,1 +209,1 @@\n-            Map<String, ? super Object> params, Path packageBundle);\n+            BuildEnv env, LinuxPackage pkg, Path packageBundle);\n@@ -241,3 +211,1 @@\n-    protected abstract void initLibProvidersLookup(\n-            Map<String, ? super Object> params,\n-            LibProvidersLookup libProvidersLookup);\n+    protected abstract void initLibProvidersLookup(LibProvidersLookup libProvidersLookup);\n@@ -245,2 +213,1 @@\n-    protected abstract List<ToolValidator> getToolValidators(\n-            Map<String, ? super Object> params);\n+    protected abstract List<ToolValidator> getToolValidators();\n@@ -248,1 +215,1 @@\n-    protected abstract void doValidate(Map<String, ? super Object> params)\n+    protected abstract void doValidate(BuildEnv env, LinuxPackage pkg)\n@@ -252,1 +219,1 @@\n-            Map<String, ? super Object> params) throws IOException;\n+            BuildEnv env, LinuxPackage pkg) throws IOException;\n@@ -254,1 +221,1 @@\n-    protected abstract Path buildPackageBundle(\n+    protected abstract void createConfigFiles(\n@@ -256,61 +223,1 @@\n-            Map<String, ? super Object> params, Path outputParentDir) throws\n-            PackagerException, IOException;\n-\n-    protected final PlatformPackage createMetaPackage(\n-            Map<String, ? super Object> params) {\n-\n-        Supplier<ApplicationLayout> packageLayout = () -> {\n-            String installDir = LINUX_INSTALL_DIR.fetchFrom(params);\n-            if (isInstallDirInUsrTree(installDir)) {\n-                return ApplicationLayout.linuxUsrTreePackageImage(\n-                        Path.of(\"\/\").relativize(Path.of(installDir)),\n-                        packageName.fetchFrom(params));\n-            }\n-            return appImageLayout(params);\n-        };\n-\n-        return new PlatformPackage() {\n-            @Override\n-            public String name() {\n-                return packageName.fetchFrom(params);\n-            }\n-\n-            @Override\n-            public Path sourceRoot() {\n-                return IMAGES_ROOT.fetchFrom(params).toAbsolutePath();\n-            }\n-\n-            @Override\n-            public ApplicationLayout sourceApplicationLayout() {\n-                return packageLayout.get().resolveAt(\n-                        applicationInstallDir(sourceRoot()));\n-            }\n-\n-            @Override\n-            public ApplicationLayout installedApplicationLayout() {\n-                return packageLayout.get().resolveAt(\n-                        applicationInstallDir(Path.of(\"\/\")));\n-            }\n-\n-            private Path applicationInstallDir(Path root) {\n-                String installRoot = LINUX_INSTALL_DIR.fetchFrom(params);\n-                if (isInstallDirInUsrTree(installRoot)) {\n-                    return root;\n-                }\n-\n-                Path installDir = Path.of(installRoot, name());\n-                if (installDir.isAbsolute()) {\n-                    installDir = Path.of(\".\" + installDir.toString()).normalize();\n-                }\n-                return root.resolve(installDir);\n-            }\n-        };\n-    }\n-\n-    private ApplicationLayout appImageLayout(\n-            Map<String, ? super Object> params) {\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-            return ApplicationLayout.javaRuntime();\n-        }\n-        return ApplicationLayout.linuxAppImage();\n-    }\n+            BuildEnv env, LinuxPackage pkg) throws IOException;\n@@ -318,29 +225,3 @@\n-    private static void validateInstallDir(String installDir) throws\n-            ConfigException {\n-\n-        if (installDir.isEmpty()) {\n-            throw new ConfigException(MessageFormat.format(I18N.getString(\n-                    \"error.invalid-install-dir\"), \"\/\"), null);\n-        }\n-\n-        boolean valid = false;\n-        try {\n-            final Path installDirPath = Path.of(installDir);\n-            valid = installDirPath.isAbsolute();\n-            if (valid && !installDirPath.normalize().toString().equals(\n-                    installDirPath.toString())) {\n-                \/\/ Don't allow '\/opt\/foo\/..' or \/opt\/.\n-                valid = false;\n-            }\n-        } catch (InvalidPathException ex) {\n-        }\n-\n-        if (!valid) {\n-            throw new ConfigException(MessageFormat.format(I18N.getString(\n-                    \"error.invalid-install-dir\"), installDir), null);\n-        }\n-    }\n-\n-    protected static boolean isInstallDirInUsrTree(String installDir) {\n-        return Set.of(\"\/usr\/local\", \"\/usr\").contains(installDir);\n-    }\n+    protected abstract Path buildPackageBundle(\n+            BuildEnv env, LinuxPackage pkg, Path outputParentDir) throws\n+            PackagerException, IOException;\n@@ -348,2 +229,1 @@\n-    private final BundlerParamInfo<String> packageName;\n-    private final Bundler appImageBundler;\n+    private final BundlerParamInfo<? extends LinuxPackage> pkgParam;\n@@ -359,3 +239,2 @@\n-        void init(PlatformPackage thePackage, Map<String, ? super Object> params)\n-                throws IOException {\n-            instance = factory.create(thePackage, params);\n+        void init(BuildEnv env, Package pkg) throws IOException {\n+            instance = factory.create(env, pkg);\n@@ -368,25 +247,0 @@\n-\n-    private static final BundlerParamInfo<String> LINUX_PACKAGE_DEPENDENCIES =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.LINUX_PACKAGE_DEPENDENCIES.getId(),\n-            String.class,\n-            params -> \"\",\n-            (s, p) -> s\n-    );\n-\n-    static final BundlerParamInfo<String> LINUX_INSTALL_DIR =\n-            new StandardBundlerParam<>(\n-            \"linux-install-dir\",\n-            String.class,\n-            params -> {\n-                 String dir = INSTALL_DIR.fetchFrom(params);\n-                 if (dir != null) {\n-                     if (dir.endsWith(\"\/\")) {\n-                         dir = dir.substring(0, dir.length()-1);\n-                     }\n-                     return dir;\n-                 }\n-                 return \"\/opt\";\n-             },\n-            (s, p) -> s\n-    );\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxPackageBundler.java","additions":82,"deletions":228,"binary":false,"changes":310,"status":"modified"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.ApplicationImageUtils.createLauncherIconResource;\n+import jdk.jpackage.internal.PackagingPipeline.AppImageBuildEnv;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import jdk.jpackage.internal.PackagingPipeline.BuildApplicationTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.PrimaryTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.TaskID;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n+\n+final class LinuxPackagingPipeline {\n+\n+    enum LinuxAppImageTaskID implements TaskID {\n+        LAUNCHER_LIB,\n+        LAUNCHER_ICONS\n+    }\n+\n+    static PackagingPipeline.Builder build() {\n+        return PackagingPipeline.buildStandard()\n+                .task(LinuxAppImageTaskID.LAUNCHER_LIB)\n+                        .addDependent(PrimaryTaskID.BUILD_APPLICATION_IMAGE)\n+                        .applicationAction(LinuxPackagingPipeline::writeLauncherLib).add()\n+                .task(LinuxAppImageTaskID.LAUNCHER_ICONS)\n+                        .addDependent(BuildApplicationTaskID.CONTENT)\n+                        .applicationAction(LinuxPackagingPipeline::writeLauncherIcons).add();\n+    }\n+\n+    private static void writeLauncherLib(\n+            AppImageBuildEnv<Application, LinuxApplicationLayout> env) throws IOException {\n+\n+        final var launcherLib = env.resolvedLayout().libAppLauncher();\n+        try (var in = ResourceLocator.class.getResourceAsStream(\"libjpackageapplauncheraux.so\")) {\n+            Files.createDirectories(launcherLib.getParent());\n+            Files.copy(in, launcherLib);\n+        }\n+    }\n+\n+    private static void writeLauncherIcons(\n+            AppImageBuildEnv<Application, ApplicationLayout> env) throws IOException {\n+\n+        for (var launcher : env.app().launchers()) {\n+            createLauncherIconResource(env.app(), launcher, env.env()::createResource).ifPresent(iconResource -> {\n+                String iconFileName = launcher.executableName() + \".png\";\n+                Path iconTarget = env.resolvedLayout().desktopIntegrationDirectory().resolve(iconFileName);\n+                try {\n+                    iconResource.saveToFile(iconTarget);\n+                } catch (IOException ex) {\n+                    throw new UncheckedIOException(ex);\n+                }\n+            });\n+        }\n+    }\n+\n+    static final LinuxApplicationLayout APPLICATION_LAYOUT = LinuxApplicationLayout.create(\n+            ApplicationLayoutUtils.PLATFORM_APPLICATION_LAYOUT, Path.of(\"lib\/libapplauncher.so\"));\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxPackagingPipeline.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -30,1 +30,0 @@\n-import java.text.MessageFormat;\n@@ -36,1 +35,0 @@\n-import java.util.Optional;\n@@ -43,0 +41,3 @@\n+import jdk.jpackage.internal.model.LinuxPackage;\n+import jdk.jpackage.internal.model.LinuxRpmPackage;\n+import jdk.jpackage.internal.model.Package;\n@@ -45,8 +46,0 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.INSTALLER_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.jpackage.internal.StandardBundlerParam.RELEASE;\n-import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.StandardBundlerParam.ABOUT_URL;\n@@ -67,56 +60,0 @@\n-    \/\/ Fedora rules for package naming are used here\n-    \/\/ https:\/\/fedoraproject.org\/wiki\/Packaging:NamingGuidelines?rd=Packaging\/NamingGuidelines\n-    \/\/\n-    \/\/ all Fedora packages must be named using only the following ASCII\n-    \/\/ characters. These characters are displayed here:\n-    \/\/\n-    \/\/ abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._+\n-    \/\/\n-    private static final Pattern RPM_PACKAGE_NAME_PATTERN =\n-            Pattern.compile(\"[a-z\\\\d\\\\+\\\\-\\\\.\\\\_]+\", Pattern.CASE_INSENSITIVE);\n-\n-    public static final BundlerParamInfo<String> PACKAGE_NAME =\n-            new StandardBundlerParam<> (\n-            Arguments.CLIOptions.LINUX_BUNDLE_NAME.getId(),\n-            String.class,\n-            params -> {\n-                String nm = INSTALLER_NAME.fetchFrom(params);\n-                if (nm == null) return null;\n-\n-                \/\/ make sure to lower case and spaces become dashes\n-                nm = nm.toLowerCase().replaceAll(\"[ ]\", \"-\");\n-\n-                return nm;\n-            },\n-            (s, p) -> {\n-                if (!RPM_PACKAGE_NAME_PATTERN.matcher(s).matches()) {\n-                    try {\n-                        throw new ConfigException(\n-                            MessageFormat.format(I18N.getString(\n-                            \"error.rpm-invalid-value-for-package-name\"), s),\n-                            I18N.getString(\n-                            \"error.rpm-invalid-value-for-package-name.advice\"));\n-                    } catch (ConfigException ex) {\n-                        throw new IllegalArgumentException(ex);\n-                    }\n-                }\n-\n-                return s;\n-            }\n-        );\n-\n-    public static final BundlerParamInfo<String> LICENSE_TYPE =\n-        new StandardBundlerParam<>(\n-                Arguments.CLIOptions.LINUX_RPM_LICENSE_TYPE.getId(),\n-                String.class,\n-                params -> I18N.getString(\"param.license-type.default\"),\n-                (s, p) -> s\n-        );\n-\n-    public static final BundlerParamInfo<String> GROUP =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.LINUX_CATEGORY.getId(),\n-            String.class,\n-            params -> null,\n-            (s, p) -> s);\n-\n@@ -131,1 +68,1 @@\n-        super(PACKAGE_NAME);\n+        super(LinuxFromParams.RPM_PACKAGE);\n@@ -135,2 +72,1 @@\n-    public void doValidate(Map<String, ? super Object> params)\n-            throws ConfigException {\n+    protected void doValidate(BuildEnv env, LinuxPackage pkg) throws ConfigException {\n@@ -154,2 +90,1 @@\n-    protected List<ToolValidator> getToolValidators(\n-            Map<String, ? super Object> params) {\n+    protected List<ToolValidator> getToolValidators() {\n@@ -159,7 +94,3 @@\n-    @Override\n-    protected Path buildPackageBundle(\n-            Map<String, String> replacementData,\n-            Map<String, ? super Object> params, Path outputParentDir) throws\n-            PackagerException, IOException {\n-\n-        Path specFile = specFile(params);\n+    protected void createConfigFiles(Map<String, String> replacementData,\n+            BuildEnv env, LinuxPackage pkg) throws IOException {\n+        Path specFile = specFile(env, pkg);\n@@ -168,1 +99,1 @@\n-        createResource(DEFAULT_SPEC_TEMPLATE, params)\n+        env.createResource(DEFAULT_SPEC_TEMPLATE)\n@@ -172,2 +103,0 @@\n-\n-        return buildRPM(params, outputParentDir);\n@@ -177,5 +106,4 @@\n-    protected Map<String, String> createReplacementData(\n-            Map<String, ? super Object> params) throws IOException {\n-        Map<String, String> data = new HashMap<>();\n-\n-        final Path prefix = Path.of(LINUX_INSTALL_DIR.fetchFrom(params));\n+    protected Path buildPackageBundle(BuildEnv env, LinuxPackage pkg,\n+            Path outputParentDir) throws PackagerException, IOException {\n+        return buildRPM(env, pkg, outputParentDir);\n+    }\n@@ -183,3 +111,4 @@\n-        Path appDirectory = prefix;\n-        if (!isInstallDirInUsrTree(prefix.toString())) {\n-            appDirectory = appDirectory.resolve(PACKAGE_NAME.fetchFrom(params));\n+    private static Path installPrefix(LinuxPackage pkg) {\n+        Path path = pkg.relativeInstallDir();\n+        if (!pkg.isInstallDirInUsrTree()) {\n+            path = path.getParent();\n@@ -187,0 +116,6 @@\n+        return Path.of(\"\/\").resolve(path);\n+    }\n+\n+    @Override\n+    protected Map<String, String> createReplacementData(BuildEnv env, LinuxPackage pkg) throws IOException {\n+        Map<String, String> data = new HashMap<>();\n@@ -188,5 +123,5 @@\n-        data.put(\"APPLICATION_RELEASE\", RELEASE.fetchFrom(params));\n-        data.put(\"APPLICATION_PREFIX\", prefix.toString());\n-        data.put(\"APPLICATION_DIRECTORY\", appDirectory.toString());\n-        data.put(\"APPLICATION_SUMMARY\", APP_NAME.fetchFrom(params));\n-        data.put(\"APPLICATION_LICENSE_TYPE\", LICENSE_TYPE.fetchFrom(params));\n+        data.put(\"APPLICATION_RELEASE\", pkg.release().orElseThrow());\n+        data.put(\"APPLICATION_PREFIX\", installPrefix(pkg).toString());\n+        data.put(\"APPLICATION_DIRECTORY\", Path.of(\"\/\").resolve(pkg.relativeInstallDir()).toString());\n+        data.put(\"APPLICATION_SUMMARY\", pkg.app().name());\n+        data.put(\"APPLICATION_LICENSE_TYPE\", ((LinuxRpmPackage)pkg).licenseType());\n@@ -194,4 +129,3 @@\n-        String licenseFile = LICENSE_FILE.fetchFrom(params);\n-        if (licenseFile != null) {\n-            licenseFile = Path.of(licenseFile).toAbsolutePath().normalize().toString();\n-        }\n+        String licenseFile = pkg.licenseFile().map(v -> {\n+            return v.toAbsolutePath().normalize().toString();\n+        }).orElse(null);\n@@ -199,1 +133,1 @@\n-        data.put(\"APPLICATION_GROUP\", GROUP.fetchFrom(params));\n+        data.put(\"APPLICATION_GROUP\", pkg.category().orElse(\"\"));\n@@ -201,2 +135,1 @@\n-        data.put(\"APPLICATION_URL\", Optional.ofNullable(ABOUT_URL.fetchFrom(\n-                params)).orElse(\"\"));\n+        data.put(\"APPLICATION_URL\", pkg.aboutURL().orElse(\"\"));\n@@ -208,3 +141,1 @@\n-    protected void initLibProvidersLookup(\n-            Map<String, ? super Object> params,\n-            LibProvidersLookup libProvidersLookup) {\n+    protected void initLibProvidersLookup(LibProvidersLookup libProvidersLookup) {\n@@ -220,2 +151,2 @@\n-    protected List<ConfigException> verifyOutputBundle(\n-            Map<String, ? super Object> params, Path packageBundle) {\n+    protected List<ConfigException> verifyOutputBundle(BuildEnv env, LinuxPackage pkg,\n+            Path packageBundle) {\n@@ -224,1 +155,1 @@\n-        String specFileName = specFile(params).getFileName().toString();\n+        String specFileName = specFile(env, pkg).getFileName().toString();\n@@ -228,1 +159,1 @@\n-                    new PackageProperty(\"Name\", PACKAGE_NAME.fetchFrom(params),\n+                    new PackageProperty(\"Name\", pkg.packageName(),\n@@ -230,1 +161,1 @@\n-                    new PackageProperty(\"Version\", VERSION.fetchFrom(params),\n+                    new PackageProperty(\"Version\", pkg.version(),\n@@ -232,1 +163,1 @@\n-                    new PackageProperty(\"Release\", RELEASE.fetchFrom(params),\n+                    new PackageProperty(\"Release\", pkg.release().orElseThrow(),\n@@ -234,1 +165,1 @@\n-                    new PackageProperty(\"Arch\", rpmArch(), null, specFileName));\n+                    new PackageProperty(\"Arch\", pkg.arch(), null, specFileName));\n@@ -252,25 +183,2 @@\n-    \/**\n-     * Various ways to get rpm arch. Needed to address JDK-8233143. rpmbuild is\n-     * mandatory for rpm packaging, try it first. rpm is optional and may not be\n-     * available, use as the last resort.\n-     *\/\n-    private enum RpmArchReader {\n-        Rpmbuild(TOOL_RPMBUILD, \"--eval=%{_target_cpu}\"),\n-        Rpm(TOOL_RPM, \"--eval=%{_target_cpu}\");\n-\n-        RpmArchReader(String... cmdline) {\n-            this.cmdline = cmdline;\n-        }\n-\n-        String getRpmArch() throws IOException {\n-            Executor exec = Executor.of(cmdline).saveOutput(true);\n-            if (this == values()[values().length - 1]) {\n-                exec.executeExpectSuccess();\n-            } else if (exec.execute() != 0) {\n-                return null;\n-            }\n-\n-            return exec.getOutput().get(0);\n-        }\n-\n-        private final String[] cmdline;\n+    private Path specFile(BuildEnv env, Package pkg) {\n+        return env.buildRoot().resolve(Path.of(\"SPECS\", pkg.packageName() + \".spec\"));\n@@ -279,11 +187,1 @@\n-    private String rpmArch() throws IOException {\n-        if (rpmArch == null) {\n-            for (var rpmArchReader : RpmArchReader.values()) {\n-                rpmArch = rpmArchReader.getRpmArch();\n-                if (rpmArch != null) {\n-                    break;\n-                }\n-            }\n-        }\n-        return rpmArch;\n-    }\n+    private Path buildRPM(BuildEnv env, Package pkg, Path outdir) throws IOException {\n@@ -291,9 +189,1 @@\n-    private Path specFile(Map<String, ? super Object> params) {\n-        return TEMP_ROOT.fetchFrom(params).resolve(Path.of(\"SPECS\",\n-                PACKAGE_NAME.fetchFrom(params) + \".spec\"));\n-    }\n-\n-    private Path buildRPM(Map<String, ? super Object> params,\n-            Path outdir) throws IOException {\n-\n-        PlatformPackage thePackage = createMetaPackage(params);\n+        Path rpmFile = outdir.toAbsolutePath().resolve(pkg.packageFileNameWithSuffix());\n@@ -301,14 +191,1 @@\n-        new ScriptRunner()\n-                .setDirectory(thePackage.sourceRoot())\n-                .setResourceCategoryId(\"resource.post-app-image-script\")\n-                .setScriptNameSuffix(\"post-image\")\n-                .setEnvironmentVariable(\"JpAppImageDir\", thePackage.sourceRoot().toAbsolutePath().toString())\n-                .run(params);\n-\n-        Path rpmFile = outdir.toAbsolutePath().resolve(String.format(\n-                \"%s-%s-%s.%s.rpm\", PACKAGE_NAME.fetchFrom(params),\n-                VERSION.fetchFrom(params), RELEASE.fetchFrom(params), rpmArch()));\n-\n-        Log.verbose(MessageFormat.format(I18N.getString(\n-                \"message.outputting-bundle-location\"),\n-                rpmFile.getParent()));\n+        Log.verbose(I18N.format(\"message.outputting-bundle-location\", rpmFile.getParent()));\n@@ -317,3 +194,2 @@\n-        Executor.of(\n-                TOOL_RPMBUILD,\n-                \"-bb\", specFile(params).toAbsolutePath().toString(),\n+        Executor.of(TOOL_RPMBUILD,\n+                \"-bb\", specFile(env, pkg).toAbsolutePath().toString(),\n@@ -321,1 +197,1 @@\n-                        thePackage.sourceRoot()),\n+                        env.appImageDir().toAbsolutePath()),\n@@ -326,1 +202,1 @@\n-                        TEMP_ROOT.fetchFrom(params).toAbsolutePath()),\n+                        env.buildRoot().toAbsolutePath()),\n@@ -330,3 +206,1 @@\n-        Log.verbose(MessageFormat.format(\n-                I18N.getString(\"message.output-bundle-location\"),\n-                rpmFile.getParent()));\n+        Log.verbose(I18N.format(\"message.output-bundle-location\", rpmFile.getParent()));\n@@ -356,2 +230,0 @@\n-\n-    private String rpmArch;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxRpmBundler.java","additions":52,"deletions":180,"binary":false,"changes":232,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.LinuxRpmPackage;\n+import jdk.jpackage.internal.model.LinuxRpmPackageMixin;\n+\n+final class LinuxRpmPackageBuilder {\n+\n+    LinuxRpmPackageBuilder(LinuxPackageBuilder pkgBuilder) {\n+        this.pkgBuilder = Objects.requireNonNull(pkgBuilder);\n+    }\n+\n+    LinuxRpmPackage create() throws ConfigException {\n+        if (pkgBuilder.release().isEmpty()) {\n+            pkgBuilder.release(\"1\");\n+        }\n+        var pkg = pkgBuilder.create();\n+        return LinuxRpmPackage.create(pkg, new LinuxRpmPackageMixin.Stub(\n+                Optional.ofNullable(licenseType).orElseGet(DEFAULTS::licenseType)));\n+    }\n+\n+    LinuxRpmPackageBuilder licenseType(String v) {\n+        licenseType = v;\n+        return this;\n+    }\n+\n+    private record Defaults(String licenseType) {\n+    }\n+\n+    private String licenseType;\n+\n+    private final LinuxPackageBuilder pkgBuilder;\n+\n+    private static final Defaults DEFAULTS = new Defaults(I18N.getString(\n+            \"param.license-type.default\"));\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxRpmPackageBuilder.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.model;\n+\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+\/**\n+ * Linux application.\n+ * <p>\n+ * Use {@link #create} method to create objects implementing this interface.\n+ *\/\n+public interface LinuxApplication extends Application {\n+\n+    \/**\n+     * Creates {@link LinuxApplication} instance from the given {@link Application}\n+     * instance.\n+     *\n+     * @param app the generic application\n+     * @return the proxy dispatching calls to the given {@link Application} instance\n+     *\/\n+    public static LinuxApplication create(Application app) {\n+        return CompositeProxy.create(LinuxApplication.class, app);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/model\/LinuxApplication.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.Optional;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+\/**\n+ * Linux DEB package.\n+ * <p>\n+ * Use {@link #create} method to create objects implementing this interface.\n+ *\n+ * @see <a href=\"https:\/\/www.debian.org\/doc\/debian-policy\/ch-binary.html#\">https:\/\/www.debian.org\/doc\/debian-policy\/ch-binary.html#<\/a>\n+ * @see <a href=\"https:\/\/linux.die.net\/man\/5\/deb-control\">https:\/\/linux.die.net\/man\/5\/deb-control<\/a>\n+ *\/\n+public interface LinuxDebPackage extends LinuxPackage, LinuxDebPackageMixin {\n+\n+    \/**\n+     * Gets the value of the maintainer property of this DEB package.\n+     *\n+     * @see <a href=\n+     *      \"https:\/\/www.debian.org\/doc\/debian-policy\/ch-controlfields.html#s-f-maintainer\">https:\/\/www.debian.org\/doc\/debian-policy\/ch-controlfields.html#s-f-maintainer<\/a>\n+     * @return the maintainer property of this DEB package\n+     *\/\n+    default String maintainer() {\n+        return String.format(\"%s <%s>\", app().vendor(), maintainerEmail());\n+    }\n+\n+    \/**\n+     * Gets the relative path to this DEB package's copyright file. Returns empty\n+     * {@link Optional} instance if this DEB package has no copyright file.\n+     *\n+     * @return the relative path to the copyright file of this DEB package\n+     *\/\n+    default Optional<Path> relativeCopyrightFilePath() {\n+        if (isInstallDirInUsrTree() || Path.of(\"\/\").resolve(relativeInstallDir()).startsWith(\"\/usr\/\")) {\n+            return Optional.of(Path.of(\"usr\/share\/doc\/\", packageName(), \"copyright\"));\n+        } else if (!isRuntimeInstaller()) {\n+            return Optional.of(relativeInstallDir().resolve(\"share\/doc\/copyright\"));\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    \/**\n+     * Constructs {@link LinuxDebPackage} instance from the given\n+     * {@link LinuxPackage} and {@link LinuxDebPackageMixin} instances.\n+     *\n+     * @param pkg the Linux package\n+     * @param mixin DEB-specific details supplementing the Linux package\n+     * @return the proxy dispatching calls to the given objects\n+     *\/\n+    public static LinuxDebPackage create(LinuxPackage pkg, LinuxDebPackageMixin mixin) {\n+        return CompositeProxy.create(LinuxDebPackage.class, pkg, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/model\/LinuxDebPackage.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+\/**\n+ * Details of Linux DEB package.\n+ *\/\n+public interface LinuxDebPackageMixin {\n+\n+    \/**\n+     * Gets the email of the maintainer of this DEB package.\n+     *\n+     * @return the email of the maintainer of this DEB package\n+     *\/\n+    String maintainerEmail();\n+\n+    \/**\n+     * Default implementation of {@link LinuxDebPackageMixin} interface.\n+     *\/\n+    record Stub(String maintainerEmail) implements LinuxDebPackageMixin {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/model\/LinuxDebPackageMixin.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.util.Map;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+\/**\n+ * Linux application launcher.\n+ * <p>\n+ * Use {@link #create} method to create objects implementing this interface.\n+ *\/\n+public interface LinuxLauncher extends Launcher, LinuxLauncherMixin {\n+\n+    @Override\n+    default Map<String, String> extraAppImageFileData() {\n+        return shortcut().map(v -> {\n+            return Map.of(\"shortcut\", Boolean.toString(v));\n+        }).orElseGet(Map::of);\n+    }\n+\n+    \/**\n+     * Constructs {@link LinuxLauncher} instance from the given\n+     * {@link Launcher} and {@link LinuxLauncherMixin} instances.\n+     *\n+     * @param launcher the generic application launcher\n+     * @param mixin Linux-specific details supplementing the generic application launcher\n+     * @return the proxy dispatching calls to the given objects\n+     *\/\n+    public static LinuxLauncher create(Launcher launcher, LinuxLauncherMixin mixin) {\n+        return CompositeProxy.create(LinuxLauncher.class, launcher, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/model\/LinuxLauncher.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.util.Optional;\n+\n+\/**\n+ * Details of Linux application launcher.\n+ *\/\n+public interface LinuxLauncherMixin {\n+\n+    \/**\n+     * Gets the start menu shortcut setting of this application launcher.\n+     * <p>\n+     * Returns <code>true<\/code> if this application launcher was requested to have\n+     * the start menu shortcut.\n+     * <p>\n+     * Returns <code>false<\/code> if this application launcher was requested not to\n+     * have the start menu shortcut.\n+     * <p>\n+     * Returns an empty {@link Optional} instance if there was no request about the\n+     * start menu shortcut for this application launcher.\n+     *\n+     * @return the start menu shortcut setting of this application launcher\n+     *\/\n+    Optional<Boolean> shortcut();\n+\n+    \/**\n+     * Default implementation of {@link LinuxLauncherMixin} interface.\n+     *\/\n+    record Stub(Optional<Boolean> shortcut) implements LinuxLauncherMixin {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/model\/LinuxLauncherMixin.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+\/**\n+ * Linux package.\n+ * <p>\n+ * Use {@link #create} method to create objects implementing this interface.\n+ *\/\n+public interface LinuxPackage extends Package, LinuxPackageMixin {\n+\n+    LinuxApplication app();\n+\n+    @Override\n+    AppImageLayout packageLayout();\n+\n+    @Override\n+    default String packageFileName() {\n+        String packageFileNameTemlate = asStandardPackageType().map(stdType -> {\n+            switch (stdType) {\n+                case LINUX_DEB -> {\n+                    return \"%s_%s_%s\";\n+                }\n+                case LINUX_RPM -> {\n+                    return \"%s-%s.%s\";\n+                }\n+                default -> {\n+                    throw new IllegalStateException();\n+                }\n+            }\n+        }).orElseThrow(UnsupportedOperationException::new);\n+\n+        return String.format(packageFileNameTemlate, packageName(), versionWithRelease(), arch());\n+    }\n+\n+    \/**\n+     * Gets the version with the release component of this Linux package.\n+     *\n+     * @return the version with the release component of this Linux package\n+     *\/\n+    default String versionWithRelease() {\n+        return String.format(\"%s%s\", version(), release().map(r -> \"-\" + r).orElse(\"\"));\n+    }\n+\n+    \/**\n+     * Returns <code>true<\/code> in this Linux package installs in \"\/usr\" tree.\n+     *\n+     * @return <code>true<\/code> in this Linux package installs in \"\/usr\" tree\n+     *\/\n+    default boolean isInstallDirInUsrTree() {\n+        return !relativeInstallDir().getFileName().equals(Path.of(packageName()));\n+    }\n+\n+    \/**\n+     * Constructs {@link LinuxPackage} instance from the given\n+     * {@link Package} and {@link LinuxPackageMixin} instances.\n+     *\n+     * @param pkg the generic package\n+     * @param mixin Linux-specific details supplementing the Linux package\n+     * @return the proxy dispatching calls to the given objects\n+     *\/\n+    public static LinuxPackage create(Package pkg, LinuxPackageMixin mixin) {\n+        return CompositeProxy.create(LinuxPackage.class, pkg, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/model\/LinuxPackage.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.util.Optional;\n+\n+\/**\n+ * Details of Linux package.\n+ *\/\n+public interface LinuxPackageMixin {\n+\n+    \/**\n+     * Overrides {@link Package#packageLayout()}.\n+     *\/\n+    AppImageLayout packageLayout();\n+\n+    \/**\n+     * Gets the name of the start menu group where to create shortcuts for\n+     * application launchers of this package.\n+     *\n+     * @return the name of the start menu group where to create shortcuts for\n+     *         application launchers of this package\n+     *\n+     * @see LinuxLauncherMixin#shortcut()\n+     *\/\n+    String menuGroupName();\n+\n+    \/**\n+     * Gets the category of this package.\n+     *\n+     * @return the category of this package\n+     *\/\n+    Optional<String> category();\n+\n+    \/**\n+     * Gets a string with the additional dependencies of this package. Returns an\n+     * empty {@link Optional} instance if this package has no additional\n+     * dependencies.\n+     *\n+     * @return a string with the additional dependencies of this package\n+     *\/\n+    Optional<String> additionalDependencies();\n+\n+    \/**\n+     * Gets the release of this package. Returns an empty {@link Optional} instance\n+     * if this package doesn't have a release.\n+     * <p>\n+     * For RPM packages, this is the value of a \"Release\" property in spec file. RPM\n+     * packages always have a release.\n+     * <p>\n+     * For DEB packages, this is an optional {@code debian_revision} component of a\n+     * package version. See <a href=\n+     * \"https:\/\/www.debian.org\/doc\/debian-policy\/ch-controlfields.html#s-f-version#\">https:\/\/www.debian.org\/doc\/debian-policy\/ch-controlfields.html#s-f-version#<\/a>.\n+     *\n+     * @return the release of this package\n+     *\/\n+    Optional<String> release();\n+\n+    \/**\n+     * Gets the platform architecture of this package.\n+     *\n+     * @return the platform architecture of this package\n+     *\/\n+    String arch();\n+\n+    \/**\n+     * Default implementation of {@link LinuxPackageMixin} interface.\n+     *\/\n+    record Stub(AppImageLayout packageLayout, String menuGroupName,\n+            Optional<String> category, Optional<String> additionalDependencies,\n+            Optional<String> release, String arch) implements LinuxPackageMixin {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/model\/LinuxPackageMixin.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+\/**\n+ * Linux RPM package.\n+ *\/\n+public interface LinuxRpmPackage extends LinuxPackage, LinuxRpmPackageMixin {\n+\n+    \/**\n+     * Constructs {@link LinuxRpmPackage} instance from the given\n+     * {@link LinuxPackage} and {@link LinuxRpmPackageMixin} instances.\n+     *\n+     * @param pkg the Linux package\n+     * @param mixin RPM-specific details supplementing the generic package\n+     * @return the proxy dispatching calls to the given objects\n+     *\/\n+    public static LinuxRpmPackage create(LinuxPackage pkg, LinuxRpmPackageMixin mixin) {\n+        return CompositeProxy.create(LinuxRpmPackage.class, pkg, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/model\/LinuxRpmPackage.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+\/**\n+ * Details of Linux RPM package.\n+ *\/\n+public interface LinuxRpmPackageMixin {\n+\n+    \/**\n+     * Gets type of the license of this RPM package.\n+     * @return type of the license of this RPM package\n+     *\/\n+    String licenseType();\n+\n+    \/**\n+     * Default implementation of {@link LinuxRpmPackageMixin} interface.\n+     *\/\n+    record Stub(String licenseType) implements LinuxRpmPackageMixin {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/model\/LinuxRpmPackageMixin.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -47,2 +47,0 @@\n-error.invalid-install-dir=Invalid installation directory \"{0}\"\n-\n@@ -55,0 +53,2 @@\n+error.rpm-arch-not-detected=\"Failed to detect RPM arch\"\n+\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/LinuxResources.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.util.XmlUtils.initDocumentBuilder;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import jdk.jpackage.internal.model.DottedVersion;\n+import jdk.jpackage.internal.util.PListReader;\n+import org.xml.sax.SAXException;\n+\n+\/**\n+ * Mandatory elements of Info.plist file of app image.\n+ *\/\n+record AppImageInfoPListFile(String bundleIdentifier, String bundleName, String copyright,\n+        DottedVersion shortVersion, DottedVersion bundleVersion, String category) {\n+\n+    static final class InvalidPlistFileException extends Exception {\n+        InvalidPlistFileException(Throwable cause) {\n+            super(cause);\n+        }\n+\n+        private static final long serialVersionUID = 1L;\n+    }\n+\n+    static AppImageInfoPListFile loadFromInfoPList(Path infoPListFile)\n+            throws IOException, InvalidPlistFileException, SAXException {\n+\n+        final var plistReader = new PListReader(initDocumentBuilder().parse(Files.newInputStream(infoPListFile)));\n+\n+        try {\n+            return new AppImageInfoPListFile(\n+                    plistReader.queryValue(\"CFBundleIdentifier\"),\n+                    plistReader.queryValue(\"CFBundleName\"),\n+                    plistReader.queryValue(\"NSHumanReadableCopyright\"),\n+                    DottedVersion.greedy(plistReader.queryValue(\"CFBundleShortVersionString\")),\n+                    DottedVersion.greedy(plistReader.queryValue(\"CFBundleVersion\")),\n+                    plistReader.queryValue(\"LSApplicationCategoryType\"));\n+        } catch (Exception ex) {\n+            throw new InvalidPlistFileException(ex);\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/AppImageInfoPListFile.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,239 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static java.util.stream.Collectors.joining;\n+import static jdk.jpackage.internal.util.function.ThrowingConsumer.toConsumer;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.attribute.PosixFilePermission;\n+import java.util.EnumSet;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+import jdk.jpackage.internal.Codesign.CodesignException;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.MacApplication;\n+import jdk.jpackage.internal.util.PathUtils;\n+import jdk.jpackage.internal.util.function.ExceptionBox;\n+\n+\n+final class AppImageSigner {\n+\n+    static Consumer<Path> createSigner(MacApplication app, CodesignConfig signingCfg) {\n+        return toConsumer(appImage -> {\n+            try {\n+                new AppImageSigner(Codesigners.create(signingCfg)).sign(app, appImage);\n+            } catch (CodesignException ex) {\n+                throw handleCodesignException(app, ex);\n+            } catch (ExceptionBox ex) {\n+                if (ex.getCause() instanceof CodesignException codesignEx) {\n+                    handleCodesignException(app, codesignEx);\n+                }\n+                throw ex;\n+            }\n+        });\n+    }\n+\n+    private static final class SignFilter implements Predicate<Path> {\n+\n+        SignFilter(Application app, Path appImage) {\n+            Objects.requireNonNull(appImage);\n+\n+            \/\/ Don't explicitly sign main launcher. It will be implicitly signed when the bundle is signed.\n+            otherExcludePaths = app.asApplicationLayout().map(appLayout -> {\n+                return appLayout.resolveAt(appImage);\n+            }).map(ApplicationLayout::launchersDirectory).flatMap(launchersDir -> {\n+                return app.mainLauncher().map(Launcher::executableNameWithSuffix).map(launchersDir::resolve);\n+            }).map(Set::of).orElseGet(Set::of);\n+        }\n+\n+        @Override\n+        public boolean test(Path path) {\n+            if (!Files.isRegularFile(path) || otherExcludePaths.contains(path)) {\n+                return false;\n+            }\n+\n+            if (Files.isExecutable(path) || path.getFileName().toString().endsWith(\".dylib\")) {\n+                if (path.toString().contains(\"dylib.dSYM\/Contents\")) {\n+                    return false;\n+                }\n+\n+                return true;\n+            }\n+\n+            return false;\n+        }\n+\n+        private final Set<Path> otherExcludePaths;\n+    }\n+\n+    private void sign(MacApplication app, Path appImage) throws CodesignException, IOException {\n+\n+        final var fileFilter = new SignFilter(app, appImage);\n+\n+        try (var content = Files.walk(appImage)) {\n+            content.filter(fileFilter).forEach(toConsumer(path -> {\n+                final var origPerms = ensureCanWrite(path);\n+                try {\n+                    unsign(path);\n+                    sign(path);\n+                } finally {\n+                    if (!origPerms.isEmpty()) {\n+                        Files.setPosixFilePermissions(path, origPerms);\n+                    }\n+                }\n+            }));\n+        }\n+\n+        \/\/ Sign runtime root directory if present\n+        app.asApplicationLayout().map(appLayout -> {\n+            return appLayout.resolveAt(appImage);\n+        }).map(MacApplicationLayout.class::cast).map(MacApplicationLayout::runtimeRootDirectory).ifPresent(codesigners);\n+\n+        final var frameworkPath = appImage.resolve(\"Contents\/Frameworks\");\n+        if (Files.isDirectory(frameworkPath)) {\n+            try (var content = Files.list(frameworkPath)) {\n+                content.forEach(toConsumer(path -> {\n+                    codesigners.codesignDir().accept(path);\n+                }));\n+            }\n+        }\n+\n+        \/\/ Sign the app image itself\n+        codesigners.accept(appImage);\n+    }\n+\n+    private static Set<PosixFilePermission> ensureCanWrite(Path path) {\n+        try {\n+            final var origPerms = Files.getPosixFilePermissions(path);\n+            if (origPerms.contains(PosixFilePermission.OWNER_WRITE)) {\n+                return Set.of();\n+            } else {\n+                final var newPerms = EnumSet.copyOf(origPerms);\n+                newPerms.add(PosixFilePermission.OWNER_WRITE);\n+                Files.setPosixFilePermissions(path, newPerms);\n+                return origPerms;\n+            }\n+        } catch (IOException ex) {\n+            throw new UncheckedIOException(ex);\n+        }\n+    }\n+\n+    private static CodesignException handleCodesignException(MacApplication app, CodesignException ex) {\n+        \/\/ Log output of \"codesign\" in case of error. It should help\n+        \/\/ user to diagnose issues when using --mac-app-image-sign-identity.\n+        \/\/ In addition add possible reason for failure. For example\n+        \/\/ \"--app-content\" can fail \"codesign\".\n+\n+        if (!app.contentDirs().isEmpty()) {\n+            Log.info(I18N.getString(\"message.codesign.failed.reason.app.content\"));\n+        }\n+\n+        \/\/ Signing might not work without Xcode with command line\n+        \/\/ developer tools. Show user if Xcode is missing as possible\n+        \/\/ reason.\n+        if (!isXcodeDevToolsInstalled()) {\n+            Log.info(I18N.getString(\"message.codesign.failed.reason.xcode.tools\"));\n+        }\n+\n+        \/\/ Log \"codesign\" output\n+        Log.info(I18N.format(\"error.tool.failed.with.output\", \"codesign\"));\n+        Log.info(Stream.of(ex.getOutput()).collect(joining(\"\\n\")).strip());\n+\n+        return ex;\n+    }\n+\n+    private static boolean isXcodeDevToolsInstalled() {\n+        try {\n+            return Executor.of(\"\/usr\/bin\/xcrun\", \"--help\").setQuiet(true).execute() == 0;\n+        } catch (IOException ex) {\n+            return false;\n+        }\n+    }\n+\n+    private static void unsign(Path path) throws IOException {\n+        \/\/ run quietly\n+        Executor.of(\"\/usr\/bin\/codesign\", \"--remove-signature\", path.toString())\n+                .setQuiet(true)\n+                .executeExpectSuccess();\n+    }\n+\n+    private void sign(Path path) {\n+        codesigners.accept(path);\n+    }\n+\n+    private AppImageSigner(Codesigners codesigners) {\n+        this.codesigners = Objects.requireNonNull(codesigners);\n+    }\n+\n+    private record Codesigners(Consumer<Path> codesignFile, Consumer<Path> codesignExecutableFile, Consumer<Path> codesignDir) implements Consumer<Path> {\n+        Codesigners {\n+            Objects.requireNonNull(codesignFile);\n+            Objects.requireNonNull(codesignExecutableFile);\n+            Objects.requireNonNull(codesignDir);\n+        }\n+\n+        @Override\n+        public void accept(Path path) {\n+            findCodesigner(path).orElseThrow(() -> {\n+                return new IllegalArgumentException(String.format(\"No codesigner for %s path\", PathUtils.normalizedAbsolutePathString(path)));\n+            }).accept(path);\n+        }\n+\n+        private Optional<Consumer<Path>> findCodesigner(Path path) {\n+            if (Files.isDirectory(path)) {\n+                return Optional.of(codesignDir);\n+            } else if (Files.isRegularFile(path)) {\n+                if (Files.isExecutable(path)) {\n+                    return Optional.of(codesignExecutableFile);\n+                } else {\n+                    return Optional.of(codesignFile);\n+                }\n+            }\n+            return Optional.empty();\n+        }\n+\n+        static Codesigners create(CodesignConfig signingCfg) {\n+            final var signingCfgWithoutEntitlements = CodesignConfig.build().from(signingCfg).entitlements(null).create();\n+\n+            final var codesignExecutableFile = Codesign.build(signingCfg::toCodesignArgs).quiet(true).create().asConsumer();\n+            final var codesignFile = Codesign.build(signingCfgWithoutEntitlements::toCodesignArgs).quiet(true).create().asConsumer();\n+            final var codesignDir = Codesign.build(signingCfgWithoutEntitlements::toCodesignArgs).force(true).create().asConsumer();\n+\n+            return new Codesigners(codesignFile, codesignExecutableFile, codesignDir);\n+        }\n+    }\n+\n+    private final Codesigners codesigners;\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/AppImageSigner.java","additions":239,"deletions":0,"binary":false,"changes":239,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.AppImageSigningConfig;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.LauncherStartupInfo;\n+\n+final class AppImageSigningConfigBuilder {\n+\n+    AppImageSigningConfigBuilder(SigningIdentityBuilder signingIdentityBuilder) {\n+        this.signingIdentityBuilder = Objects.requireNonNull(signingIdentityBuilder);\n+    }\n+\n+    AppImageSigningConfigBuilder entitlements(Path v) {\n+        entitlements = v;\n+        return this;\n+    }\n+\n+    AppImageSigningConfigBuilder entitlementsResourceName(String v) {\n+        entitlementsResourceName = v;\n+        return this;\n+    }\n+\n+    AppImageSigningConfigBuilder signingIdentifierPrefix(LauncherStartupInfo mainLauncherStartupInfo) {\n+        final var pkgName = mainLauncherStartupInfo.packageName();\n+        if (!pkgName.isEmpty()) {\n+            signingIdentifierPrefix(pkgName + \".\");\n+        } else {\n+            signingIdentifierPrefix(mainLauncherStartupInfo.simpleClassName() + \".\");\n+        }\n+        return this;\n+    }\n+\n+    AppImageSigningConfigBuilder signingIdentifierPrefix(String v) {\n+        signingIdentifierPrefix = v;\n+        return this;\n+    }\n+\n+    Optional<AppImageSigningConfig> create() throws ConfigException {\n+        final var identityCfg = signingIdentityBuilder.create();\n+        if (identityCfg.isEmpty()) {\n+            return Optional.empty();\n+        } else {\n+            final var validatedEntitlements = validatedEntitlements();\n+            return identityCfg.map(cfg -> {\n+                return new AppImageSigningConfig.Stub(cfg.identity(), signingIdentifierPrefix,\n+                        validatedEntitlements, cfg.keychain().map(Keychain::name),\n+                        Optional.ofNullable(entitlementsResourceName).orElse(\"entitlements.plist\"));\n+            });\n+        }\n+    }\n+\n+    private Optional<Path> validatedEntitlements() throws ConfigException {\n+        return Optional.ofNullable(entitlements);\n+    }\n+\n+    private SigningIdentityBuilder signingIdentityBuilder;\n+    private Path entitlements;\n+    private String entitlementsResourceName;\n+    private String signingIdentifierPrefix;\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/AppImageSigningConfigBuilder.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,119 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.util.function.ThrowingConsumer.toConsumer;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.Consumer;\n+import java.util.function.Supplier;\n+import java.util.stream.Stream;\n+\n+\n+public final class Codesign {\n+\n+    public static final class CodesignException extends Exception {\n+\n+        CodesignException(String[] output) {\n+            this.output = output;\n+        }\n+\n+        String[] getOutput() {\n+            return output;\n+        }\n+\n+        private final String[] output;\n+\n+        private static final long serialVersionUID = 1L;\n+    }\n+\n+    public static final class Builder {\n+\n+        private Builder(Supplier<List<String>> args) {\n+            this.args = Objects.requireNonNull(args);\n+        }\n+\n+        Codesign create() {\n+            List<String> cmdline = new ArrayList<>();\n+            cmdline.add(\"\/usr\/bin\/codesign\");\n+            cmdline.addAll(args.get());\n+            if (force) {\n+                cmdline.add(\"--force\");\n+            }\n+\n+            return new Codesign(cmdline, quiet ? exec -> {\n+                exec.setQuiet(true);\n+            } : null);\n+        }\n+\n+        public Builder force(boolean v) {\n+            force = v;\n+            return this;\n+        }\n+\n+        public Builder quiet(boolean v) {\n+            quiet = v;\n+            return this;\n+        }\n+\n+        private final Supplier<List<String>> args;\n+        private boolean force;\n+        private boolean quiet;\n+    }\n+\n+    public static Builder build(Supplier<List<String>> args) {\n+        return new Builder(args);\n+    }\n+\n+    public void applyTo(Path path) throws IOException, CodesignException {\n+\n+        var exec = Executor.of(Stream.concat(\n+                cmdline.stream(),\n+                Stream.of(path.toString())).toArray(String[]::new)\n+        ).saveOutput(true);\n+        configureExecutor.ifPresent(configure -> configure.accept(exec));\n+\n+        if (exec.execute() != 0) {\n+            throw new CodesignException(exec.getOutput().toArray(String[]::new));\n+        }\n+    }\n+\n+    public Consumer<Path> asConsumer() {\n+        return toConsumer(this::applyTo);\n+    }\n+\n+    private Codesign(List<String> cmdline, Consumer<Executor> configureExecutor) {\n+        this.cmdline = Objects.requireNonNull(cmdline);\n+        this.configureExecutor = Optional.ofNullable(configureExecutor);\n+    }\n+\n+    private final List<String> cmdline;\n+    private final Optional<Consumer<Executor>> configureExecutor;\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/Codesign.java","additions":119,"deletions":0,"binary":false,"changes":119,"status":"added"},{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.AppImageSigningConfig;\n+import jdk.jpackage.internal.model.SigningIdentity;\n+import jdk.jpackage.internal.util.PathUtils;\n+\n+\n+record CodesignConfig(Optional<SigningIdentity> identity, Optional<String> identifierPrefix,\n+        Optional<Path> entitlements, Optional<Keychain> keychain) {\n+\n+    CodesignConfig {\n+        Objects.requireNonNull(identity);\n+        Objects.requireNonNull(identifierPrefix);\n+        Objects.requireNonNull(entitlements);\n+        Objects.requireNonNull(keychain);\n+\n+        if (identity.isPresent() != identifierPrefix.isPresent()) {\n+            throw new IllegalArgumentException(\"Signing identity and identifier prefix mismatch\");\n+        }\n+\n+        identifierPrefix.ifPresent(v -> {\n+            if (!v.endsWith(\".\")) {\n+                throw new IllegalArgumentException(\"Invalid identifier prefix\");\n+            }\n+        });\n+    }\n+\n+    static final class Builder {\n+\n+        private Builder() {\n+        }\n+\n+        CodesignConfig create() {\n+            return new CodesignConfig(Optional.ofNullable(identity), Optional.ofNullable(identifierPrefix),\n+                    Optional.ofNullable(entitlements), Optional.ofNullable(keychain));\n+        }\n+\n+        Builder entitlements(Path v) {\n+            entitlements = v;\n+            return this;\n+        }\n+\n+        Builder identity(SigningIdentity v) {\n+            identity = v;\n+            return this;\n+        }\n+\n+        Builder identifierPrefix(String v) {\n+            identifierPrefix = v;\n+            return this;\n+        }\n+\n+        Builder keychain(String v) {\n+            return keychain(Optional.ofNullable(v).map(Keychain::new).orElse(null));\n+        }\n+\n+        Builder keychain(Keychain v) {\n+            keychain = v;\n+            return this;\n+        }\n+\n+        Builder from(AppImageSigningConfig v) {\n+            return identity(v.identity())\n+                    .identifierPrefix(v.identifierPrefix())\n+                    .entitlements(v.entitlements().orElse(null))\n+                    .keychain(v.keychain().orElse(null));\n+        }\n+\n+        Builder from(CodesignConfig v) {\n+            return identity(v.identity().orElse(null))\n+                    .identifierPrefix(v.identifierPrefix().orElse(null))\n+                    .entitlements(v.entitlements().orElse(null))\n+                    .keychain(v.keychain().orElse(null));\n+        }\n+\n+        private SigningIdentity identity;\n+        private String identifierPrefix;\n+        private Path entitlements;\n+        private Keychain keychain;\n+    }\n+\n+    static Builder build() {\n+        return new Builder();\n+    }\n+\n+    List<String> toCodesignArgs() {\n+        List<String> args = new ArrayList<>(List.of(\"-s\", identity.map(SigningIdentity::id).orElse(ADHOC_SIGNING_IDENTITY), \"-vvvv\"));\n+\n+        if (identity.isPresent()) {\n+            args.addAll(List.of(\"--timestamp\", \"--options\", \"runtime\"));\n+            identifierPrefix.ifPresent(v -> {\n+                args.addAll(List.of(\"--prefix\", v));\n+            });\n+            keychain.map(Keychain::asCliArg).ifPresent(k -> args.addAll(List.of(\"--keychain\", k)));\n+            entitlements.map(PathUtils::normalizedAbsolutePathString).ifPresent(e -> args.addAll(List.of(\"--entitlements\", e)));\n+        }\n+\n+        return args;\n+    }\n+\n+    static final String ADHOC_SIGNING_IDENTITY = \"-\";\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/CodesignConfig.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.stream.Stream;\n+import jdk.jpackage.internal.util.PathUtils;\n+\n+record Keychain(String name) {\n+    Keychain {\n+        Objects.requireNonNull(name);\n+    }\n+\n+    Path path() {\n+        final var path = Path.of(name);\n+        if (path.isAbsolute()) {\n+            return path;\n+        } else {\n+            final var dir = Path.of(System.getProperty(\"user.home\")).resolve(\"Library\/Keychains\");\n+            final var files = filenames(name).map(dir::resolve).toList();\n+            return files.stream().filter(Files::exists).findFirst().orElseGet(() -> {\n+                \/\/ Can't find keychain file in \"$HOME\/Library\/Keychains\" folder.\n+                \/\/ Detect keychain file name from the name of the login keychain file.\n+                return files.stream().filter(f -> {\n+                    final var loginKeycahinFile = f.getParent().resolve(\"login.keychain\" + f.getFileName().toString().substring(name.length()));\n+                    return Files.exists(loginKeycahinFile);\n+                }).findFirst().orElseGet(() -> {\n+                    \/\/ login keychain file doesn't exist, fallback to \"$HOME\/Library\/Keychains\/<name>-db\" keychain file.\n+                    return files.getFirst();\n+                });\n+            });\n+        }\n+    }\n+\n+    String asCliArg() {\n+        final var path = Path.of(name);\n+        if (path.isAbsolute()) {\n+            return PathUtils.normalizedAbsolutePathString(path);\n+        } else {\n+            return name;\n+        }\n+    }\n+\n+    static List<Keychain> listKeychains() {\n+        \/\/ Get the current keychain list\n+        final List<String> cmdOutput;\n+        try {\n+            cmdOutput = Executor.of(\"\/usr\/bin\/security\", \"list-keychains\").saveOutput(true).executeExpectSuccess().getOutput();\n+        } catch (IOException ex) {\n+            throw I18N.buildException().message(\"message.keychain.error\").cause(ex).create(KeychainException::new);\n+        }\n+\n+        \/\/ Typical output of \/usr\/bin\/security command is:\n+        \/\/        \"\/Users\/foo\/Library\/Keychains\/login.keychain-db\"\n+        \/\/        \"\/Library\/Keychains\/System.keychain\"\n+        return cmdOutput.stream().map(String::trim).map(str -> {\n+            \/\/ Strip enclosing double quotes\n+            return str.substring(1, str.length() - 1);\n+        }).map(Keychain::new).toList();\n+    }\n+\n+    static final class KeychainException extends RuntimeException {\n+\n+        KeychainException(String msg) {\n+            super(msg);\n+        }\n+\n+        KeychainException(String msg, Throwable cause) {\n+            super(msg, cause);\n+        }\n+\n+        private static final long serialVersionUID = 1L;\n+    }\n+\n+    private static Stream<String> filenames(String name) {\n+        return Stream.of(name + \"-db\", name);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/Keychain.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"},{"patch":"@@ -28,1 +28,3 @@\n-import java.text.MessageFormat;\n+import static jdk.jpackage.internal.StandardBundlerParam.OUTPUT_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n+\n@@ -32,7 +34,1 @@\n-\n-import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n-import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEY_USER;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_STORE;\n-import static jdk.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n+import jdk.jpackage.internal.util.function.ExceptionBox;\n@@ -42,70 +38,19 @@\n-        setAppImageSupplier(imageOutDir -> {\n-            return new MacAppImageBuilder(imageOutDir, isDependentTask());\n-        });\n-        setParamsValidator(MacAppBundler::doValidate);\n-    }\n-\n-    private static final String TEMPLATE_BUNDLE_ICON = \"JavaApp.icns\";\n-\n-    public static final BundlerParamInfo<String> DEFAULT_ICNS_ICON =\n-            new StandardBundlerParam<>(\n-            \".mac.default.icns\",\n-            String.class,\n-            params -> TEMPLATE_BUNDLE_ICON,\n-            (s, p) -> s);\n-\n-    public static final BundlerParamInfo<String> DEVELOPER_ID_APP_SIGNING_KEY =\n-            new StandardBundlerParam<>(\n-            \"mac.signing-key-developer-id-app\",\n-            String.class,\n-            params -> {\n-                    String user = SIGNING_KEY_USER.fetchFrom(params);\n-                    String keychain = SIGNING_KEYCHAIN.fetchFrom(params);\n-                    String result = null;\n-                    if (APP_STORE.fetchFrom(params)) {\n-                        result = MacCertificate.findCertificateKey(\n-                            \"3rd Party Mac Developer Application: \",\n-                            user, keychain);\n-                    }\n-                    \/\/ if either not signing for app store or couldn't find\n-                    if (result == null) {\n-                        result = MacCertificate.findCertificateKey(\n-                            \"Developer ID Application: \", user, keychain);\n-                    }\n-\n-                    if (result != null) {\n-                        MacCertificate certificate = new MacCertificate(result, keychain);\n-\n-                        if (!certificate.isValid()) {\n-                            Log.error(MessageFormat.format(I18N.getString(\n-                                    \"error.certificate.expired\"), result));\n-                        }\n-                    }\n-\n-                    return result;\n-                },\n-            (s, p) -> s);\n-\n-    public static final BundlerParamInfo<String> APP_IMAGE_SIGN_IDENTITY =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.MAC_APP_IMAGE_SIGN_IDENTITY.getId(),\n-            String.class,\n-            params -> \"\",\n-            null);\n-\n-    public static final BundlerParamInfo<String> BUNDLE_ID_SIGNING_PREFIX =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.MAC_BUNDLE_SIGNING_PREFIX.getId(),\n-            String.class,\n-            params -> getIdentifier(params) + \".\",\n-            (s, p) -> s);\n-\n-    static String getIdentifier(Map<String, ? super Object> params) {\n-        String s = MAIN_CLASS.fetchFrom(params);\n-        if (s == null) return null;\n-\n-        int idx = s.lastIndexOf(\".\");\n-        if (idx >= 1) {\n-            return s.substring(0, idx);\n-        }\n-        return s;\n+         setAppImageSupplier((params, output) -> {\n+\n+             \/\/ Order is important!\n+             final var app = MacFromParams.APPLICATION.fetchFrom(params);\n+             final BuildEnv env;\n+\n+             if (StandardBundlerParam.hasPredefinedAppImage(params)) {\n+                 env = BuildEnvFromParams.BUILD_ENV.fetchFrom(params);\n+                 final var pkg = MacPackagingPipeline.createSignAppImagePackage(app, env);\n+                 MacPackagingPipeline.build(Optional.of(pkg)).create().execute(env, pkg, output);\n+             } else {\n+                 env = BuildEnv.withAppImageDir(BuildEnvFromParams.BUILD_ENV.fetchFrom(params), output);\n+                 MacPackagingPipeline.build(Optional.empty())\n+                         .excludeDirFromCopying(output.getParent())\n+                         .excludeDirFromCopying(OUTPUT_DIR.fetchFrom(params)).create().execute(env, app);\n+             }\n+\n+         });\n+         setParamsValidator(MacAppBundler::doValidate);\n@@ -117,0 +62,10 @@\n+        try {\n+            MacFromParams.APPLICATION.fetchFrom(params);\n+        } catch (ExceptionBox ex) {\n+            if (ex.getCause() instanceof ConfigException cfgEx) {\n+                throw cfgEx;\n+            } else {\n+                throw ex;\n+            }\n+        }\n+\n@@ -124,28 +79,0 @@\n-        } else {\n-            \/\/ validate short version\n-            try {\n-                String version = VERSION.fetchFrom(params);\n-                CFBundleVersion.of(version);\n-            } catch (IllegalArgumentException ex) {\n-                throw new ConfigException(ex.getMessage(), I18N.getString(\n-                        \"error.invalid-cfbundle-version.advice\"), ex);\n-            }\n-        }\n-\n-        \/\/ reject explicitly set sign to true and no valid signature key\n-        if (Optional.ofNullable(\n-                    SIGN_BUNDLE.fetchFrom(params)).orElse(Boolean.FALSE)) {\n-            \/\/ Validate DEVELOPER_ID_APP_SIGNING_KEY only if user provided\n-            \/\/ SIGNING_KEY_USER.\n-            if (!SIGNING_KEY_USER.getIsDefaultValue(params)) { \/\/ --mac-signing-key-user-name\n-                String signingIdentity =\n-                        DEVELOPER_ID_APP_SIGNING_KEY.fetchFrom(params);\n-                if (signingIdentity == null) {\n-                    throw new ConfigException(\n-                            I18N.getString(\"error.explicit-sign-no-cert\"),\n-                            I18N.getString(\"error.explicit-sign-no-cert.advice\"));\n-                }\n-            }\n-\n-            \/\/ No need to validate --mac-app-image-sign-identity, since it is\n-            \/\/ pass through option.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppBundler.java","additions":33,"deletions":106,"binary":false,"changes":139,"status":"modified"},{"patch":"@@ -1,942 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.jpackage.internal;\n-\n-import java.io.ByteArrayOutputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.PrintStream;\n-import java.io.Writer;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.attribute.PosixFilePermission;\n-import java.text.MessageFormat;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.EnumSet;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-import java.util.ResourceBundle;\n-import java.util.Set;\n-import java.util.concurrent.atomic.AtomicReference;\n-import java.util.function.Consumer;\n-import java.util.stream.Stream;\n-import javax.xml.parsers.DocumentBuilder;\n-import javax.xml.parsers.DocumentBuilderFactory;\n-import javax.xml.xpath.XPath;\n-import javax.xml.xpath.XPathConstants;\n-import javax.xml.xpath.XPathFactory;\n-import jdk.internal.util.OSVersion;\n-import static jdk.jpackage.internal.MacAppBundler.BUNDLE_ID_SIGNING_PREFIX;\n-import static jdk.jpackage.internal.MacAppBundler.DEVELOPER_ID_APP_SIGNING_KEY;\n-import static jdk.jpackage.internal.MacAppBundler.APP_IMAGE_SIGN_IDENTITY;\n-import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n-import static jdk.jpackage.internal.MacBaseInstallerBundler.INSTALLER_SIGN_IDENTITY;\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n-import static jdk.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n-import static jdk.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n-import static jdk.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n-import static jdk.jpackage.internal.StandardBundlerParam.FA_ICON;\n-import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n-import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n-import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n-import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_STORE;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_CONTENT;\n-\n-public class MacAppImageBuilder extends AbstractAppImageBuilder {\n-\n-    private static final ResourceBundle I18N = ResourceBundle.getBundle(\n-            \"jdk.jpackage.internal.resources.MacResources\");\n-\n-    private static final String TEMPLATE_BUNDLE_ICON = \"JavaApp.icns\";\n-    private static final String OS_TYPE_CODE = \"APPL\";\n-    private static final String TEMPLATE_INFO_PLIST_LITE =\n-            \"Info-lite.plist.template\";\n-    private static final String TEMPLATE_RUNTIME_INFO_PLIST =\n-            \"Runtime-Info.plist.template\";\n-\n-    private final Path root;\n-    private final Path contentsDir;\n-    private final Path resourcesDir;\n-    private final Path macOSDir;\n-    private final Path runtimeDir;\n-    private final Path runtimeRoot;\n-\n-    private final boolean withPackageFile;\n-\n-    private static List<String> keyChains;\n-\n-    public static final BundlerParamInfo<Boolean>\n-            MAC_CONFIGURE_LAUNCHER_IN_PLIST = new StandardBundlerParam<>(\n-                    \"mac.configure-launcher-in-plist\",\n-                    Boolean.class,\n-                    params -> Boolean.FALSE,\n-                    (s, p) -> Boolean.valueOf(s));\n-\n-    public static final BundlerParamInfo<String> MAC_CF_BUNDLE_NAME =\n-            new StandardBundlerParam<>(\n-                    Arguments.CLIOptions.MAC_BUNDLE_NAME.getId(),\n-                    String.class,\n-                    params -> null,\n-                    (s, p) -> s);\n-\n-    public static final BundlerParamInfo<String> APP_CATEGORY =\n-            new StandardBundlerParam<>(\n-                    Arguments.CLIOptions.MAC_CATEGORY.getId(),\n-                    String.class,\n-                    params -> \"utilities\",\n-                    (s, p) -> s);\n-\n-    public static final BundlerParamInfo<String> MAC_CF_BUNDLE_IDENTIFIER =\n-            new StandardBundlerParam<>(\n-                    Arguments.CLIOptions.MAC_BUNDLE_IDENTIFIER.getId(),\n-                    String.class,\n-                    params -> {\n-                        \/\/ Get identifier from app image if user provided\n-                        \/\/ app image and did not provide the identifier via CLI.\n-                        String identifier = extractBundleIdentifier(params);\n-                        if (identifier == null) {\n-                            identifier =  MacAppBundler.getIdentifier(params);\n-                        }\n-                        if (identifier == null) {\n-                            identifier = APP_NAME.fetchFrom(params);\n-                        }\n-                        return identifier;\n-                    },\n-                    (s, p) -> s);\n-\n-    public static final BundlerParamInfo<Path> ICON_ICNS =\n-            new StandardBundlerParam<>(\n-            \"icon.icns\",\n-            Path.class,\n-            params -> {\n-                Path f = ICON.fetchFrom(params);\n-                if (f != null && f.getFileName() != null && !f.getFileName()\n-                        .toString().toLowerCase().endsWith(\".icns\")) {\n-                    Log.error(MessageFormat.format(\n-                            I18N.getString(\"message.icon-not-icns\"), f));\n-                    return null;\n-                }\n-                return f;\n-            },\n-            (s, p) -> Path.of(s));\n-\n-    public static final BundlerParamInfo<Path> ENTITLEMENTS =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.MAC_ENTITLEMENTS.getId(),\n-            Path.class,\n-            params -> {\n-                try {\n-                    Path path = CONFIG_ROOT.fetchFrom(params).resolve(\n-                        getLauncherName(params) + \".entitlements\");\n-                    String defPath = (APP_STORE.fetchFrom(params) ?\n-                        \"sandbox.plist\" : \"entitlements.plist\");\n-                    createResource(defPath, params)\n-                        .setCategory(I18N.getString(\"resource.entitlements\"))\n-                        .saveToFile(path);\n-                    return path;\n-                } catch (IOException ioe) {\n-                   Log.verbose(ioe);\n-                }\n-                return null;\n-            },\n-            (s, p) -> Path.of(s)\n-        );\n-\n-    private static final StandardBundlerParam<String> FA_MAC_CFBUNDLETYPEROLE =\n-             new StandardBundlerParam<>(\n-                     Arguments.MAC_CFBUNDLETYPEROLE,\n-                     String.class,\n-                     params -> \"Editor\",\n-                     (s, p) -> s\n-     );\n-\n-     private static final StandardBundlerParam<String> FA_MAC_LSHANDLERRANK =\n-             new StandardBundlerParam<>(\n-                     Arguments.MAC_LSHANDLERRANK,\n-                     String.class,\n-                     params -> \"Owner\",\n-                     (s, p) -> s\n-     );\n-\n-     private static final StandardBundlerParam<String> FA_MAC_NSSTORETYPEKEY =\n-             new StandardBundlerParam<>(\n-                     Arguments.MAC_NSSTORETYPEKEY,\n-                     String.class,\n-                     params -> null,\n-                     (s, p) -> s\n-     );\n-\n-     private static final StandardBundlerParam<String> FA_MAC_NSDOCUMENTCLASS =\n-             new StandardBundlerParam<>(\n-                     Arguments.MAC_NSDOCUMENTCLASS,\n-                     String.class,\n-                     params -> null,\n-                     (s, p) -> s\n-     );\n-\n-     private static final StandardBundlerParam<String> FA_MAC_LSTYPEISPACKAGE =\n-             new StandardBundlerParam<>(\n-                     Arguments.MAC_LSTYPEISPACKAGE,\n-                     String.class,\n-                     params -> null,\n-                     (s, p) -> s\n-     );\n-\n-     private static final StandardBundlerParam<String> FA_MAC_LSDOCINPLACE =\n-             new StandardBundlerParam<>(\n-                     Arguments.MAC_LSDOCINPLACE,\n-                     String.class,\n-                     params -> null,\n-                     (s, p) -> s\n-     );\n-\n-     private static final StandardBundlerParam<String> FA_MAC_UIDOCBROWSER =\n-             new StandardBundlerParam<>(\n-                     Arguments.MAC_UIDOCBROWSER,\n-                     String.class,\n-                     params -> null,\n-                     (s, p) -> s\n-     );\n-\n-     @SuppressWarnings(\"unchecked\")\n-     private static final StandardBundlerParam<List<String>> FA_MAC_NSEXPORTABLETYPES =\n-             new StandardBundlerParam<>(\n-                     Arguments.MAC_NSEXPORTABLETYPES,\n-                     (Class<List<String>>) (Object) List.class,\n-                     params -> null,\n-                     (s, p) -> Arrays.asList(s.split(\"(,|\\\\s)+\"))\n-             );\n-\n-     @SuppressWarnings(\"unchecked\")\n-     private static final StandardBundlerParam<List<String>> FA_MAC_UTTYPECONFORMSTO =\n-             new StandardBundlerParam<>(\n-                     Arguments.MAC_UTTYPECONFORMSTO,\n-                     (Class<List<String>>) (Object) List.class,\n-                     params -> Arrays.asList(\"public.data\"),\n-                     (s, p) -> Arrays.asList(s.split(\"(,|\\\\s)+\"))\n-             );\n-\n-    public MacAppImageBuilder(Path imageOutDir, boolean withPackageFile) {\n-        super(imageOutDir);\n-\n-        this.root = imageOutDir;\n-        this.withPackageFile = withPackageFile;\n-        this.contentsDir = root.resolve(\"Contents\");\n-        this.resourcesDir = appLayout.destktopIntegrationDirectory();\n-        this.macOSDir = appLayout.launchersDirectory();\n-        this.runtimeDir = appLayout.runtimeDirectory();\n-        this.runtimeRoot = appLayout.runtimeHomeDirectory();\n-    }\n-\n-    private void writeEntry(InputStream in, Path dstFile) throws IOException {\n-        Files.createDirectories(dstFile.getParent());\n-        Files.copy(in, dstFile);\n-    }\n-\n-    @Override\n-    protected boolean withAppImageFile(Map<String, ? super Object> params) {\n-        return !withPackageFile;\n-    }\n-\n-    @Override\n-    public void prepareApplicationFiles(Map<String, ? super Object> params)\n-            throws IOException {\n-        \/\/ If predefined app image is provided, then just sign it and return.\n-        Path predefinedAppImage = PREDEFINED_APP_IMAGE.fetchFrom(params);\n-        if (predefinedAppImage != null) {\n-            \/\/ Mark app image as signed, before we signing it.\n-            AppImageFile appImageFile =\n-                AppImageFile.load(predefinedAppImage);\n-            if (!appImageFile.isSigned()) {\n-                appImageFile.copyAsSigned().save(predefinedAppImage);\n-            } else {\n-                appImageFile = null;\n-            }\n-\n-            try {\n-                doSigning(params);\n-            } catch (Exception ex) {\n-                \/\/ Restore original app image file if signing failed\n-                if (appImageFile != null) {\n-                    appImageFile.save(predefinedAppImage);\n-                }\n-\n-                throw ex;\n-            }\n-\n-            return;\n-        }\n-\n-        Files.createDirectories(macOSDir);\n-\n-        Map<String, ? super Object> originalParams = new HashMap<>(params);\n-        \/\/ Generate PkgInfo\n-        Path pkgInfoFile = contentsDir.resolve(\"PkgInfo\");\n-        Files.createFile(pkgInfoFile);\n-        writePkgInfo(pkgInfoFile);\n-\n-        Path executable = macOSDir.resolve(getLauncherName(params));\n-\n-        \/\/ create the main app launcher\n-        try (InputStream is_launcher =\n-                getResourceAsStream(\"jpackageapplauncher\")) {\n-            \/\/ Copy executable and library to MacOS folder\n-            writeEntry(is_launcher, executable);\n-        }\n-        executable.toFile().setExecutable(true, false);\n-        \/\/ generate main app launcher config file\n-        writeCfgFile(params);\n-\n-        \/\/ create additional app launcher(s) and config file(s)\n-        List<Map<String, ? super Object>> entryPoints =\n-                ADD_LAUNCHERS.fetchFrom(params);\n-        for (Map<String, ? super Object> entryPoint : entryPoints) {\n-            Map<String, ? super Object> tmp =\n-                    AddLauncherArguments.merge(originalParams, entryPoint);\n-\n-            \/\/ add executable for add launcher\n-            Path addExecutable = macOSDir.resolve(getLauncherName(tmp));\n-            try (InputStream is = getResourceAsStream(\"jpackageapplauncher\");) {\n-                writeEntry(is, addExecutable);\n-            }\n-            addExecutable.toFile().setExecutable(true, false);\n-\n-            \/\/ add config file for add launcher\n-            writeCfgFile(tmp);\n-        }\n-\n-        \/\/ Copy class path entries to Java folder\n-        copyApplication(params);\n-\n-        if (withPackageFile) {\n-            new PackageFile(APP_NAME.fetchFrom(params)).save(\n-                    ApplicationLayout.macAppImage().resolveAt(root));\n-        }\n-\n-        \/*********** Take care of \"config\" files *******\/\n-\n-        createResource(TEMPLATE_BUNDLE_ICON, params)\n-                .setCategory(\"icon\")\n-                .setExternal(ICON_ICNS.fetchFrom(params))\n-                .saveToFile(resourcesDir.resolve(APP_NAME.fetchFrom(params)\n-                        + \".icns\"));\n-\n-        \/\/ copy file association icons\n-        for (Map<String, ?\n-                super Object> fa : FILE_ASSOCIATIONS.fetchFrom(params)) {\n-            Path f = FA_ICON.fetchFrom(fa);\n-            if (IOUtils.exists(f)) {\n-                IOUtils.copyFile(f, resourcesDir.resolve(f.getFileName()));\n-\n-            }\n-        }\n-\n-        copyRuntimeFiles(params);\n-\n-        doSigning(params);\n-    }\n-\n-    private void copyRuntimeFiles(Map<String, ? super Object> params)\n-            throws IOException {\n-        \/\/ Generate Info.plist\n-        writeInfoPlist(contentsDir.resolve(\"Info.plist\"), params);\n-\n-        \/\/ generate java runtime info.plist\n-        writeRuntimeInfoPlist(\n-                runtimeDir.resolve(\"Contents\/Info.plist\"), params);\n-\n-        \/\/ copy library\n-        Path runtimeMacOSDir = Files.createDirectories(\n-                runtimeDir.resolve(\"Contents\/MacOS\"));\n-\n-        final Path jliName = Path.of(\"libjli.dylib\");\n-        try (Stream<Path> walk = Files.walk(runtimeRoot.resolve(\"lib\"))) {\n-            final Path jli = walk\n-                    .filter(file -> file.getFileName().equals(jliName))\n-                    .findFirst()\n-                    .get();\n-            Files.copy(jli, runtimeMacOSDir.resolve(jliName));\n-        }\n-    }\n-\n-    private void doSigning(Map<String, ? super Object> params)\n-            throws IOException {\n-\n-        if (Optional.ofNullable(\n-                SIGN_BUNDLE.fetchFrom(params)).orElse(Boolean.TRUE)) {\n-            try {\n-                addNewKeychain(params);\n-            } catch (InterruptedException e) {\n-                Log.error(e.getMessage());\n-            }\n-            String signingIdentity = null;\n-            \/\/ Try --mac-app-image-sign-identity first if set\n-            if (!APP_IMAGE_SIGN_IDENTITY.getIsDefaultValue(params)) {\n-                signingIdentity = APP_IMAGE_SIGN_IDENTITY.fetchFrom(params);\n-            } else {\n-                \/\/ Check if INSTALLER_SIGN_IDENTITY is set and if it is set\n-                \/\/ then do not sign app image, otherwise use --mac-signing-key-user-name\n-                if (INSTALLER_SIGN_IDENTITY.getIsDefaultValue(params)) {\n-                    \/\/ --mac-sign and\/or --mac-signing-key-user-name case\n-                    signingIdentity = DEVELOPER_ID_APP_SIGNING_KEY.fetchFrom(params);\n-                }\n-            }\n-            if (signingIdentity != null) {\n-                signAppBundle(params, root, signingIdentity,\n-                        BUNDLE_ID_SIGNING_PREFIX.fetchFrom(params),\n-                        ENTITLEMENTS.fetchFrom(params));\n-            } else {\n-                \/\/ Case when user requested to sign installer only\n-                signAppBundle(params, root, \"-\", null, null);\n-            }\n-            restoreKeychainList(params);\n-        } else {\n-            signAppBundle(params, root, \"-\", null, null);\n-        }\n-    }\n-\n-    private static String getLauncherName(Map<String, ? super Object> params) {\n-        return APP_NAME.fetchFrom(params);\n-    }\n-\n-    private String getBundleName(Map<String, ? super Object> params) {\n-        if (MAC_CF_BUNDLE_NAME.fetchFrom(params) != null) {\n-            String bn = MAC_CF_BUNDLE_NAME.fetchFrom(params);\n-            if (bn.length() > 16) {\n-                Log.error(MessageFormat.format(I18N.getString(\n-                        \"message.bundle-name-too-long-warning\"),\n-                        MAC_CF_BUNDLE_NAME.getID(), bn));\n-            }\n-            return MAC_CF_BUNDLE_NAME.fetchFrom(params);\n-        } else if (APP_NAME.fetchFrom(params) != null) {\n-            return APP_NAME.fetchFrom(params);\n-        } else {\n-            String nm = MAIN_CLASS.fetchFrom(params);\n-            if (nm.length() > 16) {\n-                nm = nm.substring(0, 16);\n-            }\n-            return nm;\n-        }\n-    }\n-\n-    private void writeRuntimeInfoPlist(Path file,\n-            Map<String, ? super Object> params) throws IOException {\n-        Map<String, String> data = new HashMap<>();\n-        String identifier = StandardBundlerParam.isRuntimeInstaller(params) ?\n-                MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params) :\n-                \"com.oracle.java.\" + MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params);\n-        data.put(\"CF_BUNDLE_IDENTIFIER\", identifier);\n-        String name = StandardBundlerParam.isRuntimeInstaller(params) ?\n-                getBundleName(params): \"Java Runtime Image\";\n-        data.put(\"CF_BUNDLE_NAME\", name);\n-        String ver = VERSION.fetchFrom(params);\n-        String sver = ver;\n-        int index = ver.indexOf(\".\");\n-        if (index > 0 && ((index + 1) < ver.length())) {\n-            index = ver.indexOf(\".\", index + 1);\n-            if (index > 0 ) {\n-                sver = ver.substring(0, index);\n-            }\n-        }\n-        data.put(\"CF_BUNDLE_VERSION\", ver);\n-        data.put(\"CF_BUNDLE_SHORT_VERSION_STRING\", sver);\n-\n-        createResource(TEMPLATE_RUNTIME_INFO_PLIST, params)\n-                .setPublicName(\"Runtime-Info.plist\")\n-                .setCategory(I18N.getString(\"resource.runtime-info-plist\"))\n-                .setSubstitutionData(data)\n-                .saveToFile(file);\n-    }\n-\n-    private void writeStringArrayPlist(StringBuilder sb, String key,\n-            List<String> values) {\n-        if (values != null && !values.isEmpty()) {\n-            sb.append(\"  <key>\").append(key).append(\"<\/key>\\n\").append(\"   <array>\\n\");\n-            values.forEach((value) -> {\n-                sb.append(\"    <string>\").append(value).append(\"<\/string>\\n\");\n-            });\n-            sb.append(\"   <\/array>\\n\");\n-        }\n-    }\n-\n-    private void writeStringPlist(StringBuilder sb, String key, String value) {\n-        if (value != null && !value.isEmpty()) {\n-            sb.append(\"  <key>\").append(key).append(\"<\/key>\\n\").append(\"  <string>\")\n-                    .append(value).append(\"<\/string>\\n\").append(\"\\n\");\n-         }\n-    }\n-\n-    private void writeBoolPlist(StringBuilder sb, String key, String value) {\n-        if (value != null && !value.isEmpty()) {\n-            sb.append(\"  <key>\").append(key).append(\"<\/key>\\n\").append(\"  <\")\n-                    .append(value).append(\"\/>\\n\").append(\"\\n\");\n-         }\n-    }\n-\n-    private void writeInfoPlist(Path file, Map<String, ? super Object> params)\n-            throws IOException {\n-        Log.verbose(MessageFormat.format(I18N.getString(\n-                \"message.preparing-info-plist\"), file.toAbsolutePath()));\n-\n-        \/\/prepare config for exe\n-        \/\/Note: do not need CFBundleDisplayName if we don't support localization\n-        Map<String, String> data = new HashMap<>();\n-        data.put(\"DEPLOY_ICON_FILE\", APP_NAME.fetchFrom(params) + \".icns\");\n-        data.put(\"DEPLOY_BUNDLE_IDENTIFIER\",\n-                MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params));\n-        data.put(\"DEPLOY_BUNDLE_NAME\",\n-                getBundleName(params));\n-        data.put(\"DEPLOY_BUNDLE_COPYRIGHT\", COPYRIGHT.fetchFrom(params));\n-        data.put(\"DEPLOY_LAUNCHER_NAME\", getLauncherName(params));\n-        data.put(\"DEPLOY_BUNDLE_SHORT_VERSION\", VERSION.fetchFrom(params));\n-        data.put(\"DEPLOY_BUNDLE_CFBUNDLE_VERSION\", VERSION.fetchFrom(params));\n-        data.put(\"DEPLOY_APP_CATEGORY\", \"public.app-category.\" +\n-                APP_CATEGORY.fetchFrom(params));\n-\n-        StringBuilder bundleDocumentTypes = new StringBuilder();\n-        StringBuilder exportedTypes = new StringBuilder();\n-        for (Map<String, ? super Object>\n-                fileAssociation : FILE_ASSOCIATIONS.fetchFrom(params)) {\n-\n-            List<String> extensions = FA_EXTENSIONS.fetchFrom(fileAssociation);\n-            if (extensions == null) {\n-                Log.verbose(I18N.getString(\n-                        \"message.creating-association-with-null-extension\"));\n-            }\n-\n-            String itemContentType = MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params)\n-                    + \".\" + ((extensions == null || extensions.isEmpty())\n-                    ? \"mime\" : extensions.get(0));\n-            String description = FA_DESCRIPTION.fetchFrom(fileAssociation);\n-            Path icon = FA_ICON.fetchFrom(fileAssociation);\n-\n-            bundleDocumentTypes.append(\" <dict>\\n\");\n-            writeStringArrayPlist(bundleDocumentTypes, \"LSItemContentTypes\",\n-                    Arrays.asList(itemContentType));\n-            writeStringPlist(bundleDocumentTypes, \"CFBundleTypeName\", description);\n-            writeStringPlist(bundleDocumentTypes, \"LSHandlerRank\",\n-                    FA_MAC_LSHANDLERRANK.fetchFrom(fileAssociation));\n-            writeStringPlist(bundleDocumentTypes, \"CFBundleTypeRole\",\n-                    FA_MAC_CFBUNDLETYPEROLE.fetchFrom(fileAssociation));\n-            writeStringPlist(bundleDocumentTypes, \"NSPersistentStoreTypeKey\",\n-                    FA_MAC_NSSTORETYPEKEY.fetchFrom(fileAssociation));\n-            writeStringPlist(bundleDocumentTypes, \"NSDocumentClass\",\n-                    FA_MAC_NSDOCUMENTCLASS.fetchFrom(fileAssociation));\n-            writeBoolPlist(bundleDocumentTypes, \"LSIsAppleDefaultForType\",\n-                    \"true\");\n-            writeBoolPlist(bundleDocumentTypes, \"LSTypeIsPackage\",\n-                    FA_MAC_LSTYPEISPACKAGE.fetchFrom(fileAssociation));\n-            writeBoolPlist(bundleDocumentTypes, \"LSSupportsOpeningDocumentsInPlace\",\n-                    FA_MAC_LSDOCINPLACE.fetchFrom(fileAssociation));\n-            writeBoolPlist(bundleDocumentTypes, \"UISupportsDocumentBrowser\",\n-                    FA_MAC_UIDOCBROWSER.fetchFrom(fileAssociation));\n-            if (IOUtils.exists(icon)) {\n-                writeStringPlist(bundleDocumentTypes, \"CFBundleTypeIconFile\",\n-                        icon.getFileName().toString());\n-            }\n-            bundleDocumentTypes.append(\"  <\/dict>\\n\");\n-\n-            exportedTypes.append(\"  <dict>\\n\");\n-            writeStringPlist(exportedTypes, \"UTTypeIdentifier\",\n-                    itemContentType);\n-            writeStringPlist(exportedTypes, \"UTTypeDescription\",\n-                    description);\n-            writeStringArrayPlist(exportedTypes, \"UTTypeConformsTo\",\n-                    FA_MAC_UTTYPECONFORMSTO.fetchFrom(fileAssociation));\n-\n-            if (IOUtils.exists(icon)) {\n-                writeStringPlist(exportedTypes, \"UTTypeIconFile\",\n-                        icon.getFileName().toString());\n-            }\n-            exportedTypes.append(\"\\n\")\n-                    .append(\"  <key>UTTypeTagSpecification<\/key>\\n\")\n-                    .append(\"  <dict>\\n\")\n-                    .append(\"\\n\");\n-            writeStringArrayPlist(exportedTypes, \"public.filename-extension\",\n-                    extensions);\n-            writeStringArrayPlist(exportedTypes, \"public.mime-type\",\n-                    FA_CONTENT_TYPE.fetchFrom(fileAssociation));\n-            writeStringArrayPlist(exportedTypes, \"NSExportableTypes\",\n-                    FA_MAC_NSEXPORTABLETYPES.fetchFrom(fileAssociation));\n-            exportedTypes.append(\"  <\/dict>\\n\").append(\" <\/dict>\\n\");\n-        }\n-        String associationData;\n-        if (bundleDocumentTypes.length() > 0) {\n-            associationData =\n-                    \"\\n  <key>CFBundleDocumentTypes<\/key>\\n  <array>\\n\"\n-                    + bundleDocumentTypes.toString()\n-                    + \"  <\/array>\\n\\n\"\n-                    + \"  <key>UTExportedTypeDeclarations<\/key>\\n  <array>\\n\"\n-                    + exportedTypes.toString()\n-                    + \"  <\/array>\\n\";\n-        } else {\n-            associationData = \"\";\n-        }\n-        data.put(\"DEPLOY_FILE_ASSOCIATIONS\", associationData);\n-\n-        createResource(TEMPLATE_INFO_PLIST_LITE, params)\n-                .setCategory(I18N.getString(\"resource.app-info-plist\"))\n-                .setSubstitutionData(data)\n-                .setPublicName(\"Info.plist\")\n-                .saveToFile(file);\n-    }\n-\n-    private void writePkgInfo(Path file) throws IOException {\n-        \/\/hardcoded as it does not seem we need to change it ever\n-        String signature = \"????\";\n-\n-        try (Writer out = Files.newBufferedWriter(file)) {\n-            out.write(OS_TYPE_CODE + signature);\n-            out.flush();\n-        }\n-    }\n-\n-    public static void addNewKeychain(Map<String, ? super Object> params)\n-                                    throws IOException, InterruptedException {\n-        if (OSVersion.current().compareTo(new OSVersion(10, 12)) < 0) {\n-            \/\/ we need this for OS X 10.12+\n-            return;\n-        }\n-\n-        String keyChain = SIGNING_KEYCHAIN.fetchFrom(params);\n-        if (keyChain == null || keyChain.isEmpty()) {\n-            return;\n-        }\n-\n-        \/\/ get current keychain list\n-        String keyChainPath = Path.of(keyChain).toAbsolutePath().toString();\n-        List<String> keychainList = new ArrayList<>();\n-        int ret = IOUtils.getProcessOutput(\n-                keychainList, \"security\", \"list-keychains\");\n-        if (ret != 0) {\n-            Log.error(I18N.getString(\"message.keychain.error\"));\n-            return;\n-        }\n-        boolean contains = keychainList.stream().anyMatch(\n-                    str -> str.trim().equals(\"\\\"\"+keyChainPath.trim()+\"\\\"\"));\n-        if (contains) {\n-            \/\/ keychain is already added in the search list\n-            return;\n-        }\n-\n-        keyChains = new ArrayList<>();\n-        \/\/ remove \"\n-        keychainList.forEach((String s) -> {\n-            String path = s.trim();\n-            if (path.startsWith(\"\\\"\") && path.endsWith(\"\\\"\")) {\n-                path = path.substring(1, path.length()-1);\n-            }\n-            if (!keyChains.contains(path)) {\n-                keyChains.add(path);\n-            }\n-        });\n-\n-        List<String> args = new ArrayList<>();\n-        args.add(\"\/usr\/bin\/security\");\n-        args.add(\"list-keychains\");\n-        args.add(\"-s\");\n-\n-        args.addAll(keyChains);\n-        args.add(keyChain);\n-\n-        ProcessBuilder  pb = new ProcessBuilder(args);\n-        IOUtils.exec(pb);\n-    }\n-\n-    public static void restoreKeychainList(Map<String, ? super Object> params)\n-            throws IOException{\n-        if (OSVersion.current().compareTo(new OSVersion(10, 12)) < 0) {\n-            \/\/ we need this for OS X 10.12+\n-            return;\n-        }\n-\n-        if (keyChains == null || keyChains.isEmpty()) {\n-            return;\n-        }\n-\n-        List<String> args = new ArrayList<>();\n-        args.add(\"\/usr\/bin\/security\");\n-        args.add(\"list-keychains\");\n-        args.add(\"-s\");\n-\n-        args.addAll(keyChains);\n-\n-        ProcessBuilder  pb = new ProcessBuilder(args);\n-        IOUtils.exec(pb);\n-    }\n-\n-    private static List<String> getCodesignArgs(\n-            boolean force, Path path, String signingIdentity,\n-            String identifierPrefix, Path entitlements, String keyChain) {\n-        List<String> args = new ArrayList<>();\n-        args.addAll(Arrays.asList(\"\/usr\/bin\/codesign\",\n-                    \"-s\", signingIdentity,\n-                    \"-vvvv\"));\n-\n-        if (!signingIdentity.equals(\"-\")) {\n-            args.addAll(Arrays.asList(\"--timestamp\",\n-                    \"--options\", \"runtime\",\n-                    \"--prefix\", identifierPrefix));\n-            if (keyChain != null && !keyChain.isEmpty()) {\n-                args.add(\"--keychain\");\n-                args.add(keyChain);\n-            }\n-            if (Files.isExecutable(path)) {\n-                if (entitlements != null) {\n-                    args.add(\"--entitlements\");\n-                    args.add(entitlements.toString());\n-                }\n-            }\n-        }\n-\n-        if (force) {\n-            args.add(\"--force\");\n-        }\n-\n-        args.add(path.toString());\n-\n-        return args;\n-    }\n-\n-    private static void runCodesign(\n-            ProcessBuilder pb, boolean quiet, Map<String, ? super Object> params)\n-            throws IOException {\n-        try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-             PrintStream ps = new PrintStream(baos)) {\n-            try {\n-            IOUtils.exec(pb, false, ps, false,\n-                         Executor.INFINITE_TIMEOUT, quiet);\n-            } catch (IOException ioe) {\n-                \/\/ Log output of \"codesign\" in case of error. It should help\n-                \/\/ user to diagnose issues when using --mac-app-image-sign-identity.\n-                \/\/ In addition add possible reason for failure. For example\n-                \/\/ \"--app-content\" can fail \"codesign\".\n-\n-                \/\/ APP_CONTENT is never null.\n-                if (!APP_CONTENT.fetchFrom(params).isEmpty()) {\n-                    Log.info(I18N.getString(\n-                        \"message.codesign.failed.reason.app.content\"));\n-                }\n-\n-                \/\/ Signing might not work without Xcode with command line\n-                \/\/ developer tools. Show user if Xcode is missing as possible\n-                \/\/ reason.\n-                if (!isXcodeDevToolsInstalled()) {\n-                    Log.info(I18N.getString(\n-                        \"message.codesign.failed.reason.xcode.tools\"));\n-                }\n-\n-                \/\/ Log \"codesign\" output\n-                Log.info(MessageFormat.format(I18N.getString(\n-                         \"error.tool.failed.with.output\"), \"codesign\"));\n-                Log.info(baos.toString().strip());\n-\n-                throw ioe;\n-            }\n-        }\n-    }\n-\n-    private static boolean isXcodeDevToolsInstalled() {\n-        try {\n-            Executor.of(\"\/usr\/bin\/xcrun\", \"--help\").executeExpectSuccess();\n-        } catch (IOException e) {\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    static void signAppBundle(\n-            Map<String, ? super Object> params, Path appLocation,\n-            String signingIdentity, String identifierPrefix, Path entitlements)\n-            throws IOException {\n-        AtomicReference<IOException> toThrow = new AtomicReference<>();\n-        String appExecutable = \"\/Contents\/MacOS\/\" + APP_NAME.fetchFrom(params);\n-        String keyChain = SIGNING_KEYCHAIN.fetchFrom(params);\n-\n-        \/\/ sign all dylibs and executables\n-        try (Stream<Path> stream = Files.walk(appLocation)) {\n-            stream.peek(path -> { \/\/ fix permissions\n-                try {\n-                    Set<PosixFilePermission> pfp\n-                            = Files.getPosixFilePermissions(path);\n-                    if (!pfp.contains(PosixFilePermission.OWNER_WRITE)) {\n-                        pfp = EnumSet.copyOf(pfp);\n-                        pfp.add(PosixFilePermission.OWNER_WRITE);\n-                        Files.setPosixFilePermissions(path, pfp);\n-                    }\n-                } catch (IOException e) {\n-                    Log.verbose(e);\n-                }\n-            }).filter(p -> Files.isRegularFile(p)\n-                    && (Files.isExecutable(p) || p.toString().endsWith(\".dylib\"))\n-                    && !(p.toString().contains(\"dylib.dSYM\/Contents\"))\n-                    && !(p.toString().endsWith(appExecutable))\n-            ).forEach(p -> {\n-                \/\/ noinspection ThrowableResultOfMethodCallIgnored\n-                if (toThrow.get() != null) {\n-                    return;\n-                }\n-\n-                \/\/ If p is a symlink then skip the signing process.\n-                if (Files.isSymbolicLink(p)) {\n-                    Log.verbose(MessageFormat.format(I18N.getString(\n-                            \"message.ignoring.symlink\"), p.toString()));\n-                } else {\n-                    \/\/ unsign everything before signing\n-                    List<String> args = new ArrayList<>();\n-                    args.addAll(Arrays.asList(\"\/usr\/bin\/codesign\",\n-                            \"--remove-signature\", p.toString()));\n-                    try {\n-                        Set<PosixFilePermission> oldPermissions =\n-                                Files.getPosixFilePermissions(p);\n-                        p.toFile().setWritable(true, true);\n-                        ProcessBuilder pb = new ProcessBuilder(args);\n-                        \/\/ run quietly\n-                        IOUtils.exec(pb, false, null, false,\n-                                Executor.INFINITE_TIMEOUT, true);\n-                        Files.setPosixFilePermissions(p, oldPermissions);\n-                    } catch (IOException ioe) {\n-                        Log.verbose(ioe);\n-                        toThrow.set(ioe);\n-                        return;\n-                    }\n-\n-                    \/\/ Sign only if we have identity\n-                    if (signingIdentity != null) {\n-                        args = getCodesignArgs(false, p, signingIdentity,\n-                                identifierPrefix, entitlements, keyChain);\n-                        try {\n-                            Set<PosixFilePermission> oldPermissions\n-                                    = Files.getPosixFilePermissions(p);\n-                            p.toFile().setWritable(true, true);\n-                            ProcessBuilder pb = new ProcessBuilder(args);\n-                            \/\/ run quietly\n-                            runCodesign(pb, true, params);\n-                            Files.setPosixFilePermissions(p, oldPermissions);\n-                        } catch (IOException ioe) {\n-                            toThrow.set(ioe);\n-                        }\n-                    }\n-                }\n-            });\n-        }\n-        IOException ioe = toThrow.get();\n-        if (ioe != null) {\n-            throw ioe;\n-        }\n-\n-        \/\/ We cannot continue signing without identity\n-        if (signingIdentity == null) {\n-            return;\n-        }\n-\n-        \/\/ sign all runtime and frameworks\n-        Consumer<? super Path> signIdentifiedByPList = path -> {\n-            \/\/noinspection ThrowableResultOfMethodCallIgnored\n-            if (toThrow.get() != null) return;\n-\n-            try {\n-                List<String> args = getCodesignArgs(true, path, signingIdentity,\n-                            identifierPrefix, entitlements, keyChain);\n-                ProcessBuilder pb = new ProcessBuilder(args);\n-                runCodesign(pb, false, params);\n-            } catch (IOException e) {\n-                toThrow.set(e);\n-            }\n-        };\n-\n-        Path javaPath = appLocation.resolve(\"Contents\/runtime\");\n-        if (Files.isDirectory(javaPath)) {\n-            signIdentifiedByPList.accept(javaPath);\n-\n-            ioe = toThrow.get();\n-            if (ioe != null) {\n-                throw ioe;\n-            }\n-        }\n-        Path frameworkPath = appLocation.resolve(\"Contents\/Frameworks\");\n-        if (Files.isDirectory(frameworkPath)) {\n-            try (var fileList = Files.list(frameworkPath)) {\n-                fileList.forEach(signIdentifiedByPList);\n-            }\n-\n-            ioe = toThrow.get();\n-            if (ioe != null) {\n-                throw ioe;\n-            }\n-        }\n-\n-        \/\/ sign the app itself\n-        List<String> args = getCodesignArgs(true, appLocation, signingIdentity,\n-                identifierPrefix, entitlements, keyChain);\n-        ProcessBuilder pb = new ProcessBuilder(args);\n-        runCodesign(pb, false, params);\n-    }\n-\n-    private static String extractBundleIdentifier(Map<String, Object> params) {\n-        if (PREDEFINED_APP_IMAGE.fetchFrom(params) == null) {\n-            return null;\n-        }\n-\n-        try {\n-            Path infoPList = PREDEFINED_APP_IMAGE.fetchFrom(params).resolve(\"Contents\").\n-                    resolve(\"Info.plist\");\n-\n-            DocumentBuilderFactory dbf\n-                    = DocumentBuilderFactory.newDefaultInstance();\n-            dbf.setFeature(\"http:\/\/apache.org\/xml\/features\/\" +\n-                           \"nonvalidating\/load-external-dtd\", false);\n-            DocumentBuilder b = dbf.newDocumentBuilder();\n-            org.w3c.dom.Document doc = b.parse(Files.newInputStream(infoPList));\n-\n-            XPath xPath = XPathFactory.newInstance().newXPath();\n-            \/\/ Query for the value of <string> element preceding <key>\n-            \/\/ element with value equal to CFBundleIdentifier\n-            String v = (String) xPath.evaluate(\n-                    \"\/\/string[preceding-sibling::key = \\\"CFBundleIdentifier\\\"][1]\",\n-                    doc, XPathConstants.STRING);\n-\n-            if (v != null && !v.isEmpty()) {\n-                return v;\n-            }\n-        } catch (Exception ex) {\n-            Log.verbose(ex);\n-        }\n-\n-        return null;\n-    }\n-}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppImageBuilder.java","additions":0,"deletions":942,"binary":false,"changes":942,"status":"deleted"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.AppImageFile.getBooleanExtraFieldValue;\n+\n+import jdk.jpackage.internal.model.MacApplication.ExtraAppImageFileField;\n+\n+record MacAppImageFileExtras(boolean signed, boolean appStore) {\n+\n+    MacAppImageFileExtras(AppImageFile appImageFile) {\n+        this(getBooleanExtraFieldValue(ExtraAppImageFileField.SIGNED.fieldName(), appImageFile),\n+                getBooleanExtraFieldValue(ExtraAppImageFileField.APP_STORE.fieldName(), appImageFile));\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppImageFileExtras.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,236 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.MacApplication;\n+import jdk.jpackage.internal.model.MacApplicationMixin;\n+import jdk.jpackage.internal.model.AppImageSigningConfig;\n+\n+final class MacApplicationBuilder {\n+\n+    MacApplicationBuilder(Application app) {\n+        this.app = Objects.requireNonNull(app);\n+    }\n+\n+    private MacApplicationBuilder(MacApplicationBuilder other) {\n+        this(other.app);\n+        icon = other.icon;\n+        bundleName = other.bundleName;\n+        bundleIdentifier = other.bundleIdentifier;\n+        category = other.category;\n+        appStore = other.appStore;\n+        externalInfoPlistFile = other.externalInfoPlistFile;\n+        signingBuilder = other.signingBuilder;\n+    }\n+\n+    MacApplicationBuilder icon(Path v) {\n+        icon = v;\n+        return this;\n+    }\n+\n+    MacApplicationBuilder bundleName(String v) {\n+        bundleName = v;\n+        return this;\n+    }\n+\n+    MacApplicationBuilder bundleIdentifier(String v) {\n+        bundleIdentifier = v;\n+        return this;\n+    }\n+\n+    MacApplicationBuilder category(String v) {\n+        category = v;\n+        return this;\n+    }\n+\n+    MacApplicationBuilder appStore(boolean v) {\n+        appStore = v;\n+        return this;\n+    }\n+\n+    MacApplicationBuilder externalInfoPlistFile(Path v) {\n+        externalInfoPlistFile = v;\n+        return this;\n+    }\n+\n+    MacApplicationBuilder signingBuilder(AppImageSigningConfigBuilder v) {\n+        signingBuilder = v;\n+        return this;\n+    }\n+\n+    MacApplication create() throws ConfigException {\n+        if (externalInfoPlistFile != null) {\n+            return createCopyForExternalInfoPlistFile().create();\n+        }\n+\n+        validateAppVersion(app);\n+\n+        final var mixin = new MacApplicationMixin.Stub(validatedIcon(), validatedBundleName(),\n+                validatedBundleIdentifier(), validatedCategory(), appStore, createSigningConfig());\n+\n+        return MacApplication.create(app, mixin);\n+    }\n+\n+    static boolean isValidBundleIdentifier(String id) {\n+        for (int i = 0; i < id.length(); i++) {\n+            char a = id.charAt(i);\n+            \/\/ We check for ASCII codes first which we accept. If check fails,\n+            \/\/ check if it is acceptable extended ASCII or unicode character.\n+            if ((a >= 'A' && a <= 'Z') || (a >= 'a' && a <= 'z')\n+                    || (a >= '0' && a <= '9') || (a == '-' || a == '.')) {\n+                continue;\n+            }\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    private static void validateAppVersion(Application app) throws ConfigException {\n+        try {\n+            CFBundleVersion.of(app.version());\n+        } catch (IllegalArgumentException ex) {\n+            throw I18N.buildConfigException(ex).advice(\"error.invalid-cfbundle-version.advice\").create();\n+        }\n+    }\n+\n+    private MacApplicationBuilder createCopyForExternalInfoPlistFile() throws ConfigException {\n+        try {\n+            final var plistFile = AppImageInfoPListFile.loadFromInfoPList(externalInfoPlistFile);\n+\n+            final var builder = new MacApplicationBuilder(this);\n+\n+            builder.externalInfoPlistFile(null);\n+\n+            if (builder.bundleName == null) {\n+                builder.bundleName(plistFile.bundleName());\n+            }\n+\n+            if (builder.bundleIdentifier == null) {\n+                builder.bundleIdentifier(plistFile.bundleIdentifier());\n+            }\n+\n+            if (builder.category == null) {\n+                builder.category(plistFile.category());\n+            }\n+\n+            return builder;\n+        } catch (IOException ex) {\n+            throw new UncheckedIOException(ex);\n+        } catch (Exception ex) {\n+            throw I18N.buildConfigException(\"message.app-image-requires-identifier\")\n+                    .advice(\"message.app-image-requires-identifier.advice\")\n+                    .cause(ex)\n+                    .create();\n+        }\n+    }\n+\n+    private Optional<AppImageSigningConfig> createSigningConfig() throws ConfigException {\n+        if (signingBuilder != null) {\n+            return signingBuilder.create();\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    private String validatedBundleName() throws ConfigException {\n+        final var value = Optional.ofNullable(bundleName).orElseGet(() -> {\n+            final var appName = app.name();\n+\/\/ Commented out for backward compatibility\n+\/\/            if (appName.length() > MAX_BUNDLE_NAME_LENGTH) {\n+\/\/                return appName.substring(0, MAX_BUNDLE_NAME_LENGTH);\n+\/\/            } else {\n+\/\/                return appName;\n+\/\/            }\n+            return appName;\n+        });\n+\n+        if (value.length() > MAX_BUNDLE_NAME_LENGTH && (bundleName != null)) {\n+            Log.error(I18N.format(\"message.bundle-name-too-long-warning\", \"--mac-package-name\", value));\n+        }\n+\n+        return value;\n+    }\n+\n+    private String validatedBundleIdentifier() throws ConfigException {\n+        final var value = Optional.ofNullable(bundleIdentifier).orElseGet(() -> {\n+            return app.mainLauncher()\n+                    .flatMap(Launcher::startupInfo)\n+                    .map(li -> {\n+                        final var packageName = li.packageName();\n+                        if (packageName.isEmpty()) {\n+                            return li.simpleClassName();\n+                        } else {\n+                            return packageName;\n+                        }\n+                    })\n+                    .orElseGet(app::name);\n+        });\n+\n+        if (!isValidBundleIdentifier(value)) {\n+            throw I18N.buildConfigException(\"message.invalid-identifier\", value)\n+                    .advice(\"message.invalid-identifier.advice\")\n+                    .create();\n+        }\n+\n+        return value;\n+    }\n+\n+    private String validatedCategory() throws ConfigException {\n+        return \"public.app-category.\" + Optional.ofNullable(category).orElseGet(DEFAULTS::category);\n+    }\n+\n+    private Optional<Path> validatedIcon() throws ConfigException {\n+        if (icon != null) {\n+            LauncherBuilder.validateIcon(icon);\n+        }\n+\n+        return Optional.ofNullable(icon);\n+    }\n+\n+    private record Defaults(String category) {\n+    }\n+\n+    private Path icon;\n+    private String bundleName;\n+    private String bundleIdentifier;\n+    private String category;\n+    private boolean appStore;\n+    private Path externalInfoPlistFile;\n+    private AppImageSigningConfigBuilder signingBuilder;\n+\n+    private final Application app;\n+\n+    private static final Defaults DEFAULTS = new Defaults(\"utilities\");\n+\n+    private static final int MAX_BUNDLE_NAME_LENGTH = 16;\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacApplicationBuilder.java","additions":236,"deletions":0,"binary":false,"changes":236,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.util.PathUtils.resolveNullablePath;\n+\n+import java.nio.file.Path;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+interface MacApplicationLayout extends ApplicationLayout, MacApplicationLayoutMixin {\n+\n+    static MacApplicationLayout create(ApplicationLayout layout, Path runtimeRootDir) {\n+        return CompositeProxy.build()\n+                .invokeTunnel(CompositeProxyTunnel.INSTANCE)\n+                .create(MacApplicationLayout.class, layout, new MacApplicationLayoutMixin.Stub(runtimeRootDir));\n+    }\n+\n+    @Override\n+    default MacApplicationLayout resolveAt(Path root) {\n+        return create(ApplicationLayout.super.resolveAt(root),\n+                resolveNullablePath(root, runtimeRootDirectory()));\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacApplicationLayout.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+\n+\/\/ Must be publc to allow access from AppImageLayout.toPathGroup()\n+public interface MacApplicationLayoutMixin {\n+\n+    \/**\n+     * Path to the root Java runtime directory in the application image.\n+     * The root Java runtime directory should have \"Contents\/Home\" subdirectory.\n+     *\/\n+    Path runtimeRootDirectory();\n+\n+    record Stub(Path runtimeRootDirectory) implements MacApplicationLayoutMixin {}\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacApplicationLayoutMixin.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -28,1 +28,4 @@\n-import java.io.IOException;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n+\n@@ -30,1 +33,0 @@\n-import java.nio.file.LinkOption;\n@@ -35,7 +37,0 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.INSTALLER_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n-import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n-\n@@ -43,2 +38,0 @@\n-import jdk.jpackage.internal.model.PackagerException;\n-import jdk.jpackage.internal.util.FileUtils;\n@@ -48,90 +41,0 @@\n-    private final BundlerParamInfo<Path> APP_IMAGE_TEMP_ROOT =\n-            new StandardBundlerParam<>(\n-            \"mac.app.imageRoot\",\n-            Path.class,\n-            params -> {\n-                Path imageDir = IMAGES_ROOT.fetchFrom(params);\n-                try {\n-                    if (!IOUtils.exists(imageDir)) {\n-                        Files.createDirectories(imageDir);\n-                    }\n-                    return Files.createTempDirectory(\n-                            imageDir, \"image-\");\n-                } catch (IOException e) {\n-                    return imageDir.resolve(getID()+ \".image\");\n-                }\n-            },\n-            (s, p) -> Path.of(s));\n-\n-    public static final BundlerParamInfo<String> SIGNING_KEY_USER =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.MAC_SIGNING_KEY_NAME.getId(),\n-            String.class,\n-            params -> \"\",\n-            null);\n-\n-    public static final BundlerParamInfo<String> SIGNING_KEYCHAIN =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.MAC_SIGNING_KEYCHAIN.getId(),\n-            String.class,\n-            params -> \"\",\n-            null);\n-\n-    public static final BundlerParamInfo<String> INSTALLER_SIGN_IDENTITY =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.MAC_INSTALLER_SIGN_IDENTITY.getId(),\n-            String.class,\n-            params -> \"\",\n-            null);\n-\n-    public static final BundlerParamInfo<String> MAC_INSTALLER_NAME =\n-            new StandardBundlerParam<> (\n-            \"mac.installerName\",\n-            String.class,\n-            params -> {\n-                String nm = INSTALLER_NAME.fetchFrom(params);\n-                if (nm == null) return null;\n-\n-                String version = VERSION.fetchFrom(params);\n-                if (version == null) {\n-                    return nm;\n-                } else {\n-                    return nm + \"-\" + version;\n-                }\n-            },\n-            (s, p) -> s);\n-\n-     \/\/ Returns full path to installation directory\n-     static String getInstallDir(\n-            Map<String, ? super Object>  params, boolean defaultOnly) {\n-        String returnValue = INSTALL_DIR.fetchFrom(params);\n-\n-        final String defaultInstallDir;\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-            defaultInstallDir = \"\/Library\/Java\/JavaVirtualMachines\";\n-        } else {\n-            defaultInstallDir = \"\/Applications\";\n-        }\n-\n-        if (defaultOnly && returnValue != null && !Path.of(returnValue).equals(Path.of(defaultInstallDir))) {\n-            Log.info(MessageFormat.format(I18N.getString(\"message.install-dir-ignored\"), defaultInstallDir));\n-            returnValue = null;\n-        }\n-        if (returnValue == null) {\n-            returnValue = defaultInstallDir;\n-        }\n-        return returnValue;\n-    }\n-\n-    \/\/ Returns display name of installation directory. Display name is used to\n-    \/\/ show user installation location and for well known (default only) we will\n-    \/\/ use \"Applications\" or \"JavaVirtualMachines\".\n-    static String getInstallDirDisplayName(\n-            Map<String, ? super Object>  params) {\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-            return \"JavaVirtualMachines\";\n-        } else {\n-            return \"Applications\";\n-        }\n-    }\n-\n@@ -139,2 +42,1 @@\n-        appImageBundler = new MacAppBundler()\n-                .setDependentTask(true);\n+        appImageBundler = new MacAppBundler();\n@@ -147,1 +49,2 @@\n-            if (AppImageFile.load(applicationImage).isSigned()) {\n+            if (new MacAppImageFileExtras(PREDEFINED_APP_IMAGE_FILE.fetchFrom(params)).signed()) {\n+                var appLayout = ApplicationLayoutUtils.PLATFORM_APPLICATION_LAYOUT.resolveAt(applicationImage);\n@@ -149,1 +52,1 @@\n-                        PackageFile.getPathInAppImage(applicationImage))) {\n+                        PackageFile.getPathInAppImage(appLayout))) {\n@@ -152,1 +55,1 @@\n-                            PackageFile.getPathInAppImage(applicationImage)));\n+                            PackageFile.getPathInAppImage(appLayout)));\n@@ -168,30 +71,0 @@\n-    protected Path prepareAppBundle(Map<String, ? super Object> params)\n-            throws PackagerException, IOException {\n-        Path appDir;\n-        Path appImageRoot = APP_IMAGE_TEMP_ROOT.fetchFrom(params);\n-        Path predefinedImage =\n-                StandardBundlerParam.getPredefinedAppImage(params);\n-        if (predefinedImage != null) {\n-            appDir = appImageRoot.resolve(APP_NAME.fetchFrom(params) + \".app\");\n-            FileUtils.copyRecursive(predefinedImage, appDir,\n-                    LinkOption.NOFOLLOW_LINKS);\n-\n-            \/\/ Alter app image if predefined app image is not signed\n-            if (!AppImageFile.load(predefinedImage).isSigned()) {\n-                new PackageFile(APP_NAME.fetchFrom(params)).save(\n-                        ApplicationLayout.macAppImage().resolveAt(appDir));\n-                Files.deleteIfExists(AppImageFile.getPathInAppImage(appDir));\n-                \/\/ We need to re-sign app image after adding \".package\" to it.\n-                \/\/ We only do this if app image was not signed which means it is\n-                \/\/ signed with ad-hoc signature. App bundles with ad-hoc\n-                \/\/ signature are sealed, but without a signing identity, so we\n-                \/\/ need to re-sign it after modification.\n-                MacAppImageBuilder.signAppBundle(params, appDir, \"-\", null, null);\n-            }\n-        } else {\n-            appDir = appImageBundler.execute(params, appImageRoot);\n-        }\n-\n-        return appDir;\n-    }\n-\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacBaseInstallerBundler.java","additions":9,"deletions":136,"binary":false,"changes":145,"status":"modified"},{"patch":"@@ -1,335 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.jpackage.internal;\n-\n-import java.io.ByteArrayInputStream;\n-import java.io.ByteArrayOutputStream;\n-import java.io.IOException;\n-import java.io.PrintStream;\n-import java.nio.file.StandardCopyOption;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.text.DateFormat;\n-import java.text.MessageFormat;\n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n-import java.util.Calendar;\n-import java.util.Date;\n-import java.util.HexFormat;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Objects;\n-import java.util.Optional;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-\n-public final class MacCertificate {\n-    private final String certificate;\n-    private final Optional<String> keychainName;\n-\n-    public MacCertificate(String certificate, String keychainName) {\n-        this.certificate = Objects.requireNonNull(certificate);\n-        this.keychainName = Optional.ofNullable(keychainName);\n-    }\n-\n-    public boolean isValid() {\n-        return verifyCertificate();\n-    }\n-\n-    public static String findCertificateKey(String keyPrefix, String teamName,\n-                                            String keychainName) {\n-\n-        String matchedKey = null;\n-        boolean useAsIs = (keyPrefix == null)\n-                || teamName.startsWith(keyPrefix)\n-                || teamName.startsWith(\"Developer ID\")\n-                || teamName.startsWith(\"3rd Party Mac\");\n-\n-        String name = (useAsIs) ? teamName : (keyPrefix + teamName);\n-\n-        String output = getFindCertificateOutput(name, keychainName);\n-        if (output == null) {\n-            Log.error(MessageFormat.format(I18N.getString(\n-                        \"error.cert.not.found\"), name, keychainName));\n-            return null;\n-        }\n-\n-        \/\/ Check and warn user if multiple certificates found\n-        \/\/ We will use different regex to count certificates.\n-        \/\/ ASCII case: \"alis\"<blob>=\"NAME\"\n-        \/\/ UNICODE case: \"alis\"<blob>=0xSOMEHEXDIGITS  \"NAME (\\SOMEDIGITS)\"\n-        \/\/ In UNICODE case name will contain octal sequence representing UTF-8\n-        \/\/ characters.\n-        \/\/ Just look for at least two '\"alis\"<blob>'.\n-        Pattern p = Pattern.compile(\"\\\"alis\\\"<blob>\");\n-        Matcher m = p.matcher(output);\n-        if (m.find() && m.find()) {\n-            Log.error(MessageFormat.format(I18N.getString(\n-                        \"error.multiple.certs.found\"), name, keychainName));\n-        }\n-\n-        \/\/ Try to get ASCII only certificate first. This aproach only works\n-        \/\/ if certificate name has ASCII only characters in name. For certificates\n-        \/\/ with UNICODE characters in name we will use combination of \"security\"\n-        \/\/ and \"openssl\". We keeping ASCII only aproach to avoid regressions and\n-        \/\/ it works for many use cases.\n-        p = Pattern.compile(\"\\\"alis\\\"<blob>=\\\"([^\\\"]+)\\\"\");\n-        m = p.matcher(output);\n-        if (m.find()) {\n-            matchedKey = m.group(1);;\n-        }\n-\n-        \/\/ Maybe it has UNICODE characters in name. In this case use \"security\"\n-        \/\/ and \"openssl\" to exctract name. We cannot use just \"security\", since\n-        \/\/ name can be truncated.\n-        if (matchedKey == null) {\n-            Path  file = null;\n-            try {\n-                file = getFindCertificateOutputPEM(name, keychainName);\n-                if (file != null) {\n-                    matchedKey = findCertificateSubject(\n-                                    file.toFile().getCanonicalPath());\n-                }\n-            } catch (IOException ioe) {\n-                Log.verbose(ioe);\n-            } finally {\n-                try {\n-                    Files.deleteIfExists(file);\n-                } catch (IOException ignored) {}\n-            }\n-        }\n-\n-        if (matchedKey == null) {\n-            Log.error(MessageFormat.format(I18N.getString(\n-                \"error.cert.not.found\"), name, keychainName));\n-        }\n-\n-        return matchedKey;\n-    }\n-\n-    private static String getFindCertificateOutput(String name,\n-                                                   String keychainName) {\n-        try (ByteArrayOutputStream baos = getFindCertificateOutput(name,\n-                                                                   keychainName,\n-                                                                   false)) {\n-            if (baos != null) {\n-                return baos.toString();\n-            }\n-        } catch (IOException ioe) {\n-            Log.verbose(ioe);\n-        }\n-\n-        return null;\n-    }\n-\n-    private static Path getFindCertificateOutputPEM(String name,\n-                                                    String keychainName) {\n-        Path output = null;\n-        try (ByteArrayOutputStream baos = getFindCertificateOutput(name,\n-                                                                   keychainName,\n-                                                                   true)) {\n-            if (baos != null) {\n-                output = Files.createTempFile(\"tempfile\", \".tmp\");\n-                Files.copy(new ByteArrayInputStream(baos.toByteArray()),\n-                        output, StandardCopyOption.REPLACE_EXISTING);\n-                return output;\n-            }\n-        } catch (IOException ioe) {\n-            Log.verbose(ioe);\n-            try {\n-                Files.deleteIfExists(output);\n-            } catch (IOException ignored) {}\n-        }\n-\n-        return null;\n-    }\n-\n-    private static ByteArrayOutputStream getFindCertificateOutput(String name,\n-                                                                  String keychainName,\n-                                                                  boolean isPEMFormat) {\n-        List<String> args = new ArrayList<>();\n-        args.add(\"\/usr\/bin\/security\");\n-        args.add(\"find-certificate\");\n-        args.add(\"-c\");\n-        args.add(name);\n-        args.add(\"-a\");\n-        if (isPEMFormat) {\n-            args.add(\"-p\");\n-        }\n-        if (keychainName != null && !keychainName.isEmpty()) {\n-            args.add(keychainName);\n-        }\n-\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-        try (PrintStream ps = new PrintStream(baos)) {\n-            ProcessBuilder pb = new ProcessBuilder(args);\n-            IOUtils.exec(pb, false, ps);\n-            return baos;\n-        } catch (IOException ioe) {\n-            Log.verbose(ioe);\n-            return null;\n-        }\n-    }\n-\n-    private static String findCertificateSubject(String filename) {\n-        String result = null;\n-\n-        List<String> args = new ArrayList<>();\n-        args.add(\"\/usr\/bin\/openssl\");\n-        args.add(\"x509\");\n-        args.add(\"-noout\");\n-        args.add(\"-subject\");\n-        args.add(\"-in\");\n-        args.add(filename);\n-\n-        try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-                PrintStream ps = new PrintStream(baos)) {\n-            ProcessBuilder security = new ProcessBuilder(args);\n-            IOUtils.exec(security, false, ps);\n-            String output = baos.toString().strip();\n-            \/\/ Example output:\n-            \/\/ subject= \/UID=ABCDABCD\/CN=jpackage.openjdk.java.net (\\xC3\\xB6) (ABCDABCD)\/C=US\n-            \/\/ We need 'CN' value\n-            String [] pairs = output.split(\"\/\");\n-            for (String pair : pairs) {\n-                if (pair.startsWith(\"CN=\")) {\n-                    result = pair.substring(3);\n-                    \/\/ Convert escaped UTF-8 code points to characters\n-                    result = convertHexToChar(result);\n-                    break;\n-                }\n-            }\n-        } catch (IOException ex) {\n-            Log.verbose(ex);\n-        }\n-\n-        return result;\n-    }\n-\n-    \/\/ Certificate name with Unicode will be:\n-    \/\/ Developer ID Application: jpackage.openjdk.java.net (\\xHH\\xHH)\n-    \/\/ Convert UTF-8 code points '\\xHH\\xHH' to character.\n-    private static String convertHexToChar(String input) {\n-        if (input == null || input.isEmpty()) {\n-            return input;\n-        }\n-\n-        if (!input.contains(\"\\\\x\")) {\n-            return input;\n-        }\n-\n-        StringBuilder output = new StringBuilder();\n-        try {\n-            int len = input.length();\n-            for (int i = 0; i < len; i++) {\n-                if (input.codePointAt(i) == '\\\\' &&\n-                    (i + 8) <= len &&\n-                    input.codePointAt(i + 1) == 'x' &&\n-                    input.codePointAt(i + 4) == '\\\\' &&\n-                    input.codePointAt(i + 5) == 'x') {\n-                        \/\/ We found '\\xHH\\xHH'\n-                        \/\/ HEX code points to byte array\n-                        byte [] bytes = HexFormat.of().parseHex(\n-                            input.substring(i + 2, i + 4) + input.substring(i + 6, i + 8));\n-                        \/\/ Byte array with UTF-8 code points to character\n-                        output.append(new String(bytes, \"UTF-8\"));\n-                        i += 7; \/\/ Skip '\\xHH\\xHH'\n-                } else {\n-                    output.appendCodePoint(input.codePointAt(i));\n-                }\n-            }\n-        } catch (Exception ex) {\n-            Log.verbose(ex);\n-            \/\/ We will consider any excpetions during conversion as\n-            \/\/ certificate not found.\n-            return null;\n-        }\n-\n-        return output.toString();\n-    }\n-\n-    private Date findCertificateDate(String filename) {\n-        Date result = null;\n-\n-        List<String> args = new ArrayList<>();\n-        args.add(\"\/usr\/bin\/openssl\");\n-        args.add(\"x509\");\n-        args.add(\"-noout\");\n-        args.add(\"-enddate\");\n-        args.add(\"-in\");\n-        args.add(filename);\n-\n-        try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-                PrintStream ps = new PrintStream(baos)) {\n-            ProcessBuilder security = new ProcessBuilder(args);\n-            IOUtils.exec(security, false, ps);\n-            String output = baos.toString();\n-            output = output.substring(output.indexOf(\"=\") + 1);\n-            DateFormat df = new SimpleDateFormat(\n-                    \"MMM dd kk:mm:ss yyyy z\", Locale.ENGLISH);\n-            result = df.parse(output);\n-        } catch (IOException | ParseException ex) {\n-            Log.verbose(ex);\n-        }\n-\n-        return result;\n-    }\n-\n-    private boolean verifyCertificate() {\n-        boolean result = false;\n-\n-        try {\n-            Path file = null;\n-            Date certificateDate = null;\n-\n-            try {\n-                file = getFindCertificateOutputPEM(certificate, keychainName.orElse(null));\n-\n-                if (file != null) {\n-                    certificateDate = findCertificateDate(\n-                            file.toFile().getCanonicalPath());\n-                }\n-            } finally {\n-                if (file != null) {\n-                    Files.deleteIfExists(file);\n-                }\n-            }\n-\n-            if (certificateDate != null) {\n-                Calendar c = Calendar.getInstance();\n-                Date today = c.getTime();\n-\n-                if (certificateDate.after(today)) {\n-                    result = true;\n-                }\n-            }\n-        }\n-        catch (IOException ignored) {}\n-\n-        return result;\n-    }\n-}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacCertificate.java","additions":0,"deletions":335,"binary":false,"changes":335,"status":"deleted"},{"patch":"@@ -0,0 +1,116 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.util.function.ThrowingSupplier.toSupplier;\n+\n+import java.io.BufferedInputStream;\n+import java.io.ByteArrayInputStream;\n+import java.nio.charset.StandardCharsets;\n+import java.security.MessageDigest;\n+import java.security.cert.CertificateException;\n+import java.security.cert.CertificateFactory;\n+import java.security.cert.X509Certificate;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HexFormat;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+public final class MacCertificateUtils {\n+\n+    public static Collection<X509Certificate> findCertificates(Optional<Keychain> keychain, Optional<String> certificateNameFilter) {\n+        List<String> args = new ArrayList<>();\n+        args.add(\"\/usr\/bin\/security\");\n+        args.add(\"find-certificate\");\n+        args.add(\"-a\");\n+        certificateNameFilter.ifPresent(filter -> args.addAll(List.of(\"-c\", filter)));\n+        args.add(\"-p\"); \/\/ PEM format\n+        keychain.map(Keychain::asCliArg).ifPresent(args::add);\n+\n+        return toSupplier(() -> {\n+            final var output = Executor.of(args.toArray(String[]::new))\n+                    .setQuiet(true).saveOutput(true).executeExpectSuccess()\n+                    .getOutput();\n+\n+            final byte[] pemCertificatesBuffer = output.stream()\n+                    .reduce(new StringBuilder(),\n+                            MacCertificateUtils::append,\n+                            MacCertificateUtils::append).toString().getBytes(StandardCharsets.US_ASCII);\n+\n+            final var cf = CertificateFactory.getInstance(\"X.509\");\n+\n+            Collection<X509Certificate> certs = new ArrayList<>();\n+\n+            try (var in = new BufferedInputStream(new ByteArrayInputStream(pemCertificatesBuffer))) {\n+                while (in.available() > 0) {\n+                    final X509Certificate cert;\n+                    try {\n+                        cert = (X509Certificate)cf.generateCertificate(in);\n+                    } catch (CertificateException ex) {\n+                        \/\/ Not a valid X505 certificate, silently ignore.\n+                        continue;\n+                    }\n+                    certs.add(cert);\n+                }\n+            }\n+            return certs;\n+        }).get();\n+    }\n+\n+    record CertificateHash(byte[] value) {\n+        CertificateHash {\n+            Objects.requireNonNull(value);\n+            if (value.length != 20) {\n+                throw new IllegalArgumentException(\"Invalid SHA-1 hash\");\n+            }\n+        }\n+\n+        static CertificateHash of(X509Certificate cert) {\n+            return new CertificateHash(toSupplier(() -> {\n+                final MessageDigest md = MessageDigest.getInstance(\"SHA-1\");\n+                md.update(cert.getEncoded());\n+                return md.digest();\n+            }).get());\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return FORMAT.formatHex(value);\n+        }\n+\n+        static CertificateHash fromHexString(String hash) {\n+            return new CertificateHash(FORMAT.parseHex(hash));\n+        }\n+\n+        private static final HexFormat FORMAT = HexFormat.of().withUpperCase();\n+    }\n+\n+    private static StringBuilder append(StringBuilder sb, Object v) {\n+        return sb.append(v).append('\\n');\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacCertificateUtils.java","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"},{"patch":"@@ -28,4 +28,0 @@\n-import java.io.BufferedReader;\n-import java.io.File;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n@@ -34,4 +30,0 @@\n-import java.text.MessageFormat;\n-import java.util.Base64;\n-import java.util.HashMap;\n-import java.util.List;\n@@ -40,12 +32,0 @@\n-import java.util.ResourceBundle;\n-import static jdk.jpackage.internal.MacAppImageBuilder.ICON_ICNS;\n-import static jdk.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERBOSE;\n-import static jdk.jpackage.internal.StandardBundlerParam.DMG_CONTENT;\n-\n@@ -54,2 +34,0 @@\n-import jdk.jpackage.internal.util.FileUtils;\n-import jdk.jpackage.internal.util.PathGroup;\n@@ -59,477 +37,0 @@\n-    private static final ResourceBundle I18N = ResourceBundle.getBundle(\n-            \"jdk.jpackage.internal.resources.MacResources\");\n-\n-    \/\/ Background image name in resources\n-    static final String DEFAULT_BACKGROUND_IMAGE = \"background_dmg.tiff\";\n-    \/\/ Background image name and folder under which it will be stored in DMG\n-    static final String BACKGROUND_IMAGE_FOLDER =\".background\";\n-    static final String BACKGROUND_IMAGE = \"background.tiff\";\n-    static final String DEFAULT_DMG_SETUP_SCRIPT = \"DMGsetup.scpt\";\n-    static final String TEMPLATE_BUNDLE_ICON = \"JavaApp.icns\";\n-\n-    static final String DEFAULT_LICENSE_PLIST=\"lic_template.plist\";\n-\n-    public Path bundle(Map<String, ? super Object> params,\n-            Path outdir) throws PackagerException {\n-        Log.verbose(MessageFormat.format(I18N.getString(\"message.building-dmg\"),\n-                APP_NAME.fetchFrom(params)));\n-\n-        IOUtils.writableOutputDir(outdir);\n-\n-        try {\n-            Path appLocation = prepareAppBundle(params);\n-\n-            if (appLocation != null && prepareConfigFiles(appLocation,params)) {\n-                new ScriptRunner()\n-                        .setDirectory(appLocation)\n-                        .setResourceCategoryId(\"resource.post-app-image-script\")\n-                        .setScriptNameSuffix(\"post-image\")\n-                        .setEnvironmentVariable(\"JpAppImageDir\", appLocation.toAbsolutePath().toString())\n-                        .run(params);\n-\n-                return buildDMG(params, appLocation, outdir);\n-            }\n-            return null;\n-        } catch (IOException | PackagerException ex) {\n-            Log.verbose(ex);\n-            throw new PackagerException(ex);\n-        }\n-    }\n-\n-    private static final String hdiutil = \"\/usr\/bin\/hdiutil\";\n-\n-    private void prepareDMGSetupScript(Path appLocation,\n-            Map<String, ? super Object> params) throws IOException {\n-        Path dmgSetup = getConfig_VolumeScript(params);\n-        Log.verbose(MessageFormat.format(\n-                I18N.getString(\"message.preparing-dmg-setup\"),\n-                dmgSetup.toAbsolutePath().toString()));\n-\n-        \/\/ We need to use URL for DMG to find it. We cannot use volume name, since\n-        \/\/ user might have open DMG with same volume name already. Url should end with\n-        \/\/ '\/' and it should be real path (no symbolic links).\n-        Path imageDir = IMAGES_ROOT.fetchFrom(params);\n-        if (!Files.exists(imageDir)) {\n-             \/\/ Create it, since it does not exist\n-             Files.createDirectories(imageDir);\n-        }\n-        Path rootPath = Path.of(imageDir.toString()).toRealPath();\n-        Path volumePath = rootPath.resolve(APP_NAME.fetchFrom(params));\n-        String volumeUrl = volumePath.toUri().toString() + File.separator;\n-\n-        \/\/ Provide full path to background image, so we can find it.\n-        Path bgFile = Path.of(rootPath.toString(), APP_NAME.fetchFrom(params),\n-                              BACKGROUND_IMAGE_FOLDER, BACKGROUND_IMAGE);\n-\n-        \/\/ Prepare DMG setup script\n-        Map<String, String> data = new HashMap<>();\n-        data.put(\"DEPLOY_VOLUME_URL\", volumeUrl);\n-        data.put(\"DEPLOY_BG_FILE\", bgFile.toString());\n-        data.put(\"DEPLOY_VOLUME_PATH\", volumePath.toString());\n-        data.put(\"DEPLOY_APPLICATION_NAME\", APP_NAME.fetchFrom(params));\n-        String targetItem = (StandardBundlerParam.isRuntimeInstaller(params)) ?\n-              APP_NAME.fetchFrom(params) : appLocation.getFileName().toString();\n-        data.put(\"DEPLOY_TARGET\", targetItem);\n-        data.put(\"DEPLOY_INSTALL_LOCATION\", getInstallDir(params, true));\n-        data.put(\"DEPLOY_INSTALL_LOCATION_DISPLAY_NAME\",\n-                getInstallDirDisplayName(params));\n-\n-        createResource(DEFAULT_DMG_SETUP_SCRIPT, params)\n-                .setCategory(I18N.getString(\"resource.dmg-setup-script\"))\n-                .setSubstitutionData(data)\n-                .saveToFile(dmgSetup);\n-    }\n-\n-    private Path getConfig_VolumeScript(Map<String, ? super Object> params) {\n-        return CONFIG_ROOT.fetchFrom(params).resolve(\n-                APP_NAME.fetchFrom(params) + \"-dmg-setup.scpt\");\n-    }\n-\n-    private Path getConfig_VolumeBackground(\n-            Map<String, ? super Object> params) {\n-        return CONFIG_ROOT.fetchFrom(params).resolve(\n-                APP_NAME.fetchFrom(params) + \"-background.tiff\");\n-    }\n-\n-    private Path getConfig_VolumeIcon(Map<String, ? super Object> params) {\n-        return CONFIG_ROOT.fetchFrom(params).resolve(\n-                APP_NAME.fetchFrom(params) + \"-volume.icns\");\n-    }\n-\n-    private Path getConfig_LicenseFile(Map<String, ? super Object> params) {\n-        return CONFIG_ROOT.fetchFrom(params).resolve(\n-                APP_NAME.fetchFrom(params) + \"-license.plist\");\n-    }\n-\n-    private void prepareLicense(Map<String, ? super Object> params) {\n-        try {\n-            String licFileStr = LICENSE_FILE.fetchFrom(params);\n-            if (licFileStr == null) {\n-                return;\n-            }\n-\n-            Path licFile = Path.of(licFileStr);\n-            byte[] licenseContentOriginal =\n-                    Files.readAllBytes(licFile);\n-            String licenseInBase64 =\n-                    Base64.getEncoder().encodeToString(licenseContentOriginal);\n-\n-            Map<String, String> data = new HashMap<>();\n-            data.put(\"APPLICATION_LICENSE_TEXT\", licenseInBase64);\n-\n-            createResource(DEFAULT_LICENSE_PLIST, params)\n-                    .setCategory(I18N.getString(\"resource.license-setup\"))\n-                    .setSubstitutionData(data)\n-                    .saveToFile(getConfig_LicenseFile(params));\n-\n-        } catch (IOException ex) {\n-            Log.verbose(ex);\n-        }\n-    }\n-\n-    private boolean prepareConfigFiles(Path appLocation,\n-            Map<String, ? super Object> params) throws IOException {\n-\n-        createResource(DEFAULT_BACKGROUND_IMAGE, params)\n-                    .setCategory(I18N.getString(\"resource.dmg-background\"))\n-                    .saveToFile(getConfig_VolumeBackground(params));\n-\n-        createResource(TEMPLATE_BUNDLE_ICON, params)\n-                .setCategory(I18N.getString(\"resource.volume-icon\"))\n-                .setExternal(ICON_ICNS.fetchFrom(params))\n-                .saveToFile(getConfig_VolumeIcon(params));\n-\n-        prepareLicense(params);\n-\n-        prepareDMGSetupScript(appLocation, params);\n-\n-        return true;\n-    }\n-\n-    \/\/ Location of SetFile utility may be different depending on MacOS version\n-    \/\/ We look for several known places and if none of them work will\n-    \/\/ try ot find it\n-    private String findSetFileUtility() {\n-        String typicalPaths[] = {\"\/Developer\/Tools\/SetFile\",\n-                \"\/usr\/bin\/SetFile\", \"\/Developer\/usr\/bin\/SetFile\"};\n-\n-        String setFilePath = null;\n-        for (String path : typicalPaths) {\n-            Path f = Path.of(path);\n-            if (Files.exists(f) && Files.isExecutable(f)) {\n-                setFilePath = path;\n-                break;\n-            }\n-        }\n-\n-        \/\/ Validate SetFile, if Xcode is not installed it will run, but exit with error\n-        \/\/ code\n-        if (setFilePath != null) {\n-            try {\n-                ProcessBuilder pb = new ProcessBuilder(setFilePath, \"-h\");\n-                Process p = pb.start();\n-                int code = p.waitFor();\n-                if (code == 0) {\n-                    return setFilePath;\n-                }\n-            } catch (Exception ignored) {}\n-\n-            \/\/ No need for generic find attempt. We found it, but it does not work.\n-            \/\/ Probably due to missing xcode.\n-            return null;\n-        }\n-\n-        \/\/ generic find attempt\n-        try {\n-            ProcessBuilder pb = new ProcessBuilder(\"\/usr\/bin\/xcrun\", \"-find\", \"SetFile\");\n-            Process p = pb.start();\n-            InputStreamReader isr = new InputStreamReader(p.getInputStream());\n-            BufferedReader br = new BufferedReader(isr);\n-            String lineRead = br.readLine();\n-            if (lineRead != null) {\n-                Path f = Path.of(lineRead);\n-                if (Files.exists(f) && Files.isExecutable(f)) {\n-                    return f.toAbsolutePath().toString();\n-                }\n-            }\n-        } catch (IOException ignored) {}\n-\n-        return null;\n-    }\n-\n-    private Path buildDMG( Map<String, ? super Object> params,\n-            Path appLocation, Path outdir) throws IOException {\n-        boolean copyAppImage = false;\n-        Path imagesRoot = IMAGES_ROOT.fetchFrom(params);\n-        if (!Files.exists(imagesRoot)) {\n-            Files.createDirectories(imagesRoot);\n-        }\n-\n-        Path protoDMG = imagesRoot.resolve(APP_NAME.fetchFrom(params)\n-                + \"-tmp.dmg\");\n-        Path finalDMG = outdir.resolve(MAC_INSTALLER_NAME.fetchFrom(params)\n-                + \".dmg\");\n-\n-        Path srcFolder = appLocation.getParent();\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-            Path newRoot = Files.createTempDirectory(TEMP_ROOT.fetchFrom(params),\n-                    \"root-\");\n-\n-            \/\/ first, is this already a runtime with\n-            \/\/ <runtime>\/Contents\/Home - if so we need the Home dir\n-            Path home = appLocation.resolve(\"Contents\/Home\");\n-            Path source = (Files.exists(home)) ? home : appLocation;\n-\n-            \/\/ Then we need to put back the <NAME>\/Content\/Home\n-            Path root = newRoot.resolve(\n-                    MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params));\n-            Path dest = root.resolve(\"Contents\/Home\");\n-\n-            FileUtils.copyRecursive(source, dest);\n-\n-            srcFolder = newRoot;\n-        }\n-\n-        Log.verbose(MessageFormat.format(I18N.getString(\n-                \"message.creating-dmg-file\"), finalDMG.toAbsolutePath()));\n-\n-        Files.deleteIfExists(protoDMG);\n-        try {\n-            Files.deleteIfExists(finalDMG);\n-        } catch (IOException ex) {\n-            throw new IOException(MessageFormat.format(I18N.getString(\n-                    \"message.dmg-cannot-be-overwritten\"),\n-                    finalDMG.toAbsolutePath()));\n-        }\n-\n-        Files.createDirectories(protoDMG.getParent());\n-        Files.createDirectories(finalDMG.getParent());\n-\n-        String hdiUtilVerbosityFlag = VERBOSE.fetchFrom(params) ?\n-                \"-verbose\" : \"-quiet\";\n-        List <String> dmgContent = DMG_CONTENT.fetchFrom(params);\n-        for (String content : dmgContent) {\n-            Path path = Path.of(content);\n-            FileUtils.copyRecursive(path, srcFolder.resolve(path.getFileName()));\n-        }\n-        \/\/ create temp image\n-        ProcessBuilder pb = new ProcessBuilder(\n-                hdiutil,\n-                \"create\",\n-                hdiUtilVerbosityFlag,\n-                \"-srcfolder\", srcFolder.toAbsolutePath().toString(),\n-                \"-volname\", APP_NAME.fetchFrom(params),\n-                \"-ov\", protoDMG.toAbsolutePath().toString(),\n-                \"-fs\", \"HFS+\",\n-                \"-format\", \"UDRW\");\n-        try {\n-            IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n-        } catch (IOException ex) {\n-            Log.verbose(ex); \/\/ Log exception\n-\n-            \/\/ Creating DMG from entire app image failed, so lets try to create empty\n-            \/\/ DMG and copy files manually. See JDK-8248059.\n-            copyAppImage = true;\n-\n-            long size = new PathGroup(Map.of(new Object(), srcFolder)).sizeInBytes();\n-            size += 50 * 1024 * 1024; \/\/ Add extra 50 megabytes. Actually DMG size will\n-            \/\/ not be bigger, but it will able to hold additional 50 megabytes of data.\n-            \/\/ We need extra room for icons and background image. When we providing\n-            \/\/ actual files to hdiutil, it will create DMG with ~50 megabytes extra room.\n-            pb = new ProcessBuilder(\n-                hdiutil,\n-                \"create\",\n-                hdiUtilVerbosityFlag,\n-                \"-size\", String.valueOf(size),\n-                \"-volname\", APP_NAME.fetchFrom(params),\n-                \"-ov\", protoDMG.toAbsolutePath().toString(),\n-                \"-fs\", \"HFS+\");\n-            new RetryExecutor()\n-                .setMaxAttemptsCount(10)\n-                .setAttemptTimeoutMillis(3000)\n-                .setWriteOutputToFile(true)\n-                .execute(pb);\n-        }\n-\n-        \/\/ mount temp image\n-        pb = new ProcessBuilder(\n-                hdiutil,\n-                \"attach\",\n-                protoDMG.toAbsolutePath().toString(),\n-                hdiUtilVerbosityFlag,\n-                \"-mountroot\", imagesRoot.toAbsolutePath().toString());\n-        IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n-\n-        Path mountedRoot = imagesRoot.resolve(APP_NAME.fetchFrom(params));\n-\n-        \/\/ Copy app image, since we did not create DMG with it, but instead we created\n-        \/\/ empty one.\n-        if (copyAppImage) {\n-            \/\/ In case of predefine app image srcFolder will point to app bundle, so if\n-            \/\/ we use it as is we will copy content of app bundle, but we need app bundle\n-            \/\/ folder as well.\n-            if (srcFolder.toString().toLowerCase().endsWith(\".app\")) {\n-                Path destPath = mountedRoot\n-                        .resolve(srcFolder.getFileName());\n-                Files.createDirectory(destPath);\n-                FileUtils.copyRecursive(srcFolder, destPath);\n-            } else {\n-                FileUtils.copyRecursive(srcFolder, mountedRoot);\n-            }\n-        }\n-\n-        try {\n-            \/\/ background image\n-            Path bgdir = mountedRoot.resolve(BACKGROUND_IMAGE_FOLDER);\n-            Files.createDirectories(bgdir);\n-            IOUtils.copyFile(getConfig_VolumeBackground(params),\n-                    bgdir.resolve(BACKGROUND_IMAGE));\n-\n-            \/\/ We will not consider setting background image and creating link\n-            \/\/ to install-dir in DMG as critical error, since it can fail in\n-            \/\/ headless environment.\n-            try {\n-                pb = new ProcessBuilder(\"\/usr\/bin\/osascript\",\n-                        getConfig_VolumeScript(params).toAbsolutePath().toString());\n-                IOUtils.exec(pb, 180); \/\/ Wait 3 minutes. See JDK-8248248.\n-            } catch (IOException ex) {\n-                Log.verbose(ex);\n-            }\n-\n-            \/\/ volume icon\n-            Path volumeIconFile = mountedRoot.resolve(\".VolumeIcon.icns\");\n-            IOUtils.copyFile(getConfig_VolumeIcon(params),\n-                    volumeIconFile);\n-\n-            \/\/ Indicate that we want a custom icon\n-            \/\/ NB: attributes of the root directory are ignored\n-            \/\/ when creating the volume\n-            \/\/ Therefore we have to do this after we mount image\n-            String setFileUtility = findSetFileUtility();\n-            if (setFileUtility != null) {\n-                \/\/can not find utility => keep going without icon\n-                try {\n-                    volumeIconFile.toFile().setWritable(true);\n-                    \/\/ The \"creator\" attribute on a file is a legacy attribute\n-                    \/\/ but it seems Finder excepts these bytes to be\n-                    \/\/ \"icnC\" for the volume icon\n-                    \/\/ (might not work on Mac 10.13 with old XCode)\n-                    pb = new ProcessBuilder(\n-                            setFileUtility,\n-                            \"-c\", \"icnC\",\n-                            volumeIconFile.toAbsolutePath().toString());\n-                    IOUtils.exec(pb);\n-                    volumeIconFile.toFile().setReadOnly();\n-\n-                    pb = new ProcessBuilder(\n-                            setFileUtility,\n-                            \"-a\", \"C\",\n-                            mountedRoot.toAbsolutePath().toString());\n-                    IOUtils.exec(pb);\n-                } catch (IOException ex) {\n-                    Log.error(ex.getMessage());\n-                    Log.verbose(\"Cannot enable custom icon using SetFile utility\");\n-                }\n-            } else {\n-                Log.verbose(I18N.getString(\"message.setfile.dmg\"));\n-            }\n-\n-        } finally {\n-            \/\/ Detach the temporary image\n-            pb = new ProcessBuilder(\n-                    hdiutil,\n-                    \"detach\",\n-                    hdiUtilVerbosityFlag,\n-                    mountedRoot.toAbsolutePath().toString());\n-            \/\/ \"hdiutil detach\" might not work right away due to resource busy error, so\n-            \/\/ repeat detach several times.\n-            RetryExecutor retryExecutor = new RetryExecutor();\n-            \/\/ Image can get detach even if we got resource busy error, so stop\n-            \/\/ trying to detach it if it is no longer attached.\n-            retryExecutor.setExecutorInitializer(exec -> {\n-                if (!Files.exists(mountedRoot)) {\n-                    retryExecutor.abort();\n-                }\n-            });\n-            try {\n-                \/\/ 10 times with 6 second delays.\n-                retryExecutor.setMaxAttemptsCount(10).setAttemptTimeoutMillis(6000)\n-                        .execute(pb);\n-            } catch (IOException ex) {\n-                if (!retryExecutor.isAborted()) {\n-                    \/\/ Now force to detach if it still attached\n-                    if (Files.exists(mountedRoot)) {\n-                        pb = new ProcessBuilder(\n-                                hdiutil,\n-                                \"detach\",\n-                                \"-force\",\n-                                hdiUtilVerbosityFlag,\n-                                mountedRoot.toAbsolutePath().toString());\n-                        IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n-                    }\n-                }\n-            }\n-        }\n-\n-        \/\/ Compress it to a new image\n-        pb = new ProcessBuilder(\n-                hdiutil,\n-                \"convert\",\n-                protoDMG.toAbsolutePath().toString(),\n-                hdiUtilVerbosityFlag,\n-                \"-format\", \"UDZO\",\n-                \"-o\", finalDMG.toAbsolutePath().toString());\n-        try {\n-            new RetryExecutor()\n-                .setMaxAttemptsCount(10)\n-                .setAttemptTimeoutMillis(3000)\n-                .execute(pb);\n-        } catch (Exception ex) {\n-            \/\/ Convert might failed if something holds file. Try to convert copy.\n-            Path protoDMG2 = imagesRoot\n-                    .resolve(APP_NAME.fetchFrom(params) + \"-tmp2.dmg\");\n-            Files.copy(protoDMG, protoDMG2);\n-            try {\n-                pb = new ProcessBuilder(\n-                        hdiutil,\n-                        \"convert\",\n-                        protoDMG2.toAbsolutePath().toString(),\n-                        hdiUtilVerbosityFlag,\n-                        \"-format\", \"UDZO\",\n-                        \"-o\", finalDMG.toAbsolutePath().toString());\n-                IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n-            } finally {\n-                Files.deleteIfExists(protoDMG2);\n-            }\n-        }\n-\n-        \/\/add license if needed\n-        if (Files.exists(getConfig_LicenseFile(params))) {\n-            pb = new ProcessBuilder(\n-                    hdiutil,\n-                    \"udifrez\",\n-                    finalDMG.toAbsolutePath().toString(),\n-                    \"-xml\",\n-                    getConfig_LicenseFile(params).toAbsolutePath().toString()\n-            );\n-            new RetryExecutor()\n-                .setMaxAttemptsCount(10)\n-                .setAttemptTimeoutMillis(3000)\n-                .execute(pb);\n-        }\n-\n-        \/\/Delete the temporary image\n-        Files.deleteIfExists(protoDMG);\n-\n-        Log.verbose(MessageFormat.format(I18N.getString(\n-                \"message.output-to-location\"),\n-                APP_NAME.fetchFrom(params), finalDMG.toAbsolutePath().toString()));\n-\n-        return finalDMG;\n-    }\n-\n-\n-    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-    \/\/ Implement Bundler\n-    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n@@ -552,0 +53,2 @@\n+            MacFromParams.DMG_PACKAGE.fetchFrom(params);\n+\n@@ -569,1 +72,9 @@\n-        return bundle(params, outputParentDir);\n+\n+        final var pkg = MacFromParams.DMG_PACKAGE.fetchFrom(params);\n+        var env = BuildEnvFromParams.BUILD_ENV.fetchFrom(params);\n+\n+        final var packager = MacDmgPackager.build().outputDir(outputParentDir).pkg(pkg).env(env);\n+\n+        MacDmgPackager.findSetFileUtility().ifPresent(packager::setFileUtility);\n+\n+        return packager.execute();\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacDmgBundler.java","additions":11,"deletions":500,"binary":false,"changes":511,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.MacDmgPackage;\n+import jdk.jpackage.internal.model.MacDmgPackageMixin;\n+\n+final class MacDmgPackageBuilder {\n+\n+    MacDmgPackageBuilder(MacPackageBuilder pkgBuilder) {\n+        this.pkgBuilder = Objects.requireNonNull(pkgBuilder);\n+    }\n+\n+    MacDmgPackageBuilder dmgContent(List<Path> v) {\n+        dmgContent = v;\n+        return this;\n+    }\n+\n+    MacDmgPackageBuilder icon(Path v) {\n+        icon = v;\n+        return this;\n+    }\n+\n+    List<Path> validatedDmgContent() {\n+        return Optional.ofNullable(dmgContent).orElseGet(List::of);\n+    }\n+\n+    MacDmgPackage create() throws ConfigException {\n+        final var superPkgBuilder = pkgBuilder.pkgBuilder();\n+        superPkgBuilder.installDir().ifPresent(installDir -> {\n+            final var defaultInstallDirLocation = superPkgBuilder.defaultInstallDir().map(Path::getParent).orElseThrow();\n+            if (!defaultInstallDirLocation.equals(installDir)) {\n+                Log.info(I18N.format(\"message.install-dir-ignored\", defaultInstallDirLocation));\n+                superPkgBuilder.installDir(defaultInstallDirLocation);\n+            }\n+        });\n+\n+        final var pkg = pkgBuilder.create();\n+\n+        return MacDmgPackage.create(pkg, new MacDmgPackageMixin.Stub(\n+                Optional.ofNullable(icon).or((pkg.app())::icon),\n+                validatedDmgContent()));\n+    }\n+\n+    private Path icon;\n+    private List<Path> dmgContent;\n+    private final MacPackageBuilder pkgBuilder;\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacDmgPackageBuilder.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,530 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.util.PathUtils.normalizedAbsolutePathString;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.text.MessageFormat;\n+import java.util.Base64;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+import jdk.jpackage.internal.PackagingPipeline.PackageTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.StartupParameters;\n+import jdk.jpackage.internal.PackagingPipeline.TaskID;\n+import jdk.jpackage.internal.model.MacDmgPackage;\n+import jdk.jpackage.internal.model.PackagerException;\n+import jdk.jpackage.internal.util.FileUtils;\n+import jdk.jpackage.internal.util.PathGroup;\n+\n+record MacDmgPackager(MacDmgPackage pkg, BuildEnv env, Path hdiutil, Path outputDir, Optional<Path> setFileUtility) {\n+\n+    MacDmgPackager {\n+        Objects.requireNonNull(pkg);\n+        Objects.requireNonNull(env);\n+        Objects.requireNonNull(hdiutil);\n+        Objects.requireNonNull(outputDir);\n+        Objects.requireNonNull(setFileUtility);\n+    }\n+\n+    static Builder build() {\n+        return new Builder();\n+    }\n+\n+    static final class Builder extends PackagerBuilder<MacDmgPackage, Builder> {\n+\n+        Builder hdiutil(Path v) {\n+            hdiutil = v;\n+            return this;\n+        }\n+\n+        Builder setFileUtility(Path v) {\n+            setFileUtility = v;\n+            return this;\n+        }\n+\n+        Path execute() throws PackagerException {\n+            Log.verbose(MessageFormat.format(I18N.getString(\"message.building-dmg\"),\n+                    pkg.app().name()));\n+\n+            IOUtils.writableOutputDir(outputDir);\n+\n+            return execute(MacPackagingPipeline.build(Optional.of(pkg)));\n+        }\n+\n+        @Override\n+        protected void configurePackagingPipeline(PackagingPipeline.Builder pipelineBuilder,\n+                StartupParameters startupParameters) {\n+            final var packager = new MacDmgPackager(pkg, startupParameters.packagingEnv(),\n+                    validatedHdiutil(), outputDir, Optional.ofNullable(setFileUtility));\n+            packager.applyToPipeline(pipelineBuilder);\n+        }\n+\n+        private Path validatedHdiutil() {\n+            return Optional.ofNullable(hdiutil).orElse(HDIUTIL);\n+        }\n+\n+        private Path hdiutil;\n+        private Path setFileUtility;\n+    }\n+\n+    \/\/ Location of SetFile utility may be different depending on MacOS version\n+    \/\/ We look for several known places and if none of them work will\n+    \/\/ try to find it\n+    static Optional<Path> findSetFileUtility() {\n+        String typicalPaths[] = {\"\/Developer\/Tools\/SetFile\",\n+                \"\/usr\/bin\/SetFile\", \"\/Developer\/usr\/bin\/SetFile\"};\n+\n+        final var setFilePath = Stream.of(typicalPaths).map(Path::of).filter(Files::isExecutable).findFirst();\n+        if (setFilePath.isPresent()) {\n+            \/\/ Validate SetFile, if Xcode is not installed it will run, but exit with error\n+            \/\/ code\n+            try {\n+                if (Executor.of(setFilePath.orElseThrow().toString(), \"-h\").setQuiet(true).execute() == 0) {\n+                    return setFilePath;\n+                }\n+            } catch (Exception ignored) {\n+                \/\/ No need for generic find attempt. We found it, but it does not work.\n+                \/\/ Probably due to missing xcode.\n+                return Optional.empty();\n+            }\n+        }\n+\n+        \/\/ generic find attempt\n+        try {\n+            final var executor = Executor.of(\"\/usr\/bin\/xcrun\", \"-find\", \"SetFile\");\n+            final var code = executor.setQuiet(true).saveOutput(true).execute();\n+            if (code == 0 && executor.getOutput().isEmpty()) {\n+                final var firstLine = executor.getOutput().getFirst();\n+                Path f = Path.of(firstLine);\n+                if (Files.exists(f) && Files.isExecutable(f)) {\n+                    return Optional.of(f.toAbsolutePath());\n+                }\n+            }\n+        } catch (IOException ignored) {}\n+\n+        return Optional.empty();\n+    }\n+\n+    private void applyToPipeline(PackagingPipeline.Builder pipelineBuilder) {\n+        pipelineBuilder\n+                .excludeDirFromCopying(outputDir)\n+                .task(DmgPackageTaskID.COPY_DMG_CONTENT)\n+                        .action(this::copyDmgContent)\n+                        .addDependent(PackageTaskID.CREATE_PACKAGE_FILE)\n+                        .add()\n+                .task(PackageTaskID.CREATE_CONFIG_FILES)\n+                        .action(this::prepareConfigFiles)\n+                        .add()\n+                .task(PackageTaskID.CREATE_PACKAGE_FILE)\n+                        .action(this::buildDMG)\n+                        .add();\n+    }\n+\n+    enum DmgPackageTaskID implements TaskID {\n+        COPY_DMG_CONTENT\n+    }\n+\n+    Path volumePath() {\n+        return dmgWorkdir().resolve(volumeName());\n+    }\n+\n+    String volumeName() {\n+        return pkg.app().name();\n+    }\n+\n+    String createVolumeUrlLocation() throws IOException {\n+        final var volumeParentDir = volumePath().getParent();\n+        Files.createDirectories(volumeParentDir);\n+        \/\/ The URL should end with '\/' and it should be real path (no symbolic links).\n+        return volumeParentDir.toRealPath().resolve(volumePath().getFileName()).toUri().toString() + File.separator;\n+    }\n+\n+    Path volumeScript() {\n+        return env.configDir().resolve(pkg.app().name() + \"-dmg-setup.scpt\");\n+    }\n+\n+    Path volumeBackground() {\n+        return env.configDir().resolve(pkg.app().name() + \"-background.tiff\");\n+    }\n+\n+    Path volumeIcon() {\n+        return env.configDir().resolve(pkg.app().name() + \"-volume.icns\");\n+    }\n+\n+    Path licenseFile() {\n+        return env.configDir().resolve(pkg.app().name() + \"-license.plist\");\n+    }\n+\n+    Path protoDmg() {\n+        return dmgWorkdir().resolve(\"proto.dmg\");\n+    }\n+\n+    Path protoCopyDmg() {\n+        return dmgWorkdir().resolve(\"proto-copy.dmg\");\n+    }\n+\n+    Path bgImageFileInMountedDmg() {\n+        return volumePath().resolve(\".background\/background.tiff\");\n+    }\n+\n+    private Path dmgWorkdir() {\n+        return env.buildRoot().resolve(\"dmg-workdir\");\n+    }\n+\n+    private void copyDmgContent() throws IOException {\n+        final var srcFolder = env.appImageDir();\n+        for (Path path : pkg.content()) {\n+            FileUtils.copyRecursive(path, srcFolder.resolve(path.getFileName()));\n+        }\n+    }\n+\n+    private void prepareDMGSetupScript() throws IOException {\n+        Path dmgSetup = volumeScript();\n+        Log.verbose(MessageFormat.format(\n+                I18N.getString(\"message.preparing-dmg-setup\"),\n+                dmgSetup.toAbsolutePath().toString()));\n+\n+        \/\/ Prepare DMG setup script\n+        Map<String, String> data = new HashMap<>();\n+\n+        \/\/ We need to use URL for DMG to find it. We cannot use volume name, since\n+        \/\/ user might have open DMG with same volume name already.\n+        data.put(\"DEPLOY_VOLUME_URL\", createVolumeUrlLocation());\n+\n+        \/\/ Full path to background image, so we can find it.\n+        data.put(\"DEPLOY_BG_FILE\", bgImageFileInMountedDmg().toAbsolutePath().toString());\n+\n+        data.put(\"DEPLOY_VOLUME_PATH\", volumePath().toAbsolutePath().toString());\n+        data.put(\"DEPLOY_APPLICATION_NAME\", pkg.app().name());\n+\n+        String targetItem = pkg.relativeInstallDir().getFileName().toString();\n+        data.put(\"DEPLOY_TARGET\", targetItem);\n+\n+        data.put(\"DEPLOY_INSTALL_LOCATION\", pkg.installDir().getParent().toString());\n+\n+        \/\/ \"DEPLOY_INSTALL_LOCATION_DISPLAY_NAME\" is the label for the default destination directory\n+        \/\/ for DMG bundle on the right side from the \"copy\" arrow in the dialog\n+        \/\/ that pops up when user clicks on a .dmg file.\n+        data.put(\"DEPLOY_INSTALL_LOCATION_DISPLAY_NAME\", getInstallDirDisplayName());\n+\n+        env.createResource(DEFAULT_DMG_SETUP_SCRIPT)\n+                .setCategory(I18N.getString(\"resource.dmg-setup-script\"))\n+                .setSubstitutionData(data)\n+                .saveToFile(dmgSetup);\n+    }\n+\n+    private void prepareLicense() throws IOException {\n+        final var licFile = pkg.licenseFile();\n+        if (licFile.isEmpty()) {\n+            return;\n+        }\n+\n+        byte[] licenseContentOriginal =\n+                Files.readAllBytes(licFile.orElseThrow());\n+        String licenseInBase64 =\n+                Base64.getEncoder().encodeToString(licenseContentOriginal);\n+\n+        Map<String, String> data = new HashMap<>();\n+        data.put(\"APPLICATION_LICENSE_TEXT\", licenseInBase64);\n+\n+        env.createResource(DEFAULT_LICENSE_PLIST)\n+                .setCategory(I18N.getString(\"resource.license-setup\"))\n+                .setSubstitutionData(data)\n+                .saveToFile(licenseFile());\n+    }\n+\n+    private void prepareConfigFiles() throws IOException {\n+\n+        env.createResource(DEFAULT_BACKGROUND_IMAGE)\n+                    .setCategory(I18N.getString(\"resource.dmg-background\"))\n+                    .saveToFile(volumeBackground());\n+\n+        env.createResource(TEMPLATE_BUNDLE_ICON)\n+                .setCategory(I18N.getString(\"resource.volume-icon\"))\n+                .setExternal(pkg.icon().orElse(null))\n+                .saveToFile(volumeIcon());\n+\n+        prepareLicense();\n+\n+        prepareDMGSetupScript();\n+    }\n+\n+    private String getInstallDirDisplayName() {\n+        final var defaultInstallDir = new PackageBuilder(pkg.app(), pkg.type()).defaultInstallDir().orElseThrow();\n+        if (defaultInstallDir.equals(pkg.installDir())) {\n+            \/\/ Return \"Applications\" for \"\/Applications\/foo.app\"\n+            return defaultInstallDir.getParent().getFileName().toString();\n+        } else {\n+            return pkg.installDir().getParent().toString();\n+        }\n+    }\n+\n+    private void buildDMG() throws IOException {\n+        boolean copyAppImage = false;\n+\n+        Path protoDMG = protoDmg();\n+        Path finalDMG = outputDir.resolve(pkg.packageFileNameWithSuffix());\n+\n+        Path srcFolder = env.appImageDir();\n+\n+        Log.verbose(MessageFormat.format(I18N.getString(\n+                \"message.creating-dmg-file\"), finalDMG.toAbsolutePath()));\n+\n+        try {\n+            Files.deleteIfExists(finalDMG);\n+        } catch (IOException ex) {\n+            throw new IOException(MessageFormat.format(I18N.getString(\n+                    \"message.dmg-cannot-be-overwritten\"),\n+                    finalDMG.toAbsolutePath()));\n+        }\n+\n+        Files.createDirectories(protoDMG.getParent());\n+        Files.createDirectories(finalDMG.getParent());\n+\n+        String hdiUtilVerbosityFlag = env.verbose() ?\n+                \"-verbose\" : \"-quiet\";\n+\n+        \/\/ create temp image\n+        ProcessBuilder pb = new ProcessBuilder(\n+                hdiutil.toString(),\n+                \"create\",\n+                hdiUtilVerbosityFlag,\n+                \"-srcfolder\", normalizedAbsolutePathString(srcFolder),\n+                \"-volname\", volumeName(),\n+                \"-ov\", normalizedAbsolutePathString(protoDMG),\n+                \"-fs\", \"HFS+\",\n+                \"-format\", \"UDRW\");\n+        try {\n+            IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n+        } catch (IOException ex) {\n+            Log.verbose(ex); \/\/ Log exception\n+\n+            \/\/ Creating DMG from entire app image failed, so lets try to create empty\n+            \/\/ DMG and copy files manually. See JDK-8248059.\n+            copyAppImage = true;\n+\n+            long size = new PathGroup(Map.of(new Object(), srcFolder)).sizeInBytes();\n+            size += 50 * 1024 * 1024; \/\/ Add extra 50 megabytes. Actually DMG size will\n+            \/\/ not be bigger, but it will able to hold additional 50 megabytes of data.\n+            \/\/ We need extra room for icons and background image. When we providing\n+            \/\/ actual files to hdiutil, it will create DMG with ~50 megabytes extra room.\n+            pb = new ProcessBuilder(\n+                hdiutil.toString(),\n+                \"create\",\n+                hdiUtilVerbosityFlag,\n+                \"-size\", String.valueOf(size),\n+                \"-volname\", volumeName(),\n+                \"-ov\", normalizedAbsolutePathString(protoDMG),\n+                \"-fs\", \"HFS+\");\n+            new RetryExecutor()\n+                .setMaxAttemptsCount(10)\n+                .setAttemptTimeoutMillis(3000)\n+                .setWriteOutputToFile(true)\n+                .execute(pb);\n+        }\n+\n+        \/\/ mount temp image\n+        pb = new ProcessBuilder(\n+                hdiutil.toString(),\n+                \"attach\",\n+                normalizedAbsolutePathString(protoDMG),\n+                hdiUtilVerbosityFlag,\n+                \"-mountroot\", protoDMG.getParent().toString());\n+        IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n+\n+        final Path mountedVolume = volumePath();\n+\n+        \/\/ Copy app image, since we did not create DMG with it, but instead we created\n+        \/\/ empty one.\n+        if (copyAppImage) {\n+            FileUtils.copyRecursive(srcFolder, mountedVolume);\n+        }\n+\n+        try {\n+            \/\/ background image\n+            final var bgImageFile = bgImageFileInMountedDmg();\n+            Files.createDirectories(bgImageFile.getParent());\n+            IOUtils.copyFile(volumeBackground(), bgImageFile);\n+\n+            \/\/ We will not consider setting background image and creating link\n+            \/\/ to install-dir in DMG as critical error, since it can fail in\n+            \/\/ headless environment.\n+            try {\n+                pb = new ProcessBuilder(\"\/usr\/bin\/osascript\",\n+                        normalizedAbsolutePathString(volumeScript()));\n+                IOUtils.exec(pb, 180); \/\/ Wait 3 minutes. See JDK-8248248.\n+            } catch (IOException ex) {\n+                Log.verbose(ex);\n+            }\n+\n+            \/\/ volume icon\n+            Path volumeIconFile = mountedVolume.resolve(\".VolumeIcon.icns\");\n+            IOUtils.copyFile(volumeIcon(), volumeIconFile);\n+\n+            \/\/ Indicate that we want a custom icon\n+            \/\/ NB: attributes of the root directory are ignored\n+            \/\/ when creating the volume\n+            \/\/ Therefore we have to do this after we mount image\n+            if (setFileUtility.isPresent()) {\n+                \/\/can not find utility => keep going without icon\n+                try {\n+                    volumeIconFile.toFile().setWritable(true);\n+                    \/\/ The \"creator\" attribute on a file is a legacy attribute\n+                    \/\/ but it seems Finder excepts these bytes to be\n+                    \/\/ \"icnC\" for the volume icon\n+                    \/\/ (might not work on Mac 10.13 with old XCode)\n+                    pb = new ProcessBuilder(\n+                            setFileUtility.orElseThrow().toString(),\n+                            \"-c\", \"icnC\",\n+                            normalizedAbsolutePathString(volumeIconFile));\n+                    IOUtils.exec(pb);\n+                    volumeIconFile.toFile().setReadOnly();\n+\n+                    pb = new ProcessBuilder(\n+                            setFileUtility.orElseThrow().toString(),\n+                            \"-a\", \"C\",\n+                            normalizedAbsolutePathString(mountedVolume));\n+                    IOUtils.exec(pb);\n+                } catch (IOException ex) {\n+                    Log.error(ex.getMessage());\n+                    Log.verbose(\"Cannot enable custom icon using SetFile utility\");\n+                }\n+            } else {\n+                Log.verbose(I18N.getString(\"message.setfile.dmg\"));\n+            }\n+\n+        } finally {\n+            \/\/ Detach the temporary image\n+            pb = new ProcessBuilder(\n+                    hdiutil.toString(),\n+                    \"detach\",\n+                    hdiUtilVerbosityFlag,\n+                    normalizedAbsolutePathString(mountedVolume));\n+            \/\/ \"hdiutil detach\" might not work right away due to resource busy error, so\n+            \/\/ repeat detach several times.\n+            RetryExecutor retryExecutor = new RetryExecutor();\n+            \/\/ Image can get detach even if we got resource busy error, so stop\n+            \/\/ trying to detach it if it is no longer attached.\n+            retryExecutor.setExecutorInitializer(exec -> {\n+                if (!Files.exists(mountedVolume)) {\n+                    retryExecutor.abort();\n+                }\n+            });\n+            try {\n+                \/\/ 10 times with 6 second delays.\n+                retryExecutor.setMaxAttemptsCount(10).setAttemptTimeoutMillis(6000)\n+                        .execute(pb);\n+            } catch (IOException ex) {\n+                if (!retryExecutor.isAborted()) {\n+                    \/\/ Now force to detach if it still attached\n+                    if (Files.exists(mountedVolume)) {\n+                        pb = new ProcessBuilder(\n+                                hdiutil.toString(),\n+                                \"detach\",\n+                                \"-force\",\n+                                hdiUtilVerbosityFlag,\n+                                normalizedAbsolutePathString(mountedVolume));\n+                        IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n+                    }\n+                }\n+            }\n+        }\n+\n+        \/\/ Compress it to a new image\n+        pb = new ProcessBuilder(\n+                hdiutil.toString(),\n+                \"convert\",\n+                normalizedAbsolutePathString(protoDMG),\n+                hdiUtilVerbosityFlag,\n+                \"-format\", \"UDZO\",\n+                \"-o\", normalizedAbsolutePathString(finalDMG));\n+        try {\n+            new RetryExecutor()\n+                .setMaxAttemptsCount(10)\n+                .setAttemptTimeoutMillis(3000)\n+                .execute(pb);\n+        } catch (Exception ex) {\n+            \/\/ Convert might failed if something holds file. Try to convert copy.\n+            Path protoCopyDMG = protoCopyDmg();\n+            Files.copy(protoDMG, protoCopyDMG);\n+            try {\n+                pb = new ProcessBuilder(\n+                        hdiutil.toString(),\n+                        \"convert\",\n+                        normalizedAbsolutePathString(protoCopyDMG),\n+                        hdiUtilVerbosityFlag,\n+                        \"-format\", \"UDZO\",\n+                        \"-o\", normalizedAbsolutePathString(finalDMG));\n+                IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n+            } finally {\n+                Files.deleteIfExists(protoCopyDMG);\n+            }\n+        }\n+\n+        \/\/add license if needed\n+        if (pkg.licenseFile().isPresent()) {\n+            pb = new ProcessBuilder(\n+                    hdiutil.toString(),\n+                    \"udifrez\",\n+                    normalizedAbsolutePathString(finalDMG),\n+                    \"-xml\",\n+                    normalizedAbsolutePathString(licenseFile())\n+            );\n+            new RetryExecutor()\n+                .setMaxAttemptsCount(10)\n+                .setAttemptTimeoutMillis(3000)\n+                .execute(pb);\n+        }\n+\n+        try {\n+            \/\/Delete the temporary image\n+            Files.deleteIfExists(protoDMG);\n+        } catch (IOException ex) {\n+            \/\/ Don't care if fails\n+        }\n+\n+        Log.verbose(MessageFormat.format(I18N.getString(\n+                \"message.output-to-location\"),\n+                pkg.app().name(), normalizedAbsolutePathString(finalDMG)));\n+\n+    }\n+\n+    \/\/ Background image name in resources\n+    private static final String DEFAULT_BACKGROUND_IMAGE = \"background_dmg.tiff\";\n+    private static final String DEFAULT_DMG_SETUP_SCRIPT = \"DMGsetup.scpt\";\n+    private static final String TEMPLATE_BUNDLE_ICON = \"JavaApp.icns\";\n+\n+    private static final String DEFAULT_LICENSE_PLIST=\"lic_template.plist\";\n+\n+    private static final Path HDIUTIL = Path.of(\"\/usr\/bin\/hdiutil\");\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacDmgPackager.java","additions":530,"deletions":0,"binary":false,"changes":530,"status":"added"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.FileAssociation;\n+import jdk.jpackage.internal.model.MacFileAssociation;\n+import jdk.jpackage.internal.model.MacFileAssociationMixin;\n+\n+final class MacFileAssociationBuilder {\n+\n+    MacFileAssociation create(FileAssociation fa) throws ConfigException {\n+        Objects.requireNonNull(fa);\n+\n+        final var mixin = new MacFileAssociationMixin.Stub(\n+                Optional.ofNullable(cfBundleTypeName).orElse(DEFAULTS.cfBundleTypeName),\n+                Optional.ofNullable(cfBundleTypeRole).orElse(DEFAULTS.cfBundleTypeRole),\n+                Optional.ofNullable(lsHandlerRank).orElse(DEFAULTS.lsHandlerRank),\n+                Optional.ofNullable(lsTypeIsPackage),\n+                Optional.ofNullable(nsDocumentClass),\n+                Optional.ofNullable(nsPersistentStoreTypeKey),\n+                Optional.ofNullable(lsSupportsOpeningDocumentsInPlace),\n+                Optional.ofNullable(uiSupportsDocumentBrowser),\n+                Optional.ofNullable(utTypeConformsTo).orElse(DEFAULTS.utTypeConformsTo),\n+                Optional.ofNullable(nsExportableTypes).orElse(DEFAULTS.nsExportableTypes));\n+\n+        return MacFileAssociation.create(fa, mixin);\n+    }\n+\n+    MacFileAssociationBuilder cfBundleTypeName(String v) {\n+        cfBundleTypeName = v;\n+        return this;\n+    }\n+\n+    MacFileAssociationBuilder cfBundleTypeRole(String v) {\n+        cfBundleTypeRole = v;\n+        return this;\n+    }\n+\n+    MacFileAssociationBuilder lsHandlerRank(String v) {\n+        lsHandlerRank = v;\n+        return this;\n+    }\n+\n+    MacFileAssociationBuilder lsTypeIsPackage(boolean v) {\n+        lsTypeIsPackage = v;\n+        return this;\n+    }\n+\n+    MacFileAssociationBuilder nsDocumentClass(String v) {\n+        nsDocumentClass = v;\n+        return this;\n+    }\n+\n+    MacFileAssociationBuilder nsPersistentStoreTypeKey(String v) {\n+        nsPersistentStoreTypeKey = v;\n+        return this;\n+    }\n+\n+    MacFileAssociationBuilder lsSupportsOpeningDocumentsInPlace(boolean v) {\n+        lsSupportsOpeningDocumentsInPlace = v;\n+        return this;\n+    }\n+\n+    MacFileAssociationBuilder uiSupportsDocumentBrowser(boolean v) {\n+        uiSupportsDocumentBrowser = v;\n+        return this;\n+    }\n+\n+    MacFileAssociationBuilder utTypeConformsTo(List<String> v) {\n+        utTypeConformsTo = v;\n+        return this;\n+    }\n+\n+    MacFileAssociationBuilder nsExportableTypes(List<String> v) {\n+        nsExportableTypes = v;\n+        return this;\n+    }\n+\n+    private String cfBundleTypeName;\n+    private String cfBundleTypeRole;\n+    private String lsHandlerRank;\n+    private String nsDocumentClass;\n+    private String nsPersistentStoreTypeKey;\n+    private Boolean lsTypeIsPackage;\n+    private Boolean lsSupportsOpeningDocumentsInPlace;\n+    private Boolean uiSupportsDocumentBrowser;\n+    private List<String> utTypeConformsTo;\n+    private List<String> nsExportableTypes;\n+\n+    private static final MacFileAssociationBuilder DEFAULTS = new MacFileAssociationBuilder()\n+            .lsHandlerRank(\"Owner\")\n+            .cfBundleTypeRole(\"Editor\")\n+            .cfBundleTypeName(\"\")\n+            .utTypeConformsTo(List.of(\"public.data\"))\n+            .nsExportableTypes(List.of());\n+\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacFileAssociationBuilder.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -0,0 +1,364 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.BundlerParamInfo.createBooleanBundlerParam;\n+import static jdk.jpackage.internal.BundlerParamInfo.createPathBundlerParam;\n+import static jdk.jpackage.internal.BundlerParamInfo.createStringBundlerParam;\n+import static jdk.jpackage.internal.FromParams.createApplicationBuilder;\n+import static jdk.jpackage.internal.FromParams.createApplicationBundlerParam;\n+import static jdk.jpackage.internal.FromParams.createPackageBuilder;\n+import static jdk.jpackage.internal.FromParams.createPackageBundlerParam;\n+import static jdk.jpackage.internal.MacPackagingPipeline.APPLICATION_LAYOUT;\n+import static jdk.jpackage.internal.StandardBundlerParam.DMG_CONTENT;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n+import static jdk.jpackage.internal.StandardBundlerParam.hasPredefinedAppImage;\n+import static jdk.jpackage.internal.model.MacPackage.RUNTIME_PACKAGE_LAYOUT;\n+import static jdk.jpackage.internal.model.StandardPackageType.MAC_DMG;\n+import static jdk.jpackage.internal.model.StandardPackageType.MAC_PKG;\n+import static jdk.jpackage.internal.util.function.ThrowingFunction.toFunction;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.concurrent.Callable;\n+import java.util.function.Predicate;\n+import jdk.jpackage.internal.ApplicationBuilder.MainLauncherStartupInfo;\n+import jdk.jpackage.internal.SigningIdentityBuilder.ExpiredCertificateException;\n+import jdk.jpackage.internal.SigningIdentityBuilder.StandardCertificateSelector;\n+import jdk.jpackage.internal.model.ApplicationLaunchers;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.FileAssociation;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.MacApplication;\n+import jdk.jpackage.internal.model.MacDmgPackage;\n+import jdk.jpackage.internal.model.MacFileAssociation;\n+import jdk.jpackage.internal.model.MacLauncher;\n+import jdk.jpackage.internal.model.MacPkgPackage;\n+import jdk.jpackage.internal.model.PackageType;\n+import jdk.jpackage.internal.model.RuntimeLayout;\n+import jdk.jpackage.internal.util.function.ExceptionBox;\n+\n+\n+final class MacFromParams {\n+\n+    private static MacApplication createMacApplication(\n+            Map<String, ? super Object> params) throws ConfigException, IOException {\n+\n+        final var predefinedRuntimeLayout = PREDEFINED_RUNTIME_IMAGE.findIn(params).map(predefinedRuntimeImage -> {\n+            if (Files.isDirectory(RUNTIME_PACKAGE_LAYOUT.resolveAt(predefinedRuntimeImage).runtimeDirectory())) {\n+                return RUNTIME_PACKAGE_LAYOUT;\n+            } else {\n+                return RuntimeLayout.DEFAULT;\n+            }\n+        });\n+\n+        final var launcherFromParams = new LauncherFromParams(Optional.of(MacFromParams::createMacFa));\n+\n+        final var superAppBuilder = createApplicationBuilder(params, toFunction(launcherParams -> {\n+            var launcher = launcherFromParams.create(launcherParams);\n+            return MacLauncher.create(launcher);\n+        }), APPLICATION_LAYOUT, predefinedRuntimeLayout);\n+\n+        if (hasPredefinedAppImage(params)) {\n+            \/\/ Set the main launcher start up info.\n+            \/\/ AppImageFile assumes the main launcher start up info is available when\n+            \/\/ it is constructed from Application instance.\n+            \/\/ This happens when jpackage signs predefined app image.\n+            final var mainLauncherStartupInfo = new MainLauncherStartupInfo(PREDEFINED_APP_IMAGE_FILE.fetchFrom(params).getMainClass());\n+            final var launchers = superAppBuilder.launchers().orElseThrow();\n+            final var mainLauncher = ApplicationBuilder.overrideLauncherStartupInfo(launchers.mainLauncher(), mainLauncherStartupInfo);\n+            superAppBuilder.launchers(new ApplicationLaunchers(MacLauncher.create(mainLauncher), launchers.additionalLaunchers()));\n+        }\n+\n+        final var app = superAppBuilder.create();\n+\n+        final var appBuilder = new MacApplicationBuilder(app);\n+\n+        if (hasPredefinedAppImage(params)) {\n+            appBuilder.externalInfoPlistFile(PREDEFINED_APP_IMAGE.findIn(params).orElseThrow().resolve(\"Contents\/Info.plist\"));\n+        }\n+\n+        ICON.copyInto(params, appBuilder::icon);\n+        MAC_CF_BUNDLE_NAME.copyInto(params, appBuilder::bundleName);\n+        MAC_CF_BUNDLE_IDENTIFIER.copyInto(params, appBuilder::bundleIdentifier);\n+        APP_CATEGORY.copyInto(params, appBuilder::category);\n+\n+        final boolean sign;\n+        final boolean appStore;\n+\n+        if (hasPredefinedAppImage(params) && PACKAGE_TYPE.findIn(params).filter(Predicate.isEqual(\"app-image\")).isEmpty()) {\n+            final var appImageFileExtras = new MacAppImageFileExtras(PREDEFINED_APP_IMAGE_FILE.fetchFrom(params));\n+            sign = appImageFileExtras.signed();\n+            appStore = appImageFileExtras.appStore();\n+        } else {\n+            sign = SIGN_BUNDLE.findIn(params).orElse(false);\n+            appStore = APP_STORE.findIn(params).orElse(false);\n+        }\n+\n+        appBuilder.appStore(appStore);\n+\n+        if (sign) {\n+            final var signingIdentityBuilder = createSigningIdentityBuilder(params);\n+            APP_IMAGE_SIGN_IDENTITY.copyInto(params, signingIdentityBuilder::signingIdentity);\n+            SIGNING_KEY_USER.findIn(params).ifPresent(userName -> {\n+                final StandardCertificateSelector domain;\n+                if (appStore) {\n+                    domain = StandardCertificateSelector.APP_STORE_APP_IMAGE;\n+                } else {\n+                    domain = StandardCertificateSelector.APP_IMAGE;\n+                }\n+\n+                signingIdentityBuilder.certificateSelector(StandardCertificateSelector.create(userName, domain));\n+            });\n+\n+            final var signingBuilder = new AppImageSigningConfigBuilder(signingIdentityBuilder);\n+            if (appStore) {\n+                signingBuilder.entitlementsResourceName(\"sandbox.plist\");\n+            }\n+\n+            app.mainLauncher().flatMap(Launcher::startupInfo).ifPresent(signingBuilder::signingIdentifierPrefix);\n+            SIGN_IDENTIFIER_PREFIX.copyInto(params, signingBuilder::signingIdentifierPrefix);\n+\n+            ENTITLEMENTS.copyInto(params, signingBuilder::entitlements);\n+\n+            appBuilder.signingBuilder(signingBuilder);\n+        }\n+\n+        return appBuilder.create();\n+    }\n+\n+    private static MacPackageBuilder createMacPackageBuilder(\n+            Map<String, ? super Object> params, MacApplication app,\n+            PackageType type) throws ConfigException {\n+        final var builder = new MacPackageBuilder(createPackageBuilder(params, app, type));\n+\n+        PREDEFINED_APP_IMAGE_FILE.findIn(params)\n+                .map(MacAppImageFileExtras::new)\n+                .map(MacAppImageFileExtras::signed)\n+                .ifPresent(builder::predefinedAppImageSigned);\n+\n+        return builder;\n+    }\n+\n+    private static MacDmgPackage createMacDmgPackage(\n+            Map<String, ? super Object> params) throws ConfigException, IOException {\n+\n+        final var app = APPLICATION.fetchFrom(params);\n+\n+        final var superPkgBuilder = createMacPackageBuilder(params, app, MAC_DMG);\n+\n+        final var pkgBuilder = new MacDmgPackageBuilder(superPkgBuilder);\n+\n+        DMG_CONTENT.copyInto(params, pkgBuilder::dmgContent);\n+\n+        return pkgBuilder.create();\n+    }\n+\n+    private record WithExpiredCertificateException<T>(Optional<T> obj, Optional<ExpiredCertificateException> certEx) {\n+        WithExpiredCertificateException {\n+            if (obj.isEmpty() == certEx.isEmpty()) {\n+                throw new IllegalArgumentException();\n+            }\n+        }\n+\n+        static <U> WithExpiredCertificateException<U> of(Callable<U> callable) {\n+            try {\n+                return new WithExpiredCertificateException<>(Optional.of(callable.call()), Optional.empty());\n+            } catch (ExpiredCertificateException ex) {\n+                return new WithExpiredCertificateException<>(Optional.empty(), Optional.of(ex));\n+            } catch (ExceptionBox ex) {\n+                if (ex.getCause() instanceof ExpiredCertificateException certEx) {\n+                    return new WithExpiredCertificateException<>(Optional.empty(), Optional.of(certEx));\n+                }\n+                throw ex;\n+            } catch (RuntimeException ex) {\n+                throw ex;\n+            } catch (Throwable t) {\n+                throw ExceptionBox.rethrowUnchecked(t);\n+            }\n+        }\n+    }\n+\n+    private static MacPkgPackage createMacPkgPackage(\n+            Map<String, ? super Object> params) throws ConfigException, IOException {\n+\n+        \/\/ This is over complicated to make \"MacSignTest.testExpiredCertificate\" test pass.\n+\n+        final boolean sign = SIGN_BUNDLE.findIn(params).orElse(false);\n+        final boolean appStore = APP_STORE.findIn(params).orElse(false);\n+\n+        final var appOrExpiredCertEx = WithExpiredCertificateException.of(() -> {\n+            return APPLICATION.fetchFrom(params);\n+        });\n+\n+        final Optional<MacPkgPackageBuilder> pkgBuilder;\n+        if (appOrExpiredCertEx.obj().isPresent()) {\n+            final var superPkgBuilder = createMacPackageBuilder(params, appOrExpiredCertEx.obj().orElseThrow(), MAC_PKG);\n+            pkgBuilder = Optional.of(new MacPkgPackageBuilder(superPkgBuilder));\n+        } else {\n+            pkgBuilder = Optional.empty();\n+        }\n+\n+        if (sign) {\n+            final var signingIdentityBuilder = createSigningIdentityBuilder(params);\n+            INSTALLER_SIGN_IDENTITY.copyInto(params, signingIdentityBuilder::signingIdentity);\n+            SIGNING_KEY_USER.findIn(params).ifPresent(userName -> {\n+                final StandardCertificateSelector domain;\n+                if (appStore) {\n+                    domain = StandardCertificateSelector.APP_STORE_PKG_INSTALLER;\n+                } else {\n+                    domain = StandardCertificateSelector.PKG_INSTALLER;\n+                }\n+\n+                signingIdentityBuilder.certificateSelector(StandardCertificateSelector.create(userName, domain));\n+            });\n+\n+            if (pkgBuilder.isPresent()) {\n+                pkgBuilder.orElseThrow().signingBuilder(signingIdentityBuilder);\n+            } else {\n+                final var expiredPkgCert = WithExpiredCertificateException.of(() -> {\n+                    return signingIdentityBuilder.create();\n+                }).certEx();\n+                expiredPkgCert.map(ConfigException::getMessage).ifPresent(Log::error);\n+                throw appOrExpiredCertEx.certEx().orElseThrow();\n+            }\n+        }\n+\n+        return pkgBuilder.orElseThrow().create();\n+    }\n+\n+    private static SigningIdentityBuilder createSigningIdentityBuilder(Map<String, ? super Object> params) {\n+        final var builder = new SigningIdentityBuilder();\n+        SIGNING_KEYCHAIN.copyInto(params, builder::keychain);\n+        return builder;\n+    }\n+\n+    private static MacFileAssociation createMacFa(FileAssociation fa, Map<String, ? super Object> params) {\n+\n+        final var builder = new MacFileAssociationBuilder();\n+\n+        FA_MAC_CFBUNDLETYPEROLE.copyInto(params, builder::cfBundleTypeRole);\n+        FA_MAC_LSHANDLERRANK.copyInto(params, builder::lsHandlerRank);\n+        FA_MAC_NSSTORETYPEKEY.copyInto(params, builder::nsPersistentStoreTypeKey);\n+        FA_MAC_NSDOCUMENTCLASS.copyInto(params, builder::nsDocumentClass);\n+        FA_MAC_LSTYPEISPACKAGE.copyInto(params, builder::lsTypeIsPackage);\n+        FA_MAC_LSDOCINPLACE.copyInto(params, builder::lsSupportsOpeningDocumentsInPlace);\n+        FA_MAC_UIDOCBROWSER.copyInto(params, builder::uiSupportsDocumentBrowser);\n+        FA_MAC_NSEXPORTABLETYPES.copyInto(params, builder::nsExportableTypes);\n+        FA_MAC_UTTYPECONFORMSTO.copyInto(params, builder::utTypeConformsTo);\n+\n+        return toFunction(builder::create).apply(fa);\n+    }\n+\n+    static final BundlerParamInfo<MacApplication> APPLICATION = createApplicationBundlerParam(\n+            MacFromParams::createMacApplication);\n+\n+    static final BundlerParamInfo<MacDmgPackage> DMG_PACKAGE = createPackageBundlerParam(\n+            MacFromParams::createMacDmgPackage);\n+\n+    static final BundlerParamInfo<MacPkgPackage> PKG_PACKAGE = createPackageBundlerParam(\n+            MacFromParams::createMacPkgPackage);\n+\n+    private static final BundlerParamInfo<String> MAC_CF_BUNDLE_NAME = createStringBundlerParam(\n+            Arguments.CLIOptions.MAC_BUNDLE_NAME.getId());\n+\n+    private static final BundlerParamInfo<String> APP_CATEGORY = createStringBundlerParam(\n+            Arguments.CLIOptions.MAC_CATEGORY.getId());\n+\n+    private static final BundlerParamInfo<Path> ENTITLEMENTS = createPathBundlerParam(\n+            Arguments.CLIOptions.MAC_ENTITLEMENTS.getId());\n+\n+    private static final BundlerParamInfo<String> MAC_CF_BUNDLE_IDENTIFIER = createStringBundlerParam(\n+            Arguments.CLIOptions.MAC_BUNDLE_IDENTIFIER.getId());\n+\n+    private static final BundlerParamInfo<String> SIGN_IDENTIFIER_PREFIX = createStringBundlerParam(\n+            Arguments.CLIOptions.MAC_BUNDLE_SIGNING_PREFIX.getId());\n+\n+    private static final BundlerParamInfo<String> APP_IMAGE_SIGN_IDENTITY = createStringBundlerParam(\n+            Arguments.CLIOptions.MAC_APP_IMAGE_SIGN_IDENTITY.getId());\n+\n+    private static final BundlerParamInfo<String> INSTALLER_SIGN_IDENTITY = createStringBundlerParam(\n+            Arguments.CLIOptions.MAC_INSTALLER_SIGN_IDENTITY.getId());\n+\n+    private static final BundlerParamInfo<String> SIGNING_KEY_USER = createStringBundlerParam(\n+            Arguments.CLIOptions.MAC_SIGNING_KEY_NAME.getId());\n+\n+    private static final BundlerParamInfo<String> SIGNING_KEYCHAIN = createStringBundlerParam(\n+            Arguments.CLIOptions.MAC_SIGNING_KEYCHAIN.getId());\n+\n+    private static final BundlerParamInfo<String> PACKAGE_TYPE = createStringBundlerParam(\n+            Arguments.CLIOptions.PACKAGE_TYPE.getId());\n+\n+    private static final BundlerParamInfo<Boolean> APP_STORE = createBooleanBundlerParam(\n+            Arguments.CLIOptions.MAC_APP_STORE.getId());\n+\n+    private static final BundlerParamInfo<String> FA_MAC_CFBUNDLETYPEROLE = createStringBundlerParam(\n+            Arguments.MAC_CFBUNDLETYPEROLE);\n+\n+    private static final BundlerParamInfo<String> FA_MAC_LSHANDLERRANK = createStringBundlerParam(\n+            Arguments.MAC_LSHANDLERRANK);\n+\n+    private static final BundlerParamInfo<String> FA_MAC_NSSTORETYPEKEY = createStringBundlerParam(\n+            Arguments.MAC_NSSTORETYPEKEY);\n+\n+    private static final BundlerParamInfo<String> FA_MAC_NSDOCUMENTCLASS = createStringBundlerParam(\n+            Arguments.MAC_NSDOCUMENTCLASS);\n+\n+    private static final BundlerParamInfo<Boolean> FA_MAC_LSTYPEISPACKAGE = createBooleanBundlerParam(\n+            Arguments.MAC_LSTYPEISPACKAGE);\n+\n+    private static final BundlerParamInfo<Boolean> FA_MAC_LSDOCINPLACE = createBooleanBundlerParam(\n+            Arguments.MAC_LSDOCINPLACE);\n+\n+    private static final BundlerParamInfo<Boolean> FA_MAC_UIDOCBROWSER = createBooleanBundlerParam(\n+            Arguments.MAC_UIDOCBROWSER);\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static final BundlerParamInfo<List<String>> FA_MAC_NSEXPORTABLETYPES =\n+            new BundlerParamInfo<>(\n+                    Arguments.MAC_NSEXPORTABLETYPES,\n+                    (Class<List<String>>) (Object) List.class,\n+                    null,\n+                    (s, p) -> Arrays.asList(s.split(\"(,|\\\\s)+\"))\n+            );\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static final BundlerParamInfo<List<String>> FA_MAC_UTTYPECONFORMSTO =\n+            new BundlerParamInfo<>(\n+                    Arguments.MAC_UTTYPECONFORMSTO,\n+                    (Class<List<String>>) (Object) List.class,\n+                    null,\n+                    (s, p) -> Arrays.asList(s.split(\"(,|\\\\s)+\"))\n+            );\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacFromParams.java","additions":364,"deletions":0,"binary":false,"changes":364,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.io.IOException;\n@@ -30,6 +29,2 @@\n-import java.util.Map;\n-import java.util.Optional;\n-import java.util.function.Predicate;\n-import static jdk.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.MacPackage;\n@@ -43,4 +38,3 @@\n-    private MacLaunchersAsServices(PlatformPackage thePackage,\n-            Map<String, Object> params) throws IOException {\n-        super(thePackage, List.of(), params, li -> {\n-            return new Launcher(thePackage, li.getName(), params);\n+    MacLaunchersAsServices(BuildEnv env, MacPackage pkg) {\n+        super(env.appImageDir(), pkg.app(), List.of(), launcher -> {\n+            return new MacLauncherAsService(env, pkg, launcher);\n@@ -50,32 +44,1 @@\n-    static ShellCustomAction create(Map<String, Object> params,\n-            Path outputDir) throws IOException {\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-            return null;\n-        }\n-        return Optional.of(new MacLaunchersAsServices(new PlatformPackage() {\n-            @Override\n-            public String name() {\n-                return MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params);\n-            }\n-\n-            @Override\n-            public Path sourceRoot() {\n-                return outputDir;\n-            }\n-\n-            @Override\n-            public ApplicationLayout sourceApplicationLayout() {\n-                throw new UnsupportedOperationException();\n-            }\n-\n-            @Override\n-            public ApplicationLayout installedApplicationLayout() {\n-                return ApplicationLayout.macAppImage().resolveAt(Path.of(\n-                        MacBaseInstallerBundler.getInstallDir(params, false),\n-                        APP_NAME.fetchFrom(params) + \".app\"));\n-            }\n-        }, params)).filter(Predicate.not(MacLaunchersAsServices::isEmpty)).orElse(\n-                null);\n-    }\n-\n-    public static Path getServicePListFileName(String packageName,\n+    public static Path getServicePListFileName(String bundleIdentifier,\n@@ -84,1 +47,1 @@\n-        return Path.of(packageName + \"-\" + baseName + \".plist\");\n+        return Path.of(bundleIdentifier + \"-\" + baseName + \".plist\");\n@@ -87,1 +50,1 @@\n-    private static class Launcher extends UnixLauncherAsService {\n+    private static class MacLauncherAsService extends UnixLauncherAsService {\n@@ -89,5 +52,3 @@\n-        Launcher(PlatformPackage thePackage, String name,\n-                Map<String, Object> mainParams) {\n-            super(name, mainParams, createResource(\"launchd.plist.template\",\n-                    mainParams).setCategory(I18N.getString(\n-                            \"resource.launchd-plist-file\")));\n+        MacLauncherAsService(BuildEnv env, MacPackage pkg, Launcher launcher) {\n+            super(pkg.app(), launcher, env.createResource(\"launchd.plist.template\").setCategory(I18N\n+                    .getString(\"resource.launchd-plist-file\")));\n@@ -95,1 +56,1 @@\n-            plistFilename = getServicePListFileName(thePackage.name(), getName());\n+            plistFilename = getServicePListFileName(pkg.app().bundleIdentifier(), getName());\n@@ -105,2 +66,1 @@\n-                            thePackage.installedApplicationLayout().launchersDirectory().resolve(\n-                                    getName()).toString());\n+                            pkg.asInstalledPackageApplicationLayout().orElseThrow().launchersDirectory().resolve(getName()).toString());\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacLaunchersAsServices.java","additions":14,"deletions":54,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.util.Objects;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.MacPackage;\n+import jdk.jpackage.internal.model.MacPackageMixin;\n+\n+final class MacPackageBuilder {\n+\n+    MacPackageBuilder(PackageBuilder pkgBuilder) {\n+        this.pkgBuilder = Objects.requireNonNull(pkgBuilder);\n+    }\n+\n+    MacPackageBuilder predefinedAppImageSigned(boolean  v) {\n+        predefinedAppImageSigned = v;\n+        return this;\n+    }\n+\n+    PackageBuilder pkgBuilder() {\n+        return pkgBuilder;\n+    }\n+\n+    MacPackage create() throws ConfigException {\n+        final var pkg = pkgBuilder.create();\n+        return MacPackage.create(pkg, new MacPackageMixin.Stub(pkg.predefinedAppImage().map(v -> predefinedAppImageSigned)));\n+    }\n+\n+    private final PackageBuilder pkgBuilder;\n+    private boolean predefinedAppImageSigned;\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPackageBuilder.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,460 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.ApplicationImageUtils.createWriteAppImageFileAction;\n+import static jdk.jpackage.internal.util.PListWriter.writeArray;\n+import static jdk.jpackage.internal.util.PListWriter.writeBoolean;\n+import static jdk.jpackage.internal.util.PListWriter.writeBooleanOptional;\n+import static jdk.jpackage.internal.util.PListWriter.writeDict;\n+import static jdk.jpackage.internal.util.PListWriter.writeKey;\n+import static jdk.jpackage.internal.util.PListWriter.writeString;\n+import static jdk.jpackage.internal.util.PListWriter.writeStringArray;\n+import static jdk.jpackage.internal.util.PListWriter.writeStringOptional;\n+import static jdk.jpackage.internal.util.XmlUtils.toXmlConsumer;\n+import static jdk.jpackage.internal.util.function.ThrowingBiConsumer.toBiConsumer;\n+import static jdk.jpackage.internal.util.function.ThrowingSupplier.toSupplier;\n+\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import javax.xml.stream.XMLOutputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamWriter;\n+import jdk.jpackage.internal.PackagingPipeline.AppImageBuildEnv;\n+import jdk.jpackage.internal.PackagingPipeline.ApplicationImageTaskAction;\n+import jdk.jpackage.internal.PackagingPipeline.BuildApplicationTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.CopyAppImageTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.PackageBuildEnv;\n+import jdk.jpackage.internal.PackagingPipeline.PackageTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.PrimaryTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.TaskAction;\n+import jdk.jpackage.internal.PackagingPipeline.TaskContext;\n+import jdk.jpackage.internal.PackagingPipeline.TaskID;\n+import jdk.jpackage.internal.model.AppImageLayout;\n+import jdk.jpackage.internal.model.AppImageSigningConfig;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.FileAssociation;\n+import jdk.jpackage.internal.model.MacApplication;\n+import jdk.jpackage.internal.model.MacFileAssociation;\n+import jdk.jpackage.internal.model.MacPackage;\n+import jdk.jpackage.internal.model.Package;\n+import jdk.jpackage.internal.model.PackageType;\n+import jdk.jpackage.internal.model.PackagerException;\n+import jdk.jpackage.internal.util.PathUtils;\n+import jdk.jpackage.internal.util.function.ThrowingConsumer;\n+\n+final class MacPackagingPipeline {\n+\n+    enum MacBuildApplicationTaskID implements TaskID {\n+        RUNTIME_INFO_PLIST,\n+        COPY_JLILIB,\n+        APP_ICON,\n+        PKG_INFO_FILE,\n+        FA_ICONS,\n+        APP_INFO_PLIST,\n+        PACKAGE_FILE,\n+        SIGN\n+    }\n+\n+    enum MacCopyAppImageTaskID implements TaskID {\n+        COPY_PACKAGE_FILE,\n+        COPY_RUNTIME_INFO_PLIST,\n+        REPLACE_APP_IMAGE_FILE,\n+        COPY_SIGN\n+    }\n+\n+    static AppImageLayout packagingLayout(Package pkg) {\n+        return pkg.appImageLayout().resolveAt(pkg.relativeInstallDir().getFileName());\n+    }\n+\n+    static PackagingPipeline.Builder build(Optional<Package> pkg) {\n+        final var builder = PackagingPipeline.buildStandard()\n+                .appContextMapper(appContext -> {\n+                    return new TaskContextProxy(appContext, true, false);\n+                })\n+                .pkgContextMapper(appContext -> {\n+                    final var isRuntimeInstaller = pkg.map(Package::isRuntimeInstaller).orElse(false);\n+                    final var withPredefinedAppImage = pkg.flatMap(Package::predefinedAppImage).isPresent();\n+                    return new TaskContextProxy(appContext, false, isRuntimeInstaller || withPredefinedAppImage);\n+                })\n+                .appImageLayoutForPackaging(MacPackagingPipeline::packagingLayout)\n+                .task(PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT)\n+                        .packageAction(MacPackagingPipeline::runPostAppImageUserScript).add()\n+                .task(CopyAppImageTaskID.COPY)\n+                        .copyAction(MacPackagingPipeline::copyAppImage).add()\n+                .task(MacBuildApplicationTaskID.RUNTIME_INFO_PLIST)\n+                        .applicationAction(MacPackagingPipeline::writeApplicationRuntimeInfoPlist)\n+                        .addDependent(BuildApplicationTaskID.CONTENT).add()\n+                .task(MacBuildApplicationTaskID.COPY_JLILIB)\n+                        .applicationAction(MacPackagingPipeline::copyJliLib)\n+                        .addDependency(BuildApplicationTaskID.RUNTIME)\n+                        .addDependent(BuildApplicationTaskID.CONTENT).add()\n+                .task(MacBuildApplicationTaskID.APP_ICON)\n+                        .applicationAction(new ApplicationIcon())\n+                        .addDependent(BuildApplicationTaskID.CONTENT).add()\n+                .task(MacBuildApplicationTaskID.PKG_INFO_FILE)\n+                        .applicationAction(MacPackagingPipeline::writePkgInfoFile)\n+                        .addDependent(BuildApplicationTaskID.CONTENT).add()\n+                .task(MacBuildApplicationTaskID.PACKAGE_FILE)\n+                        .packageAction(MacPackagingPipeline::writePackageFile)\n+                        .addDependents(BuildApplicationTaskID.CONTENT).add()\n+                .task(MacCopyAppImageTaskID.REPLACE_APP_IMAGE_FILE)\n+                        .addDependent(PrimaryTaskID.COPY_APP_IMAGE)\n+                        .noaction().add()\n+                .task(MacCopyAppImageTaskID.COPY_PACKAGE_FILE)\n+                        .packageAction(MacPackagingPipeline::writePackageFile)\n+                        .addDependencies(CopyAppImageTaskID.COPY)\n+                        .addDependents(PrimaryTaskID.COPY_APP_IMAGE).add()\n+                .task(MacCopyAppImageTaskID.COPY_RUNTIME_INFO_PLIST)\n+                        .addDependencies(CopyAppImageTaskID.COPY)\n+                        .addDependents(PrimaryTaskID.COPY_APP_IMAGE).add()\n+                .task(MacBuildApplicationTaskID.FA_ICONS)\n+                        .applicationAction(MacPackagingPipeline::writeFileAssociationIcons)\n+                        .addDependent(BuildApplicationTaskID.CONTENT).add()\n+                .task(MacBuildApplicationTaskID.APP_INFO_PLIST)\n+                        .applicationAction(MacPackagingPipeline::writeAppInfoPlist)\n+                        .addDependent(BuildApplicationTaskID.CONTENT).add();\n+\n+        builder.task(MacBuildApplicationTaskID.SIGN)\n+                .appImageAction(MacPackagingPipeline::sign)\n+                .addDependencies(builder.taskGraphSnapshot().getAllTailsOf(PrimaryTaskID.BUILD_APPLICATION_IMAGE))\n+                .addDependent(PrimaryTaskID.BUILD_APPLICATION_IMAGE)\n+                .add();\n+\n+        builder.task(MacCopyAppImageTaskID.COPY_SIGN)\n+                .appImageAction(MacPackagingPipeline::sign)\n+                .addDependencies(builder.taskGraphSnapshot().getAllTailsOf(PrimaryTaskID.COPY_APP_IMAGE))\n+                .addDependent(PrimaryTaskID.COPY_APP_IMAGE)\n+                .add();\n+\n+        pkg.ifPresent(p -> {\n+            final List<TaskID> disabledTasks = new ArrayList<>();\n+\n+            if (p.type() instanceof SignAppImagePackageType) {\n+                \/\/ This is a phony package signing predefined app image.\n+                \/\/ Don't create \".package\" file.\n+                \/\/ Don't copy predefined app image, update it in place.\n+                \/\/ Disable running user script after app image ready.\n+                \/\/ Replace \".jpackage.xml\" file.\n+                \/\/ Use app image layout.\n+                disabledTasks.add(MacCopyAppImageTaskID.COPY_PACKAGE_FILE);\n+                disabledTasks.add(CopyAppImageTaskID.COPY);\n+                disabledTasks.add(PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT);\n+                builder.task(MacCopyAppImageTaskID.REPLACE_APP_IMAGE_FILE).applicationAction(createWriteAppImageFileAction()).add();\n+                builder.appImageLayoutForPackaging(Package::appImageLayout);\n+            } else if (p.isRuntimeInstaller() || ((MacPackage)p).predefinedAppImageSigned().orElse(false)) {\n+                \/\/ If this is a runtime package or a signed predefined app image,\n+                \/\/ don't create \".package\" file and don't sign it.\n+                disabledTasks.add(MacCopyAppImageTaskID.COPY_PACKAGE_FILE);\n+                disabledTasks.add(MacCopyAppImageTaskID.COPY_SIGN);\n+\/\/                if (p.isRuntimeInstaller()) {\n+\/\/                    builder.task(MacCopyAppImageTaskID.COPY_RUNTIME_INFO_PLIST).packageAction(MacPackagingPipeline::writeRuntimeRuntimeInfoPlist).add();\n+\/\/                }\n+            }\n+\n+            for (final var taskId : disabledTasks) {\n+                builder.task(taskId).noaction().add();\n+            }\n+        });\n+\n+        return builder;\n+    }\n+\n+    enum SignAppImagePackageType implements PackageType {\n+        VALUE;\n+    }\n+\n+    static Package createSignAppImagePackage(MacApplication app, BuildEnv env) {\n+        if (!app.sign()) {\n+            throw new IllegalArgumentException();\n+        }\n+        return toSupplier(() -> {\n+            return new PackageBuilder(app, SignAppImagePackageType.VALUE).predefinedAppImage(\n+                    Objects.requireNonNull(env.appImageDir())).installDir(Path.of(\"\/foo\")).create();\n+        }).get();\n+    }\n+\n+    private static void copyAppImage(MacPackage pkg, AppImageDesc srcAppImage,\n+            AppImageDesc dstAppImage) throws IOException {\n+        PackagingPipeline.copyAppImage(srcAppImage, dstAppImage, !pkg.predefinedAppImageSigned().orElse(false));\n+    }\n+\n+    private static void copyJliLib(\n+            AppImageBuildEnv<MacApplication, MacApplicationLayout> env) throws IOException {\n+\n+        final var runtimeMacOSDir = env.resolvedLayout().runtimeRootDirectory().resolve(\"Contents\/MacOS\");\n+\n+        final var jliName = Path.of(\"libjli.dylib\");\n+\n+        try (var walk = Files.walk(env.resolvedLayout().runtimeDirectory().resolve(\"lib\"))) {\n+            final var jli = walk\n+                    .filter(file -> file.getFileName().equals(jliName))\n+                    .findFirst()\n+                    .orElseThrow();\n+            Files.createDirectories(runtimeMacOSDir);\n+            Files.copy(jli, runtimeMacOSDir.resolve(jliName));\n+        }\n+    }\n+\n+    private static void runPostAppImageUserScript(PackageBuildEnv<Package, AppImageLayout> env) throws IOException {\n+        PackagingPipeline.runPostAppImageUserScript(new PackageBuildEnv<>(\n+                BuildEnv.withAppImageDir(env.env(), env.env().appImageDir().resolve(env.envLayout().rootDirectory())),\n+                env.pkg(), env.pkg().appImageLayout(), env.outputDir()));\n+    }\n+\n+    private static void writePackageFile(PackageBuildEnv<Package, ApplicationLayout> env) throws IOException {\n+        new PackageFile(env.pkg().packageName()).save(env.resolvedLayout());\n+    }\n+\n+    private static void writePkgInfoFile(\n+            AppImageBuildEnv<MacApplication, MacApplicationLayout> env) throws IOException {\n+\n+        final var dir = env.resolvedLayout().contentDirectory();\n+        Files.createDirectories(dir);\n+        Files.write(dir.resolve(\"PkgInfo\"),\n+                \"APPL????\".getBytes(StandardCharsets.ISO_8859_1));\n+    }\n+\n+    private static void writeRuntimeRuntimeInfoPlist(PackageBuildEnv<MacPackage, AppImageLayout> env) throws IOException {\n+        writeRuntimeInfoPlist(env.pkg().app(), env.env(), env.resolvedLayout().rootDirectory());\n+    }\n+\n+    private static void writeApplicationRuntimeInfoPlist(\n+            AppImageBuildEnv<MacApplication, MacApplicationLayout> env) throws IOException {\n+        writeRuntimeInfoPlist(env.app(), env.env(), env.resolvedLayout().runtimeRootDirectory());\n+    }\n+\n+    private static void writeRuntimeInfoPlist(MacApplication app, BuildEnv env, Path runtimeRootDirectory) throws IOException {\n+\n+        Map<String, String> data = new HashMap<>();\n+        data.put(\"CF_BUNDLE_IDENTIFIER\", app.bundleIdentifier());\n+        data.put(\"CF_BUNDLE_NAME\", app.bundleName());\n+        data.put(\"CF_BUNDLE_VERSION\", app.version());\n+        data.put(\"CF_BUNDLE_SHORT_VERSION_STRING\", app.shortVersion().toString());\n+\n+        env.createResource(\"Runtime-Info.plist.template\")\n+                .setPublicName(\"Runtime-Info.plist\")\n+                .setCategory(I18N.getString(\"resource.runtime-info-plist\"))\n+                .setSubstitutionData(data)\n+                .saveToFile(runtimeRootDirectory.resolve(\"Contents\/Info.plist\"));\n+    }\n+\n+    private static void writeAppInfoPlist(\n+            AppImageBuildEnv<MacApplication, MacApplicationLayout> env) throws IOException {\n+\n+        final var app = env.app();\n+\n+        final var infoPlistFile = env.resolvedLayout().contentDirectory().resolve(\"Info.plist\");\n+\n+        Log.verbose(I18N.format(\"message.preparing-info-plist\", PathUtils.normalizedAbsolutePathString(infoPlistFile)));\n+\n+        final String faXml = toSupplier(() -> {\n+            var buf = new StringWriter();\n+            var xml = XMLOutputFactory.newInstance().createXMLStreamWriter(buf);\n+            writeCFBundleDocumentTypes(xml, app);\n+            writeUTExportedTypeDeclarations(xml, app);\n+            xml.flush();\n+            xml.close();\n+            return buf.toString();\n+        }).get();\n+\n+        Map<String, String> data = new HashMap<>();\n+        data.put(\"DEPLOY_ICON_FILE\", ApplicationIcon.getPath(app, env.resolvedLayout()).getFileName().toString());\n+        data.put(\"DEPLOY_BUNDLE_COPYRIGHT\", app.copyright());\n+        data.put(\"DEPLOY_LAUNCHER_NAME\", app.mainLauncher().orElseThrow().executableNameWithSuffix());\n+        data.put(\"DEPLOY_BUNDLE_SHORT_VERSION\", app.shortVersion().toString());\n+        data.put(\"DEPLOY_BUNDLE_CFBUNDLE_VERSION\", app.version());\n+        data.put(\"DEPLOY_BUNDLE_NAME\", app.bundleName());\n+        data.put(\"DEPLOY_BUNDLE_IDENTIFIER\", app.bundleIdentifier());\n+        data.put(\"DEPLOY_APP_CATEGORY\", app.category());\n+        data.put(\"DEPLOY_FILE_ASSOCIATIONS\", faXml);\n+\n+        env.env().createResource(\"Info-lite.plist.template\")\n+                .setCategory(I18N.getString(\"resource.app-info-plist\"))\n+                .setSubstitutionData(data)\n+                .setPublicName(\"Info.plist\")\n+                .saveToFile(infoPlistFile);\n+    }\n+\n+    private static void sign(AppImageBuildEnv<MacApplication, MacApplicationLayout> env) throws IOException {\n+\n+        final var app = env.app();\n+\n+        final var codesignConfigBuilder = CodesignConfig.build();\n+        app.signingConfig().ifPresent(codesignConfigBuilder::from);\n+\n+        if (app.sign() && app.signingConfig().flatMap(AppImageSigningConfig::entitlements).isEmpty()) {\n+            final var entitlementsDefaultResource = app.signingConfig().map(\n+                    AppImageSigningConfig::entitlementsResourceName).orElseThrow();\n+\n+            final var entitlementsFile = env.env().configDir().resolve(app.name() + \".entitlements\");\n+\n+            env.env().createResource(entitlementsDefaultResource)\n+                    .setCategory(I18N.getString(\"resource.entitlements\"))\n+                    .saveToFile(entitlementsFile);\n+\n+            codesignConfigBuilder.entitlements(entitlementsFile);\n+        }\n+\n+        final Runnable signAction = () -> {\n+            final var appImageDir = env.resolvedLayout().rootDirectory();\n+            AppImageSigner.createSigner(app, codesignConfigBuilder.create()).accept(appImageDir);\n+        };\n+\n+        app.signingConfig().flatMap(AppImageSigningConfig::keychain).map(Keychain::new).ifPresentOrElse(keychain -> {\n+            toBiConsumer(TempKeychain::withKeychain).accept(unused -> signAction.run(), keychain);\n+        }, signAction);\n+    }\n+\n+    private static void writeCFBundleDocumentTypes(XMLStreamWriter xml,\n+            MacApplication app) throws XMLStreamException, IOException {\n+        final var fas = app.fileAssociations().toList();\n+        if (!fas.isEmpty()) {\n+            writeKey(xml, \"CFBundleDocumentTypes\");\n+            writeArray(xml, toXmlConsumer(() -> {\n+                for (var fa : fas) {\n+                    writeDict(xml, toXmlConsumer(() -> {\n+                        addFaToCFBundleDocumentTypes(xml, app, (MacFileAssociation) fa);\n+                    }));\n+                }\n+            }));\n+        }\n+    }\n+\n+    private static void writeUTExportedTypeDeclarations(XMLStreamWriter xml,\n+            MacApplication app) throws XMLStreamException, IOException {\n+        final var fas = app.fileAssociations().toList();\n+        if (!fas.isEmpty()) {\n+            writeKey(xml, \"UTExportedTypeDeclarations\");\n+            writeArray(xml, toXmlConsumer(() -> {\n+                for (var fa : fas) {\n+                    writeDict(xml, toXmlConsumer(() -> {\n+                        addFaToUTExportedTypeDeclarations(xml, app, (MacFileAssociation) fa);\n+                    }));\n+                }\n+            }));\n+        }\n+    }\n+\n+    private static String faContentType(MacApplication app, MacFileAssociation fa) {\n+        return String.format(\"%s.%s\", app.bundleIdentifier(), fa.extension());\n+    }\n+\n+    private static void faWriteIcon(XMLStreamWriter xml, String key, FileAssociation fa)\n+            throws XMLStreamException {\n+        fa.icon().ifPresent(ThrowingConsumer.toConsumer(icon -> {\n+            writeString(xml, key, icon.getFileName());\n+        }));\n+    }\n+\n+    private static void addFaToCFBundleDocumentTypes(XMLStreamWriter xml,\n+            MacApplication app, MacFileAssociation fa) throws XMLStreamException, IOException {\n+\n+        writeStringArray(xml, \"LSItemContentTypes\", List.of(faContentType(app, fa)));\n+        writeStringOptional(xml, \"CFBundleTypeName\", fa.description());\n+        writeString(xml, \"LSHandlerRank\", fa.lsHandlerRank());\n+        writeString(xml, \"CFBundleTypeRole\", fa.cfBundleTypeRole());\n+        writeStringOptional(xml, \"NSPersistentStoreTypeKey\", fa.nsPersistentStoreTypeKey());\n+        writeStringOptional(xml, \"NSDocumentClass\", fa.nsDocumentClass());\n+        writeBoolean(xml, \"LSIsAppleDefaultForType\", true);\n+        writeBooleanOptional(xml, \"LSTypeIsPackage\", fa.lsTypeIsPackage());\n+        writeBooleanOptional(xml, \"LSSupportsOpeningDocumentsInPlace\", fa.lsSupportsOpeningDocumentsInPlace());\n+        writeBooleanOptional(xml, \"UISupportsDocumentBrowser\", fa.uiSupportsDocumentBrowser());\n+        faWriteIcon(xml, \"CFBundleTypeIconFile\", fa);\n+    }\n+\n+    private static void addFaToUTExportedTypeDeclarations(XMLStreamWriter xml,\n+            MacApplication app, MacFileAssociation fa) throws XMLStreamException, IOException {\n+        writeString(xml, \"UTTypeIdentifier\", faContentType(app, fa));\n+        writeStringOptional(xml, \"UTTypeDescription\", fa.description());\n+        writeStringArray(xml, \"UTTypeConformsTo\", fa.utTypeConformsTo());\n+        faWriteIcon(xml, \"UTTypeIconFile\", fa);\n+\n+        writeKey(xml, \"UTTypeTagSpecification\");\n+        writeDict(xml, toXmlConsumer(() -> {\n+            writeStringArray(xml, \"public.filename-extension\", List.of(fa.extension()));\n+            writeStringArray(xml, \"public.mime-type\", List.of(fa.mimeType()));\n+            writeStringArray(xml, \"NSExportableTypes\", fa.nsExportableTypes());\n+        }));\n+    }\n+\n+    private static class ApplicationIcon implements ApplicationImageTaskAction<MacApplication, MacApplicationLayout> {\n+        static Path getPath(Application app, ApplicationLayout appLayout) {\n+            return appLayout.desktopIntegrationDirectory().resolve(app.name() + \".icns\");\n+        }\n+\n+        @Override\n+        public void execute(AppImageBuildEnv<MacApplication, MacApplicationLayout> env)\n+                throws IOException {\n+            final var resource = env.env().createResource(\"JavaApp.icns\").setCategory(\"icon\");\n+\n+            env.app().icon().ifPresent(resource::setExternal);\n+\n+            resource.saveToFile(getPath(env.app(), env.resolvedLayout()));\n+        }\n+    }\n+\n+    private static void writeFileAssociationIcons(AppImageBuildEnv<MacApplication, MacApplicationLayout> env) throws IOException {\n+        for (var faIcon : env.app().fileAssociations()\n+                .filter(FileAssociation::hasIcon)\n+                .map(FileAssociation::icon)\n+                .map(Optional::get).toList()) {\n+            Files.copy(faIcon, env.resolvedLayout().desktopIntegrationDirectory().resolve(faIcon.getFileName()));\n+        }\n+    }\n+\n+    private record TaskContextProxy(TaskContext delegate, boolean forApp, boolean copyAppImage) implements TaskContext {\n+\n+        @Override\n+        public boolean test(TaskID taskID) {\n+            if (!delegate.test(taskID)) {\n+                return false;\n+            } else if (taskID == MacBuildApplicationTaskID.PACKAGE_FILE) {\n+                \/\/ Don't create files relevant for package bundling when bundling app image\n+                return !forApp;\n+            } else {\n+                return true;\n+            }\n+        }\n+\n+        @Override\n+        public void execute(TaskAction taskAction) throws IOException, PackagerException {\n+            delegate.execute(taskAction);\n+        }\n+    }\n+\n+    static final MacApplicationLayout APPLICATION_LAYOUT = MacApplicationLayout.create(\n+            ApplicationLayoutUtils.PLATFORM_APPLICATION_LAYOUT, Path.of(\"Contents\/runtime\"));\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPackagingPipeline.java","additions":460,"deletions":0,"binary":false,"changes":460,"status":"added"},{"patch":"@@ -28,10 +28,0 @@\n-import jdk.internal.util.Architecture;\n-import jdk.internal.util.OSVersion;\n-\n-import java.io.ByteArrayOutputStream;\n-import java.io.IOException;\n-import java.io.PrintStream;\n-import java.io.PrintWriter;\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.nio.file.Files;\n@@ -39,5 +29,0 @@\n-import java.text.MessageFormat;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n@@ -46,17 +31,0 @@\n-import java.util.Optional;\n-import java.util.ResourceBundle;\n-import javax.xml.stream.XMLStreamException;\n-import javax.xml.stream.XMLStreamWriter;\n-\n-import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n-import static jdk.jpackage.internal.MacAppBundler.APP_IMAGE_SIGN_IDENTITY;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_STORE;\n-import static jdk.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n-\n@@ -65,2 +33,0 @@\n-import jdk.jpackage.internal.util.FileUtils;\n-import jdk.jpackage.internal.util.XmlUtils;\n@@ -70,630 +36,0 @@\n-    private static final ResourceBundle I18N = ResourceBundle.getBundle(\n-            \"jdk.jpackage.internal.resources.MacResources\");\n-\n-    private static final String DEFAULT_BACKGROUND_IMAGE = \"background_pkg.png\";\n-    private static final String DEFAULT_PDF = \"product-def.plist\";\n-\n-    private static final BundlerParamInfo<Path> PACKAGES_ROOT =\n-            new StandardBundlerParam<>(\n-            \"mac.pkg.packagesRoot\",\n-            Path.class,\n-            params -> {\n-                Path packagesRoot =\n-                        TEMP_ROOT.fetchFrom(params).resolve(\"packages\");\n-                try {\n-                    Files.createDirectories(packagesRoot);\n-                } catch (IOException ioe) {\n-                    return null;\n-                }\n-                return packagesRoot;\n-            },\n-            (s, p) -> Path.of(s));\n-\n-\n-    protected final BundlerParamInfo<Path> SCRIPTS_DIR =\n-            new StandardBundlerParam<>(\n-            \"mac.pkg.scriptsDir\",\n-            Path.class,\n-            params -> {\n-                Path scriptsDir =\n-                        CONFIG_ROOT.fetchFrom(params).resolve(\"scripts\");\n-                try {\n-                    Files.createDirectories(scriptsDir);\n-                } catch (IOException ioe) {\n-                    return null;\n-                }\n-                return scriptsDir;\n-            },\n-            (s, p) -> Path.of(s));\n-\n-    public static final\n-            BundlerParamInfo<String> DEVELOPER_ID_INSTALLER_SIGNING_KEY =\n-            new StandardBundlerParam<>(\n-            \"mac.signing-key-developer-id-installer\",\n-            String.class,\n-            params -> {\n-                    String user = SIGNING_KEY_USER.fetchFrom(params);\n-                    String keychain = SIGNING_KEYCHAIN.fetchFrom(params);\n-                    String result = null;\n-                    if (APP_STORE.fetchFrom(params)) {\n-                        result = MacCertificate.findCertificateKey(\n-                            \"3rd Party Mac Developer Installer: \",\n-                            user, keychain);\n-                    }\n-                    \/\/ if either not signing for app store or couldn't find\n-                    if (result == null) {\n-                        result = MacCertificate.findCertificateKey(\n-                            \"Developer ID Installer: \", user, keychain);\n-                    }\n-\n-                    if (result != null) {\n-                        MacCertificate certificate = new MacCertificate(result, keychain);\n-\n-                        if (!certificate.isValid()) {\n-                            Log.error(MessageFormat.format(\n-                                    I18N.getString(\"error.certificate.expired\"),\n-                                    result));\n-                        }\n-                    }\n-\n-                    return result;\n-                },\n-            (s, p) -> s);\n-\n-    public Path bundle(Map<String, ? super Object> params,\n-            Path outdir) throws PackagerException {\n-        Log.verbose(MessageFormat.format(I18N.getString(\"message.building-pkg\"),\n-                APP_NAME.fetchFrom(params)));\n-\n-        IOUtils.writableOutputDir(outdir);\n-\n-        try {\n-            Path appImageDir = prepareAppBundle(params);\n-\n-            if (appImageDir != null && prepareConfigFiles(params)) {\n-                prepareCPLFile(params, appImageDir);\n-\n-                if (withServicesPkg(params)) {\n-                    prepareServicesPkg(params);\n-                }\n-\n-                if (!APP_STORE.fetchFrom(params)) {\n-                    preparePackageScripts(params);\n-                }\n-\n-                new ScriptRunner()\n-                        .setDirectory(appImageDir)\n-                        .setResourceCategoryId(\"resource.post-app-image-script\")\n-                        .setScriptNameSuffix(\"post-image\")\n-                        .setEnvironmentVariable(\"JpAppImageDir\", appImageDir.toAbsolutePath().toString())\n-                        .run(params);\n-\n-                return createPKG(params, outdir, appImageDir);\n-            }\n-            return null;\n-        } catch (IOException ex) {\n-            Log.verbose(ex);\n-            throw new PackagerException(ex);\n-        }\n-    }\n-\n-    private Path getPackages_AppPackage(Map<String, ? super Object> params) {\n-        return PACKAGES_ROOT.fetchFrom(params).resolve(\n-                APP_NAME.fetchFrom(params) + \"-app.pkg\");\n-    }\n-\n-    private Path getPackages_ServicesPackage(Map<String, ? super Object> params) {\n-        return PACKAGES_ROOT.fetchFrom(params).resolve(\n-                APP_NAME.fetchFrom(params) + \"-services.pkg\");\n-    }\n-\n-    private Path getPackages_SupportPackage(Map<String, ? super Object> params) {\n-        return PACKAGES_ROOT.fetchFrom(params).resolve(\n-                APP_NAME.fetchFrom(params) + \"-support.pkg\");\n-    }\n-\n-    private Path getConfig_DistributionXMLFile(\n-            Map<String, ? super Object> params) {\n-        return CONFIG_ROOT.fetchFrom(params).resolve(\"distribution.dist\");\n-    }\n-\n-    private Path getConfig_PDF(Map<String, ? super Object> params) {\n-        return CONFIG_ROOT.fetchFrom(params).resolve(\"product-def.plist\");\n-    }\n-\n-    private Path getConfig_BackgroundImage(Map<String, ? super Object> params) {\n-        return CONFIG_ROOT.fetchFrom(params).resolve(\n-                APP_NAME.fetchFrom(params) + \"-background.png\");\n-    }\n-\n-    private Path getConfig_BackgroundImageDarkAqua(Map<String, ? super Object> params) {\n-        return CONFIG_ROOT.fetchFrom(params).resolve(\n-                APP_NAME.fetchFrom(params) + \"-background-darkAqua.png\");\n-    }\n-\n-    private String getAppIdentifier(Map<String, ? super Object> params) {\n-        return MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params);\n-    }\n-\n-    private String getServicesIdentifier(Map<String, ? super Object> params) {\n-        return MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params) + \".services\";\n-    }\n-\n-    private String getSupportIdentifier(Map<String, ? super Object> params) {\n-        return MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params) + \".support\";\n-    }\n-\n-    private void preparePackageScripts(Map<String, ? super Object> params)\n-            throws IOException {\n-        Log.verbose(I18N.getString(\"message.preparing-scripts\"));\n-\n-        Map<String, String> data = new HashMap<>();\n-\n-        Path appLocation = Path.of(getInstallDir(params, false),\n-                         APP_NAME.fetchFrom(params) + \".app\", \"Contents\", \"app\");\n-\n-        data.put(\"INSTALL_LOCATION\", getInstallDir(params, false));\n-        data.put(\"APP_LOCATION\", appLocation.toString());\n-\n-        MacPkgInstallerScripts.createAppScripts()\n-                .setResourceDir(RESOURCE_DIR.fetchFrom(params))\n-                .setSubstitutionData(data)\n-                .saveInFolder(SCRIPTS_DIR.fetchFrom(params));\n-    }\n-\n-    private void addPackageToInstallerGuiScript(XMLStreamWriter xml,\n-            String pkgId, String pkgName, String pkgVersion) throws IOException,\n-            XMLStreamException {\n-        xml.writeStartElement(\"pkg-ref\");\n-        xml.writeAttribute(\"id\", pkgId);\n-        xml.writeEndElement(); \/\/ <\/pkg-ref>\n-        xml.writeStartElement(\"choice\");\n-        xml.writeAttribute(\"id\", pkgId);\n-        xml.writeAttribute(\"visible\", \"false\");\n-        xml.writeStartElement(\"pkg-ref\");\n-        xml.writeAttribute(\"id\", pkgId);\n-        xml.writeEndElement(); \/\/ <\/pkg-ref>\n-        xml.writeEndElement(); \/\/ <\/choice>\n-        xml.writeStartElement(\"pkg-ref\");\n-        xml.writeAttribute(\"id\", pkgId);\n-        xml.writeAttribute(\"version\", pkgVersion);\n-        xml.writeAttribute(\"onConclusion\", \"none\");\n-        try {\n-            xml.writeCharacters(new URI(null, null, pkgName, null).toASCIIString());\n-        } catch (URISyntaxException ex) {\n-            throw new RuntimeException(ex);\n-        }\n-        xml.writeEndElement(); \/\/ <\/pkg-ref>\n-    }\n-\n-    private void prepareDistributionXMLFile(Map<String, ? super Object> params)\n-            throws IOException {\n-        Path f = getConfig_DistributionXMLFile(params);\n-\n-        Log.verbose(MessageFormat.format(I18N.getString(\n-                \"message.preparing-distribution-dist\"), f.toAbsolutePath().toString()));\n-\n-        XmlUtils.createXml(f, xml -> {\n-            xml.writeStartElement(\"installer-gui-script\");\n-            xml.writeAttribute(\"minSpecVersion\", \"1\");\n-\n-            xml.writeStartElement(\"title\");\n-            xml.writeCharacters(APP_NAME.fetchFrom(params));\n-            xml.writeEndElement();\n-\n-            xml.writeStartElement(\"background\");\n-            xml.writeAttribute(\"file\",\n-                    getConfig_BackgroundImage(params).getFileName().toString());\n-            xml.writeAttribute(\"mime-type\", \"image\/png\");\n-            xml.writeAttribute(\"alignment\", \"bottomleft\");\n-            xml.writeAttribute(\"scaling\", \"none\");\n-            xml.writeEndElement();\n-\n-            xml.writeStartElement(\"background-darkAqua\");\n-            xml.writeAttribute(\"file\",\n-                    getConfig_BackgroundImageDarkAqua(params).getFileName().toString());\n-            xml.writeAttribute(\"mime-type\", \"image\/png\");\n-            xml.writeAttribute(\"alignment\", \"bottomleft\");\n-            xml.writeAttribute(\"scaling\", \"none\");\n-            xml.writeEndElement();\n-\n-            String licFileStr = LICENSE_FILE.fetchFrom(params);\n-            if (licFileStr != null) {\n-                Path licFile = Path.of(licFileStr);\n-                xml.writeStartElement(\"license\");\n-                xml.writeAttribute(\"file\", licFile.toAbsolutePath().toString());\n-                xml.writeAttribute(\"mime-type\", \"text\/rtf\");\n-                xml.writeEndElement();\n-            }\n-\n-            \/*\n-             * Note that the content of the distribution file\n-             * below is generated by productbuild --synthesize\n-             *\/\n-\n-            Map<String, Path> pkgs = new LinkedHashMap<>();\n-\n-            pkgs.put(getAppIdentifier(params), getPackages_AppPackage(params));\n-            if (withServicesPkg(params)) {\n-                pkgs.put(getServicesIdentifier(params),\n-                        getPackages_ServicesPackage(params));\n-                pkgs.put(getSupportIdentifier(params),\n-                        getPackages_SupportPackage(params));\n-            }\n-\n-            for (var pkg : pkgs.entrySet()) {\n-                addPackageToInstallerGuiScript(xml, pkg.getKey(),\n-                        pkg.getValue().getFileName().toString(),\n-                        VERSION.fetchFrom(params));\n-            }\n-\n-            xml.writeStartElement(\"options\");\n-            xml.writeAttribute(\"customize\", \"never\");\n-            xml.writeAttribute(\"require-scripts\", \"false\");\n-            xml.writeAttribute(\"hostArchitectures\",\n-                    Architecture.isAARCH64() ? \"arm64\" : \"x86_64\");\n-            xml.writeEndElement(); \/\/ <\/options>\n-            xml.writeStartElement(\"choices-outline\");\n-            xml.writeStartElement(\"line\");\n-            xml.writeAttribute(\"choice\", \"default\");\n-            for (var pkgId : pkgs.keySet()) {\n-                xml.writeStartElement(\"line\");\n-                xml.writeAttribute(\"choice\", pkgId);\n-                xml.writeEndElement(); \/\/ <\/line>\n-            }\n-            xml.writeEndElement(); \/\/ <\/line>\n-            xml.writeEndElement(); \/\/ <\/choices-outline>\n-            xml.writeStartElement(\"choice\");\n-            xml.writeAttribute(\"id\", \"default\");\n-            xml.writeEndElement(); \/\/ <\/choice>\n-\n-            xml.writeEndElement(); \/\/ <\/installer-gui-script>\n-        });\n-    }\n-\n-    private boolean prepareConfigFiles(Map<String, ? super Object> params)\n-            throws IOException {\n-\n-        createResource(DEFAULT_BACKGROUND_IMAGE, params)\n-                .setCategory(I18N.getString(\"resource.pkg-background-image\"))\n-                .saveToFile(getConfig_BackgroundImage(params));\n-\n-        createResource(DEFAULT_BACKGROUND_IMAGE, params)\n-                .setCategory(I18N.getString(\"resource.pkg-background-image\"))\n-                .saveToFile(getConfig_BackgroundImageDarkAqua(params));\n-\n-        createResource(DEFAULT_PDF, params)\n-                .setCategory(I18N.getString(\"resource.pkg-pdf\"))\n-                .saveToFile(getConfig_PDF(params));\n-\n-        prepareDistributionXMLFile(params);\n-\n-        return true;\n-    }\n-\n-    private void patchCPLFile(Path cpl) throws IOException {\n-        String cplData = Files.readString(cpl);\n-        String[] lines = cplData.split(\"\\n\");\n-        try (PrintWriter out = new PrintWriter(Files.newBufferedWriter(cpl))) {\n-            int skip = 0;\n-            \/\/ Used to skip Java.runtime bundle, since\n-            \/\/ pkgbuild with --root will find two bundles app and Java runtime.\n-            \/\/ We cannot generate component proprty list when using\n-            \/\/ --component argument.\n-            for (int i = 0; i < lines.length; i++) {\n-                if (lines[i].trim().equals(\"<key>BundleIsRelocatable<\/key>\")) {\n-                    out.println(lines[i]);\n-                    out.println(\"<false\/>\");\n-                    i++;\n-                } else if (lines[i].trim().equals(\"<key>ChildBundles<\/key>\")) {\n-                    ++skip;\n-                } else if ((skip > 0) && lines[i].trim().equals(\"<\/array>\")) {\n-                    --skip;\n-                } else {\n-                    if (skip == 0) {\n-                        out.println(lines[i]);\n-                    }\n-                }\n-            }\n-        }\n-    }\n-\n-    \/\/ pkgbuild includes all components from \"--root\" and subfolders,\n-    \/\/ so if we have app image in folder which contains other images, then they\n-    \/\/ will be included as well. It does have \"--filter\" option which use regex\n-    \/\/ to exclude files\/folder, but it will overwrite default one which excludes\n-    \/\/ based on doc \"any .svn or CVS directories, and any .DS_Store files\".\n-    \/\/ So easy approach will be to copy user provided app-image into temp folder\n-    \/\/ if root path contains other files.\n-    private String getRoot(Map<String, ? super Object> params,\n-            Path appLocation) throws IOException {\n-        Path rootDir = appLocation.getParent() == null ?\n-                Path.of(\".\") : appLocation.getParent();\n-\n-        \/\/ Not needed for runtime installer and it might break runtime installer\n-        \/\/ if parent does not have any other files\n-        if (!StandardBundlerParam.isRuntimeInstaller(params)) {\n-            try (var fileList = Files.list(rootDir)) {\n-                Path[] list = fileList.toArray(Path[]::new);\n-                \/\/ We should only have app image and\/or .DS_Store\n-                if (list.length == 1) {\n-                    return rootDir.toString();\n-                } else if (list.length == 2) {\n-                    \/\/ Check case with app image and .DS_Store\n-                    if (list[0].toString().toLowerCase().endsWith(\".ds_store\") ||\n-                        list[1].toString().toLowerCase().endsWith(\".ds_store\")) {\n-                        return rootDir.toString(); \/\/ Only app image and .DS_Store\n-                    }\n-                }\n-            }\n-        }\n-\n-        \/\/ Copy to new root\n-        Path newRoot = Files.createTempDirectory(\n-                TEMP_ROOT.fetchFrom(params), \"root-\");\n-\n-        Path source, dest;\n-\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-            \/\/ firs, is this already a runtime with\n-            \/\/ <runtime>\/Contents\/Home - if so we need the Home dir\n-            Path original = appLocation;\n-            Path home = original.resolve(\"Contents\/Home\");\n-            source = (Files.exists(home)) ? home : original;\n-\n-            \/\/ Then we need to put back the <NAME>\/Content\/Home\n-            dest = newRoot.resolve(\n-                MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params) + \"\/Contents\/Home\");\n-        } else {\n-            source = appLocation;\n-            dest = newRoot.resolve(appLocation.getFileName());\n-        }\n-        FileUtils.copyRecursive(source, dest);\n-\n-        return newRoot.toString();\n-    }\n-\n-    private boolean withServicesPkg(Map<String, Object> params) {\n-        try {\n-            return !APP_STORE.fetchFrom(params)\n-                    && MacLaunchersAsServices.create(params, null) != null;\n-        } catch (IOException ex) {\n-            throw new RuntimeException(ex);\n-        }\n-    }\n-\n-    private void prepareServicesPkg(Map<String, Object> params) throws IOException {\n-        Path root = TEMP_ROOT.fetchFrom(params).resolve(\"services\");\n-\n-        Path srcRoot = root.resolve(\"src\");\n-\n-        var services = MacLaunchersAsServices.create(params, srcRoot);\n-\n-        Path scriptsDir = root.resolve(\"scripts\");\n-\n-        var data = services.create();\n-        data.put(\"SERVICES_PACKAGE_ID\", getServicesIdentifier(params));\n-\n-        MacPkgInstallerScripts.createServicesScripts()\n-                .setResourceDir(RESOURCE_DIR.fetchFrom(params))\n-                .setSubstitutionData(data)\n-                .saveInFolder(scriptsDir);\n-\n-        prepareSupportPkg(params, data);\n-    }\n-\n-    private void prepareSupportPkg(Map<String, Object> params,\n-            Map<String, String> servicesSubstitutionData) throws IOException {\n-        Path root = TEMP_ROOT.fetchFrom(params).resolve(\"support\");\n-\n-        Path srcRoot = root.resolve(\"src\");\n-\n-        var enqouter = Enquoter.forShellLiterals().setEnquotePredicate(str -> true);\n-\n-        Map<String, String> data = new HashMap<>(servicesSubstitutionData);\n-        data.put(\"APP_INSTALLATION_FOLDER\", enqouter.applyTo(Path.of(\n-                getInstallDir(params, false), APP_NAME.fetchFrom(params)\n-                + \".app\").toString()));\n-        data.put(\"SUPPORT_INSTALLATION_FOLDER\", enqouter.applyTo(Path.of(\n-                \"\/Library\/Application Support\", APP_NAME.fetchFrom(params)).toString()));\n-\n-        new ShellScriptResource(\"uninstall.command\")\n-                .setResource(createResource(\"uninstall.command.template\", params)\n-                        .setCategory(I18N.getString(\"resource.pkg-uninstall-script\"))\n-                        .setPublicName(\"uninstaller\")\n-                        .setSubstitutionData(data))\n-                .saveInFolder(srcRoot.resolve(APP_NAME.fetchFrom(params)));\n-    }\n-\n-    private void createServicesPkg(Map<String, Object> params) throws\n-            IOException {\n-        Path root = TEMP_ROOT.fetchFrom(params).resolve(\"services\");\n-\n-        Path srcRoot = root.resolve(\"src\");\n-\n-        Path scriptsDir = root.resolve(\"scripts\");\n-\n-        var pb = new ProcessBuilder(\"\/usr\/bin\/pkgbuild\",\n-                \"--root\",\n-                srcRoot.toString(),\n-                \"--install-location\",\n-                \"\/\",\n-                \"--scripts\",\n-                scriptsDir.toString(),\n-                \"--identifier\",\n-                getServicesIdentifier(params),\n-                getPackages_ServicesPackage(params).toAbsolutePath().toString());\n-        IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n-\n-        createSupportPkg(params);\n-    }\n-\n-    private void createSupportPkg(Map<String, Object> params) throws IOException {\n-        Path root = TEMP_ROOT.fetchFrom(params).resolve(\"support\");\n-\n-        Path srcRoot = root.resolve(\"src\");\n-\n-        var pb = new ProcessBuilder(\"\/usr\/bin\/pkgbuild\",\n-                \"--root\",\n-                srcRoot.toString(),\n-                \"--install-location\",\n-                \"\/Library\/Application Support\",\n-                \"--identifier\",\n-                getSupportIdentifier(params),\n-                getPackages_SupportPackage(params).toAbsolutePath().toString());\n-        IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n-    }\n-\n-    private void prepareCPLFile(Map<String, ? super Object> params, Path appLocation) throws IOException {\n-        String root = getRoot(params, appLocation);\n-        \/\/ Generate default CPL file\n-        Path cpl = CONFIG_ROOT.fetchFrom(params).resolve(\"cpl.plist\");\n-        ProcessBuilder pb = new ProcessBuilder(\"\/usr\/bin\/pkgbuild\",\n-                \"--root\",\n-                root,\n-                \"--install-location\",\n-                getInstallDir(params, false),\n-                \"--analyze\",\n-                cpl.toAbsolutePath().toString());\n-\n-        IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n-\n-        patchCPLFile(cpl);\n-    }\n-\n-    private Path createPKG(Map<String, ? super Object> params,\n-            Path outdir, Path appLocation) {\n-        \/\/ generic find attempt\n-        try {\n-            Path appPKG = getPackages_AppPackage(params);\n-\n-            String root = getRoot(params, appLocation);\n-\n-            if (withServicesPkg(params)) {\n-                createServicesPkg(params);\n-            }\n-\n-            ProcessBuilder pb;\n-\n-            Path cpl = CONFIG_ROOT.fetchFrom(params).resolve(\"cpl.plist\");\n-\n-            \/\/ build application package\n-            if (APP_STORE.fetchFrom(params)) {\n-                pb = new ProcessBuilder(\"\/usr\/bin\/pkgbuild\",\n-                        \"--root\",\n-                        root,\n-                        \"--install-location\",\n-                        getInstallDir(params, false),\n-                        \"--component-plist\",\n-                        cpl.toAbsolutePath().toString(),\n-                        \"--identifier\",\n-                         MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params),\n-                        appPKG.toAbsolutePath().toString());\n-                IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n-            } else {\n-                pb = new ProcessBuilder(\"\/usr\/bin\/pkgbuild\",\n-                        \"--root\",\n-                        root,\n-                        \"--install-location\",\n-                        getInstallDir(params, false),\n-                        \"--component-plist\",\n-                        cpl.toAbsolutePath().toString(),\n-                        \"--scripts\",\n-                        SCRIPTS_DIR.fetchFrom(params)\n-                        .toAbsolutePath().toString(),\n-                        \"--identifier\",\n-                         MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params),\n-                        appPKG.toAbsolutePath().toString());\n-                IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n-            }\n-\n-            \/\/ build final package\n-            Path finalPKG = outdir.resolve(MAC_INSTALLER_NAME.fetchFrom(params)\n-                    + \".pkg\");\n-            Files.createDirectories(outdir);\n-\n-            List<String> commandLine = new ArrayList<>();\n-            commandLine.add(\"\/usr\/bin\/productbuild\");\n-\n-            commandLine.add(\"--resources\");\n-            commandLine.add(CONFIG_ROOT.fetchFrom(params).toAbsolutePath().toString());\n-\n-            \/\/ maybe sign\n-            if (Optional.ofNullable(\n-                    SIGN_BUNDLE.fetchFrom(params)).orElse(Boolean.TRUE)) {\n-                if (OSVersion.current().compareTo(new OSVersion(10, 12)) >= 0) {\n-                    \/\/ we need this for OS X 10.12+\n-                    Log.verbose(I18N.getString(\"message.signing.pkg\"));\n-                }\n-\n-                String signingIdentity = null;\n-                \/\/ --mac-installer-sign-identity\n-                if (!INSTALLER_SIGN_IDENTITY.getIsDefaultValue(params)) {\n-                    signingIdentity = INSTALLER_SIGN_IDENTITY.fetchFrom(params);\n-                } else {\n-                    \/\/ Use --mac-signing-key-user-name if user did not request\n-                    \/\/ to sign just app image using --mac-app-image-sign-identity\n-                    if (APP_IMAGE_SIGN_IDENTITY.getIsDefaultValue(params)) {\n-                        \/\/ --mac-signing-key-user-name\n-                        signingIdentity = DEVELOPER_ID_INSTALLER_SIGNING_KEY.fetchFrom(params);\n-                    }\n-                }\n-\n-                if (signingIdentity != null) {\n-                    commandLine.add(\"--sign\");\n-                    commandLine.add(signingIdentity);\n-                }\n-\n-                String keychainName = SIGNING_KEYCHAIN.fetchFrom(params);\n-                if (keychainName != null && !keychainName.isEmpty()) {\n-                    commandLine.add(\"--keychain\");\n-                    commandLine.add(keychainName);\n-                }\n-            }\n-\n-            if (APP_STORE.fetchFrom(params)) {\n-                commandLine.add(\"--product\");\n-                commandLine.add(getConfig_PDF(params)\n-                        .toAbsolutePath().toString());\n-                commandLine.add(\"--component\");\n-                Path p = Path.of(root, APP_NAME.fetchFrom(params) + \".app\");\n-                commandLine.add(p.toAbsolutePath().toString());\n-                commandLine.add(getInstallDir(params, false));\n-            } else {\n-                commandLine.add(\"--distribution\");\n-                commandLine.add(getConfig_DistributionXMLFile(params)\n-                        .toAbsolutePath().toString());\n-                commandLine.add(\"--package-path\");\n-                commandLine.add(PACKAGES_ROOT.fetchFrom(params)\n-                        .toAbsolutePath().toString());\n-            }\n-            commandLine.add(finalPKG.toAbsolutePath().toString());\n-\n-            pb = new ProcessBuilder(commandLine);\n-\n-            try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-                 PrintStream ps = new PrintStream(baos)) {\n-                try {\n-                    IOUtils.exec(pb, false, ps, true, Executor.INFINITE_TIMEOUT);\n-                } catch (IOException ioe) {\n-                    \/\/ Log output of \"productbuild\" in case of\n-                    \/\/ error. It should help user to diagnose\n-                    \/\/ issue when using --mac-installer-sign-identity\n-                    Log.info(MessageFormat.format(I18N.getString(\n-                             \"error.tool.failed.with.output\"), \"productbuild\"));\n-                    Log.info(baos.toString().strip());\n-                    throw ioe;\n-                }\n-            }\n-\n-            return finalPKG;\n-        } catch (Exception ignored) {\n-            Log.verbose(ignored);\n-            return null;\n-        }\n-    }\n-\n-    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-    \/\/ Implement Bundler\n-    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n@@ -710,15 +46,0 @@\n-    private static boolean isValidBundleIdentifier(String id) {\n-        Objects.requireNonNull(id);\n-        for (int i = 0; i < id.length(); i++) {\n-            char a = id.charAt(i);\n-            \/\/ We check for ASCII codes first which we accept. If check fails,\n-            \/\/ check if it is acceptable extended ASCII or unicode character.\n-            if ((a >= 'A' && a <= 'Z') || (a >= 'a' && a <= 'z')\n-                    || (a >= '0' && a <= '9') || (a == '-' || a == '.')) {\n-                continue;\n-            }\n-            return false;\n-        }\n-        return true;\n-    }\n-\n@@ -731,0 +52,2 @@\n+            final var pkgPkg = MacFromParams.PKG_PACKAGE.fetchFrom(params);\n+\n@@ -735,26 +58,0 @@\n-            String identifier = MAC_CF_BUNDLE_IDENTIFIER.fetchFrom(params);\n-            if (!isValidBundleIdentifier(identifier)) {\n-                throw new ConfigException(\n-                        MessageFormat.format(I18N.getString(\n-                        \"message.invalid-identifier\"), identifier),\n-                        I18N.getString(\"message.invalid-identifier.advice\"));\n-            }\n-\n-            \/\/ reject explicitly set sign to true and no valid signature key\n-            if (Optional.ofNullable(\n-                    SIGN_BUNDLE.fetchFrom(params)).orElse(Boolean.FALSE)) {\n-                if (!SIGNING_KEY_USER.getIsDefaultValue(params)) {\n-                    String signingIdentity =\n-                            DEVELOPER_ID_INSTALLER_SIGNING_KEY.fetchFrom(params);\n-                    if (signingIdentity == null) {\n-                        throw new ConfigException(\n-                                I18N.getString(\"error.explicit-sign-no-cert\"),\n-                                I18N.getString(\n-                                \"error.explicit-sign-no-cert.advice\"));\n-                    }\n-                }\n-\n-                \/\/ No need to validate --mac-installer-sign-identity, since it is\n-                \/\/ pass through option.\n-            }\n-\n@@ -777,1 +74,7 @@\n-        return bundle(params, outputParentDir);\n+\n+        final var pkg = MacFromParams.PKG_PACKAGE.fetchFrom(params);\n+        var env = BuildEnvFromParams.BUILD_ENV.fetchFrom(params);\n+\n+        final var packager = MacPkgPackager.build().outputDir(outputParentDir).pkg(pkg).env(env);\n+\n+        return packager.execute();\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgBundler.java","additions":9,"deletions":706,"binary":false,"changes":715,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.MacPkgPackage;\n+import jdk.jpackage.internal.model.MacPkgPackageMixin;\n+import jdk.jpackage.internal.model.PkgSigningConfig;\n+\n+final class MacPkgPackageBuilder {\n+\n+    MacPkgPackageBuilder(MacPackageBuilder pkgBuilder) {\n+        this.pkgBuilder = Objects.requireNonNull(pkgBuilder);\n+    }\n+\n+    MacPkgPackageBuilder signingBuilder(SigningIdentityBuilder v) {\n+        signingBuilder = v;\n+        return this;\n+    }\n+\n+    MacPkgPackage create() throws ConfigException {\n+        return MacPkgPackage.create(pkgBuilder.create(), new MacPkgPackageMixin.Stub(createSigningConfig()));\n+    }\n+\n+    private Optional<PkgSigningConfig> createSigningConfig() throws ConfigException {\n+        if (signingBuilder != null) {\n+            return signingBuilder.create().map(cfg -> {\n+                return new PkgSigningConfig.Stub(cfg.identity(), cfg.keychain().map(Keychain::name));\n+            });\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    private final MacPackageBuilder pkgBuilder;\n+    private SigningIdentityBuilder signingBuilder;\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgPackageBuilder.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,564 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.util.PathUtils.normalizedAbsolutePathString;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.text.MessageFormat;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamWriter;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.stream.StreamResult;\n+import javax.xml.transform.stream.StreamSource;\n+import jdk.internal.util.Architecture;\n+import jdk.internal.util.OSVersion;\n+import jdk.jpackage.internal.PackagingPipeline.PackageTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.StartupParameters;\n+import jdk.jpackage.internal.PackagingPipeline.TaskID;\n+import jdk.jpackage.internal.model.MacPkgPackage;\n+import jdk.jpackage.internal.model.PackagerException;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n+import jdk.jpackage.internal.util.XmlUtils;\n+import org.xml.sax.SAXException;\n+\n+record MacPkgPackager(MacPkgPackage pkg, BuildEnv env, Optional<Services> services, Path outputDir) {\n+\n+    enum PkgPackageTaskID implements TaskID {\n+        PREPARE_MAIN_SCRIPTS,\n+        CREATE_DISTRIBUTION_XML_FILE,\n+        CREATE_COMPONENT_PLIST_FILE,\n+        PREPARE_SERVICES\n+    }\n+\n+    static Builder build() {\n+        return new Builder();\n+    }\n+\n+    static final class Builder extends PackagerBuilder<MacPkgPackage, Builder> {\n+\n+        Path execute() throws PackagerException {\n+            Log.verbose(MessageFormat.format(I18N.getString(\"message.building-pkg\"),\n+                    pkg.app().name()));\n+\n+            IOUtils.writableOutputDir(outputDir);\n+\n+            return execute(MacPackagingPipeline.build(Optional.of(pkg)));\n+        }\n+\n+        @Override\n+        protected void configurePackagingPipeline(PackagingPipeline.Builder pipelineBuilder,\n+                StartupParameters startupParameters) {\n+            final var packager = new MacPkgPackager(pkg, startupParameters.packagingEnv(), createServices(), outputDir);\n+            packager.applyToPipeline(pipelineBuilder);\n+        }\n+\n+        private Optional<Services> createServices() {\n+            if (pkg.app().isService()) {\n+                return Optional.of(Services.create(pkg, env));\n+            } else {\n+                return Optional.empty();\n+            }\n+        }\n+    }\n+\n+    record InternalPackage(Path srcRoot, String identifier, Path path, List<String> otherPkgbuildArgs) {\n+\n+        InternalPackage {\n+            Objects.requireNonNull(srcRoot);\n+            Objects.requireNonNull(identifier);\n+            Objects.requireNonNull(path);\n+            Objects.requireNonNull(otherPkgbuildArgs);\n+        }\n+\n+        private List<String> allPkgbuildArgs() {\n+            final List<String> args = new ArrayList<>();\n+            args.add(\"--root\");\n+            args.add(normalizedAbsolutePathString(srcRoot));\n+            args.addAll(otherPkgbuildArgs);\n+            args.add(\"--identifier\");\n+            args.add(identifier);\n+            args.add(normalizedAbsolutePathString(path));\n+            return args;\n+        }\n+\n+        void build() {\n+            final List<String> cmdline = new ArrayList<>();\n+            cmdline.add(\"\/usr\/bin\/pkgbuild\");\n+            cmdline.addAll(allPkgbuildArgs());\n+            try {\n+                Files.createDirectories(path.getParent());\n+                IOUtils.exec(new ProcessBuilder(cmdline), false, null, true, Executor.INFINITE_TIMEOUT);\n+            } catch (IOException ex) {\n+                throw new UncheckedIOException(ex);\n+            }\n+        }\n+    }\n+\n+    record Services(InternalPackage servicesPkg, Path servicesScriptsDir, InternalPackage supportPkg) {\n+\n+        Services {\n+            Objects.requireNonNull(servicesPkg);\n+            Objects.requireNonNull(servicesScriptsDir);\n+            Objects.requireNonNull(supportPkg);\n+        }\n+\n+        static Services create(MacPkgPackage pkg, BuildEnv env) {\n+            final var servicesRoot = env.buildRoot().resolve(\"services\");\n+            final var supportRoot = env.buildRoot().resolve(\"support\");\n+\n+            final var servicesScriptsDir = servicesRoot.resolve(\"scripts\");\n+\n+            final var servicesPkg = InternalPackageType.SERVICES.createInternalPackage(\n+                    servicesRoot.resolve(\"src\"), pkg, env, List.of(\n+                            \"--install-location\", \"\/\",\n+                            \"--scripts\", normalizedAbsolutePathString(servicesScriptsDir)));\n+\n+            final var supportPkg = InternalPackageType.SUPPORT.createInternalPackage(\n+                    supportRoot.resolve(\"src\"), pkg, env, List.of(\n+                            \"--install-location\", \"\/Library\/Application Support\"));\n+\n+            return new Services(servicesPkg, servicesScriptsDir, supportPkg);\n+        }\n+\n+        Stream<InternalPackage> asStream() {\n+            return Stream.of(servicesPkg, supportPkg);\n+        }\n+\n+        void prepareForPkgbuild(MacPkgPackage pkg, BuildEnv env) throws IOException {\n+            prepareSupportForPkgbuild(pkg, env, prepareServicesForPkgbuild(pkg, env));\n+        }\n+\n+        private Map<String, String> prepareServicesForPkgbuild(MacPkgPackage pkg, BuildEnv env) throws IOException {\n+            final var services = new MacLaunchersAsServices(BuildEnv.withAppImageDir(env, servicesPkg.srcRoot()), pkg);\n+\n+            final var data = services.create();\n+            data.put(\"SERVICES_PACKAGE_ID\", servicesPkg.identifier());\n+\n+            MacPkgInstallerScripts.createServicesScripts()\n+                    .setResourceDir(env.resourceDir().orElse(null))\n+                    .setSubstitutionData(data)\n+                    .saveInFolder(servicesScriptsDir);\n+\n+            return data;\n+        }\n+\n+        private void prepareSupportForPkgbuild(MacPkgPackage pkg, BuildEnv env,\n+                Map<String, String> servicesSubstitutionData) throws IOException {\n+            final var enqouter = Enquoter.forShellLiterals().setEnquotePredicate(str -> true);\n+\n+            final var mainInstallDir = Path.of(\"\/\").resolve(pkg.relativeInstallDir());\n+            final var supportInstallDir = Path.of(\"\/Library\/Application Support\").resolve(pkg.packageName());\n+\n+            Map<String, String> data = new HashMap<>(servicesSubstitutionData);\n+            data.put(\"APP_INSTALLATION_FOLDER\", enqouter.applyTo(mainInstallDir.toString()));\n+            data.put(\"SUPPORT_INSTALLATION_FOLDER\", enqouter.applyTo(supportInstallDir.toString()));\n+\n+            new ShellScriptResource(\"uninstall.command\")\n+                    .setResource(env.createResource(\"uninstall.command.template\")\n+                            .setCategory(I18N.getString(\"resource.pkg-uninstall-script\"))\n+                            .setPublicName(\"uninstaller\")\n+                            .setSubstitutionData(data))\n+                    .saveInFolder(supportPkg.srcRoot().resolve(pkg.app().name()));\n+        }\n+    }\n+\n+    private enum InternalPackageType implements TaskID {\n+        MAIN,\n+        SERVICES(\"services\"),\n+        SUPPORT(\"support\");\n+\n+        InternalPackage createInternalPackage(Path srcRoot, MacPkgPackage pkg, BuildEnv env, List<String> otherPkgbuildArgs) {\n+            return new InternalPackage(srcRoot, identifier(pkg), env.buildRoot().resolve(\"packages\").resolve(filename(pkg)), otherPkgbuildArgs);\n+        }\n+\n+        private InternalPackageType(String nameSuffix) {\n+            this.nameSuffix = Optional.of(nameSuffix);\n+        }\n+\n+        private InternalPackageType() {\n+            this.nameSuffix = Optional.empty();\n+        }\n+\n+        private String identifier(MacPkgPackage pkg) {\n+            final var baseIdentifier = pkg.app().bundleIdentifier();\n+            return nameSuffix.map(v -> baseIdentifier + \".\" + v).orElse(baseIdentifier);\n+        }\n+\n+        private String filename(MacPkgPackage pkg) {\n+            return String.format(\"%s-%s.pkg\", pkg.app().name(), nameSuffix.orElse(\"app\"));\n+        }\n+\n+        private final Optional<String> nameSuffix;\n+    }\n+\n+    private void applyToPipeline(PackagingPipeline.Builder pipelineBuilder) {\n+        pipelineBuilder\n+                .excludeDirFromCopying(outputDir)\n+                .task(PkgPackageTaskID.PREPARE_MAIN_SCRIPTS)\n+                        .action(this::prepareMainScripts)\n+                        .addDependent(PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT)\n+                        .add()\n+                .task(PkgPackageTaskID.CREATE_DISTRIBUTION_XML_FILE)\n+                        .action(this::prepareDistributionXMLFile)\n+                        .addDependent(PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT)\n+                        .add()\n+                .task(PkgPackageTaskID.CREATE_COMPONENT_PLIST_FILE)\n+                        .action(this::createComponentPlistFile)\n+                        .addDependent(PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT)\n+                        .add()\n+                .task(PackageTaskID.CREATE_CONFIG_FILES)\n+                        .action(this::prepareConfigFiles)\n+                        .add()\n+                .task(PackageTaskID.CREATE_PACKAGE_FILE)\n+                        .action(this::productbuild)\n+                        .addDependencies(InternalPackageType.values())\n+                        .addDependencies(PkgPackageTaskID.CREATE_DISTRIBUTION_XML_FILE, PkgPackageTaskID.CREATE_COMPONENT_PLIST_FILE)\n+                        .add()\n+                .task(PkgPackageTaskID.PREPARE_SERVICES)\n+                        .action(this::prepareServicesForBkgbuild)\n+                        .addDependent(PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT)\n+                        .add()\n+                .task(InternalPackageType.SERVICES)\n+                        .action(this::buildServicesPKG)\n+                        .addDependencies(PkgPackageTaskID.PREPARE_SERVICES, PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT)\n+                        .add()\n+                .task(InternalPackageType.SUPPORT)\n+                        .action(this::buildSupportPKG)\n+                        .addDependencies(PkgPackageTaskID.PREPARE_SERVICES, PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT)\n+                        .add()\n+                .task(InternalPackageType.MAIN)\n+                        .action(this::buildMainPKG)\n+                        .addDependencies(PkgPackageTaskID.PREPARE_MAIN_SCRIPTS, PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT)\n+                        .add();\n+\n+        final List<TaskID> disabledTasks = new ArrayList<>();\n+\n+        if (services.isEmpty()) {\n+            disabledTasks.addAll(List.of(PkgPackageTaskID.PREPARE_SERVICES, InternalPackageType.SERVICES, InternalPackageType.SUPPORT));\n+        }\n+\n+        if (scriptsRoot().isEmpty()) {\n+            disabledTasks.add(PkgPackageTaskID.PREPARE_MAIN_SCRIPTS);\n+        }\n+\n+        for (final var taskID : disabledTasks) {\n+            pipelineBuilder.task(taskID).noaction().add();\n+        }\n+    }\n+\n+    List<InternalPackage> internalPackages() {\n+        return Stream.concat(Stream.of(mainPkg()),\n+                services.map(Services::asStream).orElseGet(Stream::of)).toList();\n+    }\n+\n+    InternalPackage mainPkg() {\n+        final List<String> args = new ArrayList<>();\n+        args.add(\"--install-location\");\n+        args.add(normalizedAbsolutePathString(installLocation()));\n+        args.add(\"--component-plist\");\n+        args.add(normalizedAbsolutePathString(componentPlistFile()));\n+\n+        scriptsRoot().ifPresent(scriptsRoot -> {\n+            args.add(\"--scripts\");\n+            args.add(normalizedAbsolutePathString(scriptsRoot));\n+        });\n+\n+        return InternalPackageType.MAIN.createInternalPackage(env.appImageDir(), pkg, env, args);\n+    }\n+\n+    Optional<Path> scriptsRoot() {\n+        if (pkg.app().appStore() || pkg.isRuntimeInstaller()) {\n+            return Optional.empty();\n+        } else {\n+            return Optional.of(env.configDir().resolve(\"scripts\"));\n+        }\n+    }\n+\n+    Path componentPlistFile() {\n+        return env.configDir().resolve(\"cpl.plist\");\n+    }\n+\n+    Path installLocation() {\n+        return Path.of(\"\/\").resolve(pkg.relativeInstallDir()).getParent();\n+    }\n+\n+    Path distributionXmlFile() {\n+        return env.configDir().resolve(\"distribution.dist\");\n+    }\n+\n+    Path appStoreProductFile() {\n+        return env.configDir().resolve(\"product-def.plist\");\n+    }\n+\n+    Path backgroundImage() {\n+        return env.configDir().resolve(pkg.app().name() + \"-background.png\");\n+    }\n+\n+    Path backgroundImageDarkAqua() {\n+        return env.configDir().resolve(pkg.app().name() + \"-background-darkAqua.png\");\n+    }\n+\n+    private void addInternalPackageToInstallerGuiScript(InternalPackage internalPkg,\n+            XMLStreamWriter xml) throws IOException, XMLStreamException {\n+        xml.writeStartElement(\"pkg-ref\");\n+        xml.writeAttribute(\"id\", internalPkg.identifier());\n+        xml.writeEndElement(); \/\/ <\/pkg-ref>\n+        xml.writeStartElement(\"choice\");\n+        xml.writeAttribute(\"id\", internalPkg.identifier());\n+        xml.writeAttribute(\"visible\", \"false\");\n+        xml.writeStartElement(\"pkg-ref\");\n+        xml.writeAttribute(\"id\", internalPkg.identifier());\n+        xml.writeEndElement(); \/\/ <\/pkg-ref>\n+        xml.writeEndElement(); \/\/ <\/choice>\n+        xml.writeStartElement(\"pkg-ref\");\n+        xml.writeAttribute(\"id\", internalPkg.identifier());\n+        xml.writeAttribute(\"version\", pkg.version());\n+        xml.writeAttribute(\"onConclusion\", \"none\");\n+        try {\n+            xml.writeCharacters(new URI(null, null, internalPkg.path().getFileName().toString(), null).toASCIIString());\n+        } catch (URISyntaxException ex) {\n+            throw new RuntimeException(ex);\n+        }\n+        xml.writeEndElement(); \/\/ <\/pkg-ref>\n+    }\n+\n+    private void prepareMainScripts() throws IOException {\n+        Log.verbose(I18N.getString(\"message.preparing-scripts\"));\n+\n+        final var scriptsRoot = scriptsRoot().orElseThrow();\n+\n+        Files.createDirectories(scriptsRoot);\n+\n+        final Map<String, String> data = new HashMap<>();\n+\n+        final var appLocation = pkg.asInstalledPackageApplicationLayout().orElseThrow().appDirectory();\n+\n+        data.put(\"INSTALL_LOCATION\", Path.of(\"\/\").resolve(pkg.relativeInstallDir()).toString());\n+        data.put(\"APP_LOCATION\", appLocation.toString());\n+\n+        MacPkgInstallerScripts.createAppScripts()\n+                .setResourceDir(env.resourceDir().orElse(null))\n+                .setSubstitutionData(data)\n+                .saveInFolder(scriptsRoot);\n+    }\n+\n+    private void prepareDistributionXMLFile() throws IOException {\n+        final var f = distributionXmlFile();\n+\n+        Log.verbose(MessageFormat.format(I18N.getString(\n+                \"message.preparing-distribution-dist\"), f.toAbsolutePath().toString()));\n+\n+        XmlUtils.createXml(f, xml -> {\n+            xml.writeStartElement(\"installer-gui-script\");\n+            xml.writeAttribute(\"minSpecVersion\", \"1\");\n+\n+            xml.writeStartElement(\"title\");\n+            xml.writeCharacters(pkg.app().name());\n+            xml.writeEndElement();\n+\n+            xml.writeStartElement(\"background\");\n+            xml.writeAttribute(\"file\", backgroundImage().getFileName().toString());\n+            xml.writeAttribute(\"mime-type\", \"image\/png\");\n+            xml.writeAttribute(\"alignment\", \"bottomleft\");\n+            xml.writeAttribute(\"scaling\", \"none\");\n+            xml.writeEndElement();\n+\n+            xml.writeStartElement(\"background-darkAqua\");\n+            xml.writeAttribute(\"file\", backgroundImageDarkAqua().getFileName().toString());\n+            xml.writeAttribute(\"mime-type\", \"image\/png\");\n+            xml.writeAttribute(\"alignment\", \"bottomleft\");\n+            xml.writeAttribute(\"scaling\", \"none\");\n+            xml.writeEndElement();\n+\n+            final var licFile = pkg.licenseFile();\n+            if (licFile.isPresent()) {\n+                xml.writeStartElement(\"license\");\n+                xml.writeAttribute(\"file\", licFile.orElseThrow().toAbsolutePath().toString());\n+                xml.writeAttribute(\"mime-type\", \"text\/rtf\");\n+                xml.writeEndElement();\n+            }\n+\n+            \/*\n+             * Note that the content of the distribution file\n+             * below is generated by productbuild --synthesize\n+             *\/\n+\n+            for (final var p : internalPackages()) {\n+                addInternalPackageToInstallerGuiScript(p, xml);\n+            }\n+\n+            xml.writeStartElement(\"options\");\n+            xml.writeAttribute(\"customize\", \"never\");\n+            xml.writeAttribute(\"require-scripts\", \"false\");\n+            xml.writeAttribute(\"hostArchitectures\", Architecture.isAARCH64() ? \"arm64\" : \"x86_64\");\n+            xml.writeEndElement(); \/\/ <\/options>\n+            xml.writeStartElement(\"choices-outline\");\n+            xml.writeStartElement(\"line\");\n+            xml.writeAttribute(\"choice\", \"default\");\n+            for (final var p : internalPackages()) {\n+                xml.writeStartElement(\"line\");\n+                xml.writeAttribute(\"choice\", p.identifier());\n+                xml.writeEndElement(); \/\/ <\/line>\n+            }\n+            xml.writeEndElement(); \/\/ <\/line>\n+            xml.writeEndElement(); \/\/ <\/choices-outline>\n+            xml.writeStartElement(\"choice\");\n+            xml.writeAttribute(\"id\", \"default\");\n+            xml.writeEndElement(); \/\/ <\/choice>\n+\n+            xml.writeEndElement(); \/\/ <\/installer-gui-script>\n+        });\n+    }\n+\n+    private void prepareConfigFiles() throws IOException {\n+        env.createResource(DEFAULT_BACKGROUND_IMAGE)\n+                .setCategory(I18N.getString(\"resource.pkg-background-image\"))\n+                .saveToFile(backgroundImage());\n+\n+        env.createResource(DEFAULT_BACKGROUND_IMAGE)\n+                .setCategory(I18N.getString(\"resource.pkg-background-image\"))\n+                .saveToFile(backgroundImageDarkAqua());\n+\n+        if (pkg.app().appStore()) {\n+            env.createResource(DEFAULT_PDF)\n+                    .setCategory(I18N.getString(\"resource.pkg-pdf\"))\n+                    .saveToFile(appStoreProductFile());\n+        }\n+    }\n+\n+    private void patchCPLFile(Path cpl) throws IOException {\n+        try (final var xsltResource = ResourceLocator.class.getResourceAsStream(\"adjust-component-plist.xsl\")) {\n+            final var srcXml =  new DOMSource(XmlUtils.initDocumentBuilder().parse(\n+                    new ByteArrayInputStream(Files.readAllBytes(cpl))));\n+            final var dstXml = new StreamResult(cpl.toFile());\n+            final var xslt = TransformerFactory.newInstance().newTransformer(new StreamSource(xsltResource));\n+            xslt.transform(srcXml, dstXml);\n+        } catch (TransformerException|SAXException ex) {\n+            throw new RuntimeException(ex);\n+        }\n+    }\n+\n+    private void prepareServicesForBkgbuild() throws IOException {\n+        services.orElseThrow().prepareForPkgbuild(pkg, env);\n+    }\n+\n+    private void buildServicesPKG() {\n+        services.orElseThrow().servicesPkg().build();\n+    }\n+\n+    private void buildSupportPKG() {\n+        services.orElseThrow().supportPkg().build();\n+    }\n+\n+    private void buildMainPKG() throws IOException {\n+        mainPkg().build();\n+    }\n+\n+    private void createComponentPlistFile() throws IOException {\n+        final var cpl = componentPlistFile();\n+\n+        Files.createDirectories(cpl.getParent());\n+\n+        final var pb = new ProcessBuilder(\"\/usr\/bin\/pkgbuild\",\n+                \"--root\",\n+                normalizedAbsolutePathString(env.appImageDir()),\n+                \"--install-location\",\n+                normalizedAbsolutePathString(installLocation()),\n+                \"--analyze\",\n+                normalizedAbsolutePathString(cpl));\n+\n+        IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n+\n+        patchCPLFile(cpl);\n+    }\n+\n+    private void productbuild() throws IOException {\n+        final var finalPkg = outputDir.resolve(pkg.packageFileNameWithSuffix());\n+        Files.createDirectories(finalPkg.getParent());\n+\n+        List<String> commandLine = new ArrayList<>();\n+        commandLine.add(\"\/usr\/bin\/productbuild\");\n+\n+        commandLine.add(\"--resources\");\n+        commandLine.add(normalizedAbsolutePathString(env.configDir()));\n+\n+        \/\/ maybe sign\n+        if (pkg.sign()) {\n+            if (OSVersion.current().compareTo(new OSVersion(10, 12)) >= 0) {\n+                \/\/ we need this for OS X 10.12+\n+                Log.verbose(I18N.getString(\"message.signing.pkg\"));\n+            }\n+\n+            final var pkgSigningConfig = pkg.signingConfig().orElseThrow();\n+\n+            commandLine.add(\"--sign\");\n+            commandLine.add(pkgSigningConfig.identity().id());\n+\n+            pkgSigningConfig.keychain().map(Keychain::new).ifPresent(keychain -> {\n+                commandLine.add(\"--keychain\");\n+                commandLine.add(keychain.asCliArg());\n+            });\n+        }\n+\n+        if (pkg.app().appStore()) {\n+            commandLine.add(\"--product\");\n+            commandLine.add(normalizedAbsolutePathString(appStoreProductFile()));\n+            commandLine.add(\"--component\");\n+            Path p = env.appImageDir().resolve(pkg.app().appImageDirName());\n+            commandLine.add(p.toAbsolutePath().toString());\n+            commandLine.add(normalizedAbsolutePathString(installLocation()));\n+        } else {\n+            commandLine.add(\"--distribution\");\n+            commandLine.add(normalizedAbsolutePathString(distributionXmlFile()));\n+            commandLine.add(\"--package-path\");\n+            \/\/ Assume all internal .pkg files reside in the same directory.\n+            commandLine.add(normalizedAbsolutePathString(mainPkg().path().getParent()));\n+        }\n+        commandLine.add(normalizedAbsolutePathString(finalPkg));\n+\n+        final var pb = new ProcessBuilder(commandLine);\n+        IOUtils.exec(pb, false, null, true, Executor.INFINITE_TIMEOUT);\n+    }\n+\n+    private static final String DEFAULT_BACKGROUND_IMAGE = \"background_pkg.png\";\n+    private static final String DEFAULT_PDF = \"product-def.plist\";\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgPackager.java","additions":564,"deletions":0,"binary":false,"changes":564,"status":"added"},{"patch":"@@ -0,0 +1,245 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.MacCertificateUtils.findCertificates;\n+\n+import java.security.cert.CertificateExpiredException;\n+import java.security.cert.CertificateNotYetValidException;\n+import java.security.cert.X509Certificate;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+import javax.naming.InvalidNameException;\n+import javax.naming.ldap.LdapName;\n+import javax.naming.ldap.Rdn;\n+import javax.security.auth.x500.X500Principal;\n+import jdk.jpackage.internal.MacCertificateUtils.CertificateHash;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.SigningIdentity;\n+\n+final class SigningIdentityBuilder {\n+\n+    static class SigningConfigException extends ConfigException {\n+        SigningConfigException(ConfigException ex) {\n+            super(ex.getMessage(), ex.getAdvice(), ex.getCause());\n+        }\n+\n+        private static final long serialVersionUID = 1L;\n+    }\n+\n+    static class ExpiredCertificateException extends SigningConfigException {\n+        ExpiredCertificateException(ConfigException ex) {\n+            super(ex);\n+        }\n+\n+        private static final long serialVersionUID = 1L;\n+    }\n+\n+    record SigningConfig(SigningIdentity identity, Optional<Keychain> keychain) {\n+        SigningConfig {\n+            Objects.requireNonNull(identity);\n+            Objects.requireNonNull(keychain);\n+        }\n+    }\n+\n+    SigningIdentityBuilder signingIdentity(String v) {\n+        signingIdentity = v;\n+        return this;\n+    }\n+\n+    SigningIdentityBuilder certificateSelector(CertificateSelector v) {\n+        certificateSelector = v;\n+        return this;\n+    }\n+\n+    SigningIdentityBuilder keychain(String v) {\n+        keychain = v;\n+        return this;\n+    }\n+\n+    Optional<SigningConfig> create() throws ConfigException {\n+        if (signingIdentity == null && certificateSelector == null) {\n+            return Optional.empty();\n+        } else {\n+            return Optional.of(new SigningConfig(validatedSigningIdentity(), validatedKeychain()));\n+        }\n+    }\n+\n+    private Optional<Keychain> validatedKeychain() throws ConfigException {\n+        return Optional.ofNullable(keychain).map(Keychain::new);\n+    }\n+\n+    private SigningIdentity validatedSigningIdentity() throws ConfigException {\n+        if (signingIdentity != null) {\n+            return new SigningIdentityImpl(signingIdentity);\n+        }\n+\n+        Objects.requireNonNull(certificateSelector);\n+\n+        final var validatedKeychain = validatedKeychain();\n+\n+        final var allCertificates = findCertificates(validatedKeychain, Optional.empty());\n+\n+        final var mappedCertficates = allCertificates.stream().<Map.Entry<String, X509Certificate>>mapMulti((cert, acc) -> {\n+            findSubjectCNs(cert).stream().map(cn -> {\n+                return Map.entry(cn, cert);\n+            }).forEach(acc::accept);\n+        }).toList();\n+\n+        final var signingIdentityNames = certificateSelector.signingIdentities();\n+\n+        var matchingCertificates = mappedCertficates.stream().filter(e -> {\n+            return signingIdentityNames.contains(e.getKey());\n+        }).map(Map.Entry::getValue).toList();\n+\n+        if (matchingCertificates.isEmpty()) {\n+            matchingCertificates = mappedCertficates.stream().filter(e -> {\n+                return signingIdentityNames.stream().anyMatch(filter -> {\n+                    return filter.startsWith(e.getKey());\n+                });\n+            }).map(Map.Entry::getValue).toList();\n+        }\n+\n+        final var cert = selectSigningIdentity(matchingCertificates,\n+                certificateSelector, validatedKeychain);\n+\n+        try {\n+            cert.checkValidity();\n+        } catch (CertificateExpiredException|CertificateNotYetValidException ex) {\n+            throw new ExpiredCertificateException(I18N.buildConfigException(\"error.certificate.expired\", findSubjectCNs(cert).getFirst()).create());\n+        }\n+\n+        final var signingIdentityHash = CertificateHash.of(cert);\n+\n+        return new SigningIdentityImpl(signingIdentityHash.toString());\n+    }\n+\n+    private static X509Certificate selectSigningIdentity(List<X509Certificate> certs,\n+            CertificateSelector certificateSelector, Optional<Keychain> keychain) throws ConfigException {\n+        Objects.requireNonNull(certificateSelector);\n+        Objects.requireNonNull(keychain);\n+        switch (certs.size()) {\n+            case 0 -> {\n+                Log.error(I18N.format(\"error.cert.not.found\", certificateSelector.signingIdentities().getFirst(),\n+                        keychain.map(Keychain::name).orElse(\"\")));\n+                throw I18N.buildConfigException(\"error.explicit-sign-no-cert\")\n+                        .advice(\"error.explicit-sign-no-cert.advice\").create();\n+            }\n+            case 1 -> {\n+                return certs.getFirst();\n+            }\n+            default -> {\n+                Log.error(I18N.format(\"error.multiple.certs.found\", certificateSelector.signingIdentities().getFirst(),\n+                        keychain.map(Keychain::name).orElse(\"\")));\n+                return certs.getFirst();\n+            }\n+        }\n+    }\n+\n+    private static List<String> findSubjectCNs(X509Certificate cert) {\n+        final LdapName ldapName;\n+        try {\n+            ldapName = new LdapName(cert.getSubjectX500Principal().getName(X500Principal.RFC2253));\n+        } catch (InvalidNameException e) {\n+            return List.of();\n+        }\n+\n+        return ldapName.getRdns().stream().filter(rdn -> {\n+            return rdn.getType().equalsIgnoreCase(\"CN\");\n+        }).map(Rdn::getValue).map(Object::toString).distinct().toList();\n+    }\n+\n+    record CertificateSelector(String name, List<StandardCertificatePrefix> prefixes) {\n+        CertificateSelector {\n+            Objects.requireNonNull(prefixes);\n+            prefixes.forEach(Objects::requireNonNull);\n+            Objects.requireNonNull(name);\n+        }\n+\n+        List<String> signingIdentities() {\n+            if (prefixes().isEmpty()) {\n+                return List.of(name);\n+            } else {\n+                return prefixes.stream().map(StandardCertificatePrefix::value).map(prefix -> {\n+                    return prefix + name;\n+                }).toList();\n+            }\n+        }\n+    }\n+\n+    enum StandardCertificatePrefix {\n+        APP_SIGN_APP_STORE(\"3rd Party Mac Developer Application\"),\n+        INSTALLER_SIGN_APP_STORE(\"3rd Party Mac Developer Installer\"),\n+        APP_SIGN_PERSONAL(\"Developer ID Application\"),\n+        INSTALLER_SIGN_PERSONAL(\"Developer ID Installer\");\n+\n+        StandardCertificatePrefix(String value) {\n+            this.value = value + \": \";\n+        }\n+\n+        String value() {\n+            return value;\n+        }\n+\n+        static Optional<StandardCertificatePrefix> findStandardCertificatePrefix(String certificateLocator) {\n+            Objects.requireNonNull(certificateLocator);\n+            return Stream.of(StandardCertificatePrefix.values()).filter(prefix -> {\n+                return certificateLocator.startsWith(prefix.value);\n+            }).reduce((x, y) -> {\n+                throw new UnsupportedOperationException();\n+            });\n+        }\n+\n+        private final String value;\n+    }\n+\n+    enum StandardCertificateSelector {\n+        APP_IMAGE(StandardCertificatePrefix.APP_SIGN_PERSONAL),\n+        PKG_INSTALLER(StandardCertificatePrefix.INSTALLER_SIGN_PERSONAL),\n+        APP_STORE_APP_IMAGE(StandardCertificatePrefix.APP_SIGN_PERSONAL, StandardCertificatePrefix.APP_SIGN_APP_STORE),\n+        APP_STORE_PKG_INSTALLER(StandardCertificatePrefix.INSTALLER_SIGN_PERSONAL, StandardCertificatePrefix.INSTALLER_SIGN_APP_STORE);\n+\n+        StandardCertificateSelector(StandardCertificatePrefix ... prefixes) {\n+            this.prefixes = List.of(prefixes);\n+        }\n+\n+        static CertificateSelector create(String certificateLocator, StandardCertificateSelector defaultSelector) {\n+            return StandardCertificatePrefix.findStandardCertificatePrefix(certificateLocator).map(prefix -> {\n+                return new CertificateSelector(certificateLocator, List.of());\n+            }).orElseGet(() -> {\n+                return new CertificateSelector(certificateLocator, defaultSelector.prefixes);\n+            });\n+        }\n+\n+        private final List<StandardCertificatePrefix> prefixes;\n+    }\n+\n+    private String signingIdentity;\n+    private CertificateSelector certificateSelector;\n+    private String keychain;\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/SigningIdentityBuilder.java","additions":245,"deletions":0,"binary":false,"changes":245,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.CodesignConfig.ADHOC_SIGNING_IDENTITY;\n+\n+import java.util.Objects;\n+import jdk.jpackage.internal.model.SigningIdentity;\n+\n+record SigningIdentityImpl(String id) implements SigningIdentity {\n+\n+    SigningIdentityImpl {\n+        Objects.requireNonNull(id);\n+\n+        if (ADHOC_SIGNING_IDENTITY.equals(id)) {\n+            throw new IllegalArgumentException(\"Adhoc signing identity not allowed\");\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/SigningIdentityImpl.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import jdk.internal.util.OSVersion;\n+import jdk.jpackage.internal.util.function.ThrowingConsumer;\n+\n+final class TempKeychain implements Closeable {\n+\n+    static void withKeychains(ThrowingConsumer<List<Keychain>> keychainConsumer, List<Keychain> keychains) throws Throwable {\n+        keychains.forEach(Objects::requireNonNull);\n+        if (keychains.isEmpty() || OSVersion.current().compareTo(new OSVersion(10, 12)) < 0) {\n+            keychainConsumer.accept(keychains);\n+        } else {\n+            \/\/ we need this for OS X 10.12+\n+            try (var tempKeychain = new TempKeychain(keychains)) {\n+                keychainConsumer.accept(tempKeychain.keychains);\n+            }\n+        }\n+    }\n+\n+    static void withKeychain(ThrowingConsumer<Keychain> keychainConsumer, Keychain keychain) throws Throwable {\n+        Objects.requireNonNull(keychainConsumer);\n+        withKeychains(keychains -> {\n+            keychainConsumer.accept(keychains.getFirst());\n+        }, List.of(keychain));\n+    }\n+\n+    TempKeychain(List<Keychain> keychains) throws IOException {\n+        this.keychains = Objects.requireNonNull(keychains);\n+\n+        final var currentKeychains = Keychain.listKeychains();\n+\n+        final var currentKeychainPaths = currentKeychains.stream().map(Keychain::path).toList();\n+\n+        final var missingKeychains = keychains.stream().filter(k -> {\n+            return !currentKeychainPaths.contains(k.path());\n+        }).toList();\n+\n+        if (missingKeychains.isEmpty()) {\n+            restoreKeychainsCmd = List.of();\n+        } else {\n+            List<String> args = new ArrayList<>();\n+            args.add(\"\/usr\/bin\/security\");\n+            args.add(\"list-keychains\");\n+            args.add(\"-s\");\n+            args.addAll(currentKeychains.stream().map(Keychain::asCliArg).toList());\n+\n+            restoreKeychainsCmd = List.copyOf(args);\n+\n+            args.addAll(missingKeychains.stream().map(Keychain::asCliArg).toList());\n+\n+            Executor.of(args.toArray(String[]::new)).executeExpectSuccess();\n+        }\n+    }\n+\n+    List<Keychain> keychains() {\n+        return keychains;\n+    }\n+\n+    @Override\n+    public void close() throws IOException {\n+        if (!restoreKeychainsCmd.isEmpty()) {\n+            Executor.of(restoreKeychainsCmd.toArray(String[]::new)).executeExpectSuccess();\n+        }\n+    }\n+\n+    private final List<Keychain> keychains;\n+    private final List<String> restoreKeychainsCmd;\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/TempKeychain.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+public interface AppImageSigningConfig {\n+\n+    SigningIdentity identity();\n+\n+    String identifierPrefix();\n+\n+    Optional<Path> entitlements();\n+\n+    String entitlementsResourceName();\n+\n+    Optional<String> keychain();\n+\n+    record Stub(SigningIdentity identity, String identifierPrefix, Optional<Path> entitlements,\n+            Optional<String> keychain, String entitlementsResourceName) implements AppImageSigningConfig {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/AppImageSigningConfig.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import static java.util.stream.Collectors.joining;\n+import static java.util.stream.Collectors.toMap;\n+\n+import java.nio.file.Path;\n+import java.util.Map;\n+import java.util.function.Function;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+public interface MacApplication extends Application, MacApplicationMixin {\n+\n+    default DottedVersion shortVersion() {\n+        final var verComponents = DottedVersion.lazy(version()).getComponents();\n+        \/\/ Short version should have exactly three components according to\n+        \/\/ https:\/\/developer.apple.com\/documentation\/bundleresources\/information-property-list\/cfbundleshortversionstring\n+        int maxComponentCount = 3;\n+        \/\/ However, if the number of components is less than three, historically, jpackage will not add missing components.\n+        maxComponentCount = Integer.min(maxComponentCount, verComponents.length);\n+        return DottedVersion.greedy(IntStream.range(0, maxComponentCount).mapToObj(idx -> {\n+            if (idx < verComponents.length) {\n+                return verComponents[idx].toString();\n+            } else {\n+                return \"0\";\n+            }\n+        }).collect(joining(\".\")));\n+    }\n+\n+    @Override\n+    default Path appImageDirName() {\n+        if (isRuntime()) {\n+            return Application.super.appImageDirName();\n+        } else {\n+            return Path.of(Application.super.appImageDirName().toString() + \".app\");\n+        }\n+    }\n+\n+    \/**\n+     * Returns {@code true} if the application image of this application should be\n+     * signed.\n+     *\n+     * @return {@code true} if the application image of this application should be\n+     *         signed\n+     *\/\n+    default boolean sign() {\n+        return signingConfig().isPresent();\n+    }\n+\n+    @Override\n+    default Map<String, String> extraAppImageFileData() {\n+        return Stream.of(ExtraAppImageFileField.values()).collect(toMap(ExtraAppImageFileField::fieldName, x -> x.asString(this)));\n+    }\n+\n+    public static MacApplication create(Application app, MacApplicationMixin mixin) {\n+        return CompositeProxy.create(MacApplication.class, app, mixin);\n+    }\n+\n+    public enum ExtraAppImageFileField {\n+        SIGNED(\"signed\", app -> Boolean.toString(app.sign())),\n+        APP_STORE(\"app-store\", app -> Boolean.toString(app.appStore()));\n+\n+        ExtraAppImageFileField(String fieldName, Function<MacApplication, String> getter) {\n+            this.fieldName = fieldName;\n+            this.getter = getter;\n+        }\n+\n+        public String fieldName() {\n+            return fieldName;\n+        }\n+\n+        String asString(MacApplication app) {\n+            return getter.apply(app);\n+        }\n+\n+        private final String fieldName;\n+        private final Function<MacApplication, String> getter;\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacApplication.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+public interface MacApplicationMixin {\n+\n+    Optional<Path> icon();\n+\n+    String bundleName();\n+\n+    String bundleIdentifier();\n+\n+    String category();\n+\n+    boolean appStore();\n+\n+    Optional<AppImageSigningConfig> signingConfig();\n+\n+    record Stub(Optional<Path> icon, String bundleName, String bundleIdentifier, String category,\n+            boolean appStore, Optional<AppImageSigningConfig> signingConfig) implements MacApplicationMixin {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacApplicationMixin.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+public interface MacDmgPackage extends MacPackage, MacDmgPackageMixin {\n+\n+    public static MacDmgPackage create(MacPackage pkg, MacDmgPackageMixin mixin) {\n+        return CompositeProxy.create(MacDmgPackage.class, pkg, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacDmgPackage.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface MacDmgPackageMixin {\n+\n+    Optional<Path> icon();\n+\n+    \/**\n+     * Returns additional top=level content for DMG package.\n+     * <p>\n+     * Each item in the list can be a directory or a file.\n+     *\n+     * @return the additional top=level content for DMG package\n+     *\/\n+    List<Path> content();\n+\n+    record Stub(Optional<Path> icon, List<Path> content) implements MacDmgPackageMixin {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacDmgPackageMixin.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+public interface MacFileAssociation extends FileAssociation, MacFileAssociationMixin {\n+\n+    public static MacFileAssociation create(FileAssociation fa, MacFileAssociationMixin mixin) {\n+        return CompositeProxy.create(MacFileAssociation.class, fa, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacFileAssociation.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface MacFileAssociationMixin {\n+\n+    String cfBundleTypeName();\n+\n+    String cfBundleTypeRole();\n+\n+    String lsHandlerRank();\n+\n+    Optional<Boolean> lsTypeIsPackage();\n+\n+    Optional<String> nsDocumentClass();\n+\n+    Optional<String> nsPersistentStoreTypeKey();\n+\n+    Optional<Boolean> lsSupportsOpeningDocumentsInPlace();\n+\n+    Optional<Boolean> uiSupportsDocumentBrowser();\n+\n+    List<String> utTypeConformsTo();\n+\n+    List<String> nsExportableTypes();\n+\n+    record Stub(String cfBundleTypeName, String cfBundleTypeRole,\n+            String lsHandlerRank, Optional<Boolean> lsTypeIsPackage, Optional<String> nsDocumentClass,\n+            Optional<String> nsPersistentStoreTypeKey,\n+            Optional<Boolean> lsSupportsOpeningDocumentsInPlace,\n+            Optional<Boolean> uiSupportsDocumentBrowser, List<String> utTypeConformsTo,\n+            List<String> nsExportableTypes) implements MacFileAssociationMixin {\n+\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacFileAssociationMixin.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+public interface MacLauncher extends Launcher {\n+\n+    public static MacLauncher create(Launcher launcher) {\n+        return CompositeProxy.create(MacLauncher.class, launcher);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacLauncher.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+public interface MacPackage extends Package, MacPackageMixin {\n+\n+    MacApplication app();\n+\n+    @Override\n+    default AppImageLayout appImageLayout() {\n+        if (isRuntimeInstaller()) {\n+            return RUNTIME_PACKAGE_LAYOUT;\n+        } else {\n+            return Package.super.appImageLayout();\n+        }\n+    }\n+\n+    default Path installDir() {\n+        return Path.of(\"\/\").resolve(relativeInstallDir());\n+    }\n+\n+    public static MacPackage create(Package pkg, MacPackageMixin mixin) {\n+        return CompositeProxy.create(MacPackage.class, pkg, mixin);\n+    }\n+\n+    public static final RuntimeLayout RUNTIME_PACKAGE_LAYOUT = RuntimeLayout.create(Path.of(\"Contents\/Home\"));\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacPackage.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.util.Optional;\n+\n+public interface MacPackageMixin {\n+\n+    \/**\n+     * Gets sign status of the predefined app image.\n+     * <p>\n+     * Returns {@code Optional.of(Boolean.TRUE)} if the predefined app image is\n+     * available and is signed.\n+     * <p>\n+     * Returns {@code Optional.of(Boolean.FALSE)} if the predefined app image is\n+     * available and is unsigned.\n+     * <p>\n+     * Returns any empty {@link Optional} instance if the predefined app image is\n+     * unavailable.\n+     *\n+     * @return sign status of the predefined app image if any\n+     *\/\n+    Optional<Boolean> predefinedAppImageSigned();\n+\n+    record Stub(Optional<Boolean> predefinedAppImageSigned) implements MacPackageMixin {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacPackageMixin.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+public interface MacPkgPackage extends MacPackage, MacPkgPackageMixin {\n+\n+    \/**\n+     * Returns {@code true} if this PKG installer should be signed.\n+     *\n+     * @return {@code true} if this PKG installer should be signed\n+     *\/\n+    default boolean sign() {\n+        return signingConfig().isPresent();\n+    }\n+\n+    public static MacPkgPackage create(MacPackage pkg, MacPkgPackageMixin mixin) {\n+        return CompositeProxy.create(MacPkgPackage.class, pkg, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacPkgPackage.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.util.Optional;\n+\n+public interface MacPkgPackageMixin {\n+\n+    Optional<PkgSigningConfig> signingConfig();\n+\n+    record Stub(Optional<PkgSigningConfig> signingConfig) implements MacPkgPackageMixin {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/MacPkgPackageMixin.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.model;\n+\n+import java.util.Optional;\n+\n+public interface PkgSigningConfig {\n+\n+    SigningIdentity identity();\n+\n+    Optional<String> keychain();\n+\n+    record Stub(SigningIdentity identity, Optional<String> keychain) implements PkgSigningConfig {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/PkgSigningConfig.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.model;\n+\n+public interface SigningIdentity {\n+\n+    String id();\n+\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/model\/SigningIdentity.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+-->\n+\n+<!--\n+  This stylesheet adjusts .plist file produced by `\/usr\/bin\/pkgbuild &#45;&#45;analyze`.\n+-->\n+<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http:\/\/www.w3.org\/1999\/XSL\/Transform\">\n+\n+  <!--\n+    Make bundle NOT-relocatable\n+  -->\n+  <xsl:template match=\"true[preceding-sibling::key[1] = 'BundleIsRelocatable']\">\n+    <false\/>\n+  <\/xsl:template>\n+\n+  <!--\n+    Remove `ChildBundles` key with value\n+  -->\n+  <xsl:template match=\"key[. = 'ChildBundles']|array[preceding-sibling::key[1] = 'ChildBundles']\"\/>\n+\n+  <!--\n+    Identity transform\n+  -->\n+  <xsl:template match=\"@*|node()\">\n+    <xsl:copy>\n+      <xsl:apply-templates select=\"@*|node()\"\/>\n+    <\/xsl:copy>\n+  <\/xsl:template>\n+\n+<\/xsl:stylesheet>\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/adjust-component-plist.xsl","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.util;\n+\n+import static jdk.jpackage.internal.util.XmlUtils.toXmlConsumer;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Optional;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamWriter;\n+\n+public final class PListWriter {\n+\n+    public static void writeBoolean(XMLStreamWriter xml, String key, boolean value)\n+            throws XMLStreamException {\n+        writeKey(xml, key);\n+        xml.writeEmptyElement(Boolean.toString(value));\n+    }\n+\n+    public static void writeBooleanOptional(XMLStreamWriter xml, String key, Optional<Boolean> value)\n+            throws XMLStreamException {\n+        if (value.isPresent()) {\n+            writeBoolean(xml, key, value.orElseThrow());\n+        }\n+    }\n+\n+    public static void writeString(XMLStreamWriter xml, String key, Object value)\n+            throws XMLStreamException {\n+        writeKey(xml, key);\n+        writeString(xml, value);\n+    }\n+\n+    public static void writeStringOptional(XMLStreamWriter xml, String key, Optional<?> value)\n+            throws XMLStreamException {\n+        if (value.isPresent()) {\n+            writeString(xml, key, value.orElseThrow());\n+        }\n+    }\n+\n+    public static void writeStringArray(XMLStreamWriter xml, String key, Collection<?> values)\n+            throws XMLStreamException, IOException {\n+        if (!values.isEmpty()) {\n+            writeKey(xml, key);\n+            writeArray(xml, toXmlConsumer(() -> {\n+                for (var v : values) {\n+                    writeString(xml, v);\n+                }\n+            }));\n+        }\n+    }\n+\n+    public static void writeStringArray(XMLStreamWriter xml, String key, Object... values)\n+            throws XMLStreamException, IOException {\n+        writeStringArray(xml, key, List.of(values));\n+    }\n+\n+    public static void writeDict(XMLStreamWriter xml, XmlConsumer content)\n+            throws XMLStreamException, IOException {\n+        writeElement(xml, \"dict\", content);\n+    }\n+\n+    public static void writeArray(XMLStreamWriter xml, XmlConsumer content)\n+            throws XMLStreamException, IOException {\n+        writeElement(xml, \"array\", content);\n+    }\n+\n+    public static void writePList(XMLStreamWriter xml, XmlConsumer content)\n+            throws XMLStreamException, IOException {\n+        xml.writeDTD(\"plist PUBLIC \\\"-\/\/Apple\/\/DTD PLIST 1.0\/\/EN\\\" \\\"https:\/\/www.apple.com\/DTDs\/PropertyList-1.0.dtd\\\"\");\n+        xml.writeStartElement(\"plist\");\n+        xml.writeAttribute(\"version\", \"1.0\");\n+        content.accept(xml);\n+        xml.writeEndElement();\n+    }\n+\n+    public static void writeKey(XMLStreamWriter xml, String key)\n+            throws XMLStreamException {\n+        writeElement(xml, \"key\", key);\n+    }\n+\n+    private static void writeString(XMLStreamWriter xml, Object value)\n+            throws XMLStreamException {\n+        writeElement(xml, \"string\", value.toString());\n+    }\n+\n+    private static void writeElement(XMLStreamWriter xml, String name, String value)\n+            throws XMLStreamException {\n+        xml.writeStartElement(name);\n+        xml.writeCharacters(value);\n+        xml.writeEndElement();\n+    }\n+\n+    private static void writeElement(XMLStreamWriter xml, String name, XmlConsumer content)\n+            throws XMLStreamException, IOException {\n+        xml.writeStartElement(name);\n+        content.accept(xml);\n+        xml.writeEndElement();\n+    }\n+}\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/util\/PListWriter.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"},{"patch":"@@ -1,168 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.jpackage.internal;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.nio.file.Files;\n-import java.nio.file.LinkOption;\n-import java.nio.file.Path;\n-import java.util.ArrayList;\n-import java.util.Map;\n-import java.util.List;\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.jpackage.internal.StandardBundlerParam.SOURCE_DIR;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_CONTENT;\n-import static jdk.jpackage.internal.StandardBundlerParam.OUTPUT_DIR;\n-import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import jdk.jpackage.internal.resources.ResourceLocator;\n-import jdk.jpackage.internal.util.FileUtils;\n-import jdk.jpackage.internal.util.PathUtils;\n-\n-\/*\n- * AbstractAppImageBuilder\n- *     This is sub-classed by each of the platform dependent AppImageBuilder\n- * classes, and contains resource processing code common to all platforms.\n- *\/\n-\n-public abstract class AbstractAppImageBuilder {\n-\n-    private final Path root;\n-    protected final ApplicationLayout appLayout;\n-\n-    public AbstractAppImageBuilder(Path root) {\n-        this.root = root;\n-        appLayout = ApplicationLayout.platformAppImage().resolveAt(root);\n-    }\n-\n-    public InputStream getResourceAsStream(String name) {\n-        return ResourceLocator.class.getResourceAsStream(name);\n-    }\n-\n-    public abstract void prepareApplicationFiles(\n-            Map<String, ? super Object> params) throws IOException;\n-\n-    protected boolean withAppImageFile(Map<String, ? super Object> params) {\n-        return true;\n-    }\n-\n-    protected void writeCfgFile(Map<String, ? super Object> params) throws\n-            IOException {\n-        new CfgFile().initFromParams(params).create(root);\n-    }\n-\n-    ApplicationLayout getAppLayout() {\n-        return appLayout;\n-    }\n-\n-    protected void copyApplication(Map<String, ? super Object> params)\n-            throws IOException {\n-        Path inputPath = SOURCE_DIR.fetchFrom(params);\n-        if (inputPath != null) {\n-            inputPath = inputPath.toAbsolutePath();\n-\n-            List<Path> excludes = new ArrayList<>();\n-\n-            for (var path : List.of(TEMP_ROOT.fetchFrom(params), OUTPUT_DIR.fetchFrom(params), root)) {\n-                if (Files.isDirectory(path)) {\n-                    path = path.toAbsolutePath();\n-                    if (path.startsWith(inputPath) && !Files.isSameFile(path, inputPath)) {\n-                        excludes.add(path);\n-                    }\n-                }\n-            }\n-\n-            FileUtils.copyRecursive(inputPath,\n-                    appLayout.appDirectory().toAbsolutePath(), excludes);\n-        }\n-\n-        if (withAppImageFile(params)) {\n-            AppImageFile.save(root, params);\n-        }\n-\n-        List<String> items = APP_CONTENT.fetchFrom(params);\n-        for (String item : items) {\n-            FileUtils.copyRecursive(Path.of(item),\n-                appLayout.contentDirectory().resolve(Path.of(item).getFileName()),\n-                LinkOption.NOFOLLOW_LINKS);\n-        }\n-    }\n-\n-    public static OverridableResource createIconResource(String defaultIconName,\n-            BundlerParamInfo<Path> iconParam, Map<String, ? super Object> params,\n-            Map<String, ? super Object> mainParams) throws IOException {\n-\n-        if (mainParams != null) {\n-            params = AddLauncherArguments.merge(mainParams, params, ICON.getID(),\n-                    iconParam.getID());\n-        }\n-\n-        final String resourcePublicName = APP_NAME.fetchFrom(params)\n-                + PathUtils.getSuffix(Path.of(defaultIconName));\n-\n-        IconType iconType = getLauncherIconType(params);\n-        if (iconType == IconType.NoIcon) {\n-            return null;\n-        }\n-\n-        OverridableResource resource = createResource(defaultIconName, params)\n-                .setCategory(\"icon\")\n-                .setExternal(iconParam.fetchFrom(params))\n-                .setPublicName(resourcePublicName);\n-\n-        if (iconType == IconType.DefaultOrResourceDirIcon && mainParams != null) {\n-            \/\/ No icon explicitly configured for this launcher.\n-            \/\/ Dry-run resource creation to figure out its source.\n-            final Path nullPath = null;\n-            if (resource.saveToFile(nullPath)\n-                    != OverridableResource.Source.ResourceDir) {\n-                \/\/ No icon in resource dir for this launcher, inherit icon\n-                \/\/ configured for the main launcher.\n-                resource = createIconResource(defaultIconName, iconParam,\n-                        mainParams, null).setLogPublicName(resourcePublicName);\n-            }\n-        }\n-\n-        return resource;\n-    }\n-\n-    private enum IconType { DefaultOrResourceDirIcon, CustomIcon, NoIcon };\n-\n-    private static IconType getLauncherIconType(Map<String, ? super Object> params) {\n-        Path launcherIcon = ICON.fetchFrom(params);\n-        if (launcherIcon == null) {\n-            return IconType.DefaultOrResourceDirIcon;\n-        }\n-\n-        if (launcherIcon.toFile().getName().isEmpty()) {\n-            return IconType.NoIcon;\n-        }\n-\n-        return IconType.CustomIcon;\n-    }\n-}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AbstractAppImageBuilder.java","additions":0,"deletions":168,"binary":false,"changes":168,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,8 +43,0 @@\n-    static final BundlerParamInfo<Path> IMAGES_ROOT =\n-            new StandardBundlerParam<>(\n-            \"imagesRoot\",\n-            Path.class,\n-            params ->\n-                StandardBundlerParam.TEMP_ROOT.fetchFrom(params).resolve(\"images\"),\n-            (s, p) -> null);\n-\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AbstractBundler.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,3 +28,4 @@\n-import jdk.internal.util.OperatingSystem;\n-import jdk.jpackage.internal.model.ConfigException;\n-import jdk.jpackage.internal.model.PackagerException;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+\n@@ -37,5 +38,3 @@\n-import java.util.function.Function;\n-import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n-import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n-import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import jdk.internal.util.OperatingSystem;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.PackagerException;\n@@ -89,3 +88,2 @@\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-            return PREDEFINED_RUNTIME_IMAGE.fetchFrom(params);\n-        }\n+\n+        final var predefinedAppImage = PREDEFINED_APP_IMAGE.fetchFrom(params);\n@@ -94,1 +92,8 @@\n-            return createAppBundle(params, outputParentDir);\n+            if (predefinedAppImage == null) {\n+                Path rootDirectory = createRoot(params, outputParentDir);\n+                appImageSupplier.prepareApplicationFiles(params, rootDirectory);\n+                return rootDirectory;\n+            } else {\n+                appImageSupplier.prepareApplicationFiles(params, predefinedAppImage);\n+                return predefinedAppImage;\n+            }\n@@ -97,1 +102,1 @@\n-        } catch (RuntimeException|IOException|ConfigException ex) {\n+        } catch (RuntimeException|IOException ex) {\n@@ -113,4 +118,2 @@\n-    final AppImageBundler setDependentTask(boolean v) {\n-        dependentTask = v;\n-        return this;\n-    }\n+    @FunctionalInterface\n+    static interface AppImageSupplier {\n@@ -118,2 +121,2 @@\n-    final boolean isDependentTask() {\n-        return dependentTask;\n+        void prepareApplicationFiles(Map<String, ? super Object> params,\n+                Path root) throws PackagerException, IOException;\n@@ -122,2 +125,1 @@\n-    final AppImageBundler setAppImageSupplier(\n-            Function<Path, AbstractAppImageBuilder> v) {\n+    final AppImageBundler setAppImageSupplier(AppImageSupplier v) {\n@@ -148,5 +150,3 @@\n-        if (!dependentTask) {\n-            Log.verbose(MessageFormat.format(\n-                    I18N.getString(\"message.creating-app-bundle\"),\n-                    imageName, outputDirectory.toAbsolutePath()));\n-        }\n+        Log.verbose(MessageFormat.format(\n+                I18N.getString(\"message.creating-app-bundle\"),\n+                imageName, outputDirectory.toAbsolutePath()));\n@@ -166,30 +166,0 @@\n-    private Path createAppBundle(Map<String, ? super Object> params,\n-            Path outputDirectory) throws PackagerException, IOException,\n-            ConfigException {\n-\n-        boolean hasAppImage =\n-                PREDEFINED_APP_IMAGE.fetchFrom(params) != null;\n-        boolean hasRuntimeImage =\n-                PREDEFINED_RUNTIME_IMAGE.fetchFrom(params) != null;\n-\n-        Path rootDirectory = hasAppImage ?\n-                PREDEFINED_APP_IMAGE.fetchFrom(params) :\n-                createRoot(params, outputDirectory);\n-\n-        AbstractAppImageBuilder appBuilder = appImageSupplier.apply(rootDirectory);\n-        if (!hasAppImage) {\n-            if (!hasRuntimeImage) {\n-                JLinkBundlerHelper.execute(params,\n-                        appBuilder.getAppLayout().runtimeHomeDirectory());\n-            } else {\n-                StandardBundlerParam.copyPredefinedRuntimeImage(\n-                        params, appBuilder.getAppLayout());\n-            }\n-        }\n-\n-        appBuilder.prepareApplicationFiles(params);\n-\n-        return rootDirectory;\n-    }\n-\n-    private boolean dependentTask;\n@@ -197,1 +167,1 @@\n-    private Function<Path, AbstractAppImageBuilder> appImageSupplier;\n+    private AppImageSupplier appImageSupplier;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageBundler.java","additions":27,"deletions":57,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.AppImageLayout;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+\n+record AppImageDesc(AppImageLayout appImageLayout, Path path) {\n+\n+    AppImageDesc {\n+        Objects.requireNonNull(appImageLayout);\n+        Objects.requireNonNull(path);\n+    }\n+\n+    AppImageLayout resolvedAppImagelayout() {\n+        return appImageLayout.resolveAt(path);\n+    }\n+\n+    Optional<ApplicationLayout> asResolvedApplicationLayout() {\n+        return asApplicationLayout().map(v -> v.resolveAt(path));\n+    }\n+\n+    Optional<ApplicationLayout> asApplicationLayout() {\n+        if (appImageLayout instanceof ApplicationLayout layout) {\n+            return Optional.of(layout);\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageDesc.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,5 @@\n+import static java.util.stream.Collectors.joining;\n+import static java.util.stream.Collectors.toMap;\n+import static java.util.stream.Collectors.toSet;\n+import static jdk.jpackage.internal.util.function.ThrowingFunction.toFunction;\n+\n@@ -29,1 +34,0 @@\n-import java.nio.file.Path;\n@@ -31,2 +35,2 @@\n-import java.text.MessageFormat;\n-import java.util.ArrayList;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n@@ -36,5 +40,3 @@\n-import javax.xml.stream.XMLStreamException;\n-import javax.xml.stream.XMLStreamWriter;\n-import javax.xml.parsers.DocumentBuilder;\n-import javax.xml.parsers.DocumentBuilderFactory;\n-import javax.xml.parsers.ParserConfigurationException;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Stream;\n@@ -42,1 +44,0 @@\n-import javax.xml.xpath.XPathConstants;\n@@ -45,1 +46,0 @@\n-\n@@ -47,0 +47,5 @@\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.util.XmlUtils;\n@@ -48,0 +53,1 @@\n+import org.w3c.dom.Element;\n@@ -49,2 +55,0 @@\n-import org.w3c.dom.NodeList;\n-import org.w3c.dom.NamedNodeMap;\n@@ -53,10 +57,0 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n-import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_AS_SERVICE;\n-import static jdk.jpackage.internal.StandardBundlerParam.SHORTCUT_HINT;\n-import static jdk.jpackage.internal.StandardBundlerParam.MENU_HINT;\n-import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_STORE;\n-import jdk.jpackage.internal.util.XmlUtils;\n@@ -66,58 +60,3 @@\n-    \/\/ These values will be loaded from AppImage xml file.\n-    private final String appVersion;\n-    private final String launcherName;\n-    private final String mainClass;\n-    private final List<LauncherInfo> addLauncherInfos;\n-    private final String creatorVersion;\n-    private final String creatorPlatform;\n-    private final boolean signed;\n-    private final boolean appStore;\n-\n-    private static final String FILENAME = \".jpackage.xml\";\n-\n-    private static final Map<OperatingSystem, String> PLATFORM_LABELS = Map.of(\n-            OperatingSystem.LINUX, \"linux\",\n-            OperatingSystem.WINDOWS, \"windows\",\n-            OperatingSystem.MACOS, \"macOS\");\n-\n-    private AppImageFile(Path appImageDir, String appVersion, String launcherName,\n-            String mainClass, List<LauncherInfo> launcherInfos,\n-            String creatorVersion, String creatorPlatform, String signedStr,\n-            String appStoreStr) {\n-        boolean isValid = true;\n-\n-        if (appVersion == null || appVersion.length() == 0) {\n-            isValid = false;\n-        }\n-\n-        if (launcherName == null || launcherName.length() == 0) {\n-            isValid = false;\n-        }\n-\n-        if (mainClass == null || mainClass.length() == 0) {\n-            isValid = false;\n-        }\n-\n-        for (var launcher : launcherInfos) {\n-            if (\"\".equals(launcher.getName())) {\n-                isValid = false;\n-            }\n-        }\n-\n-        if (!Objects.equals(getVersion(), creatorVersion)) {\n-            isValid = false;\n-        }\n-\n-        if (!Objects.equals(getPlatform(), creatorPlatform)) {\n-            isValid = false;\n-        }\n-\n-        if (signedStr == null ||\n-                !(\"true\".equals(signedStr) || \"false\".equals(signedStr))) {\n-            isValid = false;\n-        }\n-\n-        if (appStoreStr == null ||\n-                !(\"true\".equals(appStoreStr) || \"false\".equals(appStoreStr))) {\n-            isValid = false;\n-        }\n+    AppImageFile(Application app) {\n+        this(new ApplicationData(app));\n+    }\n@@ -125,5 +64,1 @@\n-        if (!isValid) {\n-            throw new RuntimeException(MessageFormat.format(I18N.getString(\n-                \"error.invalid-app-image\"), appImageDir,\n-                AppImageFile.getPathInAppImage(appImageDir)));\n-        }\n+    private AppImageFile(ApplicationData app) {\n@@ -131,8 +66,7 @@\n-        this.appVersion = appVersion;\n-        this.launcherName = launcherName;\n-        this.mainClass = mainClass;\n-        this.addLauncherInfos = launcherInfos;\n-        this.creatorVersion = creatorVersion;\n-        this.creatorPlatform = creatorPlatform;\n-        this.signed = \"true\".equals(signedStr);\n-        this.appStore = \"true\".equals(appStoreStr);\n+        appVersion = app.version();\n+        launcherName = app.mainLauncherName();\n+        mainClass = app.mainLauncherMainClassName();\n+        extra = app.extra;\n+        creatorVersion = getVersion();\n+        creatorPlatform = getPlatform();\n+        addLauncherInfos = app.additionalLaunchers;\n@@ -143,1 +77,1 @@\n-     * Each item in the list is not null or empty string.\n+     *\n@@ -157,0 +91,7 @@\n+    \/**\n+     * Returns application name. Never returns null or empty value.\n+     *\/\n+    String getAppName() {\n+        return launcherName;\n+    }\n+\n@@ -171,8 +112,0 @@\n-    public boolean isSigned() {\n-        return signed;\n-    }\n-\n-    public boolean isAppStore() {\n-        return appStore;\n-    }\n-\n@@ -180,2 +113,1 @@\n-     * Returns path to application image info file.\n-     * @param appImageDir - path to application image\n+     * Returns additional properties. Never returns null.\n@@ -183,5 +115,2 @@\n-    public static Path getPathInAppImage(Path appImageDir) {\n-        return ApplicationLayout.platformAppImage()\n-                .resolveAt(appImageDir)\n-                .appDirectory()\n-                .resolve(FILENAME);\n+    Map<String, String> getExtra() {\n+        return extra;\n@@ -192,13 +121,1 @@\n-     * from current instance.\n-     * @param appImageDir - path to application image\n-     * @throws IOException\n-     *\/\n-    void save(Path appImageDir) throws IOException {\n-        AppImageFile.save(appImageDir, null, this);\n-    }\n-\n-    \/**\n-     * Saves file with application image info in application image.\n-     * @param appImageDir - path to application image\n-     * @param params - parameters used to generate application image\n-     * @throws IOException\n+     * from this instance.\n@@ -206,46 +123,2 @@\n-    static void save(Path appImageDir, Map<String, Object> params)\n-            throws IOException {\n-        AppImageFile.save(appImageDir, params, null);\n-    }\n-\n-    \/**\n-     * Saves file with application image info in application image using params\n-     * or appImage. Both params or appImage cannot be valid.\n-     * @param appImageDir - path to application image\n-     * @param params - parameters used to generate application image\n-     * @param appImage - instance of already existing application image file\n-     * @throws IOException\n-     * @throws IllegalArgumentException - If both params and appImage are null or\n-     *                                    If both params and appImage are not null\n-     *\/\n-    private static void save(Path appImageDir,\n-            Map<String, Object> params,\n-            AppImageFile appImage) throws IOException {\n-        if ((params == null && appImage == null) ||\n-            (params != null && appImage != null)) {\n-                throw new IllegalArgumentException();\n-        }\n-\n-        final String appVersionSave;\n-        final String mainLauncherSave;\n-        final String mainClassSave;\n-        final String signedSave;\n-        final String appStoreSave;\n-        final List<LauncherInfo> addLauncherInfoSave;\n-        if (params != null) {\n-            appVersionSave = VERSION.fetchFrom(params);\n-            mainLauncherSave = APP_NAME.fetchFrom(params);\n-            mainClassSave = MAIN_CLASS.fetchFrom(params);\n-            signedSave = SIGN_BUNDLE.fetchFrom(params).toString();\n-            appStoreSave = APP_STORE.fetchFrom(params).toString();\n-            addLauncherInfoSave = null;\n-        } else {\n-            appVersionSave = appImage.getAppVersion();\n-            mainLauncherSave = appImage.getLauncherName();\n-            mainClassSave = appImage.getMainClass();\n-            signedSave = String.valueOf(appImage.isSigned());\n-            appStoreSave = String.valueOf(appImage.isAppStore());\n-            addLauncherInfoSave = appImage.getAddLaunchers();\n-        }\n-\n-        XmlUtils.createXml(getPathInAppImage(appImageDir), xml -> {\n+    void save(ApplicationLayout appLayout) throws IOException {\n+        XmlUtils.createXml(getPathInAppImage(appLayout), xml -> {\n@@ -253,2 +126,2 @@\n-            xml.writeAttribute(\"version\", getVersion());\n-            xml.writeAttribute(\"platform\", getPlatform());\n+            xml.writeAttribute(\"version\", creatorVersion);\n+            xml.writeAttribute(\"platform\", creatorPlatform);\n@@ -257,1 +130,1 @@\n-            xml.writeCharacters(appVersionSave);\n+            xml.writeCharacters(appVersion);\n@@ -261,1 +134,1 @@\n-            xml.writeCharacters(mainLauncherSave);\n+            xml.writeCharacters(launcherName);\n@@ -265,1 +138,1 @@\n-            xml.writeCharacters(mainClassSave);\n+            xml.writeCharacters(mainClass);\n@@ -268,15 +141,5 @@\n-            xml.writeStartElement(\"signed\");\n-            xml.writeCharacters(signedSave);\n-            xml.writeEndElement();\n-\n-            xml.writeStartElement(\"app-store\");\n-            xml.writeCharacters(appStoreSave);\n-            xml.writeEndElement();\n-\n-            if (addLauncherInfoSave != null) {\n-                for (var li : addLauncherInfoSave) {\n-                    addLauncherInfo(xml, li);\n-                }\n-            } else {\n-                List<Map<String, ? super Object>> addLaunchers =\n-                    ADD_LAUNCHERS.fetchFrom(params);\n+            for (var extraKey : extra.keySet().stream().sorted().toList()) {\n+                xml.writeStartElement(extraKey);\n+                xml.writeCharacters(extra.get(extraKey));\n+                xml.writeEndElement();\n+            }\n@@ -284,3 +147,8 @@\n-                for (var launcherParams : addLaunchers) {\n-                    var li = new LauncherInfo(launcherParams);\n-                    addLauncherInfo(xml, li);\n+            for (var li : addLauncherInfos) {\n+                xml.writeStartElement(\"add-launcher\");\n+                xml.writeAttribute(\"name\", li.name());\n+                xml.writeAttribute(\"service\", Boolean.toString(li.service()));\n+                for (var extraKey : li.extra().keySet().stream().sorted().toList()) {\n+                    xml.writeStartElement(extraKey);\n+                    xml.writeCharacters(li.extra().get(extraKey));\n+                    xml.writeEndElement();\n@@ -288,0 +156,1 @@\n+                xml.writeEndElement();\n@@ -292,8 +161,6 @@\n-    static void addLauncherInfo(XMLStreamWriter xml, LauncherInfo li)\n-            throws XMLStreamException {\n-        xml.writeStartElement(\"add-launcher\");\n-        xml.writeAttribute(\"name\", li.getName());\n-        xml.writeAttribute(\"shortcut\", Boolean.toString(li.isShortcut()));\n-        xml.writeAttribute(\"menu\", Boolean.toString(li.isMenu()));\n-        xml.writeAttribute(\"service\", Boolean.toString(li.isService()));\n-        xml.writeEndElement();\n+    \/**\n+     * Returns path to application image info file.\n+     * @param appLayout - application layout\n+     *\/\n+    static Path getPathInAppImage(ApplicationLayout appLayout) {\n+        return appLayout.appDirectory().resolve(FILENAME);\n@@ -304,3 +171,2 @@\n-     * @param appImageDir - path to application image\n-     * @return valid info about application image or null\n-     * @throws IOException\n+     * @param appImageDir - path at which to resolve the given application layout\n+     * @param appLayout - application layout\n@@ -308,1 +174,2 @@\n-    public static AppImageFile load(Path appImageDir) {\n+    static AppImageFile load(Path appImageDir, ApplicationLayout appLayout) throws ConfigException, IOException {\n+        var srcFilePath = getPathInAppImage(appLayout.resolveAt(appImageDir));\n@@ -310,12 +177,1 @@\n-            Document doc = readXml(appImageDir);\n-\n-            XPath xPath = XPathFactory.newInstance().newXPath();\n-\n-            String appVersion = xpathQueryNullable(xPath,\n-                    \"\/jpackage-state\/app-version\/text()\", doc);\n-\n-            String mainLauncher = xpathQueryNullable(xPath,\n-                    \"\/jpackage-state\/main-launcher\/text()\", doc);\n-\n-            String mainClass = xpathQueryNullable(xPath,\n-                    \"\/jpackage-state\/main-class\/text()\", doc);\n+            final Document doc = XmlUtils.initDocumentBuilder().parse(Files.newInputStream(srcFilePath));\n@@ -323,1 +179,1 @@\n-            List<LauncherInfo> launcherInfos = new ArrayList<>();\n+            final XPath xPath = XPathFactory.newInstance().newXPath();\n@@ -325,5 +181,5 @@\n-            String platform = xpathQueryNullable(xPath,\n-                    \"\/jpackage-state\/@platform\", doc);\n-\n-            String version = xpathQueryNullable(xPath,\n-                    \"\/jpackage-state\/@version\", doc);\n+            final var isPlatformValid = XmlUtils.queryNodes(doc, xPath, \"\/jpackage-state\/@platform\").findFirst().map(\n+                    Node::getNodeValue).map(getPlatform()::equals).orElse(false);\n+            if (!isPlatformValid) {\n+                throw new InvalidAppImageFileException();\n+            }\n@@ -331,2 +187,5 @@\n-            String signedStr = xpathQueryNullable(xPath,\n-                    \"\/jpackage-state\/signed\/text()\", doc);\n+            final var isVersionValid = XmlUtils.queryNodes(doc, xPath, \"\/jpackage-state\/@version\").findFirst().map(\n+                    Node::getNodeValue).map(getVersion()::equals).orElse(false);\n+            if (!isVersionValid) {\n+                throw new InvalidAppImageFileException();\n+            }\n@@ -334,2 +193,6 @@\n-            String appStoreStr = xpathQueryNullable(xPath,\n-                    \"\/jpackage-state\/app-store\/text()\", doc);\n+            final AppImageProperties props;\n+            try {\n+                props = AppImageProperties.main(doc, xPath);\n+            } catch (IllegalArgumentException ex) {\n+                throw new InvalidAppImageFileException(ex);\n+            }\n@@ -337,3 +200,8 @@\n-            NodeList launcherNodes = (NodeList) xPath.evaluate(\n-                    \"\/jpackage-state\/add-launcher\", doc,\n-                    XPathConstants.NODESET);\n+            final var additionalLaunchers = AppImageProperties.launchers(doc, xPath).stream().map(launcherProps -> {\n+                try {\n+                    return new LauncherInfo(launcherProps.get(\"name\"),\n+                            launcherProps.find(\"service\").map(Boolean::parseBoolean).orElse(false), launcherProps.getExtra());\n+                } catch (IllegalArgumentException ex) {\n+                    throw new InvalidAppImageFileException(ex);\n+                }\n+            }).toList();\n@@ -341,3 +209,2 @@\n-            for (int i = 0; i != launcherNodes.getLength(); i++) {\n-                 launcherInfos.add(new LauncherInfo(launcherNodes.item(i)));\n-            }\n+            return new AppImageFile(new ApplicationData(props.get(\"app-version\"), props.get(\"main-launcher\"),\n+                    props.get(\"main-class\"), props.getExtra(), additionalLaunchers));\n@@ -345,3 +212,0 @@\n-            return new AppImageFile(appImageDir, appVersion, mainLauncher,\n-                    mainClass, launcherInfos, version, platform, signedStr,\n-                    appStoreStr);\n@@ -351,6 +215,8 @@\n-        } catch (NoSuchFileException nsfe) {\n-            \/\/ non jpackage generated app-image (no app\/.jpackage.xml)\n-            throw new RuntimeException(MessageFormat.format(I18N.getString(\n-                    \"error.foreign-app-image\"), appImageDir));\n-        } catch (IOException ioe) {\n-            throw new RuntimeException(ioe);\n+        } catch (SAXException ex) {\n+            \/\/ Exception reading input XML (probably malformed XML)\n+            throw new IOException(ex);\n+        } catch (NoSuchFileException ex) {\n+            throw I18N.buildConfigException(\"error.foreign-app-image\", appImageDir).create();\n+        } catch (InvalidAppImageFileException ex) {\n+            \/\/ Invalid input XML\n+            throw I18N.buildConfigException(\"error.invalid-app-image\", appImageDir, srcFilePath).create();\n@@ -360,9 +226,5 @@\n-    \/**\n-     * Returns copy of AppImageFile, but with signed set to true if AppImageFile\n-     * is not marked as signed. If AppImageFile already signed it will return\n-     * instance to itself.\n-     *\/\n-    public AppImageFile copyAsSigned() {\n-        if (isSigned()) {\n-            return this;\n-        }\n+    static boolean getBooleanExtraFieldValue(String fieldId, AppImageFile appImageFile) {\n+        Objects.requireNonNull(fieldId);\n+        Objects.requireNonNull(appImageFile);\n+        return Optional.ofNullable(appImageFile.getExtra().get(fieldId)).map(Boolean::parseBoolean).orElse(false);\n+    }\n@@ -370,6 +232,2 @@\n-        \/\/ Pass null for appImageDir, it is used only to show location of\n-        \/\/ .jpackage.xml in case of error. copyAsSigned() should not produce\n-        \/\/ invalid app image file.\n-        return new AppImageFile(null, getAppVersion(),\n-                getLauncherName(), getMainClass(), getAddLaunchers(),\n-                getVersion(), getPlatform(), \"true\", String.valueOf(isAppStore()));\n+    static String getVersion() {\n+        return System.getProperty(\"java.version\");\n@@ -378,15 +236,2 @@\n-    public static Document readXml(Path appImageDir) throws IOException {\n-        try {\n-            Path path = getPathInAppImage(appImageDir);\n-\n-            DocumentBuilderFactory dbf =\n-                    DocumentBuilderFactory.newDefaultInstance();\n-            dbf.setFeature(\n-                   \"http:\/\/apache.org\/xml\/features\/nonvalidating\/load-external-dtd\",\n-                    false);\n-            DocumentBuilder b = dbf.newDocumentBuilder();\n-            return b.parse(Files.newInputStream(path));\n-        } catch (ParserConfigurationException | SAXException ex) {\n-            \/\/ Let caller sort this out\n-            throw new IOException(ex);\n-        }\n+    static String getPlatform() {\n+        return PLATFORM_LABELS.get(OperatingSystem.current());\n@@ -395,14 +240,4 @@\n-    \/**\n-     * Returns list of LauncherInfo objects configured for the application.\n-     * The first item in the returned list is main launcher.\n-     * Following items in the list are names of additional launchers.\n-     *\/\n-    static List<LauncherInfo> getLaunchers(Path appImageDir,\n-            Map<String, Object> params) {\n-        List<LauncherInfo> launchers = new ArrayList<>();\n-        if (appImageDir != null) {\n-            AppImageFile appImageInfo = AppImageFile.load(appImageDir);\n-            launchers.add(new LauncherInfo(\n-                    appImageInfo.getLauncherName(), params));\n-                    launchers.addAll(appImageInfo.getAddLaunchers());\n-            return launchers;\n+    private static final class AppImageProperties {\n+        private AppImageProperties(Map<String, String> data, Set<String> stdKeys) {\n+            this.data = data;\n+            this.stdKeys = stdKeys;\n@@ -411,6 +246,4 @@\n-        launchers.add(new LauncherInfo(params));\n-        ADD_LAUNCHERS.fetchFrom(params).stream()\n-                .map(launcherParams -> new LauncherInfo(launcherParams))\n-                .forEach(launchers::add);\n-        return launchers;\n-    }\n+        static AppImageProperties main(Document xml, XPath xPath) throws XPathExpressionException {\n+            final var data = queryProperties(xml.getDocumentElement(), xPath, MAIN_PROPERTIES_XPATH_QUERY);\n+            return new AppImageProperties(data, MAIN_ELEMENT_NAMES);\n+        }\n@@ -418,3 +251,3 @@\n-    public static String extractAppName(Path appImageDir) {\n-        return AppImageFile.load(appImageDir).getLauncherName();\n-    }\n+        static AppImageProperties launcher(Element addLauncherNode, XPath xPath) throws XPathExpressionException {\n+            final var attrData = XmlUtils.toStream(addLauncherNode.getAttributes())\n+                    .collect(toMap(Node::getNodeName, Node::getNodeValue));\n@@ -422,3 +255,1 @@\n-    public static String extractMainClass(Path appImageDir) {\n-        return AppImageFile.load(appImageDir).getMainClass();\n-    }\n+            final var extraData = queryProperties(addLauncherNode, xPath, LAUNCHER_PROPERTIES_XPATH_QUERY);\n@@ -426,6 +257,4 @@\n-    private static String xpathQueryNullable(XPath xPath, String xpathExpr,\n-            Document xml) throws XPathExpressionException {\n-        NodeList nodes = (NodeList) xPath.evaluate(xpathExpr, xml,\n-                XPathConstants.NODESET);\n-        if (nodes != null && nodes.getLength() > 0) {\n-            return nodes.item(0).getNodeValue();\n+            final Map<String, String> data = new HashMap<>(attrData);\n+            data.putAll(extraData);\n+\n+            return new AppImageProperties(data, LAUNCHER_ATTR_NAMES);\n@@ -433,2 +262,0 @@\n-        return null;\n-    }\n@@ -436,3 +263,6 @@\n-    public static String getVersion() {\n-        return System.getProperty(\"java.version\");\n-    }\n+        static List<AppImageProperties> launchers(Document xml, XPath xPath) throws XPathExpressionException {\n+            return XmlUtils.queryNodes(xml, xPath, \"\/jpackage-state\/add-launcher\")\n+                    .map(Element.class::cast).map(toFunction(e -> {\n+                        return launcher(e, xPath);\n+                    })).toList();\n+        }\n@@ -440,3 +270,3 @@\n-    public static String getPlatform() {\n-        return PLATFORM_LABELS.get(OperatingSystem.current());\n-    }\n+        String get(String name) {\n+            return find(name).orElseThrow(InvalidAppImageFileException::new);\n+        }\n@@ -444,5 +274,3 @@\n-    static class LauncherInfo {\n-        private final String name;\n-        private final boolean shortcut;\n-        private final boolean menu;\n-        private final boolean service;\n+        Optional<String> find(String name) {\n+            return Optional.ofNullable(data.get(name));\n+        }\n@@ -450,2 +278,4 @@\n-        private LauncherInfo(Map<String, Object> params) {\n-            this(APP_NAME.fetchFrom(params), params);\n+        Map<String, String> getExtra() {\n+            Map<String, String> extra = new HashMap<>(data);\n+            stdKeys.forEach(extra::remove);\n+            return extra;\n@@ -454,5 +284,7 @@\n-        private LauncherInfo(String name, Map<String, Object> params) {\n-            this.name = name;\n-            this.shortcut = SHORTCUT_HINT.fetchFrom(params);\n-            this.menu = MENU_HINT.fetchFrom(params);\n-            this.service = LAUNCHER_AS_SERVICE.fetchFrom(params);\n+        private static  Map<String, String> queryProperties(Element e, XPath xPath, String xpathExpr)\n+                throws XPathExpressionException {\n+            return XmlUtils.queryNodes(e, xPath, xpathExpr)\n+                    .map(Element.class::cast)\n+                    .collect(toMap(Node::getNodeName, selectedElement -> {\n+                        return selectedElement.getTextContent();\n+                    }, (a, b) -> b));\n@@ -461,5 +293,6 @@\n-        private LauncherInfo(Node node) {\n-            this.name = getAttribute(node, \"name\");\n-            this.shortcut = !\"false\".equals(getAttribute(node, \"shortcut\"));\n-            this.menu = !\"false\".equals(getAttribute(node, \"menu\"));\n-            this.service = !\"false\".equals(getAttribute(node, \"service\"));\n+        private static String xpathQueryForExtraProperties(Set<String> excludeNames) {\n+            final String otherElementNames = excludeNames.stream().map(name -> {\n+                return String.format(\"name() != '%s'\", name);\n+            }).collect(joining(\" and \"));\n+\n+            return String.format(\"*[(%s) and not(*)]\", otherElementNames);\n@@ -468,4 +301,45 @@\n-        private String getAttribute(Node item, String attr) {\n-            NamedNodeMap attrs = item.getAttributes();\n-            Node attrNode = attrs.getNamedItem(attr);\n-            return ((attrNode == null) ? null : attrNode.getNodeValue());\n+        private final Map<String, String> data;\n+        private final Set<String> stdKeys;\n+\n+        private static final Set<String> LAUNCHER_ATTR_NAMES = Set.of(\"name\", \"service\");\n+        private static final String LAUNCHER_PROPERTIES_XPATH_QUERY = xpathQueryForExtraProperties(LAUNCHER_ATTR_NAMES);\n+\n+        private static final Set<String> MAIN_ELEMENT_NAMES = Set.of(\"app-version\", \"main-launcher\", \"main-class\");\n+        private static final String MAIN_PROPERTIES_XPATH_QUERY;\n+\n+        static {\n+            final String nonEmptyMainElements = MAIN_ELEMENT_NAMES.stream().map(name -> {\n+                return String.format(\"\/jpackage-state\/%s[text()]\", name);\n+            }).collect(joining(\"|\"));\n+\n+            MAIN_PROPERTIES_XPATH_QUERY = String.format(\"%s|\/jpackage-state\/%s\", nonEmptyMainElements,\n+                    xpathQueryForExtraProperties(Stream.concat(MAIN_ELEMENT_NAMES.stream(),\n+                            Stream.of(\"add-launcher\")).collect(toSet())));\n+        }\n+    }\n+\n+    record LauncherInfo(String name, boolean service, Map<String, String> extra) {\n+        LauncherInfo {\n+            Objects.requireNonNull(name);\n+            Objects.requireNonNull(extra);\n+            if (name.isBlank()) {\n+                throw new IllegalArgumentException();\n+            }\n+        }\n+    }\n+\n+    private record ApplicationData(String version, String mainLauncherName, String mainLauncherMainClassName,\n+            Map<String, String> extra, List<LauncherInfo> additionalLaunchers) {\n+\n+        ApplicationData {\n+            Objects.requireNonNull(version);\n+            Objects.requireNonNull(mainLauncherName);\n+            Objects.requireNonNull(mainLauncherMainClassName);\n+            Objects.requireNonNull(extra);\n+            Objects.requireNonNull(additionalLaunchers);\n+\n+            for (final var property : List.of(version, mainLauncherName, mainLauncherMainClassName)) {\n+                if (property.isBlank()) {\n+                    throw new IllegalArgumentException();\n+                }\n+            }\n@@ -474,2 +348,2 @@\n-        public String getName() {\n-            return name;\n+        ApplicationData(Application app) {\n+            this(app, app.mainLauncher().orElseThrow());\n@@ -478,2 +352,6 @@\n-        public boolean isShortcut() {\n-            return shortcut;\n+        private ApplicationData(Application app, Launcher mainLauncher) {\n+            this(app.version(), mainLauncher.name(), mainLauncher.startupInfo().orElseThrow().qualifiedClassName(),\n+                    app.extraAppImageFileData(), app.additionalLaunchers().stream().map(launcher -> {\n+                        return new LauncherInfo(launcher.name(), launcher.isService(),\n+                                launcher.extraAppImageFileData());\n+                    }).toList());\n@@ -481,0 +359,3 @@\n+    }\n+\n+    private static class InvalidAppImageFileException extends RuntimeException {\n@@ -482,2 +363,1 @@\n-        public boolean isMenu() {\n-            return menu;\n+        InvalidAppImageFileException() {\n@@ -486,2 +366,2 @@\n-        public boolean isService() {\n-            return service;\n+        InvalidAppImageFileException(Throwable t) {\n+            super(t);\n@@ -489,0 +369,2 @@\n+\n+        private static final long serialVersionUID = 1L;\n@@ -491,0 +373,14 @@\n+    private final String appVersion;\n+    private final String launcherName;\n+    private final String mainClass;\n+    private final Map<String, String> extra;\n+    private final List<LauncherInfo> addLauncherInfos;\n+    private final String creatorVersion;\n+    private final String creatorPlatform;\n+\n+    private static final String FILENAME = \".jpackage.xml\";\n+\n+    private static final Map<OperatingSystem, String> PLATFORM_LABELS = Map.of(\n+            OperatingSystem.LINUX, \"linux\",\n+            OperatingSystem.WINDOWS, \"windows\",\n+            OperatingSystem.MACOS, \"macOS\");\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageFile.java","additions":236,"deletions":340,"binary":false,"changes":576,"status":"modified"},{"patch":"@@ -0,0 +1,197 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.I18N.buildConfigException;\n+\n+import java.nio.file.Path;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import jdk.jpackage.internal.AppImageFile.LauncherInfo;\n+import jdk.jpackage.internal.model.AppImageLayout;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLaunchers;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.LauncherStartupInfo;\n+import jdk.jpackage.internal.model.RuntimeBuilder;\n+\n+final class ApplicationBuilder {\n+\n+    Application create() throws ConfigException {\n+        Objects.requireNonNull(appImageLayout);\n+\n+        final var launchersAsList = Optional.ofNullable(launchers).map(\n+                ApplicationLaunchers::asList).orElseGet(List::of);\n+\n+        final var launcherCount = launchersAsList.size();\n+\n+        if (launcherCount != launchersAsList.stream().map(Launcher::name).distinct().count()) {\n+            throw buildConfigException(\"ERR_NoUniqueName\").create();\n+        }\n+\n+        final String effectiveName;\n+        if (name != null) {\n+            effectiveName = name;\n+        } else if (!launchersAsList.isEmpty()) {\n+            effectiveName = launchers.mainLauncher().name();\n+        } else {\n+            throw buildConfigException(\"error.no.name\").advice(\"error.no.name.advice\").create();\n+        }\n+\n+        Objects.requireNonNull(launchersAsList);\n+\n+        return new Application.Stub(\n+                effectiveName,\n+                Optional.ofNullable(description).orElse(effectiveName),\n+                Optional.ofNullable(version).orElseGet(DEFAULTS::version),\n+                Optional.ofNullable(vendor).orElseGet(DEFAULTS::vendor),\n+                Optional.ofNullable(copyright).orElseGet(DEFAULTS::copyright),\n+                Optional.ofNullable(srcDir),\n+                Optional.ofNullable(contentDirs).orElseGet(List::of),\n+                appImageLayout, Optional.ofNullable(runtimeBuilder), launchersAsList, Map.of());\n+    }\n+\n+    ApplicationBuilder runtimeBuilder(RuntimeBuilder v) {\n+        runtimeBuilder = v;\n+        return this;\n+    }\n+\n+    ApplicationBuilder initFromAppImage(AppImageFile appImageFile,\n+            Function<LauncherInfo, Launcher> mapper) {\n+        if (version == null) {\n+            version = appImageFile.getAppVersion();\n+        }\n+        if (name == null) {\n+            name = appImageFile.getAppName();\n+        }\n+        runtimeBuilder = null;\n+\n+        var mainLauncherInfo = new LauncherInfo(appImageFile.getLauncherName(), false, Map.of());\n+\n+        launchers = new ApplicationLaunchers(\n+                mapper.apply(mainLauncherInfo),\n+                appImageFile.getAddLaunchers().stream().map(mapper).toList());\n+\n+        return this;\n+    }\n+\n+    ApplicationBuilder launchers(ApplicationLaunchers v) {\n+        launchers = v;\n+        return this;\n+    }\n+\n+    Optional<ApplicationLaunchers> launchers() {\n+        return Optional.ofNullable(launchers);\n+    }\n+\n+    ApplicationBuilder appImageLayout(AppImageLayout v) {\n+        appImageLayout = v;\n+        return this;\n+    }\n+\n+    ApplicationBuilder name(String v) {\n+        name = v;\n+        return this;\n+    }\n+\n+    ApplicationBuilder description(String v) {\n+        description = v;\n+        return this;\n+    }\n+\n+    ApplicationBuilder version(String v) {\n+        version = v;\n+        return this;\n+    }\n+\n+    ApplicationBuilder vendor(String v) {\n+        vendor = v;\n+        return this;\n+    }\n+\n+    ApplicationBuilder copyright(String v) {\n+        copyright = v;\n+        return this;\n+    }\n+\n+    ApplicationBuilder srcDir(Path v) {\n+        srcDir = v;\n+        return this;\n+    }\n+\n+    ApplicationBuilder contentDirs(List<Path> v) {\n+        contentDirs = v;\n+        return this;\n+    }\n+\n+    static Launcher overrideLauncherStartupInfo(Launcher launcher, LauncherStartupInfo startupInfo) {\n+        return new Launcher.Stub(launcher.name(), Optional.of(startupInfo),\n+                launcher.fileAssociations(), launcher.isService(), launcher.description(),\n+                launcher.icon(), launcher.defaultIconResourceName(), launcher.extraAppImageFileData());\n+    }\n+\n+    record MainLauncherStartupInfo(String qualifiedClassName) implements LauncherStartupInfo {\n+        @Override\n+        public List<String> javaOptions() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        @Override\n+        public List<String> defaultParameters() {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        @Override\n+        public List<Path> classPath() {\n+            throw new UnsupportedOperationException();\n+        }\n+    }\n+\n+    private record Defaults(String version, String vendor) {\n+        String copyright() {\n+            return I18N.format(\"param.copyright.default\", new Date());\n+        }\n+    }\n+\n+    private String name;\n+    private String description;\n+    private String version;\n+    private String vendor;\n+    private String copyright;\n+    private Path srcDir;\n+    private List<Path> contentDirs;\n+    private AppImageLayout appImageLayout;\n+    private RuntimeBuilder runtimeBuilder;\n+    private ApplicationLaunchers launchers;\n+\n+    private static final Defaults DEFAULTS = new Defaults(\n+            \"1.0\",\n+            I18N.getString(\"param.vendor.default\"));\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ApplicationBuilder.java","additions":197,"deletions":0,"binary":false,"changes":197,"status":"added"},{"patch":"@@ -0,0 +1,153 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.util.function.ThrowingConsumer.toConsumer;\n+import static jdk.jpackage.internal.util.function.ThrowingSupplier.toSupplier;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.LinkOption;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n+import java.util.stream.Stream;\n+import jdk.jpackage.internal.PackagingPipeline.ApplicationImageTaskAction;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.CustomLauncherIcon;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.util.FileUtils;\n+import jdk.jpackage.internal.util.PathUtils;\n+\n+\n+final class ApplicationImageUtils {\n+\n+    static Optional<OverridableResource> createLauncherIconResource(Application app,\n+            Launcher launcher,\n+            Function<String, OverridableResource> resourceSupplier) {\n+        final String defaultIconName = launcher.defaultIconResourceName();\n+        final String resourcePublicName = launcher.executableName() + PathUtils.getSuffix(Path.of(defaultIconName));\n+\n+        if (!launcher.hasIcon()) {\n+            return Optional.empty();\n+        }\n+\n+        OverridableResource resource = resourceSupplier.apply(defaultIconName)\n+                .setCategory(\"icon\")\n+                .setPublicName(resourcePublicName);\n+\n+        launcher.icon().flatMap(CustomLauncherIcon::fromLauncherIcon).map(CustomLauncherIcon::path).ifPresent(resource::setExternal);\n+\n+        if (launcher.hasDefaultIcon() && app.mainLauncher().orElseThrow() != launcher) {\n+            \/\/ No icon explicitly configured for this launcher.\n+            \/\/ Dry-run resource creation to figure out its source.\n+            final Path nullPath = null;\n+            if (toSupplier(() -> resource.saveToFile(nullPath)).get() != OverridableResource.Source.ResourceDir) {\n+                \/\/ No icon in resource dir for this launcher, inherit icon\n+                \/\/ configured for the main launcher.\n+                return createLauncherIconResource(\n+                        app, app.mainLauncher().orElseThrow(),\n+                        resourceSupplier\n+                ).map(r -> r.setLogPublicName(resourcePublicName));\n+            }\n+        }\n+\n+        return Optional.of(resource);\n+    }\n+\n+    static ApplicationImageTaskAction<Application, ApplicationLayout> createWriteRuntimeAction() {\n+        return env -> {\n+            env.app().runtimeBuilder().orElseThrow().createRuntime(env.resolvedLayout());\n+        };\n+    }\n+\n+    static ApplicationImageTaskAction<Application, ApplicationLayout> createWriteAppImageFileAction() {\n+        return env -> {\n+            new AppImageFile(env.app()).save(env.resolvedLayout());\n+        };\n+    }\n+\n+    static ApplicationImageTaskAction<Application, ApplicationLayout> createCopyContentAction(Supplier<List<Path>> excludeCopyDirs) {\n+        return env -> {\n+            var excludeCandidates = Stream.concat(\n+                    excludeCopyDirs.get().stream(),\n+                    Stream.of(env.env().buildRoot(), env.env().appImageDir())\n+            ).map(Path::toAbsolutePath).toList();\n+\n+            env.app().srcDir().ifPresent(toConsumer(srcDir -> {\n+                copyRecursive(srcDir, env.resolvedLayout().appDirectory(), excludeCandidates);\n+            }));\n+\n+            for (var srcDir : env.app().contentDirs()) {\n+                copyRecursive(srcDir,\n+                        env.resolvedLayout().contentDirectory().resolve(srcDir.getFileName()),\n+                        excludeCandidates);\n+            }\n+        };\n+    }\n+\n+    static ApplicationImageTaskAction<Application, ApplicationLayout> createWriteLaunchersAction() {\n+        return env -> {\n+            for (var launcher : env.app().launchers()) {\n+                \/\/ Create corresponding .cfg file\n+                new CfgFile(env.app(), launcher).create(env.resolvedLayout());\n+\n+                \/\/ Copy executable to launchers folder\n+                Path executableFile = env.resolvedLayout().launchersDirectory().resolve(\n+                        launcher.executableNameWithSuffix());\n+                try (var in = launcher.executableResource()) {\n+                    Files.createDirectories(executableFile.getParent());\n+                    Files.copy(in, executableFile);\n+                }\n+\n+                \/\/ Make it executable for everyone. It is essential to make the launcher executable for others\n+                \/\/ on macOS. Otherwise, launchers in installed DMG or PKG packages will be\n+                \/\/ unavailable for anyone but the user who installed them.\n+                executableFile.toFile().setExecutable(true, false);\n+            }\n+        };\n+    }\n+\n+    private static void copyRecursive(Path srcDir, Path dstDir, List<Path> excludeDirs) throws IOException {\n+        srcDir = srcDir.toAbsolutePath();\n+\n+        List<Path> excludes = new ArrayList<>();\n+\n+        for (var path : excludeDirs) {\n+            if (Files.isDirectory(path)) {\n+                if (path.startsWith(srcDir) && !Files.isSameFile(path, srcDir)) {\n+                    excludes.add(path);\n+                }\n+            }\n+        }\n+\n+        FileUtils.copyRecursive(srcDir, dstDir.toAbsolutePath(), excludes, LinkOption.NOFOLLOW_LINKS);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ApplicationImageUtils.java","additions":153,"deletions":0,"binary":false,"changes":153,"status":"added"},{"patch":"@@ -1,240 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.jpackage.internal;\n-\n-import jdk.internal.util.OperatingSystem;\n-import jdk.jpackage.internal.util.PathGroup;\n-import java.io.IOException;\n-import java.nio.file.Path;\n-import java.util.List;\n-import java.util.Map;\n-\n-\n-\/**\n- * Application directory layout.\n- *\/\n-public final class ApplicationLayout {\n-    enum PathRole {\n-        \/**\n-         * Java run-time directory.\n-         *\/\n-        RUNTIME,\n-\n-        \/**\n-         * Java run-time home directory.\n-         *\/\n-        RUNTIME_HOME,\n-\n-        \/**\n-         * Application data directory.\n-         *\/\n-        APP,\n-\n-        \/**\n-         * Directory with application launchers.\n-         *\/\n-        LAUNCHERS,\n-\n-        \/**\n-         * Directory for files for desktop integration.\n-         *\/\n-        DESKTOP,\n-\n-        \/**\n-         * Directory with application Java modules.\n-         *\/\n-        MODULES,\n-\n-        \/**\n-         * Linux app launcher shared library.\n-         *\/\n-        LINUX_APPLAUNCHER_LIB,\n-\n-        \/**\n-         * Location of additional application content\n-         *\/\n-        CONTENT\n-    }\n-\n-    ApplicationLayout(Map<Object, Path> paths) {\n-        data = new PathGroup(paths);\n-    }\n-\n-    private ApplicationLayout(PathGroup data) {\n-        this.data = data;\n-    }\n-\n-    public PathGroup pathGroup() {\n-        return data;\n-    }\n-\n-    public ApplicationLayout resolveAt(Path root) {\n-        return new ApplicationLayout(pathGroup().resolveAt(root));\n-    }\n-\n-    public List<Path> roots() {\n-        return data.roots();\n-    }\n-\n-    public long sizeInBytes() throws IOException {\n-        return data.sizeInBytes();\n-    }\n-\n-    public void copy(ApplicationLayout other) throws IOException {\n-        data.copy(other.data);\n-    }\n-\n-    public void move(ApplicationLayout other) throws IOException {\n-        data.move(other.data);\n-    }\n-\n-    public void transform(ApplicationLayout other, PathGroup.TransformHandler handler) throws IOException {\n-        data.transform(other.data, handler);\n-    }\n-\n-    \/**\n-     * Path to launchers directory.\n-     *\/\n-    public Path launchersDirectory() {\n-        return pathGroup().getPath(PathRole.LAUNCHERS);\n-    }\n-\n-    \/**\n-     * Path to application data directory.\n-     *\/\n-    public Path appDirectory() {\n-        return pathGroup().getPath(PathRole.APP);\n-    }\n-\n-    \/**\n-     * Path to Java run-time directory.\n-     *\/\n-    public Path runtimeDirectory() {\n-        return pathGroup().getPath(PathRole.RUNTIME);\n-    }\n-\n-    \/**\n-     * Path to Java run-time home directory.\n-     *\/\n-    public Path runtimeHomeDirectory() {\n-        return pathGroup().getPath(PathRole.RUNTIME_HOME);\n-    }\n-\n-    \/**\n-     * Path to application mods directory.\n-     *\/\n-    public Path appModsDirectory() {\n-        return pathGroup().getPath(PathRole.MODULES);\n-    }\n-\n-    \/**\n-     * Path to directory with application's desktop integration files.\n-     *\/\n-    public Path destktopIntegrationDirectory() {\n-        return pathGroup().getPath(PathRole.DESKTOP);\n-    }\n-\n-    \/**\n-     * Path to directory with additional application content.\n-     *\/\n-    public Path contentDirectory() {\n-        return pathGroup().getPath(PathRole.CONTENT);\n-    }\n-\n-    static ApplicationLayout linuxAppImage() {\n-        return new ApplicationLayout(Map.of(\n-                PathRole.LAUNCHERS, Path.of(\"bin\"),\n-                PathRole.APP, Path.of(\"lib\/app\"),\n-                PathRole.RUNTIME, Path.of(\"lib\/runtime\"),\n-                PathRole.RUNTIME_HOME, Path.of(\"lib\/runtime\"),\n-                PathRole.DESKTOP, Path.of(\"lib\"),\n-                PathRole.MODULES, Path.of(\"lib\/app\/mods\"),\n-                PathRole.LINUX_APPLAUNCHER_LIB, Path.of(\"lib\/libapplauncher.so\"),\n-                PathRole.CONTENT, Path.of(\"lib\")\n-        ));\n-    }\n-\n-    static ApplicationLayout windowsAppImage() {\n-        return new ApplicationLayout(Map.of(\n-                PathRole.LAUNCHERS, Path.of(\"\"),\n-                PathRole.APP, Path.of(\"app\"),\n-                PathRole.RUNTIME, Path.of(\"runtime\"),\n-                PathRole.RUNTIME_HOME, Path.of(\"runtime\"),\n-                PathRole.DESKTOP, Path.of(\"\"),\n-                PathRole.MODULES, Path.of(\"app\/mods\"),\n-                PathRole.CONTENT, Path.of(\"\")\n-        ));\n-    }\n-\n-    static ApplicationLayout macAppImage() {\n-        return new ApplicationLayout(Map.of(\n-                PathRole.LAUNCHERS, Path.of(\"Contents\/MacOS\"),\n-                PathRole.APP, Path.of(\"Contents\/app\"),\n-                PathRole.RUNTIME, Path.of(\"Contents\/runtime\"),\n-                PathRole.RUNTIME_HOME, Path.of(\"Contents\/runtime\/Contents\/Home\"),\n-                PathRole.DESKTOP, Path.of(\"Contents\/Resources\"),\n-                PathRole.MODULES, Path.of(\"Contents\/app\/mods\"),\n-                PathRole.CONTENT, Path.of(\"Contents\")\n-        ));\n-    }\n-\n-    public static ApplicationLayout platformAppImage() {\n-        if (OperatingSystem.isWindows()) {\n-            return windowsAppImage();\n-        }\n-\n-        if (OperatingSystem.isLinux()) {\n-            return linuxAppImage();\n-        }\n-\n-        if (OperatingSystem.isMacOS()) {\n-            return macAppImage();\n-        }\n-\n-        throw new IllegalArgumentException(\"Unknown platform: \" + OperatingSystem.current());\n-    }\n-\n-    public static ApplicationLayout javaRuntime() {\n-        return new ApplicationLayout(Map.of(PathRole.RUNTIME, Path.of(\"\")));\n-    }\n-\n-    public static ApplicationLayout linuxUsrTreePackageImage(Path prefix,\n-            String packageName) {\n-        final Path lib = prefix.resolve(Path.of(\"lib\", packageName));\n-        return new ApplicationLayout(Map.of(\n-                PathRole.LAUNCHERS, prefix.resolve(\"bin\"),\n-                PathRole.APP, lib.resolve(\"app\"),\n-                PathRole.RUNTIME, lib.resolve(\"runtime\"),\n-                PathRole.RUNTIME_HOME, lib.resolve(\"runtime\"),\n-                PathRole.DESKTOP, lib,\n-                PathRole.MODULES, lib.resolve(\"app\/mods\"),\n-                PathRole.LINUX_APPLAUNCHER_LIB, lib.resolve(\n-                        \"lib\/libapplauncher.so\"),\n-                PathRole.CONTENT, lib\n-        ));\n-    }\n-\n-    private final PathGroup data;\n-}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ApplicationLayout.java","additions":0,"deletions":240,"binary":false,"changes":240,"status":"deleted"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import jdk.internal.util.OperatingSystem;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+\n+\n+final class ApplicationLayoutUtils {\n+\n+    public static final ApplicationLayout PLATFORM_APPLICATION_LAYOUT;\n+\n+    private static final ApplicationLayout WIN_APPLICATION_LAYOUT = ApplicationLayout.build()\n+            .setAll(\"\")\n+            .appDirectory(\"app\")\n+            .runtimeDirectory(\"runtime\")\n+            .appModsDirectory(Path.of(\"app\", \"mods\"))\n+            .create();\n+\n+    private static final ApplicationLayout MAC_APPLICATION_LAYOUT = ApplicationLayout.build()\n+            .launchersDirectory(\"Contents\/MacOS\")\n+            .appDirectory(\"Contents\/app\")\n+            .runtimeDirectory(\"Contents\/runtime\/Contents\/Home\")\n+            .desktopIntegrationDirectory(\"Contents\/Resources\")\n+            .appModsDirectory(\"Contents\/app\/mods\")\n+            .contentDirectory(\"Contents\")\n+            .create();\n+\n+    private static final ApplicationLayout LINUX_APPLICATION_LAYOUT = ApplicationLayout.build()\n+            .launchersDirectory(\"bin\")\n+            .appDirectory(\"lib\/app\")\n+            .runtimeDirectory(\"lib\/runtime\")\n+            .desktopIntegrationDirectory(\"lib\")\n+            .appModsDirectory(\"lib\/app\/mods\")\n+            .contentDirectory(\"lib\")\n+            .create();\n+\n+    static {\n+        switch (OperatingSystem.current()) {\n+            case WINDOWS -> PLATFORM_APPLICATION_LAYOUT = WIN_APPLICATION_LAYOUT;\n+            case MACOS -> PLATFORM_APPLICATION_LAYOUT = MAC_APPLICATION_LAYOUT;\n+            case LINUX -> PLATFORM_APPLICATION_LAYOUT = LINUX_APPLICATION_LAYOUT;\n+            default -> {\n+                throw new UnsupportedOperationException();\n+            }\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ApplicationLayoutUtils.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -34,1 +34,0 @@\n-import java.nio.file.Paths;\n@@ -141,1 +140,3 @@\n-            context().deployParams.setTargetFormat(popArg());\n+            var type = popArg();\n+            context().deployParams.setTargetFormat(type);\n+            setOptionValue(\"type\", type);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Arguments.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+interface BuildEnv {\n+\n+    Path buildRoot();\n+\n+    boolean verbose();\n+\n+    Optional<Path> resourceDir();\n+\n+    \/**\n+     * Returns path to application image directory.\n+     *\n+     * The return value is supposed to be used as a parameter for\n+     * ApplicationLayout#resolveAt function.\n+     *\/\n+    default Path appImageDir() {\n+        return buildRoot().resolve(\"image\");\n+    }\n+\n+    default Path configDir() {\n+        return buildRoot().resolve(\"config\");\n+    }\n+\n+    OverridableResource createResource(String defaultName);\n+\n+    static BuildEnv withAppImageDir(BuildEnv env, Path appImageDir) {\n+        return ((Internal.DefaultBuildEnv)env).copyWithAppImageDir(appImageDir);\n+    }\n+\n+    static BuildEnv create(Path buildRoot, Optional<Path> resourceDir, boolean verbose, Class<?> resourceLocator) {\n+        return new Internal.DefaultBuildEnv(buildRoot, resourceDir, verbose, resourceLocator, Optional.empty());\n+    }\n+\n+    static final class Internal {\n+        private static record DefaultBuildEnv(Path buildRoot, Optional<Path> resourceDir,\n+                boolean verbose, Class<?> resourceLocator, Optional<Path> optAppImageDir) implements BuildEnv {\n+\n+            DefaultBuildEnv {\n+                Objects.requireNonNull(buildRoot);\n+                Objects.requireNonNull(resourceDir);\n+                Objects.requireNonNull(resourceLocator);\n+                Objects.requireNonNull(optAppImageDir);\n+            }\n+\n+            DefaultBuildEnv copyWithAppImageDir(Path appImageDir) {\n+                return new DefaultBuildEnv(buildRoot, resourceDir, verbose, resourceLocator, Optional.of(appImageDir));\n+            }\n+\n+            @Override\n+            public Path appImageDir() {\n+                return optAppImageDir.orElseGet(BuildEnv.super::appImageDir);\n+            }\n+\n+            @Override\n+            public OverridableResource createResource(String defaultName) {\n+                final OverridableResource resource;\n+                if (defaultName != null) {\n+                    resource = new OverridableResource(defaultName, resourceLocator);\n+                } else {\n+                    resource = new OverridableResource();\n+                }\n+                return resourceDir.map(resource::setResourceDir).orElse(resource);\n+            }\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BuildEnv.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n+\n+final class BuildEnvBuilder {\n+\n+    BuildEnvBuilder(Path root) {\n+        this.root = Objects.requireNonNull(root);\n+    }\n+\n+    BuildEnv create() throws ConfigException {\n+        Objects.requireNonNull(appImageDir);\n+\n+        var exceptionBuilder = I18N.buildConfigException(\"ERR_BuildRootInvalid\", root);\n+        if (Files.isDirectory(root)) {\n+            try (var rootDirContents = Files.list(root)) {\n+                if (rootDirContents.findAny().isPresent()) {\n+                    \/\/ The root directory is not empty.\n+                    throw exceptionBuilder.create();\n+                }\n+            } catch (IOException ioe) {\n+                throw exceptionBuilder.cause(ioe).create();\n+            }\n+        } else if (Files.exists(root)) {\n+            \/\/ The root is not a directory.\n+            throw exceptionBuilder.create();\n+        }\n+\n+        return BuildEnv.withAppImageDir(BuildEnv.create(root, Optional.ofNullable(resourceDir),\n+                verbose, ResourceLocator.class), appImageDir);\n+    }\n+\n+    BuildEnvBuilder verbose(boolean v) {\n+        verbose = v;\n+        return this;\n+    }\n+\n+    BuildEnvBuilder resourceDir(Path v) {\n+        resourceDir = v;\n+        return this;\n+    }\n+\n+    BuildEnvBuilder appImageDir(Path v) {\n+        appImageDir = v;\n+        return this;\n+    }\n+\n+    BuildEnvBuilder appImageDirFor(Application app) {\n+        appImageDir = defaultAppImageDir(root).resolve(app.appImageDirName());\n+        return this;\n+    }\n+\n+    BuildEnvBuilder appImageDirForPackage() {\n+        appImageDir = defaultAppImageDir(root);\n+        return this;\n+    }\n+\n+    private static Path defaultAppImageDir(Path root) {\n+        return root.resolve(\"image\");\n+    }\n+\n+    private Path appImageDir;\n+    private Path resourceDir;\n+    private boolean verbose;\n+\n+    private final Path root;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BuildEnvBuilder.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERBOSE;\n+\n+import java.util.Map;\n+import jdk.jpackage.internal.model.ConfigException;\n+\n+final class BuildEnvFromParams {\n+\n+    static BuildEnv create(Map<String, ? super Object> params) throws ConfigException {\n+\n+        final var builder = new BuildEnvBuilder(TEMP_ROOT.fetchFrom(params));\n+\n+        RESOURCE_DIR.copyInto(params, builder::resourceDir);\n+        VERBOSE.copyInto(params, builder::verbose);\n+\n+        final var app = FromParams.APPLICATION.findIn(params).orElseThrow();\n+\n+        final var pkg = FromParams.getCurrentPackage(params);\n+\n+        if (app.isRuntime()) {\n+            builder.appImageDir(PREDEFINED_RUNTIME_IMAGE.fetchFrom(params));\n+        } else if (StandardBundlerParam.hasPredefinedAppImage(params)) {\n+            builder.appImageDir(StandardBundlerParam.getPredefinedAppImage(params));\n+        } else if (pkg.isPresent()) {\n+            builder.appImageDirForPackage();\n+        } else {\n+            builder.appImageDirFor(app);\n+        }\n+\n+        return builder.create();\n+    }\n+\n+    static final BundlerParamInfo<BuildEnv> BUILD_ENV = BundlerParamInfo.createBundlerParam(\n+            BuildEnv.class, BuildEnvFromParams::create);\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BuildEnvFromParams.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -28,0 +28,1 @@\n+import java.nio.file.Path;\n@@ -29,0 +30,2 @@\n+import java.util.Objects;\n+import java.util.Optional;\n@@ -30,0 +33,1 @@\n+import java.util.function.Consumer;\n@@ -31,0 +35,1 @@\n+import jdk.jpackage.internal.util.function.ThrowingFunction;\n@@ -36,0 +41,9 @@\n+ *\n+ * @param id The command line and hashmap name of the parameter\n+ *\n+ * @param valueType Type of the parameter\n+ *\n+ * @param defaultValueFunction If the value is not set, and no fallback value is found, the\n+ * parameter uses the value returned by the producer.\n+ *\n+ * @param stringConverter An optional string converter for command line arguments.\n@@ -37,1 +51,3 @@\n-class BundlerParamInfo<T> {\n+record BundlerParamInfo<T>(String id, Class<T> valueType,\n+        Function<Map<String, ? super Object>, T> defaultValueFunction,\n+        BiFunction<String, Map<String, ? super Object>, T> stringConverter) {\n@@ -39,4 +55,4 @@\n-    \/**\n-     * The command line and hashmap name of the parameter\n-     *\/\n-    String id;\n+    BundlerParamInfo {\n+        Objects.requireNonNull(id);\n+        Objects.requireNonNull(valueType);\n+    }\n@@ -44,4 +60,3 @@\n-    \/**\n-     * Type of the parameter\n-     *\/\n-    Class<T> valueType;\n+    static BundlerParamInfo<String> createStringBundlerParam(String id) {\n+        return new BundlerParamInfo<>(id, String.class, null, null);\n+    }\n@@ -49,5 +64,3 @@\n-    \/**\n-     * If the value is not set, and no fallback value is found,\n-     * the parameter uses the value returned by the producer.\n-     *\/\n-    Function<Map<String, ? super Object>, T> defaultValueFunction;\n+    static BundlerParamInfo<Boolean> createBooleanBundlerParam(String id) {\n+        return new BundlerParamInfo<>(id, Boolean.class, null, BundlerParamInfo::toBoolean);\n+    }\n@@ -55,4 +68,26 @@\n-    \/**\n-     * An optional string converter for command line arguments.\n-     *\/\n-    BiFunction<String, Map<String, ? super Object>, T> stringConverter;\n+    static BundlerParamInfo<Path> createPathBundlerParam(String id) {\n+        return new BundlerParamInfo<>(id, Path.class, null, BundlerParamInfo::toPath);\n+    }\n+\n+    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    static <U> BundlerParamInfo<U> createBundlerParam(String id, Class<? super U> valueType,\n+            ThrowingFunction<Map<String, ? super Object>, U> valueCtor) {\n+        return new BundlerParamInfo(id, valueType, ThrowingFunction.toFunction(valueCtor), null);\n+    }\n+\n+    static <U> BundlerParamInfo<U> createBundlerParam(Class<? super U> valueType,\n+            ThrowingFunction<Map<String, ? super Object>, U> valueCtor) {\n+        return createBundlerParam(valueType.getName(), valueType, valueCtor);\n+    }\n+\n+    static boolean toBoolean(String value, Map<String, ? super Object> params) {\n+        if (value == null || \"null\".equalsIgnoreCase(value)) {\n+            return false;\n+        } else {\n+            return Boolean.valueOf(value);\n+        }\n+    }\n+\n+    static Path toPath(String value, Map<String, ? super Object> params) {\n+        return Path.of(value);\n+    }\n@@ -69,2 +104,1 @@\n-     * Returns true if value was not provided on command line for this\n-     * parameter.\n+     * Returns true if value was not provided on command line for this parameter.\n@@ -92,2 +126,1 @@\n-    BiFunction<String, Map<String, ? super Object>,T>\n-            getStringConverter() {\n+    BiFunction<String, Map<String, ? super Object>, T> getStringConverter() {\n@@ -106,1 +139,1 @@\n-            return getStringConverter().apply((String)o, params);\n+            return getStringConverter().apply((String) o, params);\n@@ -124,1 +157,1 @@\n-            T result =  getDefaultValueFunction().apply(params);\n+            T result = getDefaultValueFunction().apply(params);\n@@ -134,0 +167,12 @@\n+\n+    Optional<T> findIn(Map<String, ? super Object> params) {\n+        if (params.containsKey(getID())) {\n+            return Optional.of(fetchFrom(params, true));\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    void copyInto(Map<String, ? super Object> params, Consumer<T> consumer) {\n+        findIn(params).ifPresent(consumer);\n+    }\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BundlerParamInfo.java","additions":69,"deletions":24,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.File;\n@@ -34,0 +33,1 @@\n+import java.util.Optional;\n@@ -35,5 +35,7 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.JAVA_OPTIONS;\n-import static jdk.jpackage.internal.StandardBundlerParam.ARGUMENTS;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.LauncherJarStartupInfo;\n+import jdk.jpackage.internal.model.LauncherModularStartupInfo;\n+import jdk.jpackage.internal.model.LauncherStartupInfo;\n+\n@@ -45,11 +47,4 @@\n-    CfgFile() {\n-        appLayout = ApplicationLayout.platformAppImage();\n-    }\n-\n-    CfgFile initFromParams(Map<String, ? super Object> params) {\n-        launcherData = LAUNCHER_DATA.fetchFrom(params);\n-        launcherName = APP_NAME.fetchFrom(params);\n-        javaOptions = JAVA_OPTIONS.fetchFrom(params);\n-        arguments = ARGUMENTS.fetchFrom(params);\n-        version = VERSION.fetchFrom(params);\n-        return this;\n+    CfgFile(Application app, Launcher launcher) {\n+        startupInfo = launcher.startupInfo().orElseThrow();\n+        outputFileName = launcher.executableName() + \".cfg\";\n+        version = app.version();\n@@ -58,1 +53,1 @@\n-    void create(Path appImage) throws IOException {\n+    void create(ApplicationLayout appLayout) throws IOException {\n@@ -61,1 +56,1 @@\n-        ApplicationLayout appCfgLayout = createAppCfgLayout();\n+        final var refs = new Referencies(appLayout);\n@@ -65,13 +60,10 @@\n-        if (launcherData.isModular()) {\n-            content.add(Map.entry(\"app.mainmodule\", launcherData.moduleName()\n-                    + \"\/\" + launcherData.qualifiedClassName()));\n-        } else {\n-            if (launcherData.mainJarName() != null) {\n-                Path mainJarPath = appCfgLayout.appDirectory().resolve(\n-                        launcherData.mainJarName());\n-\n-                if (launcherData.isClassNameFromMainJar()) {\n-                    content.add(Map.entry(\"app.mainjar\", mainJarPath));\n-                } else {\n-                    content.add(Map.entry(\"app.classpath\", mainJarPath));\n-                }\n+        if (startupInfo instanceof LauncherModularStartupInfo modularStartupInfo) {\n+            content.add(Map.entry(\"app.mainmodule\", modularStartupInfo.moduleName()\n+                    + \"\/\" + startupInfo.qualifiedClassName()));\n+        } else if (startupInfo instanceof LauncherJarStartupInfo jarStartupInfo) {\n+            Path mainJarPath = refs.appDirectory().resolve(jarStartupInfo.jarPath());\n+\n+            if (jarStartupInfo.isJarWithMainClass()) {\n+                content.add(Map.entry(\"app.mainjar\", mainJarPath));\n+            } else {\n+                content.add(Map.entry(\"app.classpath\", mainJarPath));\n@@ -80,3 +72,2 @@\n-            if (!launcherData.isClassNameFromMainJar()) {\n-                content.add(Map.entry(\"app.mainclass\",\n-                        launcherData.qualifiedClassName()));\n+            if (!jarStartupInfo.isJarWithMainClass()) {\n+                content.add(Map.entry(\"app.mainclass\", startupInfo.qualifiedClassName()));\n@@ -84,0 +75,2 @@\n+        } else {\n+            throw new UnsupportedOperationException();\n@@ -86,1 +79,1 @@\n-        for (var value : launcherData.classPath()) {\n+        for (var value : Optional.ofNullable(startupInfo.classPath()).orElseGet(List::of)) {\n@@ -88,1 +81,1 @@\n-                    appCfgLayout.appDirectory().resolve(value).toString()));\n+                    refs.appDirectory().resolve(value).toString()));\n@@ -91,3 +84,0 @@\n-        ApplicationLayout appImagelayout = appLayout.resolveAt(appImage);\n-        Path modsDir = appImagelayout.appModsDirectory();\n-\n@@ -101,1 +91,1 @@\n-        for (var value : javaOptions) {\n+        for (var value : Optional.ofNullable(startupInfo.javaOptions()).orElseGet(List::of)) {\n@@ -106,1 +96,1 @@\n-        if (Files.isDirectory(modsDir)) {\n+        if (Files.isDirectory(appLayout.appModsDirectory())) {\n@@ -108,2 +98,1 @@\n-            content.add(Map.entry(\"java-options\",\n-                    appCfgLayout.appModsDirectory()));\n+            content.add(Map.entry(\"java-options\", refs.appModsDirectory()));\n@@ -112,0 +101,1 @@\n+        var arguments = Optional.ofNullable(startupInfo.defaultParameters()).orElseGet(List::of);\n@@ -119,2 +109,2 @@\n-        Path cfgFile = appImagelayout.appDirectory().resolve(launcherName + \".cfg\");\n-        Files.createDirectories(IOUtils.getParent(cfgFile));\n+        Path cfgFile = appLayout.appDirectory().resolve(outputFileName);\n+        Files.createDirectories(cfgFile.getParent());\n@@ -136,7 +126,15 @@\n-    private ApplicationLayout createAppCfgLayout() {\n-        ApplicationLayout appCfgLayout = appLayout.resolveAt(Path.of(\"$ROOTDIR\"));\n-        appCfgLayout.pathGroup().setPath(ApplicationLayout.PathRole.APP,\n-                Path.of(\"$APPDIR\"));\n-        appCfgLayout.pathGroup().setPath(ApplicationLayout.PathRole.MODULES,\n-                appCfgLayout.appDirectory().resolve(appCfgLayout.appModsDirectory().getFileName()));\n-        return appCfgLayout;\n+    private record Referencies(Path appModsDirectory) {\n+\n+        Referencies {\n+            if (!appModsDirectory.startsWith(appDirectory())) {\n+                throw new IllegalArgumentException();\n+            }\n+        }\n+\n+        Referencies(ApplicationLayout appLayout) {\n+            this(Path.of(\"$APPDIR\").resolve(appLayout.appModsDirectory().getFileName()));\n+        }\n+\n+        Path appDirectory() {\n+            return Path.of(\"$APPDIR\");\n+        }\n@@ -145,6 +143,3 @@\n-    private String launcherName;\n-    private String version;\n-    private LauncherData launcherData;\n-    List<String> arguments;\n-    List<String> javaOptions;\n-    private final ApplicationLayout appLayout;\n+    private final LauncherStartupInfo startupInfo;\n+    private final String version;\n+    private final String outputFileName;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CfgFile.java","additions":55,"deletions":60,"binary":false,"changes":115,"status":"modified"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.Method;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+final class CompositeProxyTunnel implements CompositeProxy.InvokeTunnel {\n+\n+    @Override\n+    public Object invoke(Object obj, Method method, Object[] args) throws Throwable {\n+        return method.invoke(obj, args);\n+    }\n+\n+    @Override\n+    public Object invokeDefault(Object proxy, Method method, Object[] args) throws Throwable {\n+        return InvocationHandler.invokeDefault(proxy, method, args);\n+    }\n+\n+    static final CompositeProxyTunnel INSTANCE = new CompositeProxyTunnel();\n+\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CompositeProxyTunnel.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -1,108 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.jpackage.internal;\n-\n-import java.nio.file.Path;\n-import java.text.MessageFormat;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Optional;\n-import java.util.stream.Collectors;\n-import jdk.jpackage.internal.model.ConfigException;\n-\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n-import static jdk.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n-import static jdk.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n-import static jdk.jpackage.internal.StandardBundlerParam.FA_ICON;\n-import static jdk.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n-\n-final class FileAssociation {\n-    void verify() {\n-        if (extensions.isEmpty()) {\n-            Log.error(I18N.getString(\n-                    \"message.creating-association-with-null-extension\"));\n-        }\n-    }\n-\n-    static void verify(List<FileAssociation> associations) throws ConfigException {\n-        \/\/ only one mime type per association, at least one file extension\n-        int assocIdx = 0;\n-        for (var assoc : associations) {\n-            ++assocIdx;\n-            if (assoc.mimeTypes.isEmpty()) {\n-                String msgKey = \"error.no-content-types-for-file-association\";\n-                throw new ConfigException(\n-                        MessageFormat.format(I18N.getString(msgKey), assocIdx),\n-                        MessageFormat.format(I18N.getString(msgKey + \".advice\"), assocIdx));\n-            }\n-\n-            if (assoc.mimeTypes.size() > 1) {\n-                String msgKey = \"error.too-many-content-types-for-file-association\";\n-                throw new ConfigException(\n-                        MessageFormat.format(I18N.getString(msgKey), assocIdx),\n-                        MessageFormat.format(I18N.getString(msgKey + \".advice\"), assocIdx));\n-            }\n-\n-            assoc.verify();\n-        }\n-    }\n-\n-    static List<FileAssociation> fetchFrom(Map<String, ? super Object> params) {\n-        String launcherName = APP_NAME.fetchFrom(params);\n-\n-        return FILE_ASSOCIATIONS.fetchFrom(params).stream().filter(\n-                Objects::nonNull).map(fa -> {\n-                    FileAssociation assoc = new FileAssociation();\n-\n-                    assoc.launcherPath = Path.of(launcherName);\n-                    assoc.description = Optional.ofNullable(\n-                            FA_DESCRIPTION.fetchFrom(fa))\n-                            .orElse(launcherName + \" association\");\n-                    assoc.extensions = Optional.ofNullable(\n-                            FA_EXTENSIONS.fetchFrom(fa))\n-                            .orElse(Collections.emptyList());\n-                    assoc.mimeTypes = Optional.ofNullable(\n-                            FA_CONTENT_TYPE.fetchFrom(fa))\n-                            .orElse(Collections.emptyList());\n-\n-                    Path icon = FA_ICON.fetchFrom(fa);\n-                    if (icon != null) {\n-                        assoc.iconPath = icon;\n-                    }\n-\n-                    return assoc;\n-                }).toList();\n-    }\n-\n-    Path launcherPath;\n-    Path iconPath;\n-    List<String> mimeTypes;\n-    List<String> extensions;\n-    String description;\n-}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/FileAssociation.java","additions":0,"deletions":108,"binary":false,"changes":108,"status":"deleted"},{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import java.util.function.UnaryOperator;\n+import java.util.stream.Stream;\n+import jdk.jpackage.internal.model.FileAssociation;\n+import jdk.jpackage.internal.util.CollectionUtils;\n+\n+final record FileAssociationGroup(List<FileAssociation> items) {\n+\n+    FileAssociationGroup {\n+        Objects.requireNonNull(items);\n+    }\n+\n+    boolean isEmpty() {\n+        return items.isEmpty();\n+    }\n+\n+    static Stream<FileAssociation> flatMap(Stream<FileAssociationGroup> groups) {\n+        return groups.map(FileAssociationGroup::items).flatMap(List::stream);\n+    }\n+\n+    static UnaryOperator<FileAssociationGroup> map(UnaryOperator<FileAssociation> mapper) {\n+        return group -> {\n+            return new FileAssociationGroup(group.items.stream().map(mapper).filter(Objects::nonNull).toList());\n+        };\n+    }\n+\n+    static UnaryOperator<FileAssociationGroup> filter(Predicate<FileAssociation> filter) {\n+        return group -> {\n+            return new FileAssociationGroup(group.items.stream().filter(filter).toList());\n+        };\n+    }\n+\n+    static Builder build() {\n+        return new Builder();\n+    }\n+\n+    static class FileAssociationException extends Exception {\n+\n+        private static final long serialVersionUID = 1L;\n+    }\n+\n+    static final class FileAssociationNoMimesException extends FileAssociationException {\n+\n+        private static final long serialVersionUID = 1L;\n+    }\n+\n+    static final class FileAssociationNoExtensionsException extends FileAssociationException {\n+\n+        private static final long serialVersionUID = 1L;\n+    }\n+\n+    static final class Builder {\n+\n+        private Builder() {\n+        }\n+\n+        FileAssociationGroup create() throws FileAssociationException {\n+            if (mimeTypes == null || mimeTypes.isEmpty()) {\n+                throw new FileAssociationNoMimesException();\n+            }\n+\n+            if (extensions == null || extensions.isEmpty()) {\n+                throw new FileAssociationNoExtensionsException();\n+            }\n+\n+            return new FileAssociationGroup(mimeTypes.stream().map(mimeType -> {\n+                return extensions.stream().map(ext -> {\n+                    return createFileAssociation(mimeType, ext);\n+                });\n+            }).flatMap(x -> x).toList());\n+        }\n+\n+        Builder icon(Path v) {\n+            icon = v;\n+            return this;\n+        }\n+\n+        Builder description(String v) {\n+            description = v;\n+            return this;\n+        }\n+\n+        Builder mimeTypes(Collection<String> v) {\n+            mimeTypes = CollectionUtils.toSet(v);\n+            return this;\n+        }\n+\n+        Builder extensions(Collection<String> v) {\n+            extensions = CollectionUtils.toSet(v);\n+            return this;\n+        }\n+\n+        private FileAssociation createFileAssociation(String mimeType, String ext) {\n+            Objects.requireNonNull(ext);\n+            Objects.requireNonNull(mimeType);\n+            return new FileAssociation.Stub(Optional.ofNullable(description), Optional.ofNullable(icon), mimeType, ext);\n+        }\n+\n+        private Path icon;\n+        private String description;\n+        private Set<String> mimeTypes;\n+        private Set<String> extensions;\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/FileAssociationGroup.java","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static java.util.stream.Collectors.collectingAndThen;\n+import static java.util.stream.Collectors.groupingBy;\n+import static java.util.stream.Collectors.toMap;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n+import jdk.jpackage.internal.model.FileAssociation;\n+\n+final class FileAssociationScaner {\n+\n+    record Result(Map<MimeType, List<FileAssociation>> mimeTypesWithMultipleExtensions,\n+            Map<Extension, List<FileAssociation>> extensionsWithMultipleMimeTypes,\n+            Map<MimeTypeWithExtension, List<FileAssociation>> duplicates) {\n+    }\n+\n+    Result scan(Collection<FileAssociation> fileAssociations) {\n+        if (fileAssociations.stream().map(Box::new).distinct().count() != fileAssociations.size()) {\n+            throw new IllegalArgumentException(\"Multiple occurrences of the same fa instance in the given container\");\n+        }\n+\n+        final var mimeTypesWithMultipleExtensions = fileAssociations.stream().collect(\n+                collectingAndThen(groupingBy(MimeType::new), FileAssociationScaner::filterDuplicates));\n+        final var extensionsWithMultipleMimeTypes = fileAssociations.stream().collect(\n+                collectingAndThen(groupingBy(Extension::new), FileAssociationScaner::filterDuplicates));\n+        final var duplicates = fileAssociations.stream().collect(\n+                collectingAndThen(groupingBy(MimeTypeWithExtension::new), FileAssociationScaner::filterDuplicates));\n+\n+        return new Result(mimeTypesWithMultipleExtensions, extensionsWithMultipleMimeTypes, duplicates);\n+    }\n+\n+    private static <T> Map<T, List<FileAssociation>> filterDuplicates(Map<T, List<FileAssociation>> v) {\n+        return v.entrySet().stream().filter(e -> {\n+            return e.getValue().size() > 1;\n+        }).collect(toMap(Map.Entry::getKey, Map.Entry::getValue));\n+    }\n+\n+    record MimeTypeWithExtension(String mimeType, String extension) {\n+        MimeTypeWithExtension(FileAssociation fa) {\n+            this(fa.mimeType(), fa.extension());\n+        }\n+    }\n+\n+    record MimeType(String value) {\n+        MimeType(FileAssociation fa) {\n+            this(fa.mimeType());\n+        }\n+    }\n+\n+    record Extension(String value) {\n+        Extension(FileAssociation fa) {\n+            this(fa.extension());\n+        }\n+    }\n+\n+    private static class Box {\n+        Box(FileAssociation value) {\n+            this.value = value;\n+        }\n+\n+        @Override\n+        public boolean equals(Object other) {\n+            return value == ((Box)other).value;\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return value.hashCode();\n+        }\n+\n+        private final FileAssociation value;\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/FileAssociationScaner.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,202 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.StandardBundlerParam.ABOUT_URL;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_MODULES;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_CONTENT;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n+import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.INSTALLER_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.JLINK_OPTIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_AS_SERVICE;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.LIMIT_MODULES;\n+import static jdk.jpackage.internal.StandardBundlerParam.MODULE_PATH;\n+import static jdk.jpackage.internal.StandardBundlerParam.NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.SOURCE_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.getPredefinedAppImage;\n+import static jdk.jpackage.internal.StandardBundlerParam.hasPredefinedAppImage;\n+import static jdk.jpackage.internal.StandardBundlerParam.isRuntimeInstaller;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import jdk.jpackage.internal.AppImageFile.LauncherInfo;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLaunchers;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.PackageType;\n+import jdk.jpackage.internal.model.RuntimeLayout;\n+import jdk.jpackage.internal.util.function.ThrowingFunction;\n+\n+final class FromParams {\n+\n+    static ApplicationBuilder createApplicationBuilder(Map<String, ? super Object> params,\n+            Function<Map<String, ? super Object>, Launcher> launcherMapper,\n+            ApplicationLayout appLayout) throws ConfigException, IOException {\n+        return createApplicationBuilder(params, launcherMapper, appLayout, Optional.of(RuntimeLayout.DEFAULT));\n+    }\n+\n+    static ApplicationBuilder createApplicationBuilder(Map<String, ? super Object> params,\n+            Function<Map<String, ? super Object>, Launcher> launcherMapper,\n+            ApplicationLayout appLayout, Optional<RuntimeLayout> predefinedRuntimeLayout) throws ConfigException, IOException {\n+\n+        final var appBuilder = new ApplicationBuilder();\n+\n+        APP_NAME.copyInto(params, appBuilder::name);\n+        DESCRIPTION.copyInto(params, appBuilder::description);\n+        appBuilder.version(VERSION.fetchFrom(params));\n+        VENDOR.copyInto(params, appBuilder::vendor);\n+        COPYRIGHT.copyInto(params, appBuilder::copyright);\n+        SOURCE_DIR.copyInto(params, appBuilder::srcDir);\n+        APP_CONTENT.copyInto(params, appBuilder::contentDirs);\n+\n+        final var isRuntimeInstaller = isRuntimeInstaller(params);\n+\n+        final var predefinedRuntimeImage = PREDEFINED_RUNTIME_IMAGE.findIn(params);\n+\n+        final var predefinedRuntimeDirectory = predefinedRuntimeLayout.flatMap(\n+                layout -> predefinedRuntimeImage.map(layout::resolveAt)).map(RuntimeLayout::runtimeDirectory);\n+\n+        if (isRuntimeInstaller) {\n+            appBuilder.appImageLayout(predefinedRuntimeLayout.orElseThrow());\n+        } else {\n+            appBuilder.appImageLayout(appLayout);\n+\n+            if (hasPredefinedAppImage(params)) {\n+                final var appImageFile = PREDEFINED_APP_IMAGE_FILE.fetchFrom(params);\n+                appBuilder.initFromAppImage(appImageFile, launcherInfo -> {\n+                    var launcherParams = mapLauncherInfo(launcherInfo);\n+                    return launcherMapper.apply(mergeParams(params, launcherParams));\n+                });\n+            } else {\n+                final var launchers = createLaunchers(params, launcherMapper);\n+\n+                final var runtimeBuilderBuilder = new RuntimeBuilderBuilder();\n+\n+                MODULE_PATH.copyInto(params, runtimeBuilderBuilder::modulePath);\n+\n+                predefinedRuntimeDirectory.ifPresentOrElse(runtimeBuilderBuilder::forRuntime, () -> {\n+                    final var startupInfos = launchers.asList().stream()\n+                            .map(Launcher::startupInfo)\n+                            .map(Optional::orElseThrow).toList();\n+                    final var jlinkOptionsBuilder = runtimeBuilderBuilder.forNewRuntime(startupInfos);\n+                    ADD_MODULES.copyInto(params, jlinkOptionsBuilder::addModules);\n+                    LIMIT_MODULES.copyInto(params, jlinkOptionsBuilder::limitModules);\n+                    JLINK_OPTIONS.copyInto(params, jlinkOptionsBuilder::options);\n+                    jlinkOptionsBuilder.appy();\n+                });\n+\n+                appBuilder.launchers(launchers).runtimeBuilder(runtimeBuilderBuilder.create());\n+            }\n+        }\n+\n+        return appBuilder;\n+    }\n+\n+    static PackageBuilder createPackageBuilder(\n+            Map<String, ? super Object> params, Application app,\n+            PackageType type) throws ConfigException {\n+\n+        final var builder = new PackageBuilder(app, type);\n+\n+        builder.name(INSTALLER_NAME.fetchFrom(params));\n+        DESCRIPTION.copyInto(params, builder::description);\n+        VERSION.copyInto(params, builder::version);\n+        ABOUT_URL.copyInto(params, builder::aboutURL);\n+        LICENSE_FILE.findIn(params).map(Path::of).ifPresent(builder::licenseFile);\n+        builder.predefinedAppImage(getPredefinedAppImage(params));\n+        INSTALL_DIR.findIn(params).map(Path::of).ifPresent(builder::installDir);\n+\n+        return builder;\n+    }\n+\n+    static <T extends Application> BundlerParamInfo<T> createApplicationBundlerParam(\n+            ThrowingFunction<Map<String, ? super Object>, T> ctor) {\n+        return BundlerParamInfo.createBundlerParam(Application.class, ctor);\n+    }\n+\n+    static <T extends jdk.jpackage.internal.model.Package> BundlerParamInfo<T> createPackageBundlerParam(\n+            ThrowingFunction<Map<String, ? super Object>, T> ctor) {\n+        return BundlerParamInfo.createBundlerParam(jdk.jpackage.internal.model.Package.class, ctor);\n+    }\n+\n+    static Optional<jdk.jpackage.internal.model.Package> getCurrentPackage(Map<String, ? super Object> params) {\n+        return Optional.ofNullable((jdk.jpackage.internal.model.Package)params.get(\n+                jdk.jpackage.internal.model.Package.class.getName()));\n+    }\n+\n+    private static ApplicationLaunchers createLaunchers(\n+            Map<String, ? super Object> params,\n+            Function<Map<String, ? super Object>, Launcher> launcherMapper) {\n+        var launchers = ADD_LAUNCHERS.findIn(params).orElseGet(List::of);\n+\n+        var mainLauncher = launcherMapper.apply(params);\n+        var additionalLaunchers = launchers.stream().map(launcherParams -> {\n+            return launcherMapper.apply(mergeParams(params, launcherParams));\n+        }).toList();\n+\n+        return new ApplicationLaunchers(mainLauncher, additionalLaunchers);\n+    }\n+\n+    private static Map<String, ? super Object> mapLauncherInfo(LauncherInfo launcherInfo) {\n+        Map<String, ? super Object> launcherParams = new HashMap<>();\n+        launcherParams.put(NAME.getID(), launcherInfo.name());\n+        launcherParams.put(LAUNCHER_AS_SERVICE.getID(), Boolean.toString(launcherInfo.service()));\n+        launcherParams.putAll(launcherInfo.extra());\n+        return launcherParams;\n+    }\n+\n+    private static Map<String, ? super Object> mergeParams(Map<String, ? super Object> mainParams,\n+            Map<String, ? super Object> launcherParams) {\n+        if (!launcherParams.containsKey(DESCRIPTION.getID())) {\n+            launcherParams = new HashMap<>(launcherParams);\n+\/\/ FIXME: this is a good improvement but it fails existing tests\n+\/\/            launcherParams.put(DESCRIPTION.getID(), String.format(\"%s (%s)\", DESCRIPTION.fetchFrom(\n+\/\/                    mainParams), APP_NAME.fetchFrom(launcherParams)));\n+            launcherParams.put(DESCRIPTION.getID(), DESCRIPTION.fetchFrom(mainParams));\n+        }\n+        return AddLauncherArguments.merge(mainParams, launcherParams, ICON.getID(), ADD_LAUNCHERS\n+                .getID(), FILE_ASSOCIATIONS.getID());\n+    }\n+\n+    static final BundlerParamInfo<Application> APPLICATION = createApplicationBundlerParam(null);\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/FromParams.java","additions":202,"deletions":0,"binary":false,"changes":202,"status":"added"},{"patch":"@@ -27,1 +27,0 @@\n-import java.text.MessageFormat;\n@@ -30,1 +29,0 @@\n-import java.util.ResourceBundle;\n@@ -32,0 +30,2 @@\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.util.LocalizedExceptionBuilder;\n@@ -33,0 +33,1 @@\n+import jdk.jpackage.internal.util.StringBundle;\n@@ -34,1 +35,1 @@\n-class I18N {\n+final class I18N {\n@@ -41,6 +42,1 @@\n-        var str = getString(key);\n-        if (args.length != 0) {\n-            return MessageFormat.format(str, args);\n-        } else {\n-            return str;\n-        }\n+        return BUNDLE.format(key, args);\n@@ -49,1 +45,17 @@\n-    private static final ResourceBundle BUNDLE;\n+    static LocalizedExceptionBuilder<?> buildException() {\n+        return LocalizedExceptionBuilder.buildLocalizedException(BUNDLE);\n+    }\n+\n+    static ConfigException.Builder buildConfigException() {\n+        return ConfigException.build(BUNDLE);\n+    }\n+\n+    static ConfigException.Builder buildConfigException(String msgId, Object ... args) {\n+        return ConfigException.build(BUNDLE, msgId, args);\n+    }\n+\n+    static ConfigException.Builder buildConfigException(Throwable t) {\n+        return ConfigException.build(BUNDLE, t);\n+    }\n+\n+    private static final StringBundle BUNDLE;\n@@ -53,1 +65,1 @@\n-        BUNDLE = MultiResourceBundle.create(\n+        BUNDLE = StringBundle.fromResourceBundle(MultiResourceBundle.create(\n@@ -60,1 +72,1 @@\n-        );\n+        ));\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/I18N.java","additions":24,"deletions":12,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.Objects;\n@@ -30,32 +29,8 @@\n-final class InstallableFile {\n-\n-    InstallableFile(Path srcPath, Path installPath) {\n-        Objects.requireNonNull(srcPath);\n-\n-        this.srcPath = srcPath;\n-        this.installPath = installPath;\n-    }\n-\n-    Path installPath() {\n-        return installPath;\n-    }\n-\n-    Path srcPath() {\n-        return srcPath;\n-    }\n-\n-    void applyToApplicationLayouts(ApplicationLayout src,\n-            ApplicationLayout install) {\n-        var key = new Object();\n-        src.pathGroup().setPath(key, srcPath);\n-        if (installPath != null && install != null) {\n-            install.pathGroup().setPath(key, installPath);\n-        }\n-    }\n-\n-    void excludeFromApplicationLayout(ApplicationLayout layout) {\n-        applyToApplicationLayouts(layout, null);\n-    }\n-\n-    private final Path installPath;\n-    private final Path srcPath;\n+\/**\n+ * Source file that should be copied somewhere in application image tree.\n+ *\n+ * Has two paths:\n+ *  - path where it should be picked from;\n+ *  - path where it should be copied in application image;\n+ *\/\n+record InstallableFile(Path srcPath, Path installPath) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/InstallableFile.java","additions":9,"deletions":34,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -1,229 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.jpackage.internal;\n-\n-import java.io.File;\n-import java.io.IOException;\n-import java.io.PrintWriter;\n-import java.io.StringWriter;\n-import java.lang.module.Configuration;\n-import java.lang.module.ModuleDescriptor;\n-import java.lang.module.ModuleFinder;\n-import java.lang.module.ModuleReference;\n-import java.lang.module.ResolvedModule;\n-import java.nio.file.Path;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.function.Supplier;\n-import java.util.jar.JarFile;\n-import java.util.regex.Matcher;\n-import java.util.spi.ToolProvider;\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n-import jdk.internal.module.ModulePath;\n-import jdk.jpackage.internal.model.PackagerException;\n-\n-\n-final class JLinkBundlerHelper {\n-\n-    static void execute(Map<String, ? super Object> params, Path outputDir)\n-            throws IOException, PackagerException {\n-\n-        List<Path> modulePath =\n-                StandardBundlerParam.MODULE_PATH.fetchFrom(params);\n-        Set<String> addModules =\n-                StandardBundlerParam.ADD_MODULES.fetchFrom(params);\n-        Set<String> limitModules =\n-                StandardBundlerParam.LIMIT_MODULES.fetchFrom(params);\n-        List<String> options =\n-                StandardBundlerParam.JLINK_OPTIONS.fetchFrom(params);\n-\n-        LauncherData launcherData = StandardBundlerParam.LAUNCHER_DATA.fetchFrom(\n-                params);\n-\n-        \/\/ Modules\n-        if (!launcherData.isModular() && addModules.isEmpty()) {\n-            addModules.add(ALL_DEFAULT);\n-        }\n-\n-        Set<String> modules = createModuleList(modulePath, addModules, limitModules);\n-\n-        if (launcherData.isModular()) {\n-            modules.add(launcherData.moduleName());\n-        }\n-\n-        runJLink(outputDir, modulePath, modules, limitModules, options);\n-    }\n-\n-    \/*\n-     * Returns the set of modules that would be visible by default for\n-     * a non-modular-aware application consisting of the given elements.\n-     *\/\n-    private static Set<String> getDefaultModules(\n-            Collection<Path> paths, Collection<String> addModules) {\n-\n-        \/\/ the modules in the run-time image that export an API\n-        Stream<String> systemRoots = ModuleFinder.ofSystem().findAll().stream()\n-                .map(ModuleReference::descriptor)\n-                .filter(JLinkBundlerHelper::exportsAPI)\n-                .map(ModuleDescriptor::name);\n-\n-        Set<String> roots = Stream.concat(systemRoots,\n-                 addModules.stream()).collect(Collectors.toSet());\n-\n-        ModuleFinder finder = createModuleFinder(paths);\n-\n-        \/\/ Don't perform service bindings by default as outlined by JEP 343\n-        \/\/ and JEP 392\n-        return Configuration.empty()\n-                .resolve(finder, ModuleFinder.of(), roots)\n-                .modules()\n-                .stream()\n-                .map(ResolvedModule::name)\n-                .collect(Collectors.toSet());\n-    }\n-\n-    \/*\n-     * Returns true if the given module exports an API to all module.\n-     *\/\n-    private static boolean exportsAPI(ModuleDescriptor descriptor) {\n-        return descriptor.exports()\n-                .stream()\n-                .anyMatch(e -> !e.isQualified());\n-    }\n-\n-    static ModuleFinder createModuleFinder(Collection<Path> modulePath) {\n-        return ModuleFinder.compose(\n-                ModulePath.of(JarFile.runtimeVersion(), true,\n-                        modulePath.toArray(Path[]::new)),\n-                ModuleFinder.ofSystem());\n-    }\n-\n-    private static Set<String> createModuleList(List<Path> paths,\n-            Set<String> addModules, Set<String> limitModules) {\n-\n-        final Set<String> modules = new HashSet<>();\n-\n-        final Map<String, Supplier<Collection<String>>> phonyModules = Map.of(\n-                ALL_MODULE_PATH,\n-                () -> createModuleFinder(paths)\n-                            .findAll()\n-                            .stream()\n-                            .map(ModuleReference::descriptor)\n-                            .map(ModuleDescriptor::name)\n-                            .collect(Collectors.toSet()),\n-                ALL_DEFAULT,\n-                () -> getDefaultModules(paths, modules));\n-\n-        Supplier<Collection<String>> phonyModule = null;\n-        for (var module : addModules) {\n-            phonyModule = phonyModules.get(module);\n-            if (phonyModule == null) {\n-                modules.add(module);\n-            }\n-        }\n-\n-        if (phonyModule != null) {\n-            modules.addAll(phonyModule.get());\n-        }\n-\n-        return modules;\n-    }\n-\n-    private static void runJLink(Path output, List<Path> modulePath,\n-            Set<String> modules, Set<String> limitModules,\n-            List<String> options)\n-            throws PackagerException, IOException {\n-\n-        ArrayList<String> args = new ArrayList<String>();\n-        args.add(\"--output\");\n-        args.add(output.toString());\n-        if (modulePath != null && !modulePath.isEmpty()) {\n-            args.add(\"--module-path\");\n-            args.add(getPathList(modulePath));\n-        }\n-        if (modules != null && !modules.isEmpty()) {\n-            args.add(\"--add-modules\");\n-            args.add(getStringList(modules));\n-        }\n-        if (limitModules != null && !limitModules.isEmpty()) {\n-            args.add(\"--limit-modules\");\n-            args.add(getStringList(limitModules));\n-        }\n-        if (options != null) {\n-            for (String option : options) {\n-                if (option.startsWith(\"--output\") ||\n-                        option.startsWith(\"--add-modules\") ||\n-                        option.startsWith(\"--module-path\")) {\n-                    throw new PackagerException(\"error.blocked.option\", option);\n-                }\n-                args.add(option);\n-            }\n-        }\n-\n-        StringWriter writer = new StringWriter();\n-        PrintWriter pw = new PrintWriter(writer);\n-\n-        int retVal = LazyLoad.JLINK_TOOL.run(pw, pw, args.toArray(new String[0]));\n-        String jlinkOut = writer.toString();\n-\n-        args.add(0, \"jlink\");\n-        Log.verbose(args, List.of(jlinkOut), retVal, -1);\n-\n-\n-        if (retVal != 0) {\n-            throw new PackagerException(\"error.jlink.failed\" , jlinkOut);\n-        }\n-    }\n-\n-    private static String getPathList(List<Path> pathList) {\n-        return pathList.stream()\n-                .map(Path::toString)\n-                .map(Matcher::quoteReplacement)\n-                .collect(Collectors.joining(File.pathSeparator));\n-    }\n-\n-    private static String getStringList(Set<String> strings) {\n-        return Matcher.quoteReplacement(strings.stream().collect(\n-                Collectors.joining(\",\")));\n-    }\n-\n-    \/\/ The token for \"all modules on the module path\".\n-    private static final String ALL_MODULE_PATH = \"ALL-MODULE-PATH\";\n-\n-    \/\/ The token for \"all valid runtime modules\".\n-    private static final String ALL_DEFAULT = \"ALL-DEFAULT\";\n-\n-    private static class LazyLoad {\n-        static final ToolProvider JLINK_TOOL = ToolProvider.findFirst(\n-                \"jlink\").orElseThrow();\n-    };\n-}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/JLinkBundlerHelper.java","additions":0,"deletions":229,"binary":false,"changes":229,"status":"deleted"},{"patch":"@@ -0,0 +1,234 @@\n+\/*\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.io.File;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.lang.module.Configuration;\n+import java.lang.module.ModuleDescriptor;\n+import java.lang.module.ModuleFinder;\n+import java.lang.module.ModuleReference;\n+import java.lang.module.ResolvedModule;\n+import java.nio.file.Path;\n+import java.text.MessageFormat;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.function.Supplier;\n+import java.util.jar.JarFile;\n+import java.util.spi.ToolProvider;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import jdk.internal.module.ModulePath;\n+import jdk.jpackage.internal.model.AppImageLayout;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.LauncherModularStartupInfo;\n+import jdk.jpackage.internal.model.LauncherStartupInfo;\n+import jdk.jpackage.internal.model.PackagerException;\n+import jdk.jpackage.internal.model.RuntimeBuilder;\n+\n+final class JLinkRuntimeBuilder implements RuntimeBuilder {\n+\n+    private JLinkRuntimeBuilder(List<String> jlinkCmdLine) {\n+        this.jlinkCmdLine = jlinkCmdLine;\n+    }\n+\n+    @Override\n+    public void createRuntime(AppImageLayout appImageLayout) throws PackagerException {\n+        var args = new ArrayList<String>();\n+        args.add(\"--output\");\n+        args.add(appImageLayout.runtimeDirectory().toString());\n+        args.addAll(jlinkCmdLine);\n+\n+        StringWriter writer = new StringWriter();\n+        PrintWriter pw = new PrintWriter(writer);\n+\n+        int retVal = LazyLoad.JLINK_TOOL.run(pw, pw, args.toArray(String[]::new));\n+        String jlinkOut = writer.toString();\n+\n+        args.add(0, \"jlink\");\n+        Log.verbose(args, List.of(jlinkOut), retVal, -1);\n+        if (retVal != 0) {\n+            throw new PackagerException(\"error.jlink.failed\", jlinkOut);\n+        }\n+    }\n+\n+    static ModuleFinder createModuleFinder(Collection<Path> modulePath) {\n+        return ModuleFinder.compose(\n+                ModulePath.of(JarFile.runtimeVersion(), true,\n+                        modulePath.toArray(Path[]::new)),\n+                ModuleFinder.ofSystem());\n+    }\n+\n+    static RuntimeBuilder createJLinkRuntimeBuilder(List<Path> modulePath, Set<String> addModules,\n+            Set<String> limitModules, List<String> options, List<LauncherStartupInfo> startupInfos) throws ConfigException {\n+        return new JLinkRuntimeBuilder(createJLinkCmdline(modulePath, addModules, limitModules,\n+                options, startupInfos));\n+    }\n+\n+    private static List<String> createJLinkCmdline(List<Path> modulePath, Set<String> addModules,\n+            Set<String> limitModules, List<String> options, List<LauncherStartupInfo> startupInfos) throws ConfigException {\n+        List<String> launcherModules = startupInfos.stream().map(si -> {\n+            if (si instanceof LauncherModularStartupInfo siModular) {\n+                return siModular.moduleName();\n+            } else {\n+                return (String) null;\n+            }\n+        }).filter(Objects::nonNull).toList();\n+\n+        if (launcherModules.isEmpty() && addModules.isEmpty()) {\n+            addModules = Set.of(ALL_DEFAULT);\n+        }\n+\n+        var modules = createModuleList(modulePath, addModules, limitModules);\n+\n+        modules.addAll(launcherModules);\n+\n+        var args = new ArrayList<String>();\n+        if (!modulePath.isEmpty()) {\n+            args.add(\"--module-path\");\n+            args.add(getPathList(modulePath));\n+        }\n+        if (!modules.isEmpty()) {\n+            args.add(\"--add-modules\");\n+            args.add(getStringList(modules));\n+        }\n+        if (!limitModules.isEmpty()) {\n+            args.add(\"--limit-modules\");\n+            args.add(getStringList(limitModules));\n+        }\n+\n+        for (String option : options) {\n+            switch (option) {\n+                case \"--output\", \"--add-modules\", \"--module-path\" -> {\n+                    throw new ConfigException(MessageFormat.format(I18N.getString(\n+                            \"error.blocked.option\"), option), null);\n+                }\n+                default -> {\n+                    args.add(option);\n+                }\n+            }\n+        }\n+\n+        return args;\n+    }\n+\n+    \/*\n+     * Returns the set of modules that would be visible by default for\n+     * a non-modular-aware application consisting of the given elements.\n+     *\/\n+    private static Set<String> getDefaultModules(\n+            Collection<Path> paths, Collection<String> addModules) {\n+\n+        \/\/ the modules in the run-time image that export an API\n+        Stream<String> systemRoots = ModuleFinder.ofSystem().findAll().stream()\n+                .map(ModuleReference::descriptor)\n+                .filter(JLinkRuntimeBuilder::exportsAPI)\n+                .map(ModuleDescriptor::name);\n+\n+        Set<String> roots = Stream.concat(systemRoots,\n+                addModules.stream()).collect(Collectors.toSet());\n+\n+        ModuleFinder finder = createModuleFinder(paths);\n+\n+        \/\/ Don't perform service bindings by default as outlined by JEP 343\n+        \/\/ and JEP 392\n+        return Configuration.empty()\n+                .resolve(finder, ModuleFinder.of(), roots)\n+                .modules()\n+                .stream()\n+                .map(ResolvedModule::name)\n+                .collect(Collectors.toSet());\n+    }\n+\n+    \/*\n+     * Returns true if the given module exports an API to all module.\n+     *\/\n+    private static boolean exportsAPI(ModuleDescriptor descriptor) {\n+        return descriptor.exports()\n+                .stream()\n+                .anyMatch(e -> !e.isQualified());\n+    }\n+\n+    private static Set<String> createModuleList(List<Path> paths,\n+            Set<String> addModules, Set<String> limitModules) {\n+\n+        final Set<String> modules = new HashSet<>();\n+\n+        final Map<String, Supplier<Collection<String>>> phonyModules = Map.of(\n+                ALL_MODULE_PATH,\n+                () -> createModuleFinder(paths)\n+                        .findAll()\n+                        .stream()\n+                        .map(ModuleReference::descriptor)\n+                        .map(ModuleDescriptor::name)\n+                        .collect(Collectors.toSet()),\n+                ALL_DEFAULT,\n+                () -> getDefaultModules(paths, modules));\n+\n+        Supplier<Collection<String>> phonyModule = null;\n+        for (var module : addModules) {\n+            phonyModule = phonyModules.get(module);\n+            if (phonyModule == null) {\n+                modules.add(module);\n+            }\n+        }\n+\n+        if (phonyModule != null) {\n+            modules.addAll(phonyModule.get());\n+        }\n+\n+        return modules;\n+    }\n+\n+    private static String getPathList(List<Path> pathList) {\n+        return pathList.stream()\n+                .map(Path::toString)\n+                .collect(Collectors.joining(File.pathSeparator));\n+    }\n+\n+    private static String getStringList(Set<String> strings) {\n+        return strings.stream().collect(Collectors.joining(\",\"));\n+    }\n+\n+    private final List<String> jlinkCmdLine;\n+\n+    \/\/ The token for \"all modules on the module path\".\n+    private static final String ALL_MODULE_PATH = \"ALL-MODULE-PATH\";\n+\n+    \/\/ The token for \"all valid runtime modules\".\n+    private static final String ALL_DEFAULT = \"ALL-DEFAULT\";\n+\n+    private static class LazyLoad {\n+\n+        static final ToolProvider JLINK_TOOL = ToolProvider.findFirst(\n+                \"jlink\").orElseThrow();\n+    };\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/JLinkRuntimeBuilder.java","additions":234,"deletions":0,"binary":false,"changes":234,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,3 @@\n-import java.util.Map;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import java.util.Objects;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.Launcher;\n@@ -33,3 +33,4 @@\n-    LauncherAsService(String name, Map<String, Object> mainParams,\n-            OverridableResource resource) {\n-        if (name == null || APP_NAME.fetchFrom(mainParams).equals(name)) {\n+    LauncherAsService(Application app, Launcher launcher, OverridableResource resource) {\n+        this.name = launcher.name();\n+\n+        if (app.mainLauncher().orElseThrow() == launcher) {\n@@ -37,2 +38,1 @@\n-            name = APP_NAME.fetchFrom(mainParams);\n-            this.description = DESCRIPTION.fetchFrom(mainParams);\n+            this.description = launcher.description();\n@@ -41,2 +41,1 @@\n-            this.description = String.format(\"%s (%s)\", DESCRIPTION.fetchFrom(\n-                    mainParams), name);\n+            this.description = String.format(\"%s (%s)\", app.description(), name);\n@@ -45,2 +44,1 @@\n-        this.name = name;\n-        this.resource = resource;\n+        this.resource = Objects.requireNonNull(resource);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/LauncherAsService.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -0,0 +1,173 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.I18N.buildConfigException;\n+import static jdk.jpackage.internal.util.function.ThrowingConsumer.toConsumer;\n+\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.internal.util.OperatingSystem;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.CustomLauncherIcon;\n+import jdk.jpackage.internal.model.FileAssociation;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.Launcher.Stub;\n+import jdk.jpackage.internal.model.LauncherIcon;\n+import jdk.jpackage.internal.model.LauncherStartupInfo;\n+\n+final class LauncherBuilder {\n+\n+    Launcher create() throws ConfigException {\n+        CustomLauncherIcon.fromLauncherIcon(icon)\n+                .map(CustomLauncherIcon::path)\n+                .ifPresent(toConsumer(LauncherBuilder::validateIcon));\n+\n+        final var fa = createFileAssociations(faSources, Optional.ofNullable(faTraits).orElse(DEFAULT_FA_TRAITS));\n+\n+        Objects.requireNonNull(defaultIconResourceName);\n+\n+        final var nonNullName = deriveNonNullName();\n+\n+        return new Stub(nonNullName, Optional.ofNullable(startupInfo), fa,\n+                isService, Optional.ofNullable(description).orElse(nonNullName),\n+                Optional.ofNullable(icon), defaultIconResourceName,\n+                Optional.ofNullable(extraAppImageFileData).orElseGet(Map::of));\n+    }\n+\n+    LauncherBuilder name(String v) {\n+        name = v;\n+        return this;\n+    }\n+\n+    LauncherBuilder startupInfo(LauncherStartupInfo v) {\n+        startupInfo = v;\n+        return this;\n+    }\n+\n+    LauncherBuilder faGroups(List<FileAssociationGroup> v) {\n+        v.forEach(Objects::requireNonNull);\n+        faSources = v;\n+        return this;\n+    }\n+\n+    LauncherBuilder faTraits(FileAssociationTraits v) {\n+        faTraits = v;\n+        return this;\n+    }\n+\n+    LauncherBuilder isService(boolean v) {\n+        isService = v;\n+        return this;\n+    }\n+\n+    LauncherBuilder description(String v) {\n+        description = v;\n+        return this;\n+    }\n+\n+    LauncherBuilder icon(LauncherIcon v) {\n+        icon = v;\n+        return this;\n+    }\n+\n+    LauncherBuilder defaultIconResourceName(String v) {\n+        defaultIconResourceName = v;\n+        return this;\n+    }\n+\n+    LauncherBuilder extraAppImageFileData(Map<String, String> v) {\n+        extraAppImageFileData = v;\n+        return this;\n+    }\n+\n+    private String deriveNonNullName() {\n+        return Optional.ofNullable(name).orElseGet(() -> startupInfo.simpleClassName());\n+    }\n+\n+    static void validateIcon(Path icon) throws ConfigException {\n+        switch (OperatingSystem.current()) {\n+            case WINDOWS -> {\n+                if (!icon.getFileName().toString().toLowerCase().endsWith(\".ico\")) {\n+                    throw buildConfigException().message(\"message.icon-not-ico\", icon).create();\n+                }\n+            }\n+            case LINUX -> {\n+                if (!icon.getFileName().toString().endsWith(\".png\")) {\n+                    throw buildConfigException().message(\"message.icon-not-png\", icon).create();\n+                }\n+            }\n+            case MACOS -> {\n+                if (!icon.getFileName().toString().endsWith(\".icns\")) {\n+                    throw buildConfigException().message(\"message.icon-not-icns\", icon).create();\n+                }\n+            }\n+            default -> {\n+                throw new UnsupportedOperationException();\n+            }\n+        }\n+    }\n+\n+    record FileAssociationTraits() {\n+    }\n+\n+    private static List<FileAssociation> createFileAssociations(\n+            List<FileAssociationGroup> groups, FileAssociationTraits faTraits) throws ConfigException {\n+\n+        Objects.requireNonNull(groups);\n+        Objects.requireNonNull(faTraits);\n+\n+        int faID = 1;\n+        for (var group : groups) {\n+            final var scanResult = new FileAssociationScaner().scan(group.items());\n+\n+            if (!scanResult.extensionsWithMultipleMimeTypes().isEmpty()) {\n+                throw buildConfigException()\n+                        .message(\"error.too-many-content-types-for-file-association\", faID)\n+                        .advice(\"error.too-many-content-types-for-file-association.advice\", faID)\n+                        .create();\n+            }\n+\n+            faID++;\n+        }\n+\n+        return FileAssociationGroup.flatMap(groups.stream()).toList();\n+    }\n+\n+    private String name;\n+    private LauncherStartupInfo startupInfo;\n+    private List<FileAssociationGroup> faSources = List.of();\n+    private FileAssociationTraits faTraits;\n+    private boolean isService;\n+    private String description;\n+    private LauncherIcon icon;\n+    private String defaultIconResourceName;\n+    private Map<String, String> extraAppImageFileData;\n+\n+    private static final FileAssociationTraits DEFAULT_FA_TRAITS = new FileAssociationTraits();\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/LauncherBuilder.java","additions":173,"deletions":0,"binary":false,"changes":173,"status":"added"},{"patch":"@@ -144,1 +144,1 @@\n-        ModuleReference moduleRef = JLinkBundlerHelper.createModuleFinder(\n+        ModuleReference moduleRef = JLinkRuntimeBuilder.createModuleFinder(\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/LauncherData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,156 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.I18N.buildConfigException;\n+import static jdk.jpackage.internal.StandardBundlerParam.ARGUMENTS;\n+import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.JAVA_OPTIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_AS_SERVICE;\n+import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n+import static jdk.jpackage.internal.StandardBundlerParam.NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import static jdk.jpackage.internal.util.function.ThrowingSupplier.toSupplier;\n+\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.BiFunction;\n+import java.util.stream.IntStream;\n+import jdk.internal.util.OperatingSystem;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.CustomLauncherIcon;\n+import jdk.jpackage.internal.model.DefaultLauncherIcon;\n+import jdk.jpackage.internal.model.FileAssociation;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.LauncherIcon;\n+\n+record LauncherFromParams(Optional<BiFunction<FileAssociation, Map<String, ? super Object>, FileAssociation>> faExtension) {\n+\n+    LauncherFromParams {\n+        Objects.requireNonNull(faExtension);\n+    }\n+\n+    LauncherFromParams() {\n+        this(Optional.empty());\n+    }\n+\n+    Launcher create(Map<String, ? super Object> params) throws ConfigException {\n+        final var builder = new LauncherBuilder().defaultIconResourceName(defaultIconResourceName());\n+\n+        DESCRIPTION.copyInto(params, builder::description);\n+        builder.icon(toLauncherIcon(ICON.findIn(params).orElse(null)));\n+        LAUNCHER_AS_SERVICE.copyInto(params, builder::isService);\n+        NAME.copyInto(params, builder::name);\n+\n+        if (PREDEFINED_APP_IMAGE.findIn(params).isEmpty()) {\n+            final var startupInfoBuilder = new LauncherStartupInfoBuilder();\n+\n+            startupInfoBuilder.launcherData(LAUNCHER_DATA.fetchFrom(params));\n+            ARGUMENTS.copyInto(params, startupInfoBuilder::defaultParameters);\n+            JAVA_OPTIONS.copyInto(params, startupInfoBuilder::javaOptions);\n+\n+            builder.startupInfo(startupInfoBuilder.create());\n+        }\n+\n+        final var faParamsList = FILE_ASSOCIATIONS.findIn(params).orElseGet(List::of);\n+\n+        final var faGroups = IntStream.range(0, faParamsList.size()).mapToObj(idx -> {\n+            final var faParams = faParamsList.get(idx);\n+            return toSupplier(() -> {\n+                final var faGroupBuilder = FileAssociationGroup.build();\n+\n+                if (OperatingSystem.current() == OperatingSystem.MACOS) {\n+                    FA_DESCRIPTION.copyInto(faParams, faGroupBuilder::description);\n+                } else {\n+                    faGroupBuilder.description(FA_DESCRIPTION.findIn(faParams).orElseGet(() -> {\n+                        return String.format(\"%s association\", toSupplier(builder::create).get().name());\n+                    }));\n+                }\n+\n+                FA_ICON.copyInto(faParams, faGroupBuilder::icon);\n+                FA_EXTENSIONS.copyInto(faParams, faGroupBuilder::extensions);\n+                FA_CONTENT_TYPE.copyInto(faParams, faGroupBuilder::mimeTypes);\n+\n+                final var faID = idx + 1;\n+\n+                final FileAssociationGroup faGroup;\n+                try {\n+                    faGroup = faGroupBuilder.create();\n+                } catch (FileAssociationGroup.FileAssociationNoMimesException ex) {\n+                    throw buildConfigException()\n+                            .message(\"error.no-content-types-for-file-association\", faID)\n+                            .advice(\"error.no-content-types-for-file-association.advice\", faID)\n+                            .create();\n+                }\n+\n+                if (faExtension.isPresent()) {\n+                    return new FileAssociationGroup(faGroup.items().stream().map(fa -> {\n+                        return faExtension.get().apply(fa, faParams);\n+                    }).toList());\n+                } else {\n+                    return faGroup;\n+                }\n+            }).get();\n+        }).toList();\n+\n+        return builder.faGroups(faGroups).create();\n+    }\n+\n+    private static LauncherIcon toLauncherIcon(Path launcherIconPath) {\n+        if (launcherIconPath == null) {\n+            return DefaultLauncherIcon.INSTANCE;\n+        } else if (launcherIconPath.toString().isEmpty()) {\n+            return null;\n+        } else {\n+            return CustomLauncherIcon.create(launcherIconPath);\n+        }\n+    }\n+\n+    private static String defaultIconResourceName() {\n+        switch (OperatingSystem.current()) {\n+            case WINDOWS -> {\n+                return \"JavaApp.ico\";\n+            }\n+            case LINUX -> {\n+                return \"JavaApp.png\";\n+            }\n+            case MACOS -> {\n+                return \"JavaApp.icns\";\n+            }\n+            default -> {\n+                throw new UnsupportedOperationException();\n+            }\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/LauncherFromParams.java","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.function.UnaryOperator;\n+import jdk.jpackage.internal.model.LauncherJarStartupInfo;\n+import jdk.jpackage.internal.model.LauncherJarStartupInfoMixin;\n+import jdk.jpackage.internal.model.LauncherModularStartupInfo;\n+import jdk.jpackage.internal.model.LauncherModularStartupInfoMixin;\n+import jdk.jpackage.internal.model.LauncherStartupInfo.Stub;\n+import jdk.jpackage.internal.model.LauncherStartupInfo;\n+\n+final class LauncherStartupInfoBuilder {\n+\n+    LauncherStartupInfo create() {\n+        return decorator.apply(new Stub(qualifiedClassName, javaOptions,\n+                defaultParameters, classPath));\n+    }\n+\n+    LauncherStartupInfoBuilder launcherData(LauncherData launcherData) {\n+        if (launcherData.isModular()) {\n+            decorator = new ModuleStartupInfo(launcherData.moduleName(),\n+                    launcherData.modulePath());\n+        } else {\n+            decorator = new JarStartupInfo(launcherData.mainJarName(),\n+                    launcherData.isClassNameFromMainJar());\n+        }\n+        classPath = launcherData.classPath();\n+        qualifiedClassName = launcherData.qualifiedClassName();\n+        return this;\n+    }\n+\n+    LauncherStartupInfoBuilder javaOptions(List<String> v) {\n+        javaOptions = v;\n+        return this;\n+    }\n+\n+    LauncherStartupInfoBuilder defaultParameters(List<String> v) {\n+        defaultParameters = v;\n+        return this;\n+    }\n+\n+    private static record ModuleStartupInfo(String moduleName,\n+            List<Path> modulePath) implements UnaryOperator<LauncherStartupInfo> {\n+\n+        @Override\n+        public LauncherStartupInfo apply(LauncherStartupInfo base) {\n+            return LauncherModularStartupInfo.create(base,\n+                    new LauncherModularStartupInfoMixin.Stub(moduleName,\n+                            modulePath));\n+        }\n+    }\n+\n+    private static record JarStartupInfo(Path jarPath,\n+            boolean isClassNameFromMainJar) implements\n+            UnaryOperator<LauncherStartupInfo> {\n+\n+        @Override\n+        public LauncherStartupInfo apply(LauncherStartupInfo base) {\n+            return LauncherJarStartupInfo.create(base,\n+                    new LauncherJarStartupInfoMixin.Stub(jarPath,\n+                            isClassNameFromMainJar));\n+        }\n+    }\n+\n+    private String qualifiedClassName;\n+    private List<String> javaOptions;\n+    private List<String> defaultParameters;\n+    private List<Path> classPath;\n+    private UnaryOperator<LauncherStartupInfo> decorator;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/LauncherStartupInfoBuilder.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import java.text.MessageFormat;\n@@ -44,0 +43,1 @@\n+import java.util.Objects;\n@@ -45,0 +45,1 @@\n+import java.util.function.Supplier;\n@@ -47,2 +48,0 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n-import jdk.jpackage.internal.resources.ResourceLocator;\n@@ -74,2 +73,10 @@\n-    OverridableResource(String defaultName) {\n-        this.defaultName = defaultName;\n+    OverridableResource() {\n+        defaultName = \"\";\n+        defaultResourceSupplier = null;\n+        setSourceOrder(Source.External, Source.ResourceDir);\n+    }\n+\n+    OverridableResource(String defaultName,\n+            Supplier<InputStream> defaultResourceSupplier) {\n+        this.defaultName = Objects.requireNonNull(defaultName);\n+        this.defaultResourceSupplier = Objects.requireNonNull(defaultResourceSupplier);\n@@ -79,0 +86,6 @@\n+    OverridableResource(String defaultName, Class<?> resourceLocator) {\n+        this(defaultName, () -> {\n+            return resourceLocator.getResourceAsStream(defaultName);\n+        });\n+    }\n+\n@@ -205,1 +218,1 @@\n-                Files.createDirectories(IOUtils.getParent(dest));\n+                Files.createDirectories(dest.getParent());\n@@ -215,10 +228,0 @@\n-    static InputStream readDefault(String resourceName) {\n-        return ResourceLocator.class.getResourceAsStream(resourceName);\n-    }\n-\n-    static OverridableResource createResource(String defaultName,\n-            Map<String, ? super Object> params) {\n-        return new OverridableResource(defaultName).setResourceDir(\n-                RESOURCE_DIR.fetchFrom(params));\n-    }\n-\n@@ -244,2 +247,1 @@\n-            Log.verbose(MessageFormat.format(I18N.getString(\n-                    \"message.using-custom-resource-from-file\"),\n+            Log.verbose(I18N.format(\"message.using-custom-resource-from-file\",\n@@ -273,3 +275,2 @@\n-                Log.verbose(MessageFormat.format(I18N.getString(\n-                        \"message.using-custom-resource\"), getPrintableCategory(),\n-                        logResourceName));\n+                Log.verbose(I18N.format(\"message.using-custom-resource\",\n+                        getPrintableCategory(), logResourceName));\n@@ -294,2 +295,1 @@\n-            Log.verbose(MessageFormat.format(\n-                    I18N.getString(\"message.using-default-resource\"),\n+            Log.verbose(I18N.format(\"message.using-default-resource\",\n@@ -298,1 +298,1 @@\n-            try (InputStream in = readDefault(defaultName)) {\n+            try (InputStream in = defaultResourceSupplier.get()) {\n@@ -389,0 +389,1 @@\n+    private final Supplier<InputStream> defaultResourceSupplier;\n@@ -393,1 +394,1 @@\n-        public boolean apply(ResourceConsumer dest) throws IOException;\n+        boolean apply(ResourceConsumer dest) throws IOException;\n@@ -397,2 +398,2 @@\n-        public Path publicName();\n-        public void consume(InputStream in) throws IOException;\n+        Path publicName();\n+        void consume(InputStream in) throws IOException;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/OverridableResource.java","additions":29,"deletions":28,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -0,0 +1,249 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.I18N.buildConfigException;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.Package;\n+import jdk.jpackage.internal.model.Package.Stub;\n+import jdk.jpackage.internal.model.PackageType;\n+import jdk.jpackage.internal.model.StandardPackageType;\n+\n+final class PackageBuilder {\n+\n+    PackageBuilder(Application app, PackageType type) {\n+        this.app = Objects.requireNonNull(app);\n+        this.type = Objects.requireNonNull(type);\n+    }\n+\n+    Package create() throws ConfigException {\n+        final var validatedName = validatedName();\n+\n+        Path relativeInstallDir;\n+        if (installDir != null) {\n+            var normalizedInstallDir = mapInstallDir(installDir, type);\n+            if (type instanceof StandardPackageType stdType) {\n+                Optional<Path> installDirName = Optional.of(Path.of(validatedName));\n+                switch (stdType) {\n+                    case LINUX_DEB, LINUX_RPM -> {\n+                        switch (normalizedInstallDir.toString()) {\n+                            case \"\/usr\", \"\/usr\/local\" -> {\n+                                installDirName = Optional.empty();\n+                            }\n+                        }\n+                    }\n+                    case WIN_EXE, WIN_MSI -> {\n+                        installDirName = Optional.empty();\n+                    }\n+                    case MAC_DMG, MAC_PKG -> {\n+                        installDirName = Optional.of(app.appImageDirName());\n+                    }\n+                }\n+                normalizedInstallDir = installDirName.map(normalizedInstallDir::resolve).orElse(normalizedInstallDir);\n+            }\n+            relativeInstallDir = normalizedInstallDir;\n+        } else {\n+            relativeInstallDir = defaultInstallDir().orElseThrow(UnsupportedOperationException::new);\n+        }\n+\n+        if (relativeInstallDir.isAbsolute()) {\n+            relativeInstallDir = relativeInstallDir.getRoot().relativize(relativeInstallDir);\n+        }\n+\n+        return new Stub(\n+                app,\n+                type,\n+                validatedName,\n+                Optional.ofNullable(description).orElseGet(app::description),\n+                version = Optional.ofNullable(version).orElseGet(app::version),\n+                Optional.ofNullable(aboutURL),\n+                Optional.ofNullable(licenseFile),\n+                Optional.ofNullable(predefinedAppImage),\n+                relativeInstallDir);\n+    }\n+\n+    PackageBuilder name(String v) {\n+        name = v;\n+        return this;\n+    }\n+\n+    Optional<String> name() {\n+        return Optional.ofNullable(name);\n+    }\n+\n+    PackageBuilder fileName(Path v) {\n+        fileName = v;\n+        return this;\n+    }\n+\n+    Optional<Path> fileName() {\n+        return Optional.ofNullable(fileName);\n+    }\n+\n+    PackageBuilder description(String v) {\n+        description = v;\n+        return this;\n+    }\n+\n+    Optional<String> description() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    PackageBuilder version(String v) {\n+        version = v;\n+        return this;\n+    }\n+\n+    Optional<String> version() {\n+        return Optional.ofNullable(version);\n+    }\n+\n+    PackageBuilder aboutURL(String v) {\n+        aboutURL = v;\n+        return this;\n+    }\n+\n+    Optional<String> aboutURL() {\n+        return Optional.ofNullable(aboutURL);\n+    }\n+\n+    PackageBuilder licenseFile(Path v) {\n+        licenseFile = v;\n+        return this;\n+    }\n+\n+    Optional<Path> licenseFile() {\n+        return Optional.ofNullable(licenseFile);\n+    }\n+\n+    PackageBuilder predefinedAppImage(Path v) {\n+        predefinedAppImage = v;\n+        return this;\n+    }\n+\n+    Optional<Path> predefinedAppImage() {\n+        return Optional.ofNullable(predefinedAppImage);\n+    }\n+\n+    PackageBuilder installDir(Path v) {\n+        installDir = v;\n+        return this;\n+    }\n+\n+    Optional<Path> installDir() {\n+        return Optional.ofNullable(installDir);\n+    }\n+\n+    Optional<Path> defaultInstallDir() {\n+        if (type instanceof StandardPackageType stdType) {\n+            return defaultInstallDir(stdType, validatedName(), app);\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    private String validatedName() {\n+        return name().orElseGet(app::name);\n+    }\n+\n+    private static Path mapInstallDir(Path installDir, PackageType pkgType)\n+            throws ConfigException {\n+        var ex = buildConfigException(\"error.invalid-install-dir\", installDir).create();\n+\n+        if (installDir.getNameCount() == 0) {\n+            throw ex;\n+        }\n+\n+        if (installDir.getFileName().equals(Path.of(\"\"))) {\n+            \/\/ Trailing '\/' or '\\\\'. Strip them away.\n+            installDir = installDir.getParent();\n+        }\n+\n+        if (installDir.toString().isEmpty()) {\n+            throw ex;\n+        }\n+\n+        switch (pkgType) {\n+            case StandardPackageType.WIN_EXE, StandardPackageType.WIN_MSI -> {\n+                if (installDir.isAbsolute()) {\n+                    throw ex;\n+                }\n+            }\n+            default -> {\n+                if (!installDir.isAbsolute()) {\n+                    throw ex;\n+                }\n+            }\n+        }\n+\n+        if (!installDir.normalize().toString().equals(installDir.toString())) {\n+            \/\/ Don't allow '..' or '.' in path components\n+            throw ex;\n+        }\n+\n+        return installDir;\n+    }\n+\n+    private static Optional<Path> defaultInstallDir(StandardPackageType pkgType, String pkgName, Application app) {\n+        switch (pkgType) {\n+            case WIN_EXE, WIN_MSI -> {\n+                return Optional.of(app.appImageDirName());\n+            }\n+            case LINUX_DEB, LINUX_RPM -> {\n+                return Optional.of(Path.of(\"\/opt\").resolve(pkgName));\n+            }\n+            case MAC_DMG, MAC_PKG -> {\n+                final Path dirName = app.appImageDirName();\n+                final Path base;\n+                if (app.isRuntime()) {\n+                    base = Path.of(\"\/Library\/Java\/JavaVirtualMachines\");\n+                } else {\n+                    base = Path.of(\"\/Applications\");\n+                }\n+                return Optional.of(base.resolve(dirName));\n+            }\n+            default -> {\n+                return Optional.empty();\n+            }\n+        }\n+    }\n+\n+    private String name;\n+    private Path fileName;\n+    private String description;\n+    private String version;\n+    private String aboutURL;\n+    private Path licenseFile;\n+    private Path predefinedAppImage;\n+    private Path installDir;\n+\n+    private final PackageType type;\n+    private final Application app;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PackageBuilder.java","additions":249,"deletions":0,"binary":false,"changes":249,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import jdk.jpackage.internal.model.ApplicationLayout;\n@@ -32,1 +33,0 @@\n-import java.util.Optional;\n@@ -38,1 +38,1 @@\n-     * @param appImageDir - path to application image\n+     * @param appLayout - application layout\n@@ -40,5 +40,2 @@\n-    public static Path getPathInAppImage(Path appImageDir) {\n-        return ApplicationLayout.platformAppImage()\n-                .resolveAt(appImageDir)\n-                .appDirectory()\n-                .resolve(FILENAME);\n+    static Path getPathInAppImage(ApplicationLayout appLayout) {\n+        return appLayout.appDirectory().resolve(FILENAME);\n@@ -48,2 +45,1 @@\n-        Objects.requireNonNull(packageName);\n-        this.packageName = packageName;\n+        this.packageName = Objects.requireNonNull(packageName);\n@@ -53,8 +49,3 @@\n-        Path dst = Optional.ofNullable(appLayout.appDirectory()).map(appDir -> {\n-            return appDir.resolve(FILENAME);\n-        }).orElse(null);\n-\n-        if (dst != null) {\n-            Files.createDirectories(dst.getParent());\n-            Files.writeString(dst, packageName);\n-        }\n+        final var dstDir = appLayout.appDirectory();\n+        Files.createDirectories(dstDir);\n+        Files.writeString(dstDir.resolve(FILENAME), packageName);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PackageFile.java","additions":9,"deletions":18,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import jdk.jpackage.internal.PackagingPipeline.StartupParameters;\n+import jdk.jpackage.internal.model.Package;\n+import jdk.jpackage.internal.model.PackagerException;\n+\n+abstract class PackagerBuilder<T extends Package, U extends PackagerBuilder<T, U>> {\n+\n+    U pkg(T v) {\n+        pkg = v;\n+        return thiz();\n+    }\n+\n+    U env(BuildEnv v) {\n+        env = v;\n+        return thiz();\n+    }\n+\n+    U outputDir(Path v) {\n+        outputDir = v;\n+        return thiz();\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private U thiz() {\n+        return (U)this;\n+    }\n+\n+    protected abstract void configurePackagingPipeline(PackagingPipeline.Builder pipelineBuilder,\n+            StartupParameters startupParameters);\n+\n+    Path execute(PackagingPipeline.Builder pipelineBuilder) throws PackagerException {\n+        Objects.requireNonNull(pkg);\n+        Objects.requireNonNull(env);\n+        Objects.requireNonNull(outputDir);\n+\n+        final var startupParameters = pipelineBuilder.createStartupParameters(env, pkg, outputDir);\n+\n+        configurePackagingPipeline(pipelineBuilder, startupParameters);\n+\n+        pipelineBuilder.create().execute(startupParameters);\n+\n+        return outputDir.resolve(pkg.packageFileNameWithSuffix());\n+    }\n+\n+    protected T pkg;\n+    protected BuildEnv env;\n+    protected Path outputDir;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PackagerBuilder.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,618 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import static java.util.stream.Collectors.toMap;\n+\n+import java.io.IOException;\n+import java.nio.file.LinkOption;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.Callable;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.function.UnaryOperator;\n+import jdk.jpackage.internal.model.AppImageLayout;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.Package;\n+import jdk.jpackage.internal.model.PackagerException;\n+import jdk.jpackage.internal.pipeline.DirectedEdge;\n+import jdk.jpackage.internal.pipeline.FixedDAG;\n+import jdk.jpackage.internal.pipeline.TaskPipelineBuilder;\n+import jdk.jpackage.internal.pipeline.TaskSpecBuilder;\n+import jdk.jpackage.internal.util.function.ExceptionBox;\n+\n+\n+final class PackagingPipeline {\n+\n+    void execute(BuildEnv env, Application app) throws PackagerException {\n+        execute(appContextMapper.apply(createTaskContext(env, app)));\n+    }\n+\n+    void execute(BuildEnv env, Package pkg, Path outputDir) throws PackagerException {\n+        execute((StartupParameters)createPackagingTaskContext(env, pkg, outputDir,\n+                taskConfig, appImageLayoutForPackaging.apply(pkg)));\n+    }\n+\n+    void execute(StartupParameters startupParameters) throws PackagerException {\n+        execute(pkgContextMapper.apply(createTaskContext((PackagingTaskContext)startupParameters)));\n+    }\n+\n+    interface StartupParameters {\n+        BuildEnv packagingEnv();\n+    }\n+\n+    interface TaskAction {\n+    }\n+\n+    interface TaskID {\n+    }\n+\n+    enum BuildApplicationTaskID implements TaskID {\n+        RUNTIME,\n+        CONTENT,\n+        LAUNCHERS,\n+        APP_IMAGE_FILE\n+    }\n+\n+    enum CopyAppImageTaskID implements TaskID {\n+        COPY\n+    }\n+\n+    enum PrimaryTaskID implements TaskID {\n+        BUILD_APPLICATION_IMAGE,\n+        COPY_APP_IMAGE,\n+        PACKAGE\n+    }\n+\n+    enum PackageTaskID implements TaskID {\n+        RUN_POST_IMAGE_USER_SCRIPT,\n+        CREATE_CONFIG_FILES,\n+        CREATE_PACKAGE_FILE\n+    }\n+\n+    interface TaskContext extends Predicate<TaskID> {\n+        void execute(TaskAction taskAction) throws IOException, PackagerException;\n+    }\n+\n+    record AppImageBuildEnv<T extends Application, U extends AppImageLayout>(BuildEnv env, T app, U envLayout) {\n+        @SuppressWarnings(\"unchecked\")\n+        U resolvedLayout() {\n+            return (U)envLayout.resolveAt(env.appImageDir());\n+        }\n+    }\n+\n+    record PackageBuildEnv<T extends Package, U extends AppImageLayout>(BuildEnv env, T pkg, U envLayout, Path outputDir) {\n+        @SuppressWarnings(\"unchecked\")\n+        U resolvedLayout() {\n+            return (U)envLayout.resolveAt(env.appImageDir());\n+        }\n+\n+        AppImageBuildEnv<Application, U> appImageBuildEnv() {\n+            return new AppImageBuildEnv<>(env, pkg.app(), envLayout);\n+        }\n+    }\n+\n+    @FunctionalInterface\n+    interface ApplicationImageTaskAction<T extends Application, U extends ApplicationLayout> extends TaskAction {\n+        void execute(AppImageBuildEnv<T, U> env) throws IOException, PackagerException;\n+    }\n+\n+    @FunctionalInterface\n+    interface AppImageTaskAction<T extends Application, U extends AppImageLayout> extends TaskAction {\n+        void execute(AppImageBuildEnv<T, U> env) throws IOException, PackagerException;\n+    }\n+\n+    @FunctionalInterface\n+    interface CopyAppImageTaskAction<T extends Package> extends TaskAction {\n+        void execute(T pkg, AppImageDesc srcAppImage, AppImageDesc dstAppImage) throws IOException, PackagerException;\n+    }\n+\n+    @FunctionalInterface\n+    interface PackageTaskAction<T extends Package, U extends AppImageLayout> extends TaskAction {\n+        void execute(PackageBuildEnv<T, U> env) throws IOException, PackagerException;\n+    }\n+\n+    @FunctionalInterface\n+    interface NoArgTaskAction extends TaskAction {\n+        void execute() throws IOException, PackagerException;\n+    }\n+\n+    record TaskConfig(Optional<TaskAction> action) {\n+        TaskConfig {\n+            Objects.requireNonNull(action);\n+        }\n+    }\n+\n+    static final class Builder {\n+\n+        private Builder() {\n+        }\n+\n+        final class TaskBuilder extends TaskSpecBuilder<TaskID> {\n+\n+            private TaskBuilder(TaskID id) {\n+                super(id);\n+            }\n+\n+            private TaskBuilder setAction(TaskAction v) {\n+                action = v;\n+                return this;\n+            }\n+\n+            TaskBuilder noaction() {\n+                action = null;\n+                return this;\n+            }\n+\n+            <T extends Application, U extends ApplicationLayout> TaskBuilder applicationAction(ApplicationImageTaskAction<T, U> action) {\n+                return setAction(action);\n+            }\n+\n+            <T extends Application, U extends AppImageLayout> TaskBuilder appImageAction(AppImageTaskAction<T, U> action) {\n+                return setAction(action);\n+            }\n+\n+            <T extends Package> TaskBuilder copyAction(CopyAppImageTaskAction<T> action) {\n+                return setAction(action);\n+            }\n+\n+            <T extends Package, U extends AppImageLayout> TaskBuilder packageAction(PackageTaskAction<T, U> action) {\n+                return setAction(action);\n+            }\n+\n+            TaskBuilder action(NoArgTaskAction action) {\n+                return setAction(action);\n+            }\n+\n+            @Override\n+            public TaskBuilder addDependent(TaskID v) {\n+                super.addDependent(v);\n+                return this;\n+            }\n+\n+            @Override\n+            public TaskBuilder addDependency(TaskID v) {\n+                super.addDependency(v);\n+                return this;\n+            }\n+\n+            @Override\n+            public TaskBuilder addDependencies(Collection<? extends TaskID> tasks) {\n+                super.addDependencies(tasks);\n+                return this;\n+            }\n+\n+            @Override\n+            public TaskBuilder addDependents(Collection<? extends TaskID> tasks) {\n+                super.addDependents(tasks);\n+                return this;\n+            }\n+\n+            public TaskBuilder addDependencies(TaskID ... tasks) {\n+                return addDependencies(List.of(tasks));\n+            }\n+\n+            public TaskBuilder addDependents(TaskID ... tasks) {\n+                return addDependents(List.of(tasks));\n+            }\n+\n+            Builder add() {\n+                final var config = new TaskConfig(Optional.ofNullable(action));\n+                taskConfig.put(task(), config);\n+                createLinks().forEach(Builder.this::linkTasks);\n+                return Builder.this;\n+            }\n+\n+            private TaskAction action;\n+        }\n+\n+        Builder linkTasks(DirectedEdge<TaskID> edge) {\n+            taskGraphBuilder.addEdge(edge);\n+            if (taskGraphSnapshot != null) {\n+                taskGraphSnapshot = null;\n+            }\n+            return this;\n+        }\n+\n+        Builder linkTasks(TaskID tail, TaskID head) {\n+            return linkTasks(DirectedEdge.create(tail, head));\n+        }\n+\n+        TaskBuilder task(TaskID id) {\n+            return new TaskBuilder(id);\n+        }\n+\n+        Builder excludeDirFromCopying(Path path) {\n+            Objects.requireNonNull(path);\n+            excludeCopyDirs.add(path);\n+            return this;\n+        }\n+\n+        Builder contextMapper(UnaryOperator<TaskContext> v) {\n+            appContextMapper(v);\n+            pkgContextMapper(v);\n+            return this;\n+        }\n+\n+        Builder appContextMapper(UnaryOperator<TaskContext> v) {\n+            appContextMapper = v;\n+            return this;\n+        }\n+\n+        Builder pkgContextMapper(UnaryOperator<TaskContext> v) {\n+            pkgContextMapper = v;\n+            return this;\n+        }\n+\n+        Builder appImageLayoutForPackaging(Function<Package, AppImageLayout> v) {\n+            appImageLayoutForPackaging = v;\n+            return this;\n+        }\n+\n+        FixedDAG<TaskID> taskGraphSnapshot() {\n+            if (taskGraphSnapshot == null) {\n+                taskGraphSnapshot = taskGraphBuilder.create();\n+            }\n+            return taskGraphSnapshot;\n+        }\n+\n+        StartupParameters createStartupParameters(BuildEnv env, Package pkg, Path outputDir) {\n+            return createPackagingTaskContext(env, pkg, outputDir, taskConfig,\n+                    validatedAppImageLayoutForPackaging().apply(pkg));\n+        }\n+\n+        private Function<Package, AppImageLayout> validatedAppImageLayoutForPackaging() {\n+            return Optional.ofNullable(appImageLayoutForPackaging).orElse(Package::packageLayout);\n+        }\n+\n+        PackagingPipeline create() {\n+            return new PackagingPipeline(taskGraphSnapshot(), taskConfig,\n+                    Optional.ofNullable(appContextMapper).orElse(UnaryOperator.identity()),\n+                    Optional.ofNullable(pkgContextMapper).orElse(UnaryOperator.identity()),\n+                    validatedAppImageLayoutForPackaging());\n+        }\n+\n+        private final FixedDAG.Builder<TaskID> taskGraphBuilder = FixedDAG.build();\n+        private final List<Path> excludeCopyDirs = new ArrayList<>();\n+        private final Map<TaskID, TaskConfig> taskConfig = new HashMap<>();\n+        private UnaryOperator<TaskContext> appContextMapper;\n+        private UnaryOperator<TaskContext> pkgContextMapper;\n+        private Function<Package, AppImageLayout> appImageLayoutForPackaging;\n+        private FixedDAG<TaskID> taskGraphSnapshot;\n+    }\n+\n+    static Builder build() {\n+        return new Builder();\n+    }\n+\n+    static Builder buildStandard() {\n+        final var builder = build();\n+\n+        configureApplicationTasks(builder);\n+        configurePackageTasks(builder);\n+\n+        return builder;\n+    }\n+\n+    static Builder configureApplicationTasks(Builder builder) {\n+        builder.task(BuildApplicationTaskID.RUNTIME)\n+                .addDependent(BuildApplicationTaskID.CONTENT)\n+                .applicationAction(ApplicationImageUtils.createWriteRuntimeAction()).add();\n+\n+        builder.task(BuildApplicationTaskID.LAUNCHERS)\n+                .addDependent(BuildApplicationTaskID.CONTENT)\n+                .applicationAction(ApplicationImageUtils.createWriteLaunchersAction()).add();\n+\n+        builder.task(BuildApplicationTaskID.APP_IMAGE_FILE)\n+                .addDependent(PrimaryTaskID.BUILD_APPLICATION_IMAGE)\n+                .applicationAction(ApplicationImageUtils.createWriteAppImageFileAction()).add();\n+\n+        builder.task(BuildApplicationTaskID.CONTENT)\n+                .addDependent(BuildApplicationTaskID.APP_IMAGE_FILE)\n+                .applicationAction(ApplicationImageUtils.createCopyContentAction(() -> builder.excludeCopyDirs)).add();\n+\n+        return builder;\n+    }\n+\n+    static Builder configurePackageTasks(Builder builder) {\n+        builder.task(CopyAppImageTaskID.COPY)\n+                .copyAction(PackagingPipeline::copyAppImage)\n+                .addDependent(PrimaryTaskID.COPY_APP_IMAGE)\n+                .add();\n+\n+        builder.task(PrimaryTaskID.COPY_APP_IMAGE).add();\n+\n+        builder.task(PrimaryTaskID.BUILD_APPLICATION_IMAGE).add();\n+\n+        builder.task(PackageTaskID.RUN_POST_IMAGE_USER_SCRIPT)\n+                .addDependencies(PrimaryTaskID.BUILD_APPLICATION_IMAGE, PrimaryTaskID.COPY_APP_IMAGE)\n+                .addDependency(PackageTaskID.CREATE_CONFIG_FILES)\n+                .addDependent(PackageTaskID.CREATE_PACKAGE_FILE)\n+                .packageAction(PackagingPipeline::runPostAppImageUserScript).add();\n+\n+        builder.task(PackageTaskID.CREATE_CONFIG_FILES)\n+                .addDependent(PackageTaskID.CREATE_PACKAGE_FILE)\n+                .add();\n+\n+        builder.task(PackageTaskID.CREATE_PACKAGE_FILE)\n+                .addDependent(PrimaryTaskID.PACKAGE)\n+                .add();\n+\n+        builder.task(PrimaryTaskID.PACKAGE).add();\n+\n+        return builder;\n+    }\n+\n+    static void copyAppImage(Package pkg, AppImageDesc srcAppImage, AppImageDesc dstAppImage) throws IOException {\n+        copyAppImage(srcAppImage, dstAppImage, true);\n+    }\n+\n+    static void copyAppImage(AppImageDesc srcAppImage, AppImageDesc dstAppImage,\n+            boolean removeAppImageFile) throws IOException {\n+        final var srcLayout = srcAppImage.resolvedAppImagelayout();\n+        final var srcLayoutPathGroup = AppImageLayout.toPathGroup(srcLayout);\n+\n+        if (removeAppImageFile && srcLayout instanceof ApplicationLayout appLayout) {\n+            \/\/ Copy app layout omitting application image info file.\n+            srcLayoutPathGroup.ghostPath(AppImageFile.getPathInAppImage(appLayout));\n+        }\n+\n+        srcLayoutPathGroup.copy(AppImageLayout.toPathGroup(dstAppImage.resolvedAppImagelayout()), LinkOption.NOFOLLOW_LINKS);\n+    }\n+\n+    static void runPostAppImageUserScript(PackageBuildEnv<Package, AppImageLayout> env) throws IOException {\n+        final var appImageDir = env.env().appImageDir();\n+        new ScriptRunner()\n+                .setDirectory(appImageDir)\n+                .setResourceCategoryId(\"resource.post-app-image-script\")\n+                .setScriptNameSuffix(\"post-image\")\n+                .setEnvironmentVariable(\"JpAppImageDir\", appImageDir.toAbsolutePath().toString())\n+                .run(env.env(), env.pkg().app().name());\n+    }\n+\n+    private PackagingPipeline(FixedDAG<TaskID> taskGraph, Map<TaskID, TaskConfig> taskConfig,\n+            UnaryOperator<TaskContext> appContextMapper, UnaryOperator<TaskContext> pkgContextMapper,\n+            Function<Package, AppImageLayout> appImageLayoutForPackaging) {\n+        this.taskGraph = Objects.requireNonNull(taskGraph);\n+        this.taskConfig = Objects.requireNonNull(taskConfig);\n+        this.appContextMapper = Objects.requireNonNull(appContextMapper);\n+        this.pkgContextMapper = Objects.requireNonNull(pkgContextMapper);\n+        this.appImageLayoutForPackaging = Objects.requireNonNull(appImageLayoutForPackaging);\n+    }\n+\n+    private TaskContext createTaskContext(BuildEnv env, Application app) {\n+        return new DefaultTaskContext(taskGraph, env, app, app.asApplicationLayout(), Optional.empty());\n+    }\n+\n+    private TaskContext createTaskContext(PackagingTaskContext packagingContext) {\n+        final var pkgEnv = BuildEnv.withAppImageDir(packagingContext.env.env(), packagingContext.srcAppImage.path());\n+        return new DefaultTaskContext(taskGraph, pkgEnv, packagingContext.env.pkg.app(),\n+                packagingContext.srcAppImage.asApplicationLayout(), Optional.of(packagingContext));\n+    }\n+\n+    private static PackagingTaskContext createPackagingTaskContext(BuildEnv env, Package pkg,\n+            Path outputDir, Map<TaskID, TaskConfig> taskConfig, AppImageLayout appImageLayoutForPackaging) {\n+\n+        Objects.requireNonNull(env);\n+        Objects.requireNonNull(outputDir);\n+        Objects.requireNonNull(taskConfig);\n+        Objects.requireNonNull(appImageLayoutForPackaging);\n+\n+        final AppImageDesc srcAppImageDesc;\n+        final AppImageDesc dstAppImageDesc;\n+        if (pkg.app().runtimeBuilder().isPresent()) {\n+            \/\/ Runtime builder is present, will build application image.\n+            \/\/ appImageDir() should point to a directory where the application image will be created.\n+            srcAppImageDesc = new AppImageDesc(appImageLayoutForPackaging, env.appImageDir());\n+            dstAppImageDesc = srcAppImageDesc;\n+        } else {\n+            srcAppImageDesc = new AppImageDesc(pkg.app().imageLayout(), pkg.predefinedAppImage().orElseGet(() -> {\n+                \/\/ No predefined app image and no runtime builder.\n+                \/\/ This should be runtime packaging.\n+                if (pkg.isRuntimeInstaller()) {\n+                    return env.appImageDir();\n+                } else {\n+                    \/\/ Can't create app image without runtime builder.\n+                    throw new UnsupportedOperationException();\n+                }\n+            }));\n+\n+            if (taskConfig.get(CopyAppImageTaskID.COPY).action().isEmpty()) {\n+                \/\/ \"copy app image\" task action is undefined indicating\n+                \/\/ the package will use provided app image as-is.\n+                dstAppImageDesc = srcAppImageDesc;\n+            } else {\n+                dstAppImageDesc = new AppImageDesc(appImageLayoutForPackaging, env.buildRoot().resolve(\"image\"));\n+            }\n+        }\n+\n+        final var pkgEnv = new PackageBuildEnv<>(\n+                BuildEnv.withAppImageDir(env, dstAppImageDesc.path()), pkg, dstAppImageDesc.appImageLayout(), outputDir);\n+\n+        return new PackagingTaskContext(pkgEnv, srcAppImageDesc);\n+    }\n+\n+    private void execute(TaskContext context) throws PackagerException {\n+        final Map<TaskID, Callable<Void>> tasks = taskConfig.entrySet().stream().collect(toMap(Map.Entry::getKey, task -> {\n+            return createTask(context, task.getKey(), task.getValue());\n+        }));\n+\n+        final var builder = new TaskPipelineBuilder();\n+\n+        for (final var tail : taskGraph.nodes()) {\n+            for (final var head : taskGraph.getHeadsOf(tail)) {\n+                builder.linkTasks(tasks.get(tail), tasks.get(head));\n+            }\n+        }\n+\n+        try {\n+            builder.create().call();\n+        } catch (Exception ex) {\n+            if (ex instanceof PackagerException pex) {\n+                throw pex;\n+            } else if (ex instanceof ExceptionBox bex) {\n+                throw new PackagerException(bex.getCause());\n+            } else {\n+                throw new PackagerException(ex);\n+            }\n+        }\n+    }\n+\n+    private record PackagingTaskContext(PackageBuildEnv<Package, AppImageLayout> env,\n+            AppImageDesc srcAppImage) implements TaskContext, StartupParameters {\n+\n+        PackagingTaskContext {\n+            Objects.requireNonNull(env);\n+            Objects.requireNonNull(srcAppImage);\n+        }\n+\n+        @Override\n+        public BuildEnv packagingEnv() {\n+            return env.env;\n+        }\n+\n+        @Override\n+        public boolean test(TaskID taskID) {\n+            if (taskID == BuildApplicationTaskID.APP_IMAGE_FILE) {\n+                \/\/ Application image for packaging, skip adding application image info file.\n+                return false;\n+            }\n+\n+            return true;\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public void execute(TaskAction taskAction) throws IOException, PackagerException {\n+            if (taskAction instanceof PackageTaskAction<?, ?>) {\n+                ((PackageTaskAction<Package, AppImageLayout>)taskAction).execute(env);\n+            } else if (taskAction instanceof CopyAppImageTaskAction<?>) {\n+                ((CopyAppImageTaskAction<Package>)taskAction).execute(env.pkg(),\n+                        srcAppImage, new AppImageDesc(env.envLayout(), env.env().appImageDir()));\n+            } else {\n+                throw new IllegalArgumentException();\n+            }\n+        }\n+\n+        AppImageBuildEnv<Application, AppImageLayout> appImageBuildEnv() {\n+            return env.appImageBuildEnv();\n+        }\n+    }\n+\n+    private record DefaultTaskContext(FixedDAG<TaskID> taskGraph, BuildEnv env, Application app,\n+            Optional<ApplicationLayout> appLayout, Optional<PackagingTaskContext> pkg) implements TaskContext {\n+\n+        DefaultTaskContext {\n+            Objects.requireNonNull(taskGraph);\n+            Objects.requireNonNull(env);\n+            Objects.requireNonNull(app);\n+            Objects.requireNonNull(appLayout);\n+            Objects.requireNonNull(pkg);\n+        }\n+\n+        @Override\n+        public boolean test(TaskID taskID) {\n+            final var isBuildApplicationImageTask = isBuildApplicationImageTask(taskID);\n+            final var isCopyAppImageTask = isCopyAppImageTask(taskID);\n+            final var isPackageTask = !isBuildApplicationImageTask && !isCopyAppImageTask;\n+\n+            if (pkg.isPresent() && !pkg.orElseThrow().test(taskID)) {\n+                return false;\n+            } else if (pkg.isEmpty() && isPackageTask) {\n+                \/\/ Building application image, skip packaging tasks.\n+                return false;\n+            } else if (app.runtimeBuilder().isEmpty() && isBuildApplicationImageTask && !isCopyAppImageTask) {\n+                \/\/ Runtime builder is not present, skip building application image tasks.\n+                return false;\n+            } else if (app.runtimeBuilder().isPresent() && isCopyAppImageTask && !isBuildApplicationImageTask) {\n+                \/\/ Runtime builder is present, skip copying app image tasks.\n+                return false;\n+            } else {\n+                return true;\n+            }\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public void execute(TaskAction taskAction) throws IOException, PackagerException {\n+            if (taskAction instanceof AppImageTaskAction<?, ?>) {\n+                final var taskEnv = pkg.map(PackagingTaskContext::appImageBuildEnv).orElseGet(this::appBuildEnv);\n+                ((AppImageTaskAction<Application, AppImageLayout>)taskAction).execute(taskEnv);\n+            } else if (taskAction instanceof ApplicationImageTaskAction<?, ?>) {\n+                ((ApplicationImageTaskAction<Application, ApplicationLayout>)taskAction).execute(appBuildEnv());\n+            } else if (taskAction instanceof NoArgTaskAction noArgAction) {\n+                noArgAction.execute();\n+            } else {\n+                pkg.orElseThrow().execute(taskAction);\n+            }\n+        }\n+\n+        private boolean isBuildApplicationImageTask(TaskID taskID) {\n+            return (taskID == PrimaryTaskID.BUILD_APPLICATION_IMAGE\n+                    || taskGraph.getAllHeadsOf(taskID).contains(PrimaryTaskID.BUILD_APPLICATION_IMAGE));\n+        }\n+\n+        private boolean isCopyAppImageTask(TaskID taskID) {\n+            return (taskID == PrimaryTaskID.COPY_APP_IMAGE\n+                    || taskGraph.getAllHeadsOf(taskID).contains(PrimaryTaskID.COPY_APP_IMAGE));\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        private <T extends AppImageLayout> AppImageBuildEnv<Application, T> appBuildEnv() {\n+            return new AppImageBuildEnv<>(env, app, (T)appLayout.orElseThrow());\n+        }\n+    }\n+\n+    private static Callable<Void> createTask(TaskContext context, TaskID id, TaskConfig config) {\n+        Objects.requireNonNull(context);\n+        Objects.requireNonNull(id);\n+        Objects.requireNonNull(config);\n+        return () -> {\n+            if (config.action.isPresent() && context.test(id)) {\n+                try {\n+                    context.execute(config.action.orElseThrow());\n+                } catch (ExceptionBox ex) {\n+                    throw ExceptionBox.rethrowUnchecked(ex);\n+                }\n+            }\n+            return null;\n+        };\n+    }\n+\n+    private final FixedDAG<TaskID> taskGraph;\n+    private final Map<TaskID, TaskConfig> taskConfig;\n+    private final Function<Package, AppImageLayout> appImageLayoutForPackaging;\n+    private final UnaryOperator<TaskContext> appContextMapper;\n+    private final UnaryOperator<TaskContext> pkgContextMapper;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PackagingPipeline.java","additions":618,"deletions":0,"binary":false,"changes":618,"status":"added"},{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.jpackage.internal;\n-\n-import java.nio.file.Path;\n-\n-\/**\n- *\n- * Platform package of an application.\n- *\/\n-interface PlatformPackage {\n-\n-    \/**\n-     * Platform-specific package name.\n-     *\/\n-    String name();\n-\n-    \/**\n-     * Root directory where sources for packaging tool should be stored. On Unix\n-     * systems contents of this directory will be installed in \"\/\" directory.\n-     *\/\n-    Path sourceRoot();\n-\n-    \/**\n-     * Source application layout from which to build the package.\n-     *\/\n-    ApplicationLayout sourceApplicationLayout();\n-\n-    \/**\n-     * Application layout of the installed package.\n-     *\/\n-    ApplicationLayout installedApplicationLayout();\n-}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PlatformPackage.java","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"},{"patch":"@@ -0,0 +1,186 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.I18N.buildConfigException;\n+import static jdk.jpackage.internal.model.RuntimeBuilder.getDefaultModulePath;\n+import static jdk.jpackage.internal.util.function.ThrowingSupplier.toSupplier;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.nio.file.Files;\n+import java.nio.file.LinkOption;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.function.Supplier;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.LauncherStartupInfo;\n+import jdk.jpackage.internal.model.RuntimeBuilder;\n+import jdk.jpackage.internal.util.FileUtils;\n+import jdk.jpackage.internal.util.PathGroup;\n+\n+final class RuntimeBuilderBuilder {\n+\n+    RuntimeBuilder create() {\n+        return impl.get();\n+    }\n+\n+    RuntimeBuilderBuilder modulePath(List<Path> v) {\n+        modulePath = v;\n+        return this;\n+    }\n+\n+    RuntimeBuilderBuilder forRuntime(Path predefinedRuntimeImage) {\n+        impl = new CopyingRuntime(this, predefinedRuntimeImage);\n+        return this;\n+    }\n+\n+    RuntimeBuilderConfigBuilder forNewRuntime(List<LauncherStartupInfo> startupInfos) {\n+        return new RuntimeBuilderConfigBuilder(startupInfos);\n+    }\n+\n+    final class RuntimeBuilderConfigBuilder {\n+\n+        RuntimeBuilderConfigBuilder(List<LauncherStartupInfo> startupInfos) {\n+            Objects.requireNonNull(startupInfos);\n+            if (startupInfos.isEmpty()) {\n+                throw new IllegalArgumentException();\n+            }\n+            this.startupInfos = startupInfos;\n+        }\n+\n+        RuntimeBuilderBuilder appy() {\n+            impl = new BuildingRuntime(RuntimeBuilderBuilder.this, addModules,\n+                    limitModules, validatedOptions(), startupInfos);\n+            return RuntimeBuilderBuilder.this;\n+        }\n+\n+        RuntimeBuilderConfigBuilder addModules(Set<String> v) {\n+            addModules = v;\n+            return this;\n+        }\n+\n+        RuntimeBuilderConfigBuilder limitModules(Set<String> v) {\n+            limitModules = v;\n+            return this;\n+        }\n+\n+        RuntimeBuilderConfigBuilder options(List<String> v) {\n+            options = v;\n+            return this;\n+        }\n+\n+        private List<String> validatedOptions() {\n+            return Optional.ofNullable(options).orElse(DEFAULT_JLINK_OPTIONS);\n+        }\n+\n+        private Set<String> addModules;\n+        private Set<String> limitModules;\n+        private List<String> options;\n+        private final List<LauncherStartupInfo> startupInfos;\n+\n+        private static final List<String> DEFAULT_JLINK_OPTIONS = List.of(\n+                \"--strip-native-commands\",\n+                \"--strip-debug\",\n+                \"--no-man-pages\",\n+                \"--no-header-files\"\n+        );\n+    }\n+\n+    private static RuntimeBuilder createCopyingRuntimeBuilder(Path runtimeDir,\n+            Path... modulePath) throws ConfigException {\n+        if (!Files.exists(runtimeDir)) {\n+            throw buildConfigException()\n+                    .message(\"message.runtime-image-dir-does-not-exist\",\n+                            \"--runtime-image\", runtimeDir)\n+                    .advice(\"message.runtime-image-dir-does-not-exist.advice\",\n+                            \"--runtime-image\")\n+                    .create();\n+        }\n+\n+        return appImageLayout -> {\n+            try {\n+                \/\/ copy whole runtime, skipping jmods and src.zip\n+                final var srcPathGroup = new PathGroup(Map.of(\"root\", runtimeDir));\n+                \/\/ JDK8\n+                srcPathGroup.ghostPath(runtimeDir.resolve(\"src.zip\"));\n+                \/\/ Newer JDKs\n+                srcPathGroup.ghostPath(runtimeDir.resolve(\"lib\/src.zip\"));\n+                srcPathGroup.ghostPath(runtimeDir.resolve(\"jmods\"));\n+\n+                srcPathGroup.copy(new PathGroup(Map.of(\"root\", appImageLayout.runtimeDirectory())),\n+                        LinkOption.NOFOLLOW_LINKS);\n+\n+                \/\/ if module-path given - copy modules to appDir\/mods\n+                List<Path> defaultModulePath = getDefaultModulePath();\n+                Path dest = ((ApplicationLayout)appImageLayout).appModsDirectory();\n+\n+                for (Path mp : modulePath) {\n+                    if (!defaultModulePath.contains(mp.toAbsolutePath())) {\n+                        FileUtils.copyRecursive(mp, dest);\n+                    }\n+                }\n+            } catch (IOException ex) {\n+                throw new UncheckedIOException(ex);\n+            }\n+        };\n+    }\n+\n+    private record CopyingRuntime(RuntimeBuilderBuilder thiz, Path predefinedRuntimeImage)\n+            implements Supplier<RuntimeBuilder> {\n+\n+        @Override\n+        public RuntimeBuilder get() {\n+            return toSupplier(() -> createCopyingRuntimeBuilder(\n+                    predefinedRuntimeImage,\n+                    Optional.ofNullable(thiz.modulePath).orElseGet(List::of).toArray(Path[]::new))\n+            ).get();\n+        }\n+    }\n+\n+    private record BuildingRuntime(RuntimeBuilderBuilder thiz, Set<String> addModules,\n+            Set<String> limitModules, List<String> options,\n+            List<LauncherStartupInfo> startupInfos) implements Supplier<RuntimeBuilder> {\n+\n+        @Override\n+        public RuntimeBuilder get() {\n+            return toSupplier(() -> JLinkRuntimeBuilder.createJLinkRuntimeBuilder(\n+                    Optional.ofNullable(thiz.modulePath).orElseGet(List::of),\n+                    Optional.ofNullable(addModules).orElseGet(Set::of),\n+                    Optional.ofNullable(limitModules).orElseGet(Set::of),\n+                    Optional.ofNullable(options).orElseGet(List::of),\n+                    startupInfos)\n+            ).get();\n+        }\n+    }\n+\n+    private List<Path> modulePath;\n+    private Supplier<RuntimeBuilder> impl;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/RuntimeBuilderBuilder.java","additions":186,"deletions":0,"binary":false,"changes":186,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,3 +36,0 @@\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n@@ -78,2 +75,2 @@\n-    public void run(Map<String, ? super Object> params) throws IOException {\n-        String scriptName = String.format(\"%s-%s%s\", APP_NAME.fetchFrom(params),\n+    public void run(BuildEnv env, String name) throws IOException {\n+        String scriptName = String.format(\"%s-%s%s\", name,\n@@ -81,3 +78,2 @@\n-        Path scriptPath = CONFIG_ROOT.fetchFrom(params).resolve(\n-                scriptName);\n-        createResource(null, params)\n+        Path scriptPath = env.configDir().resolve(scriptName);\n+        env.createResource(null)\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ScriptRunner.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.util.OperatingSystem;\n@@ -33,1 +32,0 @@\n-import java.nio.file.LinkOption;\n@@ -44,2 +42,0 @@\n-import java.util.function.BiFunction;\n-import java.util.function.Function;\n@@ -48,1 +44,2 @@\n-import jdk.jpackage.internal.util.FileUtils;\n+import static jdk.jpackage.internal.ApplicationLayoutUtils.PLATFORM_APPLICATION_LAYOUT;\n+import static jdk.jpackage.internal.model.RuntimeBuilder.getDefaultModulePath;\n@@ -51,1 +48,1 @@\n- * StandardBundlerParam\n+ * Standard bundler parameters.\n@@ -53,3 +50,1 @@\n- * A parameter to a bundler.\n- *\n- * Also contains static definitions of all of the common bundler parameters.\n+ * Contains static definitions of all of the common bundler parameters.\n@@ -61,1 +56,1 @@\n-class StandardBundlerParam<T> extends BundlerParamInfo<T> {\n+final class StandardBundlerParam {\n@@ -72,23 +67,2 @@\n-    StandardBundlerParam(String id, Class<T> valueType,\n-            Function<Map<String, ? super Object>, T> defaultValueFunction,\n-            BiFunction<String, Map<String, ? super Object>, T> stringConverter)\n-    {\n-        this.id = id;\n-        this.valueType = valueType;\n-        this.defaultValueFunction = defaultValueFunction;\n-        this.stringConverter = stringConverter;\n-    }\n-\n-    static final StandardBundlerParam<LauncherData> LAUNCHER_DATA =\n-            new StandardBundlerParam<>(\n-                    \"launcherData\",\n-                    LauncherData.class,\n-                    params -> {\n-                        try {\n-                            return LauncherData.create(params);\n-                        } catch (ConfigException | IOException ex) {\n-                            throw new RuntimeException(ex);\n-                        }\n-                    },\n-                    null\n-            );\n+    static final BundlerParamInfo<LauncherData> LAUNCHER_DATA = BundlerParamInfo.createBundlerParam(\n+            LauncherData.class, LauncherData::create);\n@@ -96,2 +70,2 @@\n-    static final StandardBundlerParam<Path> SOURCE_DIR =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Path> SOURCE_DIR =\n+            new BundlerParamInfo<>(\n@@ -104,2 +78,2 @@\n-    static final StandardBundlerParam<Path> OUTPUT_DIR =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Path> OUTPUT_DIR =\n+            new BundlerParamInfo<>(\n@@ -114,2 +88,2 @@\n-    static final StandardBundlerParam<Path> MAIN_JAR =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Path> MAIN_JAR =\n+            new BundlerParamInfo<>(\n@@ -122,2 +96,12 @@\n-    static final StandardBundlerParam<String> MAIN_CLASS =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<AppImageFile> PREDEFINED_APP_IMAGE_FILE = BundlerParamInfo.createBundlerParam(\n+            AppImageFile.class, params -> {\n+                if (hasPredefinedAppImage(params)) {\n+                    var appImage = getPredefinedAppImage(params);\n+                    return AppImageFile.load(appImage, PLATFORM_APPLICATION_LAYOUT);\n+                } else {\n+                    return null;\n+                }\n+            });\n+\n+    static final BundlerParamInfo<String> MAIN_CLASS =\n+            new BundlerParamInfo<>(\n@@ -130,2 +114,1 @@\n-                            return AppImageFile.extractMainClass(\n-                                    getPredefinedAppImage(params));\n+                            PREDEFINED_APP_IMAGE_FILE.fetchFrom(params).getMainClass();\n@@ -138,2 +121,2 @@\n-    static final StandardBundlerParam<Path> PREDEFINED_RUNTIME_IMAGE =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Path> PREDEFINED_RUNTIME_IMAGE =\n+            new BundlerParamInfo<>(\n@@ -146,2 +129,2 @@\n-    static final StandardBundlerParam<Path> PREDEFINED_APP_IMAGE =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Path> PREDEFINED_APP_IMAGE =\n+            new BundlerParamInfo<>(\n@@ -154,2 +137,2 @@\n-    static final StandardBundlerParam<String> NAME =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<String> NAME =\n+            new BundlerParamInfo<>(\n@@ -164,2 +147,2 @@\n-    static final StandardBundlerParam<String> APP_NAME =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<String> APP_NAME =\n+            new BundlerParamInfo<>(\n@@ -169,1 +152,0 @@\n-                        Path appImage = PREDEFINED_APP_IMAGE.fetchFrom(params);\n@@ -171,3 +153,2 @@\n-                        if (appImage != null) {\n-                            String name = AppImageFile.extractAppName(appImage);\n-                            appName  = (name != null) ? name : appName;\n+                        if (hasPredefinedAppImage(params)) {\n+                            appName = PREDEFINED_APP_IMAGE_FILE.fetchFrom(params).getLauncherName();\n@@ -191,2 +172,2 @@\n-    static final StandardBundlerParam<String> INSTALLER_NAME =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<String> INSTALLER_NAME =\n+            new BundlerParamInfo<>(\n@@ -203,2 +184,2 @@\n-    static final StandardBundlerParam<Path> ICON =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Path> ICON =\n+            new BundlerParamInfo<>(\n@@ -211,2 +192,2 @@\n-    static final StandardBundlerParam<String> ABOUT_URL =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<String> ABOUT_URL =\n+            new BundlerParamInfo<>(\n@@ -219,2 +200,2 @@\n-    static final StandardBundlerParam<String> VENDOR =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<String> VENDOR =\n+            new BundlerParamInfo<>(\n@@ -227,2 +208,2 @@\n-    static final StandardBundlerParam<String> DESCRIPTION =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<String> DESCRIPTION =\n+            new BundlerParamInfo<>(\n@@ -237,2 +218,2 @@\n-    static final StandardBundlerParam<String> COPYRIGHT =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<String> COPYRIGHT =\n+            new BundlerParamInfo<>(\n@@ -247,2 +228,2 @@\n-    static final StandardBundlerParam<List<String>> ARGUMENTS =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<List<String>> ARGUMENTS =\n+            new BundlerParamInfo<>(\n@@ -256,2 +237,2 @@\n-    static final StandardBundlerParam<List<String>> JAVA_OPTIONS =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<List<String>> JAVA_OPTIONS =\n+            new BundlerParamInfo<>(\n@@ -264,2 +245,2 @@\n-    static final StandardBundlerParam<String> VERSION =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<String> VERSION =\n+            new BundlerParamInfo<>(\n@@ -272,2 +253,2 @@\n-    static final StandardBundlerParam<String> RELEASE =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<String> RELEASE =\n+            new BundlerParamInfo<>(\n@@ -280,2 +261,2 @@\n-    public static final StandardBundlerParam<String> LICENSE_FILE =\n-            new StandardBundlerParam<>(\n+    public static final BundlerParamInfo<String> LICENSE_FILE =\n+            new BundlerParamInfo<>(\n@@ -288,2 +269,2 @@\n-    static final StandardBundlerParam<Path> TEMP_ROOT =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Path> TEMP_ROOT =\n+            new BundlerParamInfo<>(\n@@ -302,2 +283,2 @@\n-    public static final StandardBundlerParam<Path> CONFIG_ROOT =\n-            new StandardBundlerParam<>(\n+    public static final BundlerParamInfo<Path> CONFIG_ROOT =\n+            new BundlerParamInfo<>(\n@@ -318,2 +299,2 @@\n-    static final StandardBundlerParam<Boolean> VERBOSE  =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Boolean> VERBOSE  =\n+            new BundlerParamInfo<>(\n@@ -328,2 +309,2 @@\n-    static final StandardBundlerParam<Boolean> SHORTCUT_HINT  =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Boolean> SHORTCUT_HINT  =\n+            new BundlerParamInfo<>(\n@@ -337,2 +318,2 @@\n-    static final StandardBundlerParam<Boolean> MENU_HINT  =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Boolean> MENU_HINT  =\n+            new BundlerParamInfo<>(\n@@ -346,2 +327,2 @@\n-    static final StandardBundlerParam<Path> RESOURCE_DIR =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Path> RESOURCE_DIR =\n+            new BundlerParamInfo<>(\n@@ -355,1 +336,1 @@\n-            new StandardBundlerParam<>(\n+            new BundlerParamInfo<>(\n@@ -362,2 +343,2 @@\n-    static final StandardBundlerParam<Boolean> LAUNCHER_AS_SERVICE =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Boolean> LAUNCHER_AS_SERVICE =\n+            new BundlerParamInfo<>(\n@@ -374,2 +355,2 @@\n-    static final StandardBundlerParam<List<Map<String, ? super Object>>> ADD_LAUNCHERS =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<List<Map<String, ? super Object>>> ADD_LAUNCHERS =\n+            new BundlerParamInfo<>(\n@@ -385,1 +366,1 @@\n-    static final StandardBundlerParam\n+    static final BundlerParamInfo\n@@ -387,1 +368,1 @@\n-            new StandardBundlerParam<>(\n+            new BundlerParamInfo<>(\n@@ -397,2 +378,2 @@\n-    static final StandardBundlerParam<List<String>> FA_EXTENSIONS =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<List<String>> FA_EXTENSIONS =\n+            new BundlerParamInfo<>(\n@@ -406,2 +387,2 @@\n-    static final StandardBundlerParam<List<String>> FA_CONTENT_TYPE =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<List<String>> FA_CONTENT_TYPE =\n+            new BundlerParamInfo<>(\n@@ -415,2 +396,2 @@\n-    static final StandardBundlerParam<String> FA_DESCRIPTION =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<String> FA_DESCRIPTION =\n+            new BundlerParamInfo<>(\n@@ -423,2 +404,2 @@\n-    static final StandardBundlerParam<Path> FA_ICON =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Path> FA_ICON =\n+            new BundlerParamInfo<>(\n@@ -432,2 +413,2 @@\n-    static final BundlerParamInfo<List<String>> DMG_CONTENT =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<List<Path>> DMG_CONTENT =\n+            new BundlerParamInfo<>(\n@@ -435,1 +416,1 @@\n-                    (Class<List<String>>) (Object)List.class,\n+                    (Class<List<Path>>) (Object)List.class,\n@@ -437,1 +418,1 @@\n-                    (s, p) -> Arrays.asList(s.split(\",\"))\n+                    (s, p) -> Stream.of(s.split(\",\")).map(Path::of).toList()\n@@ -441,2 +422,2 @@\n-    static final StandardBundlerParam<List<String>> APP_CONTENT =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<List<Path>> APP_CONTENT =\n+            new BundlerParamInfo<>(\n@@ -444,1 +425,1 @@\n-                    (Class<List<String>>) (Object)List.class,\n+                    (Class<List<Path>>) (Object)List.class,\n@@ -446,1 +427,1 @@\n-                    (s, p) -> Arrays.asList(s.split(\",\"))\n+                    (s, p) -> Stream.of(s.split(\",\")).map(Path::of).toList()\n@@ -451,1 +432,1 @@\n-            new StandardBundlerParam<>(\n+            new BundlerParamInfo<>(\n@@ -496,1 +477,1 @@\n-            new StandardBundlerParam<>(\n+            new BundlerParamInfo<>(\n@@ -506,1 +487,1 @@\n-            new StandardBundlerParam<>(\n+            new BundlerParamInfo<>(\n@@ -514,2 +495,2 @@\n-    static final StandardBundlerParam<List<String>> JLINK_OPTIONS =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<List<String>> JLINK_OPTIONS =\n+            new BundlerParamInfo<>(\n@@ -523,1 +504,1 @@\n-            new StandardBundlerParam<>(\n+            new BundlerParamInfo<>(\n@@ -530,2 +511,2 @@\n-    static final StandardBundlerParam<Boolean> SIGN_BUNDLE =\n-            new StandardBundlerParam<>(\n+    static final BundlerParamInfo<Boolean> SIGN_BUNDLE =\n+            new BundlerParamInfo<>(\n@@ -539,16 +520,0 @@\n-    static final StandardBundlerParam<Boolean> APP_STORE =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.MAC_APP_STORE.getId(),\n-            Boolean.class,\n-            params -> {\n-                if (hasPredefinedAppImage(params)) {\n-                    return AppImageFile.load(getPredefinedAppImage(params))\n-                            .isAppStore();\n-                }\n-                return false;\n-            },\n-            \/\/ valueOf(null) is false, we actually do want null in some cases\n-            (s, p) -> (s == null || \"null\".equalsIgnoreCase(s)) ?\n-                    null : Boolean.valueOf(s)\n-        );\n-\n@@ -571,15 +536,7 @@\n-        return PREDEFINED_APP_IMAGE.fetchFrom(params);\n-    }\n-\n-    static void copyPredefinedRuntimeImage(Map<String, ? super Object> params,\n-            ApplicationLayout appLayout) throws IOException, ConfigException {\n-        Path topImage = PREDEFINED_RUNTIME_IMAGE.fetchFrom(params);\n-\n-        if (OperatingSystem.isMacOS()) {\n-            \/\/ On Mac topImage can be runtime root or runtime home.\n-            Path runtimeHome = topImage.resolve(\"Contents\/Home\");\n-            if (Files.isDirectory(runtimeHome)) {\n-                \/\/ topImage references runtime root, adjust it to pick data from\n-                \/\/ runtime home\n-                topImage = runtimeHome;\n-            }\n+        Path applicationImage = PREDEFINED_APP_IMAGE.fetchFrom(params);\n+        if (applicationImage != null && !IOUtils.exists(applicationImage)) {\n+            throw new RuntimeException(\n+                    MessageFormat.format(I18N.getString(\n+                            \"message.app-image-dir-does-not-exist\"),\n+                            PREDEFINED_APP_IMAGE.getID(),\n+                            applicationImage.toString()));\n@@ -587,24 +544,1 @@\n-\n-        \/\/ copy whole runtime, need to skip jmods and src.zip\n-        final List<Path> excludes = Arrays.asList(Path.of(\"jmods\"), Path.of(\"src.zip\"));\n-        FileUtils.copyRecursive(topImage, appLayout.runtimeHomeDirectory(),\n-                        excludes, LinkOption.NOFOLLOW_LINKS);\n-\n-        \/\/ if module-path given - copy modules to appDir\/mods\n-        List<Path> modulePath = MODULE_PATH.fetchFrom(params);\n-        List<Path> defaultModulePath = getDefaultModulePath();\n-        Path dest = appLayout.appModsDirectory();\n-\n-        if (dest != null) {\n-            for (Path mp : modulePath) {\n-                if (!defaultModulePath.contains(mp)) {\n-                    Files.createDirectories(dest);\n-                    FileUtils.copyRecursive(mp, dest);\n-                }\n-            }\n-        }\n-    }\n-\n-    private static List<Path> getDefaultModulePath() {\n-        return List.of(\n-                Path.of(System.getProperty(\"java.home\"), \"jmods\").toAbsolutePath());\n+        return applicationImage;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/StandardBundlerParam.java","additions":109,"deletions":175,"binary":false,"changes":284,"status":"modified"},{"patch":"@@ -0,0 +1,121 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+\n+import java.lang.reflect.Modifier;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+import jdk.jpackage.internal.util.PathGroup;\n+import static jdk.jpackage.internal.util.function.ThrowingFunction.toFunction;\n+import static jdk.jpackage.internal.util.PathUtils.resolveNullablePath;\n+\n+\n+\/**\n+ * Generic app image directory layout.\n+ *\n+ * App image layout is a collection of files and directories with specific roles\n+ * (executables, configuration files, etc.) sharing the same root directory.\n+ *\n+ * The layout is \"unresolved\" if the root directory is an empty string and\n+ * \"resolved\" otherwise.\n+ *\/\n+public interface AppImageLayout {\n+\n+    \/**\n+     * A path to Java runtime directory.\n+     * The directory should have standard JDK subdirectories like \"bin\", \"lib\", etc.\n+     *\n+     * @return Java runtime sub-directory within this app image\n+     *\/\n+    Path runtimeDirectory();\n+\n+    \/**\n+     * Root directory of this app image.\n+     * It should normally be equal to <code>Path.of(\"\")<\/code> for unresolved layout.\n+     *\n+     * @return the root directory of this app image\n+     *\/\n+    Path rootDirectory();\n+\n+    \/**\n+     * Creates a copy of this app image resolved at the given root directory.\n+     *\n+     * @param root path to a directory at which to resolve the layout\n+     * @return a copy of this app image resolved at the given root directory\n+     *\/\n+    AppImageLayout resolveAt(Path root);\n+\n+    \/**\n+     * Default implementation of {@link AppImageLayout} interface.\n+    *\/\n+    record Stub(Path rootDirectory, Path runtimeDirectory) implements AppImageLayout {\n+\n+        @Override\n+        public AppImageLayout resolveAt(Path base) {\n+            return new Stub(resolveNullablePath(base, rootDirectory), resolveNullablePath(base, runtimeDirectory));\n+        }\n+    }\n+\n+    \/**\n+     * Creates {@link PathGroup} object from the given {@link AppImageLayout}\n+     * instance.\n+     *\n+     * It will call every non-static accessible method without parameters and with\n+     * {@link Path} return type of the given {@link AppImageLayout} instance except\n+     * {@link #rootDirectory()} method.\n+     * <p>\n+     * For every call, it will save the return value in the output {@link PathGroup}\n+     * object under the key equals the name of a function used in the call.\n+     *\n+     * @param appImageLayout source layout object\n+     * @return {@link PathGroup} object constructed from the given source layout\n+     *         object\n+     *\/\n+    public static PathGroup toPathGroup(AppImageLayout appImageLayout) {\n+        return new PathGroup(Stream.of(appImageLayout.getClass().getInterfaces())\n+                \/\/ For all interfaces (it should be one, but multiple is OK)\n+                \/\/ extending AppImageLayout interface call all non-static methods\n+                \/\/ without parameters and with java.nio.file.Path return type.\n+                \/\/ Create a map from the names of methods called and return values.\n+                .filter(AppImageLayout.class::isAssignableFrom)\n+                .map(Class::getMethods)\n+                .flatMap(Stream::of)\n+                .filter(m -> !Modifier.isStatic(m.getModifiers()))\n+                .filter(m -> !\"rootDirectory\".equals(m.getName()))\n+                .filter(m -> {\n+                    return m.getReturnType().isAssignableFrom(Path.class) && m.getParameterCount() == 0;\n+                }).<Map.Entry<String, Path>>mapMulti((m, consumer) -> {\n+                    Optional.ofNullable(toFunction(m::invoke).apply(appImageLayout)).ifPresent(path -> {\n+                        consumer.accept(Map.entry(m.getName(), (Path)path));\n+                    });\n+                }).collect(HashMap::new, (ctnr, e) -> {\n+                    ctnr.put(e.getKey(), e.getValue());\n+                }, Map::putAll));\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/AppImageLayout.java","additions":121,"deletions":0,"binary":false,"changes":121,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+\/**\n+ * App image packaging type.\n+ *\n+ * @see StandardPackageType\n+ *\/\n+public final class AppImagePackageType implements PackageType {\n+\n+    private AppImagePackageType() {\n+    }\n+\n+    \/**\n+     * Singleton\n+     *\/\n+    public static final AppImagePackageType APP_IMAGE = new AppImagePackageType();\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/AppImagePackageType.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,251 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+\/**\n+ * A generic application for packaging.\n+ *\n+ * @apiNote All paths of startup configurations of application launchers\n+ *          returned by {@link #launchers()} call must be relative to the path\n+ *          returned by {@link #srcDir()} call.\n+ *\n+ * @see Package\n+ *\/\n+public interface Application {\n+\n+    \/**\n+     * Gets the name of this application.\n+     *\n+     * @return the name of this application\n+     *\/\n+    String name();\n+\n+    \/**\n+     * Gets the description of this application.\n+     *\n+     * @return the description of this application\n+     *\/\n+    String description();\n+\n+    \/**\n+     * Gets the version of this application.\n+     *\n+     * @return the version of this application\n+     *\/\n+    String version();\n+\n+    \/**\n+     * Gets the vendor of this application.\n+     *\n+     * @return the vendor of this application\n+     *\/\n+    String vendor();\n+\n+    \/**\n+     * Gets the copyright of this application.\n+     *\n+     * @return the copyright of this application\n+     *\/\n+    String copyright();\n+\n+    \/**\n+     * Gets the source directory of this application if available or an empty\n+     * {@link Optional} instance.\n+     * <p>\n+     * Source directory is a directory with the applications's classes and other\n+     * resources.\n+     *\n+     * @return the source directory of this application\n+     *\/\n+    Optional<Path> srcDir();\n+\n+    \/**\n+     * Gets the input content directories of this application.\n+     * <p>\n+     * Contents of the content directories will be copied as-is into the dedicated\n+     * location of the application image.\n+     *\n+     * @see ApplicationLayout#contentDirectory\n+     *\n+     * @return the input content directories of this application\n+     *\/\n+    List<Path> contentDirs();\n+\n+    \/**\n+     * Gets the unresolved app image layout of this application.\n+     *\n+     * @return the unresolved app image layout of this application\n+     *\/\n+    AppImageLayout imageLayout();\n+\n+    \/**\n+     * Gets the unresolved app image layout of this application as\n+     * {@link ApplicationLayout} type or an empty {@link Optional} instance if the\n+     * return value of {@link #imageLayout()} call is not an instance of\n+     * {@link ApplicationLayout} type.\n+     * <p>\n+     * Returns an empty {@link Optional} instance if {@link #isRuntime()} returns\n+     * <code>true<\/code>.\n+     *\n+     * @see #isRuntime\n+     *\n+     * @return the unresolved app image layout of this application as\n+     *         {@link ApplicationLayout}\n+     *\/\n+    default Optional<ApplicationLayout> asApplicationLayout() {\n+        if (imageLayout() instanceof ApplicationLayout layout) {\n+            return Optional.of(layout);\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    \/**\n+     * Gets the runtime builder of this application if available or an empty\n+     * {@link Optional} instance.\n+     *\n+     * @return the runtime builder of this application\n+     *\/\n+    Optional<RuntimeBuilder> runtimeBuilder();\n+\n+    \/**\n+     * Gets the name of the root app image directory of this application.\n+     *\n+     * @return the name of the root app image directory of this application\n+     *\/\n+    default Path appImageDirName() {\n+        return Path.of(name());\n+    }\n+\n+    \/**\n+     * Gets the application launchers of this application.\n+     * <p>\n+     * If the returned list is not empty, the first element in the list is the main\n+     * launcher.\n+     * <p>\n+     * Returns an empty list if {@link #isRuntime()} returns <code>true<\/code>.\n+     *\n+     * @see #mainLauncher()\n+     * @see #additionalLaunchers()\n+     * @see #isRuntime()\n+     *\n+     * @return the application launchers of this application\n+     *\/\n+    List<Launcher> launchers();\n+\n+    \/**\n+     * Returns the main application launcher of this application or an empty\n+     * {@link Optional} instance if the application doesn't have launchers.\n+     * <p>\n+     * Returns an empty {@link Optional} instance if {@link #isRuntime()} returns\n+     * <code>true<\/code>.\n+     *\n+     * @see #launchers()\n+     * @see #additionalLaunchers()\n+     * @see #isRuntime()\n+     *\n+     * @return the main application launcher of this application\n+     *\/\n+    default Optional<Launcher> mainLauncher() {\n+        return ApplicationLaunchers.fromList(launchers()).map(ApplicationLaunchers::mainLauncher);\n+    }\n+\n+    \/**\n+     * Gets the additional application launchers of this application.\n+     * <p>\n+     * Returns an empty list if this application doesn't have additional launchers.\n+     * <p>\n+     * Returns an empty list if {@link #isRuntime()} returns <code>true<\/code>.\n+     *\n+     * @see #launchers()\n+     * @see #mainLauncher()\n+     * @see #isRuntime()\n+     *\n+     * @return the additional application launchers of this application\n+     *\/\n+    default List<Launcher> additionalLaunchers() {\n+        return ApplicationLaunchers.fromList(launchers()).map(ApplicationLaunchers::additionalLaunchers)\n+                .orElseGet(Collections::emptyList);\n+    }\n+\n+    \/**\n+     * Returns <code>true<\/code> if this application is Java runtime.\n+     *\n+     * @return <code>true<\/code> if this application is Java runtime\n+     *\/\n+    default boolean isRuntime() {\n+        return imageLayout() instanceof RuntimeLayout;\n+    }\n+\n+    \/**\n+     * Returns <code>true<\/code> if any of application launchers of this application\n+     * are configured as services.\n+     *\n+     * @see Launcher#isService\n+     *\n+     * @return <code>true<\/code> if any of application launchers of this application\n+     *         are configured as services\n+     *\/\n+    default boolean isService() {\n+        return Optional.ofNullable(launchers()).orElseGet(List::of).stream()\n+                .filter(Launcher::isService).findAny().isPresent();\n+    }\n+\n+    \/**\n+     * Gets the additional properties of this application for the application entry\n+     * in the app image (\".jpackage\") file.\n+     *\n+     * @return the additional properties of this application for the application\n+     *         entry in \".jpackage\" file\n+     *\/\n+    Map<String, String> extraAppImageFileData();\n+\n+    \/**\n+     * Gets the file associations of all application launchers of this application.\n+     *\n+     * @return the file associations of all application launchers of this\n+     *         application\n+     *\n+     * @see Launcher#fileAssociations\n+     *\/\n+    default Stream<FileAssociation> fileAssociations() {\n+        return launchers().stream().map(Launcher::fileAssociations).flatMap(List::stream);\n+    }\n+\n+    \/**\n+     * Default implementation of {@link Application} interface.\n+     *\/\n+    record Stub(String name, String description, String version, String vendor, String copyright, Optional<Path> srcDir,\n+            List<Path> contentDirs, AppImageLayout imageLayout, Optional<RuntimeBuilder> runtimeBuilder,\n+            List<Launcher> launchers,  Map<String, String> extraAppImageFileData) implements Application {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/Application.java","additions":251,"deletions":0,"binary":false,"changes":251,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+\/**\n+ * Utility class to manage application launchers.\n+ * <p>\n+ * Use {@link #asList} to get application launchers as a list.\n+ * <p>\n+ * Use {@link #mainLauncher()} to get the main application launcher.\n+ * <p>\n+ * Use {@link #additionalLaunchers()} to get additional application launchers.\n+ * <p>\n+ * Use {@link #fromList} to convert the list of application launchers into {@link ApplicationLaunchers} instance.\n+ *\/\n+public record ApplicationLaunchers(Launcher mainLauncher, List<Launcher> additionalLaunchers) {\n+\n+    public ApplicationLaunchers {\n+        Objects.requireNonNull(mainLauncher);\n+        Objects.requireNonNull(additionalLaunchers);\n+    }\n+\n+    public ApplicationLaunchers(Launcher mainLauncher) {\n+        this(mainLauncher, List.of());\n+    }\n+\n+    public List<Launcher> asList() {\n+        return Optional.ofNullable(mainLauncher).map(v -> {\n+            return Stream.concat(Stream.of(v), additionalLaunchers.stream()).toList();\n+        }).orElseGet(List::of);\n+    }\n+\n+    public static Optional<ApplicationLaunchers> fromList(List<Launcher> launchers) {\n+        if (launchers == null || launchers.isEmpty()) {\n+            return Optional.empty();\n+        } else {\n+            return Optional.of(new ApplicationLaunchers(launchers.getFirst(),\n+                    launchers.subList(1, launchers.size())));\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/ApplicationLaunchers.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,198 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import static jdk.jpackage.internal.util.PathUtils.resolveNullablePath;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+\/**\n+ * Application app image layout.\n+ * <p>\n+ * Application is comprised from application files and Java runtime.\n+ * <p>\n+ * Use {@link #build()} or {@link #buildFrom(ApplicationLayout)} methods to\n+ * configure and construct instances of this interface.\n+ *\/\n+public interface ApplicationLayout extends AppImageLayout, ApplicationLayoutMixin {\n+\n+    @Override\n+    default ApplicationLayout resolveAt(Path root) {\n+        return buildFrom(this).resolveAt(root).create();\n+    }\n+\n+    \/**\n+     * Creates an object implementing {@link ApplicationLayout} interface from\n+     * {@link AppImageLayout} and {@link ApplicationLayoutMixin} instances.\n+     *\n+     * @param appImage app image layout object\n+     * @param mixin application layout mixin for the app image layout\n+     * @return new object implementing {@link ApplicationLayout} interface\n+     *\/\n+    static ApplicationLayout create(AppImageLayout appImage, ApplicationLayoutMixin mixin) {\n+        return CompositeProxy.create(ApplicationLayout.class, appImage, mixin);\n+    }\n+\n+    public static Builder build() {\n+        return new Builder();\n+    }\n+\n+    public static Builder buildFrom(ApplicationLayout appLayout) {\n+        return new Builder(appLayout);\n+    }\n+\n+    \/**\n+     * Builds {@link ApplicationLayout} instances.\n+     *\/\n+    final class Builder {\n+        private Builder() {\n+        }\n+\n+        private Builder(ApplicationLayout appLayout) {\n+            rootDirectory = appLayout.rootDirectory();\n+            launchersDirectory = appLayout.launchersDirectory();\n+            appDirectory = appLayout.appDirectory();\n+            runtimeDirectory = appLayout.runtimeDirectory();\n+            appModsDirectory = appLayout.appModsDirectory();\n+            desktopIntegrationDirectory = appLayout.desktopIntegrationDirectory();\n+            contentDirectory = appLayout.contentDirectory();\n+        }\n+\n+        public ApplicationLayout create() {\n+\n+            Objects.requireNonNull(rootDirectory);\n+            Objects.requireNonNull(runtimeDirectory);\n+            Objects.requireNonNull(launchersDirectory);\n+            Objects.requireNonNull(appDirectory);\n+            Objects.requireNonNull(appModsDirectory);\n+            Objects.requireNonNull(desktopIntegrationDirectory);\n+            Objects.requireNonNull(contentDirectory);\n+\n+            return ApplicationLayout.create(new AppImageLayout.Stub(\n+                    rootDirectory, runtimeDirectory), new ApplicationLayoutMixin.Stub(\n+                    launchersDirectory, appDirectory, appModsDirectory,\n+                    desktopIntegrationDirectory, contentDirectory));\n+        }\n+\n+        public Builder setAll(String path) {\n+            return setAll(Path.of(path));\n+        }\n+\n+        public Builder setAll(Path path) {\n+            rootDirectory(path);\n+            launchersDirectory(path);\n+            appDirectory(path);\n+            runtimeDirectory(path);\n+            appModsDirectory(path);\n+            desktopIntegrationDirectory(path);\n+            contentDirectory(path);\n+            return this;\n+        }\n+\n+        public Builder resolveAt(Path base) {\n+            rootDirectory(resolveNullablePath(base, rootDirectory));\n+            launchersDirectory(resolveNullablePath(base, launchersDirectory));\n+            appDirectory(resolveNullablePath(base, appDirectory));\n+            runtimeDirectory(resolveNullablePath(base, runtimeDirectory));\n+            appModsDirectory(resolveNullablePath(base, appModsDirectory));\n+            desktopIntegrationDirectory(resolveNullablePath(base, desktopIntegrationDirectory));\n+            contentDirectory(resolveNullablePath(base, contentDirectory));\n+            return this;\n+        }\n+\n+        public Builder rootDirectory(String v) {\n+            return rootDirectory(Path.of(v));\n+        }\n+\n+        public Builder rootDirectory(Path v) {\n+            rootDirectory = v;\n+            return this;\n+        }\n+\n+        public Builder launchersDirectory(String v) {\n+            return launchersDirectory(Path.of(v));\n+        }\n+\n+        public Builder launchersDirectory(Path v) {\n+            launchersDirectory = v;\n+            return this;\n+        }\n+\n+        public Builder appDirectory(String v) {\n+            return appDirectory(Path.of(v));\n+        }\n+\n+        public Builder appDirectory(Path v) {\n+            appDirectory = v;\n+            return this;\n+        }\n+\n+        public Builder runtimeDirectory(String v) {\n+            return runtimeDirectory(Path.of(v));\n+        }\n+\n+        public Builder runtimeDirectory(Path v) {\n+            runtimeDirectory = v;\n+            return this;\n+        }\n+\n+        public Builder appModsDirectory(String v) {\n+            return appModsDirectory(Path.of(v));\n+        }\n+\n+        public Builder appModsDirectory(Path v) {\n+            appModsDirectory = v;\n+            return this;\n+        }\n+\n+        public Builder desktopIntegrationDirectory(String v) {\n+            return desktopIntegrationDirectory(Path.of(v));\n+        }\n+\n+        public Builder desktopIntegrationDirectory(Path v) {\n+            desktopIntegrationDirectory = v;\n+            return this;\n+        }\n+\n+        public Builder contentDirectory(String v) {\n+            return contentDirectory(Path.of(v));\n+        }\n+\n+        public Builder contentDirectory(Path v) {\n+            contentDirectory = v;\n+            return this;\n+        }\n+\n+        private Path rootDirectory = Path.of(\"\");\n+        private Path launchersDirectory;\n+        private Path appDirectory;\n+        private Path runtimeDirectory;\n+        private Path appModsDirectory;\n+        private Path desktopIntegrationDirectory;\n+        private Path contentDirectory;\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/ApplicationLayout.java","additions":198,"deletions":0,"binary":false,"changes":198,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+\n+\/**\n+ * App image directory contents specific to application packaging.\n+ *\/\n+public interface ApplicationLayoutMixin {\n+\n+    \/**\n+     * Path to launchers directory.\n+     *\/\n+    Path launchersDirectory();\n+\n+    \/**\n+     * Path to application data directory.\n+     *\/\n+    Path appDirectory();\n+\n+    \/**\n+     * Path to directory with application's Java modules.\n+     *\/\n+    Path appModsDirectory();\n+\n+    \/**\n+     * Path to directory with application's desktop integration files.\n+     *\/\n+    Path desktopIntegrationDirectory();\n+\n+    \/**\n+     * Path to directory with additional application content.\n+     *\/\n+    Path contentDirectory();\n+\n+    \/**\n+     * Default implementation of {@link ApplicationLayoutMixin} interface.\n+     *\/\n+    record Stub(Path launchersDirectory, Path appDirectory, Path appModsDirectory, Path desktopIntegrationDirectory, Path contentDirectory) implements ApplicationLayoutMixin {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/ApplicationLayoutMixin.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.model;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+\n+\/**\n+ * Creates app image directory from the given {@link Application} object.\n+ *\n+ *  @ see PackageWriter\n+ *\/\n+@FunctionalInterface\n+public interface ApplicationWriter {\n+\n+    \/**\n+     * Creates app image directory from the given {@link Application} object in the given directory.\n+     *\n+     * @param app the source application\n+     * @param dst the directory where to create app image of the source application\n+     * @throws PackagerException if packaging error occurs\n+     * @throws IOException if an I\/O error occurs\n+     *\/\n+    void write(Application app, Path dst) throws PackagerException, IOException;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/ApplicationWriter.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -28,0 +28,21 @@\n+import jdk.jpackage.internal.util.LocalizedExceptionBuilder;\n+import jdk.jpackage.internal.util.StringBundle;\n+\n+\/**\n+ * Signals that error has occurred at configuration phase.\n+ * <p>\n+ * It contains an error message and an optional advice message on how to correct the error.\n+ * <p>\n+ * The preferred way to construct instances of this class is to use\n+ * {@link #build(StringBundle)}, or {@link #build(StringBundle, Throwable)},\n+ * or {@link #build(StringBundle, String, Object...)} methods.\n+ *\n+ * {@snippet :\n+ * StringBundle i18n = getStringBundle(); \/\/ Some way to obtain a string bundle with localized messages\n+ *\n+ * throw ConfigException.build(i18n)\n+ *         .message(\"error.no.name\")\n+ *         .advice(\"error.no.name.advice\")\n+ *         .create();\n+ * }\n+ *\/\n@@ -30,1 +51,1 @@\n-    final String advice;\n+    private final String advice;\n@@ -37,1 +58,1 @@\n-    public ConfigException(String msg, String advice, Exception cause) {\n+    public ConfigException(String msg, String advice, Throwable cause) {\n@@ -42,1 +63,1 @@\n-    public ConfigException(Exception cause) {\n+    public ConfigException(Throwable cause) {\n@@ -50,0 +71,56 @@\n+\n+    public static Builder build(StringBundle i18n) {\n+        return new Builder(i18n);\n+    }\n+\n+    public static Builder build(StringBundle i18n, String msgId, Object ... args) {\n+        return build(i18n).message(msgId, args);\n+    }\n+\n+    public static Builder build(StringBundle i18n, Throwable t) {\n+        return build(i18n).causeAndMessage(t);\n+    }\n+\n+    \/**\n+     * Builds {@link ConfigException} instances.\n+     *\/\n+    public static class Builder extends LocalizedExceptionBuilder<Builder> {\n+\n+        public Builder advice(String adviceId, Object ... args) {\n+            advice = formatString(adviceId, args);\n+            return this;\n+        }\n+\n+        private Builder(StringBundle i18n) {\n+            super(i18n);\n+        }\n+\n+        public ConfigException create() {\n+            return create(this::create);\n+        }\n+\n+        private ConfigException create(String msg, Throwable cause) {\n+            return new ConfigException(msg, advice, cause);\n+        }\n+\n+        private String advice;\n+    }\n+\n+    \/**\n+     * Throws the cause of the given {@link RuntimeException} exception\n+     * as {@link ConfigException} if the cause is of this type or re-throws the given\n+     * {@link RuntimeException} exception as-is otherwise.\n+     * <p>\n+     * Never return a value. It always throws some exception object.\n+     *\n+     * @param ex exception to re-throw\n+     * @return doesn't return value\n+     * @throws ConfigException\n+     *\/\n+    public static RuntimeException rethrowConfigException(RuntimeException ex) throws ConfigException {\n+        if (ex.getCause() instanceof ConfigException configEx) {\n+            throw configEx;\n+        } else {\n+            throw ex;\n+        }\n+    }\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/ConfigException.java","additions":80,"deletions":3,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+\/**\n+ * Custom application launcher icon.\n+ * <p>\n+ * Use {@link #create(Path)} method to create an instance of this type.\n+ *\/\n+public interface CustomLauncherIcon extends LauncherIcon {\n+\n+    \/**\n+     * Returns path to icon file.\n+     * @return path to icon file\n+     *\/\n+    Path path();\n+\n+    \/**\n+     * Returns the given icon as {@link CustomLauncherIcon} type or an empty {@link Optional} instance\n+     * if the given icon object is not an instance of {@link CustomLauncherIcon} type.\n+     *\n+     * @param icon application launcher icon object or <code>null<\/null>\n+     * @return the given icon as {@link CustomLauncherIcon} type or an empty {@link Optional} instance\n+     *\/\n+    public static Optional<CustomLauncherIcon> fromLauncherIcon(LauncherIcon icon) {\n+        if (icon instanceof CustomLauncherIcon customIcon) {\n+            return Optional.of(customIcon);\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    \/**\n+     * Creates object of type {@link CustomLauncherIcon} from the path to icon file.\n+     * @param path path to icon file\n+     * @return {@link CustomLauncherIcon} instance\n+     *\/\n+    public static CustomLauncherIcon create(Path path) {\n+        Objects.requireNonNull(path);\n+        return new Stub(path);\n+    }\n+\n+    \/**\n+     * Default implementation of {@link CustomLauncherIcon} type.\n+     *\/\n+    record Stub(Path path) implements CustomLauncherIcon {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/CustomLauncherIcon.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.util.Optional;\n+\n+\/**\n+ * Default application launcher icon.\n+ * <p>\n+ * Default icon is either loaded from the resources of {@link jdk.jpackage\/} module or picked from the resource directory.\n+ * <p>\n+ * Use {@link #INSTANCE} field to get an instance of this type.\n+ *\/\n+public interface DefaultLauncherIcon extends LauncherIcon {\n+\n+    \/**\n+     * Returns the given icon as {@link DefaultLauncherIcon} type or an empty {@link Optional} instance\n+     * if the given icon object is not an instance of {@link DefaultLauncherIcon} type.\n+     *\n+     * @param icon application launcher icon object or <code>null<\/null>\n+     * @return the given icon as {@link DefaultLauncherIcon} type or an empty {@link Optional} instance\n+     *\/\n+    public static Optional<DefaultLauncherIcon> fromLauncherIcon(LauncherIcon icon) {\n+        if (icon instanceof DefaultLauncherIcon defaultIcon) {\n+            return Optional.of(defaultIcon);\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    \/**\n+     * Singleton.\n+     *\/\n+    public static DefaultLauncherIcon INSTANCE = new DefaultLauncherIcon() {};\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/DefaultLauncherIcon.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+\/**\n+ * File association.\n+ *\/\n+public interface FileAssociation {\n+\n+    \/**\n+     * Returns file association description if available or an empty {@link Optional} instance.\n+     * @return file association description\n+     *\/\n+    Optional<String> description();\n+\n+    \/**\n+     * Returns file association icon if available or an empty {@link Optional} instance.\n+     * @see {@link #hasIcon()}\n+     * @return file association icon\n+     *\/\n+    Optional<Path> icon();\n+\n+    \/**\n+     * Returns <code>true<\/code> if the file association has an icon.\n+     * @see {@link #icon()}\n+     * @return <code>true<\/code> if the file association has an icon\n+     *\/\n+    default boolean hasIcon() {\n+        return icon().isPresent();\n+    }\n+\n+    \/**\n+     * Returns file association MIME type. E.g.: <code>application\/foo<\/code>, <code>text\/plain<code>.\n+     * @return file association MIME type\n+     *\/\n+    String mimeType();\n+\n+    \/**\n+     * Returns file association extension. E.g.: <code>.txt<\/code>\n+     * @return file association extension\n+     *\/\n+    String extension();\n+\n+    \/**\n+     * Default implementation of {@link FileAssociation} interface\n+     *\/\n+    record Stub(Optional<String> description, Optional<Path> icon, String mimeType, String extension) implements FileAssociation {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/FileAssociation.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -27,1 +27,0 @@\n-import java.text.MessageFormat;\n@@ -30,1 +29,0 @@\n-import java.util.ResourceBundle;\n@@ -32,0 +30,1 @@\n+import jdk.jpackage.internal.util.LocalizedExceptionBuilder;\n@@ -33,0 +32,1 @@\n+import jdk.jpackage.internal.util.StringBundle;\n@@ -41,6 +41,1 @@\n-        var str = getString(key);\n-        if (args.length != 0) {\n-            return MessageFormat.format(str, args);\n-        } else {\n-            return str;\n-        }\n+        return BUNDLE.format(key, args);\n@@ -49,1 +44,5 @@\n-    private static final ResourceBundle BUNDLE;\n+    static LocalizedExceptionBuilder<?> buildLocalizedException() {\n+        return LocalizedExceptionBuilder.buildLocalizedException(BUNDLE);\n+    }\n+\n+    private static final StringBundle BUNDLE;\n@@ -53,1 +52,1 @@\n-        BUNDLE = MultiResourceBundle.create(\n+        BUNDLE = StringBundle.fromResourceBundle(MultiResourceBundle.create(\n@@ -60,1 +59,1 @@\n-        );\n+        ));\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/I18N.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -0,0 +1,190 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.io.InputStream;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n+\n+\/**\n+ * Application launcher.\n+ *\n+ * @see Application#launchers()\n+ *\/\n+public interface Launcher {\n+\n+    \/**\n+     * Gets the name of this launcher.\n+     *\n+     * @return the name of this launcher\n+     *\/\n+    String name();\n+\n+    \/**\n+     * Gets the name of the executable file of this launcher without file extension.\n+     *\n+     * @return the name of the executable file of this launcher\n+     *\/\n+    default String executableName() {\n+        return name();\n+    }\n+\n+    \/**\n+     * Gets extension of the executable file of this launcher if available or an\n+     * empty {@link Optional} instance otherwise.\n+     *\n+     * @return the extension of the executable file of this launcher\n+     *\/\n+    default Optional<String> executableSuffix() {\n+        return Optional.empty();\n+    }\n+\n+    \/**\n+     * Gets the full name of the executable file of this launcher. The full name\n+     * consists of the name and the extension.\n+     *\n+     * @return the full name of the executable file of this launcher\n+     *\/\n+    default String executableNameWithSuffix() {\n+        return executableName() + executableSuffix().orElse(\"\");\n+    }\n+\n+    \/**\n+     * Gets the startup information of this launcher if available or an empty\n+     * {@link Optional} instance otherwise.\n+     *\n+     * @apiNote Launchers from an external application image may not have startup\n+     *          information.\n+     * @return the startup information of this launcher\n+     *\/\n+    Optional<LauncherStartupInfo> startupInfo();\n+\n+    \/**\n+     * Gets the file associations of this launcher.\n+     *\n+     * @return the file associations of this launcher\n+     *\/\n+    List<FileAssociation> fileAssociations();\n+\n+    \/**\n+     * Returns <code>true<\/code> if this launcher should be installed as a service.\n+     *\n+     * @return <code>true<\/code> if this launcher should be installed as a service\n+     *\/\n+    boolean isService();\n+\n+    \/**\n+     * Gets the description of this launcher.\n+     *\n+     * @return the description of this launcher\n+     *\/\n+    String description();\n+\n+    \/**\n+     * Opens a stream with the template executable file for this launcher. Caller is\n+     * responsible for close the stream.\n+     *\n+     * @return a stream with the template executable file for this launcher\n+     *\/\n+    default InputStream executableResource() {\n+        return ResourceLocator.class.getResourceAsStream(\"jpackageapplauncher\");\n+    }\n+\n+    \/**\n+     * Gets the icon for this launcher or an empty {@link Optional} instance if the\n+     * launcher is requested to have no icon.\n+     *\n+     * @return the icon for this launcher\n+     * @see #hasIcon()\n+     * @see #hasDefaultIcon()\n+     * @see #hasCustomIcon()\n+     *\/\n+    Optional<LauncherIcon> icon();\n+\n+    \/**\n+     * Returns <code>true<\/code> if this launcher is requested to have an icon.\n+     *\n+     * @return <code>true<\/code> if this launcher is requested to have an icon\n+     * @see #icon()\n+     * @see #hasDefaultIcon()\n+     * @see #hasCustomIcon()\n+     *\/\n+    default boolean hasIcon() {\n+        return icon().isPresent();\n+    }\n+\n+    \/**\n+     * Returns <code>true<\/code> if this launcher has a default icon.\n+     *\n+     * @return <code>true<\/code> if this launcher has a default icon\n+     * @see DefaultLauncherIcon\n+     * @see #icon()\n+     * @see #hasIcon()\n+     * @see #hasCustomIcon()\n+     *\/\n+    default boolean hasDefaultIcon() {\n+        return icon().flatMap(DefaultLauncherIcon::fromLauncherIcon).isPresent();\n+    }\n+\n+    \/**\n+     * Returns <code>true<\/code> if this launcher has a custom icon.\n+     *\n+     * @return <code>true<\/code> if this launcher has a custom icon\n+     * @see CustomLauncherIcon\n+     * @see #icon()\n+     * @see #hasDefaultIcon()\n+     * @see #hasIcon()\n+     *\/\n+    default boolean hasCustomIcon() {\n+        return icon().flatMap(CustomLauncherIcon::fromLauncherIcon).isPresent();\n+    }\n+\n+    \/**\n+     * Gets key in the resource bundle of {@link jdk.jpackage\/} module referring to\n+     * the default launcher icon.\n+     *\n+     * @return the key in the resource bundle referring to the default launcher icon\n+     *\/\n+    String defaultIconResourceName();\n+\n+    \/**\n+     * Gets the additional properties for application launcher entries in the app\n+     * image (\".jpackage\") file.\n+     *\n+     * @return the additional properties for application launcher entries in\n+     *         \".jpackage\" file\n+     *\/\n+    Map<String, String> extraAppImageFileData();\n+\n+    \/**\n+     * Default implementation of {@link Launcher} interface.\n+     *\/\n+    record Stub(String name, Optional<LauncherStartupInfo> startupInfo, List<FileAssociation> fileAssociations,\n+            boolean isService, String description, Optional<LauncherIcon> icon, String defaultIconResourceName,\n+            Map<String, String> extraAppImageFileData) implements Launcher {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/Launcher.java","additions":190,"deletions":0,"binary":false,"changes":190,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+\/**\n+ * Application launcher icon.\n+ *\/\n+public interface LauncherIcon {\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/LauncherIcon.java","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+\/**\n+ * Application launcher startup configuration using non-modular jar file.\n+ * <p>\n+ * Use {@link #create} method to create objects implementing this interface.\n+ *\/\n+public interface LauncherJarStartupInfo extends LauncherStartupInfo,\n+        LauncherJarStartupInfoMixin {\n+\n+    \/**\n+     * Constructs {@link LauncherJarStartupInfo} instance from the given\n+     * {@link LauncherJarStartupInfo} and {@link LauncherJarStartupInfoMixin} instances.\n+     *\n+     * @param info the generic launcher startup information\n+     * @param mixin the supplementary launcher startup information\n+     * @return the proxy dispatching calls to the given objects\n+     *\/\n+    public static LauncherJarStartupInfo create(LauncherStartupInfo info,\n+            LauncherJarStartupInfoMixin mixin) {\n+        return CompositeProxy.create(LauncherJarStartupInfo.class, info, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/LauncherJarStartupInfo.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+\n+\/**\n+ * Details of Linux application launcher startup configuration using non-modular jar file.\n+ *\/\n+public interface LauncherJarStartupInfoMixin {\n+\n+    \/**\n+     * Gets the path to the input jar file.\n+     * @return the path to the input jar file\n+     *\/\n+    Path jarPath();\n+\n+    \/**\n+     * Returns <code>true<\/code> if the input jar file has <code>Main-Class<\/code> entry in the manifest.\n+     * @return <code>true<\/code> if the input jar file has <code>Main-Class<\/code> entry in the manifest\n+     *\/\n+    boolean isJarWithMainClass();\n+\n+    \/**\n+     * Default implementation of {@link LauncherJarStartupInfoMixin} interface.\n+     *\/\n+    record Stub(Path jarPath, boolean isJarWithMainClass) implements LauncherJarStartupInfoMixin {}\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/LauncherJarStartupInfoMixin.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+\/**\n+ * Application launcher startup configuration using Java module.\n+ * <p>\n+ * Use {@link #create} method to create objects implementing this interface.\n+ *\/\n+public interface LauncherModularStartupInfo extends LauncherStartupInfo,\n+        LauncherModularStartupInfoMixin {\n+\n+    \/**\n+     * Constructs {@link LauncherModularStartupInfo} instance from the given\n+     * {@link LauncherJarStartupInfo} and {@link LauncherModularStartupInfoMixin} instances.\n+     *\n+     * @param info the generic launcher startup information\n+     * @param mixin the supplementary launcher startup information\n+     * @return the proxy dispatching calls to the given objects\n+     *\/\n+    public static LauncherModularStartupInfo create(LauncherStartupInfo info,\n+            LauncherModularStartupInfoMixin mixin) {\n+        return CompositeProxy.create(LauncherModularStartupInfo.class, info, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/LauncherModularStartupInfo.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+\/**\n+ * Details of application launcher startup configuration using Java module.\n+ *\/\n+public interface LauncherModularStartupInfoMixin {\n+\n+    \/**\n+     * Gets the main module name.\n+     * @return the main module name\n+     *\/\n+    String moduleName();\n+\n+    \/**\n+     * Gets the path to the input module location.\n+     * @return the path to the input module location\n+     *\/\n+    List<Path> modulePath();\n+\n+    \/**\n+     * Default implementation of {@link LauncherModularStartupInfoMixin} interface.\n+     *\/\n+    record Stub(String moduleName, List<Path> modulePath) implements LauncherModularStartupInfoMixin {\n+    }\n+\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/LauncherModularStartupInfoMixin.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.lang.constant.ClassDesc;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+\/**\n+ * Generic startup configuration of an application launcher.\n+ *\n+ * @see Launcher#startupInfo()\n+ *\/\n+public interface LauncherStartupInfo {\n+\n+    \/**\n+     * Gets the qualified name of the main class of this launcher startup configuration.\n+     * @return the qualified name of the main class of this launcher startup configuration\n+     *\/\n+    String qualifiedClassName();\n+\n+    \/**\n+     * Returns the simple name of the main class of this launcher startup configuration as given in the source code.\n+     * @return the simple name of the main class of this launcher startup configuration as given in the source code\n+     *\/\n+    default String simpleClassName() {\n+        return ClassDesc.of(qualifiedClassName()).displayName();\n+    }\n+\n+    \/**\n+     * Gets the package name of the main class of this launcher startup configuration.\n+     * @return the package name of the main class of this launcher startup configuration\n+     *\/\n+    default String packageName() {\n+        return ClassDesc.of(qualifiedClassName()).packageName();\n+    }\n+\n+    \/**\n+     * Gets JVM options of this launcher startup configuration.\n+     * @return the JVM options of this launcher startup configuration\n+     *\/\n+    List<String> javaOptions();\n+\n+    \/**\n+     * Gets the default parameters for the <code>main(String[] args)<\/code>\n+     * method of the main class of this launcher startup configuration.\n+     *\n+     * @return the default parameters for the <code>main(String[] args)<\/code>\n+     * method of the main class of this launcher startup configuration\n+     *\/\n+    List<String> defaultParameters();\n+\n+    \/**\n+     * Gets the files and directories that should be put on a classpath for\n+     * an application launcher this launcher startup configuration applies to.\n+     * @return the classpath of this launcher startup configuration\n+     *\/\n+    List<Path> classPath();\n+\n+    \/**\n+     * Default implementation of {@link LauncherStartupInfo} interface.\n+     *\/\n+    record Stub(String qualifiedClassName, List<String> javaOptions,\n+            List<String> defaultParameters, List<Path> classPath)\n+            implements LauncherStartupInfo {\n+\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/LauncherStartupInfo.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,331 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+\/**\n+ * Native application package.\n+ *\n+ * The interface specifies the source app image layout with two transformations:\n+ * package app image layout and installed app image layout.\n+ * <p>\n+ * Use {@link #appImageLayout()} or {@link #asApplicationLayout()} to get the\n+ * unresolved source app image layout.\n+ * <p>\n+ * Package app image layout is the source app image layout resolved at the\n+ * relative installation directory of the package. Additionally, to resolve the\n+ * source layout, some packages may transform the source layout.\n+ * <p>\n+ * Use {@link #packageLayout()} or {@link #asPackageApplicationLayout()} to get\n+ * the package app image layout.\n+ * <p>\n+ * Installed app image layout is the layout of the installed app image.\n+ * <p>\n+ * Use {@link #installedPackageLayout()} or\n+ * {@link #asInstalledPackageApplicationLayout()} to get the installed app image\n+ * layout.\n+ * <p>\n+ * The following table shows app image layouts of the application named \"Duke\"\n+ * on different platforms:\n+ * <table border=\"1\">\n+ * <tr>\n+ * <th><\/th>\n+ * <th>Source app image layout<\/th>\n+ * <th>Package app image layout<\/th>\n+ * <th>Installed app image layout<\/th>\n+ * <\/tr>\n+ * <tr>\n+ * <th>Windows<\/th>\n+ * <td>bin\/foo.exe app\/foo.jar<\/td>\n+ * <td>Duke\/bin\/foo.exe Duke\/app\/foo.jar<\/td>\n+ * <td>Duke\/bin\/foo.exe Duke\/app\/foo.jar<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <th>Linux<\/th>\n+ * <td>bin\/foo lib\/app\/foo.jar<\/td>\n+ * <td>opt\/duke\/bin\/foo opt\/duke\/lib\/app\/foo.jar<\/td>\n+ * <td>\/opt\/duke\/bin\/foo \/opt\/duke\/lib\/app\/foo.jar<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <th>OSX<\/th>\n+ * <td>Contents\/MacOS\/foo Contents\/app\/foo.jar<\/td>\n+ * <td>Applications\/Duke.app\/Contents\/MacOS\/foo Applications\/Duke.app\/Contents\/app\/foo.jar<\/td>\n+ * <td>\/Applications\/Duke.app\/Contents\/MacOS\/foo \/Applications\/Duke.app\/Contents\/app\/foo.jar<\/td>\n+ * <\/tr>\n+ * <\/table>\n+ *\/\n+public interface Package {\n+\n+    \/**\n+     * Gets the application of this package.\n+     *\n+     * @return the application of this package\n+     *\/\n+    Application app();\n+\n+    \/**\n+     * Gets the type of this package.\n+     *\n+     * @return the type of this package\n+     *\/\n+    PackageType type();\n+\n+    \/**\n+     * Gets the type of this package as {@link StandardPackageType} type or an empty\n+     * {@link Optional} instance if the return value of {@link #type()} call is not\n+     * an instance of {@link StandardPackageType} type.\n+     *\n+     * @return the type of this package as {@link StandardPackageType} type\n+     *\/\n+    default Optional<StandardPackageType> asStandardPackageType() {\n+        if (type() instanceof StandardPackageType stdType) {\n+            return Optional.of(stdType);\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    \/**\n+     * Gets the name of the native package of this package.\n+     * <p>\n+     * The value is a valid file system name and can be safely used to name\n+     * files\/directories in the file system.\n+     *\n+     * @return the name of the native package of this package\n+     *\/\n+    String packageName();\n+\n+    \/**\n+     * Gets the description of this package.\n+     * @return the description of this package\n+     *\/\n+    String description();\n+\n+    \/**\n+     * Gets the version of this package.\n+     * @return the version of this package\n+     *\/\n+    String version();\n+\n+    \/**\n+     * Gets the \"About\" URL of this package if available or an empty\n+     * {@link Optional} instance otherwise.\n+     *\n+     * @return the \"About\" URL of this package\n+     *\/\n+    Optional<String> aboutURL();\n+\n+    \/**\n+     * Gets the path to a license file of this package if available or an empty\n+     * {@link Optional} instance otherwise.\n+     *\n+     * @return the path to a license file of this package\n+     *\/\n+    Optional<Path> licenseFile();\n+\n+    \/**\n+     * Gets the path to a directory with the application app image of this package\n+     * if available or an empty {@link Optional} instance otherwise.\n+     *\n+     * @return the path to a directory with the application app image of this\n+     *         package\n+     *\/\n+    Optional<Path> predefinedAppImage();\n+\n+    \/**\n+     * Gets the unresolved source app image layout of the application of this package.\n+     *\n+     * @return the unresolved app image layout of the application of this package\n+     *\n+     * @see #packageLayout\n+     * @see #installedPackageLayout\n+     *\/\n+    default AppImageLayout appImageLayout() {\n+        return app().imageLayout();\n+    }\n+\n+    \/**\n+     * Returns the unresolved source app image layout of the application of this\n+     * package as {@link ApplicationLayout} type or an empty {@link Optional}\n+     * instance if the layout object is of incompatible type.\n+     * <p>\n+     * Returns an empty {@link Optional} instance if {@link #isRuntimeInstaller()}\n+     * returns <code>true<\/code>.\n+     *\n+     * @return the unresolved source app image layout of the application of this\n+     *         package as {@link ApplicationLayout} type\n+     *\n+     * @see #appImageLayout\n+     *\/\n+    default Optional<ApplicationLayout> asApplicationLayout() {\n+        return app().asApplicationLayout();\n+    }\n+\n+    \/**\n+     * Gets the layout of the installed app image of the application resolved at the\n+     * relative installation directory of this package.\n+     *\n+     * @return the layout of the installed app image of the application resolved at\n+     *         the relative installation directory of this package\n+     *\n+     * @see #relativeInstallDir\n+     * @see #appImageLayout\n+     * @see #installedPackageLayout\n+     *\/\n+    default AppImageLayout packageLayout() {\n+        return appImageLayout().resolveAt(relativeInstallDir());\n+    }\n+\n+    \/**\n+     * Returns the layout of the installed app image of the application resolved at\n+     * the relative installation directory of this package as\n+     * {@link ApplicationLayout} type or an empty {@link Optional} instance if the\n+     * layout object is of incompatible type.\n+     * <p>\n+     * Returns an empty {@link Optional} instance if {@link #isRuntimeInstaller()}\n+     * returns <code>true<\/code>.\n+     *\n+     * @return the layout of the installed app image of the application resolved at\n+     *         the relative installation directory of this package as\n+     *         {@link ApplicationLayout} type\n+     *\n+     * @see #packageLayout\n+     *\/\n+    default Optional<ApplicationLayout> asPackageApplicationLayout() {\n+        if (packageLayout() instanceof ApplicationLayout layout) {\n+            return Optional.of(layout);\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    \/**\n+     * Gets the layout of the installed app image of this package.\n+     *\n+     * @return the layout of the installed app image of this package\n+     *\n+     * @see #appImageLayout\n+     * @see #packageLayout\n+     *\/\n+    default AppImageLayout installedPackageLayout() {\n+        return asStandardPackageType().map(stdType -> {\n+            switch (stdType) {\n+                case LINUX_DEB, LINUX_RPM, MAC_DMG, MAC_PKG -> {\n+                    return packageLayout().resolveAt(Path.of(\"\/\"));\n+                }\n+                case WIN_EXE, WIN_MSI -> {\n+                    return packageLayout();\n+                }\n+                default -> {\n+                    \/\/ Should never get here\n+                    throw new IllegalStateException();\n+                }\n+            }\n+        }).orElseThrow(UnsupportedOperationException::new);\n+    }\n+\n+    \/**\n+     * Returns the layout of the installed app image of this package as\n+     * {@link ApplicationLayout} type or an empty {@link Optional} instance if the\n+     * layout object is of incompatible type.\n+     * <p>\n+     * Returns an empty {@link Optional} instance if {@link #isRuntimeInstaller()}\n+     * returns <code>true<\/code>.\n+     *\n+     * @return the layout of the installed app image of this package as\n+     *         {@link ApplicationLayout} type\n+     *\n+     * @see #installedPackageLayout\n+     *\/\n+    default Optional<ApplicationLayout> asInstalledPackageApplicationLayout() {\n+        if (installedPackageLayout() instanceof ApplicationLayout layout) {\n+            return Optional.of(layout);\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    \/**\n+     * Get the name without an extension of the package file of this package.\n+     *\n+     * @return the name without an extension of the package file of this package\n+     *\/\n+    default String packageFileName() {\n+        return String.format(\"%s-%s\", packageName(), version());\n+    }\n+\n+    \/**\n+     * Gets the extension of the package file of this package if available or an\n+     * empty {@link Optional} instance otherwise.\n+     *\n+     * @return the extension of the package file of this package\n+     *\/\n+    default Optional<String> packageFileSuffix() {\n+        return asStandardPackageType().map(StandardPackageType::suffix);\n+    }\n+\n+    \/**\n+     * Gets the full name of the package file of this package. The full name\n+     * consists of the name and the extension.\n+     *\n+     * @return the full name of the package file of this package\n+     *\/\n+    default String packageFileNameWithSuffix() {\n+        return packageFileName() + packageFileSuffix().orElse(\"\");\n+    }\n+\n+    \/**\n+     * Returns <code>true<\/code> if the application of this package is Java runtime.\n+     *\n+     * @return <code>true<\/code> if the application of this package is Java runtime\n+     *\n+     * @see Application#isRuntime()\n+     *\/\n+    default boolean isRuntimeInstaller() {\n+        return app().isRuntime();\n+    }\n+\n+    \/**\n+     * Gets the relative path to the package installation directory of this package.\n+     *\n+     * On Windows it is relative to the program files directory\n+     * (<code>\"%ProgramFiles%\"<\/code>) and to the system root (<code>\"\/\"<\/code>) on\n+     * other platforms.\n+     *\n+     * @return the relative path to the package installation directory of this\n+     *         package\n+     *\/\n+    Path relativeInstallDir();\n+\n+    \/**\n+     * Default implementation of {@link Package} interface.\n+     *\/\n+    record Stub(Application app, PackageType type, String packageName, String description, String version,\n+            Optional<String> aboutURL, Optional<Path> licenseFile, Optional<Path> predefinedAppImage,\n+            Path relativeInstallDir) implements Package {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/Package.java","additions":331,"deletions":0,"binary":false,"changes":331,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.model;\n+\n+\n+\/**\n+ * Generic package type. E.g.: application image, rpm, msi are all package types.\n+ *\n+ * @see jdk.jpackage.internal.model.Package\n+ *\/\n+public interface PackageType {}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/PackageType.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.model;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+\n+\/**\n+ * Creates native package from the given {@link jdk.jpackage.internal.model.Package} object.\n+ *\n+ * @ see ApplicationWriter\n+ *\/\n+@FunctionalInterface\n+public interface PackageWriter {\n+    \/**\n+     * Creates native package from the given {@link jdk.jpackage.internal.model.Package} object in the given directory.\n+     * @param pkg the source package\n+     * @param dst the directory where to create a native package\n+     * @throws PackagerException if packaging error occurs\n+     * @throws IOException if an I\/O error occurs\n+     *\/\n+    void write(Package pkg, Path dst) throws PackagerException, IOException;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/PackageWriter.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -25,1 +25,0 @@\n-\n@@ -28,2 +27,1 @@\n-import java.text.MessageFormat;\n-import java.util.ResourceBundle;\n+import jdk.jpackage.internal.util.StringBundle;\n@@ -31,0 +29,12 @@\n+\/**\n+ * Signals that error has occurred at packaging phase.\n+ * <p>\n+ * The preferred way to construct instances of this class is to use\n+ * {@link jdk.jpackage.internal.util.LocalizedExceptionBuilder#buildLocalizedException(StringBundle)} methods\n+ *\n+ * {@snippet :\n+ * StringBundle i18n = getStringBundle(); \/\/ Some way to obtain a string bundle with localized messages\n+ *\n+ * throw buildLocalizedException(i18n).message(\"error.no.name\").create();\n+ * }\n+ *\/\n@@ -32,0 +42,1 @@\n+\n@@ -33,2 +44,0 @@\n-    private static final ResourceBundle bundle = ResourceBundle.getBundle(\n-            \"jdk.jpackage.internal.resources.MainResources\");\n@@ -41,1 +50,1 @@\n-        super(bundle.getString(key), cause);\n+        super(I18N.getString(key), cause);\n@@ -45,1 +54,5 @@\n-        super(bundle.getString(key));\n+        super(I18N.getString(key));\n+    }\n+\n+    public PackagerException(String key, Object... arguments) {\n+        super(I18N.format(key, arguments));\n@@ -48,3 +61,2 @@\n-    public PackagerException(String key, String ... arguments) {\n-        super(MessageFormat.format(\n-                bundle.getString(key), (Object[]) arguments));\n+    public PackagerException(Throwable cause, String key, Object... arguments) {\n+        super(I18N.format(key, arguments), cause);\n@@ -53,4 +65,17 @@\n-    public PackagerException(\n-            Throwable cause, String key, String ... arguments) {\n-        super(MessageFormat.format(bundle.getString(key),\n-                (Object[]) arguments), cause);\n+    \/**\n+     * Throws the cause of the given {@link RuntimeException} exception\n+     * as {@link PackagerException} if the cause is of this type or re-throws the given\n+     * {@link RuntimeException} exception as-is otherwise.\n+     * <p>\n+     * Never return a value. It always throws some exception object.\n+     *\n+     * @param ex exception to re-throw\n+     * @return doesn't return value\n+     * @throws PackagerException\n+     *\/\n+    public static RuntimeException rethrowPackagerException(RuntimeException ex) throws PackagerException {\n+        if (ex.getCause() instanceof PackagerException pkgEx) {\n+            throw pkgEx;\n+        } else {\n+            throw ex;\n+        }\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/PackagerException.java","additions":39,"deletions":14,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+\/**\n+ * Creates Java runtime.\n+ *\/\n+@FunctionalInterface\n+public interface RuntimeBuilder {\n+\n+    \/**\n+     * Creates Java runtime in the given app image.\n+     *\n+     * @implNote Java runtime should be created in the directory returned by\n+     *           {@link AppImageLayout#runtimeDirectory()} method called on the\n+     *           given app image layout object.\n+     *\n+     * @param appImageLayout the app image where to create Java runtime.\n+     * @throws PackagerException if packaging error occurs\n+     *\/\n+    void createRuntime(AppImageLayout appImageLayout) throws PackagerException;\n+\n+    \/**\n+     * Gets the default set of paths where to find Java modules.\n+     *\n+     * @return the default set of paths where to find Java modules\n+     *\/\n+    public static List<Path> getDefaultModulePath() {\n+        return List.of(\n+                Path.of(System.getProperty(\"java.home\"), \"jmods\").toAbsolutePath());\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/RuntimeBuilder.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import static jdk.jpackage.internal.util.PathUtils.resolveNullablePath;\n+\n+import java.nio.file.Path;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+\/**\n+ * Java runtime app image layout.\n+ * <p>\n+ * Use {@link #DEFAULT} field to get the default runtime app image layout or\n+ * {@link #create(Path)} method to create custom runtime app image layout.\n+ *\/\n+public interface RuntimeLayout extends AppImageLayout {\n+\n+    @Override\n+    default RuntimeLayout resolveAt(Path root) {\n+        return create(new AppImageLayout.Stub(resolveNullablePath(root, rootDirectory()),\n+                resolveNullablePath(root, runtimeDirectory())));\n+    }\n+\n+    \/**\n+     * Creates Java runtime app image layout.\n+     * <p>\n+     * {@link #runtimeDirectory()} method\n+     * called on the created object will return the value of the\n+     * <code>runtimeDirectory<code> parameter. {@link #rootDirectory()} method\n+     * called on the created object will return <code>Path.of(\"\")<code> value.\n+     *\n+     * @param runtimeDirectory Java runtime directory\n+     * @return Java runtime app image layout\n+     *\/\n+    static RuntimeLayout create(Path runtimeDirectory) {\n+        return create(new AppImageLayout.Stub(Path.of(\"\"), runtimeDirectory));\n+    }\n+\n+    private static RuntimeLayout create(AppImageLayout layout) {\n+        return CompositeProxy.create(RuntimeLayout.class, layout);\n+    }\n+\n+    \/**\n+     * Singleton.\n+     * <p>\n+     * {@link #runtimeDirectory()} of the singleton returns empty string (\"\"), i.e.\n+     * the runtime directory is the same as the directory at which the layout is\n+     * resolved.\n+     *\/\n+    static final RuntimeLayout DEFAULT = create(Path.of(\"\"));\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/RuntimeLayout.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+\/**\n+ * Standard native package types.\n+ *\/\n+public enum StandardPackageType implements PackageType {\n+    WIN_MSI(\".msi\"),\n+    WIN_EXE(\".exe\"),\n+    LINUX_DEB(\".deb\"),\n+    LINUX_RPM(\".rpm\"),\n+    MAC_PKG(\".pkg\"),\n+    MAC_DMG(\".dmg\");\n+\n+    StandardPackageType(String suffix) {\n+        this.suffix = suffix;\n+    }\n+\n+    \/**\n+     * Gets file extension of this package type.\n+     * E.g.: <code>.msi<\/code>, <code>.dmg<\/code>, <code>.deb<\/code>.\n+     * @return file extension of this package type\n+     *\/\n+    public String suffix() {\n+        return suffix;\n+    }\n+\n+    private final String suffix;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/StandardPackageType.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Classes and interfaces of the internal application packaging model.\n+ *\n+ * Primary entities are: {@link Application}, {@link jdk.jpackage.internal.model.Package}, and {@link Launcher}.\n+ *\n+ * @apiNote\n+ * All methods of all interfaces and classes in this package return non-null values unless stated otherwise.\n+ *\/\n+package jdk.jpackage.internal.model;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/package-info.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,256 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.pipeline;\n+\n+import java.util.BitSet;\n+import java.util.Iterator;\n+import java.util.NoSuchElementException;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Spliterator;\n+import java.util.Spliterators;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+public final class BinaryMatrix {\n+\n+    BinaryMatrix(BinaryMatrix other) {\n+        rows = other.rows;\n+        columns = other.columns;\n+        size = other.size;\n+        values = (BitSet)other.values.clone();\n+    }\n+\n+    BinaryMatrix(int dimension) {\n+        this(dimension, dimension);\n+    }\n+\n+    BinaryMatrix(int rows, int columns) {\n+        this(rows, columns, null);\n+    }\n+\n+    BinaryMatrix(int rows, int columns, BitSet values) {\n+        this.rows = requirePositiveInteger(rows, \"Number of rows must be positive integer\");\n+        this.columns = requirePositiveInteger(columns, \"Number of columns must be positive integer\");\n+        size = rows * columns;\n+        this.values = Optional.ofNullable(values).orElseGet(() -> new BitSet(size));\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(columns, rows, values);\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n+            return true;\n+        if (obj == null)\n+            return false;\n+        if (getClass() != obj.getClass())\n+            return false;\n+        BinaryMatrix other = (BinaryMatrix) obj;\n+        return columns == other.columns && rows == other.rows && Objects.equals(values, other.values);\n+    }\n+\n+    interface Cursor {\n+        int row();\n+\n+        int column();\n+\n+        boolean value();\n+\n+        void value(boolean value);\n+    }\n+\n+    boolean isSquare() {\n+        return columns == rows;\n+    }\n+\n+    boolean isEmpty() {\n+        return values.isEmpty();\n+    }\n+\n+    int getRowCount() {\n+        return rows;\n+    }\n+\n+    int getColumnCount() {\n+        return columns;\n+    }\n+\n+    Iterator<Cursor> getRowIterator(int row) {\n+        return new RowIterator(row);\n+    }\n+\n+    Iterator<Cursor> getColumnIterator(int column) {\n+        return new ColumnIterator(column);\n+    }\n+\n+    Spliterator<Cursor> getRowSpliterator(int row) {\n+        return Spliterators.spliterator(getRowIterator(row), columns, Spliterator.ORDERED);\n+    }\n+\n+    Spliterator<Cursor> getColumnSpliterator(int column) {\n+        return Spliterators.spliterator(getColumnIterator(column), rows, Spliterator.ORDERED);\n+    }\n+\n+    Stream<Cursor> getRowAsStream(int row) {\n+        return toStream(getRowSpliterator(row));\n+    }\n+\n+    Stream<Cursor> getColumnAsStream(int column) {\n+        return toStream(getColumnSpliterator(column));\n+    }\n+\n+    boolean isSet(int row, int column) {\n+        return values.get(toIndex(row, column));\n+    }\n+\n+    void set(int row, int column, boolean value) {\n+        values.set(toIndex(row, column), value);\n+    }\n+\n+    void set(int row, int column) {\n+        set(row, column, true);\n+    }\n+\n+    void unset(int row, int column) {\n+        set(row, column, false);\n+    }\n+\n+    private int toIndex(int row, int column) {\n+        Objects.checkIndex(row, rows);\n+        Objects.checkIndex(column, columns);\n+        return row * columns + column;\n+    }\n+\n+    private static int requirePositiveInteger(int value, String message) {\n+        Objects.requireNonNull(message);\n+        if (value <= 0) {\n+            throw new IllegalArgumentException(message);\n+        }\n+        return value;\n+    }\n+\n+    private static Stream<Cursor> toStream(Spliterator<Cursor> split) {\n+        return StreamSupport.stream(split, false);\n+    }\n+\n+    \/**\n+     * Iterator over values of some selection.\n+     *\/\n+    private abstract class SelectionIterator implements Iterator<Cursor> {\n+        SelectionIterator(int index, int limit) {\n+            this.limit = Objects.checkIndex(limit, size + 1);\n+            this.index = Objects.checkIndex(index, limit);\n+        }\n+\n+        @Override\n+        public final boolean hasNext() {\n+            return index < limit;\n+        }\n+\n+        @Override\n+        public final Cursor next() {\n+            if (!hasNext()) {\n+                throw new NoSuchElementException();\n+            }\n+\n+            final var value = new CursorImpl(index, BinaryMatrix.this);\n+\n+            index = nextIndex(index);\n+\n+            return value;\n+        }\n+\n+        protected abstract int nextIndex(int idx);\n+\n+        private final int limit;\n+\n+        private int index;\n+    }\n+\n+    \/**\n+     * Iterator over values of some column.\n+     *\/\n+    private class ColumnIterator extends SelectionIterator {\n+        ColumnIterator(int column) {\n+            super(toIndex(0, column), size);\n+        }\n+\n+        @Override\n+        protected int nextIndex(int idx) {\n+            return idx + columns;\n+        }\n+    }\n+\n+    \/**\n+     * Iterator over values of some row.\n+     *\/\n+    private class RowIterator extends SelectionIterator {\n+        RowIterator(int row) {\n+            super(toIndex(row, 0), (row + 1) * columns);\n+        }\n+\n+        @Override\n+        protected int nextIndex(int idx) {\n+            return idx + 1;\n+        }\n+    }\n+\n+    private record CursorImpl(int index, BinaryMatrix matrix) implements Cursor {\n+\n+        CursorImpl {\n+            Objects.checkIndex(index, matrix.size);\n+        }\n+\n+        @Override\n+        public int row() {\n+            return index \/ matrix.columns;\n+        }\n+\n+        @Override\n+        public int column() {\n+            return index % matrix.columns;\n+        }\n+\n+        @Override\n+        public boolean value() {\n+            return matrix.values.get(index);\n+        }\n+\n+        @Override\n+        public void value(boolean value) {\n+            matrix.values.set(index, value);\n+        }\n+\n+    }\n+\n+    private final int rows;\n+    private final int columns;\n+    private final int size;\n+    private final BitSet values;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/pipeline\/BinaryMatrix.java","additions":256,"deletions":0,"binary":false,"changes":256,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.pipeline;\n+\n+import java.util.Objects;\n+\n+public record DirectedEdge<T>(T tail, T head) {\n+\n+    public DirectedEdge {\n+        Objects.requireNonNull(tail);\n+        Objects.requireNonNull(head);\n+\n+        if (tail.equals(head)) {\n+            throw new IllegalArgumentException(\"Loop edge\");\n+        }\n+    }\n+\n+    public T from() {\n+        return tail;\n+    }\n+\n+    public T to() {\n+        return head;\n+    }\n+\n+    public static <U> DirectedEdge<U> create(U tail, U head) {\n+        return new DirectedEdge<>(tail, head);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/pipeline\/DirectedEdge.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,352 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.pipeline;\n+\n+import static java.util.stream.Collectors.toCollection;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.NoSuchElementException;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+\n+\/**\n+ * Fixed directed acyclic graph (DAG).\n+ * <p>\n+ * Number of nodes is fixed, links between nodes can be added or removed.\n+ *\n+ * @param edgeMatrix the edge matrix. [i,j] addresses an edge, where 'i' is the\n+ *                   index of the head node of the edge in the node container\n+ *                   and 'j' is the index of the tail node of the edge in the\n+ *                   node container\n+ * @param nodes      the node container\n+ *\/\n+public record FixedDAG<T>(BinaryMatrix edgeMatrix, Nodes<T> nodes) {\n+\n+    public static <U> Builder<U> build() {\n+        return new Builder<>();\n+    }\n+\n+    public static final class Builder<U> {\n+\n+        public Builder<U> addNode(U node) {\n+            Objects.requireNonNull(node);\n+            if (!nodes.contains(node)) {\n+                nodes.add(node);\n+            }\n+            return this;\n+        }\n+\n+        public Builder<U> addEdge(U tail, U head) {\n+            return addEdge(DirectedEdge.create(tail, head));\n+        }\n+\n+        public Builder<U> addEdge(DirectedEdge<U> edge) {\n+            addNode(edge.tail());\n+            addNode(edge.head());\n+            edges.add(edge);\n+            return this;\n+        }\n+\n+        public FixedDAG<U> create() {\n+            return FixedDAG.create(edges, nodes);\n+        }\n+\n+        private final List<U> nodes = new ArrayList<>();\n+        private final List<DirectedEdge<U>> edges = new ArrayList<>();\n+    }\n+\n+    public interface Nodes<U> extends Iterable<U> {\n+        int size();\n+        int indexOf(U node);\n+        U get(int index);\n+\n+        static <V> Nodes<V> ofList(List<V> list) {\n+            return new Nodes<>() {\n+\n+                @Override\n+                public int size() {\n+                    return list.size();\n+                }\n+\n+                @Override\n+                public int indexOf(V node) {\n+                    final int index = list.indexOf(node);\n+                    if (index < 0) {\n+                        throw new NoSuchElementException();\n+                    }\n+                    return index;\n+                }\n+\n+                @Override\n+                public V get(int index) {\n+                    return list.get(index);\n+                }\n+\n+                @Override\n+                public Iterator<V> iterator() {\n+                    return list.iterator();\n+                }\n+\n+            };\n+        }\n+    }\n+\n+    public FixedDAG {\n+        Objects.requireNonNull(nodes);\n+\n+        Objects.requireNonNull(edgeMatrix);\n+        if (!edgeMatrix.isSquare()) {\n+            throw new IllegalArgumentException(\"Matrix must be square\");\n+        }\n+\n+        if (edgeMatrix.getColumnCount() != nodes.size()) {\n+            throw new IllegalArgumentException(\"Matrix must have number of columns equal to the number of nodes\");\n+        }\n+    }\n+\n+    public static <U> FixedDAG<U> create(Collection<DirectedEdge<U>> edges, List<U> nodes) {\n+        return create(edges, Nodes.ofList(nodes));\n+    }\n+\n+    static <U> FixedDAG<U> create(Collection<DirectedEdge<U>> edges, Nodes<U> nodes) {\n+        final var edgeMatrix = new BinaryMatrix(nodes.size());\n+        for (final var edge : edges) {\n+            final int row = nodes.indexOf(edge.tail());\n+            final int column = nodes.indexOf(edge.head());\n+            edgeMatrix.set(row, column);\n+        }\n+\n+        if (isCyclic(edgeMatrix, null)) {\n+            throw new UnsupportedOperationException(\"Cyclic edges not allowed\");\n+        }\n+\n+        return new FixedDAG<>(edgeMatrix, nodes);\n+    }\n+\n+    \/**\n+     * Returns topologically ordered nodes of this graph.\n+     * <p>\n+     * For every directed edge (\"tail\", \"head\") from \"tail\" to \"head\", \"tail\" comes before \"head\".\n+     *\n+     * @return topologically ordered nodes of this graph\n+     *\/\n+    public List<T> topologicalSort() {\n+        final List<T> result = new ArrayList<>();\n+        isCyclic(edgeMatrix, index -> {\n+            result.add(nodes.get(index));\n+        });\n+        return result;\n+    }\n+\n+    public List<T> getAllHeadsOf(T node) {\n+        return getAllNodesOf(node, true);\n+    }\n+\n+    public List<T> getAllTailsOf(T node) {\n+        return getAllNodesOf(node, false);\n+    }\n+\n+    \/**\n+     * Gets the list of nodes that are heads of the edges sharing the same tail,\n+     * which is the given node.\n+     * <p>\n+     * The returned list is ordered by the indexes of the nodes in the node\n+     * container of this graph.\n+     *\n+     * @param node a node\n+     * @return the list of nodes that are heads of the edges sharing the same tail,\n+     *         which is the given node\n+     *\n+     * @see Nodes\n+     *\/\n+    public List<T> getHeadsOf(T node) {\n+        final int tail = nodes.indexOf(node);\n+        return getOutgoingEdges(tail, edgeMatrix).map(BinaryMatrix.Cursor::column).map(nodes::get).toList();\n+    }\n+\n+    \/**\n+     * Gets the list of nodes that are tails of the edges sharing the same head,\n+     * which is the given node.\n+     * <p>\n+     * The returned list is ordered by the indexes of the nodes in the node\n+     * container of this graph.\n+     *\n+     * @param node a node\n+     * @return the list of nodes that are tails of the edges sharing the same head,\n+     *         which is the given node\n+     *\n+     * @see Nodes\n+     *\/\n+    public List<T> getTailsOf(T node) {\n+        final int head = nodes.indexOf(node);\n+        return getIncomingEdges(head, edgeMatrix).map(BinaryMatrix.Cursor::row).map(nodes::get).toList();\n+    }\n+\n+    \/**\n+     * Get the list of nodes without incoming edges.\n+     * <p>\n+     * A node without incoming edges is a node that is not a head of any of the edges in the graph.\n+     * <p>\n+     * The returned list is ordered by the indexes of the nodes in the node\n+     * container of this graph.\n+     *\n+     * @return the list of nodes without incoming edges\n+     *\/\n+    public List<T> getNoIncomingEdges() {\n+        return getNoIncomingEdges(edgeMatrix).mapToObj(nodes::get).toList();\n+    }\n+\n+    \/**\n+     * Get the list of nodes without outgoing edges.\n+     * <p>\n+     * A node without outgoing edges is a node that is not a tail of any of the edges in the graph.\n+     * <p>\n+     * The returned list is ordered by the indexes of the nodes in the node\n+     * container of this graph.\n+     *\n+     * @return the list of nodes without outgoing edges\n+     *\/\n+    public List<T> getNoOutgoingEdges() {\n+        return getNoOutgoingEdges(edgeMatrix).mapToObj(nodes::get).toList();\n+    }\n+\n+    public void dumpToStdout() {\n+        dump(System.out::println);\n+    }\n+\n+    public void dump(Consumer<String> sink) {\n+        sink.accept(\"graph LR;\"); \/\/ mermaid \"left-to-right\" graph format\n+        StreamSupport.stream(nodes.spliterator(), true).map(tail -> {\n+            return getHeadsOf(tail).stream().map(head -> tail + \"-->\" + head);\n+        }).flatMap(x -> x).toList().forEach(sink);\n+    }\n+\n+    private List<T> getAllNodesOf(T node, boolean heads) {\n+        final Set<Integer> nodeIndexes = new TreeSet<>();\n+        traverseNodes(nodes.indexOf(node), edgeMatrix, heads, nodeIndex -> {\n+            return nodeIndexes.add(nodeIndex);\n+        });\n+\n+        return nodeIndexes.stream().map(nodes::get).toList();\n+    }\n+\n+    static void traverseNodes(int nodeIndex, BinaryMatrix edgeMatrix, boolean heads, Function<Integer, Boolean> nodeAccumulator) {\n+        final Stream<Integer> nodes;\n+        if (heads) {\n+            nodes = getOutgoingEdges(nodeIndex, edgeMatrix).map(BinaryMatrix.Cursor::column);\n+        } else {\n+            nodes = getIncomingEdges(nodeIndex, edgeMatrix).map(BinaryMatrix.Cursor::row);\n+        }\n+        nodes.forEach(n -> {\n+            if (nodeAccumulator.apply(n)) {\n+                traverseNodes(n, edgeMatrix, heads, nodeAccumulator);\n+            }\n+        });\n+    }\n+\n+    static Stream<BinaryMatrix.Cursor> getOutgoingEdges(int node, BinaryMatrix edgeMatrix) {\n+        return edgeMatrix.getRowAsStream(node).filter(BinaryMatrix.Cursor::value);\n+    }\n+\n+    static Stream<BinaryMatrix.Cursor> getIncomingEdges(int node, BinaryMatrix edgeMatrix) {\n+        return edgeMatrix.getColumnAsStream(node).filter(BinaryMatrix.Cursor::value);\n+    }\n+\n+    static IntStream getNoIncomingEdges(BinaryMatrix edgeMatrix) {\n+        return IntStream.range(0, edgeMatrix.getColumnCount()).filter(column -> {\n+            return getIncomingEdges(column, edgeMatrix).findAny().isEmpty();\n+        });\n+    }\n+\n+    static IntStream getNoOutgoingEdges(BinaryMatrix edgeMatrix) {\n+        return IntStream.range(0, edgeMatrix.getRowCount()).filter(row -> {\n+            return getOutgoingEdges(row, edgeMatrix).findAny().isEmpty();\n+        });\n+    }\n+\n+    private static boolean isCyclic(BinaryMatrix edgeMatrix, Consumer<Integer> topologicalOrderAccumulator) {\n+\n+        final var edgeMatrixCopy = new BinaryMatrix(edgeMatrix);\n+\n+        \/\/ Use Kahn's algorithm from https:\/\/en.wikipedia.org\/wiki\/Topological_sorting#Kahn's_algorithm to find cyclic edges\n+        \/\/ Variable names picked from the algorithm pseudo-code.\n+\n+        \/\/ Nodes with no incoming edges.\n+        List<Integer> S = getNoIncomingEdges(edgeMatrix).mapToObj(Integer::valueOf).collect(toCollection(ArrayList::new));\n+\n+        for (var i = 0; i != S.size(); ++i) {\n+            final var n = S.get(i);\n+\n+            if (topologicalOrderAccumulator != null) {\n+                topologicalOrderAccumulator.accept(n);\n+            }\n+\n+            for (final var e : getOutgoingEdges(n, edgeMatrixCopy).toList()) {\n+                e.value(false); \/\/ remove the edge\n+\n+                final var m = e.column();\n+\n+                if (getIncomingEdges(m, edgeMatrixCopy).findAny().isEmpty()) {\n+                    \/\/ No incoming edges to 'm' node.\n+                    if (topologicalOrderAccumulator != null) {\n+                        if (i > 0) {\n+                            S = S.subList(i, S.size());\n+                            i = 0;\n+                        }\n+\n+                        final var insertAtIndex = Math.abs((Collections.binarySearch(S, m) + 1));\n+                        if (insertAtIndex == 0) {\n+                            if (i == -1) {\n+                                S.add(0, m);\n+                            } else {\n+                                S.set(0, m);\n+                                i = -1;\n+                            }\n+                        } else {\n+                            S.add(insertAtIndex, m);\n+                        }\n+                    } else if (i >= 0) {\n+                        S.set(i, m);\n+                        i--;\n+                    } else {\n+                        S.add(m);\n+                    }\n+                }\n+            }\n+        }\n+\n+        return !edgeMatrixCopy.isEmpty();\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/pipeline\/FixedDAG.java","additions":352,"deletions":0,"binary":false,"changes":352,"status":"added"},{"patch":"@@ -0,0 +1,211 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.pipeline;\n+\n+import static jdk.jpackage.internal.pipeline.FixedDAG.getIncomingEdges;\n+import static jdk.jpackage.internal.pipeline.FixedDAG.getNoOutgoingEdges;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CompletionException;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Executor;\n+\n+public final class TaskPipelineBuilder {\n+\n+    public final class TaskBuilder extends TaskSpecBuilder<Callable<Void>> {\n+\n+        TaskBuilder(Callable<Void> task) {\n+            super(task);\n+        }\n+\n+        @Override\n+        public TaskBuilder addDependent(Callable<Void> v) {\n+            super.addDependent(v);\n+            return this;\n+        }\n+\n+        @Override\n+        public TaskBuilder addDependency(Callable<Void> v) {\n+            super.addDependency(v);\n+            return this;\n+        }\n+\n+        @Override\n+        public TaskBuilder addDependencies(Collection<? extends Callable<Void>> v) {\n+            super.addDependencies(v);\n+            return this;\n+        }\n+\n+        @Override\n+        public TaskBuilder addDependents(Collection<? extends Callable<Void>> v) {\n+            super.addDependents(v);\n+            return this;\n+        }\n+\n+        public TaskPipelineBuilder add() {\n+            final var links = createLinks();\n+            if (links.isEmpty()) {\n+                return addTask(task());\n+            } else {\n+                links.forEach(TaskPipelineBuilder.this::linkTasks);\n+                return TaskPipelineBuilder.this;\n+            }\n+        }\n+    }\n+\n+    public TaskBuilder task(Callable<Void> task) {\n+        return new TaskBuilder(task);\n+    }\n+\n+    public TaskPipelineBuilder executor(Executor v) {\n+        executor = v;\n+        return this;\n+    }\n+\n+    public TaskPipelineBuilder sequentialExecutor() {\n+        executor = null;\n+        return this;\n+    }\n+\n+    public TaskPipelineBuilder addTask(Callable<Void> task) {\n+        taskGraphBuilder.addNode(task);\n+        return this;\n+    }\n+\n+    public TaskPipelineBuilder linkTasks(Callable<Void> tail, Callable<Void> head) {\n+        return linkTasks(DirectedEdge.create(tail, head));\n+    }\n+\n+    public TaskPipelineBuilder linkTasks(DirectedEdge<Callable<Void>> edge) {\n+        taskGraphBuilder.addEdge(edge);\n+        return this;\n+    }\n+\n+    public Callable<Void> create() {\n+        final var taskGraph = taskGraphBuilder.create();\n+        if (executor == null) {\n+            final var tasks = taskGraph.topologicalSort();\n+            return new SequentialWrapperTask(tasks);\n+        } else {\n+            return new ParallelWrapperTask(taskGraph, executor);\n+        }\n+    }\n+\n+    private record SequentialWrapperTask(List<Callable<Void>> tasks) implements Callable<Void> {\n+\n+        SequentialWrapperTask {\n+            Objects.requireNonNull(tasks);\n+        }\n+\n+        @Override\n+        public Void call() throws Exception {\n+            for (final var task : tasks) {\n+                task.call();\n+            }\n+            return null;\n+        }\n+\n+    }\n+\n+    private record ParallelWrapperTask(FixedDAG<Callable<Void>> taskGraph, Executor executor) implements Callable<Void> {\n+\n+        ParallelWrapperTask {\n+            Objects.requireNonNull(taskGraph);\n+            Objects.requireNonNull(executor);\n+        }\n+\n+        @Override\n+        public Void call() throws Exception {\n+\n+            final var taskFutures = new CompletableFuture<?>[taskGraph.nodes().size()];\n+\n+            \/\/ Schedule tasks in the order they should be executed: dependencies before dependents.\n+            for (final var task : taskGraph.topologicalSort()) {\n+                final var taskIndex = taskGraph.nodes().indexOf(task);\n+\n+                final var dependencyTaskFutures = getIncomingEdges(taskIndex, taskGraph.edgeMatrix())\n+                        .map(BinaryMatrix.Cursor::row)\n+                        .map(dependencyTaskIndex -> {\n+                            return taskFutures[dependencyTaskIndex];\n+                        }).toArray(CompletableFuture<?>[]::new);\n+\n+                final CompletableFuture<?> f;\n+                if (dependencyTaskFutures.length == 0) {\n+                    f = CompletableFuture.runAsync(toRunnable(task), executor);\n+                } else {\n+                    f = CompletableFuture.allOf(dependencyTaskFutures).thenRun(toRunnable(task));\n+                }\n+\n+                taskFutures[taskIndex] = f;\n+            }\n+\n+            final var rootFutures = getNoOutgoingEdges(taskGraph.edgeMatrix()).mapToObj(taskIndex -> {\n+                return taskFutures[taskIndex];\n+            }).toArray(CompletableFuture[]::new);\n+\n+            final CompletableFuture <?> rootFuture;\n+            if (rootFutures.length == 1) {\n+                rootFuture = rootFutures[0];\n+            } else {\n+                rootFuture = CompletableFuture.allOf(rootFutures);\n+            }\n+\n+            try {\n+                rootFuture.get();\n+            } catch (ExecutionException ee) {\n+                if (ee.getCause() instanceof Exception ex) {\n+                    throw ex;\n+                } else {\n+                    throw ee;\n+                }\n+            }\n+\n+            return null;\n+        }\n+\n+        private static Runnable toRunnable(Callable<Void> callable) {\n+            return () -> {\n+                try {\n+                    callable.call();\n+                } catch (Error er) {\n+                    throw er;\n+                } catch (RuntimeException ex) {\n+                    throw ex;\n+                } catch (Throwable t) {\n+                    throw new CompletionException(t);\n+                }\n+            };\n+        }\n+\n+    }\n+\n+    private final FixedDAG.Builder<Callable<Void>> taskGraphBuilder = new FixedDAG.Builder<>();\n+    private Executor executor;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/pipeline\/TaskPipelineBuilder.java","additions":211,"deletions":0,"binary":false,"changes":211,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.pipeline;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+public class TaskSpecBuilder<T> {\n+\n+    public TaskSpecBuilder(T task) {\n+        this.task = Objects.requireNonNull(task);\n+    }\n+\n+    public T task() {\n+        return task;\n+    }\n+\n+    public TaskSpecBuilder<T> addDependent(T v) {\n+        Objects.requireNonNull(v);\n+        dependents.add(v);\n+        return this;\n+    }\n+\n+    public TaskSpecBuilder<T> addDependency(T v) {\n+        Objects.requireNonNull(v);\n+        dependencies.add(v);\n+        return this;\n+    }\n+\n+    public TaskSpecBuilder<T> addDependencies(Collection<? extends T> v) {\n+        Objects.requireNonNull(v);\n+        v.forEach(Objects::requireNonNull);\n+        dependencies.addAll(v);\n+        return this;\n+    }\n+\n+    public TaskSpecBuilder<T> addDependents(Collection<? extends T> v) {\n+        Objects.requireNonNull(v);\n+        v.forEach(Objects::requireNonNull);\n+        dependents.addAll(v);\n+        return this;\n+    }\n+\n+    public List<DirectedEdge<T>> createLinks() {\n+        List<DirectedEdge<T>> edges = new ArrayList<>();\n+\n+        for (var dependency : dependencies) {\n+            edges.add(DirectedEdge.create(dependency, task));\n+        }\n+\n+        for (var dependent : dependents) {\n+            edges.add(DirectedEdge.create(task, dependent));\n+        }\n+\n+        return edges;\n+    }\n+\n+    private final Set<T> dependencies = new LinkedHashSet<>();\n+    private final Set<T> dependents = new LinkedHashSet<>();\n+    private final T task;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/pipeline\/TaskSpecBuilder.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"},{"patch":"@@ -76,0 +76,1 @@\n+error.no.name.advice=Specify name with --name\n@@ -80,1 +81,3 @@\n-error.invalid-app-image=Error: app-image dir \"{0}\" generated by another jpackage version or malformed \"{1}\"\n+error.invalid-app-image=Error: app-image dir \"{0}\" generated by another jpackage version or malformed \"{1}\" file\n+\n+error.invalid-install-dir=Invalid installation directory \"{0}\"\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources.properties","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.util;\n+\n+import java.util.Collection;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+\/**\n+ * This class consists exclusively of static methods that operate on or return collections.\n+ *\/\n+public final class CollectionUtils {\n+\n+    \/**\n+     * Casts the given collection to the requested type.\n+     *\n+     * @param <T> the type of elements in this output collection\n+     * @param <B> the type of elements in this input collection\n+     * @param <C> the output collection type\n+     * @param v the input collection. Null is permitted.\n+     * @return the input collection cast to the requested type\n+     *\/\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T extends B, B, C extends Collection<T>> C toCollection(Collection<B> v) {\n+        Collection<?> tmp = v;\n+        return (C) tmp;\n+    }\n+\n+    \/**\n+     * Casts the given collection to the requested upper bounded wildcard (UBW) type.\n+     *\n+     * @param <T> the type of elements in this output collection\n+     * @param <B> the upper bound type of elements in this input collection\n+     * @param <C> the output collection type\n+     * @param v the input collection. Null is permitted.\n+     * @return the input collection cast to the requested type\n+     *\/\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T extends B, B, C extends Collection<T>> C toCollectionUBW(Collection<? extends B> v) {\n+        Collection<?> tmp = v;\n+        return (C) tmp;\n+    }\n+\n+    \/**\n+     * Converts the given collection to {@link Set}.\n+     *\n+     * @param <T> the type of elements in this output collection\n+     * @param col the input collection. Null is permitted.\n+     * @return the input collection if it is of type {@link Set} or a new\n+     *         {@link Set} instance created from the input collection\n+     *\/\n+    public static <T> Set<T> toSet(Collection<T> col) {\n+        if (col instanceof Set<T> set) {\n+            return set;\n+        } else {\n+            return Optional.ofNullable(col).map(Collection::stream).orElseGet(Stream::of).collect(Collectors.toSet());\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/util\/CollectionUtils.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,531 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.util;\n+\n+import static java.util.stream.Collectors.toMap;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n+import java.lang.reflect.Proxy;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.function.BinaryOperator;\n+import java.util.function.Predicate;\n+import java.util.stream.Stream;\n+\n+\/**\n+ * Dynamic proxy dispatching method calls to multiple objects. It is aimed at\n+ * creating objects from mixins. The class provides functionality similar to\n+ * that of <code>net.sf.cglib.proxy.Mixin<\/code> class from the cglib library.\n+ *\n+ * Sample usage:\n+ * {@snippet :\n+ * interface Sailboat {\n+ *     default void trimSails() {\n+ *     }\n+ * }\n+ *\n+ * interface WithMain {\n+ *     void trimMain();\n+ * }\n+ *\n+ * interface WithJib {\n+ *     void trimJib();\n+ * }\n+ *\n+ * interface Sloop extends Sailboat, WithMain, WithJib {\n+ *     @Override\n+ *     public default void trimSails() {\n+ *         System.out.println(\"On the sloop:\");\n+ *         trimMain();\n+ *         trimJib();\n+ *     }\n+ * }\n+ *\n+ * interface Catboat extends Sailboat, WithMain {\n+ *     @Override\n+ *     public default void trimSails() {\n+ *         System.out.println(\"On the catboat:\");\n+ *         trimMain();\n+ *     }\n+ * }\n+ *\n+ * final var withMain = new WithMain() {\n+ *     @Override\n+ *     public void trimMain() {\n+ *         System.out.println(\"  trim the main\");\n+ *     }\n+ * };\n+ *\n+ * final var withJib = new WithJib() {\n+ *     @Override\n+ *     public void trimJib() {\n+ *         System.out.println(\"  trim the jib\");\n+ *     }\n+ * };\n+ *\n+ * Sloop sloop = CompositeProxy.create(Sloop.class, new Sailboat() {\n+ * }, withMain, withJib);\n+ *\n+ * Catboat catboat = CompositeProxy.create(Catboat.class, new Sailboat() {\n+ * }, withMain);\n+ *\n+ * sloop.trimSails();\n+ * catboat.trimSails();\n+ * }\n+ *\n+ * Output:\n+ *\n+ * <pre>\n+ * On the sloop:\n+ *   trim the main\n+ *   trim the jib\n+ * On the cat:\n+ *   trim the main\n+ * <\/pre>\n+ *\n+ * @see Proxy\n+ *\/\n+public final class CompositeProxy {\n+\n+    \/**\n+     * Builder of {@link CompositeProxy} instances.\n+     *\/\n+    public static final class Builder {\n+\n+        \/**\n+         * Returns a proxy instance for the specified interface that dispatches method\n+         * invocations to the specified handlers. Uses previously configured invocation\n+         * tunnel and conflict resolver objects with the created proxy object.\n+         *\n+         * @param <T>           the interface type\n+         * @param interfaceType the interface class composite proxy instance should\n+         *                      implement\n+         * @param slices        handlers for the method calls of the interface\n+         * @return a new instance of {@link Proxy} implementing the given interface and\n+         *         dispatching the interface method invocations to the given handlers\n+         *\/\n+        public <T> T create(Class<T> interfaceType, Object... slices) {\n+            return CompositeProxy.createCompositeProxy(interfaceType, conflictResolver, invokeTunnel, slices);\n+        }\n+\n+        \/**\n+         * Sets the method dispatch conflict resolver for this builder. The conflict\n+         * resolver is used by composite proxy to select a method call handler from\n+         * multiple candidates.\n+         *\n+         * @param v the conflict resolver for this builder or <code>null<\/code> if the\n+         *          default conflict resolver should be used\n+         * @return this\n+         *\/\n+        public Builder conflictResolver(BinaryOperator<Method> v) {\n+            conflictResolver = v;\n+            return this;\n+        }\n+\n+        \/**\n+         * Sets the invocation tunnel for this builder.\n+         *\n+         * @param v the invocation tunnel for this builder or <code>null<\/code> if no\n+         *          invocation tunnel should be used\n+         * @return this\n+         *\/\n+        public Builder invokeTunnel(InvokeTunnel v) {\n+            invokeTunnel = v;\n+            return this;\n+        }\n+\n+        private Builder() {}\n+\n+        private BinaryOperator<Method> conflictResolver = STANDARD_CONFLICT_RESOLVER;\n+        private InvokeTunnel invokeTunnel;\n+    }\n+\n+    \/**\n+     * Invocation tunnel. Must be used when building a composite proxy from objects\n+     * that implement package-private interfaces to prevent\n+     * {@link IllegalAccessException} exceptions being thrown by {@link Proxy}\n+     * instances. Must be implemented by classes from packages with package-private\n+     * interfaces used with {@link CompositeProxy} class.\n+     *\n+     * Assumed implementation:\n+     * {@snippet :\n+     *\n+     * package org.foo;\n+     *\n+     * import java.lang.reflect.InvocationHandler;\n+     * import java.lang.reflect.Method;\n+     * import jdk.jpackage.internal.util.CompositeProxy;\n+     *\n+     * final class CompositeProxyTunnel implements CompositeProxy.InvokeTunnel {\n+     *\n+     *     @Override\n+     *     public Object invoke(Object obj, Method method, Object[] args) throws Throwable {\n+     *         return method.invoke(obj, args);\n+     *     }\n+     *\n+     *     @Override\n+     *     public Object invokeDefault(Object proxy, Method method, Object[] args) throws Throwable {\n+     *         return InvocationHandler.invokeDefault(proxy, method, args);\n+     *     }\n+     *\n+     *     static final CompositeProxyTunnel INSTANCE = new CompositeProxyTunnel();\n+     * }\n+     *\/\n+    public interface InvokeTunnel {\n+        \/**\n+         * Processes a method invocation on an object of composite proxy and returns the result.\n+         *\n+         * @implNote Implementation should call the given method on the given object\n+         *           with the given arguments and return the result of the call.\n+         * @param obj    the object on which to invoke the method\n+         * @param method the method to invoke\n+         * @param args   the arguments to use in the method call\n+         * @return the result of the method call\n+         * @throws Throwable if the method throws\n+         *\/\n+        Object invoke(Object obj, Method method, Object[] args) throws Throwable;\n+\n+        \/**\n+         * Processes a default interface method invocation on a composite proxy and\n+         * returns the result.\n+         *\n+         * @implNote Implementation should call\n+         *           {@link InvocationHandler#invokeDefault(Object, Method, Object...)}\n+         *           method on the given proxy object with the given arguments and\n+         *           return the result of the call.\n+         * @param proxy  the <code>proxy<\/code> parameter for\n+         *               {@link InvocationHandler#invokeDefault(Object, Method, Object...)}\n+         *               call\n+         * @param method the <code>method<\/code> parameter for\n+         *               {@link InvocationHandler#invokeDefault(Object, Method, Object...)}\n+         *               call\n+         * @param args   the <code>args<\/code> parameter for\n+         *               {@link InvocationHandler#invokeDefault(Object, Method, Object...)}\n+         *               call\n+         * @return the result of the\n+         *         {@link InvocationHandler#invokeDefault(Object, Method, Object...)}\n+         *         call\n+         * @throws Throwable if the {@link InvocationHandler#invokeDefault(Object, Method, Object...)} call throws\n+         *\/\n+        Object invokeDefault(Object proxy, Method method, Object[] args) throws Throwable;\n+    }\n+\n+    \/**\n+     * Creates a new proxy builder.\n+     * @return a new proxy builder\n+     *\/\n+    public static Builder build() {\n+        return new Builder();\n+    }\n+\n+    \/**\n+     * Shortcut for\n+     * <code>CompositeProxy.build().create(interfaceType, slices)<\/code>.\n+     *\n+     * @see Builder#create(Class, Object...)\n+     *\/\n+    public static <T> T create(Class<T> interfaceType, Object... slices) {\n+        return build().create(interfaceType, slices);\n+    }\n+\n+    private CompositeProxy() {\n+    }\n+\n+    private static <T> T createCompositeProxy(Class<T> interfaceType, BinaryOperator<Method> conflictResolver,\n+            InvokeTunnel invokeTunnel, Object... slices) {\n+\n+        validateTypeIsInterface(interfaceType);\n+\n+        final var interfaces = interfaceType.getInterfaces();\n+        List.of(interfaces).forEach(CompositeProxy::validateTypeIsInterface);\n+\n+        if (interfaces.length != slices.length) {\n+            throw new IllegalArgumentException(\n+                    String.format(\"type %s must extend %d interfaces\", interfaceType.getName(), slices.length));\n+        }\n+\n+        final Map<Class<?>, Object> interfaceDispatch = createInterfaceDispatch(interfaces, slices);\n+\n+        final Map<Method, Handler> methodDispatch = getProxyableMethods(interfaceType).map(method -> {\n+            var handler = createHandler(interfaceType, method, interfaceDispatch, conflictResolver, invokeTunnel);\n+            if (handler != null) {\n+                return Map.entry(method, handler);\n+            } else {\n+                return null;\n+            }\n+        }).filter(Objects::nonNull).collect(toMap(Map.Entry::getKey, Map.Entry::getValue));\n+\n+        @SuppressWarnings(\"unchecked\")\n+        T proxy = (T) Proxy.newProxyInstance(interfaceType.getClassLoader(), new Class<?>[] { interfaceType },\n+                new CompositeProxyInvocationHandler(methodDispatch));\n+\n+        return proxy;\n+    }\n+\n+    private static Map<Class<?>, Object> createInterfaceDispatch(Class<?>[] interfaces, Object[] slices) {\n+\n+        final Map<Class<?>, Object> interfaceDispatch = Stream.of(interfaces).collect(toMap(x -> x, iface -> {\n+            return Stream.of(slices).filter(obj -> {\n+                return Set.of(obj.getClass().getInterfaces()).contains(iface);\n+            }).reduce((a, b) -> {\n+                throw new IllegalArgumentException(\n+                        String.format(\"both [%s] and [%s] slices implement %s\", a, b, iface));\n+            }).orElseThrow(() -> createInterfaceNotImplementedException(List.of(iface)));\n+        }));\n+\n+        if (interfaceDispatch.size() != interfaces.length) {\n+            final List<Class<?>> missingInterfaces = new ArrayList<>(Set.of(interfaces));\n+            missingInterfaces.removeAll(interfaceDispatch.keySet());\n+            throw createInterfaceNotImplementedException(missingInterfaces);\n+        }\n+\n+        return Stream.of(interfaces).flatMap(iface -> {\n+            return unfoldInterface(iface).map(unfoldedIface -> {\n+                return Map.entry(unfoldedIface, interfaceDispatch.get(iface));\n+            });\n+        }).collect(toMap(Map.Entry::getKey, Map.Entry::getValue));\n+    }\n+\n+    private static Stream<Class<?>> unfoldInterface(Class<?> interfaceType) {\n+        return Stream.concat(Stream.of(interfaceType),\n+                Stream.of(interfaceType.getInterfaces()).flatMap(CompositeProxy::unfoldInterface));\n+    }\n+\n+    private static IllegalArgumentException createInterfaceNotImplementedException(\n+            Collection<Class<?>> missingInterfaces) {\n+        return new IllegalArgumentException(String.format(\"none of the slices implement %s\", missingInterfaces));\n+    }\n+\n+    private static void validateTypeIsInterface(Class<?> type) {\n+        if (!type.isInterface()) {\n+            throw new IllegalArgumentException(String.format(\"type %s must be an interface\", type.getName()));\n+        }\n+    }\n+\n+    private static Handler createHandler(Class<?> interfaceType, Method method, Map<Class<?>, Object> interfaceDispatch,\n+            BinaryOperator<Method> conflictResolver, InvokeTunnel invokeTunnel) {\n+\n+        final var methodDeclaringClass = method.getDeclaringClass();\n+\n+        if (!methodDeclaringClass.equals(interfaceType)) {\n+            \/\/ The method is declared in one of the superinterfaces.\n+            final var slice = interfaceDispatch.get(methodDeclaringClass);\n+\n+            if (isInvokeDefault(method, slice)) {\n+                return createHandlerForDefaultMethod(method, invokeTunnel);\n+            } else {\n+                return createHandlerForMethod(slice, method, invokeTunnel);\n+            }\n+        } else if (method.isDefault()) {\n+            return createHandlerForDefaultMethod(method, invokeTunnel);\n+        } else {\n+            \/\/ Find a slice handling the method.\n+            var handler = interfaceDispatch.entrySet().stream().map(e -> {\n+                try {\n+                    Class<?> iface = e.getKey();\n+                    Object slice = e.getValue();\n+                    return createHandlerForMethod(slice, iface.getMethod(method.getName(), method.getParameterTypes()),\n+                            invokeTunnel);\n+                } catch (NoSuchMethodException ex) {\n+                    return null;\n+                }\n+            }).filter(Objects::nonNull).reduce(new ConflictResolverAdapter(conflictResolver)).orElseThrow(() -> {\n+                return new IllegalArgumentException(String.format(\"none of the slices can handle %s\", method));\n+            });\n+\n+            return handler;\n+        }\n+    }\n+\n+    private static Stream<Method> getProxyableMethods(Class<?> interfaceType) {\n+        return Stream.of(interfaceType.getMethods()).filter(method -> !Modifier.isStatic(method.getModifiers()));\n+    }\n+\n+    private static boolean isInvokeDefault(Method method, Object slice) {\n+        if (!method.isDefault()) {\n+            return false;\n+        }\n+\n+        \/\/ The \"method\" is default.\n+        \/\/ See if is overridden by any non-abstract method in the \"slice\".\n+        \/\/ If it is, InvocationHandler.invokeDefault() should not be used to call it.\n+\n+        final var sliceClass = slice.getClass();\n+\n+        final var methodOverriden = Stream.of(sliceClass.getMethods()).filter(Predicate.not(Predicate.isEqual(method)))\n+                .filter(sliceMethod -> !Modifier.isAbstract(sliceMethod.getModifiers()))\n+                .anyMatch(sliceMethod -> signatureEquals(sliceMethod, method));\n+\n+        return !methodOverriden;\n+    }\n+\n+    private static boolean signatureEquals(Method a, Method b) {\n+        if (!Objects.equals(a.getName(), b.getName()) || !Arrays.equals(a.getParameterTypes(), b.getParameterTypes())) {\n+            return false;\n+        }\n+\n+        return Objects.equals(a.getReturnType(), b.getReturnType());\n+    }\n+\n+    private record CompositeProxyInvocationHandler(Map<Method, Handler> dispatch) implements InvocationHandler {\n+\n+        @Override\n+        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+            var handler = dispatch.get(method);\n+            if (handler != null) {\n+                return handler.invoke(proxy, args);\n+            } else if (method.isDefault()) {\n+                return InvocationHandler.invokeDefault(proxy, method, args);\n+            } else {\n+                handler = OBJECT_METHOD_DISPATCH.get(method);\n+                if (handler != null) {\n+                    return handler.invoke(proxy, args);\n+                } else {\n+                    throw new UnsupportedOperationException(String.format(\"No handler for %s\", method));\n+                }\n+            }\n+        }\n+\n+        private static String objectToString(Object obj) {\n+            return obj.getClass().getName() + '@' + Integer.toHexString(System.identityHashCode(obj));\n+        }\n+\n+        private static boolean objectEquals(Object obj, Object other) {\n+            return obj == other;\n+        }\n+\n+        private static Method getMethod(Class<?> type, String methodName, Class<?>...paramaterTypes) {\n+            try {\n+                return type.getDeclaredMethod(methodName, paramaterTypes);\n+            } catch (NoSuchMethodException|SecurityException ex) {\n+                throw new InternalError(ex);\n+            }\n+        }\n+\n+        static class ObjectMethodHandler extends HandlerOfMethod {\n+\n+            ObjectMethodHandler(Method method) {\n+                super(method);\n+            }\n+\n+            @Override\n+            public Object invoke(Object proxy, Object[] args) throws Throwable {\n+                if (args == null) {\n+                    return method.invoke(null, proxy);\n+                } else {\n+                    final var newArgs = new Object[args.length + 1];\n+                    newArgs[0] = proxy;\n+                    System.arraycopy(args, 0, newArgs, 1, args.length);\n+                    return method.invoke(null, newArgs);\n+                }\n+            }\n+        }\n+\n+        private static final Map<Method, Handler> OBJECT_METHOD_DISPATCH = Map.of(\n+                getMethod(Object.class, \"toString\"),\n+                new ObjectMethodHandler(getMethod(CompositeProxyInvocationHandler.class, \"objectToString\", Object.class)),\n+                getMethod(Object.class, \"equals\", Object.class),\n+                new ObjectMethodHandler(getMethod(CompositeProxyInvocationHandler.class, \"objectEquals\", Object.class, Object.class)),\n+                getMethod(Object.class, \"hashCode\"),\n+                new ObjectMethodHandler(getMethod(System.class, \"identityHashCode\", Object.class))\n+        );\n+    }\n+\n+    private static HandlerOfMethod createHandlerForDefaultMethod(Method method, InvokeTunnel invokeTunnel) {\n+        if (invokeTunnel != null) {\n+            return new HandlerOfMethod(method) {\n+                @Override\n+                public Object invoke(Object proxy, Object[] args) throws Throwable {\n+                    return invokeTunnel.invokeDefault(proxy, this.method, args);\n+                }\n+            };\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    private static HandlerOfMethod createHandlerForMethod(Object obj, Method method, InvokeTunnel invokeTunnel) {\n+        if (invokeTunnel != null) {\n+            return new HandlerOfMethod(method) {\n+                @Override\n+                public Object invoke(Object proxy, Object[] args) throws Throwable {\n+                    return invokeTunnel.invoke(obj, this.method, args);\n+                }\n+            };\n+        } else {\n+            return new HandlerOfMethod(method) {\n+                @Override\n+                public Object invoke(Object proxy, Object[] args) throws Throwable {\n+                    return this.method.invoke(obj, args);\n+                }\n+            };\n+        }\n+    }\n+\n+    @FunctionalInterface\n+    private interface Handler {\n+\n+        Object invoke(Object proxy, Object[] args) throws Throwable;\n+    }\n+\n+    private abstract static class HandlerOfMethod implements Handler {\n+        HandlerOfMethod(Method method) {\n+            this.method = method;\n+        }\n+\n+        protected final Method method;\n+    }\n+\n+    private record ConflictResolverAdapter(BinaryOperator<Method> conflictResolver)\n+            implements BinaryOperator<HandlerOfMethod> {\n+\n+        @Override\n+        public HandlerOfMethod apply(HandlerOfMethod a, HandlerOfMethod b) {\n+            var m = conflictResolver.apply(a.method, b.method);\n+            if (m == a.method) {\n+                return a;\n+            } else if (m == b.method) {\n+                return b;\n+            } else {\n+                throw new UnsupportedOperationException();\n+            }\n+        }\n+    }\n+\n+    private static final BinaryOperator<Method> STANDARD_CONFLICT_RESOLVER = (a, b) -> {\n+        if (a.isDefault() == b.isDefault()) {\n+            throw new IllegalArgumentException(String.format(\"ambiguous choice between %s and %s\", a, b));\n+        } else if (!a.isDefault()) {\n+            return a;\n+        } else {\n+            return b;\n+        }\n+    };\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/util\/CompositeProxy.java","additions":531,"deletions":0,"binary":false,"changes":531,"status":"added"},{"patch":"@@ -0,0 +1,151 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.util;\n+\n+import java.util.function.BiFunction;\n+\n+\/**\n+ * Builder of exceptions with localized messages.\n+ * @param <T> Subclass extending {@link LocalizedExceptionBuilder} class.\n+ *\/\n+public class LocalizedExceptionBuilder<T extends LocalizedExceptionBuilder<T>> {\n+\n+    protected LocalizedExceptionBuilder(StringBundle i18n) {\n+        this.i18n = i18n;\n+    }\n+\n+    \/**\n+     * Creates an exception builder with the given source of error messages.\n+     *\n+     * @param i18n the source of error messages\n+     * @return the exception builder\n+     *\/\n+    public static LocalizedExceptionBuilder<?> buildLocalizedException(StringBundle i18n) {\n+        return new LocalizedExceptionBuilder<>(i18n);\n+    }\n+\n+    \/**\n+     * Creates an instance of type extending {@link Exception} class from the\n+     * configured message and cause.\n+     * <p>\n+     * Use {@link #message(String, Object...)}, {@link #causeAndMessage(Throwable)},\n+     * and {@link #cause(Throwable)} methods to initialize message and\/or cause.\n+     *\n+     * @param <U>           the exception class\n+     * @param exceptionCtor the exception constructor\n+     * @return the exception\n+     *\/\n+    public final <U extends Exception> U create(BiFunction<String, Throwable, U> exceptionCtor) {\n+        return exceptionCtor.apply(msg, cause);\n+    }\n+\n+    \/**\n+     * Configures this builder if strings from the associated string bundle should\n+     * be used as patterns for message formatting or not.\n+     *\n+     * Affects the behavior of the subsequent {@link #message(String, Object...)}\n+     * calls.\n+     *\n+     * @param v <code>true<\/code> if strings from the associated string bundle\n+     *          should be used as patterns for message formatting by this builder or\n+     *          <code>false<\/code> otherwise\n+     * @return this\n+     *\n+     * @see #noformat()\n+     *\/\n+    public final T format(boolean v) {\n+        format = v;\n+        return thiz();\n+    }\n+\n+    \/**\n+     * A shortcut for <code>format(false)<\/code> call.\n+     *\n+     * @return this\n+     *\n+     * @see #format(boolean)\n+     *\/\n+    public final T noformat() {\n+        return format(false);\n+    }\n+\n+    \/**\n+     * Sets the message.\n+     *\n+     * @param msgId key of the string in the associated string bundle for the\n+     *              formatting pattern\n+     * @param args  the arguments for formatting message\n+     * @return this\n+     *\/\n+    public final T message(String msgId, Object... args) {\n+        msg = formatString(msgId, args);\n+        return thiz();\n+    }\n+\n+    \/**\n+     * Sets the cause.\n+     *\n+     * @param v the cause. A null value is permitted, and indicates that the cause\n+     *          is nonexistent or unknown.\n+     * @return this\n+     *\/\n+    public final T cause(Throwable v) {\n+        cause = v;\n+        return thiz();\n+    }\n+\n+    \/**\n+     * Sets the cause and the message. The message is copied from the given\n+     * {@link Throwable} object as is.\n+     *\n+     * @param t the cause. Must not be null.\n+     * @return this\n+     *\/\n+    public final T causeAndMessage(Throwable t) {\n+        boolean oldformat = format;\n+        return noformat().message(t.getMessage()).cause(t).format(oldformat);\n+    }\n+\n+    protected final String formatString(String keyId, Object... args) {\n+        if (format) {\n+            return i18n.format(keyId, args);\n+        } else if (args.length == 0) {\n+            return keyId;\n+        } else {\n+            throw new IllegalArgumentException(\"Formatting arguments not allowed in no format mode\");\n+        }\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private T thiz() {\n+        return (T)this;\n+    }\n+\n+    private boolean format = true;\n+    private String msg;\n+    private Throwable cause;\n+\n+    private final StringBundle i18n;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/util\/LocalizedExceptionBuilder.java","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -245,1 +245,1 @@\n-     * Similar to {@link #copy(PathGroup)} but moves files\/directories instead of\n+     * Similar to {@link #copy(PathGroup, CopyOption...)} but moves files\/directories instead of\n@@ -258,1 +258,1 @@\n-     * Similar to {@link #copy(PathGroup)} but uses the given handler to transform\n+     * Similar to {@link #copy(PathGroup, CopyOption...)} but uses the given handler to transform\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/util\/PathGroup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,16 @@\n+\n+    public static Path normalizedAbsolutePath(Path path) {\n+        if (path != null) {\n+            return path.normalize().toAbsolutePath();\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static String normalizedAbsolutePathString(Path path) {\n+        if (path != null) {\n+            return normalizedAbsolutePath(path).toString();\n+        } else {\n+            return null;\n+        }\n+    }\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/util\/PathUtils.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.util;\n+\n+import java.text.MessageFormat;\n+import java.util.ResourceBundle;\n+\n+\n+\/**\n+ * String bundle contains locale-specific strings.\n+ * It can be viewed a specialized variant of {@link ResourceBundle}.\n+ * <p>\n+ * Use {@link #fromResourceBundle(ResourceBundle)} to obtain {@link StringBundle}\n+ * instance from {@link ResourceBundle} object.\n+ *\/\n+@FunctionalInterface\n+public interface StringBundle {\n+\n+    \/**\n+     * Gets a string for the given key from this string bundle.\n+     * @param key the key for the desired string\n+     * @return the string for the given key\n+     *\n+     * @see ResourceBundle#getString(String)\n+     *\/\n+    String getString(String key);\n+\n+    \/**\n+     * Gets a formatted message built from the pattern string matching\n+     * the given key in this string bundle and the given arguments.\n+     * <p>\n+     * If non-empty list of arguments provided the function calls {@link MessageFormat#format(String, Object...)}.\n+     * Otherwise, it returns the result of {@link #getString(String)} method call.\n+     *\n+     * @param key the key for the desired pattern\n+     * @param args the array of arguments for formatting or an empty array for no formatting\n+     * @return the formatted message\n+     *\/\n+    default String format(String key, Object ... args) {\n+        var str = getString(key);\n+        if (args.length != 0) {\n+            return MessageFormat.format(str, args);\n+        } else {\n+            return str;\n+        }\n+    }\n+\n+    \/**\n+     * Gets {@link StringBundle} instance from the given {@link ResourceBundle} object.\n+     * @param bundle the resource bundle\n+     * @return the string bundle\n+     *\/\n+    public static StringBundle fromResourceBundle(ResourceBundle bundle) {\n+        return bundle::getString;\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/util\/StringBundle.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-\n+    requires java.naming;\n","filename":"src\/jdk.jpackage\/share\/classes\/module-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import jdk.jpackage.internal.resources.ResourceLocator;\n@@ -86,1 +87,2 @@\n-            var resource = new OverridableResource(defaultName).setCategory(category);\n+            var resource = new OverridableResource(defaultName,\n+                    ResourceLocator.class).setCategory(category);\n","filename":"src\/jdk.jpackage\/unix\/classes\/jdk\/jpackage\/internal\/PackageScripts.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import jdk.jpackage.internal.resources.ResourceLocator;\n@@ -108,1 +109,1 @@\n-        try ( InputStream is = OverridableResource.readDefault(resourceName);\n+        try ( InputStream is = ResourceLocator.class.getResourceAsStream(resourceName);\n","filename":"src\/jdk.jpackage\/unix\/classes\/jdk\/jpackage\/internal\/ShellCustomAction.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import jdk.jpackage.internal.model.Package;\n@@ -28,1 +29,0 @@\n-import java.util.Map;\n@@ -32,2 +32,1 @@\n-    ShellCustomAction create(PlatformPackage thePackage,\n-            Map<String, ? super Object> params) throws IOException;\n+    ShellCustomAction create(BuildEnv env, Package pkg) throws IOException;\n","filename":"src\/jdk.jpackage\/unix\/classes\/jdk\/jpackage\/internal\/ShellCustomActionFactory.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.Application;\n@@ -33,0 +35,1 @@\n+import java.util.Objects;\n@@ -36,2 +39,0 @@\n-import jdk.jpackage.internal.AppImageFile.LauncherInfo;\n-import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n@@ -44,4 +45,2 @@\n-    UnixLaunchersAsServices(PlatformPackage thePackage,\n-            List<String> requiredPackages, Map<String, Object> params,\n-            Function<LauncherInfo, UnixLauncherAsService> factory) throws\n-            IOException {\n+    UnixLaunchersAsServices(Path outputRoot, Application app, List<String> requiredPackages,\n+            Function<Launcher, UnixLauncherAsService> factory) {\n@@ -49,2 +48,3 @@\n-        this.thePackage = thePackage;\n-        this.requiredPackages = requiredPackages;\n+        Objects.requireNonNull(factory);\n+        this.outputRoot = Objects.requireNonNull(outputRoot);\n+        this.requiredPackages = Objects.requireNonNull(requiredPackages);\n@@ -53,3 +53,1 @@\n-        launchers = AppImageFile.getLaunchers(PREDEFINED_APP_IMAGE.fetchFrom(\n-                params), params).stream().filter(LauncherInfo::isService).map(\n-                factory::apply).toList();\n+        launchers = app.launchers().stream().filter(Launcher::isService).map(factory::apply).toList();\n@@ -96,2 +94,1 @@\n-            launcher.getResource().saveToFile(launcher.descriptorFilePath(\n-                    thePackage.sourceRoot()));\n+            launcher.getResource().saveToFile(launcher.descriptorFilePath(outputRoot));\n@@ -109,3 +106,2 @@\n-        UnixLauncherAsService(String name, Map<String, Object> mainParams,\n-                OverridableResource resource) {\n-            super(name, mainParams, resource);\n+        UnixLauncherAsService(Application app, Launcher launcher, OverridableResource resource) {\n+            super(app, launcher, resource);\n@@ -117,1 +113,1 @@\n-    private final PlatformPackage thePackage;\n+    private final Path outputRoot;\n","filename":"src\/jdk.jpackage\/unix\/classes\/jdk\/jpackage\/internal\/UnixLaunchersAsServices.java","additions":14,"deletions":18,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.io.UncheckedIOException;\n@@ -35,1 +36,0 @@\n-import java.text.MessageFormat;\n@@ -40,0 +40,2 @@\n+import java.util.Objects;\n+import java.util.Optional;\n@@ -41,2 +43,2 @@\n-import java.util.ResourceBundle;\n-import java.util.function.Supplier;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n@@ -44,10 +46,3 @@\n-\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.ShortPathUtils.adjustPath;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n-import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.jpackage.internal.WindowsAppImageBuilder.ICON_ICO;\n+import jdk.jpackage.internal.model.WinApplication;\n+import jdk.jpackage.internal.model.WinExePackage;\n+import jdk.jpackage.internal.model.WinLauncher;\n@@ -57,2 +52,0 @@\n-    private static final ResourceBundle I18N = ResourceBundle.getBundle(\n-            \"jdk.jpackage.internal.resources.WinResources\");\n@@ -60,2 +53,7 @@\n-    private static final String LAUNCHER_PROPERTIES_TEMPLATE =\n-            \"WinLauncher.template\";\n+    ExecutableRebrander(WinExePackage pkg,\n+            Function<String, OverridableResource> resourceSupplier,\n+            UpdateResourceAction... extraActions) {\n+        this(ExecutableProperties.create(pkg), resourceSupplier.apply(\n+                \"WinInstaller.template\").setPublicName(\"WinInstaller.properties\"),\n+                extraActions);\n+    }\n@@ -63,2 +61,7 @@\n-    private static final String INSTALLER_PROPERTIES_TEMPLATE =\n-            \"WinInstaller.template\";\n+    ExecutableRebrander(WinApplication app, WinLauncher launcher,\n+            Function<String, OverridableResource> resourceSupplier,\n+            UpdateResourceAction... extraActions) {\n+        this(ExecutableProperties.create(app, launcher), resourceSupplier.apply(\n+                \"WinLauncher.template\").setPublicName(launcher.executableName() + \".properties\"),\n+                extraActions);\n+    }\n@@ -66,2 +69,5 @@\n-    private static final String INSTALLER_PROPERTIES_RESOURE_DIR_ID =\n-            \"WinInstaller.properties\";\n+    private ExecutableRebrander(ExecutableProperties props,\n+            OverridableResource propertiesFileResource,\n+            UpdateResourceAction... extraActions) {\n+        this.extraActions = List.of(extraActions);\n+        this.propertiesFileResource = Objects.requireNonNull(propertiesFileResource);\n@@ -69,0 +75,1 @@\n+        this.props = new HashMap<>();\n@@ -70,8 +77,5 @@\n-    void rebrandInstaller(Map<String, ? super Object> params, Path target)\n-            throws IOException {\n-        Path icon = ICON_ICO.fetchFrom(params);\n-        rebrandExecutable(params, icon, () -> {\n-            return createResource(INSTALLER_PROPERTIES_TEMPLATE, params).setPublicName(\n-                    INSTALLER_PROPERTIES_RESOURE_DIR_ID);\n-        }, target);\n-    }\n+        validateValueAndPut(this.props, Map.entry(\"COMPANY_NAME\", props.vendor), \"vendor\");\n+        validateValueAndPut(this.props, Map.entry(\"FILE_DESCRIPTION\",props.description), \"description\");\n+        validateValueAndPut(this.props, Map.entry(\"FILE_VERSION\", props.version.toString()), \"version\");\n+        validateValueAndPut(this.props, Map.entry(\"LEGAL_COPYRIGHT\", props.copyright), \"copyright\");\n+        validateValueAndPut(this.props, Map.entry(\"PRODUCT_NAME\", props.name), \"name\");\n@@ -79,7 +83,3 @@\n-    void rebrandLauncher(Map<String, ? super Object> params, Path icon,\n-            Path target) throws IOException {\n-        rebrandExecutable(params, icon, () -> {\n-            return createResource(\n-                    LAUNCHER_PROPERTIES_TEMPLATE, params).setPublicName(\n-                            APP_NAME.fetchFrom(params) + \".properties\");\n-        }, target);\n+        this.props.put(\"FIXEDFILEINFO_FILE_VERSION\", toFixedFileVersion(props.version));\n+        this.props.put(\"INTERNAL_NAME\", props.executableName);\n+        this.props.put(\"ORIGINAL_FILENAME\", props.executableName);\n@@ -88,18 +88,6 @@\n-    private void rebrandExecutable(Map<String, ? super Object> params, Path icon,\n-            Supplier<OverridableResource> resourceSupplier, Path target) throws\n-            IOException {\n-        if (!target.isAbsolute() || (icon != null && !icon.isAbsolute())) {\n-            Path absIcon = null;\n-            if (icon != null) {\n-                absIcon = icon.toAbsolutePath();\n-            }\n-            rebrandExecutable(params, absIcon, resourceSupplier,\n-                    target.toAbsolutePath());\n-            return;\n-        }\n-        rebrandExecutable(params, target, (resourceLock) -> {\n-            rebrandProperties(resourceLock, resourceSupplier.get(),\n-                    createSubstituteData(\n-                            params), target);\n-            if (icon != null) {\n-                iconSwapWrapper(resourceLock, icon.toString());\n+    void execute(BuildEnv env, Path target, Optional<Path> icon) {\n+        String[] propsArray = toStringArray(propertiesFileResource, props);\n+\n+        UpdateResourceAction versionSwapper = resourceLock -> {\n+            if (versionSwap(resourceLock, propsArray) != 0) {\n+                throw I18N.buildException().message(\"error.version-swap\", target).create(RuntimeException::new);\n@@ -107,2 +95,12 @@\n-        });\n-    }\n+        };\n+\n+        Optional<UpdateResourceAction> updateIcon = icon\n+                .map(Path::toAbsolutePath)\n+                .map(ShortPathUtils::adjustPath)\n+                .map(absIcon -> {\n+                    return resourceLock -> {\n+                        if (iconSwap(resourceLock, absIcon.toString()) != 0) {\n+                            throw I18N.buildException().message(\"error.icon-swap\", absIcon).create(RuntimeException::new);\n+                        }\n+                    };\n+                });\n@@ -110,3 +108,8 @@\n-    ExecutableRebrander addAction(UpdateResourceAction action) {\n-        if (extraActions == null) {\n-            extraActions = new ArrayList<>();\n+        try {\n+            final List<UpdateResourceAction> actions = new ArrayList<>();\n+            actions.add(versionSwapper);\n+            updateIcon.ifPresent(actions::add);\n+            actions.addAll(extraActions);\n+            rebrandExecutable(env, target, actions);\n+        } catch (IOException ex) {\n+            throw new UncheckedIOException(ex);\n@@ -114,2 +117,0 @@\n-        extraActions.add(action);\n-        return this;\n@@ -118,2 +119,4 @@\n-    private void rebrandExecutable(Map<String, ? super Object> params,\n-            final Path target, UpdateResourceAction action) throws IOException {\n+    private static void rebrandExecutable(BuildEnv env, final Path target,\n+            List<UpdateResourceAction> actions) throws IOException {\n+        Objects.requireNonNull(actions);\n+        actions.forEach(Objects::requireNonNull);\n@@ -121,7 +124,3 @@\n-            String tempDirectory = TEMP_ROOT.fetchFrom(params)\n-                    .toAbsolutePath().toString();\n-            if (WindowsDefender.isThereAPotentialWindowsDefenderIssue(\n-                    tempDirectory)) {\n-                Log.verbose(MessageFormat.format(I18N.getString(\n-                        \"message.potential.windows.defender.issue\"),\n-                        tempDirectory));\n+            String tempDirectory = env.buildRoot().toAbsolutePath().toString();\n+            if (WindowsDefender.isThereAPotentialWindowsDefenderIssue(tempDirectory)) {\n+                Log.verbose(I18N.format(\"message.potential.windows.defender.issue\", tempDirectory));\n@@ -135,2 +134,1 @@\n-                throw new RuntimeException(MessageFormat.format(\n-                    I18N.getString(\"error.lock-resource\"), shortTargetPath.orElse(target)));\n+                throw I18N.buildException().message(\"error.lock-resource\", shortTargetPath.orElse(target)).create(RuntimeException::new);\n@@ -141,5 +139,2 @@\n-                action.editResource(resourceLock);\n-                if (extraActions != null) {\n-                    for (UpdateResourceAction extraAction : extraActions) {\n-                        extraAction.editResource(resourceLock);\n-                    }\n+                for (var action : actions) {\n+                    action.editResource(resourceLock);\n@@ -164,2 +159,1 @@\n-                throw new RuntimeException(MessageFormat.format(I18N.getString(\n-                        \"error.unlock-resource\"), target));\n+                throw I18N.buildException().message(\"error.unlock-resource\", target).create(RuntimeException::new);\n@@ -172,8 +166,2 @@\n-    @FunctionalInterface\n-    static interface UpdateResourceAction {\n-        public void editResource(long resourceLock) throws IOException;\n-    }\n-\n-    private static String getFixedFileVersion(String value) {\n-        int addComponentsCount = 4\n-                - DottedVersion.greedy(value).getComponents().length;\n+    private static String toFixedFileVersion(DottedVersion value) {\n+        int addComponentsCount = 4 - value.getComponents().length;\n@@ -181,1 +169,1 @@\n-            StringBuilder sb = new StringBuilder(value);\n+            StringBuilder sb = new StringBuilder(value.toComponentsString());\n@@ -188,1 +176,1 @@\n-        return value;\n+        return value.toComponentsString();\n@@ -191,24 +179,3 @@\n-    private Map<String, String> createSubstituteData(\n-            Map<String, ? super Object> params) {\n-        Map<String, String> data = new HashMap<>();\n-\n-        String fixedFileVersion = getFixedFileVersion(VERSION.fetchFrom(params));\n-\n-        \/\/ mapping Java parameters in strings for version resource\n-        validateValueAndPut(data, \"COMPANY_NAME\", VENDOR, params);\n-        validateValueAndPut(data, \"FILE_DESCRIPTION\", DESCRIPTION, params);\n-        validateValueAndPut(data, \"FILE_VERSION\", VERSION, params);\n-        validateValueAndPut(data, \"LEGAL_COPYRIGHT\", COPYRIGHT, params);\n-        validateValueAndPut(data, \"PRODUCT_NAME\", APP_NAME, params);\n-        data.put(\"FIXEDFILEINFO_FILE_VERSION\", fixedFileVersion);\n-\n-        return data;\n-    }\n-\n-    private void rebrandProperties(long resourceLock, OverridableResource properties,\n-            Map<String, String> data, Path target) throws IOException {\n-\n-        String targetExecutableName = IOUtils.getFileName(target).toString();\n-        data.put(\"INTERNAL_NAME\", targetExecutableName);\n-        data.put(\"ORIGINAL_FILENAME\", targetExecutableName);\n-\n+    private static String[] toStringArray(\n+            OverridableResource propertiesFileResource,\n+            Map<String, String> props) {\n@@ -216,4 +183,9 @@\n-        properties\n-            .setSubstitutionData(data)\n-            .setCategory(I18N.getString(\"resource.executable-properties-template\"))\n-            .saveToStream(buffer);\n+        try {\n+            propertiesFileResource\n+                    .setSubstitutionData(props)\n+                    .setCategory(I18N.getString(\n+                            \"resource.executable-properties-template\"))\n+                    .saveToStream(buffer);\n+        } catch (IOException ex) {\n+            throw new UncheckedIOException(ex);\n+        }\n@@ -221,1 +193,0 @@\n-        final List<String> propList = new ArrayList<>();\n@@ -224,1 +195,1 @@\n-            final Properties configProp = new Properties();\n+            var configProp = new Properties();\n@@ -226,4 +197,5 @@\n-            configProp.forEach((k, v) -> {\n-                propList.add(k.toString());\n-                propList.add(v.toString());\n-            });\n+            return configProp.entrySet().stream().flatMap(e -> Stream.of(\n+                    e.getKey().toString(), e.getValue().toString())).toArray(\n+                    String[]::new);\n+        } catch (IOException ex) {\n+            throw new UncheckedIOException(ex);\n@@ -231,3 +203,0 @@\n-\n-        versionSwapWrapper(resourceLock, propList.toArray(String[]::new),\n-                target.toString());\n@@ -236,7 +205,4 @@\n-    private static void validateValueAndPut(\n-            Map<String, String> data, String key,\n-            BundlerParamInfo<String> param,\n-            Map<String, ? super Object> params) {\n-        String value = param.fetchFrom(params);\n-        if (value.contains(\"\\r\") || value.contains(\"\\n\")) {\n-            Log.error(\"Configuration Parameter \" + param.getID()\n+    private static void validateValueAndPut(Map<String, String> target,\n+            Map.Entry<String, String> e, String label) {\n+        if (e.getValue().contains(\"\\r\") || e.getValue().contains(\"\\n\")) {\n+            Log.error(\"Configuration parameter \" + label\n@@ -244,2 +210,1 @@\n-            data.put(key, \"\");\n-            return;\n+            e = Map.entry(e.getKey(), \"\");\n@@ -247,1 +212,1 @@\n-        data.put(key, value);\n+        target.put(e.getKey(), e.getValue());\n@@ -250,7 +215,3 @@\n-    private static void iconSwapWrapper(long resourceLock,\n-            String iconTarget) {\n-        iconTarget = adjustPath(iconTarget);\n-        if (iconSwap(resourceLock, iconTarget) != 0) {\n-            throw new RuntimeException(MessageFormat.format(I18N.getString(\n-                    \"error.icon-swap\"), iconTarget));\n-        }\n+    @FunctionalInterface\n+    static interface UpdateResourceAction {\n+        public void editResource(long resourceLock) throws IOException;\n@@ -259,5 +220,14 @@\n-    private static void versionSwapWrapper(long resourceLock,\n-            String[] executableProperties, String target) {\n-        if (versionSwap(resourceLock, executableProperties) != 0) {\n-            throw new RuntimeException(MessageFormat.format(I18N.getString(\n-                    \"error.version-swap\"), target));\n+    private static record ExecutableProperties(String vendor, String description,\n+            DottedVersion version, String copyright, String name, String executableName) {\n+        static ExecutableProperties create(WinApplication app,\n+                WinLauncher launcher) {\n+            return new ExecutableProperties(app.vendor(), launcher.description(),\n+                    app.winVersion(), app.copyright(), launcher.name(),\n+                    launcher.executableNameWithSuffix());\n+        }\n+\n+        static ExecutableProperties create(WinExePackage pkg) {\n+            return new ExecutableProperties(pkg.app().vendor(),\n+                    pkg.description(), DottedVersion.lazy(pkg.version()),\n+                    pkg.app().copyright(), pkg.packageName(),\n+                    pkg.packageFileNameWithSuffix());\n@@ -267,1 +237,3 @@\n-    private List<UpdateResourceAction> extraActions;\n+    private final Map<String, String> props;\n+    private final List<UpdateResourceAction> extraActions;\n+    private final OverridableResource propertiesFileResource;\n@@ -277,1 +249,1 @@\n-    private static native int iconSwap(long resourceLock, String iconTarget);\n+    private static native int iconSwap(long resourceLock, String newIcon);\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/ExecutableRebrander.java","additions":122,"deletions":150,"binary":false,"changes":272,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import static jdk.jpackage.internal.WinMsiBundler.WIN_APP_IMAGE;\n-\n@@ -41,1 +39,0 @@\n-import java.util.Map;\n@@ -43,0 +40,3 @@\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.WinMsiPackage;\n@@ -51,2 +51,3 @@\n-    static OSVersionCondition createFromAppImage(ApplicationLayout appLayout, Map<String, ? super Object> params) {\n-        Objects.requireNonNull(appLayout);\n+    static OSVersionCondition createFromAppImage(BuildEnv env, Application app) {\n+        Objects.requireNonNull(env);\n+        Objects.requireNonNull(app);\n@@ -56,4 +57,1 @@\n-        if (!StandardBundlerParam.isRuntimeInstaller(params)) {\n-            final var launcherName = StandardBundlerParam.APP_NAME.fetchFrom(params);\n-            executables.add(appLayout.launchersDirectory().resolve(launcherName + \".exe\"));\n-        }\n+        final var appImageLayout = app.imageLayout().resolveAt(env.appImageDir());\n@@ -61,1 +59,5 @@\n-        executables.add(appLayout.runtimeDirectory().resolve(\"bin\\\\java.dll\"));\n+        app.mainLauncher().map(mainLauncher -> {\n+            return ((ApplicationLayout)appImageLayout).launchersDirectory().resolve(mainLauncher.executableNameWithSuffix());\n+        }).ifPresent(executables::add);\n+\n+        executables.add(appImageLayout.runtimeDirectory().resolve(\"bin\\\\java.dll\"));\n@@ -179,13 +181,2 @@\n-            void initFromParams(Map<String, ? super Object> params) {\n-                super.initFromParams(params);\n-\n-                final Path appImageRoot = WIN_APP_IMAGE.fetchFrom(params);\n-\n-                ApplicationLayout appImageLayout;\n-                if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-                    appImageLayout = ApplicationLayout.javaRuntime();\n-                } else {\n-                    appImageLayout = ApplicationLayout.platformAppImage();\n-                }\n-\n-                appImageLayout = appImageLayout.resolveAt(appImageRoot);\n+            void initFromParams(BuildEnv env, WinMsiPackage pkg) {\n+                super.initFromParams(env, pkg);\n@@ -193,1 +184,1 @@\n-                final var cond = OSVersionCondition.createFromAppImage(appImageLayout, params);\n+                final var cond = OSVersionCondition.createFromAppImage(env, pkg.app());\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/OSVersionCondition.java","additions":15,"deletions":24,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,8 @@\n-        setAppImageSupplier(WindowsAppImageBuilder::new);\n+        setAppImageSupplier((params, output) -> {\n+            \/\/ Order is important!\n+            var app = WinFromParams.APPLICATION.fetchFrom(params);\n+            var env = BuildEnvFromParams.BUILD_ENV.fetchFrom(params);\n+            WinPackagingPipeline.build()\n+                    .excludeDirFromCopying(output.getParent())\n+                    .create().execute(BuildEnv.withAppImageDir(env, output), app);\n+        });\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinAppBundler.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -27,1 +27,2 @@\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.util.function.ThrowingRunnable.toRunnable;\n@@ -30,1 +31,0 @@\n-import java.io.InputStream;\n@@ -33,1 +33,1 @@\n-import java.text.MessageFormat;\n+import java.nio.file.StandardCopyOption;\n@@ -37,1 +37,1 @@\n-import jdk.jpackage.internal.util.PathUtils;\n+import jdk.jpackage.internal.model.WinExePackage;\n@@ -46,19 +46,0 @@\n-    public static final BundlerParamInfo<Path> EXE_IMAGE_DIR\n-            = new StandardBundlerParam<>(\n-                    \"win.exe.imageDir\",\n-                    Path.class,\n-                    params -> {\n-                        Path imagesRoot = IMAGES_ROOT.fetchFrom(params);\n-                        if (!Files.exists(imagesRoot)) {\n-                            try {\n-                                Files.createDirectories(imagesRoot);\n-                            } catch (IOException ioe) {\n-                                return null;\n-                            }\n-                        }\n-                        return imagesRoot.resolve(\"win-exe.image\");\n-                    },\n-                    (s, p) -> null);\n-\n-    private static final String EXE_WRAPPER_NAME = \"msiwrapper.exe\";\n-\n@@ -80,6 +61,0 @@\n-    @Override\n-    public Path execute(Map<String, ? super Object> params,\n-            Path outputParentDir) throws PackagerException {\n-        return bundle(params, outputParentDir);\n-    }\n-\n@@ -102,1 +77,2 @@\n-    public Path bundle(Map<String, ? super Object> params, Path outdir)\n+    @Override\n+    public Path execute(Map<String, ? super Object> params, Path outdir)\n@@ -105,0 +81,4 @@\n+        \/\/ Order is important!\n+        var pkg = WinFromParams.MSI_PACKAGE.fetchFrom(params);\n+        var env = BuildEnvFromParams.BUILD_ENV.fetchFrom(params);\n+\n@@ -107,1 +87,2 @@\n-        Path exeImageDir = EXE_IMAGE_DIR.fetchFrom(params);\n+        Path msiDir = env.buildRoot().resolve(\"msi\");\n+        toRunnable(() -> Files.createDirectories(msiDir)).run();\n@@ -110,1 +91,1 @@\n-        Path msi = msiBundler.execute(params, exeImageDir);\n+        Path msi = msiBundler.execute(params, msiDir);\n@@ -118,1 +99,1 @@\n-            .run(params);\n+            .run(env, pkg.packageName());\n@@ -120,2 +101,3 @@\n-            return buildEXE(params, msi, outdir);\n-        } catch (IOException ex) {\n+            var exePkg = new WinExePackageBuilder(pkg).icon(ICON.fetchFrom(params)).create();\n+            return buildEXE(env, exePkg, msi, outdir);\n+        } catch (IOException|ConfigException ex) {\n@@ -127,1 +109,1 @@\n-    private Path buildEXE(Map<String, ? super Object> params, Path msi,\n+    private Path buildEXE(BuildEnv env, WinExePackage pkg, Path msi,\n@@ -130,3 +112,1 @@\n-        Log.verbose(MessageFormat.format(\n-                I18N.getString(\"message.outputting-to-location\"),\n-                outdir.toAbsolutePath().toString()));\n+        Log.verbose(I18N.format(\"message.outputting-to-location\", outdir.toAbsolutePath()));\n@@ -135,1 +115,1 @@\n-        final Path exePath = PathUtils.replaceSuffix(msi, \".exe\");\n+        final Path exePath = msi.getParent().resolve(pkg.packageFileNameWithSuffix());\n@@ -137,1 +117,1 @@\n-        createResource(EXE_WRAPPER_NAME, params)\n+        env.createResource(\"msiwrapper.exe\")\n@@ -142,1 +122,1 @@\n-        new ExecutableRebrander().addAction((resourceLock) -> {\n+        new ExecutableRebrander(pkg, env::createResource, resourceLock -> {\n@@ -145,1 +125,1 @@\n-        }).rebrandInstaller(params, exePath);\n+        }).execute(env, exePath, pkg.icon());\n@@ -147,2 +127,1 @@\n-        Path dstExePath = outdir.toAbsolutePath().resolve(exePath.getFileName());\n-        Files.deleteIfExists(dstExePath);\n+        Path dstExePath = outdir.resolve(exePath.getFileName());\n@@ -150,1 +129,1 @@\n-        Files.copy(exePath, dstExePath);\n+        Files.copy(exePath, dstExePath, StandardCopyOption.REPLACE_EXISTING);\n@@ -152,1 +131,1 @@\n-        dstExePath.toFile().setWritable(true, true);\n+        dstExePath.toFile().setExecutable(true);\n@@ -154,3 +133,1 @@\n-        Log.verbose(MessageFormat.format(\n-                I18N.getString(\"message.output-location\"),\n-                outdir.toAbsolutePath().toString()));\n+        Log.verbose(I18N.format(\"message.output-location\", outdir.toAbsolutePath()));\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinExeBundler.java","additions":27,"deletions":50,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.WinExePackage;\n+import jdk.jpackage.internal.model.WinMsiPackage;\n+\n+final class WinExePackageBuilder {\n+\n+    WinExePackageBuilder(WinMsiPackage pkg) {\n+        this.pkg = Objects.requireNonNull(pkg);\n+    }\n+\n+    WinExePackage create() throws ConfigException {\n+        if (icon != null) {\n+            LauncherBuilder.validateIcon(icon);\n+        }\n+        return WinExePackage.create(pkg, Optional.ofNullable(icon));\n+    }\n+\n+    WinExePackageBuilder icon(Path v) {\n+        icon = v;\n+        return this;\n+    }\n+\n+    private Path icon;\n+\n+    private final WinMsiPackage pkg;\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinExePackageBuilder.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,157 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static java.util.stream.Collectors.toSet;\n+import static jdk.jpackage.internal.BundlerParamInfo.createBooleanBundlerParam;\n+import static jdk.jpackage.internal.BundlerParamInfo.createStringBundlerParam;\n+import static jdk.jpackage.internal.FromParams.createApplicationBuilder;\n+import static jdk.jpackage.internal.FromParams.createApplicationBundlerParam;\n+import static jdk.jpackage.internal.FromParams.createPackageBuilder;\n+import static jdk.jpackage.internal.FromParams.createPackageBundlerParam;\n+import static jdk.jpackage.internal.StandardBundlerParam.MENU_HINT;\n+import static jdk.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.SHORTCUT_HINT;\n+import static jdk.jpackage.internal.WinPackagingPipeline.APPLICATION_LAYOUT;\n+import static jdk.jpackage.internal.model.StandardPackageType.WIN_MSI;\n+import static jdk.jpackage.internal.model.WinLauncherMixin.WinShortcut.WIN_SHORTCUT_DESKTOP;\n+import static jdk.jpackage.internal.model.WinLauncherMixin.WinShortcut.WIN_SHORTCUT_START_MENU;\n+import static jdk.jpackage.internal.util.function.ThrowingFunction.toFunction;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.WinApplication;\n+import jdk.jpackage.internal.model.WinLauncher;\n+import jdk.jpackage.internal.model.WinLauncherMixin;\n+import jdk.jpackage.internal.model.WinMsiPackage;\n+\n+final class WinFromParams {\n+\n+    private static WinApplication createWinApplication(\n+            Map<String, ? super Object> params) throws ConfigException, IOException {\n+\n+        final var launcherFromParams = new LauncherFromParams();\n+\n+        final var app = createApplicationBuilder(params, toFunction(launcherParams -> {\n+\n+            final var launcher = launcherFromParams.create(launcherParams);\n+\n+            final boolean isConsole = CONSOLE_HINT.findIn(launcherParams).orElse(false);\n+\n+            final var shortcuts = Map.of(WIN_SHORTCUT_DESKTOP, List.of(SHORTCUT_HINT,\n+                WIN_SHORTCUT_HINT), WIN_SHORTCUT_START_MENU, List.of(MENU_HINT,\n+                        WIN_MENU_HINT)).entrySet().stream().filter(e -> {\n+\n+                    final var shortcutParams = e.getValue();\n+\n+                    return shortcutParams.get(0).findIn(launcherParams).orElseGet(() -> {\n+                        return shortcutParams.get(1).findIn(launcherParams).orElse(false);\n+                    });\n+                }).map(Map.Entry::getKey).collect(toSet());\n+\n+            return WinLauncher.create(launcher, new WinLauncherMixin.Stub(isConsole, shortcuts));\n+\n+        }), APPLICATION_LAYOUT).create();\n+\n+        return WinApplication.create(app);\n+    }\n+\n+    private static WinMsiPackage createWinMsiPackage(Map<String, ? super Object> params) throws ConfigException, IOException {\n+\n+        final var app = APPLICATION.fetchFrom(params);\n+\n+        final var superPkgBuilder = createPackageBuilder(params, app, WIN_MSI);\n+\n+        final var pkgBuilder = new WinMsiPackageBuilder(superPkgBuilder);\n+\n+        HELP_URL.copyInto(params, pkgBuilder::helpURL);\n+        MSI_SYSTEM_WIDE.copyInto(params, pkgBuilder::isSystemWideInstall);\n+        MENU_GROUP.copyInto(params, pkgBuilder::startMenuGroupName);\n+        UPDATE_URL.copyInto(params, pkgBuilder::updateURL);\n+        INSTALLDIR_CHOOSER.copyInto(params, pkgBuilder::withInstallDirChooser);\n+        SHORTCUT_PROMPT.copyInto(params, pkgBuilder::withShortcutPrompt);\n+\n+        if (app.isService()) {\n+            RESOURCE_DIR.copyInto(params, resourceDir -> {\n+                pkgBuilder.serviceInstaller(resourceDir.resolve(\"service-installer.exe\"));\n+            });\n+        }\n+\n+        try {\n+            UPGRADE_UUID.findIn(params).map(UUID::fromString).ifPresent(pkgBuilder::upgradeCode);\n+        } catch (IllegalArgumentException ex) {\n+            throw new ConfigException(ex);\n+        }\n+\n+        return pkgBuilder.create();\n+    }\n+\n+    static final BundlerParamInfo<WinApplication> APPLICATION = createApplicationBundlerParam(\n+            WinFromParams::createWinApplication);\n+\n+    static final BundlerParamInfo<WinMsiPackage> MSI_PACKAGE = createPackageBundlerParam(\n+            WinFromParams::createWinMsiPackage);\n+\n+    private static final BundlerParamInfo<Boolean> WIN_MENU_HINT = createBooleanBundlerParam(\n+            Arguments.CLIOptions.WIN_MENU_HINT.getId());\n+\n+    private static final BundlerParamInfo<Boolean> WIN_SHORTCUT_HINT = createBooleanBundlerParam(\n+            Arguments.CLIOptions.WIN_SHORTCUT_HINT.getId());\n+\n+    public static final BundlerParamInfo<Boolean> CONSOLE_HINT = createBooleanBundlerParam(\n+            Arguments.CLIOptions.WIN_CONSOLE_HINT.getId());\n+\n+    private static final BundlerParamInfo<Boolean> INSTALLDIR_CHOOSER = new BundlerParamInfo<>(\n+            Arguments.CLIOptions.WIN_DIR_CHOOSER.getId(),\n+            Boolean.class,\n+            null,\n+            (s, p) -> Boolean.valueOf(s)\n+    );\n+\n+    private static final BundlerParamInfo<Boolean> SHORTCUT_PROMPT = new BundlerParamInfo<>(\n+            Arguments.CLIOptions.WIN_SHORTCUT_PROMPT.getId(),\n+            Boolean.class,\n+            null,\n+            (s, p) -> Boolean.valueOf(s)\n+    );\n+\n+    private static final BundlerParamInfo<String> MENU_GROUP = createStringBundlerParam(\n+            Arguments.CLIOptions.WIN_MENU_GROUP.getId());\n+\n+    private static final BundlerParamInfo<Boolean> MSI_SYSTEM_WIDE = createBooleanBundlerParam(\n+            Arguments.CLIOptions.WIN_PER_USER_INSTALLATION.getId());\n+\n+    private static final BundlerParamInfo<String> HELP_URL = createStringBundlerParam(\n+            Arguments.CLIOptions.WIN_HELP_URL.getId());\n+\n+    private static final BundlerParamInfo<String> UPDATE_URL = createStringBundlerParam(\n+            Arguments.CLIOptions.WIN_UPDATE_URL.getId());\n+\n+    private static final BundlerParamInfo<String> UPGRADE_UUID = createStringBundlerParam(\n+            Arguments.CLIOptions.WIN_UPGRADE_UUID.getId());\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinFromParams.java","additions":157,"deletions":0,"binary":false,"changes":157,"status":"added"},{"patch":"@@ -28,0 +28,2 @@\n+import static jdk.jpackage.internal.model.ConfigException.rethrowConfigException;\n+\n@@ -30,0 +32,1 @@\n+import java.io.UncheckedIOException;\n@@ -32,1 +35,0 @@\n-import java.nio.charset.StandardCharsets;\n@@ -37,1 +39,0 @@\n-import java.text.MessageFormat;\n@@ -44,2 +45,0 @@\n-import java.util.Objects;\n-import java.util.Optional;\n@@ -47,1 +46,0 @@\n-import java.util.UUID;\n@@ -57,1 +55,3 @@\n-import jdk.jpackage.internal.AppImageFile.LauncherInfo;\n+import jdk.jpackage.internal.PackagingPipeline.PackageBuildEnv;\n+import jdk.jpackage.internal.model.AppImageLayout;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n@@ -59,1 +59,1 @@\n-import jdk.jpackage.internal.model.MsiVersion;\n+import jdk.jpackage.internal.model.Package;\n@@ -61,13 +61,2 @@\n-\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.StandardBundlerParam.ABOUT_URL;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.INSTALLER_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n-import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import jdk.jpackage.internal.util.FileUtils;\n+import jdk.jpackage.internal.model.RuntimeLayout;\n+import jdk.jpackage.internal.model.WinMsiPackage;\n@@ -141,89 +130,0 @@\n-    public static final BundlerParamInfo<Path> MSI_IMAGE_DIR =\n-            new StandardBundlerParam<>(\n-            \"win.msi.imageDir\",\n-            Path.class,\n-            params -> {\n-                Path imagesRoot = IMAGES_ROOT.fetchFrom(params);\n-                if (!Files.exists(imagesRoot)) {\n-                    try {\n-                        Files.createDirectories(imagesRoot);\n-                    } catch (IOException ioe) {\n-                        return null;\n-                    }\n-                }\n-                return imagesRoot.resolve(\"win-msi.image\");\n-            },\n-            (s, p) -> null);\n-\n-    public static final BundlerParamInfo<Path> WIN_APP_IMAGE =\n-            new StandardBundlerParam<>(\n-            \"win.app.image\",\n-            Path.class,\n-            null,\n-            (s, p) -> null);\n-\n-    static final StandardBundlerParam<InstallableFile> SERVICE_INSTALLER\n-            = new StandardBundlerParam<>(\n-                    \"win.msi.serviceInstaller\",\n-                    InstallableFile.class,\n-                    null,\n-                    null\n-            );\n-\n-    public static final StandardBundlerParam<Boolean> MSI_SYSTEM_WIDE  =\n-            new StandardBundlerParam<>(\n-                    Arguments.CLIOptions.WIN_PER_USER_INSTALLATION.getId(),\n-                    Boolean.class,\n-                    params -> true, \/\/ MSIs default to system wide\n-                    \/\/ valueOf(null) is false,\n-                    \/\/ and we actually do want null\n-                    (s, p) -> (s == null || \"null\".equalsIgnoreCase(s))? null\n-                            : Boolean.valueOf(s)\n-            );\n-\n-    public static final StandardBundlerParam<String> PRODUCT_VERSION =\n-            new StandardBundlerParam<>(\n-                    \"win.msi.productVersion\",\n-                    String.class,\n-                    VERSION::fetchFrom,\n-                    (s, p) -> s\n-            );\n-\n-    private static final BundlerParamInfo<String> HELP_URL =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.WIN_HELP_URL.getId(),\n-            String.class,\n-            null,\n-            (s, p) -> s);\n-\n-    private static final BundlerParamInfo<String> UPDATE_URL =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.WIN_UPDATE_URL.getId(),\n-            String.class,\n-            null,\n-            (s, p) -> s);\n-\n-    private static final BundlerParamInfo<String> UPGRADE_UUID =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.WIN_UPGRADE_UUID.getId(),\n-            String.class,\n-            null,\n-            (s, p) -> s);\n-\n-    private static final BundlerParamInfo<String> INSTALLER_FILE_NAME =\n-            new StandardBundlerParam<> (\n-            \"win.installerName\",\n-            String.class,\n-            params -> {\n-                String nm = INSTALLER_NAME.fetchFrom(params);\n-                if (nm == null) return null;\n-\n-                String version = VERSION.fetchFrom(params);\n-                if (version == null) {\n-                    return nm;\n-                } else {\n-                    return nm + \"-\" + version;\n-                }\n-            },\n-            (s, p) -> s);\n-\n@@ -231,1 +131,0 @@\n-        appImageBundler = new WinAppBundler().setDependentTask(true);\n@@ -280,21 +179,0 @@\n-    private static UUID getUpgradeCode(Map<String, ? super Object> params) {\n-        String upgradeCode = UPGRADE_UUID.fetchFrom(params);\n-        if (upgradeCode != null) {\n-            return UUID.fromString(upgradeCode);\n-        }\n-        return createNameUUID(\"UpgradeCode\", params, List.of(VENDOR, APP_NAME));\n-    }\n-\n-    private static UUID getProductCode(Map<String, ? super Object> params) {\n-        return createNameUUID(\"ProductCode\", params, List.of(VENDOR, APP_NAME,\n-                VERSION));\n-    }\n-\n-    private static UUID createNameUUID(String prefix,\n-            Map<String, ? super Object> params,\n-            List<StandardBundlerParam<String>> components) {\n-        String key = Stream.concat(Stream.of(prefix), components.stream().map(\n-                c -> c.fetchFrom(params))).collect(Collectors.joining(\"\/\"));\n-        return UUID.nameUUIDFromBytes(key.getBytes(StandardCharsets.UTF_8));\n-    }\n-\n@@ -305,1 +183,3 @@\n-            appImageBundler.validate(params);\n+            \/\/ Order is important!\n+            WinFromParams.APPLICATION.fetchFrom(params);\n+            BuildEnvFromParams.BUILD_ENV.fetchFrom(params);\n@@ -311,6 +191,0 @@\n-            try {\n-                getUpgradeCode(params);\n-            } catch (IllegalArgumentException ex) {\n-                throw new ConfigException(ex);\n-            }\n-\n@@ -318,3 +192,3 @@\n-                Log.verbose(MessageFormat.format(I18N.getString(\n-                        \"message.tool-version\"), wixToolset.getToolPath(tool).\n-                                getFileName(), wixToolset.getVersion()));\n+                Log.verbose(I18N.format(\"message.tool-version\",\n+                        wixToolset.getToolPath(tool).getFileName(),\n+                        wixToolset.getVersion()));\n@@ -329,14 +203,0 @@\n-            \/********* validate bundle parameters *************\/\n-\n-            try {\n-                String version = PRODUCT_VERSION.fetchFrom(params);\n-                MsiVersion.of(version);\n-            } catch (IllegalArgumentException ex) {\n-                throw new ConfigException(ex.getMessage(), I18N.getString(\n-                        \"error.version-string-wrong-format.advice\"), ex);\n-            }\n-\n-            FileAssociation.verify(FileAssociation.fetchFrom(params));\n-\n-            initServiceInstallerResource(params);\n-\n@@ -345,5 +205,1 @@\n-            if (re.getCause() instanceof ConfigException) {\n-                throw (ConfigException) re.getCause();\n-            } else {\n-                throw new ConfigException(re);\n-            }\n+            throw rethrowConfigException(re);\n@@ -353,15 +209,2 @@\n-    private void prepareProto(Map<String, ? super Object> params)\n-                throws PackagerException, IOException {\n-        Path appImage = StandardBundlerParam.getPredefinedAppImage(params);\n-        String appName = Objects.requireNonNull(APP_NAME.fetchFrom(params));\n-        Path appDir;\n-\n-        \/\/ we either have an application image or need to build one\n-        if (appImage != null) {\n-            appDir = MSI_IMAGE_DIR.fetchFrom(params).resolve(appName);\n-            \/\/ copy everything from appImage dir into appDir\/name\n-            FileUtils.copyRecursive(appImage, appDir);\n-        } else {\n-            appDir = appImageBundler.execute(params, MSI_IMAGE_DIR.fetchFrom(\n-                    params));\n-        }\n+    private void prepareProto(Package pkg, BuildEnv env, AppImageLayout appImageLayout) throws\n+            PackagerException, IOException {\n@@ -370,1 +213,1 @@\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n+        if (appImageLayout instanceof RuntimeLayout runtimeLayout) {\n@@ -375,11 +218,4 @@\n-            installerIcon = ApplicationLayout.javaRuntime()\n-                    .resolveAt(appDir)\n-                    .runtimeDirectory()\n-                    .resolve(Path.of(\"bin\", \"java.exe\"));\n-        } else {\n-            var appLayout = ApplicationLayout.windowsAppImage().resolveAt(appDir);\n-\n-            installerIcon = appLayout.launchersDirectory()\n-                    .resolve(appName + \".exe\");\n-\n-            new PackageFile(appName).save(appLayout);\n+            installerIcon = runtimeLayout.runtimeDirectory().resolve(Path.of(\"bin\", \"java.exe\"));\n+        } else if (appImageLayout instanceof ApplicationLayout appLayout) {\n+            installerIcon = appLayout.launchersDirectory().resolve(\n+                    pkg.app().mainLauncher().orElseThrow().executableNameWithSuffix());\n@@ -389,4 +225,1 @@\n-        params.put(WIN_APP_IMAGE.getID(), appDir);\n-\n-        String licenseFile = LICENSE_FILE.fetchFrom(params);\n-        if (licenseFile != null) {\n+        pkg.licenseFile().ifPresent(licenseFile -> {\n@@ -395,3 +228,1 @@\n-            Path lfile = Path.of(licenseFile);\n-            Path destFile = CONFIG_ROOT.fetchFrom(params)\n-                    .resolve(lfile.getFileName());\n+            Path destFile = env.configDir().resolve(licenseFile.getFileName());\n@@ -399,1 +230,5 @@\n-            IOUtils.copyFile(lfile, destFile);\n+            try {\n+                IOUtils.copyFile(licenseFile, destFile);\n+            } catch (IOException ex) {\n+                throw new UncheckedIOException(ex);\n+            }\n@@ -402,12 +237,1 @@\n-        }\n-\n-        try {\n-            var serviceInstallerResource = initServiceInstallerResource(params);\n-            if (serviceInstallerResource != null) {\n-                var serviceInstallerPath = serviceInstallerResource.getExternalPath();\n-                params.put(SERVICE_INSTALLER.getID(), new InstallableFile(\n-                        serviceInstallerPath, serviceInstallerPath.getFileName()));\n-            }\n-        } catch (ConfigException ex) {\n-            throw new PackagerException(ex);\n-        }\n+        });\n@@ -422,32 +246,15 @@\n-        Path imageDir = MSI_IMAGE_DIR.fetchFrom(params);\n-        try {\n-            Files.createDirectories(imageDir);\n-\n-            prepareProto(params);\n-\n-            for (var wixFragment : wixFragments) {\n-                wixFragment.initFromParams(params);\n-                wixFragment.addFilesToConfigRoot();\n-            }\n-\n-            Map<String, String> wixVars = prepareMainProjectFile(params);\n-            return buildMSI(params, wixVars, outputParentDir);\n-        } catch (IOException ex) {\n-            Log.verbose(ex);\n-            throw new PackagerException(ex);\n-        }\n-    }\n-\n-    private long getAppImageSizeKb(Map<String, ? super Object> params) throws\n-            IOException {\n-        ApplicationLayout appLayout;\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-            appLayout = ApplicationLayout.javaRuntime();\n-        } else {\n-            appLayout = ApplicationLayout.windowsAppImage();\n-        }\n-        appLayout = appLayout.resolveAt(WIN_APP_IMAGE.fetchFrom(params));\n-\n-        long size = appLayout.sizeInBytes() >> 10;\n-\n-        return size;\n+        \/\/ Order is important!\n+        var pkg = WinFromParams.MSI_PACKAGE.fetchFrom(params);\n+        var env = BuildEnvFromParams.BUILD_ENV.fetchFrom(params);\n+\n+        WinPackagingPipeline.build()\n+                .excludeDirFromCopying(outputParentDir)\n+                .task(PackagingPipeline.PackageTaskID.CREATE_CONFIG_FILES)\n+                        .packageAction(this::prepareConfigFiles)\n+                        .add()\n+                .task(PackagingPipeline.PackageTaskID.CREATE_PACKAGE_FILE)\n+                        .packageAction(this::buildPackage)\n+                        .add()\n+                .create().execute(env, pkg, outputParentDir);\n+\n+        return outputParentDir.resolve(pkg.packageFileNameWithSuffix()).toAbsolutePath();\n@@ -456,48 +263,5 @@\n-    private Map<String, String> prepareMainProjectFile(\n-            Map<String, ? super Object> params) throws IOException {\n-        Map<String, String> data = new HashMap<>();\n-\n-        final UUID productCode = getProductCode(params);\n-        final UUID upgradeCode = getUpgradeCode(params);\n-\n-        data.put(\"JpProductCode\", productCode.toString());\n-        data.put(\"JpProductUpgradeCode\", upgradeCode.toString());\n-\n-        Log.verbose(MessageFormat.format(I18N.getString(\"message.product-code\"),\n-                productCode));\n-        Log.verbose(MessageFormat.format(I18N.getString(\"message.upgrade-code\"),\n-                upgradeCode));\n-\n-        data.put(\"JpAllowUpgrades\", \"yes\");\n-        if (!StandardBundlerParam.isRuntimeInstaller(params)) {\n-            data.put(\"JpAllowDowngrades\", \"yes\");\n-        }\n-\n-        data.put(\"JpAppName\", APP_NAME.fetchFrom(params));\n-        data.put(\"JpAppDescription\", DESCRIPTION.fetchFrom(params));\n-        data.put(\"JpAppVendor\", VENDOR.fetchFrom(params));\n-        data.put(\"JpAppVersion\", PRODUCT_VERSION.fetchFrom(params));\n-        if (Files.exists(installerIcon)) {\n-            data.put(\"JpIcon\", installerIcon.toString());\n-        }\n-\n-        Optional.ofNullable(HELP_URL.fetchFrom(params)).ifPresent(value -> {\n-            data.put(\"JpHelpURL\", value);\n-        });\n-\n-        Optional.ofNullable(UPDATE_URL.fetchFrom(params)).ifPresent(value -> {\n-            data.put(\"JpUpdateURL\", value);\n-        });\n-\n-        Optional.ofNullable(ABOUT_URL.fetchFrom(params)).ifPresent(value -> {\n-            data.put(\"JpAboutURL\", value);\n-        });\n-\n-        data.put(\"JpAppSizeKb\", Long.toString(getAppImageSizeKb(params)));\n-\n-        final Path configDir = CONFIG_ROOT.fetchFrom(params);\n-\n-        data.put(\"JpConfigDir\", configDir.toAbsolutePath().toString());\n-\n-        if (MSI_SYSTEM_WIDE.fetchFrom(params)) {\n-            data.put(\"JpIsSystemWide\", \"yes\");\n+    private void prepareConfigFiles(PackageBuildEnv<WinMsiPackage, AppImageLayout> env) throws PackagerException, IOException {\n+        prepareProto(env.pkg(), env.env(), env.resolvedLayout());\n+        for (var wixFragment : wixFragments) {\n+            wixFragment.initFromParams(env.env(), env.pkg());\n+            wixFragment.addFilesToConfigRoot();\n@@ -506,2 +270,1 @@\n-        return data;\n-    }\n+        final var msiOut = env.outputDir().resolve(env.pkg().packageFileNameWithSuffix());\n@@ -509,3 +272,1 @@\n-    private Path buildMSI(Map<String, ? super Object> params,\n-            Map<String, String> wixVars, Path outdir)\n-            throws IOException {\n+        Log.verbose(I18N.format(\"message.preparing-msi-config\", msiOut.toAbsolutePath()));\n@@ -513,1 +274,1 @@\n-        Path msiOut = outdir.resolve(INSTALLER_FILE_NAME.fetchFrom(params) + \".msi\");\n+        final var wixVars = createWixVars(env);\n@@ -515,3 +276,1 @@\n-        Log.verbose(MessageFormat.format(I18N.getString(\n-                \"message.preparing-msi-config\"), msiOut.toAbsolutePath()\n-                        .toString()));\n+        final var wixObjDir = env.env().buildRoot().resolve(\"wixobj\");\n@@ -519,1 +278,1 @@\n-        var wixObjDir = TEMP_ROOT.fetchFrom(params).resolve(\"wixobj\");\n+        final var configDir = env.env().configDir();\n@@ -521,1 +280,1 @@\n-        var wixPipeline = WixPipeline.build()\n+        final var wixPipelineBuilder = WixPipeline.build()\n@@ -523,3 +282,2 @@\n-                .setWorkDir(WIN_APP_IMAGE.fetchFrom(params))\n-                .addSource(CONFIG_ROOT.fetchFrom(params).resolve(\"main.wxs\"),\n-                        wixVars);\n+                .setWorkDir(env.env().appImageDir())\n+                .addSource(configDir.resolve(\"main.wxs\"), wixVars);\n@@ -528,1 +286,1 @@\n-            wixFragment.configureWixPipeline(wixPipeline);\n+            wixFragment.configureWixPipeline(wixPipelineBuilder);\n@@ -531,3 +289,0 @@\n-        Log.verbose(MessageFormat.format(I18N.getString(\n-                \"message.generating-msi\"), msiOut.toAbsolutePath().toString()));\n-\n@@ -536,1 +291,1 @@\n-                wixPipeline.addLightOptions(\"-sice:ICE27\");\n+                wixPipelineBuilder.addLightOptions(\"-sice:ICE27\");\n@@ -538,2 +293,2 @@\n-                if (!MSI_SYSTEM_WIDE.fetchFrom(params)) {\n-                    wixPipeline.addLightOptions(\"-sice:ICE91\");\n+                if (!env.pkg().isSystemWideInstall()) {\n+                    wixPipelineBuilder.addLightOptions(\"-sice:ICE91\");\n@@ -549,2 +304,0 @@\n-        final Path configDir = CONFIG_ROOT.fetchFrom(params);\n-\n@@ -560,1 +313,1 @@\n-            wixResources.addResource(createResource(name, params).setPublicName(name).setCategory(\n+            wixResources.addResource(env.env().createResource(name).setPublicName(name).setCategory(\n@@ -564,1 +317,1 @@\n-        wixResources.addResource(createResource(\"main.wxs\", params).setPublicName(\"main.wxs\").\n+        wixResources.addResource(env.env().createResource(\"main.wxs\").setPublicName(\"main.wxs\").\n@@ -567,1 +320,1 @@\n-        wixResources.addResource(createResource(\"overrides.wxi\", params).setPublicName(\n+        wixResources.addResource(env.env().createResource(\"overrides.wxi\").setPublicName(\n@@ -574,1 +327,4 @@\n-        List<Path> customWxlFiles = getWxlFilesFromDir(params, RESOURCE_DIR).stream()\n+        List<Path> customWxlFiles = env.env().resourceDir()\n+                .map(WinMsiBundler::getWxlFilesFromDir)\n+                .orElseGet(Collections::emptyList)\n+                .stream()\n@@ -578,5 +334,4 @@\n-                .peek(custom -> Log.verbose(MessageFormat.format(\n-                        I18N.getString(\"message.using-custom-resource\"),\n-                                String.format(\"[%s]\", I18N.getString(\"resource.wxl-file\")),\n-                                custom.getFileName().toString())))\n-                .toList();\n+                .peek(custom -> Log.verbose(I18N.format(\n+                        \"message.using-custom-resource\", String.format(\"[%s]\",\n+                                I18N.getString(\"resource.wxl-file\")),\n+                        custom.getFileName()))).toList();\n@@ -587,1 +342,1 @@\n-            wixResources.addResource(createResource(name, params).setPublicName(name).\n+            wixResources.addResource(env.env().createResource(name).setPublicName(name).\n@@ -595,9 +350,0 @@\n-        final var imageDir = WIN_APP_IMAGE.fetchFrom(params);\n-\n-        new ScriptRunner()\n-                .setDirectory(imageDir)\n-                .setResourceCategoryId(\"resource.post-app-image-script\")\n-                .setScriptNameSuffix(\"post-image\")\n-                .setEnvironmentVariable(\"JpAppImageDir\", imageDir.toAbsolutePath().toString())\n-                .run(params);\n-\n@@ -608,1 +354,1 @@\n-            wixPipeline.addLightOptions(\"-loc\", wxl.toString());\n+            wixPipelineBuilder.addLightOptions(\"-loc\", wxl.toString());\n@@ -614,1 +360,1 @@\n-            wixPipeline.addLightOptions(\"-loc\", wxl.toString());\n+            wixPipelineBuilder.addLightOptions(\"-loc\", wxl.toString());\n@@ -619,1 +365,1 @@\n-        final Path primaryWxlFile = CONFIG_ROOT.fetchFrom(params).resolve(\n+        final Path primaryWxlFile = configDir.resolve(\n@@ -628,1 +374,1 @@\n-                wixPipeline.addLightOptions(uniqueCultures.stream().collect(Collectors.joining(\";\",\n+                wixPipelineBuilder.addLightOptions(uniqueCultures.stream().collect(Collectors.joining(\";\",\n@@ -633,1 +379,1 @@\n-                    wixPipeline.addLightOptions(\"-culture\", culture);\n+                    wixPipelineBuilder.addLightOptions(\"-culture\", culture);\n@@ -642,1 +388,2 @@\n-        wixPipeline.create(wixToolset).buildMsi(msiOut.toAbsolutePath());\n+        wixPipeline = wixPipelineBuilder.create(wixToolset);\n+    }\n@@ -644,1 +391,4 @@\n-        return msiOut;\n+    private void buildPackage(PackageBuildEnv<WinMsiPackage, AppImageLayout> env) throws PackagerException, IOException {\n+        final var msiOut = env.outputDir().resolve(env.pkg().packageFileNameWithSuffix());\n+        Log.verbose(I18N.format(\"message.generating-msi\", msiOut.toAbsolutePath()));\n+        wixPipeline.buildMsi(msiOut.toAbsolutePath());\n@@ -647,5 +397,14 @@\n-    private static List<Path> getWxlFilesFromDir(Map<String, ? super Object> params,\n-            StandardBundlerParam<Path> pathParam) throws IOException {\n-        Path dir = pathParam.fetchFrom(params);\n-        if (dir == null) {\n-            return Collections.emptyList();\n+    private Map<String, String> createWixVars(PackageBuildEnv<WinMsiPackage, AppImageLayout> env) throws IOException {\n+        Map<String, String> data = new HashMap<>();\n+\n+        final var pkg = env.pkg();\n+\n+        data.put(\"JpProductCode\", pkg.productCode().toString());\n+        data.put(\"JpProductUpgradeCode\", pkg.upgradeCode().toString());\n+\n+        Log.verbose(I18N.format(\"message.product-code\", pkg.productCode()));\n+        Log.verbose(I18N.format(\"message.upgrade-code\", pkg.upgradeCode()));\n+\n+        data.put(\"JpAllowUpgrades\", \"yes\");\n+        if (!pkg.isRuntimeInstaller()) {\n+            data.put(\"JpAllowDowngrades\", \"yes\");\n@@ -654,0 +413,33 @@\n+        data.put(\"JpAppName\", pkg.packageName());\n+        data.put(\"JpAppDescription\", pkg.description());\n+        data.put(\"JpAppVendor\", pkg.app().vendor());\n+        data.put(\"JpAppVersion\", pkg.version());\n+        if (Files.exists(installerIcon)) {\n+            data.put(\"JpIcon\", installerIcon.toString());\n+        }\n+\n+        pkg.helpURL().ifPresent(value -> {\n+            data.put(\"JpHelpURL\", value);\n+        });\n+\n+        pkg.updateURL().ifPresent(value -> {\n+            data.put(\"JpUpdateURL\", value);\n+        });\n+\n+        pkg.aboutURL().ifPresent(value -> {\n+            data.put(\"JpAboutURL\", value);\n+        });\n+\n+        data.put(\"JpAppSizeKb\", Long.toString(AppImageLayout.toPathGroup(\n+                env.resolvedLayout()).sizeInBytes() >> 10));\n+\n+        data.put(\"JpConfigDir\", env.env().configDir().toAbsolutePath().toString());\n+\n+        if (pkg.isSystemWideInstall()) {\n+            data.put(\"JpIsSystemWide\", \"yes\");\n+        }\n+\n+        return data;\n+    }\n+\n+    private static List<Path> getWxlFilesFromDir(Path dir) {\n@@ -664,0 +456,2 @@\n+        } catch (IOException ex) {\n+            throw new UncheckedIOException(ex);\n@@ -667,1 +461,1 @@\n-    private static String getCultureFromWxlFile(Path wxlPath) throws IOException {\n+    private static String getCultureFromWxlFile(Path wxlPath) {\n@@ -677,2 +471,1 @@\n-                    \"\/\/WixLocalization\/@Culture\", doc,\n-                    XPathConstants.NODESET);\n+                    \"\/\/WixLocalization\/@Culture\", doc, XPathConstants.NODESET);\n@@ -680,2 +473,2 @@\n-                throw new IOException(MessageFormat.format(I18N.getString(\n-                        \"error.extract-culture-from-wix-l10n-file\"),\n+                throw new IOException(I18N.format(\n+                        \"error.extract-culture-from-wix-l10n-file\",\n@@ -688,2 +481,4 @@\n-            throw new IOException(MessageFormat.format(I18N.getString(\n-                    \"error.read-wix-l10n-file\"), wxlPath.toAbsolutePath().normalize()), ex);\n+            throw new UncheckedIOException(new IOException(\n+                    I18N.format(\"error.read-wix-l10n-file\", wxlPath.toAbsolutePath().normalize()), ex));\n+        } catch (IOException ex) {\n+            throw new UncheckedIOException(ex);\n@@ -694,2 +489,0 @@\n-        if (f == null || !Files.isRegularFile(f)) return;\n-\n@@ -761,32 +554,0 @@\n-\n-    }\n-\n-    private static OverridableResource initServiceInstallerResource(\n-            Map<String, ? super Object> params) throws ConfigException {\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-            \/\/ Runtime installer doesn't install launchers,\n-            \/\/ service installer not needed\n-            return null;\n-        }\n-\n-        if (!AppImageFile.getLaunchers(\n-                StandardBundlerParam.getPredefinedAppImage(params), params).stream().anyMatch(\n-                LauncherInfo::isService)) {\n-            \/\/ Not a single launcher is requested to be installed as a service,\n-            \/\/ service installer not needed\n-            return null;\n-        }\n-\n-        var result = createResource(null, params)\n-                .setPublicName(\"service-installer.exe\")\n-                .setSourceOrder(OverridableResource.Source.External);\n-        if (result.getResourceDir() != null) {\n-            result.setExternal(result.getResourceDir().resolve(result.getPublicName()));\n-\n-            if (Files.exists(result.getExternalPath())) {\n-                return result;\n-            }\n-        }\n-\n-        throw new ConfigException(I18N.getString(\"error.missing-service-installer\"),\n-                I18N.getString(\"error.missing-service-installer.advice\"));\n@@ -797,1 +558,1 @@\n-    private AppImageBundler appImageBundler;\n+    private WixPipeline wixPipeline;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinMsiBundler.java","additions":144,"deletions":383,"binary":false,"changes":527,"status":"modified"},{"patch":"@@ -0,0 +1,146 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.I18N.buildConfigException;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.UUID;\n+\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.MsiVersion;\n+import jdk.jpackage.internal.model.WinMsiPackage;\n+import jdk.jpackage.internal.model.WinMsiPackageMixin;\n+\n+final class WinMsiPackageBuilder {\n+\n+    WinMsiPackageBuilder(PackageBuilder pkgBuilder) {\n+        this.pkgBuilder = Objects.requireNonNull(pkgBuilder);\n+    }\n+\n+    WinMsiPackage create() throws ConfigException {\n+        var pkg = pkgBuilder.create();\n+\n+        try {\n+            MsiVersion.of(pkg.version());\n+        } catch (IllegalArgumentException ex) {\n+            throw buildConfigException(ex)\n+                    .advice(\"error.version-string-wrong-format.advice\")\n+                    .create();\n+        }\n+\n+        if (pkg.app().isService() && (serviceInstaller == null || !Files.exists(serviceInstaller))) {\n+            throw buildConfigException()\n+                    .message(\"error.missing-service-installer\")\n+                    .advice(\"error.missing-service-installer.advice\")\n+                    .create();\n+        }\n+\n+        return WinMsiPackage.create(pkg, new WinMsiPackageMixin.Stub(\n+                MsiVersion.of(pkg.version()),\n+                withInstallDirChooser,\n+                withShortcutPrompt,\n+                Optional.ofNullable(helpURL),\n+                Optional.ofNullable(updateURL),\n+                Optional.ofNullable(startMenuGroupName).orElseGet(DEFAULTS::startMenuGroupName),\n+                isSystemWideInstall,\n+                Optional.ofNullable(upgradeCode).orElseGet(() -> upgradeCode(pkg.app())),\n+                productCode(pkg.app(), pkg.version()),\n+                Optional.ofNullable(serviceInstaller)));\n+    }\n+\n+    private static UUID upgradeCode(Application app) {\n+        return createNameUUID(\"UpgradeCode\", app.vendor(), app.name());\n+    }\n+\n+    private static UUID productCode(Application app, String pkgVersion) {\n+        return createNameUUID(\"ProductCode\", app.vendor(), app.name(), pkgVersion);\n+    }\n+\n+    WinMsiPackageBuilder withInstallDirChooser(boolean v) {\n+        withInstallDirChooser = v;\n+        return this;\n+    }\n+\n+    WinMsiPackageBuilder withShortcutPrompt(boolean v) {\n+        withShortcutPrompt = v;\n+        return this;\n+    }\n+\n+    WinMsiPackageBuilder helpURL(String v) {\n+        helpURL = v;\n+        return this;\n+    }\n+\n+    WinMsiPackageBuilder updateURL(String v) {\n+        updateURL = v;\n+        return this;\n+    }\n+\n+    WinMsiPackageBuilder startMenuGroupName(String v) {\n+        startMenuGroupName = v;\n+        return this;\n+    }\n+\n+    WinMsiPackageBuilder isSystemWideInstall(boolean v) {\n+        isSystemWideInstall = v;\n+        return this;\n+    }\n+\n+    WinMsiPackageBuilder serviceInstaller(Path v) {\n+        serviceInstaller = v;\n+        return this;\n+    }\n+\n+    WinMsiPackageBuilder upgradeCode(UUID v) {\n+        upgradeCode = v;\n+        return this;\n+    }\n+\n+    private static UUID createNameUUID(String... components) {\n+        String key = String.join(\"\/\", components);\n+        return UUID.nameUUIDFromBytes(key.getBytes(StandardCharsets.UTF_8));\n+    }\n+\n+    record Defaults(String startMenuGroupName) {}\n+\n+    private boolean withInstallDirChooser;\n+    private boolean withShortcutPrompt;\n+    private String helpURL;\n+    private String updateURL;\n+    private String startMenuGroupName;\n+    private boolean isSystemWideInstall = true;\n+    private Path serviceInstaller;\n+    private UUID upgradeCode;\n+\n+    private final PackageBuilder pkgBuilder;\n+\n+    private static final Defaults DEFAULTS = new Defaults(I18N.getString(\"param.menu-group.default\"));\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinMsiPackageBuilder.java","additions":146,"deletions":0,"binary":false,"changes":146,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import static jdk.jpackage.internal.ApplicationImageUtils.createLauncherIconResource;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import jdk.jpackage.internal.PackagingPipeline.AppImageBuildEnv;\n+import jdk.jpackage.internal.PackagingPipeline.BuildApplicationTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.CopyAppImageTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.PrimaryTaskID;\n+import jdk.jpackage.internal.PackagingPipeline.TaskID;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.Package;\n+import jdk.jpackage.internal.model.PackagerException;\n+import jdk.jpackage.internal.model.WinApplication;\n+import jdk.jpackage.internal.model.WinLauncher;\n+\n+final class WinPackagingPipeline {\n+\n+    enum WinAppImageTaskID implements TaskID {\n+        REBRAND_LAUNCHERS\n+    }\n+\n+    static PackagingPipeline.Builder build() {\n+        return PackagingPipeline.buildStandard()\n+                .appImageLayoutForPackaging(Package::appImageLayout)\n+                .task(CopyAppImageTaskID.COPY).noaction().add()\n+                .task(WinAppImageTaskID.REBRAND_LAUNCHERS)\n+                        .addDependency(BuildApplicationTaskID.LAUNCHERS)\n+                        .addDependent(PrimaryTaskID.BUILD_APPLICATION_IMAGE)\n+                        .applicationAction(WinPackagingPipeline::rebrandLaunchers).add();\n+    }\n+\n+    private static void rebrandLaunchers(AppImageBuildEnv<WinApplication, ApplicationLayout> env)\n+            throws IOException, PackagerException {\n+        for (var launcher : env.app().launchers()) {\n+            final var iconTarget = createLauncherIconResource(env.app(), launcher, env.env()::createResource).map(iconResource -> {\n+                var iconDir = env.env().buildRoot().resolve(\"icons\");\n+                var theIconTarget = iconDir.resolve(launcher.executableName() + \".ico\");\n+                try {\n+                    if (null == iconResource.saveToFile(theIconTarget)) {\n+                        theIconTarget = null;\n+                    }\n+                } catch (IOException ex) {\n+                    throw new UncheckedIOException(ex);\n+                }\n+                return theIconTarget;\n+            });\n+\n+            var launcherExecutable = env.resolvedLayout().launchersDirectory().resolve(\n+                    launcher.executableNameWithSuffix());\n+\n+            \/\/ Update branding of launcher executable\n+            new ExecutableRebrander(env.app(),\n+                    (WinLauncher) launcher, env.env()::createResource).execute(\n+                            env.env(), launcherExecutable, iconTarget);\n+        }\n+    }\n+\n+    static final ApplicationLayout APPLICATION_LAYOUT = ApplicationLayoutUtils.PLATFORM_APPLICATION_LAYOUT;\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinPackagingPipeline.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -1,145 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.jpackage.internal;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.text.MessageFormat;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.ResourceBundle;\n-\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n-\n-public class WindowsAppImageBuilder extends AbstractAppImageBuilder {\n-    private static final ResourceBundle I18N = ResourceBundle.getBundle(\n-            \"jdk.jpackage.internal.resources.WinResources\");\n-\n-    private static final String TEMPLATE_APP_ICON =\"JavaApp.ico\";\n-\n-    public static final BundlerParamInfo<Path> ICON_ICO =\n-            new StandardBundlerParam<>(\n-            \"icon.ico\",\n-            Path.class,\n-            params -> {\n-                Path f = ICON.fetchFrom(params);\n-                if (f != null && f.getFileName() != null && !f.getFileName()\n-                        .toString().toLowerCase().endsWith(\".ico\")) {\n-                    Log.error(MessageFormat.format(\n-                            I18N.getString(\"message.icon-not-ico\"), f));\n-                    return null;\n-                }\n-                return f;\n-            },\n-            (s, p) -> Path.of(s));\n-\n-    public static final StandardBundlerParam<Boolean> CONSOLE_HINT =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.WIN_CONSOLE_HINT.getId(),\n-            Boolean.class,\n-            params -> false,\n-            \/\/ valueOf(null) is false,\n-            \/\/ and we actually do want null in some cases\n-            (s, p) -> (s == null\n-            || \"null\".equalsIgnoreCase(s)) ? true : Boolean.valueOf(s));\n-\n-    WindowsAppImageBuilder(Path imageOutDir) {\n-        super(imageOutDir);\n-    }\n-\n-    private void writeEntry(InputStream in, Path dstFile) throws IOException {\n-        Files.createDirectories(IOUtils.getParent(dstFile));\n-        Files.copy(in, dstFile);\n-    }\n-\n-    private static String getLauncherName(Map<String, ? super Object> params) {\n-        return APP_NAME.fetchFrom(params) + \".exe\";\n-    }\n-\n-    \/\/ Returns launcher resource name for launcher we need to use.\n-    public static String getLauncherResourceName(\n-            Map<String, ? super Object> params) {\n-        if (CONSOLE_HINT.fetchFrom(params)) {\n-            return \"jpackageapplauncher.exe\";\n-        } else {\n-            return \"jpackageapplauncherw.exe\";\n-        }\n-    }\n-\n-    @Override\n-    public void prepareApplicationFiles(Map<String, ? super Object> params)\n-            throws IOException {\n-        \/\/ create the .exe launchers\n-        createLauncherForEntryPoint(params, null);\n-\n-        \/\/ copy the jars\n-        copyApplication(params);\n-\n-        \/\/ create the additional launcher(s), if any\n-        List<Map<String, ? super Object>> entryPoints = ADD_LAUNCHERS.fetchFrom(params);\n-        for (Map<String, ? super Object> entryPoint : entryPoints) {\n-            createLauncherForEntryPoint(AddLauncherArguments.merge(params,\n-                    entryPoint, ICON.getID(), ICON_ICO.getID()), params);\n-        }\n-    }\n-\n-    private void createLauncherForEntryPoint(Map<String, ? super Object> params,\n-            Map<String, ? super Object> mainParams) throws IOException {\n-\n-        var iconResource = createIconResource(TEMPLATE_APP_ICON, ICON_ICO, params,\n-                mainParams);\n-        Path iconTarget = null;\n-        if (iconResource != null) {\n-            Path iconDir = StandardBundlerParam.TEMP_ROOT.fetchFrom(params).resolve(\n-                    \"icons\");\n-            iconTarget = iconDir.resolve(APP_NAME.fetchFrom(params) + \".ico\");\n-            if (null == iconResource.saveToFile(iconTarget)) {\n-                iconTarget = null;\n-            }\n-        }\n-\n-        writeCfgFile(params);\n-\n-        \/\/ Copy executable to bin folder\n-        Path executableFile = appLayout.launchersDirectory().resolve(\n-                getLauncherName(params));\n-\n-        try (InputStream is_launcher =\n-                getResourceAsStream(getLauncherResourceName(params))) {\n-            writeEntry(is_launcher, executableFile);\n-        }\n-\n-        \/\/ Update branding of launcher executable\n-        new ExecutableRebrander().rebrandLauncher(params, iconTarget, executableFile);\n-\n-        executableFile.toFile().setExecutable(true);\n-        executableFile.toFile().setReadOnly();\n-    }\n-}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WindowsAppImageBuilder.java","additions":0,"deletions":145,"binary":false,"changes":145,"status":"deleted"},{"patch":"@@ -28,0 +28,6 @@\n+import jdk.jpackage.internal.model.WinLauncher;\n+import jdk.jpackage.internal.model.WinMsiPackage;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.DottedVersion;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.util.PathGroup;\n@@ -31,1 +37,0 @@\n-import java.nio.file.Files;\n@@ -35,1 +40,0 @@\n-import java.util.Collections;\n@@ -45,0 +49,1 @@\n+import java.util.function.Function;\n@@ -48,0 +53,1 @@\n+import static java.util.stream.Collectors.toMap;\n@@ -57,9 +63,2 @@\n-import jdk.jpackage.internal.AppImageFile.LauncherInfo;\n-import jdk.jpackage.internal.util.XmlConsumer;\n-import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n-import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.jpackage.internal.WinMsiBundler.MSI_SYSTEM_WIDE;\n-import static jdk.jpackage.internal.WinMsiBundler.SERVICE_INSTALLER;\n-import static jdk.jpackage.internal.WinMsiBundler.WIN_APP_IMAGE;\n+import static jdk.jpackage.internal.util.CollectionUtils.toCollection;\n+import jdk.jpackage.internal.model.WinLauncherMixin.WinShortcut;\n@@ -67,2 +66,2 @@\n-import jdk.jpackage.internal.model.DottedVersion;\n-import jdk.jpackage.internal.util.PathGroup;\n+import jdk.jpackage.internal.model.AppImageLayout;\n+import jdk.jpackage.internal.model.FileAssociation;\n@@ -71,0 +70,2 @@\n+import jdk.jpackage.internal.util.XmlConsumer;\n+import static jdk.jpackage.internal.util.function.ThrowingConsumer.toConsumer;\n@@ -76,1 +77,1 @@\n-class WixAppImageFragmentBuilder extends WixFragmentBuilder {\n+final class WixAppImageFragmentBuilder extends WixFragmentBuilder {\n@@ -79,4 +80,2 @@\n-    void initFromParams(Map<String, ? super Object> params) {\n-        super.initFromParams(params);\n-\n-        Path appImageRoot = WIN_APP_IMAGE.fetchFrom(params);\n+    void initFromParams(BuildEnv env, WinMsiPackage pkg) {\n+        super.initFromParams(env, pkg);\n@@ -84,7 +83,1 @@\n-        Supplier<ApplicationLayout> appImageSupplier = () -> {\n-            if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-                return ApplicationLayout.javaRuntime();\n-            } else {\n-                return ApplicationLayout.platformAppImage();\n-            }\n-        };\n+        Path appImageRoot = env.appImageDir();\n@@ -92,1 +85,1 @@\n-        systemWide = MSI_SYSTEM_WIDE.fetchFrom(params);\n+        systemWide = pkg.isSystemWideInstall();\n@@ -95,3 +88,3 @@\n-                VENDOR.fetchFrom(params),\n-                APP_NAME.fetchFrom(params),\n-                VERSION.fetchFrom(params)).toString();\n+                pkg.app().vendor(),\n+                pkg.app().name(),\n+                pkg.version()).toString();\n@@ -100,7 +93,1 @@\n-                WINDOWS_INSTALL_DIR.fetchFrom(params));\n-\n-        do {\n-            ApplicationLayout layout = appImageSupplier.get();\n-            \/\/ Don't want AppImageFile.FILENAME in installed application.\n-            new InstallableFile(AppImageFile.getPathInAppImage(Path.of(\"\")),\n-                    null).excludeFromApplicationLayout(layout);\n+                pkg.relativeInstallDir());\n@@ -108,5 +95,4 @@\n-            \/\/ Want absolute paths to source files in generated WiX sources.\n-            \/\/ This is to handle scenario if sources would be processed from\n-            \/\/ different current directory.\n-            appImage = layout.resolveAt(appImageRoot.toAbsolutePath().normalize());\n-        } while (false);\n+        \/\/ Want absolute paths to source files in generated WiX sources.\n+        \/\/ This is to handle scenario if sources would be processed from\n+        \/\/ different current directory.\n+        initAppImageLayouts(pkg.appImageLayout(), appImageRoot.toAbsolutePath().normalize());\n@@ -114,1 +100,1 @@\n-        installedAppImage = appImageSupplier.get().resolveAt(INSTALLDIR);\n+        launchers = toCollection(pkg.app().launchers());\n@@ -116,9 +102,1 @@\n-        shortcutFolders = Stream.of(ShortcutsFolder.values()).filter(\n-                shortcutFolder -> shortcutFolder.requested(params)).collect(\n-                        Collectors.toSet());\n-\n-        if (StandardBundlerParam.isRuntimeInstaller(params)) {\n-            launchers = Collections.emptyList();\n-        } else {\n-            launchers = AppImageFile.getLaunchers(appImageRoot, params);\n-        }\n+        shortcutFolders = ShortcutsFolder.getForPackage(pkg);\n@@ -127,1 +105,1 @@\n-                .filter(LauncherInfo::isService)\n+                .filter(Launcher::isService)\n@@ -129,3 +107,2 @@\n-                    var launcherPath = addExeSuffixToPath(\n-                    installedAppImage.launchersDirectory().resolve(\n-                            launcher.getName()));\n+                    var launcherPath = installedAppImage.launchersDirectory().resolve(\n+                            launcher.executableNameWithSuffix());\n@@ -133,1 +110,1 @@\n-                    return new WixLauncherAsService(launcher.getName(), params)\n+                    return new WixLauncherAsService(pkg.app(), launcher, env::createResource)\n@@ -139,1 +116,0 @@\n-            serviceInstaller = SERVICE_INSTALLER.fetchFrom(params);\n@@ -141,0 +117,1 @@\n+            final var serviceInstallerPath = pkg.serviceInstaller().orElseThrow();\n@@ -142,1 +119,1 @@\n-                    serviceInstaller.srcPath().toAbsolutePath().normalize(),\n+                    serviceInstallerPath.toAbsolutePath().normalize(),\n@@ -144,1 +121,1 @@\n-                            serviceInstaller.installPath()));\n+                            serviceInstallerPath.getFileName()));\n@@ -147,1 +124,1 @@\n-        programMenuFolderName = MENU_GROUP.fetchFrom(params);\n+        programMenuFolderName = pkg.startMenuGroupName();\n@@ -149,1 +126,7 @@\n-        initFileAssociations(params);\n+        if (!pkg.isRuntimeInstaller()) {\n+            packageFile = new PackageFile(pkg.packageName());\n+        } else {\n+            packageFile = null;\n+        }\n+\n+        initFileAssociations();\n@@ -156,0 +139,3 @@\n+        if (packageFile != null) {\n+            packageFile.save(ApplicationLayout.build().setAll(getConfigRoot()).create());\n+        }\n@@ -190,21 +176,0 @@\n-    private void normalizeFileAssociation(FileAssociation fa) {\n-        fa.launcherPath = addExeSuffixToPath(\n-                installedAppImage.launchersDirectory().resolve(fa.launcherPath));\n-\n-        if (fa.iconPath != null && !Files.exists(fa.iconPath)) {\n-            fa.iconPath = null;\n-        }\n-\n-        if (fa.iconPath != null) {\n-            fa.iconPath = fa.iconPath.toAbsolutePath();\n-        }\n-\n-        \/\/ Filter out empty extensions.\n-        fa.extensions = fa.extensions.stream().filter(Predicate.not(\n-                String::isEmpty)).toList();\n-    }\n-\n-    private static Path addExeSuffixToPath(Path path) {\n-        return PathUtils.addSuffix(path, \".exe\");\n-    }\n-\n@@ -212,2 +177,2 @@\n-        String fname = String.format(\"fa_%s.ico\", String.join(\"_\", fa.extensions));\n-        return installedAppImage.destktopIntegrationDirectory().resolve(fname);\n+        String fname = String.format(\"fa_%s.ico\", fa.extension());\n+        return installedAppImage.desktopIntegrationDirectory().resolve(fname);\n@@ -216,6 +181,4 @@\n-    private void initFileAssociations(Map<String, ? super Object> params) {\n-        associations = FileAssociation.fetchFrom(params).stream()\n-                .peek(this::normalizeFileAssociation)\n-                \/\/ Filter out file associations without extensions.\n-                .filter(fa -> !fa.extensions.isEmpty())\n-                .toList();\n+    private void initFileAssociations() {\n+        associations = launchers.stream().collect(toMap(\n+                Launcher::executableNameWithSuffix,\n+                WinLauncher::fileAssociations));\n@@ -223,1 +186,1 @@\n-        associations.stream().filter(fa -> fa.iconPath != null).forEach(fa -> {\n+        associations.values().stream().flatMap(List::stream).filter(FileAssociation::hasIcon).toList().forEach(fa -> {\n@@ -226,2 +189,2 @@\n-            appImage.pathGroup().setPath(key, fa.iconPath);\n-            installedAppImage.pathGroup().setPath(key, getInstalledFaIcoPath(fa));\n+            appImagePathGroup.setPath(key, fa.icon().orElseThrow().toAbsolutePath().normalize());\n+            installedAppImagePathGroup.setPath(key, getInstalledFaIcoPath(fa));\n@@ -231,0 +194,19 @@\n+    private void initAppImageLayouts(AppImageLayout appImageLayout, Path appImageRoot) {\n+        var srcAppImageLayout = appImageLayout.resolveAt(appImageRoot);\n+\n+        var installedAppImageLayout = appImageLayout.resolveAt(INSTALLDIR);\n+\n+        appImagePathGroup = AppImageLayout.toPathGroup(srcAppImageLayout);\n+        installedAppImagePathGroup = AppImageLayout.toPathGroup(installedAppImageLayout);\n+\n+        if (srcAppImageLayout instanceof ApplicationLayout appLayout) {\n+            \/\/ Don't want app image info file in installed application.\n+            var appImageFile = AppImageFile.getPathInAppImage(appLayout);\n+            appImagePathGroup.ghostPath(appImageFile);\n+\n+            installedAppImage = (ApplicationLayout)installedAppImageLayout;\n+        } else {\n+            installedAppImage = null;\n+        }\n+    }\n+\n@@ -379,2 +361,1 @@\n-        componentIds = componentIds.stream().filter(Objects::nonNull).collect(\n-                Collectors.toList());\n+        componentIds = componentIds.stream().filter(Objects::nonNull).toList();\n@@ -472,2 +453,5 @@\n-        for (var fa : associations) {\n-            componentIds.addAll(addFaComponents(xml, fa));\n+        for (var entry : associations.entrySet()) {\n+            var launcherExe = entry.getKey();\n+            for (var fa : entry.getValue()) {\n+                componentIds.add(addFaComponent(xml, launcherExe, fa));\n+            }\n@@ -484,7 +468,2 @@\n-                Path launcherPath = addExeSuffixToPath(installedAppImage\n-                        .launchersDirectory().resolve(launcher.getName()));\n-\n-                if ((launcher.isMenu() &&\n-                        (folder.equals(ShortcutsFolder.ProgramMenu))) ||\n-                    (launcher.isShortcut() &&\n-                        (folder.equals(ShortcutsFolder.Desktop)))) {\n+                Path launcherPath = installedAppImage.launchersDirectory().resolve(\n+                        launcher.executableNameWithSuffix());\n@@ -492,2 +471,2 @@\n-                    String componentId = addShortcutComponent(xml, launcherPath,\n-                            folder);\n+                if (folder.isRequestedFor(launcher)) {\n+                    String componentId = addShortcutComponent(xml, launcherPath, folder);\n@@ -543,14 +522,3 @@\n-    private List<String> addFaComponents(XMLStreamWriter xml,\n-            FileAssociation fa) throws XMLStreamException, IOException {\n-        List<String> components = new ArrayList<>();\n-        for (var extension: fa.extensions) {\n-            Path path = INSTALLDIR.resolve(String.format(\"%s_%s\", extension,\n-                    fa.launcherPath.getFileName()));\n-            components.add(addComponent(xml, path, Component.ProgId, unused -> {\n-                xml.writeAttribute(\"Description\", fa.description);\n-\n-                if (fa.iconPath != null) {\n-                    xml.writeAttribute(\"Icon\", Id.File.of(getInstalledFaIcoPath(\n-                            fa)));\n-                    xml.writeAttribute(\"IconIndex\", \"0\");\n-                }\n+    private String addFaComponent(XMLStreamWriter xml,\n+            String launcherExe, FileAssociation fa) throws\n+            XMLStreamException, IOException {\n@@ -558,3 +526,3 @@\n-                xml.writeStartElement(\"Extension\");\n-                xml.writeAttribute(\"Id\", extension);\n-                xml.writeAttribute(\"Advertise\", \"no\");\n+        Path path = INSTALLDIR.resolve(String.format(\"%s_%s\", fa.extension(), launcherExe));\n+        return addComponent(xml, path, Component.ProgId, unused -> {\n+            xml.writeAttribute(\"Description\", fa.description().orElseThrow());\n@@ -562,4 +530,4 @@\n-                var mimeIt = fa.mimeTypes.iterator();\n-                if (mimeIt.hasNext()) {\n-                    String mime = mimeIt.next();\n-                    xml.writeAttribute(\"ContentType\", mime);\n+            if (fa.hasIcon()) {\n+                xml.writeAttribute(\"Icon\", Id.File.of(getInstalledFaIcoPath(fa)));\n+                xml.writeAttribute(\"IconIndex\", \"0\");\n+            }\n@@ -567,8 +535,3 @@\n-                    if (!defaultedMimes.contains(mime)) {\n-                        xml.writeStartElement(\"MIME\");\n-                        xml.writeAttribute(\"ContentType\", mime);\n-                        xml.writeAttribute(\"Default\", \"yes\");\n-                        xml.writeEndElement();\n-                        defaultedMimes.add(mime);\n-                    }\n-                }\n+            xml.writeStartElement(\"Extension\");\n+            xml.writeAttribute(\"Id\", fa.extension());\n+            xml.writeAttribute(\"Advertise\", \"no\");\n@@ -576,6 +539,2 @@\n-                xml.writeStartElement(\"Verb\");\n-                xml.writeAttribute(\"Id\", \"open\");\n-                xml.writeAttribute(\"Command\", \"!(loc.ContextMenuCommandLabel)\");\n-                xml.writeAttribute(\"Argument\", \"\\\"%1\\\" %*\");\n-                xml.writeAttribute(\"TargetFile\", Id.File.of(fa.launcherPath));\n-                xml.writeEndElement(); \/\/ <Verb>\n+            var mime = fa.mimeType();\n+            xml.writeAttribute(\"ContentType\", mime);\n@@ -583,3 +542,7 @@\n-                xml.writeEndElement(); \/\/ <Extension>\n-            }));\n-        }\n+            if (!defaultedMimes.contains(mime)) {\n+                xml.writeStartElement(\"MIME\");\n+                xml.writeAttribute(\"ContentType\", mime);\n+                xml.writeAttribute(\"Default\", \"yes\");\n+                xml.writeEndElement();\n+                defaultedMimes.add(mime);\n+            }\n@@ -587,1 +550,10 @@\n-        return components;\n+            xml.writeStartElement(\"Verb\");\n+            xml.writeAttribute(\"Id\", \"open\");\n+            xml.writeAttribute(\"Command\", \"!(loc.ContextMenuCommandLabel)\");\n+            xml.writeAttribute(\"Argument\", \"\\\"%1\\\" %*\");\n+            xml.writeAttribute(\"TargetFile\", Id.File.of(\n+                    installedAppImage.launchersDirectory().resolve(launcherExe)));\n+            xml.writeEndElement(); \/\/ <Verb>\n+\n+            xml.writeEndElement(); \/\/ <Extension>\n+        });\n@@ -632,1 +604,2 @@\n-    private void startDirectoryElement(XMLStreamWriter xml, String wix3ElementName, Path path) throws XMLStreamException {\n+    private void startDirectoryElement(XMLStreamWriter xml,\n+            String wix3ElementName, Path path) throws XMLStreamException {\n@@ -673,1 +646,1 @@\n-        appImage.transform(installedAppImage, new PathGroup.TransformHandler() {\n+        appImagePathGroup.transform(installedAppImagePathGroup, new PathGroup.TransformHandler() {\n@@ -697,0 +670,5 @@\n+        \/\/ The installed \"app\" directory is never empty as it contains at least \".package\" file.\n+        \/\/ However, the \"app\" directory in the source app image can be empty because the \".package\"\n+        \/\/ file is picked from the build config directory, not from the source app image.\n+        Optional.ofNullable(installedAppImage).map(ApplicationLayout::appDirectory).ifPresent(emptyDirs::remove);\n+\n@@ -734,1 +712,1 @@\n-        appImage.transform(installedAppImage, new PathGroup.TransformHandler() {\n+        appImagePathGroup.transform(installedAppImagePathGroup, new PathGroup.TransformHandler() {\n@@ -739,4 +717,0 @@\n-\n-            @Override\n-            public void createDirectory(final Path dir) throws IOException {\n-            }\n@@ -750,0 +724,8 @@\n+        if (packageFile != null) {\n+            files.add(Map.entry(\n+                    PackageFile.getPathInAppImage(\n+                            ApplicationLayout.build().setAll(\n+                                    getConfigRoot().toAbsolutePath().normalize()).create()),\n+                    PackageFile.getPathInAppImage(installedAppImage)));\n+        }\n+\n@@ -817,3 +799,0 @@\n-        PathGroup srcPathGroup = appImage.pathGroup();\n-        PathGroup dstPathGroup = installedAppImage.pathGroup();\n-\n@@ -822,1 +801,1 @@\n-        srcPathGroup.transform(dstPathGroup, new PathGroup.TransformHandler() {\n+        appImagePathGroup.transform(installedAppImagePathGroup, new PathGroup.TransformHandler() {\n@@ -829,4 +808,0 @@\n-\n-            @Override\n-            public void createDirectory(Path dst) throws IOException {\n-            }\n@@ -934,1 +909,1 @@\n-        ProgramMenu(PROGRAM_MENU_PATH, Arguments.CLIOptions.WIN_MENU_HINT,\n+        ProgramMenu(PROGRAM_MENU_PATH, WinShortcut.WIN_SHORTCUT_START_MENU,\n@@ -936,1 +911,1 @@\n-        Desktop(DESKTOP_PATH, Arguments.CLIOptions.WIN_SHORTCUT_HINT,\n+        Desktop(DESKTOP_PATH, WinShortcut.WIN_SHORTCUT_DESKTOP,\n@@ -939,1 +914,1 @@\n-        private ShortcutsFolder(Path root, Arguments.CLIOptions cliOption,\n+        private ShortcutsFolder(Path root, WinShortcut shortcutId,\n@@ -942,8 +917,1 @@\n-            this.bundlerParam = new StandardBundlerParam<>(\n-                    cliOption.getId(),\n-                    Boolean.class,\n-                    params -> false,\n-                    \/\/ valueOf(null) is false,\n-                    \/\/ and we actually do want null in some cases\n-                    (s, p) -> (s == null || \"null\".equalsIgnoreCase(s)) ? false : Boolean.valueOf(s)\n-            );\n+            this.shortcutId = shortcutId;\n@@ -961,2 +929,2 @@\n-        boolean requested(Map<String, ? super Object> params) {\n-            return bundlerParam.fetchFrom(params);\n+        boolean isRequestedFor(WinLauncher launcher) {\n+            return launcher.shortcuts().contains(shortcutId);\n@@ -969,0 +937,10 @@\n+        static Set<ShortcutsFolder> getForPackage(WinMsiPackage pkg) {\n+            var launchers = Optional.ofNullable(pkg.app().launchers()).map(\n+                    List::stream).orElseGet(Stream::of);\n+            return launchers.map(launcher -> {\n+                return Stream.of(ShortcutsFolder.values()).filter(shortcutsFolder -> {\n+                    return shortcutsFolder.isRequestedFor((WinLauncher)launcher);\n+                });\n+            }).flatMap(Function.identity()).collect(Collectors.toSet());\n+        }\n+\n@@ -972,1 +950,1 @@\n-        private final StandardBundlerParam<Boolean> bundlerParam;\n+        private final WinShortcut shortcutId;\n@@ -983,1 +961,1 @@\n-    private List<FileAssociation> associations;\n+    private Map<String, List<FileAssociation>> associations;\n@@ -987,1 +965,1 @@\n-    private List<LauncherInfo> launchers;\n+    private List<WinLauncher> launchers;\n@@ -993,1 +971,0 @@\n-    private ApplicationLayout appImage;\n@@ -996,0 +973,3 @@\n+    private PathGroup appImagePathGroup;\n+    private PathGroup installedAppImagePathGroup;\n+\n@@ -999,0 +979,2 @@\n+    private PackageFile packageFile;\n+\n@@ -1023,34 +1005,0 @@\n-\n-    private static final StandardBundlerParam<String> MENU_GROUP =\n-            new StandardBundlerParam<>(\n-                    Arguments.CLIOptions.WIN_MENU_GROUP.getId(),\n-                    String.class,\n-                    params -> I18N.getString(\"param.menu-group.default\"),\n-                    (s, p) -> s\n-            );\n-\n-    private static final BundlerParamInfo<String> WINDOWS_INSTALL_DIR =\n-            new StandardBundlerParam<>(\n-            \"windows-install-dir\",\n-            String.class,\n-            params -> {\n-                 String dir = INSTALL_DIR.fetchFrom(params);\n-                 if (dir != null) {\n-                     if (dir.contains(\":\") || dir.contains(\"..\")) {\n-                         Log.error(MessageFormat.format(I18N.getString(\n-                                \"message.invalid.install.dir\"), dir,\n-                                APP_NAME.fetchFrom(params)));\n-                     } else {\n-                        if (dir.startsWith(\"\\\\\")) {\n-                             dir = dir.substring(1);\n-                        }\n-                        if (dir.endsWith(\"\\\\\")) {\n-                             dir = dir.substring(0, dir.length() - 1);\n-                        }\n-                        return dir;\n-                     }\n-                 }\n-                 return APP_NAME.fetchFrom(params); \/\/ Default to app name\n-             },\n-            (s, p) -> s\n-    );\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixAppImageFragmentBuilder.java","additions":159,"deletions":211,"binary":false,"changes":370,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n@@ -43,1 +42,0 @@\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n@@ -47,0 +45,1 @@\n+import jdk.jpackage.internal.model.WinMsiPackage;\n@@ -69,1 +68,1 @@\n-    void initFromParams(Map<String, ? super Object> params) {\n+    void initFromParams(BuildEnv env, WinMsiPackage pkg) {\n@@ -72,2 +71,2 @@\n-        configRoot = CONFIG_ROOT.fetchFrom(params);\n-        fragmentResource = createResource(defaultResourceName, params).setPublicName(outputFileName);\n+        configRoot = env.configDir();\n+        fragmentResource = env.createResource(defaultResourceName).setPublicName(outputFileName);\n@@ -124,1 +123,1 @@\n-    final protected Map<WixNamespace, String> getWixNamespaces() {\n+    protected final Map<WixNamespace, String> getWixNamespaces() {\n@@ -149,1 +148,1 @@\n-    final protected Path getConfigRoot() {\n+    protected final Path getConfigRoot() {\n@@ -155,1 +154,1 @@\n-    final protected void defineWixVariable(String variableName) {\n+    protected final void defineWixVariable(String variableName) {\n@@ -159,1 +158,1 @@\n-    final protected void setWixVariable(String variableName, String variableValue) {\n+    protected final void setWixVariable(String variableName, String variableValue) {\n@@ -166,1 +165,1 @@\n-    final protected void addResource(OverridableResource resource, String saveAsName) {\n+    protected final void addResource(OverridableResource resource, String saveAsName) {\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixFragmentBuilder.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-import java.util.Map;\n+import java.util.function.Function;\n@@ -41,1 +41,2 @@\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n+import jdk.jpackage.internal.model.WinApplication;\n+import jdk.jpackage.internal.model.WinLauncher;\n@@ -50,3 +51,3 @@\n-    WixLauncherAsService(String name, Map<String, ? super Object> mainParams) {\n-        super(name, mainParams,\n-                createResource(\"service-install.wxi\", mainParams).setCategory(\n+    WixLauncherAsService(WinApplication app, WinLauncher launcher, Function<String, OverridableResource> createResource) {\n+        super(app, launcher,\n+                createResource.apply(\"service-install.wxi\").setCategory(\n@@ -55,1 +56,1 @@\n-        serviceConfigResource = createResource(\"service-config.wxi\", mainParams).setCategory(\n+        serviceConfigResource = createResource.apply(\"service-config.wxi\").setCategory(\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixLauncherAsService.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,1 @@\n+import jdk.jpackage.internal.resources.ResourceLocator;\n@@ -73,1 +74,1 @@\n-        new OverridableResource(\"wix3-to-wix4-conv.xsl\")\n+        new OverridableResource(\"wix3-to-wix4-conv.xsl\", ResourceLocator.class)\n@@ -163,1 +164,1 @@\n-    final static class ResourceGroup {\n+    static final class ResourceGroup {\n@@ -418,1 +419,1 @@\n-    private final static Set<String> KNOWN_NAMESPACES = Set.of(\n+    private static final Set<String> KNOWN_NAMESPACES = Set.of(\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixSourceConverter.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import jdk.jpackage.internal.model.WinMsiPackage;\n@@ -39,1 +40,0 @@\n-import java.util.stream.Stream;\n@@ -42,3 +42,0 @@\n-import jdk.jpackage.internal.util.XmlConsumer;\n-import static jdk.jpackage.internal.OverridableResource.createResource;\n-import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n@@ -47,0 +44,2 @@\n+import jdk.jpackage.internal.resources.ResourceLocator;\n+import jdk.jpackage.internal.util.XmlConsumer;\n@@ -54,2 +53,2 @@\n-    void initFromParams(Map<String, ? super Object> params) {\n-        super.initFromParams(params);\n+    void initFromParams(BuildEnv env, WinMsiPackage pkg) {\n+        super.initFromParams(env, pkg);\n@@ -57,2 +56,1 @@\n-        String licenseFile = LICENSE_FILE.fetchFrom(params);\n-        withLicenseDlg = licenseFile != null;\n+        withLicenseDlg = pkg.licenseFile().isPresent();\n@@ -60,1 +58,1 @@\n-            Path licenseFileName = IOUtils.getFileName(Path.of(licenseFile));\n+            Path licenseFileName = pkg.licenseFile().orElseThrow().getFileName();\n@@ -65,1 +63,1 @@\n-        withInstallDirChooserDlg = INSTALLDIR_CHOOSER.fetchFrom(params);\n+        withInstallDirChooserDlg = pkg.withInstallDirChooser();\n@@ -67,5 +65,1 @@\n-        List<ShortcutsFolder> shortcutFolders = Stream.of(\n-                ShortcutsFolder.values()).filter(shortcutFolder -> {\n-            return shortcutFolder.requested(params)\n-                    && SHORTCUT_PROMPT.fetchFrom(params);\n-        }).toList();\n+        final var shortcutFolders = ShortcutsFolder.getForPackage(pkg);\n@@ -73,1 +67,1 @@\n-        withShortcutPromptDlg = !shortcutFolders.isEmpty();\n+        withShortcutPromptDlg = !shortcutFolders.isEmpty() && pkg.withShortcutPrompt();\n@@ -78,1 +72,1 @@\n-            CustomDialog dialog = new CustomDialog(params, I18N.getString(\n+            CustomDialog dialog = new CustomDialog(env::createResource, I18N.getString(\n@@ -89,1 +83,1 @@\n-            CustomDialog dialog = new CustomDialog(params, I18N.getString(\n+            CustomDialog dialog = new CustomDialog(env::createResource, I18N.getString(\n@@ -130,1 +124,1 @@\n-            try (InputStream is = OverridableResource.readDefault(fname)) {\n+            try (InputStream is = ResourceLocator.class.getResourceAsStream(fname)) {\n@@ -512,1 +506,1 @@\n-        CustomDialog(Map<String, ? super Object> params, String category,\n+        CustomDialog(Function<String, OverridableResource> createResource, String category,\n@@ -517,1 +511,1 @@\n-            addResource(createResource(wxsFileName, params).setCategory(category).setPublicName(\n+            addResource(createResource.apply(wxsFileName).setCategory(category).setPublicName(\n@@ -535,16 +529,0 @@\n-\n-    private static final BundlerParamInfo<Boolean> INSTALLDIR_CHOOSER\n-            = new StandardBundlerParam<>(\n-                    Arguments.CLIOptions.WIN_DIR_CHOOSER.getId(),\n-                    Boolean.class,\n-                    params -> false,\n-                    (s, p) -> Boolean.valueOf(s)\n-            );\n-\n-    private static final StandardBundlerParam<Boolean> SHORTCUT_PROMPT\n-            = new StandardBundlerParam<>(\n-                    Arguments.CLIOptions.WIN_SHORTCUT_PROMPT.getId(),\n-                    Boolean.class,\n-                    params -> false,\n-                    (s, p) -> Boolean.valueOf(s)\n-            );\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixUiFragmentBuilder.java","additions":16,"deletions":38,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import java.text.MessageFormat;\n+import static jdk.jpackage.internal.model.I18N.buildLocalizedException;\n@@ -48,3 +48,3 @@\n-            throw new IllegalArgumentException(MessageFormat.format(\n-                    I18N.getString(\"error.msi-product-version-components\"),\n-                    value));\n+            throw buildLocalizedException()\n+                    .message(\"error.msi-product-version-components\", value)\n+                    .create(IllegalArgumentException::new);\n@@ -54,2 +54,3 @@\n-            throw new IllegalArgumentException(I18N.getString(\n-                    \"error.msi-product-version-major-out-of-range\"));\n+            throw buildLocalizedException()\n+                    .message(\"error.msi-product-version-major-out-of-range\")\n+                    .create(IllegalArgumentException::new);\n@@ -60,2 +61,3 @@\n-            throw new IllegalArgumentException(I18N.getString(\n-                    \"error.msi-product-version-minor-out-of-range\"));\n+            throw buildLocalizedException()\n+                    .message(\"error.msi-product-version-minor-out-of-range\")\n+                    .create(IllegalArgumentException::new);\n@@ -66,2 +68,3 @@\n-            throw new IllegalArgumentException(I18N.getString(\n-                    \"error.msi-product-version-build-out-of-range\"));\n+            throw buildLocalizedException()\n+                    .message(\"error.msi-product-version-build-out-of-range\")\n+                    .create(IllegalArgumentException::new);\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/model\/MsiVersion.java","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+public interface WinApplication extends Application, WinApplicationMixin {\n+\n+    public static WinApplication create(Application app) {\n+        return CompositeProxy.create(WinApplication.class, app, new WinApplicationMixin.Stub(app));\n+    }\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/model\/WinApplication.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+public interface WinApplicationMixin {\n+\n+    DottedVersion winVersion();\n+\n+    record Stub(DottedVersion winVersion) implements WinApplicationMixin {\n+        public Stub(Application app) {\n+            this(DottedVersion.greedy(app.version()));\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/model\/WinApplicationMixin.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.Optional;\n+import static jdk.jpackage.internal.model.StandardPackageType.WIN_EXE;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+public interface WinExePackage extends Package, WinExePackageMixin {\n+\n+    public static WinExePackage create(WinMsiPackage msiPackage, Optional<Path> icon) {\n+        return CompositeProxy.create(WinExePackage.class, createExePackage(\n+                msiPackage), new WinExePackageMixin.Stub(msiPackage, icon));\n+    }\n+\n+    private static Package createExePackage(WinMsiPackage pkg) {\n+        return new Package.Stub(\n+                pkg.app(),\n+                WIN_EXE,\n+                pkg.packageName(),\n+                pkg.description(),\n+                pkg.version(),\n+                pkg.aboutURL(),\n+                pkg.licenseFile(),\n+                pkg.predefinedAppImage(),\n+                pkg.relativeInstallDir());\n+    }\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/model\/WinExePackage.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+public interface WinExePackageMixin {\n+\n+    WinMsiPackage msiPackage();\n+\n+    Optional<Path> icon();\n+\n+    record Stub(WinMsiPackage msiPackage, Optional<Path> icon) implements WinExePackageMixin {}\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/model\/WinExePackageMixin.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import static java.util.stream.Collectors.toMap;\n+\n+import java.io.InputStream;\n+import java.util.Map;\n+import java.util.Optional;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+public interface WinLauncher extends Launcher, WinLauncherMixin {\n+\n+    @Override\n+    default Optional<String> executableSuffix() {\n+        return Optional.of(\".exe\");\n+    }\n+\n+    @Override\n+    default InputStream executableResource() {\n+        return ResourceLocator.class.getResourceAsStream(\n+                isConsole() ? \"jpackageapplauncher.exe\" : \"jpackageapplauncherw.exe\");\n+    }\n+\n+    @Override\n+    default Map<String, String> extraAppImageFileData() {\n+        return shortcuts().stream().collect(toMap(WinShortcut::name, v -> Boolean.toString(true)));\n+    }\n+\n+    public static WinLauncher create(Launcher launcher, WinLauncherMixin mixin) {\n+        return CompositeProxy.create(WinLauncher.class, launcher, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/model\/WinLauncher.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.util.Set;\n+\n+public interface WinLauncherMixin {\n+\n+    boolean isConsole();\n+\n+    enum WinShortcut {\n+        WIN_SHORTCUT_DESKTOP(\"shortcut\"),\n+        WIN_SHORTCUT_START_MENU(\"menu\"),\n+        ;\n+\n+        WinShortcut(String name) {\n+            this.name = name;\n+        }\n+\n+        public String getName() {\n+            return name;\n+        }\n+\n+        private final String name;\n+    }\n+\n+    Set<WinShortcut> shortcuts();\n+\n+    record Stub(boolean isConsole, Set<WinShortcut> shortcuts) implements WinLauncherMixin {\n+    }\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/model\/WinLauncherMixin.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import jdk.jpackage.internal.util.CompositeProxy;\n+\n+public interface WinMsiPackage extends Package, WinMsiPackageMixin {\n+\n+    WinApplication app();\n+\n+    public static WinMsiPackage create(Package pkg, WinMsiPackageMixin mixin) {\n+        return CompositeProxy.create(WinMsiPackage.class, pkg, mixin);\n+    }\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/model\/WinMsiPackage.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.model;\n+\n+import java.nio.file.Path;\n+import java.util.Optional;\n+import java.util.UUID;\n+\n+public interface WinMsiPackageMixin {\n+\n+    DottedVersion msiVersion();\n+\n+    boolean withInstallDirChooser();\n+\n+    boolean withShortcutPrompt();\n+\n+    Optional<String> helpURL();\n+\n+    Optional<String> updateURL();\n+\n+    String startMenuGroupName();\n+\n+    boolean isSystemWideInstall();\n+\n+    UUID upgradeCode();\n+\n+    UUID productCode();\n+\n+    Optional<Path> serviceInstaller();\n+\n+    record Stub(DottedVersion msiVersion, boolean withInstallDirChooser, boolean withShortcutPrompt,\n+            Optional<String> helpURL, Optional<String> updateURL, String startMenuGroupName,\n+            boolean isSystemWideInstall, UUID upgradeCode, UUID productCode,\n+            Optional<Path> serviceInstaller) implements WinMsiPackageMixin {}\n+}\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/model\/WinMsiPackageMixin.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -980,1 +980,14 @@\n-            pendingBytes = String.valueOf(userChar).getBytes();\n+            StringBuilder dataToConvert = new StringBuilder();\n+            dataToConvert.append(userChar);\n+            if (Character.isHighSurrogate(userChar)) {\n+                \/\/surrogates cannot be converted independently,\n+                \/\/read the low surrogate and append it to dataToConvert:\n+                char lowSurrogate = readUserInputChar();\n+                if (Character.isLowSurrogate(lowSurrogate)) {\n+                    dataToConvert.append(lowSurrogate);\n+                } else {\n+                    \/\/if not the low surrogate, rollback the reading of the character:\n+                    pendingLinePointer--;\n+                }\n+            }\n+            pendingBytes = dataToConvert.toString().getBytes();\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/ConsoleIOContext.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1,379 +0,0 @@\n-\/*\n- * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"gc\/z\/zIntrusiveRBTree.inline.hpp\"\n-#include \"memory\/allocation.hpp\"\n-#include \"memory\/arena.hpp\"\n-#include \"nmt\/memTag.hpp\"\n-#include \"unittest.hpp\"\n-#include \"utilities\/debug.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-#include \"zunittest.hpp\"\n-\n-#include <limits>\n-\n-struct ZRBTestEntryCompare {\n-  int operator()(const ZIntrusiveRBTreeNode* a, const ZIntrusiveRBTreeNode* b);\n-  int operator()(int key, const ZIntrusiveRBTreeNode* entry);\n-};\n-\n-class ZRBTestEntry : public ArenaObj {\n-  friend class ZIntrusiveRBTree<int, ZRBTestEntryCompare>;\n-\n-public:\n-  using ZTree = ZIntrusiveRBTree<int, ZRBTestEntryCompare>;\n-private:\n-  const int   _id;\n-  ZIntrusiveRBTreeNode _node;\n-\n-public:\n-  ZRBTestEntry(int id)\n-    : _id(id),\n-      _node() {}\n-\n-  int id() const {\n-    return _id;\n-  }\n-\n-  static ZIntrusiveRBTreeNode* cast_to_inner(ZRBTestEntry* element) {\n-    return &element->_node;\n-  }\n-  static const ZRBTestEntry* cast_to_outer(const ZIntrusiveRBTreeNode* node) {\n-    return (ZRBTestEntry*)((uintptr_t)node - offset_of(ZRBTestEntry, _node));\n-  }\n-\n-};\n-\n-int ZRBTestEntryCompare::operator()(const ZIntrusiveRBTreeNode* a, const ZIntrusiveRBTreeNode* b) {\n-  return ZRBTestEntry::cast_to_outer(a)->id() - ZRBTestEntry::cast_to_outer(b)->id();\n-}\n-int ZRBTestEntryCompare::operator()(int key, const ZIntrusiveRBTreeNode* entry) {\n-  return key - ZRBTestEntry::cast_to_outer(entry)->id();\n-}\n-\n-class ZTreeTest : public ZTest {\n-public:\n-  void shuffle_array(ZRBTestEntry** beg, ZRBTestEntry** end);\n-  void reverse_array(ZRBTestEntry** beg, ZRBTestEntry** end);\n-};\n-\n-class ResettableArena : public Arena {\n-public:\n-  using Arena::Arena;\n-\n-  void reset_arena() {\n-    if (_chunk != _first) {\n-      set_size_in_bytes(_chunk->length());\n-      Chunk::next_chop(_first);\n-    }\n-    _chunk = _first;\n-    _hwm = _chunk->bottom();\n-    _max = _chunk->top();\n-  }\n-};\n-\n-TEST_F(ZTreeTest, test_random) {\n-  constexpr size_t sizes[] = {1, 2, 4, 8, 16, 1024, 1024 * 1024};\n-  constexpr size_t num_sizes = ARRAY_SIZE(sizes);\n-  constexpr size_t iterations_multiplier = 4;\n-  constexpr size_t max_allocation_size = sizes[num_sizes - 1] * iterations_multiplier * sizeof(ZRBTestEntry);\n-  ResettableArena arena{MemTag::mtTest, Arena::Tag::tag_other, max_allocation_size};\n-  for (size_t s : sizes) {\n-    ZRBTestEntry::ZTree tree;\n-    const size_t num_iterations = s * iterations_multiplier;\n-    for (size_t i = 0; i < num_iterations; i++) {\n-      if (i % s == 0) {\n-        tree.verify_tree();\n-      }\n-      int id = random() % s;\n-      auto cursor = tree.find(id);\n-      if (cursor.found()) {\n-        \/\/ Replace or Remove\n-        if (i % 2 == 0) {\n-          \/\/ Replace\n-          if (i % 4 == 0) {\n-            \/\/ Replace with new\n-            tree.replace(ZRBTestEntry::cast_to_inner(new (&arena) ZRBTestEntry(id)), cursor);\n-          } else {\n-            \/\/ Replace with same\n-            tree.replace(cursor.node(), cursor);\n-          }\n-        } else {\n-          \/\/ Remove\n-          tree.remove(cursor);\n-        }\n-      } else {\n-        \/\/ Insert\n-        tree.insert(ZRBTestEntry::cast_to_inner(new (&arena) ZRBTestEntry(id)), cursor);\n-      }\n-    }\n-    tree.verify_tree();\n-    arena.reset_arena();\n-  }\n-}\n-\n-void ZTreeTest::reverse_array(ZRBTestEntry** beg, ZRBTestEntry** end) {\n-  if (beg == end) {\n-    return;\n-  }\n-\n-  ZRBTestEntry** first = beg;\n-  ZRBTestEntry** last = end - 1;\n-  while (first < last) {\n-    ::swap(*first, *last);\n-    first++;\n-    last--;\n-  }\n-}\n-\n-void ZTreeTest::shuffle_array(ZRBTestEntry** beg, ZRBTestEntry** end) {\n-  if (beg == end) {\n-    return;\n-  }\n-\n-  for (ZRBTestEntry** first = beg + 1; first != end; first++) {\n-    const ptrdiff_t distance = first - beg;\n-    ASSERT_GE(distance, 0);\n-    const ptrdiff_t random_index = random() % (distance + 1);\n-    ::swap(*first, *(beg + random_index));\n-  }\n-}\n-\n-TEST_F(ZTreeTest, test_insert) {\n-  Arena arena(MemTag::mtTest);\n-  constexpr size_t num_entries = 1024;\n-  ZRBTestEntry* forward[num_entries]{};\n-  ZRBTestEntry* reverse[num_entries]{};\n-  ZRBTestEntry* shuffle[num_entries]{};\n-  for (size_t i = 0; i < num_entries; i++) {\n-    const int id = static_cast<int>(i);\n-    forward[i] = new (&arena) ZRBTestEntry(id);\n-    reverse[i] = new (&arena) ZRBTestEntry(id);\n-    shuffle[i] = new (&arena) ZRBTestEntry(id);\n-  }\n-  reverse_array(reverse, reverse + num_entries);\n-  shuffle_array(shuffle, shuffle + num_entries);\n-\n-  ZRBTestEntry::ZTree forward_tree;\n-  auto cursor = forward_tree.root_cursor();\n-  for (size_t i = 0; i < num_entries; i++) {\n-    ASSERT_TRUE(cursor.is_valid());\n-    ASSERT_FALSE(cursor.found());\n-    ZIntrusiveRBTreeNode* const new_node = ZRBTestEntry::cast_to_inner(forward[i]);\n-    forward_tree.insert(new_node, cursor);\n-    cursor = forward_tree.next_cursor(new_node);\n-  }\n-  forward_tree.verify_tree();\n-\n-  ZRBTestEntry::ZTree reverse_tree;\n-  cursor = reverse_tree.root_cursor();\n-  for (size_t i = 0; i < num_entries; i++) {\n-    ASSERT_TRUE(cursor.is_valid());\n-    ASSERT_FALSE(cursor.found());\n-    ZIntrusiveRBTreeNode* const new_node = ZRBTestEntry::cast_to_inner(reverse[i]);\n-    reverse_tree.insert(new_node, cursor);\n-    cursor = reverse_tree.prev_cursor(new_node);\n-  }\n-  reverse_tree.verify_tree();\n-\n-  ZRBTestEntry::ZTree shuffle_tree;\n-  for (size_t i = 0; i < num_entries; i++) {\n-    cursor = shuffle_tree.find(reverse[i]->id());\n-    ASSERT_TRUE(cursor.is_valid());\n-    ASSERT_FALSE(cursor.found());\n-    ZIntrusiveRBTreeNode* const new_node = ZRBTestEntry::cast_to_inner(reverse[i]);\n-    shuffle_tree.insert(new_node, cursor);\n-  }\n-  shuffle_tree.verify_tree();\n-\n-  ZRBTestEntryCompare compare_fn;\n-  const ZIntrusiveRBTreeNode* forward_node = forward_tree.first();\n-  const ZIntrusiveRBTreeNode* reverse_node = reverse_tree.first();\n-  const ZIntrusiveRBTreeNode* shuffle_node = shuffle_tree.first();\n-  size_t count = 0;\n-  while (true) {\n-    count++;\n-    ASSERT_EQ(compare_fn(forward_node, reverse_node), 0);\n-    ASSERT_EQ(compare_fn(forward_node, shuffle_node), 0);\n-    ASSERT_EQ(compare_fn(reverse_node, shuffle_node), 0);\n-    const ZIntrusiveRBTreeNode* forward_next_node = forward_node->next();\n-    const ZIntrusiveRBTreeNode* reverse_next_node = reverse_node->next();\n-    const ZIntrusiveRBTreeNode* shuffle_next_node = shuffle_node->next();\n-    if (forward_next_node == nullptr) {\n-      ASSERT_EQ(forward_next_node, reverse_next_node);\n-      ASSERT_EQ(forward_next_node, shuffle_next_node);\n-      ASSERT_EQ(forward_node, forward_tree.last());\n-      ASSERT_EQ(reverse_node, reverse_tree.last());\n-      ASSERT_EQ(shuffle_node, shuffle_tree.last());\n-      break;\n-    }\n-    ASSERT_LT(compare_fn(forward_node, forward_next_node), 0);\n-    ASSERT_LT(compare_fn(reverse_node, reverse_next_node), 0);\n-    ASSERT_LT(compare_fn(shuffle_node, shuffle_next_node), 0);\n-    forward_node = forward_next_node;\n-    reverse_node = reverse_next_node;\n-    shuffle_node = shuffle_next_node;\n-  }\n-  ASSERT_EQ(count, num_entries);\n-}\n-\n-TEST_F(ZTreeTest, test_replace) {\n-  Arena arena(MemTag::mtTest);\n-  constexpr size_t num_entries = 1024;\n-  ZRBTestEntry::ZTree tree;\n-  auto cursor = tree.root_cursor();\n-  for (size_t i = 0; i < num_entries; i++) {\n-    ASSERT_TRUE(cursor.is_valid());\n-    ASSERT_FALSE(cursor.found());\n-    const int id = static_cast<int>(i) * 2 + 1;\n-    ZIntrusiveRBTreeNode* const new_node = ZRBTestEntry::cast_to_inner(new (&arena) ZRBTestEntry(id));\n-    tree.insert(new_node, cursor);\n-    cursor = tree.next_cursor(new_node);\n-  }\n-  tree.verify_tree();\n-\n-  size_t i = 0;\n-  for (auto it = tree.begin(), end = tree.end(); it != end; ++it) {\n-    auto& node = *it;\n-    if (i % (num_entries \/ 4)) {\n-      tree.verify_tree();\n-    }\n-    switch (i++ % 4) {\n-      case 0: {\n-        \/\/ Decrement\n-        ZRBTestEntry* new_entry = new (&arena) ZRBTestEntry(ZRBTestEntry::cast_to_outer(&node)->id() - 1);\n-        it.replace(ZRBTestEntry::cast_to_inner(new_entry));\n-      } break;\n-      case 1: break;\n-      case 2: {\n-        \/\/ Increment\n-        ZRBTestEntry* new_entry = new (&arena) ZRBTestEntry(ZRBTestEntry::cast_to_outer(&node)->id() + 1);\n-        it.replace(ZRBTestEntry::cast_to_inner(new_entry));\n-      } break;\n-      case 3: break;\n-      default:\n-        ShouldNotReachHere();\n-    }\n-  }\n-  tree.verify_tree();\n-\n-  int last_id = std::numeric_limits<int>::min();\n-  for (auto& node : tree) {\n-    int id = ZRBTestEntry::cast_to_outer(&node)->id();\n-    ASSERT_LT(last_id, id);\n-    last_id = id;\n-  }\n-  tree.verify_tree();\n-\n-  last_id = std::numeric_limits<int>::min();\n-  for (auto it = tree.begin(), end = tree.end(); it != end; ++it) {\n-    int id = ZRBTestEntry::cast_to_outer(&*it)->id();\n-    ASSERT_LT(last_id, id);\n-    last_id = id;\n-  }\n-  tree.verify_tree();\n-\n-  last_id = std::numeric_limits<int>::min();\n-  for (auto it = tree.cbegin(), end = tree.cend(); it != end; ++it) {\n-    int id = ZRBTestEntry::cast_to_outer(&*it)->id();\n-    ASSERT_LT(last_id, id);\n-    last_id = id;\n-  }\n-  tree.verify_tree();\n-\n-  last_id = std::numeric_limits<int>::max();\n-  for (auto it = tree.rbegin(), end = tree.rend(); it != end; ++it) {\n-    int id = ZRBTestEntry::cast_to_outer(&*it)->id();\n-    ASSERT_GT(last_id, id);\n-    last_id = id;\n-  }\n-  tree.verify_tree();\n-\n-  last_id = std::numeric_limits<int>::max();\n-  for (auto it = tree.crbegin(), end = tree.crend(); it != end; ++it) {\n-    int id = ZRBTestEntry::cast_to_outer(&*it)->id();\n-    ASSERT_GT(last_id, id);\n-    last_id = id;\n-  }\n-  tree.verify_tree();\n-}\n-\n-TEST_F(ZTreeTest, test_remove) {\n-  Arena arena(MemTag::mtTest);\n-  constexpr int num_entries = 1024;\n-  ZRBTestEntry::ZTree tree;\n-  int id = 0;\n-  tree.insert(ZRBTestEntry::cast_to_inner(new (&arena) ZRBTestEntry(++id)), tree.root_cursor());\n-  for (auto& node : tree) {\n-    if (ZRBTestEntry::cast_to_outer(&node)->id() == num_entries) {\n-      break;\n-    }\n-    auto cursor = tree.next_cursor(&node);\n-    ZIntrusiveRBTreeNode* const new_node = ZRBTestEntry::cast_to_inner(new (&arena) ZRBTestEntry(++id));\n-    tree.insert(new_node, cursor);\n-  }\n-  tree.verify_tree();\n-  ASSERT_EQ(ZRBTestEntry::cast_to_outer(tree.last())->id(), num_entries);\n-\n-  int i = 0;\n-  int removed = 0;\n-  for (auto it = tree.begin(), end = tree.end(); it != end; ++it) {\n-    if (i++ % 2 == 0) {\n-      it.remove();\n-      ++removed;\n-    }\n-  }\n-  tree.verify_tree();\n-\n-  int count = 0;\n-  for (auto it = tree.cbegin(), end = tree.cend(); it != end; ++it) {\n-    ++count;\n-  }\n-  ASSERT_EQ(count, num_entries - removed);\n-  tree.verify_tree();\n-\n-  for (auto it = tree.rbegin(), end = tree.rend(); it != end; ++it) {\n-    if (i++ % 2 == 0) {\n-      it.remove();\n-      ++removed;\n-    }\n-  }\n-  tree.verify_tree();\n-\n-  count = 0;\n-  for (auto it = tree.cbegin(), end = tree.cend(); it != end; ++it) {\n-    ++count;\n-  }\n-  ASSERT_EQ(count, num_entries - removed);\n-  tree.verify_tree();\n-\n-  for (auto it = tree.begin(), end = tree.end(); it != end; ++it) {\n-    it.remove();\n-    removed++;\n-  }\n-  tree.verify_tree();\n-\n-  ASSERT_EQ(removed, num_entries);\n-  ASSERT_EQ(tree.last(), nullptr);\n-  ASSERT_EQ(tree.first(), nullptr);\n-}\n","filename":"test\/hotspot\/gtest\/gc\/z\/test_zIntrusiveRBTree.cpp","additions":0,"deletions":379,"binary":false,"changes":379,"status":"deleted"},{"patch":"@@ -384,0 +384,10 @@\n+\n+TEST_VM(Arena, string_duplicate)\n+{\n+  char testString[] = \"this is a test string\";\n+  Arena ar(mtTest);\n+  auto copy = ar.strdup(&testString[0]);\n+  int result = strcmp(testString, copy);\n+  ASSERT_TRUE(0 == result);\n+  ASSERT_NE(copy, &testString[0]);\n+}\n","filename":"test\/hotspot\/gtest\/memory\/test_arena.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod009\/TestDescription.java  8351188 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList-enable-preview.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -50,1 +50,2 @@\n-compiler\/runtime\/Test8168712.java 8211769,8211771 generic-ppc64,generic-ppc64le,linux-s390x\n+compiler\/runtime\/Test8168712.java#with-dtrace 8211769,8211771 generic-ppc64,generic-ppc64le,linux-s390x\n+compiler\/runtime\/Test8168712.java#without-dtrace 8211769,8211771 generic-ppc64,generic-ppc64le,linux-s390x\n@@ -91,1 +92,0 @@\n-gc\/TestAllocHumongousFragment.java#iu-aggressive 8298781 generic-all\n@@ -235,0 +235,3 @@\n+vmTestbase\/gc\/gctests\/FinalizeTest04\/FinalizeTest04.java 8284234 generic-all\n+vmTestbase\/gc\/gctests\/PhantomReference\/phantom001\/phantom001.java 8284234 generic-all\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -445,1 +445,0 @@\n- -runtime\/cds\/appcds\/jigsaw\/modulepath\/AddExports.java \\\n@@ -566,2 +565,0 @@\n- -runtime\/cds\/appcds\/jigsaw\/modulepath\/AddExports.java \\\n- -runtime\/cds\/appcds\/jigsaw\/modulepath\/AddOpens.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-#  Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+#  Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,5 +27,11 @@\n-for module in $@\n-do\n-    file=${module\/\/.\/_}.java\n-    echo creating $file for $module...\n-    cat > $file <<EOF\n+# generates a wrapper file\n+# arguments:\n+#   $1 - file number. Like '_2' (can be empty)\n+#   $2 - classes range in perecents. Like ' 0% 50%' (can be empty)\n+generate_file() {\n+    local full_name=${file}${1}.java\n+    echo creating $full_name for $module...\n+\n+    [[ -z $2 ]] && scope_str=\"all\" || scope_str=\"some\"\n+\n+    cat > ${full_name} <<EOF\n@@ -33,1 +39,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, ${YEAR}, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +63,1 @@\n- * @summary run CTW for all classes from $module module\n+ * @summary run CTW for ${scope_str} classes from $module module\n@@ -68,1 +74,1 @@\n- * @run driver\/timeout=7200 sun.hotspot.tools.ctw.CtwRunner modules:$module\n+ * @run driver\/timeout=7200 sun.hotspot.tools.ctw.CtwRunner modules:${module}${2}\n@@ -71,0 +77,33 @@\n+}\n+\n+if [ \"$#\" -eq 0 ]; then\n+    echo \"No arguments given, scanning open\/src for modules\"\n+    MODULES=$(find ..\/..\/..\/..\/..\/..\/src -name module-info.java | \\\n+        grep share\/classes\/module-info.java |                         `# only standard modules are taken` \\\n+        sed 's\/.*src\\\/\/\/' | sed 's\/\\\/.*\/\/')                            # cleaning the module name of leading and trailing paths\n+else\n+    echo \"Using provided arguments as module(s) list\"\n+    MODULES=$@\n+fi\n+\n+YEAR=$(date +%Y)\n+\n+for module in $MODULES\n+do\n+    file=${module\/\/.\/_}\n+\n+    case $module in\n+        # Those are too large, we split them into 2 wrappers\n+        \"java.base\")      generate_file \"\" \" 0% 50%\"; generate_file \"_2\" \" 50% 100%\" ;;\n+        \"java.desktop\")   generate_file \"\" \" 0% 50%\"; generate_file \"_2\" \" 50% 100%\" ;;\n+        \"jdk.localedata\") generate_file \"\" \" 0% 50%\"; generate_file \"_2\" \" 50% 100%\" ;;\n+\n+        # Those have no classes (needs to be checked on re-generations)!\n+        \"jdk.jdwp.agent\") ;;\n+        \"jdk.graal.compiler\") ;;\n+        \"jdk.graal.compiler.management\") ;;\n+        \"jdk.crypto.ec\") ;;\n+        \"java.se\") ;;\n+\n+        # a more-or-less \"standard\" module\n+        *) generate_file \"\" \"\"\n@@ -72,0 +111,1 @@\n+    esac\n","filename":"test\/hotspot\/jtreg\/applications\/ctw\/modules\/generate.bash","additions":49,"deletions":9,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    public static final String VERSION = \"0.17-SNAPSHOT-20240328\";\n+    public static final String VERSION = \"0.17-SNAPSHOT-20241217\";\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/JcstressRunner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8355230\n+ * @summary Crash in fuzzer tests: assert(n != nullptr) failed: must not be null\n+ * @run main\/othervm -XX:CompileCommand=compileonly,TestNullRegionInputAtPhiMakePathDead::* -Xcomp TestNullRegionInputAtPhiMakePathDead\n+ *\/\n+\n+public class TestNullRegionInputAtPhiMakePathDead {\n+\n+    public static long instanceCount=-37082278491330812L;\n+    public static float fFld=1.509F;\n+    public static int iFld=89;\n+\n+    public static long vMeth_check_sum = 0;\n+\n+    public void mainTest() {\n+\n+        int i19, i20=13736, i21, i24=5;\n+        boolean b2=true;\n+\n+        double d;\n+        int i3;\n+\n+        for (d = 5; d < 131; ++d) {\n+            i3 = 12;\n+            while (--i3 > 0) {\n+                TestNullRegionInputAtPhiMakePathDead.fFld *= -31237;\n+            }\n+        }\n+        TestNullRegionInputAtPhiMakePathDead.fFld %= 16334;\n+        TestNullRegionInputAtPhiMakePathDead.instanceCount = 0;\n+        for (i19 = 2; i19 < 281; i19++) {\n+            try {\n+                TestNullRegionInputAtPhiMakePathDead.iFld = (57 % i20);\n+            } catch (ArithmeticException a_e) {}\n+            i20 += (((i19 * TestNullRegionInputAtPhiMakePathDead.fFld) + TestNullRegionInputAtPhiMakePathDead.instanceCount) - i19);\n+            for (i21 = i19; i21 < 90; i21++) {\n+                if (b2) {\n+                } else {\n+                    \/\/ CastII of b2 to false added here becomes top during igvn. It's used by a Phi\n+                    \/\/ at a Region that merges paths from the switch and if. Some of those paths are\n+                    \/\/ found unreachable at parse time but added to the Region anyway.\n+                    switch ((((i21 >>> 1) % 4) * 5) + 115) {\n+                    case 129:\n+                        break;\n+                    case 135:\n+                        i24 |= i24;\n+                    }\n+                }\n+            }\n+        }\n+\n+        System.out.println(\"vMeth_check_sum: \" + vMeth_check_sum);\n+    }\n+    public static void main(String[] strArr) {\n+        try {\n+            TestNullRegionInputAtPhiMakePathDead _instance = new TestNullRegionInputAtPhiMakePathDead();\n+            for (int i = 0; i < 10; i++ ) {\n+                _instance.mainTest();\n+            }\n+         } catch (Exception ex) {\n+         }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestNullRegionInputAtPhiMakePathDead.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary C2: high memory usage in PhaseCFG::insert_anti_dependences()\n+ * @summary C2: high memory usage in PhaseCFG::raise_above_anti_dependences()\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/TestAntiDependenciesHighMemUsage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary C2: high memory usage in PhaseCFG::insert_anti_dependences()\n+ * @summary C2: high memory usage in PhaseCFG::raise_above_anti_dependences()\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/TestAntiDependenciesHighMemUsage2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2025, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8350329\n+ * @summary C2: Div looses dependency on condition that guarantees divisor not zero in counted loop after peeling\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+IgnoreUnrecognizedVMOptions -XX:-UseLoopPredicate\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:StressSeed=31780379 TestPeeledLoopNoBackedgeFloatingDiv\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+IgnoreUnrecognizedVMOptions -XX:-UseLoopPredicate\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM TestPeeledLoopNoBackedgeFloatingDiv\n+ * @run main\/othervm TestPeeledLoopNoBackedgeFloatingDiv\n+ *\/\n+\n+public class TestPeeledLoopNoBackedgeFloatingDiv {\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test1(1000, 0, false, false);\n+        }\n+        test1(1, 0, false, false);\n+    }\n+\n+    private static int test1(int stop, int res, boolean alwaysTrueInPeeled, boolean alwaysFalse) {\n+        stop = Integer.max(stop, 1);\n+        for (int i = stop; i >= 1; i--) {\n+            res = res \/ i;\n+            if (alwaysFalse) {\n+\n+            }\n+            if (alwaysTrueInPeeled) {\n+                break;\n+            }\n+            alwaysTrueInPeeled = true;\n+        }\n+        return res;\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/controldependency\/TestPeeledLoopNoBackedgeFloatingDiv.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import jdk.vm.ci.code.RegisterArray;\n@@ -121,2 +120,1 @@\n-        RegisterArray allRegs = arch.getAvailableValueRegisters();\n-        for (Register reg : allRegs) {\n+        for (Register reg : arch.getAvailableValueRegisters()) {\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/CodeInstallerTest.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import java.util.List;\n@@ -370,3 +371,3 @@\n-        AllocatableValue[] args = cc.getArguments();\n-        for (int i = 0; i < args.length; i++) {\n-            emitLoad(args[i], prim[i]);\n+        List<AllocatableValue> args = cc.getArguments();\n+        for (int i = 0; i < args.size(); i++) {\n+            emitLoad(args.get(i), prim[i]);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/aarch64\/AArch64TestAssembler.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.List;\n@@ -498,1 +499,1 @@\n-        AllocatableValue[] args = cc.getArguments();\n+        List<AllocatableValue> args = cc.getArguments();\n@@ -501,2 +502,2 @@\n-        for (int i = args.length - 1; i >= 0; i--) {\n-            emitLoad(args[i], prim[i]);\n+        for (int i = args.size() - 1; i >= 0; i--) {\n+            emitLoad(args.get(i), prim[i]);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/amd64\/AMD64TestAssembler.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.util.List;\n@@ -230,3 +231,3 @@\n-        AllocatableValue[] args = cc.getArguments();\n-        for (int i = 0; i < args.length; i++) {\n-            emitLoad(args[i], prim[i]);\n+        List<AllocatableValue> args = cc.getArguments();\n+        for (int i = 0; i < args.size(); i++) {\n+            emitLoad(args.get(i), prim[i]);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/riscv64\/RISCV64TestAssembler.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-    \/\/ Triggers an assert in PhaseCFG::insert_anti_dependences if loop strip mining verification is disabled:\n+    \/\/ Triggers an assert in PhaseCFG::raise_above_anti_dependences if loop strip mining verification is disabled:\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestSplitIfPinnedLoadInStripMinedLoop.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-        int pos = DecimalDigits.getCharsUTF16(i, end, value);\n+        int pos = DecimalDigits.uncheckedGetCharsUTF16(i, end, value);\n@@ -130,1 +130,1 @@\n-        int pos = DecimalDigits.getCharsUTF16(l, end, value);\n+        int pos = DecimalDigits.uncheckedGetCharsUTF16(l, end, value);\n","filename":"test\/hotspot\/jtreg\/compiler\/patches\/java.base\/java\/lang\/Helper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n@@ -102,1 +102,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n@@ -123,1 +123,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n@@ -144,1 +144,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n@@ -165,1 +165,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n@@ -186,1 +186,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n@@ -207,1 +207,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n@@ -228,1 +228,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n@@ -251,1 +251,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n@@ -275,1 +275,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n@@ -298,1 +298,1 @@\n-        applyIfCPUFeature = {\"avx512_fp16\", \"true\"})\n+        applyIfCPUFeatureOr = {\"avx512_fp16\", \"true\", \"zvfh\", \"true\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestFloat16VectorOperations.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -261,0 +261,1 @@\n+        final int CONSTANT_Dynamic = 17;\n@@ -322,0 +323,5 @@\n+                case CONSTANT_Dynamic:\n+                    cursor.readUnsignedShort(); \/\/ bootstrap_method_attr_index\n+                    cursor.readUnsignedShort(); \/\/ name_and_type_index\n+                    break;\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/gcbasher\/Decompiler.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-   java -Xshare:dump -Xlog:cds+map=debug,cds+map+oops=trace:file=cds.map:none:filesize=0\n+   java -Xshare:dump -Xlog:aot+map=debug,aot+map+oops=trace:file=cds.map:none:filesize=0\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/CDSMapReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @summary Test the contents of -Xlog:cds+map\n+ * @summary Test the contents of -Xlog:aot+map\n@@ -70,1 +70,1 @@\n-            .addPrefix(\"-Xlog:cds+map=debug,cds+map+oops=trace:file=\" + mapName + \":none:filesize=0\")\n+            .addPrefix(\"-Xlog:aot+map=debug,aot+map+oops=trace:file=\" + mapName + \":none:filesize=0\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/CDSMapTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-            .addPrefix(\"-Xlog:cds+map*=trace:file=\" + mapName + \":none:filesize=0\")\n+            .addPrefix(\"-Xlog:aot+map*=trace:file=\" + mapName + \":none:filesize=0\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/DeterministicDump.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test that CDS archive can be loaded if the archive is in a non-JVM variant directory.\n+ * @bug 8353504\n+ * @requires vm.cds\n+ * @requires vm.flagless\n+ * @requires vm.flavor == \"server\"\n+ * @comment This test doesn't work on Windows because it depends on symlinks\n+ * @requires os.family != \"windows\"\n+ * @library \/test\/lib appcds\n+ * @run driver NonJVMVariantLocation\n+ *\/\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class NonJVMVariantLocation {\n+    public static void main(String[] args) throws Exception {\n+        String java_home_src = System.getProperty(\"java.home\");\n+        String java_home_dst = CDSTestUtils.getOutputDir() + File.separator + \"moved_jdk\";\n+        String homeJava = java_home_src + File.separator + \"bin\" + File.separator + \"java\";\n+        String dstJava  = java_home_dst + File.separator + \"bin\" + File.separator + \"java\";\n+\n+        CDSTestUtils.clone(new File(java_home_src), new File(java_home_dst));\n+        System.out.println(\"============== Cloned JDK at \" + java_home_dst);\n+\n+        \/\/ Replace \"server\" with \"release\" in jvm.cfg.\n+        \/\/ The jvm.cfg is parsed by the java launcher in java.c.\n+        String locDir = java_home_dst + File.separator + \"lib\";\n+        String jvmCfg = locDir + File.separator + \"jvm.cfg\";\n+        String serverDir = \"server\";\n+        String releaseDir = \"release\";\n+        replaceTextInFile(jvmCfg, serverDir, releaseDir);\n+\n+        \/\/ Rename \"server\" dir to \"release\" dir.\n+        CDSTestUtils.rename(new File(locDir + File.separator + serverDir),\n+                            new File(locDir + File.separator + releaseDir));\n+\n+        \/\/ Test runtime with cloned JDK\n+        {\n+            ProcessBuilder pb = CDSTestUtils.makeBuilder(dstJava,\n+                                                         \"-Xshare:on\",\n+                                                         \"-Xlog:cds\",\n+                                                         \"-version\");\n+            OutputAnalyzer out = TestCommon.executeAndLog(pb, \"exec-dst\");\n+            out.shouldHaveExitValue(0)\n+               .shouldMatch(\".info..cds. Opened shared archive file.*classes.*\\\\.jsa\");\n+        }\n+    }\n+\n+    private static void replaceTextInFile(String filePath, String oldText, String newText) {\n+        try {\n+            List<String> lines = Files.readAllLines(Paths.get(filePath));\n+            lines.replaceAll(line -> line.replace(oldText, newText));\n+            Files.write(Paths.get(filePath), lines);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/NonJVMVariantLocation.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-            \"-Xlog:cds,cds+hashtables\",\n+            \"-Xlog:cds,aot+hashtables\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedStrings.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        test(\"-Xlog:cds=debug\");\n+        test(\"-Xlog:aot=debug,cds=debug\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SpaceUtilizationCheck.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-            \"-Xlog:cds=debug\",\n+            \"-Xlog:aot=debug\",\n@@ -73,1 +73,1 @@\n-            \"-Xlog:cds\",\n+            \"-Xlog:aot\",\n@@ -76,2 +76,2 @@\n-        out.shouldContain(\"Dumping shared data to file:\");\n-        out.shouldMatch(\"cds.*hello[.]aot\");\n+        out.shouldContain(\"AOTCache creation is complete\");\n+        out.shouldMatch(\"hello[.]aot\");\n@@ -84,1 +84,1 @@\n-            \"-Xlog:cds\",\n+            \"-Xlog:aot\",\n@@ -97,1 +97,1 @@\n-            \"-Xlog:cds\",\n+            \"-Xlog:aot\",\n@@ -111,1 +111,1 @@\n-            \"-Xlog:cds\",\n+            \"-Xlog:aot\",\n@@ -125,1 +125,1 @@\n-            \"-Xlog:cds\",\n+            \"-Xlog:aot\",\n@@ -141,1 +141,1 @@\n-            \"-Xlog:cds\",\n+            \"-Xlog:aot\",\n@@ -144,2 +144,2 @@\n-        out.shouldContain(\"Dumping shared data to file:\");\n-        out.shouldMatch(\"cds.*hello[.]aot\");\n+        out.shouldContain(\"AOTCache creation is complete\");\n+        out.shouldMatch(\"hello[.]aot\");\n@@ -152,1 +152,1 @@\n-            \"-Xlog:cds\",\n+            \"-Xlog:aot\",\n@@ -286,1 +286,1 @@\n-        out.shouldContain(\"Not a valid archive (hello.aotconfig)\");\n+        out.shouldContain(\"Not a valid shared archive file (hello.aotconfig)\");\n@@ -348,1 +348,1 @@\n-            \"-Xlog:cds\",\n+            \"-Xlog:aot\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/AOTFlags.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        String logArg = \"-Xlog:cds=debug,cds+reloc=debug,cds+heap\";\n+        String logArg = \"-Xlog:cds=debug,cds+reloc=debug,aot+heap\";\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ArchiveRelocationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            OutputAnalyzer output = TestCommon.dump(appJar, appClasses, \"-Xlog:cds+lambda=debug\");\n+            OutputAnalyzer output = TestCommon.dump(appJar, appClasses, \"-Xlog:aot+lambda=debug\");\n@@ -66,1 +66,1 @@\n-            OutputAnalyzer output = TestCommon.dump(appJar, appClasses, \"-Xlog:cds\", \"-Xlog:cds+lambda=debug\");\n+            OutputAnalyzer output = TestCommon.dump(appJar, appClasses, \"-Xlog:cds\", \"-Xlog:aot\", \"-Xlog:aot+lambda=debug\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ClassListFormatBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-        final String logArg = \"-Xlog:gc+heap=trace,cds=debug\";\n+        final String logArg = \"-Xlog:gc+heap=trace,cds=debug,aot=debug\";\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/DumpingWithNoCoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    static final String CDS_LOGGING = \"-Xlog:cds,cds+hashtables\";\n+    static final String CDS_LOGGING = \"-Xlog:cds,aot+hashtables\";\n@@ -78,2 +78,2 @@\n-        \/\/ [4.661s][info][cds,hashtables] Shared symbol table stats -------- base: 0x0000000800000000\n-        \/\/ [4.661s][info][cds,hashtables] Number of entries       :     50078\n+        \/\/ [4.661s][info][aot,hashtables] Shared symbol table stats -------- base: 0x0000000800000000\n+        \/\/ [4.661s][info][aot,hashtables] Number of entries       :     50078\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ExtraSymbols.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-    private static final String cdsLoadedLambdaProxy = \".cds.*Loaded.*lambda.*proxy\";\n+    private static final String cdsLoadedLambdaProxy = \".aot.*Loaded.*lambda.*proxy\";\n@@ -78,1 +78,1 @@\n-                       \"-Xlog:class+load,cds\")\n+                       \"-Xlog:class+load,aot,cds\")\n@@ -99,1 +99,1 @@\n-            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load,cds=debug\")\n+            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load,aot=debug,cds=debug\")\n@@ -113,1 +113,1 @@\n-            .addPrefix(\"-cp\", appJar, testProperty,  \"-Xlog:class+load,cds=debug\")\n+            .addPrefix(\"-cp\", appJar, testProperty,  \"-Xlog:class+load,aot=debug,cds=debug\")\n@@ -127,1 +127,1 @@\n-            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load,cds=debug\")\n+            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load,aot=debug,cds=debug\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaEagerInit.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-                       \"-Xlog:class+load,cds+class=debug,cds\")\n+                       \"-Xlog:class+load,cds+class=debug,aot,cds\")\n@@ -78,1 +78,1 @@\n-        output.shouldContain(\"CDS heap objects cannot be written because class jdk.internal.math.FDBigInteger maybe modified by ClassFileLoadHook\")\n+        output.shouldContain(\"heap objects cannot be written because class jdk.internal.math.FDBigInteger maybe modified by ClassFileLoadHook\")\n@@ -84,1 +84,1 @@\n-            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load,cds=debug\",\n+            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load=debug,aot=debug,cds=debug,class+path=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaWithJavaAgent.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    static final String CDS_LOGGING = \"-Xlog:cds,cds+hashtables\";\n+    static final String CDS_LOGGING = \"-Xlog:cds,aot+hashtables\";\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/VerifierTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-            .addVmArgs(\"-Xlog:cds+class=debug\", \"-Xlog:cds\",\n+            .addVmArgs(\"-Xlog:aot+class=debug\", \"-Xlog:aot\", \"-Xlog:cds\",\n@@ -68,4 +68,4 @@\n-                    out.shouldMatch(\"cds,class.*unreg AppWithCustomLoaders[$]MyLoadeeA\")\n-                       .shouldMatch(\"cds,class.*unreg com.test.Foo\")\n-                       .shouldMatch(\"cds,class.*array \\\\[LAppWithCustomLoaders[$]MyLoadeeA;\")\n-                       .shouldNotMatch(\"cds,class.* ReturnIntegerAsString\");\n+                    out.shouldMatch(\",class.*unreg AppWithCustomLoaders[$]MyLoadeeA\")\n+                       .shouldMatch(\",class.*unreg com.test.Foo\")\n+                       .shouldMatch(\",class.*array \\\\[LAppWithCustomLoaders[$]MyLoadeeA;\")\n+                       .shouldNotMatch(\",class.* ReturnIntegerAsString\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/AOTCacheSupportForCustomLoaders.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,114 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @summary when AOT cache options are used, old \"cds\" logs should be aliased to \"aot\".\n+ * @requires vm.cds\n+ * @requires vm.flagless\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\n+ * @build Hello\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar hello.jar Hello\n+ * @run driver AOTLoggingTag\n+ *\/\n+\n+import java.io.File;\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class AOTLoggingTag {\n+    static String appJar = ClassFileInstaller.getJarPath(\"hello.jar\");\n+    static String aotConfigFile = \"hello.aotconfig\";\n+    static String aotCacheFile = \"hello.aot\";\n+    static String helloClass = \"Hello\";\n+\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb;\n+        OutputAnalyzer out;\n+\n+        \/\/----------------------------------------------------------------------\n+        printTestCase(\"Training Run\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-XX:AOTMode=record\",\n+            \"-XX:AOTConfiguration=\" + aotConfigFile,\n+            \"-Xlog:aot\",\n+            \"-cp\", appJar, helloClass);\n+\n+        out = CDSTestUtils.executeAndLog(pb, \"train\");\n+        out.shouldContain(\"[info][aot] Writing binary AOTConfiguration file:\");\n+        out.shouldHaveExitValue(0);\n+\n+        \/\/----------------------------------------------------------------------\n+        printTestCase(\"Assembly Phase\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-XX:AOTMode=create\",\n+            \"-XX:AOTConfiguration=\" + aotConfigFile,\n+            \"-XX:AOTCache=\" + aotCacheFile,\n+            \"-Xlog:aot\",\n+            \"-cp\", appJar);\n+        out = CDSTestUtils.executeAndLog(pb, \"asm\");\n+        out.shouldContain(\"[info][aot] Opened AOT configuration file hello.aotconfig\");\n+        out.shouldHaveExitValue(0);\n+\n+        \/\/----------------------------------------------------------------------\n+        printTestCase(\"Production Run with AOTCache\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-XX:AOTCache=\" + aotCacheFile,\n+            \"-Xlog:aot\",\n+            \"-cp\", appJar, helloClass);\n+        out = CDSTestUtils.executeAndLog(pb, \"prod\");\n+        out.shouldContain(\"[info][aot] Opened AOT cache hello.aot\");\n+        out.shouldHaveExitValue(0);\n+\n+        \/\/----------------------------------------------------------------------\n+        printTestCase(\"All old -Xlog:cds+heap logs have been changed to -Xlog:aot+heap should alias to -Xlog:cds+heap\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-XX:AOTCache=\" + aotCacheFile,\n+            \"-Xlog:aot+heap\",\n+            \"-cp\", appJar, helloClass);\n+        out = CDSTestUtils.executeAndLog(pb, \"prod\");\n+        out.shouldNotContain(\"No tag set matches selection: aot+heap\");\n+        out.shouldContain(\"[info][aot,heap] resolve subgraph java.lang.Integer$IntegerCache\");\n+        out.shouldHaveExitValue(0);\n+\n+        \/\/----------------------------------------------------------------------\n+        printTestCase(\"Production Run: errors should be printed with [aot] decoration\");\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-XX:AOTCache=nosuchfile.aot\",\n+            \"-XX:AOTMode=on\",\n+            \"-cp\", appJar, helloClass);\n+        out = CDSTestUtils.executeAndLog(pb, \"prod\");\n+        out.shouldContain(\"[error][aot] An error has occurred while processing the AOT cache. Run with -Xlog:aot for details.\");\n+        out.shouldNotHaveExitValue(0);\n+    }\n+\n+    static int testNum = 0;\n+    static void printTestCase(String s) {\n+        System.out.println(\"vvvvvvv TEST CASE \" + testNum + \": \" + s + \" starts here vvvvvvv\");\n+        testNum++;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/AOTLoggingTag.java","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -44,1 +44,1 @@\n-            .addVmArgs(\"-Xlog:cds+class=debug\")\n+            .addVmArgs(\"-Xlog:aot+class=debug\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/VerifierFailOver.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-            .addVmArgs(\"-XX:+UseZGC\", \"-Xlog:cds\")\n+            .addVmArgs(\"-XX:+UseZGC\", \"-Xlog:cds\", \"-Xlog:aot\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/AOTCacheWithZGC.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -127,1 +127,2 @@\n-        TestCommon.run(\"-Xlog:cds\",\n+        TestCommon.run(\"-Xlog:aot\",\n+                       \"-Xlog:cds\",\n@@ -132,1 +133,2 @@\n-        TestCommon.run(\"-Xlog:cds\",\n+        TestCommon.run(\"-Xlog:aot\",\n+                       \"-Xlog:cds\",\n@@ -142,1 +144,2 @@\n-        TestCommon.run(\"-Xlog:cds\",\n+        TestCommon.run(\"-Xlog:aot\",\n+                       \"-Xlog:cds\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/AOTClassLinkingVMOptions.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -48,1 +48,3 @@\n-    static final Path SRC = Paths.get(System.getProperty(\"test.src\")).resolve(\"src\");\n+    static final String SEP = File.separator;\n+    static final Path SRC = Paths.get(System.getProperty(\"test.src\")).\n+        resolve( \"..\" + SEP + \"jigsaw\" + SEP + \"modulepath\" + SEP + \"src\");\n@@ -100,1 +102,1 @@\n-                 .addVmArgs(\"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\", \"-Xlog:cds\")\n+                 .addVmArgs(\"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\", \"-Xlog:aot,cds\")\n@@ -107,1 +109,1 @@\n-                            \"--add-exports\", \"java.base\/jdk.internal.misc=com.needsjdkaddexport\", \"-Xlog:cds\")\n+                            \"--add-exports\", \"java.base\/jdk.internal.misc=com.needsjdkaddexport\", \"-Xlog:aot,cds\")\n@@ -114,1 +116,1 @@\n-                            \"--add-exports\", \"com.foos\/com.foos.internal=com.needsfoosaddexport\", \"-Xlog:cds\")\n+                            \"--add-exports\", \"com.foos\/com.foos.internal=com.needsfoosaddexport\", \"-Xlog:aot,cds\")\n@@ -125,1 +127,1 @@\n-                            \"-Xlog:cds\")\n+                            \"-Xlog:aot,cds\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/AddExports.java","additions":7,"deletions":5,"binary":false,"changes":12,"previous_filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/modulepath\/AddExports.java","status":"renamed"},{"patch":"@@ -0,0 +1,234 @@\n+\/*\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/**\n+ * @test\n+ * @requires vm.cds\n+ * @requires vm.cds.supports.aot.class.linking\n+ * @comment work around JDK-8345635\n+ * @requires !vm.jvmci.enabled\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @run driver AddOpens\n+ * @summary sanity test the --add-opens option\n+ *\/\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.cds.CDSAppTester;\n+import jdk.test.lib.cds.SimpleCDSAppTester;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class AddOpens {\n+    private static final String SEP = File.separator;\n+\n+    private static final Path USER_DIR = Paths.get(CDSTestUtils.getOutputDir());\n+\n+    private static final Path SRC_DIR = Paths.get(System.getProperty(\"test.src\")).\n+        resolve( \"..\" + SEP + \"jigsaw\" + SEP + \"modulepath\" + SEP + \"src\");\n+\n+    private static final Path MODS_DIR = Paths.get(\"mods\");\n+\n+    \/\/ the module name of the test module\n+    private static final String TEST_MODULE1 = \"com.simple\";\n+\n+    \/\/ the module main class\n+    private static final String MAIN_CLASS = \"com.simple.Main\";\n+\n+    private static Path moduleDir = null;\n+    private static Path moduleDir2 = null;\n+    private static Path destJar = null;\n+\n+    private static String addOpensArg = \"java.base\/java.lang=\" + TEST_MODULE1;\n+    private static String addOpensAllUnnamed = \"java.base\/java.lang=ALL-UNNAMED\";\n+    private static String extraOpts[][] =\n+        {{\"-Xlog:cds\", \"-Xlog:cds\"},\n+         {\"--add-opens\", addOpensArg}};\n+    private static String expectedOutput[] =\n+        { \"[class,load] com.simple.Main source: shared objects file\",\n+          \"method.setAccessible succeeded!\"};\n+\n+    public static void buildTestModule() throws Exception {\n+\n+        \/\/ javac -d mods\/$TESTMODULE --module-path MOD_DIR src\/$TESTMODULE\/**\n+        JarBuilder.compileModule(SRC_DIR.resolve(TEST_MODULE1),\n+                                 MODS_DIR.resolve(TEST_MODULE1),\n+                                 MODS_DIR.toString());\n+\n+        moduleDir = Files.createTempDirectory(USER_DIR, \"mlib\");\n+        moduleDir2 = Files.createTempDirectory(USER_DIR, \"mlib2\");\n+\n+        Path srcJar = moduleDir.resolve(TEST_MODULE1 + \".jar\");\n+        destJar = moduleDir2.resolve(TEST_MODULE1 + \".jar\");\n+        String classes = MODS_DIR.resolve(TEST_MODULE1).toString();\n+        JarBuilder.createModularJar(srcJar.toString(), classes, MAIN_CLASS);\n+        Files.copy(srcJar, destJar);\n+\n+    }\n+\n+    static int testCount = 0;\n+    static void printComment(String comment) {\n+        testCount ++;\n+        System.out.println(\"======================================================================\");\n+        System.out.println(\"TESTCASE \" + testCount + \": \" + comment);\n+        System.out.println(\"======================================================================\");\n+    }\n+\n+    static SimpleCDSAppTester test(String comment, SimpleCDSAppTester tester) throws Exception {\n+        printComment(comment);\n+        return tester\n+            .setAssemblyChecker((OutputAnalyzer out) -> {\n+                    out.shouldContain(\"Full module graph = enabled\");\n+                    })\n+            .setProductionChecker((OutputAnalyzer out) -> {\n+                    out.shouldContain(expectedOutput[0]);\n+                    out.shouldContain(expectedOutput[1]);\n+                    })\n+            .runStaticWorkflow()\n+            .runAOTWorkflow();\n+    }\n+\n+    static class Tester1 extends CDSAppTester {\n+        public Tester1(String testName) {\n+            super(testName);\n+        }\n+\n+        @Override\n+        public String[] vmArgs(RunMode runMode) {\n+            if (runMode == RunMode.DUMP_STATIC) {\n+                return new String[] { \"-Xlog:cds\" };\n+            } else {\n+                return new String[] {\n+                    \"--add-opens\", addOpensArg, \"-Xlog:class+load=trace\",\n+                };\n+            }\n+        }\n+\n+        @Override\n+        public String classpath(RunMode runMode) {\n+            return destJar.toString();\n+        }\n+\n+        @Override\n+        public String modulepath(RunMode runMode) {\n+            return moduleDir.toString();\n+        }\n+\n+        @Override\n+        public String[] appCommandLine(RunMode runMode) {\n+            if (runMode == RunMode.TRAINING ||\n+                runMode == RunMode.ASSEMBLY ||\n+                runMode == RunMode.DUMP_STATIC) {\n+                return new String[] {\n+                    \"-m\", TEST_MODULE1,\n+                };\n+            } else {\n+                return new String[] {\n+                    \"-m\", TEST_MODULE1, \"with_add_opens\",\n+                };\n+            }\n+        }\n+\n+        @Override\n+        public void checkExecution(OutputAnalyzer out, RunMode runMode) throws Exception {\n+            if (runMode == RunMode.PRODUCTION) {\n+                out.shouldContain(expectedOutput[0]);\n+                out.shouldContain(expectedOutput[1]);\n+            } else if (runMode == RunMode.ASSEMBLY) {\n+                out.shouldContain(\"full module graph: enabled\");\n+            }\n+        }\n+    }\n+\n+    static class Tester2 extends CDSAppTester {\n+        public Tester2(String testName) {\n+            super(testName);\n+        }\n+\n+        @Override\n+        public String[] vmArgs(RunMode runMode) {\n+            return new String[] {\n+                \"--add-opens\", addOpensAllUnnamed, \"-Xlog:class+load=trace\",\n+            };\n+        }\n+\n+        @Override\n+        public String classpath(RunMode runMode) {\n+            return destJar.toString();\n+        }\n+\n+        @Override\n+        public String[] appCommandLine(RunMode runMode) {\n+            if (runMode == RunMode.TRAINING ||\n+                runMode == RunMode.ASSEMBLY ||\n+                runMode == RunMode.DUMP_STATIC) {\n+                return new String[] {\n+                    MAIN_CLASS,\n+                };\n+            } else {\n+                return new String[] {\n+                    MAIN_CLASS, \"with_add_opens\",\n+                };\n+            }\n+        }\n+\n+        @Override\n+        public void checkExecution(OutputAnalyzer out, RunMode runMode) throws Exception {\n+            if (runMode == RunMode.PRODUCTION) {\n+                out.shouldContain(expectedOutput[0]);\n+                out.shouldContain(expectedOutput[1]);\n+            } else if (runMode == RunMode.ASSEMBLY) {\n+                out.shouldContain(\"full module graph: enabled\");\n+            }\n+        }\n+    }\n+\n+    public static void main(String... args) throws Exception {\n+        \/\/ compile the modules and create the modular jar files\n+        buildTestModule();\n+        String appClasses[] = {MAIN_CLASS};\n+        OutputAnalyzer output;\n+\n+        test(\"Same --add-opens during ASSEMBLY\/DUMP_STATIC and PRODUCTION RunMode\",\n+            SimpleCDSAppTester.of(\"same-add-opens\")\n+                .classpath(destJar.toString())\n+                .addVmArgs(\"--add-opens\", addOpensArg, \"-Xlog:class+load=trace\")\n+                .modulepath(moduleDir.toString())\n+                .appCommandLine(\"-m\", TEST_MODULE1, \"with_add_opens\"));\n+\n+        printComment(\"no --add-opens during DUMP_STATIC RunMode; --add-opens during PRODUCTION RunMode\");\n+        Tester1 t1 = new Tester1(\"no-add-opens-in-DUMP_STATIC\");\n+        t1.run(\"AOT\");\n+        t1.run(\"STATIC\");\n+\n+        printComment(\"--add-opens ALL-UNNAMED during ASSEMBLY\/DUMP_STATIC and PRODUCTION RunMode\");\n+        Tester2 t2 = new Tester2(\"add-opens-ALL-UNNAMED\");\n+        t2.run(\"AOT\");\n+        t2.run(\"STATIC\");\n+\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/AddOpens.java","additions":234,"deletions":0,"binary":false,"changes":234,"status":"added"},{"patch":"@@ -0,0 +1,205 @@\n+\/*\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8354083\n+ * @requires vm.cds\n+ * @requires vm.cds.supports.aot.class.linking\n+ * @comment work around JDK-8345635\n+ * @requires !vm.jvmci.enabled\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @run driver AddReads\n+ * @summary sanity test the --add-reads option\n+ *\/\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.cds.CDSAppTester;\n+import jdk.test.lib.cds.SimpleCDSAppTester;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.Asserts;\n+\n+public class AddReads {\n+    private static final String SEP = File.separator;\n+\n+    private static final Path USER_DIR = Paths.get(CDSTestUtils.getOutputDir());\n+\n+    private static final Path SRC_DIR = Paths.get(System.getProperty(\"test.src\")).\n+        resolve( \"..\" + SEP + \"jigsaw\" + SEP + \"modulepath\" + SEP + \"src\");\n+\n+    private static final Path MODS_DIR = Paths.get(\"mods\");\n+\n+    \/\/ the module name of the test module\n+    private static final String MAIN_MODULE = \"com.norequires\";\n+    private static final String SUB_MODULE = \"org.astro\";\n+\n+    \/\/ the module main class\n+    private static final String MAIN_CLASS = \"com.norequires.Main\";\n+    private static final String APP_CLASS = \"org.astro.World\";\n+\n+    private static final String sharedClassA =\n+        \"[class,load] com.norequires.Main source: shared objects file\";\n+    private static final String sharedClassB =\n+        \"[class,load] org.astro.World source: shared objects file\";\n+    private static final String fmgEnabled = \"full module graph: enabled\";\n+    private static final String fmgDisabled = \"full module graph: disabled\";\n+    private static final String cannotAccess =\n+        \"class com.norequires.Main (in module com.norequires) cannot access class org.astro.World (in module org.astro)\";\n+\n+    private static Path moduleDir = null;\n+    private static Path subJar = null;\n+    private static Path mainJar = null;\n+\n+    public static void buildTestModule() throws Exception {\n+\n+        \/\/ javac -d mods\/$TESTMODULE src\/$TESTMODULE\/**\n+        JarBuilder.compileModule(SRC_DIR.resolve(SUB_MODULE),\n+                                       MODS_DIR.resolve(SUB_MODULE),\n+                                       null);\n+\n+        Asserts.assertTrue(CompilerUtils\n+            .compile(SRC_DIR.resolve(MAIN_MODULE),\n+                     MODS_DIR.resolve(MAIN_MODULE),\n+                     \"-cp\", MODS_DIR.resolve(SUB_MODULE).toString(),\n+                     \"--add-reads\", \"com.norequires=ALL-UNNAMED\"));\n+\n+        moduleDir = Files.createTempDirectory(USER_DIR, \"mlib\");\n+        subJar = moduleDir.resolve(SUB_MODULE + \".jar\");\n+        String classes = MODS_DIR.resolve(SUB_MODULE).toString();\n+        JarBuilder.createModularJar(subJar.toString(), classes, null);\n+\n+        mainJar = moduleDir.resolve(MAIN_MODULE + \".jar\");\n+        classes = MODS_DIR.resolve(MAIN_MODULE).toString();\n+        JarBuilder.createModularJar(mainJar.toString(), classes, MAIN_CLASS);\n+    }\n+\n+    static int testCount = 0;\n+    static void printComment(String comment) {\n+        testCount ++;\n+        System.out.println(\"======================================================================\");\n+        System.out.println(\"TESTCASE \" + testCount + \": \" + comment);\n+        System.out.println(\"======================================================================\");\n+    }\n+\n+    static SimpleCDSAppTester test(String comment, SimpleCDSAppTester tester) throws Exception {\n+        printComment(comment);\n+        return tester\n+            .setAssemblyChecker((OutputAnalyzer out) -> {\n+                    out.shouldContain(\"Full module graph = enabled\");\n+                    })\n+            .setProductionChecker((OutputAnalyzer out) -> {\n+                    out.shouldContain(\"use_full_module_graph = true; java.base\");\n+                    })\n+            .runStaticWorkflow()\n+            .runAOTWorkflow();\n+    }\n+\n+    static class Tester extends CDSAppTester {\n+        public Tester(String testName) {\n+            super(testName);\n+        }\n+\n+        @Override\n+        public String[] vmArgs(RunMode runMode) {\n+            if (runMode == RunMode.TRAINING ||\n+                runMode == RunMode.ASSEMBLY ||\n+                runMode == RunMode.DUMP_STATIC) {\n+                return new String[] {\n+                    \"--add-modules\", SUB_MODULE,\n+                    \"--add-reads\", \"com.norequires=\" + SUB_MODULE,\n+                    \"-Xlog:class+load,aot,cds,class+path=info\",\n+                };\n+            } else {\n+                return new String[] {\n+                    \"--add-modules\", SUB_MODULE,\n+                    \"--add-reads\", \"com.norequires=ALL-UNNAMED\",\n+                    \"-Xlog:class+load,aot,cds,class+path=info\",\n+                };\n+            }\n+        }\n+\n+        @Override\n+        public String classpath(RunMode runMode) {\n+            return subJar.toString();\n+        }\n+\n+\n+        @Override\n+        public String[] appCommandLine(RunMode runMode) {\n+            return new String[] {\n+                \"-m\", MAIN_MODULE,\n+            };\n+        }\n+\n+        @Override\n+        public String modulepath(RunMode runMode) {\n+            return moduleDir.toString();\n+        }\n+\n+        @Override\n+        public void checkExecution(OutputAnalyzer out, RunMode runMode) throws Exception {\n+            if (runMode == RunMode.PRODUCTION) {\n+                out.shouldContain(\"full module graph: disabled\");\n+                out.shouldContain(\"Mismatched values for property jdk.module.addreads: runtime com.norequires=ALL-UNNAMED dump time com.norequires=org.astro\");\n+            } else if (runMode == RunMode.ASSEMBLY) {\n+                out.shouldContain(\"full module graph: enabled\");\n+            } else {\n+                out.shouldHaveExitValue(0);\n+            }\n+        }\n+    }\n+\n+    public static void main(String... args) throws Exception {\n+        \/\/ compile the modules and create the modular jar files\n+        buildTestModule();\n+\n+        test(\"FMG should be enabled with '--add-reads com.norequires=org.astro'\",\n+             SimpleCDSAppTester.of(\"add-reads\")\n+                 .modulepath(moduleDir.toString())\n+                 .addVmArgs(\"--add-modules\", SUB_MODULE,\n+                            \"--add-reads\", \"com.norequires=\" + SUB_MODULE,\n+                            \"-Xlog:class+load,aot,cds,class+path=info\")\n+                 .appCommandLine(\"-m\", MAIN_MODULE));\n+\n+        test(\"FMG should be enabled with '--add-reads com.norequires=org.astro'\",\n+             SimpleCDSAppTester.of(\"add-reads-with-classpath\")\n+                 .classpath(subJar.toString())\n+                 .modulepath(moduleDir.toString())\n+                 .addVmArgs(\"--add-modules\", SUB_MODULE,\n+                            \"--add-reads\", \"com.norequires=\" + SUB_MODULE,\n+                            \"-Xlog:class+load,aot,cds,class+path=info\")\n+                 .appCommandLine(\"-m\", MAIN_MODULE));\n+\n+        printComment(\"FMG should be enabled with '--add-reads com.norequires=ALL-UNNAMED\");\n+        Tester t = new Tester(\"add-reads-ALL-UNNAMED\");\n+        t.setCheckExitValue(false);\n+        t.run(\"AOT\");\n+        t.run(\"STATIC\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/AddReads.java","additions":205,"deletions":0,"binary":false,"changes":205,"status":"added"},{"patch":"@@ -140,1 +140,1 @@\n-                \"-Xlog:cds,cds+aot+load,cds+class=debug\",\n+                \"-Xlog:cds,aot+load,cds+class=debug,aot+class=debug\",\n@@ -161,1 +161,1 @@\n-                out.shouldMatch(\"cds,class.* SimpleCusty\");\n+                out.shouldMatch(\",class.* SimpleCusty\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/BulkLoaderTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,0 +76,1 @@\n+                \"-Xlog:aot\",\n@@ -77,0 +78,1 @@\n+                \"-Xlog:aot+class=debug\",\n@@ -97,3 +99,3 @@\n-                out.shouldMatch(\"cds,class.* FakeCodeLocationApp\");\n-                out.shouldNotMatch(\"cds,class.* ClassNotInJar1\");\n-                out.shouldNotMatch(\"cds,class.* ClassNotInJar2\");\n+                out.shouldMatch(\",class.* FakeCodeLocationApp\");\n+                out.shouldNotMatch(\",class.* ClassNotInJar1\");\n+                out.shouldNotMatch(\",class.* ClassNotInJar2\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/FakeCodeLocation.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -78,1 +78,0 @@\n-                    \"-Xlog:cds+map,cds+map+oops=trace:file=cds.oops.txt:none:filesize=0\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/MethodHandleTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -92,1 +92,0 @@\n-                    \"-Xlog:cds+map,cds+map+oops=trace:file=cds.oops.txt:none:filesize=0\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/WeakReferenceTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-                                        \"-Xlog:cds=info\",\n+                                        \"-Xlog:aot=info\",\n@@ -139,1 +139,1 @@\n-                                        \"-Xlog:cds=info\", \/\/ we need this to parse CompressedOops settings\n+                                        \"-Xlog:aot=info\", \/\/ we need this to parse CompressedOops settings\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCode\/AOTCodeCompressedOopsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+            list.add(\"-XX:+UnlockDiagnosticVMOptions\");\n@@ -96,2 +97,1 @@\n-                    args.addAll(List.of(\"-XX:+UnlockDiagnosticVMOptions\",\n-                                        \"-Xlog:aot+codecache+init=debug\",\n+                    args.addAll(List.of(\"-Xlog:aot+codecache+init=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCode\/AOTCodeFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-                                      \"-Xlog:cds+heap\");\n+                                      \"-Xlog:aot+heap\");\n@@ -112,2 +112,2 @@\n-        output.shouldMatch(\"warning.*cds.*Loading ArchiveHeapTestClass \" + CDSTestClassA_name);\n-        output.shouldMatch(\"warning.*cds.*Initializing ArchiveHeapTestClass \" + CDSTestClassA_name);\n+        output.shouldMatch(\"warning.*aot.*Loading ArchiveHeapTestClass \" + CDSTestClassA_name);\n+        output.shouldMatch(\"warning.*aot.*Initializing ArchiveHeapTestClass \" + CDSTestClassA_name);\n@@ -118,1 +118,1 @@\n-        TestCommon.run(\"-Xbootclasspath\/a:\" + bootJar, \"-cp\", appJar, \"-Xlog:cds+heap\", CDSTestClassA_name)\n+        TestCommon.run(\"-Xbootclasspath\/a:\" + bootJar, \"-cp\", appJar, \"-Xlog:aot+heap\", CDSTestClassA_name)\n@@ -172,1 +172,1 @@\n-        TestCommon.run(\"-Xbootclasspath\/a:\" + bootJar, \"-cp\", appJar, \"-Xlog:cds+heap,cds+init\",\n+        TestCommon.run(\"-Xbootclasspath\/a:\" + bootJar, \"-cp\", appJar, \"-Xlog:aot+heap,cds+init\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/cacheObject\/ArchiveHeapTestClass.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+\/**\n+ * @test\n+ * @bug 8315130\n+ * @summary Tests archiving a hierarchy of package-private classes loaded from\n+ * different sources.\n+ *\n+ * @requires vm.cds\n+ * @requires vm.cds.custom.loaders\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @compile test-classes\/DifferentSourcesApp.java test-classes\/CustomLoadee5.java test-classes\/CustomLoadee5Child.java\n+ * @run main DifferentSourcesTest\n+ *\/\n+public class DifferentSourcesTest {\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Setup:\n+        \/\/ - CustomLoadee5 is package-private\n+        \/\/ - CustomLoadee5Child extends CustomLoadee5\n+        \/\/\n+        \/\/ This setup requires CustomLoadee5 and CustomLoadee5Child to be in the\n+        \/\/ same run-time package. Since their package name is the same (empty)\n+        \/\/ this boils down to \"be loaded by the same class loader\".\n+        \/\/\n+        \/\/ DifferentSourcesApp adheres to this requirement.\n+        \/\/\n+        \/\/ This test checks that CDS adheres to this requirement too when\n+        \/\/ creating a static app archive, even if CustomLoadee5 and\n+        \/\/ CustomLoadee5Child are in different sources.\n+\n+        OutputAnalyzer output;\n+\n+        \/\/ The main check: the archive is created without IllegalAccessError\n+        JarBuilder.build(\"base\", \"CustomLoadee5\");\n+        JarBuilder.build(\"sub\", \"CustomLoadee5Child\");\n+        final String classlist[] = new String[] {\n+            \"java\/lang\/Object id: 0\",\n+            \"CustomLoadee5 id: 1 super: 0 source: base.jar\",\n+            \"CustomLoadee5Child id: 2 super: 1 source: sub.jar\",\n+        };\n+        output = TestCommon.testDump(null, classlist);\n+        output.shouldNotContain(\"java.lang.IllegalAccessError: class CustomLoadee5Child cannot access its superclass CustomLoadee5\");\n+        output.shouldNotContain(\"Cannot find CustomLoadee5Child\");\n+\n+        \/\/ Sanity check: the archive is used as expected\n+        output = TestCommon.execCommon(\"-Xlog:class+load\", \"DifferentSourcesApp\");\n+        TestCommon.checkExec(\n+            output,\n+            \"CustomLoadee5 source: shared objects file\",\n+            \"CustomLoadee5Child source: shared objects file\"\n+        );\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/DifferentSourcesTest.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+\/**\n+ * @test id=unreg\n+ * @summary Tests that if a super class is listed as unregistered it is archived\n+ * as such even if a class with the same name has also been loaded from the\n+ * classpath.\n+ *\n+ * @requires vm.cds\n+ * @requires vm.cds.custom.loaders\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @compile test-classes\/RegUnregSuperApp.java test-classes\/CustomLoadee3.java test-classes\/CustomLoadee3Child.java\n+ * @run main RegUnregSuperTest unreg\n+ *\/\n+\n+\/**\n+ * @test id=reg\n+ * @summary If an unregistered class U is specified to have a registered\n+ * supertype S1 named SN but an unregistered class S2 also named SN has already\n+ * been loaded S2 will be incorrectly used as the supertype of U instead of S1\n+ * due to limitations in the loading mechanism of unregistered classes. For this\n+ * reason U should not be loaded at all and an appropriate warning should be\n+ * printed.\n+ *\n+ * @requires vm.cds\n+ * @requires vm.cds.custom.loaders\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @compile test-classes\/RegUnregSuperApp.java test-classes\/CustomLoadee3.java test-classes\/CustomLoadee3Child.java\n+ * @run main RegUnregSuperTest reg\n+ *\/\n+\n+public class RegUnregSuperTest {\n+    public static void main(String[] args) throws Exception {\n+        final String variant = args[0];\n+\n+        final String appJar = JarBuilder.build(\n+            \"app\", \"RegUnregSuperApp\", \"DirectClassLoader\", \"CustomLoadee3\", \"CustomLoadee3Child\"\n+        );\n+        OutputAnalyzer out;\n+\n+        final String classlist[] = new String[] {\n+            \"java\/lang\/Object id: 0\",\n+            \"CustomLoadee3 id: 1\",\n+            \"CustomLoadee3 id: 2 super: 0 source: \" + appJar,\n+            \"CustomLoadee3Child id: 3 super: \" + (\"reg\".equals(variant) ? \"1\" : \"2\") + \" source: \" + appJar\n+        };\n+        out = TestCommon.testDump(appJar, classlist, \"-Xlog:cds+class=debug\");\n+        out.shouldContain(\"app   CustomLoadee3\"); \/\/ Not using \\n as below because it'll be \"app   CustomLoadee3 aot-linked\" with AOTClassLinking\n+        out.shouldNotContain(\"app   CustomLoadee3Child\");\n+        out.shouldContain(\"unreg CustomLoadee3\\n\"); \/\/ Accepts \"unreg CustomLoadee3\" but not \"unreg CustomLoadee3Child\"\n+        if (\"reg\".equals(variant)) {\n+            out.shouldNotContain(\"unreg CustomLoadee3Child\");\n+            out.shouldContain(\"CustomLoadee3Child (id 3) has super-type CustomLoadee3 (id 1) obstructed by another class with the same name\");\n+        } else {\n+            out.shouldContain(\"unreg CustomLoadee3Child\");\n+            out.shouldNotContain(\"[warning]\");\n+        }\n+\n+        out = TestCommon.exec(appJar, \"-Xlog:class+load\", \"RegUnregSuperApp\", variant);\n+        TestCommon.checkExec(\n+            out,\n+            \"CustomLoadee3Child source: \" + (\"reg\".equals(variant) ? \"file:\" : \"shared objects file\")\n+        );\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/RegUnregSuperTest.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+class CustomLoadee5 {\n+    public String toString() {\n+        return \"this is CustomLoadee5\";\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/test-classes\/CustomLoadee5.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+class CustomLoadee5Child extends CustomLoadee5 {\n+    public String toString() {\n+        return \"this is CustomLoadee5Child\";\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/test-classes\/CustomLoadee5Child.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Path;\n+import java.nio.file.FileSystems;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+\n+\/**\n+ * See ..\/DifferentSourcesTest.java for details.\n+ *\/\n+public class DifferentSourcesApp {\n+    public static void main(String args[]) throws Exception {\n+        Path base = FileSystems.getDefault().getPath(\"base.jar\");\n+        Path sub = FileSystems.getDefault().getPath(\"sub.jar\");\n+        URL[] urls = new URL[] { base.toUri().toURL(), sub.toUri().toURL() };\n+        URLClassLoader cl = new URLClassLoader(urls, \/* parent = *\/ null);\n+        Class<?> cls = cl.loadClass(\"CustomLoadee5Child\");\n+        System.out.println(cls.getName());\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/test-classes\/DifferentSourcesApp.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.FileSystems;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.util.Set;\n+\n+class DirectClassLoader extends URLClassLoader {\n+    private final Set<String> directlyLoadedNames;\n+\n+    public DirectClassLoader(URL url, String... directlyLoadedNames) {\n+        super(new URL[] { url });\n+        this.directlyLoadedNames = Set.of(directlyLoadedNames);\n+    }\n+\n+    @Override\n+    public Class<?> loadClass(String name) throws ClassNotFoundException {\n+        synchronized (getClassLoadingLock(name)) {\n+            Class<?> c = findLoadedClass(name);\n+            if (c == null) {\n+                if (directlyLoadedNames.contains(name)) {\n+                    c = findClass(name);\n+                } else {\n+                    c = super.loadClass(name);\n+                }\n+            }\n+            return c;\n+        }\n+    }\n+}\n+\n+\/**\n+ * See ..\/RegUnregSuperTest.java for details.\n+ *\/\n+public class RegUnregSuperApp {\n+    private static final URL APP_JAR;\n+    static {\n+        final URL appJar;\n+        try {\n+            appJar = FileSystems.getDefault().getPath(\"app.jar\").toUri().toURL();\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+        APP_JAR = appJar;\n+    }\n+\n+    public static void main(String args[]) throws Exception {\n+        switch (args[0]) {\n+            case \"reg\" -> loadWithRegisteredSuper();\n+            case \"unreg\" -> loadWithUnregisteredSuper();\n+            default -> throw new IllegalArgumentException(\"Unknown variant: \" + args[0]);\n+        }\n+    }\n+\n+    private static void loadWithRegisteredSuper() throws Exception {\n+        \/\/ Load unregistered super\n+        final var unregisteredBaseCl = new DirectClassLoader(APP_JAR, \"CustomLoadee3\");\n+        Class<?> unregisteredBase = unregisteredBaseCl.loadClass(\"CustomLoadee3\");\n+        checkClassLoader(unregisteredBase, unregisteredBaseCl);\n+\n+        \/\/ Load unregistered child with REGISTERED super\n+        final var registeredBaseCl = new DirectClassLoader(APP_JAR, \"CustomLoadee3Child\");\n+        Class<?> unregisteredChild = registeredBaseCl.loadClass(\"CustomLoadee3Child\");\n+        checkClassLoader(unregisteredChild, registeredBaseCl);\n+        checkClassLoader(unregisteredChild.getSuperclass(), ClassLoader.getSystemClassLoader());\n+    }\n+\n+    private static void loadWithUnregisteredSuper() throws Exception {\n+        \/\/ Load registered super\n+        final var systemCl = ClassLoader.getSystemClassLoader();\n+        Class<?> registeredBase = systemCl.loadClass(\"CustomLoadee3\");\n+        checkClassLoader(registeredBase, systemCl);\n+\n+        \/\/ Load unregistered child with UNREGISTERED super\n+        final var unregisteredBaseCl = new DirectClassLoader(APP_JAR, \"CustomLoadee3\", \"CustomLoadee3Child\");\n+        Class<?> unregisteredChild = unregisteredBaseCl.loadClass(\"CustomLoadee3Child\");\n+        checkClassLoader(unregisteredChild, unregisteredBaseCl);\n+        checkClassLoader(unregisteredChild.getSuperclass(), unregisteredBaseCl);\n+    }\n+\n+    private static void checkClassLoader(Class<?> c, ClassLoader cl) {\n+        ClassLoader realCl = c.getClassLoader();\n+        if (realCl != cl) {\n+           throw new RuntimeException(c + \" has wrong loader: expected \" + cl + \", got \" + realCl);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/test-classes\/RegUnregSuperApp.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-            \"-Xlog:class+load,class+load+array=debug,cds+dynamic=debug,cds=debug,cds+unshareable=trace\";\n+            \"-Xlog:class+load,class+load+array=debug,cds+dynamic=debug,cds=debug,aot+unshareable=trace\";\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ArrayKlasses.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-             \"-Xlog:cds=debug\", \/\/ test detailed metadata info printing\n+             \"-Xlog:cds=debug,aot=debug\", \/\/ test detailed metadata info printing\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/DynamicLotsOfClasses.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,0 +93,2 @@\n+                \"-Xlog:aot\",\n+                \"-Xlog:aot+lambda\",\n@@ -94,1 +96,0 @@\n-                \"-Xlog:cds+lambda\",\n@@ -100,1 +101,1 @@\n-        String logOptions = \"-Xlog:cds=debug,class+load,cds+class=debug\";\n+        String logOptions = \"-Xlog:aot=debug,cds=debug,class+load,cds+class=debug\";\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdasInTwoArchives.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,1 @@\n+            \"-Xlog:aot=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/UsedAllArchivedLambdas.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-                              .shouldContain(\"Unexpected exception, use -Xlog:cds,exceptions=trace for detail\");\n+                              .shouldContain(\"Unexpected exception, use -Xlog:aot,cds,exceptions=trace for detail\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/javaldr\/ExceptionDuringDumpAtObjectsInitPhase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-            output = TestCommon.dump(appJar, appClasses, \"-Xlog:cds,cds+hashtables\",\n+            output = TestCommon.dump(appJar, appClasses, \"-Xlog:cds,aot+hashtables\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/CheckUnsupportedDumpingOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-            TestCommon.execCommon(\"-Xlog:cds\", \"--version\")\n+            TestCommon.execCommon(\"-Xlog:aot\", \"-Xlog:cds\", \"--version\")\n@@ -82,1 +82,1 @@\n-            TestCommon.execCommon(\"-Xlog:cds\", o.cmdLine(), o.valueA(), \"--version\")\n+            TestCommon.execCommon(\"-Xlog:aot\", \"-Xlog:cds\", o.cmdLine(), o.valueA(), \"--version\")\n@@ -91,1 +91,1 @@\n-            TestCommon.execCommon(\"-Xlog:cds\", o.cmdLine(), o.valueA(), \"--version\")\n+            TestCommon.execCommon(\"-Xlog:aot\", \"-Xlog:cds\", o.cmdLine(), o.valueA(), \"--version\")\n@@ -97,1 +97,1 @@\n-            TestCommon.execCommon(\"-Xlog:cds\", o.cmdLine(), o.valueA(), o.cmdLine(), o.valueB(), \"--version\")\n+            TestCommon.execCommon(\"-Xlog:aot\", \"-Xlog:cds\", o.cmdLine(), o.valueA(), o.cmdLine(), o.valueB(), \"--version\")\n@@ -102,1 +102,1 @@\n-            TestCommon.execCommon(\"-Xlog:cds\", o.cmdLine(), o.valueB(), o.cmdLine(), o.valueA(), \"--version\")\n+            TestCommon.execCommon(\"-Xlog:aot\", \"-Xlog:cds\", o.cmdLine(), o.valueB(), o.cmdLine(), o.valueA(), \"--version\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/ExactOptionMatch.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        final String loggingOption = \"-Xlog:cds=debug,cds+module=debug,cds+heap=info,module=trace\";\n+        final String loggingOption = \"-Xlog:aot=debug,aot+module=debug,aot+heap=info,cds=debug,module=trace\";\n@@ -73,2 +73,2 @@\n-          .shouldMatch(\"cds,module.*Restored from archive: entry.0x.*name jdk.jconsole\")\n-          .shouldMatch(\"cds,module.*Restored from archive: entry.0x.*name jdk.httpserver\");\n+          .shouldMatch(\"aot,module.*Restored from archive: entry.0x.*name jdk.jconsole\")\n+          .shouldMatch(\"aot,module.*Restored from archive: entry.0x.*name jdk.httpserver\");\n@@ -164,1 +164,1 @@\n-                  .shouldMatch(\"cds,module.*Restored from archive: entry.0x.*name jdk.internal.vm.ci\");\n+                  .shouldMatch(\"aot,module.*Restored from archive: entry.0x.*name jdk.internal.vm.ci\");\n@@ -191,2 +191,2 @@\n-          .shouldMatch(\"cds,module.*Restored from archive: entry.0x.*name jdk.compiler\")\n-          .shouldMatch(\"cds,module.*Restored from archive: entry.0x.*name jdk.jconsole\");\n+          .shouldMatch(\"aot,module.*Restored from archive: entry.0x.*name jdk.compiler\")\n+          .shouldMatch(\"aot,module.*Restored from archive: entry.0x.*name jdk.jconsole\");\n@@ -235,1 +235,1 @@\n-          .shouldMatch(\"cds,module.*Restored from archive: entry.0x.*name jdk.httpserver\");\n+          .shouldMatch(\"aot,module.*Restored from archive: entry.0x.*name jdk.httpserver\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/addmods\/AddmodsOption.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        final String loggingOption = \"-Xlog:cds=debug,cds+module=debug,cds+heap=info,module=trace\";\n+        final String loggingOption = \"-Xlog:aot=debug,aot+module=debug,aot+heap=info,cds=debug,module=trace\";\n@@ -69,1 +69,1 @@\n-          .shouldMatch(\"cds,module.*Restored from archive: entry.0x.*name jdk.httpserver\");\n+          .shouldMatch(\"aot,module.*Restored from archive: entry.0x.*name jdk.httpserver\");\n@@ -154,1 +154,1 @@\n-          .shouldMatch(\"cds,module.*Restored from archive: entry.0x.*name jdk.httpserver\");\n+          .shouldMatch(\"aot,module.*Restored from archive: entry.0x.*name jdk.httpserver\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/addopens\/AddopensOption.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        final String loggingOption = \"-Xlog:cds=debug,cds+module=debug,cds+heap=info,module=trace\";\n+        final String loggingOption = \"-Xlog:aot=debug,aot+module=debug,aot+heap=info,cds=debug,module=trace\";\n@@ -67,1 +67,1 @@\n-            oa.shouldMatch(\"cds,module.*Restored from archive: entry.0x.*name jdk.httpserver\");\n+            oa.shouldMatch(\"aot,module.*Restored from archive: entry.0x.*name jdk.httpserver\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/module\/ModuleOption.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,132 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/**\n- * @test\n- * @requires vm.cds\n- * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n- * @run driver AddOpens\n- * @summary sanity test the --add-opens option\n- *\/\n-\n-import java.io.File;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-\n-import jdk.test.lib.cds.CDSTestUtils;\n-import jdk.test.lib.process.OutputAnalyzer;\n-\n-public class AddOpens {\n-\n-    private static final Path USER_DIR = Paths.get(CDSTestUtils.getOutputDir());\n-\n-    private static final String TEST_SRC = System.getProperty(\"test.src\");\n-\n-    private static final Path SRC_DIR = Paths.get(TEST_SRC, \"src\");\n-    private static final Path MODS_DIR = Paths.get(\"mods\");\n-\n-    \/\/ the module name of the test module\n-    private static final String TEST_MODULE1 = \"com.simple\";\n-\n-    \/\/ the module main class\n-    private static final String MAIN_CLASS = \"com.simple.Main\";\n-\n-    private static Path moduleDir = null;\n-    private static Path moduleDir2 = null;\n-    private static Path destJar = null;\n-\n-    private static String addOpensArg = \"java.base\/java.lang=\" + TEST_MODULE1;\n-    private static String addOpensAllUnnamed = \"java.base\/java.lang=ALL-UNNAMED\";\n-    private static String extraOpts[][] =\n-        {{\"-Xlog:cds\", \"-Xlog:cds\"},\n-         {\"--add-opens\", addOpensArg}};\n-    private static String expectedOutput[] =\n-        { \"[class,load] com.simple.Main source: shared objects file\",\n-          \"method.setAccessible succeeded!\"};\n-\n-    public static void buildTestModule() throws Exception {\n-\n-        \/\/ javac -d mods\/$TESTMODULE --module-path MOD_DIR src\/$TESTMODULE\/**\n-        JarBuilder.compileModule(SRC_DIR.resolve(TEST_MODULE1),\n-                                 MODS_DIR.resolve(TEST_MODULE1),\n-                                 MODS_DIR.toString());\n-\n-        moduleDir = Files.createTempDirectory(USER_DIR, \"mlib\");\n-        moduleDir2 = Files.createTempDirectory(USER_DIR, \"mlib2\");\n-\n-        Path srcJar = moduleDir.resolve(TEST_MODULE1 + \".jar\");\n-        destJar = moduleDir2.resolve(TEST_MODULE1 + \".jar\");\n-        String classes = MODS_DIR.resolve(TEST_MODULE1).toString();\n-        JarBuilder.createModularJar(srcJar.toString(), classes, MAIN_CLASS);\n-        Files.copy(srcJar, destJar);\n-\n-    }\n-\n-    public static void main(String... args) throws Exception {\n-        \/\/ compile the modules and create the modular jar files\n-        buildTestModule();\n-        String appClasses[] = {MAIN_CLASS};\n-        OutputAnalyzer output;\n-\n-        for (int i = 0; i < 2; i++) {\n-            \/\/ create an archive with both -cp and --module-path, and with the\n-            \/\/ --add-opens option if i == 1, in the command line.\n-            \/\/ Only the class in the modular jar in the --module-path will be archived;\n-            \/\/ the class in the modular jar in the -cp won't be archived.\n-            output = TestCommon.createArchive(\n-                             destJar.toString(), appClasses,\n-                             extraOpts[i][0], extraOpts[i][1],\n-                             \"--module-path\", moduleDir.toString(),\n-                             \"-m\", TEST_MODULE1);\n-            TestCommon.checkDump(output);\n-\n-            \/\/ run with the archive using the same command line as in dump time\n-            \/\/ plus the \"--add-opens java.base\/java.lang=com.simple\" option.\n-            \/\/ The main class should be loaded from the archive.\n-            \/\/ The setaccessible(true) on the ClassLoader.defineClass method should\n-            \/\/ be successful.\n-            TestCommon.run( \"-Xlog:class+load=trace\",\n-                            \"-cp\", destJar.toString(),\n-                            \"--add-opens\", addOpensArg,\n-                            \"--module-path\", moduleDir.toString(),\n-                            \"-m\", TEST_MODULE1, \"with_add_opens\")\n-                    .assertNormalExit(expectedOutput[0], expectedOutput[1]);\n-        }\n-\n-        \/\/ Test --add-opens to ALL-UNNAMED modules\n-        output = TestCommon.createArchive(\n-                         destJar.toString(), appClasses,\n-                         \"--add-opens\", addOpensAllUnnamed,\n-                         MAIN_CLASS);\n-        TestCommon.checkDump(output);\n-\n-        TestCommon.run( \"-Xlog:class+load=trace\",\n-                        \"-cp\", destJar.toString(),\n-                        \"--add-opens\", addOpensAllUnnamed,\n-                        MAIN_CLASS, \"with_add_opens\")\n-                .assertNormalExit(expectedOutput[0], expectedOutput[1]);\n-\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/modulepath\/AddOpens.java","additions":0,"deletions":132,"binary":false,"changes":132,"status":"deleted"},{"patch":"@@ -1,140 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/**\n- * @test\n- * @requires vm.cds\n- * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n- * @run driver AddReads\n- * @summary sanity test the --add-reads option\n- *\/\n-\n-import java.io.File;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-\n-import jdk.test.lib.cds.CDSTestUtils;\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.Asserts;\n-\n-public class AddReads {\n-\n-    private static final Path USER_DIR = Paths.get(CDSTestUtils.getOutputDir());\n-\n-    private static final String TEST_SRC = System.getProperty(\"test.src\");\n-\n-    private static final Path SRC_DIR = Paths.get(TEST_SRC, \"src\");\n-    private static final Path MODS_DIR = Paths.get(\"mods\");\n-\n-    \/\/ the module name of the test module\n-    private static final String MAIN_MODULE = \"com.norequires\";\n-    private static final String SUB_MODULE = \"org.astro\";\n-\n-    \/\/ the module main class\n-    private static final String MAIN_CLASS = \"com.norequires.Main\";\n-    private static final String APP_CLASS = \"org.astro.World\";\n-\n-    private static Path moduleDir = null;\n-    private static Path subJar = null;\n-    private static Path mainJar = null;\n-\n-    public static void buildTestModule() throws Exception {\n-\n-        \/\/ javac -d mods\/$TESTMODULE src\/$TESTMODULE\/**\n-        JarBuilder.compileModule(SRC_DIR.resolve(SUB_MODULE),\n-                                       MODS_DIR.resolve(SUB_MODULE),\n-                                       null);\n-\n-        Asserts.assertTrue(CompilerUtils\n-            .compile(SRC_DIR.resolve(MAIN_MODULE),\n-                     MODS_DIR.resolve(MAIN_MODULE),\n-                     \"-cp\", MODS_DIR.resolve(SUB_MODULE).toString(),\n-                     \"--add-reads\", \"com.norequires=ALL-UNNAMED\"));\n-\n-        moduleDir = Files.createTempDirectory(USER_DIR, \"mlib\");\n-        subJar = moduleDir.resolve(SUB_MODULE + \".jar\");\n-        String classes = MODS_DIR.resolve(SUB_MODULE).toString();\n-        JarBuilder.createModularJar(subJar.toString(), classes, null);\n-\n-        mainJar = moduleDir.resolve(MAIN_MODULE + \".jar\");\n-        classes = MODS_DIR.resolve(MAIN_MODULE).toString();\n-        JarBuilder.createModularJar(mainJar.toString(), classes, MAIN_CLASS);\n-    }\n-\n-    public static void main(String... args) throws Exception {\n-        \/\/ compile the modules and create the modular jar files\n-        buildTestModule();\n-        String appClasses[] = {MAIN_CLASS, APP_CLASS};\n-        \/\/ create an archive with the classes in the modules built in the\n-        \/\/ previous step\n-        OutputAnalyzer output = TestCommon.createArchive(\n-                                        null, appClasses,\n-                                        \"--module-path\", moduleDir.toString(),\n-                                        \"--add-modules\", SUB_MODULE,\n-                                        \"--add-reads\", \"com.norequires=org.astro\",\n-                                        \"-m\", MAIN_MODULE);\n-        TestCommon.checkDump(output);\n-        String prefix[] = {\"-Djava.class.path=\", \"-Xlog:class+load=trace\",\n-                           \"--add-modules\", SUB_MODULE,\n-                           \"--add-reads\", \"com.norequires=org.astro\"};\n-\n-        \/\/ run the com.norequires module with the archive with the same args\n-        \/\/ used during dump time.\n-        \/\/ The classes should be loaded from the archive.\n-        TestCommon.runWithModules(prefix,\n-                                  null, \/\/ --upgrade-module-path\n-                                  moduleDir.toString(), \/\/ --module-path\n-                                  MAIN_MODULE) \/\/ -m\n-            .assertNormalExit(out -> {\n-                out.shouldContain(\"[class,load] com.norequires.Main source: shared objects file\")\n-                   .shouldContain(\"[class,load] org.astro.World source: shared objects file\");\n-            });\n-\n-        \/\/ create an archive with -cp pointing to the jar file containing the\n-        \/\/ org.astro module and --module-path pointing to the main module\n-        output = TestCommon.createArchive(\n-                                        subJar.toString(), appClasses,\n-                                        \"--module-path\", moduleDir.toString(),\n-                                        \"--add-modules\", SUB_MODULE,\n-                                        \"--add-reads\", \"com.norequires=org.astro\",\n-                                        \"-m\", MAIN_MODULE);\n-        TestCommon.checkDump(output);\n-        \/\/ run the com.norequires module with the archive with the sub-module\n-        \/\/ in the -cp and with -add-reads=com.norequires=ALL-UNNAMED\n-        \/\/ The main class should be loaded from the archive.\n-        \/\/ The org.astro.World should be loaded from the jar.\n-        String prefix2[] = {\"-cp\", subJar.toString(), \"-Xlog:class+load=trace\",\n-                           \"--add-reads\", \"com.norequires=ALL-UNNAMED\"};\n-        TestCommon.runWithModules(prefix2,\n-                                  null, \/\/ --upgrade-module-path\n-                                  moduleDir.toString(), \/\/ --module-path\n-                                  MAIN_MODULE) \/\/ -m\n-            .assertNormalExit(out -> {\n-                out.shouldContain(\"[class,load] com.norequires.Main source: shared objects file\")\n-                   .shouldMatch(\".class.load. org.astro.World source:.*org.astro.jar\");\n-            });\n-\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/modulepath\/AddReads.java","additions":0,"deletions":140,"binary":false,"changes":140,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,0 +106,1 @@\n+                \"-Xlog:aot\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jvmti\/CFLH\/ClassFileLoadHookTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,2 @@\n-                       \"-Xlog:cds+resolve=trace\",\n+                       \"-Xlog:aot+resolve=trace\",\n+                       \"-Xlog:aot+class=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/resolvedConstants\/AOTLinkedLambdas.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-                       \"-Xlog:cds+resolve=trace\",\n+                       \"-Xlog:aot+resolve=trace\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/resolvedConstants\/AOTLinkedVarHandles.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,1 +84,2 @@\n-                       \"-Xlog:cds+resolve=trace\",\n+                       \"-Xlog:aot+resolve=trace\",\n+                       \"-Xlog:aot+class=debug\",\n@@ -186,1 +187,1 @@\n-        return \"cds,resolve.*archived \" + s;\n+        return \",resolve.*archived \" + s;\n@@ -193,1 +194,1 @@\n-            return \"cds,resolve.*reverted \" + s;\n+            return \",resolve.*reverted \" + s;\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/resolvedConstants\/ResolvedConstants.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-                       \"-Xlog:cds+resolve=trace\");\n+                       \"-Xlog:aot+resolve=trace\");\n@@ -57,1 +57,1 @@\n-            .shouldMatch(\"cds,resolve.*Failed to resolve putfield .*ResolvedPutFieldHelper -> ResolvedPutFieldHelper.x:I\");\n+            .shouldMatch(\",resolve.*Failed to resolve putfield .*ResolvedPutFieldHelper -> ResolvedPutFieldHelper.x:I\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/resolvedConstants\/ResolvedPutField.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-            \"SharedStringsBasic.txt\", \"-Xlog:cds,cds+hashtables\");\n+            \"SharedStringsBasic.txt\", \"-Xlog:cds,aot+hashtables\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/ExerciseGC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-            \"SharedStringsBasic.txt\", \"-Xlog:cds,cds+hashtables\");\n+            \"SharedStringsBasic.txt\", \"-Xlog:cds,aot+hashtables\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/FlagCombo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-                \"-Xlog:cds,cds+hashtables\",\n+                \"-Xlog:cds,aot+hashtables\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/IncompatibleOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-            \"ExtraSharedInput.txt\", \"-Xlog:cds,cds+hashtables\");\n+            \"ExtraSharedInput.txt\", \"-Xlog:cds,aot+hashtables\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/InternSharedString.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-    static final String CDS_LOGGING = \"-Xlog:cds,cds+hashtables\";\n+    static final String CDS_LOGGING = \"-Xlog:cds,aot+hashtables\";\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/LargePages.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-            \"-Xlog:cds,cds+hashtables\")\n+            \"-Xlog:cds,aot+hashtables\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SharedStringsBasic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-            \"SharedStringsBasic.txt\", \"-Xlog:cds,cds+hashtables\");\n+            \"SharedStringsBasic.txt\", \"-Xlog:cds,aot+hashtables\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SharedStringsBasicPlus.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,0 +74,1 @@\n+                \"-Xlog:aot\",\n@@ -81,1 +82,1 @@\n-            TestCommon.concat(vmOptionsPrefix, \"-Xlog:cds\", \"HelloString\"));\n+            TestCommon.concat(vmOptionsPrefix, \"-Xlog:aot,cds\", \"HelloString\"));\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SharedStringsStress.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-            \"SharedStringsBasic.txt\", \"-Xlog:cds,cds+hashtables\");\n+            \"SharedStringsBasic.txt\", \"-Xlog:cds,aot+hashtables\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SharedStringsWbTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-                       \"-showversion\", \"-Xlog:cds,cds+hashtables\")\n+                       \"-showversion\", \"-Xlog:cds,aot+hashtables\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SysDictCrash.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,0 +169,1 @@\n+                       \"-Xlog:aot\",\n@@ -176,1 +177,1 @@\n-        opts.addSuffix(\"-Xlog:cds,cds+heap\");\n+        opts.addSuffix(\"-Xlog:aot,aot+heap,cds\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/serviceability\/ReplaceCriticalClasses.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires !jdk.static\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/CalleeSavedRegisters\/FPRegs.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary verifies that failure in AttachListener::dequeue does not crash the VM\n+ * @bug 8356177\n+ * @library \/test\/lib\n+ * @modules jdk.attach\/sun.tools.attach\n+ *\n+ * @run driver FailedDequeueTest\n+ *\/\n+\n+import java.io.IOException;\n+\n+import com.sun.tools.attach.VirtualMachine;\n+import sun.tools.attach.HotSpotVirtualMachine;\n+\n+import jdk.test.lib.apps.LingeredApp;\n+\n+public class FailedDequeueTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        LingeredApp app = null;\n+        try {\n+            app = LingeredApp.startApp(\"-Xlog:attach=trace\");\n+            test(app);\n+        } finally {\n+            LingeredApp.stopApp(app);\n+        }\n+    }\n+\n+    \/\/ The test uses HotSpotVirtualMachine.setFlag method with long flag value (longer than 256K).\n+    private static String flagName = \"HeapDumpPath\";\n+    private static String flagValue = \"X\" + \"A\".repeat(256 * 1024) + \"X\";\n+\n+    private static void test(LingeredApp app) throws Exception {\n+        HotSpotVirtualMachine vm = (HotSpotVirtualMachine)VirtualMachine.attach(String.valueOf(app.getPid()));\n+        try {\n+            \/\/ Should throw IOException and don't crash\n+            vm.setFlag(flagName, flagValue);\n+\n+            throw new RuntimeException(\"expected IOException is not thrown\");\n+        } catch (IOException ex) {\n+            System.out.println(\"OK: setFlag thrown expected exception:\");\n+            ex.printStackTrace(System.out);\n+        } finally {\n+            vm.detach();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/attach\/FailedDequeueTest.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,1 +161,2 @@\n-            suspendedThread = debugee.threadByName(invokemethod007a.testedThread);\n+            suspendedThread = debugee.threadByFieldNameOrThrow(testedClass, \"thread\",\n+                                                               invokemethod007a.testedThread);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod007.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,1 @@\n+    static Thread thread = null;\n@@ -49,1 +50,0 @@\n-        Thread thread = null;\n@@ -57,1 +57,1 @@\n-                thread = JDIThreadFactory.newThread(new im007aThread01(\"im007aThread01\"));\n+                thread = JDIThreadFactory.newThread(new im007aThread01(testedThread));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod007a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 57;\n+    static final int DEBUGGEE_STOPATLINE = 60;\n@@ -115,3 +115,6 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        thrRef = debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -122,2 +125,0 @@\n-        \/\/ debuggee main class\n-        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod009.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -47,1 +49,2 @@\n-        Thread.currentThread().setName(invokemethod009.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod009.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod009t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,3 +114,6 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        thrRef = debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -142,1 +145,0 @@\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod010.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -45,1 +47,2 @@\n-        Thread.currentThread().setName(invokemethod010.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod010.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod010t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 61;\n+    static final int DEBUGGEE_STOPATLINE = 63;\n@@ -116,4 +116,8 @@\n-        ThreadReference thrRef = null;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+        ClassType clsType = (ClassType) rType;\n+\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -126,3 +130,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-            ClassType clsType = (ClassType) rType;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod014.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    static Thread testThread = null;\n@@ -51,1 +52,2 @@\n-        Thread.currentThread().setName(invokemethod014.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod014.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod014t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -160,1 +160,2 @@\n-            suspendedThread = debugee.threadByName(newinstance007a.testedThread);\n+            suspendedThread = debugee.threadByFieldNameOrThrow(testedClass, \"thread\",\n+                                                               newinstance007a.testedThread);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance007.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    public final static int brkpLineNumber = 70;\n+    public final static int brkpLineNumber = 71;\n@@ -43,0 +43,1 @@\n+    static Thread thread = null;\n@@ -49,1 +50,0 @@\n-        Thread thread = null;\n@@ -57,1 +57,1 @@\n-                thread = JDIThreadFactory.newThread(new im007aThread01(\"im007aThread01\"));\n+                thread = JDIThreadFactory.newThread(new im007aThread01(testedThread));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance007a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,4 +98,7 @@\n-        ThreadReference thrRef = null;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+        ClassType clsType = (ClassType) rType;\n+\n+        ThreadReference thrRef = debuggee.threadByFieldName(rType, \"thread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -126,4 +129,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-            ClassType clsType = (ClassType) rType;\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance009.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread thread = null;\n+\n@@ -51,1 +53,2 @@\n-        Thread.currentThread().setName(newinstance009.DEBUGGEE_THRNAME);\n+        thread = Thread.currentThread();\n+        thread.setName(newinstance009.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance009t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,2 @@\n-                       ThreadReference thread = debuggee.threadByName(threadName);\n+                       ThreadReference thread =\n+                           debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/equals\/equals001.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,0 +67,1 @@\n+    static Thread thread1 = null;\n@@ -76,1 +77,1 @@\n-            Thread thread1 = JDIThreadFactory.newThread(new equals001aThread(\"thread1\"));\n+            thread1 = JDIThreadFactory.newThread(new equals001aThread(\"thread1\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/equals\/equals001a.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-    private final static int brkpLineNumber = 145;\n+    private final static int brkpLineNumber = 146;\n@@ -129,1 +129,2 @@\n-                       ThreadReference thread = debuggee.threadByName(threadName);\n+                       ThreadReference thread =\n+                           debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/hashCode\/hashcode001.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,0 +67,1 @@\n+    static Thread thread1 = null;\n@@ -76,1 +77,1 @@\n-            Thread thread1 = JDIThreadFactory.newThread(new hashcode001aThread(\"thread1\"));\n+            thread1 = JDIThreadFactory.newThread(new hashcode001aThread(\"thread1\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/hashCode\/hashcode001a.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 62;\n+    static final int DEBUGGEE_STOPATLINE = 64;\n@@ -127,3 +127,5 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n+        rType[0] = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -134,1 +136,0 @@\n-        rType[0] = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod002.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+    static Thread testThread = null;\n@@ -52,1 +53,2 @@\n-        Thread.currentThread().setName(invokemethod002.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod002.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod002t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 59;\n+    static final int DEBUGGEE_STOPATLINE = 62;\n@@ -138,7 +138,0 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n-                + DEBUGGEE_THRNAME);\n-            tot_res = Consts.TEST_FAILED;\n-            return quitDebuggee();\n-        }\n@@ -153,0 +146,8 @@\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee thread \"\n+                + DEBUGGEE_THRNAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod003.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -49,1 +51,2 @@\n-        Thread.currentThread().setName(invokemethod003.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod003.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod003t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,3 +114,5 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+        ReferenceType debuggeeClass = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(debuggeeClass, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod004.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -46,1 +48,2 @@\n-        Thread.currentThread().setName(invokemethod004.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod004.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod004t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 58;\n+    static final int DEBUGGEE_STOPATLINE = 61;\n@@ -116,3 +116,7 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n+        ReferenceType[] rType = new ReferenceType[2];\n+        \/\/ debuggee main class\n+        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -123,3 +127,0 @@\n-        ReferenceType[] rType = new ReferenceType[2];\n-        \/\/ debuggee main class\n-        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod005.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -48,1 +50,2 @@\n-        Thread.currentThread().setName(invokemethod005.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod005.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod005t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 58;\n+    static final int DEBUGGEE_STOPATLINE = 61;\n@@ -114,3 +114,7 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n+        ReferenceType[] rType = new ReferenceType[2];\n+        \/\/ debuggee main class\n+        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -121,3 +125,0 @@\n-        ReferenceType[] rType = new ReferenceType[2];\n-        \/\/ debuggee main class\n-        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod006.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -48,1 +50,2 @@\n-        Thread.currentThread().setName(invokemethod006.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod006.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod006t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 58;\n+    static final int DEBUGGEE_STOPATLINE = 61;\n@@ -130,3 +130,7 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n+        ReferenceType[] rType = new ReferenceType[2];\n+        \/\/ debuggee main class\n+        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -137,3 +141,0 @@\n-        ReferenceType[] rType = new ReferenceType[2];\n-        \/\/ debuggee main class\n-        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod007.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -48,1 +50,2 @@\n-        Thread.currentThread().setName(invokemethod007.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod007.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod007t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 69;\n+    static final int DEBUGGEE_STOPATLINE = 71;\n@@ -123,7 +123,0 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n-                + DEBUGGEE_THRNAME);\n-            tot_res = Consts.TEST_FAILED;\n-            return quitDebuggee();\n-        }\n@@ -136,0 +129,8 @@\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee thread \"\n+                + DEBUGGEE_THRNAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod008.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    static Thread testThread = null;\n@@ -59,1 +60,2 @@\n-        Thread.currentThread().setName(invokemethod008.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod008.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod008t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 69;\n+    static final int DEBUGGEE_STOPATLINE = 71;\n@@ -123,7 +123,0 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n-                + DEBUGGEE_THRNAME);\n-            tot_res = Consts.TEST_FAILED;\n-            return quitDebuggee();\n-        }\n@@ -136,0 +129,8 @@\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee thread \"\n+                + DEBUGGEE_THRNAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod009.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    static Thread testThread = null;\n@@ -59,1 +60,2 @@\n-        Thread.currentThread().setName(invokemethod009.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod009.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod009t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 72;\n+    static final int DEBUGGEE_STOPATLINE = 74;\n@@ -146,8 +146,0 @@\n-        ThreadReference thrRef;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n-                + DEBUGGEE_THRNAME);\n-            tot_res = Consts.TEST_FAILED;\n-            return quitDebuggee();\n-        }\n@@ -160,0 +152,9 @@\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n+                + DEBUGGEE_THRNAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod014.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    static Thread testThread = null;\n@@ -61,1 +62,2 @@\n-        Thread.currentThread().setName(invokemethod014.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod014.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod014t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,3 +112,5 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee's thread \"\n+        ReferenceType debuggeeClass = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(debuggeeClass, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee's thread \"\n@@ -211,0 +213,4 @@\n+            if (fld.name().equals(\"testThread\")) {\n+                \/\/ skip the static testThread field\n+                continue;\n+            }\n@@ -232,1 +238,1 @@\n-                    + fld.name() + \"\\\"\\n\\tfrom the debuggee's object reference \\\"\"\n+                    + fld.name() + \"\\\"\\n\\tfrom the de19buggee's object reference \\\"\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue002.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -56,1 +58,0 @@\n-\n@@ -70,1 +71,2 @@\n-        Thread.currentThread().setName(setvalue002.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(setvalue002.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue002t.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,3 +145,5 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee's thread \"\n+        ReferenceType debuggeeClass = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(debuggeeClass, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee's thread \"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue003.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -56,1 +58,0 @@\n-\n@@ -69,1 +70,2 @@\n-        Thread.currentThread().setName(setvalue003.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(setvalue003.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue003t.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,3 +125,5 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee's thread \"\n+        ReferenceType debuggeeClass = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(debuggeeClass, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee's thread \"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue004.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -68,1 +70,2 @@\n-        Thread.currentThread().setName(setvalue004.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(setvalue004.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue004t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,3 +112,5 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n+        ReferenceType debuggeeClass = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(debuggeeClass, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByFieldName() returned null for debuggee thread \"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue005.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -51,1 +53,2 @@\n-        Thread.currentThread().setName(setvalue005.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(setvalue005.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue005t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,0 +74,1 @@\n+import com.sun.jdi.ReferenceType;\n@@ -75,0 +76,1 @@\n+import com.sun.jdi.ThreadReference;\n@@ -169,0 +171,4 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(SDEDebuggee.class.getName());\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\",\n+                                              SDEDebuggee.mainThreadName);\n@@ -170,1 +176,1 @@\n-                debuggee.threadByName(SDEDebuggee.mainThreadName),\n+                mainThread,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/defaultStratum\/defaultStratum003\/defaultStratum003.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,0 +64,1 @@\n+import com.sun.jdi.ReferenceType;\n@@ -65,0 +66,1 @@\n+import com.sun.jdi.ThreadReference;\n@@ -168,0 +170,5 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(SDEDebuggee.class.getName());\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\",\n+                                              SDEDebuggee.mainThreadName);\n+\n@@ -172,1 +179,1 @@\n-                        debuggee.threadByName(SDEDebuggee.mainThreadName),\n+                        mainThread,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/defaultStratum\/defaultStratum004\/defaultStratum004.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 57;\n+    static final int DEBUGGEE_STOPATLINE = 60;\n@@ -138,0 +138,3 @@\n+            \/\/ debuggee main class\n+            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n@@ -139,4 +142,4 @@\n-            ThreadReference thrRef = null;\n-            if ((thrRef =\n-                    debuggee.threadByName(DEBUGGEE_THRNAME)) == null)\n-                throw new Failure(\"method Debugee.threadByName() returned null for debuggee thread \"\n+            ThreadReference thrRef =\n+                debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+            if (thrRef == null) {\n+                throw new Failure(\"method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -144,0 +147,1 @@\n+            }\n@@ -146,1 +150,0 @@\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/sourceName\/sourcename004.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -47,1 +49,2 @@\n-        Thread.currentThread().setName(sourcename004.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(sourcename004.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/sourceName\/sourcename004t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 57;\n+    static final int DEBUGGEE_STOPATLINE = 60;\n@@ -138,0 +138,3 @@\n+            \/\/ debuggee main class\n+            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n@@ -139,4 +142,4 @@\n-            ThreadReference thrRef = null;\n-            if ((thrRef =\n-                    debuggee.threadByName(DEBUGGEE_THRNAME)) == null)\n-                throw new Failure(\"method Debugee.threadByName() returned null for debuggee thread \"\n+            ThreadReference thrRef =\n+                debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+            if (thrRef == null) {\n+                throw new Failure(\"method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -144,0 +147,1 @@\n+            }\n@@ -145,2 +149,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/sourceNames\/sourcenames002.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -47,1 +49,2 @@\n-        Thread.currentThread().setName(sourcenames002.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(sourcenames002.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/sourceNames\/sourcenames002t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,3 +54,2 @@\n-    static final String DEBUGGEE_THRDNAMES[] = {\n-        \"getvalue003tMainThr\", \"getvalue003tAuxThr\"\n-    };\n+    static final String DEBUGGEE_MAIN_THREAD_NAME = \"getvalue003tMainThr\";\n+    static final String DEBUGGEE_AUX_THREAD_NAME  = \"getvalue003tAuxThr\";\n@@ -62,1 +61,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 69;\n+    static final int DEBUGGEE_STOPATLINE = 72;\n@@ -108,9 +107,2 @@\n-        ThreadReference thrRef[] = new ThreadReference[2];\n-        for (int i=0; i<2; i++)\n-            if ((thrRef[i] =\n-                    debuggee.threadByName(DEBUGGEE_THRDNAMES[i])) == null) {\n-                log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n-                    + DEBUGGEE_THRDNAMES[i]);\n-                tot_res = Consts.TEST_FAILED;\n-                return quitDebuggee();\n-            }\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n@@ -118,3 +110,6 @@\n-        try {\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(rType, \"mainThread\",\n+                                              DEBUGGEE_MAIN_THREAD_NAME);\n+        ThreadReference auxThread =\n+            debuggee.threadByFieldNameOrThrow(rType, \"auxThr\",\n+                                              DEBUGGEE_AUX_THREAD_NAME);\n@@ -122,0 +117,1 @@\n+        try {\n@@ -125,1 +121,1 @@\n-            StackFrame stFrame = findFrame(thrRef[0], DEBUGGEE_LOCALVAR, false);\n+            StackFrame stFrame = findFrame(mainThread, DEBUGGEE_LOCALVAR, false);\n@@ -128,1 +124,1 @@\n-            findFrame(thrRef[1], DEBUGGEE_LOCALVAR, true);\n+            findFrame(auxThread, DEBUGGEE_LOCALVAR, true);\n@@ -132,1 +128,1 @@\n-                + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                + \"\\\"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -134,1 +130,1 @@\n-                + \"\\\"\\n\\tbelongs to thread \\\"\" + thrRef[0]\n+                + \"\\\"\\n\\tbelongs to thread \\\"\" + mainThread\n@@ -143,1 +139,1 @@\n-                    + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                    + \"\\\"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -145,1 +141,1 @@\n-                    + \"\\\"\\n\\tbelongs to thread \\\"\" + thrRef[0] + \"\\\"\");\n+                    + \"\\\"\\n\\tbelongs to thread \\\"\" + mainThread + \"\\\"\");\n@@ -155,1 +151,1 @@\n-                    + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                    + \"\\\"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -157,1 +153,1 @@\n-                    + \"\\\"\\n\\tbelongs to thread \\\"\" + thrRef[0] + \"\\\"\");\n+                    + \"\\\"\\n\\tbelongs to thread \\\"\" + mainThread + \"\\\"\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValue\/getvalue003.java","additions":21,"deletions":25,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,3 @@\n-    private OtherThr auxThr;\n+\n+    static Thread mainThread = null;\n+    static OtherThr auxThr = null;\n@@ -53,1 +55,2 @@\n-        Thread.currentThread().setName(getvalue003.DEBUGGEE_THRDNAMES[0]);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(getvalue003.DEBUGGEE_MAIN_THREAD_NAME);\n@@ -84,2 +87,1 @@\n-        auxThr = new OtherThr(readyObj,\n-            getvalue003.DEBUGGEE_THRDNAMES[1]);\n+        auxThr = new OtherThr(readyObj, getvalue003.DEBUGGEE_AUX_THREAD_NAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValue\/getvalue003t.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,3 +55,2 @@\n-    static final String DEBUGGEE_THRDNAMES[] = {\n-        \"getvalues003tMainThr\", \"getvalues003tAuxThr\"\n-    };\n+    static final String DEBUGGEE_MAIN_THREAD_NAME = \"getvalues003tMainThr\";\n+    static final String DEBUGGEE_AUX_THREAD_NAME  = \"getvalues003tAuxThr\";\n@@ -68,1 +67,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 78;\n+    static final int DEBUGGEE_STOPATLINE = 81;\n@@ -114,9 +113,2 @@\n-        ThreadReference thrRef[] = new ThreadReference[2];\n-        for (int i=0; i<2; i++)\n-            if ((thrRef[i] =\n-                    debuggee.threadByName(DEBUGGEE_THRDNAMES[i])) == null) {\n-                log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n-                    + DEBUGGEE_THRDNAMES[i]);\n-                tot_res = Consts.TEST_FAILED;\n-                return quitDebuggee();\n-            }\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n@@ -124,3 +116,6 @@\n-        try {\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(rType, \"mainThread\",\n+                                              DEBUGGEE_MAIN_THREAD_NAME);\n+        ThreadReference auxThread =\n+            debuggee.threadByFieldNameOrThrow(rType, \"auxThr\",\n+                                              DEBUGGEE_AUX_THREAD_NAME);\n@@ -128,0 +123,1 @@\n+        try {\n@@ -131,1 +127,1 @@\n-            StackFrame stFrame = findFrame(thrRef[0], DEBUGGEE_VARS[0], true);\n+            StackFrame stFrame = findFrame(mainThread, DEBUGGEE_VARS[0], true);\n@@ -134,1 +130,1 @@\n-            StackFrame wrongStFrame = findFrame(thrRef[1], DEBUGGEE_VARS[0], false);\n+            StackFrame wrongStFrame = findFrame(auxThread, DEBUGGEE_VARS[0], false);\n@@ -156,1 +152,1 @@\n-                    + \"\\n\\tgotten from thread \\\"\" + thrRef[0]\n+                    + \"\\n\\tgotten from thread \\\"\" + mainThread\n@@ -160,1 +156,1 @@\n-                    + \"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                    + \"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -162,1 +158,1 @@\n-                    + \"\\\"\\n\\tin the thread \\\"\" + thrRef[0]\n+                    + \"\\\"\\n\\tin the thread \\\"\" + mainThread\n@@ -171,1 +167,1 @@\n-                        + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[0]\n+                        + \"\\\"\\n\\tgotten from thread \\\"\" + mainThread\n@@ -175,1 +171,1 @@\n-                        + \"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                        + \"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -177,1 +173,1 @@\n-                        + \"\\\"\\n\\tin the thread \\\"\" + thrRef[0] + \"\\\"\");\n+                        + \"\\\"\\n\\tin the thread \\\"\" + mainThread + \"\\\"\");\n@@ -187,1 +183,1 @@\n-                        + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[0]\n+                        + \"\\\"\\n\\tgotten from thread \\\"\" + mainThread\n@@ -191,1 +187,1 @@\n-                        + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                        + \"\\\"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -193,1 +189,1 @@\n-                        + \"\\\"\\n\\tin the thread \\\"\" + thrRef[0] + \"\\\"\");\n+                        + \"\\\"\\n\\tin the thread \\\"\" + mainThread + \"\\\"\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValues\/getvalues003.java","additions":24,"deletions":28,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,3 @@\n-    private OtherThr auxThr;\n+\n+    static Thread mainThread = null;\n+    static OtherThr auxThr = null;\n@@ -54,1 +56,2 @@\n-        Thread.currentThread().setName(getvalues003.DEBUGGEE_THRDNAMES[0]);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(getvalues003.DEBUGGEE_MAIN_THREAD_NAME);\n@@ -93,2 +96,1 @@\n-        auxThr = new OtherThr(readyObj,\n-            getvalues003.DEBUGGEE_THRDNAMES[1]);\n+        auxThr = new OtherThr(readyObj, getvalues003.DEBUGGEE_AUX_THREAD_NAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValues\/getvalues003t.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,1 +114,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 67;\n+    static final int DEBUGGEE_STOPATLINE = 70;\n@@ -159,4 +159,7 @@\n-        ThreadReference thrRef = null;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRDNAME)) == null) {\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType, \"mainThread\", DEBUGGEE_THRDNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -169,3 +172,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue005\/setvalue005.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread mainThread = null;\n+\n@@ -49,1 +51,2 @@\n-        Thread.currentThread().setName(setvalue005.DEBUGGEE_THRDNAME);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(setvalue005.DEBUGGEE_THRDNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue005\/setvalue005t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,1 +135,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 72;\n+    static final int DEBUGGEE_STOPATLINE = 75;\n@@ -180,4 +180,7 @@\n-        ThreadReference thrRef = null;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRDNAME)) == null) {\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType, \"mainThread\", DEBUGGEE_THRDNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -190,3 +193,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue006\/setvalue006.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread mainThread = null;\n+\n@@ -49,1 +51,2 @@\n-        Thread.currentThread().setName(setvalue006.DEBUGGEE_THRDNAME);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(setvalue006.DEBUGGEE_THRDNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue006\/setvalue006t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,0 +76,1 @@\n+import com.sun.jdi.ReferenceType;\n@@ -77,0 +78,1 @@\n+import com.sun.jdi.ThreadReference;\n@@ -168,0 +170,4 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(SDEDebuggee.class.getName());\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\",\n+                                              SDEDebuggee.mainThreadName);\n@@ -169,1 +175,1 @@\n-                debuggee.threadByName(SDEDebuggee.mainThreadName),\n+                mainThread,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepEvent\/_itself_\/stepEvent003\/stepEvent003.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,0 +82,1 @@\n+import com.sun.jdi.ReferenceType;\n@@ -83,0 +84,1 @@\n+import com.sun.jdi.ThreadReference;\n@@ -233,0 +235,4 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(SDEDebuggee.class.getName());\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\",\n+                                              SDEDebuggee.mainThreadName);\n@@ -234,1 +240,1 @@\n-                debuggee.threadByName(SDEDebuggee.mainThreadName),\n+                mainThread,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepEvent\/_itself_\/stepEvent004\/stepEvent004.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-                thread1 = debuggee.threadByName(threadName1);\n+                thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n@@ -134,1 +134,1 @@\n-                thread2 = debuggee.threadByName(threadName2);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassExclusionFilter\/filter001.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-                thread1 = debuggee.threadByName(threadName1);\n+                thread1 = debuggee.threadByFieldName(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_rt\/filter_rt001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,2 +127,2 @@\n-                thread1 = debuggee.threadByName(threadName1);\n-                thread2 = debuggee.threadByName(threadName2);\n+                thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_rt\/filter_rt003.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-                thread1 = debuggee.threadByName(threadName1);\n+                thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n@@ -134,1 +134,1 @@\n-                thread2 = debuggee.threadByName(threadName2);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_s\/filter_s001.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -208,1 +208,3 @@\n-        ThreadReference thread2 = debuggee.threadByName(threadName2);\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n+        ThreadReference thread2 =\n+            debuggee.threadByFieldName(debuggeeClass, \"thread2\", threadName2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/interrupt\/interrupt001.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,4 +94,7 @@\n-        ThreadReference thrRef;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/ownedMonitors\/ownedmonitors002.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -40,1 +42,2 @@\n-        Thread.currentThread().setName(ownedmonitors002.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(ownedmonitors002.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/ownedMonitors\/ownedmonitors002t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 80;\n+    static final int DEBUGGEE_STOPATLINE = 83;\n@@ -109,4 +109,7 @@\n-        ThreadReference thrRef = null;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -120,3 +123,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes006.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -54,1 +56,2 @@\n-        Thread.currentThread().setName(popframes006.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(popframes006.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes006t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,3 +53,3 @@\n-    static final String DEBUGGEE_THRDS[] = {\n-        \"popframes007tMainThr\", \"popframes007tAuxThr\"\n-    };\n+    static final String DEBUGGEE_MAIN_THREAD_NAME = \"popframes007tMainThr\";\n+    static final String DEBUGGEE_AUX_THREAD_NAME  = \"popframes007tAuxThr\";\n+\n@@ -62,1 +62,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 83;\n+    static final int DEBUGGEE_STOPATLINE = 86;\n@@ -109,9 +109,20 @@\n-        ThreadReference thrRef[] = new ThreadReference[2];\n-        for (int i=0; i<2; i++)\n-            if ((thrRef[i] =\n-                    debuggee.threadByName(DEBUGGEE_THRDS[i])) == null) {\n-                log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n-                    + DEBUGGEE_THRDS[i]);\n-                tot_res = Consts.TEST_FAILED;\n-                return quitDebuggee();\n-            }\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldName(rType, \"mainThread\", DEBUGGEE_MAIN_THREAD_NAME);\n+        if (mainThread == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n+                         + DEBUGGEE_MAIN_THREAD_NAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n+\n+        ThreadReference auxThread =\n+            debuggee.threadByFieldName(rType, \"auxThr\", DEBUGGEE_AUX_THREAD_NAME);\n+        if (auxThread == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n+                         + DEBUGGEE_AUX_THREAD_NAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n@@ -121,3 +132,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-\n@@ -130,1 +138,1 @@\n-            StackFrame stFrame = findFrame(thrRef[1], DEBUGGEE_LOCALVAR);\n+            StackFrame stFrame = findFrame(auxThread, DEBUGGEE_LOCALVAR);\n@@ -134,1 +142,1 @@\n-                + \"\\\"\\n\\tgot from thread reference \\\"\" + thrRef[1]\n+                + \"\\\"\\n\\tgot from thread reference \\\"\" + auxThread\n@@ -136,1 +144,1 @@\n-                + thrRef[0] + \"\\\" ...\");\n+                + mainThread + \"\\\" ...\");\n@@ -140,1 +148,1 @@\n-                thrRef[0].popFrames(stFrame);\n+                mainThread.popFrames(stFrame);\n@@ -144,1 +152,1 @@\n-                    + \"\\\"\\n\\tgot from thread reference \\\"\" + thrRef[1]\n+                    + \"\\\"\\n\\tgot from thread reference \\\"\" + auxThread\n@@ -146,1 +154,1 @@\n-                    + thrRef[0] + \"\\\"\");\n+                    + mainThread + \"\\\"\");\n@@ -170,1 +178,1 @@\n-                    + \"\\\"\\n\\tgot from thread reference \\\"\" + thrRef[1]\n+                    + \"\\\"\\n\\tgot from thread reference \\\"\" + auxThread\n@@ -172,1 +180,1 @@\n-                    + thrRef[0] + \"\\\"\");\n+                    + mainThread + \"\\\"\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes007.java","additions":33,"deletions":25,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,3 @@\n+    static Thread mainThread = null;\n+    static OtherThr auxThr = null;\n+\n@@ -38,1 +41,0 @@\n-    private OtherThr auxThr;\n@@ -55,1 +57,2 @@\n-        Thread.currentThread().setName(popframes007.DEBUGGEE_THRDS[0]);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(popframes007.DEBUGGEE_MAIN_THREAD_NAME);\n@@ -96,1 +99,1 @@\n-            popframes007.DEBUGGEE_THRDS[1], this);\n+            popframes007.DEBUGGEE_AUX_THREAD_NAME, this);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes007t.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 88;\n+    static final int DEBUGGEE_STOPATLINE = 90;\n@@ -118,1 +118,4 @@\n-        ThreadReference thrRef = debuggee.threadByName(DEBUGGEE_THRNAME);\n+        \/\/ debuggee main class\n+        mainClass = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference thrRef = debuggee.threadByFieldName(mainClass, \"testThread\", DEBUGGEE_THRNAME);\n@@ -120,1 +123,1 @@\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+            log.complain(\"TEST FAILURE: method Debugee.threadByFieldName() returned null for debuggee thread \"\n@@ -131,3 +134,0 @@\n-            \/\/ debuggee main class\n-            mainClass = debuggee.classByName(DEBUGGEE_CLASS);\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop002.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+    static Thread testThread = null;\n@@ -57,1 +58,2 @@\n-        Thread.currentThread().setName(stop002.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(stop002.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop002t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,0 +78,1 @@\n+import com.sun.jdi.ReferenceType;\n@@ -79,0 +80,1 @@\n+import com.sun.jdi.ThreadReference;\n@@ -153,0 +155,4 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(SDEDebuggee.class.getName());\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\",\n+                                              SDEDebuggee.mainThreadName);\n@@ -154,1 +160,1 @@\n-                debuggee.threadByName(SDEDebuggee.mainThreadName),\n+                mainThread,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/setDefaultStratum\/setDefaultStratum003\/setDefaultStratum003.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -293,0 +293,18 @@\n+\n+    public ThreadReference threadByFieldName(ReferenceType debuggeeClass,\n+                                             String threadFieldName) {\n+        return threadByFieldName(debuggeeClass, threadFieldName, threadFieldName);\n+    }\n+\n+    public ThreadReference threadByFieldName(ReferenceType debuggeeClass,\n+                                             String threadFieldName,\n+                                             String threadName) {\n+        try {\n+            return threadByFieldNameOrThrow(debuggeeClass, threadFieldName, threadName);\n+        } catch (JDITestRuntimeException e) {\n+            log.display(\"** Unexpected exception trying to find thread \\\"\" + threadName + \"\\\"\");\n+            e.printStackTrace(log.getOutStream());\n+            return null;\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Debugee.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+    public static Thread mainThread = null;\n@@ -45,1 +46,2 @@\n-        Thread.currentThread().setName(mainThreadName);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(mainThreadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/sde\/SDEDebuggee.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-java\/lang\/System\/SecurityManagerWarnings.java                                        8351188 generic-all\n-java\/lang\/System\/LoggerFinder\/SignedLoggerFinderTest\/SignedLoggerFinderTest.java     8351188 generic-all\n","filename":"test\/jdk\/ProblemList-enable-preview.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-#  Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+#  Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,0 +86,3 @@\n+# These sub groups of tier3 allow for running certain tests separately from the\n+# rest. When adding tests to tier3, in most cases they should be added to\n+# tier3_part1.\n@@ -87,0 +90,4 @@\n+    :tier3_part1 \\\n+    :tier3_jpackage\n+\n+tier3_part1 = \\\n@@ -94,1 +101,0 @@\n-    :jdk_jpackage \\\n@@ -97,0 +103,4 @@\n+# The jpackage tests on Windows require permissions that aren't always present\n+tier3_jpackage = \\\n+    :jdk_jpackage\n+\n@@ -636,0 +646,1 @@\n+    com\/sun\/net\/httpserver\/simpleserver\/DocRootDirPermissionsWinTest.java \\\n","filename":"test\/jdk\/TEST.groups","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/HKDFBasicFunctionsTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/HKDFDelayedPRK.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/HKDFExhaustiveTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/HKDFKnownAnswerTests.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @enablePreview\n@@ -92,1 +91,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/HKDFSaltIKMTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,292 @@\n+\/*\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Tests file permission checks during the creation of a `FileServerHandler`\n+ * @requires (os.family != \"windows\")\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.URIBuilder\n+ * @run main\/othervm -ea DocRootDirPermissionsTest true\n+ * @run main\/othervm -ea DocRootDirPermissionsTest false\n+ *\/\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.URI;\n+import java.net.http.HttpClient;\n+import java.net.http.HttpRequest;\n+import java.net.http.HttpResponse.BodyHandlers;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.attribute.AclEntry;\n+import java.nio.file.attribute.AclEntryPermission;\n+import java.nio.file.attribute.AclEntryType;\n+import java.nio.file.attribute.AclFileAttributeView;\n+import java.nio.file.attribute.PosixFilePermission;\n+import java.nio.file.attribute.UserPrincipal;\n+import java.time.ZoneId;\n+import java.time.format.DateTimeFormatter;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.logging.ConsoleHandler;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import com.sun.net.httpserver.HttpServer;\n+import com.sun.net.httpserver.SimpleFileServer;\n+import com.sun.net.httpserver.SimpleFileServer.OutputLevel;\n+import jdk.test.lib.net.URIBuilder;\n+import jdk.test.lib.util.FileUtils;\n+import static java.net.http.HttpClient.Builder.NO_PROXY;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static java.nio.file.StandardOpenOption.CREATE;\n+\n+\/**\n+ * Tests file permission checks during the creation of a FileServerHandler.\n+ *\n+ * A FileServerHandler can only be created if its root directory\n+ * is readable. The test consists of 2 runs:\n+ *     1) RootDir is readable\n+ *     2) RootDir is NOT readable\n+ * 2)  reuses the test directory created in the previous run, revoking\n+ *     read access.\n+* *\/\n+public class DocRootDirPermissionsTest {\n+\n+    private static final Path CWD = Path.of(\".\").toAbsolutePath().normalize();\n+    private static final Path TEST_DIR = CWD.resolve(\"RootDir\");\n+    private static final InetSocketAddress LOOPBACK_ADDR =\n+            new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n+\n+    private static final boolean ENABLE_LOGGING = true;\n+    private static final Logger LOGGER = Logger.getLogger(\"com.sun.net.httpserver\");\n+\n+    private static boolean readPermitted;\n+    private static String lastModifiedDir;\n+    private static String lastModifiedFile;\n+\n+    private static Set<PosixFilePermission> posixPermissions;\n+    private static List<AclEntry> acls;\n+\n+    public static void main(String[] args) throws Exception {\n+        new DocRootDirPermissionsTest().run(args);\n+    }\n+\n+    protected void run(String[] args) throws Exception{\n+        setupLogging();\n+        readPermitted = Boolean.parseBoolean(args[0]);\n+        if (readPermitted) {\n+            createTestDir();\n+            testDirectoryGET();\n+            testFileGET();\n+        } else {\n+            revokePermissions();\n+            try {\n+                testCreateHandler();\n+            } finally {\n+                restorePermissions();\n+            }\n+        }\n+    }\n+\n+    private void revokePermissions() throws IOException {\n+        if (!Files.isReadable(TEST_DIR)) {\n+            \/\/ good nothing to do:\n+            System.out.println(\"File is already not readable: nothing to do\");\n+            return;\n+        }\n+        System.out.println(\"FileSystem: \" + Files.getFileStore(TEST_DIR).type());\n+        if (Files.getFileStore(TEST_DIR).supportsFileAttributeView(\"posix\")) {\n+            System.out.println(\"Revoking owner's read access in POSIX permissions for \" + TEST_DIR);\n+            posixPermissions = Files.getPosixFilePermissions(TEST_DIR);\n+            Set<PosixFilePermission> newPerms = new HashSet<>(posixPermissions);\n+            newPerms.remove(PosixFilePermission.OWNER_READ);\n+            newPerms.remove(PosixFilePermission.OWNER_EXECUTE);\n+            Files.setPosixFilePermissions(TEST_DIR, newPerms);\n+        } else if (Files.getFileStore(TEST_DIR).supportsFileAttributeView(\"acl\")) {\n+            System.out.println(\"Revoking owner's read access in ACLs for \" + TEST_DIR);\n+            AclFileAttributeView view = Files.getFileAttributeView(TEST_DIR, AclFileAttributeView.class);\n+            acls = view.getAcl();\n+            List<AclEntry> entries = new ArrayList<>();\n+            UserPrincipal owner = view.getOwner();\n+            \/\/ Deny owner\n+            entries.add(AclEntry.newBuilder().setType(AclEntryType.DENY)\n+                    .setPrincipal(owner).setPermissions(AclEntryPermission.READ_DATA,\n+                            AclEntryPermission.READ_ATTRIBUTES, AclEntryPermission.READ_NAMED_ATTRS,\n+                            AclEntryPermission.EXECUTE)\n+                    .build());\n+            \/\/ Revoke read data and execute\n+            for (AclEntry entry : acls) {\n+                Set<AclEntryPermission> perms =\n+                        new HashSet<>(entry.permissions());\n+                if (entry.type() == AclEntryType.ALLOW) {\n+                    System.out.println(\"Revoking read access: \" + entry);\n+                    perms.remove(AclEntryPermission.READ_DATA);\n+                    perms.remove(AclEntryPermission.LIST_DIRECTORY);\n+                    perms.remove(AclEntryPermission.READ_ATTRIBUTES);\n+                    perms.remove(AclEntryPermission.READ_NAMED_ATTRS);\n+                    perms.remove(AclEntryPermission.EXECUTE);\n+                    entries.add(AclEntry.newBuilder(entry).setPermissions(perms).build());\n+                }\n+            }\n+            view.setAcl(entries);\n+            System.out.println(\"ACLs: \" + view.getAcl());\n+            try {\n+                System.out.println(\"File is readable: \" + Files.isReadable(TEST_DIR));\n+                Thread.sleep(50);\n+            } catch (InterruptedException x) {}\n+            \/\/ The above does not always work, skip the test if we can't make TEST_DIR\n+            \/\/ read-only.\n+            if (Files.isReadable(TEST_DIR)) {\n+                throw new jtreg.SkippedException(\"Can't make directory read-only\");\n+            }\n+        } else {\n+            throw new RuntimeException(\"Required attribute view not supported\");\n+        }\n+        System.out.println(\"File is readable: \" + Files.isReadable(TEST_DIR));\n+    }\n+\n+    private void restorePermissions() throws IOException {\n+        if (Files.getFileStore(TEST_DIR).supportsFileAttributeView(\"posix\")) {\n+            if (posixPermissions != null) {\n+                System.out.println(\"Restoring original POSIX permissions\");\n+                Files.setPosixFilePermissions(TEST_DIR, posixPermissions);\n+            }\n+        } else if (Files.getFileStore(TEST_DIR).supportsFileAttributeView(\"acl\")) {\n+            if (acls != null) {\n+                System.out.println(\"Restoring original ACLs\");\n+                AclFileAttributeView view = Files.getFileAttributeView(TEST_DIR, AclFileAttributeView.class);\n+                view.setAcl(acls);\n+            }\n+        } else {\n+            throw new RuntimeException(\"Required attribute view not supported\");\n+        }\n+    }\n+\n+    private void setupLogging() {\n+        if (ENABLE_LOGGING) {\n+            ConsoleHandler ch = new ConsoleHandler();\n+            LOGGER.setLevel(Level.ALL);\n+            ch.setLevel(Level.ALL);\n+            LOGGER.addHandler(ch);\n+        }\n+    }\n+\n+    private void createTestDir() throws IOException {\n+        if (Files.exists(TEST_DIR)) {\n+            FileUtils.deleteFileTreeWithRetry(TEST_DIR);\n+        }\n+        Files.createDirectories(TEST_DIR);\n+        var file = Files.writeString(TEST_DIR.resolve(\"aFile.txt\"), \"some text\", CREATE);\n+        lastModifiedDir = getLastModified(TEST_DIR);\n+        lastModifiedFile = getLastModified(file);\n+    }\n+\n+    private void testDirectoryGET() throws Exception {\n+        var expectedBody = openHTML + \"\"\"\n+                <h1>Directory listing for &#x2F;<\/h1>\n+                <ul>\n+                <li><a href=\"aFile.txt\">aFile.txt<\/a><\/li>\n+                <\/ul>\n+                \"\"\" + closeHTML;\n+        var expectedLength = Integer.toString(expectedBody.getBytes(UTF_8).length);\n+        var server = SimpleFileServer.createFileServer(LOOPBACK_ADDR, TEST_DIR, OutputLevel.VERBOSE);\n+\n+        server.start();\n+        try {\n+            var client = HttpClient.newBuilder().proxy(NO_PROXY).build();\n+            var request = HttpRequest.newBuilder(uri(server, \"\")).build();\n+            var response = client.send(request, BodyHandlers.ofString());\n+            assert response.statusCode() == 200;\n+            assert response.body().equals(expectedBody);\n+            assert response.headers().firstValue(\"content-type\").get().equals(\"text\/html; charset=UTF-8\");\n+            assert response.headers().firstValue(\"content-length\").get().equals(expectedLength);\n+            assert response.headers().firstValue(\"last-modified\").get().equals(lastModifiedDir);\n+        } finally {\n+            server.stop(0);\n+        }\n+    }\n+\n+    private void testFileGET() throws Exception {\n+        var expectedBody = \"some text\";\n+        var expectedLength = Integer.toString(expectedBody.getBytes(UTF_8).length);\n+        var server = SimpleFileServer.createFileServer(LOOPBACK_ADDR, TEST_DIR, OutputLevel.VERBOSE);\n+\n+        server.start();\n+        try {\n+            var client = HttpClient.newBuilder().proxy(NO_PROXY).build();\n+            var request = HttpRequest.newBuilder(uri(server, \"aFile.txt\")).build();\n+            var response = client.send(request, BodyHandlers.ofString());\n+            assert response.statusCode() == 200;\n+            assert response.body().equals(\"some text\");\n+            assert response.headers().firstValue(\"content-type\").get().equals(\"text\/plain\");\n+            assert response.headers().firstValue(\"content-length\").get().equals(expectedLength);\n+            assert response.headers().firstValue(\"last-modified\").get().equals(lastModifiedFile);\n+        } finally {\n+            server.stop(0);\n+        }\n+    }\n+\n+    private void testCreateHandler(){\n+        try {\n+            SimpleFileServer.createFileServer(LOOPBACK_ADDR, TEST_DIR, OutputLevel.NONE);\n+            throw new RuntimeException(\"Handler creation expected to fail\");\n+        } catch (IllegalArgumentException expected) { }\n+\n+        try {\n+            SimpleFileServer.createFileHandler(TEST_DIR);\n+            throw new RuntimeException(\"Handler creation expected to fail\");\n+        } catch (IllegalArgumentException expected) { }\n+    }\n+\n+    private static final String openHTML = \"\"\"\n+                <!DOCTYPE html>\n+                <html>\n+                <head>\n+                <meta charset=\"utf-8\"\/>\n+                <\/head>\n+                <body>\n+                \"\"\";\n+\n+    private static final String closeHTML = \"\"\"\n+                <\/body>\n+                <\/html>\n+                \"\"\";\n+\n+    private URI uri(HttpServer server, String path) {\n+        return URIBuilder.newBuilder()\n+                .host(\"localhost\")\n+                .port(server.getAddress().getPort())\n+                .scheme(\"http\")\n+                .path(\"\/\" + path)\n+                .buildUnchecked();\n+    }\n+\n+    private String getLastModified(Path path) throws IOException {\n+        return Files.getLastModifiedTime(path).toInstant().atZone(ZoneId.of(\"GMT\"))\n+                .format(DateTimeFormatter.RFC_1123_DATE_TIME);\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/DocRootDirPermissionsTest.java","additions":292,"deletions":0,"binary":false,"changes":292,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Tests file permission checks during the creation of a `FileServerHandler`\n+ * @requires (os.family == \"windows\")\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.URIBuilder\n+ * @run main\/manual\/othervm -ea DocRootDirPermissionsWinTest true\n+ * @run main\/manual\/othervm -ea DocRootDirPermissionsWinTest false\n+ *\/\n+\n+public class DocRootDirPermissionsWinTest extends DocRootDirPermissionsTest{\n+    public static void main(String[] args) throws Exception {\n+        new DocRootDirPermissionsWinTest().run(args);\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/DocRootDirPermissionsWinTest.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -1,287 +0,0 @@\n-\/*\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @summary Tests file permission checks during the creation of a `FileServerHandler`\n- * @library \/test\/lib\n- * @build jdk.test.lib.net.URIBuilder\n- * @run main\/othervm -ea RootDirPermissionsTest true\n- * @run main\/othervm -ea RootDirPermissionsTest false\n- *\/\n-\n-import java.io.IOException;\n-import java.net.InetAddress;\n-import java.net.InetSocketAddress;\n-import java.net.URI;\n-import java.net.http.HttpClient;\n-import java.net.http.HttpRequest;\n-import java.net.http.HttpResponse.BodyHandlers;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.attribute.AclEntry;\n-import java.nio.file.attribute.AclEntryPermission;\n-import java.nio.file.attribute.AclEntryType;\n-import java.nio.file.attribute.AclFileAttributeView;\n-import java.nio.file.attribute.PosixFilePermission;\n-import java.nio.file.attribute.UserPrincipal;\n-import java.time.ZoneId;\n-import java.time.format.DateTimeFormatter;\n-import java.util.ArrayList;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Set;\n-import java.util.logging.ConsoleHandler;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n-import com.sun.net.httpserver.HttpServer;\n-import com.sun.net.httpserver.SimpleFileServer;\n-import com.sun.net.httpserver.SimpleFileServer.OutputLevel;\n-import jdk.test.lib.net.URIBuilder;\n-import jdk.test.lib.util.FileUtils;\n-import static java.net.http.HttpClient.Builder.NO_PROXY;\n-import static java.nio.charset.StandardCharsets.UTF_8;\n-import static java.nio.file.StandardOpenOption.CREATE;\n-\n-\/**\n- * Tests file permission checks during the creation of a FileServerHandler.\n- *\n- * A FileServerHandler can only be created if its root directory\n- * is readable. The test consists of 2 runs:\n- *     1) RootDir is readable\n- *     2) RootDir is NOT readable\n- * 2)  reuses the test directory created in the previous run, revoking\n- *     read access.\n-* *\/\n-public class RootDirPermissionsTest {\n-\n-    static final Path CWD = Path.of(\".\").toAbsolutePath().normalize();\n-    static final Path TEST_DIR = CWD.resolve(\"RootDir\");\n-    static final InetSocketAddress LOOPBACK_ADDR =\n-            new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-    static final boolean ENABLE_LOGGING = true;\n-    static final Logger LOGGER = Logger.getLogger(\"com.sun.net.httpserver\");\n-\n-    static boolean readPermitted;\n-    static String lastModifiedDir;\n-    static String lastModifiedFile;\n-\n-    static Set<PosixFilePermission> posixPermissions;\n-    static List<AclEntry> acls;\n-\n-    public static void main(String[] args) throws Exception {\n-        setupLogging();\n-        readPermitted = Boolean.parseBoolean(args[0]);\n-        if (readPermitted) {\n-            createTestDir();\n-            testDirectoryGET();\n-            testFileGET();\n-        } else {\n-            revokePermissions();\n-            try {\n-                testCreateHandler();\n-            } finally {\n-                restorePermissions();\n-            }\n-        }\n-    }\n-\n-    private static void revokePermissions() throws IOException {\n-        if (!Files.isReadable(TEST_DIR)) {\n-            \/\/ good nothing to do:\n-            System.out.println(\"File is already not readable: nothing to do\");\n-            return;\n-        }\n-        System.out.println(\"FileSystem: \" + Files.getFileStore(TEST_DIR).type());\n-        if (Files.getFileStore(TEST_DIR).supportsFileAttributeView(\"posix\")) {\n-            System.out.println(\"Revoking owner's read access in POSIX permissions for \" + TEST_DIR);\n-            posixPermissions = Files.getPosixFilePermissions(TEST_DIR);\n-            Set<PosixFilePermission> newPerms = new HashSet<>(posixPermissions);\n-            newPerms.remove(PosixFilePermission.OWNER_READ);\n-            newPerms.remove(PosixFilePermission.OWNER_EXECUTE);\n-            Files.setPosixFilePermissions(TEST_DIR, newPerms);\n-        } else if (Files.getFileStore(TEST_DIR).supportsFileAttributeView(\"acl\")) {\n-            System.out.println(\"Revoking owner's read access in ACLs for \" + TEST_DIR);\n-            AclFileAttributeView view = Files.getFileAttributeView(TEST_DIR, AclFileAttributeView.class);\n-            acls = view.getAcl();\n-            List<AclEntry> entries = new ArrayList<>();\n-            UserPrincipal owner = view.getOwner();\n-            \/\/ Deny owner\n-            entries.add(AclEntry.newBuilder().setType(AclEntryType.DENY)\n-                    .setPrincipal(owner).setPermissions(AclEntryPermission.READ_DATA,\n-                            AclEntryPermission.READ_ATTRIBUTES, AclEntryPermission.READ_NAMED_ATTRS,\n-                            AclEntryPermission.EXECUTE)\n-                    .build());\n-            \/\/ Revoke read data and execute\n-            for (AclEntry entry : acls) {\n-                Set<AclEntryPermission> perms =\n-                        new HashSet<>(entry.permissions());\n-                if (entry.type() == AclEntryType.ALLOW) {\n-                    System.out.println(\"Revoking read access: \" + entry);\n-                    perms.remove(AclEntryPermission.READ_DATA);\n-                    perms.remove(AclEntryPermission.LIST_DIRECTORY);\n-                    perms.remove(AclEntryPermission.READ_ATTRIBUTES);\n-                    perms.remove(AclEntryPermission.READ_NAMED_ATTRS);\n-                    perms.remove(AclEntryPermission.EXECUTE);\n-                    entries.add(AclEntry.newBuilder(entry).setPermissions(perms).build());\n-                }\n-            }\n-            view.setAcl(entries);\n-            System.out.println(\"ACLs: \" + view.getAcl());\n-            try {\n-                System.out.println(\"File is readable: \" + Files.isReadable(TEST_DIR));\n-                Thread.sleep(50);\n-            } catch (InterruptedException x) {}\n-            \/\/ The above does not always work, skip the test if we can't make TEST_DIR\n-            \/\/ read-only.\n-            if (Files.isReadable(TEST_DIR)) {\n-                throw new jtreg.SkippedException(\"Can't make directory read-only\");\n-            }\n-        } else {\n-            throw new RuntimeException(\"Required attribute view not supported\");\n-        }\n-        System.out.println(\"File is readable: \" + Files.isReadable(TEST_DIR));\n-    }\n-\n-    private static void restorePermissions() throws IOException {\n-        if (Files.getFileStore(TEST_DIR).supportsFileAttributeView(\"posix\")) {\n-            if (posixPermissions != null) {\n-                System.out.println(\"Restoring original POSIX permissions\");\n-                Files.setPosixFilePermissions(TEST_DIR, posixPermissions);\n-            }\n-        } else if (Files.getFileStore(TEST_DIR).supportsFileAttributeView(\"acl\")) {\n-            if (acls != null) {\n-                System.out.println(\"Restoring original ACLs\");\n-                AclFileAttributeView view = Files.getFileAttributeView(TEST_DIR, AclFileAttributeView.class);\n-                view.setAcl(acls);\n-            }\n-        } else {\n-            throw new RuntimeException(\"Required attribute view not supported\");\n-        }\n-    }\n-\n-    private static void setupLogging() {\n-        if (ENABLE_LOGGING) {\n-            ConsoleHandler ch = new ConsoleHandler();\n-            LOGGER.setLevel(Level.ALL);\n-            ch.setLevel(Level.ALL);\n-            LOGGER.addHandler(ch);\n-        }\n-    }\n-\n-    private static void createTestDir() throws IOException {\n-        if (Files.exists(TEST_DIR)) {\n-            FileUtils.deleteFileTreeWithRetry(TEST_DIR);\n-        }\n-        Files.createDirectories(TEST_DIR);\n-        var file = Files.writeString(TEST_DIR.resolve(\"aFile.txt\"), \"some text\", CREATE);\n-        lastModifiedDir = getLastModified(TEST_DIR);\n-        lastModifiedFile = getLastModified(file);\n-    }\n-\n-    private static void testDirectoryGET() throws Exception {\n-        var expectedBody = openHTML + \"\"\"\n-                <h1>Directory listing for &#x2F;<\/h1>\n-                <ul>\n-                <li><a href=\"aFile.txt\">aFile.txt<\/a><\/li>\n-                <\/ul>\n-                \"\"\" + closeHTML;\n-        var expectedLength = Integer.toString(expectedBody.getBytes(UTF_8).length);\n-        var server = SimpleFileServer.createFileServer(LOOPBACK_ADDR, TEST_DIR, OutputLevel.VERBOSE);\n-\n-        server.start();\n-        try {\n-            var client = HttpClient.newBuilder().proxy(NO_PROXY).build();\n-            var request = HttpRequest.newBuilder(uri(server, \"\")).build();\n-            var response = client.send(request, BodyHandlers.ofString());\n-            assert response.statusCode() == 200;\n-            assert response.body().equals(expectedBody);\n-            assert response.headers().firstValue(\"content-type\").get().equals(\"text\/html; charset=UTF-8\");\n-            assert response.headers().firstValue(\"content-length\").get().equals(expectedLength);\n-            assert response.headers().firstValue(\"last-modified\").get().equals(lastModifiedDir);\n-        } finally {\n-            server.stop(0);\n-        }\n-    }\n-\n-    private static void testFileGET() throws Exception {\n-        var expectedBody = \"some text\";\n-        var expectedLength = Integer.toString(expectedBody.getBytes(UTF_8).length);\n-        var server = SimpleFileServer.createFileServer(LOOPBACK_ADDR, TEST_DIR, OutputLevel.VERBOSE);\n-\n-        server.start();\n-        try {\n-            var client = HttpClient.newBuilder().proxy(NO_PROXY).build();\n-            var request = HttpRequest.newBuilder(uri(server, \"aFile.txt\")).build();\n-            var response = client.send(request, BodyHandlers.ofString());\n-            assert response.statusCode() == 200;\n-            assert response.body().equals(\"some text\");\n-            assert response.headers().firstValue(\"content-type\").get().equals(\"text\/plain\");\n-            assert response.headers().firstValue(\"content-length\").get().equals(expectedLength);\n-            assert response.headers().firstValue(\"last-modified\").get().equals(lastModifiedFile);\n-        } finally {\n-            server.stop(0);\n-        }\n-    }\n-\n-    private static void testCreateHandler(){\n-        try {\n-            SimpleFileServer.createFileServer(LOOPBACK_ADDR, TEST_DIR, OutputLevel.NONE);\n-            throw new RuntimeException(\"Handler creation expected to fail\");\n-        } catch (IllegalArgumentException expected) { }\n-\n-        try {\n-            SimpleFileServer.createFileHandler(TEST_DIR);\n-            throw new RuntimeException(\"Handler creation expected to fail\");\n-        } catch (IllegalArgumentException expected) { }\n-    }\n-\n-    static final String openHTML = \"\"\"\n-                <!DOCTYPE html>\n-                <html>\n-                <head>\n-                <meta charset=\"utf-8\"\/>\n-                <\/head>\n-                <body>\n-                \"\"\";\n-\n-    static final String closeHTML = \"\"\"\n-                <\/body>\n-                <\/html>\n-                \"\"\";\n-\n-    static URI uri(HttpServer server, String path) {\n-        return URIBuilder.newBuilder()\n-                .host(\"localhost\")\n-                .port(server.getAddress().getPort())\n-                .scheme(\"http\")\n-                .path(\"\/\" + path)\n-                .buildUnchecked();\n-    }\n-\n-    static String getLastModified(Path path) throws IOException {\n-        return Files.getLastModifiedTime(path).toInstant().atZone(ZoneId.of(\"GMT\"))\n-                .format(DateTimeFormatter.RFC_1123_DATE_TIME);\n-    }\n-}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/RootDirPermissionsTest.java","additions":0,"deletions":287,"binary":false,"changes":287,"status":"deleted"},{"patch":"@@ -0,0 +1,210 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Graphics2D;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.HeadlessException;\n+import java.awt.Image;\n+import java.awt.Paint;\n+import java.awt.PaintContext;\n+import java.awt.Rectangle;\n+import java.awt.RenderingHints;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.Rectangle2D;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorModel;\n+import java.awt.image.VolatileImage;\n+import java.util.function.Consumer;\n+\n+\/**\n+ * @test\n+ * @bug 8355078\n+ * @summary Checks if different image types (BufferedImage and VolatileImage)\n+ *          produce the same results when using different ways to fill the image\n+ *          (setColor, setPaint, and custom Paint)\n+ *\/\n+public final class ColorPaintContextBasicTest {\n+\n+    private static final int SIZE = 100;\n+\n+    private static final int[] TYPES = new int[]{\n+            BufferedImage.TYPE_INT_RGB,\n+            BufferedImage.TYPE_INT_ARGB,\n+            BufferedImage.TYPE_INT_ARGB_PRE,\n+            BufferedImage.TYPE_INT_BGR,\n+            BufferedImage.TYPE_3BYTE_BGR,\n+            BufferedImage.TYPE_4BYTE_ABGR,\n+            BufferedImage.TYPE_4BYTE_ABGR_PRE,\n+    };\n+\n+    private static final Color[] COLORS = {\n+            Color.RED,\n+            Color.GREEN,\n+            Color.BLUE,\n+            Color.YELLOW,\n+            Color.MAGENTA,\n+            Color.CYAN,\n+            Color.BLACK,\n+            Color.WHITE,\n+            new Color(255, 165, 0),\n+            new Color(128, 0, 128),\n+            new Color(255, 0, 0, 128)\n+    };\n+\n+    \/**\n+     * Custom implementation of Paint that wraps a Color but is intentionally\n+     * not a Color. This is used to bypass the \"paint instanceof Color\"\n+     * optimization in Graphics2D#setPaint().\n+     *\/\n+    private static final class CustomPaint implements Paint {\n+\n+        private final Color color;\n+\n+        private CustomPaint(Color color) {\n+            this.color = color;\n+        }\n+\n+        @Override\n+        public PaintContext createContext(ColorModel cm,\n+                                          Rectangle deviceBounds,\n+                                          Rectangle2D userBounds,\n+                                          AffineTransform xform,\n+                                          RenderingHints hints)\n+        {\n+            return color.createContext(cm, deviceBounds, userBounds, xform,\n+                                       hints);\n+        }\n+\n+        @Override\n+        public int getTransparency() {\n+            return color.getTransparency();\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        GraphicsConfiguration gc = null;\n+        try {\n+            gc = GraphicsEnvironment.getLocalGraphicsEnvironment()\n+                                    .getDefaultScreenDevice()\n+                                    .getDefaultConfiguration();\n+        } catch (HeadlessException ignore) {\n+            \/\/ skip VolatileImage validation\n+        }\n+\n+        for (Color color : COLORS) {\n+            int rgb = color.getRGB();\n+            System.err.println(\"Test color: \" + Integer.toHexString(rgb));\n+            for (int type : TYPES) {\n+                var goldBI = new BufferedImage(SIZE, SIZE, type);\n+                var paintBI = new BufferedImage(SIZE, SIZE, type);\n+                var customBI = new BufferedImage(SIZE, SIZE, type);\n+\n+                fill(goldBI, g -> g.setColor(color));\n+                fill(paintBI, g -> g.setPaint(color));\n+                fill(customBI, g -> g.setPaint(new CustomPaint(color)));\n+\n+                if (!verify(paintBI, goldBI)) {\n+                    throw new RuntimeException(\"paintBI != goldBI\");\n+                }\n+\n+                if (!verify(customBI, goldBI)) {\n+                    throw new RuntimeException(\"customBI != goldBI\");\n+                }\n+\n+                if (gc == null) {\n+                    continue;\n+                }\n+\n+                int transparency = goldBI.getTransparency();\n+                var goldVI = fillVI(gc, transparency, g -> g.setColor(color));\n+                var paintVI = fillVI(gc, transparency, g -> g.setPaint(color));\n+                var customVI = fillVI(gc, transparency,\n+                                      g -> g.setPaint(new CustomPaint(color)));\n+\n+                if (gc.getColorModel().getPixelSize() >= 24) {\n+                    if (color.getAlpha() == 255 && !verify(goldBI, goldVI)) {\n+                        throw new RuntimeException(\"goldBI != goldVI\");\n+                    }\n+                }\n+\n+                if (!verify(paintVI, goldVI)) {\n+                    throw new RuntimeException(\"paintVI != goldVI\");\n+                }\n+\n+                if (!verify(customVI, goldVI)) {\n+                    throw new RuntimeException(\"customVI != goldVI\");\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void fill(Image img, Consumer<Graphics2D> action) {\n+        Graphics2D g2d = (Graphics2D) img.getGraphics();\n+        action.accept(g2d);\n+        g2d.fillRect(0, 0, SIZE, SIZE);\n+        g2d.dispose();\n+    }\n+\n+    private static BufferedImage fillVI(GraphicsConfiguration gc,\n+                                        int transparency,\n+                                        Consumer<Graphics2D> action)\n+    {\n+        var vi = gc.createCompatibleVolatileImage(SIZE, SIZE, transparency);\n+        int attempt = 0;\n+        while (true) {\n+            if (++attempt > 10) {\n+                throw new RuntimeException(\"Too many attempts: \" + attempt);\n+            }\n+\n+            int status = vi.validate(gc);\n+            if (status == VolatileImage.IMAGE_INCOMPATIBLE) {\n+                vi = gc.createCompatibleVolatileImage(SIZE, SIZE, transparency);\n+            }\n+\n+            fill(vi, action);\n+\n+            BufferedImage snapshot = vi.getSnapshot();\n+            if (vi.contentsLost()) {\n+                continue;\n+            }\n+            return snapshot;\n+        }\n+    }\n+\n+    private static boolean verify(BufferedImage img1, BufferedImage img2) {\n+        for (int y = 0; y < SIZE; y++) {\n+            for (int x = 0; x < SIZE; x++) {\n+                int rgb1 = img1.getRGB(x, y);\n+                int rgb2 = img2.getRGB(x, y);\n+                if (rgb1 != rgb2) {\n+                    System.err.println(\"rgb1: \" + Integer.toHexString(rgb1));\n+                    System.err.println(\"rgb2: \" + Integer.toHexString(rgb2));\n+                    return false;\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/ColorClass\/PaintContext\/ColorPaintContextBasicTest.java","additions":210,"deletions":0,"binary":false,"changes":210,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.WritableRaster;\n+\n+import sun.awt.image.SurfaceManager;\n+import sun.java2d.StateTrackable;\n+import sun.java2d.SurfaceData;\n+\n+\/**\n+ * @test\n+ * @bug 8355078\n+ * @summary Checks that ColorPaintContext surface is STABLE and cacheable\n+ * @modules java.desktop\/sun.awt.image\n+ *          java.desktop\/sun.java2d\n+ *\/\n+public final class ColorPaintContextStateTrackerTest {\n+\n+    public static void main(String[] args) {\n+        var context = Color.RED.createContext(null, null, null, null, null);\n+        var cm = context.getColorModel();\n+        var raster = (WritableRaster) context.getRaster(0, 0, 1, 1);\n+        var bi = new BufferedImage(cm, raster, cm.isAlphaPremultiplied(), null);\n+\n+        SurfaceData sd = SurfaceManager.getManager(bi).getPrimarySurfaceData();\n+        StateTrackable.State state = sd.getState();\n+        if (state != StateTrackable.State.STABLE) {\n+            System.err.println(\"Actual: \" + state);\n+            System.err.println(\"Expected: \" + StateTrackable.State.STABLE);\n+            throw new RuntimeException(\"Wrong state\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/ColorClass\/PaintContext\/ColorPaintContextStateTrackerTest.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8350203\n+ * @bug 8350203 8356966\n@@ -96,1 +96,1 @@\n-        assertEqual(expected, actual, text);\n+        assertEqual(expected, actual, text, font);\n@@ -103,1 +103,1 @@\n-        assertEqual(expected, actual, text);\n+        assertEqual(expected, actual, text, font);\n@@ -110,1 +110,1 @@\n-        assertEqual(expected, actual, text);\n+        assertEqual(expected, actual, text, font);\n@@ -117,1 +117,1 @@\n-        assertEqual(expected, actual, text);\n+        assertEqual(expected, actual, text, font);\n@@ -120,1 +120,1 @@\n-    private static void assertEqual(Rectangle r1, Rectangle r2, String text) {\n+    private static void assertEqual(Rectangle r1, Rectangle r2, String text, Font font) {\n@@ -125,1 +125,2 @@\n-            String msg = String.format(\"for text '%s': %s != %s\", escaped, r1.toString(), r2.toString());\n+            String msg = String.format(\"for text '%s' with font %s: %s != %s\",\n+                escaped, font.toString(), r1.toString(), r2.toString());\n","filename":"test\/jdk\/java\/awt\/Graphics2D\/DrawString\/IgnoredWhitespaceTest.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -153,0 +153,11 @@\n+ * <p id=\"forcePassAndFail\">\n+ * For semi-automatic tests, use {@code forcePass} or\n+ * {@code forceFail} methods to forcibly pass or fail the test\n+ * when it's determined that the required conditions are already met\n+ * or cannot be met correspondingly.\n+ * These methods release {@code awaitAndCheck}, and\n+ * the test will complete successfully or fail.\n+ * <p>\n+ * Refer to examples of using these methods in the description of the\n+ * {@link #forcePass() forcePass} and {@link #forceFail() forceFail} methods.\n+ *\n@@ -1313,1 +1324,11 @@\n-     *  Forcibly fail the test.\n+     * Forcibly fail the test.\n+     * <p>\n+     * Use this method in semi-automatic tests when\n+     * it is determined that the conditions for passing the test cannot be met.\n+     * <p>\n+     * <strong>Do not use<\/strong> this method in cases where a resource is unavailable or a\n+     * feature isn't supported, throw {@code jtreg.SkippedException} instead.\n+     *\n+     * <p>A sample usage can be found in\n+     * <a href=\"https:\/\/github.com\/openjdk\/jdk\/blob\/0844745e7bd954a96441365f8010741ec1c29dbf\/test\/jdk\/javax\/swing\/JScrollPane\/AcceleratedWheelScrolling\/HorizScrollers.java#L180\">{@code\n+     * HorizScrollers.java}<\/a>\n@@ -1320,1 +1341,11 @@\n-     *  Forcibly fail the test and provide a reason.\n+     * Forcibly fail the test and provide a reason.\n+     * <p>\n+     * Use this method in semi-automatic tests when\n+     * it is determined that the conditions for passing the test cannot be met.\n+     * <p>\n+     * <strong>Do not use<\/strong> this method in cases where a resource is unavailable or a\n+     * feature isn't supported, throw {@code jtreg.SkippedException} instead.\n+     *\n+     * <p>A sample usage can be found in\n+     * <a href=\"https:\/\/github.com\/openjdk\/jdk\/blob\/7283c8b075aa289dbb9cb80f6937b3349c8d4769\/test\/jdk\/java\/awt\/FileDialog\/SaveFileNameOverrideTest.java#L86\">{@code\n+     * SaveFileNameOverrideTest.java}<\/a>\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":33,"deletions":2,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8355954\n+ * @requires (os.family == \"windows\")\n+ * @summary Verify correct behavior of File.delete\n+ * @run junit DeleteReadOnly\n+ * @run junit\/othervm -Djdk.io.File.allowDeleteReadOnlyFiles=true DeleteReadOnly\n+ *\/\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class DeleteReadOnly {\n+    private static final String PROP = \"jdk.io.File.allowDeleteReadOnlyFiles\";\n+    private static final boolean DELETE_READ_ONLY = Boolean.getBoolean(PROP);\n+\n+    private static final File ROOT = new File(\".\");\n+\n+    @Test\n+    void deleteReadOnlyRegularFile() throws IOException {\n+        File dir = Files.createTempDirectory(ROOT.toPath(), \"dir\").toFile();\n+        File file = File.createTempFile(\"tow\", \"hee\", dir);\n+\n+        file.setReadOnly();\n+\n+        boolean deleted = file.delete();\n+        assertEquals(DELETE_READ_ONLY, deleted);\n+\n+        if (!deleted) {\n+            file.setWritable(true);\n+            assertTrue(file.delete());\n+        }\n+\n+        assertTrue(dir.delete());\n+    }\n+\n+    @Test\n+    void deleteReadOnlyDirectory() throws IOException {\n+        File dir = Files.createTempDirectory(ROOT.toPath(), \"dir\").toFile();\n+        dir.setReadOnly();\n+        assertTrue(dir.delete());\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/File\/DeleteReadOnly.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -183,1 +183,1 @@\n-            throw new RuntimeException(f + \" usable space \" + fs + \" > free space \" + ts);\n+            throw new RuntimeException(f + \" usable space \" + us + \" > free space \" + fs);\n","filename":"test\/jdk\/java\/io\/File\/GetXSpace.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+   @library \/test\/lib\n@@ -31,3 +32,9 @@\n-import java.io.*;\n-import java.nio.file.*;\n-import java.nio.file.attribute.*;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.file.Files;\n+import java.nio.file.attribute.PosixFileAttributes;\n+import java.nio.file.attribute.PosixFilePermissions;\n+\n+import jtreg.SkippedException;\n@@ -38,2 +45,1 @@\n-            System.out.println(\"Unable to test file permissions when running with privileges\");\n-            return;\n+            throw new SkippedException(\"Unable to test file permissions when running with privileges\");\n@@ -67,1 +73,1 @@\n-                throw new Exception(f + \": setWritable(true, ture) Failed\");\n+                throw new Exception(f + \": setWritable(true, true) Failed\");\n@@ -82,1 +88,1 @@\n-                throw new Exception(f + \": setWritable(true, ture) Failed\");\n+                throw new Exception(f + \": setWritable(true, true) Failed\");\n@@ -131,1 +137,1 @@\n-            \/\/Windows platform\n+            \/\/ Windows platform\n@@ -136,1 +142,1 @@\n-                    throw new Exception(f + \": setWritable(true, ture) Failed\");\n+                    throw new Exception(f + \": setWritable(true, true) Failed\");\n@@ -140,1 +146,1 @@\n-                    throw new Exception(f + \": setWritable(true, ture) Failed\");\n+                    throw new Exception(f + \": setWritable(true, true) Failed\");\n@@ -155,2 +161,2 @@\n-                \/\/ setWritable should fail on directories because the DOS readonly\n-                \/\/ attribute prevents a directory from being deleted.\n+                \/\/ setWritable should fail on directories because the DOS\n+                \/\/ readonly attribute prevents a directory from being deleted.\n@@ -183,0 +189,6 @@\n+            if (f.isFile() && !f.canWrite()) {\n+                \/\/ Files must not be left in a read-only state as the\n+                \/\/ jdk.io.File.deleteReadOnly property is not set\n+                if (!f.setWritable(true))\n+                    throw new Exception(f + \": setWritable(true, true) Failed\");\n+            }\n","filename":"test\/jdk\/java\/io\/File\/SetAccess.java","additions":25,"deletions":13,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -26,1 +26,3 @@\n- * @bug 8351045\n+ * @bug 8351045 8351996\n+ * @enablePreview\n+ * @comment Remove preview if ScopedValue is finalized\n@@ -28,0 +30,1 @@\n+ * @library \/test\/lib\n@@ -31,0 +34,6 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.ref.WeakReference;\n+import java.time.Duration;\n+import java.time.temporal.ChronoUnit;\n@@ -32,3 +41,6 @@\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.Executors;\n-import java.util.concurrent.Future;\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ThreadLocalRandom;\n+import java.util.concurrent.TimeUnit;\n@@ -36,0 +48,1 @@\n+import java.util.concurrent.atomic.AtomicReference;\n@@ -37,0 +50,3 @@\n+import jdk.test.lib.util.ForceGC;\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.RepeatedTest;\n@@ -38,0 +54,1 @@\n+import org.junit.jupiter.api.Timeout;\n@@ -39,1 +56,1 @@\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.*;\n@@ -161,1 +178,0 @@\n-    private static final int RUNS = 16;\n@@ -163,0 +179,1 @@\n+    private static final Duration TIMEOUT = Duration.of(2, ChronoUnit.SECONDS);\n@@ -164,6 +181,4 @@\n-    @Test\n-    void testRemoveOnComputeCases() {\n-        try (var exec = Executors.newVirtualThreadPerTaskExecutor()) {\n-            var tasks = new ArrayList<Future<?>>(RUNS);\n-            for (int i = 0; i < RUNS; i++) {\n-                tasks.add(exec.submit(this::testRemoveOnCompute));\n+    private static void await(CountDownLatch latch) {\n+        try {\n+            if (!latch.await(2L, TimeUnit.SECONDS)) {\n+                fail(\"No signal received\");\n@@ -171,8 +186,14 @@\n-            for (var task : tasks) {\n-                try {\n-                    task.get();\n-                } catch (InterruptedException | ExecutionException ex) {\n-                    var cause = ex.getCause();\n-                    if (cause instanceof AssertionError ae)\n-                        throw ae;\n-                    throw new RuntimeException(ex);\n+        } catch (InterruptedException e) {\n+            fail(e);\n+        }\n+    }\n+\n+    private static void awaitThreads(Thread... threads) {\n+        awaitThreads(Arrays.asList(threads));\n+    }\n+\n+    private static void awaitThreads(Iterable<Thread> threads) {\n+        for (var t : threads) {\n+            try {\n+                if (!t.join(TIMEOUT)) {\n+                    fail(\"Thread not stopping \" + t);\n@@ -180,0 +201,2 @@\n+            } catch (InterruptedException ex) {\n+                fail(ex);\n@@ -184,1 +207,9 @@\n-    void testRemoveOnCompute() {\n+    \/**\n+     * Tests that get() + remove() can prevent stale value from being installed.\n+     * Uses junit to do basic stress.\n+     *\/\n+    @Test\n+    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n+    void testRemoveStale() throws InterruptedException {\n+        CountDownLatch oldInputUsed = new CountDownLatch(1);\n+        CountDownLatch inputUpdated = new CountDownLatch(1);\n@@ -191,5 +222,3 @@\n-                try {\n-                    Thread.sleep(COMPUTE_TIME_MILLIS);\n-                } catch (InterruptedException ex) {\n-                    throw new RuntimeException(ex);\n-                }\n+                oldInputUsed.countDown();\n+                \/\/ ensure input is updated when we return\n+                await(inputUpdated);\n@@ -201,0 +230,1 @@\n+            await(oldInputUsed);\n@@ -203,0 +233,1 @@\n+            inputUpdated.countDown();\n@@ -204,6 +235,1 @@\n-        try {\n-            innocuous.join();\n-            refreshInput.join();\n-        } catch (InterruptedException ex) {\n-            throw new RuntimeException(ex);\n-        }\n+        awaitThreads(innocuous, refreshInput);\n@@ -213,0 +239,243 @@\n+\n+    \/**\n+     * Tests that calling get() from computeValue() terminates.\n+     *\/\n+    @Test\n+    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n+    void testGetInCompute() {\n+        ClassValue<Object> cv = new ClassValue<>() {\n+            @Override\n+            protected Object computeValue(Class<?> type) {\n+                get(type);\n+                get(type);\n+                get(type);\n+                return Boolean.TRUE;\n+            }\n+        };\n+        try {\n+            cv.get(int.class);\n+        } catch (Throwable ex) {\n+            \/\/ swallow if any\n+        }\n+    }\n+\n+    \/**\n+     * Tests that calling remove() from computeValue() terminates.\n+     *\/\n+    @Test\n+    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n+    void testRemoveInCompute() {\n+        ClassValue<Boolean> cv = new ClassValue<>() {\n+            @Override\n+            protected Boolean computeValue(Class<?> type) {\n+                remove(type);\n+                remove(type);\n+                remove(type);\n+                return Boolean.TRUE;\n+            }\n+        };\n+        assertTrue(cv.get(int.class));\n+    }\n+\n+    private static Class<?> createWeakClass() {\n+        var bytes = ClassFile.of().build(ClassDesc.of(\"WeakTest\"), _ -> {});\n+        try {\n+            return MethodHandles.lookup().defineHiddenClass(bytes, true).lookupClass();\n+        } catch (IllegalAccessException ex) {\n+            return fail(ex);\n+        }\n+    }\n+\n+    @Test\n+    void testWeakAgainstClass() {\n+        Class<?> hidden = createWeakClass();\n+        ClassValue<int[]> cv = new ClassValue<>() {\n+            @Override\n+            protected int[] computeValue(Class<?> type) {\n+                return new int[23];\n+            }\n+        };\n+\n+        WeakReference<?> ref = new WeakReference<>(cv.get(hidden));\n+        hidden = null; \/\/ Remove reference for interpreter\n+        if (!ForceGC.wait(() -> ref.refersTo(null))) {\n+            fail(\"Timeout\");\n+        }\n+    }\n+\n+    @Test\n+    @Disabled \/\/ JDK-8352622\n+    void testWeakAgainstClassValue() {\n+        ClassValue<int[]> cv = new ClassValue<>() {\n+            @Override\n+            protected int[] computeValue(Class<?> type) {\n+                return new int[23];\n+            }\n+        };\n+\n+        WeakReference<?> ref = new WeakReference<>(cv.get(int.class));\n+        cv = null; \/\/ Remove reference for interpreter\n+        if (!ForceGC.wait(() -> ref.refersTo(null))) {\n+            fail(\"Timeout\");\n+        }\n+    }\n+\n+    @Test\n+    void testSingletonWinner() {\n+        CountDownLatch raceStart = new CountDownLatch(1);\n+        ClassValue<int[]> cv = new ClassValue<>() {\n+            @Override\n+            protected int[] computeValue(Class<?> type) {\n+                await(raceStart);\n+                return new int[] {ThreadLocalRandom.current().nextInt()};\n+            }\n+        };\n+        AtomicReference<int[]> truth = new AtomicReference<>(null);\n+        AtomicInteger truthSwapCount = new AtomicInteger(0);\n+\n+        List<Thread> threads = new ArrayList<>(100);\n+        Runnable job = () -> {\n+            var res = cv.get(ClassValueTest.class);\n+            var item = truth.compareAndExchange(null, res);\n+            if (item != null) {\n+                assertSame(item, res);\n+            } else {\n+                truthSwapCount.incrementAndGet();\n+            }\n+        };\n+        for (int i = 0; i < 100; i++) {\n+            threads.add(Thread.startVirtualThread(job));\n+        }\n+        raceStart.countDown();\n+        awaitThreads(threads);\n+        assertEquals(1, truthSwapCount.get());\n+    }\n+\n+    @Test\n+    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n+    void testRacyRemoveInCompute() {\n+        ClassValue<Object> cv = new ClassValue<>() {\n+            @Override\n+            protected Object computeValue(Class<?> type) {\n+                remove(type);\n+                try {\n+                    Thread.sleep(COMPUTE_TIME_MILLIS);\n+                } catch (InterruptedException ex) {\n+                    throw new RuntimeException(ex);\n+                }\n+                remove(type);\n+                return Boolean.TRUE;\n+            }\n+        };\n+\n+        var threads = Arrays.stream(CLASSES)\n+                .map(clz -> Thread.startVirtualThread(() -> cv.get(clz)))\n+                .toList();\n+        awaitThreads(threads);\n+    }\n+\n+    @Test\n+    void testRecursiveInitialization() {\n+        record Holder() {\n+            static final ClassValue<Object> clv = new ClassValue<>() {\n+                @Override\n+                protected Object computeValue(Class<?> type) {\n+                    return new One();\n+                }\n+            };\n+\n+            record One() {\n+                static {\n+                    Holder.clv.get(One.class);\n+                }\n+            }\n+\n+        }\n+\n+        Holder.clv.get(Holder.One.class);\n+    }\n+\n+    private static final ScopedValue<Integer> THREAD_ID = ScopedValue.newInstance();\n+\n+    @Test\n+    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n+    void testNoRecomputeOnUnrelatedRemoval() throws InterruptedException {\n+        CountDownLatch t1Started = new CountDownLatch(1);\n+        CountDownLatch removeTamper = new CountDownLatch(1);\n+        CountDownLatch t2Started = new CountDownLatch(1);\n+        CountDownLatch t1Returned = new CountDownLatch(1);\n+        AtomicInteger t1Tries = new AtomicInteger();\n+        ClassValue<Object> clv = new ClassValue<>() {\n+            @Override\n+            protected Object computeValue(Class<?> type) {\n+                int id = THREAD_ID.get();\n+                if (id == 1) {\n+                    t1Tries.incrementAndGet();\n+                    t1Started.countDown();\n+                    await(t2Started); \/\/ implies unrelated changes\n+                } else if (id == 2) {\n+                    t2Started.countDown();\n+                    \/\/ Don't race to install - we want to check computeValue tampers\n+                    await(t1Returned);\n+                } else if (id != -1) {\n+                    fail(\"Id: \" + id);\n+                }\n+                return \"\";\n+            }\n+        };\n+\n+        ScopedValue.where(THREAD_ID, -1).run(() -> clv.get(long.class)); \/\/ set up unrelated class\n+        var t1 = Thread.startVirtualThread(() ->\n+                ScopedValue.where(THREAD_ID, 1).run(() -> {\n+                    clv.get(int.class);\n+                    t1Returned.countDown(); \/\/ returned after x calls to computeValue\n+                }));\n+        var t2 = Thread.startVirtualThread(() ->\n+                ScopedValue.where(THREAD_ID, 2).run(() -> {\n+                    await(removeTamper);\n+                    clv.get(int.class); \/\/ clv version diff from that of promise\n+                }));\n+        await(t1Started);\n+        clv.remove(long.class);\n+        removeTamper.countDown(); \/\/ removed unrelated class\n+        awaitThreads(t1, t2);\n+        assertEquals(1, t1Tries.get(), \"Redundant computeValue retries\");\n+    }\n+\n+    @Test\n+    @Timeout(value = 4, unit = TimeUnit.SECONDS)\n+    void testNoObsoleteInstallation() throws InterruptedException {\n+        CountDownLatch slowComputationStart = new CountDownLatch(1);\n+        CountDownLatch slowComputationContinue = new CountDownLatch(1);\n+        ClassValue<Integer> clv = new ClassValue<>() {\n+            @Override\n+            protected Integer computeValue(Class<?> type) {\n+                if (!THREAD_ID.isBound()) {\n+                    return 5;\n+                }\n+                int threadId = THREAD_ID.get();\n+                if (threadId == 1) {\n+                    if (slowComputationContinue.getCount() == 0) {\n+                        return 42;\n+                    } else {\n+                        \/\/ First invocation\n+                        slowComputationStart.countDown();\n+                        await(slowComputationContinue);\n+                        return -1;\n+                    }\n+                } else {\n+                    return fail(\"Unknown thread \" + threadId);\n+                }\n+            }\n+        };\n+        var t = Thread.startVirtualThread(() -> ScopedValue.where(THREAD_ID, 1).run(() -> {\n+            int v = clv.get(int.class);\n+            assertEquals(42, v, \"recomputed value\");\n+        }));\n+        await(slowComputationStart);\n+        assertEquals(5, clv.get(int.class), \"fast computation installed value\");\n+        clv.remove(int.class);\n+        slowComputationContinue.countDown();\n+        awaitThreads(t);\n+        assertEquals(42, clv.get(int.class), \"slow computation reinstalled value\");\n+    }\n","filename":"test\/jdk\/java\/lang\/invoke\/ClassValueTest.java","additions":301,"deletions":32,"binary":false,"changes":333,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8356709\n+ * @summary Test Double.toString(double)\n+ * @run junit ValueOfDouble\n+ *\/\n+\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.math.BigDecimal;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+\n+public class ValueOfDouble {\n+    private static final String DIGITS = \"1234567000003456789\"; \/\/ Enough digits to fill a long\n+\n+    @Test\n+    public void testValueOfDouble() {\n+        checkValue(0.0);\n+        checkValue(-0.0);\n+        checkValue(Math.PI);\n+        checkValue(-Math.PI);\n+        checkValue(Double.MAX_VALUE);\n+        checkValue(Double.MIN_VALUE);\n+        checkValue(1e-44); \/\/ Lots of digits with lots of 9s\n+\n+        for (int prec = 1; prec < DIGITS.length(); prec++) {\n+            String prefix = DIGITS.substring(0, prec);\n+            for (int exp = -30; exp < 30; exp++) {\n+                double value = Double.parseDouble(prefix + \"e\" + exp);\n+                checkValue(value);\n+                checkValue(-value);\n+            }\n+        }\n+    }\n+\n+    private static void checkValue(double value) {\n+        BigDecimal expected = new BigDecimal(Double.toString(value));\n+        assertEquals(expected, BigDecimal.valueOf(value));\n+    }\n+\n+    @Test\n+    public void testExceptions() {\n+        assertThrows(NumberFormatException.class, () -> BigDecimal.valueOf(Double.NaN));\n+        assertThrows(NumberFormatException.class, () -> BigDecimal.valueOf(Double.POSITIVE_INFINITY));\n+        assertThrows(NumberFormatException.class, () -> BigDecimal.valueOf(Double.NEGATIVE_INFINITY));\n+    }\n+}\n","filename":"test\/jdk\/java\/math\/BigDecimal\/ValueOfDouble.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @requires (os.arch == \"x86_64\") | (os.arch == \"amd64\") | (os.arch == \"aarch64\")\n","filename":"test\/jdk\/java\/nio\/Buffer\/LimitDirectMemory.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @requires (os.arch == \"x86_64\") | (os.arch == \"amd64\")\n","filename":"test\/jdk\/java\/nio\/Buffer\/LimitDirectMemoryNegativeTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,155 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8356678\n+ * @requires (os.family != \"windows\")\n+ * @summary Test Files operations when a path component is not a directory\n+ * @run junit NotADirectory\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.CopyOption;\n+import java.nio.file.Files;\n+import java.nio.file.FileSystemException;\n+import java.nio.file.NoSuchFileException;\n+import java.nio.file.Path;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.nio.file.attribute.PosixFileAttributes;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import static java.nio.file.StandardCopyOption.ATOMIC_MOVE;\n+import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class NotADirectory {\n+    private static final Path ROOT      = Path.of(\".\");\n+    private static final Path NOT_EXIST = ROOT.resolve(\"notExist\");\n+    private static final Path DIR       = ROOT.resolve(\"dir\");\n+    private static final Path FILE      = ROOT.resolve(\"file\");\n+    private static final Path BASE      = ROOT.resolve(\"foo\");\n+    private static final Path BOGUS     = BASE.resolve(\"bar\");\n+\n+    private static final Path[] SRCDST = new Path[] {\n+        NOT_EXIST, DIR, FILE\n+    };\n+\n+    private static final CopyOption[][] COPY_OPTIONS = new CopyOption[][] {\n+        new CopyOption[] {},\n+        new CopyOption[] {REPLACE_EXISTING},\n+    };\n+\n+    private static final CopyOption[][] MOVE_OPTIONS = new CopyOption[][] {\n+        new CopyOption[] {},\n+        new CopyOption[] {ATOMIC_MOVE},\n+        new CopyOption[] {REPLACE_EXISTING},\n+        new CopyOption[] {ATOMIC_MOVE, REPLACE_EXISTING},\n+    };\n+\n+    @BeforeAll\n+    public static void init() throws IOException {\n+        Files.createDirectory(DIR);\n+        Files.createFile(FILE);\n+        Files.createFile(BASE);\n+    }\n+\n+    @AfterAll\n+    public static void clean() throws IOException {\n+        Files.delete(DIR);\n+        Files.delete(FILE);\n+        Files.delete(BASE);\n+    }\n+\n+    private static Stream<Arguments> copyMoveParams(CopyOption[][] options) {\n+        List<Arguments> list = new ArrayList<Arguments>();\n+        for (CopyOption[] opts : options) {\n+            for (Path p : SRCDST) {\n+                list.add(Arguments.of(p, BOGUS, opts));\n+                list.add(Arguments.of(BOGUS, p, opts));\n+            }\n+        }\n+        return list.stream();\n+    }\n+\n+    private static Stream<Arguments> copyParams() {\n+        return copyMoveParams(COPY_OPTIONS);\n+    }\n+\n+    private static Stream<Arguments> moveParams() {\n+        return copyMoveParams(MOVE_OPTIONS);\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"copyParams\")\n+    public void copy(Path src, Path dst, CopyOption[] opts)\n+        throws IOException {\n+        Class exceptionClass = dst.equals(BOGUS) ?\n+            FileSystemException.class : NoSuchFileException.class;\n+        assertThrows(exceptionClass,\n+                     () -> Files.copy(src, dst, opts));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"moveParams\")\n+    public void move(Path src, Path dst, CopyOption[] opts)\n+        throws IOException {\n+        Class exceptionClass = src.equals(BOGUS) || dst.equals(BOGUS) ?\n+            FileSystemException.class : NoSuchFileException.class;\n+        assertThrows(exceptionClass,\n+                     () -> Files.move(src, dst, opts));\n+    }\n+\n+    @Test\n+    public void readBasic() throws IOException {\n+        assertThrows(NoSuchFileException.class,\n+                     () -> Files.readAttributes(BOGUS, BasicFileAttributes.class));\n+    }\n+\n+    @Test\n+    public void readPosix() throws IOException {\n+        assertThrows(NoSuchFileException.class,\n+                     () -> Files.readAttributes(BOGUS, PosixFileAttributes.class));\n+    }\n+\n+    @Test\n+    public void exists() throws IOException {\n+        assertFalse(Files.exists(BOGUS));\n+    }\n+\n+    @Test\n+    public void notExists() throws IOException {\n+        assertTrue(Files.notExists(BOGUS));\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/file\/Files\/NotADirectory.java","additions":155,"deletions":0,"binary":false,"changes":155,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,5 @@\n-import java.io.*;\n-import java.security.cert.*;\n+\/*\n+ * @test\n+ * @bug 6813340\n+ * @summary X509Factory should not depend on is.available()==0\n+ *\/\n@@ -27,1 +30,6 @@\n-class SlowStreamReader {\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.PipedInputStream;\n+import java.io.PipedOutputStream;\n+import java.security.cert.CertificateFactory;\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -29,0 +37,1 @@\n+public class SlowStream {\n@@ -30,6 +39,2 @@\n-        CertificateFactory factory = CertificateFactory.getInstance(\"X.509\");\n-        if (factory.generateCertificates(System.in).size() != 5) {\n-            throw new Exception(\"Not all certs read\");\n-        }\n-    }\n-}\n+        final var outputStream = new PipedOutputStream();\n+        final var inputStream = new PipedInputStream(outputStream);\n@@ -37,10 +42,37 @@\n-class SlowStreamWriter {\n-    public static void main(String[] args) throws Exception {\n-        for (int i=0; i<5; i++) {\n-            FileInputStream fin = new FileInputStream(new File(new File(\n-                    System.getProperty(\"test.src\", \".\"), \"openssl\"), \"pem\"));\n-            byte[] buffer = new byte[4096];\n-            while (true) {\n-                int len = fin.read(buffer);\n-                if (len < 0) break;\n-                System.out.write(buffer, 0, len);\n+        final var failed = new AtomicBoolean(false);\n+\n+        final var writer = new Thread(() -> {\n+            try {\n+                for (int i = 0; i < 5; i++) {\n+                    try (final var fin = new FileInputStream(new File(\n+                            new File(System.getProperty(\"test.src\", \".\"),\n+                                    \"openssl\"),\n+                            \"pem\"))) {\n+\n+                        fin.transferTo(outputStream);\n+\n+                        Thread.sleep(2000);\n+                    }\n+                }\n+                outputStream.close();\n+            } catch (final Exception e) {\n+                System.out.println(\"Writer Thread Error: \");\n+                e.printStackTrace(System.out);\n+                failed.set(true);\n+            }\n+        });\n+\n+        final var reader = new Thread(() -> {\n+            try {\n+                final var factory = CertificateFactory.getInstance(\"X.509\");\n+                final var numOfCerts = factory.generateCertificates(inputStream).size();\n+                if (numOfCerts != 5) {\n+                    throw new Exception(\n+                            String.format(\"Not all certs read. %d found 5 expected\", numOfCerts)\n+                    );\n+                }\n+                inputStream.close();\n+            } catch (final Exception e) {\n+                System.out.println(\"Reader Thread Error: \");\n+                e.printStackTrace(System.out);\n+                failed.set(true);\n@@ -48,1 +80,12 @@\n-            Thread.sleep(2000);\n+        });\n+\n+        writer.start();\n+        reader.start();\n+\n+        writer.join();\n+        reader.join();\n+\n+        if (failed.get()) {\n+            throw new RuntimeException(\n+                    \"The test failed, please check the reader and writer threads output\"\n+            );\n","filename":"test\/jdk\/java\/security\/cert\/CertificateFactory\/SlowStream.java","additions":64,"deletions":21,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -1,54 +0,0 @@\n-#\n-# Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6813340\n-# @summary X509Factory should not depend on is.available()==0\n-\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  echo \"TESTJAVA not set.  Test cannot execute.\"\n-  echo \"FAILED!!!\"\n-  exit 1\n-fi\n-if [ \"${COMPILEJAVA}\" = \"\" ]; then\n-  COMPILEJAVA=\"${TESTJAVA}\"\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-${COMPILEJAVA}${FS}bin${FS}javac ${TESTJAVACOPTS} ${TESTTOOLVMOPTS} -d . \\\n-        ${TESTSRC}${FS}SlowStream.java\n-${TESTJAVA}${FS}bin${FS}java ${TESTVMOPTS} ${TESTJAVAOPTS} -Dtest.src=${TESTSRC} SlowStreamWriter | \\\n-        ${TESTJAVA}${FS}bin${FS}java ${TESTVMOPTS} ${TESTJAVAOPTS} SlowStreamReader\n","filename":"test\/jdk\/java\/security\/cert\/CertificateFactory\/slowstream.sh","additions":0,"deletions":54,"binary":false,"changes":54,"status":"deleted"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug     8351230\n+ * @summary Test that List's new SequencedCollection methods are properly\n+ *          synchronized on a synchronized list.\n+ * @library \/test\/lib\n+ * @build   jdk.test.lib.Utils\n+ * @run     main SyncListBash f\n+ * @run     main SyncListBash r\n+ *\/\n+\n+import java.util.*;\n+import java.util.concurrent.*;\n+import java.util.stream.*;\n+\n+import jdk.test.lib.Utils;\n+\n+public class SyncListBash {\n+    static final int LOOP_COUNT = 1000;\n+    static final int NUM_WORKERS = 4;\n+    static List<Integer> list;\n+\n+    \/**\n+     * Test for race conditions with synchronized lists. Several worker threads\n+     * add and remove elements from the front of the list, while the main thread\n+     * gets the last element. The last element should never change. However, if\n+     * the list isn't properly synchronized, getLast() might return the wrong\n+     * element or throw IndexOutOfBoundsException.\n+     *\n+     * On an unsynchronized list, this fails 200-500 out of 1000 times, so this\n+     * seems like a fairly reliable way to test for a race condition.\n+     *\n+     * @param args there must be one arg, \"f\" or \"r\", which determines whether the\n+     *             forward (original) list or reversed view of the list is tested\n+     * @throws InterruptedException if the main thread is interrupted\n+     *\/\n+    public static void main(String[] args) throws InterruptedException {\n+        int wrongElement = 0;\n+        int numExceptions = 0;\n+\n+        boolean reversed = switch (args[0]) {\n+            case \"f\" -> false;\n+            case \"r\" -> true;\n+            default -> throw new IllegalArgumentException();\n+        };\n+\n+        list = IntStream.range(0, 10)\n+                        .boxed()\n+                        .collect(Collectors.toCollection(ArrayList::new));\n+        list = Collections.synchronizedList(list);\n+        if (reversed)\n+            list = list.reversed();\n+        Integer expectedLast = list.getLast();\n+\n+        ExecutorService pool = Executors.newFixedThreadPool(NUM_WORKERS);\n+        for (int i = 0; i < NUM_WORKERS; i++)\n+            pool.submit(() -> {\n+                while (! Thread.currentThread().isInterrupted()) {\n+                    list.add(0, -1);\n+                    list.remove(0);\n+                }\n+            });\n+\n+        for (int i = 0; i < LOOP_COUNT; i++) {\n+            Thread.sleep(1L);\n+            try {\n+                Integer actualLast = list.getLast();\n+                if (! expectedLast.equals(actualLast)) {\n+                    ++wrongElement;\n+                }\n+            } catch (IndexOutOfBoundsException ioobe) {\n+                ++numExceptions;\n+            }\n+        }\n+\n+        pool.shutdownNow();\n+        pool.awaitTermination(Utils.adjustTimeout(60L), TimeUnit.SECONDS);\n+\n+        System.out.printf(\"LOOP_COUNT=%d wrongElement=%d numExceptions=%d%n\",\n+            LOOP_COUNT, wrongElement, numExceptions);\n+        if (wrongElement == 0 && numExceptions == 0) {\n+            System.out.println(\"Test passed.\");\n+        } else {\n+            throw new AssertionError(\"TEST FAILED!\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/Collections\/SyncListBash.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,5 @@\n-    static SequencedCollection<String> ulist(List<String> list) {\n+    static List<String> sylist(List<String> list) {\n+        return Collections.synchronizedList(list);\n+    }\n+\n+    static List<String> ulist(List<String> list) {\n@@ -119,0 +123,1 @@\n+            new Object[] { \"SynchList\", sylist(new ArrayList<>(ORIGINAL)), ORIGINAL },\n@@ -142,0 +147,1 @@\n+            new Object[] { \"SynchList\", sylist(new ArrayList<>()), List.of() },\n@@ -158,1 +164,2 @@\n-            new Object[] { \"SimpleList\", new SimpleList<>(ORIGINAL), ORIGINAL }\n+            new Object[] { \"SimpleList\", new SimpleList<>(ORIGINAL), ORIGINAL },\n+            new Object[] { \"SynchList\", sylist(new ArrayList<>(ORIGINAL)), ORIGINAL }\n@@ -181,0 +188,1 @@\n+            new Object[] { \"SynchList\", sylist(new ArrayList<>(ORIGINAL)), ORIGINAL },\n@@ -197,0 +205,1 @@\n+            new Object[] { \"SynchList\", sylist(new ArrayList<>()), List.of() },\n@@ -212,0 +221,1 @@\n+            new Object[] { \"SynchList\", sylist(new ArrayList<>(ORIGINAL)), ORIGINAL },\n@@ -229,0 +239,1 @@\n+            new Object[] { \"SynchList\", sylist(new ArrayList<>(ORIGINAL)).reversed() },\n@@ -246,1 +257,2 @@\n-            new Object[] { \"SimpleSortedSet\", new SimpleSortedSet<>(ORIGINAL) }\n+            new Object[] { \"SimpleSortedSet\", new SimpleSortedSet<>(ORIGINAL) },\n+            new Object[] { \"SynchList\", sylist(new ArrayList<>(ORIGINAL)) }\n@@ -285,0 +297,14 @@\n+    \/\/ These Lists don't all implement RandomAccess; they're Lists that should be\n+    \/\/ tested for proper propagation of the RandomAccess markers.\n+    @DataProvider(name=\"randomAccessLists\")\n+    public Iterator<Object[]> randomAccessLists() {\n+        return Arrays.asList(\n+            new Object[] { \"ArrayList\", new ArrayList<>(ORIGINAL) },\n+            new Object[] { \"AsList\", Arrays.asList(ORIGINAL.toArray()) },\n+            new Object[] { \"COWAL\", new CopyOnWriteArrayList<>(ORIGINAL) },\n+            new Object[] { \"LinkedList\", new LinkedList<>(ORIGINAL) },\n+            new Object[] { \"ListOf\", ORIGINAL },\n+            new Object[] { \"SimpleList\", new SimpleList<>(ORIGINAL) }\n+        ).iterator();\n+    }\n+\n@@ -857,0 +883,18 @@\n+\n+    @Test\n+    public void testSynchListReversedAlwaysReturnsSameObject() {\n+        var list = sylist(ORIGINAL);\n+        var rev1 = list.reversed();\n+        var rev2 = list.reversed();\n+        assertSame(rev1, rev2);\n+    }\n+\n+    @Test(dataProvider=\"randomAccessLists\")\n+    public void testRandomAccess(String label, List<String> list) {\n+        assertEquals(list.reversed() instanceof RandomAccess, list instanceof RandomAccess);\n+\n+        \/\/ Collections.synchronizedList() preservation of RandomAccess is somewhat\n+        \/\/ tested by java\/util\/Collection\/MOAT.java but it might not have all these cases.\n+        assertEquals(sylist(list) instanceof RandomAccess, list instanceof RandomAccess);\n+        assertEquals(sylist(list).reversed() instanceof RandomAccess, sylist(list) instanceof RandomAccess);\n+    }\n","filename":"test\/jdk\/java\/util\/SequencedCollection\/Basic.java","additions":48,"deletions":4,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8353888\n+ * @library \/test\/lib \/test\/jdk\/security\/unsignedjce\n+ * @build java.base\/javax.crypto.ProviderVerifier\n+ * @run main\/othervm KDFDelayedProviderException\n+ * @summary check delayed provider selection exception messages\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+\n+import javax.crypto.KDF;\n+import javax.crypto.KDFParameters;\n+import javax.crypto.KDFSpi;\n+import javax.crypto.SecretKey;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.Provider;\n+import java.security.Security;\n+import java.security.spec.AlgorithmParameterSpec;\n+import java.security.spec.NamedParameterSpec;\n+\n+public class KDFDelayedProviderException {\n+    public static void main(String[] args) throws Exception {\n+\n+        Security.addProvider(new P1()); \/\/ only accepts NamedParameterSpec.ED25519\n+        Security.addProvider(new P2()); \/\/ only accepts NamedParameterSpec.ED448\n+\n+        checkMessage(\"No provider supports this input\",\n+                () -> KDF.getInstance(\"K\").deriveData(NamedParameterSpec.X25519));\n+\n+        checkMessage(\"The specified P1 provider does not support this input\",\n+                () -> KDF.getInstance(\"K\", \"P1\").deriveData(NamedParameterSpec.ED448));\n+\n+        \/\/ ED448 is supported by one provider\n+        KDF.getInstance(\"K\").deriveData(NamedParameterSpec.ED448);\n+\n+        \/\/ After P1 has been selected, ED448 is no longer supported\n+        var k = KDF.getInstance(\"K\");\n+        k.deriveData(NamedParameterSpec.ED25519);\n+        checkMessage(\"The previously selected P1 provider does not support this input\",\n+                () -> k.deriveData(NamedParameterSpec.ED448));\n+\n+    }\n+\n+    public static void checkMessage(String msg, Asserts.TestMethod testMethod) {\n+        var exc = Asserts.assertThrows(InvalidAlgorithmParameterException.class, testMethod);\n+        Asserts.assertEquals(msg, exc.getMessage());\n+    }\n+\n+    public static class P1 extends Provider {\n+        public P1() {\n+            super(\"P1\", \"1\", \"\");\n+            put(\"KDF.K\", K1.class.getName());\n+        }\n+    }\n+\n+    public static class P2 extends Provider {\n+        public P2() {\n+            super(\"P2\", \"1\", \"\");\n+            put(\"KDF.K\", K2.class.getName());\n+        }\n+    }\n+\n+    public static class K1 extends KDFSpi {\n+        public K1(KDFParameters p) throws InvalidAlgorithmParameterException {\n+            super(p);\n+        }\n+        protected byte[] engineDeriveData(AlgorithmParameterSpec derivationSpec)\n+                throws InvalidAlgorithmParameterException {\n+            if (derivationSpec != NamedParameterSpec.ED25519) {\n+                throw new InvalidAlgorithmParameterException(\"Not Ed25519\");\n+            }\n+            return new byte[0];\n+        }\n+        protected KDFParameters engineGetParameters() {\n+            return null;\n+        }\n+        protected SecretKey engineDeriveKey(String alg, AlgorithmParameterSpec derivationSpec) {\n+            return null;\n+        }\n+    }\n+\n+    public static class K2 extends KDFSpi {\n+        public K2(KDFParameters p) throws InvalidAlgorithmParameterException {\n+            super(p);\n+        }\n+        protected byte[] engineDeriveData(AlgorithmParameterSpec derivationSpec)\n+                throws InvalidAlgorithmParameterException {\n+            if (derivationSpec != NamedParameterSpec.ED448) {\n+                throw new InvalidAlgorithmParameterException(\"Not Ed448\");\n+            }\n+            return new byte[0];\n+        }\n+        protected KDFParameters engineGetParameters() {\n+            return null;\n+        }\n+        protected SecretKey engineDeriveKey(String alg, AlgorithmParameterSpec derivationSpec) {\n+            return null;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/crypto\/KDF\/KDFDelayedProviderException.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/javax\/crypto\/KDF\/KDFDelayedProviderSyncTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/javax\/crypto\/KDF\/KDFDelayedProviderTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- * @enablePreview\n@@ -130,1 +129,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/javax\/crypto\/KDF\/KDFDelayedProviderThreadingTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -118,2 +118,7 @@\n-        if (file.exists()) {\n-            file.delete();\n+        if (file.exists() && !file.delete()) {\n+            \/\/ if the password file exists but is not deleted, try to make it\n+            \/\/ writable then try again to remove it\n+            if (!file.canWrite() && file.setWritable(true, true)) {\n+                if (!file.delete())\n+                    System.err.println(\"WARNING: Password file not deleted\");\n+            }\n","filename":"test\/jdk\/javax\/management\/security\/HashedPasswordFileTest.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,3 @@\n+import jdk.incubator.vector.VectorSpecies;\n+import org.testng.annotations.DataProvider;\n+\n@@ -35,0 +38,4 @@\n+import java.util.function.IntUnaryOperator;\n+import java.util.function.Supplier;\n+import java.util.function.ToIntFunction;\n+import java.util.stream.IntStream;\n@@ -39,0 +46,2 @@\n+    static final ValueLayout.OfInt SHUFFLE_ELEMENT_LAYOUT = ValueLayout.JAVA_INT.withByteAlignment(1);\n+\n@@ -42,12 +51,42 @@\n-    static final List<IntFunction<ByteBuffer>> BYTE_BUFFER_GENERATORS = List.of(\n-            withToString(\"HB:RW:NE\", (int s) ->\n-                    ByteBuffer.allocate(s)\n-                        .order(ByteOrder.nativeOrder())),\n-            withToString(\"DB:RW:NE\", (int s) ->\n-                    ByteBuffer.allocateDirect(s)\n-                        .order(ByteOrder.nativeOrder())),\n-            withToString(\"MS:RW:NE\", (int s) ->\n-                    Arena.ofAuto().allocate(s)\n-                        .asByteBuffer()\n-                        .order(ByteOrder.nativeOrder())\n-            )\n+    static final int SHUFFLE_BUFFER_REPS = Integer.getInteger(\"jdk.incubator.vector.test.buffer-vectors\", 25000 \/ 256);\n+\n+    static final List<IntFunction<int[]>> SHUFFLE_INT_GENERATORS = List.of(\n+            withToString(\"int[i * 5]\", (int s) -> {\n+                return fill(s * SHUFFLE_BUFFER_REPS,\n+                        i -> (int)(i * 5));\n+            }),\n+            withToString(\"int[i + 1]\", (int s) -> {\n+                return fill(s * SHUFFLE_BUFFER_REPS,\n+                        i -> (((int)(i + 1) == 0) ? 1 : (int)(i + 1)));\n+            })\n+    );\n+\n+    static final List<IntFunction<Integer>> SHUFFLE_INDEX_GENERATORS = List.of(\n+            withToString(\"-1\", (int l) -> {\n+                return -1;\n+            }),\n+            withToString(\"l\", (int l) -> {\n+                return l;\n+            }),\n+            withToString(\"l - 1\", (int l) -> {\n+                return l - 1;\n+            }),\n+            withToString(\"l + 1\", (int l) -> {\n+                return l + 1;\n+            })\n+    );\n+\n+    \/\/ Relative to byte[] array.length or MemorySegment.byteSize()\n+    static final List<IntFunction<Integer>> SHUFFLE_BYTE_INDEX_GENERATORS = List.of(\n+            withToString(\"-1\", (int l) -> {\n+                return -1;\n+            }),\n+            withToString(\"l\", (int l) -> {\n+                return l;\n+            }),\n+            withToString(\"l - 1\", (int l) -> {\n+                return l - 1;\n+            }),\n+            withToString(\"l + 1\", (int l) -> {\n+                return l + 1;\n+            })\n@@ -56,1 +95,41 @@\n-    static final List<IntFunction<MemorySegment>> MEMORY_SEGMENT_GENERATORS = List.of(\n+    @DataProvider\n+    public Object[][] shuffleIntProvider() {\n+        return SHUFFLE_INT_GENERATORS.stream()\n+                .map(f -> new Object[]{f})\n+                .toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] shuffleIntProviderForIOOBE() {\n+        var f = SHUFFLE_INT_GENERATORS.get(0);\n+        return SHUFFLE_INDEX_GENERATORS.stream()\n+                .map(fi -> {\n+                    return new Object[] {f, fi};\n+                })\n+                .toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] shuffleIntMemorySegmentProvider() {\n+        return SHUFFLE_INT_GENERATORS.stream().\n+                flatMap(fa -> SHUFFLE_MEMORY_SEGMENT_GENERATORS.stream().\n+                        flatMap(fb -> BYTE_ORDER_VALUES.stream().map(bo -> {\n+                            return new Object[]{fa, fb, bo};\n+                        }))).\n+                toArray(Object[][]::new);\n+    }\n+\n+    @DataProvider\n+    public Object[][] shuffleIntByteProviderForIOOBE() {\n+        var f = SHUFFLE_INT_GENERATORS.get(0);\n+        return SHUFFLE_BYTE_INDEX_GENERATORS.stream().map(fi -> {\n+                    return new Object[] {f, fi};\n+                }).toArray(Object[][]::new);\n+    }\n+\n+    static MemorySegment toShuffleSegment(VectorSpecies<?> vsp, int[] a, IntFunction<MemorySegment> fb) {\n+        MemorySegment ms = fb.apply(a.length * 4);\n+        return ms.copyFrom(MemorySegment.ofArray(a));\n+    }\n+\n+    private static final List<IntFunction<MemorySegment>> SHARED_MEMORY_SEGMENT_GENERATORS = List.of(\n@@ -76,8 +155,0 @@\n-            withToString(\"HMS:long[]\", (int s) -> {\n-                long[] b = new long[s \/ Long.BYTES];\n-                return MemorySegment.ofArray(b);\n-            }),\n-            withToString(\"HMS:double[]\", (int s) -> {\n-                double[] b = new double[s \/ Double.BYTES];\n-                return MemorySegment.ofArray(b);\n-            }),\n@@ -103,5 +174,0 @@\n-            }),\n-            \/\/ Slice\n-            withToString(\"HMS:long[].asSlice\", (int s) -> {\n-                long[] b = new long[s \/ Long.BYTES + 1];\n-                return MemorySegment.ofArray(b).asSlice(Long.BYTES);\n@@ -111,0 +177,47 @@\n+\n+    \/\/These tests are adjusted to ensure we allocate enough memory for ints because we're passing\n+    \/\/a memory segment size of an int array in bytes, but it's subject to integer division of a longer\n+    \/\/array element.\n+    static final List<IntFunction<MemorySegment>> SHUFFLE_MEMORY_SEGMENT_GENERATORS = Stream.concat(\n+            SHARED_MEMORY_SEGMENT_GENERATORS.stream(),\n+            Stream.of(\n+                withToString(\"HMS:long[]:shuffle\", (int s) -> {\n+                    long[] b = new long[(s + Long.BYTES- 1) \/ Long.BYTES];\n+                    return MemorySegment.ofArray(b);\n+                }),\n+\n+                withToString(\"HMS:double[]:shuffle\", (int s) -> {\n+                    double[] b = new double[(s  + Double.BYTES - 1)\/ Double.BYTES];\n+                    return MemorySegment.ofArray(b);\n+                }),\n+                \/\/ Slice\n+                withToString(\"HMS:long[].asSlice:shuffle\", (int s) -> {\n+                    long[] b = new long[(s + Long.BYTES - 1) \/ Long.BYTES + 1];\n+                    return MemorySegment.ofArray(b).asSlice(Long.BYTES);\n+                })\n+            )\n+    ).toList();\n+\n+    static final List<IntFunction<MemorySegment>> MEMORY_SEGMENT_GENERATORS = Stream.concat(\n+            SHARED_MEMORY_SEGMENT_GENERATORS.stream(),\n+            Stream.of(\n+                    withToString(\"HMS:long[]\", (int s) -> {\n+                        long[] b = new long[s \/ Long.BYTES];\n+                        return MemorySegment.ofArray(b);\n+                    }),\n+                    withToString(\"HMS:double[]\", (int s) -> {\n+                        double[] b = new double[s \/ Double.BYTES];\n+                        return MemorySegment.ofArray(b);\n+                    }),\n+                    \/\/ Slice\n+                    withToString(\"HMS:long[].asSlice\", (int s) -> {\n+                        long[] b = new long[s \/ Long.BYTES + 1];\n+                        return MemorySegment.ofArray(b).asSlice(Long.BYTES);\n+                    })\n+            )\n+    ).toList();\n+\n+    private static final int[] fill(int s, IntUnaryOperator f) {\n+        return IntStream.range(0, s).map(f).toArray();\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorLoadStoreTest.java","additions":140,"deletions":27,"binary":false,"changes":167,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,2 +25,0 @@\n-import java.nio.ByteBuffer;\n-import java.nio.ByteOrder;\n@@ -28,2 +26,0 @@\n-import java.util.Collection;\n-import java.util.List;\n@@ -31,1 +27,0 @@\n-import java.util.Set;\n@@ -36,0 +31,1 @@\n+import java.util.List;\n@@ -38,0 +34,1 @@\n+import jdk.incubator.vector.VectorSpecies;\n@@ -230,0 +227,14 @@\n+\n+    \/\/ Non-optimized test partial wrap derived from the Spec:\n+    \/\/ Validation function for lane indexes which may be out of the valid range of [0..VLENGTH-1].\n+    \/\/ The index is forced into this range by adding or subtracting a suitable multiple of VLENGTH.\n+    \/\/ Specifically, the index is reduced into the required range by computing the value of length-floor, where\n+    \/\/ floor=vectorSpecies().loopBound(length) is the next lower multiple of VLENGTH.\n+    \/\/ As long as VLENGTH is a power of two, then the reduced index also equal to index & (VLENGTH - 1).\n+    static int testPartiallyWrapIndex(VectorSpecies<?> vsp, int index) {\n+        if (index >= 0 && index < vsp.length()) {\n+            return index;\n+        }\n+        int wrapped = Math.floorMod(index, vsp.length());\n+        return wrapped - vsp.length();\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorTest.java","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Byte> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Byte> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Byte> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Byte> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Byte> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Byte> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Byte> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Byte> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Byte> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Byte> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Byte> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Byte> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Byte> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Byte> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Byte> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Byte> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Byte> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Byte> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Byte> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Byte> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Byte> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Byte> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Byte> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Byte> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -259,0 +259,20 @@\n+    @DontInline\n+    static VectorShuffle<Byte> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Byte> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Byte> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Byte> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -692,6 +712,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -699,2 +717,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -702,1 +723,0 @@\n-    }\n@@ -704,0 +724,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Byte> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Byte> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Byte> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Byte> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Double> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Double> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Double> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Double> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Double> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Double> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Double> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Double> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Double> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Double> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Double> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Double> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Double> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Double> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Double> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Double> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Double> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Double> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Double> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Double> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Double> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Double> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Double> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Double> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -259,0 +259,20 @@\n+    @DontInline\n+    static VectorShuffle<Double> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Double> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Double> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Double> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -692,6 +712,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -699,2 +717,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -702,1 +723,0 @@\n-    }\n@@ -704,0 +724,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Double> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Double> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Double> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Double> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Float> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Float> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Float> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Float> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Float> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Float> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Float> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Float> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Float> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Float> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Float> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Float> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Float> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Float> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Float> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Float> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Float> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Float> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Float> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Float> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Float> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Float> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Float> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Float> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -259,0 +259,20 @@\n+    @DontInline\n+    static VectorShuffle<Float> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Float> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Float> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Float> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -692,6 +712,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -699,2 +717,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -702,1 +723,0 @@\n-    }\n@@ -704,0 +724,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Float> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Float> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Float> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Float> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Integer> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Integer> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Integer> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Integer> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Integer> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Integer> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Integer> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Integer> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Integer> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Integer> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Integer> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Integer> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Integer> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Integer> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Integer> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Integer> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Integer> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Integer> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Integer> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Integer> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Integer> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Integer> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Integer> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Integer> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -259,0 +259,20 @@\n+    @DontInline\n+    static VectorShuffle<Integer> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Integer> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Integer> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Integer> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -692,6 +712,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -699,2 +717,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -702,1 +723,0 @@\n-    }\n@@ -704,0 +724,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Integer> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Integer> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Integer> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Integer> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Long> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Long> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Long> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Long> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Long> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Long> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Long> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Long> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Long> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Long> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Long> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Long> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Long> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Long> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Long> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Long> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Long> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Long> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Long> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Long> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Long> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Long> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Long> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Long> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -259,0 +259,20 @@\n+    @DontInline\n+    static VectorShuffle<Long> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Long> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Long> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Long> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -692,6 +712,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -699,2 +717,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -702,1 +723,0 @@\n-    }\n@@ -704,0 +724,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Long> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Long> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Long> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Long> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Short> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Short> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Short> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Short> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Short> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Short> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Short> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Short> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Short> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Short> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Short> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Short> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Short> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Short> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Short> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Short> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Short> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Short> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,0 +252,20 @@\n+    @DontInline\n+    static VectorShuffle<Short> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Short> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Short> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Short> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -685,6 +705,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -692,2 +710,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -695,1 +716,0 @@\n-    }\n@@ -697,0 +717,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Short> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Short> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -259,0 +259,20 @@\n+    @DontInline\n+    static VectorShuffle<Short> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<Short> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<Short> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<Short> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -692,6 +712,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -699,2 +717,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -702,1 +723,0 @@\n-    }\n@@ -704,0 +724,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<Short> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<Short> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<Short> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<Short> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -272,0 +272,20 @@\n+    @DontInline\n+    static VectorShuffle<$Boxtype$> shuffleFromArray(int[] a, int i) {\n+        return SPECIES.shuffleFromArray(a, i);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoArray(VectorShuffle<$Boxtype$> s, int[] a, int i) {\n+        s.intoArray(a, i);\n+    }\n+\n+    @DontInline\n+    static VectorShuffle<$Boxtype$> shuffleFromMemorySegment(MemorySegment mem, int i, ByteOrder bo) {\n+        return VectorShuffle.fromMemorySegment(SPECIES, mem, i, bo);\n+    }\n+\n+    @DontInline\n+    static void shuffleIntoMemorySegment(VectorShuffle<$Boxtype$> s, MemorySegment mem, int i, ByteOrder bo) {\n+        s.intoMemorySegment(mem, i, bo);\n+    }\n+\n@@ -705,6 +725,4 @@\n-    @Test\n-    static void loadStoreShuffle() {\n-        IntUnaryOperator fn = a -> a + 5;\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            var shuffle = VectorShuffle.fromOp(SPECIES, fn);\n-            int [] r = shuffle.toArray();\n+   @Test(dataProvider = \"shuffleIntProvider\")\n+   static void loadStoreShuffleArray(IntFunction<int[]> fa) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n@@ -712,2 +730,5 @@\n-            int [] a = expectedShuffle(SPECIES.length(), fn);\n-            Assert.assertEquals(r, a);\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<$Boxtype$> shuffle = VectorShuffle.fromArray(SPECIES, a, i);\n+               shuffle.intoArray(r, i);\n+           }\n@@ -715,1 +736,0 @@\n-    }\n@@ -717,0 +737,143 @@\n+       for (int i = 0; i < a.length; i++) {\n+          Assert.assertEquals(testPartiallyWrapIndex(SPECIES, a[i]), r[i]);\n+       }\n+\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void storeShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<$Boxtype$> shuffle = shuffleFromArray(a, i);\n+               shuffleIntoArray(shuffle, r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           VectorShuffle<$Boxtype$> shuffle = shuffleFromArray(a, index);\n+           shuffleIntoArray(shuffle, r, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntProviderForIOOBE\")\n+   static void loadShuffleArrayIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       int[] a = fa.apply(SPECIES.length());\n+       int[] r = new int[a.length];\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < a.length; i += SPECIES.length()) {\n+               VectorShuffle<$Boxtype$> shuffle = shuffleFromArray(a, i);\n+               shuffle.intoArray(r, i);\n+           }\n+       }\n+\n+       int index = fi.apply(a.length);\n+       boolean shouldFail = isIndexOutOfBounds(SPECIES.length(), index, a.length);\n+       try {\n+           shuffleFromArray(a, index);\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntMemorySegmentProvider\")\n+   static void loadStoreShuffleMemorySegment(IntFunction<int[]> fa,\n+                                      IntFunction<MemorySegment> fb,\n+                                      ByteOrder bo) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), fb);\n+       MemorySegment r = fb.apply((int) a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4; \/\/An integer for every lane is read out. So 4 bytes per lane\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<$Boxtype$> shuffle = VectorShuffle.fromMemorySegment(SPECIES, a, i, bo);\n+               shuffle.intoMemorySegment(r, i, bo);\n+           }\n+       }\n+\n+       for (int i = 0; i < l \/ 4; i++) {\n+           int ai = a.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           int ri = r.getAtIndex(ValueLayout.JAVA_INT_UNALIGNED.withOrder(bo), i);\n+           Assert.assertEquals(testPartiallyWrapIndex(SPECIES, ai), ri);\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleLoadMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<$Boxtype$> shuffle = shuffleFromMemorySegment(a, i, ByteOrder.nativeOrder());\n+               shuffle.intoMemorySegment(r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           shuffleFromMemorySegment(a, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n+\n+   @Test(dataProvider = \"shuffleIntByteProviderForIOOBE\")\n+   static void shuffleStoreMemorySegmentIOOBE(IntFunction<int[]> fa, IntFunction<Integer> fi) {\n+       MemorySegment a = toShuffleSegment(SPECIES, fa.apply(SPECIES.length()), i -> Arena.ofAuto().allocate(i));\n+       MemorySegment r = Arena.ofAuto().allocate(a.byteSize());\n+\n+       int l = (int) a.byteSize();\n+       int s = SPECIES.length() * 4;\n+\n+       for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+           for (int i = 0; i < l; i += s) {\n+               VectorShuffle<$Boxtype$> shuffle =\n+                       VectorShuffle.fromMemorySegment(SPECIES, a, i, ByteOrder.nativeOrder());\n+               shuffleIntoMemorySegment(shuffle, r, i, ByteOrder.nativeOrder());\n+           }\n+       }\n+\n+       int index = fi.apply((int) a.byteSize());\n+       boolean shouldFail = isIndexOutOfBounds(s, index, (int) a.byteSize());\n+       try {\n+           VectorShuffle<$Boxtype$> shuffle =\n+                   VectorShuffle.fromMemorySegment(SPECIES, a, 0, ByteOrder.nativeOrder());\n+           shuffleIntoMemorySegment(shuffle, r, index, ByteOrder.nativeOrder());\n+           if (shouldFail) {\n+               Assert.fail(\"Failed to throw IndexOutOfBoundsException\");\n+           }\n+       } catch (IndexOutOfBoundsException e) {\n+           if (!shouldFail) {\n+               Assert.fail(\"Unexpected IndexOutOfBoundsException\");\n+           }\n+       }\n+   }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template","additions":173,"deletions":10,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,1 @@\n+                commandList.add(\"help\");\n@@ -57,0 +58,1 @@\n+                commandList.add(\"*.jfr\");\n@@ -58,1 +60,0 @@\n-            commandList.add(\"*.jfr\");\n","filename":"test\/jdk\/jdk\/jfr\/event\/os\/TestProcessStart.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KDF\/TestHKDF.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8228969 8244087 8255266 8302182 8331864\n+ * @bug 8228969 8244087 8255266 8302182 8331864 8357062\n","filename":"test\/jdk\/sun\/security\/util\/RegisteredDomain\/ParseNames.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -75,3 +75,3 @@\n-ar.com                  ar.com          null\n-site.ar.com             ar.com          site.ar.com\n-w.site.ar.com           ar.com          site.ar.com\n+us.com                  us.com          null\n+site.us.com             us.com          site.us.com\n+w.site.us.com           us.com          site.us.com\n@@ -112,0 +112,4 @@\n+# kr\n+ai.kr                   ai.kr           null\n+foo.ai.kr               ai.kr           foo.ai.kr\n+\n@@ -154,0 +158,1 @@\n+kids.us                 us              kids.us\n","filename":"test\/jdk\/sun\/security\/util\/RegisteredDomain\/tests.dat","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1,8476 +0,0 @@\n-#\n-#\n-#\n-# List of locale data for locale-data test\n-#\n-\n-# bug #4052473\n-LocaleNames\/en\/es=Spanish\n-LocaleNames\/\/es=Spanish\n-\n-# bug #4052679\n-LocaleNames\/fr\/fr=fran\\u00e7ais\n-\n-# bug #4055602, 4290801, 8013836\n-CurrencyNames\/pt_BR\/BRL=R$\n-FormatData\/pt_BR\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/pt_BR\/NumberPatterns\/1=R$ #,##0.##;-R$ #,##0.## # Changed; see bug 4122840\n-FormatData\/pt_BR\/NumberPatterns\/2=#,##0%\n-FormatData\/pt_BR\/TimePatterns\/0=HH'h'mm'min'ss's' z\n-FormatData\/pt_BR\/TimePatterns\/1=H'h'm'min's's' z\n-FormatData\/pt_BR\/TimePatterns\/2=HH:mm:ss\n-FormatData\/pt_BR\/TimePatterns\/3=HH:mm\n-FormatData\/pt_BR\/DatePatterns\/0=EEEE, d' de 'MMMM' de 'yyyy\n-FormatData\/pt_BR\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/pt_BR\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/pt_BR\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/pt_BR\/DateTimePatterns\/0={1} {0}\n-FormatData\/pt_BR\/NumberElements\/0=,\n-FormatData\/pt_BR\/NumberElements\/1=.\n-FormatData\/pt_BR\/NumberElements\/2=;\n-FormatData\/pt_BR\/DayAbbreviations\/0=Dom\n-FormatData\/pt_BR\/DayAbbreviations\/1=Seg\n-FormatData\/pt_BR\/DayAbbreviations\/2=Ter\n-FormatData\/pt_BR\/DayNames\/0=Domingo\n-FormatData\/pt_BR\/DayNames\/1=Segunda-feira\n-FormatData\/pt_BR\/DayNames\/2=Ter\\u00e7a-feira\n-CalendarData\/pt_BR\/firstDayOfWeek=1\n-CalendarData\/pt_BR\/minimalDaysInFirstWeek=1\n-FormatData\/pt_BR\/MonthNames\/0=Janeiro\n-FormatData\/pt_BR\/MonthNames\/1=Fevereiro\n-FormatData\/pt_BR\/MonthNames\/2=Mar\\u00e7o\n-LocaleNames\/pt_BR\/pt=portugu\\u00eas\n-LocaleNames\/pt_BR\/PT=Portugal\n-LocaleNames\/pt_BR\/BR=Brasil\n-\n-# bug 6414459: Wrong first day of week for Croatian locale\n-CalendarData\/hr\/firstDayOfWeek=2\n-\n-# bug #4066550\n-FormatData\/ja\/Eras\/0=\\u7d00\\u5143\\u524d\n-FormatData\/ja\/Eras\/1=\\u897f\\u66a6\n-\n-# bug #4067619\n-LocaleNames\/\/LT=Lithuania\n-LocaleNames\/en\/LT=Lithuania\n-\n-# bug #4068012, 4290801, 4942982\n-CurrencyNames\/ru_RU\/RUB=\\u0440\\u0443\\u0431.\n-FormatData\/ru_RU\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/ru_RU\/NumberPatterns\/1=#,##0.##'\\u0440.';-#,##0.##'\\u0440.' # Changed; see bug 4122840\n-FormatData\/ru_RU\/NumberPatterns\/2=#,##0%\n-\n-# bug #4070174\n-FormatData\/en_CA\/NumberElements\/1=,\n-FormatData\/en_CA\/NumberElements\/2=;\n-\n-# bug #4070452\n-FormatData\/de_DE\/DatePatterns\/3=dd.MM.yy\n-\n-# bugs #4070178, 4070450, 4070695, 4070725, 6386647\n-FormatData\/en_GB\/TimePatterns\/0=HH:mm:ss 'o''clock' z\n-FormatData\/en_GB\/TimePatterns\/1=HH:mm:ss z\n-FormatData\/en_GB\/TimePatterns\/2=HH:mm:ss\n-FormatData\/en_GB\/TimePatterns\/3=HH:mm\n-FormatData\/en_GB\/DatePatterns\/0=EEEE, d MMMM yyyy\n-FormatData\/en_GB\/DatePatterns\/1=dd MMMM yyyy\n-FormatData\/en_GB\/DatePatterns\/2=dd-MMM-yyyy\n-FormatData\/en_GB\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/en_GB\/DateTimePatterns\/0={1} {0}\n-\n-# bug #4070795\n-FormatData\/fr_FR\/DatePatterns\/0=EEEE d MMMM yyyy\n-\n-# bug #4071003\n-# FormatData\/fr_CA\/DatePatterns\/0=d MMMM, yyyy # See bug 4103861\n-# FormatData\/fr_CA\/DatePatterns\/1=d MMMM, yyyy # See bug 4103861\n-\n-# bug #4071183\n-# FormatData\/it_IT\/NumberPatterns\/1='L.' #,##0;-'L.' #,##0 # Changed; see bug 4122840\n-\n-# bug #4071782\n-FormatData\/ru\/DayAbbreviations\/0=\\u0412\\u0441\n-FormatData\/ru\/DayAbbreviations\/1=\\u041f\\u043d\n-FormatData\/ru\/DayAbbreviations\/2=\\u0412\\u0442\n-FormatData\/ru\/DayAbbreviations\/3=\\u0421\\u0440\n-FormatData\/ru\/DayAbbreviations\/4=\\u0427\\u0442\n-FormatData\/ru\/DayAbbreviations\/5=\\u041f\\u0442\n-FormatData\/ru\/DayAbbreviations\/6=\\u0421\\u0431\n-\n-# bug #4072013 - obsoleted by 6386647: Full date format in DateFormat does not include day of the week for UK locale\n-#FormatData\/en_GB\/DatePatterns\/0=dd MMMM yyyy\n-\n-# bug #4072388\n-LocaleNames\/cs\/cs=\\u010de\\u0161tina\n-\n-# bug #4072773\n-FormatData\/ja\/DatePatterns\/2=yyyy\/MM\/dd\n-FormatData\/ja\/DatePatterns\/3=yy\/MM\/dd\n-\n-# bug #4075404, 4290801, 4942982\n-CurrencyNames\/ru_RU\/RUB=\\u0440\\u0443\\u0431.\n-FormatData\/ru_RU\/TimePatterns\/0=H:mm:ss z\n-FormatData\/ru_RU\/TimePatterns\/1=H:mm:ss z\n-FormatData\/ru_RU\/TimePatterns\/2=H:mm:ss\n-FormatData\/ru_RU\/TimePatterns\/3=H:mm\n-FormatData\/ru_RU\/DatePatterns\/0=d MMMM yyyy '\\u0433.'\n-FormatData\/ru_RU\/DatePatterns\/1=d MMMM yyyy '\\u0433.'\n-FormatData\/ru_RU\/DatePatterns\/2=dd.MM.yyyy\n-FormatData\/ru_RU\/DatePatterns\/3=dd.MM.yy\n-FormatData\/ru_RU\/DateTimePatterns\/0={1} {0}\n-\n-# bug #4084356, 4290801\n-CurrencyNames\/pl_PL\/PLN=z\\u0142\n-FormatData\/pl_PL\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/pl_PL\/NumberPatterns\/1=#,##0.## z\\u0142;-#,##0.## z\\u0142 # Changed; see bug 4122840\n-FormatData\/pl_PL\/NumberPatterns\/2=#,##0%\n-FormatData\/pl_PL\/DayNames\/0=niedziela\n-FormatData\/pl_PL\/DayNames\/1=poniedzia\\u0142ek\n-FormatData\/pl_PL\/DayNames\/2=wtorek\n-FormatData\/pl_PL\/DayNames\/3=\\u015broda\n-FormatData\/pl_PL\/DayNames\/4=czwartek\n-FormatData\/pl_PL\/DayNames\/5=pi\\u0105tek\n-FormatData\/pl_PL\/DayNames\/6=sobota\n-FormatData\/pl_PL\/standalone.MonthNames\/0=stycze\\u0144\n-FormatData\/pl_PL\/standalone.MonthNames\/1=luty\n-FormatData\/pl_PL\/standalone.MonthNames\/2=marzec\n-FormatData\/pl_PL\/standalone.MonthNames\/3=kwiecie\\u0144\n-FormatData\/pl_PL\/standalone.MonthNames\/4=maj\n-FormatData\/pl_PL\/standalone.MonthNames\/5=czerwiec\n-FormatData\/pl_PL\/standalone.MonthNames\/6=lipiec\n-FormatData\/pl_PL\/standalone.MonthNames\/7=sierpie\\u0144\n-FormatData\/pl_PL\/standalone.MonthNames\/8=wrzesie\\u0144\n-FormatData\/pl_PL\/standalone.MonthNames\/9=pa\\u017adziernik\n-FormatData\/pl_PL\/standalone.MonthNames\/10=listopad\n-FormatData\/pl_PL\/standalone.MonthNames\/11=grudzie\\u0144\n-FormatData\/pl_PL\/standalone.MonthNames\/12=\n-LocaleNames\/pl_PL\/pl=polski\n-FormatData\/pl_PL\/TimePatterns\/0=HH:mm:ss z\n-FormatData\/pl_PL\/TimePatterns\/1=HH:mm:ss z\n-FormatData\/pl_PL\/TimePatterns\/2=HH:mm:ss\n-FormatData\/pl_PL\/TimePatterns\/3=HH:mm\n-FormatData\/pl_PL\/DatePatterns\/0=EEEE, d MMMM yyyy\n-FormatData\/pl_PL\/DatePatterns\/1=d MMMM yyyy\n-FormatData\/pl_PL\/DatePatterns\/2=yyyy-MM-dd\n-# changed for bug 4984277\n-FormatData\/pl_PL\/DatePatterns\/3=dd.MM.yy\n-FormatData\/pl_PL\/DateTimePatterns\/0={1} {0}\n-FormatData\/pl_PL\/NumberElements\/0=,\n-FormatData\/pl_PL\/NumberElements\/1=\\u00a0\n-FormatData\/pl_PL\/NumberElements\/2=;\n-FormatData\/pl_PL\/NumberElements\/3=%\n-FormatData\/pl_PL\/NumberElements\/4=0\n-FormatData\/pl_PL\/NumberElements\/5=#\n-FormatData\/pl_PL\/NumberElements\/6=-\n-FormatData\/pl_PL\/NumberElements\/7=E\n-FormatData\/pl_PL\/NumberElements\/8=\\u2030\n-FormatData\/pl_PL\/NumberElements\/9=\\u221e\n-FormatData\/pl_PL\/NumberElements\/10=\\ufffd\n-FormatData\/pl_PL\/Eras\/0=p.n.e.\n-FormatData\/pl_PL\/Eras\/1=n.e.\n-LocaleNames\/pl_PL\/PL=Polska\n-FormatData\/pl_PL\/DayAbbreviations\/0=N\n-FormatData\/pl_PL\/DayAbbreviations\/1=Pn\n-FormatData\/pl_PL\/DayAbbreviations\/2=Wt\n-FormatData\/pl_PL\/DayAbbreviations\/3=\\u015ar\n-FormatData\/pl_PL\/DayAbbreviations\/4=Cz\n-FormatData\/pl_PL\/DayAbbreviations\/5=Pt\n-FormatData\/pl_PL\/DayAbbreviations\/6=So\n-FormatData\/pl_PL\/MonthAbbreviations\/0=sty\n-FormatData\/pl_PL\/MonthAbbreviations\/1=lut\n-FormatData\/pl_PL\/MonthAbbreviations\/2=mar\n-FormatData\/pl_PL\/MonthAbbreviations\/3=kwi\n-FormatData\/pl_PL\/MonthAbbreviations\/4=maj\n-FormatData\/pl_PL\/MonthAbbreviations\/5=cze\n-FormatData\/pl_PL\/MonthAbbreviations\/6=lip\n-FormatData\/pl_PL\/MonthAbbreviations\/7=sie\n-FormatData\/pl_PL\/MonthAbbreviations\/8=wrz\n-FormatData\/pl_PL\/MonthAbbreviations\/9=pa\\u017a\n-FormatData\/pl_PL\/MonthAbbreviations\/10=lis\n-FormatData\/pl_PL\/MonthAbbreviations\/11=gru\n-FormatData\/pl_PL\/MonthAbbreviations\/12=\n-CalendarData\/pl_PL\/firstDayOfWeek=2\n-CalendarData\/pl_PL\/minimalDaysInFirstWeek=4\n-FormatData\/pl_PL\/AmPmMarkers\/0=AM\n-FormatData\/pl_PL\/AmPmMarkers\/1=PM\n-\n-# bug #4087238, 4290801\n-# bug 4156708 - changed currency symbol from 00a5 to ffe5\n-CurrencyNames\/ja_JP\/JPY=\\uffe5\n-# FormatData\/ja_JP\/NumberPatterns\/1=\\u00a5#,##0.00 # Changed; see bug 4122840\n-\n-# bug #4092361\n-FormatData\/en_US\/TimePatterns\/0=h:mm:ss a z\n-FormatData\/en_US\/TimePatterns\/1=h:mm:ss a z\n-FormatData\/en_US\/TimePatterns\/2=h:mm:ss a\n-FormatData\/en_US\/TimePatterns\/3=h:mm a\n-FormatData\/en_US\/DatePatterns\/0=EEEE, MMMM d, yyyy\n-FormatData\/en_US\/DatePatterns\/1=MMMM d, yyyy\n-FormatData\/en_US\/DatePatterns\/2=MMM d, yyyy\n-FormatData\/en_US\/DatePatterns\/3=M\/d\/yy\n-FormatData\/en_US\/DateTimePatterns\/0={1} {0}\n-\n-# bug #4094033, 4290801, 4942982\n-CurrencyNames\/ru_RU\/RUB=\\u0440\\u0443\\u0431.\n-FormatData\/ru_RU\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/ru_RU\/NumberPatterns\/1=#,##0.##'\\u0440.';-#,##0.##'\\u0440.' # Changed; see bug 4122840\n-FormatData\/ru_RU\/NumberPatterns\/2=#,##0%\n-FormatData\/ru_RU\/MonthNames\/0=\\u044f\\u043d\\u0432\\u0430\\u0440\\u044f\n-FormatData\/ru_RU\/MonthNames\/1=\\u0444\\u0435\\u0432\\u0440\\u0430\\u043b\\u044f\n-FormatData\/ru_RU\/MonthNames\/2=\\u043c\\u0430\\u0440\\u0442\\u0430\n-FormatData\/ru_RU\/MonthNames\/3=\\u0430\\u043f\\u0440\\u0435\\u043b\\u044f\n-FormatData\/ru_RU\/MonthNames\/4=\\u043c\\u0430\\u044f\n-FormatData\/ru_RU\/MonthNames\/5=\\u0438\\u044e\\u043d\\u044f\n-FormatData\/ru_RU\/MonthNames\/6=\\u0438\\u044e\\u043b\\u044f\n-FormatData\/ru_RU\/MonthNames\/7=\\u0430\\u0432\\u0433\\u0443\\u0441\\u0442\\u0430\n-FormatData\/ru_RU\/MonthNames\/8=\\u0441\\u0435\\u043d\\u0442\\u044f\\u0431\\u0440\\u044f\n-FormatData\/ru_RU\/MonthNames\/9=\\u043e\\u043a\\u0442\\u044f\\u0431\\u0440\\u044f\n-FormatData\/ru_RU\/MonthNames\/10=\\u043d\\u043e\\u044f\\u0431\\u0440\\u044f\n-FormatData\/ru_RU\/MonthNames\/11=\\u0434\\u0435\\u043a\\u0430\\u0431\\u0440\\u044f\n-FormatData\/ru_RU\/MonthNames\/12=\n-FormatData\/ru_RU\/standalone.MonthNames\/0=\\u042f\\u043d\\u0432\\u0430\\u0440\\u044c\n-FormatData\/ru_RU\/standalone.MonthNames\/1=\\u0424\\u0435\\u0432\\u0440\\u0430\\u043b\\u044c\n-FormatData\/ru_RU\/standalone.MonthNames\/2=\\u041c\\u0430\\u0440\\u0442\n-FormatData\/ru_RU\/standalone.MonthNames\/3=\\u0410\\u043f\\u0440\\u0435\\u043b\\u044c\n-FormatData\/ru_RU\/standalone.MonthNames\/4=\\u041c\\u0430\\u0439\n-FormatData\/ru_RU\/standalone.MonthNames\/5=\\u0418\\u044e\\u043d\\u044c\n-FormatData\/ru_RU\/standalone.MonthNames\/6=\\u0418\\u044e\\u043b\\u044c\n-FormatData\/ru_RU\/standalone.MonthNames\/7=\\u0410\\u0432\\u0433\\u0443\\u0441\\u0442\n-FormatData\/ru_RU\/standalone.MonthNames\/8=\\u0421\\u0435\\u043d\\u0442\\u044f\\u0431\\u0440\\u044c\n-FormatData\/ru_RU\/standalone.MonthNames\/9=\\u041e\\u043a\\u0442\\u044f\\u0431\\u0440\\u044c\n-FormatData\/ru_RU\/standalone.MonthNames\/10=\\u041d\\u043e\\u044f\\u0431\\u0440\\u044c\n-FormatData\/ru_RU\/standalone.MonthNames\/11=\\u0414\\u0435\\u043a\\u0430\\u0431\\u0440\\u044c\n-FormatData\/ru_RU\/standalone.MonthNames\/12=\n-FormatData\/ru_RU\/Eras\/0=\\u0434\\u043e \\u043d.\\u044d.\n-FormatData\/ru_RU\/Eras\/1=\\u043d.\\u044d.\n-LocaleNames\/ru_RU\/ru=\\u0440\\u0443\\u0441\\u0441\\u043a\\u0438\\u0439\n-FormatData\/ru_RU\/MonthAbbreviations\/0=\\u044f\\u043d\\u0432\n-FormatData\/ru_RU\/MonthAbbreviations\/1=\\u0444\\u0435\\u0432\n-FormatData\/ru_RU\/MonthAbbreviations\/2=\\u043c\\u0430\\u0440\n-FormatData\/ru_RU\/MonthAbbreviations\/3=\\u0430\\u043f\\u0440\n-FormatData\/ru_RU\/MonthAbbreviations\/4=\\u043c\\u0430\\u044f\n-FormatData\/ru_RU\/MonthAbbreviations\/5=\\u0438\\u044e\\u043d\n-FormatData\/ru_RU\/MonthAbbreviations\/6=\\u0438\\u044e\\u043b\n-FormatData\/ru_RU\/MonthAbbreviations\/7=\\u0430\\u0432\\u0433\n-FormatData\/ru_RU\/MonthAbbreviations\/8=\\u0441\\u0435\\u043d\n-FormatData\/ru_RU\/MonthAbbreviations\/9=\\u043e\\u043a\\u0442\n-FormatData\/ru_RU\/MonthAbbreviations\/10=\\u043d\\u043e\\u044f\n-FormatData\/ru_RU\/MonthAbbreviations\/11=\\u0434\\u0435\\u043a\n-FormatData\/ru_RU\/MonthAbbreviations\/12=\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/0=\\u044f\\u043d\\u0432\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/1=\\u0444\\u0435\\u0432\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/2=\\u043c\\u0430\\u0440\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/3=\\u0430\\u043f\\u0440\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/4=\\u043c\\u0430\\u0439\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/5=\\u0438\\u044e\\u043d\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/6=\\u0438\\u044e\\u043b\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/7=\\u0430\\u0432\\u0433\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/8=\\u0441\\u0435\\u043d\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/9=\\u043e\\u043a\\u0442\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/10=\\u043d\\u043e\\u044f\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/11=\\u0434\\u0435\\u043a\n-# FormatData\/ru_RU\/standalone.MonthAbbreviations\/12=\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/0=\\u042f\\u043d\\u0432.\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/1=\\u0424\\u0435\\u0432\\u0440.\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/2=\\u041c\\u0430\\u0440\\u0442\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/3=\\u0410\\u043f\\u0440.\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/4=\\u041c\\u0430\\u0439\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/5=\\u0418\\u044e\\u043d\\u044c\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/6=\\u0418\\u044e\\u043b\\u044c\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/7=\\u0410\\u0432\\u0433.\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/8=\\u0421\\u0435\\u043d\\u0442.\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/9=\\u041e\\u043a\\u0442.\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/10=\\u041d\\u043e\\u044f\\u0431.\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/11=\\u0414\\u0435\\u043a.\n-FormatData\/ru_RU\/standalone.MonthAbbreviations\/12=\n-FormatData\/ru_RU\/TimePatterns\/0=H:mm:ss z\n-FormatData\/ru_RU\/TimePatterns\/1=H:mm:ss z\n-FormatData\/ru_RU\/TimePatterns\/2=H:mm:ss\n-FormatData\/ru_RU\/TimePatterns\/3=H:mm\n-FormatData\/ru_RU\/DatePatterns\/0=d MMMM yyyy '\\u0433.'\n-FormatData\/ru_RU\/DatePatterns\/1=d MMMM yyyy '\\u0433.'\n-FormatData\/ru_RU\/DatePatterns\/2=dd.MM.yyyy\n-FormatData\/ru_RU\/DatePatterns\/3=dd.MM.yy\n-FormatData\/ru_RU\/DateTimePatterns\/0={1} {0}\n-FormatData\/ru_RU\/DayNames\/0=\\u0432\\u043e\\u0441\\u043a\\u0440\\u0435\\u0441\\u0435\\u043d\\u044c\\u0435\n-FormatData\/ru_RU\/DayNames\/1=\\u043f\\u043e\\u043d\\u0435\\u0434\\u0435\\u043b\\u044c\\u043d\\u0438\\u043a\n-FormatData\/ru_RU\/DayNames\/2=\\u0432\\u0442\\u043e\\u0440\\u043d\\u0438\\u043a\n-FormatData\/ru_RU\/DayNames\/3=\\u0441\\u0440\\u0435\\u0434\\u0430\n-FormatData\/ru_RU\/DayNames\/4=\\u0447\\u0435\\u0442\\u0432\\u0435\\u0440\\u0433\n-FormatData\/ru_RU\/DayNames\/5=\\u043f\\u044f\\u0442\\u043d\\u0438\\u0446\\u0430\n-FormatData\/ru_RU\/DayNames\/6=\\u0441\\u0443\\u0431\\u0431\\u043e\\u0442\\u0430\n-FormatData\/ru_RU\/NumberElements\/0=,\n-FormatData\/ru_RU\/NumberElements\/1=\\u00a0\n-FormatData\/ru_RU\/NumberElements\/2=;\n-FormatData\/ru_RU\/NumberElements\/3=%\n-FormatData\/ru_RU\/NumberElements\/4=0\n-FormatData\/ru_RU\/NumberElements\/5=#\n-FormatData\/ru_RU\/NumberElements\/6=-\n-FormatData\/ru_RU\/NumberElements\/7=E\n-FormatData\/ru_RU\/NumberElements\/8=\\u2030\n-FormatData\/ru_RU\/NumberElements\/9=\\u221e\n-FormatData\/ru_RU\/NumberElements\/10=\\ufffd\n-LocaleNames\/ru_RU\/RU=\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f\n-FormatData\/ru_RU\/DayAbbreviations\/0=\\u0412\\u0441\n-FormatData\/ru_RU\/DayAbbreviations\/1=\\u041f\\u043d\n-FormatData\/ru_RU\/DayAbbreviations\/2=\\u0412\\u0442\n-FormatData\/ru_RU\/DayAbbreviations\/3=\\u0421\\u0440\n-FormatData\/ru_RU\/DayAbbreviations\/4=\\u0427\\u0442\n-FormatData\/ru_RU\/DayAbbreviations\/5=\\u041f\\u0442\n-FormatData\/ru_RU\/DayAbbreviations\/6=\\u0421\\u0431\n-FormatData\/ru_RU\/AmPmMarkers\/0=AM\n-FormatData\/ru_RU\/AmPmMarkers\/1=PM\n-CalendarData\/ru_RU\/firstDayOfWeek=2\n-CalendarData\/ru_RU\/minimalDaysInFirstWeek=1\n-\n-# bug #4094371, 4098518, 4290801, 6558863\n-FormatData\/en_AU\/TimePatterns\/0=h:mm:ss a z\n-FormatData\/en_AU\/TimePatterns\/1=h:mm:ss a\n-FormatData\/en_AU\/TimePatterns\/2=h:mm:ss a\n-FormatData\/en_AU\/TimePatterns\/3=h:mm a\n-FormatData\/en_AU\/DatePatterns\/0=EEEE, d MMMM yyyy\n-FormatData\/en_AU\/DatePatterns\/1=d MMMM yyyy\n-FormatData\/en_AU\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/en_AU\/DatePatterns\/3=d\/MM\/yy\n-FormatData\/en_AU\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/en_AU\/US=United States\n-LocaleNames\/en_AU\/GB=United Kingdom\n-LocaleNames\/en_AU\/CA=Canada\n-LocaleNames\/en_AU\/IE=Ireland\n-LocaleNames\/en_AU\/AU=Australia\n-LocaleNames\/en_AU\/NZ=New Zealand\n-FormatData\/en_AU\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/en_AU\/NumberPatterns\/1=$#,##0.00;-$#,##0.00 # Changed; see bug 4122840\n-FormatData\/en_AU\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/en_AU\/AUD=$\n-LocaleNames\/en_AU\/en=English\n-FormatData\/en_AU\/MonthNames\/0=January\n-FormatData\/en_AU\/MonthNames\/1=February\n-FormatData\/en_AU\/MonthNames\/2=March\n-# changed, bug 6558863\n-FormatData\/en_NZ\/TimePatterns\/0=h:mm:ss a z\n-FormatData\/en_NZ\/TimePatterns\/1=h:mm:ss a\n-FormatData\/en_NZ\/TimePatterns\/2=h:mm:ss a\n-FormatData\/en_NZ\/TimePatterns\/3=h:mm a\n-FormatData\/en_NZ\/DatePatterns\/0=EEEE, d MMMM yyyy\n-FormatData\/en_NZ\/DatePatterns\/1=d MMMM yyyy\n-FormatData\/en_NZ\/DatePatterns\/2=d\/MM\/yyyy\n-FormatData\/en_NZ\/DatePatterns\/3=d\/MM\/yy\n-FormatData\/en_NZ\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/en_NZ\/US=United States\n-LocaleNames\/en_NZ\/GB=United Kingdom\n-LocaleNames\/en_NZ\/CA=Canada\n-LocaleNames\/en_NZ\/IE=Ireland\n-LocaleNames\/en_NZ\/AU=Australia\n-LocaleNames\/en_NZ\/NZ=New Zealand\n-FormatData\/en_NZ\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/en_NZ\/NumberPatterns\/1=$#,##0.00;-$#,##0.00 # Changed; see bug 4122840\n-FormatData\/en_NZ\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/en_NZ\/NZD=$\n-LocaleNames\/en_NZ\/en=English\n-FormatData\/en_NZ\/MonthNames\/0=January\n-FormatData\/en_NZ\/MonthNames\/1=February\n-FormatData\/en_NZ\/MonthNames\/2=March\n-#changed, bug 6488119\n-FormatData\/en_ZA\/TimePatterns\/0=h:mm:ss a\n-FormatData\/en_ZA\/TimePatterns\/1=h:mm:ss a\n-FormatData\/en_ZA\/TimePatterns\/2=h:mm:ss a\n-FormatData\/en_ZA\/TimePatterns\/3=h:mm a\n-FormatData\/en_ZA\/DatePatterns\/0=EEEE dd MMMM yyyy\n-FormatData\/en_ZA\/DatePatterns\/1=dd MMMM yyyy\n-FormatData\/en_ZA\/DatePatterns\/2=dd MMM yyyy\n-FormatData\/en_ZA\/DatePatterns\/3=yyyy\/MM\/dd\n-FormatData\/en_ZA\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/en_ZA\/US=United States\n-LocaleNames\/en_ZA\/GB=United Kingdom\n-LocaleNames\/en_ZA\/CA=Canada\n-LocaleNames\/en_ZA\/IE=Ireland\n-LocaleNames\/en_ZA\/ZA=South Africa\n-FormatData\/en_ZA\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/en_ZA\/NumberPatterns\/1=R #,##0.00;R-#,##0.00 # Changed; see bug 4122840\n-FormatData\/en_ZA\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/en_ZA\/ZAR=R\n-LocaleNames\/en_ZA\/en=English\n-FormatData\/en_ZA\/MonthNames\/0=January\n-FormatData\/en_ZA\/MonthNames\/1=February\n-FormatData\/en_ZA\/MonthNames\/2=March\n-CurrencyNames\/es_AR\/ARS=$\n-FormatData\/es_AR\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_AR\/NumberPatterns\/1=$#,##0.00;($#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_AR\/NumberPatterns\/2=#,##0%\n-FormatData\/es_AR\/TimePatterns\/0=HH'h'''mm z\n-FormatData\/es_AR\/TimePatterns\/1=H:mm:ss z\n-FormatData\/es_AR\/TimePatterns\/2=HH:mm:ss\n-FormatData\/es_AR\/TimePatterns\/3=HH:mm\n-FormatData\/es_AR\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_AR\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_AR\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/es_AR\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/es_AR\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_AR\/NumberElements\/0=,\n-FormatData\/es_AR\/NumberElements\/1=.\n-FormatData\/es_AR\/NumberElements\/2=;\n-FormatData\/es_BO\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_BO\/NumberPatterns\/1=B$#,##0.00;(B$#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_BO\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/es_BO\/BOB=B$\n-FormatData\/es_BO\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_BO\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_BO\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_BO\/TimePatterns\/3=hh:mm a\n-FormatData\/es_BO\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_BO\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_BO\/DatePatterns\/2=dd-MM-yyyy\n-FormatData\/es_BO\/DatePatterns\/3=dd-MM-yy\n-FormatData\/es_BO\/DateTimePatterns\/0={1} {0}\n-# changed decimal and group separator for 5102005 bugfix\n-FormatData\/es_BO\/NumberElements\/0=,\n-FormatData\/es_BO\/NumberElements\/1=.\n-FormatData\/es_BO\/NumberElements\/2=;\n-CurrencyNames\/es_CL\/CLP=Ch$\n-FormatData\/es_CL\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_CL\/NumberPatterns\/1=Ch$#,##0.00;Ch$-#,##0.00 # Changed; see bug 4122840\n-FormatData\/es_CL\/NumberPatterns\/2=#,##0%\n-FormatData\/es_CL\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_CL\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_CL\/DatePatterns\/2=dd-MM-yyyy\n-FormatData\/es_CL\/DatePatterns\/3=dd-MM-yy\n-FormatData\/es_CL\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_CL\/NumberElements\/0=,\n-FormatData\/es_CL\/NumberElements\/1=.\n-FormatData\/es_CL\/NumberElements\/2=;\n-FormatData\/es_CO\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_CO\/NumberPatterns\/1=C$#,##0.00;(C$#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_CO\/NumberPatterns\/2=#,##0%\n-# changed currency symbol during 5102005 bugfix\n-CurrencyNames\/es_CO\/COP=$\n-FormatData\/es_CO\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_CO\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_CO\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_CO\/TimePatterns\/3=hh:mm a\n-FormatData\/es_CO\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_CO\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_CO\/DatePatterns\/2=d\/MM\/yyyy\n-FormatData\/es_CO\/DatePatterns\/3=d\/MM\/yy\n-FormatData\/es_CO\/DateTimePatterns\/0={1} {0}\n-# changed decimal and group separator for 5102005 bugfix\n-FormatData\/es_CO\/NumberElements\/0=,\n-FormatData\/es_CO\/NumberElements\/1=.\n-FormatData\/es_CO\/NumberElements\/2=;\n-FormatData\/es_CR\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_CR\/NumberPatterns\/1=C#,##0.00;(C#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_CR\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/es_CR\/CRC=C\n-FormatData\/es_CR\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_CR\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_CR\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_CR\/TimePatterns\/3=hh:mm a\n-FormatData\/es_CR\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_CR\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_CR\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/es_CR\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/es_CR\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_CR\/NumberElements\/0=.\n-FormatData\/es_CR\/NumberElements\/1=,\n-FormatData\/es_CR\/NumberElements\/2=;\n-FormatData\/es_DO\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_DO\/NumberPatterns\/1=RD$#,##0.00;(RD$#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_DO\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/es_DO\/DOP=RD$\n-FormatData\/es_DO\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_DO\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_DO\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_DO\/TimePatterns\/3=hh:mm a\n-FormatData\/es_DO\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_DO\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-# FormatData\/es_DO\/DatePatterns\/2=MM\/dd\/yyyy # Changed: see bug 8037343\n-# FormatData\/es_DO\/DatePatterns\/3=MM\/dd\/yy # Changed: see bug 8037343\n-FormatData\/es_DO\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_DO\/NumberElements\/0=.\n-FormatData\/es_DO\/NumberElements\/1=,\n-FormatData\/es_DO\/NumberElements\/2=;\n-FormatData\/es_EC\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_EC\/NumberPatterns\/1=S\/#,##0.00;S\/-#,##0.00 # Changed; see bug 4122840\n-FormatData\/es_EC\/NumberPatterns\/2=#,##0%\n-#changed for 4945388\n-CurrencyNames\/es_EC\/USD=$\n-FormatData\/es_EC\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_EC\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_EC\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/es_EC\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/es_EC\/DateTimePatterns\/0={1} {0}\n-# changed decimal and group separator for 5102005 bugfix\n-FormatData\/es_EC\/NumberElements\/0=,\n-FormatData\/es_EC\/NumberElements\/1=.\n-FormatData\/es_EC\/NumberElements\/2=;\n-LocaleNames\/es\/ES=Espa\\u00f1a\n-LocaleNames\/es\/AR=Argentina\n-LocaleNames\/es\/BO=Bolivia\n-LocaleNames\/es\/CL=Chile\n-LocaleNames\/es\/CO=Colombia\n-LocaleNames\/es\/CR=Costa Rica\n-LocaleNames\/es\/DO=Rep\\u00fablica Dominicana\n-LocaleNames\/es\/EC=Ecuador\n-LocaleNames\/es\/GT=Guatemala\n-LocaleNames\/es\/HN=Honduras\n-LocaleNames\/es\/MX=M\\u00e9xico\n-LocaleNames\/es\/NI=Nicaragua\n-LocaleNames\/es\/PA=Panam\\u00e1\n-LocaleNames\/es\/PE=Per\\u00fa\n-LocaleNames\/es\/PR=Puerto Rico\n-LocaleNames\/es\/PY=Paraguay\n-# LocaleNames\/es\/SV=El SalvadorUY # Changed, see bug 4331446\n-LocaleNames\/es\/UY=Uruguay\n-LocaleNames\/es\/VE=Venezuela\n-FormatData\/es_GT\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_GT\/NumberPatterns\/1=Q#,##0.00;(Q#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_GT\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/es_GT\/GTQ=Q\n-FormatData\/es_GT\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_GT\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_GT\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_GT\/TimePatterns\/3=hh:mm a\n-FormatData\/es_GT\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_GT\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_GT\/DatePatterns\/2=d\/MM\/yyyy\n-FormatData\/es_GT\/DatePatterns\/3=d\/MM\/yy\n-FormatData\/es_GT\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_GT\/NumberElements\/0=.\n-FormatData\/es_GT\/NumberElements\/1=,\n-FormatData\/es_GT\/NumberElements\/2=;\n-FormatData\/es_HN\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_HN\/NumberPatterns\/1=L#,##0.00;(L#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_HN\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/es_HN\/HNL=L\n-FormatData\/es_HN\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_HN\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_HN\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_HN\/TimePatterns\/3=hh:mm a\n-FormatData\/es_HN\/DatePatterns\/0=EEEE dd' de 'MMMM' de 'yyyy\n-FormatData\/es_HN\/DatePatterns\/1=dd' de 'MMMM' de 'yyyy\n-FormatData\/es_HN\/DatePatterns\/2=MM-dd-yyyy\n-FormatData\/es_HN\/DatePatterns\/3=MM-dd-yy\n-FormatData\/es_HN\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_HN\/NumberElements\/0=.\n-FormatData\/es_HN\/NumberElements\/1=,\n-FormatData\/es_HN\/NumberElements\/2=;\n-FormatData\/es_MX\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_MX\/NumberPatterns\/1=$#,##0.00;($#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_MX\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/es_MX\/MXN=$\n-FormatData\/es_MX\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_MX\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_MX\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_MX\/TimePatterns\/3=hh:mm a\n-FormatData\/es_MX\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_MX\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_MX\/DatePatterns\/2=d\/MM\/yyyy\n-FormatData\/es_MX\/DatePatterns\/3=d\/MM\/yy\n-FormatData\/es_MX\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_MX\/NumberElements\/0=.\n-FormatData\/es_MX\/NumberElements\/1=,\n-FormatData\/es_MX\/NumberElements\/2=;\n-FormatData\/es_NI\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_NI\/NumberPatterns\/1=$C#,##0.00;($C#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_NI\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/es_NI\/NIO=$C\n-FormatData\/es_NI\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_NI\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_NI\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_NI\/TimePatterns\/3=hh:mm a\n-FormatData\/es_NI\/DatePatterns\/0=EEEE dd' de 'MMMM' de 'yyyy\n-FormatData\/es_NI\/DatePatterns\/1=dd' de 'MMMM' de 'yyyy\n-FormatData\/es_NI\/DatePatterns\/2=MM-dd-yyyy\n-FormatData\/es_NI\/DatePatterns\/3=MM-dd-yy\n-FormatData\/es_NI\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_NI\/NumberElements\/0=.\n-FormatData\/es_NI\/NumberElements\/1=,\n-FormatData\/es_NI\/NumberElements\/2=;\n-FormatData\/es_PA\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_PA\/NumberPatterns\/1=B#,##0.00;(B#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_PA\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/es_PA\/PAB=B\n-FormatData\/es_PA\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_PA\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_PA\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_PA\/TimePatterns\/3=hh:mm a\n-FormatData\/es_PA\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_PA\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_PA\/DatePatterns\/2=MM\/dd\/yyyy\n-FormatData\/es_PA\/DatePatterns\/3=MM\/dd\/yy\n-FormatData\/es_PA\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_PA\/NumberElements\/0=.\n-FormatData\/es_PA\/NumberElements\/1=,\n-FormatData\/es_PA\/NumberElements\/2=;\n-FormatData\/es_PE\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_PE\/NumberPatterns\/1=S\/#,##0.00;S\/-#,##0.00 # Changed; see bug 4122840\n-FormatData\/es_PE\/NumberPatterns\/2=#,##0%\n-FormatData\/es_PE\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_PE\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_PE\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_PE\/TimePatterns\/3=hh:mm a\n-FormatData\/es_PE\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_PE\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_PE\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/es_PE\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/es_PE\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_PE\/NumberElements\/2=;\n-FormatData\/es_PR\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_PR\/NumberPatterns\/1=$#,##0.00;($#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_PR\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/es_PR\/USD=$\n-FormatData\/es_PR\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_PR\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_PR\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_PR\/TimePatterns\/3=hh:mm a\n-FormatData\/es_PR\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_PR\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_PR\/DatePatterns\/2=MM-dd-yyyy\n-FormatData\/es_PR\/DatePatterns\/3=MM-dd-yy\n-FormatData\/es_PR\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_PR\/NumberElements\/0=.\n-FormatData\/es_PR\/NumberElements\/1=,\n-FormatData\/es_PR\/NumberElements\/2=;\n-CurrencyNames\/es_PY\/PYG=G\n-FormatData\/es_PY\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_PY\/NumberPatterns\/1=G#,##0.00;(G#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_PY\/NumberPatterns\/2=#,##0%\n-FormatData\/es_PY\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_PY\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_PY\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_PY\/TimePatterns\/3=hh:mm a\n-FormatData\/es_PY\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_PY\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_PY\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/es_PY\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/es_PY\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_PY\/NumberElements\/0=,\n-FormatData\/es_PY\/NumberElements\/1=.\n-FormatData\/es_PY\/NumberElements\/2=;\n-FormatData\/es_SV\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_SV\/NumberPatterns\/1=C#,##0.00;(C#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_SV\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/es_SV\/SVC=C\n-FormatData\/es_SV\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_SV\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_SV\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_SV\/TimePatterns\/3=hh:mm a\n-FormatData\/es_SV\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_SV\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_SV\/DatePatterns\/2=MM-dd-yyyy\n-FormatData\/es_SV\/DatePatterns\/3=MM-dd-yy\n-FormatData\/es_SV\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_SV\/NumberElements\/0=.\n-FormatData\/es_SV\/NumberElements\/1=,\n-FormatData\/es_SV\/NumberElements\/2=;\n-CurrencyNames\/es_UY\/UYU=NU$\n-FormatData\/es_UY\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_UY\/NumberPatterns\/1=NU$ #,##0.00;(NU$#,##0.00) # Changed; see bug 4122840\n-FormatData\/es_UY\/NumberPatterns\/2=#,##0%\n-FormatData\/es_UY\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_UY\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_UY\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_UY\/TimePatterns\/3=hh:mm a\n-FormatData\/es_UY\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_UY\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_UY\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/es_UY\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/es_UY\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_UY\/NumberElements\/0=,\n-FormatData\/es_UY\/NumberElements\/1=.\n-FormatData\/es_UY\/NumberElements\/2=;\n-CurrencyNames\/es_VE\/VEB=Bs\n-# bug 6570259\n-FormatData\/es_VE\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/es_VE\/NumberPatterns\/1=Bs#,##0.00;Bs -#,##0.00 # Changed; see bug 4122840\n-FormatData\/es_VE\/NumberPatterns\/2=#,##0%\n-FormatData\/es_VE\/TimePatterns\/0=hh:mm:ss a z\n-FormatData\/es_VE\/TimePatterns\/1=hh:mm:ss a z\n-FormatData\/es_VE\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/es_VE\/TimePatterns\/3=hh:mm a\n-FormatData\/es_VE\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_VE\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_VE\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/es_VE\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/es_VE\/DateTimePatterns\/0={1} {0}\n-FormatData\/es_VE\/NumberElements\/0=,\n-FormatData\/es_VE\/NumberElements\/1=.\n-FormatData\/es_VE\/NumberElements\/2=;\n-\n-# bug #4099810, 4290801, 6868106, 6916787\n-CurrencyNames\/uk_UA\/UAH=\\u0433\\u0440\\u043d.\n-FormatData\/uk_UA\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/uk_UA\/NumberPatterns\/1=#,##0.## '\\u0433\\u0440\\u0432.';-#,##0.## '\\u0433\\u0440\\u0432.' # Changed; see bug 4122840\n-FormatData\/uk_UA\/NumberPatterns\/2=#,##0%\n-\n-# bug 6245766\n-FormatData\/uk\/DatePatterns\/0=EEEE, d MMMM yyyy \\u0440.\n-FormatData\/uk\/DatePatterns\/1=d MMMM yyyy\n-FormatData\/uk\/DatePatterns\/2=d MMM yyyy\n-FormatData\/uk\/DatePatterns\/3=dd.MM.yy\n-\n-# bug #4103218\n-# FormatData\/ko_KR\/NumberPatterns\/1=\\u20a9#,##0;-\\u20a9#,##0 # Changed; see bug 4122840\n-\n-# bug #4103220 should be adequately tested by the above tests, which represent a pretty\n-# good cross-section of the locale data\n-\n-# bug #4103861\n-# As far as I can tell, French dates do not use commas at all.  However, we\n-# already have a comma after the month in the LONG date format, so we want to be\n-# consistent with that.  This is probably taken from the Windows locale data,\n-# which does include a comma after month for fr_CA (although not for fr_FR).\n-# Hence: No comma after the day of week. ASL 5\/12\/98\n-# Follow-up: Well, a follow-up duplicate bug (4141637) has confirmed that the\n-# comma should not be present at all in French.  Removing the comma.\n-FormatData\/fr_CA\/DatePatterns\/0=EEEE d MMMM yyyy\n-FormatData\/fr_CA\/DatePatterns\/1=d MMMM yyyy\n-FormatData\/en_CA\/DatePatterns\/0=EEEE, MMMM d, yyyy\n-\n-# bug #4112136\n-FormatData\/fr_CA\/TimePatterns\/0=H' h 'mm z\n-FormatData\/fr_CA\/TimePatterns\/1=HH:mm:ss z\n-\n-# bug #4113638, 4290801\n-CurrencyNames\/ar_AE\/AED=\\u062f.\\u0625.\\u200f\n-FormatData\/ar_AE\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_AE\/NumberPatterns\/1='\\u062f.\\u0625.\\u200f' #,##0.###;'\\u062f.\\u0625.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_AE\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_AE\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_AE\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_AE\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_AE\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_AE\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_AE\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_AE\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_AE\/firstDayOfWeek=7\n-CalendarData\/ar_AE\/minimalDaysInFirstWeek=1\n-FormatData\/ar_AE\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_AE\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_AE\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_AE\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_AE\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_AE\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_AE\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_AE\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_AE\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_AE\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_AE\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_AE\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_AE\/MonthAbbreviations\/12=\n-FormatData\/ar_AE\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_AE\/Eras\/1=\\u0645\n-FormatData\/ar_AE\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_AE\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_AE\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_AE\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_AE\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_AE\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_AE\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_AE\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_AE\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_AE\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_AE\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_AE\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_AE\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_AE\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_AE\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_AE\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_AE\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_AE\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_AE\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_AE\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_AE\/MonthNames\/12=\n-FormatData\/ar_AE\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_AE\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_AE\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_AE\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_AE\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_AE\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_AE\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_AE\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_AE\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_AE\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_AE\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_AE\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_AE\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_AE\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_AE\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_AE\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_AE\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_AE\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_AE\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_AE\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_AE\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_AE\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_AE\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_AE\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_AE\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_AE\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_AE\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_AE\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_AE\/NumberElements\/0=.\n-FormatData\/ar_AE\/NumberElements\/1=,\n-FormatData\/ar_AE\/NumberElements\/2=;\n-FormatData\/ar_AE\/NumberElements\/3=%\n-FormatData\/ar_AE\/NumberElements\/4=0\n-FormatData\/ar_AE\/NumberElements\/5=#\n-FormatData\/ar_AE\/NumberElements\/6=-\n-FormatData\/ar_AE\/NumberElements\/7=E\n-FormatData\/ar_AE\/NumberElements\/8=\\u2030\n-FormatData\/ar_AE\/NumberElements\/9=\\u221e\n-FormatData\/ar_AE\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_BH\/BHD=\\u062f.\\u0628.\\u200f\n-FormatData\/ar_BH\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_BH\/NumberPatterns\/1='\\u062f.\\u0628.\\u200f' #,##0.###;'\\u062f.\\u0628.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_BH\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_BH\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_BH\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_BH\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_BH\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_BH\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_BH\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_BH\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_BH\/firstDayOfWeek=7\n-CalendarData\/ar_BH\/minimalDaysInFirstWeek=1\n-FormatData\/ar_BH\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_BH\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_BH\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_BH\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_BH\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_BH\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_BH\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_BH\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_BH\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_BH\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_BH\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_BH\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_BH\/MonthAbbreviations\/12=\n-FormatData\/ar_BH\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_BH\/Eras\/1=\\u0645\n-FormatData\/ar_BH\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_BH\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_BH\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_BH\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_BH\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_BH\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_BH\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_BH\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_BH\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_BH\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_BH\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_BH\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_BH\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_BH\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_BH\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_BH\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_BH\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_BH\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_BH\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_BH\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_BH\/MonthNames\/12=\n-FormatData\/ar_BH\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_BH\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_BH\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_BH\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_BH\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_BH\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_BH\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_BH\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_BH\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_BH\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_BH\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_BH\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_BH\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_BH\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_BH\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_BH\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_BH\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_BH\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_BH\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_BH\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_BH\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_BH\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_BH\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_BH\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_BH\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_BH\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_BH\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_BH\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_BH\/NumberElements\/0=.\n-FormatData\/ar_BH\/NumberElements\/1=,\n-FormatData\/ar_BH\/NumberElements\/2=;\n-FormatData\/ar_BH\/NumberElements\/3=%\n-FormatData\/ar_BH\/NumberElements\/4=0\n-FormatData\/ar_BH\/NumberElements\/5=#\n-FormatData\/ar_BH\/NumberElements\/6=-\n-FormatData\/ar_BH\/NumberElements\/7=E\n-FormatData\/ar_BH\/NumberElements\/8=\\u2030\n-FormatData\/ar_BH\/NumberElements\/9=\\u221e\n-FormatData\/ar_BH\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_DZ\/DZD=\\u062f.\\u062c.\\u200f\n-FormatData\/ar_DZ\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_DZ\/NumberPatterns\/1='\\u062f.\\u062c.\\u200f' #,##0.###;'\\u062f.\\u062c.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_DZ\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_DZ\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_DZ\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_DZ\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_DZ\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_DZ\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_DZ\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_DZ\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_DZ\/firstDayOfWeek=7\n-CalendarData\/ar_DZ\/minimalDaysInFirstWeek=1\n-FormatData\/ar_DZ\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_DZ\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_DZ\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_DZ\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_DZ\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_DZ\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_DZ\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_DZ\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_DZ\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_DZ\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_DZ\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_DZ\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_DZ\/MonthAbbreviations\/12=\n-FormatData\/ar_DZ\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_DZ\/Eras\/1=\\u0645\n-FormatData\/ar_DZ\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_DZ\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_DZ\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_DZ\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_DZ\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_DZ\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_DZ\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_DZ\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_DZ\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_DZ\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_DZ\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_DZ\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_DZ\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_DZ\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_DZ\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_DZ\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_DZ\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_DZ\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_DZ\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_DZ\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_DZ\/MonthNames\/12=\n-FormatData\/ar_DZ\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_DZ\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_DZ\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_DZ\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_DZ\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_DZ\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_DZ\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_DZ\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_DZ\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_DZ\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_DZ\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_DZ\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_DZ\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_DZ\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_DZ\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_DZ\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_DZ\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_DZ\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_DZ\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_DZ\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_DZ\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_DZ\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_DZ\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_DZ\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_DZ\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_DZ\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_DZ\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_DZ\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_DZ\/NumberElements\/0=.\n-FormatData\/ar_DZ\/NumberElements\/1=,\n-FormatData\/ar_DZ\/NumberElements\/2=;\n-FormatData\/ar_DZ\/NumberElements\/3=%\n-FormatData\/ar_DZ\/NumberElements\/4=0\n-FormatData\/ar_DZ\/NumberElements\/5=#\n-FormatData\/ar_DZ\/NumberElements\/6=-\n-FormatData\/ar_DZ\/NumberElements\/7=E\n-FormatData\/ar_DZ\/NumberElements\/8=\\u2030\n-FormatData\/ar_DZ\/NumberElements\/9=\\u221e\n-FormatData\/ar_DZ\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_EG\/EGP=\\u062c.\\u0645.\\u200f\n-FormatData\/ar_EG\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_EG\/NumberPatterns\/1='\\u062c.\\u0645.\\u200f' #,##0.###;'\\u062c.\\u0645.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_EG\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_EG\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_EG\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_EG\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_EG\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_EG\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_EG\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_EG\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_EG\/firstDayOfWeek=7\n-CalendarData\/ar_EG\/minimalDaysInFirstWeek=1\n-FormatData\/ar_EG\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_EG\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_EG\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_EG\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_EG\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_EG\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_EG\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_EG\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_EG\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_EG\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_EG\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_EG\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_EG\/MonthAbbreviations\/12=\n-FormatData\/ar_EG\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_EG\/Eras\/1=\\u0645\n-FormatData\/ar_EG\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_EG\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_EG\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_EG\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_EG\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_EG\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_EG\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_EG\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_EG\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_EG\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_EG\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_EG\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_EG\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_EG\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_EG\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_EG\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_EG\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_EG\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_EG\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_EG\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_EG\/MonthNames\/12=\n-FormatData\/ar_EG\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_EG\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_EG\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_EG\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_EG\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_EG\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_EG\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_EG\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_EG\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_EG\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_EG\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_EG\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_EG\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_EG\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_EG\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_EG\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_EG\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_EG\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_EG\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_EG\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_EG\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_EG\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_EG\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_EG\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_EG\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_EG\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_EG\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_EG\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_EG\/NumberElements\/0=.\n-FormatData\/ar_EG\/NumberElements\/1=,\n-FormatData\/ar_EG\/NumberElements\/2=;\n-FormatData\/ar_EG\/NumberElements\/3=%\n-FormatData\/ar_EG\/NumberElements\/4=0\n-FormatData\/ar_EG\/NumberElements\/5=#\n-FormatData\/ar_EG\/NumberElements\/6=-\n-FormatData\/ar_EG\/NumberElements\/7=E\n-FormatData\/ar_EG\/NumberElements\/8=\\u2030\n-FormatData\/ar_EG\/NumberElements\/9=\\u221e\n-FormatData\/ar_EG\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_IQ\/IQD=\\u062f.\\u0639.\\u200f\n-FormatData\/ar_IQ\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_IQ\/NumberPatterns\/1='\\u062f.\\u0639.\\u200f' #,##0.###;'\\u062f.\\u0639.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_IQ\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_IQ\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_IQ\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_IQ\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_IQ\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_IQ\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_IQ\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_IQ\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_IQ\/firstDayOfWeek=7\n-CalendarData\/ar_IQ\/minimalDaysInFirstWeek=1\n-FormatData\/ar_IQ\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_IQ\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_IQ\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_IQ\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_IQ\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_IQ\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_IQ\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_IQ\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_IQ\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_IQ\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_IQ\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_IQ\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_IQ\/MonthAbbreviations\/12=\n-FormatData\/ar_IQ\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_IQ\/Eras\/1=\\u0645\n-FormatData\/ar_IQ\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_IQ\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_IQ\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_IQ\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_IQ\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_IQ\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_IQ\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_IQ\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_IQ\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_IQ\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_IQ\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_IQ\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_IQ\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_IQ\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_IQ\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_IQ\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_IQ\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_IQ\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_IQ\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_IQ\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_IQ\/MonthNames\/12=\n-FormatData\/ar_IQ\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_IQ\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_IQ\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_IQ\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_IQ\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_IQ\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_IQ\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_IQ\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_IQ\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_IQ\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_IQ\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_IQ\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_IQ\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_IQ\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_IQ\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_IQ\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_IQ\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_IQ\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_IQ\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_IQ\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_IQ\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_IQ\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_IQ\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_IQ\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_IQ\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_IQ\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_IQ\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_IQ\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_IQ\/NumberElements\/0=.\n-FormatData\/ar_IQ\/NumberElements\/1=,\n-FormatData\/ar_IQ\/NumberElements\/2=;\n-FormatData\/ar_IQ\/NumberElements\/3=%\n-FormatData\/ar_IQ\/NumberElements\/4=0\n-FormatData\/ar_IQ\/NumberElements\/5=#\n-FormatData\/ar_IQ\/NumberElements\/6=-\n-FormatData\/ar_IQ\/NumberElements\/7=E\n-FormatData\/ar_IQ\/NumberElements\/8=\\u2030\n-FormatData\/ar_IQ\/NumberElements\/9=\\u221e\n-FormatData\/ar_IQ\/NumberElements\/10=\\ufffd\n-FormatData\/ar_JO\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_JO\/NumberPatterns\/1='\\u062f.\\u0623.\\u200f' #,##0.###;'\\u062f.\\u0623.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_JO\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/ar_JO\/JOD=\\u062f.\\u0623.\\u200f\n-FormatData\/ar_JO\/DayAbbreviations\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_JO\/DayAbbreviations\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_JO\/DayAbbreviations\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_JO\/DayAbbreviations\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_JO\/DayAbbreviations\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_JO\/DayAbbreviations\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_JO\/DayAbbreviations\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-FormatData\/ar_JO\/MonthNames\/0=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_JO\/MonthNames\/1=\\u0634\\u0628\\u0627\\u0637\n-FormatData\/ar_JO\/MonthNames\/2=\\u0622\\u0630\\u0627\\u0631\n-FormatData\/ar_JO\/MonthNames\/3=\\u0646\\u064a\\u0633\\u0627\\u0646\n-FormatData\/ar_JO\/MonthNames\/4=\\u0623\\u064a\\u0627\\u0631\n-FormatData\/ar_JO\/MonthNames\/5=\\u062d\\u0632\\u064a\\u0631\\u0627\\u0646\n-FormatData\/ar_JO\/MonthNames\/6=\\u062a\\u0645\\u0648\\u0632\n-FormatData\/ar_JO\/MonthNames\/7=\\u0622\\u0628\n-FormatData\/ar_JO\/MonthNames\/8=\\u0623\\u064a\\u0644\\u0648\\u0644\n-FormatData\/ar_JO\/MonthNames\/9=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_JO\/MonthNames\/10=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_JO\/MonthNames\/11=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_JO\/MonthNames\/12=\n-FormatData\/ar_JO\/MonthAbbreviations\/0=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_JO\/MonthAbbreviations\/1=\\u0634\\u0628\\u0627\\u0637\n-FormatData\/ar_JO\/MonthAbbreviations\/2=\\u0622\\u0630\\u0627\\u0631\n-FormatData\/ar_JO\/MonthAbbreviations\/3=\\u0646\\u064a\\u0633\\u0627\\u0646\n-FormatData\/ar_JO\/MonthAbbreviations\/4=\\u0623\\u064a\\u0627\\u0631\n-FormatData\/ar_JO\/MonthAbbreviations\/5=\\u062d\\u0632\\u064a\\u0631\\u0627\\u0646\n-FormatData\/ar_JO\/MonthAbbreviations\/6=\\u062a\\u0645\\u0648\\u0632\n-FormatData\/ar_JO\/MonthAbbreviations\/7=\\u0622\\u0628\n-FormatData\/ar_JO\/MonthAbbreviations\/8=\\u0623\\u064a\\u0644\\u0648\\u0644\n-FormatData\/ar_JO\/MonthAbbreviations\/9=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_JO\/MonthAbbreviations\/10=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_JO\/MonthAbbreviations\/11=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_JO\/MonthAbbreviations\/12=\n-FormatData\/ar_JO\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_JO\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_JO\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_JO\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_JO\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_JO\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_JO\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_JO\/firstDayOfWeek=7\n-CalendarData\/ar_JO\/minimalDaysInFirstWeek=1\n-FormatData\/ar_JO\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_JO\/Eras\/1=\\u0645\n-LocaleNames\/ar_JO\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_JO\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_JO\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_JO\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_JO\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_JO\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_JO\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_JO\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_JO\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_JO\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_JO\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_JO\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_JO\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_JO\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_JO\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_JO\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_JO\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_JO\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_JO\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_JO\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_JO\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_JO\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_JO\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_JO\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_JO\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_JO\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_JO\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_JO\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_JO\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_JO\/NumberElements\/0=.\n-FormatData\/ar_JO\/NumberElements\/1=,\n-FormatData\/ar_JO\/NumberElements\/2=;\n-FormatData\/ar_JO\/NumberElements\/3=%\n-FormatData\/ar_JO\/NumberElements\/4=0\n-FormatData\/ar_JO\/NumberElements\/5=#\n-FormatData\/ar_JO\/NumberElements\/6=-\n-FormatData\/ar_JO\/NumberElements\/7=E\n-FormatData\/ar_JO\/NumberElements\/8=\\u2030\n-FormatData\/ar_JO\/NumberElements\/9=\\u221e\n-FormatData\/ar_JO\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_KW\/KWD=\\u062f.\\u0643.\\u200f\n-FormatData\/ar_KW\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_KW\/NumberPatterns\/1='\\u062f.\\u0643.\\u200f' #,##0.###;'\\u062f.\\u0643.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_KW\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_KW\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_KW\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_KW\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_KW\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_KW\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_KW\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_KW\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_KW\/firstDayOfWeek=7\n-CalendarData\/ar_KW\/minimalDaysInFirstWeek=1\n-FormatData\/ar_KW\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_KW\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_KW\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_KW\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_KW\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_KW\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_KW\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_KW\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_KW\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_KW\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_KW\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_KW\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_KW\/MonthAbbreviations\/12=\n-FormatData\/ar_KW\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_KW\/Eras\/1=\\u0645\n-FormatData\/ar_KW\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_KW\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_KW\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_KW\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_KW\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_KW\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_KW\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_KW\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_KW\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_KW\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_KW\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_KW\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_KW\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_KW\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_KW\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_KW\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_KW\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_KW\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_KW\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_KW\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_KW\/MonthNames\/12=\n-FormatData\/ar_KW\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_KW\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_KW\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_KW\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_KW\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_KW\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_KW\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_KW\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_KW\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_KW\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_KW\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_KW\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_KW\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_KW\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_KW\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_KW\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_KW\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_KW\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_KW\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_KW\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_KW\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_KW\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_KW\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_KW\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_KW\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_KW\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_KW\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_KW\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_KW\/NumberElements\/0=.\n-FormatData\/ar_KW\/NumberElements\/1=,\n-FormatData\/ar_KW\/NumberElements\/2=;\n-FormatData\/ar_KW\/NumberElements\/3=%\n-FormatData\/ar_KW\/NumberElements\/4=0\n-FormatData\/ar_KW\/NumberElements\/5=#\n-FormatData\/ar_KW\/NumberElements\/6=-\n-FormatData\/ar_KW\/NumberElements\/7=E\n-FormatData\/ar_KW\/NumberElements\/8=\\u2030\n-FormatData\/ar_KW\/NumberElements\/9=\\u221e\n-FormatData\/ar_KW\/NumberElements\/10=\\ufffd\n-FormatData\/ar_LB\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_LB\/NumberPatterns\/1='\\u0644.\\u0644.\\u200f' #,##0.###;'\\u0644.\\u0644.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_LB\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/ar_LB\/LBP=\\u0644.\\u0644.\\u200f\n-FormatData\/ar_LB\/DayAbbreviations\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_LB\/DayAbbreviations\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_LB\/DayAbbreviations\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_LB\/DayAbbreviations\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_LB\/DayAbbreviations\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_LB\/DayAbbreviations\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_LB\/DayAbbreviations\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-FormatData\/ar_LB\/MonthNames\/0=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_LB\/MonthNames\/1=\\u0634\\u0628\\u0627\\u0637\n-FormatData\/ar_LB\/MonthNames\/2=\\u0622\\u0630\\u0627\\u0631\n-FormatData\/ar_LB\/MonthNames\/3=\\u0646\\u064a\\u0633\\u0627\\u0646\n-FormatData\/ar_LB\/MonthNames\/4=\\u0623\\u064a\\u0627\\u0631\n-FormatData\/ar_LB\/MonthNames\/5=\\u062d\\u0632\\u064a\\u0631\\u0627\\u0646\n-FormatData\/ar_LB\/MonthNames\/6=\\u062a\\u0645\\u0648\\u0632\n-FormatData\/ar_LB\/MonthNames\/7=\\u0622\\u0628\n-FormatData\/ar_LB\/MonthNames\/8=\\u0623\\u064a\\u0644\\u0648\\u0644\n-FormatData\/ar_LB\/MonthNames\/9=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_LB\/MonthNames\/10=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_LB\/MonthNames\/11=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_LB\/MonthNames\/12=\n-FormatData\/ar_LB\/MonthAbbreviations\/0=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_LB\/MonthAbbreviations\/1=\\u0634\\u0628\\u0627\\u0637\n-FormatData\/ar_LB\/MonthAbbreviations\/2=\\u0622\\u0630\\u0627\\u0631\n-FormatData\/ar_LB\/MonthAbbreviations\/3=\\u0646\\u064a\\u0633\\u0627\\u0646\n-FormatData\/ar_LB\/MonthAbbreviations\/4=\\u0623\\u064a\\u0627\\u0631\n-FormatData\/ar_LB\/MonthAbbreviations\/5=\\u062d\\u0632\\u064a\\u0631\\u0627\\u0646\n-FormatData\/ar_LB\/MonthAbbreviations\/6=\\u062a\\u0645\\u0648\\u0632\n-FormatData\/ar_LB\/MonthAbbreviations\/7=\\u0622\\u0628\n-FormatData\/ar_LB\/MonthAbbreviations\/8=\\u0623\\u064a\\u0644\\u0648\\u0644\n-FormatData\/ar_LB\/MonthAbbreviations\/9=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_LB\/MonthAbbreviations\/10=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_LB\/MonthAbbreviations\/11=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_LB\/MonthAbbreviations\/12=\n-FormatData\/ar_LB\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_LB\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_LB\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_LB\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_LB\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_LB\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_LB\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_LB\/firstDayOfWeek=7\n-CalendarData\/ar_LB\/minimalDaysInFirstWeek=1\n-FormatData\/ar_LB\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_LB\/Eras\/1=\\u0645\n-LocaleNames\/ar_LB\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_LB\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_LB\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_LB\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_LB\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_LB\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_LB\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_LB\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_LB\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_LB\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_LB\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_LB\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_LB\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_LB\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_LB\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_LB\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_LB\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_LB\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_LB\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_LB\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_LB\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_LB\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_LB\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_LB\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_LB\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_LB\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_LB\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_LB\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_LB\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_LB\/NumberElements\/0=.\n-FormatData\/ar_LB\/NumberElements\/1=,\n-FormatData\/ar_LB\/NumberElements\/2=;\n-FormatData\/ar_LB\/NumberElements\/3=%\n-FormatData\/ar_LB\/NumberElements\/4=0\n-FormatData\/ar_LB\/NumberElements\/5=#\n-FormatData\/ar_LB\/NumberElements\/6=-\n-FormatData\/ar_LB\/NumberElements\/7=E\n-FormatData\/ar_LB\/NumberElements\/8=\\u2030\n-FormatData\/ar_LB\/NumberElements\/9=\\u221e\n-FormatData\/ar_LB\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_LY\/LYD=\\u062f.\\u0644.\\u200f\n-FormatData\/ar_LY\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_LY\/NumberPatterns\/1='\\u062f.\\u0644.\\u200f' #,##0.###;'\\u062f.\\u0644.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_LY\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_LY\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_LY\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_LY\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_LY\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_LY\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_LY\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_LY\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_LY\/firstDayOfWeek=7\n-CalendarData\/ar_LY\/minimalDaysInFirstWeek=1\n-FormatData\/ar_LY\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_LY\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_LY\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_LY\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_LY\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_LY\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_LY\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_LY\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_LY\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_LY\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_LY\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_LY\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_LY\/MonthAbbreviations\/12=\n-FormatData\/ar_LY\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_LY\/Eras\/1=\\u0645\n-FormatData\/ar_LY\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_LY\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_LY\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_LY\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_LY\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_LY\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_LY\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_LY\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_LY\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_LY\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_LY\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_LY\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_LY\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_LY\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_LY\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_LY\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_LY\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_LY\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_LY\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_LY\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_LY\/MonthNames\/12=\n-FormatData\/ar_LY\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_LY\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_LY\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_LY\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_LY\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_LY\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_LY\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_LY\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_LY\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_LY\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_LY\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_LY\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_LY\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_LY\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_LY\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_LY\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_LY\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_LY\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_LY\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_LY\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_LY\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_LY\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_LY\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_LY\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_LY\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_LY\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_LY\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_LY\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_LY\/NumberElements\/0=.\n-FormatData\/ar_LY\/NumberElements\/1=,\n-FormatData\/ar_LY\/NumberElements\/2=;\n-FormatData\/ar_LY\/NumberElements\/3=%\n-FormatData\/ar_LY\/NumberElements\/4=0\n-FormatData\/ar_LY\/NumberElements\/5=#\n-FormatData\/ar_LY\/NumberElements\/6=-\n-FormatData\/ar_LY\/NumberElements\/7=E\n-FormatData\/ar_LY\/NumberElements\/8=\\u2030\n-FormatData\/ar_LY\/NumberElements\/9=\\u221e\n-FormatData\/ar_LY\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_MA\/MAD=\\u062f.\\u0645.\\u200f\n-FormatData\/ar_MA\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_MA\/NumberPatterns\/1='\\u062f.\\u0645.\\u200f' #,##0.###;'\\u062f.\\u0645.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_MA\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_MA\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_MA\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_MA\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_MA\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_MA\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_MA\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_MA\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_MA\/firstDayOfWeek=7\n-CalendarData\/ar_MA\/minimalDaysInFirstWeek=1\n-FormatData\/ar_MA\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_MA\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_MA\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_MA\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_MA\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_MA\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_MA\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_MA\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_MA\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_MA\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_MA\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_MA\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_MA\/MonthAbbreviations\/12=\n-FormatData\/ar_MA\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_MA\/Eras\/1=\\u0645\n-FormatData\/ar_MA\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_MA\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_MA\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_MA\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_MA\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_MA\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_MA\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_MA\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_MA\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_MA\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_MA\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_MA\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_MA\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_MA\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_MA\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_MA\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_MA\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_MA\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_MA\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_MA\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_MA\/MonthNames\/12=\n-FormatData\/ar_MA\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_MA\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_MA\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_MA\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_MA\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_MA\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_MA\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_MA\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_MA\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_MA\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_MA\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_MA\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_MA\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_MA\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_MA\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_MA\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_MA\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_MA\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_MA\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_MA\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_MA\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_MA\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_MA\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_MA\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_MA\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_MA\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_MA\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_MA\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_MA\/NumberElements\/0=.\n-FormatData\/ar_MA\/NumberElements\/1=,\n-FormatData\/ar_MA\/NumberElements\/2=;\n-FormatData\/ar_MA\/NumberElements\/3=%\n-FormatData\/ar_MA\/NumberElements\/4=0\n-FormatData\/ar_MA\/NumberElements\/5=#\n-FormatData\/ar_MA\/NumberElements\/6=-\n-FormatData\/ar_MA\/NumberElements\/7=E\n-FormatData\/ar_MA\/NumberElements\/8=\\u2030\n-FormatData\/ar_MA\/NumberElements\/9=\\u221e\n-FormatData\/ar_MA\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_OM\/OMR=\\u0631.\\u0639.\\u200f\n-FormatData\/ar_OM\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_OM\/NumberPatterns\/1='\\u0631.\\u0639.\\u200f' #,##0.###;'\\u0631.\\u0639.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_OM\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_OM\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_OM\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_OM\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_OM\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_OM\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_OM\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_OM\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_OM\/firstDayOfWeek=7\n-CalendarData\/ar_OM\/minimalDaysInFirstWeek=1\n-FormatData\/ar_OM\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_OM\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_OM\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_OM\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_OM\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_OM\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_OM\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_OM\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_OM\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_OM\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_OM\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_OM\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_OM\/MonthAbbreviations\/12=\n-FormatData\/ar_OM\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_OM\/Eras\/1=\\u0645\n-FormatData\/ar_OM\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_OM\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_OM\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_OM\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_OM\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_OM\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_OM\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_OM\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_OM\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_OM\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_OM\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_OM\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_OM\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_OM\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_OM\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_OM\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_OM\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_OM\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_OM\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_OM\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_OM\/MonthNames\/12=\n-FormatData\/ar_OM\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_OM\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_OM\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_OM\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_OM\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_OM\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_OM\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_OM\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_OM\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_OM\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_OM\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_OM\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_OM\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_OM\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_OM\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_OM\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_OM\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_OM\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_OM\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_OM\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_OM\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_OM\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_OM\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_OM\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_OM\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_OM\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_OM\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_OM\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_OM\/NumberElements\/0=.\n-FormatData\/ar_OM\/NumberElements\/1=,\n-FormatData\/ar_OM\/NumberElements\/2=;\n-FormatData\/ar_OM\/NumberElements\/3=%\n-FormatData\/ar_OM\/NumberElements\/4=0\n-FormatData\/ar_OM\/NumberElements\/5=#\n-FormatData\/ar_OM\/NumberElements\/6=-\n-FormatData\/ar_OM\/NumberElements\/7=E\n-FormatData\/ar_OM\/NumberElements\/8=\\u2030\n-FormatData\/ar_OM\/NumberElements\/9=\\u221e\n-FormatData\/ar_OM\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_QA\/QAR=\\u0631.\\u0642.\\u200f\n-FormatData\/ar_QA\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_QA\/NumberPatterns\/1='\\u0631.\\u0642.\\u200f' #,##0.###;'\\u0631.\\u0642.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_QA\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_QA\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_QA\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_QA\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_QA\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_QA\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_QA\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_QA\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_QA\/firstDayOfWeek=7\n-CalendarData\/ar_QA\/minimalDaysInFirstWeek=1\n-FormatData\/ar_QA\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_QA\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_QA\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_QA\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_QA\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_QA\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_QA\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_QA\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_QA\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_QA\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_QA\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_QA\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_QA\/MonthAbbreviations\/12=\n-FormatData\/ar_QA\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_QA\/Eras\/1=\\u0645\n-FormatData\/ar_QA\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_QA\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_QA\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_QA\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_QA\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_QA\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_QA\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_QA\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_QA\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_QA\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_QA\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_QA\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_QA\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_QA\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_QA\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_QA\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_QA\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_QA\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_QA\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_QA\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_QA\/MonthNames\/12=\n-FormatData\/ar_QA\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_QA\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_QA\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_QA\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_QA\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_QA\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_QA\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_QA\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_QA\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_QA\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_QA\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_QA\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_QA\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_QA\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_QA\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_QA\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_QA\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_QA\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_QA\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_QA\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_QA\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_QA\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_QA\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_QA\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_QA\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_QA\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_QA\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_QA\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_QA\/NumberElements\/0=.\n-FormatData\/ar_QA\/NumberElements\/1=,\n-FormatData\/ar_QA\/NumberElements\/2=;\n-FormatData\/ar_QA\/NumberElements\/3=%\n-FormatData\/ar_QA\/NumberElements\/4=0\n-FormatData\/ar_QA\/NumberElements\/5=#\n-FormatData\/ar_QA\/NumberElements\/6=-\n-FormatData\/ar_QA\/NumberElements\/7=E\n-FormatData\/ar_QA\/NumberElements\/8=\\u2030\n-FormatData\/ar_QA\/NumberElements\/9=\\u221e\n-FormatData\/ar_QA\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_SA\/SAR=\\u0631.\\u0633.\\u200f\n-FormatData\/ar_SA\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_SA\/NumberPatterns\/1='\\u0631.\\u0633.\\u200f' #,##0.###;'\\u0631.\\u0633.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_SA\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_SA\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_SA\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_SA\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_SA\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_SA\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_SA\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_SA\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_SA\/firstDayOfWeek=7\n-CalendarData\/ar_SA\/minimalDaysInFirstWeek=1\n-FormatData\/ar_SA\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_SA\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_SA\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_SA\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_SA\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_SA\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_SA\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_SA\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_SA\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_SA\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_SA\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_SA\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_SA\/MonthAbbreviations\/12=\n-FormatData\/ar_SA\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_SA\/Eras\/1=\\u0645\n-FormatData\/ar_SA\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_SA\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_SA\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_SA\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_SA\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_SA\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_SA\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_SA\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_SA\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_SA\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_SA\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_SA\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_SA\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_SA\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_SA\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_SA\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_SA\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_SA\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_SA\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_SA\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_SA\/MonthNames\/12=\n-FormatData\/ar_SA\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_SA\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_SA\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_SA\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_SA\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_SA\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_SA\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_SA\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_SA\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_SA\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_SA\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_SA\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_SA\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_SA\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_SA\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_SA\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_SA\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_SA\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_SA\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_SA\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_SA\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_SA\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_SA\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_SA\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_SA\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_SA\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_SA\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_SA\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_SA\/NumberElements\/0=.\n-FormatData\/ar_SA\/NumberElements\/1=,\n-FormatData\/ar_SA\/NumberElements\/2=;\n-FormatData\/ar_SA\/NumberElements\/3=%\n-FormatData\/ar_SA\/NumberElements\/4=0\n-FormatData\/ar_SA\/NumberElements\/5=#\n-FormatData\/ar_SA\/NumberElements\/6=-\n-FormatData\/ar_SA\/NumberElements\/7=E\n-FormatData\/ar_SA\/NumberElements\/8=\\u2030\n-FormatData\/ar_SA\/NumberElements\/9=\\u221e\n-FormatData\/ar_SA\/NumberElements\/10=\\ufffd\n-# changed for 4945388, removed for 6531591, see bellow\n-# CurrencyNames\/ar_SD\/SDD=\\u062c.\\u0633.\\u200f\n-FormatData\/ar_SD\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_SD\/NumberPatterns\/1='\\u062c.\\u0633.\\u200f' #,##0.###;'\\u062c.\\u0633.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_SD\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_SD\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_SD\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_SD\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_SD\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_SD\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_SD\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_SD\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_SD\/firstDayOfWeek=7\n-CalendarData\/ar_SD\/minimalDaysInFirstWeek=1\n-FormatData\/ar_SD\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_SD\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_SD\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_SD\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_SD\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_SD\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_SD\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_SD\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_SD\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_SD\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_SD\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_SD\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_SD\/MonthAbbreviations\/12=\n-FormatData\/ar_SD\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_SD\/Eras\/1=\\u0645\n-FormatData\/ar_SD\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_SD\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_SD\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_SD\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_SD\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_SD\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_SD\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_SD\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_SD\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_SD\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_SD\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_SD\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_SD\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_SD\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_SD\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_SD\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_SD\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_SD\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_SD\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_SD\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_SD\/MonthNames\/12=\n-FormatData\/ar_SD\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_SD\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_SD\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_SD\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_SD\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_SD\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_SD\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_SD\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_SD\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_SD\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_SD\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_SD\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_SD\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_SD\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_SD\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_SD\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_SD\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_SD\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_SD\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_SD\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_SD\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_SD\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_SD\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_SD\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_SD\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_SD\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_SD\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_SD\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_SD\/NumberElements\/0=.\n-FormatData\/ar_SD\/NumberElements\/1=,\n-FormatData\/ar_SD\/NumberElements\/2=;\n-FormatData\/ar_SD\/NumberElements\/3=%\n-FormatData\/ar_SD\/NumberElements\/4=0\n-FormatData\/ar_SD\/NumberElements\/5=#\n-FormatData\/ar_SD\/NumberElements\/6=-\n-FormatData\/ar_SD\/NumberElements\/7=E\n-FormatData\/ar_SD\/NumberElements\/8=\\u2030\n-FormatData\/ar_SD\/NumberElements\/9=\\u221e\n-FormatData\/ar_SD\/NumberElements\/10=\\ufffd\n-FormatData\/ar_SY\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_SY\/NumberPatterns\/1='\\u0644.\\u0633.\\u200f' #,##0.###;'\\u0644.\\u0633.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_SY\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/ar_SY\/SYP=\\u0644.\\u0633.\\u200f\n-FormatData\/ar_SY\/DayAbbreviations\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_SY\/DayAbbreviations\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_SY\/DayAbbreviations\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_SY\/DayAbbreviations\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_SY\/DayAbbreviations\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_SY\/DayAbbreviations\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_SY\/DayAbbreviations\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-FormatData\/ar_SY\/MonthNames\/0=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_SY\/MonthNames\/1=\\u0634\\u0628\\u0627\\u0637\n-FormatData\/ar_SY\/MonthNames\/2=\\u0622\\u0630\\u0627\\u0631\n-FormatData\/ar_SY\/MonthNames\/3=\\u0646\\u064a\\u0633\\u0627\\u0646\n-FormatData\/ar_SY\/MonthNames\/4=\\u0623\\u064a\\u0627\\u0631\n-FormatData\/ar_SY\/MonthNames\/5=\\u062d\\u0632\\u064a\\u0631\\u0627\\u0646\n-FormatData\/ar_SY\/MonthNames\/6=\\u062a\\u0645\\u0648\\u0632\n-FormatData\/ar_SY\/MonthNames\/7=\\u0622\\u0628\n-FormatData\/ar_SY\/MonthNames\/8=\\u0623\\u064a\\u0644\\u0648\\u0644\n-FormatData\/ar_SY\/MonthNames\/9=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_SY\/MonthNames\/10=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_SY\/MonthNames\/11=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_SY\/MonthNames\/12=\n-FormatData\/ar_SY\/MonthAbbreviations\/0=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_SY\/MonthAbbreviations\/1=\\u0634\\u0628\\u0627\\u0637\n-FormatData\/ar_SY\/MonthAbbreviations\/2=\\u0622\\u0630\\u0627\\u0631\n-FormatData\/ar_SY\/MonthAbbreviations\/3=\\u0646\\u064a\\u0633\\u0627\\u0646\n-FormatData\/ar_SY\/MonthAbbreviations\/4=\\u0623\\u064a\\u0627\\u0631\n-FormatData\/ar_SY\/MonthAbbreviations\/5=\\u062d\\u0632\\u064a\\u0631\\u0627\\u0646\n-FormatData\/ar_SY\/MonthAbbreviations\/6=\\u062a\\u0645\\u0648\\u0632\n-FormatData\/ar_SY\/MonthAbbreviations\/7=\\u0622\\u0628\n-FormatData\/ar_SY\/MonthAbbreviations\/8=\\u0623\\u064a\\u0644\\u0648\\u0644\n-FormatData\/ar_SY\/MonthAbbreviations\/9=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_SY\/MonthAbbreviations\/10=\\u062a\\u0634\\u0631\\u064a\\u0646 \\u0627\\u0644\\u062b\\u0627\\u0646\\u064a\n-FormatData\/ar_SY\/MonthAbbreviations\/11=\\u0643\\u0627\\u0646\\u0648\\u0646 \\u0627\\u0644\\u0623\\u0648\\u0644\n-FormatData\/ar_SY\/MonthAbbreviations\/12=\n-FormatData\/ar_SY\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_SY\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_SY\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_SY\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_SY\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_SY\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_SY\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_SY\/firstDayOfWeek=7\n-CalendarData\/ar_SY\/minimalDaysInFirstWeek=1\n-FormatData\/ar_SY\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_SY\/Eras\/1=\\u0645\n-LocaleNames\/ar_SY\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_SY\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_SY\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_SY\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_SY\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_SY\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_SY\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_SY\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_SY\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_SY\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_SY\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_SY\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_SY\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_SY\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_SY\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_SY\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_SY\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_SY\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_SY\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_SY\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_SY\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_SY\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_SY\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_SY\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_SY\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_SY\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_SY\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_SY\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_SY\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_SY\/NumberElements\/0=.\n-FormatData\/ar_SY\/NumberElements\/1=,\n-FormatData\/ar_SY\/NumberElements\/2=;\n-FormatData\/ar_SY\/NumberElements\/3=%\n-FormatData\/ar_SY\/NumberElements\/4=0\n-FormatData\/ar_SY\/NumberElements\/5=#\n-FormatData\/ar_SY\/NumberElements\/6=-\n-FormatData\/ar_SY\/NumberElements\/7=E\n-FormatData\/ar_SY\/NumberElements\/8=\\u2030\n-FormatData\/ar_SY\/NumberElements\/9=\\u221e\n-FormatData\/ar_SY\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_TN\/TND=\\u062f.\\u062a.\\u200f\n-FormatData\/ar_TN\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_TN\/NumberPatterns\/1='\\u062f.\\u062a.\\u200f' #,##0.###;'\\u062f.\\u062a.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_TN\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_TN\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_TN\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_TN\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_TN\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_TN\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_TN\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_TN\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_TN\/firstDayOfWeek=7\n-CalendarData\/ar_TN\/minimalDaysInFirstWeek=1\n-FormatData\/ar_TN\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_TN\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_TN\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_TN\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_TN\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_TN\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_TN\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_TN\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_TN\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_TN\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_TN\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_TN\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_TN\/MonthAbbreviations\/12=\n-FormatData\/ar_TN\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_TN\/Eras\/1=\\u0645\n-FormatData\/ar_TN\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_TN\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_TN\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_TN\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_TN\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_TN\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_TN\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_TN\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_TN\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_TN\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_TN\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_TN\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_TN\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_TN\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_TN\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_TN\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_TN\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_TN\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_TN\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_TN\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_TN\/MonthNames\/12=\n-FormatData\/ar_TN\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_TN\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_TN\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_TN\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_TN\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_TN\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_TN\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_TN\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_TN\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_TN\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_TN\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_TN\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_TN\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_TN\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_TN\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_TN\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_TN\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_TN\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_TN\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_TN\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_TN\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_TN\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_TN\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_TN\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_TN\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_TN\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_TN\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_TN\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_TN\/NumberElements\/0=.\n-FormatData\/ar_TN\/NumberElements\/1=,\n-FormatData\/ar_TN\/NumberElements\/2=;\n-FormatData\/ar_TN\/NumberElements\/3=%\n-FormatData\/ar_TN\/NumberElements\/4=0\n-FormatData\/ar_TN\/NumberElements\/5=#\n-FormatData\/ar_TN\/NumberElements\/6=-\n-FormatData\/ar_TN\/NumberElements\/7=E\n-FormatData\/ar_TN\/NumberElements\/8=\\u2030\n-FormatData\/ar_TN\/NumberElements\/9=\\u221e\n-FormatData\/ar_TN\/NumberElements\/10=\\ufffd\n-CurrencyNames\/ar_YE\/YER=\\u0631.\\u064a.\\u200f\n-FormatData\/ar_YE\/NumberPatterns\/0=#,##0.###;#,##0.###-\n-# FormatData\/ar_YE\/NumberPatterns\/1='\\u0631.\\u064a.\\u200f' #,##0.###;'\\u0631.\\u064a.\\u200f' #,##0.###- # Changed; see bug 4122840\n-FormatData\/ar_YE\/NumberPatterns\/2=#,##0%\n-FormatData\/ar_YE\/DayNames\/0=\\u0627\\u0644\\u0623\\u062d\\u062f\n-FormatData\/ar_YE\/DayNames\/1=\\u0627\\u0644\\u0627\\u062b\\u0646\\u064a\\u0646\n-FormatData\/ar_YE\/DayNames\/2=\\u0627\\u0644\\u062b\\u0644\\u0627\\u062b\\u0627\\u0621\n-FormatData\/ar_YE\/DayNames\/3=\\u0627\\u0644\\u0623\\u0631\\u0628\\u0639\\u0627\\u0621\n-FormatData\/ar_YE\/DayNames\/4=\\u0627\\u0644\\u062e\\u0645\\u064a\\u0633\n-FormatData\/ar_YE\/DayNames\/5=\\u0627\\u0644\\u062c\\u0645\\u0639\\u0629\n-FormatData\/ar_YE\/DayNames\/6=\\u0627\\u0644\\u0633\\u0628\\u062a\n-CalendarData\/ar_YE\/firstDayOfWeek=7\n-CalendarData\/ar_YE\/minimalDaysInFirstWeek=1\n-FormatData\/ar_YE\/MonthAbbreviations\/0=\\u064a\\u0646\\u0627\n-FormatData\/ar_YE\/MonthAbbreviations\/1=\\u0641\\u0628\\u0631\n-FormatData\/ar_YE\/MonthAbbreviations\/2=\\u0645\\u0627\\u0631\n-FormatData\/ar_YE\/MonthAbbreviations\/3=\\u0623\\u0628\\u0631\n-FormatData\/ar_YE\/MonthAbbreviations\/4=\\u0645\\u0627\\u064a\n-FormatData\/ar_YE\/MonthAbbreviations\/5=\\u064a\\u0648\\u0646\n-FormatData\/ar_YE\/MonthAbbreviations\/6=\\u064a\\u0648\\u0644\n-FormatData\/ar_YE\/MonthAbbreviations\/7=\\u0623\\u063a\\u0633\n-FormatData\/ar_YE\/MonthAbbreviations\/8=\\u0633\\u0628\\u062a\n-FormatData\/ar_YE\/MonthAbbreviations\/9=\\u0623\\u0643\\u062a\n-FormatData\/ar_YE\/MonthAbbreviations\/10=\\u0646\\u0648\\u0641\n-FormatData\/ar_YE\/MonthAbbreviations\/11=\\u062f\\u064a\\u0633\n-FormatData\/ar_YE\/MonthAbbreviations\/12=\n-FormatData\/ar_YE\/Eras\/0=\\u0642.\\u0645\n-FormatData\/ar_YE\/Eras\/1=\\u0645\n-FormatData\/ar_YE\/DayAbbreviations\/0=\\u062d\n-FormatData\/ar_YE\/DayAbbreviations\/1=\\u0646\n-FormatData\/ar_YE\/DayAbbreviations\/2=\\u062b\n-FormatData\/ar_YE\/DayAbbreviations\/3=\\u0631\n-FormatData\/ar_YE\/DayAbbreviations\/4=\\u062e\n-FormatData\/ar_YE\/DayAbbreviations\/5=\\u062c\n-FormatData\/ar_YE\/DayAbbreviations\/6=\\u0633\n-LocaleNames\/ar_YE\/ar=\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629\n-FormatData\/ar_YE\/MonthNames\/0=\\u064a\\u0646\\u0627\\u064a\\u0631\n-FormatData\/ar_YE\/MonthNames\/1=\\u0641\\u0628\\u0631\\u0627\\u064a\\u0631\n-FormatData\/ar_YE\/MonthNames\/2=\\u0645\\u0627\\u0631\\u0633\n-FormatData\/ar_YE\/MonthNames\/3=\\u0623\\u0628\\u0631\\u064a\\u0644\n-FormatData\/ar_YE\/MonthNames\/4=\\u0645\\u0627\\u064a\\u0648\n-FormatData\/ar_YE\/MonthNames\/5=\\u064a\\u0648\\u0646\\u064a\\u0648\n-FormatData\/ar_YE\/MonthNames\/6=\\u064a\\u0648\\u0644\\u064a\\u0648\n-FormatData\/ar_YE\/MonthNames\/7=\\u0623\\u063a\\u0633\\u0637\\u0633\n-FormatData\/ar_YE\/MonthNames\/8=\\u0633\\u0628\\u062a\\u0645\\u0628\\u0631\n-FormatData\/ar_YE\/MonthNames\/9=\\u0623\\u0643\\u062a\\u0648\\u0628\\u0631\n-FormatData\/ar_YE\/MonthNames\/10=\\u0646\\u0648\\u0641\\u0645\\u0628\\u0631\n-FormatData\/ar_YE\/MonthNames\/11=\\u062f\\u064a\\u0633\\u0645\\u0628\\u0631\n-FormatData\/ar_YE\/MonthNames\/12=\n-FormatData\/ar_YE\/AmPmMarkers\/0=\\u0635\n-FormatData\/ar_YE\/AmPmMarkers\/1=\\u0645\n-FormatData\/ar_YE\/TimePatterns\/0=z hh:mm:ss a\n-FormatData\/ar_YE\/TimePatterns\/1=z hh:mm:ss a\n-FormatData\/ar_YE\/TimePatterns\/2=hh:mm:ss a\n-FormatData\/ar_YE\/TimePatterns\/3=hh:mm a\n-FormatData\/ar_YE\/DatePatterns\/0=dd MMMM, yyyy\n-FormatData\/ar_YE\/DatePatterns\/1=dd MMMM, yyyy\n-FormatData\/ar_YE\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/ar_YE\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/ar_YE\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/ar_YE\/EG=\\u0645\\u0635\\u0631\n-LocaleNames\/ar_YE\/DZ=\\u0627\\u0644\\u062c\\u0632\\u0627\\u0626\\u0631\n-LocaleNames\/ar_YE\/BH=\\u0627\\u0644\\u0628\\u062d\\u0631\\u064a\\u0646\n-LocaleNames\/ar_YE\/IQ=\\u0627\\u0644\\u0639\\u0631\\u0627\\u0642\n-LocaleNames\/ar_YE\/JO=\\u0627\\u0644\\u0623\\u0631\\u062f\\u0646\n-LocaleNames\/ar_YE\/KW=\\u0627\\u0644\\u0643\\u0648\\u064a\\u062a\n-LocaleNames\/ar_YE\/LB=\\u0644\\u0628\\u0646\\u0627\\u0646\n-LocaleNames\/ar_YE\/LY=\\u0644\\u064a\\u0628\\u064a\\u0627\n-LocaleNames\/ar_YE\/MA=\\u0627\\u0644\\u0645\\u063a\\u0631\\u0628\n-LocaleNames\/ar_YE\/OM=\\u0639\\u064f\\u0645\\u0627\\u0646\n-LocaleNames\/ar_YE\/QA=\\u0642\\u0637\\u0631\n-LocaleNames\/ar_YE\/SA=\\u0627\\u0644\\u0645\\u0645\\u0644\\u0643\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0633\\u0639\\u0648\\u062f\\u064a\\u0629\n-LocaleNames\/ar_YE\/SD=\\u0627\\u0644\\u0633\\u0648\\u062f\\u0627\\u0646\n-LocaleNames\/ar_YE\/SY=\\u0633\\u0648\\u0631\\u064a\\u0627\n-LocaleNames\/ar_YE\/TN=\\u062a\\u0648\\u0646\\u0633\n-LocaleNames\/ar_YE\/AE=\\u0627\\u0644\\u0625\\u0645\\u0627\\u0631\\u0627\\u062a \\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629 \\u0627\\u0644\\u0645\\u062a\\u062d\\u062f\\u0629\n-LocaleNames\/ar_YE\/YE=\\u0627\\u0644\\u064a\\u0645\\u0646\n-FormatData\/ar_YE\/NumberElements\/0=.\n-FormatData\/ar_YE\/NumberElements\/1=,\n-FormatData\/ar_YE\/NumberElements\/2=;\n-FormatData\/ar_YE\/NumberElements\/3=%\n-FormatData\/ar_YE\/NumberElements\/4=0\n-FormatData\/ar_YE\/NumberElements\/5=#\n-FormatData\/ar_YE\/NumberElements\/6=-\n-FormatData\/ar_YE\/NumberElements\/7=E\n-FormatData\/ar_YE\/NumberElements\/8=\\u2030\n-FormatData\/ar_YE\/NumberElements\/9=\\u221e\n-FormatData\/ar_YE\/NumberElements\/10=\\ufffd\n-\n-# bug #4113654 (this is obviously not an exhaustive test; I'm trying it here for a single\n-# inheritance chain only.  This bug fix also gets tested fairly well by the tests for all\n-# the other bugs as given above)\n-FormatData\/\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/\/NumberPatterns\/1=\\u00a4 #,##0.00;-\\u00a4 #,##0.00 # Changed; see bug 4122840\n-FormatData\/\/NumberPatterns\/2=#,##0%\n-FormatData\/fr\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/fr\/NumberPatterns\/1=\\u00a4 #,##0.00;-\\u00a4 #,##0.00 # Changed; see bug 4122840\n-# FormatData\/fr\/NumberPatterns\/2=#,##0% # changed, see bug 6547501\n-CurrencyNames\/fr_FR\/FRF=F\n-CurrencyNames\/fr_FR\/EUR=\\u20ac\n-FormatData\/fr_FR\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-# FormatData\/fr_FR\/NumberPatterns\/1=#,##0.00 F;-#,##0.00 F # Changed; see bug 4122840\n-# FormatData\/fr_FR\/NumberPatterns\/2=#,##0% # changed; see bug 6547501\n-FormatData\/fr_FR\/DayNames\/0=dimanche\n-FormatData\/fr_FR\/DayNames\/1=lundi\n-FormatData\/fr_FR\/DayNames\/2=mardi\n-FormatData\/fr_FR\/DayNames\/3=mercredi\n-FormatData\/fr_FR\/DayNames\/4=jeudi\n-FormatData\/fr_FR\/DayNames\/5=vendredi\n-FormatData\/fr_FR\/DayNames\/6=samedi\n-FormatData\/fr_FR\/MonthNames\/0=janvier\n-FormatData\/fr_FR\/MonthNames\/1=f\\u00e9vrier\n-FormatData\/fr_FR\/MonthNames\/2=mars\n-FormatData\/fr_FR\/MonthNames\/3=avril\n-FormatData\/fr_FR\/MonthNames\/4=mai\n-FormatData\/fr_FR\/MonthNames\/5=juin\n-FormatData\/fr_FR\/MonthNames\/6=juillet\n-FormatData\/fr_FR\/MonthNames\/7=ao\\u00fbt\n-FormatData\/fr_FR\/MonthNames\/8=septembre\n-FormatData\/fr_FR\/MonthNames\/9=octobre\n-FormatData\/fr_FR\/MonthNames\/10=novembre\n-FormatData\/fr_FR\/MonthNames\/11=d\\u00e9cembre\n-FormatData\/fr_FR\/MonthNames\/12=\n-LocaleNames\/fr_FR\/fr=fran\\u00e7ais\n-LocaleNames\/fr_FR\/en=anglais\n-LocaleNames\/fr_FR\/de=allemand\n-LocaleNames\/fr_FR\/da=danois\n-LocaleNames\/fr_FR\/es=espagnol\n-LocaleNames\/fr_FR\/el=grec\n-LocaleNames\/fr_FR\/fi=finnois\n-LocaleNames\/fr_FR\/it=italien\n-LocaleNames\/fr_FR\/ja=japonais\n-#bug 4965260\n-LocaleNames\/fr_FR\/nl=n\\u00e9erlandais\n-LocaleNames\/fr_FR\/no=norv\\u00e9gien\n-LocaleNames\/fr_FR\/pt=portugais\n-LocaleNames\/fr_FR\/sv=su\\u00e9dois\n-LocaleNames\/fr_FR\/tr=turc\n-FormatData\/fr_FR\/TimePatterns\/0=HH' h 'mm z\n-FormatData\/fr_FR\/TimePatterns\/1=HH:mm:ss z\n-FormatData\/fr_FR\/TimePatterns\/2=HH:mm:ss\n-FormatData\/fr_FR\/TimePatterns\/3=HH:mm\n-FormatData\/fr_FR\/DatePatterns\/0=EEEE d MMMM yyyy\n-FormatData\/fr_FR\/DatePatterns\/1=d MMMM yyyy\n-FormatData\/fr_FR\/DatePatterns\/2=d MMM yyyy\n-FormatData\/fr_FR\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/fr_FR\/DateTimePatterns\/0={1} {0}\n-FormatData\/fr_FR\/NumberElements\/0=,\n-FormatData\/fr_FR\/NumberElements\/1=\\u00a0\n-FormatData\/fr_FR\/NumberElements\/2=;\n-FormatData\/fr_FR\/NumberElements\/3=%\n-FormatData\/fr_FR\/NumberElements\/4=0\n-FormatData\/fr_FR\/NumberElements\/5=#\n-FormatData\/fr_FR\/NumberElements\/6=-\n-FormatData\/fr_FR\/NumberElements\/7=E\n-FormatData\/fr_FR\/NumberElements\/8=\\u2030\n-FormatData\/fr_FR\/NumberElements\/9=\\u221e\n-FormatData\/fr_FR\/NumberElements\/10=\\ufffd\n-FormatData\/fr_FR\/Eras\/0=BC\n-FormatData\/fr_FR\/Eras\/1=ap. J.-C.\n-LocaleNames\/fr_FR\/FR=France\n-LocaleNames\/fr_FR\/US=\\u00c9tats-Unis\n-LocaleNames\/fr_FR\/DK=Danemark\n-LocaleNames\/fr_FR\/DE=Allemagne\n-LocaleNames\/fr_FR\/AT=Autriche\n-LocaleNames\/fr_FR\/GR=Gr\\u00e8ce\n-LocaleNames\/fr_FR\/ES=Espagne\n-LocaleNames\/fr_FR\/FI=Finlande\n-LocaleNames\/fr_FR\/IT=Italie\n-LocaleNames\/fr_FR\/CH=Suisse\n-LocaleNames\/fr_FR\/BE=Belgique\n-LocaleNames\/fr_FR\/CA=Canada\n-LocaleNames\/fr_FR\/JP=Japon\n-LocaleNames\/fr_FR\/NL=Pays-Bas\n-LocaleNames\/fr_FR\/NO=Norv\\u00e8ge\n-LocaleNames\/fr_FR\/PT=Portugal\n-LocaleNames\/fr_FR\/SE=Su\\u00e8de\n-LocaleNames\/fr_FR\/TR=Turquie\n-FormatData\/fr_FR\/DayAbbreviations\/0=dim.\n-FormatData\/fr_FR\/DayAbbreviations\/1=lun.\n-FormatData\/fr_FR\/DayAbbreviations\/2=mar.\n-FormatData\/fr_FR\/DayAbbreviations\/3=mer.\n-FormatData\/fr_FR\/DayAbbreviations\/4=jeu.\n-FormatData\/fr_FR\/DayAbbreviations\/5=ven.\n-FormatData\/fr_FR\/DayAbbreviations\/6=sam.\n-FormatData\/fr_FR\/MonthAbbreviations\/0=janv.\n-FormatData\/fr_FR\/MonthAbbreviations\/1=f\\u00e9vr.\n-FormatData\/fr_FR\/MonthAbbreviations\/2=mars\n-FormatData\/fr_FR\/MonthAbbreviations\/3=avr.\n-FormatData\/fr_FR\/MonthAbbreviations\/4=mai\n-FormatData\/fr_FR\/MonthAbbreviations\/5=juin\n-FormatData\/fr_FR\/MonthAbbreviations\/6=juil.\n-FormatData\/fr_FR\/MonthAbbreviations\/7=ao\\u00fbt\n-FormatData\/fr_FR\/MonthAbbreviations\/8=sept.\n-FormatData\/fr_FR\/MonthAbbreviations\/9=oct.\n-FormatData\/fr_FR\/MonthAbbreviations\/10=nov.\n-FormatData\/fr_FR\/MonthAbbreviations\/11=d\\u00e9c.\n-FormatData\/fr_FR\/MonthAbbreviations\/12=\n-CalendarData\/fr_FR\/firstDayOfWeek=2\n-# next line changed according the 4518811 bug\n-CalendarData\/fr_FR\/minimalDaysInFirstWeek=4\n-FormatData\/fr_FR\/AmPmMarkers\/0=AM\n-FormatData\/fr_FR\/AmPmMarkers\/1=PM\n-\n-# bug #4117054\n-FormatData\/ja_JP\/AmPmMarkers\/0=\\u5348\\u524d\n-FormatData\/ja_JP\/AmPmMarkers\/1=\\u5348\\u5f8c\n-\n-# bug #4122840, 4290801\n-FormatData\/ar_AE\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_BH\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_DZ\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_EG\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_IQ\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_JO\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_KW\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_LB\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_LY\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_MA\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_OM\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_QA\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_SA\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_SD\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_SY\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_TN\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/ar_YE\/NumberPatterns\/1=\\u00a4 #,##0.###;\\u00a4 #,##0.###-\n-FormatData\/en_AU\/NumberPatterns\/1=\\u00a4#,##0.00;-\\u00a4#,##0.00\n-FormatData\/en_NZ\/NumberPatterns\/1=\\u00a4#,##0.00;-\\u00a4#,##0.00\n-FormatData\/en_ZA\/NumberPatterns\/1=\\u00a4 #,##0.00;\\u00a4-#,##0.00\n-FormatData\/es_AR\/NumberPatterns\/1=\\u00a4#,##0.00;\\u00a4-#,##0.00\n-FormatData\/es_BO\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_CL\/NumberPatterns\/1=\\u00a4#,##0.00;\\u00a4-#,##0.00\n-FormatData\/es_CO\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_CR\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_DO\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_EC\/NumberPatterns\/1=\\u00a4#,##0.00;\\u00a4-#,##0.00\n-FormatData\/es_GT\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_HN\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_MX\/NumberPatterns\/1=\\u00a4#,##0.00;-\\u00a4#,##0.00\n-FormatData\/es_NI\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_PA\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_PE\/NumberPatterns\/1=\\u00a4#,##0.00;\\u00a4-#,##0.00\n-FormatData\/es_PR\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_PY\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_SV\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_UY\/NumberPatterns\/1=\\u00a4 #,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_VE\/NumberPatterns\/1=\\u00a4#,##0.00;\\u00a4 -#,##0.00\n-FormatData\/fr_FR\/NumberPatterns\/1=#,##0.00 \\u00a4;-#,##0.00 \\u00a4\n-FormatData\/it_IT\/NumberPatterns\/1=\\u00a4 #,##0.00;-\\u00a4 #,##0.00\n-#FormatData\/ja_JP\/NumberPatterns\/1=\\u00a4#,##0.00  #see bug 4175306\n-FormatData\/ko_KR\/NumberPatterns\/1=\\u00a4#,##0;-\\u00a4#,##0\n-FormatData\/pl_PL\/NumberPatterns\/1=#,##0.## \\u00a4;-#,##0.## \\u00a4\n-FormatData\/pt_BR\/NumberPatterns\/1=\\u00a4 #,##0.00;-\\u00a4 #,##0.00\n-#Changed; see 4936845\n-FormatData\/ru_RU\/NumberPatterns\/1=#,##0.## \\u00a4;-#,##0.## \\u00a4\n-FormatData\/uk_UA\/NumberPatterns\/1=#,##0.## \\u00a4;-#,##0.## \\u00a4\n-\n-# bug #4122468 # Use common country names\n-LocaleNames\/\/CI=C\\u00f4te d\\u2019Ivoire\n-LocaleNames\/\/LY=Libya\n-LocaleNames\/\/RU=Russia\n-LocaleNames\/\/VN=Vietnam\n-\n-# bug #4139860\n-FormatData\/cs\/DatePatterns\/0=EEEE, d. MMMM yyyy\n-FormatData\/cs\/DatePatterns\/1=d. MMMM yyyy\n-FormatData\/cs\/DatePatterns\/2=d.M.yyyy\n-FormatData\/cs\/DatePatterns\/3=d.M.yy\n-FormatData\/cs\/NumberElements\/1=\\u00a0\n-FormatData\/cs_CZ\/NumberPatterns\/0=#,##0.##;-#,##0.##\n-FormatData\/cs_CZ\/NumberPatterns\/1=#,##0.## \\u00a4;-#,##0.## \\u00a4\n-FormatData\/cs_CZ\/NumberPatterns\/2=#,##0%\n-\n-#bug #4135752\n-FormatData\/th_TH\/NumberPatterns\/1=\\u00a4#,##0.00;\\u00a4-#,##0.00\n-CurrencyNames\/th_TH\/THB=\\u0e3f\n-\n-#bug #4153698\n-# TimeZoneNames\/zh_HK\/zoneStrings\/0\/1=Hong Kong Standard Time # changed, see bug 4261506\n-# TimeZoneNames\/zh_HK\/zoneStrings\/0\/2=HKST # changed, see bug 4261506\n-LocaleNames\/zh\/HK=\\u4e2d\\u56fd\\u9999\\u6e2f\\u7279\\u522b\\u884c\\u653f\\u533a\n-FormatData\/zh_HK\/MonthNames\/0=\\u4e00\\u6708\n-FormatData\/zh_HK\/MonthNames\/1=\\u4e8c\\u6708\n-FormatData\/zh_HK\/MonthNames\/2=\\u4e09\\u6708\n-FormatData\/zh_HK\/MonthNames\/3=\\u56db\\u6708\n-FormatData\/zh_HK\/MonthAbbreviations\/0=1\\u6708\n-FormatData\/zh_HK\/MonthAbbreviations\/1=2\\u6708\n-FormatData\/zh_HK\/MonthAbbreviations\/2=3\\u6708\n-FormatData\/zh_HK\/MonthAbbreviations\/3=4\\u6708\n-FormatData\/zh_HK\/DayNames\/0=\\u661f\\u671f\\u65e5\n-FormatData\/zh_HK\/DayNames\/1=\\u661f\\u671f\\u4e00\n-FormatData\/zh_HK\/DayNames\/2=\\u661f\\u671f\\u4e8c\n-FormatData\/zh_HK\/DayAbbreviations\/0=\\u65e5\n-FormatData\/zh_HK\/DayAbbreviations\/1=\\u4e00\n-FormatData\/zh_HK\/DayAbbreviations\/2=\\u4e8c\n-FormatData\/zh_HK\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-CurrencyNames\/zh_HK\/HKD=HK$\n-FormatData\/zh_HK\/TimePatterns\/0=ahh'\\u6642'mm'\\u5206'ss'\\u79d2' z\n-FormatData\/zh_HK\/TimePatterns\/1=ahh'\\u6642'mm'\\u5206'ss'\\u79d2'\n-FormatData\/zh_HK\/TimePatterns\/2=ahh:mm:ss\n-FormatData\/zh_HK\/TimePatterns\/3=ah:mm\n-FormatData\/zh_HK\/DatePatterns\/0=yyyy'\\u5e74'MM'\\u6708'dd'\\u65e5' EEEE\n-FormatData\/zh_HK\/DatePatterns\/1=yyyy'\\u5e74'MM'\\u6708'dd'\\u65e5' EEEE\n-FormatData\/zh_HK\/DatePatterns\/2=yyyy'\\u5e74'M'\\u6708'd'\\u65e5'\n-FormatData\/zh_HK\/DatePatterns\/3=yy'\\u5e74'M'\\u6708'd'\\u65e5'\n-FormatData\/zh_HK\/DateTimePatterns\/0={1} {0}\n-\n-#bug #4149569\n-LocaleNames\/tr\/TR=T\\u00fcrkiye\n-\n-#bug 4175306\n-FormatData\/es_ES\/NumberPatterns\/1=#,##0 \\u00a4;-#,##0 \\u00a4\n-FormatData\/ja_JP\/NumberPatterns\/1=\\u00a4#,##0;-\\u00a4#,##0\n-\n-#bug #4215747 - commented out by mfang due to 4900884\n-#FormatData\/ko\/TimePatterns\/0=a h'\\uc2dc' m'\\ubd84' s'\\ucd08' z\n-#FormatData\/ko\/TimePatterns\/1=a h'\\uc2dc' m'\\ubd84' s'\\ucd08'\n-\n-#bug 4900884\n-FormatData\/ko\/TimePatterns\/0=a h'\\uc2dc' mm'\\ubd84' ss'\\ucd08' z\n-FormatData\/ko\/TimePatterns\/1=a h'\\uc2dc' mm'\\ubd84' ss'\\ucd08'\n-FormatData\/ko\/TimePatterns\/2=a h:mm:ss\n-FormatData\/ko\/TimePatterns\/3=a h:mm\n-\n-#bug 4209960 Incorrect language display names\n-#Updated for bug 4819436 Update language and country data for Locale class\n-LocaleNames\/\/fo=Faroese\n-LocaleNames\/\/iu=Inuktitut\n-LocaleNames\/\/sg=Sango\n-LocaleNames\/\/si=Sinhala\n-\n-#bug 4331446 Localized country and language names for major locales (excerpt only)\n-LocaleNames\/es\/SV=El Salvador\n-\n-#bug 4261506 (excerpt only)\n-TimeZoneNames\/en_CA\/CTT\/1=China Standard Time\n-TimeZoneNames\/en_CA\/CTT\/2=CST\n-\n-#bug nobugid, 4290801, 4942982\n-CurrencyNames\/ru_RU\/RUB=\\u0440\\u0443\\u0431.\n-\n-#bug 4826794\n-LocaleNames\/ru_RU\/MM=\\u041c\\u044c\\u044f\\u043d\\u043c\\u0430 (\\u0411\\u0438\\u0440\\u043c\\u0430)\n-\n-#bug 4518811\n-CalendarData\/ca_ES\/minimalDaysInFirstWeek=4\n-CalendarData\/cs_CZ\/minimalDaysInFirstWeek=4\n-CalendarData\/da_DK\/minimalDaysInFirstWeek=4\n-CalendarData\/de_AT\/minimalDaysInFirstWeek=4\n-CalendarData\/el_GR\/minimalDaysInFirstWeek=4\n-CalendarData\/en_IE\/minimalDaysInFirstWeek=4\n-CalendarData\/es_ES\/minimalDaysInFirstWeek=4\n-CalendarData\/et_EE\/minimalDaysInFirstWeek=4\n-CalendarData\/fi_FI\/minimalDaysInFirstWeek=4\n-CalendarData\/is_IS\/minimalDaysInFirstWeek=4\n-CalendarData\/lt_LT\/minimalDaysInFirstWeek=4\n-CalendarData\/pl_PL\/minimalDaysInFirstWeek=4\n-CalendarData\/pt_PT\/minimalDaysInFirstWeek=4\n-\n-#bug 4945388\n-CurrencyNames\/be_BY\/BYR=\\u0420\\u0443\\u0431\n-CurrencyNames\/bg_BG\/BGN=\\u043b\\u0432.\n-\n-#bug 4794068\n-FormatData\/ca_ES\/NumberPatterns\/0=#,##0.###;-#,##0.###\n-\n-#bug 5032580\n-FormatData\/sk\/DayNames\/0=Nede\\u013ea\n-FormatData\/sk\/DayAbbreviations\/5=Pi\n-\n-#bug 5074431\n-FormatData\/bg\/DayNames\/4=\\u0427\\u0435\\u0442\\u0432\\u044a\\u0440\\u0442\\u044a\\u043a\n-\n-#bug 2121133\n-FormatData\/sv\/NumberElements\/1=\\u00a0\n-\n-#bug 6208712\n-LocaleNames\/zh\/tw=\\u5951\\u7ef4\\u8bed\n-\n-#bug 6277020\n-CalendarData\/ca_ES\/firstDayOfWeek=2\n-\n-#bug 6277696\n-#zh_SG, id, id_ID, en_MT, mt_MT, en_PH, el, el_CY, ms, ms_MY\n-#zh_SG\n-FormatData\/zh_SG\/DayAbbreviations\/0=\\u5468\\u65e5\n-FormatData\/zh_SG\/DayAbbreviations\/1=\\u5468\\u4e00\n-FormatData\/zh_SG\/DayAbbreviations\/2=\\u5468\\u4e8c\n-FormatData\/zh_SG\/DayAbbreviations\/3=\\u5468\\u4e09\n-FormatData\/zh_SG\/DayAbbreviations\/4=\\u5468\\u56db\n-FormatData\/zh_SG\/DayAbbreviations\/5=\\u5468\\u4e94\n-FormatData\/zh_SG\/DayAbbreviations\/6=\\u5468\\u516d\n-FormatData\/zh_SG\/NumberPatterns\/0=#,##0.###\n-FormatData\/zh_SG\/NumberPatterns\/1=\\u00a4#,##0.00\n-FormatData\/zh_SG\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/zh_SG\/SGD=S$\n-FormatData\/zh_SG\/TimePatterns\/0=a hh:mm:ss\n-FormatData\/zh_SG\/TimePatterns\/1=a hh:mm:ss\n-FormatData\/zh_SG\/TimePatterns\/2=a hh:mm\n-FormatData\/zh_SG\/TimePatterns\/3=a hh:mm\n-FormatData\/zh_SG\/DatePatterns\/0=dd MMMM yyyy\n-FormatData\/zh_SG\/DatePatterns\/1=dd MMM yyyy\n-FormatData\/zh_SG\/DatePatterns\/2=dd-MMM-yy\n-FormatData\/zh_SG\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/zh_SG\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/zh_SG\/ae=\\u963f\\u7ef4\\u65af\\u5854\\u8bed\n-LocaleNames\/zh_SG\/ak=\\u963f\\u80af\\u8bed\n-LocaleNames\/zh_SG\/cr=\\u514b\\u91cc\\u65cf\\u8bed\n-LocaleNames\/zh_SG\/cu=\\u6559\\u4f1a\\u65af\\u62c9\\u592b\\u8bed\n-LocaleNames\/zh_SG\/ff=\\u5bcc\\u62c9\\u8bed\n-LocaleNames\/zh_SG\/gv=\\u9a6c\\u6069\\u8bed\n-LocaleNames\/zh_SG\/ig=\\u4f0a\\u535a\\u8bed\n-LocaleNames\/zh_SG\/ii=\\u56db\\u5ddd\\u5f5d\\u8bed\n-LocaleNames\/zh_SG\/ko=\\u97e9\\u8bed\n-LocaleNames\/zh_SG\/kw=\\u5eb7\\u6c83\\u5c14\\u8bed\n-LocaleNames\/zh_SG\/lg=\\u5362\\u5e72\\u8fbe\\u8bed\n-LocaleNames\/zh_SG\/li=\\u6797\\u5821\\u8bed\n-LocaleNames\/zh_SG\/lu=\\u9c81\\u5df4\\u52a0\\u4e39\\u52a0\\u8bed\n-LocaleNames\/zh_SG\/nd=\\u5317\\u6069\\u5fb7\\u8d1d\\u52d2\\u8bed\n-LocaleNames\/zh_SG\/nr=\\u5357\\u6069\\u5fb7\\u8d1d\\u52d2\\u8bed\n-LocaleNames\/zh_SG\/sc=\\u8428\\u4e01\\u8bed\n-LocaleNames\/zh_SG\/ty=\\u5854\\u5e0c\\u63d0\\u8bed\n-LocaleNames\/zh_SG\/AS=\\u7f8e\\u5c5e\\u8428\\u6469\\u4e9a\n-LocaleNames\/zh_SG\/AU=\\u6fb3\\u5927\\u5229\\u4e9a\n-LocaleNames\/zh_SG\/BD=\\u5b5f\\u52a0\\u62c9\\u56fd\n-LocaleNames\/zh_SG\/BV=\\u5e03\\u97e6\\u5c9b\n-LocaleNames\/zh_SG\/BZ=\\u4f2f\\u5229\\u5179\n-LocaleNames\/zh_SG\/CZ=\\u6377\\u514b\n-LocaleNames\/zh_SG\/ER=\\u5384\\u7acb\\u7279\\u91cc\\u4e9a\n-LocaleNames\/zh_SG\/FK=\\u798f\\u514b\\u5170\\u7fa4\\u5c9b\n-LocaleNames\/zh_SG\/FM=\\u5bc6\\u514b\\u7f57\\u5c3c\\u897f\\u4e9a\n-LocaleNames\/zh_SG\/GS=\\u5357\\u4e54\\u6cbb\\u4e9a\\u548c\\u5357\\u6851\\u5a01\\u5947\\u7fa4\\u5c9b\n-LocaleNames\/zh_SG\/GW=\\u51e0\\u5185\\u4e9a\\u6bd4\\u7ecd\n-LocaleNames\/zh_SG\/HK=\\u4e2d\\u56fd\\u9999\\u6e2f\\u7279\\u522b\\u884c\\u653f\\u533a\n-LocaleNames\/zh_SG\/HM=\\u8d6b\\u5fb7\\u5c9b\\u548c\\u9ea6\\u514b\\u5510\\u7eb3\\u7fa4\\u5c9b\n-LocaleNames\/zh_SG\/ID=\\u5370\\u5ea6\\u5c3c\\u897f\\u4e9a\n-LocaleNames\/zh_SG\/KR=\\u97e9\\u56fd\n-LocaleNames\/zh_SG\/LA=\\u8001\\u631d\n-LocaleNames\/zh_SG\/MK=\\u5317\\u9a6c\\u5176\\u987f\n-LocaleNames\/zh_SG\/MO=\\u4e2d\\u56fd\\u6fb3\\u95e8\\u7279\\u522b\\u884c\\u653f\\u533a\n-LocaleNames\/zh_SG\/MP=\\u5317\\u9a6c\\u91cc\\u4e9a\\u7eb3\\u7fa4\\u5c9b\n-LocaleNames\/zh_SG\/NU=\\u7ebd\\u57c3\n-LocaleNames\/zh_SG\/NZ=\\u65b0\\u897f\\u5170\n-LocaleNames\/zh_SG\/PF=\\u6cd5\\u5c5e\\u6ce2\\u5229\\u5c3c\\u897f\\u4e9a\n-LocaleNames\/zh_SG\/PM=\\u5723\\u76ae\\u57c3\\u5c14\\u548c\\u5bc6\\u514b\\u9686\\u7fa4\\u5c9b\n-LocaleNames\/zh_SG\/PN=\\u76ae\\u7279\\u51ef\\u6069\\u7fa4\\u5c9b\n-LocaleNames\/zh_SG\/PR=\\u6ce2\\u591a\\u9ece\\u5404\n-LocaleNames\/zh_SG\/PS=\\u5df4\\u52d2\\u65af\\u5766\\u9886\\u571f\n-LocaleNames\/zh_SG\/RE=\\u7559\\u5c3c\\u6c6a\n-LocaleNames\/zh_SG\/SA=\\u6c99\\u7279\\u963f\\u62c9\\u4f2f\n-LocaleNames\/zh_SG\/SH=\\u5723\\u8d6b\\u52d2\\u62ff\n-LocaleNames\/zh_SG\/SJ=\\u65af\\u74e6\\u5c14\\u5df4\\u548c\\u626c\\u9a6c\\u5ef6\n-LocaleNames\/zh_SG\/SL=\\u585e\\u62c9\\u5229\\u6602\n-LocaleNames\/zh_SG\/TC=\\u7279\\u514b\\u65af\\u548c\\u51ef\\u79d1\\u65af\\u7fa4\\u5c9b\n-LocaleNames\/zh_SG\/TK=\\u6258\\u514b\\u52b3\n-LocaleNames\/zh_SG\/TW=\\u53f0\\u6e7e\n-LocaleNames\/zh_SG\/UM=\\u7f8e\\u56fd\\u672c\\u571f\\u5916\\u5c0f\\u5c9b\\u5c7f\n-LocaleNames\/zh_SG\/WF=\\u74e6\\u5229\\u65af\\u548c\\u5bcc\\u56fe\\u7eb3\n-LocaleNames\/zh_SG\/WS=\\u8428\\u6469\\u4e9a\n-LocaleNames\/zh_SG\/YT=\\u9a6c\\u7ea6\\u7279\n-#en_SG\n-FormatData\/en_SG\/NumberPatterns\/0=#,##0.###\n-FormatData\/en_SG\/NumberPatterns\/1=\\u00a4#,##0.00\n-FormatData\/en_SG\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/en_SG\/SGD=$\n-LocaleNames\/en_SG\/kj=Kuanyama\n-LocaleNames\/en_SG\/kl=Kalaallisut\n-LocaleNames\/en_SG\/ny=Nyanja\n-LocaleNames\/en_SG\/oc=Occitan\n-LocaleNames\/en_SG\/os=Ossetic\n-LocaleNames\/en_SG\/pa=Punjabi\n-LocaleNames\/en_SG\/rm=Romansh\n-LocaleNames\/en_SG\/to=Tongan\n-LocaleNames\/en_SG\/CC=Cocos (Keeling) Islands\n-LocaleNames\/en_SG\/CI=C\\u00f4te d\\u2019Ivoire\n-LocaleNames\/en_SG\/GS=South Georgia & South Sandwich Islands\n-LocaleNames\/en_SG\/HM=Heard & McDonald Islands\n-LocaleNames\/en_SG\/KN=St. Kitts & Nevis\n-LocaleNames\/en_SG\/PM=St. Pierre & Miquelon\n-LocaleNames\/en_SG\/PS=Palestinian Territories\n-LocaleNames\/en_SG\/SJ=Svalbard & Jan Mayen\n-LocaleNames\/en_SG\/ST=S\\u00e3o Tom\\u00e9 & Pr\\u00edncipe\n-LocaleNames\/en_SG\/TC=Turks & Caicos Islands\n-LocaleNames\/en_SG\/TL=Timor-Leste\n-LocaleNames\/en_SG\/VC=St. Vincent & Grenadines\n-LocaleNames\/en_SG\/WF=Wallis & Futuna\n-#in\n-FormatData\/in\/MonthNames\/0=Januari\n-FormatData\/in\/MonthNames\/1=Februari\n-FormatData\/in\/MonthNames\/2=Maret\n-FormatData\/in\/MonthNames\/3=April\n-FormatData\/in\/MonthNames\/4=Mei\n-FormatData\/in\/MonthNames\/5=Juni\n-FormatData\/in\/MonthNames\/6=Juli\n-FormatData\/in\/MonthNames\/7=Agustus\n-FormatData\/in\/MonthNames\/8=September\n-FormatData\/in\/MonthNames\/9=Oktober\n-FormatData\/in\/MonthNames\/10=November\n-FormatData\/in\/MonthNames\/11=Desember\n-FormatData\/in\/MonthNames\/12=\n-FormatData\/in\/MonthAbbreviations\/0=Jan\n-FormatData\/in\/MonthAbbreviations\/1=Feb\n-FormatData\/in\/MonthAbbreviations\/2=Mar\n-FormatData\/in\/MonthAbbreviations\/3=Apr\n-FormatData\/in\/MonthAbbreviations\/4=Mei\n-FormatData\/in\/MonthAbbreviations\/5=Jun\n-FormatData\/in\/MonthAbbreviations\/6=Jul\n-FormatData\/in\/MonthAbbreviations\/7=Agu\n-FormatData\/in\/MonthAbbreviations\/8=Sep\n-FormatData\/in\/MonthAbbreviations\/9=Okt\n-FormatData\/in\/MonthAbbreviations\/10=Nov\n-FormatData\/in\/MonthAbbreviations\/11=Des\n-FormatData\/in\/DayNames\/0=Minggu\n-FormatData\/in\/DayNames\/1=Senin\n-FormatData\/in\/DayNames\/2=Selasa\n-FormatData\/in\/DayNames\/3=Rabu\n-FormatData\/in\/DayNames\/4=Kamis\n-FormatData\/in\/DayNames\/5=Jumat\n-FormatData\/in\/DayNames\/6=Sabtu\n-FormatData\/in\/DayAbbreviations\/0=Min\n-FormatData\/in\/DayAbbreviations\/1=Sen\n-FormatData\/in\/DayAbbreviations\/2=Sel\n-FormatData\/in\/DayAbbreviations\/3=Rab\n-FormatData\/in\/DayAbbreviations\/4=Kam\n-FormatData\/in\/DayAbbreviations\/5=Jum\n-FormatData\/in\/DayAbbreviations\/6=Sab\n-FormatData\/in\/Eras\/0=BCE\n-FormatData\/in\/Eras\/1=CE\n-FormatData\/in\/NumberPatterns\/0=#,##0.###\n-FormatData\/in\/NumberPatterns\/1=\\u00a4#,##0.00\n-FormatData\/in\/NumberPatterns\/2=#,##0%\n-FormatData\/in\/NumberElements\/0=,\n-FormatData\/in\/NumberElements\/1=.\n-FormatData\/in\/NumberElements\/2=;\n-FormatData\/in\/NumberElements\/3=%\n-FormatData\/in\/NumberElements\/4=0\n-FormatData\/in\/NumberElements\/5=#\n-FormatData\/in\/NumberElements\/6=-\n-FormatData\/in\/NumberElements\/7=E\n-FormatData\/in\/NumberElements\/8=\\u2030\n-FormatData\/in\/NumberElements\/9=\\u221e\n-FormatData\/in\/NumberElements\/10=NaN\n-FormatData\/in\/TimePatterns\/0=HH:mm:ss z\n-FormatData\/in\/TimePatterns\/1=HH:mm:ss z\n-FormatData\/in\/TimePatterns\/2=HH:mm:ss\n-FormatData\/in\/TimePatterns\/3=HH:mm\n-FormatData\/in\/DatePatterns\/0=EEEE, yyyy MMMM dd\n-FormatData\/in\/DatePatterns\/1=yyyy MMMM d\n-FormatData\/in\/DatePatterns\/2=yyyy MMM d\n-FormatData\/in\/DatePatterns\/3=yy\/MM\/dd\n-FormatData\/in\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/in\/ab=Abkhaz\n-LocaleNames\/in\/am=Amharik\n-LocaleNames\/in\/ar=Arab\n-LocaleNames\/in\/as=Assam\n-LocaleNames\/in\/av=Avar\n-LocaleNames\/in\/az=Azerbaijani\n-LocaleNames\/in\/be=Belarusia\n-LocaleNames\/in\/bg=Bulgaria\n-LocaleNames\/in\/bn=Bengali\n-LocaleNames\/in\/bo=Tibet\n-LocaleNames\/in\/bs=Bosnia\n-LocaleNames\/in\/co=Korsika\n-LocaleNames\/in\/cs=Cheska\n-LocaleNames\/in\/da=Dansk\n-LocaleNames\/in\/de=Jerman\n-LocaleNames\/in\/el=Yunani\n-LocaleNames\/in\/en=Inggris\n-LocaleNames\/in\/es=Spanyol\n-LocaleNames\/in\/fa=Persia\n-LocaleNames\/in\/fi=Suomi\n-LocaleNames\/in\/fj=Fiji\n-LocaleNames\/in\/fo=Faroe\n-LocaleNames\/in\/fr=Prancis\n-LocaleNames\/in\/fy=Frisia Barat\n-LocaleNames\/in\/ga=Irlandia\n-LocaleNames\/in\/gd=Gaelik Skotlandia\n-LocaleNames\/in\/he=Ibrani\n-LocaleNames\/in\/hr=Kroasia\n-LocaleNames\/in\/hu=Hungaria\n-LocaleNames\/in\/hy=Armenia\n-LocaleNames\/in\/id=Indonesia\n-LocaleNames\/in\/in=Indonesia\n-LocaleNames\/in\/iw=Ibrani\n-LocaleNames\/in\/jv=Jawa\n-LocaleNames\/in\/kj=Kuanyama\n-LocaleNames\/in\/kl=Kalaallisut\n-LocaleNames\/in\/ko=Korea\n-LocaleNames\/in\/ks=Kashmir\n-LocaleNames\/in\/ku=Kurdi\n-LocaleNames\/in\/lb=Luksemburg\n-LocaleNames\/in\/li=Limburgia\n-LocaleNames\/in\/lt=Lituavi\n-LocaleNames\/in\/mg=Malagasi\n-LocaleNames\/in\/mh=Marshall\n-LocaleNames\/in\/my=Burma\n-LocaleNames\/in\/ne=Nepali\n-LocaleNames\/in\/nl=Belanda\n-LocaleNames\/in\/ny=Nyanja\n-LocaleNames\/in\/os=Ossetia\n-LocaleNames\/in\/pa=Punjabi\n-LocaleNames\/in\/ps=Pashto\n-LocaleNames\/in\/pt=Portugis\n-LocaleNames\/in\/rm=Reto-Roman\n-LocaleNames\/in\/su=Sunda\n-LocaleNames\/in\/sv=Swedia\n-LocaleNames\/in\/zh=Tionghoa\n-LocaleNames\/in\/AD=Andorra\n-LocaleNames\/in\/AE=Uni Emirat Arab\n-LocaleNames\/in\/AG=Antigua dan Barbuda\n-LocaleNames\/in\/AN=Antilles Belanda\n-LocaleNames\/in\/AQ=Antarktika\n-LocaleNames\/in\/AS=Samoa Amerika\n-LocaleNames\/in\/BA=Bosnia dan Herzegovina\n-LocaleNames\/in\/BE=Belgia\n-LocaleNames\/in\/BV=Pulau Bouvet\n-LocaleNames\/in\/BY=Belarus\n-LocaleNames\/in\/CA=Kanada\n-LocaleNames\/in\/CC=Kepulauan Cocos (Keeling)\n-LocaleNames\/in\/CD=Kongo - Kinshasa\n-LocaleNames\/in\/CF=Republik Afrika Tengah\n-LocaleNames\/in\/CG=Kongo - Brazzaville\n-LocaleNames\/in\/CH=Swiss\n-LocaleNames\/in\/CI=C\\u00f4te d\\u2019Ivoire\n-LocaleNames\/in\/CK=Kepulauan Cook\n-LocaleNames\/in\/CL=Cile\n-LocaleNames\/in\/CM=Kamerun\n-LocaleNames\/in\/CN=Tiongkok\n-LocaleNames\/in\/CO=Kolombia\n-LocaleNames\/in\/CR=Kosta Rika\n-LocaleNames\/in\/CU=Kuba\n-LocaleNames\/in\/CV=Tanjung Verde\n-LocaleNames\/in\/CX=Pulau Natal\n-LocaleNames\/in\/CY=Siprus\n-LocaleNames\/in\/CZ=Ceko\n-LocaleNames\/in\/DE=Jerman\n-LocaleNames\/in\/DJ=Jibuti\n-LocaleNames\/in\/DM=Dominika\n-LocaleNames\/in\/DO=Republik Dominika\n-LocaleNames\/in\/EC=Ekuador\n-LocaleNames\/in\/EG=Mesir\n-LocaleNames\/in\/EH=Sahara Barat\n-LocaleNames\/in\/ES=Spanyol\n-LocaleNames\/in\/FI=Finlandia\n-LocaleNames\/in\/FK=Kepulauan Falkland\n-LocaleNames\/in\/FM=Mikronesia\n-LocaleNames\/in\/FO=Kepulauan Faroe\n-LocaleNames\/in\/FR=Prancis\n-LocaleNames\/in\/GB=Inggris Raya\n-LocaleNames\/in\/GF=Guyana Prancis\n-LocaleNames\/in\/GQ=Guinea Ekuatorial\n-LocaleNames\/in\/GR=Yunani\n-LocaleNames\/in\/GS=Georgia Selatan & Kep. Sandwich Selatan\n-LocaleNames\/in\/HK=Hong Kong DAK Tiongkok\n-LocaleNames\/in\/HM=Pulau Heard dan Kepulauan McDonald\n-LocaleNames\/in\/HR=Kroasia\n-LocaleNames\/in\/HU=Hungaria\n-LocaleNames\/in\/IE=Irlandia\n-LocaleNames\/in\/IS=Islandia\n-LocaleNames\/in\/IT=Italia\n-LocaleNames\/in\/JM=Jamaika\n-LocaleNames\/in\/JO=Yordania\n-LocaleNames\/in\/JP=Jepang\n-LocaleNames\/in\/KH=Kamboja\n-LocaleNames\/in\/KM=Komoro\n-LocaleNames\/in\/KN=Saint Kitts dan Nevis\n-LocaleNames\/in\/KP=Korea Utara\n-LocaleNames\/in\/KR=Korea Selatan\n-LocaleNames\/in\/KY=Kepulauan Cayman\n-LocaleNames\/in\/LC=Saint Lucia\n-LocaleNames\/in\/MA=Maroko\n-LocaleNames\/in\/MG=Madagaskar\n-LocaleNames\/in\/MH=Kepulauan Marshall\n-LocaleNames\/in\/MO=Makau DAK Tiongkok\n-LocaleNames\/in\/MP=Kepulauan Mariana Utara\n-LocaleNames\/in\/NC=Kaledonia Baru\n-LocaleNames\/in\/NF=Kepulauan Norfolk\n-LocaleNames\/in\/NO=Norwegia\n-LocaleNames\/in\/NZ=Selandia Baru\n-LocaleNames\/in\/PF=Polinesia Prancis\n-LocaleNames\/in\/PG=Papua Nugini\n-LocaleNames\/in\/PH=Filipina\n-LocaleNames\/in\/PL=Polandia\n-LocaleNames\/in\/PM=Saint Pierre dan Miquelon\n-LocaleNames\/in\/PR=Puerto Riko\n-LocaleNames\/in\/PS=Wilayah Palestina\n-LocaleNames\/in\/PT=Portugal\n-LocaleNames\/in\/RE=R\\u00e9union\n-LocaleNames\/in\/RU=Rusia\n-LocaleNames\/in\/SA=Arab Saudi\n-LocaleNames\/in\/SB=Kepulauan Solomon\n-LocaleNames\/in\/SG=Singapura\n-LocaleNames\/in\/SJ=Kepulauan Svalbard dan Jan Mayen\n-LocaleNames\/in\/ST=Sao Tome dan Principe\n-LocaleNames\/in\/TT=Trinidad dan Tobago\n-LocaleNames\/in\/UA=Ukraina\n-LocaleNames\/in\/US=Amerika Serikat\n-LocaleNames\/in\/VA=Vatikan\n-LocaleNames\/in\/VC=Saint Vincent dan Grenadine\n-LocaleNames\/in\/VG=Kepulauan Virgin Britania Raya\n-LocaleNames\/in\/VI=Kepulauan Virgin Amerika Serikat\n-LocaleNames\/in\/WF=Kepulauan Wallis dan Futuna\n-LocaleNames\/in\/YE=Yaman\n-LocaleNames\/in\/ZA=Afrika Selatan\n-#in_ID\n-FormatData\/in_ID\/TimePatterns\/0=H:mm:ss\n-FormatData\/in_ID\/TimePatterns\/1=H:mm:ss\n-FormatData\/in_ID\/TimePatterns\/2=H:mm:ss\n-FormatData\/in_ID\/TimePatterns\/3=H:mm\n-FormatData\/in_ID\/DatePatterns\/0=EEEE dd MMMM yyyy\n-FormatData\/in_ID\/DatePatterns\/1=dd MMMM yyyy\n-FormatData\/in_ID\/DatePatterns\/2=dd MMM yy\n-FormatData\/in_ID\/DatePatterns\/3=dd\/MM\/yy\n-FormatData\/in_ID\/DateTimePatterns\/0={1} {0}\n-CurrencyNames\/in_ID\/IDR\/0=Rp\n-#en_MT\n-FormatData\/en_MT\/NumberPatterns\/0=#,##0.###\n-FormatData\/en_MT\/NumberPatterns\/1=\\u00a4#,##0.00\n-FormatData\/en_MT\/NumberPatterns\/2=#,##0%\n-FormatData\/en_MT\/TimePatterns\/0=HH:mm:ss z\n-FormatData\/en_MT\/TimePatterns\/1=HH:mm:ss z\n-FormatData\/en_MT\/TimePatterns\/2=HH:mm:ss\n-FormatData\/en_MT\/TimePatterns\/3=HH:mm\n-FormatData\/en_MT\/DatePatterns\/0=EEEE, d MMMM yyyy\n-FormatData\/en_MT\/DatePatterns\/1=dd MMMM yyyy\n-FormatData\/en_MT\/DatePatterns\/2=dd MMM yyyy\n-FormatData\/en_MT\/DatePatterns\/3=dd\/MM\/yyyy\n-FormatData\/en_MT\/DateTimePatterns\/0={1} {0}\n-CurrencyNames\/en_MT\/MTL=Lm\n-CurrencyNames\/en_MT\/EUR=\\u20ac\n-LocaleNames\/en_MT\/kj=Kuanyama\n-LocaleNames\/en_MT\/kl=Kalaallisut\n-LocaleNames\/en_MT\/ny=Nyanja\n-LocaleNames\/en_MT\/oc=Occitan\n-LocaleNames\/en_MT\/os=Ossetic\n-LocaleNames\/en_MT\/pa=Punjabi\n-LocaleNames\/en_MT\/rm=Romansh\n-LocaleNames\/en_MT\/to=Tongan\n-LocaleNames\/en_MT\/CC=Cocos (Keeling) Islands\n-LocaleNames\/en_MT\/CI=C\\u00f4te d\\u2019Ivoire\n-LocaleNames\/en_MT\/GS=South Georgia & South Sandwich Islands\n-LocaleNames\/en_MT\/HM=Heard & McDonald Islands\n-LocaleNames\/en_MT\/KN=St. Kitts & Nevis\n-LocaleNames\/en_MT\/PM=St. Pierre & Miquelon\n-LocaleNames\/en_MT\/PS=Palestinian Territories\n-LocaleNames\/en_MT\/SJ=Svalbard & Jan Mayen\n-LocaleNames\/en_MT\/ST=S\\u00e3o Tom\\u00e9 & Pr\\u00edncipe\n-LocaleNames\/en_MT\/TC=Turks & Caicos Islands\n-LocaleNames\/en_MT\/TL=Timor-Leste\n-LocaleNames\/en_MT\/VC=St. Vincent & Grenadines\n-LocaleNames\/en_MT\/WF=Wallis & Futuna\n-#mt_MT\n-FormatData\/mt_MT\/NumberPatterns\/0=#,##0.###\n-FormatData\/mt_MT\/NumberPatterns\/1=\\u00a4#,##0.00\n-FormatData\/mt_MT\/NumberPatterns\/2=#,##0%\n-CurrencyNames\/mt_MT\/MTL=Lm\n-CurrencyNames\/mt_MT\/EUR=\\u20ac\n-#en_PH\n-FormatData\/en_PH\/NumberPatterns\/0=#,##0.###\n-FormatData\/en_PH\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/en_PH\/NumberPatterns\/2=#,##0%\n-FormatData\/en_PH\/TimePatterns\/0=h:mm:ss a z\n-FormatData\/en_PH\/TimePatterns\/1=h:mm:ss a z\n-FormatData\/en_PH\/TimePatterns\/2=h:mm:ss a\n-FormatData\/en_PH\/TimePatterns\/3=h:mm a\n-FormatData\/en_PH\/DatePatterns\/0=EEEE, MMMM d, yyyy\n-FormatData\/en_PH\/DatePatterns\/1=MMMM d, yyyy\n-FormatData\/en_PH\/DatePatterns\/2=MM d, yy\n-FormatData\/en_PH\/DatePatterns\/3=M\/d\/yy\n-FormatData\/en_PH\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/en_PH\/kj=Kuanyama\n-LocaleNames\/en_PH\/kl=Kalaallisut\n-LocaleNames\/en_PH\/ny=Nyanja\n-LocaleNames\/en_PH\/oc=Occitan\n-LocaleNames\/en_PH\/os=Ossetic\n-LocaleNames\/en_PH\/pa=Punjabi\n-LocaleNames\/en_PH\/rm=Romansh\n-LocaleNames\/en_PH\/to=Tongan\n-LocaleNames\/en_PH\/CC=Cocos (Keeling) Islands\n-LocaleNames\/en_PH\/CI=C\\u00f4te d\\u2019Ivoire\n-LocaleNames\/en_PH\/GS=South Georgia & South Sandwich Islands\n-LocaleNames\/en_PH\/HM=Heard & McDonald Islands\n-LocaleNames\/en_PH\/KN=St. Kitts & Nevis\n-LocaleNames\/en_PH\/PM=St. Pierre & Miquelon\n-LocaleNames\/en_PH\/PS=Palestinian Territories\n-LocaleNames\/en_PH\/SJ=Svalbard & Jan Mayen\n-LocaleNames\/en_PH\/ST=S\\u00e3o Tom\\u00e9 & Pr\\u00edncipe\n-#el\n-FormatData\/el\/standalone.MonthNames\/0=\\u0399\\u03b1\\u03bd\\u03bf\\u03c5\\u03ac\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/1=\\u03a6\\u03b5\\u03b2\\u03c1\\u03bf\\u03c5\\u03ac\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/2=\\u039c\\u03ac\\u03c1\\u03c4\\u03b9\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/3=\\u0391\\u03c0\\u03c1\\u03af\\u03bb\\u03b9\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/4=\\u039c\\u03ac\\u03ca\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/5=\\u0399\\u03bf\\u03cd\\u03bd\\u03b9\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/6=\\u0399\\u03bf\\u03cd\\u03bb\\u03b9\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/7=\\u0391\\u03cd\\u03b3\\u03bf\\u03c5\\u03c3\\u03c4\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/8=\\u03a3\\u03b5\\u03c0\\u03c4\\u03ad\\u03bc\\u03b2\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/9=\\u039f\\u03ba\\u03c4\\u03ce\\u03b2\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/10=\\u039d\\u03bf\\u03ad\\u03bc\\u03b2\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/11=\\u0394\\u03b5\\u03ba\\u03ad\\u03bc\\u03b2\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el\/standalone.MonthNames\/12=\n-FormatData\/el\/MonthAbbreviations\/0=\\u0399\\u03b1\\u03bd\n-FormatData\/el\/MonthAbbreviations\/1=\\u03a6\\u03b5\\u03b2\n-FormatData\/el\/MonthAbbreviations\/2=\\u039c\\u03b1\\u03c1\n-FormatData\/el\/MonthAbbreviations\/3=\\u0391\\u03c0\\u03c1\n-FormatData\/el\/MonthAbbreviations\/4=\\u039c\\u03b1\\u03ca\n-FormatData\/el\/MonthAbbreviations\/5=\\u0399\\u03bf\\u03c5\\u03bd\n-FormatData\/el\/MonthAbbreviations\/6=\\u0399\\u03bf\\u03c5\\u03bb\n-FormatData\/el\/MonthAbbreviations\/7=\\u0391\\u03c5\\u03b3\n-FormatData\/el\/MonthAbbreviations\/8=\\u03a3\\u03b5\\u03c0\n-FormatData\/el\/MonthAbbreviations\/9=\\u039f\\u03ba\\u03c4\n-FormatData\/el\/MonthAbbreviations\/10=\\u039d\\u03bf\\u03b5\n-FormatData\/el\/MonthAbbreviations\/11=\\u0394\\u03b5\\u03ba\n-FormatData\/el\/DayNames\/0=\\u039a\\u03c5\\u03c1\\u03b9\\u03b1\\u03ba\\u03ae\n-FormatData\/el\/DayNames\/1=\\u0394\\u03b5\\u03c5\\u03c4\\u03ad\\u03c1\\u03b1\n-FormatData\/el\/DayNames\/2=\\u03a4\\u03c1\\u03af\\u03c4\\u03b7\n-FormatData\/el\/DayNames\/3=\\u03a4\\u03b5\\u03c4\\u03ac\\u03c1\\u03c4\\u03b7\n-FormatData\/el\/DayNames\/4=\\u03a0\\u03ad\\u03bc\\u03c0\\u03c4\\u03b7\n-FormatData\/el\/DayNames\/5=\\u03a0\\u03b1\\u03c1\\u03b1\\u03c3\\u03ba\\u03b5\\u03c5\\u03ae\n-FormatData\/el\/DayNames\/6=\\u03a3\\u03ac\\u03b2\\u03b2\\u03b1\\u03c4\\u03bf\n-FormatData\/el\/DayAbbreviations\/0=\\u039a\\u03c5\\u03c1\n-FormatData\/el\/DayAbbreviations\/1=\\u0394\\u03b5\\u03c5\n-FormatData\/el\/DayAbbreviations\/2=\\u03a4\\u03c1\\u03b9\n-FormatData\/el\/DayAbbreviations\/3=\\u03a4\\u03b5\\u03c4\n-FormatData\/el\/DayAbbreviations\/4=\\u03a0\\u03b5\\u03bc\n-FormatData\/el\/DayAbbreviations\/5=\\u03a0\\u03b1\\u03c1\n-FormatData\/el\/DayAbbreviations\/6=\\u03a3\\u03b1\\u03b2\n-FormatData\/el\/AmPmMarkers\/0=\\u03c0\\u03bc\n-FormatData\/el\/AmPmMarkers\/1=\\u03bc\\u03bc\n-FormatData\/el\/NumberElements\/0=,\n-FormatData\/el\/NumberElements\/1=.\n-FormatData\/el\/NumberElements\/2=;\n-FormatData\/el\/NumberElements\/3=%\n-FormatData\/el\/NumberElements\/4=0\n-FormatData\/el\/NumberElements\/5=#\n-FormatData\/el\/NumberElements\/6=-\n-FormatData\/el\/NumberElements\/7=E\n-FormatData\/el\/NumberElements\/8=\\u2030\n-FormatData\/el\/NumberElements\/9=\\u221e\n-FormatData\/el\/NumberElements\/10=\\ufffd\n-FormatData\/el\/TimePatterns\/0=h:mm:ss a z\n-FormatData\/el\/TimePatterns\/1=h:mm:ss a z\n-FormatData\/el\/TimePatterns\/2=h:mm:ss a\n-FormatData\/el\/TimePatterns\/3=h:mm a\n-FormatData\/el\/DatePatterns\/0=EEEE, d MMMM yyyy\n-FormatData\/el\/DatePatterns\/1=d MMMM yyyy\n-FormatData\/el\/DatePatterns\/2=d MMM yyyy\n-FormatData\/el\/DatePatterns\/3=d\/M\/yyyy\n-FormatData\/el\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/el\/GR=\\u0395\\u03bb\\u03bb\\u03ac\\u03b4\\u03b1\n-#el_CY\n-#bug 6483191\n-FormatData\/el_CY\/MonthNames\/0=\\u0399\\u03b1\\u03bd\\u03bf\\u03c5\\u03ac\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/1=\\u03a6\\u03b5\\u03b2\\u03c1\\u03bf\\u03c5\\u03ac\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/2=\\u039c\\u03ac\\u03c1\\u03c4\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/3=\\u0391\\u03c0\\u03c1\\u03af\\u03bb\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/4=\\u039c\\u03ac\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/5=\\u0399\\u03bf\\u03cd\\u03bd\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/6=\\u0399\\u03bf\\u03cd\\u03bb\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/7=\\u0391\\u03cd\\u03b3\\u03bf\\u03c5\\u03c3\\u03c4\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/8=\\u03a3\\u03b5\\u03c0\\u03c4\\u03ad\\u03bc\\u03b2\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/9=\\u039f\\u03ba\\u03c4\\u03ce\\u03b2\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/10=\\u039d\\u03bf\\u03ad\\u03bc\\u03b2\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/11=\\u0394\\u03b5\\u03ba\\u03ad\\u03bc\\u03b2\\u03c1\\u03b9\\u03bf\\u03c2\n-FormatData\/el_CY\/MonthNames\/12=\n-FormatData\/el_CY\/AmPmMarkers\/0=\\u03a0\\u039c\n-FormatData\/el_CY\/AmPmMarkers\/1=\\u039c\\u039c\n-FormatData\/el_CY\/Eras\/0=\\u03c0.\\u03a7.\n-FormatData\/el_CY\/Eras\/1=\\u03bc.\\u03a7.\n-FormatData\/el_CY\/NumberPatterns\/0=#,##0.###\n-FormatData\/el_CY\/NumberPatterns\/1=\\u00a4#,##0.00\n-FormatData\/el_CY\/NumberPatterns\/2=#,##0%\n-FormatData\/el_CY\/TimePatterns\/0=h:mm:ss a z\n-FormatData\/el_CY\/TimePatterns\/1=h:mm:ss a z\n-FormatData\/el_CY\/TimePatterns\/2=h:mm:ss a\n-FormatData\/el_CY\/TimePatterns\/3=h:mm a\n-FormatData\/el_CY\/DatePatterns\/0=EEEE, dd MMMM yyyy\n-FormatData\/el_CY\/DatePatterns\/1=dd MMMM yyyy\n-FormatData\/el_CY\/DatePatterns\/2=dd MMM yyyy\n-FormatData\/el_CY\/DatePatterns\/3=dd\/MM\/yyyy\n-FormatData\/el_CY\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/el_CY\/ar=\\u0391\\u03c1\\u03b1\\u03b2\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/be=\\u039b\\u03b5\\u03c5\\u03ba\\u03bf\\u03c1\\u03c9\\u03c3\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/bg=\\u0392\\u03bf\\u03c5\\u03bb\\u03b3\\u03b1\\u03c1\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/bo=\\u0398\\u03b9\\u03b2\\u03b5\\u03c4\\u03b9\\u03b1\\u03bd\\u03ac\n-LocaleNames\/el_CY\/bs=\\u0392\\u03bf\\u03c3\\u03bd\\u03b9\\u03b1\\u03ba\\u03ac\n-LocaleNames\/el_CY\/bn=\\u0392\\u03b5\\u03b3\\u03b3\\u03b1\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/ca=\\u039a\\u03b1\\u03c4\\u03b1\\u03bb\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/co=\\u039a\\u03bf\\u03c1\\u03c3\\u03b9\\u03ba\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/cs=\\u03a4\\u03c3\\u03b5\\u03c7\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/cy=\\u039f\\u03c5\\u03b1\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/da=\\u0394\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/de=\\u0393\\u03b5\\u03c1\\u03bc\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/el=\\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/en=\\u0391\\u03b3\\u03b3\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/es=\\u0399\\u03c3\\u03c0\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/et=\\u0395\\u03c3\\u03b8\\u03bf\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/eu=\\u0392\\u03b1\\u03c3\\u03ba\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/fa=\\u03a0\\u03b5\\u03c1\\u03c3\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/fi=\\u03a6\\u03b9\\u03bd\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/fr=\\u0393\\u03b1\\u03bb\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/ga=\\u0399\\u03c1\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/gd=\\u03a3\\u03ba\\u03c9\\u03c4\\u03b9\\u03ba\\u03ac \\u039a\\u03b5\\u03bb\\u03c4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/he=\\u0395\\u03b2\\u03c1\\u03b1\\u03ca\\u03ba\\u03ac\n-LocaleNames\/el_CY\/hi=\\u03a7\\u03af\\u03bd\\u03c4\\u03b9\n-LocaleNames\/el_CY\/hr=\\u039a\\u03c1\\u03bf\\u03b1\\u03c4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/hu=\\u039f\\u03c5\\u03b3\\u03b3\\u03c1\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/hy=\\u0391\\u03c1\\u03bc\\u03b5\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/id=\\u0399\\u03bd\\u03b4\\u03bf\\u03bd\\u03b7\\u03c3\\u03b9\\u03b1\\u03ba\\u03ac\n-LocaleNames\/el_CY\/in=\\u0399\\u03bd\\u03b4\\u03bf\\u03bd\\u03b7\\u03c3\\u03b9\\u03b1\\u03ba\\u03ac\n-LocaleNames\/el_CY\/is=\\u0399\\u03c3\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/it=\\u0399\\u03c4\\u03b1\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/iw=\\u0395\\u03b2\\u03c1\\u03b1\\u03ca\\u03ba\\u03ac\n-LocaleNames\/el_CY\/ja=\\u0399\\u03b1\\u03c0\\u03c9\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/ji=\\u0393\\u03af\\u03bd\\u03c4\\u03b9\\u03c2\n-LocaleNames\/el_CY\/ka=\\u0393\\u03b5\\u03c9\\u03c1\\u03b3\\u03b9\\u03b1\\u03bd\\u03ac\n-LocaleNames\/el_CY\/ko=\\u039a\\u03bf\\u03c1\\u03b5\\u03b1\\u03c4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/la=\\u039b\\u03b1\\u03c4\\u03b9\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/lt=\\u039b\\u03b9\\u03b8\\u03bf\\u03c5\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/lv=\\u039b\\u03b5\\u03c4\\u03bf\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/mk=\\u03a3\\u03bb\\u03b1\\u03b2\\u03bf\\u03bc\\u03b1\\u03ba\\u03b5\\u03b4\\u03bf\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/mn=\\u039c\\u03bf\\u03b3\\u03b3\\u03bf\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/mo=\\u039c\\u03bf\\u03bb\\u03b4\\u03b1\\u03b2\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/mt=\\u039c\\u03b1\\u03bb\\u03c4\\u03b5\\u03b6\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/nl=\\u039f\\u03bb\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/no=\\u039d\\u03bf\\u03c1\\u03b2\\u03b7\\u03b3\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/pl=\\u03a0\\u03bf\\u03bb\\u03c9\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/pt=\\u03a0\\u03bf\\u03c1\\u03c4\\u03bf\\u03b3\\u03b1\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/ro=\\u03a1\\u03bf\\u03c5\\u03bc\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/ru=\\u03a1\\u03c9\\u03c3\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/sk=\\u03a3\\u03bb\\u03bf\\u03b2\\u03b1\\u03ba\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/sl=\\u03a3\\u03bb\\u03bf\\u03b2\\u03b5\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/sq=\\u0391\\u03bb\\u03b2\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/sr=\\u03a3\\u03b5\\u03c1\\u03b2\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/sv=\\u03a3\\u03bf\\u03c5\\u03b7\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/th=\\u03a4\\u03b1\\u03ca\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/tr=\\u03a4\\u03bf\\u03c5\\u03c1\\u03ba\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/uk=\\u039f\\u03c5\\u03ba\\u03c1\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/vi=\\u0392\\u03b9\\u03b5\\u03c4\\u03bd\\u03b1\\u03bc\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/yi=\\u0393\\u03af\\u03bd\\u03c4\\u03b9\\u03c2\n-LocaleNames\/el_CY\/zh=\\u039a\\u03b9\\u03bd\\u03b5\\u03b6\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el_CY\/AD=\\u0391\\u03bd\\u03b4\\u03cc\\u03c1\\u03b1\n-LocaleNames\/el_CY\/AE=\\u0397\\u03bd\\u03c9\\u03bc\\u03ad\\u03bd\\u03b1 \\u0391\\u03c1\\u03b1\\u03b2\\u03b9\\u03ba\\u03ac \\u0395\\u03bc\\u03b9\\u03c1\\u03ac\\u03c4\\u03b1\n-LocaleNames\/el_CY\/AF=\\u0391\\u03c6\\u03b3\\u03b1\\u03bd\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el_CY\/AG=\\u0391\\u03bd\\u03c4\\u03af\\u03b3\\u03ba\\u03bf\\u03c5\\u03b1 \\u03ba\\u03b1\\u03b9 \\u039c\\u03c0\\u03b1\\u03c1\\u03bc\\u03c0\\u03bf\\u03cd\\u03bd\\u03c4\\u03b1\n-LocaleNames\/el_CY\/AI=\\u0391\\u03bd\\u03b3\\u03ba\\u03bf\\u03c5\\u03af\\u03bb\\u03b1\n-LocaleNames\/el_CY\/AL=\\u0391\\u03bb\\u03b2\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/AM=\\u0391\\u03c1\\u03bc\\u03b5\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/AN=\\u039f\\u03bb\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ad\\u03c2 \\u0391\\u03bd\\u03c4\\u03af\\u03bb\\u03bb\\u03b5\\u03c2\n-LocaleNames\/el_CY\/AO=\\u0391\\u03b3\\u03ba\\u03cc\\u03bb\\u03b1\n-LocaleNames\/el_CY\/AQ=\\u0391\\u03bd\\u03c4\\u03b1\\u03c1\\u03ba\\u03c4\\u03b9\\u03ba\\u03ae\n-LocaleNames\/el_CY\/AR=\\u0391\\u03c1\\u03b3\\u03b5\\u03bd\\u03c4\\u03b9\\u03bd\\u03ae\n-LocaleNames\/el_CY\/AS=\\u0391\\u03bc\\u03b5\\u03c1\\u03b9\\u03ba\\u03b1\\u03bd\\u03b9\\u03ba\\u03ae \\u03a3\\u03b1\\u03bc\\u03cc\\u03b1\n-LocaleNames\/el_CY\/AT=\\u0391\\u03c5\\u03c3\\u03c4\\u03c1\\u03af\\u03b1\n-LocaleNames\/el_CY\/AU=\\u0391\\u03c5\\u03c3\\u03c4\\u03c1\\u03b1\\u03bb\\u03af\\u03b1\n-LocaleNames\/el_CY\/AW=\\u0391\\u03c1\\u03bf\\u03cd\\u03bc\\u03c0\\u03b1\n-LocaleNames\/el_CY\/AX=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u038c\\u03bb\\u03b1\\u03bd\\u03c4\n-LocaleNames\/el_CY\/AZ=\\u0391\\u03b6\\u03b5\\u03c1\\u03bc\\u03c0\\u03b1\\u03ca\\u03c4\\u03b6\\u03ac\\u03bd\n-LocaleNames\/el_CY\/BA=\\u0392\\u03bf\\u03c3\\u03bd\\u03af\\u03b1 - \\u0395\\u03c1\\u03b6\\u03b5\\u03b3\\u03bf\\u03b2\\u03af\\u03bd\\u03b7\n-LocaleNames\/el_CY\/BB=\\u039c\\u03c0\\u03b1\\u03c1\\u03bc\\u03c0\\u03ad\\u03b9\\u03bd\\u03c4\\u03bf\\u03c2\n-LocaleNames\/el_CY\/BD=\\u039c\\u03c0\\u03b1\\u03bd\\u03b3\\u03ba\\u03bb\\u03b1\\u03bd\\u03c4\\u03ad\\u03c2\n-LocaleNames\/el_CY\/BE=\\u0392\\u03ad\\u03bb\\u03b3\\u03b9\\u03bf\n-LocaleNames\/el_CY\/BF=\\u039c\\u03c0\\u03bf\\u03c5\\u03c1\\u03ba\\u03af\\u03bd\\u03b1 \\u03a6\\u03ac\\u03c3\\u03bf\n-LocaleNames\/el_CY\/BG=\\u0392\\u03bf\\u03c5\\u03bb\\u03b3\\u03b1\\u03c1\\u03af\\u03b1\n-LocaleNames\/el_CY\/BH=\\u039c\\u03c0\\u03b1\\u03c7\\u03c1\\u03ad\\u03b9\\u03bd\n-LocaleNames\/el_CY\/BI=\\u039c\\u03c0\\u03bf\\u03c5\\u03c1\\u03bf\\u03cd\\u03bd\\u03c4\\u03b9\n-LocaleNames\/el_CY\/BJ=\\u039c\\u03c0\\u03b5\\u03bd\\u03af\\u03bd\n-LocaleNames\/el_CY\/BM=\\u0392\\u03b5\\u03c1\\u03bc\\u03bf\\u03cd\\u03b4\\u03b5\\u03c2\n-LocaleNames\/el_CY\/BN=\\u039c\\u03c0\\u03c1\\u03bf\\u03c5\\u03bd\\u03ad\\u03b9\n-LocaleNames\/el_CY\/BO=\\u0392\\u03bf\\u03bb\\u03b9\\u03b2\\u03af\\u03b1\n-LocaleNames\/el_CY\/BR=\\u0392\\u03c1\\u03b1\\u03b6\\u03b9\\u03bb\\u03af\\u03b1\n-LocaleNames\/el_CY\/BS=\\u039c\\u03c0\\u03b1\\u03c7\\u03ac\\u03bc\\u03b5\\u03c2\n-LocaleNames\/el_CY\/BT=\\u039c\\u03c0\\u03bf\\u03c5\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el_CY\/BV=\\u039d\\u03ae\\u03c3\\u03bf\\u03c2 \\u039c\\u03c0\\u03bf\\u03c5\\u03b2\\u03ad\n-LocaleNames\/el_CY\/BW=\\u039c\\u03c0\\u03bf\\u03c4\\u03c3\\u03bf\\u03c5\\u03ac\\u03bd\\u03b1\n-LocaleNames\/el_CY\/BY=\\u039b\\u03b5\\u03c5\\u03ba\\u03bf\\u03c1\\u03c9\\u03c3\\u03af\\u03b1\n-LocaleNames\/el_CY\/BZ=\\u039c\\u03c0\\u03b5\\u03bb\\u03af\\u03b6\n-LocaleNames\/el_CY\/CA=\\u039a\\u03b1\\u03bd\\u03b1\\u03b4\\u03ac\\u03c2\n-LocaleNames\/el_CY\/CC=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u039a\\u03cc\\u03ba\\u03bf\\u03c2 (\\u039a\\u03af\\u03bb\\u03b9\\u03bd\\u03b3\\u03ba)\n-LocaleNames\/el_CY\/CD=\\u039a\\u03bf\\u03bd\\u03b3\\u03ba\\u03cc - \\u039a\\u03b9\\u03bd\\u03c3\\u03ac\\u03c3\\u03b1\n-LocaleNames\/el_CY\/CF=\\u039a\\u03b5\\u03bd\\u03c4\\u03c1\\u03bf\\u03b1\\u03c6\\u03c1\\u03b9\\u03ba\\u03b1\\u03bd\\u03b9\\u03ba\\u03ae \\u0394\\u03b7\\u03bc\\u03bf\\u03ba\\u03c1\\u03b1\\u03c4\\u03af\\u03b1\n-LocaleNames\/el_CY\/CG=\\u039a\\u03bf\\u03bd\\u03b3\\u03ba\\u03cc - \\u039c\\u03c0\\u03c1\\u03b1\\u03b6\\u03b1\\u03b2\\u03af\\u03bb\n-LocaleNames\/el_CY\/CH=\\u0395\\u03bb\\u03b2\\u03b5\\u03c4\\u03af\\u03b1\n-LocaleNames\/el_CY\/CI=\\u0391\\u03ba\\u03c4\\u03ae \\u0395\\u03bb\\u03b5\\u03c6\\u03b1\\u03bd\\u03c4\\u03bf\\u03c3\\u03c4\\u03bf\\u03cd\n-LocaleNames\/el_CY\/CK=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u039a\\u03bf\\u03c5\\u03ba\n-LocaleNames\/el_CY\/CL=\\u03a7\\u03b9\\u03bb\\u03ae\n-LocaleNames\/el_CY\/CM=\\u039a\\u03b1\\u03bc\\u03b5\\u03c1\\u03bf\\u03cd\\u03bd\n-LocaleNames\/el_CY\/CN=\\u039a\\u03af\\u03bd\\u03b1\n-LocaleNames\/el_CY\/CO=\\u039a\\u03bf\\u03bb\\u03bf\\u03bc\\u03b2\\u03af\\u03b1\n-LocaleNames\/el_CY\/CR=\\u039a\\u03cc\\u03c3\\u03c4\\u03b1 \\u03a1\\u03af\\u03ba\\u03b1\n-LocaleNames\/el_CY\/CS=\\u03a3\\u03b5\\u03c1\\u03b2\\u03af\\u03b1 \\u03ba\\u03b1\\u03b9 \\u039c\\u03b1\\u03c5\\u03c1\\u03bf\\u03b2\\u03bf\\u03cd\\u03bd\\u03b9\\u03bf\n-LocaleNames\/el_CY\/CU=\\u039a\\u03bf\\u03cd\\u03b2\\u03b1\n-LocaleNames\/el_CY\/CV=\\u03a0\\u03c1\\u03ac\\u03c3\\u03b9\\u03bd\\u03bf \\u0391\\u03ba\\u03c1\\u03c9\\u03c4\\u03ae\\u03c1\\u03b9\\u03bf\n-LocaleNames\/el_CY\/CX=\\u039d\\u03ae\\u03c3\\u03bf\\u03c2 \\u03c4\\u03c9\\u03bd \\u03a7\\u03c1\\u03b9\\u03c3\\u03c4\\u03bf\\u03c5\\u03b3\\u03ad\\u03bd\\u03bd\\u03c9\\u03bd\n-LocaleNames\/el_CY\/CY=\\u039a\\u03cd\\u03c0\\u03c1\\u03bf\\u03c2\n-LocaleNames\/el_CY\/CZ=\\u03a4\\u03c3\\u03b5\\u03c7\\u03af\\u03b1\n-LocaleNames\/el_CY\/DE=\\u0393\\u03b5\\u03c1\\u03bc\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/DJ=\\u03a4\\u03b6\\u03b9\\u03bc\\u03c0\\u03bf\\u03c5\\u03c4\\u03af\n-LocaleNames\/el_CY\/DK=\\u0394\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/DM=\\u039d\\u03c4\\u03bf\\u03bc\\u03af\\u03bd\\u03b9\\u03ba\\u03b1\n-LocaleNames\/el_CY\/DO=\\u0394\\u03bf\\u03bc\\u03b9\\u03bd\\u03b9\\u03ba\\u03b1\\u03bd\\u03ae \\u0394\\u03b7\\u03bc\\u03bf\\u03ba\\u03c1\\u03b1\\u03c4\\u03af\\u03b1\n-LocaleNames\/el_CY\/DZ=\\u0391\\u03bb\\u03b3\\u03b5\\u03c1\\u03af\\u03b1\n-LocaleNames\/el_CY\/EC=\\u0399\\u03c3\\u03b7\\u03bc\\u03b5\\u03c1\\u03b9\\u03bd\\u03cc\\u03c2\n-LocaleNames\/el_CY\/EE=\\u0395\\u03c3\\u03b8\\u03bf\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/EG=\\u0391\\u03af\\u03b3\\u03c5\\u03c0\\u03c4\\u03bf\\u03c2\n-LocaleNames\/el_CY\/EH=\\u0394\\u03c5\\u03c4\\u03b9\\u03ba\\u03ae \\u03a3\\u03b1\\u03c7\\u03ac\\u03c1\\u03b1\n-LocaleNames\/el_CY\/ER=\\u0395\\u03c1\\u03c5\\u03b8\\u03c1\\u03b1\\u03af\\u03b1\n-LocaleNames\/el_CY\/ES=\\u0399\\u03c3\\u03c0\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/ET=\\u0391\\u03b9\\u03b8\\u03b9\\u03bf\\u03c0\\u03af\\u03b1\n-LocaleNames\/el_CY\/FI=\\u03a6\\u03b9\\u03bd\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el_CY\/FJ=\\u03a6\\u03af\\u03c4\\u03b6\\u03b9\n-LocaleNames\/el_CY\/FK=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a6\\u03cc\\u03ba\\u03bb\\u03b1\\u03bd\\u03c4\n-LocaleNames\/el_CY\/FM=\\u039c\\u03b9\\u03ba\\u03c1\\u03bf\\u03bd\\u03b7\\u03c3\\u03af\\u03b1\n-LocaleNames\/el_CY\/FO=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a6\\u03b5\\u03c1\\u03cc\\u03b5\\u03c2\n-LocaleNames\/el_CY\/FR=\\u0393\\u03b1\\u03bb\\u03bb\\u03af\\u03b1\n-LocaleNames\/el_CY\/GA=\\u0393\\u03ba\\u03b1\\u03bc\\u03c0\\u03cc\\u03bd\n-LocaleNames\/el_CY\/GB=\\u0397\\u03bd\\u03c9\\u03bc\\u03ad\\u03bd\\u03bf \\u0392\\u03b1\\u03c3\\u03af\\u03bb\\u03b5\\u03b9\\u03bf\n-LocaleNames\/el_CY\/GD=\\u0393\\u03c1\\u03b5\\u03bd\\u03ac\\u03b4\\u03b1\n-LocaleNames\/el_CY\/GE=\\u0393\\u03b5\\u03c9\\u03c1\\u03b3\\u03af\\u03b1\n-LocaleNames\/el_CY\/GF=\\u0393\\u03b1\\u03bb\\u03bb\\u03b9\\u03ba\\u03ae \\u0393\\u03bf\\u03c5\\u03b9\\u03ac\\u03bd\\u03b1\n-LocaleNames\/el_CY\/GH=\\u0393\\u03ba\\u03ac\\u03bd\\u03b1\n-LocaleNames\/el_CY\/GI=\\u0393\\u03b9\\u03b2\\u03c1\\u03b1\\u03bb\\u03c4\\u03ac\\u03c1\n-LocaleNames\/el_CY\/GL=\\u0393\\u03c1\\u03bf\\u03b9\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el_CY\/GM=\\u0393\\u03ba\\u03ac\\u03bc\\u03c0\\u03b9\\u03b1\n-LocaleNames\/el_CY\/GN=\\u0393\\u03bf\\u03c5\\u03b9\\u03bd\\u03ad\\u03b1\n-LocaleNames\/el_CY\/GP=\\u0393\\u03bf\\u03c5\\u03b1\\u03b4\\u03b5\\u03bb\\u03bf\\u03cd\\u03c0\\u03b7\n-LocaleNames\/el_CY\/GQ=\\u0399\\u03c3\\u03b7\\u03bc\\u03b5\\u03c1\\u03b9\\u03bd\\u03ae \\u0393\\u03bf\\u03c5\\u03b9\\u03bd\\u03ad\\u03b1\n-LocaleNames\/el_CY\/GS=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u039d\\u03cc\\u03c4\\u03b9\\u03b1 \\u0393\\u03b5\\u03c9\\u03c1\\u03b3\\u03af\\u03b1 \\u03ba\\u03b1\\u03b9 \\u039d\\u03cc\\u03c4\\u03b9\\u03b5\\u03c2 \\u03a3\\u03ac\\u03bd\\u03c4\\u03bf\\u03c5\\u03b9\\u03c4\\u03c2\n-LocaleNames\/el_CY\/GT=\\u0393\\u03bf\\u03c5\\u03b1\\u03c4\\u03b5\\u03bc\\u03ac\\u03bb\\u03b1\n-LocaleNames\/el_CY\/GU=\\u0393\\u03ba\\u03bf\\u03c5\\u03ac\\u03bc\n-LocaleNames\/el_CY\/GW=\\u0393\\u03bf\\u03c5\\u03b9\\u03bd\\u03ad\\u03b1 \\u039c\\u03c0\\u03b9\\u03c3\\u03ac\\u03bf\\u03c5\n-LocaleNames\/el_CY\/GY=\\u0393\\u03bf\\u03c5\\u03b9\\u03ac\\u03bd\\u03b1\n-LocaleNames\/el_CY\/HK=\\u03a7\\u03bf\\u03bd\\u03b3\\u03ba \\u039a\\u03bf\\u03bd\\u03b3\\u03ba \\u0395\\u0394\\u03a0 \\u039a\\u03af\\u03bd\\u03b1\\u03c2\n-LocaleNames\/el_CY\/HM=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a7\\u03b5\\u03c1\\u03bd\\u03c4 \\u03ba\\u03b1\\u03b9 \\u039c\\u03b1\\u03ba\\u03bd\\u03c4\\u03cc\\u03bd\\u03b1\\u03bb\\u03bd\\u03c4\n-LocaleNames\/el_CY\/HN=\\u039f\\u03bd\\u03b4\\u03bf\\u03cd\\u03c1\\u03b1\n-LocaleNames\/el_CY\/HR=\\u039a\\u03c1\\u03bf\\u03b1\\u03c4\\u03af\\u03b1\n-LocaleNames\/el_CY\/HT=\\u0391\\u03ca\\u03c4\\u03ae\n-LocaleNames\/el_CY\/HU=\\u039f\\u03c5\\u03b3\\u03b3\\u03b1\\u03c1\\u03af\\u03b1\n-LocaleNames\/el_CY\/ID=\\u0399\\u03bd\\u03b4\\u03bf\\u03bd\\u03b7\\u03c3\\u03af\\u03b1\n-LocaleNames\/el_CY\/IE=\\u0399\\u03c1\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el_CY\/IL=\\u0399\\u03c3\\u03c1\\u03b1\\u03ae\\u03bb\n-LocaleNames\/el_CY\/IN=\\u0399\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el_CY\/IO=\\u0392\\u03c1\\u03b5\\u03c4\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac \\u0395\\u03b4\\u03ac\\u03c6\\u03b7 \\u0399\\u03bd\\u03b4\\u03b9\\u03ba\\u03bf\\u03cd \\u03a9\\u03ba\\u03b5\\u03b1\\u03bd\\u03bf\\u03cd\n-LocaleNames\/el_CY\/IQ=\\u0399\\u03c1\\u03ac\\u03ba\n-LocaleNames\/el_CY\/IR=\\u0399\\u03c1\\u03ac\\u03bd\n-LocaleNames\/el_CY\/IS=\\u0399\\u03c3\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el_CY\/IT=\\u0399\\u03c4\\u03b1\\u03bb\\u03af\\u03b1\n-LocaleNames\/el_CY\/JM=\\u03a4\\u03b6\\u03b1\\u03bc\\u03ac\\u03b9\\u03ba\\u03b1\n-LocaleNames\/el_CY\/JO=\\u0399\\u03bf\\u03c1\\u03b4\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/JP=\\u0399\\u03b1\\u03c0\\u03c9\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/KE=\\u039a\\u03ad\\u03bd\\u03c5\\u03b1\n-LocaleNames\/el_CY\/KG=\\u039a\\u03b9\\u03c1\\u03b3\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el_CY\/KH=\\u039a\\u03b1\\u03bc\\u03c0\\u03cc\\u03c4\\u03b6\\u03b7\n-LocaleNames\/el_CY\/KI=\\u039a\\u03b9\\u03c1\\u03b9\\u03bc\\u03c0\\u03ac\\u03c4\\u03b9\n-LocaleNames\/el_CY\/KM=\\u039a\\u03bf\\u03bc\\u03cc\\u03c1\\u03b5\\u03c2\n-LocaleNames\/el_CY\/KN=\\u03a3\\u03b5\\u03bd \\u039a\\u03b9\\u03c4\\u03c2 \\u03ba\\u03b1\\u03b9 \\u039d\\u03ad\\u03b2\\u03b9\\u03c2\n-LocaleNames\/el_CY\/KP=\\u0392\\u03cc\\u03c1\\u03b5\\u03b9\\u03b1 \\u039a\\u03bf\\u03c1\\u03ad\\u03b1\n-LocaleNames\/el_CY\/KR=\\u039d\\u03cc\\u03c4\\u03b9\\u03b1 \\u039a\\u03bf\\u03c1\\u03ad\\u03b1\n-LocaleNames\/el_CY\/KW=\\u039a\\u03bf\\u03c5\\u03b2\\u03ad\\u03b9\\u03c4\n-LocaleNames\/el_CY\/KY=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u039a\\u03ad\\u03b9\\u03bc\\u03b1\\u03bd\n-LocaleNames\/el_CY\/KZ=\\u039a\\u03b1\\u03b6\\u03b1\\u03ba\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el_CY\/LA=\\u039b\\u03ac\\u03bf\\u03c2\n-LocaleNames\/el_CY\/LB=\\u039b\\u03af\\u03b2\\u03b1\\u03bd\\u03bf\\u03c2\n-LocaleNames\/el_CY\/LC=\\u0391\\u03b3\\u03af\\u03b1 \\u039b\\u03bf\\u03c5\\u03ba\\u03af\\u03b1\n-LocaleNames\/el_CY\/LI=\\u039b\\u03b9\\u03c7\\u03c4\\u03b5\\u03bd\\u03c3\\u03c4\\u03ac\\u03b9\\u03bd\n-LocaleNames\/el_CY\/LK=\\u03a3\\u03c1\\u03b9 \\u039b\\u03ac\\u03bd\\u03ba\\u03b1\n-LocaleNames\/el_CY\/LR=\\u039b\\u03b9\\u03b2\\u03b5\\u03c1\\u03af\\u03b1\n-LocaleNames\/el_CY\/LS=\\u039b\\u03b5\\u03c3\\u03cc\\u03c4\\u03bf\n-LocaleNames\/el_CY\/LT=\\u039b\\u03b9\\u03b8\\u03bf\\u03c5\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/LU=\\u039b\\u03bf\\u03c5\\u03be\\u03b5\\u03bc\\u03b2\\u03bf\\u03cd\\u03c1\\u03b3\\u03bf\n-LocaleNames\/el_CY\/LV=\\u039b\\u03b5\\u03c4\\u03bf\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/LY=\\u039b\\u03b9\\u03b2\\u03cd\\u03b7\n-LocaleNames\/el_CY\/MA=\\u039c\\u03b1\\u03c1\\u03cc\\u03ba\\u03bf\n-LocaleNames\/el_CY\/MC=\\u039c\\u03bf\\u03bd\\u03b1\\u03ba\\u03cc\n-LocaleNames\/el_CY\/MD=\\u039c\\u03bf\\u03bb\\u03b4\\u03b1\\u03b2\\u03af\\u03b1\n-LocaleNames\/el_CY\/MG=\\u039c\\u03b1\\u03b4\\u03b1\\u03b3\\u03b1\\u03c3\\u03ba\\u03ac\\u03c1\\u03b7\n-LocaleNames\/el_CY\/MH=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u039c\\u03ac\\u03c1\\u03c3\\u03b1\\u03bb\n-LocaleNames\/el_CY\/MK=\\u0392\\u03cc\\u03c1\\u03b5\\u03b9\\u03b1 \\u039c\\u03b1\\u03ba\\u03b5\\u03b4\\u03bf\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/ML=\\u039c\\u03ac\\u03bb\\u03b9\n-LocaleNames\/el_CY\/MM=\\u039c\\u03b9\\u03b1\\u03bd\\u03bc\\u03ac\\u03c1 (\\u0392\\u03b9\\u03c1\\u03bc\\u03b1\\u03bd\\u03af\\u03b1)\n-LocaleNames\/el_CY\/MN=\\u039c\\u03bf\\u03b3\\u03b3\\u03bf\\u03bb\\u03af\\u03b1\n-LocaleNames\/el_CY\/MO=\\u039c\\u03b1\\u03ba\\u03ac\\u03bf \\u0395\\u0394\\u03a0 \\u039a\\u03af\\u03bd\\u03b1\\u03c2\n-LocaleNames\/el_CY\/MP=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u0392\\u03cc\\u03c1\\u03b5\\u03b9\\u03b5\\u03c2 \\u039c\\u03b1\\u03c1\\u03b9\\u03ac\\u03bd\\u03b5\\u03c2\n-LocaleNames\/el_CY\/MQ=\\u039c\\u03b1\\u03c1\\u03c4\\u03b9\\u03bd\\u03af\\u03ba\\u03b1\n-LocaleNames\/el_CY\/MR=\\u039c\\u03b1\\u03c5\\u03c1\\u03b9\\u03c4\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/MS=\\u039c\\u03bf\\u03bd\\u03c3\\u03b5\\u03c1\\u03ac\\u03c4\n-LocaleNames\/el_CY\/MT=\\u039c\\u03ac\\u03bb\\u03c4\\u03b1\n-LocaleNames\/el_CY\/MU=\\u039c\\u03b1\\u03c5\\u03c1\\u03af\\u03ba\\u03b9\\u03bf\\u03c2\n-LocaleNames\/el_CY\/MV=\\u039c\\u03b1\\u03bb\\u03b4\\u03af\\u03b2\\u03b5\\u03c2\n-LocaleNames\/el_CY\/MW=\\u039c\\u03b1\\u03bb\\u03ac\\u03bf\\u03c5\\u03b9\n-LocaleNames\/el_CY\/MX=\\u039c\\u03b5\\u03be\\u03b9\\u03ba\\u03cc\n-LocaleNames\/el_CY\/MY=\\u039c\\u03b1\\u03bb\\u03b1\\u03b9\\u03c3\\u03af\\u03b1\n-LocaleNames\/el_CY\/MZ=\\u039c\\u03bf\\u03b6\\u03b1\\u03bc\\u03b2\\u03af\\u03ba\\u03b7\n-LocaleNames\/el_CY\/NA=\\u039d\\u03b1\\u03bc\\u03af\\u03bc\\u03c0\\u03b9\\u03b1\n-LocaleNames\/el_CY\/NC=\\u039d\\u03ad\\u03b1 \\u039a\\u03b1\\u03bb\\u03b7\\u03b4\\u03bf\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/NE=\\u039d\\u03af\\u03b3\\u03b7\\u03c1\\u03b1\\u03c2\n-LocaleNames\/el_CY\/NF=\\u039d\\u03ae\\u03c3\\u03bf\\u03c2 \\u039d\\u03cc\\u03c1\\u03c6\\u03bf\\u03bb\\u03ba\n-LocaleNames\/el_CY\/NG=\\u039d\\u03b9\\u03b3\\u03b7\\u03c1\\u03af\\u03b1\n-LocaleNames\/el_CY\/NI=\\u039d\\u03b9\\u03ba\\u03b1\\u03c1\\u03ac\\u03b3\\u03bf\\u03c5\\u03b1\n-LocaleNames\/el_CY\/NL=\\u039f\\u03bb\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el_CY\/NO=\\u039d\\u03bf\\u03c1\\u03b2\\u03b7\\u03b3\\u03af\\u03b1\n-LocaleNames\/el_CY\/NP=\\u039d\\u03b5\\u03c0\\u03ac\\u03bb\n-LocaleNames\/el_CY\/NR=\\u039d\\u03b1\\u03bf\\u03c5\\u03c1\\u03bf\\u03cd\n-LocaleNames\/el_CY\/NU=\\u039d\\u03b9\\u03bf\\u03cd\\u03b5\n-LocaleNames\/el_CY\/NZ=\\u039d\\u03ad\\u03b1 \\u0396\\u03b7\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el_CY\/OM=\\u039f\\u03bc\\u03ac\\u03bd\n-LocaleNames\/el_CY\/PA=\\u03a0\\u03b1\\u03bd\\u03b1\\u03bc\\u03ac\\u03c2\n-LocaleNames\/el_CY\/PE=\\u03a0\\u03b5\\u03c1\\u03bf\\u03cd\n-LocaleNames\/el_CY\/PF=\\u0393\\u03b1\\u03bb\\u03bb\\u03b9\\u03ba\\u03ae \\u03a0\\u03bf\\u03bb\\u03c5\\u03bd\\u03b7\\u03c3\\u03af\\u03b1\n-LocaleNames\/el_CY\/PG=\\u03a0\\u03b1\\u03c0\\u03bf\\u03cd\\u03b1 \\u039d\\u03ad\\u03b1 \\u0393\\u03bf\\u03c5\\u03b9\\u03bd\\u03ad\\u03b1\n-LocaleNames\/el_CY\/PH=\\u03a6\\u03b9\\u03bb\\u03b9\\u03c0\\u03c0\\u03af\\u03bd\\u03b5\\u03c2\n-LocaleNames\/el_CY\/PK=\\u03a0\\u03b1\\u03ba\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el_CY\/PL=\\u03a0\\u03bf\\u03bb\\u03c9\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/PM=\\u03a3\\u03b5\\u03bd \\u03a0\\u03b9\\u03b5\\u03c1 \\u03ba\\u03b1\\u03b9 \\u039c\\u03b9\\u03ba\\u03b5\\u03bb\\u03cc\\u03bd\n-LocaleNames\/el_CY\/PN=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a0\\u03af\\u03c4\\u03ba\\u03b5\\u03c1\\u03bd\n-LocaleNames\/el_CY\/PR=\\u03a0\\u03bf\\u03c5\\u03ad\\u03c1\\u03c4\\u03bf \\u03a1\\u03af\\u03ba\\u03bf\n-LocaleNames\/el_CY\/PS=\\u03a0\\u03b1\\u03bb\\u03b1\\u03b9\\u03c3\\u03c4\\u03b9\\u03bd\\u03b9\\u03b1\\u03ba\\u03ac \\u0395\\u03b4\\u03ac\\u03c6\\u03b7\n-LocaleNames\/el_CY\/PT=\\u03a0\\u03bf\\u03c1\\u03c4\\u03bf\\u03b3\\u03b1\\u03bb\\u03af\\u03b1\n-LocaleNames\/el_CY\/PW=\\u03a0\\u03b1\\u03bb\\u03ac\\u03bf\\u03c5\n-LocaleNames\/el_CY\/PY=\\u03a0\\u03b1\\u03c1\\u03b1\\u03b3\\u03bf\\u03c5\\u03ac\\u03b7\n-LocaleNames\/el_CY\/QA=\\u039a\\u03b1\\u03c4\\u03ac\\u03c1\n-LocaleNames\/el_CY\/RE=\\u03a1\\u03b5\\u03ca\\u03bd\\u03b9\\u03cc\\u03bd\n-LocaleNames\/el_CY\/RO=\\u03a1\\u03bf\\u03c5\\u03bc\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/RU=\\u03a1\\u03c9\\u03c3\\u03af\\u03b1\n-LocaleNames\/el_CY\/RW=\\u03a1\\u03bf\\u03c5\\u03ac\\u03bd\\u03c4\\u03b1\n-LocaleNames\/el_CY\/SA=\\u03a3\\u03b1\\u03bf\\u03c5\\u03b4\\u03b9\\u03ba\\u03ae \\u0391\\u03c1\\u03b1\\u03b2\\u03af\\u03b1\n-LocaleNames\/el_CY\/SB=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a3\\u03bf\\u03bb\\u03bf\\u03bc\\u03ce\\u03bd\\u03c4\\u03bf\\u03c2\n-LocaleNames\/el_CY\/SC=\\u03a3\\u03b5\\u03cb\\u03c7\\u03ad\\u03bb\\u03bb\\u03b5\\u03c2\n-LocaleNames\/el_CY\/SD=\\u03a3\\u03bf\\u03c5\\u03b4\\u03ac\\u03bd\n-LocaleNames\/el_CY\/SE=\\u03a3\\u03bf\\u03c5\\u03b7\\u03b4\\u03af\\u03b1\n-LocaleNames\/el_CY\/SG=\\u03a3\\u03b9\\u03b3\\u03ba\\u03b1\\u03c0\\u03bf\\u03cd\\u03c1\\u03b7\n-LocaleNames\/el_CY\/SH=\\u0391\\u03b3\\u03af\\u03b1 \\u0395\\u03bb\\u03ad\\u03bd\\u03b7\n-LocaleNames\/el_CY\/SI=\\u03a3\\u03bb\\u03bf\\u03b2\\u03b5\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/SJ=\\u03a3\\u03b2\\u03ac\\u03bb\\u03bc\\u03c0\\u03b1\\u03c1\\u03bd\\u03c4 \\u03ba\\u03b1\\u03b9 \\u0393\\u03b9\\u03b1\\u03bd \\u039c\\u03b1\\u03b3\\u03b9\\u03ad\\u03bd\n-LocaleNames\/el_CY\/SK=\\u03a3\\u03bb\\u03bf\\u03b2\\u03b1\\u03ba\\u03af\\u03b1\n-LocaleNames\/el_CY\/SL=\\u03a3\\u03b9\\u03ad\\u03c1\\u03b1 \\u039b\\u03b5\\u03cc\\u03bd\\u03b5\n-LocaleNames\/el_CY\/SM=\\u0386\\u03b3\\u03b9\\u03bf\\u03c2 \\u039c\\u03b1\\u03c1\\u03af\\u03bd\\u03bf\\u03c2\n-LocaleNames\/el_CY\/SN=\\u03a3\\u03b5\\u03bd\\u03b5\\u03b3\\u03ac\\u03bb\\u03b7\n-LocaleNames\/el_CY\/SO=\\u03a3\\u03bf\\u03bc\\u03b1\\u03bb\\u03af\\u03b1\n-LocaleNames\/el_CY\/SR=\\u03a3\\u03bf\\u03c5\\u03c1\\u03b9\\u03bd\\u03ac\\u03bc\n-LocaleNames\/el_CY\/ST=\\u03a3\\u03ac\\u03bf \\u03a4\\u03bf\\u03bc\\u03ad \\u03ba\\u03b1\\u03b9 \\u03a0\\u03c1\\u03af\\u03bd\\u03c3\\u03b9\\u03c0\\u03b5\n-LocaleNames\/el_CY\/SV=\\u0395\\u03bb \\u03a3\\u03b1\\u03bb\\u03b2\\u03b1\\u03b4\\u03cc\\u03c1\n-LocaleNames\/el_CY\/SY=\\u03a3\\u03c5\\u03c1\\u03af\\u03b1\n-LocaleNames\/el_CY\/TC=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a4\\u03b5\\u03c1\\u03ba\\u03c2 \\u03ba\\u03b1\\u03b9 \\u039a\\u03ac\\u03b9\\u03ba\\u03bf\\u03c2\n-LocaleNames\/el_CY\/TD=\\u03a4\\u03c3\\u03b1\\u03bd\\u03c4\n-LocaleNames\/el_CY\/TF=\\u0393\\u03b1\\u03bb\\u03bb\\u03b9\\u03ba\\u03ac \\u039d\\u03cc\\u03c4\\u03b9\\u03b1 \\u0395\\u03b4\\u03ac\\u03c6\\u03b7\n-LocaleNames\/el_CY\/TG=\\u03a4\\u03cc\\u03b3\\u03ba\\u03bf\n-LocaleNames\/el_CY\/TH=\\u03a4\\u03b1\\u03ca\\u03bb\\u03ac\\u03bd\\u03b4\\u03b7\n-LocaleNames\/el_CY\/TJ=\\u03a4\\u03b1\\u03c4\\u03b6\\u03b9\\u03ba\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el_CY\/TK=\\u03a4\\u03bf\\u03ba\\u03b5\\u03bb\\u03ac\\u03bf\\u03c5\n-LocaleNames\/el_CY\/TL=\\u03a4\\u03b9\\u03bc\\u03cc\\u03c1-\\u039b\\u03ad\\u03c3\\u03c4\\u03b5\n-LocaleNames\/el_CY\/TM=\\u03a4\\u03bf\\u03c5\\u03c1\\u03ba\\u03bc\\u03b5\\u03bd\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el_CY\/TN=\\u03a4\\u03c5\\u03bd\\u03b7\\u03c3\\u03af\\u03b1\n-LocaleNames\/el_CY\/TO=\\u03a4\\u03cc\\u03bd\\u03b3\\u03ba\\u03b1\n-LocaleNames\/el_CY\/TR=\\u03a4\\u03bf\\u03c5\\u03c1\\u03ba\\u03af\\u03b1\n-LocaleNames\/el_CY\/TT=\\u03a4\\u03c1\\u03b9\\u03bd\\u03b9\\u03bd\\u03c4\\u03ac\\u03bd\\u03c4 \\u03ba\\u03b1\\u03b9 \\u03a4\\u03bf\\u03bc\\u03c0\\u03ac\\u03b3\\u03ba\\u03bf\n-LocaleNames\/el_CY\/TV=\\u03a4\\u03bf\\u03c5\\u03b2\\u03b1\\u03bb\\u03bf\\u03cd\n-LocaleNames\/el_CY\/TW=\\u03a4\\u03b1\\u03ca\\u03b2\\u03ac\\u03bd\n-LocaleNames\/el_CY\/TZ=\\u03a4\\u03b1\\u03bd\\u03b6\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/UA=\\u039f\\u03c5\\u03ba\\u03c1\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el_CY\/UG=\\u039f\\u03c5\\u03b3\\u03ba\\u03ac\\u03bd\\u03c4\\u03b1\n-LocaleNames\/el_CY\/UM=\\u0391\\u03c0\\u03bf\\u03bc\\u03b1\\u03ba\\u03c1\\u03c5\\u03c3\\u03bc\\u03ad\\u03bd\\u03b5\\u03c2 \\u039d\\u03b7\\u03c3\\u03af\\u03b4\\u03b5\\u03c2 \\u0397\\u03a0\\u0391\n-LocaleNames\/el_CY\/US=\\u0397\\u03bd\\u03c9\\u03bc\\u03ad\\u03bd\\u03b5\\u03c2 \\u03a0\\u03bf\\u03bb\\u03b9\\u03c4\\u03b5\\u03af\\u03b5\\u03c2\n-LocaleNames\/el_CY\/UY=\\u039f\\u03c5\\u03c1\\u03bf\\u03c5\\u03b3\\u03bf\\u03c5\\u03ac\\u03b7\n-LocaleNames\/el_CY\/UZ=\\u039f\\u03c5\\u03b6\\u03bc\\u03c0\\u03b5\\u03ba\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el_CY\/VA=\\u0392\\u03b1\\u03c4\\u03b9\\u03ba\\u03b1\\u03bd\\u03cc\n-LocaleNames\/el_CY\/VC=\\u0386\\u03b3\\u03b9\\u03bf\\u03c2 \\u0392\\u03b9\\u03ba\\u03ad\\u03bd\\u03c4\\u03b9\\u03bf\\u03c2 \\u03ba\\u03b1\\u03b9 \\u0393\\u03c1\\u03b5\\u03bd\\u03b1\\u03b4\\u03af\\u03bd\\u03b5\\u03c2\n-LocaleNames\/el_CY\/VE=\\u0392\\u03b5\\u03bd\\u03b5\\u03b6\\u03bf\\u03c5\\u03ad\\u03bb\\u03b1\n-LocaleNames\/el_CY\/VG=\\u0392\\u03c1\\u03b5\\u03c4\\u03b1\\u03bd\\u03b9\\u03ba\\u03ad\\u03c2 \\u03a0\\u03b1\\u03c1\\u03b8\\u03ad\\u03bd\\u03b5\\u03c2 \\u039d\\u03ae\\u03c3\\u03bf\\u03b9\n-LocaleNames\/el_CY\/VI=\\u0391\\u03bc\\u03b5\\u03c1\\u03b9\\u03ba\\u03b1\\u03bd\\u03b9\\u03ba\\u03ad\\u03c2 \\u03a0\\u03b1\\u03c1\\u03b8\\u03ad\\u03bd\\u03b5\\u03c2 \\u039d\\u03ae\\u03c3\\u03bf\\u03b9\n-LocaleNames\/el_CY\/VN=\\u0392\\u03b9\\u03b5\\u03c4\\u03bd\\u03ac\\u03bc\n-LocaleNames\/el_CY\/VU=\\u0392\\u03b1\\u03bd\\u03bf\\u03c5\\u03ac\\u03c4\\u03bf\\u03c5\n-LocaleNames\/el_CY\/WF=\\u0393\\u03bf\\u03c5\\u03ac\\u03bb\\u03b9\\u03c2 \\u03ba\\u03b1\\u03b9 \\u03a6\\u03bf\\u03c5\\u03c4\\u03bf\\u03cd\\u03bd\\u03b1\n-LocaleNames\/el_CY\/WS=\\u03a3\\u03b1\\u03bc\\u03cc\\u03b1\n-LocaleNames\/el_CY\/YE=\\u03a5\\u03b5\\u03bc\\u03ad\\u03bd\\u03b7\n-LocaleNames\/el_CY\/YT=\\u039c\\u03b1\\u03b3\\u03b9\\u03cc\\u03c4\n-LocaleNames\/el_CY\/ZA=\\u039d\\u03cc\\u03c4\\u03b9\\u03b1 \\u0391\\u03c6\\u03c1\\u03b9\\u03ba\\u03ae\n-LocaleNames\/el_CY\/ZM=\\u0396\\u03ac\\u03bc\\u03c0\\u03b9\\u03b1\n-LocaleNames\/el_CY\/ZW=\\u0396\\u03b9\\u03bc\\u03c0\\u03ac\\u03bc\\u03c0\\u03bf\\u03c5\\u03b5\n-CurrencyNames\/el_CY\/CYP=\\u00a3\n-CurrencyNames\/el_CY\/EUR=\\u20ac\n-CalendarData\/el_CY\/minimalDaysInFirstWeek=1\n-\n-#ms_MY and ms\n-FormatData\/ms_MY\/NumberPatterns\/0=#,##0.###\n-FormatData\/ms_MY\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/ms_MY\/NumberPatterns\/2=#,##0%\n-FormatData\/ms_MY\/TimePatterns\/0=h:mm:ss a z\n-FormatData\/ms_MY\/TimePatterns\/1=h:mm:ss a z\n-FormatData\/ms_MY\/TimePatterns\/2=h:mm:ss a\n-FormatData\/ms_MY\/TimePatterns\/3=h:mm\n-FormatData\/ms_MY\/DatePatterns\/0=EEEE dd MMM yyyy\n-FormatData\/ms_MY\/DatePatterns\/1=dd MMMM yyyy\n-FormatData\/ms_MY\/DatePatterns\/2=dd MMMM yyyy\n-FormatData\/ms_MY\/DatePatterns\/3=dd\/MM\/yyyy\n-FormatData\/ms_MY\/DateTimePatterns\/0={1} {0}\n-CurrencyNames\/ms_MY\/MYR=RM\n-LocaleNames\/ms\/ms=Melayu\n-LocaleNames\/ms\/AE=Emiriah Arab Bersatu\n-LocaleNames\/ms\/AG=Antigua dan Barbuda\n-LocaleNames\/ms\/BA=Bosnia dan Herzegovina\n-LocaleNames\/ms\/CA=Kanada\n-LocaleNames\/ms\/CC=Kepulauan Cocos (Keeling)\n-LocaleNames\/ms\/CD=Congo - Kinshasa\n-LocaleNames\/ms\/CF=Republik Afrika Tengah\n-LocaleNames\/ms\/CI=Cote d\\u2019Ivoire\n-LocaleNames\/ms\/CL=Chile\n-LocaleNames\/ms\/CM=Cameroon\n-LocaleNames\/ms\/CN=China\n-LocaleNames\/ms\/CR=Costa Rica\n-LocaleNames\/ms\/CY=Cyprus\n-LocaleNames\/ms\/CZ=Czechia\n-LocaleNames\/ms\/DE=Jerman\n-LocaleNames\/ms\/DJ=Djibouti\n-LocaleNames\/ms\/DO=Republik Dominica\n-LocaleNames\/ms\/DZ=Algeria\n-LocaleNames\/ms\/EG=Mesir\n-LocaleNames\/ms\/EH=Sahara Barat\n-LocaleNames\/ms\/ES=Sepanyol\n-LocaleNames\/ms\/FR=Perancis\n-LocaleNames\/ms\/GR=Greece\n-LocaleNames\/ms\/GS=Kepulauan Georgia Selatan & Sandwich Selatan\n-LocaleNames\/ms\/GW=Guinea Bissau\n-LocaleNames\/ms\/HK=Hong Kong SAR China\n-LocaleNames\/ms\/HM=Kepulauan Heard & McDonald\n-LocaleNames\/ms\/HU=Hungary\n-LocaleNames\/ms\/IN=India\n-LocaleNames\/ms\/IT=Itali\n-LocaleNames\/ms\/JM=Jamaica\n-LocaleNames\/ms\/JP=Jepun\n-LocaleNames\/ms\/KH=Kemboja\n-LocaleNames\/ms\/KN=Saint Kitts dan Nevis\n-LocaleNames\/ms\/KP=Korea Utara\n-LocaleNames\/ms\/KR=Korea Selatan\n-LocaleNames\/ms\/LB=Lubnan\n-LocaleNames\/ms\/LU=Luxembourg\n-LocaleNames\/ms\/MA=Maghribi\n-LocaleNames\/ms\/MG=Madagaskar\n-LocaleNames\/ms\/MH=Kepulauan Marshall\n-LocaleNames\/ms\/MO=Macau SAR China\n-LocaleNames\/ms\/MV=Maldives\n-LocaleNames\/ms\/MX=Mexico\n-LocaleNames\/ms\/MZ=Mozambique\n-LocaleNames\/ms\/NL=Belanda\n-LocaleNames\/ms\/PH=Filipina\n-LocaleNames\/ms\/PM=Saint Pierre dan Miquelon\n-LocaleNames\/ms\/PS=Wilayah Palestin\n-LocaleNames\/ms\/PT=Portugal\n-LocaleNames\/ms\/RE=Reunion\n-LocaleNames\/ms\/SA=Arab Saudi\n-LocaleNames\/ms\/SB=Kepulauan Solomon\n-LocaleNames\/ms\/SG=Singapura\n-LocaleNames\/ms\/SJ=Svalbard dan Jan Mayen\n-LocaleNames\/ms\/SL=Sierra Leone\n-LocaleNames\/ms\/SR=Surinam\n-LocaleNames\/ms\/ST=Sao Tome dan Principe\n-LocaleNames\/ms\/TC=Kepulauan Turks dan Caicos\n-LocaleNames\/ms\/TD=Chad\n-LocaleNames\/ms\/TJ=Tajikistan\n-LocaleNames\/ms\/TR=Turki\n-LocaleNames\/ms\/TT=Trinidad dan Tobago\n-LocaleNames\/ms\/US=Amerika Syarikat\n-LocaleNames\/ms\/VC=Saint Vincent dan Grenadines\n-LocaleNames\/ms\/WF=Wallis dan Futuna\n-LocaleNames\/ms\/YE=Yaman\n-LocaleNames\/ms\/ZA=Afrika Selatan\n-\n-# es_US\n-FormatData\/es_US\/Eras\/0=a.C.\n-FormatData\/es_US\/Eras\/1=d.C.\n-FormatData\/es_US\/NumberPatterns\/0=#,##0.###\n-FormatData\/es_US\/NumberPatterns\/1=\\u00a4#,##0.00;(\\u00a4#,##0.00)\n-FormatData\/es_US\/NumberPatterns\/2=#,##0%\n-FormatData\/es_US\/TimePatterns\/0=h:mm:ss a z\n-FormatData\/es_US\/TimePatterns\/1=h:mm:ss a z\n-FormatData\/es_US\/TimePatterns\/2=h:mm:ss a\n-FormatData\/es_US\/TimePatterns\/3=h:mm a\n-FormatData\/es_US\/DatePatterns\/0=EEEE d' de 'MMMM' de 'yyyy\n-FormatData\/es_US\/DatePatterns\/1=d' de 'MMMM' de 'yyyy\n-FormatData\/es_US\/DatePatterns\/2=MMM d, yyyy\n-FormatData\/es_US\/DatePatterns\/3=M\/d\/yy\n-FormatData\/es_US\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/es_US\/aa=afar\n-LocaleNames\/es_US\/ae=av\\u00e9stico\n-LocaleNames\/es_US\/ak=akan\n-LocaleNames\/es_US\/an=aragon\\u00e9s\n-LocaleNames\/es_US\/av=avar\n-LocaleNames\/es_US\/ay=aimara\n-LocaleNames\/es_US\/az=azerbaiyano\n-LocaleNames\/es_US\/ba=baskir\n-LocaleNames\/es_US\/bh=bihari\n-LocaleNames\/es_US\/bm=bambara\n-LocaleNames\/es_US\/bn=bengal\\u00ed\n-LocaleNames\/es_US\/bs=bosnio\n-LocaleNames\/es_US\/ce=checheno\n-LocaleNames\/es_US\/ch=chamorro\n-LocaleNames\/es_US\/cr=cree\n-LocaleNames\/es_US\/cu=eslavo eclesi\\u00e1stico\n-LocaleNames\/es_US\/cv=chuvasio\n-LocaleNames\/es_US\/dv=divehi\n-LocaleNames\/es_US\/ee=ew\\u00e9\n-LocaleNames\/es_US\/eu=euskera\n-LocaleNames\/es_US\/ff=fula\n-LocaleNames\/es_US\/fo=fero\\u00e9s\n-LocaleNames\/es_US\/fy=fris\\u00f3n occidental\n-LocaleNames\/es_US\/gu=gurayat\\u00ed\n-LocaleNames\/es_US\/gv=man\\u00e9s\n-LocaleNames\/es_US\/hi=hindi\n-LocaleNames\/es_US\/ho=hiri motu\n-LocaleNames\/es_US\/ht=criollo haitiano\n-LocaleNames\/es_US\/hz=herero\n-LocaleNames\/es_US\/ie=interlingue\n-LocaleNames\/es_US\/ig=igbo\n-LocaleNames\/es_US\/ii=yi de Sichu\\u00e1n\n-LocaleNames\/es_US\/io=ido\n-LocaleNames\/es_US\/jv=javan\\u00e9s\n-LocaleNames\/es_US\/kg=kongo\n-LocaleNames\/es_US\/ki=kikuyu\n-LocaleNames\/es_US\/kj=kuanyama\n-LocaleNames\/es_US\/kk=kazajo\n-LocaleNames\/es_US\/km=jemer\n-LocaleNames\/es_US\/kn=canar\\u00e9s\n-LocaleNames\/es_US\/kr=kanuri\n-LocaleNames\/es_US\/ks=cachemiro\n-LocaleNames\/es_US\/ku=kurdo\n-LocaleNames\/es_US\/kv=komi\n-LocaleNames\/es_US\/kw=c\\u00f3rnico\n-LocaleNames\/es_US\/ky=kirgu\\u00eds\n-LocaleNames\/es_US\/lb=luxemburgu\\u00e9s\n-LocaleNames\/es_US\/lg=ganda\n-LocaleNames\/es_US\/li=limburgu\\u00e9s\n-LocaleNames\/es_US\/lu=luba-katanga\n-LocaleNames\/es_US\/mh=marshal\\u00e9s\n-LocaleNames\/es_US\/mr=marat\\u00ed\n-LocaleNames\/es_US\/nb=noruego bokmal\n-LocaleNames\/es_US\/nd=ndebele del norte\n-LocaleNames\/es_US\/ng=ndonga\n-LocaleNames\/es_US\/nn=noruego nynorsk\n-LocaleNames\/es_US\/nr=ndebele meridional\n-LocaleNames\/es_US\/nv=navajo\n-LocaleNames\/es_US\/ny=nyanja\n-LocaleNames\/es_US\/oc=occitano\n-LocaleNames\/es_US\/oj=ojibwa\n-LocaleNames\/es_US\/os=os\\u00e9tico\n-LocaleNames\/es_US\/pi=pali\n-LocaleNames\/es_US\/rm=romanche\n-LocaleNames\/es_US\/rn=kirundi\n-LocaleNames\/es_US\/rw=kinyarwanda\n-LocaleNames\/es_US\/sc=sardo\n-LocaleNames\/es_US\/sd=sindhi\n-LocaleNames\/es_US\/se=sami del norte\n-LocaleNames\/es_US\/sl=esloveno\n-LocaleNames\/es_US\/sn=shona\n-LocaleNames\/es_US\/ss=siswati\n-LocaleNames\/es_US\/st=sesoto\n-LocaleNames\/es_US\/su=sundan\\u00e9s\n-LocaleNames\/es_US\/sw=swahili\n-LocaleNames\/es_US\/tg=tayiko\n-LocaleNames\/es_US\/tn=setchwana\n-LocaleNames\/es_US\/to=tongano\n-LocaleNames\/es_US\/tw=twi\n-LocaleNames\/es_US\/ty=tahitiano\n-LocaleNames\/es_US\/ug=uigur\n-LocaleNames\/es_US\/uk=ucraniano\n-LocaleNames\/es_US\/uz=uzbeko\n-LocaleNames\/es_US\/ve=venda\n-LocaleNames\/es_US\/wa=val\\u00f3n\n-LocaleNames\/es_US\/za=zhuang\n-LocaleNames\/es_US\/AN=Antillas Neerlandesas\n-LocaleNames\/es_US\/BA=Bosnia y Herzegovina\n-LocaleNames\/es_US\/CC=Islas Cocos\n-LocaleNames\/es_US\/CX=Isla de Navidad\n-LocaleNames\/es_US\/CZ=Chequia\n-LocaleNames\/es_US\/EH=Sahara Occidental\n-LocaleNames\/es_US\/FK=Islas Malvinas\n-LocaleNames\/es_US\/HK=RAE de Hong Kong (China)\n-LocaleNames\/es_US\/KM=Comoras\n-LocaleNames\/es_US\/LC=Santa Luc\\u00eda\n-LocaleNames\/es_US\/LS=Lesoto\n-LocaleNames\/es_US\/MO=RAE de Macao (China)\n-LocaleNames\/es_US\/MW=Malaui\n-LocaleNames\/es_US\/NL=Pa\\u00edses Bajos\n-LocaleNames\/es_US\/NU=Niue\n-LocaleNames\/es_US\/PG=Pap\\u00faa Nueva Guinea\n-LocaleNames\/es_US\/PK=Pakist\\u00e1n\n-LocaleNames\/es_US\/PN=Islas Pitcairn\n-LocaleNames\/es_US\/PS=Territorios Palestinos\n-LocaleNames\/es_US\/PW=Palaos\n-LocaleNames\/es_US\/RO=Ruman\\u00eda\n-LocaleNames\/es_US\/SA=Arabia Saud\\u00ed\n-LocaleNames\/es_US\/SH=Santa Elena\n-LocaleNames\/es_US\/TF=Territorios Australes Franceses\n-LocaleNames\/es_US\/TK=Tokelau\n-LocaleNames\/es_US\/TT=Trinidad y Tobago\n-LocaleNames\/es_US\/VI=Islas V\\u00edrgenes de EE. UU.\n-CurrencyNames\/es_US\/USD=US$\n-CalendarData\/es_US\/firstDayOfWeek=1\n-#bug 4400849\n-LocaleNames\/pt\/aa=afar\n-LocaleNames\/pt\/ab=abc\\u00e1zio\n-LocaleNames\/pt\/ae=av\\u00e9stico\n-LocaleNames\/pt\/af=afric\\u00e2ner\n-LocaleNames\/pt\/am=am\\u00e1rico\n-LocaleNames\/pt\/an=aragon\\u00eas\n-LocaleNames\/pt\/ar=\\u00e1rabe\n-LocaleNames\/pt\/as=assam\\u00eas\n-LocaleNames\/pt\/av=av\\u00e1rico\n-LocaleNames\/pt\/ay=aimar\\u00e1\n-LocaleNames\/pt\/az=azerbaijano\n-LocaleNames\/pt\/ba=bashkir\n-LocaleNames\/pt\/be=bielorrusso\n-LocaleNames\/pt\/bg=b\\u00falgaro\n-LocaleNames\/pt\/bh=biari\n-LocaleNames\/pt\/bi=bislam\\u00e1\n-LocaleNames\/pt\/bm=bambara\n-LocaleNames\/pt\/bn=bengali\n-LocaleNames\/pt\/bo=tibetano\n-LocaleNames\/pt\/br=bret\\u00e3o\n-LocaleNames\/pt\/bs=b\\u00f3snio\n-LocaleNames\/pt\/ca=catal\\u00e3o\n-LocaleNames\/pt\/ce=checheno\n-LocaleNames\/pt\/ch=chamorro\n-LocaleNames\/pt\/co=corso\n-LocaleNames\/pt\/cr=cree\n-LocaleNames\/pt\/cs=tcheco\n-LocaleNames\/pt\/cu=eslavo eclesi\\u00e1stico\n-LocaleNames\/pt\/cv=tchuvache\n-LocaleNames\/pt\/cy=gal\\u00eas\n-LocaleNames\/pt\/da=dinamarqu\\u00eas\n-LocaleNames\/pt\/de=alem\\u00e3o\n-LocaleNames\/pt\/dv=divehi\n-LocaleNames\/pt\/dz=dzonga\n-LocaleNames\/pt\/ee=ewe\n-LocaleNames\/pt\/el=grego\n-LocaleNames\/pt\/en=ingl\\u00eas\n-LocaleNames\/pt\/eo=esperanto\n-LocaleNames\/pt\/es=espanhol\n-LocaleNames\/pt\/et=estoniano\n-LocaleNames\/pt\/eu=basco\n-LocaleNames\/pt\/fa=persa\n-LocaleNames\/pt\/ff=fula\n-LocaleNames\/pt\/fi=finland\\u00eas\n-LocaleNames\/pt\/fj=fijiano\n-LocaleNames\/pt\/fo=fero\\u00eas\n-LocaleNames\/pt\/fr=franc\\u00eas\n-LocaleNames\/pt\/fy=fr\\u00edsio ocidental\n-LocaleNames\/pt\/ga=irland\\u00eas\n-LocaleNames\/pt\/gd=ga\\u00e9lico escoc\\u00eas\n-LocaleNames\/pt\/gl=galego\n-LocaleNames\/pt\/gn=guarani\n-LocaleNames\/pt\/gu=guzerate\n-LocaleNames\/pt\/gv=manx\n-LocaleNames\/pt\/ha=hau\\u00e7\\u00e1\n-LocaleNames\/pt\/he=hebraico\n-LocaleNames\/pt\/hi=h\\u00edndi\n-LocaleNames\/pt\/ho=hiri motu\n-LocaleNames\/pt\/hr=croata\n-LocaleNames\/pt\/ht=haitiano\n-LocaleNames\/pt\/hu=h\\u00fangaro\n-LocaleNames\/pt\/hy=arm\\u00eanio\n-LocaleNames\/pt\/hz=herero\n-LocaleNames\/pt\/ia=interl\\u00edngua\n-LocaleNames\/pt\/id=indon\\u00e9sio\n-LocaleNames\/pt\/ie=interlingue\n-LocaleNames\/pt\/ig=igbo\n-LocaleNames\/pt\/ii=sichuan yi\n-LocaleNames\/pt\/in=indon\\u00e9sio\n-LocaleNames\/pt\/io=ido\n-LocaleNames\/pt\/is=island\\u00eas\n-LocaleNames\/pt\/it=italiano\n-LocaleNames\/pt\/iu=inuktitut\n-LocaleNames\/pt\/iw=hebraico\n-LocaleNames\/pt\/ja=japon\\u00eas\n-LocaleNames\/pt\/ji=i\\u00eddiche\n-LocaleNames\/pt\/ka=georgiano\n-LocaleNames\/pt\/kg=congol\\u00eas\n-LocaleNames\/pt\/ki=quicuio\n-LocaleNames\/pt\/kj=cuanhama\n-LocaleNames\/pt\/kk=cazaque\n-LocaleNames\/pt\/kl=groenland\\u00eas\n-LocaleNames\/pt\/km=khmer\n-LocaleNames\/pt\/kn=canarim\n-LocaleNames\/pt\/ko=coreano\n-LocaleNames\/pt\/kr=can\\u00fari\n-LocaleNames\/pt\/ks=caxemira\n-LocaleNames\/pt\/ku=curdo\n-LocaleNames\/pt\/kv=komi\n-LocaleNames\/pt\/kw=c\\u00f3rnico\n-LocaleNames\/pt\/ky=quirguiz\n-LocaleNames\/pt\/la=latim\n-LocaleNames\/pt\/lb=luxemburgu\\u00eas\n-LocaleNames\/pt\/lg=luganda\n-LocaleNames\/pt\/li=limburgu\\u00eas\n-LocaleNames\/pt\/ln=lingala\n-LocaleNames\/pt\/lo=laosiano\n-LocaleNames\/pt\/lt=lituano\n-LocaleNames\/pt\/lu=luba-catanga\n-LocaleNames\/pt\/lv=let\\u00e3o\n-LocaleNames\/pt\/mg=malgaxe\n-LocaleNames\/pt\/mh=marshal\\u00eas\n-LocaleNames\/pt\/mi=maori\n-LocaleNames\/pt\/mk=maced\\u00f4nio\n-LocaleNames\/pt\/ml=malaiala\n-LocaleNames\/pt\/mn=mongol\n-LocaleNames\/pt\/mo=mold\\u00e1vio\n-LocaleNames\/pt\/mr=marati\n-LocaleNames\/pt\/ms=malaio\n-LocaleNames\/pt\/mt=malt\\u00eas\n-LocaleNames\/pt\/my=birman\\u00eas\n-LocaleNames\/pt\/na=nauruano\n-LocaleNames\/pt\/nb=bokm\\u00e5l noruegu\\u00eas\n-LocaleNames\/pt\/nd=ndebele do norte\n-LocaleNames\/pt\/ne=nepal\\u00eas\n-LocaleNames\/pt\/ng=dongo\n-LocaleNames\/pt\/nl=holand\\u00eas\n-LocaleNames\/pt\/nn=nynorsk noruegu\\u00eas\n-LocaleNames\/pt\/no=noruegu\\u00eas\n-LocaleNames\/pt\/nr=ndebele do sul\n-LocaleNames\/pt\/nv=navajo\n-LocaleNames\/pt\/ny=nianja\n-LocaleNames\/pt\/oc=occit\\u00e2nico\n-LocaleNames\/pt\/oj=ojibwa\n-LocaleNames\/pt\/om=oromo\n-LocaleNames\/pt\/or=ori\\u00e1\n-LocaleNames\/pt\/os=osseto\n-LocaleNames\/pt\/pa=panjabi\n-LocaleNames\/pt\/pi=p\\u00e1li\n-LocaleNames\/pt\/pl=polon\\u00eas\n-LocaleNames\/pt\/ps=pashto\n-LocaleNames\/pt\/pt=portugu\\u00eas\n-LocaleNames\/pt\/qu=qu\\u00edchua\n-LocaleNames\/pt\/rm=romanche\n-LocaleNames\/pt\/rn=rundi\n-LocaleNames\/pt\/ro=romeno\n-LocaleNames\/pt\/ru=russo\n-LocaleNames\/pt\/rw=quiniaruanda\n-LocaleNames\/pt\/sa=s\\u00e2nscrito\n-LocaleNames\/pt\/sc=sardo\n-LocaleNames\/pt\/sd=sindi\n-LocaleNames\/pt\/se=sami setentrional\n-LocaleNames\/pt\/sg=sango\n-LocaleNames\/pt\/si=cingal\\u00eas\n-LocaleNames\/pt\/sk=eslovaco\n-LocaleNames\/pt\/sl=esloveno\n-LocaleNames\/pt\/so=somali\n-LocaleNames\/pt\/sq=alban\\u00eas\n-LocaleNames\/pt\/sr=s\\u00e9rvio\n-LocaleNames\/pt\/ss=su\\u00e1zi\n-LocaleNames\/pt\/st=soto do sul\n-LocaleNames\/pt\/su=sundan\\u00eas\n-LocaleNames\/pt\/sv=sueco\n-LocaleNames\/pt\/sw=sua\\u00edli\n-LocaleNames\/pt\/ta=t\\u00e2mil\n-LocaleNames\/pt\/te=t\\u00e9lugo\n-LocaleNames\/pt\/tg=tadjique\n-LocaleNames\/pt\/th=tailand\\u00eas\n-LocaleNames\/pt\/ti=tigr\\u00ednia\n-LocaleNames\/pt\/tk=turcomeno\n-LocaleNames\/pt\/tn=tswana\n-LocaleNames\/pt\/to=tongan\\u00eas\n-LocaleNames\/pt\/tr=turco\n-LocaleNames\/pt\/ts=tsonga\n-LocaleNames\/pt\/tt=t\\u00e1rtaro\n-LocaleNames\/pt\/tw=twi\n-LocaleNames\/pt\/ty=taitiano\n-LocaleNames\/pt\/ug=uigur\n-LocaleNames\/pt\/uk=ucraniano\n-LocaleNames\/pt\/ur=urdu\n-LocaleNames\/pt\/uz=uzbeque\n-LocaleNames\/pt\/ve=venda\n-LocaleNames\/pt\/vi=vietnamita\n-LocaleNames\/pt\/vo=volapuque\n-LocaleNames\/pt\/wa=val\\u00e3o\n-LocaleNames\/pt\/wo=uolofe\n-LocaleNames\/pt\/xh=xhosa\n-LocaleNames\/pt\/yi=i\\u00eddiche\n-LocaleNames\/pt\/yo=iorub\\u00e1\n-LocaleNames\/pt\/za=zhuang\n-LocaleNames\/pt\/zh=chin\\u00eas\n-LocaleNames\/pt\/zu=zulu\n-LocaleNames\/pt\/AE=Emirados \\u00c1rabes Unidos\n-LocaleNames\/pt\/AF=Afeganist\\u00e3o\n-LocaleNames\/pt\/AG=Ant\\u00edgua e Barbuda\n-LocaleNames\/pt\/AL=Alb\\u00e2nia\n-LocaleNames\/pt\/AM=Arm\\u00eania\n-LocaleNames\/pt\/AN=Antilhas Holandesas\n-LocaleNames\/pt\/AQ=Ant\\u00e1rtida\n-LocaleNames\/pt\/AS=Samoa Americana\n-LocaleNames\/pt\/AT=\\u00c1ustria\n-LocaleNames\/pt\/AU=Austr\\u00e1lia\n-LocaleNames\/pt\/AZ=Azerbaij\\u00e3o\n-LocaleNames\/pt\/BA=B\\u00f3snia e Herzegovina\n-LocaleNames\/pt\/BE=B\\u00e9lgica\n-LocaleNames\/pt\/BF=Burquina Faso\n-LocaleNames\/pt\/BG=Bulg\\u00e1ria\n-LocaleNames\/pt\/BH=Barein\n-LocaleNames\/pt\/BM=Bermudas\n-LocaleNames\/pt\/BO=Bol\\u00edvia\n-LocaleNames\/pt\/BR=Brasil\n-LocaleNames\/pt\/BT=But\\u00e3o\n-LocaleNames\/pt\/BV=Ilha Bouvet\n-LocaleNames\/pt\/BW=Botsuana\n-LocaleNames\/pt\/CA=Canad\\u00e1\n-LocaleNames\/pt\/CC=Ilhas Cocos (Keeling)\n-LocaleNames\/pt\/CD=Congo - Kinshasa\n-LocaleNames\/pt\/CF=Rep\\u00fablica Centro-Africana\n-LocaleNames\/pt\/CH=Su\\u00ed\\u00e7a\n-LocaleNames\/pt\/CI=Costa do Marfim\n-LocaleNames\/pt\/CK=Ilhas Cook\n-LocaleNames\/pt\/CM=Camar\\u00f5es\n-LocaleNames\/pt\/CO=Col\\u00f4mbia\n-LocaleNames\/pt\/CV=Cabo Verde\n-LocaleNames\/pt\/CX=Ilha Christmas\n-LocaleNames\/pt\/CY=Chipre\n-LocaleNames\/pt\/CZ=Tch\\u00e9quia\n-LocaleNames\/pt\/DE=Alemanha\n-LocaleNames\/pt\/DJ=Djibuti\n-LocaleNames\/pt\/DK=Dinamarca\n-LocaleNames\/pt\/DO=Rep\\u00fablica Dominicana\n-LocaleNames\/pt\/DZ=Arg\\u00e9lia\n-LocaleNames\/pt\/EC=Equador\n-LocaleNames\/pt\/EE=Est\\u00f4nia\n-LocaleNames\/pt\/EG=Egito\n-LocaleNames\/pt\/EH=Saara Ocidental\n-LocaleNames\/pt\/ER=Eritreia\n-LocaleNames\/pt\/ES=Espanha\n-LocaleNames\/pt\/ET=Eti\\u00f3pia\n-LocaleNames\/pt\/FI=Finl\\u00e2ndia\n-LocaleNames\/pt\/FK=Ilhas Malvinas\n-LocaleNames\/pt\/FM=Micron\\u00e9sia\n-LocaleNames\/pt\/FO=Ilhas Faro\\u00e9\n-LocaleNames\/pt\/FR=Fran\\u00e7a\n-LocaleNames\/pt\/GA=Gab\\u00e3o\n-LocaleNames\/pt\/GB=Reino Unido\n-LocaleNames\/pt\/GD=Granada\n-LocaleNames\/pt\/GE=Ge\\u00f3rgia\n-LocaleNames\/pt\/GF=Guiana Francesa\n-LocaleNames\/pt\/GH=Gana\n-LocaleNames\/pt\/GL=Groenl\\u00e2ndia\n-LocaleNames\/pt\/GM=G\\u00e2mbia\n-LocaleNames\/pt\/GN=Guin\\u00e9\n-LocaleNames\/pt\/GP=Guadalupe\n-LocaleNames\/pt\/GQ=Guin\\u00e9 Equatorial\n-LocaleNames\/pt\/GR=Gr\\u00e9cia\n-LocaleNames\/pt\/GS=Ilhas Ge\\u00f3rgia do Sul e Sandwich do Sul\n-LocaleNames\/pt\/GW=Guin\\u00e9-Bissau\n-LocaleNames\/pt\/GY=Guiana\n-LocaleNames\/pt\/HK=Hong Kong, RAE da China\n-LocaleNames\/pt\/HM=Ilhas Heard e McDonald\n-LocaleNames\/pt\/HR=Cro\\u00e1cia\n-LocaleNames\/pt\/HU=Hungria\n-LocaleNames\/pt\/ID=Indon\\u00e9sia\n-LocaleNames\/pt\/IE=Irlanda\n-LocaleNames\/pt\/IN=\\u00cdndia\n-LocaleNames\/pt\/IO=Territ\\u00f3rio Brit\\u00e2nico do Oceano \\u00cdndico\n-LocaleNames\/pt\/IQ=Iraque\n-LocaleNames\/pt\/IR=Ir\\u00e3\n-LocaleNames\/pt\/IS=Isl\\u00e2ndia\n-LocaleNames\/pt\/IT=It\\u00e1lia\n-LocaleNames\/pt\/JO=Jord\\u00e2nia\n-LocaleNames\/pt\/JP=Jap\\u00e3o\n-LocaleNames\/pt\/KE=Qu\\u00eania\n-LocaleNames\/pt\/KG=Quirguist\\u00e3o\n-LocaleNames\/pt\/KH=Camboja\n-LocaleNames\/pt\/KI=Quiribati\n-LocaleNames\/pt\/KM=Comores\n-LocaleNames\/pt\/KN=S\\u00e3o Crist\\u00f3v\\u00e3o e N\\u00e9vis\n-LocaleNames\/pt\/KP=Coreia do Norte\n-LocaleNames\/pt\/KR=Coreia do Sul\n-LocaleNames\/pt\/KY=Ilhas Cayman\n-LocaleNames\/pt\/KZ=Cazaquist\\u00e3o\n-LocaleNames\/pt\/LA=Laos\n-LocaleNames\/pt\/LB=L\\u00edbano\n-LocaleNames\/pt\/LC=Santa L\\u00facia\n-LocaleNames\/pt\/LR=Lib\\u00e9ria\n-LocaleNames\/pt\/LS=Lesoto\n-LocaleNames\/pt\/LT=Litu\\u00e2nia\n-LocaleNames\/pt\/LU=Luxemburgo\n-LocaleNames\/pt\/LV=Let\\u00f4nia\n-LocaleNames\/pt\/LY=L\\u00edbia\n-LocaleNames\/pt\/MA=Marrocos\n-LocaleNames\/pt\/MC=M\\u00f4naco\n-LocaleNames\/pt\/MD=Mold\\u00e1via\n-LocaleNames\/pt\/MH=Ilhas Marshall\n-LocaleNames\/pt\/MK=Maced\\u00f4nia do Norte\n-LocaleNames\/pt\/MM=Mianmar (Birm\\u00e2nia)\n-LocaleNames\/pt\/MN=Mong\\u00f3lia\n-LocaleNames\/pt\/MO=Macau, RAE da China\n-LocaleNames\/pt\/MP=Ilhas Marianas do Norte\n-LocaleNames\/pt\/MQ=Martinica\n-LocaleNames\/pt\/MR=Maurit\\u00e2nia\n-LocaleNames\/pt\/MU=Maur\\u00edcio\n-LocaleNames\/pt\/MV=Maldivas\n-LocaleNames\/pt\/MX=M\\u00e9xico\n-LocaleNames\/pt\/MY=Mal\\u00e1sia\n-LocaleNames\/pt\/MZ=Mo\\u00e7ambique\n-LocaleNames\/pt\/NA=Nam\\u00edbia\n-LocaleNames\/pt\/NC=Nova Caled\\u00f4nia\n-LocaleNames\/pt\/NE=N\\u00edger\n-LocaleNames\/pt\/NF=Ilha Norfolk\n-LocaleNames\/pt\/NG=Nig\\u00e9ria\n-LocaleNames\/pt\/NI=Nicar\\u00e1gua\n-LocaleNames\/pt\/NL=Pa\\u00edses Baixos\n-LocaleNames\/pt\/NO=Noruega\n-LocaleNames\/pt\/NZ=Nova Zel\\u00e2ndia\n-LocaleNames\/pt\/OM=Om\\u00e3\n-LocaleNames\/pt\/PA=Panam\\u00e1\n-LocaleNames\/pt\/PF=Polin\\u00e9sia Francesa\n-LocaleNames\/pt\/PG=Papua-Nova Guin\\u00e9\n-LocaleNames\/pt\/PH=Filipinas\n-LocaleNames\/pt\/PK=Paquist\\u00e3o\n-LocaleNames\/pt\/PL=Pol\\u00f4nia\n-LocaleNames\/pt\/PM=S\\u00e3o Pedro e Miquel\\u00e3o\n-LocaleNames\/pt\/PR=Porto Rico\n-LocaleNames\/pt\/PS=Territ\\u00f3rios palestinos\n-LocaleNames\/pt\/PY=Paraguai\n-LocaleNames\/pt\/QA=Catar\n-LocaleNames\/pt\/RE=Reuni\\u00e3o\n-LocaleNames\/pt\/RO=Rom\\u00eania\n-LocaleNames\/pt\/RU=R\\u00fassia\n-LocaleNames\/pt\/RW=Ruanda\n-LocaleNames\/pt\/SA=Ar\\u00e1bia Saudita\n-LocaleNames\/pt\/SB=Ilhas Salom\\u00e3o\n-LocaleNames\/pt\/SD=Sud\\u00e3o\n-LocaleNames\/pt\/SE=Su\\u00e9cia\n-LocaleNames\/pt\/SG=Singapura\n-LocaleNames\/pt\/SH=Santa Helena\n-LocaleNames\/pt\/SI=Eslov\\u00eania\n-LocaleNames\/pt\/SJ=Svalbard e Jan Mayen\n-LocaleNames\/pt\/SK=Eslov\\u00e1quia\n-LocaleNames\/pt\/SL=Serra Leoa\n-LocaleNames\/pt\/SO=Som\\u00e1lia\n-LocaleNames\/pt\/ST=S\\u00e3o Tom\\u00e9 e Pr\\u00edncipe\n-LocaleNames\/pt\/SY=S\\u00edria\n-LocaleNames\/pt\/TC=Ilhas Turcas e Caicos\n-LocaleNames\/pt\/TD=Chade\n-LocaleNames\/pt\/TF=Territ\\u00f3rios Franceses do Sul\n-LocaleNames\/pt\/TH=Tail\\u00e2ndia\n-LocaleNames\/pt\/TJ=Tadjiquist\\u00e3o\n-LocaleNames\/pt\/TL=Timor-Leste\n-LocaleNames\/pt\/TM=Turcomenist\\u00e3o\n-LocaleNames\/pt\/TN=Tun\\u00edsia\n-LocaleNames\/pt\/TR=Turquia\n-LocaleNames\/pt\/TT=Trinidad e Tobago\n-LocaleNames\/pt\/TZ=Tanz\\u00e2nia\n-LocaleNames\/pt\/UA=Ucr\\u00e2nia\n-LocaleNames\/pt\/UM=Ilhas Menores Distantes dos EUA\n-LocaleNames\/pt\/US=Estados Unidos\n-LocaleNames\/pt\/UY=Uruguai\n-LocaleNames\/pt\/UZ=Uzbequist\\u00e3o\n-LocaleNames\/pt\/VA=Cidade do Vaticano\n-LocaleNames\/pt\/VC=S\\u00e3o Vicente e Granadinas\n-LocaleNames\/pt\/VG=Ilhas Virgens Brit\\u00e2nicas\n-LocaleNames\/pt\/VI=Ilhas Virgens Americanas\n-LocaleNames\/pt\/VN=Vietn\\u00e3\n-LocaleNames\/pt\/WF=Wallis e Futuna\n-LocaleNames\/pt\/YE=I\\u00eamen\n-LocaleNames\/pt\/ZA=\\u00c1frica do Sul\n-LocaleNames\/pt\/ZM=Z\\u00e2mbia\n-LocaleNames\/pt\/ZW=Zimb\\u00e1bue\n-# pt_PT\n-LocaleNames\/pt_PT\/cs=checo\n-LocaleNames\/pt_PT\/et=est\\u00f3nio\n-LocaleNames\/pt_PT\/pl=polaco\n-LocaleNames\/pt_PT\/sl=esloveno\n-LocaleNames\/pt_PT\/AE=Emirados \\u00c1rabes Unidos\n-LocaleNames\/pt_PT\/AM=Arm\\u00e9nia\n-LocaleNames\/pt_PT\/AQ=Ant\\u00e1rtida\n-LocaleNames\/pt_PT\/AZ=Azerbaij\\u00e3o\n-LocaleNames\/pt_PT\/BA=B\\u00f3snia e Herzegovina\n-LocaleNames\/pt_PT\/BJ=Benim\n-LocaleNames\/pt_PT\/BY=Bielorr\\u00fassia\n-LocaleNames\/pt_PT\/CM=Camar\\u00f5es\n-LocaleNames\/pt_PT\/CX=Ilha do Natal\n-LocaleNames\/pt_PT\/CZ=Ch\\u00e9quia\n-LocaleNames\/pt_PT\/EE=Est\\u00f3nia\n-LocaleNames\/pt_PT\/EG=Egito\n-LocaleNames\/pt_PT\/EH=Sara Ocidental\n-LocaleNames\/pt_PT\/ER=Eritreia\n-LocaleNames\/pt_PT\/FK=Ilhas Falkland\n-LocaleNames\/pt_PT\/GL=Gronel\\u00e2ndia\n-LocaleNames\/pt_PT\/GS=Ilhas Ge\\u00f3rgia do Sul e Sandwich do Sul\n-LocaleNames\/pt_PT\/GW=Guin\\u00e9-Bissau\n-LocaleNames\/pt_PT\/HK=Hong Kong, RAE da China\n-LocaleNames\/pt_PT\/KE=Qu\\u00e9nia\n-LocaleNames\/pt_PT\/KG=Quirguist\\u00e3o\n-LocaleNames\/pt_PT\/KN=S\\u00e3o Crist\\u00f3v\\u00e3o e Neves\n-LocaleNames\/pt_PT\/KP=Coreia do Norte\n-LocaleNames\/pt_PT\/KR=Coreia do Sul\n-LocaleNames\/pt_PT\/KY=Ilhas Caim\\u00e3o\n-LocaleNames\/pt_PT\/KZ=Cazaquist\\u00e3o\n-LocaleNames\/pt_PT\/LA=Laos\n-LocaleNames\/pt_PT\/LV=Let\\u00f3nia\n-LocaleNames\/pt_PT\/MC=M\\u00f3naco\n-LocaleNames\/pt_PT\/MD=Mold\\u00e1via\n-LocaleNames\/pt_PT\/MG=Madag\\u00e1scar\n-LocaleNames\/pt_PT\/MK=Maced\\u00f3nia do Norte\n-LocaleNames\/pt_PT\/MO=Macau, RAE da China\n-LocaleNames\/pt_PT\/MP=Ilhas Marianas do Norte\n-LocaleNames\/pt_PT\/MU=Maur\\u00edcia\n-LocaleNames\/pt_PT\/NC=Nova Caled\\u00f3nia\n-LocaleNames\/pt_PT\/PG=Papua-Nova Guin\\u00e9\n-LocaleNames\/pt_PT\/PL=Pol\\u00f3nia\n-LocaleNames\/pt_PT\/PS=Territ\\u00f3rios palestinianos\n-LocaleNames\/pt_PT\/RE=Reuni\\u00e3o\n-LocaleNames\/pt_PT\/RO=Rom\\u00e9nia\n-LocaleNames\/pt_PT\/SC=Seicheles\n-LocaleNames\/pt_PT\/SG=Singapura\n-LocaleNames\/pt_PT\/SI=Eslov\\u00e9nia\n-LocaleNames\/pt_PT\/SM=S\\u00e3o Marinho\n-LocaleNames\/pt_PT\/TC=Ilhas Turcas e Caicos\n-LocaleNames\/pt_PT\/TD=Chade\n-LocaleNames\/pt_PT\/TF=Territ\\u00f3rios Austrais Franceses\n-LocaleNames\/pt_PT\/TJ=Tajiquist\\u00e3o\n-LocaleNames\/pt_PT\/TM=Turquemenist\\u00e3o\n-LocaleNames\/pt_PT\/UM=Ilhas Menores Afastadas dos EUA\n-LocaleNames\/pt_PT\/UZ=Usbequist\\u00e3o\n-LocaleNames\/pt_PT\/VA=Cidade do Vaticano\n-LocaleNames\/pt_PT\/VC=S\\u00e3o Vicente e Granadinas\n-LocaleNames\/pt_PT\/VG=Ilhas Virgens Brit\\u00e2nicas\n-LocaleNames\/pt_PT\/VI=Ilhas Virgens dos EUA\n-LocaleNames\/pt_PT\/VN=Vietname\n-LocaleNames\/pt_PT\/YE=I\\u00e9men\n-#bug 6290792 Gaelic support\n-LocaleNames\/ga\/ab=Abc\\u00e1isis\n-LocaleNames\/ga\/ae=Aiv\\u00e9istis\n-LocaleNames\/ga\/af=Afrac\\u00e1inis\n-LocaleNames\/ga\/ar=Araibis\n-LocaleNames\/ga\/as=Asaimis\n-LocaleNames\/ga\/az=Asarbaise\\u00e1inis\n-LocaleNames\/ga\/ba=Baisc\\u00edris\n-LocaleNames\/ga\/be=Bealar\\u00faisis\n-LocaleNames\/ga\/bg=Bulg\\u00e1iris\n-LocaleNames\/ga\/bn=Beang\\u00e1ilis\n-LocaleNames\/ga\/bo=Tib\\u00e9idis\n-LocaleNames\/ga\/br=Briot\\u00e1inis\n-LocaleNames\/ga\/bs=Boisnis\n-LocaleNames\/ga\/ca=Catal\\u00f3inis\n-LocaleNames\/ga\/ce=Seisnis\n-LocaleNames\/ga\/co=Corsaicis\n-LocaleNames\/ga\/cr=Cra\\u00eds\n-LocaleNames\/ga\/cs=Seicis\n-LocaleNames\/ga\/cu=Slavais na hEaglaise\n-LocaleNames\/ga\/cv=Suvaisis\n-LocaleNames\/ga\/cy=Breatnais\n-LocaleNames\/ga\/da=Danmhairgis\n-LocaleNames\/ga\/de=Gearm\\u00e1inis\n-LocaleNames\/ga\/el=Gr\\u00e9igis\n-LocaleNames\/ga\/en=B\\u00e9arla\n-LocaleNames\/ga\/es=Sp\\u00e1innis\n-LocaleNames\/ga\/et=East\\u00f3inis\n-LocaleNames\/ga\/eu=Bascais\n-LocaleNames\/ga\/fa=Peirsis\n-LocaleNames\/ga\/fi=Fionlainnis\n-LocaleNames\/ga\/fj=Fidsis\n-LocaleNames\/ga\/fo=Far\\u00f3is\n-LocaleNames\/ga\/fr=Fraincis\n-LocaleNames\/ga\/fy=Freaslainnis Iartharach\n-LocaleNames\/ga\/ga=Gaeilge\n-LocaleNames\/ga\/gd=Gaeilge na hAlban\n-LocaleNames\/ga\/gu=G\\u00faisear\\u00e1itis\n-LocaleNames\/ga\/gv=Manainnis\n-LocaleNames\/ga\/he=Eabhrais\n-LocaleNames\/ga\/hi=Hiond\\u00fais\n-LocaleNames\/ga\/hr=Cr\\u00f3itis\n-LocaleNames\/ga\/hu=Ung\\u00e1iris\n-LocaleNames\/ga\/hy=Airm\\u00e9inis\n-LocaleNames\/ga\/id=Indin\\u00e9isis\n-LocaleNames\/ga\/in=Indin\\u00e9isis\n-LocaleNames\/ga\/is=\\u00cdoslainnis\n-LocaleNames\/ga\/it=Iod\\u00e1ilis\n-LocaleNames\/ga\/iu=Ion\\u00faitis\n-LocaleNames\/ga\/iw=Eabhrais\n-LocaleNames\/ga\/ja=Seap\\u00e1inis\n-LocaleNames\/ga\/ji=Gi\\u00fadais\n-LocaleNames\/ga\/jv=I\\u00e1ivis\n-LocaleNames\/ga\/ka=Seoirsis\n-LocaleNames\/ga\/kk=Casaicis\n-LocaleNames\/ga\/kn=Cannadais\n-LocaleNames\/ga\/ko=C\\u00f3ir\\u00e9is\n-LocaleNames\/ga\/ks=Caism\\u00edris\n-LocaleNames\/ga\/kw=Coirnis\n-LocaleNames\/ga\/ky=Cirgisis\n-LocaleNames\/ga\/la=Laidin\n-LocaleNames\/ga\/lb=Lucsambuirgis\n-LocaleNames\/ga\/lo=Laoisis\n-LocaleNames\/ga\/lt=Liotu\\u00e1inis\n-LocaleNames\/ga\/lv=Laitvis\n-LocaleNames\/ga\/mg=Malag\\u00e1isis\n-LocaleNames\/ga\/mi=Maorais\n-LocaleNames\/ga\/mk=Macad\\u00f3inis\n-LocaleNames\/ga\/ml=Mail\\u00e9alaimis\n-LocaleNames\/ga\/mn=Mong\\u00f3ilis\n-LocaleNames\/ga\/mo=Mold\\u00e1ivis\n-LocaleNames\/ga\/mr=Maraitis\n-LocaleNames\/ga\/mt=M\\u00e1ltais\n-LocaleNames\/ga\/my=Burmais\n-LocaleNames\/ga\/na=N\\u00e1r\\u00fais\n-LocaleNames\/ga\/nb=Bocm\\u00e1l\n-LocaleNames\/ga\/ne=Neipeailis\n-LocaleNames\/ga\/nl=Ollainnis\n-LocaleNames\/ga\/nn=Nua-Ioruais\n-LocaleNames\/ga\/no=Ioruais\n-LocaleNames\/ga\/nv=Navach\\u00f3is\n-LocaleNames\/ga\/oc=Ocsat\\u00e1inis\n-LocaleNames\/ga\/os=Ois\\u00e9itis\n-LocaleNames\/ga\/pa=Puinse\\u00e1ibis\n-LocaleNames\/ga\/pl=Polainnis\n-LocaleNames\/ga\/ps=Paistis\n-LocaleNames\/ga\/pt=Portaing\\u00e9ilis\n-LocaleNames\/ga\/qu=Ceatsuais\n-LocaleNames\/ga\/ro=R\\u00f3m\\u00e1inis\n-LocaleNames\/ga\/ru=R\\u00faisis\n-LocaleNames\/ga\/sa=Sanscrait\n-LocaleNames\/ga\/sc=Saird\\u00ednis\n-LocaleNames\/ga\/sd=Sindis\n-LocaleNames\/ga\/se=S\\u00e1imis an Tuaiscirt\n-LocaleNames\/ga\/sk=Sl\\u00f3vaicis\n-LocaleNames\/ga\/sl=Sl\\u00f3iv\\u00e9inis\n-LocaleNames\/ga\/sm=Sam\\u00f3is\n-LocaleNames\/ga\/so=Som\\u00e1ilis\n-LocaleNames\/ga\/sq=Alb\\u00e1inis\n-LocaleNames\/ga\/sr=Seirbis\n-LocaleNames\/ga\/sv=Sualainnis\n-LocaleNames\/ga\/sw=Svaha\\u00edlis\n-LocaleNames\/ga\/ta=Tamailis\n-LocaleNames\/ga\/th=T\\u00e9alainnis\n-LocaleNames\/ga\/tl=Tag\\u00e1laigis\n-LocaleNames\/ga\/tr=Tuircis\n-LocaleNames\/ga\/tt=Tatairis\n-LocaleNames\/ga\/ty=Taih\\u00edtis\n-LocaleNames\/ga\/uk=\\u00dacr\\u00e1inis\n-LocaleNames\/ga\/ur=Urd\\u00fais\n-LocaleNames\/ga\/uz=\\u00daisb\\u00e9iceast\\u00e1inis\n-LocaleNames\/ga\/vi=V\\u00edtneaimis\n-LocaleNames\/ga\/wa=Vall\\u00fanais\n-LocaleNames\/ga\/yi=Gi\\u00fadais\n-LocaleNames\/ga\/zh=S\\u00ednis\n-LocaleNames\/ga\/zu=S\\u00fal\\u00fais\n-LocaleNames\/ga\/AD=And\\u00f3ra\n-LocaleNames\/ga\/AE=Aontas na n\\u00c9im\\u00edr\\u00edochta\\u00ed Arabacha\n-LocaleNames\/ga\/AF=an Afganast\\u00e1in\n-LocaleNames\/ga\/AG=Antigua agus Barb\\u00fada\n-LocaleNames\/ga\/AL=an Alb\\u00e1in\n-LocaleNames\/ga\/AM=an Airm\\u00e9in\n-LocaleNames\/ga\/AN=Antill\\u00ed na h\\u00cdsilt\\u00edre\n-LocaleNames\/ga\/AO=Ang\\u00f3la\n-LocaleNames\/ga\/AQ=Antartaice\n-LocaleNames\/ga\/AR=an Airgint\\u00edn\n-LocaleNames\/ga\/AS=Sam\\u00f3 Mheirice\\u00e1\n-LocaleNames\/ga\/AT=an Ostair\n-LocaleNames\/ga\/AU=an Astr\\u00e1il\n-LocaleNames\/ga\/AZ=an Asarbaise\\u00e1in\n-LocaleNames\/ga\/BA=an Bhoisnia agus an Heirseagaiv\\u00e9in\n-LocaleNames\/ga\/BB=Barbad\\u00f3s\n-LocaleNames\/ga\/BD=an Bhanglaid\\u00e9is\n-LocaleNames\/ga\/BE=an Bheilg\n-LocaleNames\/ga\/BF=Buirc\\u00edne Fas\\u00f3\n-LocaleNames\/ga\/BG=an Bhulg\\u00e1ir\n-LocaleNames\/ga\/BH=Bair\\u00e9in\n-LocaleNames\/ga\/BI=an Bhur\\u00fain\n-LocaleNames\/ga\/BJ=Beinin\n-LocaleNames\/ga\/BM=Beirmi\\u00fada\n-LocaleNames\/ga\/BN=Br\\u00fain\\u00e9\n-LocaleNames\/ga\/BO=an Bholaiv\n-LocaleNames\/ga\/BR=an Bhrasa\\u00edl\n-LocaleNames\/ga\/BS=na Bah\\u00e1ma\\u00ed\n-LocaleNames\/ga\/BT=an Bh\\u00fat\\u00e1in\n-LocaleNames\/ga\/BV=Oile\\u00e1n Bouvet\n-LocaleNames\/ga\/BW=an Bhotsu\\u00e1in\n-LocaleNames\/ga\/BY=an Bhealar\\u00fais\n-LocaleNames\/ga\/BZ=an Bheil\\u00eds\n-LocaleNames\/ga\/CA=Ceanada\n-LocaleNames\/ga\/CC=Oile\\u00e1in Cocos (Keeling)\n-LocaleNames\/ga\/CD=Poblacht Dhaonlathach an Chong\\u00f3\n-LocaleNames\/ga\/CF=Poblacht na hAfraice L\\u00e1ir\n-LocaleNames\/ga\/CG=Cong\\u00f3-Brazzaville\n-LocaleNames\/ga\/CH=an Eilv\\u00e9is\n-LocaleNames\/ga\/CI=an C\\u00f3sta Eabhair\n-LocaleNames\/ga\/CK=Oile\\u00e1in Cook\n-LocaleNames\/ga\/CL=an tSile\n-LocaleNames\/ga\/CM=Camar\\u00fan\n-LocaleNames\/ga\/CN=an tS\\u00edn\n-LocaleNames\/ga\/CO=an Chol\\u00f3im\n-LocaleNames\/ga\/CR=C\\u00f3sta R\\u00edce\n-LocaleNames\/ga\/CU=C\\u00faba\n-LocaleNames\/ga\/CV=Rinn Verde\n-LocaleNames\/ga\/CX=Oile\\u00e1n na Nollag\n-LocaleNames\/ga\/CY=an Chipir\n-LocaleNames\/ga\/CZ=an tSeicia\n-LocaleNames\/ga\/DE=an Ghearm\\u00e1in\n-LocaleNames\/ga\/DK=an Danmhairg\n-LocaleNames\/ga\/DM=Doiminice\n-LocaleNames\/ga\/DO=an Phoblacht Dhoiminiceach\n-LocaleNames\/ga\/DZ=an Ailg\\u00e9ir\n-LocaleNames\/ga\/EC=Eacuad\\u00f3r\n-LocaleNames\/ga\/EE=an East\\u00f3in\n-LocaleNames\/ga\/EG=an \\u00c9igipt\n-LocaleNames\/ga\/EH=an Sah\\u00e1ra Thiar\n-LocaleNames\/ga\/ES=an Sp\\u00e1inn\n-LocaleNames\/ga\/ET=an Aet\\u00f3ip\n-LocaleNames\/ga\/FI=an Fhionlainn\n-LocaleNames\/ga\/FJ=Fids\\u00ed\n-LocaleNames\/ga\/FK=Oile\\u00e1in Fh\\u00e1clainne\n-LocaleNames\/ga\/FM=an Mhicrin\\u00e9is\n-LocaleNames\/ga\/FO=Oile\\u00e1in Fhar\\u00f3\n-LocaleNames\/ga\/FR=an Fhrainc\n-LocaleNames\/ga\/GA=an Ghab\\u00fain\n-LocaleNames\/ga\/GB=an R\\u00edocht Aontaithe\n-LocaleNames\/ga\/GE=an tSeoirsia\n-LocaleNames\/ga\/GF=Gu\\u00e1in na Fraince\n-LocaleNames\/ga\/GH=G\\u00e1na\n-LocaleNames\/ga\/GI=Giobr\\u00e1ltar\n-LocaleNames\/ga\/GL=an Ghraonlainn\n-LocaleNames\/ga\/GM=an Ghaimbia\n-LocaleNames\/ga\/GN=an Ghuine\n-LocaleNames\/ga\/GP=Guadal\\u00faip\n-LocaleNames\/ga\/GQ=an Ghuine Mhe\\u00e1nchiorclach\n-LocaleNames\/ga\/GR=an Ghr\\u00e9ig\n-LocaleNames\/ga\/GS=an tSeoirsia Theas agus Oile\\u00e1in Sandwich Theas\n-LocaleNames\/ga\/GT=Guatamala\n-LocaleNames\/ga\/GW=Guine Bissau\n-LocaleNames\/ga\/GY=an Ghu\\u00e1in\n-LocaleNames\/ga\/HM=Oile\\u00e1n Heard agus Oile\\u00e1in McDonald\n-LocaleNames\/ga\/HN=Hond\\u00faras\n-LocaleNames\/ga\/HR=an Chr\\u00f3it\n-LocaleNames\/ga\/HT=H\\u00e1\\u00edt\\u00ed\n-LocaleNames\/ga\/HU=an Ung\\u00e1ir\n-LocaleNames\/ga\/ID=an Indin\\u00e9is\n-LocaleNames\/ga\/IE=\\u00c9ire\n-LocaleNames\/ga\/IL=Iosrael\n-LocaleNames\/ga\/IN=an India\n-LocaleNames\/ga\/IO=Cr\\u00edoch Aig\\u00e9an Indiach na Breataine\n-LocaleNames\/ga\/IQ=an Iar\\u00e1ic\n-LocaleNames\/ga\/IR=an Iar\\u00e1in\n-LocaleNames\/ga\/IS=an \\u00cdoslainn\n-LocaleNames\/ga\/IT=an Iod\\u00e1il\n-LocaleNames\/ga\/JM=Iam\\u00e1ice\n-LocaleNames\/ga\/JO=an Iord\\u00e1in\n-LocaleNames\/ga\/JP=an tSeap\\u00e1in\n-LocaleNames\/ga\/KE=an Ch\\u00e9inia\n-LocaleNames\/ga\/KG=an Chirgeast\\u00e1in\n-LocaleNames\/ga\/KH=an Chamb\\u00f3id\n-LocaleNames\/ga\/KI=Ciribeas\n-LocaleNames\/ga\/KM=Oile\\u00e1in Chom\\u00f3ra\n-LocaleNames\/ga\/KN=San Cr\\u00edost\\u00f3ir-Nimheas\n-LocaleNames\/ga\/KP=an Ch\\u00f3ir\\u00e9 Thuaidh\n-LocaleNames\/ga\/KR=an Ch\\u00f3ir\\u00e9 Theas\n-LocaleNames\/ga\/KW=Cu\\u00e1it\n-LocaleNames\/ga\/KY=Oile\\u00e1in Cayman\n-LocaleNames\/ga\/KZ=an Chasacst\\u00e1in\n-LocaleNames\/ga\/LB=an Liob\\u00e1in\n-LocaleNames\/ga\/LI=Lichtinst\\u00e9in\n-LocaleNames\/ga\/LK=Sr\\u00ed Lanca\n-LocaleNames\/ga\/LR=an Lib\\u00e9ir\n-LocaleNames\/ga\/LS=Leos\\u00f3ta\n-LocaleNames\/ga\/LT=an Liotu\\u00e1in\n-LocaleNames\/ga\/LU=Lucsamburg\n-LocaleNames\/ga\/LV=an Laitvia\n-LocaleNames\/ga\/LY=an Libia\n-LocaleNames\/ga\/MA=Marac\\u00f3\n-LocaleNames\/ga\/MC=Monac\\u00f3\n-LocaleNames\/ga\/MD=an Mhold\\u00f3iv\n-LocaleNames\/ga\/MH=Oile\\u00e1in Marshall\n-LocaleNames\/ga\/MK=an Mhacad\\u00f3in Thuaidh\n-LocaleNames\/ga\/ML=Mail\\u00ed\n-LocaleNames\/ga\/MM=Maenmar (Burma)\n-LocaleNames\/ga\/MN=an Mhong\\u00f3il\n-LocaleNames\/ga\/MP=na hOile\\u00e1in Mh\\u00e1irianacha Thuaidh\n-LocaleNames\/ga\/MR=an Mh\\u00e1rat\\u00e1in\n-LocaleNames\/ga\/MS=Montsarat\n-LocaleNames\/ga\/MT=M\\u00e1lta\n-LocaleNames\/ga\/MU=Oile\\u00e1n Mhuir\\u00eds\n-LocaleNames\/ga\/MV=Oile\\u00e1in Mhaild\\u00edve\n-LocaleNames\/ga\/MW=an Mhal\\u00e1iv\n-LocaleNames\/ga\/MX=Meicsiceo\n-LocaleNames\/ga\/MY=an Mhalaeisia\n-LocaleNames\/ga\/MZ=M\\u00f3saimb\\u00edc\n-LocaleNames\/ga\/NA=an Namaib\n-LocaleNames\/ga\/NC=an Nua-Chalad\\u00f3in\n-LocaleNames\/ga\/NE=an N\\u00edgir\n-LocaleNames\/ga\/NF=Oile\\u00e1n Norfolk\n-LocaleNames\/ga\/NG=an Nig\\u00e9ir\n-LocaleNames\/ga\/NI=Nicearagua\n-LocaleNames\/ga\/NL=an \\u00cdsilt\\u00edr\n-LocaleNames\/ga\/NO=an Iorua\n-LocaleNames\/ga\/NP=Neipeal\n-LocaleNames\/ga\/NR=N\\u00e1r\\u00fa\n-LocaleNames\/ga\/NZ=an Nua-Sh\\u00e9alainn\n-LocaleNames\/ga\/PE=Peiri\\u00fa\n-LocaleNames\/ga\/PF=Polain\\u00e9is na Fraince\n-LocaleNames\/ga\/PG=Nua-Ghuine Phapua\n-LocaleNames\/ga\/PH=na hOile\\u00e1in Fhilip\\u00edneacha\n-LocaleNames\/ga\/PK=an Phacast\\u00e1in\n-LocaleNames\/ga\/PL=an Pholainn\n-LocaleNames\/ga\/PM=San Pierre agus Miquelon\n-LocaleNames\/ga\/PR=P\\u00f3rt\\u00f3 R\\u00edce\n-LocaleNames\/ga\/PS=na Cr\\u00edocha Palaist\\u00edneacha\n-LocaleNames\/ga\/PT=an Phortaing\\u00e9il\n-LocaleNames\/ga\/PY=Paragua\n-LocaleNames\/ga\/QA=Catar\n-LocaleNames\/ga\/RE=La R\\u00e9union\n-LocaleNames\/ga\/RO=an R\\u00f3m\\u00e1in\n-LocaleNames\/ga\/RU=an R\\u00fais\n-LocaleNames\/ga\/RW=Ruanda\n-LocaleNames\/ga\/SA=an Araib Sh\\u00e1dach\n-LocaleNames\/ga\/SB=Oile\\u00e1in Sholaimh\n-LocaleNames\/ga\/SC=na S\\u00e9is\\u00e9il\n-LocaleNames\/ga\/SD=an tS\\u00fad\\u00e1in\n-LocaleNames\/ga\/SE=an tSualainn\n-LocaleNames\/ga\/SG=Singeap\\u00f3r\n-LocaleNames\/ga\/SH=San H\\u00e9ilin\n-LocaleNames\/ga\/SI=an tSl\\u00f3iv\\u00e9in\n-LocaleNames\/ga\/SJ=Svalbard agus Jan Mayen\n-LocaleNames\/ga\/SK=an tSl\\u00f3vaic\n-LocaleNames\/ga\/SL=Siarra Leon\n-LocaleNames\/ga\/SM=San Mair\\u00edne\n-LocaleNames\/ga\/SN=an tSeineag\\u00e1il\n-LocaleNames\/ga\/SO=an tSom\\u00e1il\n-LocaleNames\/ga\/SR=Suranam\n-LocaleNames\/ga\/ST=S\\u00e3o Tom\\u00e9 agus Pr\\u00edncipe\n-LocaleNames\/ga\/SV=an tSalvad\\u00f3ir\n-LocaleNames\/ga\/SY=an tSiria\n-LocaleNames\/ga\/TC=Oile\\u00e1in na dTurcach agus Caicos\n-LocaleNames\/ga\/TD=Sead\n-LocaleNames\/ga\/TF=Cr\\u00edocha Francacha Dheisceart an Domhain\n-LocaleNames\/ga\/TG=T\\u00f3ga\n-LocaleNames\/ga\/TH=an T\\u00e9alainn\n-LocaleNames\/ga\/TJ=an T\\u00e1ids\\u00edceast\\u00e1in\n-LocaleNames\/ga\/TK=T\\u00f3cal\\u00e1\n-LocaleNames\/ga\/TL=T\\u00edom\\u00f3r Thoir\n-LocaleNames\/ga\/TM=an Tuircm\\u00e9anast\\u00e1in\n-LocaleNames\/ga\/TN=an T\\u00fain\\u00e9is\n-LocaleNames\/ga\/TR=an Tuirc\n-LocaleNames\/ga\/TT=Oile\\u00e1n na Tr\\u00edon\\u00f3ide agus Tob\\u00e1ga\n-LocaleNames\/ga\/TV=T\\u00faval\\u00fa\n-LocaleNames\/ga\/TW=an T\\u00e9av\\u00e1in\n-LocaleNames\/ga\/TZ=an Tans\\u00e1in\n-LocaleNames\/ga\/UA=an \\u00dacr\\u00e1in\n-LocaleNames\/ga\/UM=Oile\\u00e1in Imeallacha S.A.M.\n-LocaleNames\/ga\/US=St\\u00e1it Aontaithe Mheirice\\u00e1\n-LocaleNames\/ga\/UY=Uragua\n-LocaleNames\/ga\/UZ=an \\u00daisb\\u00e9iceast\\u00e1in\n-LocaleNames\/ga\/VA=Cathair na Vatac\\u00e1ine\n-LocaleNames\/ga\/VC=San Uinseann agus na Grean\\u00e1id\\u00edn\\u00ed\n-LocaleNames\/ga\/VE=Veinis\\u00e9ala\n-LocaleNames\/ga\/VG=Oile\\u00e1in Bhriotanacha na Maighdean\n-LocaleNames\/ga\/VI=Oile\\u00e1in Mheirice\\u00e1nacha na Maighdean\n-LocaleNames\/ga\/VN=V\\u00edtneam\n-LocaleNames\/ga\/VU=Vanuat\\u00fa\n-LocaleNames\/ga\/WF=Vail\\u00eds agus Fut\\u00fana\n-LocaleNames\/ga\/WS=Sam\\u00f3\n-LocaleNames\/ga\/YE=\\u00c9imin\n-LocaleNames\/ga\/ZA=an Afraic Theas\n-LocaleNames\/ga\/ZM=an tSaimbia\n-# bug #6277696\n-FormatData\/sr\/MonthNames\/0=\\u0458\\u0430\\u043d\\u0443\\u0430\\u0440\n-FormatData\/sr\/MonthNames\/1=\\u0444\\u0435\\u0431\\u0440\\u0443\\u0430\\u0440\n-FormatData\/sr\/MonthNames\/2=\\u043c\\u0430\\u0440\\u0442\n-FormatData\/sr\/MonthNames\/3=\\u0430\\u043f\\u0440\\u0438\\u043b\n-FormatData\/sr\/MonthNames\/4=\\u043c\\u0430\\u0458\n-FormatData\/sr\/MonthNames\/5=\\u0458\\u0443\\u043d\n-FormatData\/sr\/MonthNames\/6=\\u0458\\u0443\\u043b\n-FormatData\/sr\/MonthNames\/7=\\u0430\\u0432\\u0433\\u0443\\u0441\\u0442\n-FormatData\/sr\/MonthNames\/8=\\u0441\\u0435\\u043f\\u0442\\u0435\\u043c\\u0431\\u0430\\u0440\n-FormatData\/sr\/MonthNames\/9=\\u043e\\u043a\\u0442\\u043e\\u0431\\u0430\\u0440\n-FormatData\/sr\/MonthNames\/10=\\u043d\\u043e\\u0432\\u0435\\u043c\\u0431\\u0430\\u0440\n-FormatData\/sr\/MonthNames\/11=\\u0434\\u0435\\u0446\\u0435\\u043c\\u0431\\u0430\\u0440\n-FormatData\/sr\/MonthAbbreviations\/0=\\u0458\\u0430\\u043d\n-FormatData\/sr\/MonthAbbreviations\/1=\\u0444\\u0435\\u0431\n-FormatData\/sr\/MonthAbbreviations\/2=\\u043c\\u0430\\u0440\n-FormatData\/sr\/MonthAbbreviations\/3=\\u0430\\u043f\\u0440\n-FormatData\/sr\/MonthAbbreviations\/4=\\u043c\\u0430\\u0458\n-FormatData\/sr\/MonthAbbreviations\/5=\\u0458\\u0443\\u043d\n-FormatData\/sr\/MonthAbbreviations\/6=\\u0458\\u0443\\u043b\n-FormatData\/sr\/MonthAbbreviations\/7=\\u0430\\u0432\\u0433\n-FormatData\/sr\/MonthAbbreviations\/8=\\u0441\\u0435\\u043f\n-FormatData\/sr\/MonthAbbreviations\/9=\\u043e\\u043a\\u0442\n-FormatData\/sr\/MonthAbbreviations\/10=\\u043d\\u043e\\u0432\n-FormatData\/sr\/MonthAbbreviations\/11=\\u0434\\u0435\\u0446\n-FormatData\/sr\/DayNames\/0=\\u043d\\u0435\\u0434\\u0435\\u0459\\u0430\n-FormatData\/sr\/DayNames\/1=\\u043f\\u043e\\u043d\\u0435\\u0434\\u0435\\u0459\\u0430\\u043a\n-FormatData\/sr\/DayNames\/2=\\u0443\\u0442\\u043e\\u0440\\u0430\\u043a\n-FormatData\/sr\/DayNames\/3=\\u0441\\u0440\\u0435\\u0434\\u0430\n-FormatData\/sr\/DayNames\/4=\\u0447\\u0435\\u0442\\u0432\\u0440\\u0442\\u0430\\u043a\n-FormatData\/sr\/DayNames\/5=\\u043f\\u0435\\u0442\\u0430\\u043a\n-FormatData\/sr\/DayNames\/6=\\u0441\\u0443\\u0431\\u043e\\u0442\\u0430\n-FormatData\/sr\/DayAbbreviations\/0=\\u043d\\u0435\\u0434\n-FormatData\/sr\/DayAbbreviations\/1=\\u043f\\u043e\\u043d\n-FormatData\/sr\/DayAbbreviations\/2=\\u0443\\u0442\\u043e\n-FormatData\/sr\/DayAbbreviations\/3=\\u0441\\u0440\\u0435\n-FormatData\/sr\/DayAbbreviations\/4=\\u0447\\u0435\\u0442\n-FormatData\/sr\/DayAbbreviations\/5=\\u043f\\u0435\\u0442\n-FormatData\/sr\/DayAbbreviations\/6=\\u0441\\u0443\\u0431\n-FormatData\/sr\/Eras\/0=\\u043f. \\u043d. \\u0435.\n-FormatData\/sr\/Eras\/1=\\u043d. \\u0435\n-FormatData\/sr\/NumberPatterns\/0=#,##0.###\n-FormatData\/sr\/NumberPatterns\/1=\\u00a4 #,##0.00\n-FormatData\/sr\/NumberPatterns\/2=#,##0%\n-FormatData\/sr\/NumberElements\/0=,\n-FormatData\/sr\/NumberElements\/1=.\n-FormatData\/sr\/NumberElements\/2=;\n-FormatData\/sr\/NumberElements\/3=%\n-FormatData\/sr\/NumberElements\/4=0\n-FormatData\/sr\/NumberElements\/5=#\n-FormatData\/sr\/NumberElements\/6=-\n-FormatData\/sr\/NumberElements\/7=E\n-FormatData\/sr\/NumberElements\/8=\\u2030\n-FormatData\/sr\/NumberElements\/9=\\u221e\n-FormatData\/sr\/NumberElements\/10=NaN\n-FormatData\/sr\/TimePatterns\/0=HH.mm.ss z\n-FormatData\/sr\/TimePatterns\/1=HH.mm.ss z\n-FormatData\/sr\/TimePatterns\/2=HH.mm.ss\n-FormatData\/sr\/TimePatterns\/3=HH.mm\n-FormatData\/sr\/DatePatterns\/0=EEEE, dd.MMMM.yyyy.\n-FormatData\/sr\/DatePatterns\/1=dd.MM.yyyy.\n-FormatData\/sr\/DatePatterns\/2=dd.MM.yyyy.\n-FormatData\/sr\/DatePatterns\/3=d.M.yy.\n-FormatData\/sr\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/sr\/af=\\u0430\\u0444\\u0440\\u0438\\u043a\\u0430\\u043d\\u0441\n-LocaleNames\/sr\/ar=\\u0430\\u0440\\u0430\\u043f\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/be=\\u0431\\u0435\\u043b\\u043e\\u0440\\u0443\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/bg=\\u0431\\u0443\\u0433\\u0430\\u0440\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/br=\\u0431\\u0440\\u0435\\u0442\\u043e\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/ca=\\u043a\\u0430\\u0442\\u0430\\u043b\\u043e\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/co=\\u043a\\u043e\\u0440\\u0437\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/cs=\\u0447\\u0435\\u0448\\u043a\\u0438\n-LocaleNames\/sr\/da=\\u0434\\u0430\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/de=\\u043d\\u0435\\u043c\\u0430\\u0447\\u043a\\u0438\n-LocaleNames\/sr\/el=\\u0433\\u0440\\u0447\\u043a\\u0438\n-LocaleNames\/sr\/en=\\u0435\\u043d\\u0433\\u043b\\u0435\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/eo=\\u0435\\u0441\\u043f\\u0435\\u0440\\u0430\\u043d\\u0442\\u043e\n-LocaleNames\/sr\/es=\\u0448\\u043f\\u0430\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/et=\\u0435\\u0441\\u0442\\u043e\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/eu=\\u0431\\u0430\\u0441\\u043a\\u0438\\u0458\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/fa=\\u043f\\u0435\\u0440\\u0441\\u0438\\u0458\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/fi=\\u0444\\u0438\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/fr=\\u0444\\u0440\\u0430\\u043d\\u0446\\u0443\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/ga=\\u0438\\u0440\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/he=\\u0445\\u0435\\u0431\\u0440\\u0435\\u0458\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/hi=\\u0445\\u0438\\u043d\\u0434\\u0438\n-LocaleNames\/sr\/hr=\\u0445\\u0440\\u0432\\u0430\\u0442\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/hu=\\u043c\\u0430\\u0452\\u0430\\u0440\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/hy=\\u0458\\u0435\\u0440\\u043c\\u0435\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/id=\\u0438\\u043d\\u0434\\u043e\\u043d\\u0435\\u0436\\u0430\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/in=\\u0438\\u043d\\u0434\\u043e\\u043d\\u0435\\u0436\\u0430\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/is=\\u0438\\u0441\\u043b\\u0430\\u043d\\u0434\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/it=\\u0438\\u0442\\u0430\\u043b\\u0438\\u0458\\u0430\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/iw=\\u0445\\u0435\\u0431\\u0440\\u0435\\u0458\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/ja=\\u0458\\u0430\\u043f\\u0430\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/ji=\\u0458\\u0438\\u0434\\u0438\\u0448\n-LocaleNames\/sr\/ka=\\u0433\\u0440\\u0443\\u0437\\u0438\\u0458\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/km=\\u043a\\u043c\\u0435\\u0440\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/ko=\\u043a\\u043e\\u0440\\u0435\\u0458\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/ku=\\u043a\\u0443\\u0440\\u0434\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/ky=\\u043a\\u0438\\u0440\\u0433\\u0438\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/la=\\u043b\\u0430\\u0442\\u0438\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/lt=\\u043b\\u0438\\u0442\\u0432\\u0430\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/lv=\\u043b\\u0435\\u0442\\u043e\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/mk=\\u043c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/mn=\\u043c\\u043e\\u043d\\u0433\\u043e\\u043b\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/mo=\\u041c\\u043e\\u043b\\u0434\\u0430\\u0432\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/my=\\u0431\\u0443\\u0440\\u043c\\u0430\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/nl=\\u0445\\u043e\\u043b\\u0430\\u043d\\u0434\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/no=\\u043d\\u043e\\u0440\\u0432\\u0435\\u0448\\u043a\\u0438\n-LocaleNames\/sr\/pl=\\u043f\\u043e\\u0459\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/pt=\\u043f\\u043e\\u0440\\u0442\\u0443\\u0433\\u0430\\u043b\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/rm=\\u0440\\u043e\\u043c\\u0430\\u043d\\u0448\n-LocaleNames\/sr\/ro=\\u0440\\u0443\\u043c\\u0443\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/ru=\\u0440\\u0443\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/sa=\\u0441\\u0430\\u043d\\u0441\\u043a\\u0440\\u0438\\u0442\n-LocaleNames\/sr\/sk=\\u0441\\u043b\\u043e\\u0432\\u0430\\u0447\\u043a\\u0438\n-LocaleNames\/sr\/sl=\\u0441\\u043b\\u043e\\u0432\\u0435\\u043d\\u0430\\u0447\\u043a\\u0438\n-LocaleNames\/sr\/sq=\\u0430\\u043b\\u0431\\u0430\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/sr=\\u0441\\u0440\\u043f\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/sv=\\u0448\\u0432\\u0435\\u0434\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/sw=\\u0441\\u0432\\u0430\\u0445\\u0438\\u043b\\u0438\n-LocaleNames\/sr\/tr=\\u0442\\u0443\\u0440\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/uk=\\u0443\\u043a\\u0440\\u0430\\u0458\\u0438\\u043d\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/vi=\\u0432\\u0438\\u0458\\u0435\\u0442\\u043d\\u0430\\u043c\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/yi=\\u0458\\u0438\\u0434\\u0438\\u0448\n-LocaleNames\/sr\/zh=\\u043a\\u0438\\u043d\\u0435\\u0441\\u043a\\u0438\n-LocaleNames\/sr\/AD=\\u0410\\u043d\\u0434\\u043e\\u0440\\u0430\n-LocaleNames\/sr\/AE=\\u0423\\u0458\\u0435\\u0434\\u0438\\u045a\\u0435\\u043d\\u0438 \\u0410\\u0440\\u0430\\u043f\\u0441\\u043a\\u0438 \\u0415\\u043c\\u0438\\u0440\\u0430\\u0442\\u0438\n-LocaleNames\/sr\/AF=\\u0410\\u0432\\u0433\\u0430\\u043d\\u0438\\u0441\\u0442\\u0430\\u043d\n-LocaleNames\/sr\/AL=\\u0410\\u043b\\u0431\\u0430\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/AM=\\u0408\\u0435\\u0440\\u043c\\u0435\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/AN=\\u0425\\u043e\\u043b\\u0430\\u043d\\u0434\\u0441\\u043a\\u0438 \\u0410\\u043d\\u0442\\u0438\\u043b\\u0438\n-LocaleNames\/sr\/AO=\\u0410\\u043d\\u0433\\u043e\\u043b\\u0430\n-LocaleNames\/sr\/AR=\\u0410\\u0440\\u0433\\u0435\\u043d\\u0442\\u0438\\u043d\\u0430\n-LocaleNames\/sr\/AT=\\u0410\\u0443\\u0441\\u0442\\u0440\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/AU=\\u0410\\u0443\\u0441\\u0442\\u0440\\u0430\\u043b\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/AW=\\u0410\\u0440\\u0443\\u0431\\u0430\n-LocaleNames\/sr\/AX=\\u041e\\u043b\\u0430\\u043d\\u0434\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/AZ=\\u0410\\u0437\\u0435\\u0440\\u0431\\u0435\\u0458\\u045f\\u0430\\u043d\n-LocaleNames\/sr\/BA=\\u0411\\u043e\\u0441\\u043d\\u0430 \\u0438 \\u0425\\u0435\\u0440\\u0446\\u0435\\u0433\\u043e\\u0432\\u0438\\u043d\\u0430\n-LocaleNames\/sr\/BB=\\u0411\\u0430\\u0440\\u0431\\u0430\\u0434\\u043e\\u0441\n-LocaleNames\/sr\/BD=\\u0411\\u0430\\u043d\\u0433\\u043b\\u0430\\u0434\\u0435\\u0448\n-LocaleNames\/sr\/BE=\\u0411\\u0435\\u043b\\u0433\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/BF=\\u0411\\u0443\\u0440\\u043a\\u0438\\u043d\\u0430 \\u0424\\u0430\\u0441\\u043e\n-LocaleNames\/sr\/BG=\\u0411\\u0443\\u0433\\u0430\\u0440\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/BH=\\u0411\\u0430\\u0445\\u0440\\u0435\\u0438\\u043d\n-LocaleNames\/sr\/BI=\\u0411\\u0443\\u0440\\u0443\\u043d\\u0434\\u0438\n-LocaleNames\/sr\/BJ=\\u0411\\u0435\\u043d\\u0438\\u043d\n-LocaleNames\/sr\/BM=\\u0411\\u0435\\u0440\\u043c\\u0443\\u0434\\u0430\n-LocaleNames\/sr\/BN=\\u0411\\u0440\\u0443\\u043d\\u0435\\u0458\n-LocaleNames\/sr\/BO=\\u0411\\u043e\\u043b\\u0438\\u0432\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/BR=\\u0411\\u0440\\u0430\\u0437\\u0438\\u043b\n-LocaleNames\/sr\/BS=\\u0411\\u0430\\u0445\\u0430\\u043c\\u0438\n-LocaleNames\/sr\/BT=\\u0411\\u0443\\u0442\\u0430\\u043d\n-LocaleNames\/sr\/BV=\\u041e\\u0441\\u0442\\u0440\\u0432\\u043e \\u0411\\u0443\\u0432\\u0435\n-LocaleNames\/sr\/BW=\\u0411\\u043e\\u0446\\u0432\\u0430\\u043d\\u0430\n-LocaleNames\/sr\/BY=\\u0411\\u0435\\u043b\\u043e\\u0440\\u0443\\u0441\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/BZ=\\u0411\\u0435\\u043b\\u0438\\u0437\\u0435\n-LocaleNames\/sr\/CA=\\u041a\\u0430\\u043d\\u0430\\u0434\\u0430\n-LocaleNames\/sr\/CC=\\u041a\\u043e\\u043a\\u043e\\u0441\\u043e\\u0432\\u0430 (\\u041a\\u0438\\u043b\\u0438\\u043d\\u0433\\u043e\\u0432\\u0430) \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/CD=\\u041a\\u043e\\u043d\\u0433\\u043e - \\u041a\\u0438\\u043d\\u0448\\u0430\\u0441\\u0430\n-LocaleNames\/sr\/CF=\\u0426\\u0435\\u043d\\u0442\\u0440\\u0430\\u043b\\u043d\\u043e\\u0430\\u0444\\u0440\\u0438\\u0447\\u043a\\u0430 \\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\n-LocaleNames\/sr\/CG=\\u041a\\u043e\\u043d\\u0433\\u043e - \\u0411\\u0440\\u0430\\u0437\\u0430\\u0432\\u0438\\u043b\n-LocaleNames\/sr\/CH=\\u0428\\u0432\\u0430\\u0458\\u0446\\u0430\\u0440\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/CI=\\u041e\\u0431\\u0430\\u043b\\u0430 \\u0421\\u043b\\u043e\\u043d\\u043e\\u0432\\u0430\\u0447\\u0435 (\\u041a\\u043e\\u0442 \\u0434\\u2019\\u0418\\u0432\\u043e\\u0430\\u0440)\n-LocaleNames\/sr\/CL=\\u0427\\u0438\\u043b\\u0435\n-LocaleNames\/sr\/CM=\\u041a\\u0430\\u043c\\u0435\\u0440\\u0443\\u043d\n-LocaleNames\/sr\/CN=\\u041a\\u0438\\u043d\\u0430\n-LocaleNames\/sr\/CO=\\u041a\\u043e\\u043b\\u0443\\u043c\\u0431\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/CR=\\u041a\\u043e\\u0441\\u0442\\u0430\\u0440\\u0438\\u043a\\u0430\n-LocaleNames\/sr\/CS=\\u0421\\u0440\\u0431\\u0438\\u0458\\u0430 \\u0438 \\u0426\\u0440\\u043d\\u0430 \\u0413\\u043e\\u0440\\u0430\n-LocaleNames\/sr\/CU=\\u041a\\u0443\\u0431\\u0430\n-LocaleNames\/sr\/CV=\\u0417\\u0435\\u043b\\u0435\\u043d\\u043e\\u0440\\u0442\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/CX=\\u0411\\u043e\\u0436\\u0438\\u045b\\u043d\\u043e \\u041e\\u0441\\u0442\\u0440\\u0432\\u043e\n-LocaleNames\/sr\/CY=\\u041a\\u0438\\u043f\\u0430\\u0440\n-LocaleNames\/sr\/CZ=\\u0427\\u0435\\u0448\\u043a\\u0430\n-LocaleNames\/sr\/DE=\\u041d\\u0435\\u043c\\u0430\\u0447\\u043a\\u0430\n-LocaleNames\/sr\/DJ=\\u040f\\u0438\\u0431\\u0443\\u0442\\u0438\n-LocaleNames\/sr\/DK=\\u0414\\u0430\\u043d\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/DM=\\u0414\\u043e\\u043c\\u0438\\u043d\\u0438\\u043a\\u0430\n-LocaleNames\/sr\/DO=\\u0414\\u043e\\u043c\\u0438\\u043d\\u0438\\u043a\\u0430\\u043d\\u0441\\u043a\\u0430 \\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\n-LocaleNames\/sr\/DZ=\\u0410\\u043b\\u0436\\u0438\\u0440\n-LocaleNames\/sr\/EC=\\u0415\\u043a\\u0432\\u0430\\u0434\\u043e\\u0440\n-LocaleNames\/sr\/EE=\\u0415\\u0441\\u0442\\u043e\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/EG=\\u0415\\u0433\\u0438\\u043f\\u0430\\u0442\n-LocaleNames\/sr\/EH=\\u0417\\u0430\\u043f\\u0430\\u0434\\u043d\\u0430 \\u0421\\u0430\\u0445\\u0430\\u0440\\u0430\n-LocaleNames\/sr\/ER=\\u0415\\u0440\\u0438\\u0442\\u0440\\u0435\\u0458\\u0430\n-LocaleNames\/sr\/ES=\\u0428\\u043f\\u0430\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/ET=\\u0415\\u0442\\u0438\\u043e\\u043f\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/FI=\\u0424\\u0438\\u043d\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/FJ=\\u0424\\u0438\\u045f\\u0438\n-LocaleNames\/sr\/FK=\\u0424\\u043e\\u043a\\u043b\\u0430\\u043d\\u0434\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/FM=\\u041c\\u0438\\u043a\\u0440\\u043e\\u043d\\u0435\\u0437\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/FO=\\u0424\\u0430\\u0440\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/FR=\\u0424\\u0440\\u0430\\u043d\\u0446\\u0443\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/GA=\\u0413\\u0430\\u0431\\u043e\\u043d\n-LocaleNames\/sr\/GB=\\u0423\\u0458\\u0435\\u0434\\u0438\\u045a\\u0435\\u043d\\u043e \\u041a\\u0440\\u0430\\u0459\\u0435\\u0432\\u0441\\u0442\\u0432\\u043e\n-LocaleNames\/sr\/GD=\\u0413\\u0440\\u0435\\u043d\\u0430\\u0434\\u0430\n-LocaleNames\/sr\/GE=\\u0413\\u0440\\u0443\\u0437\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/GF=\\u0424\\u0440\\u0430\\u043d\\u0446\\u0443\\u0441\\u043a\\u0430 \\u0413\\u0432\\u0430\\u0458\\u0430\\u043d\\u0430\n-LocaleNames\/sr\/GH=\\u0413\\u0430\\u043d\\u0430\n-LocaleNames\/sr\/GI=\\u0413\\u0438\\u0431\\u0440\\u0430\\u043b\\u0442\\u0430\\u0440\n-LocaleNames\/sr\/GL=\\u0413\\u0440\\u0435\\u043d\\u043b\\u0430\\u043d\\u0434\n-LocaleNames\/sr\/GM=\\u0413\\u0430\\u043c\\u0431\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/GN=\\u0413\\u0432\\u0438\\u043d\\u0435\\u0458\\u0430\n-LocaleNames\/sr\/GP=\\u0413\\u0432\\u0430\\u0434\\u0435\\u043b\\u0443\\u043f\n-LocaleNames\/sr\/GQ=\\u0415\\u043a\\u0432\\u0430\\u0442\\u043e\\u0440\\u0438\\u0458\\u0430\\u043b\\u043d\\u0430 \\u0413\\u0432\\u0438\\u043d\\u0435\\u0458\\u0430\n-LocaleNames\/sr\/GR=\\u0413\\u0440\\u0447\\u043a\\u0430\n-LocaleNames\/sr\/GS=\\u0408\\u0443\\u0436\\u043d\\u0430 \\u040f\\u043e\\u0440\\u045f\\u0438\\u0458\\u0430 \\u0438 \\u0408\\u0443\\u0436\\u043d\\u0430 \\u0421\\u0435\\u043d\\u0434\\u0432\\u0438\\u0447\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/GT=\\u0413\\u0432\\u0430\\u0442\\u0435\\u043c\\u0430\\u043b\\u0430\n-LocaleNames\/sr\/GU=\\u0413\\u0443\\u0430\\u043c\n-LocaleNames\/sr\/GW=\\u0413\\u0432\\u0438\\u043d\\u0435\\u0458\\u0430-\\u0411\\u0438\\u0441\\u0430\\u043e\n-LocaleNames\/sr\/GY=\\u0413\\u0432\\u0430\\u0458\\u0430\\u043d\\u0430\n-LocaleNames\/sr\/HK=\\u0421\\u0410\\u0420 \\u0425\\u043e\\u043d\\u0433\\u043a\\u043e\\u043d\\u0433 (\\u041a\\u0438\\u043d\\u0430)\n-LocaleNames\/sr\/HM=\\u041e\\u0441\\u0442\\u0440\\u0432\\u043e \\u0425\\u0435\\u0440\\u0434 \\u0438 \\u041c\\u0435\\u043a\\u0434\\u043e\\u043d\\u0430\\u043b\\u0434\\u043e\\u0432\\u0430 \\u043e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/HN=\\u0425\\u043e\\u043d\\u0434\\u0443\\u0440\\u0430\\u0441\n-LocaleNames\/sr\/HR=\\u0425\\u0440\\u0432\\u0430\\u0442\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/HT=\\u0425\\u0430\\u0438\\u0442\\u0438\n-LocaleNames\/sr\/HU=\\u041c\\u0430\\u0452\\u0430\\u0440\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/ID=\\u0418\\u043d\\u0434\\u043e\\u043d\\u0435\\u0437\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/IE=\\u0418\\u0440\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/IL=\\u0418\\u0437\\u0440\\u0430\\u0435\\u043b\n-LocaleNames\/sr\/IN=\\u0418\\u043d\\u0434\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/IQ=\\u0418\\u0440\\u0430\\u043a\n-LocaleNames\/sr\/IR=\\u0418\\u0440\\u0430\\u043d\n-LocaleNames\/sr\/IS=\\u0418\\u0441\\u043b\\u0430\\u043d\\u0434\n-LocaleNames\/sr\/IT=\\u0418\\u0442\\u0430\\u043b\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/JM=\\u0408\\u0430\\u043c\\u0430\\u0458\\u043a\\u0430\n-LocaleNames\/sr\/JO=\\u0408\\u043e\\u0440\\u0434\\u0430\\u043d\n-LocaleNames\/sr\/JP=\\u0408\\u0430\\u043f\\u0430\\u043d\n-LocaleNames\/sr\/KE=\\u041a\\u0435\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/KG=\\u041a\\u0438\\u0440\\u0433\\u0438\\u0441\\u0442\\u0430\\u043d\n-LocaleNames\/sr\/KH=\\u041a\\u0430\\u043c\\u0431\\u043e\\u045f\\u0430\n-LocaleNames\/sr\/KI=\\u041a\\u0438\\u0440\\u0438\\u0431\\u0430\\u0442\\u0438\n-LocaleNames\/sr\/KM=\\u041a\\u043e\\u043c\\u043e\\u0440\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/KN=\\u0421\\u0435\\u043d\\u0442 \\u041a\\u0438\\u0442\\u0441 \\u0438 \\u041d\\u0435\\u0432\\u0438\\u0441\n-LocaleNames\/sr\/KP=\\u0421\\u0435\\u0432\\u0435\\u0440\\u043d\\u0430 \\u041a\\u043e\\u0440\\u0435\\u0458\\u0430\n-LocaleNames\/sr\/KR=\\u0408\\u0443\\u0436\\u043d\\u0430 \\u041a\\u043e\\u0440\\u0435\\u0458\\u0430\n-LocaleNames\/sr\/KW=\\u041a\\u0443\\u0432\\u0430\\u0458\\u0442\n-LocaleNames\/sr\/KY=\\u041a\\u0430\\u0458\\u043c\\u0430\\u043d\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/KZ=\\u041a\\u0430\\u0437\\u0430\\u0445\\u0441\\u0442\\u0430\\u043d\n-LocaleNames\/sr\/LA=\\u041b\\u0430\\u043e\\u0441\n-LocaleNames\/sr\/LB=\\u041b\\u0438\\u0431\\u0430\\u043d\n-LocaleNames\/sr\/LC=\\u0421\\u0432\\u0435\\u0442\\u0430 \\u041b\\u0443\\u0446\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/LI=\\u041b\\u0438\\u0445\\u0442\\u0435\\u043d\\u0448\\u0442\\u0430\\u0458\\u043d\n-LocaleNames\/sr\/LK=\\u0428\\u0440\\u0438 \\u041b\\u0430\\u043d\\u043a\\u0430\n-LocaleNames\/sr\/LR=\\u041b\\u0438\\u0431\\u0435\\u0440\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/LS=\\u041b\\u0435\\u0441\\u043e\\u0442\\u043e\n-LocaleNames\/sr\/LT=\\u041b\\u0438\\u0442\\u0432\\u0430\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/LU=\\u041b\\u0443\\u043a\\u0441\\u0435\\u043c\\u0431\\u0443\\u0440\\u0433\n-LocaleNames\/sr\/LV=\\u041b\\u0435\\u0442\\u043e\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/LY=\\u041b\\u0438\\u0431\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/MA=\\u041c\\u0430\\u0440\\u043e\\u043a\\u043e\n-LocaleNames\/sr\/MC=\\u041c\\u043e\\u043d\\u0430\\u043a\\u043e\n-LocaleNames\/sr\/MD=\\u041c\\u043e\\u043b\\u0434\\u0430\\u0432\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/MG=\\u041c\\u0430\\u0434\\u0430\\u0433\\u0430\\u0441\\u043a\\u0430\\u0440\n-LocaleNames\/sr\/MH=\\u041c\\u0430\\u0440\\u0448\\u0430\\u043b\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/MK=\\u0421\\u0435\\u0432\\u0435\\u0440\\u043d\\u0430 \\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/ML=\\u041c\\u0430\\u043b\\u0438\n-LocaleNames\/sr\/MM=\\u041c\\u0438\\u0458\\u0430\\u043d\\u043c\\u0430\\u0440 (\\u0411\\u0443\\u0440\\u043c\\u0430)\n-LocaleNames\/sr\/MN=\\u041c\\u043e\\u043d\\u0433\\u043e\\u043b\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/MO=\\u0421\\u0410\\u0420 \\u041c\\u0430\\u043a\\u0430\\u043e (\\u041a\\u0438\\u043d\\u0430)\n-LocaleNames\/sr\/MP=\\u0421\\u0435\\u0432\\u0435\\u0440\\u043d\\u0430 \\u041c\\u0430\\u0440\\u0438\\u0458\\u0430\\u043d\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/MQ=\\u041c\\u0430\\u0440\\u0442\\u0438\\u043d\\u0438\\u043a\n-LocaleNames\/sr\/MR=\\u041c\\u0430\\u0443\\u0440\\u0438\\u0442\\u0430\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/MS=\\u041c\\u043e\\u043d\\u0441\\u0435\\u0440\\u0430\\u0442\n-LocaleNames\/sr\/MT=\\u041c\\u0430\\u043b\\u0442\\u0430\n-LocaleNames\/sr\/MU=\\u041c\\u0430\\u0443\\u0440\\u0438\\u0446\\u0438\\u0458\\u0443\\u0441\n-LocaleNames\/sr\/MV=\\u041c\\u0430\\u043b\\u0434\\u0438\\u0432\\u0438\n-LocaleNames\/sr\/MW=\\u041c\\u0430\\u043b\\u0430\\u0432\\u0438\n-LocaleNames\/sr\/MX=\\u041c\\u0435\\u043a\\u0441\\u0438\\u043a\\u043e\n-LocaleNames\/sr\/MY=\\u041c\\u0430\\u043b\\u0435\\u0437\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/MZ=\\u041c\\u043e\\u0437\\u0430\\u043c\\u0431\\u0438\\u043a\n-LocaleNames\/sr\/NA=\\u041d\\u0430\\u043c\\u0438\\u0431\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/NC=\\u041d\\u043e\\u0432\\u0430 \\u041a\\u0430\\u043b\\u0435\\u0434\\u043e\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/NE=\\u041d\\u0438\\u0433\\u0435\\u0440\n-LocaleNames\/sr\/NF=\\u041e\\u0441\\u0442\\u0440\\u0432\\u043e \\u041d\\u043e\\u0440\\u0444\\u043e\\u043a\n-LocaleNames\/sr\/NG=\\u041d\\u0438\\u0433\\u0435\\u0440\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/NI=\\u041d\\u0438\\u043a\\u0430\\u0440\\u0430\\u0433\\u0432\\u0430\n-LocaleNames\/sr\/NL=\\u0425\\u043e\\u043b\\u0430\\u043d\\u0434\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/NO=\\u041d\\u043e\\u0440\\u0432\\u0435\\u0448\\u043a\\u0430\n-LocaleNames\/sr\/NP=\\u041d\\u0435\\u043f\\u0430\\u043b\n-LocaleNames\/sr\/NR=\\u041d\\u0430\\u0443\\u0440\\u0443\n-LocaleNames\/sr\/NU=\\u041d\\u0438\\u0443\\u0435\n-LocaleNames\/sr\/NZ=\\u041d\\u043e\\u0432\\u0438 \\u0417\\u0435\\u043b\\u0430\\u043d\\u0434\n-LocaleNames\/sr\/OM=\\u041e\\u043c\\u0430\\u043d\n-LocaleNames\/sr\/PA=\\u041f\\u0430\\u043d\\u0430\\u043c\\u0430\n-LocaleNames\/sr\/PE=\\u041f\\u0435\\u0440\\u0443\n-LocaleNames\/sr\/PF=\\u0424\\u0440\\u0430\\u043d\\u0446\\u0443\\u0441\\u043a\\u0430 \\u041f\\u043e\\u043b\\u0438\\u043d\\u0435\\u0437\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/PG=\\u041f\\u0430\\u043f\\u0443\\u0430 \\u041d\\u043e\\u0432\\u0430 \\u0413\\u0432\\u0438\\u043d\\u0435\\u0458\\u0430\n-LocaleNames\/sr\/PH=\\u0424\\u0438\\u043b\\u0438\\u043f\\u0438\\u043d\\u0438\n-LocaleNames\/sr\/PK=\\u041f\\u0430\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\n-LocaleNames\/sr\/PL=\\u041f\\u043e\\u0459\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/PM=\\u0421\\u0435\\u043d \\u041f\\u0458\\u0435\\u0440 \\u0438 \\u041c\\u0438\\u043a\\u0435\\u043b\\u043e\\u043d\n-LocaleNames\/sr\/PN=\\u041f\\u0438\\u0442\\u043a\\u0435\\u0440\\u043d\n-LocaleNames\/sr\/PR=\\u041f\\u043e\\u0440\\u0442\\u043e\\u0440\\u0438\\u043a\\u043e\n-LocaleNames\/sr\/PS=\\u041f\\u0430\\u043b\\u0435\\u0441\\u0442\\u0438\\u043d\\u0441\\u043a\\u0435 \\u0442\\u0435\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u0458\\u0435\n-LocaleNames\/sr\/PT=\\u041f\\u043e\\u0440\\u0442\\u0443\\u0433\\u0430\\u043b\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/PW=\\u041f\\u0430\\u043b\\u0430\\u0443\n-LocaleNames\/sr\/PY=\\u041f\\u0430\\u0440\\u0430\\u0433\\u0432\\u0430\\u0458\n-LocaleNames\/sr\/QA=\\u041a\\u0430\\u0442\\u0430\\u0440\n-LocaleNames\/sr\/RE=\\u0420\\u0435\\u0438\\u043d\\u0438\\u043e\\u043d\n-LocaleNames\/sr\/RO=\\u0420\\u0443\\u043c\\u0443\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/RU=\\u0420\\u0443\\u0441\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/RW=\\u0420\\u0443\\u0430\\u043d\\u0434\\u0430\n-LocaleNames\/sr\/SA=\\u0421\\u0430\\u0443\\u0434\\u0438\\u0458\\u0441\\u043a\\u0430 \\u0410\\u0440\\u0430\\u0431\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/SB=\\u0421\\u043e\\u043b\\u043e\\u043c\\u043e\\u043d\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/SC=\\u0421\\u0435\\u0458\\u0448\\u0435\\u043b\\u0438\n-LocaleNames\/sr\/SD=\\u0421\\u0443\\u0434\\u0430\\u043d\n-LocaleNames\/sr\/SE=\\u0428\\u0432\\u0435\\u0434\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/SG=\\u0421\\u0438\\u043d\\u0433\\u0430\\u043f\\u0443\\u0440\n-LocaleNames\/sr\/SH=\\u0421\\u0432\\u0435\\u0442\\u0430 \\u0408\\u0435\\u043b\\u0435\\u043d\\u0430\n-LocaleNames\/sr\/SI=\\u0421\\u043b\\u043e\\u0432\\u0435\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/SJ=\\u0421\\u0432\\u0430\\u043b\\u0431\\u0430\\u0440\\u0434 \\u0438 \\u0408\\u0430\\u043d \\u041c\\u0430\\u0458\\u0435\\u043d\n-LocaleNames\/sr\/SK=\\u0421\\u043b\\u043e\\u0432\\u0430\\u0447\\u043a\\u0430\n-LocaleNames\/sr\/SL=\\u0421\\u0438\\u0458\\u0435\\u0440\\u0430 \\u041b\\u0435\\u043e\\u043d\\u0435\n-LocaleNames\/sr\/SM=\\u0421\\u0430\\u043d \\u041c\\u0430\\u0440\\u0438\\u043d\\u043e\n-LocaleNames\/sr\/SN=\\u0421\\u0435\\u043d\\u0435\\u0433\\u0430\\u043b\n-LocaleNames\/sr\/SO=\\u0421\\u043e\\u043c\\u0430\\u043b\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/SR=\\u0421\\u0443\\u0440\\u0438\\u043d\\u0430\\u043c\n-LocaleNames\/sr\/ST=\\u0421\\u0430\\u043e \\u0422\\u043e\\u043c\\u0435 \\u0438 \\u041f\\u0440\\u0438\\u043d\\u0446\\u0438\\u043f\\u0435\n-LocaleNames\/sr\/SV=\\u0421\\u0430\\u043b\\u0432\\u0430\\u0434\\u043e\\u0440\n-LocaleNames\/sr\/SY=\\u0421\\u0438\\u0440\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/TC=\\u041e\\u0441\\u0442\\u0440\\u0432\\u0430 \\u0422\\u0443\\u0440\\u043a\\u0441 \\u0438 \\u041a\\u0430\\u0438\\u043a\\u043e\\u0441\n-LocaleNames\/sr\/TD=\\u0427\\u0430\\u0434\n-LocaleNames\/sr\/TF=\\u0424\\u0440\\u0430\\u043d\\u0446\\u0443\\u0441\\u043a\\u0435 \\u0408\\u0443\\u0436\\u043d\\u0435 \\u0422\\u0435\\u0440\\u0438\\u0442\\u043e\\u0440\\u0438\\u0458\\u0435\n-LocaleNames\/sr\/TG=\\u0422\\u043e\\u0433\\u043e\n-LocaleNames\/sr\/TH=\\u0422\\u0430\\u0458\\u043b\\u0430\\u043d\\u0434\n-LocaleNames\/sr\/TJ=\\u0422\\u0430\\u045f\\u0438\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\n-LocaleNames\/sr\/TK=\\u0422\\u043e\\u043a\\u0435\\u043b\\u0430\\u0443\n-LocaleNames\/sr\/TL=\\u0422\\u0438\\u043c\\u043e\\u0440-\\u041b\\u0435\\u0441\\u0442\\u0435 (\\u0418\\u0441\\u0442\\u043e\\u0447\\u043d\\u0438 \\u0422\\u0438\\u043c\\u043e\\u0440)\n-LocaleNames\/sr\/TM=\\u0422\\u0443\\u0440\\u043a\\u043c\\u0435\\u043d\\u0438\\u0441\\u0442\\u0430\\u043d\n-LocaleNames\/sr\/TN=\\u0422\\u0443\\u043d\\u0438\\u0441\n-LocaleNames\/sr\/TO=\\u0422\\u043e\\u043d\\u0433\\u0430\n-LocaleNames\/sr\/TR=\\u0422\\u0443\\u0440\\u0441\\u043a\\u0430\n-LocaleNames\/sr\/TT=\\u0422\\u0440\\u0438\\u043d\\u0438\\u0434\\u0430\\u0434 \\u0438 \\u0422\\u043e\\u0431\\u0430\\u0433\\u043e\n-LocaleNames\/sr\/TV=\\u0422\\u0443\\u0432\\u0430\\u043b\\u0443\n-LocaleNames\/sr\/TW=\\u0422\\u0430\\u0458\\u0432\\u0430\\u043d\n-LocaleNames\/sr\/TZ=\\u0422\\u0430\\u043d\\u0437\\u0430\\u043d\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/UA=\\u0423\\u043a\\u0440\\u0430\\u0458\\u0438\\u043d\\u0430\n-LocaleNames\/sr\/UG=\\u0423\\u0433\\u0430\\u043d\\u0434\\u0430\n-LocaleNames\/sr\/UM=\\u0423\\u0434\\u0430\\u0459\\u0435\\u043d\\u0430 \\u043e\\u0441\\u0442\\u0440\\u0432\\u0430 \\u0421\\u0410\\u0414\n-LocaleNames\/sr\/US=\\u0421\\u0458\\u0435\\u0434\\u0438\\u045a\\u0435\\u043d\\u0435 \\u0414\\u0440\\u0436\\u0430\\u0432\\u0435\n-LocaleNames\/sr\/UY=\\u0423\\u0440\\u0443\\u0433\\u0432\\u0430\\u0458\n-LocaleNames\/sr\/UZ=\\u0423\\u0437\\u0431\\u0435\\u043a\\u0438\\u0441\\u0442\\u0430\\u043d\n-LocaleNames\/sr\/VA=\\u0412\\u0430\\u0442\\u0438\\u043a\\u0430\\u043d\n-LocaleNames\/sr\/VC=\\u0421\\u0435\\u043d\\u0442 \\u0412\\u0438\\u043d\\u0441\\u0435\\u043d\\u0442 \\u0438 \\u0413\\u0440\\u0435\\u043d\\u0430\\u0434\\u0438\\u043d\\u0438\n-LocaleNames\/sr\/VE=\\u0412\\u0435\\u043d\\u0435\\u0446\\u0443\\u0435\\u043b\\u0430\n-LocaleNames\/sr\/VG=\\u0411\\u0440\\u0438\\u0442\\u0430\\u043d\\u0441\\u043a\\u0430 \\u0414\\u0435\\u0432\\u0438\\u0447\\u0430\\u043d\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/VI=\\u0410\\u043c\\u0435\\u0440\\u0438\\u0447\\u043a\\u0430 \\u0414\\u0435\\u0432\\u0438\\u0447\\u0430\\u043d\\u0441\\u043a\\u0430 \\u041e\\u0441\\u0442\\u0440\\u0432\\u0430\n-LocaleNames\/sr\/VN=\\u0412\\u0438\\u0458\\u0435\\u0442\\u043d\\u0430\\u043c\n-LocaleNames\/sr\/VU=\\u0412\\u0430\\u043d\\u0443\\u0430\\u0442\\u0443\n-LocaleNames\/sr\/WF=\\u0412\\u0430\\u043b\\u0438\\u0441 \\u0438 \\u0424\\u0443\\u0442\\u0443\\u043d\\u0430\n-LocaleNames\/sr\/WS=\\u0421\\u0430\\u043c\\u043e\\u0430\n-LocaleNames\/sr\/YE=\\u0408\\u0435\\u043c\\u0435\\u043d\n-LocaleNames\/sr\/YT=\\u041c\\u0430\\u0458\\u043e\\u0442\n-LocaleNames\/sr\/ZM=\\u0417\\u0430\\u043c\\u0431\\u0438\\u0458\\u0430\n-LocaleNames\/sr\/ZW=\\u0417\\u0438\\u043c\\u0431\\u0430\\u0431\\u0432\\u0435\n-CalendarData\/sr\/firstDayOfWeek=2\n-CurrencyNames\/sr_CS\/EUR=\\u20ac\n-# bug 6498742: data is changed\n-CurrencyNames\/sr_BA\/BAM=\\u041a\\u041c.\n-\n-CurrencyNames\/sr_BA\/EUR=\\u20ac\n-\n-# bug #6351682 Country name for Korean is wrong in Simplified Chinese\n-LocaleNames\/zh\/KP=\\u671d\\u9c9c\n-LocaleNames\/zh\/KR=\\u97e9\\u56fd\n-\n-# bug 6379382: Finnish time of day should be formatted as \"H.mm.ss\", not \"hh:mm:ss\"\n-FormatData\/fi\/TimePatterns\/0=H.mm.ss z\n-FormatData\/fi\/TimePatterns\/1='klo 'H.mm.ss\n-\n-# bug 6455680 Update locale data derived from CLDR1.3 to CLDR1.4\n-LocaleNames\/pt\/CS=S\\u00e9rvia e Montenegro\n-\n-# bug 6498742: data for IR & ZW changed\n-LocaleNames\/pt_PT\/IR=Ir\\u00e3\n-LocaleNames\/pt_PT\/ZW=Zimb\\u00e1bue\n-\n-LocaleNames\/el\/ar=\\u0391\\u03c1\\u03b1\\u03b2\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/be=\\u039b\\u03b5\\u03c5\\u03ba\\u03bf\\u03c1\\u03c9\\u03c3\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/bg=\\u0392\\u03bf\\u03c5\\u03bb\\u03b3\\u03b1\\u03c1\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/bn=\\u0392\\u03b5\\u03b3\\u03b3\\u03b1\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/bo=\\u0398\\u03b9\\u03b2\\u03b5\\u03c4\\u03b9\\u03b1\\u03bd\\u03ac\n-LocaleNames\/el\/bs=\\u0392\\u03bf\\u03c3\\u03bd\\u03b9\\u03b1\\u03ba\\u03ac\n-LocaleNames\/el\/ca=\\u039a\\u03b1\\u03c4\\u03b1\\u03bb\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/co=\\u039a\\u03bf\\u03c1\\u03c3\\u03b9\\u03ba\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/cs=\\u03a4\\u03c3\\u03b5\\u03c7\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/cy=\\u039f\\u03c5\\u03b1\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/da=\\u0394\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/de=\\u0393\\u03b5\\u03c1\\u03bc\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/el=\\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/en=\\u0391\\u03b3\\u03b3\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/es=\\u0399\\u03c3\\u03c0\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/et=\\u0395\\u03c3\\u03b8\\u03bf\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/eu=\\u0392\\u03b1\\u03c3\\u03ba\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/fa=\\u03a0\\u03b5\\u03c1\\u03c3\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/fi=\\u03a6\\u03b9\\u03bd\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/fr=\\u0393\\u03b1\\u03bb\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/ga=\\u0399\\u03c1\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/gd=\\u03a3\\u03ba\\u03c9\\u03c4\\u03b9\\u03ba\\u03ac \\u039a\\u03b5\\u03bb\\u03c4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/he=\\u0395\\u03b2\\u03c1\\u03b1\\u03ca\\u03ba\\u03ac\n-LocaleNames\/el\/hi=\\u03a7\\u03af\\u03bd\\u03c4\\u03b9\n-LocaleNames\/el\/hr=\\u039a\\u03c1\\u03bf\\u03b1\\u03c4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/hu=\\u039f\\u03c5\\u03b3\\u03b3\\u03c1\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/hy=\\u0391\\u03c1\\u03bc\\u03b5\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/id=\\u0399\\u03bd\\u03b4\\u03bf\\u03bd\\u03b7\\u03c3\\u03b9\\u03b1\\u03ba\\u03ac\n-LocaleNames\/el\/in=\\u0399\\u03bd\\u03b4\\u03bf\\u03bd\\u03b7\\u03c3\\u03b9\\u03b1\\u03ba\\u03ac\n-LocaleNames\/el\/is=\\u0399\\u03c3\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/it=\\u0399\\u03c4\\u03b1\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/iw=\\u0395\\u03b2\\u03c1\\u03b1\\u03ca\\u03ba\\u03ac\n-LocaleNames\/el\/ja=\\u0399\\u03b1\\u03c0\\u03c9\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/ji=\\u0393\\u03af\\u03bd\\u03c4\\u03b9\\u03c2\n-LocaleNames\/el\/ka=\\u0393\\u03b5\\u03c9\\u03c1\\u03b3\\u03b9\\u03b1\\u03bd\\u03ac\n-LocaleNames\/el\/ko=\\u039a\\u03bf\\u03c1\\u03b5\\u03b1\\u03c4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/la=\\u039b\\u03b1\\u03c4\\u03b9\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/lt=\\u039b\\u03b9\\u03b8\\u03bf\\u03c5\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/lv=\\u039b\\u03b5\\u03c4\\u03bf\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/mk=\\u03a3\\u03bb\\u03b1\\u03b2\\u03bf\\u03bc\\u03b1\\u03ba\\u03b5\\u03b4\\u03bf\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/mn=\\u039c\\u03bf\\u03b3\\u03b3\\u03bf\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/mo=\\u039c\\u03bf\\u03bb\\u03b4\\u03b1\\u03b2\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/mt=\\u039c\\u03b1\\u03bb\\u03c4\\u03b5\\u03b6\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/no=\\u039d\\u03bf\\u03c1\\u03b2\\u03b7\\u03b3\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/pl=\\u03a0\\u03bf\\u03bb\\u03c9\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/pt=\\u03a0\\u03bf\\u03c1\\u03c4\\u03bf\\u03b3\\u03b1\\u03bb\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/ro=\\u03a1\\u03bf\\u03c5\\u03bc\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/ru=\\u03a1\\u03c9\\u03c3\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/sk=\\u03a3\\u03bb\\u03bf\\u03b2\\u03b1\\u03ba\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/sl=\\u03a3\\u03bb\\u03bf\\u03b2\\u03b5\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/sq=\\u0391\\u03bb\\u03b2\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/sr=\\u03a3\\u03b5\\u03c1\\u03b2\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/sv=\\u03a3\\u03bf\\u03c5\\u03b7\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/th=\\u03a4\\u03b1\\u03ca\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/tr=\\u03a4\\u03bf\\u03c5\\u03c1\\u03ba\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/uk=\\u039f\\u03c5\\u03ba\\u03c1\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/vi=\\u0392\\u03b9\\u03b5\\u03c4\\u03bd\\u03b1\\u03bc\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/yi=\\u0393\\u03af\\u03bd\\u03c4\\u03b9\\u03c2\n-LocaleNames\/el\/zh=\\u039a\\u03b9\\u03bd\\u03b5\\u03b6\\u03b9\\u03ba\\u03ac\n-LocaleNames\/el\/AD=\\u0391\\u03bd\\u03b4\\u03cc\\u03c1\\u03b1\n-LocaleNames\/el\/AE=\\u0397\\u03bd\\u03c9\\u03bc\\u03ad\\u03bd\\u03b1 \\u0391\\u03c1\\u03b1\\u03b2\\u03b9\\u03ba\\u03ac \\u0395\\u03bc\\u03b9\\u03c1\\u03ac\\u03c4\\u03b1\n-LocaleNames\/el\/AF=\\u0391\\u03c6\\u03b3\\u03b1\\u03bd\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el\/AG=\\u0391\\u03bd\\u03c4\\u03af\\u03b3\\u03ba\\u03bf\\u03c5\\u03b1 \\u03ba\\u03b1\\u03b9 \\u039c\\u03c0\\u03b1\\u03c1\\u03bc\\u03c0\\u03bf\\u03cd\\u03bd\\u03c4\\u03b1\n-LocaleNames\/el\/AI=\\u0391\\u03bd\\u03b3\\u03ba\\u03bf\\u03c5\\u03af\\u03bb\\u03b1\n-LocaleNames\/el\/AL=\\u0391\\u03bb\\u03b2\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/AM=\\u0391\\u03c1\\u03bc\\u03b5\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/AN=\\u039f\\u03bb\\u03bb\\u03b1\\u03bd\\u03b4\\u03b9\\u03ba\\u03ad\\u03c2 \\u0391\\u03bd\\u03c4\\u03af\\u03bb\\u03bb\\u03b5\\u03c2\n-LocaleNames\/el\/AO=\\u0391\\u03b3\\u03ba\\u03cc\\u03bb\\u03b1\n-LocaleNames\/el\/AQ=\\u0391\\u03bd\\u03c4\\u03b1\\u03c1\\u03ba\\u03c4\\u03b9\\u03ba\\u03ae\n-LocaleNames\/el\/AR=\\u0391\\u03c1\\u03b3\\u03b5\\u03bd\\u03c4\\u03b9\\u03bd\\u03ae\n-LocaleNames\/el\/AS=\\u0391\\u03bc\\u03b5\\u03c1\\u03b9\\u03ba\\u03b1\\u03bd\\u03b9\\u03ba\\u03ae \\u03a3\\u03b1\\u03bc\\u03cc\\u03b1\n-LocaleNames\/el\/AT=\\u0391\\u03c5\\u03c3\\u03c4\\u03c1\\u03af\\u03b1\n-LocaleNames\/el\/AU=\\u0391\\u03c5\\u03c3\\u03c4\\u03c1\\u03b1\\u03bb\\u03af\\u03b1\n-LocaleNames\/el\/AW=\\u0391\\u03c1\\u03bf\\u03cd\\u03bc\\u03c0\\u03b1\n-LocaleNames\/el\/AX=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u038c\\u03bb\\u03b1\\u03bd\\u03c4\n-LocaleNames\/el\/AZ=\\u0391\\u03b6\\u03b5\\u03c1\\u03bc\\u03c0\\u03b1\\u03ca\\u03c4\\u03b6\\u03ac\\u03bd\n-LocaleNames\/el\/BA=\\u0392\\u03bf\\u03c3\\u03bd\\u03af\\u03b1 - \\u0395\\u03c1\\u03b6\\u03b5\\u03b3\\u03bf\\u03b2\\u03af\\u03bd\\u03b7\n-LocaleNames\/el\/BB=\\u039c\\u03c0\\u03b1\\u03c1\\u03bc\\u03c0\\u03ad\\u03b9\\u03bd\\u03c4\\u03bf\\u03c2\n-LocaleNames\/el\/BD=\\u039c\\u03c0\\u03b1\\u03bd\\u03b3\\u03ba\\u03bb\\u03b1\\u03bd\\u03c4\\u03ad\\u03c2\n-LocaleNames\/el\/BE=\\u0392\\u03ad\\u03bb\\u03b3\\u03b9\\u03bf\n-LocaleNames\/el\/BF=\\u039c\\u03c0\\u03bf\\u03c5\\u03c1\\u03ba\\u03af\\u03bd\\u03b1 \\u03a6\\u03ac\\u03c3\\u03bf\n-LocaleNames\/el\/BG=\\u0392\\u03bf\\u03c5\\u03bb\\u03b3\\u03b1\\u03c1\\u03af\\u03b1\n-LocaleNames\/el\/BH=\\u039c\\u03c0\\u03b1\\u03c7\\u03c1\\u03ad\\u03b9\\u03bd\n-LocaleNames\/el\/BI=\\u039c\\u03c0\\u03bf\\u03c5\\u03c1\\u03bf\\u03cd\\u03bd\\u03c4\\u03b9\n-LocaleNames\/el\/BJ=\\u039c\\u03c0\\u03b5\\u03bd\\u03af\\u03bd\n-LocaleNames\/el\/BM=\\u0392\\u03b5\\u03c1\\u03bc\\u03bf\\u03cd\\u03b4\\u03b5\\u03c2\n-LocaleNames\/el\/BN=\\u039c\\u03c0\\u03c1\\u03bf\\u03c5\\u03bd\\u03ad\\u03b9\n-LocaleNames\/el\/BO=\\u0392\\u03bf\\u03bb\\u03b9\\u03b2\\u03af\\u03b1\n-LocaleNames\/el\/BR=\\u0392\\u03c1\\u03b1\\u03b6\\u03b9\\u03bb\\u03af\\u03b1\n-LocaleNames\/el\/BS=\\u039c\\u03c0\\u03b1\\u03c7\\u03ac\\u03bc\\u03b5\\u03c2\n-LocaleNames\/el\/BT=\\u039c\\u03c0\\u03bf\\u03c5\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el\/BV=\\u039d\\u03ae\\u03c3\\u03bf\\u03c2 \\u039c\\u03c0\\u03bf\\u03c5\\u03b2\\u03ad\n-LocaleNames\/el\/BW=\\u039c\\u03c0\\u03bf\\u03c4\\u03c3\\u03bf\\u03c5\\u03ac\\u03bd\\u03b1\n-LocaleNames\/el\/BY=\\u039b\\u03b5\\u03c5\\u03ba\\u03bf\\u03c1\\u03c9\\u03c3\\u03af\\u03b1\n-LocaleNames\/el\/BZ=\\u039c\\u03c0\\u03b5\\u03bb\\u03af\\u03b6\n-LocaleNames\/el\/CA=\\u039a\\u03b1\\u03bd\\u03b1\\u03b4\\u03ac\\u03c2\n-LocaleNames\/el\/CC=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u039a\\u03cc\\u03ba\\u03bf\\u03c2 (\\u039a\\u03af\\u03bb\\u03b9\\u03bd\\u03b3\\u03ba)\n-LocaleNames\/el\/CD=\\u039a\\u03bf\\u03bd\\u03b3\\u03ba\\u03cc - \\u039a\\u03b9\\u03bd\\u03c3\\u03ac\\u03c3\\u03b1\n-LocaleNames\/el\/CF=\\u039a\\u03b5\\u03bd\\u03c4\\u03c1\\u03bf\\u03b1\\u03c6\\u03c1\\u03b9\\u03ba\\u03b1\\u03bd\\u03b9\\u03ba\\u03ae \\u0394\\u03b7\\u03bc\\u03bf\\u03ba\\u03c1\\u03b1\\u03c4\\u03af\\u03b1\n-LocaleNames\/el\/CG=\\u039a\\u03bf\\u03bd\\u03b3\\u03ba\\u03cc - \\u039c\\u03c0\\u03c1\\u03b1\\u03b6\\u03b1\\u03b2\\u03af\\u03bb\n-LocaleNames\/el\/CH=\\u0395\\u03bb\\u03b2\\u03b5\\u03c4\\u03af\\u03b1\n-LocaleNames\/el\/CI=\\u0391\\u03ba\\u03c4\\u03ae \\u0395\\u03bb\\u03b5\\u03c6\\u03b1\\u03bd\\u03c4\\u03bf\\u03c3\\u03c4\\u03bf\\u03cd\n-LocaleNames\/el\/CK=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u039a\\u03bf\\u03c5\\u03ba\n-LocaleNames\/el\/CL=\\u03a7\\u03b9\\u03bb\\u03ae\n-LocaleNames\/el\/CM=\\u039a\\u03b1\\u03bc\\u03b5\\u03c1\\u03bf\\u03cd\\u03bd\n-LocaleNames\/el\/CN=\\u039a\\u03af\\u03bd\\u03b1\n-LocaleNames\/el\/CO=\\u039a\\u03bf\\u03bb\\u03bf\\u03bc\\u03b2\\u03af\\u03b1\n-LocaleNames\/el\/CR=\\u039a\\u03cc\\u03c3\\u03c4\\u03b1 \\u03a1\\u03af\\u03ba\\u03b1\n-LocaleNames\/el\/CS=\\u03a3\\u03b5\\u03c1\\u03b2\\u03af\\u03b1 \\u03ba\\u03b1\\u03b9 \\u039c\\u03b1\\u03c5\\u03c1\\u03bf\\u03b2\\u03bf\\u03cd\\u03bd\\u03b9\\u03bf\n-LocaleNames\/el\/CU=\\u039a\\u03bf\\u03cd\\u03b2\\u03b1\n-LocaleNames\/el\/CV=\\u03a0\\u03c1\\u03ac\\u03c3\\u03b9\\u03bd\\u03bf \\u0391\\u03ba\\u03c1\\u03c9\\u03c4\\u03ae\\u03c1\\u03b9\\u03bf\n-LocaleNames\/el\/CX=\\u039d\\u03ae\\u03c3\\u03bf\\u03c2 \\u03c4\\u03c9\\u03bd \\u03a7\\u03c1\\u03b9\\u03c3\\u03c4\\u03bf\\u03c5\\u03b3\\u03ad\\u03bd\\u03bd\\u03c9\\u03bd\n-LocaleNames\/el\/CY=\\u039a\\u03cd\\u03c0\\u03c1\\u03bf\\u03c2\n-LocaleNames\/el\/CZ=\\u03a4\\u03c3\\u03b5\\u03c7\\u03af\\u03b1\n-LocaleNames\/el\/DE=\\u0393\\u03b5\\u03c1\\u03bc\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/DJ=\\u03a4\\u03b6\\u03b9\\u03bc\\u03c0\\u03bf\\u03c5\\u03c4\\u03af\n-LocaleNames\/el\/DK=\\u0394\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/DM=\\u039d\\u03c4\\u03bf\\u03bc\\u03af\\u03bd\\u03b9\\u03ba\\u03b1\n-LocaleNames\/el\/DO=\\u0394\\u03bf\\u03bc\\u03b9\\u03bd\\u03b9\\u03ba\\u03b1\\u03bd\\u03ae \\u0394\\u03b7\\u03bc\\u03bf\\u03ba\\u03c1\\u03b1\\u03c4\\u03af\\u03b1\n-LocaleNames\/el\/DZ=\\u0391\\u03bb\\u03b3\\u03b5\\u03c1\\u03af\\u03b1\n-LocaleNames\/el\/EC=\\u0399\\u03c3\\u03b7\\u03bc\\u03b5\\u03c1\\u03b9\\u03bd\\u03cc\\u03c2\n-LocaleNames\/el\/EE=\\u0395\\u03c3\\u03b8\\u03bf\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/EG=\\u0391\\u03af\\u03b3\\u03c5\\u03c0\\u03c4\\u03bf\\u03c2\n-LocaleNames\/el\/EH=\\u0394\\u03c5\\u03c4\\u03b9\\u03ba\\u03ae \\u03a3\\u03b1\\u03c7\\u03ac\\u03c1\\u03b1\n-LocaleNames\/el\/ER=\\u0395\\u03c1\\u03c5\\u03b8\\u03c1\\u03b1\\u03af\\u03b1\n-LocaleNames\/el\/ES=\\u0399\\u03c3\\u03c0\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/ET=\\u0391\\u03b9\\u03b8\\u03b9\\u03bf\\u03c0\\u03af\\u03b1\n-LocaleNames\/el\/FI=\\u03a6\\u03b9\\u03bd\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el\/FJ=\\u03a6\\u03af\\u03c4\\u03b6\\u03b9\n-LocaleNames\/el\/FK=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a6\\u03cc\\u03ba\\u03bb\\u03b1\\u03bd\\u03c4\n-LocaleNames\/el\/FM=\\u039c\\u03b9\\u03ba\\u03c1\\u03bf\\u03bd\\u03b7\\u03c3\\u03af\\u03b1\n-LocaleNames\/el\/FO=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a6\\u03b5\\u03c1\\u03cc\\u03b5\\u03c2\n-LocaleNames\/el\/FR=\\u0393\\u03b1\\u03bb\\u03bb\\u03af\\u03b1\n-LocaleNames\/el\/GA=\\u0393\\u03ba\\u03b1\\u03bc\\u03c0\\u03cc\\u03bd\n-LocaleNames\/el\/GB=\\u0397\\u03bd\\u03c9\\u03bc\\u03ad\\u03bd\\u03bf \\u0392\\u03b1\\u03c3\\u03af\\u03bb\\u03b5\\u03b9\\u03bf\n-LocaleNames\/el\/GD=\\u0393\\u03c1\\u03b5\\u03bd\\u03ac\\u03b4\\u03b1\n-LocaleNames\/el\/GE=\\u0393\\u03b5\\u03c9\\u03c1\\u03b3\\u03af\\u03b1\n-LocaleNames\/el\/GF=\\u0393\\u03b1\\u03bb\\u03bb\\u03b9\\u03ba\\u03ae \\u0393\\u03bf\\u03c5\\u03b9\\u03ac\\u03bd\\u03b1\n-LocaleNames\/el\/GH=\\u0393\\u03ba\\u03ac\\u03bd\\u03b1\n-LocaleNames\/el\/GI=\\u0393\\u03b9\\u03b2\\u03c1\\u03b1\\u03bb\\u03c4\\u03ac\\u03c1\n-LocaleNames\/el\/GL=\\u0393\\u03c1\\u03bf\\u03b9\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el\/GM=\\u0393\\u03ba\\u03ac\\u03bc\\u03c0\\u03b9\\u03b1\n-LocaleNames\/el\/GN=\\u0393\\u03bf\\u03c5\\u03b9\\u03bd\\u03ad\\u03b1\n-LocaleNames\/el\/GP=\\u0393\\u03bf\\u03c5\\u03b1\\u03b4\\u03b5\\u03bb\\u03bf\\u03cd\\u03c0\\u03b7\n-LocaleNames\/el\/GQ=\\u0399\\u03c3\\u03b7\\u03bc\\u03b5\\u03c1\\u03b9\\u03bd\\u03ae \\u0393\\u03bf\\u03c5\\u03b9\\u03bd\\u03ad\\u03b1\n-LocaleNames\/el\/GS=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u039d\\u03cc\\u03c4\\u03b9\\u03b1 \\u0393\\u03b5\\u03c9\\u03c1\\u03b3\\u03af\\u03b1 \\u03ba\\u03b1\\u03b9 \\u039d\\u03cc\\u03c4\\u03b9\\u03b5\\u03c2 \\u03a3\\u03ac\\u03bd\\u03c4\\u03bf\\u03c5\\u03b9\\u03c4\\u03c2\n-LocaleNames\/el\/GT=\\u0393\\u03bf\\u03c5\\u03b1\\u03c4\\u03b5\\u03bc\\u03ac\\u03bb\\u03b1\n-LocaleNames\/el\/GU=\\u0393\\u03ba\\u03bf\\u03c5\\u03ac\\u03bc\n-LocaleNames\/el\/GW=\\u0393\\u03bf\\u03c5\\u03b9\\u03bd\\u03ad\\u03b1 \\u039c\\u03c0\\u03b9\\u03c3\\u03ac\\u03bf\\u03c5\n-LocaleNames\/el\/GY=\\u0393\\u03bf\\u03c5\\u03b9\\u03ac\\u03bd\\u03b1\n-LocaleNames\/el\/HK=\\u03a7\\u03bf\\u03bd\\u03b3\\u03ba \\u039a\\u03bf\\u03bd\\u03b3\\u03ba \\u0395\\u0394\\u03a0 \\u039a\\u03af\\u03bd\\u03b1\\u03c2\n-LocaleNames\/el\/HM=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a7\\u03b5\\u03c1\\u03bd\\u03c4 \\u03ba\\u03b1\\u03b9 \\u039c\\u03b1\\u03ba\\u03bd\\u03c4\\u03cc\\u03bd\\u03b1\\u03bb\\u03bd\\u03c4\n-LocaleNames\/el\/HN=\\u039f\\u03bd\\u03b4\\u03bf\\u03cd\\u03c1\\u03b1\n-LocaleNames\/el\/HR=\\u039a\\u03c1\\u03bf\\u03b1\\u03c4\\u03af\\u03b1\n-LocaleNames\/el\/HT=\\u0391\\u03ca\\u03c4\\u03ae\n-LocaleNames\/el\/HU=\\u039f\\u03c5\\u03b3\\u03b3\\u03b1\\u03c1\\u03af\\u03b1\n-LocaleNames\/el\/ID=\\u0399\\u03bd\\u03b4\\u03bf\\u03bd\\u03b7\\u03c3\\u03af\\u03b1\n-LocaleNames\/el\/IE=\\u0399\\u03c1\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el\/IL=\\u0399\\u03c3\\u03c1\\u03b1\\u03ae\\u03bb\n-LocaleNames\/el\/IN=\\u0399\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el\/IO=\\u0392\\u03c1\\u03b5\\u03c4\\u03b1\\u03bd\\u03b9\\u03ba\\u03ac \\u0395\\u03b4\\u03ac\\u03c6\\u03b7 \\u0399\\u03bd\\u03b4\\u03b9\\u03ba\\u03bf\\u03cd \\u03a9\\u03ba\\u03b5\\u03b1\\u03bd\\u03bf\\u03cd\n-LocaleNames\/el\/IQ=\\u0399\\u03c1\\u03ac\\u03ba\n-LocaleNames\/el\/IR=\\u0399\\u03c1\\u03ac\\u03bd\n-LocaleNames\/el\/IS=\\u0399\\u03c3\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el\/IT=\\u0399\\u03c4\\u03b1\\u03bb\\u03af\\u03b1\n-LocaleNames\/el\/JM=\\u03a4\\u03b6\\u03b1\\u03bc\\u03ac\\u03b9\\u03ba\\u03b1\n-LocaleNames\/el\/JO=\\u0399\\u03bf\\u03c1\\u03b4\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/JP=\\u0399\\u03b1\\u03c0\\u03c9\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/KE=\\u039a\\u03ad\\u03bd\\u03c5\\u03b1\n-LocaleNames\/el\/KG=\\u039a\\u03b9\\u03c1\\u03b3\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el\/KH=\\u039a\\u03b1\\u03bc\\u03c0\\u03cc\\u03c4\\u03b6\\u03b7\n-LocaleNames\/el\/KI=\\u039a\\u03b9\\u03c1\\u03b9\\u03bc\\u03c0\\u03ac\\u03c4\\u03b9\n-LocaleNames\/el\/KM=\\u039a\\u03bf\\u03bc\\u03cc\\u03c1\\u03b5\\u03c2\n-LocaleNames\/el\/KN=\\u03a3\\u03b5\\u03bd \\u039a\\u03b9\\u03c4\\u03c2 \\u03ba\\u03b1\\u03b9 \\u039d\\u03ad\\u03b2\\u03b9\\u03c2\n-LocaleNames\/el\/KP=\\u0392\\u03cc\\u03c1\\u03b5\\u03b9\\u03b1 \\u039a\\u03bf\\u03c1\\u03ad\\u03b1\n-LocaleNames\/el\/KR=\\u039d\\u03cc\\u03c4\\u03b9\\u03b1 \\u039a\\u03bf\\u03c1\\u03ad\\u03b1\n-LocaleNames\/el\/KW=\\u039a\\u03bf\\u03c5\\u03b2\\u03ad\\u03b9\\u03c4\n-LocaleNames\/el\/KY=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u039a\\u03ad\\u03b9\\u03bc\\u03b1\\u03bd\n-LocaleNames\/el\/KZ=\\u039a\\u03b1\\u03b6\\u03b1\\u03ba\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el\/LA=\\u039b\\u03ac\\u03bf\\u03c2\n-LocaleNames\/el\/LB=\\u039b\\u03af\\u03b2\\u03b1\\u03bd\\u03bf\\u03c2\n-LocaleNames\/el\/LC=\\u0391\\u03b3\\u03af\\u03b1 \\u039b\\u03bf\\u03c5\\u03ba\\u03af\\u03b1\n-LocaleNames\/el\/LI=\\u039b\\u03b9\\u03c7\\u03c4\\u03b5\\u03bd\\u03c3\\u03c4\\u03ac\\u03b9\\u03bd\n-LocaleNames\/el\/LK=\\u03a3\\u03c1\\u03b9 \\u039b\\u03ac\\u03bd\\u03ba\\u03b1\n-LocaleNames\/el\/LR=\\u039b\\u03b9\\u03b2\\u03b5\\u03c1\\u03af\\u03b1\n-LocaleNames\/el\/LS=\\u039b\\u03b5\\u03c3\\u03cc\\u03c4\\u03bf\n-LocaleNames\/el\/LT=\\u039b\\u03b9\\u03b8\\u03bf\\u03c5\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/LU=\\u039b\\u03bf\\u03c5\\u03be\\u03b5\\u03bc\\u03b2\\u03bf\\u03cd\\u03c1\\u03b3\\u03bf\n-LocaleNames\/el\/LV=\\u039b\\u03b5\\u03c4\\u03bf\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/LY=\\u039b\\u03b9\\u03b2\\u03cd\\u03b7\n-LocaleNames\/el\/MA=\\u039c\\u03b1\\u03c1\\u03cc\\u03ba\\u03bf\n-LocaleNames\/el\/MC=\\u039c\\u03bf\\u03bd\\u03b1\\u03ba\\u03cc\n-LocaleNames\/el\/MD=\\u039c\\u03bf\\u03bb\\u03b4\\u03b1\\u03b2\\u03af\\u03b1\n-LocaleNames\/el\/MG=\\u039c\\u03b1\\u03b4\\u03b1\\u03b3\\u03b1\\u03c3\\u03ba\\u03ac\\u03c1\\u03b7\n-LocaleNames\/el\/MH=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u039c\\u03ac\\u03c1\\u03c3\\u03b1\\u03bb\n-LocaleNames\/el\/MK=\\u0392\\u03cc\\u03c1\\u03b5\\u03b9\\u03b1 \\u039c\\u03b1\\u03ba\\u03b5\\u03b4\\u03bf\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/ML=\\u039c\\u03ac\\u03bb\\u03b9\n-LocaleNames\/el\/MM=\\u039c\\u03b9\\u03b1\\u03bd\\u03bc\\u03ac\\u03c1 (\\u0392\\u03b9\\u03c1\\u03bc\\u03b1\\u03bd\\u03af\\u03b1)\n-LocaleNames\/el\/MN=\\u039c\\u03bf\\u03b3\\u03b3\\u03bf\\u03bb\\u03af\\u03b1\n-LocaleNames\/el\/MO=\\u039c\\u03b1\\u03ba\\u03ac\\u03bf \\u0395\\u0394\\u03a0 \\u039a\\u03af\\u03bd\\u03b1\\u03c2\n-LocaleNames\/el\/MP=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u0392\\u03cc\\u03c1\\u03b5\\u03b9\\u03b5\\u03c2 \\u039c\\u03b1\\u03c1\\u03b9\\u03ac\\u03bd\\u03b5\\u03c2\n-LocaleNames\/el\/MQ=\\u039c\\u03b1\\u03c1\\u03c4\\u03b9\\u03bd\\u03af\\u03ba\\u03b1\n-LocaleNames\/el\/MR=\\u039c\\u03b1\\u03c5\\u03c1\\u03b9\\u03c4\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/MS=\\u039c\\u03bf\\u03bd\\u03c3\\u03b5\\u03c1\\u03ac\\u03c4\n-LocaleNames\/el\/MT=\\u039c\\u03ac\\u03bb\\u03c4\\u03b1\n-LocaleNames\/el\/MU=\\u039c\\u03b1\\u03c5\\u03c1\\u03af\\u03ba\\u03b9\\u03bf\\u03c2\n-LocaleNames\/el\/MV=\\u039c\\u03b1\\u03bb\\u03b4\\u03af\\u03b2\\u03b5\\u03c2\n-LocaleNames\/el\/MW=\\u039c\\u03b1\\u03bb\\u03ac\\u03bf\\u03c5\\u03b9\n-LocaleNames\/el\/MX=\\u039c\\u03b5\\u03be\\u03b9\\u03ba\\u03cc\n-LocaleNames\/el\/MY=\\u039c\\u03b1\\u03bb\\u03b1\\u03b9\\u03c3\\u03af\\u03b1\n-LocaleNames\/el\/MZ=\\u039c\\u03bf\\u03b6\\u03b1\\u03bc\\u03b2\\u03af\\u03ba\\u03b7\n-LocaleNames\/el\/NA=\\u039d\\u03b1\\u03bc\\u03af\\u03bc\\u03c0\\u03b9\\u03b1\n-LocaleNames\/el\/NC=\\u039d\\u03ad\\u03b1 \\u039a\\u03b1\\u03bb\\u03b7\\u03b4\\u03bf\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/NE=\\u039d\\u03af\\u03b3\\u03b7\\u03c1\\u03b1\\u03c2\n-LocaleNames\/el\/NF=\\u039d\\u03ae\\u03c3\\u03bf\\u03c2 \\u039d\\u03cc\\u03c1\\u03c6\\u03bf\\u03bb\\u03ba\n-LocaleNames\/el\/NG=\\u039d\\u03b9\\u03b3\\u03b7\\u03c1\\u03af\\u03b1\n-LocaleNames\/el\/NI=\\u039d\\u03b9\\u03ba\\u03b1\\u03c1\\u03ac\\u03b3\\u03bf\\u03c5\\u03b1\n-LocaleNames\/el\/NL=\\u039f\\u03bb\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el\/NO=\\u039d\\u03bf\\u03c1\\u03b2\\u03b7\\u03b3\\u03af\\u03b1\n-LocaleNames\/el\/NP=\\u039d\\u03b5\\u03c0\\u03ac\\u03bb\n-LocaleNames\/el\/NR=\\u039d\\u03b1\\u03bf\\u03c5\\u03c1\\u03bf\\u03cd\n-LocaleNames\/el\/NU=\\u039d\\u03b9\\u03bf\\u03cd\\u03b5\n-LocaleNames\/el\/NZ=\\u039d\\u03ad\\u03b1 \\u0396\\u03b7\\u03bb\\u03b1\\u03bd\\u03b4\\u03af\\u03b1\n-LocaleNames\/el\/OM=\\u039f\\u03bc\\u03ac\\u03bd\n-LocaleNames\/el\/PA=\\u03a0\\u03b1\\u03bd\\u03b1\\u03bc\\u03ac\\u03c2\n-LocaleNames\/el\/PE=\\u03a0\\u03b5\\u03c1\\u03bf\\u03cd\n-LocaleNames\/el\/PF=\\u0393\\u03b1\\u03bb\\u03bb\\u03b9\\u03ba\\u03ae \\u03a0\\u03bf\\u03bb\\u03c5\\u03bd\\u03b7\\u03c3\\u03af\\u03b1\n-LocaleNames\/el\/PG=\\u03a0\\u03b1\\u03c0\\u03bf\\u03cd\\u03b1 \\u039d\\u03ad\\u03b1 \\u0393\\u03bf\\u03c5\\u03b9\\u03bd\\u03ad\\u03b1\n-LocaleNames\/el\/PH=\\u03a6\\u03b9\\u03bb\\u03b9\\u03c0\\u03c0\\u03af\\u03bd\\u03b5\\u03c2\n-LocaleNames\/el\/PK=\\u03a0\\u03b1\\u03ba\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el\/PL=\\u03a0\\u03bf\\u03bb\\u03c9\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/PM=\\u03a3\\u03b5\\u03bd \\u03a0\\u03b9\\u03b5\\u03c1 \\u03ba\\u03b1\\u03b9 \\u039c\\u03b9\\u03ba\\u03b5\\u03bb\\u03cc\\u03bd\n-LocaleNames\/el\/PN=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a0\\u03af\\u03c4\\u03ba\\u03b5\\u03c1\\u03bd\n-LocaleNames\/el\/PR=\\u03a0\\u03bf\\u03c5\\u03ad\\u03c1\\u03c4\\u03bf \\u03a1\\u03af\\u03ba\\u03bf\n-LocaleNames\/el\/PS=\\u03a0\\u03b1\\u03bb\\u03b1\\u03b9\\u03c3\\u03c4\\u03b9\\u03bd\\u03b9\\u03b1\\u03ba\\u03ac \\u0395\\u03b4\\u03ac\\u03c6\\u03b7\n-LocaleNames\/el\/PT=\\u03a0\\u03bf\\u03c1\\u03c4\\u03bf\\u03b3\\u03b1\\u03bb\\u03af\\u03b1\n-LocaleNames\/el\/PW=\\u03a0\\u03b1\\u03bb\\u03ac\\u03bf\\u03c5\n-LocaleNames\/el\/PY=\\u03a0\\u03b1\\u03c1\\u03b1\\u03b3\\u03bf\\u03c5\\u03ac\\u03b7\n-LocaleNames\/el\/QA=\\u039a\\u03b1\\u03c4\\u03ac\\u03c1\n-LocaleNames\/el\/RE=\\u03a1\\u03b5\\u03ca\\u03bd\\u03b9\\u03cc\\u03bd\n-LocaleNames\/el\/RO=\\u03a1\\u03bf\\u03c5\\u03bc\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/RU=\\u03a1\\u03c9\\u03c3\\u03af\\u03b1\n-LocaleNames\/el\/RW=\\u03a1\\u03bf\\u03c5\\u03ac\\u03bd\\u03c4\\u03b1\n-LocaleNames\/el\/SA=\\u03a3\\u03b1\\u03bf\\u03c5\\u03b4\\u03b9\\u03ba\\u03ae \\u0391\\u03c1\\u03b1\\u03b2\\u03af\\u03b1\n-LocaleNames\/el\/SB=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a3\\u03bf\\u03bb\\u03bf\\u03bc\\u03ce\\u03bd\\u03c4\\u03bf\\u03c2\n-LocaleNames\/el\/SC=\\u03a3\\u03b5\\u03cb\\u03c7\\u03ad\\u03bb\\u03bb\\u03b5\\u03c2\n-LocaleNames\/el\/SD=\\u03a3\\u03bf\\u03c5\\u03b4\\u03ac\\u03bd\n-LocaleNames\/el\/SE=\\u03a3\\u03bf\\u03c5\\u03b7\\u03b4\\u03af\\u03b1\n-LocaleNames\/el\/SG=\\u03a3\\u03b9\\u03b3\\u03ba\\u03b1\\u03c0\\u03bf\\u03cd\\u03c1\\u03b7\n-LocaleNames\/el\/SH=\\u0391\\u03b3\\u03af\\u03b1 \\u0395\\u03bb\\u03ad\\u03bd\\u03b7\n-LocaleNames\/el\/SI=\\u03a3\\u03bb\\u03bf\\u03b2\\u03b5\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/SJ=\\u03a3\\u03b2\\u03ac\\u03bb\\u03bc\\u03c0\\u03b1\\u03c1\\u03bd\\u03c4 \\u03ba\\u03b1\\u03b9 \\u0393\\u03b9\\u03b1\\u03bd \\u039c\\u03b1\\u03b3\\u03b9\\u03ad\\u03bd\n-LocaleNames\/el\/SK=\\u03a3\\u03bb\\u03bf\\u03b2\\u03b1\\u03ba\\u03af\\u03b1\n-LocaleNames\/el\/SL=\\u03a3\\u03b9\\u03ad\\u03c1\\u03b1 \\u039b\\u03b5\\u03cc\\u03bd\\u03b5\n-LocaleNames\/el\/SM=\\u0386\\u03b3\\u03b9\\u03bf\\u03c2 \\u039c\\u03b1\\u03c1\\u03af\\u03bd\\u03bf\\u03c2\n-LocaleNames\/el\/SN=\\u03a3\\u03b5\\u03bd\\u03b5\\u03b3\\u03ac\\u03bb\\u03b7\n-LocaleNames\/el\/SO=\\u03a3\\u03bf\\u03bc\\u03b1\\u03bb\\u03af\\u03b1\n-LocaleNames\/el\/SR=\\u03a3\\u03bf\\u03c5\\u03c1\\u03b9\\u03bd\\u03ac\\u03bc\n-LocaleNames\/el\/ST=\\u03a3\\u03ac\\u03bf \\u03a4\\u03bf\\u03bc\\u03ad \\u03ba\\u03b1\\u03b9 \\u03a0\\u03c1\\u03af\\u03bd\\u03c3\\u03b9\\u03c0\\u03b5\n-LocaleNames\/el\/SV=\\u0395\\u03bb \\u03a3\\u03b1\\u03bb\\u03b2\\u03b1\\u03b4\\u03cc\\u03c1\n-LocaleNames\/el\/SY=\\u03a3\\u03c5\\u03c1\\u03af\\u03b1\n-LocaleNames\/el\/TC=\\u039d\\u03ae\\u03c3\\u03bf\\u03b9 \\u03a4\\u03b5\\u03c1\\u03ba\\u03c2 \\u03ba\\u03b1\\u03b9 \\u039a\\u03ac\\u03b9\\u03ba\\u03bf\\u03c2\n-LocaleNames\/el\/TD=\\u03a4\\u03c3\\u03b1\\u03bd\\u03c4\n-LocaleNames\/el\/TF=\\u0393\\u03b1\\u03bb\\u03bb\\u03b9\\u03ba\\u03ac \\u039d\\u03cc\\u03c4\\u03b9\\u03b1 \\u0395\\u03b4\\u03ac\\u03c6\\u03b7\n-LocaleNames\/el\/TG=\\u03a4\\u03cc\\u03b3\\u03ba\\u03bf\n-LocaleNames\/el\/TH=\\u03a4\\u03b1\\u03ca\\u03bb\\u03ac\\u03bd\\u03b4\\u03b7\n-LocaleNames\/el\/TJ=\\u03a4\\u03b1\\u03c4\\u03b6\\u03b9\\u03ba\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el\/TK=\\u03a4\\u03bf\\u03ba\\u03b5\\u03bb\\u03ac\\u03bf\\u03c5\n-LocaleNames\/el\/TL=\\u03a4\\u03b9\\u03bc\\u03cc\\u03c1-\\u039b\\u03ad\\u03c3\\u03c4\\u03b5\n-LocaleNames\/el\/TM=\\u03a4\\u03bf\\u03c5\\u03c1\\u03ba\\u03bc\\u03b5\\u03bd\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el\/TN=\\u03a4\\u03c5\\u03bd\\u03b7\\u03c3\\u03af\\u03b1\n-LocaleNames\/el\/TO=\\u03a4\\u03cc\\u03bd\\u03b3\\u03ba\\u03b1\n-LocaleNames\/el\/TR=\\u03a4\\u03bf\\u03c5\\u03c1\\u03ba\\u03af\\u03b1\n-LocaleNames\/el\/TT=\\u03a4\\u03c1\\u03b9\\u03bd\\u03b9\\u03bd\\u03c4\\u03ac\\u03bd\\u03c4 \\u03ba\\u03b1\\u03b9 \\u03a4\\u03bf\\u03bc\\u03c0\\u03ac\\u03b3\\u03ba\\u03bf\n-LocaleNames\/el\/TV=\\u03a4\\u03bf\\u03c5\\u03b2\\u03b1\\u03bb\\u03bf\\u03cd\n-LocaleNames\/el\/TW=\\u03a4\\u03b1\\u03ca\\u03b2\\u03ac\\u03bd\n-LocaleNames\/el\/TZ=\\u03a4\\u03b1\\u03bd\\u03b6\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/UA=\\u039f\\u03c5\\u03ba\\u03c1\\u03b1\\u03bd\\u03af\\u03b1\n-LocaleNames\/el\/UG=\\u039f\\u03c5\\u03b3\\u03ba\\u03ac\\u03bd\\u03c4\\u03b1\n-LocaleNames\/el\/UM=\\u0391\\u03c0\\u03bf\\u03bc\\u03b1\\u03ba\\u03c1\\u03c5\\u03c3\\u03bc\\u03ad\\u03bd\\u03b5\\u03c2 \\u039d\\u03b7\\u03c3\\u03af\\u03b4\\u03b5\\u03c2 \\u0397\\u03a0\\u0391\n-LocaleNames\/el\/US=\\u0397\\u03bd\\u03c9\\u03bc\\u03ad\\u03bd\\u03b5\\u03c2 \\u03a0\\u03bf\\u03bb\\u03b9\\u03c4\\u03b5\\u03af\\u03b5\\u03c2\n-LocaleNames\/el\/UY=\\u039f\\u03c5\\u03c1\\u03bf\\u03c5\\u03b3\\u03bf\\u03c5\\u03ac\\u03b7\n-LocaleNames\/el\/UZ=\\u039f\\u03c5\\u03b6\\u03bc\\u03c0\\u03b5\\u03ba\\u03b9\\u03c3\\u03c4\\u03ac\\u03bd\n-LocaleNames\/el\/VA=\\u0392\\u03b1\\u03c4\\u03b9\\u03ba\\u03b1\\u03bd\\u03cc\n-LocaleNames\/el\/VC=\\u0386\\u03b3\\u03b9\\u03bf\\u03c2 \\u0392\\u03b9\\u03ba\\u03ad\\u03bd\\u03c4\\u03b9\\u03bf\\u03c2 \\u03ba\\u03b1\\u03b9 \\u0393\\u03c1\\u03b5\\u03bd\\u03b1\\u03b4\\u03af\\u03bd\\u03b5\\u03c2\n-LocaleNames\/el\/VE=\\u0392\\u03b5\\u03bd\\u03b5\\u03b6\\u03bf\\u03c5\\u03ad\\u03bb\\u03b1\n-LocaleNames\/el\/VG=\\u0392\\u03c1\\u03b5\\u03c4\\u03b1\\u03bd\\u03b9\\u03ba\\u03ad\\u03c2 \\u03a0\\u03b1\\u03c1\\u03b8\\u03ad\\u03bd\\u03b5\\u03c2 \\u039d\\u03ae\\u03c3\\u03bf\\u03b9\n-LocaleNames\/el\/VI=\\u0391\\u03bc\\u03b5\\u03c1\\u03b9\\u03ba\\u03b1\\u03bd\\u03b9\\u03ba\\u03ad\\u03c2 \\u03a0\\u03b1\\u03c1\\u03b8\\u03ad\\u03bd\\u03b5\\u03c2 \\u039d\\u03ae\\u03c3\\u03bf\\u03b9\n-LocaleNames\/el\/VN=\\u0392\\u03b9\\u03b5\\u03c4\\u03bd\\u03ac\\u03bc\n-LocaleNames\/el\/VU=\\u0392\\u03b1\\u03bd\\u03bf\\u03c5\\u03ac\\u03c4\\u03bf\\u03c5\n-LocaleNames\/el\/WF=\\u0393\\u03bf\\u03c5\\u03ac\\u03bb\\u03b9\\u03c2 \\u03ba\\u03b1\\u03b9 \\u03a6\\u03bf\\u03c5\\u03c4\\u03bf\\u03cd\\u03bd\\u03b1\n-LocaleNames\/el\/WS=\\u03a3\\u03b1\\u03bc\\u03cc\\u03b1\n-LocaleNames\/el\/YE=\\u03a5\\u03b5\\u03bc\\u03ad\\u03bd\\u03b7\n-LocaleNames\/el\/YT=\\u039c\\u03b1\\u03b3\\u03b9\\u03cc\\u03c4\n-LocaleNames\/el\/ZA=\\u039d\\u03cc\\u03c4\\u03b9\\u03b1 \\u0391\\u03c6\\u03c1\\u03b9\\u03ba\\u03ae\n-LocaleNames\/el\/ZM=\\u0396\\u03ac\\u03bc\\u03c0\\u03b9\\u03b1\n-LocaleNames\/el\/ZW=\\u0396\\u03b9\\u03bc\\u03c0\\u03ac\\u03bc\\u03c0\\u03bf\\u03c5\\u03b5\n-LocaleNames\/en_MT\/fy=Western Frisian\n-LocaleNames\/en_MT\/gl=Galician\n-LocaleNames\/en_MT\/ps=Pashto\n-LocaleNames\/en_MT\/AX=\\u00c5land Islands\n-LocaleNames\/en_MT\/CD=Congo - Kinshasa\n-LocaleNames\/en_MT\/CG=Congo - Brazzaville\n-LocaleNames\/en_MT\/CS=Serbia And Montenegro\n-LocaleNames\/en_MT\/HK=Hong Kong SAR China\n-LocaleNames\/en_MT\/MO=Macao SAR China\n-LocaleNames\/en_PH\/fy=Western Frisian\n-LocaleNames\/en_PH\/gl=Galician\n-LocaleNames\/en_PH\/ps=Pashto\n-LocaleNames\/en_PH\/AX=\\u00c5land Islands\n-LocaleNames\/en_PH\/CD=Congo - Kinshasa\n-LocaleNames\/en_PH\/CG=Congo - Brazzaville\n-LocaleNames\/en_PH\/CS=Serbia And Montenegro\n-LocaleNames\/en_PH\/HK=Hong Kong SAR China\n-LocaleNames\/en_PH\/MO=Macao SAR China\n-LocaleNames\/en_PH\/MO=Macao SAR China\n-LocaleNames\/en_SG\/fy=Western Frisian\n-LocaleNames\/en_SG\/gl=Galician\n-LocaleNames\/en_SG\/ps=Pashto\n-LocaleNames\/en_SG\/AX=\\u00c5land Islands\n-LocaleNames\/en_SG\/CD=Congo - Kinshasa\n-LocaleNames\/en_SG\/CG=Congo - Brazzaville\n-LocaleNames\/en_SG\/CS=Serbia And Montenegro\n-LocaleNames\/en_SG\/HK=Hong Kong SAR China\n-LocaleNames\/en_SG\/MO=Macao SAR China\n-LocaleNames\/es_US\/ab=abjasio\n-LocaleNames\/es_US\/dz=dzongkha\n-LocaleNames\/es_US\/fj=fiyiano\n-LocaleNames\/es_US\/si=cingal\\u00e9s\n-LocaleNames\/es_US\/ti=tigri\\u00f1a\n-LocaleNames\/es_US\/vo=volap\\u00fck\n-LocaleNames\/es_US\/AX=Islas \\u00c5land\n-LocaleNames\/es_US\/BH=Bar\\u00e9in\n-LocaleNames\/es_US\/KG=Kirguist\\u00e1n\n-LocaleNames\/mt\/ab=Abka\\u017cjan\n-LocaleNames\/mt\/af=Afrikans\n-LocaleNames\/mt\/am=Amhariku\n-LocaleNames\/mt\/ar=G\\u0127arbi\n-LocaleNames\/mt\/av=Avarik\n-LocaleNames\/mt\/ay=Aymara\n-LocaleNames\/mt\/az=A\\u017cerbaj\\u0121ani\n-LocaleNames\/mt\/ba=Bashkir\n-LocaleNames\/mt\/be=Belarussu\n-LocaleNames\/mt\/bg=Bulgaru\n-LocaleNames\/mt\/bh=Bi\\u0127ari\n-LocaleNames\/mt\/bo=Tibetjan\n-LocaleNames\/mt\/br=Breton\n-LocaleNames\/mt\/bs=Bo\\u017cnijaku\n-LocaleNames\/mt\/ca=Katalan\n-LocaleNames\/mt\/ce=Chechen\n-LocaleNames\/mt\/ch=Chamorro\n-LocaleNames\/mt\/co=Korsiku\n-LocaleNames\/mt\/cr=Cree\n-LocaleNames\/mt\/cs=\\u010aek\n-LocaleNames\/mt\/cu=Slaviku tal-Knisja\n-LocaleNames\/mt\/cv=Chuvash\n-LocaleNames\/mt\/cy=Welsh\n-LocaleNames\/mt\/da=Dani\\u017c\n-LocaleNames\/mt\/de=\\u0120ermani\\u017c\n-LocaleNames\/mt\/dv=Divehi\n-LocaleNames\/mt\/dz=Dzongkha\n-LocaleNames\/mt\/el=Grieg\n-LocaleNames\/mt\/en=Ingli\\u017c\n-LocaleNames\/mt\/es=Spanjol\n-LocaleNames\/mt\/et=Estonjan\n-LocaleNames\/mt\/eu=Bask\n-LocaleNames\/mt\/fa=Persjan\n-LocaleNames\/mt\/ff=Fulah\n-LocaleNames\/mt\/fi=Finlandi\\u017c\n-LocaleNames\/mt\/fj=Fi\\u0121jan\n-LocaleNames\/mt\/fo=Faroese\n-LocaleNames\/mt\/fr=Fran\\u010bi\\u017c\n-LocaleNames\/mt\/fy=Frisian tal-Punent\n-LocaleNames\/mt\/ga=Irlandi\\u017c\n-LocaleNames\/mt\/gd=Galliku Sko\\u010b\\u010bi\\u017c\n-LocaleNames\/mt\/gl=Gali\\u010bjan\n-LocaleNames\/mt\/gn=Guarani\n-LocaleNames\/mt\/gu=Gujarati\n-LocaleNames\/mt\/gv=Manx\n-LocaleNames\/mt\/ha=Hausa\n-LocaleNames\/mt\/he=Ebrajk\n-LocaleNames\/mt\/hi=Hindi\n-LocaleNames\/mt\/ho=Hiri Motu\n-LocaleNames\/mt\/hr=Kroat\n-LocaleNames\/mt\/hu=Ungeri\\u017c\n-LocaleNames\/mt\/hy=Armen\n-LocaleNames\/mt\/hz=Herero\n-LocaleNames\/mt\/id=Indone\\u017cjan\n-LocaleNames\/mt\/ik=Inupjak\n-LocaleNames\/mt\/in=Indone\\u017cjan\n-LocaleNames\/mt\/is=I\\u017clandi\\u017c\n-LocaleNames\/mt\/it=Taljan\n-LocaleNames\/mt\/iu=Inuktitut\n-LocaleNames\/mt\/iw=Ebrajk\n-LocaleNames\/mt\/ja=\\u0120appuni\\u017c\n-LocaleNames\/mt\/ji=Yiddish\n-LocaleNames\/mt\/jv=\\u0120avani\\u017c\n-LocaleNames\/mt\/ka=\\u0120or\\u0121jan\n-LocaleNames\/mt\/ki=Kikuju\n-LocaleNames\/mt\/kj=Kuanyama\n-LocaleNames\/mt\/kk=Ka\\u017cak\n-LocaleNames\/mt\/kl=Kalallisut\n-LocaleNames\/mt\/km=Khmer\n-LocaleNames\/mt\/ko=Korean\n-LocaleNames\/mt\/ks=Kashmiri\n-LocaleNames\/mt\/ku=Kurd\n-LocaleNames\/mt\/kw=Korniku\n-LocaleNames\/mt\/ky=Kirgi\\u017c\n-LocaleNames\/mt\/lb=Lussemburgi\\u017c\n-LocaleNames\/mt\/ln=Lingaljan\n-LocaleNames\/mt\/lt=Litwan\n-LocaleNames\/mt\/lv=Latvjan\n-LocaleNames\/mt\/mg=Malagasy\n-LocaleNames\/mt\/mh=Marshalljani\\u017c\n-LocaleNames\/mt\/mk=Ma\\u010bedonjan\n-LocaleNames\/mt\/ml=Malayalam\n-LocaleNames\/mt\/mn=Mongoljan\n-LocaleNames\/mt\/mo=Moldavjan\n-LocaleNames\/mt\/mr=Marathi\n-LocaleNames\/mt\/ms=Malay\n-LocaleNames\/mt\/mt=Malti\n-LocaleNames\/mt\/my=Burmi\\u017c\n-LocaleNames\/mt\/na=Naurujan\n-LocaleNames\/mt\/nb=Bokmal Norve\\u0121i\\u017c\n-LocaleNames\/mt\/nd=Ndebeli tat-Tramuntana\n-LocaleNames\/mt\/ne=Nepali\\u017c\n-LocaleNames\/mt\/nl=Olandi\\u017c\n-LocaleNames\/mt\/nn=Ninorsk Norve\\u0121i\\u017c\n-LocaleNames\/mt\/no=Norve\\u0121i\\u017c\n-LocaleNames\/mt\/nr=Ndebele tan-Nofsinhar\n-LocaleNames\/mt\/nv=Navajo\n-LocaleNames\/mt\/ny=Nyanja\n-LocaleNames\/mt\/oc=O\\u010b\\u010bitan\n-LocaleNames\/mt\/oj=O\\u0121ibwa\n-LocaleNames\/mt\/om=Oromo\n-LocaleNames\/mt\/or=Odia\n-LocaleNames\/mt\/os=Ossettiku\n-LocaleNames\/mt\/pa=Punjabi\n-LocaleNames\/mt\/pl=Pollakk\n-LocaleNames\/mt\/ps=Pashto\n-LocaleNames\/mt\/pt=Portugi\\u017c\n-LocaleNames\/mt\/qu=Quechua\n-LocaleNames\/mt\/rm=Romanz\n-LocaleNames\/mt\/ro=Rumen\n-LocaleNames\/mt\/ru=Russu\n-LocaleNames\/mt\/rw=Kinjarwanda\n-LocaleNames\/mt\/sc=Sardinjan\n-LocaleNames\/mt\/sd=Sindhi\n-LocaleNames\/mt\/se=Sami tat-Tramuntana\n-LocaleNames\/mt\/si=Sinhala\n-LocaleNames\/mt\/sk=Slovakk\n-LocaleNames\/mt\/sl=Sloven\n-LocaleNames\/mt\/sm=Samoan\n-LocaleNames\/mt\/sn=Shona\n-LocaleNames\/mt\/sq=Albani\\u017c\n-LocaleNames\/mt\/sr=Serb\n-LocaleNames\/mt\/st=Soto tan-Nofsinhar\n-LocaleNames\/mt\/su=Sundani\\u017c\n-LocaleNames\/mt\/sv=\\u017bvedi\\u017c\n-LocaleNames\/mt\/sw=Swahili\n-LocaleNames\/mt\/tg=Ta\\u0121ik\n-LocaleNames\/mt\/th=Tajlandi\\u017c\n-LocaleNames\/mt\/ti=Tigrinya\n-LocaleNames\/mt\/tk=Turkmeni\n-LocaleNames\/mt\/tn=Tswana\n-LocaleNames\/mt\/to=Tongan\n-LocaleNames\/mt\/tr=Tork\n-LocaleNames\/mt\/ty=Ta\\u0127itjan\n-LocaleNames\/mt\/ug=Uyghur\n-LocaleNames\/mt\/uk=Ukren\n-LocaleNames\/mt\/uz=Uzbek\n-LocaleNames\/mt\/vi=Vjetnami\\u017c\n-LocaleNames\/mt\/vo=Volapuk\n-LocaleNames\/mt\/xh=Xhosa\n-LocaleNames\/mt\/yi=Yiddish\n-LocaleNames\/mt\/yo=Yoruba\n-LocaleNames\/mt\/za=Zhuang\n-LocaleNames\/mt\/zh=\\u010aini\\u017c\n-LocaleNames\/mt\/zu=Zulu\n-LocaleNames\/mt\/AE=l-Emirati G\\u0127arab Mag\\u0127quda\n-LocaleNames\/mt\/AF=l-Afganistan\n-LocaleNames\/mt\/AI=Anguilla\n-LocaleNames\/mt\/AL=l-Albanija\n-LocaleNames\/mt\/AM=l-Armenja\n-LocaleNames\/mt\/AN=Antilles Olandi\\u017ci\n-LocaleNames\/mt\/AQ=l-Antartika\n-LocaleNames\/mt\/AR=l-Ar\\u0121entina\n-LocaleNames\/mt\/AS=is-Samoa Amerikana\n-LocaleNames\/mt\/AT=l-Awstrija\n-LocaleNames\/mt\/AU=l-Awstralja\n-LocaleNames\/mt\/AZ=l-A\\u017cerbaj\\u0121an\n-LocaleNames\/mt\/BA=il-Bo\\u017cnija-\\u0126erzegovina\n-LocaleNames\/mt\/BD=il-Bangladesh\n-LocaleNames\/mt\/BE=il-Bel\\u0121ju\n-LocaleNames\/mt\/BG=il-Bulgarija\n-LocaleNames\/mt\/BH=il-Bahrain\n-LocaleNames\/mt\/BN=il-Brunei\n-LocaleNames\/mt\/BO=il-Bolivja\n-LocaleNames\/mt\/BR=Il-Bra\\u017cil\n-LocaleNames\/mt\/BS=il-Bahamas\n-LocaleNames\/mt\/BT=il-Bhutan\n-LocaleNames\/mt\/BY=il-Belarussja\n-LocaleNames\/mt\/BZ=il-Belize\n-LocaleNames\/mt\/CA=il-Kanada\n-LocaleNames\/mt\/CC=G\\u017cejjer Cocos (Keeling)\n-LocaleNames\/mt\/CD=ir-Repubblika Demokratika tal-Kongo\n-LocaleNames\/mt\/CF=ir-Repubblika \\u010aentru-Afrikana\n-LocaleNames\/mt\/CG=il-Kongo - Brazzaville\n-LocaleNames\/mt\/CH=l-I\\u017cvizzera\n-LocaleNames\/mt\/CI=il-Kosta tal-Avorju\n-LocaleNames\/mt\/CL=i\\u010b-\\u010aili\n-LocaleNames\/mt\/CM=il-Kamerun\n-LocaleNames\/mt\/CN=i\\u010b-\\u010aina\n-LocaleNames\/mt\/CO=il-Kolombja\n-LocaleNames\/mt\/CR=il-Costa Rica\n-LocaleNames\/mt\/CS=Serbja u Montenegro\n-LocaleNames\/mt\/CU=Kuba\n-LocaleNames\/mt\/CV=Cape Verde\n-LocaleNames\/mt\/CY=\\u010aipru\n-LocaleNames\/mt\/CZ=ir-Repubblika \\u010aeka\n-LocaleNames\/mt\/DE=il-\\u0120ermanja\n-LocaleNames\/mt\/DJ=il-Djibouti\n-LocaleNames\/mt\/DK=id-Danimarka\n-LocaleNames\/mt\/DM=Dominica\n-LocaleNames\/mt\/DO=ir-Repubblika Dominicana\n-LocaleNames\/mt\/DZ=l-Al\\u0121erija\n-LocaleNames\/mt\/EC=l-Ekwador\n-LocaleNames\/mt\/EE=l-Estonja\n-LocaleNames\/mt\/EG=l-E\\u0121ittu\n-LocaleNames\/mt\/EH=is-Sa\\u0127ara tal-Punent\n-LocaleNames\/mt\/ER=l-Eritrea\n-LocaleNames\/mt\/ES=Spanja\n-LocaleNames\/mt\/ET=l-Etjopja\n-LocaleNames\/mt\/FI=il-Finlandja\n-LocaleNames\/mt\/FJ=Fi\\u0121i\n-LocaleNames\/mt\/FM=il-Mikrone\\u017cja\n-LocaleNames\/mt\/FO=il-G\\u017cejjer Faeroe\n-LocaleNames\/mt\/FR=Franza\n-LocaleNames\/mt\/GB=ir-Renju Unit\n-LocaleNames\/mt\/GE=il-Georgia\n-LocaleNames\/mt\/GF=il-Guyana Fran\\u010bi\\u017ca\n-LocaleNames\/mt\/GH=il-Ghana\n-LocaleNames\/mt\/GL=Greenland\n-LocaleNames\/mt\/GM=il-Gambja\n-LocaleNames\/mt\/GN=il-Guinea\n-LocaleNames\/mt\/GP=Guadeloupe\n-LocaleNames\/mt\/GQ=il-Guinea Ekwatorjali\n-LocaleNames\/mt\/GR=il-Gre\\u010bja\n-LocaleNames\/mt\/GS=il-Georgia tan-Nofsinhar u l-G\\u017cejjer Sandwich tan-Nofsinhar\n-LocaleNames\/mt\/GT=il-Gwatemala\n-LocaleNames\/mt\/GU=Guam\n-LocaleNames\/mt\/GW=il-Guinea-Bissau\n-LocaleNames\/mt\/GY=il-Guyana\n-LocaleNames\/mt\/HK=ir-Re\\u0121jun Amministrattiv Spe\\u010bjali ta\\u2019 Hong Kong tar-Repubblika tal-Poplu ta\\u010b-\\u010aina\n-LocaleNames\/mt\/HM=il-G\\u017cejjer Heard u l-G\\u017cejjer McDonald\n-LocaleNames\/mt\/HN=il-Honduras\n-LocaleNames\/mt\/HR=il-Kroazja\n-LocaleNames\/mt\/HT=il-Haiti\n-LocaleNames\/mt\/HU=l-Ungerija\n-LocaleNames\/mt\/ID=l-Indone\\u017cja\n-LocaleNames\/mt\/IE=l-Irlanda\n-LocaleNames\/mt\/IL=I\\u017crael\n-LocaleNames\/mt\/IN=l-Indja\n-LocaleNames\/mt\/IS=l-I\\u017clanda\n-LocaleNames\/mt\/IT=l-Italja\n-LocaleNames\/mt\/JM=il-\\u0120amajka\n-LocaleNames\/mt\/JO=il-\\u0120ordan\n-LocaleNames\/mt\/JP=il-\\u0120appun\n-LocaleNames\/mt\/KE=il-Kenja\n-LocaleNames\/mt\/KG=il-Kirgi\\u017cistan\n-LocaleNames\/mt\/KH=il-Kambodja\n-LocaleNames\/mt\/KM=Comoros\n-LocaleNames\/mt\/KN=Saint Kitts u Nevis\n-LocaleNames\/mt\/KP=il-Korea ta\\u2019 Fuq\n-LocaleNames\/mt\/KR=il-Korea t\\u2019Isfel\n-LocaleNames\/mt\/KW=il-Kuwajt\n-LocaleNames\/mt\/KZ=il-Ka\\u017cakistan\n-LocaleNames\/mt\/LB=il-Libanu\n-LocaleNames\/mt\/LC=Saint Lucia\n-LocaleNames\/mt\/LR=il-Liberja\n-LocaleNames\/mt\/LS=il-Lesoto\n-LocaleNames\/mt\/LT=il-Litwanja\n-LocaleNames\/mt\/LU=il-Lussemburgu\n-LocaleNames\/mt\/LV=il-Latvja\n-LocaleNames\/mt\/LY=il-Libja\n-LocaleNames\/mt\/MA=il-Marokk\n-LocaleNames\/mt\/MC=Monaco\n-LocaleNames\/mt\/MD=il-Moldova\n-LocaleNames\/mt\/MG=Madagascar\n-LocaleNames\/mt\/MH=G\\u017cejjer Marshall\n-LocaleNames\/mt\/MK=il-Ma\\u010bedonja ta\\u2019 Fuq\n-LocaleNames\/mt\/MM=il-Myanmar\/Burma\n-LocaleNames\/mt\/MN=il-Mongolja\n-LocaleNames\/mt\/MO=ir-Re\\u0121jun Amministrattiv Spe\\u010bjali tal-Macao tar-Repubblika tal-Poplu ta\\u010b-\\u010aina\n-LocaleNames\/mt\/MP=\\u0120\\u017cejjer Mariana tat-Tramuntana\n-LocaleNames\/mt\/MQ=Martinique\n-LocaleNames\/mt\/MR=il-Mauritania\n-LocaleNames\/mt\/MU=Mauritius\n-LocaleNames\/mt\/MX=il-Messiku\n-LocaleNames\/mt\/MY=il-Malasja\n-LocaleNames\/mt\/MZ=il-Mozambique\n-LocaleNames\/mt\/NA=in-Namibja\n-LocaleNames\/mt\/NE=in-Ni\\u0121er\n-LocaleNames\/mt\/NG=in-Ni\\u0121erja\n-LocaleNames\/mt\/NI=in-Nikaragwa\n-LocaleNames\/mt\/NL=in-Netherlands\n-LocaleNames\/mt\/NO=in-Norve\\u0121ja\n-LocaleNames\/mt\/PF=Poline\\u017cja Fran\\u010bi\\u017ca\n-LocaleNames\/mt\/PG=Papua New Guinea\n-LocaleNames\/mt\/PH=il-Filippini\n-LocaleNames\/mt\/PL=il-Polonja\n-LocaleNames\/mt\/PM=Saint Pierre u Miquelon\n-LocaleNames\/mt\/PS=it-Territorji Palestinjani\n-LocaleNames\/mt\/PT=il-Portugall\n-LocaleNames\/mt\/PY=il-Paragwaj\n-LocaleNames\/mt\/RE=R\\u00e9union\n-LocaleNames\/mt\/RO=ir-Rumanija\n-LocaleNames\/mt\/RU=ir-Russja\n-LocaleNames\/mt\/SA=l-Arabja Sawdija\n-LocaleNames\/mt\/SE=l-I\\u017cvezja\n-LocaleNames\/mt\/SG=Singapore\n-LocaleNames\/mt\/SI=is-Slovenja\n-LocaleNames\/mt\/SJ=Svalbard u Jan Mayen\n-LocaleNames\/mt\/SK=is-Slovakkja\n-LocaleNames\/mt\/SO=is-Somalja\n-LocaleNames\/mt\/SR=is-Suriname\n-LocaleNames\/mt\/ST=S\\u00e3o Tom\\u00e9 u Pr\\u00edncipe\n-LocaleNames\/mt\/SY=is-Sirja\n-LocaleNames\/mt\/TC=il-G\\u017cejjer Turks u Caicos\n-LocaleNames\/mt\/TD=i\\u010b-Chad\n-LocaleNames\/mt\/TF=It-Territorji Fran\\u010bi\\u017ci tan-Nofsinhar\n-LocaleNames\/mt\/TH=it-Tajlandja\n-LocaleNames\/mt\/TJ=it-Ta\\u0121ikistan\n-LocaleNames\/mt\/TK=it-Tokelau\n-LocaleNames\/mt\/TL=Timor Leste\n-LocaleNames\/mt\/TN=it-Tune\\u017cija\n-LocaleNames\/mt\/TR=it-Turkija\n-LocaleNames\/mt\/TT=Trinidad u Tobago\n-LocaleNames\/mt\/TW=it-Tajwan\n-LocaleNames\/mt\/TZ=it-Tanzanija\n-LocaleNames\/mt\/UA=l-Ukrajna\n-LocaleNames\/mt\/US=l-Istati Uniti\n-LocaleNames\/mt\/UY=l-Urugwaj\n-LocaleNames\/mt\/UZ=l-U\\u017cbekistan\n-LocaleNames\/mt\/VA=l-Istat tal-Belt tal-Vatikan\n-LocaleNames\/mt\/VC=Saint Vincent u l-Grenadini\n-LocaleNames\/mt\/VE=il-Venezwela\n-LocaleNames\/mt\/VN=il-Vjetnam\n-LocaleNames\/mt\/VU=Vanuatu\n-LocaleNames\/mt\/WF=Wallis u Futuna\n-LocaleNames\/mt\/YE=il-Jemen\n-LocaleNames\/mt\/YT=Mayotte\n-LocaleNames\/mt\/ZA=l-Afrika t\\u2019Isfel\n-LocaleNames\/mt\/ZM=i\\u017c-\\u017bambja\n-LocaleNames\/mt\/ZW=i\\u017c-\\u017bimbabwe\n-LocaleNames\/sr\/ZA=\\u0408\\u0443\\u0436\\u043d\\u043e\\u0430\\u0444\\u0440\\u0438\\u0447\\u043a\\u0430 \\u0420\\u0435\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\n-LocaleNames\/zh_SG\/bo=\\u85cf\\u8bed\n-LocaleNames\/zh_SG\/gd=\\u82cf\\u683c\\u5170\\u76d6\\u5c14\\u8bed\n-LocaleNames\/zh_SG\/ho=\\u5e0c\\u91cc\\u83ab\\u56fe\\u8bed\n-LocaleNames\/zh_SG\/ia=\\u56fd\\u9645\\u8bed\n-LocaleNames\/zh_SG\/ie=\\u56fd\\u9645\\u6587\\u5b57\\uff08E\\uff09\n-LocaleNames\/zh_SG\/iu=\\u56e0\\u7ebd\\u7279\\u8bed\n-LocaleNames\/zh_SG\/kj=\\u5bbd\\u4e9a\\u739b\\u8bed\n-LocaleNames\/zh_SG\/kn=\\u5361\\u7eb3\\u8fbe\\u8bed\n-LocaleNames\/zh_SG\/lv=\\u62c9\\u8131\\u7ef4\\u4e9a\\u8bed\n-LocaleNames\/zh_SG\/ny=\\u9f50\\u5207\\u74e6\\u8bed\n-LocaleNames\/zh_SG\/oc=\\u5965\\u514b\\u8bed\n-LocaleNames\/zh_SG\/om=\\u5965\\u7f57\\u83ab\\u8bed\n-LocaleNames\/zh_SG\/rm=\\u7f57\\u66fc\\u4ec0\\u8bed\n-LocaleNames\/zh_SG\/sd=\\u4fe1\\u5fb7\\u8bed\n-LocaleNames\/zh_SG\/se=\\u5317\\u65b9\\u8428\\u7c73\\u8bed\n-LocaleNames\/zh_SG\/sn=\\u7ecd\\u7eb3\\u8bed\n-LocaleNames\/zh_SG\/ss=\\u65af\\u74e6\\u8482\\u8bed\n-LocaleNames\/zh_SG\/su=\\u5dfd\\u4ed6\\u8bed\n-LocaleNames\/zh_SG\/tl=\\u4ed6\\u52a0\\u7984\\u8bed\n-LocaleNames\/zh_SG\/tn=\\u8328\\u74e6\\u7eb3\\u8bed\n-LocaleNames\/zh_SG\/ts=\\u806a\\u52a0\\u8bed\n-LocaleNames\/zh_SG\/tt=\\u9791\\u977c\\u8bed\n-LocaleNames\/zh_SG\/tw=\\u5951\\u7ef4\\u8bed\n-LocaleNames\/zh_SG\/wa=\\u74e6\\u9686\\u8bed\n-LocaleNames\/zh_SG\/wo=\\u6c83\\u6d1b\\u592b\\u8bed\n-LocaleNames\/zh_SG\/xh=\\u79d1\\u8428\\u8bed\n-LocaleNames\/zh_SG\/za=\\u58ee\\u8bed\n-LocaleNames\/zh_SG\/BA=\\u6ce2\\u65af\\u5c3c\\u4e9a\\u548c\\u9ed1\\u585e\\u54e5\\u7ef4\\u90a3\n-LocaleNames\/zh_SG\/CC=\\u79d1\\u79d1\\u65af\\uff08\\u57fa\\u6797\\uff09\\u7fa4\\u5c9b\n-LocaleNames\/zh_SG\/CD=\\u521a\\u679c\\uff08\\u91d1\\uff09\n-LocaleNames\/zh_SG\/CG=\\u521a\\u679c\\uff08\\u5e03\\uff09\n-LocaleNames\/zh_SG\/DM=\\u591a\\u7c73\\u5c3c\\u514b\n-LocaleNames\/zh_SG\/KG=\\u5409\\u5c14\\u5409\\u65af\\u65af\\u5766\n-LocaleNames\/zh_SG\/KP=\\u671d\\u9c9c\n-LocaleNames\/zh_SG\/MQ=\\u9a6c\\u63d0\\u5c3c\\u514b\n-LocaleNames\/zh_SG\/MQ=\\u9a6c\\u63d0\\u5c3c\\u514b\n-LocaleNames\/zh_SG\/NC=\\u65b0\\u5580\\u91cc\\u591a\\u5c3c\\u4e9a\n-LocaleNames\/zh_SG\/TF=\\u6cd5\\u5c5e\\u5357\\u90e8\\u9886\\u5730\n-FormatData\/es_US\/AmPmMarkers\/0=a.m.\n-FormatData\/es_US\/AmPmMarkers\/1=p.m.\n-FormatData\/es_US\/NumberElements\/0=.\n-FormatData\/es_US\/NumberElements\/1=,\n-FormatData\/es_US\/NumberElements\/2=;\n-FormatData\/es_US\/NumberElements\/3=%\n-FormatData\/es_US\/NumberElements\/4=0\n-FormatData\/es_US\/NumberElements\/5=#\n-FormatData\/es_US\/NumberElements\/6=-\n-FormatData\/es_US\/NumberElements\/7=E\n-FormatData\/es_US\/NumberElements\/8=\\u2030\n-FormatData\/es_US\/NumberElements\/9=\\u221e\n-FormatData\/es_US\/NumberElements\/10=NaN\n-FormatData\/mt\/AmPmMarkers\/0=QN\n-FormatData\/mt\/AmPmMarkers\/1=WN\n-FormatData\/mt\/DatePatterns\/0=EEEE, d 'ta\\u2019' MMMM yyyy\n-# bug# 6483191\n-CalendarData\/ga_IE\/firstDayOfWeek=1\n-CalendarData\/en_PH\/firstDayOfWeek=1\n-CalendarData\/en_SG\/firstDayOfWeek=1\n-CalendarData\/zh_SG\/firstDayOfWeek=1\n-CalendarData\/mt_MT\/firstDayOfWeek=1\n-CalendarData\/en_MT\/firstDayOfWeek=1\n-CalendarData\/es_US\/firstDayOfWeek=1\n-CalendarData\/es_CY\/firstDayOfWeek=2\n-CalendarData\/in_ID\/firstDayOfWeek=2\n-CalendarData\/ms_MY\/firstDayOfWeek=2\n-CalendarData\/sr_BA\/firstDayOfWeek=2\n-CalendarData\/sr_CS\/firstDayOfWeek=2\n-# bug# 6498742\n-# make sure that the default en data is used for en_SG : CLDR1.4.1 demoted these data\n-FormatData\/en_SG\/TimePatterns\/0=h:mm:ss a z\n-FormatData\/en_SG\/TimePatterns\/1=h:mm:ss a z\n-FormatData\/en_SG\/TimePatterns\/2=h:mm:ss a\n-FormatData\/en_SG\/TimePatterns\/3=h:mm a\n-FormatData\/en_SG\/DateTimePatterns\/0={1} {0}\n-# bug# 8080774\n-# Day should precede month for all date formats in en_SG - CLDR 27.0.0\n-FormatData\/en_SG\/DatePatterns\/0=EEEE, d MMMM, yyyy\n-FormatData\/en_SG\/DatePatterns\/1=d MMMM, yyyy\n-FormatData\/en_SG\/DatePatterns\/2=d MMM, yyyy\n-FormatData\/en_SG\/DatePatterns\/3=d\/M\/yy\n-# Use approved data\n-FormatData\/ms\/Eras\/0=BCE\n-FormatData\/ms\/Eras\/1=CE\n-FormatData\/sr_BA\/MonthNames\/5=\\u0458\\u0443\\u043d\\u0438\n-FormatData\/sr_BA\/MonthNames\/6=\\u0458\\u0443\\u043b\\u0438\n-FormatData\/sr_BA\/DayNames\/3=\\u0441\\u0440\\u0438\\u0458\\u0435\\u0434\\u0430\n-FormatData\/sr_BA\/DayAbbreviations\/3=\\u0441\\u0440\\u0438\n-FormatData\/sr_BA\/TimePatterns\/0=HH '\\u0447\\u0430\\u0441\\u043e\\u0432\\u0430', mm '\\u043c\\u0438\\u043d\\u0443\\u0442\\u0430', ss' \\u0441\\u0435\\u043a\\u0443\\u043d\\u0434\\u0438'\n-FormatData\/sr_BA\/TimePatterns\/1=HH.mm.ss z\n-FormatData\/sr_BA\/TimePatterns\/2=HH:mm:ss\n-FormatData\/sr_BA\/TimePatterns\/3=HH:mm\n-FormatData\/sr_BA\/DatePatterns\/0=EEEE, dd. MMMM yyyy.\n-FormatData\/sr_BA\/DatePatterns\/1=dd. MMMM yyyy.\n-FormatData\/sr_BA\/DatePatterns\/2=yyyy-MM-dd\n-FormatData\/sr_BA\/DatePatterns\/3=yy-MM-dd\n-FormatData\/sr_BA\/DateTimePatterns\/0={1} {0}\n-LocaleNames\/pt_BR\/ce=checheno\n-LocaleNames\/pt_BR\/ik=inupiaque\n-LocaleNames\/pt_BR\/jv=javan\\u00eas\n-LocaleNames\/pt_BR\/nd=ndebele do norte\n-LocaleNames\/pt_BR\/nr=ndebele do sul\n-LocaleNames\/pt_BR\/st=soto do sul\n-LocaleNames\/pt_BR\/AX=Ilhas Aland\n-LocaleNames\/pt_BR\/BA=B\\u00f3snia e Herzegovina\n-LocaleNames\/pt_BR\/BH=Barein\n-LocaleNames\/pt_BR\/KP=Coreia do Norte\n-LocaleNames\/pt_BR\/MK=Maced\\u00f4nia do Norte\n-LocaleNames\/pt_BR\/ZW=Zimb\\u00e1bue\n-LocaleNames\/pt_PT\/ee=ewe\n-LocaleNames\/pt_PT\/fo=fero\\u00eas\n-LocaleNames\/pt_PT\/gl=galego\n-LocaleNames\/pt_PT\/ha=hau\\u00e7\\u00e1\n-LocaleNames\/pt_PT\/hy=arm\\u00eanio\n-LocaleNames\/pt_PT\/ig=igbo\n-LocaleNames\/pt_PT\/ki=quicuio\n-LocaleNames\/pt_PT\/kl=groenland\\u00eas\n-LocaleNames\/pt_PT\/km=khmer\n-LocaleNames\/pt_PT\/mh=marshal\\u00eas\n-LocaleNames\/pt_PT\/mk=maced\\u00f4nio\n-LocaleNames\/pt_PT\/nr=ndebele do sul\n-LocaleNames\/pt_PT\/os=osseto\n-LocaleNames\/pt_PT\/st=soto do sul\n-LocaleNames\/pt_PT\/ta=t\\u00e2mil\n-LocaleNames\/pt_PT\/AI=Anguilla\n-LocaleNames\/pt_PT\/AX=\\u00c5land Islands\n-\n-# JE, GG, IM (6544471)\n-LocaleNames\/\/JE=Jersey\n-LocaleNames\/\/GG=Guernsey\n-LocaleNames\/\/IM=Isle of Man\n-\n-# bugs 6497154\n-CalendarData\/sk\/firstDayOfWeek=2\n-CalendarData\/sk\/minimalDaysInFirstWeek=4\n-\n-# bug 6558856\n-LocaleNames\/fi\/da=tanska\n-LocaleNames\/fi\/DK=Tanska\n-LocaleNames\/fi_FI\/da=tanska\n-LocaleNames\/fi_FI\/DK=Tanska\n-\n-# bug 6481177\n-FormatData\/nl\/Eras\/0=v. Chr.\n-FormatData\/nl\/Eras\/1=n. Chr.\n-\n-# bug 6379214\n-LocaleNames\/da\/da=dansk\n-\n-# bug 6485516\n-LocaleNames\/fr\/GF=Guyane fran\\u00e7aise\n-\n-# bug 6486607\n-LocaleNames\/fr\/GY=Guyana\n-\n-# bug 4225362\n-FormatData\/fr\/DateTimePatternChars=GaMjkHmsSEDFwWxhKzZ\n-FormatData\/fr_BE\/DateTimePatternChars=GaMjkHmsSEDFwWxhKzZ\n-FormatData\/fr_CA\/DateTimePatternChars=GaMjkHmsSEDFwWxhKzZ\n-FormatData\/fr_CH\/DateTimePatternChars=GaMjkHmsSEDFwWxhKzZ\n-FormatData\/fr_FR\/DateTimePatternChars=GaMjkHmsSEDFwWxhKzZ\n-FormatData\/fr_LU\/DateTimePatternChars=GaMjkHmsSEDFwWxhKzZ\n-\n-# bug 6547501\n-FormatData\/fr\/NumberPatterns\/2=#,##0 %\n-# following two lines are also for bug 4494727\n-FormatData\/fr_CA\/NumberPatterns\/2=#,##0 %\n-FormatData\/fr_CH\/NumberPatterns\/2=#,##0 %\n-\n-# bug 4494727\n-FormatData\/de_CH\/NumberPatterns\/2=#,##0 %\n-FormatData\/tr\/NumberPatterns\/2=% #,##0\n-# added to verify propper inheritance\n-FormatData\/tr_TR\/NumberPatterns\/2=% #,##0\n-\n-# bug 6533691\n-LocaleNames\/de\/ME=Montenegro\n-LocaleNames\/de\/RS=Serbien\n-LocaleNames\/es\/ME=Montenegro\n-LocaleNames\/es\/RS=Serbia\n-LocaleNames\/fr\/ME=Mont\\u00e9n\\u00e9gro\n-LocaleNames\/fr\/RS=Serbie\n-LocaleNames\/it\/ME=Montenegro\n-LocaleNames\/it\/RS=Serbia\n-LocaleNames\/ja\/ME=\\u30e2\\u30f3\\u30c6\\u30cd\\u30b0\\u30ed\n-LocaleNames\/ja\/RS=\\u30bb\\u30eb\\u30d3\\u30a2\n-LocaleNames\/ko\/ME=\\ubaac\\ud14c\\ub124\\uadf8\\ub85c\n-LocaleNames\/ko\/RS=\\uc138\\ub974\\ube44\\uc544\n-LocaleNames\/sv\/ME=Montenegro\n-LocaleNames\/sv\/RS=Serbien\n-LocaleNames\/zh\/ME=\\u9ed1\\u5c71\n-LocaleNames\/zh\/RS=\\u585e\\u5c14\\u7ef4\\u4e9a\n-LocaleNames\/zh_TW\/ME=\\u8499\\u7279\\u5167\\u54e5\\u7f85\n-LocaleNames\/zh_TW\/RS=\\u585e\\u723e\\u7dad\\u4e9e\n-\n-# bug 6531591\n-CurrencyNames\/ar_SD\/SDD=\\u062f.\\u0633.\\u200f\n-CurrencyNames\/ar_SD\/SDG=\\u062c.\\u0633.\\u200f\n-\n-# bug 6531593\n-FormatData\/is_IS\/NumberPatterns\/1=#,##0. \\u00a4;-#,##0. \\u00a4\n-\n-# bug 6509039\n-FormatData\/sv\/AmPmMarkers\/0=fm\n-FormatData\/sv\/AmPmMarkers\/1=em\n-\n-# JE, GG, IM (6544471)\n-LocaleNames\/\/JE=Jersey\n-LocaleNames\/\/GG=Guernsey\n-LocaleNames\/\/IM=Isle of Man\n-\n-# BL, MF (6627549)\n-LocaleNames\/\/BL=St. Barth\\u00e9lemy\n-LocaleNames\/\/MF=St. Martin\n-\n-# bug 6609737\n-FormatData\/de\/TimePatterns\/0=HH:mm' Uhr 'z\n-TimeZoneNames\/de\/CET\/1=Mitteleurop\\u00e4ische Zeit\n-TimeZoneNames\/de\/CET\/2=MEZ\n-TimeZoneNames\/de\/CET\/3=Mitteleurop\\u00e4ische Sommerzeit\n-TimeZoneNames\/de\/CET\/4=MESZ\n-TimeZoneNames\/de\/EET\/2=OEZ\n-TimeZoneNames\/de\/EET\/4=OESZ\n-TimeZoneNames\/de\/WET\/2=WEZ\n-TimeZoneNames\/de\/WET\/4=WESZ\n-\n-# bug 6610748\n-FormatData\/fi\/AmPmMarkers\/0=ap.\n-FormatData\/fi\/AmPmMarkers\/1=ip.\n-\n-# bug 6507067\n-TimeZoneNames\/zh_TW\/Asia\\\/Taipei\/1=\\u53f0\\u7063\\u6a19\\u6e96\\u6642\\u9593\n-TimeZoneNames\/zh_TW\/Asia\\\/Taipei\/2=TST\n-\n-# bug 6645271\n-FormatData\/hr_HR\/DatePatterns\/2=dd.MM.yyyy.\n-FormatData\/hr_HR\/DatePatterns\/3=dd.MM.yy.\n-\n-# bug 6873931\n-CurrencyNames\/tr_TR\/TRY=TL\n-\n-#bug 6450945\n-CalendarData\/ro\/firstDayOfWeek=2\n-CalendarData\/ro\/minimalDaysInFirstWeek=1\n-FormatData\/ro\/DayNames\/6=s\\u00e2mb\\u0103t\\u0103\n-\n-#bug 6645268\n-LocaleNames\/fi\/fr=ranska\n-LocaleNames\/fi\/FR=Ranska\n-LocaleNames\/fi_FI\/fr=ranska\n-LocaleNames\/fi_FI\/FR=Ranska\n-\n-# bug 6646611, 6914413\n-FormatData\/be_BY\/MonthNames\/10=\\u043b\\u0456\\u0441\\u0442\\u0430\\u043f\\u0430\\u0434\\u0430\n-FormatData\/be_BY\/MonthAbbreviations\/10=\\u043b\\u0456\\u0441\n-\n-# bug 6645405\n-FormatData\/hu_HU\/NumberPatterns\/1=#,##0.## \\u00a4;-#,##0.## \\u00a4\n-\n-# bug 6650730\n-FormatData\/lt\/NumberElements\/1=\\u00a0\n-FormatData\/lt\/DatePatterns\/2=yyyy-MM-dd\n-\n-#bug 6910489\n-CalendarData\/sl\/firstDayOfWeek=2\n-\n-# bug 6573250\n-CurrencyNames\/en_CA\/USD=US$\n-\n-# bug 6870908\n-FormatData\/et\/MonthNames\/0=jaanuar\n-FormatData\/et\/MonthNames\/1=veebruar\n-FormatData\/et\/MonthNames\/2=m\\u00e4rts\n-FormatData\/et\/MonthNames\/3=aprill\n-FormatData\/et\/MonthNames\/4=mai\n-FormatData\/et\/MonthNames\/5=juuni\n-FormatData\/et\/MonthNames\/6=juuli\n-FormatData\/et\/MonthNames\/7=august\n-FormatData\/et\/MonthNames\/8=september\n-FormatData\/et\/MonthNames\/9=oktoober\n-FormatData\/et\/MonthNames\/10=november\n-FormatData\/et\/MonthNames\/11=detsember\n-FormatData\/et\/MonthAbbreviations\/0=jaan\n-FormatData\/et\/MonthAbbreviations\/1=veebr\n-FormatData\/et\/MonthAbbreviations\/2=m\\u00e4rts\n-FormatData\/et\/MonthAbbreviations\/3=apr\n-FormatData\/et\/MonthAbbreviations\/4=mai\n-FormatData\/et\/MonthAbbreviations\/5=juuni\n-FormatData\/et\/MonthAbbreviations\/6=juuli\n-FormatData\/et\/MonthAbbreviations\/7=aug\n-FormatData\/et\/MonthAbbreviations\/8=sept\n-FormatData\/et\/MonthAbbreviations\/9=okt\n-FormatData\/et\/MonthAbbreviations\/10=nov\n-FormatData\/et\/MonthAbbreviations\/11=dets\n-\n-# bug 6585666\n-LocaleNames\/es\/aa=afar\n-LocaleNames\/es\/av=avar\n-LocaleNames\/es\/az=azerbaiyano\n-LocaleNames\/es\/ba=baskir\n-LocaleNames\/es\/bh=bihari\n-LocaleNames\/es\/bn=bengal\\u00ed\n-LocaleNames\/es\/cu=eslavo eclesi\\u00e1stico\n-LocaleNames\/es\/dz=dzongkha\n-LocaleNames\/es\/eu=euskera\n-LocaleNames\/es\/fa=persa\n-LocaleNames\/es\/ff=fula\n-LocaleNames\/es\/fj=fiyiano\n-LocaleNames\/es\/fo=fero\\u00e9s\n-LocaleNames\/es\/fy=fris\\u00f3n occidental\n-LocaleNames\/es\/gu=guyarat\\u00ed\n-LocaleNames\/es\/gv=man\\u00e9s\n-LocaleNames\/es\/hi=hindi\n-LocaleNames\/es\/ho=hiri motu\n-LocaleNames\/es\/ie=interlingue\n-LocaleNames\/es\/ig=igbo\n-LocaleNames\/es\/ii=yi de Sichu\\u00e1n\n-LocaleNames\/es\/ik=inupiaq\n-LocaleNames\/es\/kg=kongo\n-LocaleNames\/es\/ki=kikuyu\n-LocaleNames\/es\/kj=kuanyama\n-LocaleNames\/es\/kk=kazajo\n-LocaleNames\/es\/km=jemer\n-LocaleNames\/es\/kn=canar\\u00e9s\n-LocaleNames\/es\/ks=cachemir\n-LocaleNames\/es\/ku=kurdo\n-LocaleNames\/es\/ky=kirgu\\u00eds\n-LocaleNames\/es\/lu=luba-katanga\n-LocaleNames\/es\/mr=marat\\u00ed\n-LocaleNames\/es\/nb=noruego bokmal\n-LocaleNames\/es\/nd=ndebele septentrional\n-LocaleNames\/es\/nn=noruego nynorsk\n-LocaleNames\/es\/nr=ndebele meridional\n-LocaleNames\/es\/os=os\\u00e9tico\n-LocaleNames\/es\/rm=romanche\n-LocaleNames\/es\/rn=kirundi\n-LocaleNames\/es\/rw=kinyarwanda\n-LocaleNames\/es\/sd=sindhi\n-LocaleNames\/es\/se=sami septentrional\n-LocaleNames\/es\/sl=esloveno\n-LocaleNames\/es\/sn=shona\n-LocaleNames\/es\/ss=suazi\n-LocaleNames\/es\/st=sotho meridional\n-LocaleNames\/es\/su=sundan\\u00e9s\n-LocaleNames\/es\/sw=suajili\n-LocaleNames\/es\/tg=tayiko\n-LocaleNames\/es\/ti=tigri\\u00f1a\n-LocaleNames\/es\/tn=setsuana\n-LocaleNames\/es\/to=tongano\n-LocaleNames\/es\/tw=twi\n-LocaleNames\/es\/ty=tahitiano\n-LocaleNames\/es\/ug=uigur\n-LocaleNames\/es\/uk=ucraniano\n-LocaleNames\/es\/uz=uzbeko\n-LocaleNames\/es\/vo=volap\\u00fck\n-LocaleNames\/es\/za=zhuang\n-\n-# bug 6716626 - language\n-LocaleNames\/nl\/aa=Afar\n-LocaleNames\/nl\/ab=Abchazisch\n-LocaleNames\/nl\/ae=Avestisch\n-LocaleNames\/nl\/af=Afrikaans\n-LocaleNames\/nl\/ak=Akan\n-LocaleNames\/nl\/am=Amhaars\n-LocaleNames\/nl\/an=Aragonees\n-LocaleNames\/nl\/ar=Arabisch\n-LocaleNames\/nl\/as=Assamees\n-LocaleNames\/nl\/av=Avarisch\n-LocaleNames\/nl\/ay=Aymara\n-LocaleNames\/nl\/az=Azerbeidzjaans\n-LocaleNames\/nl\/ba=Basjkiers\n-LocaleNames\/nl\/be=Belarussisch\n-LocaleNames\/nl\/bg=Bulgaars\n-LocaleNames\/nl\/bh=Bihari\n-LocaleNames\/nl\/bi=Bislama\n-LocaleNames\/nl\/bm=Bambara\n-LocaleNames\/nl\/bn=Bengaals\n-LocaleNames\/nl\/bo=Tibetaans\n-LocaleNames\/nl\/br=Bretons\n-LocaleNames\/nl\/bs=Bosnisch\n-LocaleNames\/nl\/ca=Catalaans\n-LocaleNames\/nl\/ce=Tsjetsjeens\n-LocaleNames\/nl\/ch=Chamorro\n-LocaleNames\/nl\/co=Corsicaans\n-LocaleNames\/nl\/cr=Cree\n-LocaleNames\/nl\/cs=Tsjechisch\n-LocaleNames\/nl\/cu=Kerkslavisch\n-LocaleNames\/nl\/cv=Tsjoevasjisch\n-LocaleNames\/nl\/cy=Welsh\n-LocaleNames\/nl\/da=Deens\n-LocaleNames\/nl\/de=Duits\n-LocaleNames\/nl\/dv=Divehi\n-LocaleNames\/nl\/dz=Dzongkha\n-LocaleNames\/nl\/ee=Ewe\n-LocaleNames\/nl\/el=Grieks\n-LocaleNames\/nl\/en=Engels\n-LocaleNames\/nl\/eo=Esperanto\n-LocaleNames\/nl\/es=Spaans\n-LocaleNames\/nl\/et=Estisch\n-LocaleNames\/nl\/eu=Baskisch\n-LocaleNames\/nl\/fa=Perzisch\n-LocaleNames\/nl\/ff=Fulah\n-LocaleNames\/nl\/fi=Fins\n-LocaleNames\/nl\/fj=Fijisch\n-LocaleNames\/nl\/fo=Faer\\u00f6ers\n-LocaleNames\/nl\/fr=Frans\n-LocaleNames\/nl\/fy=Fries\n-LocaleNames\/nl\/ga=Iers\n-LocaleNames\/nl\/gd=Schots-Gaelisch\n-LocaleNames\/nl\/gl=Galicisch\n-LocaleNames\/nl\/gn=Guaran\\u00ed\n-LocaleNames\/nl\/gu=Gujarati\n-LocaleNames\/nl\/gv=Manx\n-LocaleNames\/nl\/ha=Hausa\n-LocaleNames\/nl\/he=Hebreeuws\n-LocaleNames\/nl\/hi=Hindi\n-LocaleNames\/nl\/ho=Hiri Motu\n-LocaleNames\/nl\/hr=Kroatisch\n-LocaleNames\/nl\/ht=Ha\\u00eftiaans Creools\n-LocaleNames\/nl\/hu=Hongaars\n-LocaleNames\/nl\/hy=Armeens\n-LocaleNames\/nl\/hz=Herero\n-LocaleNames\/nl\/ia=Interlingua\n-LocaleNames\/nl\/id=Indonesisch\n-LocaleNames\/nl\/ie=Interlingue\n-LocaleNames\/nl\/ig=Igbo\n-LocaleNames\/nl\/ii=Yi\n-LocaleNames\/nl\/ik=Inupiaq\n-LocaleNames\/nl\/io=Ido\n-LocaleNames\/nl\/is=IJslands\n-LocaleNames\/nl\/it=Italiaans\n-LocaleNames\/nl\/iu=Inuktitut\n-LocaleNames\/nl\/ja=Japans\n-LocaleNames\/nl\/jv=Javaans\n-LocaleNames\/nl\/ka=Georgisch\n-LocaleNames\/nl\/kg=Kongo\n-LocaleNames\/nl\/ki=Gikuyu\n-LocaleNames\/nl\/kj=Kuanyama\n-LocaleNames\/nl\/kk=Kazachs\n-LocaleNames\/nl\/kl=Groenlands\n-LocaleNames\/nl\/km=Khmer\n-LocaleNames\/nl\/kn=Kannada\n-LocaleNames\/nl\/ko=Koreaans\n-LocaleNames\/nl\/kr=Kanuri\n-LocaleNames\/nl\/ks=Kasjmiri\n-LocaleNames\/nl\/ku=Koerdisch\n-LocaleNames\/nl\/kv=Komi\n-LocaleNames\/nl\/kw=Cornish\n-LocaleNames\/nl\/ky=Kirgizisch\n-LocaleNames\/nl\/la=Latijn\n-LocaleNames\/nl\/lb=Luxemburgs\n-LocaleNames\/nl\/lg=Luganda\n-LocaleNames\/nl\/li=Limburgs\n-LocaleNames\/nl\/ln=Lingala\n-LocaleNames\/nl\/lo=Laotiaans\n-LocaleNames\/nl\/lt=Litouws\n-LocaleNames\/nl\/lu=Luba-Katanga\n-LocaleNames\/nl\/lv=Lets\n-LocaleNames\/nl\/mg=Malagassisch\n-LocaleNames\/nl\/mh=Marshallees\n-LocaleNames\/nl\/mi=Maori\n-LocaleNames\/nl\/mk=Macedonisch\n-LocaleNames\/nl\/ml=Malayalam\n-LocaleNames\/nl\/mn=Mongools\n-LocaleNames\/nl\/mo=Moldavisch\n-LocaleNames\/nl\/mr=Marathi\n-LocaleNames\/nl\/ms=Maleis\n-LocaleNames\/nl\/mt=Maltees\n-LocaleNames\/nl\/my=Birmaans\n-LocaleNames\/nl\/na=Nauruaans\n-LocaleNames\/nl\/nb=Noors - Bokm\\u00e5l\n-LocaleNames\/nl\/nd=Noord-Ndebele\n-LocaleNames\/nl\/ne=Nepalees\n-LocaleNames\/nl\/ng=Ndonga\n-LocaleNames\/nl\/nl=Nederlands\n-LocaleNames\/nl\/nn=Noors - Nynorsk\n-LocaleNames\/nl\/no=Noors\n-LocaleNames\/nl\/nr=Zuid-Ndbele\n-LocaleNames\/nl\/nv=Navajo\n-LocaleNames\/nl\/ny=Nyanja\n-LocaleNames\/nl\/oc=Occitaans\n-LocaleNames\/nl\/oj=Ojibwa\n-LocaleNames\/nl\/om=Afaan Oromo\n-LocaleNames\/nl\/or=Odia\n-LocaleNames\/nl\/os=Ossetisch\n-LocaleNames\/nl\/pa=Punjabi\n-LocaleNames\/nl\/pi=Pali\n-LocaleNames\/nl\/pl=Pools\n-LocaleNames\/nl\/ps=Pasjtoe\n-LocaleNames\/nl\/pt=Portugees\n-LocaleNames\/nl\/qu=Quechua\n-LocaleNames\/nl\/rm=Reto-Romaans\n-LocaleNames\/nl\/rn=Kirundi\n-LocaleNames\/nl\/ro=Roemeens\n-LocaleNames\/nl\/ru=Russisch\n-LocaleNames\/nl\/rw=Kinyarwanda\n-LocaleNames\/nl\/sa=Sanskriet\n-LocaleNames\/nl\/sc=Sardijns\n-LocaleNames\/nl\/sd=Sindhi\n-LocaleNames\/nl\/se=Noord-Samisch\n-LocaleNames\/nl\/sg=Sango\n-LocaleNames\/nl\/si=Singalees\n-LocaleNames\/nl\/sk=Slowaaks\n-LocaleNames\/nl\/sl=Sloveens\n-LocaleNames\/nl\/sm=Samoaans\n-LocaleNames\/nl\/sn=Shona\n-LocaleNames\/nl\/so=Somalisch\n-LocaleNames\/nl\/sq=Albanees\n-LocaleNames\/nl\/sr=Servisch\n-LocaleNames\/nl\/ss=Swazi\n-LocaleNames\/nl\/st=Zuid-Sotho\n-LocaleNames\/nl\/su=Soendanees\n-LocaleNames\/nl\/sv=Zweeds\n-LocaleNames\/nl\/sw=Swahili\n-LocaleNames\/nl\/ta=Tamil\n-LocaleNames\/nl\/te=Telugu\n-LocaleNames\/nl\/tg=Tadzjieks\n-LocaleNames\/nl\/th=Thai\n-LocaleNames\/nl\/ti=Tigrinya\n-LocaleNames\/nl\/tk=Turkmeens\n-LocaleNames\/nl\/tl=Tagalog\n-LocaleNames\/nl\/tn=Tswana\n-LocaleNames\/nl\/to=Tongaans\n-LocaleNames\/nl\/tr=Turks\n-LocaleNames\/nl\/ts=Tsonga\n-LocaleNames\/nl\/tt=Tataars\n-LocaleNames\/nl\/tw=Twi\n-LocaleNames\/nl\/ty=Tahitiaans\n-LocaleNames\/nl\/ug=Oeigoers\n-LocaleNames\/nl\/uk=Oekra\\u00efens\n-LocaleNames\/nl\/ur=Urdu\n-LocaleNames\/nl\/uz=Oezbeeks\n-LocaleNames\/nl\/ve=Venda\n-LocaleNames\/nl\/vi=Vietnamees\n-LocaleNames\/nl\/vo=Volap\\u00fck\n-LocaleNames\/nl\/wa=Waals\n-LocaleNames\/nl\/wo=Wolof\n-LocaleNames\/nl\/xh=Xhosa\n-LocaleNames\/nl\/yi=Jiddisch\n-LocaleNames\/nl\/yo=Yoruba\n-LocaleNames\/nl\/za=Zhuang\n-LocaleNames\/nl\/zh=Chinees\n-LocaleNames\/nl\/zu=Zoeloe\n-\n-# bug 6716626 - country\n-LocaleNames\/nl\/AD=Andorra\n-LocaleNames\/nl\/AE=Verenigde Arabische Emiraten\n-LocaleNames\/nl\/AF=Afghanistan\n-LocaleNames\/nl\/AG=Antigua en Barbuda\n-LocaleNames\/nl\/AI=Anguilla\n-LocaleNames\/nl\/AL=Albani\\u00eb\n-LocaleNames\/nl\/AM=Armeni\\u00eb\n-LocaleNames\/nl\/AN=Nederlandse Antillen\n-LocaleNames\/nl\/AO=Angola\n-LocaleNames\/nl\/AQ=Antarctica\n-LocaleNames\/nl\/AR=Argentini\\u00eb\n-LocaleNames\/nl\/AS=Amerikaans-Samoa\n-LocaleNames\/nl\/AT=Oostenrijk\n-LocaleNames\/nl\/AU=Australi\\u00eb\n-LocaleNames\/nl\/AW=Aruba\n-LocaleNames\/nl\/AX=\\u00c5land\n-LocaleNames\/nl\/AZ=Azerbeidzjan\n-LocaleNames\/nl\/BA=Bosni\\u00eb en Herzegovina\n-LocaleNames\/nl\/BB=Barbados\n-LocaleNames\/nl\/BD=Bangladesh\n-LocaleNames\/nl\/BE=Belgi\\u00eb\n-LocaleNames\/nl\/BF=Burkina Faso\n-LocaleNames\/nl\/BG=Bulgarije\n-LocaleNames\/nl\/BH=Bahrein\n-LocaleNames\/nl\/BI=Burundi\n-LocaleNames\/nl\/BJ=Benin\n-LocaleNames\/nl\/BM=Bermuda\n-LocaleNames\/nl\/BN=Brunei\n-LocaleNames\/nl\/BO=Bolivia\n-LocaleNames\/nl\/BR=Brazili\\u00eb\n-LocaleNames\/nl\/BS=Bahama\\u2019s\n-LocaleNames\/nl\/BT=Bhutan\n-LocaleNames\/nl\/BV=Bouveteiland\n-LocaleNames\/nl\/BW=Botswana\n-LocaleNames\/nl\/BY=Belarus\n-LocaleNames\/nl\/BZ=Belize\n-LocaleNames\/nl\/CA=Canada\n-LocaleNames\/nl\/CC=Cocoseilanden\n-LocaleNames\/nl\/CD=Congo-Kinshasa\n-LocaleNames\/nl\/CF=Centraal-Afrikaanse Republiek\n-LocaleNames\/nl\/CG=Congo-Brazzaville\n-LocaleNames\/nl\/CH=Zwitserland\n-LocaleNames\/nl\/CI=Ivoorkust\n-LocaleNames\/nl\/CK=Cookeilanden\n-LocaleNames\/nl\/CL=Chili\n-LocaleNames\/nl\/CM=Kameroen\n-LocaleNames\/nl\/CN=China\n-LocaleNames\/nl\/CO=Colombia\n-LocaleNames\/nl\/CR=Costa Rica\n-LocaleNames\/nl\/CS=Servi\\u00eb en Montenegro\n-LocaleNames\/nl\/CU=Cuba\n-LocaleNames\/nl\/CV=Kaapverdi\\u00eb\n-LocaleNames\/nl\/CX=Christmaseiland\n-LocaleNames\/nl\/CY=Cyprus\n-LocaleNames\/nl\/CZ=Tsjechi\\u00eb\n-LocaleNames\/nl\/DE=Duitsland\n-LocaleNames\/nl\/DJ=Djibouti\n-LocaleNames\/nl\/DK=Denemarken\n-LocaleNames\/nl\/DM=Dominica\n-LocaleNames\/nl\/DO=Dominicaanse Republiek\n-LocaleNames\/nl\/DZ=Algerije\n-LocaleNames\/nl\/EC=Ecuador\n-LocaleNames\/nl\/EE=Estland\n-LocaleNames\/nl\/EG=Egypte\n-LocaleNames\/nl\/EH=Westelijke Sahara\n-LocaleNames\/nl\/ER=Eritrea\n-LocaleNames\/nl\/ES=Spanje\n-LocaleNames\/nl\/ET=Ethiopi\\u00eb\n-LocaleNames\/nl\/FI=Finland\n-LocaleNames\/nl\/FJ=Fiji\n-LocaleNames\/nl\/FK=Falklandeilanden\n-LocaleNames\/nl\/FM=Micronesia\n-LocaleNames\/nl\/FO=Faer\\u00f6er\n-LocaleNames\/nl\/FR=Frankrijk\n-LocaleNames\/nl\/GA=Gabon\n-LocaleNames\/nl\/GB=Verenigd Koninkrijk\n-LocaleNames\/nl\/GD=Grenada\n-LocaleNames\/nl\/GE=Georgi\\u00eb\n-LocaleNames\/nl\/GF=Frans-Guyana\n-LocaleNames\/nl\/GH=Ghana\n-LocaleNames\/nl\/GI=Gibraltar\n-LocaleNames\/nl\/GL=Groenland\n-LocaleNames\/nl\/GM=Gambia\n-LocaleNames\/nl\/GN=Guinee\n-LocaleNames\/nl\/GP=Guadeloupe\n-LocaleNames\/nl\/GQ=Equatoriaal-Guinea\n-LocaleNames\/nl\/GR=Griekenland\n-LocaleNames\/nl\/GS=Zuid-Georgia en Zuidelijke Sandwicheilanden\n-LocaleNames\/nl\/GT=Guatemala\n-LocaleNames\/nl\/GU=Guam\n-LocaleNames\/nl\/GW=Guinee-Bissau\n-LocaleNames\/nl\/GY=Guyana\n-LocaleNames\/nl\/HK=Hongkong SAR van China\n-LocaleNames\/nl\/HM=Heard en McDonaldeilanden\n-LocaleNames\/nl\/HN=Honduras\n-LocaleNames\/nl\/HR=Kroati\\u00eb\n-LocaleNames\/nl\/HT=Ha\\u00efti\n-LocaleNames\/nl\/HU=Hongarije\n-LocaleNames\/nl\/ID=Indonesi\\u00eb\n-LocaleNames\/nl\/IE=Ierland\n-LocaleNames\/nl\/IL=Isra\\u00ebl\n-LocaleNames\/nl\/IN=India\n-LocaleNames\/nl\/IO=Brits Indische Oceaanterritorium\n-LocaleNames\/nl\/IQ=Irak\n-LocaleNames\/nl\/IR=Iran\n-LocaleNames\/nl\/IS=IJsland\n-LocaleNames\/nl\/IT=Itali\\u00eb\n-LocaleNames\/nl\/JM=Jamaica\n-LocaleNames\/nl\/JO=Jordani\\u00eb\n-LocaleNames\/nl\/JP=Japan\n-LocaleNames\/nl\/KE=Kenia\n-LocaleNames\/nl\/KG=Kirgizi\\u00eb\n-LocaleNames\/nl\/KH=Cambodja\n-LocaleNames\/nl\/KI=Kiribati\n-LocaleNames\/nl\/KM=Comoren\n-LocaleNames\/nl\/KN=Saint Kitts en Nevis\n-LocaleNames\/nl\/KP=Noord-Korea\n-LocaleNames\/nl\/KR=Zuid-Korea\n-LocaleNames\/nl\/KW=Koeweit\n-LocaleNames\/nl\/KY=Kaaimaneilanden\n-LocaleNames\/nl\/KZ=Kazachstan\n-LocaleNames\/nl\/LA=Laos\n-LocaleNames\/nl\/LB=Libanon\n-LocaleNames\/nl\/LC=Saint Lucia\n-LocaleNames\/nl\/LI=Liechtenstein\n-LocaleNames\/nl\/LK=Sri Lanka\n-LocaleNames\/nl\/LR=Liberia\n-LocaleNames\/nl\/LS=Lesotho\n-LocaleNames\/nl\/LT=Litouwen\n-LocaleNames\/nl\/LU=Luxemburg\n-LocaleNames\/nl\/LV=Letland\n-LocaleNames\/nl\/LY=Libi\\u00eb\n-LocaleNames\/nl\/MA=Marokko\n-LocaleNames\/nl\/MC=Monaco\n-LocaleNames\/nl\/MD=Moldavi\\u00eb\n-LocaleNames\/nl\/ME=Montenegro\n-LocaleNames\/nl\/MG=Madagaskar\n-LocaleNames\/nl\/MH=Marshalleilanden\n-LocaleNames\/nl\/MK=Noord-Macedoni\\u00eb\n-LocaleNames\/nl\/ML=Mali\n-LocaleNames\/nl\/MM=Myanmar (Birma)\n-LocaleNames\/nl\/MN=Mongoli\\u00eb\n-LocaleNames\/nl\/MO=Macau SAR van China\n-LocaleNames\/nl\/MP=Noordelijke Marianen\n-LocaleNames\/nl\/MQ=Martinique\n-LocaleNames\/nl\/MR=Mauritani\\u00eb\n-LocaleNames\/nl\/MS=Montserrat\n-LocaleNames\/nl\/MT=Malta\n-LocaleNames\/nl\/MU=Mauritius\n-LocaleNames\/nl\/MV=Maldiven\n-LocaleNames\/nl\/MW=Malawi\n-LocaleNames\/nl\/MX=Mexico\n-LocaleNames\/nl\/MY=Maleisi\\u00eb\n-LocaleNames\/nl\/MZ=Mozambique\n-LocaleNames\/nl\/NA=Namibi\\u00eb\n-LocaleNames\/nl\/NC=Nieuw-Caledoni\\u00eb\n-LocaleNames\/nl\/NE=Niger\n-LocaleNames\/nl\/NF=Norfolk\n-LocaleNames\/nl\/NG=Nigeria\n-LocaleNames\/nl\/NI=Nicaragua\n-LocaleNames\/nl\/NL=Nederland\n-LocaleNames\/nl\/NO=Noorwegen\n-LocaleNames\/nl\/NP=Nepal\n-LocaleNames\/nl\/NR=Nauru\n-LocaleNames\/nl\/NU=Niue\n-LocaleNames\/nl\/NZ=Nieuw-Zeeland\n-LocaleNames\/nl\/OM=Oman\n-LocaleNames\/nl\/PA=Panama\n-LocaleNames\/nl\/PE=Peru\n-LocaleNames\/nl\/PF=Frans-Polynesi\\u00eb\n-LocaleNames\/nl\/PG=Papoea-Nieuw-Guinea\n-LocaleNames\/nl\/PH=Filipijnen\n-LocaleNames\/nl\/PK=Pakistan\n-LocaleNames\/nl\/PL=Polen\n-LocaleNames\/nl\/PM=Saint-Pierre en Miquelon\n-LocaleNames\/nl\/PN=Pitcairneilanden\n-LocaleNames\/nl\/PR=Puerto Rico\n-LocaleNames\/nl\/PS=Palestijnse gebieden\n-LocaleNames\/nl\/PT=Portugal\n-LocaleNames\/nl\/PW=Palau\n-LocaleNames\/nl\/PY=Paraguay\n-LocaleNames\/nl\/QA=Qatar\n-LocaleNames\/nl\/RE=R\\u00e9union\n-LocaleNames\/nl\/RO=Roemeni\\u00eb\n-LocaleNames\/nl\/RS=Servi\\u00eb\n-LocaleNames\/nl\/RU=Rusland\n-LocaleNames\/nl\/RW=Rwanda\n-LocaleNames\/nl\/SA=Saoedi-Arabi\\u00eb\n-LocaleNames\/nl\/SB=Salomonseilanden\n-LocaleNames\/nl\/SC=Seychellen\n-LocaleNames\/nl\/SD=Soedan\n-LocaleNames\/nl\/SE=Zweden\n-LocaleNames\/nl\/SG=Singapore\n-LocaleNames\/nl\/SH=Sint-Helena\n-LocaleNames\/nl\/SI=Sloveni\\u00eb\n-LocaleNames\/nl\/SJ=Spitsbergen en Jan Mayen\n-LocaleNames\/nl\/SK=Slowakije\n-LocaleNames\/nl\/SL=Sierra Leone\n-LocaleNames\/nl\/SM=San Marino\n-LocaleNames\/nl\/SN=Senegal\n-LocaleNames\/nl\/SO=Somali\\u00eb\n-LocaleNames\/nl\/SR=Suriname\n-LocaleNames\/nl\/ST=Sao Tom\\u00e9 en Principe\n-LocaleNames\/nl\/SV=El Salvador\n-LocaleNames\/nl\/SY=Syri\\u00eb\n-LocaleNames\/nl\/TC=Turks- en Caicoseilanden\n-LocaleNames\/nl\/TD=Tsjaad\n-LocaleNames\/nl\/TF=Franse Gebieden in de zuidelijke Indische Oceaan\n-LocaleNames\/nl\/TG=Togo\n-LocaleNames\/nl\/TH=Thailand\n-LocaleNames\/nl\/TJ=Tadzjikistan\n-LocaleNames\/nl\/TK=Tokelau\n-LocaleNames\/nl\/TL=Oost-Timor\n-LocaleNames\/nl\/TM=Turkmenistan\n-LocaleNames\/nl\/TN=Tunesi\\u00eb\n-LocaleNames\/nl\/TO=Tonga\n-LocaleNames\/nl\/TR=Turkije\n-LocaleNames\/nl\/TT=Trinidad en Tobago\n-LocaleNames\/nl\/TV=Tuvalu\n-LocaleNames\/nl\/TW=Taiwan\n-LocaleNames\/nl\/TZ=Tanzania\n-LocaleNames\/nl\/UA=Oekra\\u00efne\n-LocaleNames\/nl\/UG=Oeganda\n-LocaleNames\/nl\/UM=Kleine afgelegen eilanden van de Verenigde Staten\n-LocaleNames\/nl\/US=Verenigde Staten\n-LocaleNames\/nl\/UY=Uruguay\n-LocaleNames\/nl\/UZ=Oezbekistan\n-LocaleNames\/nl\/VA=Vaticaanstad\n-LocaleNames\/nl\/VC=Saint Vincent en de Grenadines\n-LocaleNames\/nl\/VE=Venezuela\n-LocaleNames\/nl\/VG=Britse Maagdeneilanden\n-LocaleNames\/nl\/VI=Amerikaanse Maagdeneilanden\n-LocaleNames\/nl\/VN=Vietnam\n-LocaleNames\/nl\/VU=Vanuatu\n-LocaleNames\/nl\/WF=Wallis en Futuna\n-LocaleNames\/nl\/WS=Samoa\n-LocaleNames\/nl\/YE=Jemen\n-LocaleNames\/nl\/YT=Mayotte\n-LocaleNames\/nl\/ZA=Zuid-Afrika\n-LocaleNames\/nl\/ZM=Zambia\n-\n-# bug 6919624\n-CalendarData\/hu\/minimalDaysInFirstWeek=4\n-\n-# bug 6998391\n-CalendarData\/sr-Latn\/firstDayOfWeek=2\n-CalendarData\/sr-Latn-BA\/firstDayOfWeek=2\n-CalendarData\/sr-Latn-ME\/firstDayOfWeek=2\n-CalendarData\/sr-Latn-RS\/firstDayOfWeek=2\n-#\n-CalendarData\/sr-Latn\/minimalDaysInFirstWeek=1\n-CalendarData\/sr-Latn-BA\/minimalDaysInFirstWeek=4\n-CalendarData\/sr-Latn-ME\/minimalDaysInFirstWeek=4\n-CalendarData\/sr-Latn-RS\/minimalDaysInFirstWeek=4\n-#\n-LocaleNames\/sr-Latn\/SR=Surinam\n-LocaleNames\/sr-Latn-BA\/SR=Surinam\n-LocaleNames\/sr-Latn-ME\/SR=Surinam\n-LocaleNames\/sr-Latn-RS\/SR=Surinam\n-#\n-FormatData\/sr-Latn\/MonthNames\/2=mart\n-FormatData\/sr-Latn-BA\/MonthNames\/4=maj\n-FormatData\/sr-Latn-ME\/MonthNames\/7=avgust\n-FormatData\/sr-Latn-RS\/MonthNames\/8=septembar\n-#\n-FormatData\/sr-Latn\/DayNames\/1=ponedeljak\n-FormatData\/sr-Latn-BA\/DayNames\/2=utorak\n-FormatData\/sr-Latn-ME\/DayNames\/3=sreda\n-FormatData\/sr-Latn-RS\/DayNames\/4=\\u010detvrtak\n-#\n-FormatData\/sr-Latn\/DayAbbreviations\/1=pon\n-FormatData\/sr-Latn-BA\/DayAbbreviations\/2=uto\n-FormatData\/sr-Latn-ME\/DayAbbreviations\/3=sre\n-FormatData\/sr-Latn-RS\/DayAbbreviations\/4=\\u010det\n-#\n-CurrencyNames\/sr-Latn\/EUR=EUR\n-CurrencyNames\/sr-Latn-BA\/EUR=\\u20ac\n-CurrencyNames\/sr-Latn-BA\/BAM=KM\n-CurrencyNames\/sr-Latn-ME\/EUR=\\u20ac\n-CurrencyNames\/sr-Latn-RS\/EUR=EUR\n-#\n-FormatData\/sr-Latn\/TimePatterns\/1=HH.mm.ss z\n-FormatData\/sr-Latn-BA\/TimePatterns\/2=HH.mm.ss\n-FormatData\/sr-Latn-ME\/DatePatterns\/1=d.MM.yyyy.\n-FormatData\/sr-Latn-RS\/DatePatterns\/1=dd. MMMM y.\n-\n-# bug 7019267\n-CurrencyNames\/pt\/adp=Peseta de Andorra\n-CurrencyNames\/pt\/aed=Dirham dos Emirados \\u00c1rabes Unidos\n-CurrencyNames\/pt\/afa=Afegane (1927\\u20132002)\n-CurrencyNames\/pt\/afn=Afegane afeg\\u00e3o\n-CurrencyNames\/pt\/all=Lek alban\\u00eas\n-CurrencyNames\/pt\/amd=Dram arm\\u00eanio\n-CurrencyNames\/pt\/ang=Florim das Antilhas Holandesas\n-CurrencyNames\/pt\/aoa=Kwanza angolano\n-CurrencyNames\/pt\/ars=Peso argentino\n-CurrencyNames\/pt\/ats=Xelim austr\\u00edaco\n-CurrencyNames\/pt\/aud=D\\u00f3lar australiano\n-CurrencyNames\/pt\/awg=Florim arubano\n-CurrencyNames\/pt\/azm=Manat azerbaijano (1993\\u20132006)\n-CurrencyNames\/pt\/azn=Manat azeri\n-CurrencyNames\/pt\/bam=Marco convers\\u00edvel da B\\u00f3snia e Herzegovina\n-CurrencyNames\/pt\/bbd=D\\u00f3lar barbadense\n-CurrencyNames\/pt\/bdt=Taka bengali\n-CurrencyNames\/pt\/bef=Franco belga\n-CurrencyNames\/pt\/bgl=Lev forte b\\u00falgaro\n-CurrencyNames\/pt\/bgn=Lev b\\u00falgaro\n-CurrencyNames\/pt\/bhd=Dinar bareinita\n-CurrencyNames\/pt\/bif=Franco burundiano\n-CurrencyNames\/pt\/bmd=D\\u00f3lar bermudense\n-CurrencyNames\/pt\/bnd=D\\u00f3lar bruneano\n-CurrencyNames\/pt\/bov=Mvdol boliviano\n-CurrencyNames\/pt\/brl=Real brasileiro\n-CurrencyNames\/pt\/bsd=D\\u00f3lar bahamense\n-CurrencyNames\/pt\/btn=Ngultrum butan\\u00eas\n-CurrencyNames\/pt\/bwp=Pula botsuanesa\n-CurrencyNames\/pt\/byb=Rublo novo bielo-russo (1994\\u20131999)\n-CurrencyNames\/pt\/byr=Rublo bielorrusso (2000\\u20132016)\n-CurrencyNames\/pt\/bzd=D\\u00f3lar belizenho\n-CurrencyNames\/pt\/cad=D\\u00f3lar canadense\n-CurrencyNames\/pt\/cdf=Franco congol\\u00eas\n-CurrencyNames\/pt\/chf=Franco su\\u00ed\\u00e7o\n-CurrencyNames\/pt\/clf=Unidades de Fomento chilenas\n-CurrencyNames\/pt\/clp=Peso chileno\n-CurrencyNames\/pt\/cny=Yuan chin\\u00eas\n-CurrencyNames\/pt\/cop=Peso colombiano\n-CurrencyNames\/pt\/crc=Col\\u00f3n costarriquenho\n-CurrencyNames\/pt\/csd=Dinar s\\u00e9rvio (2002\\u20132006)\n-CurrencyNames\/pt\/cup=Peso cubano\n-CurrencyNames\/pt\/cve=Escudo cabo-verdiano\n-CurrencyNames\/pt\/cyp=Libra cipriota\n-CurrencyNames\/pt\/czk=Coroa tcheca\n-CurrencyNames\/pt\/dem=Marco alem\\u00e3o\n-CurrencyNames\/pt\/djf=Franco djiboutiano\n-CurrencyNames\/pt\/dkk=Coroa dinamarquesa\n-CurrencyNames\/pt\/dop=Peso dominicano\n-CurrencyNames\/pt\/dzd=Dinar argelino\n-CurrencyNames\/pt\/eek=Coroa estoniana\n-CurrencyNames\/pt\/egp=Libra eg\\u00edpcia\n-CurrencyNames\/pt\/ern=Nakfa da Eritreia\n-CurrencyNames\/pt\/esp=Peseta espanhola\n-CurrencyNames\/pt\/etb=Birr et\\u00edope\n-CurrencyNames\/pt\/fim=Marca finlandesa\n-CurrencyNames\/pt\/fjd=D\\u00f3lar fijiano\n-CurrencyNames\/pt\/fkp=Libra malvinense\n-CurrencyNames\/pt\/frf=Franco franc\\u00eas\n-CurrencyNames\/pt\/gbp=Libra esterlina\n-CurrencyNames\/pt\/gel=Lari georgiano\n-CurrencyNames\/pt\/ghc=Cedi de Gana (1979\\u20132007)\n-CurrencyNames\/pt\/ghs=Cedi gan\\u00eas\n-CurrencyNames\/pt\/gip=Libra de Gibraltar\n-CurrencyNames\/pt\/gmd=Dalasi gambiano\n-CurrencyNames\/pt\/gnf=Franco guineano\n-CurrencyNames\/pt\/grd=Dracma grego\n-CurrencyNames\/pt\/gtq=Quetzal guatemalteco\n-CurrencyNames\/pt\/gwp=Peso da Guin\\u00e9-Bissau\n-CurrencyNames\/pt\/gyd=D\\u00f3lar guianense\n-CurrencyNames\/pt\/hkd=D\\u00f3lar de Hong Kong\n-CurrencyNames\/pt\/hnl=Lempira hondurenha\n-CurrencyNames\/pt\/hrk=Kuna croata\n-CurrencyNames\/pt\/htg=Gourde haitiano\n-CurrencyNames\/pt\/huf=Florim h\\u00fangaro\n-CurrencyNames\/pt\/idr=Rupia indon\\u00e9sia\n-CurrencyNames\/pt\/iep=Libra irlandesa\n-CurrencyNames\/pt\/ils=Novo shekel israelense\n-CurrencyNames\/pt\/inr=Rupia indiana\n-CurrencyNames\/pt\/iqd=Dinar iraquiano\n-CurrencyNames\/pt\/irr=Rial iraniano\n-CurrencyNames\/pt\/isk=Coroa islandesa\n-CurrencyNames\/pt\/itl=Lira italiana\n-CurrencyNames\/pt\/jmd=D\\u00f3lar jamaicano\n-CurrencyNames\/pt\/jod=Dinar jordaniano\n-CurrencyNames\/pt\/jpy=Iene japon\\u00eas\n-CurrencyNames\/pt\/kes=Xelim queniano\n-CurrencyNames\/pt\/kgs=Som quirguiz\n-CurrencyNames\/pt\/khr=Riel cambojano\n-CurrencyNames\/pt\/kmf=Franco comoriano\n-CurrencyNames\/pt\/kpw=Won norte-coreano\n-CurrencyNames\/pt\/krw=Won sul-coreano\n-CurrencyNames\/pt\/kwd=Dinar kuwaitiano\n-CurrencyNames\/pt\/kyd=D\\u00f3lar das Ilhas Cayman\n-CurrencyNames\/pt\/kzt=Tenge cazaque\n-CurrencyNames\/pt\/lak=Kip laosiano\n-CurrencyNames\/pt\/lbp=Libra libanesa\n-CurrencyNames\/pt\/lkr=Rupia cingalesa\n-CurrencyNames\/pt\/lrd=D\\u00f3lar liberiano\n-CurrencyNames\/pt\/lsl=Loti lesotiano\n-CurrencyNames\/pt\/ltl=Litas lituano\n-CurrencyNames\/pt\/luf=Franco luxemburgu\\u00eas\n-CurrencyNames\/pt\/lvl=Lats let\\u00e3o\n-CurrencyNames\/pt\/lyd=Dinar l\\u00edbio\n-CurrencyNames\/pt\/mad=Dirham marroquino\n-CurrencyNames\/pt\/mdl=Leu mold\\u00e1vio\n-CurrencyNames\/pt\/mga=Ariary malgaxe\n-CurrencyNames\/pt\/mgf=Franco de Madagascar\n-CurrencyNames\/pt\/mkd=Dinar maced\\u00f4nio\n-CurrencyNames\/pt\/mmk=Quiate mianmarense\n-CurrencyNames\/pt\/mnt=Tugrik mongol\n-CurrencyNames\/pt\/mop=Pataca macaense\n-CurrencyNames\/pt\/mro=Ouguiya mauritana (1973\\u20132017)\n-CurrencyNames\/pt\/mtl=Lira maltesa\n-CurrencyNames\/pt\/mur=Rupia mauriciana\n-CurrencyNames\/pt\/mvr=Rupia maldivana\n-CurrencyNames\/pt\/mwk=Kwacha malauiana\n-CurrencyNames\/pt\/mxn=Peso mexicano\n-CurrencyNames\/pt\/mxv=Unidade Mexicana de Investimento (UDI)\n-CurrencyNames\/pt\/myr=Ringgit malaio\n-CurrencyNames\/pt\/mzm=Metical de Mo\\u00e7ambique (1980\\u20132006)\n-CurrencyNames\/pt\/mzn=Metical mo\\u00e7ambicano\n-CurrencyNames\/pt\/nad=D\\u00f3lar namibiano\n-CurrencyNames\/pt\/ngn=Naira nigeriana\n-CurrencyNames\/pt\/nio=C\\u00f3rdoba nicaraguense\n-CurrencyNames\/pt\/nlg=Florim holand\\u00eas\n-CurrencyNames\/pt\/nok=Coroa norueguesa\n-CurrencyNames\/pt\/npr=Rupia nepalesa\n-CurrencyNames\/pt\/nzd=D\\u00f3lar neozeland\\u00eas\n-CurrencyNames\/pt\/omr=Rial omanense\n-CurrencyNames\/pt\/pab=Balboa panamenho\n-CurrencyNames\/pt\/pen=Novo sol peruano\n-CurrencyNames\/pt\/pgk=Kina papu\\u00e1sia\n-CurrencyNames\/pt\/php=Peso filipino\n-CurrencyNames\/pt\/pkr=Rupia paquistanesa\n-CurrencyNames\/pt\/pln=Zloty polon\\u00eas\n-CurrencyNames\/pt\/pte=Escudo portugu\\u00eas\n-CurrencyNames\/pt\/pyg=Guarani paraguaio\n-CurrencyNames\/pt\/qar=Rial catariano\n-CurrencyNames\/pt\/rol=Leu romeno (1952\\u20132006)\n-CurrencyNames\/pt\/ron=Leu romeno\n-CurrencyNames\/pt\/rsd=Dinar s\\u00e9rvio\n-CurrencyNames\/pt\/rub=Rublo russo\n-CurrencyNames\/pt\/rur=Rublo russo (1991\\u20131998)\n-CurrencyNames\/pt\/rwf=Franco ruand\\u00eas\n-CurrencyNames\/pt\/sar=Riyal saudita\n-CurrencyNames\/pt\/sbd=D\\u00f3lar das Ilhas Salom\\u00e3o\n-CurrencyNames\/pt\/scr=Rupia seichelense\n-CurrencyNames\/pt\/sdd=Dinar sudan\\u00eas (1992\\u20132007)\n-CurrencyNames\/pt\/sdg=Libra sudanesa\n-CurrencyNames\/pt\/sek=Coroa sueca\n-CurrencyNames\/pt\/sgd=D\\u00f3lar singapuriano\n-CurrencyNames\/pt\/shp=Libra de Santa Helena\n-CurrencyNames\/pt\/sit=Tolar Bons esloveno\n-CurrencyNames\/pt\/skk=Coroa eslovaca\n-CurrencyNames\/pt\/sll=Leone de Serra Leoa\n-CurrencyNames\/pt\/sos=Xelim somali\n-CurrencyNames\/pt\/srd=D\\u00f3lar surinam\\u00eas\n-CurrencyNames\/pt\/srg=Florim do Suriname\n-CurrencyNames\/pt\/std=Dobra de S\\u00e3o Tom\\u00e9 e Pr\\u00edncipe (1977\\u20132017)\n-CurrencyNames\/pt\/svc=Colom salvadorenho\n-CurrencyNames\/pt\/syp=Libra s\\u00edria\n-CurrencyNames\/pt\/szl=Lilangeni suazi\n-CurrencyNames\/pt\/thb=Baht tailand\\u00eas\n-CurrencyNames\/pt\/tjs=Somoni tadjique\n-CurrencyNames\/pt\/tmm=Manat do Turcomenist\\u00e3o (1993\\u20132009)\n-CurrencyNames\/pt\/tnd=Dinar tunisiano\n-CurrencyNames\/pt\/top=Pa\\u02bbanga tonganesa\n-CurrencyNames\/pt\/tpe=Escudo timorense\n-CurrencyNames\/pt\/trl=Lira turca (1922\\u20132005)\n-CurrencyNames\/pt\/try=Lira turca\n-CurrencyNames\/pt\/ttd=D\\u00f3lar de Trinidad e Tobago\n-CurrencyNames\/pt\/twd=Novo d\\u00f3lar taiwan\\u00eas\n-CurrencyNames\/pt\/tzs=Xelim tanzaniano\n-CurrencyNames\/pt\/uah=Hryvnia ucraniano\n-CurrencyNames\/pt\/ugx=Xelim ugandense\n-CurrencyNames\/pt\/usd=D\\u00f3lar americano\n-CurrencyNames\/pt\/usn=D\\u00f3lar norte-americano (Dia seguinte)\n-CurrencyNames\/pt\/uss=D\\u00f3lar norte-americano (Mesmo dia)\n-CurrencyNames\/pt\/uyu=Peso uruguaio\n-CurrencyNames\/pt\/uzs=Som uzbeque\n-CurrencyNames\/pt\/veb=Bol\\u00edvar venezuelano (1871\\u20132008)\n-CurrencyNames\/pt\/vef=Bol\\u00edvar venezuelano (2008\\u20132018)\n-CurrencyNames\/pt\/vnd=Dong vietnamita\n-CurrencyNames\/pt\/vuv=Vatu de Vanuatu\n-CurrencyNames\/pt\/wst=Tala samoano\n-CurrencyNames\/pt\/xaf=Franco CFA de BEAC\n-CurrencyNames\/pt\/xag=Prata\n-CurrencyNames\/pt\/xau=Ouro\n-CurrencyNames\/pt\/xba=Unidade Composta Europeia\n-CurrencyNames\/pt\/xbb=Unidade Monet\\u00e1ria Europeia\n-CurrencyNames\/pt\/xbc=Unidade de Conta Europeia (XBC)\n-CurrencyNames\/pt\/xbd=Unidade de Conta Europeia (XBD)\n-CurrencyNames\/pt\/xcd=D\\u00f3lar do Caribe Oriental\n-CurrencyNames\/pt\/xdr=Direitos Especiais de Giro\n-CurrencyNames\/pt\/xfo=Franco-ouro franc\\u00eas\n-CurrencyNames\/pt\/xfu=Franco UIC franc\\u00eas\n-CurrencyNames\/pt\/xof=Franco CFA de BCEAO\n-CurrencyNames\/pt\/xpd=Pal\\u00e1dio\n-CurrencyNames\/pt\/xpf=Franco CFP\n-CurrencyNames\/pt\/xpt=Platina\n-CurrencyNames\/pt\/xts=C\\u00f3digo de Moeda de Teste\n-CurrencyNames\/pt\/xxx=Moeda desconhecida\n-CurrencyNames\/pt\/yer=Rial iemenita\n-CurrencyNames\/pt\/yum=Dinar noviy iugoslavo (1994\\u20132002)\n-CurrencyNames\/pt\/zar=Rand sul-africano\n-CurrencyNames\/pt\/zmk=Cuacha zambiano (1968\\u20132012)\n-CurrencyNames\/pt\/zwd=D\\u00f3lar do Zimb\\u00e1bue (1980\\u20132008)\n-\n-# bug 7020960\n-CurrencyNames\/sr_RS\/RSD=\\u0434\\u0438\\u043d.\n-\n-# bug 7025837\n-CurrencyNames\/sr-Latn-BA\/bam=Bosanskohercegova\\u010dka konvertibilna marka\n-CurrencyNames\/sr-Latn-BA\/eur=Evro\n-CurrencyNames\/sr-Latn-ME\/eur=Evro\n-CurrencyNames\/sr-Latn-RS\/rsd=srpski dinar\n-\n-CurrencyNames\/\/afa=Afghan Afghani (1927-2002)\n-CurrencyNames\/\/afn=Afghan Afghani\n-CurrencyNames\/\/ang=Netherlands Antillean Guilder\n-CurrencyNames\/\/awg=Aruban Florin\n-CurrencyNames\/\/azm=Azerbaijani Manat (1993-2006)\n-CurrencyNames\/\/bbd=Barbadian Dollar\n-CurrencyNames\/\/bdt=Bangladeshi Taka\n-CurrencyNames\/\/bgn=Bulgarian Lev\n-CurrencyNames\/\/bif=Burundian Franc\n-CurrencyNames\/\/bob=Bolivian Boliviano\n-CurrencyNames\/\/btn=Bhutanese Ngultrum\n-CurrencyNames\/\/byb=Belarusian Ruble (1994-1999)\n-CurrencyNames\/\/byr=Belarusian Ruble (2000-2016)\n-CurrencyNames\/\/cdf=Congolese Franc\n-CurrencyNames\/\/clf=Chilean Unit of Account (UF)\n-CurrencyNames\/\/cny=Chinese Yuan\n-CurrencyNames\/\/crc=Costa Rican Col\\u00f3n\n-CurrencyNames\/\/csd=Serbian Dinar (2002-2006)\n-CurrencyNames\/\/cve=Cape Verdean Escudo\n-CurrencyNames\/\/cyp=Cypriot Pound\n-CurrencyNames\/\/dem=German Mark\n-CurrencyNames\/\/djf=Djiboutian Franc\n-CurrencyNames\/\/fjd=Fijian Dollar\n-CurrencyNames\/\/ghc=Ghanaian Cedi (1979-2007)\n-CurrencyNames\/\/ghs=Ghanaian Cedi\n-CurrencyNames\/\/gmd=Gambian Dalasi\n-CurrencyNames\/\/gnf=Guinean Franc\n-CurrencyNames\/\/gtq=Guatemalan Quetzal\n-CurrencyNames\/\/gyd=Guyanaese Dollar\n-CurrencyNames\/\/hnl=Honduran Lempira\n-CurrencyNames\/\/isk=Icelandic Kr\\u00f3na\n-CurrencyNames\/\/kgs=Kyrgystani Som\n-CurrencyNames\/\/kmf=Comorian Franc\n-CurrencyNames\/\/kzt=Kazakhstani Tenge\n-CurrencyNames\/\/lkr=Sri Lankan Rupee\n-CurrencyNames\/\/ltl=Lithuanian Litas\n-CurrencyNames\/\/luf=Luxembourgian Franc\n-CurrencyNames\/\/mga=Malagasy Ariary\n-CurrencyNames\/\/mgf=Malagasy Franc\n-CurrencyNames\/\/mmk=Myanma Kyat\n-CurrencyNames\/\/mop=Macanese Pataca\n-CurrencyNames\/\/mro=Mauritanian Ouguiya\n-CurrencyNames\/\/mur=Mauritian Rupee\n-CurrencyNames\/\/mvr=Maldivian Rufiyaa\n-CurrencyNames\/\/mxv=Mexican Investment Unit\n-CurrencyNames\/\/mzm=Mozambican Metical (1980-2006)\n-CurrencyNames\/\/mzn=Mozambican Metical\n-CurrencyNames\/\/nad=Namibian Dollar\n-CurrencyNames\/\/nio=Nicaraguan C\\u00f3rdoba\n-CurrencyNames\/\/nlg=Dutch Guilder\n-CurrencyNames\/\/omr=Omani Rial\n-CurrencyNames\/\/pgk=Papua New Guinean Kina\n-CurrencyNames\/\/pkr=Pakistani Rupee\n-CurrencyNames\/\/pyg=Paraguayan Guarani\n-CurrencyNames\/\/rol=Romanian Leu (1952-2006)\n-CurrencyNames\/\/rsd=Serbian Dinar\n-CurrencyNames\/\/scr=Seychellois Rupee\n-CurrencyNames\/\/sdd=Sudanese Dinar (1992-2007)\n-CurrencyNames\/\/sit=Slovenian Tolar\n-CurrencyNames\/\/sle=Sierra Leonean Leone\n-CurrencyNames\/\/sll=Sierra Leonean Leone\n-CurrencyNames\/\/srd=Surinamese Dollar\n-CurrencyNames\/\/srg=Surinamese Guilder\n-CurrencyNames\/\/std=S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe Dobra\n-CurrencyNames\/\/svc=Salvadoran Col\\u00f3n\n-CurrencyNames\/\/szl=Swazi Lilangeni\n-CurrencyNames\/\/tjs=Tajikistani Somoni\n-CurrencyNames\/\/tmm=Turkmenistani Manat (1993-2009)\n-CurrencyNames\/\/top=Tongan Pa\\u02bbanga\n-CurrencyNames\/\/tpe=Timorese Escudo\n-CurrencyNames\/\/trl=Turkish Lira (1922-2005)\n-CurrencyNames\/\/try=Turkish Lira\n-CurrencyNames\/\/twd=New Taiwan Dollar\n-CurrencyNames\/\/uyu=Uruguayan Peso\n-CurrencyNames\/\/uzs=Uzbekistan Som\n-CurrencyNames\/\/veb=Venezuelan Bol\\u00edvar (1871-2008)\n-CurrencyNames\/\/vef=Venezuelan Bol\\u00edvar\n-CurrencyNames\/\/wst=Samoan Tala\n-CurrencyNames\/\/xxx=Unknown Currency\n-CurrencyNames\/\/yum=Yugoslavian New Dinar (1994-2002)\n-CurrencyNames\/\/zwd=Zimbabwean Dollar (1980-2008)\n-\n-# bug 7020583\n-CurrencyNames\/de\/azm=Aserbaidschainischer Manat (1993-2006)\n-CurrencyNames\/de\/azn=Aserbaidschainischer Manat\n-CurrencyNames\/de\/csd=Serbischer Dinar (2002-2006)\n-CurrencyNames\/de\/cyp=Zypern-Pfund\n-CurrencyNames\/de\/esp=Spanische Pesete\n-CurrencyNames\/de\/fjd=Fidschi-Dollar\n-CurrencyNames\/de\/fkp=Falklandinseln-Pfund\n-CurrencyNames\/de\/ghs=Ghanaischer Cedi\n-CurrencyNames\/de\/gip=Gibraltar-Pfund\n-CurrencyNames\/de\/gnf=Guinea-Franc\n-CurrencyNames\/de\/gyd=Guyana-Dollar\n-CurrencyNames\/de\/hkd=Hongkong-Dollar\n-CurrencyNames\/de\/itl=Italienische Lire\n-CurrencyNames\/de\/jmd=Jamaikanischer Dollar\n-CurrencyNames\/de\/kes=Kenianischer Schilling\n-CurrencyNames\/de\/mgf=Madagaskar-Franc\n-CurrencyNames\/de\/mur=Mauritius-Rupie\n-CurrencyNames\/de\/mzm=Mosambikanischer Metical (1980-2006)\n-CurrencyNames\/de\/mzn=Mosambikanischer Metical\n-CurrencyNames\/de\/nad=Namibischer Dollar\n-CurrencyNames\/de\/nzd=Neuseel\\u00e4ndischer Dollar\n-CurrencyNames\/de\/ron=Rum\\u00e4nischer Leu\n-CurrencyNames\/de\/rsd=Serbischer Dinar\n-CurrencyNames\/de\/rwf=Ruanda-Franc\n-CurrencyNames\/de\/sbd=Salomonen-Dollar\n-CurrencyNames\/de\/scr=Seychellen-Rupie\n-CurrencyNames\/de\/sdg=Sudanesisches Pfund\n-CurrencyNames\/de\/sgd=Singapur-Dollar\n-CurrencyNames\/de\/sos=Somalischer Schilling\n-CurrencyNames\/de\/srd=Suriname-Dollar\n-CurrencyNames\/de\/tpe=Escudo (Portugiesisch-Timor)\n-CurrencyNames\/de\/trl=T\\u00fcrkische Lira (1922-2005)\n-CurrencyNames\/de\/try=T\\u00fcrkische Lira\n-CurrencyNames\/de\/ttd=Trinidad\/Tobago-Dollar\n-CurrencyNames\/de\/twd=Neu-Taiwan Dollar\n-CurrencyNames\/de\/tzs=Tansania-Schilling\n-CurrencyNames\/de\/ugx=Uganda-Schilling\n-CurrencyNames\/de\/usd=US-Dollar\n-CurrencyNames\/de\/vef=Venezolanischer Bol\\u00edvar Fuerte\n-CurrencyNames\/de\/xag=Silber\n-CurrencyNames\/de\/xau=Gold\n-CurrencyNames\/de\/xbb=European Monetary Unit\n-CurrencyNames\/de\/xpd=Palladium\n-CurrencyNames\/de\/xpt=Platin\n-CurrencyNames\/de\/xts=Testw\\u00e4hrungscode\n-CurrencyNames\/de\/xxx=Unbekannte W\\u00e4hrung\n-CurrencyNames\/de\/yer=Jemen-Rial\n-CurrencyNames\/de\/zar=S\\u00fcdafrikanischer Rand\n-CurrencyNames\/de\/zwd=Simbabwe-Dollar (1980-2008)\n-\n-CurrencyNames\/es\/aed=d\\u00edrham de los Emiratos \\u00c1rabes Unidos\n-CurrencyNames\/es\/azm=manat azer\\u00ed (1993\\u20132006)\n-CurrencyNames\/es\/azn=manat azerbaiyano\n-CurrencyNames\/es\/csd=antiguo dinar serbio\n-CurrencyNames\/es\/ghc=cedi ghan\\u00e9s (1979\\u20132007)\n-CurrencyNames\/es\/ghs=cedi\n-CurrencyNames\/es\/mzm=antiguo metical mozambique\\u00f1o\n-CurrencyNames\/es\/mzn=metical\n-CurrencyNames\/es\/rsd=dinar serbio\n-CurrencyNames\/es\/sdg=libra sudanesa\n-CurrencyNames\/es\/trl=lira turca (1922\\u20132005)\n-CurrencyNames\/es\/vef=bol\\u00edvar venezolano (2008\\u20132018)\n-\n-CurrencyNames\/fr\/afa=afghani (1927\\u20132002)\n-CurrencyNames\/fr\/all=lek albanais\n-CurrencyNames\/fr\/ang=florin antillais\n-CurrencyNames\/fr\/awg=florin arubais\n-CurrencyNames\/fr\/azm=manat az\\u00e9ri (1993\\u20132006)\n-CurrencyNames\/fr\/azn=manat az\\u00e9ri\n-CurrencyNames\/fr\/bam=mark convertible bosniaque\n-CurrencyNames\/fr\/bbd=dollar barbadien\n-CurrencyNames\/fr\/bdt=taka bangladeshi\n-CurrencyNames\/fr\/bgl=lev bulgare (1962\\u20131999)\n-CurrencyNames\/fr\/bgn=lev bulgare\n-CurrencyNames\/fr\/bhd=dinar bahre\\u00efni\n-CurrencyNames\/fr\/bif=franc burundais\n-CurrencyNames\/fr\/bmd=dollar bermudien\n-CurrencyNames\/fr\/bnd=dollar brun\\u00e9ien\n-CurrencyNames\/fr\/bov=mvdol bolivien\n-CurrencyNames\/fr\/brl=r\\u00e9al br\\u00e9silien\n-CurrencyNames\/fr\/bsd=dollar baham\\u00e9en\n-CurrencyNames\/fr\/btn=ngultrum bouthanais\n-CurrencyNames\/fr\/bwp=pula botswanais\n-CurrencyNames\/fr\/bzd=dollar b\\u00e9liz\\u00e9en\n-CurrencyNames\/fr\/cny=yuan renminbi chinois\n-CurrencyNames\/fr\/crc=col\\u00f3n costaricain\n-CurrencyNames\/fr\/csd=dinar serbo-mont\\u00e9n\\u00e9grin\n-CurrencyNames\/fr\/cve=escudo capverdien\n-CurrencyNames\/fr\/cyp=livre chypriote\n-CurrencyNames\/fr\/dem=mark allemand\n-CurrencyNames\/fr\/djf=franc djiboutien\n-CurrencyNames\/fr\/ern=nafka \\u00e9rythr\\u00e9en\n-CurrencyNames\/fr\/etb=birr \\u00e9thiopien\n-CurrencyNames\/fr\/fjd=dollar fidjien\n-CurrencyNames\/fr\/fkp=livre des \\u00eeles Malouines\n-CurrencyNames\/fr\/gel=lari g\\u00e9orgien\n-CurrencyNames\/fr\/ghs=c\\u00e9di ghan\\u00e9en\n-CurrencyNames\/fr\/gmd=dalasi gambien\n-CurrencyNames\/fr\/grd=drachme grecque\n-CurrencyNames\/fr\/gtq=quetzal guat\\u00e9malt\\u00e8que\n-CurrencyNames\/fr\/gwp=peso bissau-guin\\u00e9en\n-CurrencyNames\/fr\/hnl=lempira hondurien\n-CurrencyNames\/fr\/hrk=kuna croate\n-CurrencyNames\/fr\/htg=gourde ha\\u00eftienne\n-CurrencyNames\/fr\/huf=forint hongrois\n-CurrencyNames\/fr\/idr=roupie indon\\u00e9sienne\n-CurrencyNames\/fr\/ils=nouveau shekel isra\\u00e9lien\n-CurrencyNames\/fr\/iqd=dinar irakien\n-CurrencyNames\/fr\/jpy=yen japonais\n-CurrencyNames\/fr\/kes=shilling k\\u00e9nyan\n-CurrencyNames\/fr\/kgs=som kirghize\n-CurrencyNames\/fr\/khr=riel cambodgien\n-CurrencyNames\/fr\/kmf=franc comorien\n-CurrencyNames\/fr\/kwd=dinar kowe\\u00eftien\n-CurrencyNames\/fr\/kzt=tenge kazakh\n-CurrencyNames\/fr\/lak=kip loatien\n-CurrencyNames\/fr\/lkr=roupie srilankaise\n-CurrencyNames\/fr\/lsl=loti lesothan\n-CurrencyNames\/fr\/mga=ariary malgache\n-CurrencyNames\/fr\/mkd=denar mac\\u00e9donien\n-CurrencyNames\/fr\/mmk=kyat myanmarais\n-CurrencyNames\/fr\/mnt=tugrik mongol\n-CurrencyNames\/fr\/mop=pataca macanaise\n-CurrencyNames\/fr\/mro=ouguiya mauritanien (1973\\u20132017)\n-CurrencyNames\/fr\/mvr=rufiyaa maldivien\n-CurrencyNames\/fr\/mwk=kwacha malawite\n-CurrencyNames\/fr\/myr=ringgit malais\n-CurrencyNames\/fr\/mzn=metical mozambicain\n-CurrencyNames\/fr\/ngn=naira nig\\u00e9rian\n-CurrencyNames\/fr\/nio=c\\u00f3rdoba oro nicaraguayen\n-CurrencyNames\/fr\/npr=roupie n\\u00e9palaise\n-CurrencyNames\/fr\/pab=balboa panam\\u00e9en\n-CurrencyNames\/fr\/pgk=kina papouan-n\\u00e9o-guin\\u00e9en\n-CurrencyNames\/fr\/pkr=roupie pakistanaise\n-CurrencyNames\/fr\/pln=zloty polonais\n-CurrencyNames\/fr\/pyg=guaran\\u00ed paraguayen\n-CurrencyNames\/fr\/qar=riyal qatari\n-CurrencyNames\/fr\/ron=leu roumain\n-CurrencyNames\/fr\/rsd=dinar serbe\n-CurrencyNames\/fr\/rub=rouble russe\n-CurrencyNames\/fr\/rur=rouble russe (1991\\u20131998)\n-CurrencyNames\/fr\/sbd=dollar des \\u00eeles Salomon\n-CurrencyNames\/fr\/sdg=livre soudanaise\n-CurrencyNames\/fr\/sit=tolar slov\\u00e8ne\n-CurrencyNames\/fr\/sll=leone sierra-l\\u00e9onais\n-CurrencyNames\/fr\/sos=shilling somalien\n-CurrencyNames\/fr\/srg=florin surinamais\n-CurrencyNames\/fr\/std=dobra santom\\u00e9en (1977\\u20132017)\n-CurrencyNames\/fr\/svc=col\\u00f3n salvadorien\n-CurrencyNames\/fr\/szl=lilangeni swazi\n-CurrencyNames\/fr\/thb=baht tha\\u00eflandais\n-CurrencyNames\/fr\/tjs=somoni tadjik\n-CurrencyNames\/fr\/tmm=manat turkm\\u00e8ne\n-CurrencyNames\/fr\/top=pa\\u2019anga tongan\n-CurrencyNames\/fr\/tpe=escudo timorais\n-CurrencyNames\/fr\/ttd=dollar de Trinit\\u00e9-et-Tobago\n-CurrencyNames\/fr\/twd=nouveau dollar ta\\u00efwanais\n-CurrencyNames\/fr\/tzs=shilling tanzanien\n-CurrencyNames\/fr\/uah=hryvnia ukrainienne\n-CurrencyNames\/fr\/uzs=sum ouzbek\n-CurrencyNames\/fr\/vef=bolivar v\\u00e9n\\u00e9zu\\u00e9lien (2008\\u20132018)\n-CurrencyNames\/fr\/vnd=d\\u00f4ng vietnamien\n-CurrencyNames\/fr\/vuv=vatu vanuatuan\n-CurrencyNames\/fr\/wst=tala samoan\n-CurrencyNames\/fr\/xts=(devise de test)\n-CurrencyNames\/fr\/xxx=devise inconnue ou non valide\n-CurrencyNames\/fr\/yer=riyal y\\u00e9m\\u00e9nite\n-CurrencyNames\/fr\/zar=rand sud-africain\n-CurrencyNames\/fr\/zmk=kwacha zambien (1968\\u20132012)\n-CurrencyNames\/fr\/zwd=dollar zimbabw\\u00e9en\n-\n-CurrencyNames\/it\/azm=manat azero (1993\\u20132006)\n-CurrencyNames\/it\/ghs=cedi ghanese\n-CurrencyNames\/it\/iep=sterlina irlandese\n-CurrencyNames\/it\/mzn=metical mozambicano\n-CurrencyNames\/it\/rsd=dinaro serbo\n-CurrencyNames\/it\/sdg=sterlina sudanese\n-CurrencyNames\/it\/srd=dollaro del Suriname\n-CurrencyNames\/it\/vef=bol\\u00edvar venezuelano (2008\\u20132018)\n-CurrencyNames\/it\/xag=argento\n-CurrencyNames\/it\/xpd=palladio\n-\n-CurrencyNames\/ja\/azm=\\u30a2\\u30bc\\u30eb\\u30d0\\u30a4\\u30b8\\u30e3\\u30f3\\u30fb\\u30de\\u30ca\\u30c8(1993-2006)\n-CurrencyNames\/ja\/azn=\\u30a2\\u30bc\\u30eb\\u30d0\\u30a4\\u30b8\\u30e3\\u30f3\\u30fb\\u30de\\u30ca\\u30c8\n-CurrencyNames\/ja\/ghc=\\u30ac\\u30fc\\u30ca\\u30fb\\u30bb\\u30c7\\u30a3(1979-2007)\n-CurrencyNames\/ja\/ghs=\\u30ac\\u30fc\\u30ca\\u30fb\\u30bb\\u30c7\\u30a3\n-CurrencyNames\/ja\/mzn=\\u30e2\\u30b6\\u30f3\\u30d3\\u30fc\\u30af\\u30fb\\u30e1\\u30c6\\u30a3\\u30ab\\u30eb\n-CurrencyNames\/ja\/rol=\\u30eb\\u30fc\\u30de\\u30cb\\u30a2\\u30fb\\u30ec\\u30a4(1952-2006)\n-CurrencyNames\/ja\/ron=\\u30eb\\u30fc\\u30de\\u30cb\\u30a2\\u30fb\\u30ec\\u30a4\n-CurrencyNames\/ja\/rsd=\\u30bb\\u30eb\\u30d3\\u30a2\\u30fb\\u30c7\\u30a3\\u30ca\\u30fc\\u30eb\n-CurrencyNames\/ja\/sdg=\\u30b9\\u30fc\\u30c0\\u30f3\\u30fb\\u30dd\\u30f3\\u30c9\n-CurrencyNames\/ja\/srd=\\u30b9\\u30ea\\u30ca\\u30e0\\u30fb\\u30c9\\u30eb\n-CurrencyNames\/ja\/vef=\\u30d9\\u30cd\\u30ba\\u30a8\\u30e9\\u30fb\\u30dc\\u30ea\\u30d0\\u30eb\n-CurrencyNames\/ja\/xag=\\u9280\n-CurrencyNames\/ja\/xpd=\\u30d1\\u30e9\\u30b8\\u30a6\\u30e0\n-CurrencyNames\/ja\/xpt=\\u30d7\\u30e9\\u30c1\\u30ca\n-CurrencyNames\/ja\/xts=\\u30c6\\u30b9\\u30c8\\u901a\\u8ca8\\u30b3\\u30fc\\u30c9\n-CurrencyNames\/ja\/xxx=\\u4e0d\\u660e\\u306a\\u901a\\u8ca8\n-CurrencyNames\/ja\/zmk=\\u30b6\\u30f3\\u30d3\\u30a2\\u30fb\\u30af\\u30ef\\u30c1\\u30e3\n-\n-CurrencyNames\/ko\/aed=\\uc544\\ub78d\\uc5d0\\ubbf8\\ub9ac\\ud2b8 \\ub514\\ub974\\ud568\n-CurrencyNames\/ko\/ang=\\ub124\\ub35c\\ub780\\ub4dc\\ub839 \\uc548\\ud2f8\\ub808\\uc2a4 \\uae38\\ub354\n-CurrencyNames\/ko\/azm=\\uc544\\uc81c\\ub974\\ubc14\\uc774\\uc820 \\ub9c8\\ub098\\ud2b8(1993\\u20132006)\n-CurrencyNames\/ko\/azn=\\uc544\\uc81c\\ub974\\ubc14\\uc774\\uc794 \\ub9c8\\ub098\\ud2b8\n-CurrencyNames\/ko\/bov=\\ubcfc\\ub9ac\\ube44\\uc544\\ub178 Mvdol(\\uae30\\uae08)\n-CurrencyNames\/ko\/chf=\\uc2a4\\uc704\\uc2a4 \\ud504\\ub791\n-CurrencyNames\/ko\/clf=\\uce60\\ub808 (UF)\n-CurrencyNames\/ko\/csd=\\uace0 \\uc138\\ub974\\ube44\\uc544 \\ub514\\ub098\\ub974\n-CurrencyNames\/ko\/ghc=\\uac00\\ub098 \\uc2dc\\ub514 (1979\\u20132007)\n-CurrencyNames\/ko\/ghs=\\uac00\\ub098 \\uc2dc\\ub514\n-CurrencyNames\/ko\/mxv=\\uba55\\uc2dc\\ucf54 (UDI)\n-CurrencyNames\/ko\/myr=\\ub9d0\\ub808\\uc774\\uc2dc\\uc544 \\ub9c1\\uae43\n-CurrencyNames\/ko\/mzm=\\uace0 \\ubaa8\\uc7a0\\ube44\\ud06c \\uba54\\ud2f0\\uce7c\n-CurrencyNames\/ko\/mzn=\\ubaa8\\uc7a0\\ube44\\ud06c \\uba54\\ud2f0\\uce7c\n-CurrencyNames\/ko\/ron=\\ub8e8\\ub9c8\\ub2c8\\uc544 \\ub808\\uc6b0\n-CurrencyNames\/ko\/rsd=\\uc138\\ub974\\ube44\\uc544 \\ub514\\ub098\\ub974\n-CurrencyNames\/ko\/sdg=\\uc218\\ub2e8 \\ud30c\\uc6b4\\ub4dc\n-CurrencyNames\/ko\/srd=\\uc218\\ub9ac\\ub0a8 \\ub2ec\\ub7ec\n-CurrencyNames\/ko\/top=\\ud1b5\\uac00 \\ud30c\\uc559\\uac00\n-CurrencyNames\/ko\/trl=\\ud130\\ud0a4 \\ub9ac\\ub77c\n-CurrencyNames\/ko\/try=\\uc2e0 \\ud130\\ud0a4 \\ub9ac\\ub77c\n-CurrencyNames\/ko\/usn=\\ubbf8\\uad6d \\ub2ec\\ub7ec(\\ub2e4\\uc74c\\ub0a0)\n-CurrencyNames\/ko\/uss=\\ubbf8\\uad6d \\ub2ec\\ub7ec(\\ub2f9\\uc77c)\n-CurrencyNames\/ko\/vef=\\ubca0\\ub124\\uc218\\uc5d8\\ub77c \\ubcfc\\ub9ac\\ubc14\\ub974 (2008\\u20132018)\n-CurrencyNames\/ko\/xaf=\\uc911\\uc559\\uc544\\ud504\\ub9ac\\uce74 CFA \\ud504\\ub791\n-CurrencyNames\/ko\/xag=\\uc740\\ud654\n-CurrencyNames\/ko\/xba=\\uc720\\ub974\\ucf54 (\\uc720\\ub7fd \\ud68c\\uacc4 \\ub2e8\\uc704)\n-CurrencyNames\/ko\/xbb=\\uc720\\ub7fd \\ud1b5\\ud654 \\ub3d9\\ub9f9\n-CurrencyNames\/ko\/xbc=\\uc720\\ub7fd \\uacc4\\uc0b0 \\ub2e8\\uc704 (XBC)\n-CurrencyNames\/ko\/xbd=\\uc720\\ub7fd \\uacc4\\uc0b0 \\ub2e8\\uc704 (XBD)\n-CurrencyNames\/ko\/xof=\\uc11c\\uc544\\ud504\\ub9ac\\uce74 CFA \\ud504\\ub791\n-CurrencyNames\/ko\/xpd=\\ud314\\ub77c\\ub4d0\n-CurrencyNames\/ko\/xpf=CFP \\ud504\\ub791\n-CurrencyNames\/ko\/xpt=\\ubc31\\uae08\n-CurrencyNames\/ko\/xts=\\ud14c\\uc2a4\\ud2b8 \\ud1b5\\ud654 \\ucf54\\ub4dc\n-CurrencyNames\/ko\/xxx=\\uc54c \\uc218 \\uc5c6\\ub294 \\ud1b5\\ud654 \\ub2e8\\uc704\n-CurrencyNames\/ko\/zwd=\\uc9d0\\ubc14\\ube0c\\uc6e8 \\ub2ec\\ub7ec\n-\n-CurrencyNames\/sv\/adp=andorransk peseta\n-CurrencyNames\/sv\/aed=emiratisk dirham\n-CurrencyNames\/sv\/afa=afghani (1927\\u20132002)\n-CurrencyNames\/sv\/afn=afghansk afghani\n-CurrencyNames\/sv\/all=albansk lek\n-CurrencyNames\/sv\/amd=armenisk dram\n-CurrencyNames\/sv\/ang=antillergulden\n-CurrencyNames\/sv\/aoa=angolansk kwanza\n-CurrencyNames\/sv\/ars=argentinsk peso\n-CurrencyNames\/sv\/ats=\\u00f6sterrikisk schilling\n-CurrencyNames\/sv\/aud=australisk dollar\n-CurrencyNames\/sv\/awg=arubansk florin\n-CurrencyNames\/sv\/azm=azerbajdzjansk manat (1993\\u20132006)\n-CurrencyNames\/sv\/azn=azerbajdzjansk manat\n-CurrencyNames\/sv\/bam=bosnisk-hercegovinsk mark (konvertibel)\n-CurrencyNames\/sv\/bbd=barbadisk dollar\n-CurrencyNames\/sv\/bdt=bangladeshisk taka\n-CurrencyNames\/sv\/bef=belgisk franc\n-CurrencyNames\/sv\/bgn=bulgarisk lev\n-CurrencyNames\/sv\/bhd=bahrainsk dinar\n-CurrencyNames\/sv\/bif=burundisk franc\n-CurrencyNames\/sv\/bnd=bruneisk dollar\n-CurrencyNames\/sv\/bob=boliviansk boliviano\n-CurrencyNames\/sv\/bov=boliviansk mvdol\n-CurrencyNames\/sv\/brl=brasiliansk real\n-CurrencyNames\/sv\/bsd=bahamansk dollar\n-CurrencyNames\/sv\/btn=bhutanesisk ngultrum\n-CurrencyNames\/sv\/bwp=botswansk pula\n-CurrencyNames\/sv\/byb=vitrysk ny rubel (1994\\u20131999)\n-CurrencyNames\/sv\/byr=vitrysk rubel (2000\\u20132016)\n-CurrencyNames\/sv\/bzd=belizisk dollar\n-CurrencyNames\/sv\/cad=kanadensisk dollar\n-CurrencyNames\/sv\/cdf=kongolesisk franc\n-CurrencyNames\/sv\/chf=schweizisk franc\n-CurrencyNames\/sv\/clf=chilensk unidad de fomento\n-CurrencyNames\/sv\/clp=chilensk peso\n-CurrencyNames\/sv\/cny=kinesisk yuan\n-CurrencyNames\/sv\/cop=colombiansk peso\n-CurrencyNames\/sv\/crc=costarikansk col\\u00f3n\n-CurrencyNames\/sv\/csd=serbisk dinar (2002\\u20132006)\n-CurrencyNames\/sv\/cup=kubansk peso\n-CurrencyNames\/sv\/cve=kapverdisk escudo\n-CurrencyNames\/sv\/cyp=cypriotiskt pund\n-CurrencyNames\/sv\/czk=tjeckisk koruna\n-CurrencyNames\/sv\/dem=tysk mark\n-CurrencyNames\/sv\/djf=djiboutisk franc\n-CurrencyNames\/sv\/dkk=dansk krona\n-CurrencyNames\/sv\/dop=dominikansk peso\n-CurrencyNames\/sv\/dzd=algerisk dinar\n-CurrencyNames\/sv\/eek=estnisk krona\n-CurrencyNames\/sv\/egp=egyptiskt pund\n-CurrencyNames\/sv\/ern=eritreansk nakfa\n-CurrencyNames\/sv\/esp=spansk peseta\n-CurrencyNames\/sv\/etb=etiopisk birr\n-CurrencyNames\/sv\/eur=euro\n-CurrencyNames\/sv\/fim=finsk mark\n-CurrencyNames\/sv\/fjd=Fijidollar\n-CurrencyNames\/sv\/frf=fransk franc\n-CurrencyNames\/sv\/gbp=brittiskt pund\n-CurrencyNames\/sv\/gel=georgisk lari\n-CurrencyNames\/sv\/ghc=ghanansk cedi (1979\\u20132007)\n-CurrencyNames\/sv\/ghs=ghanansk cedi\n-CurrencyNames\/sv\/gip=gibraltiskt pund\n-CurrencyNames\/sv\/gmd=gambisk dalasi\n-CurrencyNames\/sv\/gnf=guineansk franc\n-CurrencyNames\/sv\/grd=grekisk drachma\n-CurrencyNames\/sv\/gtq=guatemalansk quetzal\n-CurrencyNames\/sv\/gyd=Guyanadollar\n-CurrencyNames\/sv\/hnl=honduransk lempira\n-CurrencyNames\/sv\/hrk=kroatisk kuna\n-CurrencyNames\/sv\/htg=haitisk gourde\n-CurrencyNames\/sv\/huf=ungersk forint\n-CurrencyNames\/sv\/idr=indonesisk rupie\n-CurrencyNames\/sv\/iep=irl\\u00e4ndskt pund\n-CurrencyNames\/sv\/ils=israelisk ny shekel\n-CurrencyNames\/sv\/inr=indisk rupie\n-CurrencyNames\/sv\/iqd=irakisk dinar\n-CurrencyNames\/sv\/irr=iransk rial\n-CurrencyNames\/sv\/isk=isl\\u00e4ndsk krona\n-CurrencyNames\/sv\/itl=italiensk lire\n-CurrencyNames\/sv\/jmd=jamaicansk dollar\n-CurrencyNames\/sv\/jod=jordansk dinar\n-CurrencyNames\/sv\/jpy=japansk yen\n-CurrencyNames\/sv\/kes=kenyansk shilling\n-CurrencyNames\/sv\/kgs=kirgizisk som\n-CurrencyNames\/sv\/khr=kambodjansk riel\n-CurrencyNames\/sv\/kmf=komorisk franc\n-CurrencyNames\/sv\/kpw=nordkoreansk won\n-CurrencyNames\/sv\/krw=sydkoreansk won\n-CurrencyNames\/sv\/kwd=kuwaitisk dinar\n-CurrencyNames\/sv\/kzt=kazakisk tenge\n-CurrencyNames\/sv\/lak=laotisk kip\n-CurrencyNames\/sv\/lbp=libanesiskt pund\n-CurrencyNames\/sv\/lkr=srilankesisk rupie\n-CurrencyNames\/sv\/lrd=liberiansk dollar\n-CurrencyNames\/sv\/lsl=lesothisk loti\n-CurrencyNames\/sv\/ltl=litauisk litas\n-CurrencyNames\/sv\/luf=luxemburgsk franc\n-CurrencyNames\/sv\/lvl=lettisk lats\n-CurrencyNames\/sv\/lyd=libysk dinar\n-CurrencyNames\/sv\/mad=marockansk dirham\n-CurrencyNames\/sv\/mdl=moldavisk leu\n-CurrencyNames\/sv\/mga=madagaskisk ariary\n-CurrencyNames\/sv\/mgf=madagaskisk franc\n-CurrencyNames\/sv\/mkd=makedonisk denar\n-CurrencyNames\/sv\/mmk=myanmarisk kyat\n-CurrencyNames\/sv\/mnt=mongolisk t\\u00f6gr\\u00f6g\n-CurrencyNames\/sv\/mop=makanesisk pataca\n-CurrencyNames\/sv\/mro=mauretansk ouguiya (1973\\u20132017)\n-CurrencyNames\/sv\/mtl=maltesisk lire\n-CurrencyNames\/sv\/mur=mauritisk rupie\n-CurrencyNames\/sv\/mvr=maldivisk rufiyaa\n-CurrencyNames\/sv\/mwk=malawisk kwacha\n-CurrencyNames\/sv\/mxn=mexikansk peso\n-CurrencyNames\/sv\/mxv=mexikansk unidad de inversion\n-CurrencyNames\/sv\/myr=malaysisk ringgit\n-CurrencyNames\/sv\/mzm=gammal mo\\u00e7ambikisk metical\n-CurrencyNames\/sv\/mzn=mo\\u00e7ambikisk metical\n-CurrencyNames\/sv\/nad=namibisk dollar\n-CurrencyNames\/sv\/ngn=nigeriansk naira\n-CurrencyNames\/sv\/nio=nicaraguansk c\\u00f3rdoba\n-CurrencyNames\/sv\/nlg=nederl\\u00e4ndsk gulden\n-CurrencyNames\/sv\/nok=norsk krona\n-CurrencyNames\/sv\/npr=nepalesisk rupie\n-CurrencyNames\/sv\/nzd=nyzeel\\u00e4ndsk dollar\n-CurrencyNames\/sv\/omr=omansk rial\n-CurrencyNames\/sv\/pab=panamansk balboa\n-CurrencyNames\/sv\/pen=peruansk sol\n-CurrencyNames\/sv\/pgk=papuansk kina\n-CurrencyNames\/sv\/php=filippinsk peso\n-CurrencyNames\/sv\/pkr=pakistansk rupie\n-CurrencyNames\/sv\/pln=polsk zloty\n-CurrencyNames\/sv\/pte=portugisisk escudo\n-CurrencyNames\/sv\/pyg=paraguayansk guarani\n-CurrencyNames\/sv\/qar=qatarisk rial\n-CurrencyNames\/sv\/rol=rum\\u00e4nsk leu (1952\\u20132005)\n-CurrencyNames\/sv\/ron=rum\\u00e4nsk leu\n-CurrencyNames\/sv\/rsd=serbisk dinar\n-CurrencyNames\/sv\/rub=rysk rubel\n-CurrencyNames\/sv\/rur=rysk rubel (1991\\u20131998)\n-CurrencyNames\/sv\/rwf=rwandisk franc\n-CurrencyNames\/sv\/sar=saudisk riyal\n-CurrencyNames\/sv\/scr=seychellisk rupie\n-CurrencyNames\/sv\/sdd=sudansk dinar (1992\\u20132007)\n-CurrencyNames\/sv\/sdg=sudanesiskt pund\n-CurrencyNames\/sv\/sek=svensk krona\n-CurrencyNames\/sv\/sgd=singaporiansk dollar\n-CurrencyNames\/sv\/sit=slovensk tolar\n-CurrencyNames\/sv\/skk=slovakisk koruna\n-CurrencyNames\/sv\/sll=sierraleonsk leone\n-CurrencyNames\/sv\/sos=somalisk shilling\n-CurrencyNames\/sv\/srd=surinamesisk dollar\n-CurrencyNames\/sv\/srg=surinamesisk gulden\n-CurrencyNames\/sv\/svc=salvadoransk col\\u00f3n\n-CurrencyNames\/sv\/syp=syriskt pund\n-CurrencyNames\/sv\/szl=swazil\\u00e4ndsk lilangeni\n-CurrencyNames\/sv\/thb=thail\\u00e4ndsk baht\n-CurrencyNames\/sv\/tjs=tadzjikisk somoni\n-CurrencyNames\/sv\/tmm=turkmenistansk manat (1993\\u20132009)\n-CurrencyNames\/sv\/tnd=tunisisk dinar\n-CurrencyNames\/sv\/top=tongansk pa\\u02bbanga\n-CurrencyNames\/sv\/tpe=\\u00f6sttimoresisk escudo\n-CurrencyNames\/sv\/trl=turkisk lire (1922\\u20132005)\n-CurrencyNames\/sv\/try=turkisk lira\n-CurrencyNames\/sv\/ttd=Trinidaddollar\n-CurrencyNames\/sv\/twd=taiwanesisk dollar\n-CurrencyNames\/sv\/tzs=tanzanisk shilling\n-CurrencyNames\/sv\/uah=ukrainsk hryvnia\n-CurrencyNames\/sv\/ugx=ugandisk shilling\n-CurrencyNames\/sv\/uyu=uruguayansk peso\n-CurrencyNames\/sv\/uzs=uzbekisk sum\n-CurrencyNames\/sv\/veb=venezuelansk bolivar (1871\\u20132008)\n-CurrencyNames\/sv\/vef=venezuelansk bol\\u00edvar (2008\\u20132018)\n-CurrencyNames\/sv\/vnd=vietnamesisk dong\n-CurrencyNames\/sv\/vuv=vanuatisk vatu\n-CurrencyNames\/sv\/wst=v\\u00e4stsamoansk tala\n-CurrencyNames\/sv\/xag=silver\n-CurrencyNames\/sv\/xau=guld\n-CurrencyNames\/sv\/xba=europeisk kompositenhet\n-CurrencyNames\/sv\/xbb=europeisk monet\\u00e4r enhet\n-CurrencyNames\/sv\/xbc=europeisk kontoenhet (XBC)\n-CurrencyNames\/sv\/xbd=europeisk kontoenhet (XBD)\n-CurrencyNames\/sv\/xcd=\\u00f6stkaribisk dollar\n-CurrencyNames\/sv\/xdr=IMF s\\u00e4rskild dragningsr\\u00e4tt\n-CurrencyNames\/sv\/xfo=fransk guldfranc\n-CurrencyNames\/sv\/xpd=palladium\n-CurrencyNames\/sv\/xpt=platina\n-CurrencyNames\/sv\/xts=testvalutaenhet\n-CurrencyNames\/sv\/xxx=ok\\u00e4nd valuta\n-CurrencyNames\/sv\/yer=jemenitisk rial\n-CurrencyNames\/sv\/yum=jugoslavisk dinar (1994\\u20132002)\n-CurrencyNames\/sv\/zar=sydafrikansk rand\n-CurrencyNames\/sv\/zmk=zambisk kwacha (1968\\u20132012)\n-CurrencyNames\/sv\/zwd=Zimbabwe-dollar\n-\n-CurrencyNames\/zh_CN\/ang=\\u8377\\u5c5e\\u5b89\\u7684\\u5217\\u65af\\u76fe\n-CurrencyNames\/zh_CN\/azm=\\u963f\\u585e\\u62dc\\u7586\\u9a6c\\u7eb3\\u7279 (1993-2006)\n-CurrencyNames\/zh_CN\/azn=\\u963f\\u585e\\u62dc\\u7586\\u9a6c\\u7eb3\\u7279\n-CurrencyNames\/zh_CN\/csd=\\u585e\\u5c14\\u7ef4\\u4e9a\\u7b2c\\u7eb3\\u5c14 (2002-2006)\n-CurrencyNames\/zh_CN\/ghs=\\u52a0\\u7eb3\\u585e\\u5730\n-CurrencyNames\/zh_CN\/mzm=\\u83ab\\u6851\\u6bd4\\u514b\\u7f8e\\u63d0\\u5361 (1980-2006)\n-CurrencyNames\/zh_CN\/mzn=\\u83ab\\u6851\\u6bd4\\u514b\\u7f8e\\u63d0\\u5361\n-CurrencyNames\/zh_CN\/ron=\\u7f57\\u9a6c\\u5c3c\\u4e9a\\u5217\\u4f0a\n-CurrencyNames\/zh_CN\/rsd=\\u585e\\u5c14\\u7ef4\\u4e9a\\u7b2c\\u7eb3\\u5c14\n-CurrencyNames\/zh_CN\/shp=\\u5723\\u8d6b\\u52d2\\u62ff\\u9551\n-CurrencyNames\/zh_CN\/twd=\\u65b0\\u53f0\\u5e01\n-CurrencyNames\/zh_CN\/vef=\\u59d4\\u5185\\u745e\\u62c9\\u73bb\\u5229\\u74e6\\u5c14\n-CurrencyNames\/zh_CN\/xxx=\\u672a\\u77e5\\u8d27\\u5e01\n-\n-CurrencyNames\/zh_TW\/afa=\\u963f\\u5bcc\\u6c57\\u5c3c (1927\\u20132002)\n-CurrencyNames\/zh_TW\/ang=\\u8377\\u5c6c\\u5b89\\u5730\\u5217\\u65af\\u76fe\n-CurrencyNames\/zh_TW\/azm=\\u4e9e\\u585e\\u62dc\\u7136\\u99ac\\u7d0d\\u7279 (1993\\u20132006)\n-CurrencyNames\/zh_TW\/azn=\\u4e9e\\u585e\\u62dc\\u7136\\u99ac\\u7d0d\\u7279\n-CurrencyNames\/zh_TW\/bwp=\\u6ce2\\u672d\\u90a3\\u666e\\u62c9\n-CurrencyNames\/zh_TW\/bzd=\\u8c9d\\u91cc\\u65af\\u5143\n-CurrencyNames\/zh_TW\/csd=\\u820a\\u585e\\u723e\\u7dad\\u4e9e\\u7b2c\\u7d0d\\u723e\n-CurrencyNames\/zh_TW\/cyp=\\u8cfd\\u666e\\u52d2\\u65af\\u938a\n-CurrencyNames\/zh_TW\/ghc=\\u8fe6\\u7d0d\\u8cfd\\u5730 (1979\\u20132007)\n-CurrencyNames\/zh_TW\/ghs=\\u8fe6\\u7d0d\\u585e\\u5730\n-CurrencyNames\/zh_TW\/gwp=\\u5e7e\\u5167\\u4e9e\\u6bd4\\u7d22\\u62ab\\u7d22\n-CurrencyNames\/zh_TW\/huf=\\u5308\\u7259\\u5229\\u798f\\u6797\n-CurrencyNames\/zh_TW\/idr=\\u5370\\u5c3c\\u76fe\n-CurrencyNames\/zh_TW\/inr=\\u5370\\u5ea6\\u76e7\\u6bd4\n-CurrencyNames\/zh_TW\/kpw=\\u5317\\u97d3\\u5143\n-CurrencyNames\/zh_TW\/krw=\\u97d3\\u5143\n-CurrencyNames\/zh_TW\/lak=\\u5bee\\u570b\\u57fa\\u666e\n-CurrencyNames\/zh_TW\/mad=\\u6469\\u6d1b\\u54e5\\u8fea\\u62c9\\u59c6\n-CurrencyNames\/zh_TW\/mxn=\\u58a8\\u897f\\u54e5\\u62ab\\u7d22\n-CurrencyNames\/zh_TW\/mxv=\\u58a8\\u897f\\u54e5\\u8f49\\u63db\\u55ae\\u4f4d (UDI)\n-CurrencyNames\/zh_TW\/myr=\\u99ac\\u4f86\\u897f\\u4e9e\\u4ee4\\u5409\n-CurrencyNames\/zh_TW\/mzn=\\u83ab\\u4e09\\u6bd4\\u514b\\u6885\\u8482\\u5361\\u723e\n-CurrencyNames\/zh_TW\/nio=\\u5c3c\\u52a0\\u62c9\\u74dc\\u91d1\\u79d1\\u591a\\u5df4\n-CurrencyNames\/zh_TW\/rol=\\u820a\\u7f85\\u99ac\\u5c3c\\u4e9e\\u5217\\u4f0a\n-CurrencyNames\/zh_TW\/ron=\\u7f85\\u99ac\\u5c3c\\u4e9e\\u5217\\u4f0a\n-CurrencyNames\/zh_TW\/rsd=\\u585e\\u723e\\u7dad\\u4e9e\\u6234\\u7d0d\n-CurrencyNames\/zh_TW\/scr=\\u585e\\u5e2d\\u723e\\u76e7\\u6bd4\n-CurrencyNames\/zh_TW\/sdg=\\u8607\\u4e39\\u938a\n-CurrencyNames\/zh_TW\/shp=\\u8056\\u8d6b\\u52d2\\u62ff\\u938a\n-CurrencyNames\/zh_TW\/srd=\\u8607\\u5229\\u5357\\u5143\n-CurrencyNames\/zh_TW\/srg=\\u8607\\u5229\\u5357\\u57fa\\u723e\n-CurrencyNames\/zh_TW\/svc=\\u85a9\\u723e\\u74e6\\u591a\\u79d1\\u90ce\n-CurrencyNames\/zh_TW\/szl=\\u53f2\\u74e6\\u6fdf\\u862d\\u91cc\\u6717\\u5409\\u5c3c\n-CurrencyNames\/zh_TW\/tpe=\\u5e1d\\u6c76\\u57c3\\u65af\\u5eab\\u591a\n-CurrencyNames\/zh_TW\/ttd=\\u5343\\u91cc\\u9054\\u53ca\\u6258\\u5df4\\u54e5\\u5143\n-CurrencyNames\/zh_TW\/tzs=\\u5766\\u5c1a\\u5c3c\\u4e9e\\u5148\\u4ee4\n-CurrencyNames\/zh_TW\/uzs=\\u70cf\\u8332\\u5225\\u514b\\u7d22\\u59c6\n-CurrencyNames\/zh_TW\/veb=\\u59d4\\u5167\\u745e\\u62c9\\u73bb\\u5229\\u74e6 (1871\\u20132008)\n-CurrencyNames\/zh_TW\/vef=\\u59d4\\u5167\\u745e\\u62c9\\u73bb\\u5229\\u74e6 (2008\\u20132018)\n-CurrencyNames\/zh_TW\/xaf=\\u6cd5\\u90ce (CFA\\u2013BEAC)\n-CurrencyNames\/zh_TW\/xag=\\u767d\\u9280\n-CurrencyNames\/zh_TW\/xof=\\u6cd5\\u90ce (CFA\\u2013BCEAO)\n-CurrencyNames\/zh_TW\/xpd=\\u5e15\\u62c9\\u72c4\\u6602\n-CurrencyNames\/zh_TW\/xpt=\\u767d\\u91d1\n-CurrencyNames\/zh_TW\/xts=\\u6e2c\\u8a66\\u7528\\u8ca8\\u5e63\\u4ee3\\u78bc\n-CurrencyNames\/zh_TW\/xxx=\\u672a\\u77e5\\u8ca8\\u5e63\n-CurrencyNames\/zh_TW\/yer=\\u8449\\u9580\\u91cc\\u4e9e\\u723e\n-\n-# bug 7036905\n-CurrencyNames\/de\/afa=Afghani (1927-2002)\n-CurrencyNames\/de\/afn=Afghani\n-CurrencyNames\/de\/bob=Bolivianischer Boliviano\n-CurrencyNames\/de\/dem=Deutsche Mark\n-CurrencyNames\/de\/mwk=Malawi-Kwacha\n-CurrencyNames\/de\/mxv=Unidad De Inversion (Mexiko)\n-CurrencyNames\/de\/svc=El-Salvador-Col\\u00f3n\n-\n-CurrencyNames\/it\/bob=boliviano\n-\n-# bug 7066203\n-CurrencyNames\/\/CUC=CUC\n-CurrencyNames\/\/TMT=TMT\n-CurrencyNames\/\/XSU=XSU\n-CurrencyNames\/\/XUA=XUA\n-CurrencyNames\/\/ZWL=ZWL\n-CurrencyNames\/\/ZWR=ZWR\n-CurrencyNames\/\/cuc=Cuban Convertible Peso\n-CurrencyNames\/\/tmt=Turkmenistani Manat\n-CurrencyNames\/\/zwl=Zimbabwean Dollar (2009)\n-CurrencyNames\/\/zwr=Zimbabwean Dollar (2008)\n-\n-CurrencyNames\/de\/cuc=Kubanischer konvertibler Peso\n-CurrencyNames\/de\/tmt=Turkmenistan-Manat\n-CurrencyNames\/de\/zwl=Simbabwe-Dollar (2009)\n-\n-CurrencyNames\/es\/cuc=peso cubano convertible\n-CurrencyNames\/es\/tmt=manat turcomano\n-CurrencyNames\/es\/zwl=d\\u00f3lar zimbabuense\n-\n-CurrencyNames\/es_CU\/CUP=CU$\n-CurrencyNames\/es_CU\/CUC=CUC$\n-\n-CurrencyNames\/et_EE\/eek=Eesti kroon\n-CurrencyNames\/et_EE\/EUR=\\u20ac\n-CurrencyNames\/et_EE\/eur=euro\n-\n-CurrencyNames\/fr\/cuc=peso cubain convertible\n-CurrencyNames\/fr\/tmt=nouveau manat turkm\\u00e8ne\n-\n-CurrencyNames\/ja\/cuc=\\u30ad\\u30e5\\u30fc\\u30d0\\u514c\\u63db\\u30da\\u30bd\n-CurrencyNames\/ja\/tmt=\\u30c8\\u30eb\\u30af\\u30e1\\u30cb\\u30b9\\u30bf\\u30f3\\u30fb\\u30de\\u30ca\\u30c8\n-CurrencyNames\/ja\/zwl=\\u30b8\\u30f3\\u30d0\\u30d6\\u30a8\\u30fb\\u30c9\\u30eb(2009)\n-\n-CurrencyNames\/ko\/cuc=\\ucfe0\\ubc14 \\ud0dc\\ud658 \\ud398\\uc18c\n-\n-CurrencyNames\/pt\/bob=Boliviano da Bol\\u00edvia\n-CurrencyNames\/pt\/cuc=Peso cubano convers\\u00edvel\n-CurrencyNames\/pt\/tmt=Manat turcomeno\n-CurrencyNames\/pt\/zwl=D\\u00f3lar do Zimb\\u00e1bue (2009)\n-CurrencyNames\/pt\/zwr=D\\u00f3lar do Zimb\\u00e1bue (2008)\n-\n-CurrencyNames\/sk_SK\/skk=slovensk\\u00e1 koruna\n-CurrencyNames\/sk_SK\/EUR=\\u20ac\n-\n-CurrencyNames\/zh_CN\/cuc=\\u53e4\\u5df4\\u53ef\\u5151\\u6362\\u6bd4\\u7d22\n-CurrencyNames\/zh_CN\/tmt=\\u571f\\u5e93\\u66fc\\u65af\\u5766\\u9a6c\\u7eb3\\u7279\n-CurrencyNames\/zh_CN\/zwl=\\u6d25\\u5df4\\u5e03\\u97e6\\u5143 (2009)\n-\n-CurrencyNames\/zh_TW\/cuc=\\u53e4\\u5df4\\u53ef\\u8f49\\u63db\\u62ab\\u7d22\n-CurrencyNames\/zh_TW\/tmt=\\u571f\\u5eab\\u66fc\\u99ac\\u7d0d\\u7279\n-CurrencyNames\/zh_TW\/zwl=\\u8f9b\\u5df4\\u5a01\\u5143 (2009)\n-\n-# bug 7101495\n-CalendarData\/lv\/firstDayOfWeek=2\n-CalendarData\/lv\/minimalDaysInFirstWeek=4\n-\n-# bug 7003124\n-FormatData\/bg\/TimePatterns\/0=HH:mm:ss zzzz\n-FormatData\/bg\/TimePatterns\/2=HH:mm:ss\n-FormatData\/bg\/TimePatterns\/3=HH:mm\n-FormatData\/bg\/DatePatterns\/0=dd MMMM y, EEEE\n-FormatData\/bg\/DatePatterns\/1=dd MMMM y\n-FormatData\/bg\/DatePatterns\/2=dd.MM.yyyy\n-FormatData\/bg\/DatePatterns\/3=dd.MM.yy\n-\n-# bug 7085757\n-CurrencyNames\/\/SSP=SSP\n-CurrencyNames\/\/ssp=South Sudanese Pound\n-CurrencyNames\/\/xsu=Sucre\n-CurrencyNames\/\/xua=ADB Unit of Account\n-LocaleNames\/\/SS=South Sudan\n-LocaleNames\/en\/SS=South Sudan\n-\n-# bug 7028073\n-CurrencyNames\/es_PE\/PEN=S\/.\n-\n-# bug 7171028\n-FormatData\/sl\/DatePatterns\/0=EEEE, dd. MMMM y\n-FormatData\/sl\/DatePatterns\/1=dd. MMMM y\n-\n-# bug 7189611\n-CurrencyNames\/es_VE\/VEF=Bs.F.\n-\n-# rfe 8000983 (narrow names support)\n-FormatData\/\/DayNarrows\/0=S\n-FormatData\/\/DayNarrows\/1=M\n-FormatData\/\/DayNarrows\/2=T\n-FormatData\/\/DayNarrows\/3=W\n-FormatData\/\/DayNarrows\/4=T\n-FormatData\/\/DayNarrows\/5=F\n-FormatData\/\/DayNarrows\/6=S\n-FormatData\/\/narrow.AmPmMarkers\/0=a\n-FormatData\/\/narrow.AmPmMarkers\/1=p\n-FormatData\/\/narrow.Eras\/0=B\n-FormatData\/\/narrow.Eras\/1=A\n-FormatData\/\/buddhist.narrow.Eras\/0=BC\n-FormatData\/\/buddhist.narrow.Eras\/1=B.E.\n-FormatData\/\/japanese.narrow.Eras\/0=\n-FormatData\/\/japanese.narrow.Eras\/1=M\n-FormatData\/\/japanese.narrow.Eras\/2=T\n-FormatData\/\/japanese.narrow.Eras\/3=S\n-FormatData\/\/japanese.narrow.Eras\/4=H\n-\n-FormatData\/ar\/DayNarrows\/0=\\u062d\n-FormatData\/ar\/DayNarrows\/1=\\u0646\n-FormatData\/ar\/DayNarrows\/2=\\u062b\n-FormatData\/ar\/DayNarrows\/3=\\u0631\n-FormatData\/ar\/DayNarrows\/4=\\u062e\n-FormatData\/ar\/DayNarrows\/5=\\u062c\n-FormatData\/ar\/DayNarrows\/6=\\u0633\n-\n-FormatData\/be\/standalone.MonthNarrows\/0=\\u0441\n-FormatData\/be\/standalone.MonthNarrows\/1=\\u043b\n-FormatData\/be\/standalone.MonthNarrows\/2=\\u0441\n-FormatData\/be\/standalone.MonthNarrows\/3=\\u043a\n-FormatData\/be\/standalone.MonthNarrows\/4=\\u043c\n-FormatData\/be\/standalone.MonthNarrows\/5=\\u0447\n-FormatData\/be\/standalone.MonthNarrows\/6=\\u043b\n-FormatData\/be\/standalone.MonthNarrows\/7=\\u0436\n-FormatData\/be\/standalone.MonthNarrows\/8=\\u0432\n-FormatData\/be\/standalone.MonthNarrows\/9=\\u043a\n-FormatData\/be\/standalone.MonthNarrows\/10=\\u043b\n-FormatData\/be\/standalone.MonthNarrows\/11=\\u0441\n-FormatData\/be\/standalone.MonthNarrows\/12=\n-FormatData\/be\/DayNarrows\/0=\\u043d\n-FormatData\/be\/DayNarrows\/1=\\u043f\n-FormatData\/be\/DayNarrows\/2=\\u0430\n-FormatData\/be\/DayNarrows\/3=\\u0441\n-FormatData\/be\/DayNarrows\/4=\\u0447\n-FormatData\/be\/DayNarrows\/5=\\u043f\n-FormatData\/be\/DayNarrows\/6=\\u0441\n-\n-FormatData\/bg\/DayNarrows\/0=\\u043d\n-FormatData\/bg\/DayNarrows\/1=\\u043f\n-FormatData\/bg\/DayNarrows\/2=\\u0432\n-FormatData\/bg\/DayNarrows\/3=\\u0441\n-FormatData\/bg\/DayNarrows\/4=\\u0447\n-FormatData\/bg\/DayNarrows\/5=\\u043f\n-FormatData\/bg\/DayNarrows\/6=\\u0441\n-\n-FormatData\/ca\/standalone.MonthNarrows\/0=g\n-FormatData\/ca\/standalone.MonthNarrows\/1=f\n-FormatData\/ca\/standalone.MonthNarrows\/2=m\n-FormatData\/ca\/standalone.MonthNarrows\/3=a\n-FormatData\/ca\/standalone.MonthNarrows\/4=m\n-FormatData\/ca\/standalone.MonthNarrows\/5=j\n-FormatData\/ca\/standalone.MonthNarrows\/6=j\n-FormatData\/ca\/standalone.MonthNarrows\/7=a\n-FormatData\/ca\/standalone.MonthNarrows\/8=s\n-FormatData\/ca\/standalone.MonthNarrows\/9=o\n-FormatData\/ca\/standalone.MonthNarrows\/10=n\n-FormatData\/ca\/standalone.MonthNarrows\/11=d\n-FormatData\/ca\/standalone.MonthNarrows\/12=\n-FormatData\/ca\/DayNarrows\/0=G\n-# Note: \"L\" is a contribued item in CLDR\n-FormatData\/ca\/DayNarrows\/1=L\n-FormatData\/ca\/DayNarrows\/2=T\n-FormatData\/ca\/DayNarrows\/3=C\n-FormatData\/ca\/DayNarrows\/4=J\n-FormatData\/ca\/DayNarrows\/5=V\n-FormatData\/ca\/DayNarrows\/6=S\n-FormatData\/ca\/standalone.DayNarrows\/0=g\n-FormatData\/ca\/standalone.DayNarrows\/1=l\n-FormatData\/ca\/standalone.DayNarrows\/2=t\n-FormatData\/ca\/standalone.DayNarrows\/3=c\n-FormatData\/ca\/standalone.DayNarrows\/4=j\n-FormatData\/ca\/standalone.DayNarrows\/5=v\n-FormatData\/ca\/standalone.DayNarrows\/6=s\n-\n-FormatData\/cs\/DayNarrows\/0=N\n-FormatData\/cs\/DayNarrows\/1=P\n-FormatData\/cs\/DayNarrows\/2=\\u00da\n-FormatData\/cs\/DayNarrows\/3=S\n-FormatData\/cs\/DayNarrows\/4=\\u010c\n-FormatData\/cs\/DayNarrows\/5=P\n-FormatData\/cs\/DayNarrows\/6=S\n-\n-FormatData\/da\/DayNarrows\/0=S\n-FormatData\/da\/DayNarrows\/1=M\n-FormatData\/da\/DayNarrows\/2=T\n-FormatData\/da\/DayNarrows\/3=O\n-FormatData\/da\/DayNarrows\/4=T\n-FormatData\/da\/DayNarrows\/5=F\n-FormatData\/da\/DayNarrows\/6=L\n-\n-FormatData\/de\/DayNarrows\/0=S\n-FormatData\/de\/DayNarrows\/1=M\n-FormatData\/de\/DayNarrows\/2=D\n-FormatData\/de\/DayNarrows\/3=M\n-FormatData\/de\/DayNarrows\/4=D\n-FormatData\/de\/DayNarrows\/5=F\n-FormatData\/de\/DayNarrows\/6=S\n-\n-FormatData\/el\/DayNarrows\/0=\\u039a\n-FormatData\/el\/DayNarrows\/1=\\u0394\n-FormatData\/el\/DayNarrows\/2=\\u03a4\n-FormatData\/el\/DayNarrows\/3=\\u03a4\n-FormatData\/el\/DayNarrows\/4=\\u03a0\n-FormatData\/el\/DayNarrows\/5=\\u03a0\n-FormatData\/el\/DayNarrows\/6=\\u03a3\n-\n-FormatData\/es\/DayNarrows\/0=D\n-FormatData\/es\/DayNarrows\/1=L\n-FormatData\/es\/DayNarrows\/2=M\n-FormatData\/es\/DayNarrows\/3=X\n-FormatData\/es\/DayNarrows\/4=J\n-FormatData\/es\/DayNarrows\/5=V\n-FormatData\/es\/DayNarrows\/6=S\n-\n-FormatData\/et\/DayNarrows\/0=P\n-FormatData\/et\/DayNarrows\/1=E\n-FormatData\/et\/DayNarrows\/2=T\n-FormatData\/et\/DayNarrows\/3=K\n-FormatData\/et\/DayNarrows\/4=N\n-FormatData\/et\/DayNarrows\/5=R\n-FormatData\/et\/DayNarrows\/6=L\n-\n-FormatData\/fi\/standalone.MonthNarrows\/0=T\n-FormatData\/fi\/standalone.MonthNarrows\/1=H\n-FormatData\/fi\/standalone.MonthNarrows\/2=M\n-FormatData\/fi\/standalone.MonthNarrows\/3=H\n-FormatData\/fi\/standalone.MonthNarrows\/4=T\n-FormatData\/fi\/standalone.MonthNarrows\/5=K\n-FormatData\/fi\/standalone.MonthNarrows\/6=H\n-FormatData\/fi\/standalone.MonthNarrows\/7=E\n-FormatData\/fi\/standalone.MonthNarrows\/8=S\n-FormatData\/fi\/standalone.MonthNarrows\/9=L\n-FormatData\/fi\/standalone.MonthNarrows\/10=M\n-FormatData\/fi\/standalone.MonthNarrows\/11=J\n-FormatData\/fi\/standalone.MonthNarrows\/12=\n-FormatData\/fi\/DayNarrows\/0=S\n-FormatData\/fi\/DayNarrows\/1=M\n-FormatData\/fi\/DayNarrows\/2=T\n-FormatData\/fi\/DayNarrows\/3=K\n-FormatData\/fi\/DayNarrows\/4=T\n-FormatData\/fi\/DayNarrows\/5=P\n-FormatData\/fi\/DayNarrows\/6=L\n-FormatData\/fi\/standalone.DayNarrows\/0=S\n-FormatData\/fi\/standalone.DayNarrows\/1=M\n-FormatData\/fi\/standalone.DayNarrows\/2=T\n-FormatData\/fi\/standalone.DayNarrows\/3=K\n-FormatData\/fi\/standalone.DayNarrows\/4=T\n-FormatData\/fi\/standalone.DayNarrows\/5=P\n-FormatData\/fi\/standalone.DayNarrows\/6=L\n-FormatData\/fi\/narrow.AmPmMarkers\/0=ap.\n-FormatData\/fi\/narrow.AmPmMarkers\/1=ip.\n-\n-FormatData\/fr\/DayNarrows\/0=D\n-FormatData\/fr\/DayNarrows\/1=L\n-FormatData\/fr\/DayNarrows\/2=M\n-FormatData\/fr\/DayNarrows\/3=M\n-FormatData\/fr\/DayNarrows\/4=J\n-FormatData\/fr\/DayNarrows\/5=V\n-FormatData\/fr\/DayNarrows\/6=S\n-\n-FormatData\/hi_IN\/DayNarrows\/0=\\u0930\n-FormatData\/hi_IN\/DayNarrows\/1=\\u0938\\u094b\n-FormatData\/hi_IN\/DayNarrows\/2=\\u092e\\u0902\n-FormatData\/hi_IN\/DayNarrows\/3=\\u092c\\u0941\n-FormatData\/hi_IN\/DayNarrows\/4=\\u0917\\u0941\n-FormatData\/hi_IN\/DayNarrows\/5=\\u0936\\u0941\n-FormatData\/hi_IN\/DayNarrows\/6=\\u0936\n-\n-FormatData\/hr\/standalone.MonthNarrows\/0=1.\n-FormatData\/hr\/standalone.MonthNarrows\/1=2.\n-FormatData\/hr\/standalone.MonthNarrows\/2=3.\n-FormatData\/hr\/standalone.MonthNarrows\/3=4.\n-FormatData\/hr\/standalone.MonthNarrows\/4=5.\n-FormatData\/hr\/standalone.MonthNarrows\/5=6.\n-FormatData\/hr\/standalone.MonthNarrows\/6=7.\n-FormatData\/hr\/standalone.MonthNarrows\/7=8.\n-FormatData\/hr\/standalone.MonthNarrows\/8=9.\n-FormatData\/hr\/standalone.MonthNarrows\/9=10.\n-FormatData\/hr\/standalone.MonthNarrows\/10=11.\n-FormatData\/hr\/standalone.MonthNarrows\/11=12.\n-FormatData\/hr\/standalone.MonthNarrows\/12=\n-FormatData\/hr\/DayNarrows\/0=N\n-FormatData\/hr\/DayNarrows\/1=P\n-FormatData\/hr\/DayNarrows\/2=U\n-FormatData\/hr\/DayNarrows\/3=S\n-FormatData\/hr\/DayNarrows\/4=\\u010c\n-FormatData\/hr\/DayNarrows\/5=P\n-FormatData\/hr\/DayNarrows\/6=S\n-FormatData\/hr\/standalone.DayNarrows\/0=n\n-FormatData\/hr\/standalone.DayNarrows\/1=p\n-FormatData\/hr\/standalone.DayNarrows\/2=u\n-FormatData\/hr\/standalone.DayNarrows\/3=s\n-FormatData\/hr\/standalone.DayNarrows\/4=\\u010d\n-FormatData\/hr\/standalone.DayNarrows\/5=p\n-FormatData\/hr\/standalone.DayNarrows\/6=s\n-\n-FormatData\/hu\/DayNarrows\/0=V\n-FormatData\/hu\/DayNarrows\/1=H\n-FormatData\/hu\/DayNarrows\/2=K\n-FormatData\/hu\/DayNarrows\/3=Sz\n-FormatData\/hu\/DayNarrows\/4=Cs\n-FormatData\/hu\/DayNarrows\/5=P\n-FormatData\/hu\/DayNarrows\/6=Sz\n-\n-FormatData\/is\/standalone.MonthNarrows\/0=j\n-FormatData\/is\/standalone.MonthNarrows\/1=f\n-FormatData\/is\/standalone.MonthNarrows\/2=m\n-FormatData\/is\/standalone.MonthNarrows\/3=a\n-FormatData\/is\/standalone.MonthNarrows\/4=m\n-FormatData\/is\/standalone.MonthNarrows\/5=j\n-FormatData\/is\/standalone.MonthNarrows\/6=j\n-FormatData\/is\/standalone.MonthNarrows\/7=\\u00e1\n-FormatData\/is\/standalone.MonthNarrows\/8=s\n-FormatData\/is\/standalone.MonthNarrows\/9=o\n-FormatData\/is\/standalone.MonthNarrows\/10=n\n-FormatData\/is\/standalone.MonthNarrows\/11=d\n-FormatData\/is\/standalone.MonthNarrows\/12=\n-FormatData\/is\/DayNarrows\/0=S\n-FormatData\/is\/DayNarrows\/1=M\n-FormatData\/is\/DayNarrows\/2=\\u00de\n-FormatData\/is\/DayNarrows\/3=M\n-FormatData\/is\/DayNarrows\/4=F\n-FormatData\/is\/DayNarrows\/5=F\n-FormatData\/is\/DayNarrows\/6=L\n-FormatData\/is\/standalone.DayNarrows\/0=s\n-FormatData\/is\/standalone.DayNarrows\/1=m\n-FormatData\/is\/standalone.DayNarrows\/2=\\u00fe\n-FormatData\/is\/standalone.DayNarrows\/3=m\n-FormatData\/is\/standalone.DayNarrows\/4=f\n-FormatData\/is\/standalone.DayNarrows\/5=f\n-FormatData\/is\/standalone.DayNarrows\/6=l\n-\n-FormatData\/it\/DayNarrows\/0=D\n-FormatData\/it\/DayNarrows\/1=L\n-FormatData\/it\/DayNarrows\/2=M\n-FormatData\/it\/DayNarrows\/3=M\n-FormatData\/it\/DayNarrows\/4=G\n-FormatData\/it\/DayNarrows\/5=V\n-FormatData\/it\/DayNarrows\/6=S\n-\n-FormatData\/iw\/DayNarrows\/0=\\u05d0\n-FormatData\/iw\/DayNarrows\/1=\\u05d1\n-FormatData\/iw\/DayNarrows\/2=\\u05d2\n-FormatData\/iw\/DayNarrows\/3=\\u05d3\n-FormatData\/iw\/DayNarrows\/4=\\u05d4\n-FormatData\/iw\/DayNarrows\/5=\\u05d5\n-FormatData\/iw\/DayNarrows\/6=\\u05e9\n-FormatData\/iw\/standalone.DayNarrows\/0=\\u05d0\n-FormatData\/iw\/standalone.DayNarrows\/1=\\u05d1\n-FormatData\/iw\/standalone.DayNarrows\/2=\\u05d2\n-FormatData\/iw\/standalone.DayNarrows\/3=\\u05d3\n-FormatData\/iw\/standalone.DayNarrows\/4=\\u05d4\n-FormatData\/iw\/standalone.DayNarrows\/5=\\u05d5\n-FormatData\/iw\/standalone.DayNarrows\/6=\\u05e9\n-\n-FormatData\/ja\/DayNarrows\/0=\\u65e5\n-FormatData\/ja\/DayNarrows\/1=\\u6708\n-FormatData\/ja\/DayNarrows\/2=\\u706b\n-FormatData\/ja\/DayNarrows\/3=\\u6c34\n-FormatData\/ja\/DayNarrows\/4=\\u6728\n-FormatData\/ja\/DayNarrows\/5=\\u91d1\n-FormatData\/ja\/DayNarrows\/6=\\u571f\n-\n-FormatData\/ko\/DayNarrows\/0=\\uc77c\n-FormatData\/ko\/DayNarrows\/1=\\uc6d4\n-FormatData\/ko\/DayNarrows\/2=\\ud654\n-FormatData\/ko\/DayNarrows\/3=\\uc218\n-FormatData\/ko\/DayNarrows\/4=\\ubaa9\n-FormatData\/ko\/DayNarrows\/5=\\uae08\n-FormatData\/ko\/DayNarrows\/6=\\ud1a0\n-\n-FormatData\/lt\/standalone.MonthNarrows\/0=S\n-FormatData\/lt\/standalone.MonthNarrows\/1=V\n-FormatData\/lt\/standalone.MonthNarrows\/2=K\n-FormatData\/lt\/standalone.MonthNarrows\/3=B\n-FormatData\/lt\/standalone.MonthNarrows\/4=G\n-FormatData\/lt\/standalone.MonthNarrows\/5=B\n-FormatData\/lt\/standalone.MonthNarrows\/6=L\n-FormatData\/lt\/standalone.MonthNarrows\/7=R\n-FormatData\/lt\/standalone.MonthNarrows\/8=R\n-FormatData\/lt\/standalone.MonthNarrows\/9=S\n-FormatData\/lt\/standalone.MonthNarrows\/10=L\n-FormatData\/lt\/standalone.MonthNarrows\/11=G\n-FormatData\/lt\/standalone.MonthNarrows\/12=\n-\n-FormatData\/lt\/DayNarrows\/0=S\n-FormatData\/lt\/DayNarrows\/1=P\n-FormatData\/lt\/DayNarrows\/2=A\n-FormatData\/lt\/DayNarrows\/3=T\n-FormatData\/lt\/DayNarrows\/4=K\n-FormatData\/lt\/DayNarrows\/5=P\n-FormatData\/lt\/DayNarrows\/6=\\u0160\n-FormatData\/lt\/standalone.DayNarrows\/0=S\n-FormatData\/lt\/standalone.DayNarrows\/1=P\n-FormatData\/lt\/standalone.DayNarrows\/2=A\n-FormatData\/lt\/standalone.DayNarrows\/3=T\n-FormatData\/lt\/standalone.DayNarrows\/4=K\n-FormatData\/lt\/standalone.DayNarrows\/5=P\n-FormatData\/lt\/standalone.DayNarrows\/6=\\u0160\n-\n-FormatData\/lv\/DayNarrows\/0=S\n-FormatData\/lv\/DayNarrows\/1=P\n-FormatData\/lv\/DayNarrows\/2=O\n-FormatData\/lv\/DayNarrows\/3=T\n-FormatData\/lv\/DayNarrows\/4=C\n-FormatData\/lv\/DayNarrows\/5=P\n-FormatData\/lv\/DayNarrows\/6=S\n-\n-FormatData\/mk\/DayNarrows\/0=\\u043d\n-FormatData\/mk\/DayNarrows\/1=\\u043f\n-FormatData\/mk\/DayNarrows\/2=\\u0432\n-FormatData\/mk\/DayNarrows\/3=\\u0441\n-FormatData\/mk\/DayNarrows\/4=\\u0447\n-FormatData\/mk\/DayNarrows\/5=\\u043f\n-FormatData\/mk\/DayNarrows\/6=\\u0441\n-\n-FormatData\/ms\/standalone.MonthNarrows\/0=J\n-FormatData\/ms\/standalone.MonthNarrows\/1=F\n-FormatData\/ms\/standalone.MonthNarrows\/2=M\n-FormatData\/ms\/standalone.MonthNarrows\/3=A\n-FormatData\/ms\/standalone.MonthNarrows\/4=M\n-FormatData\/ms\/standalone.MonthNarrows\/5=J\n-FormatData\/ms\/standalone.MonthNarrows\/6=J\n-FormatData\/ms\/standalone.MonthNarrows\/7=O\n-FormatData\/ms\/standalone.MonthNarrows\/8=S\n-FormatData\/ms\/standalone.MonthNarrows\/9=O\n-FormatData\/ms\/standalone.MonthNarrows\/10=N\n-FormatData\/ms\/standalone.MonthNarrows\/11=D\n-FormatData\/ms\/standalone.MonthNarrows\/12=\n-FormatData\/ms\/DayNarrows\/0=A\n-FormatData\/ms\/DayNarrows\/1=I\n-FormatData\/ms\/DayNarrows\/2=S\n-FormatData\/ms\/DayNarrows\/3=R\n-FormatData\/ms\/DayNarrows\/4=K\n-FormatData\/ms\/DayNarrows\/5=J\n-FormatData\/ms\/DayNarrows\/6=S\n-FormatData\/ms\/standalone.DayNarrows\/0=A\n-FormatData\/ms\/standalone.DayNarrows\/1=I\n-FormatData\/ms\/standalone.DayNarrows\/2=S\n-FormatData\/ms\/standalone.DayNarrows\/3=R\n-FormatData\/ms\/standalone.DayNarrows\/4=K\n-FormatData\/ms\/standalone.DayNarrows\/5=J\n-FormatData\/ms\/standalone.DayNarrows\/6=S\n-\n-FormatData\/mt\/DayNarrows\/0=\\u0126\n-FormatData\/mt\/DayNarrows\/1=T\n-FormatData\/mt\/DayNarrows\/2=T\n-FormatData\/mt\/DayNarrows\/3=E\n-FormatData\/mt\/DayNarrows\/4=\\u0126\n-FormatData\/mt\/DayNarrows\/5=\\u0120\n-FormatData\/mt\/DayNarrows\/6=S\n-\n-FormatData\/nl\/DayNarrows\/0=Z\n-FormatData\/nl\/DayNarrows\/1=M\n-FormatData\/nl\/DayNarrows\/2=D\n-FormatData\/nl\/DayNarrows\/3=W\n-FormatData\/nl\/DayNarrows\/4=D\n-FormatData\/nl\/DayNarrows\/5=V\n-FormatData\/nl\/DayNarrows\/6=Z\n-\n-FormatData\/pl\/DayNarrows\/0=N\n-FormatData\/pl\/DayNarrows\/1=P\n-FormatData\/pl\/DayNarrows\/2=W\n-FormatData\/pl\/DayNarrows\/3=\\u015a\n-FormatData\/pl\/DayNarrows\/4=C\n-FormatData\/pl\/DayNarrows\/5=P\n-FormatData\/pl\/DayNarrows\/6=S\n-\n-FormatData\/pt\/DayNarrows\/0=D\n-FormatData\/pt\/DayNarrows\/1=S\n-FormatData\/pt\/DayNarrows\/2=T\n-FormatData\/pt\/DayNarrows\/3=Q\n-FormatData\/pt\/DayNarrows\/4=Q\n-FormatData\/pt\/DayNarrows\/5=S\n-FormatData\/pt\/DayNarrows\/6=S\n-\n-FormatData\/ro\/standalone.MonthNarrows\/0=I\n-FormatData\/ro\/standalone.MonthNarrows\/1=F\n-FormatData\/ro\/standalone.MonthNarrows\/2=M\n-FormatData\/ro\/standalone.MonthNarrows\/3=A\n-FormatData\/ro\/standalone.MonthNarrows\/4=M\n-FormatData\/ro\/standalone.MonthNarrows\/5=I\n-FormatData\/ro\/standalone.MonthNarrows\/6=I\n-FormatData\/ro\/standalone.MonthNarrows\/7=A\n-FormatData\/ro\/standalone.MonthNarrows\/8=S\n-FormatData\/ro\/standalone.MonthNarrows\/9=O\n-FormatData\/ro\/standalone.MonthNarrows\/10=N\n-FormatData\/ro\/standalone.MonthNarrows\/11=D\n-FormatData\/ro\/standalone.MonthNarrows\/12=\n-# commented out DayNarrows due to mostly undefined\n-#FormatData\/ro\/DayNarrows\/0=D\n-#FormatData\/ro\/DayNarrows\/1=\n-#FormatData\/ro\/DayNarrows\/2=\n-#FormatData\/ro\/DayNarrows\/3=\n-#FormatData\/ro\/DayNarrows\/4=\n-#FormatData\/ro\/DayNarrows\/5=\n-#FormatData\/ro\/DayNarrows\/6=\n-FormatData\/ro\/standalone.DayNarrows\/0=D\n-FormatData\/ro\/standalone.DayNarrows\/1=L\n-FormatData\/ro\/standalone.DayNarrows\/2=M\n-FormatData\/ro\/standalone.DayNarrows\/3=M\n-FormatData\/ro\/standalone.DayNarrows\/4=J\n-FormatData\/ro\/standalone.DayNarrows\/5=V\n-FormatData\/ro\/standalone.DayNarrows\/6=S\n-\n-FormatData\/ru\/DayNarrows\/0=\\u0412\n-FormatData\/ru\/DayNarrows\/1=\\u041f\\u043d\n-FormatData\/ru\/DayNarrows\/2=\\u0412\\u0442\n-FormatData\/ru\/DayNarrows\/3=\\u0421\n-FormatData\/ru\/DayNarrows\/4=\\u0427\n-FormatData\/ru\/DayNarrows\/5=\\u041f\n-# Note: \"sat\" is an contributed item in CLDR.\n-FormatData\/ru\/DayNarrows\/6=\\u0421\n-\n-FormatData\/ru\/standalone.DayNarrows\/0=\\u0412\n-FormatData\/ru\/standalone.DayNarrows\/1=\\u041f\n-FormatData\/ru\/standalone.DayNarrows\/2=\\u0412\n-FormatData\/ru\/standalone.DayNarrows\/3=\\u0421\n-FormatData\/ru\/standalone.DayNarrows\/4=\\u0427\n-FormatData\/ru\/standalone.DayNarrows\/5=\\u041f\n-FormatData\/ru\/standalone.DayNarrows\/6=\\u0421\n-\n-FormatData\/sk\/DayNarrows\/0=N\n-FormatData\/sk\/DayNarrows\/1=P\n-FormatData\/sk\/DayNarrows\/2=U\n-FormatData\/sk\/DayNarrows\/3=S\n-FormatData\/sk\/DayNarrows\/4=\\u0160\n-FormatData\/sk\/DayNarrows\/5=P\n-FormatData\/sk\/DayNarrows\/6=S\n-\n-FormatData\/sl\/DayNarrows\/0=n\n-FormatData\/sl\/DayNarrows\/1=p\n-FormatData\/sl\/DayNarrows\/2=t\n-FormatData\/sl\/DayNarrows\/3=s\n-FormatData\/sl\/DayNarrows\/4=\\u010d\n-FormatData\/sl\/DayNarrows\/5=p\n-FormatData\/sl\/DayNarrows\/6=s\n-\n-FormatData\/sq\/DayNarrows\/0=D\n-FormatData\/sq\/DayNarrows\/1=H\n-FormatData\/sq\/DayNarrows\/2=M\n-FormatData\/sq\/DayNarrows\/3=M\n-FormatData\/sq\/DayNarrows\/4=E\n-FormatData\/sq\/DayNarrows\/5=P\n-FormatData\/sq\/DayNarrows\/6=S\n-\n-FormatData\/sr\/DayNarrows\/0=\\u043d\n-FormatData\/sr\/DayNarrows\/1=\\u043f\n-FormatData\/sr\/DayNarrows\/2=\\u0443\n-FormatData\/sr\/DayNarrows\/3=\\u0441\n-FormatData\/sr\/DayNarrows\/4=\\u0447\n-FormatData\/sr\/DayNarrows\/5=\\u043f\n-FormatData\/sr\/DayNarrows\/6=\\u0441\n-FormatData\/sr\/short.Eras\/0=\\u043f. \\u043d. \\u0435.\n-FormatData\/sr\/short.Eras\/1=\\u043d. \\u0435.\n-FormatData\/sr\/narrow.Eras\/0=\\u043f.\\u043d.\\u0435.\n-FormatData\/sr\/narrow.Eras\/1=\\u043d.\\u0435.\n-\n-FormatData\/sv\/standalone.MonthNarrows\/0=J\n-FormatData\/sv\/standalone.MonthNarrows\/1=F\n-FormatData\/sv\/standalone.MonthNarrows\/2=M\n-FormatData\/sv\/standalone.MonthNarrows\/3=A\n-FormatData\/sv\/standalone.MonthNarrows\/4=M\n-FormatData\/sv\/standalone.MonthNarrows\/5=J\n-FormatData\/sv\/standalone.MonthNarrows\/6=J\n-FormatData\/sv\/standalone.MonthNarrows\/7=A\n-FormatData\/sv\/standalone.MonthNarrows\/8=S\n-FormatData\/sv\/standalone.MonthNarrows\/9=O\n-FormatData\/sv\/standalone.MonthNarrows\/10=N\n-FormatData\/sv\/standalone.MonthNarrows\/11=D\n-FormatData\/sv\/standalone.MonthNarrows\/12=\n-FormatData\/sv\/DayNarrows\/0=S\n-FormatData\/sv\/DayNarrows\/1=M\n-FormatData\/sv\/DayNarrows\/2=T\n-FormatData\/sv\/DayNarrows\/3=O\n-FormatData\/sv\/DayNarrows\/4=T\n-FormatData\/sv\/DayNarrows\/5=F\n-FormatData\/sv\/DayNarrows\/6=L\n-FormatData\/sv\/standalone.DayNarrows\/0=S\n-FormatData\/sv\/standalone.DayNarrows\/1=M\n-FormatData\/sv\/standalone.DayNarrows\/2=T\n-FormatData\/sv\/standalone.DayNarrows\/3=O\n-FormatData\/sv\/standalone.DayNarrows\/4=T\n-FormatData\/sv\/standalone.DayNarrows\/5=F\n-FormatData\/sv\/standalone.DayNarrows\/6=L\n-FormatData\/sv\/narrow.Eras\/0=f.Kr.\n-FormatData\/sv\/narrow.Eras\/1=e.Kr.\n-FormatData\/sv\/narrow.AmPmMarkers\/0=f\n-FormatData\/sv\/narrow.AmPmMarkers\/1=e\n-\n-FormatData\/th\/standalone.MonthNarrows\/0=\\u0e21.\\u0e04.\n-FormatData\/th\/standalone.MonthNarrows\/1=\\u0e01.\\u0e1e.\n-FormatData\/th\/standalone.MonthNarrows\/2=\\u0e21\\u0e35.\\u0e04.\n-FormatData\/th\/standalone.MonthNarrows\/3=\\u0e40\\u0e21.\\u0e22.\n-FormatData\/th\/standalone.MonthNarrows\/4=\\u0e1e.\\u0e04.\n-FormatData\/th\/standalone.MonthNarrows\/5=\\u0e21\\u0e34.\\u0e22.\n-FormatData\/th\/standalone.MonthNarrows\/6=\\u0e01.\\u0e04.\n-FormatData\/th\/standalone.MonthNarrows\/7=\\u0e2a.\\u0e04.\n-FormatData\/th\/standalone.MonthNarrows\/8=\\u0e01.\\u0e22.\n-FormatData\/th\/standalone.MonthNarrows\/9=\\u0e15.\\u0e04.\n-FormatData\/th\/standalone.MonthNarrows\/10=\\u0e1e.\\u0e22.\n-FormatData\/th\/standalone.MonthNarrows\/11=\\u0e18.\\u0e04.\n-FormatData\/th\/standalone.MonthNarrows\/12=\n-FormatData\/th\/DayNarrows\/0=\\u0e2d\n-FormatData\/th\/DayNarrows\/1=\\u0e08\n-FormatData\/th\/DayNarrows\/2=\\u0e2d\n-FormatData\/th\/DayNarrows\/3=\\u0e1e\n-FormatData\/th\/DayNarrows\/4=\\u0e1e\n-FormatData\/th\/DayNarrows\/5=\\u0e28\n-FormatData\/th\/DayNarrows\/6=\\u0e2a\n-FormatData\/th\/narrow.Eras\/0=\\u0e01\\u0e48\\u0e2d\\u0e19 \\u0e04.\\u0e28.\n-FormatData\/th\/narrow.Eras\/1=\\u0e04.\\u0e28.\n-\n-FormatData\/tr\/standalone.MonthNarrows\/0=O\n-FormatData\/tr\/standalone.MonthNarrows\/1=\\u015e\n-FormatData\/tr\/standalone.MonthNarrows\/2=M\n-FormatData\/tr\/standalone.MonthNarrows\/3=N\n-FormatData\/tr\/standalone.MonthNarrows\/4=M\n-FormatData\/tr\/standalone.MonthNarrows\/5=H\n-FormatData\/tr\/standalone.MonthNarrows\/6=T\n-FormatData\/tr\/standalone.MonthNarrows\/7=A\n-FormatData\/tr\/standalone.MonthNarrows\/8=E\n-FormatData\/tr\/standalone.MonthNarrows\/9=E\n-FormatData\/tr\/standalone.MonthNarrows\/10=K\n-FormatData\/tr\/standalone.MonthNarrows\/11=A\n-FormatData\/tr\/standalone.MonthNarrows\/12=\n-FormatData\/tr\/DayNarrows\/0=P\n-FormatData\/tr\/DayNarrows\/1=P\n-FormatData\/tr\/DayNarrows\/2=S\n-FormatData\/tr\/DayNarrows\/3=\\u00c7\n-FormatData\/tr\/DayNarrows\/4=P\n-FormatData\/tr\/DayNarrows\/5=C\n-FormatData\/tr\/DayNarrows\/6=C\n-\n-FormatData\/uk\/DayNarrows\/0=\\u041d\n-FormatData\/uk\/DayNarrows\/1=\\u041f\n-FormatData\/uk\/DayNarrows\/2=\\u0412\n-FormatData\/uk\/DayNarrows\/3=\\u0421\n-FormatData\/uk\/DayNarrows\/4=\\u0427\n-FormatData\/uk\/DayNarrows\/5=\\u041f\n-FormatData\/uk\/DayNarrows\/6=\\u0421\n-\n-FormatData\/vi\/DayNarrows\/0=CN\n-FormatData\/vi\/DayNarrows\/1=T2\n-FormatData\/vi\/DayNarrows\/2=T3\n-FormatData\/vi\/DayNarrows\/3=T4\n-FormatData\/vi\/DayNarrows\/4=T5\n-FormatData\/vi\/DayNarrows\/5=T6\n-FormatData\/vi\/DayNarrows\/6=T7\n-\n-FormatData\/zh\/standalone.MonthNarrows\/0=1\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/1=2\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/2=3\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/3=4\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/4=5\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/5=6\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/6=7\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/7=8\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/8=9\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/9=10\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/10=11\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/11=12\\u6708\n-FormatData\/zh\/standalone.MonthNarrows\/12=\n-FormatData\/zh\/DayNarrows\/0=\\u65e5\n-FormatData\/zh\/DayNarrows\/1=\\u4e00\n-FormatData\/zh\/DayNarrows\/2=\\u4e8c\n-FormatData\/zh\/DayNarrows\/3=\\u4e09\n-FormatData\/zh\/DayNarrows\/4=\\u56db\n-FormatData\/zh\/DayNarrows\/5=\\u4e94\n-FormatData\/zh\/DayNarrows\/6=\\u516d\n-\n-# bug 7195759\n-CurrencyNames\/\/ZMW=ZMW\n-\n-# bug 7114053\n-LocaleNames\/sq\/sq=shqip\n-\n-# bug 7074882\n-FormatData\/mt\/MonthNames\/7=Awwissu\n-FormatData\/mt\/MonthAbbreviations\/7=Aww\n-\n-# bug 7040556\n-FormatData\/pt\/MonthAbbreviations\/0=jan\n-FormatData\/pt\/MonthAbbreviations\/1=fev\n-FormatData\/pt\/MonthAbbreviations\/2=mar\n-FormatData\/pt\/MonthAbbreviations\/3=abr\n-FormatData\/pt\/MonthAbbreviations\/4=mai\n-FormatData\/pt\/MonthAbbreviations\/5=jun\n-FormatData\/pt\/MonthAbbreviations\/6=jul\n-FormatData\/pt\/MonthAbbreviations\/7=ago\n-FormatData\/pt\/MonthAbbreviations\/8=set\n-FormatData\/pt\/MonthAbbreviations\/9=out\n-FormatData\/pt\/MonthAbbreviations\/10=nov\n-FormatData\/pt\/MonthAbbreviations\/11=dez\n-\n-# bug 8021121\n-CurrencyNames\/lv_LV\/EUR=\\u20ac\n-\n-# bug # 6192407\n-LocaleNames\/ko\/PT=\\ud3ec\\ub974\\ud22c\\uac08\n-\n-# bug 6931564\n-LocaleNames\/sv\/ZA=Sydafrika\n-\n-# bug 8027695\n-FormatData\/sv_SE\/NumberPatterns\/2=#,##0 %\n-\n-# bug 8017142\n-FormatData\/es_CL\/TimePatterns\/0=HH:mm:ss zzzz\n-FormatData\/es_CL\/TimePatterns\/1=H:mm:ss z\n-FormatData\/es_CL\/TimePatterns\/2=H:mm:ss\n-FormatData\/es_CL\/TimePatterns\/3=H:mm\n-FormatData\/es_EC\/TimePatterns\/0=HH:mm:ss zzzz\n-FormatData\/es_EC\/TimePatterns\/1=H:mm:ss z\n-FormatData\/es_EC\/TimePatterns\/2=H:mm:ss\n-FormatData\/es_EC\/TimePatterns\/3=H:mm\n-\n-# bug 8037343\n-FormatData\/es_DO\/DatePatterns\/2=dd\/MM\/yyyy\n-FormatData\/es_DO\/DatePatterns\/3=dd\/MM\/yy\n-\n-# bug 8055222\n-CurrencyNames\/lt_LT\/EUR=\\u20ac\n-\n-# bug 8042126 + missing MonthNarrows data\n-FormatData\/\/MonthNarrows\/0=1\n-FormatData\/\/MonthNarrows\/1=2\n-FormatData\/\/MonthNarrows\/2=3\n-FormatData\/\/MonthNarrows\/3=4\n-FormatData\/\/MonthNarrows\/4=5\n-FormatData\/\/MonthNarrows\/5=6\n-FormatData\/\/MonthNarrows\/6=7\n-FormatData\/\/MonthNarrows\/7=8\n-FormatData\/\/MonthNarrows\/8=9\n-FormatData\/\/MonthNarrows\/9=10\n-FormatData\/\/MonthNarrows\/10=11\n-FormatData\/\/MonthNarrows\/11=12\n-FormatData\/\/MonthNarrows\/12=\n-FormatData\/bg\/MonthNarrows\/0=\\u044f\n-FormatData\/bg\/MonthNarrows\/1=\\u0444\n-FormatData\/bg\/MonthNarrows\/2=\\u043c\n-FormatData\/bg\/MonthNarrows\/3=\\u0430\n-FormatData\/bg\/MonthNarrows\/4=\\u043c\n-FormatData\/bg\/MonthNarrows\/5=\\u044e\n-FormatData\/bg\/MonthNarrows\/6=\\u044e\n-FormatData\/bg\/MonthNarrows\/7=\\u0430\n-FormatData\/bg\/MonthNarrows\/8=\\u0441\n-FormatData\/bg\/MonthNarrows\/9=\\u043e\n-FormatData\/bg\/MonthNarrows\/10=\\u043d\n-FormatData\/bg\/MonthNarrows\/11=\\u0434\n-FormatData\/bg\/MonthNarrows\/12=\n-FormatData\/zh_TW\/MonthNarrows\/0=1\n-FormatData\/zh_TW\/MonthNarrows\/1=2\n-FormatData\/zh_TW\/MonthNarrows\/2=3\n-FormatData\/zh_TW\/MonthNarrows\/3=4\n-FormatData\/zh_TW\/MonthNarrows\/4=5\n-FormatData\/zh_TW\/MonthNarrows\/5=6\n-FormatData\/zh_TW\/MonthNarrows\/6=7\n-FormatData\/zh_TW\/MonthNarrows\/7=8\n-FormatData\/zh_TW\/MonthNarrows\/8=9\n-FormatData\/zh_TW\/MonthNarrows\/9=10\n-FormatData\/zh_TW\/MonthNarrows\/10=11\n-FormatData\/zh_TW\/MonthNarrows\/11=12\n-FormatData\/zh_TW\/MonthNarrows\/12=\n-FormatData\/it\/MonthNarrows\/0=G\n-FormatData\/it\/MonthNarrows\/1=F\n-FormatData\/it\/MonthNarrows\/2=M\n-FormatData\/it\/MonthNarrows\/3=A\n-FormatData\/it\/MonthNarrows\/4=M\n-FormatData\/it\/MonthNarrows\/5=G\n-FormatData\/it\/MonthNarrows\/6=L\n-FormatData\/it\/MonthNarrows\/7=A\n-FormatData\/it\/MonthNarrows\/8=S\n-FormatData\/it\/MonthNarrows\/9=O\n-FormatData\/it\/MonthNarrows\/10=N\n-FormatData\/it\/MonthNarrows\/11=D\n-FormatData\/it\/MonthNarrows\/12=\n-FormatData\/ko\/MonthNarrows\/0=1\\uc6d4\n-FormatData\/ko\/MonthNarrows\/1=2\\uc6d4\n-FormatData\/ko\/MonthNarrows\/2=3\\uc6d4\n-FormatData\/ko\/MonthNarrows\/3=4\\uc6d4\n-FormatData\/ko\/MonthNarrows\/4=5\\uc6d4\n-FormatData\/ko\/MonthNarrows\/5=6\\uc6d4\n-FormatData\/ko\/MonthNarrows\/6=7\\uc6d4\n-FormatData\/ko\/MonthNarrows\/7=8\\uc6d4\n-FormatData\/ko\/MonthNarrows\/8=9\\uc6d4\n-FormatData\/ko\/MonthNarrows\/9=10\\uc6d4\n-FormatData\/ko\/MonthNarrows\/10=11\\uc6d4\n-FormatData\/ko\/MonthNarrows\/11=12\\uc6d4\n-FormatData\/ko\/MonthNarrows\/12=\n-FormatData\/uk\/MonthNarrows\/0=\\u0421\n-FormatData\/uk\/MonthNarrows\/1=\\u041b\n-FormatData\/uk\/MonthNarrows\/2=\\u0411\n-FormatData\/uk\/MonthNarrows\/3=\\u041a\n-FormatData\/uk\/MonthNarrows\/4=\\u0422\n-FormatData\/uk\/MonthNarrows\/5=\\u0427\n-FormatData\/uk\/MonthNarrows\/6=\\u041b\n-FormatData\/uk\/MonthNarrows\/7=\\u0421\n-FormatData\/uk\/MonthNarrows\/8=\\u0412\n-FormatData\/uk\/MonthNarrows\/9=\\u0416\n-FormatData\/uk\/MonthNarrows\/10=\\u041b\n-FormatData\/uk\/MonthNarrows\/11=\\u0413\n-FormatData\/uk\/MonthNarrows\/12=\n-FormatData\/lv\/MonthNarrows\/0=J\n-FormatData\/lv\/MonthNarrows\/1=F\n-FormatData\/lv\/MonthNarrows\/2=M\n-FormatData\/lv\/MonthNarrows\/3=A\n-FormatData\/lv\/MonthNarrows\/4=M\n-FormatData\/lv\/MonthNarrows\/5=J\n-FormatData\/lv\/MonthNarrows\/6=J\n-FormatData\/lv\/MonthNarrows\/7=A\n-FormatData\/lv\/MonthNarrows\/8=S\n-FormatData\/lv\/MonthNarrows\/9=O\n-FormatData\/lv\/MonthNarrows\/10=N\n-FormatData\/lv\/MonthNarrows\/11=D\n-FormatData\/lv\/MonthNarrows\/12=\n-FormatData\/pt\/MonthNarrows\/0=J\n-FormatData\/pt\/MonthNarrows\/1=F\n-FormatData\/pt\/MonthNarrows\/2=M\n-FormatData\/pt\/MonthNarrows\/3=A\n-FormatData\/pt\/MonthNarrows\/4=M\n-FormatData\/pt\/MonthNarrows\/5=J\n-FormatData\/pt\/MonthNarrows\/6=J\n-FormatData\/pt\/MonthNarrows\/7=A\n-FormatData\/pt\/MonthNarrows\/8=S\n-FormatData\/pt\/MonthNarrows\/9=O\n-FormatData\/pt\/MonthNarrows\/10=N\n-FormatData\/pt\/MonthNarrows\/11=D\n-FormatData\/pt\/MonthNarrows\/12=\n-FormatData\/sk\/MonthNarrows\/0=j\n-FormatData\/sk\/MonthNarrows\/1=f\n-FormatData\/sk\/MonthNarrows\/2=m\n-FormatData\/sk\/MonthNarrows\/3=a\n-FormatData\/sk\/MonthNarrows\/4=m\n-FormatData\/sk\/MonthNarrows\/5=j\n-FormatData\/sk\/MonthNarrows\/6=j\n-FormatData\/sk\/MonthNarrows\/7=a\n-FormatData\/sk\/MonthNarrows\/8=s\n-FormatData\/sk\/MonthNarrows\/9=o\n-FormatData\/sk\/MonthNarrows\/10=n\n-FormatData\/sk\/MonthNarrows\/11=d\n-FormatData\/sk\/MonthNarrows\/12=\n-FormatData\/hi_IN\/MonthNarrows\/0=\\u091c\n-FormatData\/hi_IN\/MonthNarrows\/1=\\u092b\\u093c\n-FormatData\/hi_IN\/MonthNarrows\/2=\\u092e\\u093e\n-FormatData\/hi_IN\/MonthNarrows\/3=\\u0905\n-FormatData\/hi_IN\/MonthNarrows\/4=\\u092e\n-FormatData\/hi_IN\/MonthNarrows\/5=\\u091c\\u0942\n-FormatData\/hi_IN\/MonthNarrows\/6=\\u091c\\u0941\n-FormatData\/hi_IN\/MonthNarrows\/7=\\u0905\n-FormatData\/hi_IN\/MonthNarrows\/8=\\u0938\\u093f\n-FormatData\/hi_IN\/MonthNarrows\/9=\\u0905\n-FormatData\/hi_IN\/MonthNarrows\/10=\\u0928\n-FormatData\/hi_IN\/MonthNarrows\/11=\\u0926\\u093f\n-FormatData\/hi_IN\/MonthNarrows\/12=\n-FormatData\/ga\/MonthNarrows\/0=E\n-FormatData\/ga\/MonthNarrows\/1=F\n-FormatData\/ga\/MonthNarrows\/2=M\n-FormatData\/ga\/MonthNarrows\/3=A\n-FormatData\/ga\/MonthNarrows\/4=B\n-FormatData\/ga\/MonthNarrows\/5=M\n-FormatData\/ga\/MonthNarrows\/6=I\n-FormatData\/ga\/MonthNarrows\/7=L\n-FormatData\/ga\/MonthNarrows\/8=M\n-FormatData\/ga\/MonthNarrows\/9=D\n-FormatData\/ga\/MonthNarrows\/10=S\n-FormatData\/ga\/MonthNarrows\/11=N\n-FormatData\/ga\/MonthNarrows\/12=\n-FormatData\/et\/MonthNarrows\/0=J\n-FormatData\/et\/MonthNarrows\/1=V\n-FormatData\/et\/MonthNarrows\/2=M\n-FormatData\/et\/MonthNarrows\/3=A\n-FormatData\/et\/MonthNarrows\/4=M\n-FormatData\/et\/MonthNarrows\/5=J\n-FormatData\/et\/MonthNarrows\/6=J\n-FormatData\/et\/MonthNarrows\/7=A\n-FormatData\/et\/MonthNarrows\/8=S\n-FormatData\/et\/MonthNarrows\/9=O\n-FormatData\/et\/MonthNarrows\/10=N\n-FormatData\/et\/MonthNarrows\/11=D\n-FormatData\/et\/MonthNarrows\/12=\n-FormatData\/sv\/MonthNarrows\/0=J\n-FormatData\/sv\/MonthNarrows\/1=F\n-FormatData\/sv\/MonthNarrows\/2=M\n-FormatData\/sv\/MonthNarrows\/3=A\n-FormatData\/sv\/MonthNarrows\/4=M\n-FormatData\/sv\/MonthNarrows\/5=J\n-FormatData\/sv\/MonthNarrows\/6=J\n-FormatData\/sv\/MonthNarrows\/7=A\n-FormatData\/sv\/MonthNarrows\/8=S\n-FormatData\/sv\/MonthNarrows\/9=O\n-FormatData\/sv\/MonthNarrows\/10=N\n-FormatData\/sv\/MonthNarrows\/11=D\n-FormatData\/sv\/MonthNarrows\/12=\n-FormatData\/cs\/MonthNarrows\/0=l\n-FormatData\/cs\/MonthNarrows\/1=\\u00fa\n-FormatData\/cs\/MonthNarrows\/2=b\n-FormatData\/cs\/MonthNarrows\/3=d\n-FormatData\/cs\/MonthNarrows\/4=k\n-FormatData\/cs\/MonthNarrows\/5=\\u010d\n-FormatData\/cs\/MonthNarrows\/6=\\u010d\n-FormatData\/cs\/MonthNarrows\/7=s\n-FormatData\/cs\/MonthNarrows\/8=z\n-FormatData\/cs\/MonthNarrows\/9=\\u0159\n-FormatData\/cs\/MonthNarrows\/10=l\n-FormatData\/cs\/MonthNarrows\/11=p\n-FormatData\/cs\/MonthNarrows\/12=\n-FormatData\/el\/MonthNarrows\/0=\\u0399\n-FormatData\/el\/MonthNarrows\/1=\\u03a6\n-FormatData\/el\/MonthNarrows\/2=\\u039c\n-FormatData\/el\/MonthNarrows\/3=\\u0391\n-FormatData\/el\/MonthNarrows\/4=\\u039c\n-FormatData\/el\/MonthNarrows\/5=\\u0399\n-FormatData\/el\/MonthNarrows\/6=\\u0399\n-FormatData\/el\/MonthNarrows\/7=\\u0391\n-FormatData\/el\/MonthNarrows\/8=\\u03a3\n-FormatData\/el\/MonthNarrows\/9=\\u039f\n-FormatData\/el\/MonthNarrows\/10=\\u039d\n-FormatData\/el\/MonthNarrows\/11=\\u0394\n-FormatData\/el\/MonthNarrows\/12=\n-FormatData\/hu\/MonthNarrows\/0=J\n-FormatData\/hu\/MonthNarrows\/1=F\n-FormatData\/hu\/MonthNarrows\/2=M\n-FormatData\/hu\/MonthNarrows\/3=\\u00c1\n-FormatData\/hu\/MonthNarrows\/4=M\n-FormatData\/hu\/MonthNarrows\/5=J\n-FormatData\/hu\/MonthNarrows\/6=J\n-FormatData\/hu\/MonthNarrows\/7=A\n-FormatData\/hu\/MonthNarrows\/8=Sz\n-FormatData\/hu\/MonthNarrows\/9=O\n-FormatData\/hu\/MonthNarrows\/10=N\n-FormatData\/hu\/MonthNarrows\/11=D\n-FormatData\/hu\/MonthNarrows\/12=\n-FormatData\/es\/MonthNarrows\/0=E\n-FormatData\/es\/MonthNarrows\/1=F\n-FormatData\/es\/MonthNarrows\/2=M\n-FormatData\/es\/MonthNarrows\/3=A\n-FormatData\/es\/MonthNarrows\/4=M\n-FormatData\/es\/MonthNarrows\/5=J\n-FormatData\/es\/MonthNarrows\/6=J\n-FormatData\/es\/MonthNarrows\/7=A\n-FormatData\/es\/MonthNarrows\/8=S\n-FormatData\/es\/MonthNarrows\/9=O\n-FormatData\/es\/MonthNarrows\/10=N\n-FormatData\/es\/MonthNarrows\/11=D\n-FormatData\/es\/MonthNarrows\/12=\n-FormatData\/tr\/MonthNarrows\/0=O\n-FormatData\/tr\/MonthNarrows\/1=\\u015e\n-FormatData\/tr\/MonthNarrows\/2=M\n-FormatData\/tr\/MonthNarrows\/3=N\n-FormatData\/tr\/MonthNarrows\/4=M\n-FormatData\/tr\/MonthNarrows\/5=H\n-FormatData\/tr\/MonthNarrows\/6=T\n-FormatData\/tr\/MonthNarrows\/7=A\n-FormatData\/tr\/MonthNarrows\/8=E\n-FormatData\/tr\/MonthNarrows\/9=E\n-FormatData\/tr\/MonthNarrows\/10=K\n-FormatData\/tr\/MonthNarrows\/11=A\n-FormatData\/tr\/MonthNarrows\/12=\n-FormatData\/hr\/MonthNarrows\/0=1.\n-FormatData\/hr\/MonthNarrows\/1=2.\n-FormatData\/hr\/MonthNarrows\/2=3.\n-FormatData\/hr\/MonthNarrows\/3=4.\n-FormatData\/hr\/MonthNarrows\/4=5.\n-FormatData\/hr\/MonthNarrows\/5=6.\n-FormatData\/hr\/MonthNarrows\/6=7.\n-FormatData\/hr\/MonthNarrows\/7=8.\n-FormatData\/hr\/MonthNarrows\/8=9.\n-FormatData\/hr\/MonthNarrows\/9=10.\n-FormatData\/hr\/MonthNarrows\/10=11.\n-FormatData\/hr\/MonthNarrows\/11=12.\n-FormatData\/hr\/MonthNarrows\/12=\n-FormatData\/lt\/MonthNarrows\/0=S\n-FormatData\/lt\/MonthNarrows\/1=V\n-FormatData\/lt\/MonthNarrows\/2=K\n-FormatData\/lt\/MonthNarrows\/3=B\n-FormatData\/lt\/MonthNarrows\/4=G\n-FormatData\/lt\/MonthNarrows\/5=B\n-FormatData\/lt\/MonthNarrows\/6=L\n-FormatData\/lt\/MonthNarrows\/7=R\n-FormatData\/lt\/MonthNarrows\/8=R\n-FormatData\/lt\/MonthNarrows\/9=S\n-FormatData\/lt\/MonthNarrows\/10=L\n-FormatData\/lt\/MonthNarrows\/11=G\n-FormatData\/lt\/MonthNarrows\/12=\n-FormatData\/sq\/MonthNarrows\/0=J\n-FormatData\/sq\/MonthNarrows\/1=S\n-FormatData\/sq\/MonthNarrows\/2=M\n-FormatData\/sq\/MonthNarrows\/3=P\n-FormatData\/sq\/MonthNarrows\/4=M\n-FormatData\/sq\/MonthNarrows\/5=Q\n-FormatData\/sq\/MonthNarrows\/6=K\n-FormatData\/sq\/MonthNarrows\/7=G\n-FormatData\/sq\/MonthNarrows\/8=S\n-FormatData\/sq\/MonthNarrows\/9=T\n-FormatData\/sq\/MonthNarrows\/10=N\n-FormatData\/sq\/MonthNarrows\/11=D\n-FormatData\/sq\/MonthNarrows\/12=\n-FormatData\/fr\/MonthNarrows\/0=J\n-FormatData\/fr\/MonthNarrows\/1=F\n-FormatData\/fr\/MonthNarrows\/2=M\n-FormatData\/fr\/MonthNarrows\/3=A\n-FormatData\/fr\/MonthNarrows\/4=M\n-FormatData\/fr\/MonthNarrows\/5=J\n-FormatData\/fr\/MonthNarrows\/6=J\n-FormatData\/fr\/MonthNarrows\/7=A\n-FormatData\/fr\/MonthNarrows\/8=S\n-FormatData\/fr\/MonthNarrows\/9=O\n-FormatData\/fr\/MonthNarrows\/10=N\n-FormatData\/fr\/MonthNarrows\/11=D\n-FormatData\/fr\/MonthNarrows\/12=\n-FormatData\/is\/MonthNarrows\/0=J\n-FormatData\/is\/MonthNarrows\/1=F\n-FormatData\/is\/MonthNarrows\/2=M\n-FormatData\/is\/MonthNarrows\/3=A\n-FormatData\/is\/MonthNarrows\/4=M\n-FormatData\/is\/MonthNarrows\/5=J\n-FormatData\/is\/MonthNarrows\/6=J\n-FormatData\/is\/MonthNarrows\/7=\\u00c1\n-FormatData\/is\/MonthNarrows\/8=L\n-FormatData\/is\/MonthNarrows\/9=O\n-FormatData\/is\/MonthNarrows\/10=N\n-FormatData\/is\/MonthNarrows\/11=D\n-FormatData\/is\/MonthNarrows\/12=\n-FormatData\/de\/MonthNarrows\/0=J\n-FormatData\/de\/MonthNarrows\/1=F\n-FormatData\/de\/MonthNarrows\/2=M\n-FormatData\/de\/MonthNarrows\/3=A\n-FormatData\/de\/MonthNarrows\/4=M\n-FormatData\/de\/MonthNarrows\/5=J\n-FormatData\/de\/MonthNarrows\/6=J\n-FormatData\/de\/MonthNarrows\/7=A\n-FormatData\/de\/MonthNarrows\/8=S\n-FormatData\/de\/MonthNarrows\/9=O\n-FormatData\/de\/MonthNarrows\/10=N\n-FormatData\/de\/MonthNarrows\/11=D\n-FormatData\/de\/MonthNarrows\/12=\n-FormatData\/en\/MonthNarrows\/0=J\n-FormatData\/en\/MonthNarrows\/1=F\n-FormatData\/en\/MonthNarrows\/2=M\n-FormatData\/en\/MonthNarrows\/3=A\n-FormatData\/en\/MonthNarrows\/4=M\n-FormatData\/en\/MonthNarrows\/5=J\n-FormatData\/en\/MonthNarrows\/6=J\n-FormatData\/en\/MonthNarrows\/7=A\n-FormatData\/en\/MonthNarrows\/8=S\n-FormatData\/en\/MonthNarrows\/9=O\n-FormatData\/en\/MonthNarrows\/10=N\n-FormatData\/en\/MonthNarrows\/11=D\n-FormatData\/en\/MonthNarrows\/12=\n-FormatData\/ca\/MonthNarrows\/0=G\n-FormatData\/ca\/MonthNarrows\/1=F\n-FormatData\/ca\/MonthNarrows\/2=M\n-FormatData\/ca\/MonthNarrows\/3=A\n-FormatData\/ca\/MonthNarrows\/4=M\n-FormatData\/ca\/MonthNarrows\/5=J\n-FormatData\/ca\/MonthNarrows\/6=G\n-FormatData\/ca\/MonthNarrows\/7=A\n-FormatData\/ca\/MonthNarrows\/8=S\n-FormatData\/ca\/MonthNarrows\/9=O\n-FormatData\/ca\/MonthNarrows\/10=N\n-FormatData\/ca\/MonthNarrows\/11=D\n-FormatData\/ca\/MonthNarrows\/12=\n-FormatData\/sl\/MonthNarrows\/0=j\n-FormatData\/sl\/MonthNarrows\/1=f\n-FormatData\/sl\/MonthNarrows\/2=m\n-FormatData\/sl\/MonthNarrows\/3=a\n-FormatData\/sl\/MonthNarrows\/4=m\n-FormatData\/sl\/MonthNarrows\/5=j\n-FormatData\/sl\/MonthNarrows\/6=j\n-FormatData\/sl\/MonthNarrows\/7=a\n-FormatData\/sl\/MonthNarrows\/8=s\n-FormatData\/sl\/MonthNarrows\/9=o\n-FormatData\/sl\/MonthNarrows\/10=n\n-FormatData\/sl\/MonthNarrows\/11=d\n-FormatData\/sl\/MonthNarrows\/12=\n-FormatData\/fi\/MonthNarrows\/0=T\n-FormatData\/fi\/MonthNarrows\/1=H\n-FormatData\/fi\/MonthNarrows\/2=M\n-FormatData\/fi\/MonthNarrows\/3=H\n-FormatData\/fi\/MonthNarrows\/4=T\n-FormatData\/fi\/MonthNarrows\/5=K\n-FormatData\/fi\/MonthNarrows\/6=H\n-FormatData\/fi\/MonthNarrows\/7=E\n-FormatData\/fi\/MonthNarrows\/8=S\n-FormatData\/fi\/MonthNarrows\/9=L\n-FormatData\/fi\/MonthNarrows\/10=M\n-FormatData\/fi\/MonthNarrows\/11=J\n-FormatData\/fi\/MonthNarrows\/12=\n-FormatData\/mk\/MonthNarrows\/0=\\u0458\n-FormatData\/mk\/MonthNarrows\/1=\\u0444\n-FormatData\/mk\/MonthNarrows\/2=\\u043c\n-FormatData\/mk\/MonthNarrows\/3=\\u0430\n-FormatData\/mk\/MonthNarrows\/4=\\u043c\n-FormatData\/mk\/MonthNarrows\/5=\\u0458\n-FormatData\/mk\/MonthNarrows\/6=\\u0458\n-FormatData\/mk\/MonthNarrows\/7=\\u0430\n-FormatData\/mk\/MonthNarrows\/8=\\u0441\n-FormatData\/mk\/MonthNarrows\/9=\\u043e\n-FormatData\/mk\/MonthNarrows\/10=\\u043d\n-FormatData\/mk\/MonthNarrows\/11=\\u0434\n-FormatData\/mk\/MonthNarrows\/12=\n-FormatData\/sr-Latn\/MonthNarrows\/0=j\n-FormatData\/sr-Latn\/MonthNarrows\/1=f\n-FormatData\/sr-Latn\/MonthNarrows\/2=m\n-FormatData\/sr-Latn\/MonthNarrows\/3=a\n-FormatData\/sr-Latn\/MonthNarrows\/4=m\n-FormatData\/sr-Latn\/MonthNarrows\/5=j\n-FormatData\/sr-Latn\/MonthNarrows\/6=j\n-FormatData\/sr-Latn\/MonthNarrows\/7=a\n-FormatData\/sr-Latn\/MonthNarrows\/8=s\n-FormatData\/sr-Latn\/MonthNarrows\/9=o\n-FormatData\/sr-Latn\/MonthNarrows\/10=n\n-FormatData\/sr-Latn\/MonthNarrows\/11=d\n-FormatData\/sr-Latn\/MonthNarrows\/12=\n-FormatData\/th\/MonthNarrows\/0=\\u0e21.\\u0e04.\n-FormatData\/th\/MonthNarrows\/1=\\u0e01.\\u0e1e.\n-FormatData\/th\/MonthNarrows\/2=\\u0e21\\u0e35.\\u0e04.\n-FormatData\/th\/MonthNarrows\/3=\\u0e40\\u0e21.\\u0e22.\n-FormatData\/th\/MonthNarrows\/4=\\u0e1e.\\u0e04.\n-FormatData\/th\/MonthNarrows\/5=\\u0e21\\u0e34.\\u0e22\n-FormatData\/th\/MonthNarrows\/6=\\u0e01.\\u0e04.\n-FormatData\/th\/MonthNarrows\/7=\\u0e2a.\\u0e04.\n-FormatData\/th\/MonthNarrows\/8=\\u0e01.\\u0e22.\n-FormatData\/th\/MonthNarrows\/9=\\u0e15.\\u0e04.\n-FormatData\/th\/MonthNarrows\/10=\\u0e1e.\\u0e22.\n-FormatData\/th\/MonthNarrows\/11=\\u0e18.\\u0e04.\n-FormatData\/th\/MonthNarrows\/12=\n-FormatData\/ar\/MonthNarrows\/0=\\u064a\n-FormatData\/ar\/MonthNarrows\/1=\\u0641\n-FormatData\/ar\/MonthNarrows\/2=\\u0645\n-FormatData\/ar\/MonthNarrows\/3=\\u0623\n-FormatData\/ar\/MonthNarrows\/4=\\u0648\n-FormatData\/ar\/MonthNarrows\/5=\\u0646\n-FormatData\/ar\/MonthNarrows\/6=\\u0644\n-FormatData\/ar\/MonthNarrows\/7=\\u063a\n-FormatData\/ar\/MonthNarrows\/8=\\u0633\n-FormatData\/ar\/MonthNarrows\/9=\\u0643\n-FormatData\/ar\/MonthNarrows\/10=\\u0628\n-FormatData\/ar\/MonthNarrows\/11=\\u062f\n-FormatData\/ar\/MonthNarrows\/12=\n-FormatData\/ru\/MonthNarrows\/0=\\u042f\n-FormatData\/ru\/MonthNarrows\/1=\\u0424\n-FormatData\/ru\/MonthNarrows\/2=\\u041c\n-FormatData\/ru\/MonthNarrows\/3=\\u0410\n-FormatData\/ru\/MonthNarrows\/4=\\u041c\n-FormatData\/ru\/MonthNarrows\/5=\\u0418\n-FormatData\/ru\/MonthNarrows\/6=\\u0418\n-FormatData\/ru\/MonthNarrows\/7=\\u0410\n-FormatData\/ru\/MonthNarrows\/8=\\u0421\n-FormatData\/ru\/MonthNarrows\/9=\\u041e\n-FormatData\/ru\/MonthNarrows\/10=\\u041d\n-FormatData\/ru\/MonthNarrows\/11=\\u0414\n-FormatData\/ru\/MonthNarrows\/12=\n-FormatData\/ms\/MonthNarrows\/0=J\n-FormatData\/ms\/MonthNarrows\/1=F\n-FormatData\/ms\/MonthNarrows\/2=M\n-FormatData\/ms\/MonthNarrows\/3=A\n-FormatData\/ms\/MonthNarrows\/4=M\n-FormatData\/ms\/MonthNarrows\/5=J\n-FormatData\/ms\/MonthNarrows\/6=J\n-FormatData\/ms\/MonthNarrows\/7=O\n-FormatData\/ms\/MonthNarrows\/8=S\n-FormatData\/ms\/MonthNarrows\/9=O\n-FormatData\/ms\/MonthNarrows\/10=N\n-FormatData\/ms\/MonthNarrows\/11=D\n-FormatData\/ms\/MonthNarrows\/12=\n-FormatData\/nl\/MonthNarrows\/0=J\n-FormatData\/nl\/MonthNarrows\/1=F\n-FormatData\/nl\/MonthNarrows\/2=M\n-FormatData\/nl\/MonthNarrows\/3=A\n-FormatData\/nl\/MonthNarrows\/4=M\n-FormatData\/nl\/MonthNarrows\/5=J\n-FormatData\/nl\/MonthNarrows\/6=J\n-FormatData\/nl\/MonthNarrows\/7=A\n-FormatData\/nl\/MonthNarrows\/8=S\n-FormatData\/nl\/MonthNarrows\/9=O\n-FormatData\/nl\/MonthNarrows\/10=N\n-FormatData\/nl\/MonthNarrows\/11=D\n-FormatData\/nl\/MonthNarrows\/12=\n-FormatData\/vi\/MonthNarrows\/0=1\n-FormatData\/vi\/MonthNarrows\/1=2\n-FormatData\/vi\/MonthNarrows\/2=3\n-FormatData\/vi\/MonthNarrows\/3=4\n-FormatData\/vi\/MonthNarrows\/4=5\n-FormatData\/vi\/MonthNarrows\/5=6\n-FormatData\/vi\/MonthNarrows\/6=7\n-FormatData\/vi\/MonthNarrows\/7=8\n-FormatData\/vi\/MonthNarrows\/8=9\n-FormatData\/vi\/MonthNarrows\/9=10\n-FormatData\/vi\/MonthNarrows\/10=11\n-FormatData\/vi\/MonthNarrows\/11=12\n-FormatData\/vi\/MonthNarrows\/12=\n-FormatData\/sr\/MonthNarrows\/0=\\u0458\n-FormatData\/sr\/MonthNarrows\/1=\\u0444\n-FormatData\/sr\/MonthNarrows\/2=\\u043c\n-FormatData\/sr\/MonthNarrows\/3=\\u0430\n-FormatData\/sr\/MonthNarrows\/4=\\u043c\n-FormatData\/sr\/MonthNarrows\/5=\\u0458\n-FormatData\/sr\/MonthNarrows\/6=\\u0458\n-FormatData\/sr\/MonthNarrows\/7=\\u0430\n-FormatData\/sr\/MonthNarrows\/8=\\u0441\n-FormatData\/sr\/MonthNarrows\/9=\\u043e\n-FormatData\/sr\/MonthNarrows\/10=\\u043d\n-FormatData\/sr\/MonthNarrows\/11=\\u0434\n-FormatData\/sr\/MonthNarrows\/12=\n-FormatData\/mt\/MonthNarrows\/0=J\n-FormatData\/mt\/MonthNarrows\/1=F\n-FormatData\/mt\/MonthNarrows\/2=M\n-FormatData\/mt\/MonthNarrows\/3=A\n-FormatData\/mt\/MonthNarrows\/4=M\n-FormatData\/mt\/MonthNarrows\/5=\\u0120\n-FormatData\/mt\/MonthNarrows\/6=L\n-FormatData\/mt\/MonthNarrows\/7=A\n-FormatData\/mt\/MonthNarrows\/8=S\n-FormatData\/mt\/MonthNarrows\/9=O\n-FormatData\/mt\/MonthNarrows\/10=N\n-FormatData\/mt\/MonthNarrows\/11=D\n-FormatData\/mt\/MonthNarrows\/12=\n-FormatData\/da\/MonthNarrows\/0=J\n-FormatData\/da\/MonthNarrows\/1=F\n-FormatData\/da\/MonthNarrows\/2=M\n-FormatData\/da\/MonthNarrows\/3=A\n-FormatData\/da\/MonthNarrows\/4=M\n-FormatData\/da\/MonthNarrows\/5=J\n-FormatData\/da\/MonthNarrows\/6=J\n-FormatData\/da\/MonthNarrows\/7=A\n-FormatData\/da\/MonthNarrows\/8=S\n-FormatData\/da\/MonthNarrows\/9=O\n-FormatData\/da\/MonthNarrows\/10=N\n-FormatData\/da\/MonthNarrows\/11=D\n-FormatData\/da\/MonthNarrows\/12=\n-FormatData\/ro\/MonthNarrows\/0=I\n-FormatData\/ro\/MonthNarrows\/1=F\n-FormatData\/ro\/MonthNarrows\/2=M\n-FormatData\/ro\/MonthNarrows\/3=A\n-FormatData\/ro\/MonthNarrows\/4=M\n-FormatData\/ro\/MonthNarrows\/5=I\n-FormatData\/ro\/MonthNarrows\/6=I\n-FormatData\/ro\/MonthNarrows\/7=A\n-FormatData\/ro\/MonthNarrows\/8=S\n-FormatData\/ro\/MonthNarrows\/9=O\n-FormatData\/ro\/MonthNarrows\/10=N\n-FormatData\/ro\/MonthNarrows\/11=D\n-FormatData\/ro\/MonthNarrows\/12=\n-FormatData\/no\/MonthNarrows\/0=J\n-FormatData\/no\/MonthNarrows\/1=F\n-FormatData\/no\/MonthNarrows\/2=M\n-FormatData\/no\/MonthNarrows\/3=A\n-FormatData\/no\/MonthNarrows\/4=M\n-FormatData\/no\/MonthNarrows\/5=J\n-FormatData\/no\/MonthNarrows\/6=J\n-FormatData\/no\/MonthNarrows\/7=A\n-FormatData\/no\/MonthNarrows\/8=S\n-FormatData\/no\/MonthNarrows\/9=O\n-FormatData\/no\/MonthNarrows\/10=N\n-FormatData\/no\/MonthNarrows\/11=D\n-FormatData\/no\/MonthNarrows\/12=\n-FormatData\/pl\/MonthNarrows\/0=s\n-FormatData\/pl\/MonthNarrows\/1=l\n-FormatData\/pl\/MonthNarrows\/2=m\n-FormatData\/pl\/MonthNarrows\/3=k\n-FormatData\/pl\/MonthNarrows\/4=m\n-FormatData\/pl\/MonthNarrows\/5=c\n-FormatData\/pl\/MonthNarrows\/6=l\n-FormatData\/pl\/MonthNarrows\/7=s\n-FormatData\/pl\/MonthNarrows\/8=w\n-FormatData\/pl\/MonthNarrows\/9=p\n-FormatData\/pl\/MonthNarrows\/10=l\n-FormatData\/pl\/MonthNarrows\/11=g\n-FormatData\/pl\/MonthNarrows\/12=\n-FormatData\/iw\/MonthNarrows\/0=1\n-FormatData\/iw\/MonthNarrows\/1=2\n-FormatData\/iw\/MonthNarrows\/2=3\n-FormatData\/iw\/MonthNarrows\/3=4\n-FormatData\/iw\/MonthNarrows\/4=5\n-FormatData\/iw\/MonthNarrows\/5=6\n-FormatData\/iw\/MonthNarrows\/6=7\n-FormatData\/iw\/MonthNarrows\/7=8\n-FormatData\/iw\/MonthNarrows\/8=9\n-FormatData\/iw\/MonthNarrows\/9=10\n-FormatData\/iw\/MonthNarrows\/10=11\n-FormatData\/iw\/MonthNarrows\/11=12\n-FormatData\/iw\/MonthNarrows\/12=\n-FormatData\/zh\/MonthNarrows\/0=1\n-FormatData\/zh\/MonthNarrows\/1=2\n-FormatData\/zh\/MonthNarrows\/2=3\n-FormatData\/zh\/MonthNarrows\/3=4\n-FormatData\/zh\/MonthNarrows\/4=5\n-FormatData\/zh\/MonthNarrows\/5=6\n-FormatData\/zh\/MonthNarrows\/6=7\n-FormatData\/zh\/MonthNarrows\/7=8\n-FormatData\/zh\/MonthNarrows\/8=9\n-FormatData\/zh\/MonthNarrows\/9=10\n-FormatData\/zh\/MonthNarrows\/10=11\n-FormatData\/zh\/MonthNarrows\/11=12\n-FormatData\/zh\/MonthNarrows\/12=\n-\n-# bug #8074791\n-FormatData\/fi\/DatePatterns\/0=d. MMMM yyyy\n-FormatData\/fi\/DatePatterns\/1=d. MMMM yyyy\n-FormatData\/fi\/DatePatterns\/2=d.M.yyyy\n-FormatData\/fi\/DatePatterns\/3=d.M.yyyy\n-\n-# bug #8075173\n-FormatData\/de\/standalone.MonthAbbreviations\/2=M\\u00e4r\n-\n-# bug #8129361\n-CurrencyNames\/\/hrk=Kuna\n-\n-# bug #7037368\n-CurrencyNames\/de\/sar=Saudischer Rial\n-CurrencyNames\/de\/xpf=CFP-Franc\n-CurrencyNames\/it\/azn=manat azero\n-CurrencyNames\/it\/ron=leu rumeno\n-CurrencyNames\/it\/trl=lira turca (1922\\u20132005)\n-CurrencyNames\/it\/try=lira turca\n-CurrencyNames\/sv\/bgl=bulgarisk h\\u00e5rd lev (1962\\u20131999)\n-CurrencyNames\/sv\/xaf=centralafrikansk franc\n-CurrencyNames\/sv\/xfu=internationella j\\u00e4rnv\\u00e4gsunionens franc\n-CurrencyNames\/sv\/xof=v\\u00e4stafrikansk franc\n-CurrencyNames\/zh_CN\/sdg=\\u82cf\\u4e39\\u9551\n-\n-# bug #8164784\n-CurrencyNames\/\/mwk=Malawian Malawi Kwacha\n-CurrencyNames\/\/pen=Peruvian Sol\n-\n-# bug #8145952\n-CurrencyNames\/\/byn=Belarusian Ruble\n-CurrencyNames\/be_BY\/BYN=\\u0420\\u0443\\u0431\n-\n-# bug #8037111\n-FormatData\/sv\/NumberPatterns\/2=#,##0 %\n-# bug #8081643\n-FormatData\/sr-Latin\/NumberElements\/0=,\n-FormatData\/sr-Latin\/NumberElements\/1=.\n-\n-# bug #8187946\n-CurrencyNames\/\/stn=S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe Dobra\n-CurrencyNames\/\/lak=Lao Kip\n-CurrencyNames\/\/php=Philippine Peso\n-CurrencyNames\/\/azn=Azerbaijan Manat\n-\n-# bug #8193552\n-CurrencyNames\/\/mru=Mauritanian Ouguiya\n-\n-# bug #8208746, #8274658\n-CurrencyNames\/\/ved=Venezuelan Bol\\u00edvar Soberano\n-CurrencyNames\/\/ves=Venezuelan Bol\\u00edvar Soberano\n-\n-# bug #8206879\n-# For Peru decimal separator is changed to dot(.) and grouping separator is changed to comma(,)\n-FormatData\/es_PE\/NumberElements\/0=.\n-FormatData\/es_PE\/NumberElements\/1=,\n-\n-# bug #8227127\n-FormatData\/ja\/short.Eras\/0=\\u7d00\\u5143\\u524d\n-FormatData\/ja\/short.Eras\/1=\\u897f\\u66a6\n-FormatData\/zh\/short.Eras\/0=\\u516c\\u5143\\u524d\n-FormatData\/zh\/short.Eras\/1=\\u516c\\u5143\n-FormatData\/zh_TW\/short.Eras\/0=\\u897f\\u5143\\u524d\n-FormatData\/zh_TW\/short.Eras\/1=\\u897f\\u5143\n-\n-# bug 8234288\n-TimeZoneNames\/en\/Asia\\\/Istanbul\/1=Turkey Time\n-TimeZoneNames\/en\/Asia\\\/Istanbul\/2=TRT\n-TimeZoneNames\/en\/Asia\\\/Istanbul\/3=Turkey Summer Time\n-TimeZoneNames\/en\/Asia\\\/Istanbul\/4=TRST\n-TimeZoneNames\/en\/Europe\\\/Istanbul\/1=Turkey Time\n-TimeZoneNames\/en\/Europe\\\/Istanbul\/2=TRT\n-TimeZoneNames\/en\/Europe\\\/Istanbul\/3=Turkey Summer Time\n-TimeZoneNames\/en\/Europe\\\/Istanbul\/4=TRST\n-TimeZoneNames\/en\/Turkey\/1=Turkey Time\n-TimeZoneNames\/en\/Turkey\/2=TRT\n-TimeZoneNames\/en\/Turkey\/3=Turkey Summer Time\n-TimeZoneNames\/en\/Turkey\/4=TRST\n-\n-# bug 8255086\n-LocaleNames\/\/bn=Bangla\n-LocaleNames\/\/fy=Western Frisian\n-LocaleNames\/\/gl=Galician\n-LocaleNames\/\/ht=Haitian Creole\n-LocaleNames\/\/kj=Kuanyama\n-LocaleNames\/\/kl=Kalaallisut\n-LocaleNames\/\/ky=Kyrgyz\n-LocaleNames\/\/nb=Norwegian Bokm\\u00e5l\n-LocaleNames\/\/or=Odia\n-LocaleNames\/\/os=Ossetic\n-LocaleNames\/\/pa=Punjabi\n-LocaleNames\/\/ps=Pashto\n-LocaleNames\/\/rm=Romansh\n-LocaleNames\/\/si=Sinhala\n-LocaleNames\/\/to=Tongan\n-LocaleNames\/\/ug=Uyghur\n-LocaleNames\/\/vo=Volap\\u00fck\n-LocaleNames\/\/ang=Old English\n-LocaleNames\/\/arc=Aramaic\n-LocaleNames\/\/arn=Mapuche\n-LocaleNames\/\/bas=Basaa\n-LocaleNames\/\/car=Carib\n-LocaleNames\/\/chn=Chinook Jargon\n-LocaleNames\/\/crh=Crimean Turkish\n-LocaleNames\/\/den=Slave\n-LocaleNames\/\/dum=Middle Dutch\n-LocaleNames\/\/egy=Ancient Egyptian\n-LocaleNames\/\/enm=Middle English\n-LocaleNames\/\/frm=Middle French\n-LocaleNames\/\/fro=Old French\n-LocaleNames\/\/gmh=Middle High German\n-LocaleNames\/\/goh=Old High German\n-LocaleNames\/\/grc=Ancient Greek\n-LocaleNames\/\/gwi=Gwich\\u02bcin\n-LocaleNames\/\/luo=Luo\n-LocaleNames\/\/lus=Mizo\n-LocaleNames\/\/mga=Middle Irish\n-LocaleNames\/\/mul=Multiple languages\n-LocaleNames\/\/mus=Muscogee\n-LocaleNames\/\/new=Newari\n-LocaleNames\/\/nob=Bokm\\u00e5l, Norwegian\n-LocaleNames\/\/non=Old Norse\n-LocaleNames\/\/nqo=N\\u2019Ko\n-LocaleNames\/\/nso=Northern Sotho\n-LocaleNames\/\/ota=Ottoman Turkish\n-LocaleNames\/\/peo=Old Persian\n-LocaleNames\/\/pro=Old Proven\\u00e7al\n-LocaleNames\/\/sah=Sakha\n-LocaleNames\/\/sga=Old Irish\n-LocaleNames\/\/sog=Sogdien\n-LocaleNames\/\/tog=Nyasa Tonga\n-LocaleNames\/\/und=Unknown language\n-LocaleNames\/\/vol=Volap\\u00fck\n-LocaleNames\/\/wal=Wolaytta\n-LocaleNames\/\/Beng=Bangla\n-LocaleNames\/\/Geok=Georgian Khutsuri\n-LocaleNames\/\/Hans=Simplified\n-LocaleNames\/\/Hant=Traditional\n-LocaleNames\/\/Hrkt=Japanese syllabaries\n-LocaleNames\/\/Lana=Lanna\n-LocaleNames\/\/Lisu=Fraser\n-LocaleNames\/\/Mand=Mandaean\n-LocaleNames\/\/Nkgb=Naxi Geba\n-LocaleNames\/\/Orya=Odia\n-LocaleNames\/\/Plrd=Pollard Phonetic\n-LocaleNames\/\/Sind=Khudawadi\n-LocaleNames\/\/Wara=Varang Kshiti\n-LocaleNames\/\/Zinh=Inherited\n-LocaleNames\/\/Zyyy=Common\n-LocaleNames\/\/Zzzz=Unknown Script\n-LocaleNames\/\/AG=Antigua & Barbuda\n-LocaleNames\/\/AX=\\u00c5land Islands\n-LocaleNames\/\/BA=Bosnia & Herzegovina\n-LocaleNames\/\/BL=St. Barth\\u00e9lemy\n-LocaleNames\/\/BQ=Caribbean Netherlands\n-LocaleNames\/\/CC=Cocos (Keeling) Islands\n-LocaleNames\/\/CD=Congo - Kinshasa\n-LocaleNames\/\/CG=Congo - Brazzaville\n-LocaleNames\/\/CI=C\\u00f4te d\\u2019Ivoire\n-LocaleNames\/\/CW=Cura\\u00e7ao\n-LocaleNames\/\/CZ=Czechia\n-LocaleNames\/\/GS=South Georgia & South Sandwich Islands\n-LocaleNames\/\/HK=Hong Kong SAR China\n-LocaleNames\/\/HM=Heard & McDonald Islands\n-LocaleNames\/\/IM=Isle of Man\n-LocaleNames\/\/KN=St. Kitts & Nevis\n-LocaleNames\/\/LC=St. Lucia\n-LocaleNames\/\/MF=St. Martin\n-LocaleNames\/\/MK=North Macedonia\n-LocaleNames\/\/MM=Myanmar (Burma)\n-LocaleNames\/\/MO=Macao SAR China\n-LocaleNames\/\/PM=St. Pierre & Miquelon\n-LocaleNames\/\/PN=Pitcairn Islands\n-LocaleNames\/\/PS=Palestinian Territories\n-LocaleNames\/\/RE=R\\u00e9union\n-LocaleNames\/\/SH=St. Helena\n-LocaleNames\/\/SJ=Svalbard & Jan Mayen\n-LocaleNames\/\/ST=S\\u00e3o Tom\\u00e9 & Pr\\u00edncipe\n-LocaleNames\/\/SX=Sint Maarten\n-LocaleNames\/\/SZ=Eswatini\n-LocaleNames\/\/TC=Turks & Caicos Islands\n-LocaleNames\/\/TT=Trinidad & Tobago\n-LocaleNames\/\/UM=U.S. Outlying Islands\n-LocaleNames\/\/VA=Vatican City\n-LocaleNames\/\/VC=St. Vincent & Grenadines\n-LocaleNames\/\/WF=Wallis & Futuna\n-LocaleNames\/\/035=Southeast Asia\n-LocaleNames\/\/053=Australasia\n-LocaleNames\/\/419=Latin America\n-\n-#bug 8287868\n-LocaleNames\/ca\/SZ=eSwatini\n-LocaleNames\/el\/SZ=\\u0395\\u03c3\\u03bf\\u03c5\\u03b1\\u03c4\\u03af\\u03bd\\u03b9\n-LocaleNames\/el_CY\/SZ=\\u0395\\u03c3\\u03bf\\u03c5\\u03b1\\u03c4\\u03af\\u03bd\\u03b9\n-LocaleNames\/es\/SZ=Esuatini\n-LocaleNames\/ga\/SZ=eSuait\\u00edn\\u00ed\n-LocaleNames\/it\/SZ=Swaziland\n-LocaleNames\/ja\/SZ=\\u30a8\\u30b9\\u30ef\\u30c6\\u30a3\\u30cb\n-LocaleNames\/ko\/SZ=\\uc5d0\\uc2a4\\uc640\\ud2f0\\ub2c8\n-LocaleNames\/mt\/SZ=l-Eswatini\n-LocaleNames\/pt\/SZ=Essuat\\u00edni\n-LocaleNames\/ru\/SZ=\\u042d\\u0441\\u0432\\u0430\\u0442\\u0438\\u043d\\u0438\n-LocaleNames\/sr\/SZ=\\u0421\\u0432\\u0430\\u0437\\u0438\\u043b\\u0435\\u043d\\u0434\n-LocaleNames\/th\/SZ=\\u0e40\\u0e2d\\u0e2a\\u0e27\\u0e32\\u0e15\\u0e35\\u0e19\\u0e35\n-LocaleNames\/zh\/SZ=\\u65af\\u5a01\\u58eb\\u5170\n-LocaleNames\/zh_TW\/SZ=\\u53f2\\u74e6\\u5e1d\\u5c3c\n-\n-#bug 8303472\n-LocaleNames\/\/TR=T\\u00fcrkiye\n","filename":"test\/jdk\/sun\/text\/resources\/LocaleData","additions":0,"deletions":8476,"binary":false,"changes":8476,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- *      8301206 8303472 8317979 8306116 8174269 8333582\n+ *      8301206 8303472 8317979 8306116 8174269 8333582 8357075\n@@ -48,1 +48,1 @@\n- * @run main LocaleDataTest -cldr\n+ * @run main LocaleDataTest\n@@ -121,1 +121,1 @@\n- *        <tt>java --add-exports java.base\/sun.util.resources=ALL-UNNAMED LocaleDataTest.java [-w] [{ -s | <filename> }] [-cldr]<\/tt>\n+ *        <tt>java --add-exports java.base\/sun.util.resources=ALL-UNNAMED LocaleDataTest.java [-w] [{ -s | <filename> }]<\/tt>\n@@ -133,1 +133,1 @@\n- *    neither, the program reads its input from a file called LocaleData in the same\n+ *    neither, the program reads its input from a file called LocaleData.cldr in the same\n@@ -139,3 +139,0 @@\n- *    -cldr option specifies to test CLDR locale data. The default data file name for this\n- *    option is \"LocaleData.cldr\".\n- *\n@@ -181,4 +178,3 @@\n-    static final String TEXT_RESOURCES_PACKAGE =\"sun.text.resources\";\n-    static final String UTIL_RESOURCES_PACKAGE =\"sun.util.resources\";\n-    static final String DEFAULT_DATAFILE =\"LocaleData\";\n-    static String cldrSuffix = \"\";\n+    static final String TEXT_RESOURCES_PACKAGE = \"sun.text.resources.cldr\";\n+    static final String UTIL_RESOURCES_PACKAGE = \"sun.util.resources.cldr\";\n+    static final String DEFAULT_DATAFILE = \"LocaleData.cldr\";\n@@ -205,4 +201,0 @@\n-            else if (args[i].equals(\"-cldr\")) {\n-                cldrSuffix = \".cldr\";\n-            }\n-\n@@ -217,1 +209,1 @@\n-            File localeData = new File(System.getProperty(\"test.src\", \".\"), DEFAULT_DATAFILE + cldrSuffix);\n+            File localeData = new File(System.getProperty(\"test.src\", \".\"), DEFAULT_DATAFILE);\n@@ -318,1 +310,1 @@\n-        \/\/ TimeZone name may have \"\/\" in it, for example \"Asia\/Taipei\", so use \"Asia\\\/Taipei in LocaleData.\n+        \/\/ TimeZone name may have \"\/\" in it, for example \"Asia\/Taipei\", so use \"Asia\\\/Taipei in LocaleData.cldr.\n@@ -340,1 +332,1 @@\n-                fullName = UTIL_RESOURCES_PACKAGE + cldrSuffix + \".\" + rbName;\n+                fullName = UTIL_RESOURCES_PACKAGE + \".\" + rbName;\n@@ -342,1 +334,1 @@\n-                fullName = TEXT_RESOURCES_PACKAGE + cldrSuffix + \".\" + rbName;\n+                fullName = TEXT_RESOURCES_PACKAGE + \".\" + rbName;\n","filename":"test\/jdk\/sun\/text\/resources\/LocaleDataTest.java","additions":12,"deletions":20,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -0,0 +1,196 @@\n+#!\/bin\/bash\n+\n+# Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+\n+#\n+# Filters output produced by running jpackage with \"jpackage.test.stash-root=<PATH>\" property.\n+#\n+\n+set -e\n+set -o pipefail\n+\n+\n+declare -a stash_dirs\n+if [ $# -eq 0 ]; then\n+  stash_dirs=(${0%\/*})\n+else\n+  stash_dirs=($@)\n+fi\n+\n+\n+sed_inplace_option=-i\n+sed_version_string=$(sed --version 2>&1 | head -1 || true)\n+if [ \"${sed_version_string#sed (GNU sed)}\" != \"$sed_version_string\" ]; then\n+  # GNU sed, the default\n+  :\n+elif [ \"${sed_version_string#sed: illegal option}\" != \"$sed_version_string\" ]; then\n+  # Macos sed\n+  sed_inplace_option=\"-i ''\"\n+else\n+  echo 'WARNING: Unknown sed variant, assume it is GNU compatible'\n+fi\n+\n+\n+winActions='\n+'\n+winMsiActions='\n+  winMsiRmDotPackage\n+  winMsiFilterAppImageListing\n+  winMsiFilterUiWxf\n+  winMsiFilterBundleWxf\n+'\n+winAllActions=\"${winActions} ${winMsiActions}\"\n+\n+macActions='\n+  macFormatInfoPlist\n+  macFormatEntitlements\n+'\n+macPkgActions='\n+  macPkgFormatCplPlist\n+'\n+macDmgActions='\n+  macDmgFilterScpt\n+'\n+macAllActions=\"${macActions} ${macDmgActions} ${macPkgActions}\"\n+\n+linuxActions=\n+linuxRpmActions=\n+linuxDebActions=\n+linuxAllActions=\"${linuxActions} ${linuxRpmActions} ${linuxDebActions}\"\n+\n+actions='\n+  rmPostImageScript\n+  sortAppImageListing\n+'\n+allActions=\"${actions} ${winAllActions} ${macAllActions} ${linuxAllActions}\"\n+\n+\n+rmPostImageScript() {\n+  # Remove post-image scripts\n+  find \"$stash_dir\" '(' -name '*-post-image.sh' -o -name '*-post-image.wsf' ')' -type f -exec rm -f {} \\;\n+}\n+\n+sortAppImageListing() {\n+  # Sort app image listings\n+  find \"$stash_dir\" -name 'app-image-listing.txt' -type f -exec sort -o {} {} \\;\n+}\n+\n+\n+#\n+# MAC:\n+#\n+\n+macFormatInfoPlist() {\n+  # Info.plist\n+  # - Format\n+  find \"$stash_dir\" -name 'Info.plist' -type f -exec xmllint --output '{}' --format '{}' \\;\n+}\n+\n+macFormatEntitlements() {\n+  # *.entitlements\n+  # - Format\n+  find \"$stash_dir\" -name '*.entitlements' -type f -exec xmllint --output '{}' --format '{}' \\;\n+}\n+\n+#\n+# DMG:\n+#\n+\n+macDmgFilterScpt() {\n+  # *.scpt\n+  #  - Trim random absolute temp path\n+  #  - Replace \"\/dmg-workdir\/\" (new) with \"\/images\/\" (old)\n+  find \"$stash_dir\" -name '*.scpt' -type f | xargs -I {} sed $sed_inplace_option \\\n+      -e 's|\"\/.*\/jdk.jpackage[0-9]\\{1,\\}\/|\"\/jdk.jpackage\/|' \\\n+      -e 's|\"file:\/\/\/.*\/jdk.jpackage[0-9]\\{1,\\}\/|\"file:\/\/\/jdk.jpackage\/|' \\\n+      -e 's|\/dmg-workdir\/|\/images\/|' \\\n+      '{}'\n+}\n+\n+#\n+# PKG:\n+#\n+\n+macPkgFormatCplPlist() {\n+  # cpl.plist:\n+  # - Format and strip <!DOCTYPE ...> (old)\n+  find \"$stash_dir\" -name 'cpl.plist' -type f -exec xmllint --output '{}' --dropdtd --format '{}' \\;\n+}\n+\n+\n+#\n+# WIN:\n+#\n+\n+#\n+# MSI:\n+#\n+\n+winMsiRmDotPackage() {\n+  # .package\n+  # - Strip it. Old jpackage created this file in the app image.\n+  #   New jpackage creates it in the \"config\" directory.\n+  #   Value is verified in tests, can ignore it here.\n+  find \"$stash_dir\" -name '.package' -type f -exec rm -f {} \\;\n+}\n+\n+winMsiFilterAppImageListing() {\n+  # app-image-listing.txt:\n+  # - Remove \"app\\.jpackage.xml\" and \"app\\.package\" entries. The new jpackage doesn't create them in the app image\n+  find \"$stash_dir\" -path '*msi\/*\/app-image-listing.txt' -type f | xargs -I {} sed $sed_inplace_option \\\n+      -e '\/^app\\\\\\.package[\\r]\\{0,\\}$\/d' \\\n+      -e '\/^app\\\\\\.jpackage\\.xml[\\r]\\{0,\\}$\/d' \\\n+      '{}'\n+}\n+\n+winMsiFilterUiWxf() {\n+  # ui.wxf:\n+  # - Order of namespaces is undefined, strip them for simplicity\n+  find \"$stash_dir\" -name 'ui.wxf' -type f | xargs -I {} sed $sed_inplace_option \\\n+      -e 's|^<Wix[^>]*>|<Wix>|' \\\n+      '{}'\n+}\n+\n+winMsiFilterBundleWxf() {\n+  # bundle.wxf:\n+  # - Order of namespaces is undefined, strip them for simplicity (same as with ui.wxf)\n+  # - Trim paths down to file names in \"Source\" attributes.\n+  #   They all are different because the new jpackage doesn't copy app images.\n+  # - Order of files and directories is undefined, sort xml.\n+  #   It turns the file into garbage, but all that matters is that the\n+  #   old and the new jpackage variants should produce the same \"garbage\"\n+  find \"$stash_dir\" -name 'bundle.wxf' -type f | xargs -I {} sed $sed_inplace_option \\\n+      -e 's|^<Wix[^>]*>|<Wix>|' \\\n+      -e 's|Source=\".*\\\\\\([^\\\\]\\{1,\\}\\)\"|Source=\"\\1\"|' \\\n+      -e 's|Source=\"\\\\jdk.jpackage\\\\images\\\\win-msi.image\\\\.*\\\\app\\\\\\.package\"|Source=\"\\\\jdk.jpackage\\\\config\\\\\\.package\"|' \\\n+      '{}'\n+  find \"$stash_dir\" -name 'bundle.wxf' -type f -exec sort -o {} {} \\;\n+}\n+\n+\n+for stash_dir in \"${stash_dirs[@]}\"; do\n+  printf \"In %s:\\n\" \"$stash_dir\"\n+  for a in ${allActions}; do\n+    echo \"  $a...\"\n+    $a\n+  done\n+done\n","filename":"test\/jdk\/tools\/jpackage\/clean_stashed_files.sh","additions":196,"deletions":0,"binary":false,"changes":196,"status":"added"},{"patch":"@@ -396,1 +396,7 @@\n-            }).collect(toMap(tokens -> tokens[0], tokens -> tokens[1], (oldValue, newValue) -> {\n+            }).collect(toMap(tokens -> tokens[0], tokens -> {\n+                if (tokens.length == 1) {\n+                    return \"\";\n+                } else {\n+                    return tokens[1];\n+                }\n+            }, (oldValue, newValue) -> {\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/AdditionalLauncher.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,392 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.test;\n+\n+import static java.util.stream.Collectors.joining;\n+import static jdk.jpackage.internal.util.function.ThrowingConsumer.toConsumer;\n+import static jdk.jpackage.test.ApplicationLayout.linuxUsrTreePackageImage;\n+import static jdk.jpackage.test.ApplicationLayout.platformAppImage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.function.Consumer;\n+import java.util.stream.Stream;\n+import jdk.internal.util.OperatingSystem;\n+import jdk.jpackage.test.JPackageUserScript.WinGlobals;\n+\n+final class ConfigFilesStasher {\n+\n+    private enum RootDirExpr {\n+        CONFIG_DIR(\"fs.GetFolder(fs.GetParentFolderName(WScript.ScriptFullName))\", \"${0%\/*}\"),\n+        IMAGE_DIR(\"fs.GetFolder(shell.CurrentDirectory)\", \"${PWD}\");\n+\n+        private RootDirExpr(String jsExpr, String shellExpr) {\n+            this.expr = TKit.isWindows() ? jsExpr : shellExpr;\n+        }\n+\n+        String expr() {\n+            return expr;\n+        }\n+\n+        SrcPath srcPath(WildcardPath path) {\n+            return new SrcPath(this, path);\n+        }\n+\n+        SrcPath srcPath(Path path) {\n+            return srcPath(WildcardPath.create(path));\n+        }\n+\n+        private final String expr;\n+    }\n+\n+    private static Path prepareStashDir(JPackageCommand cmd, Path stashRoot) throws IOException {\n+        final var pwd = Path.of(\"\").toAbsolutePath();\n+        final var absTestWorkDir = TKit.workDir().toAbsolutePath();\n+        final var relativeTestWorkDir = pwd.relativize(absTestWorkDir).normalize();\n+        if (relativeTestWorkDir.getNameCount() >= absTestWorkDir.getNameCount()) {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        final var stashTestRoot = stashRoot.resolve(relativeTestWorkDir);\n+\n+        if (!absTestWorkDir.equals(currentTestWorkDir)) {\n+            currentTestWorkDir = absTestWorkDir;\n+            TKit.deleteDirectoryContentsRecursive(stashTestRoot);\n+        }\n+\n+        final var stashTestBasedir = stashTestRoot.resolve(stashDirBasedir(cmd));\n+        Files.createDirectories(stashTestBasedir);\n+\n+        final var stashDir = TKit.createUniquePath(stashTestBasedir.resolve(\"item\"));\n+\n+        Files.createDirectories(stashDir);\n+\n+        return stashDir;\n+    }\n+\n+    private static Path stashDirBasedir(JPackageCommand cmd) {\n+        if (cmd.isImagePackageType()) {\n+            return Path.of(\"app-image\", OperatingSystem.current().name().toLowerCase());\n+        } else {\n+            return Path.of(cmd.packageType().getType());\n+        }\n+    }\n+\n+    private static void stash(JPackageCommand cmd, Path stashRoot) throws IOException {\n+        final var script = createStashScript(cmd,  stashRoot);\n+        if (!script.isEmpty()) {\n+            if (cmd.isImagePackageType()) {\n+                final var stashScript = TKit.createTempFile(\"stash-script\" + JPackageUserScript.scriptFilenameExtension());\n+                JPackageUserScript.create(stashScript, script);\n+                var pwd = cmd.outputBundle();\n+                if (TKit.isWindows()) {\n+                    pwd = WindowsHelper.toShortPath(pwd.toAbsolutePath()).orElse(pwd);\n+                }\n+                Executor.of(shell(), stashScript.toAbsolutePath().toString()).setDirectory(pwd).dumpOutput().execute();\n+            } else {\n+                JPackageUserScript.POST_IMAGE.create(cmd, script);\n+            }\n+        }\n+    }\n+\n+    private static List<String> createStashScript(JPackageCommand cmd, Path stashRoot) throws IOException {\n+        if ((cmd.packageType() == PackageType.WIN_EXE)) {\n+            \/\/ Skip for exe, msi is sufficient.\n+            return List.of();\n+        }\n+\n+        if (!cmd.isImagePackageType() && Files.exists(setupDirectory(cmd, \"--resource-dir\").resolve(JPackageUserScript.POST_IMAGE.scriptName(cmd)))) {\n+            \/\/ The command already has a \"post-image\" script configured, don't disturb it.\n+            return List.of();\n+        }\n+\n+        final var stashDir = prepareStashDir(cmd, stashRoot);\n+\n+        final List<String> script = new ArrayList<>();\n+        if (TKit.isWindows()) {\n+            List.of(WinGlobals.JS_LIST_DIR_RECURSIVE, WinGlobals.JS_SHELL, WinGlobals.JS_FS).forEach(v -> {\n+                v.appendTo(script::addAll);\n+            });\n+        } else {\n+            script.addAll(List.of(\"set -e\", \"set -o pipefail\"));\n+        }\n+\n+        script.addAll(listAppImage(stashDir.resolve(\"app-image-listing.txt\")));\n+\n+        if (!cmd.isImagePackageType()) {\n+            script.addAll(copyDirExpr(RootDirExpr.CONFIG_DIR, Path.of(\"\"), stashDir.resolve(\"config\")));\n+        }\n+\n+        if (cmd.packageType() == PackageType.LINUX_DEB) {\n+            script.addAll(copyDirExpr(RootDirExpr.IMAGE_DIR, Path.of(\"DEBIAN\"), stashDir.resolve(\"DEBIAN\")));\n+        }\n+\n+        if (cmd.packageType() == PackageType.LINUX_RPM) {\n+            script.addAll(copyDirExpr(RootDirExpr.CONFIG_DIR, Path.of(\"..\/SPECS\"), stashDir.resolve(\"SPECS\")));\n+        }\n+\n+        if (cmd.isRuntime()) {\n+            \/\/ Runtume packages don't have \"Info.plist\", though they should. See JDK-8351073\n+            return script;\n+        }\n+\n+        final var appLayout = appImageAppLayout(cmd);\n+\n+        script.addAll(copyFileExpr(RootDirExpr.IMAGE_DIR, WildcardPath.create(appLayout.appDirectory(), \"*.cfg\"), stashDir.resolve(\"cfg-files\")));\n+\n+        if (TKit.isLinux()) {\n+            for (final var wildcard : List.of(\"*.desktop\", \"*-MimeInfo.xml\")) {\n+                script.addAll(copyFileExpr(RootDirExpr.IMAGE_DIR, WildcardPath.create(appLayout.desktopIntegrationDirectory(), wildcard), stashDir.resolve(\"desktop\")));\n+            }\n+            if (isWithServices(cmd)) {\n+                script.addAll(copyDirExpr(RootDirExpr.IMAGE_DIR, Path.of(\"lib\/systemd\/system\"), stashDir.resolve(\"systemd\")));\n+            }\n+        }\n+\n+        if (cmd.packageType() == PackageType.MAC_PKG) {\n+            if (isWithServices(cmd)) {\n+                script.addAll(copyDirExpr(RootDirExpr.CONFIG_DIR, Path.of(\"..\/services\"), stashDir.resolve(\"services\")));\n+                script.addAll(copyDirExpr(RootDirExpr.CONFIG_DIR, Path.of(\"..\/support\"), stashDir.resolve(\"support\")));\n+            }\n+        }\n+\n+        if (TKit.isOSX()) {\n+            script.addAll(copyFileExpr(RootDirExpr.IMAGE_DIR, WildcardPath.create(appLayout.contentDirectory().resolve(\"Info.plist\")), stashDir.resolve(\"Info.plist\")));\n+        }\n+\n+        return script;\n+    }\n+\n+    private static String shell() {\n+        if (OperatingSystem.isWindows()) {\n+            return \"cscript\";\n+        }\n+        return Optional.ofNullable(System.getenv(\"SHELL\")).orElseGet(() -> \"sh\");\n+    }\n+\n+    private static ApplicationLayout appImageAppLayout(JPackageCommand cmd) {\n+        if (cmd.isRuntime()) {\n+            throw new UnsupportedOperationException();\n+        }\n+\n+        if (cmd.isImagePackageType()) {\n+            return platformAppImage();\n+        }\n+\n+        if (PackageType.LINUX.contains(cmd.packageType())) {\n+            final var installDir = cmd.getArgumentValue(\"--install-dir\");\n+            if (Optional.ofNullable(installDir).map(Set.of(\"\/usr\", \"\/usr\/local\")::contains).orElse(false)) {\n+                return linuxUsrTreePackageImage(Path.of(\"\/\").relativize(Path.of(installDir)), LinuxHelper.getPackageName(cmd));\n+            } else {\n+                return platformAppImage().resolveAt(Path.of(\"\/\").relativize(cmd.appInstallationDirectory()));\n+            }\n+        } else {\n+            return platformAppImage();\n+        }\n+    }\n+\n+    private static boolean isWithServices(JPackageCommand cmd) {\n+        boolean[] withServices = new boolean[1];\n+        withServices[0] = cmd.hasArgument(\"--launcher-as-service\");\n+        if (!withServices[0]) {\n+            AdditionalLauncher.forEachAdditionalLauncher(cmd, (launcherName, propertyFilePath) -> {\n+                try {\n+                    final var launcherAsService = new AdditionalLauncher.PropertyFile(propertyFilePath)\n+                            .getPropertyBooleanValue(\"launcher-as-service\").orElse(false);\n+                    if (launcherAsService) {\n+                        withServices[0] = true;\n+                    }\n+                } catch (IOException ex) {\n+                    throw new UncheckedIOException(ex);\n+                }\n+            });\n+        }\n+        return withServices[0];\n+    }\n+\n+    private static List<String> listAppImage(Path to) {\n+        final var fromPath = RootDirExpr.IMAGE_DIR.srcPath(Path.of(\"\"));\n+        if (TKit.isWindows()) {\n+            final String toStr = to.toString().replace('\\\\', '\/');\n+            return List.of(\n+                    String.format(\"WScript.Echo('Save listing of %s into [%s]')\",\n+                            fromPath.label(), toStr),\n+                    String.format(\"var o = fs.CreateTextFile('%s', true)\", toStr),\n+                    String.format(\"listDir(fs.GetFolder(%s), fs.GetFolder(%s))\", fromPath.expr(), fromPath.expr()),\n+                    \"o.Close()\"\n+            );\n+        } else {\n+            return List.of(\n+                    String.format(\"printf 'Save listing of %%s into [%%s]\\\\n' '%s' '%s'\",\n+                            fromPath.label(), to),\n+                    String.format(\"(cd %s; find . > '%s')\", fromPath.expr(), to)\n+            );\n+        }\n+    }\n+\n+    private static List<String> copyDirExpr(RootDirExpr root, Path from, Path to) {\n+        return copyExpr(root, WildcardPath.create(from), to, new Expr(\"fs.CopyFolder(%s, '%s')\", \"cp -R %s '%s'\"));\n+    }\n+\n+    private static List<String> copyFileExpr(RootDirExpr root, WildcardPath from, Path to) {\n+        return copyExpr(root, from, to, new Expr(\"fs.CopyFile(%s, '%s')\", \"cp %s '%s'\"));\n+    }\n+\n+    private static List<String> copyExpr(RootDirExpr root, WildcardPath from, Path to, Expr copyFormatExpr) {\n+        final String format = new Expr(\n+                \"WScript.Echo('Copy %s into [%s]')\\n%s\",\n+                \"printf 'Copy %%s into [%%s]\\\\n' '%s' '%s'\\n%s\"\n+        ).value();\n+\n+        final var toStr = to.toString().replace('\\\\', '\/');\n+        final var fromPath = root.srcPath(from);\n+\n+        final String copyExpr;\n+        if (from.wildcardName().isEmpty()) {\n+            copyExpr = String.format(copyFormatExpr.value(), fromPath.expr(), toStr);\n+        } else {\n+            \/\/ To copy wildcard names, the destination directory must exist.\n+            final var mkdirExpr = (new Expr(\n+                    String.format(\"if (!fs.FolderExists('%s')) fs.CreateFolder('%s')\", toStr, toStr),\n+                    String.format(\"mkdir -p '%s'\", toStr)\n+            ).value());\n+\n+            final var copyExprBody = Stream.of(\n+                    mkdirExpr,\n+                    String.format(copyFormatExpr.value(), fromPath.expr(), toStr + '\/')\n+            ).map(str -> {\n+                return \"  \" + str;\n+            }).collect(joining(\"\\n\"));\n+\n+            \/\/ Copying will fail for a wildcard expression without matches, make it conditional.\n+            copyExpr = new Expr(\n+                    String.format(\"if (fs.FolderExists(%s) || fs.FileExists(%s)) {\\n%s\\n}\", fromPath.expr(), fromPath.expr(), copyExprBody),\n+                    String.format(\"v=$(printf '%%s' %s)\\nif [ \\\"${v%%\/'%s'}\\\" = \\\"$v\\\" ]; then\\n%s\\nfi\", fromPath.expr(), from.wildcardName(), copyExprBody)\n+            ).value();\n+        }\n+\n+        return List.of(String.format(format, fromPath.label(), toStr, copyExpr));\n+    }\n+\n+    private record WildcardPath(Path basedir, String wildcardName) {\n+        WildcardPath {\n+            Objects.requireNonNull(basedir);\n+            Objects.requireNonNull(wildcardName);\n+        }\n+\n+        @Override\n+        public String toString() {\n+            final var sb = new StringBuilder();\n+            sb.append(basedir);\n+            if (!wildcardName.isEmpty()) {\n+                sb.append(File.separator);\n+                sb.append(wildcardName);\n+            }\n+            return sb.toString();\n+        }\n+\n+        static WildcardPath create(Path path) {\n+            return new WildcardPath(path, \"\");\n+        }\n+\n+        static WildcardPath create(Path basedir, String wildcardName) {\n+            return new WildcardPath(basedir, wildcardName);\n+        }\n+    }\n+\n+    private record Expr(String jsValue, String shellValue) {\n+        Expr {\n+            Objects.requireNonNull(jsValue);\n+            Objects.requireNonNull(shellValue);\n+        }\n+\n+        String value() {\n+            if (TKit.isWindows()) {\n+                return jsValue;\n+            } else {\n+                return shellValue;\n+            }\n+        }\n+    }\n+\n+    private record SrcPath(RootDirExpr root, WildcardPath path) {\n+        SrcPath {\n+            Objects.requireNonNull(root);\n+            if (path.basedir().isAbsolute()) {\n+                throw new IllegalArgumentException();\n+            }\n+        }\n+\n+        String label() {\n+            if (isPathEmpty()) {\n+                return String.format(\"${%s}\", root.name());\n+            } else {\n+                return String.format(\"${%s}\/%s\", root.name(), path.toString().replace('\\\\', '\/'));\n+            }\n+        }\n+\n+        String expr() {\n+            if (isPathEmpty()) {\n+                return new Expr(root.expr(), String.format(\"\\\"%s\\\"\", root.expr())).value();\n+            } else {\n+                final String shellExpr;\n+                if (path.wildcardName().isEmpty()) {\n+                    shellExpr = String.format(\"\\\"%s\/%s\\\"\", root.expr(), path);\n+                } else {\n+                    shellExpr = String.format(\"\\\"%s\/%s\\\"\/%s\", root.expr(), path.basedir(), path.wildcardName());\n+                }\n+                return new Expr(String.format(\"%s + '\/%s'\", root.expr(), path.toString().replace('\\\\', '\/')), shellExpr).value();\n+            }\n+        }\n+\n+        private boolean isPathEmpty() {\n+            return path.toString().isEmpty();\n+        }\n+    }\n+\n+    private static Path setupDirectory(JPackageCommand cmd, String argName) {\n+        if (!cmd.hasArgument(argName)) {\n+            \/\/ Use absolute path as jpackage can be executed in another directory\n+            cmd.setArgumentValue(argName, TKit.createTempDirectory(\"stash-script-resource-dir\").toAbsolutePath());\n+        }\n+\n+        return Path.of(cmd.getArgumentValue(argName));\n+    }\n+\n+    private static Path currentTestWorkDir;\n+\n+    static final Consumer<JPackageCommand> INSTANCE = Optional.ofNullable(TKit.getConfigProperty(\"stash-root\"))\n+            .map(Path::of).map(Path::toAbsolutePath).<Consumer<JPackageCommand>>map(stashRoot -> {\n+                return toConsumer(cmd -> {\n+                    stash(cmd, stashRoot);\n+                });\n+            }).orElse(cmd -> {});\n+}\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/ConfigFilesStasher.java","additions":392,"deletions":0,"binary":false,"changes":392,"status":"added"},{"patch":"@@ -854,0 +854,4 @@\n+        if (expectedExitCode == 0 && !isImagePackageType()) {\n+            ConfigFilesStasher.INSTANCE.accept(this);\n+        }\n+\n@@ -862,0 +866,4 @@\n+        if (expectedExitCode == 0 && isImagePackageType()) {\n+            ConfigFilesStasher.INSTANCE.accept(this);\n+        }\n+\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JPackageCommand.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Collection;\n@@ -37,0 +38,1 @@\n+import java.util.function.Consumer;\n@@ -47,0 +49,4 @@\n+        this.suffix = suffix + scriptFilenameExtension();\n+    }\n+\n+    static String scriptFilenameExtension() {\n@@ -48,1 +54,1 @@\n-            this.suffix = suffix + \".wsf\";\n+            return \".wsf\";\n@@ -50,1 +56,1 @@\n-            this.suffix = suffix + \".sh\";\n+            return \".sh\";\n@@ -56,1 +62,11 @@\n-        JS_FS(\"var fs = new ActiveXObject('Scripting.FileSystemObject')\");\n+        JS_FS(\"var fs = new ActiveXObject('Scripting.FileSystemObject')\"),\n+        JS_LIST_DIR_RECURSIVE(List.of(\n+                \"function listDir (dir, root) {\",\n+                \"    o.WriteLine((root === undefined) ? dir.Path : dir.Path.substring(1 + root.Path.length))\",\n+                \"    for(var e = new Enumerator(dir.Files); !e.atEnd(); e.moveNext()) {\",\n+                \"        o.WriteLine((root === undefined) ? e.item().Path : e.item().Path.substring(1 + root.Path.length))\",\n+                \"    }\",\n+                \"    for(var e = new Enumerator(dir.SubFolders); !e.atEnd(); e.moveNext()) {\",\n+                \"        listDir(e.item(), root)\",\n+                \"    }\",\n+                \"}\"));\n@@ -59,0 +75,4 @@\n+            this(List.of(expr));\n+        }\n+\n+        WinGlobals(List<String> expr) {\n@@ -62,1 +82,1 @@\n-        public String expr() {\n+        public List<String> expr() {\n@@ -66,1 +86,5 @@\n-        private final String expr;\n+        public void appendTo(Consumer<Collection<String>> acc) {\n+            acc.accept(expr);\n+        }\n+\n+        private final List<String> expr;\n@@ -196,2 +220,2 @@\n-                script.add(WinGlobals.JS_SHELL.expr());\n-                script.add(WinGlobals.JS_FS.expr());\n+                script.addAll(WinGlobals.JS_SHELL.expr());\n+                script.addAll(WinGlobals.JS_FS.expr());\n@@ -243,1 +267,1 @@\n-    private void create(Path scriptFilePath, List<String> script) {\n+    static void create(Path scriptFilePath, List<String> script) {\n@@ -258,1 +282,1 @@\n-            TKit.traceFileContents(scriptFilePath, String.format(\"[%s] script\", name()));\n+            TKit.traceFileContents(scriptFilePath, String.format(\"[%s] script\", scriptFilePath.getFileName()));\n@@ -264,0 +288,4 @@\n+    String scriptName(JPackageCommand cmd) {\n+        return String.format(\"%s-%s\", cmd.name(), suffix);\n+    }\n+\n@@ -265,1 +293,1 @@\n-        return Path.of(cmd.getArgumentValue(\"--resource-dir\"), String.format(\"%s-%s\", cmd.name(), suffix));\n+        return Path.of(cmd.getArgumentValue(\"--resource-dir\"), scriptName(cmd));\n@@ -298,0 +326,4 @@\n+                List.of(WinGlobals.JS_LIST_DIR_RECURSIVE, WinGlobals.JS_SHELL, WinGlobals.JS_FS).forEach(v -> {\n+                    v.appendTo(script::addAll);\n+                });\n+\n@@ -299,11 +331,0 @@\n-                        \"function listDir (dir) {\",\n-                        \"    o.WriteLine(dir.Path)\",\n-                        \"    for(var e = new Enumerator(dir.Files); !e.atEnd(); e.moveNext()) {\",\n-                        \"        o.WriteLine(e.item().Path)\",\n-                        \"    }\",\n-                        \"    for(var e = new Enumerator(dir.SubFolders); !e.atEnd(); e.moveNext()) {\",\n-                        \"        listDir(e.item())\",\n-                        \"    }\",\n-                        \"}\",\n-                        WinGlobals.JS_FS.expr(),\n-                        WinGlobals.JS_SHELL.expr(),\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JPackageUserScript.java","additions":42,"deletions":21,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -296,2 +296,2 @@\n-    private static Path createUniquePath(String defaultName) {\n-        return createUniquePath(defaultName, workDir());\n+    static Path createUniquePath(Path pathTemplate) {\n+        return createUniquePath(pathTemplate.getFileName().toString(), pathTemplate.getParent());\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TKit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5,0 +5,1 @@\n+        jdk.jpackage\/jdk.jpackage.internal.pipeline:+open \\\n@@ -6,3 +7,1 @@\n-        jdk.jpackage\/jdk.jpackage.internal.util.function:+open \\\n-        java.base\/jdk.internal.util \\\n-        jdk.jlink\/jdk.tools.jlink.internal\n+        jdk.jpackage\/jdk.jpackage.internal.util.function:+open\n","filename":"test\/jdk\/tools\/jpackage\/junit\/TEST.properties","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+import static jdk.jpackage.internal.util.function.ThrowingSupplier.toSupplier;\n+import static org.junit.jupiter.api.Assertions.assertThrowsExactly;\n+\n@@ -31,0 +34,1 @@\n+import java.util.HashMap;\n@@ -33,1 +37,4 @@\n-import java.util.LinkedHashMap;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n@@ -35,4 +42,8 @@\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertThrowsExactly;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n+import jdk.jpackage.internal.AppImageFile.LauncherInfo;\n+import jdk.jpackage.internal.model.Application;\n+import jdk.jpackage.internal.model.ApplicationLaunchers;\n+import jdk.jpackage.internal.model.ApplicationLayout;\n+import jdk.jpackage.internal.model.ConfigException;\n+import jdk.jpackage.internal.model.Launcher;\n+import jdk.jpackage.internal.model.LauncherStartupInfo;\n+import org.junit.jupiter.api.Assertions;\n@@ -42,0 +53,1 @@\n+import org.junit.jupiter.params.provider.Arguments;\n@@ -47,0 +59,84 @@\n+    static AppImageBuilder build() {\n+        return new AppImageBuilder();\n+    }\n+\n+    static class AppImageBuilder {\n+\n+        AppImageBuilder version(String v) {\n+            version = Objects.requireNonNull(v);\n+            return this;\n+        }\n+\n+        AppImageBuilder launcherName(String v) {\n+            launcherName = Objects.requireNonNull(v);\n+            return this;\n+        }\n+\n+        AppImageBuilder mainClass(String v) {\n+            mainClass = Objects.requireNonNull(v);\n+            return this;\n+        }\n+\n+        AppImageBuilder addExtra(Map<String, String> v) {\n+            extra.putAll(v);\n+            return this;\n+        }\n+\n+        AppImageBuilder addExtra(String key, String value) {\n+            extra.putAll(Map.of(key, value));\n+            return this;\n+        }\n+\n+        AppImageBuilder addlauncher(String name) {\n+            return addlauncher(name, false);\n+        }\n+\n+        AppImageBuilder addlauncher(String name, boolean isService) {\n+            return addlauncher(name, isService, Map.of());\n+        }\n+\n+        AppImageBuilder addlauncher(String name, boolean isService, Map<String, String> extra) {\n+            Objects.requireNonNull(name);\n+            Objects.requireNonNull(extra);\n+            addLauncherInfos.add(new LauncherInfo(name, isService, extra));\n+            return this;\n+        }\n+\n+        AppImageBuilder addlauncher(String name, Map<String, String> extra) {\n+            return addlauncher(name, false, extra);\n+        }\n+\n+        AppImageFile create() {\n+            final var additionalLaunchers = addLauncherInfos.stream().map(li -> {\n+                return (Launcher)new Launcher.Stub(li.name(), Optional.empty(),\n+                        List.of(), li.service(), null, Optional.empty(), null, li.extra());\n+            }).toList();\n+\n+            final var startupInfo = new LauncherStartupInfo.Stub(mainClass, List.of(), List.of(), List.of());\n+            final var mainLauncher = new Launcher.Stub(launcherName, Optional.of(startupInfo),\n+                    List.of(), false, null, Optional.empty(), null, Map.of());\n+\n+            final var app = new Application.Stub(null, null, version, null, null,\n+                    Optional.empty(), List.of(), null, Optional.empty(),\n+                    new ApplicationLaunchers(mainLauncher, additionalLaunchers).asList(), extra);\n+\n+            return new AppImageFile(app);\n+        }\n+\n+        void createInDir(Path dir) {\n+            final var file = create();\n+            final var copy = toSupplier(() -> {\n+                file.save(DUMMY_LAYOUT.resolveAt(dir));\n+                return AppImageFile.load(dir, DUMMY_LAYOUT);\n+            }).get();\n+\n+            assertEquals(file, copy);\n+        }\n+\n+        private String version = \"1.0\";\n+        private String launcherName = \"Foo\";\n+        private String mainClass = \"Main\";\n+        private Map<String, String> extra = new HashMap<>();\n+        private List<LauncherInfo> addLauncherInfos = new ArrayList<>();\n+    }\n+\n@@ -48,9 +144,12 @@\n-    public void testIdentity() throws IOException {\n-        Map<String, Object> params = new LinkedHashMap<>();\n-        params.put(Arguments.CLIOptions.NAME.getId(), \"Foo\");\n-        params.put(Arguments.CLIOptions.APPCLASS.getId(), \"TestClass\");\n-        params.put(Arguments.CLIOptions.VERSION.getId(), \"2.3\");\n-        params.put(Arguments.CLIOptions.DESCRIPTION.getId(), \"Duck is the King\");\n-        AppImageFile aif = create(params);\n-\n-        assertEquals(\"Foo\", aif.getLauncherName());\n+    public void testSimple() {\n+        build().createInDir(tempFolder);\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testExtra(Map<String, String> extra) {\n+        build().addExtra(extra).createInDir(tempFolder);\n+    }\n+\n+    private static Stream<Map<String, String>> testExtra() {\n+        return Stream.of(Map.of(\"a\", \"b\"), Map.of(\"foo\", \"\"));\n@@ -60,16 +159,5 @@\n-    public void testInvalidCommandLine() throws IOException {\n-        \/\/ Just make sure AppImageFile will tolerate jpackage params that would\n-        \/\/ never create app image at both load\/save phases.\n-        \/\/ People would edit this file just because they can.\n-        \/\/ We should be ready to handle curious minds.\n-        Map<String, Object> params = new LinkedHashMap<>();\n-        params.put(\"invalidParamName\", \"randomStringValue\");\n-        params.put(Arguments.CLIOptions.APPCLASS.getId(), \"TestClass\");\n-        params.put(Arguments.CLIOptions.MAIN_JAR.getId(), \"test.jar\");\n-        create(params);\n-\n-        params = new LinkedHashMap<>();\n-        params.put(Arguments.CLIOptions.NAME.getId(), \"foo\");\n-        params.put(Arguments.CLIOptions.APPCLASS.getId(), \"TestClass\");\n-        params.put(Arguments.CLIOptions.VERSION.getId(), \"1.0\");\n-        create(params);\n+    public void testAdditionalLaunchers() {\n+        build().addlauncher(\"T\")\n+                .addlauncher(\"U\", true)\n+                .addlauncher(\"F\", Map.of(\"prop\", \"one\", \"prop2\", \"two\", \"prop3\", \"\"))\n+                .createInDir(tempFolder);\n@@ -80,4 +168,4 @@\n-    public void testInavlidXml(String[] xmlData) throws IOException {\n-        Exception ex = assertThrowsExactly(RuntimeException.class, () -> createFromXml(xmlData));\n-        assertTrue(ex.getMessage().contains(\"generated by another jpackage version or malformed\"));\n-        assertTrue(ex.getMessage().endsWith(\".jpackage.xml\\\"\"));\n+    public void testInavlidXml(List<String> xmlData) throws IOException {\n+        assertThrowsExactly(ConfigException.class, () -> createFromXml(xmlData), () -> {\n+            return I18N.format(\"error.invalid-app-image\", tempFolder, \".jpackage.xml\");\n+        });\n@@ -86,22 +174,7 @@\n-    private static Stream<org.junit.jupiter.params.provider.Arguments> testInavlidXml() {\n-        return Stream.of(\n-                makeArguments((Object)new String[] {\"<foo\/>\"}),\n-                makeArguments((Object)new String[] {\"<jpackage-state\/>\"}),\n-                makeArguments((Object)new String[] {JPACKAGE_STATE_OPEN, \"<\/jpackage-state>\"}),\n-                makeArguments((Object)new String[] {\n-                        JPACKAGE_STATE_OPEN,\n-                        \"<main-launcher><\/main-launcher>\",\n-                        \"<\/jpackage-state>\"\n-                }),\n-                makeArguments((Object)new String[] {\n-                        JPACKAGE_STATE_OPEN,\n-                        \"<main-launcher>Foo<\/main-launcher>\",\n-                        \"<main-class><\/main-class>\",\n-                        \"<\/jpackage-state>\"\n-                }),\n-                makeArguments((Object)new String[] {\n-                        JPACKAGE_STATE_OPEN,\n-                        \"<launcher>A<\/launcher>\",\n-                        \"<launcher>B<\/launcher>\",\n-                        \"<\/jpackage-state>\"\n-                })\n+    private static Stream<List<String>> testInavlidXml() {\n+        return Stream.of(List.of(\"<foo\/>\"),\n+                List.of(\"<jpackage-state\/>\"),\n+                createXml(),\n+                createXml(\"<main-launcher><\/main-launcher>\"),\n+                createXml(\"<main-launcher>Foo<\/main-launcher>\", \"<main-class><\/main-class>\"),\n+                createXml(\"<add-launcher>A<\/add-launcher>\")\n@@ -113,4 +186,3 @@\n-    public void testValidXml(String expectedLauncherName, String xmlData[]) throws IOException {\n-        var file = createFromXml(xmlData);\n-        assertEquals(expectedLauncherName, file.getLauncherName());\n-        assertTrue(file.getAddLaunchers().isEmpty());\n+    public void testValidXml(AppImageFile expected, List<String> xmlData) throws IOException, ConfigException {\n+        final var actual = createFromXml(xmlData);\n+        assertEquals(expected, actual);\n@@ -119,1 +191,1 @@\n-    private static Stream<org.junit.jupiter.params.provider.Arguments> testValidXml() {\n+    private static Stream<Arguments> testValidXml() {\n@@ -121,8 +193,4 @@\n-                makeArguments(\"Foo\", List.of(\n-                        JPACKAGE_STATE_OPEN,\n-                                \"<app-version>1.0<\/app-version>\",\n-                                \"<main-launcher>Foo<\/main-launcher>\",\n-                                \"<main-class>main.Class<\/main-class>\",\n-                                \"<signed>false<\/signed>\",\n-                                \"<app-store>false<\/app-store>\",\n-                        \"<\/jpackage-state>\").toArray(String[]::new)\n+                Arguments.of(build().version(\"72\").launcherName(\"Y\").mainClass(\"main.Class\").create(), createXml(\n+                        \"<main-launcher>Y<\/main-launcher>\",\n+                        \"<app-version>72<\/app-version>\",\n+                        \"<main-class>main.Class<\/main-class>\")\n@@ -130,9 +198,14 @@\n-                makeArguments(\"Boo\", List.of(\n-                        JPACKAGE_STATE_OPEN,\n-                                \"<app-version>1.0<\/app-version>\",\n-                                \"<main-launcher>Boo<\/main-launcher>\",\n-                                \"<main-launcher>Bar<\/main-launcher>\",\n-                                \"<main-class>main.Class<\/main-class>\",\n-                                \"<signed>false<\/signed>\",\n-                                \"<app-store>false<\/app-store>\",\n-                            \"<\/jpackage-state>\").toArray(String[]::new)\n+                Arguments.of(build().addExtra(\"x\", \"property-x\").addExtra(\"signed\", \"false\")\n+                        .addExtra(\"y\", \"\").addlauncher(\"another-launcher\").addlauncher(\"service-launcher\", true)\n+                        .addlauncher(\"launcher-with-extra\", Map.of(\"a\", \"\", \"b\", \"\", \"c\", \"Q\"))\n+                        .addlauncher(\"service-launcher-with-extra\", true, Map.of(\"h\", \"F\")).create(), createXml(\n+                        \"<app-version>1.0<\/app-version>\",\n+                        \"<main-class>Main<\/main-class>\",\n+                        \"<y\/>\",\n+                        \"<x>property-x<\/x>\",\n+                        \"<signed>false<\/signed>\",\n+                        \"<add-launcher name='service-launcher' service='true'\/>\",\n+                        \"<add-launcher name='another-launcher'><\/add-launcher>\",\n+                        \"<add-launcher name='launcher-with-extra'><a><\/a><b\/><c>Q<\/c><\/add-launcher>\",\n+                        \"<add-launcher name='service-launcher-with-extra' service='true'><h>F<\/h><\/add-launcher>\",\n+                        \"<main-launcher>Foo<\/main-launcher>\")\n@@ -140,9 +213,20 @@\n-                makeArguments(\"duke\", List.of(\n-                        JPACKAGE_STATE_OPEN,\n-                                \"<app-version>1.0<\/app-version>\",\n-                                \"<main-launcher>duke<\/main-launcher>\",\n-                                \"<main-class>main.Class<\/main-class>\",\n-                                \"<signed>false<\/signed>\",\n-                                \"<app-store>false<\/app-store>\",\n-                                \"<launcher><\/launcher>\",\n-                        \"<\/jpackage-state>\").toArray(String[]::new)\n+                Arguments.of(build().addExtra(\"signed\", \"FalsE\").create(), createXml(\n+                        \"<app-version>1.2<\/app-version>\",\n+                        \"<app-version>1.0<\/app-version>\",\n+                        \"<main-class>OverwrittenMain<\/main-class>\",\n+                        \"<main-class>Main<\/main-class>\",\n+                        \"<main-launcher>Bar<\/main-launcher>\",\n+                        \"<main-launcher>Foo<\/main-launcher>\",\n+                        \"<signed>false<\/signed>\",\n+                        \"<signed>FalsE<\/signed>\")\n+                ),\n+                Arguments.of(build().addExtra(\"signed\", \"true\").addExtra(\"with-comment\", \"ab\")\n+                        .addlauncher(\"a\", Map.of(\"bar\", \"foo\")).create(), createXml(\n+                        \"<app-version>1.0<\/app-version>\",\n+                        \"<main-class>Main<\/main-class>\",\n+                        \"<main-launcher>Foo<\/main-launcher>\",\n+                        \"<signed>true<\/signed>\",\n+                        \"<with-comment>a<!-- This is a comment -->b<\/with-comment>\",\n+                        \"<add-launcher name='a'><name>foo<\/name><bar>foo<\/bar><service>true<\/service><\/add-launcher>\",\n+                        \"<other><nested>false<\/nested><\/other>\",\n+                        \"<another-other>A<child\/>B<\/another-other>\")\n@@ -153,97 +237,2 @@\n-    @Test\n-    public void testMainLauncherName() throws IOException {\n-        Map<String, Object> params = new LinkedHashMap<>();\n-        params.put(\"name\", \"Foo\");\n-        params.put(\"main-class\", \"main.Class\");\n-        params.put(\"description\", \"Duck App Description\");\n-        AppImageFile aif = create(params);\n-\n-        assertEquals(\"Foo\", aif.getLauncherName());\n-    }\n-\n-    @Test\n-    public void testMainClass() throws IOException {\n-        Map<String, Object> params = new LinkedHashMap<>();\n-        params.put(\"name\", \"Foo\");\n-        params.put(\"main-class\", \"main.Class\");\n-        params.put(\"description\", \"Duck App Description\");\n-        AppImageFile aif = create(params);\n-\n-        assertEquals(\"main.Class\", aif.getMainClass());\n-    }\n-\n-    @Test\n-    public void testMacSign() throws IOException {\n-        Map<String, Object> params = new LinkedHashMap<>();\n-        params.put(\"name\", \"Foo\");\n-        params.put(\"main-class\", \"main.Class\");\n-        params.put(\"description\", \"Duck App Description\");\n-        params.put(\"mac-sign\", Boolean.TRUE);\n-        AppImageFile aif = create(params);\n-\n-        assertTrue(aif.isSigned());\n-    }\n-\n-    @Test\n-    public void testCopyAsSigned() throws IOException {\n-        Map<String, Object> params = new LinkedHashMap<>();\n-        params.put(\"name\", \"Foo\");\n-        params.put(\"main-class\", \"main.Class\");\n-        params.put(\"description\", \"Duck App Description\");\n-        params.put(\"mac-sign\", Boolean.FALSE);\n-\n-        AppImageFile aif = create(params);\n-        assertFalse(aif.isSigned());\n-\n-        aif = aif.copyAsSigned();\n-        assertTrue(aif.isSigned());\n-    }\n-\n-    @Test\n-    public void testMacAppStore() throws IOException {\n-        Map<String, Object> params = new LinkedHashMap<>();\n-        params.put(\"name\", \"Foo\");\n-        params.put(\"main-class\", \"main.Class\");\n-        params.put(\"description\", \"Duck App Description\");\n-        params.put(\"mac-app-store\", Boolean.TRUE);\n-        AppImageFile aif = create(params);\n-\n-        assertTrue(aif.isAppStore());\n-    }\n-\n-    @Test\n-    public void testAddLaunchers() throws IOException {\n-        Map<String, Object> params = new LinkedHashMap<>();\n-        List<Map<String, Object>> launchersAsMap = new ArrayList<>();\n-\n-        Map<String, Object> addLauncher2Params = new LinkedHashMap<>();\n-        addLauncher2Params.put(\"name\", \"Launcher2Name\");\n-        launchersAsMap.add(addLauncher2Params);\n-\n-        Map<String, Object> addLauncher3Params = new LinkedHashMap<>();\n-        addLauncher3Params.put(\"name\", \"Launcher3Name\");\n-        launchersAsMap.add(addLauncher3Params);\n-\n-        params.put(\"name\", \"Duke App\");\n-        params.put(\"main-class\", \"main.Class\");\n-        params.put(\"description\", \"Duke App Description\");\n-        params.put(\"add-launcher\", launchersAsMap);\n-        AppImageFile aif = create(params);\n-\n-        List<AppImageFile.LauncherInfo> addLaunchers = aif.getAddLaunchers();\n-        assertEquals(2, addLaunchers.size());\n-        List<String> names = new ArrayList<>();\n-        names.add(addLaunchers.get(0).getName());\n-        names.add(addLaunchers.get(1).getName());\n-\n-        assertTrue(names.contains(\"Launcher2Name\"));\n-        assertTrue(names.contains(\"Launcher3Name\"));\n-    }\n-\n-    private AppImageFile create(Map<String, Object> params) throws IOException {\n-        AppImageFile.save(tempFolder, params);\n-        return AppImageFile.load(tempFolder);\n-    }\n-\n-    private AppImageFile createFromXml(String... xmlData) throws IOException {\n-        Path path = AppImageFile.getPathInAppImage(tempFolder);\n+    private AppImageFile createFromXml(List<String> xmlData) throws IOException, ConfigException {\n+        Path path = AppImageFile.getPathInAppImage(DUMMY_LAYOUT.resolveAt(tempFolder));\n@@ -255,1 +244,1 @@\n-        data.addAll(List.of(xmlData));\n+        data.addAll(xmlData);\n@@ -260,1 +249,1 @@\n-        AppImageFile image = AppImageFile.load(tempFolder);\n+        AppImageFile image = AppImageFile.load(tempFolder, DUMMY_LAYOUT);\n@@ -264,2 +253,22 @@\n-    static org.junit.jupiter.params.provider.Arguments makeArguments(Object ... args) {\n-        return org.junit.jupiter.params.provider.Arguments.of(args);\n+    private static void assertEquals(AppImageFile expected, AppImageFile actual) {\n+        assertPropertyEquals(expected, actual, AppImageFile::getAppVersion);\n+        assertPropertyEquals(expected, actual, AppImageFile::getLauncherName);\n+        assertPropertyEquals(expected, actual, AppImageFile::getMainClass);\n+        assertPropertyEquals(expected, actual, AppImageFile::getExtra);\n+        Assertions.assertEquals(additionaLaunchersAsMap(expected), additionaLaunchersAsMap(actual));\n+    }\n+\n+    private static Map<String, AppImageFile.LauncherInfo> additionaLaunchersAsMap(AppImageFile file) {\n+        return file.getAddLaunchers().stream().collect(Collectors.toMap(AppImageFile.LauncherInfo::name, x -> x));\n+    }\n+\n+    private static <T, U> void assertPropertyEquals(T expected, T actual, Function<T, U> getProperty) {\n+        Assertions.assertEquals(getProperty.apply(expected), getProperty.apply(actual));\n+    }\n+\n+    private static final List<String> createXml(String ...xml) {\n+        final List<String> content = new ArrayList<>();\n+        content.add(String.format(\"<jpackage-state platform=\\\"%s\\\" version=\\\"%s\\\">\", AppImageFile.getPlatform(), AppImageFile.getVersion()));\n+        content.addAll(List.of(xml));\n+        content.add(\"<\/jpackage-state>\");\n+        return content;\n@@ -271,4 +280,1 @@\n-    private static final String JPACKAGE_STATE_OPEN = String.format(\n-            \"<jpackage-state platform=\\\"%s\\\" version=\\\"%s\\\">\",\n-            AppImageFile.getPlatform(), AppImageFile.getVersion());\n-\n+    private static final ApplicationLayout DUMMY_LAYOUT = ApplicationLayout.build().setAll(\"\").create();\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/AppImageFileTest.java","additions":199,"deletions":193,"binary":false,"changes":392,"status":"modified"},{"patch":"@@ -1,103 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.jpackage.internal;\n-\n-import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import org.junit.jupiter.api.Test;\n-import org.junit.jupiter.api.io.TempDir;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-\n-\n-public class ApplicationLayoutTest {\n-\n-    private Path newFolder(Path folderName, String ... extraFolderNames) throws IOException {\n-        var path = tempFolder.resolve(folderName);\n-        Files.createDirectories(path);\n-        for (var extraFolderName : extraFolderNames) {\n-            path = path.resolve(extraFolderName);\n-            Files.createDirectories(path);\n-        }\n-        return path;\n-    }\n-\n-    private Path newFile(Path fileName) throws IOException {\n-        var path = tempFolder.resolve(fileName);\n-        Files.createDirectories(path.getParent());\n-        Files.createFile(path);\n-        return path;\n-    }\n-\n-    private void fillLinuxAppImage() throws IOException {\n-        appImage = newFolder(Path.of(\"Foo\"));\n-\n-        Path base = appImage.getFileName();\n-\n-        newFolder(base, \"bin\");\n-        newFolder(base, \"lib\", \"app\", \"mods\");\n-        newFolder(base, \"lib\", \"runtime\", \"bin\");\n-        newFile(base.resolve(\"bin\/Foo\"));\n-        newFile(base.resolve(\"lib\/app\/Foo.cfg\"));\n-        newFile(base.resolve(\"lib\/app\/hello.jar\"));\n-        newFile(base.resolve(\"lib\/Foo.png\"));\n-        newFile(base.resolve(\"lib\/libapplauncher.so\"));\n-        newFile(base.resolve(\"lib\/runtime\/bin\/java\"));\n-    }\n-\n-    @Test\n-    public void testLinux() throws IOException {\n-        fillLinuxAppImage();\n-        testApplicationLayout(ApplicationLayout.linuxAppImage());\n-    }\n-\n-    private void testApplicationLayout(ApplicationLayout layout) throws IOException {\n-        ApplicationLayout srcLayout = layout.resolveAt(appImage);\n-        assertApplicationLayout(srcLayout);\n-\n-        ApplicationLayout dstLayout = layout.resolveAt(\n-                appImage.getParent().resolve(\n-                        \"Copy\" + appImage.getFileName().toString()));\n-        srcLayout.move(dstLayout);\n-        Files.deleteIfExists(appImage);\n-        assertApplicationLayout(dstLayout);\n-\n-        dstLayout.copy(srcLayout);\n-        assertApplicationLayout(srcLayout);\n-        assertApplicationLayout(dstLayout);\n-    }\n-\n-    private void assertApplicationLayout(ApplicationLayout layout) throws IOException {\n-        assertTrue(Files.isRegularFile(layout.appDirectory().resolve(\"Foo.cfg\")));\n-        assertTrue(Files.isRegularFile(layout.appDirectory().resolve(\"hello.jar\")));\n-        assertTrue(Files.isDirectory(layout.appModsDirectory()));\n-        assertTrue(Files.isRegularFile(layout.launchersDirectory().resolve(\"Foo\")));\n-        assertTrue(Files.isRegularFile(layout.destktopIntegrationDirectory().resolve(\"Foo.png\")));\n-        assertTrue(Files.isRegularFile(layout.runtimeDirectory().resolve(\"bin\/java\")));\n-    }\n-\n-    @TempDir\n-    private Path tempFolder;\n-    private Path appImage;\n-}\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/ApplicationLayoutTest.java","additions":0,"deletions":103,"binary":false,"changes":103,"status":"deleted"},{"patch":"@@ -100,1 +100,1 @@\n-                new OverridableResource(DEFAULT_NAME), tempFolder.resolve(\n+                new OverridableResource(DEFAULT_NAME, ResourceLocator.class), tempFolder.resolve(\n@@ -120,1 +120,1 @@\n-        OverridableResource resource = new OverridableResource(DEFAULT_NAME);\n+        OverridableResource resource = new OverridableResource(DEFAULT_NAME, ResourceLocator.class);\n@@ -173,1 +173,1 @@\n-                new OverridableResource(defaultName.value)\n+                new OverridableResource(defaultName.value, ResourceLocator.class)\n@@ -202,1 +202,1 @@\n-                new OverridableResource(defaultName.value)\n+                new OverridableResource(defaultName.value, ResourceLocator.class)\n@@ -224,1 +224,1 @@\n-                new OverridableResource(null).setResourceDir(customFile.getParent()));\n+                new OverridableResource().setResourceDir(customFile.getParent()));\n@@ -247,1 +247,1 @@\n-        var resource = new OverridableResource(null)\n+        var resource = new OverridableResource()\n@@ -268,1 +268,1 @@\n-        var resourceWriter = buildResourceWriter(new OverridableResource(null)).expectedSource(null);\n+        var resourceWriter = buildResourceWriter(new OverridableResource()).expectedSource(null);\n@@ -278,1 +278,1 @@\n-        NULL_NAME(null);\n+        NO_NAME(\"\");\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/OverridableResourceTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.model;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotSame;\n+\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Set;\n+import org.junit.jupiter.api.Test;\n+\n+\n+public class AppImageLayoutTest {\n+\n+    @Test\n+    public void testStub() {\n+        final var root = Path.of(\"root\");\n+        final var runtime = Path.of(\"runtime\");\n+        final var layout = new AppImageLayout.Stub(root, runtime);\n+\n+        assertEquals(root, layout.rootDirectory());\n+        assertEquals(runtime, layout.runtimeDirectory());\n+    }\n+\n+    @Test\n+    public void testPathGroup() {\n+        final var layout = new AppImageLayout.Stub(Path.of(\"root\"), Path.of(\"runtime\"));\n+\n+        final var pathGroup = AppImageLayout.toPathGroup(layout);\n+\n+        assertEquals(Set.of(\"runtimeDirectory\"), pathGroup.keys());\n+        assertEquals(List.of(layout.runtimeDirectory()), pathGroup.paths());\n+    }\n+\n+    @Test\n+    public void testResolveAt() {\n+        final var dir = Path.of(\"foo\/bar\");\n+\n+        final var layout = new AppImageLayout.Stub(Path.of(\"\"), Path.of(\"runtime\"));\n+\n+        final var resolvedLayout = layout.resolveAt(dir);\n+\n+        assertNotSame(layout, resolvedLayout);\n+\n+        assertEquals(dir.resolve(layout.rootDirectory()), resolvedLayout.rootDirectory());\n+        assertEquals(dir.resolve(layout.runtimeDirectory()), resolvedLayout.runtimeDirectory());\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/model\/AppImageLayoutTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.model;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.stream.Stream;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+\n+public class ApplicationLayoutTest {\n+\n+    public void test(boolean move, Path tempDir) throws IOException {\n+        final var srcAppImageRoot = tempDir.resolve(\"src\");\n+        Files.createDirectories(srcAppImageRoot);\n+\n+        final var appImageCopyFiles = List.of(\"bin\/Foo\", \"lib\/app\/Foo.cfg\", \"lib\/app\/hello.jar\", \"runtime\/bin\/java\");\n+        final var appImageCopyDirs = List.of(\"lib\/app\/hello\");\n+\n+        final var appImageNoCopyFiles = List.of(\"lib\/Foo.cfg\", \"Foo\");\n+        final var appImageNoCopyDirs = List.of(\"lib\/hello\", \"a\/b\/c\");\n+\n+        for (var path : Stream.concat(appImageCopyFiles.stream(), appImageNoCopyFiles.stream()).map(srcAppImageRoot::resolve).toList()) {\n+            Files.createDirectories(path.getParent());\n+            Files.createFile(path);\n+        }\n+\n+        for (var path : Stream.concat(appImageCopyDirs.stream(), appImageNoCopyDirs.stream()).map(srcAppImageRoot::resolve).toList()) {\n+            Files.createDirectories(path);\n+        }\n+\n+        final var layout = ApplicationLayout.build()\n+                .launchersDirectory(\"bin\")\n+                .appDirectory(\"lib\/app\")\n+                .runtimeDirectory(\"runtime\")\n+                .appModsDirectory(\"mods\")\n+                .contentDirectory(\"content\")\n+                .desktopIntegrationDirectory(\"lib\/apps\")\n+                .create();\n+\n+        final var dstAppImageRoot = tempDir.resolve(\"dst\");\n+        Files.createDirectories(dstAppImageRoot);\n+\n+        final var srcPathGroup = AppImageLayout.toPathGroup(layout.resolveAt(srcAppImageRoot));\n+        final var dstPathGroup = AppImageLayout.toPathGroup(layout.resolveAt(dstAppImageRoot));\n+        if (move) {\n+            srcPathGroup.move(dstPathGroup);\n+        } else {\n+            srcPathGroup.copy(dstPathGroup);\n+        }\n+\n+        for (var path : Stream.concat(appImageNoCopyDirs.stream(), appImageNoCopyFiles.stream()).map(srcAppImageRoot::resolve).toList()) {\n+            assertTrue(Files.exists(path));\n+        }\n+\n+        for (var path : appImageCopyDirs) {\n+            var srcPath = srcAppImageRoot.resolve(path);\n+            if (move) {\n+                assertFalse(Files.exists(srcPath));\n+            } else {\n+                assertTrue(Files.isDirectory(srcPath));\n+            }\n+            assertTrue(Files.isDirectory(dstAppImageRoot.resolve(path)));\n+        }\n+\n+        for (var path : appImageCopyFiles) {\n+            var srcPath = srcAppImageRoot.resolve(path);\n+            if (move) {\n+                assertFalse(Files.exists(srcPath));\n+            } else {\n+                assertTrue(Files.isRegularFile(srcPath));\n+            }\n+            assertTrue(Files.isRegularFile(dstAppImageRoot.resolve(path)));\n+        }\n+    }\n+\n+    @Test\n+    public void testMove(@TempDir Path tempDir) throws IOException {\n+        test(true, tempDir);\n+    }\n+\n+    @Test\n+    public void testCopy(@TempDir Path tempDir) throws IOException {\n+        test(false, tempDir);\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/model\/ApplicationLayoutTest.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"},{"patch":"@@ -0,0 +1,388 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.pipeline;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.ArrayList;\n+import java.util.BitSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.NoSuchElementException;\n+import java.util.Spliterator;\n+import java.util.function.Consumer;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+final class BinaryMatrixTest {\n+\n+    record CtorTest(int rows, int columns, boolean isSquare, boolean fail) {\n+\n+        static CtorTest create(int rows, int columns) {\n+            return new CtorTest(rows, columns, rows == columns, false);\n+        }\n+\n+        static CtorTest createFail(int rows, int columns) {\n+            return new CtorTest(rows, columns, false, true);\n+        }\n+\n+        void test() {\n+            if (fail) {\n+                assertThrows(IllegalArgumentException.class, () -> new BinaryMatrix(rows, columns));\n+            } else {\n+                final var matrix = new BinaryMatrix(rows, columns);\n+                assertEquals(rows, matrix.getRowCount());\n+                assertEquals(columns, matrix.getColumnCount());\n+                assertEquals(isSquare, matrix.isSquare());\n+            }\n+        }\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testCtor(CtorTest testSpec) {\n+        testSpec.test();\n+    }\n+\n+    private static Stream<CtorTest> testCtor() {\n+        return Stream.of(\n+                CtorTest.create(1, 2),\n+                CtorTest.create(2, 2),\n+                CtorTest.create(7, 4),\n+                CtorTest.createFail(0, 1),\n+                CtorTest.createFail(1, 0),\n+                CtorTest.createFail(-1, 1),\n+                CtorTest.createFail(1, -1),\n+                CtorTest.createFail(0, 0),\n+                CtorTest.createFail(-3, -9)\n+        );\n+    }\n+\n+    record MatrixSpec(int rows, int columns, String encodedMatrixData) {\n+\n+        MatrixSpec(int rows, int columns) {\n+            this(rows, columns, null);\n+        }\n+\n+        BinaryMatrix createMatrix() {\n+            if (encodedMatrixData == null) {\n+                return new BinaryMatrix(rows, columns);\n+            }\n+\n+            final var charArray = encodedMatrixData.toCharArray();\n+\n+            if (charArray.length != rows * columns) {\n+                throw new IllegalArgumentException(\"Matrix data is not matching matrix dimensions\");\n+            }\n+\n+            final var matrixData = new BitSet(charArray.length);\n+\n+            IntStream.range(0, charArray.length).forEach(index -> {\n+                final var chr = charArray[index];\n+                switch (chr) {\n+                    case '0' -> {\n+                        break;\n+                    }\n+\n+                    case '1' -> {\n+                        matrixData.set(index);\n+                        break;\n+                    }\n+\n+                    default -> {\n+                        throw new IllegalArgumentException(String.format(\"Unrecognized character: %c\", chr));\n+                    }\n+                }\n+            });\n+\n+            return new BinaryMatrix(rows, columns, matrixData);\n+        }\n+    }\n+\n+    enum Selection {\n+        ROW,\n+        COLUMN\n+    }\n+\n+    record SelectionTest(MatrixSpec matrixSpec, Selection type, int index, List<Boolean> expected) {\n+\n+        static SelectionTest createRow(int rows, int columns, String encodedMatrixData, int row, int ... expected) {\n+            return new SelectionTest(new MatrixSpec(rows, columns, encodedMatrixData), Selection.ROW, row, conv(expected));\n+        }\n+\n+        static SelectionTest createColumn(int rows, int columns, String encodedMatrixData, int column, int ... expected) {\n+            return new SelectionTest(new MatrixSpec(rows, columns, encodedMatrixData), Selection.COLUMN, column, conv(expected));\n+        }\n+\n+        static SelectionTest createRow(int rows, int columns, int row) {\n+            return new SelectionTest(new MatrixSpec(rows, columns), Selection.ROW, row, null);\n+        }\n+\n+        static SelectionTest createColumn(int rows, int columns, int column) {\n+            return new SelectionTest(new MatrixSpec(rows, columns), Selection.COLUMN, column, null);\n+        }\n+\n+        void test() {\n+            final var matrix = matrixSpec.createMatrix();\n+            if (expected == null) {\n+                assertThrows(IndexOutOfBoundsException.class, () -> getIterator(matrix));\n+                assertThrows(IndexOutOfBoundsException.class, () -> getSpliterator(matrix));\n+            } else {\n+                final var it = getIterator(matrix);\n+                assertEquals(expected, readSelection(it::forEachRemaining));\n+\n+                final var split = getSpliterator(matrix);\n+                assertEquals(expected, readSelection(split::forEachRemaining));\n+\n+                assertThrows(NoSuchElementException.class, it::next);\n+            }\n+        }\n+\n+        List<Boolean> readSelection(Consumer<Consumer<BinaryMatrix.Cursor>> forEach) {\n+            final List<Boolean> actualData = new ArrayList<>();\n+            final int[] variableIndexValue = new int[] { -1 };\n+\n+            forEach.accept(cursor -> {\n+                final int fixedIndex;\n+                final int variableIndex;\n+                switch (type) {\n+                    case ROW -> {\n+                        fixedIndex = cursor.row();\n+                        variableIndex = cursor.column();\n+                    }\n+                    case COLUMN -> {\n+                        fixedIndex = cursor.column();\n+                        variableIndex = cursor.row();\n+                    }\n+                    default -> {\n+                        throw new IllegalArgumentException();\n+                    }\n+                }\n+\n+                assertEquals(index, fixedIndex);\n+                assertEquals(variableIndexValue[0] + 1, variableIndex);\n+                variableIndexValue[0] = variableIndex;\n+\n+                actualData.add(cursor.value());\n+            });\n+\n+            return actualData;\n+        }\n+\n+        Iterator<BinaryMatrix.Cursor> getIterator(BinaryMatrix matrix) {\n+            switch (type) {\n+                case ROW -> {\n+                    return matrix.getRowIterator(index);\n+                }\n+                case COLUMN -> {\n+                    return matrix.getColumnIterator(index);\n+                }\n+                default -> {\n+                    throw new IllegalArgumentException();\n+                }\n+            }\n+        }\n+\n+        Spliterator<BinaryMatrix.Cursor> getSpliterator(BinaryMatrix matrix) {\n+            switch (type) {\n+                case ROW -> {\n+                    return matrix.getRowSpliterator(index);\n+                }\n+                case COLUMN -> {\n+                    return matrix.getColumnSpliterator(index);\n+                }\n+                default -> {\n+                    throw new IllegalArgumentException();\n+                }\n+            }\n+        }\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testSelection(SelectionTest testSpec) {\n+        testSpec.test();\n+    }\n+\n+    private static Stream<SelectionTest> testSelection() {\n+        return Stream.of(\n+                SelectionTest.createRow(1, 1, \"0\", 0, 0),\n+                SelectionTest.createColumn(1, 1, \"0\", 0, 0),\n+                SelectionTest.createRow(1, 1, \"1\", 0, 1),\n+                SelectionTest.createColumn(1, 1, \"1\", 0, 1),\n+\n+                SelectionTest.createRow(3, 2, \"00\" + \"01\" + \"10\", 0, 0, 0),\n+                SelectionTest.createRow(3, 2, \"00\" + \"01\" + \"10\", 1, 0, 1),\n+                SelectionTest.createRow(3, 2, \"00\" + \"01\" + \"10\", 2, 1, 0),\n+                SelectionTest.createColumn(3, 2, \"00\" + \"01\" + \"10\", 0, 0, 0, 1),\n+                SelectionTest.createColumn(3, 2, \"00\" + \"01\" + \"10\", 1, 0, 1, 0),\n+\n+                SelectionTest.createRow(3, 2, -1),\n+                SelectionTest.createRow(3, 2, 3),\n+                SelectionTest.createRow(3, 2, 12),\n+\n+                SelectionTest.createColumn(3, 2, -1),\n+                SelectionTest.createColumn(3, 2, 2),\n+                SelectionTest.createColumn(3, 2, 12)\n+        );\n+    }\n+\n+    record SetValueTest(MatrixSpec matrixSpec, int row, int column, Boolean expected) {\n+\n+        static SetValueTest create(int rows, int columns, String encodedMatrixData, int row, int column, boolean expected) {\n+            return new SetValueTest(new MatrixSpec(rows, columns, encodedMatrixData), row, column, expected);\n+        }\n+\n+        static SetValueTest create(int rows, int columns, int row, int column) {\n+            return new SetValueTest(new MatrixSpec(rows, columns), row, column, null);\n+        }\n+\n+        void test() {\n+            final var matrix = matrixSpec.createMatrix();\n+            final var matrixCopy = matrixSpec.createMatrix();\n+            if (expected == null) {\n+                assertThrows(IndexOutOfBoundsException.class, () -> matrix.set(row, column));\n+                assertEquals(matrixCopy, matrix);\n+\n+                assertThrows(IndexOutOfBoundsException.class, () -> matrix.set(row, column, true));\n+                assertEquals(matrixCopy, matrix);\n+\n+                assertThrows(IndexOutOfBoundsException.class, () -> matrix.set(row, column, false));\n+                assertEquals(matrixCopy, matrix);\n+\n+                assertThrows(IndexOutOfBoundsException.class, () -> matrix.unset(row, column));\n+                assertEquals(matrixCopy, matrix);\n+\n+                assertThrows(IndexOutOfBoundsException.class, () -> matrix.isSet(row, column));\n+                assertEquals(matrixCopy, matrix);\n+            } else {\n+                assertEquals(expected, matrix.isSet(row, column));\n+\n+                matrix.set(row, column, expected);\n+                assertEquals(expected, matrix.isSet(row, column));\n+                assertEquals(matrixCopy, matrix);\n+\n+                if (expected) {\n+                    matrix.set(row, column);\n+                } else {\n+                    matrix.unset(row, column);\n+                }\n+                assertEquals(expected, matrix.isSet(row, column));\n+                assertEquals(matrixCopy, matrix);\n+\n+                matrix.set(row, column, !expected);\n+                assertNotEquals(expected, matrix.isSet(row, column));\n+                assertNotEquals(matrixCopy, matrix);\n+\n+                if (expected) {\n+                    matrix.set(row, column);\n+                } else {\n+                    matrix.unset(row, column);\n+                }\n+                assertEquals(expected, matrix.isSet(row, column));\n+                assertEquals(matrixCopy, matrix);\n+            }\n+        }\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testSetValue(SetValueTest testSpec) {\n+        testSpec.test();\n+    }\n+\n+    private static List<SetValueTest> testSetValue() {\n+        final List<SetValueTest> data = new ArrayList<>();\n+\n+        data.addAll(List.of(\n+                SetValueTest.create(1, 1, \"0\", 0, 0, false),\n+                SetValueTest.create(1, 1, \"1\", 0, 0, true),\n+\n+                SetValueTest.create(3, 2, -1, 0),\n+                SetValueTest.create(3, 2, 3, 0),\n+                SetValueTest.create(3, 2, 12, 0),\n+\n+                SetValueTest.create(3, 2, 0, -1),\n+                SetValueTest.create(3, 2, 0, 2),\n+                SetValueTest.create(3, 2, 0, 12),\n+\n+                SetValueTest.create(3, 2, 3, 2)\n+        ));\n+\n+        final var matrixData = new boolean[3][5];\n+        matrixData[0] = new boolean[] { false, true, false, true, true };\n+        matrixData[1] = new boolean[] { true, false, true, false, true };\n+        matrixData[2] = new boolean[] { false, false, true, false, false };\n+\n+        final var sb = new StringBuilder();\n+        for (int i = 0; i != 3; ++i) {\n+            for (int j = 0; j != 5; ++j) {\n+                sb.append(matrixData[i][j] ? '1' : '0');\n+            }\n+        }\n+\n+        final var encodedMatrixData = sb.toString();\n+        for (int i = 0; i != 3; ++i) {\n+            for (int j = 0; j != 5; ++j) {\n+                data.add(SetValueTest.create(3, 5, encodedMatrixData, i, j, matrixData[i][j]));\n+            }\n+        }\n+\n+        return data;\n+    }\n+\n+    @Test\n+    public void testEquals() {\n+        final var matrixSpec = new MatrixSpec(2, 3, \"001\" + \"101\");\n+\n+        final var a = matrixSpec.createMatrix();\n+        final var b = matrixSpec.createMatrix();\n+\n+        assertTrue(a.equals(b));\n+        assertTrue(a.equals(a));\n+        assertFalse(a.equals(null));\n+        assertFalse(a.equals(matrixSpec));\n+    }\n+\n+    @Test\n+    public void testHashCode() {\n+        final var matrixSpec2x3 = new MatrixSpec(2, 3);\n+\n+        assertEquals(matrixSpec2x3.createMatrix().hashCode(), matrixSpec2x3.createMatrix().hashCode());\n+\n+        final var matrixSpec3x2 = new MatrixSpec(3, 2);\n+        assertNotEquals(matrixSpec2x3.createMatrix().hashCode(), matrixSpec3x2.createMatrix().hashCode());\n+    }\n+\n+    private static List<Boolean> conv(int... values) {\n+        return IntStream.of(values).mapToObj(v -> v != 0).toList();\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/pipeline\/BinaryMatrixTest.java","additions":388,"deletions":0,"binary":false,"changes":388,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.pipeline;\n+\n+import static org.junit.jupiter.api.Assertions.assertSame;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+import java.util.List;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+final class DirectedEdgeTest {\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testCtor(String tail, String head, Class<? extends Exception> expectedExceptionType) {\n+        if (expectedExceptionType != null) {\n+            assertThrows(expectedExceptionType, () -> DirectedEdge.create(tail, head));\n+        } else {\n+            final var edge = DirectedEdge.create(tail, head);\n+            assertSame(tail, edge.from());\n+            assertSame(head, edge.head());\n+            assertSame(head, edge.to());\n+        }\n+    }\n+\n+    private static List<Object[]> testCtor() {\n+        return List.<Object[]>of(\n+                new Object[] { \"a\", \"b\", null },\n+                new Object[] { \"a\", \"a\", IllegalArgumentException.class },\n+                new Object[] { \"a\", null, NullPointerException.class },\n+                new Object[] { null, \"b\", NullPointerException.class },\n+                new Object[] { null, null, NullPointerException.class }\n+        );\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/pipeline\/DirectedEdgeTest.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,438 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.pipeline;\n+\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.NoSuchElementException;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+final class FixedDAGTest {\n+\n+    @Test\n+    public void testInvalidCtorArgs() {\n+        final var matrix1x2 = new BinaryMatrix(1, 2);\n+        final var nodes = FixedDAG.Nodes.<String>ofList(List.of(A, B));\n+\n+        assertThrows(IllegalArgumentException.class, () -> new FixedDAG<>(matrix1x2, nodes));\n+\n+        final var matrix3x3 = new BinaryMatrix(3, 3);\n+        assertThrows(IllegalArgumentException.class, () -> new FixedDAG<>(matrix3x3, nodes));\n+    }\n+\n+    @Test\n+    public void testNodesToList() {\n+        final var nodes = FixedDAG.Nodes.<String>ofList(List.of(A, B));\n+\n+        assertEquals(2, nodes.size());\n+\n+        assertEquals(A, nodes.get(0));\n+        assertEquals(B, nodes.get(1));\n+        assertThrows(IndexOutOfBoundsException.class, () -> nodes.get(2));\n+\n+        assertEquals(0, nodes.indexOf(A));\n+        assertEquals(1, nodes.indexOf(B));\n+        assertThrows(NoSuchElementException.class, () -> nodes.indexOf(C));\n+\n+        final var copy = new ArrayList<String>();\n+        for (var n : nodes) {\n+            copy.add(n);\n+        }\n+        assertEquals(copy, List.of(A, B));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testCyclic(List<DirectedEdge<String>> edges) {\n+        assertThrows(UnsupportedOperationException.class, () -> create(edges));\n+    }\n+\n+    private static Stream<List<DirectedEdge<String>>> testCyclic() {\n+        return Stream.of(\n+                List.of(edge(A, B), edge(B, A)),\n+\n+                List.of(edge(A, B), edge(B, C), edge(C, D), edge(D, A)),\n+\n+                List.of(edge(A, B), edge(B, C), edge(C, D), edge(D, B)),\n+\n+                \/\/ A <- B -> L\n+                \/\/ |    ^    |\n+                \/\/ |    |    |\n+                \/\/ + <- D <- +\n+                \/\/      |\n+                \/\/      + <- C\n+                List.of(edge(B, A), edge(D, B), edge(D, A), edge(C, D), edge(L, D), edge(B, L)),\n+                List.of(edge(C, D), edge(B, A), edge(D, B), edge(D, A), edge(L, D), edge(B, L))\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testGetNoIncomingEdges(List<DirectedEdge<String>> edges, List<String> expectedNodes) {\n+        final var actualNodes = create(edges).getNoIncomingEdges();\n+        assertEquals(expectedNodes, actualNodes);\n+    }\n+\n+    private static Stream<Object[]> testGetNoIncomingEdges() {\n+        return Stream.<Object[]>of(\n+                new Object[] { List.of(edge(A, B)), List.of(A) },\n+                new Object[] { List.of(edge(A, B), edge(A, B)), List.of(A) },\n+                new Object[] { List.of(edge(A, B), edge(D, B)), List.of(A, D) },\n+                new Object[] { List.of(edge(D, B), edge(A, B)), List.of(D, A) },\n+\n+                new Object[] { List.of(edge(A, B), edge(C, D)), List.of(A, C) },\n+\n+                \/\/ A <- B\n+                \/\/ ^    ^\n+                \/\/ |    |\n+                \/\/ + -- D <- L\n+                \/\/      |\n+                \/\/      + <- C\n+                new Object[] { List.of(edge(B, A), edge(D, B), edge(D, A), edge(C, D), edge(L, D)), List.of(C, L) },\n+                new Object[] { List.of(edge(B, A), edge(L, D), edge(D, B), edge(D, A), edge(C, D)), List.of(L, C) }\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testGetNoOutgoingEdges(List<DirectedEdge<String>> edges, List<String> expectedNodes) {\n+        final var actualNodes = create(edges).getNoOutgoingEdges();\n+        assertEquals(expectedNodes, actualNodes);\n+    }\n+\n+    private static Stream<Object[]> testGetNoOutgoingEdges() {\n+        return Stream.<Object[]>of(\n+                new Object[] { List.of(edge(A, B)), List.of(B) },\n+                new Object[] { List.of(edge(A, B), edge(C, D)), List.of(B, D) }\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testGetTailsOf(String node, List<DirectedEdge<String>> edges, List<String> expectedNodes) {\n+        final var actualNodes = create(edges).getTailsOf(node);\n+        assertEquals(actualNodes, expectedNodes);\n+\n+    }\n+\n+    private static Stream<Object[]> testGetTailsOf() {\n+        return Stream.<Object[]>of(\n+                new Object[] { A, List.of(edge(A, B)), List.of() },\n+                new Object[] { B, List.of(edge(A, B)), List.of(A) },\n+                new Object[] { B, List.of(edge(A, B), edge(A, B)), List.of(A) },\n+                new Object[] { B, List.of(edge(A, B), edge(B, C)), List.of(A) },\n+                new Object[] { B, List.of(edge(A, B), edge(B, C), edge(C, D)), List.of(A) },\n+                new Object[] { B, List.of(edge(A, B), edge(A, C), edge(D, B)), List.of(A, D) },\n+                new Object[] { B, List.of(edge(D, B), edge(A, B), edge(A, C)), List.of(D, A) }\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testGetHeadsOf(String node, List<DirectedEdge<String>> edges, List<String> expectedNodes) {\n+        final var actualNodes = create(edges).getHeadsOf(node);\n+        assertEquals(actualNodes, expectedNodes);\n+    }\n+\n+    private static Stream<Object[]> testGetHeadsOf() {\n+        return Stream.<Object[]>of(\n+                new Object[] { A, List.of(edge(A, B)), List.of(B) },\n+                new Object[] { B, List.of(edge(A, B)), List.of() },\n+                new Object[] { A, List.of(edge(A, B), edge(A, B)), List.of(B) },\n+                new Object[] { B, List.of(edge(A, B), edge(B, C)), List.of(C) },\n+                new Object[] { B, List.of(edge(A, B), edge(B, C), edge(C, D)), List.of(C) },\n+                new Object[] { D, List.of(edge(D, B), edge(D, A), edge(C, D)), List.of(B, A) },\n+                new Object[] { D, List.of(edge(D, A), edge(D, B), edge(C, D)), List.of(A, B) }\n+        );\n+    }\n+\n+    @Test\n+    public void testSome() {\n+        \/\/ A <- B <--- D\n+        \/\/ ^    ^      |\n+        \/\/ |    |      |\n+        \/\/ +--- C -> L |\n+        \/\/ |    ^      |\n+        \/\/ |    |      |\n+        \/\/ +----+------+\n+\n+        final var graphBuilder = FixedDAG.<String>build();\n+\n+        graphBuilder.addEdge(edge(C, L));\n+        graphBuilder.addEdge(edge(D, B));\n+        graphBuilder.addEdge(edge(B, A));\n+        graphBuilder.addEdge(edge(D, A));\n+        graphBuilder.addEdge(edge(C, A));\n+        graphBuilder.addEdge(edge(D, C));\n+        graphBuilder.addEdge(edge(C, B));\n+\n+        final var graph = graphBuilder.create();\n+\n+        assertEquals(graph.getNoIncomingEdges(), List.of(D));\n+        assertEquals(graph.getNoOutgoingEdges(), List.of(L, A));\n+\n+        assertEquals(graph.getHeadsOf(A), List.of());\n+        assertEquals(graph.getTailsOf(A), List.of(C, D, B));\n+\n+        assertEquals(graph.getHeadsOf(B), List.of(A));\n+        assertEquals(graph.getTailsOf(B), List.of(C, D));\n+\n+        assertEquals(graph.getHeadsOf(C), List.of(L, B, A));\n+        assertEquals(graph.getTailsOf(C), List.of(D));\n+\n+        assertEquals(graph.getHeadsOf(D), List.of(C, B, A));\n+        assertEquals(graph.getTailsOf(D), List.of());\n+\n+        assertEquals(graph.getHeadsOf(L), List.of());\n+        assertEquals(graph.getTailsOf(L), List.of(C));\n+    }\n+\n+    @Test\n+    public void testSome2() {\n+        \/\/ B -> A <- C\n+        \/\/ ^         ^\n+        \/\/ |         |\n+        \/\/ +--- D ---+\n+        \/\/      ^\n+        \/\/      |\n+        \/\/ K -> N <- M <- P\n+        \/\/ ^         ^\n+        \/\/ |    O    |\n+        \/\/ |    ^    |\n+        \/\/ |    |    |\n+        \/\/ +--- L ---+\n+        \/\/\n+\n+        final var graphBuilder = FixedDAG.<String>build();\n+\n+        graphBuilder.addEdge(edge(B, A));\n+        graphBuilder.addEdge(edge(C, A));\n+        graphBuilder.addEdge(edge(D, B));\n+        graphBuilder.addEdge(edge(D, C));\n+        graphBuilder.addEdge(edge(N, D));\n+        graphBuilder.addEdge(edge(M, N));\n+        graphBuilder.addEdge(edge(K, N));\n+        graphBuilder.addEdge(edge(L, K));\n+        graphBuilder.addEdge(edge(L, M));\n+        graphBuilder.addEdge(edge(P, M));\n+        graphBuilder.addEdge(edge(L, O));\n+\n+        final var graph = graphBuilder.create();\n+\n+        assertEquals(graph.getNoIncomingEdges(), List.of(L, P));\n+        assertEquals(graph.getNoOutgoingEdges(), List.of(A, O));\n+\n+        assertEquals(graph.getHeadsOf(A), List.of());\n+        assertEquals(graph.getTailsOf(A), List.of(B, C));\n+        assertEquals(graph.getAllHeadsOf(A), List.of());\n+        assertEquals(graph.getAllTailsOf(A), List.of(B, C, D, N, M, K, L, P));\n+\n+        assertEquals(graph.getHeadsOf(B), List.of(A));\n+        assertEquals(graph.getTailsOf(B), List.of(D));\n+        assertEquals(graph.getAllHeadsOf(B), List.of(A));\n+        assertEquals(graph.getAllTailsOf(B), List.of(D, N, M, K, L, P));\n+\n+        assertEquals(graph.getHeadsOf(C), List.of(A));\n+        assertEquals(graph.getTailsOf(C), List.of(D));\n+        assertEquals(graph.getAllHeadsOf(C), List.of(A));\n+        assertEquals(graph.getAllTailsOf(C), List.of(D, N, M, K, L, P));\n+\n+        assertEquals(graph.getHeadsOf(D), List.of(B, C));\n+        assertEquals(graph.getTailsOf(D), List.of(N));\n+        assertEquals(graph.getAllHeadsOf(D), List.of(B, A, C));\n+        assertEquals(graph.getAllTailsOf(D), List.of(N, M, K, L, P));\n+\n+        assertEquals(graph.getHeadsOf(K), List.of(N));\n+        assertEquals(graph.getTailsOf(K), List.of(L));\n+        assertEquals(graph.getAllHeadsOf(K), List.of(B, A, C, D, N));\n+        assertEquals(graph.getAllTailsOf(K), List.of(L));\n+\n+        assertEquals(graph.getHeadsOf(L), List.of(M, K, O));\n+        assertEquals(graph.getTailsOf(L), List.of());\n+        assertEquals(graph.getAllHeadsOf(L), List.of(B, A, C, D, N, M, K, O));\n+        assertEquals(graph.getAllTailsOf(L), List.of());\n+\n+        assertEquals(graph.getHeadsOf(M), List.of(N));\n+        assertEquals(graph.getTailsOf(M), List.of(L, P));\n+        assertEquals(graph.getAllHeadsOf(M), List.of(B, A, C, D, N));\n+        assertEquals(graph.getAllTailsOf(M), List.of(L, P));\n+\n+        assertEquals(graph.getHeadsOf(N), List.of(D));\n+        assertEquals(graph.getTailsOf(N), List.of(M, K));\n+        assertEquals(graph.getAllHeadsOf(N), List.of(B, A, C, D));\n+        assertEquals(graph.getAllTailsOf(N), List.of(M, K, L, P));\n+\n+        assertEquals(graph.getHeadsOf(O), List.of());\n+        assertEquals(graph.getTailsOf(O), List.of(L));\n+        assertEquals(graph.getAllHeadsOf(O), List.of());\n+        assertEquals(graph.getAllTailsOf(O), List.of(L));\n+\n+        assertEquals(graph.getHeadsOf(P), List.of(M));\n+        assertEquals(graph.getTailsOf(P), List.of());\n+        assertEquals(graph.getAllHeadsOf(P), List.of(B, A, C, D, N, M));\n+        assertEquals(graph.getAllTailsOf(P), List.of());\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    public void testTopologicalSort(List<DirectedEdge<Integer>> edges, int[] expectedNodes) {\n+\n+        final var nodes = edges.stream().map(edge -> {\n+            return Stream.of(edge.tail(), edge.head());\n+        }).flatMap(x -> x).sorted().distinct().toList();\n+\n+        assertArrayEquals(expectedNodes, FixedDAG.create(edges, nodes).topologicalSort().stream().mapToInt(x -> x).toArray());\n+    }\n+\n+    private static List<Object[]> testTopologicalSort() {\n+        return List.<Object[]>of(\n+                new Object[] { List.of(\n+                        edge(11, 15),\n+                        edge(12, 16),\n+                        edge(13, 17),\n+                        edge(14, 15),\n+                        edge(14, 16),\n+                        edge(14, 17),\n+                        edge(14, 18)), IntStream.rangeClosed(11, 18).toArray()\n+                },\n+\n+                new Object[] { List.of(\n+                        edge(5, 2),\n+                        edge(5, 0),\n+                        edge(4, 0),\n+                        edge(2, 3),\n+                        edge(3, 1)), new int[] {4, 5, 0, 2, 3, 1}\n+                },\n+\n+                new Object[] { List.of(\n+                        edge(0, 1),\n+                        edge(0, 4),\n+                        edge(0, 7),\n+                        edge(0, 14),\n+                        edge(1, 5),\n+                        edge(2, 3),\n+                        edge(2, 5),\n+                        edge(2, 6),\n+                        edge(3, 10),\n+                        edge(4, 5),\n+                        edge(4, 8),\n+                        edge(5, 9),\n+                        edge(6, 10),\n+                        edge(7, 8),\n+                        edge(7, 11),\n+                        edge(10, 13),\n+                        edge(11, 12),\n+                        edge(13, 16),\n+                        edge(14, 15)), IntStream.rangeClosed(0, 16).toArray()\n+                },\n+\n+                new Object[] { List.of(\n+                        edge(0, 2),\n+                        edge(0, 4),\n+                        edge(1, 4),\n+                        edge(1, 5),\n+                        edge(2, 5),\n+                        edge(3, 2)), new int[] {0, 1, 3, 2, 4, 5}\n+                },\n+\n+                new Object[] { List.of(\n+                        edge(0, 1),\n+                        edge(0, 2),\n+                        edge(1, 3),\n+                        edge(2, 3),\n+                        edge(3, 4)), IntStream.rangeClosed(0, 4).toArray()\n+                },\n+\n+                new Object[] { List.of(\n+                        edge(1, 2),\n+                        edge(1, 3),\n+                        edge(2, 4),\n+                        edge(3, 4),\n+                        edge(4, 5)), IntStream.rangeClosed(1, 5).toArray()\n+                }\n+        );\n+    }\n+\n+    @Test\n+    public void testEmptyBuilder() {\n+        assertThrows(IllegalArgumentException.class, FixedDAG.<String>build()::create);\n+    }\n+\n+    @Test\n+    public void testSingleNodeBuilder() {\n+        final var graphBuilder = FixedDAG.<String>build();\n+        graphBuilder.addNode(A);\n+        assertNodesEquals(graphBuilder.create().nodes(), A);\n+    }\n+\n+    @Test\n+    public void testIsolatedNodesBuilder() {\n+        final var graphBuilder = FixedDAG.<String>build();\n+        graphBuilder.addNode(A);\n+        graphBuilder.addNode(B);\n+        assertNodesEquals(graphBuilder.create().nodes(), A, B);\n+        assertEquals(graphBuilder.create().getNoOutgoingEdges(), List.of(A, B));\n+        assertEquals(graphBuilder.create().getNoIncomingEdges(), List.of(A, B));\n+\n+        graphBuilder.addEdge(edge(A, C));\n+        assertNodesEquals(graphBuilder.create().nodes(), A, B, C);\n+        assertEquals(graphBuilder.create().getNoOutgoingEdges(), List.of(B, C));\n+        assertEquals(graphBuilder.create().getNoIncomingEdges(), List.of(A, B));\n+    }\n+\n+    private static void assertNodesEquals(FixedDAG.Nodes<String> actual, String... expected) {\n+        assertEquals(List.of(expected), StreamSupport.stream(actual.spliterator(), false).toList());\n+    }\n+\n+    private static FixedDAG<String> create(Collection<DirectedEdge<String>> edges) {\n+        final var graphBuilder = FixedDAG.<String>build();\n+        edges.forEach(graphBuilder::addEdge);\n+        return graphBuilder.create();\n+    }\n+\n+    private static <T> DirectedEdge<T> edge(T tail, T head) {\n+        return DirectedEdge.create(tail, head);\n+    }\n+\n+    private static final String A = \"A\";\n+    private static final String B = \"B\";\n+    private static final String C = \"C\";\n+    private static final String D = \"D\";\n+    private static final String K = \"K\";\n+    private static final String L = \"L\";\n+    private static final String M = \"M\";\n+    private static final String N = \"N\";\n+    private static final String O = \"O\";\n+    private static final String P = \"P\";\n+}\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/pipeline\/FixedDAGTest.java","additions":438,"deletions":0,"binary":false,"changes":438,"status":"added"},{"patch":"@@ -0,0 +1,496 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal.pipeline;\n+\n+import static java.util.stream.Collectors.joining;\n+import static java.util.stream.Collectors.toMap;\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ForkJoinPool;\n+import java.util.concurrent.locks.LockSupport;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+import java.util.regex.Pattern;\n+import java.util.stream.Stream;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+final class TaskPipelineBuilderTest {\n+\n+    private static final class TestException extends Exception {\n+\n+        TestException(TestTask sender) {\n+            super(makeMessage(sender));\n+        }\n+\n+        static String makeMessage(TestTask sender) {\n+            return \"Thrown by \" + sender.name();\n+        }\n+\n+        private static final long serialVersionUID = 1L;\n+    }\n+\n+    private enum TestTask implements Consumer<StringBuffer> {\n+        A,\n+        B,\n+        C,\n+        D,\n+        K,\n+        L,\n+        M,\n+        N,\n+        THROW_1(true);\n+\n+        TestTask(boolean fail) {\n+            this.fail = fail;\n+        }\n+\n+        TestTask() {\n+            fail = false;\n+        }\n+\n+        @Override\n+        public void accept(StringBuffer sb) {\n+            LockSupport.parkNanos(Duration.ofMillis(1).toNanos());\n+            System.out.println(String.format(\"[%s] result before append: [%s]; append %s\", Thread.currentThread(), sb, name()));\n+            sb.append(name());\n+        }\n+\n+        Callable<Void> toCallable(StringBuffer sb) {\n+            return new Callable<> () {\n+\n+                @Override\n+                public Void call() throws Exception {\n+                    if (isThrowing()) {\n+                        throw new TestException(TestTask.this);\n+                    }\n+                    accept(sb);\n+                    return null;\n+                }\n+\n+                @Override\n+                public String toString() {\n+                    return TestTask.this.toString();\n+                }\n+\n+            };\n+        }\n+\n+        private boolean isThrowing() {\n+            return fail;\n+        }\n+\n+        static Stream<TestTask> nonThrowingTasks() {\n+            return Stream.of(values()).filter(Predicate.not(TestTask::isThrowing));\n+        }\n+\n+        private final boolean fail;\n+    }\n+\n+    private record TaskSpec(TestTask task, List<TestTask> dependencies, TestTask dependent) {\n+\n+        TaskSpec {\n+            Objects.requireNonNull(task);\n+            Objects.requireNonNull(dependencies);\n+        }\n+\n+        static final class Builder {\n+\n+            Builder(TestTask task) {\n+                this.task = Objects.requireNonNull(task);\n+            }\n+\n+            Builder to(TestTask task) {\n+                dependent = task;\n+                return this;\n+            }\n+\n+            Builder from(TestTask ... tasks) {\n+                dependencies.addAll(List.of(tasks));\n+                return this;\n+            }\n+\n+            TaskSpec create() {\n+                return new TaskSpec(task, dependencies, dependent);\n+            }\n+\n+            private final TestTask task;\n+            private final List<TestTask> dependencies = new ArrayList<>();\n+            private TestTask dependent;\n+        }\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"testIt\")\n+    public void testIt(TestSpec testSpec) throws Exception {\n+        testSpec.test();\n+    }\n+\n+    public record TestSpec(List<TaskSpec> taskSpecs, Object expectedString, Set<TestTask> expectedAnyFailures, Executor executor) {\n+\n+        public TestSpec {\n+            Objects.requireNonNull(taskSpecs);\n+            Objects.requireNonNull(expectedString);\n+            Objects.requireNonNull(expectedAnyFailures);\n+        }\n+\n+        static final class Builder {\n+\n+            Builder taskSpecs(TaskSpec ...specs) {\n+                taskSpecs.addAll(List.of(specs));\n+                return this;\n+            }\n+\n+            Builder expected(Pattern v) {\n+                expectedRegexp = v;\n+                return this;\n+            }\n+\n+            Builder expected(Predicate<String> v) {\n+                expectedPredicate = v;\n+                return this;\n+            }\n+\n+            Builder expected(String v) {\n+                expectedString = v;\n+                return this;\n+            }\n+\n+            Builder expectedAnyFailure(TestTask... v) {\n+                expectedAnyFailures.addAll(List.of(v));\n+                return this;\n+            }\n+\n+            Builder executor(Executor v) {\n+                executor = v;\n+                return this;\n+            }\n+\n+            TestSpec create() {\n+                final Object expectedObject;\n+                if (!isParallel()) {\n+                    expectedObject = expectedString;\n+                } else if (expectedRegexp != null) {\n+                    expectedObject = expectedRegexp;\n+                } else if (expectedPredicate != null) {\n+                    expectedObject = expectedPredicate;\n+                } else {\n+                    expectedObject = expectedString;\n+                }\n+\n+                if (expectedPredicate != null && expectedRegexp != null) {\n+                    throw new IllegalStateException();\n+                }\n+\n+                return new TestSpec(taskSpecs, expectedObject, expectedAnyFailures, executor);\n+            }\n+\n+            private boolean isParallel() {\n+                return executor != null;\n+            }\n+\n+            private final List<TaskSpec> taskSpecs = new ArrayList<>();\n+            private String expectedString;\n+            private Pattern expectedRegexp;\n+            private Predicate<String> expectedPredicate;\n+            private Set<TestTask> expectedAnyFailures = new HashSet<>();\n+            private Executor executor;\n+        }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        void test() {\n+            final var builder = new TaskPipelineBuilder();\n+            builder.executor(executor);\n+\n+            final var sb = new StringBuffer();\n+\n+            final var taskMap = Stream.of(TestTask.values()).collect(toMap(x -> x, x -> {\n+                return x.toCallable(sb);\n+            }));\n+\n+            taskSpecs.forEach(taskSpec -> {\n+                final var taskBuilder = builder.task(taskMap.get(taskSpec.task))\n+                        .addDependencies(taskSpec.dependencies.stream().map(taskMap::get).toList());\n+                if (taskSpec.dependent != null) {\n+                    taskBuilder.addDependent(taskMap.get(taskSpec.dependent));\n+                }\n+                taskBuilder.add();\n+            });\n+\n+            if (expectedAnyFailures.isEmpty()) {\n+                System.out.println(String.format(\"start for %s\", expectedString));\n+                assertDoesNotThrow(builder.create()::call);\n+            } else {\n+                System.out.println(String.format(\"start for %s throws %s\", expectedString, expectedAnyFailures));\n+                final var ex = assertThrows(TestException.class, builder.create()::call);\n+                assertTrue(expectedAnyFailures.stream().map(TestException::makeMessage).anyMatch(Predicate.isEqual(ex.getMessage())), () -> {\n+                    return String.format(\"Exception message '%s' doesn't match any of failed tasks %s\", ex.getMessage(), expectedAnyFailures);\n+                });\n+            }\n+            System.out.println(\"end\");\n+\n+            final var actualString = sb.toString();\n+\n+            assertEquals(actualString.length(), actualString.chars().distinct().count());\n+\n+            if (expectedString instanceof Pattern expectedRegexp) {\n+                assertTrue(expectedRegexp.matcher(actualString).matches(), () -> {\n+                    return String.format(\"Regexp %s doesn't match string %s\", expectedRegexp, actualString);\n+                });\n+            } else if (expectedString instanceof Predicate<?> expectedPredicate) {\n+                assertTrue(((Predicate<String>)expectedPredicate).test(actualString), () -> {\n+                    return String.format(\"Predicate %s failed for string %s\", expectedString, actualString);\n+                });\n+            } else {\n+                assertEquals(expectedString.toString(), actualString);\n+            }\n+        }\n+    }\n+\n+    private static List<TestSpec> testIt() {\n+        final List<TestSpec> data = new ArrayList<>();\n+\n+        data.add(test().taskSpecs(task(A).create()).expected(\"A\").create());\n+\n+        data.add(test().taskSpecs(task(B).from(A).create()).expected(\"AB\").create());\n+\n+        \/\/ D <- C <- B\n+        \/\/ ^         ^\n+        \/\/ |         |\n+        \/\/ +--- A ---+\n+        data.add(test().taskSpecs(\n+                task(D).create(),\n+                task(C).from(B).to(D).create(),\n+                task(A).to(B).create(),\n+                task(A).to(D).create()\n+        ).expected(\"ABCD\").create());\n+\n+        \/\/ A <- THROW_1 <- B\n+        data.add(test().taskSpecs(\n+                task(A).create(),\n+                task(THROW_1).from(B).to(A).create()\n+        ).expected(\"B\").expectedAnyFailure(THROW_1).create());\n+\n+        data.addAll(testData(ForkJoinPool.commonPool()));\n+        data.addAll(testData(Executors.newSingleThreadExecutor()));\n+        data.addAll(testData(Executors.newFixedThreadPool(5)));\n+\n+        data.addAll(testData(null));\n+\n+        return data;\n+    }\n+\n+    private static List<TestSpec> testData(Executor executor) {\n+        final List<TestSpec> data = new ArrayList<>();\n+\n+        final var allValuesRegexp = Pattern.compile(String.format(\"[%s]{%d}\",\n+                TestTask.nonThrowingTasks().map(Enum::name).collect(joining()), TestTask.nonThrowingTasks().count()));\n+\n+        data.add(test().executor(executor).taskSpecs(\n+                task(D).create(),\n+                task(C).from(B).to(D).create(),\n+                task(A).to(B).create(),\n+                task(A).to(D).create()\n+        ).expected(\"ABCD\").create());\n+\n+        data.add(test().executor(executor).taskSpecs(TestTask.nonThrowingTasks()\n+                .map(TaskPipelineBuilderTest::task)\n+                .map(TaskSpec.Builder::create)\n+                .toArray(TaskSpec[]::new)\n+        ).expected(allValuesRegexp).expected(TestTask.nonThrowingTasks().map(Enum::name).collect(joining())).create());\n+\n+        data.add(test().executor(executor).taskSpecs(TestTask.nonThrowingTasks()\n+                .sorted(Comparator.reverseOrder())\n+                .map(TaskPipelineBuilderTest::task)\n+                .map(TaskSpec.Builder::create)\n+                .toArray(TaskSpec[]::new)\n+        ).expected(allValuesRegexp).expected(TestTask.nonThrowingTasks().sorted(Comparator.reverseOrder()).map(Enum::name).collect(joining())).create());\n+\n+        \/\/ B -> A <- C\n+        \/\/ ^         ^\n+        \/\/ |         |\n+        \/\/ +--- D ---+\n+        data.add(test().executor(executor).taskSpecs(\n+                task(A).create(),\n+                task(C).from(D).to(A).create(),\n+                task(B).from(D).to(A).create()\n+        ).expected(Pattern.compile(\"D(BC|CB)A\")).expected(\"DCBA\").create());\n+\n+        data.add(test().executor(executor).taskSpecs(\n+                task(A).create(),\n+                task(B).from(D).to(A).create(),\n+                task(C).from(D).to(A).create()\n+        ).expected(Pattern.compile(\"D(BC|CB)A\")).expected(\"DBCA\").create());\n+\n+        \/\/ B -> A <- C\n+        \/\/ ^         ^\n+        \/\/ |         |\n+        \/\/ +--- D ---+\n+        \/\/      ^\n+        \/\/      |\n+        \/\/      N\n+        data.add(test().executor(executor).taskSpecs(\n+                task(A).create(),\n+                task(C).from(D).to(A).create(),\n+                task(N).to(D).create(),\n+                task(B).from(D).to(A).create()\n+        ).expected(Pattern.compile(\"ND(BC|CB)A\")).expected(\"NDCBA\").create());\n+\n+        \/\/ B -> A <- C\n+        \/\/ ^         ^\n+        \/\/ |         |\n+        \/\/ +--- D ---+\n+        \/\/      ^\n+        \/\/      |\n+        \/\/ K -> N <- M\n+        \/\/ ^         ^\n+        \/\/ |         |\n+        \/\/ +--- L ---+\n+        data.add(test().executor(executor).taskSpecs(\n+                task(A).create(),\n+                task(C).from(D).to(A).create(),\n+                task(N).to(D).create(),\n+                task(B).from(D).to(A).create(),\n+                task(K).from(L).to(N).create(),\n+                task(M).from(L).to(N).create()\n+        ).expected(Pattern.compile(\"L(KM|MK)ND(BC|CB)A\")).expected(\"LKMNDCBA\").create());\n+\n+        \/\/ +-> A <-+\n+        \/\/ |       |\n+        \/\/ B    THROW_1 <- D\n+        \/\/ ^       ^\n+        \/\/ |       |\n+        \/\/ K       C\n+        data.add(test().executor(executor).taskSpecs(\n+                task(A).create(),\n+                task(B).from(K).to(A).create(),\n+                task(THROW_1).from(D).to(A).create(),\n+                task(C).to(THROW_1).create()\n+        ).expected(c('K').before('B').and(onlyChars(\"KBDC\"))).expected(\"KBDC\").expectedAnyFailure(THROW_1).create());\n+\n+        \/\/ +--> A <--+\n+        \/\/ |    ^    |\n+        \/\/ |    |    |\n+        \/\/ B    C  THROW_1\n+        data.add(test().executor(executor).taskSpecs(\n+                task(A).create(),\n+                task(B).to(A).create(),\n+                task(C).to(A).create(),\n+                task(THROW_1).to(A).create()\n+        ).expected(onlyChars(\"BC\")).expected(\"BC\").expectedAnyFailure(THROW_1).create());\n+\n+        return data;\n+    }\n+\n+    private static TaskSpec.Builder task(TestTask task) {\n+        return new TaskSpec.Builder(task);\n+    }\n+\n+    private static TestSpec.Builder test() {\n+        return new TestSpec.Builder();\n+    }\n+\n+    private record PredicateWithDescritpion<T>(Predicate<T> predicate, String description) implements Predicate<T> {\n+\n+        PredicateWithDescritpion {\n+            Objects.requireNonNull(predicate);\n+            Objects.requireNonNull(description);\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return String.format(\"(%s)\",  description);\n+        }\n+\n+        @Override\n+        public Predicate<T> and(Predicate<? super T> other) {\n+            return new PredicateWithDescritpion<>(predicate.and(other), String.format(\"%s and %s\", toString(), other));\n+        }\n+\n+        @Override\n+        public Predicate<T> or(Predicate<? super T> other) {\n+            return new PredicateWithDescritpion<>(predicate.or(other), String.format(\"%s or %s\", toString(), other));\n+        }\n+\n+        @Override\n+        public Predicate<T> negate() {\n+            return new PredicateWithDescritpion<>(predicate, String.format(\"!%s\", toString()));\n+        }\n+\n+        @Override\n+        public boolean test(T t) {\n+            return predicate.test(t);\n+        }\n+    }\n+\n+    private record StringPredicateBuilder(char ch) {\n+        Predicate<String> before(char other) {\n+            return new PredicateWithDescritpion<>(str -> {\n+                return str.indexOf(ch) < str.indexOf(other);\n+            }, String.format(\"%s before %s\",  ch, other));\n+        }\n+\n+        Predicate<String> after(char other) {\n+            return new StringPredicateBuilder(other).before(ch);\n+        }\n+    }\n+\n+    private static StringPredicateBuilder c(char ch) {\n+        return new StringPredicateBuilder(ch);\n+    }\n+\n+    private static Predicate<String> onlyChars(String chars) {\n+        return onlyChars(chars.chars().mapToObj(v -> (char)v).toArray(Character[]::new));\n+    }\n+\n+    private static Predicate<String> onlyChars(Character... chars) {\n+        return new PredicateWithDescritpion<>(str -> {\n+            final Set<Character> set = Set.of(chars);\n+            return str.chars().mapToObj(v -> (char)v).allMatch(set::contains);\n+        }, String.format(\"only %s\", List.of(chars)));\n+    }\n+\n+    private static final TestTask A = TestTask.A;\n+    private static final TestTask B = TestTask.B;\n+    private static final TestTask C = TestTask.C;\n+    private static final TestTask D = TestTask.D;\n+    private static final TestTask K = TestTask.K;\n+    private static final TestTask L = TestTask.L;\n+    private static final TestTask M = TestTask.M;\n+    private static final TestTask N = TestTask.N;\n+    private static final TestTask THROW_1 = TestTask.THROW_1;\n+}\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/pipeline\/TaskPipelineBuilderTest.java","additions":496,"deletions":0,"binary":false,"changes":496,"status":"added"},{"patch":"@@ -0,0 +1,374 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal.util;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.ValueSource;\n+\n+\n+public class CompositeProxyTest {\n+\n+    static interface Smalltalk {\n+\n+        default String sayHello() {\n+            return \"Hello\";\n+        }\n+\n+        default String sayBye() {\n+            return \"Bye\";\n+        }\n+    }\n+\n+    static interface ConvoMixin {\n+\n+        String sayThings();\n+\n+        record Stub(String sayThings) implements ConvoMixin {\n+        }\n+    }\n+\n+    static interface Convo extends Smalltalk, ConvoMixin {\n+    }\n+\n+    static interface ConvoMixinWithOverrideSayBye {\n+\n+        String sayThings();\n+\n+        String sayBye();\n+\n+        record Stub(String sayThings, String sayBye) implements ConvoMixinWithOverrideSayBye {\n+        }\n+    }\n+\n+    static interface ConvoWithOverrideSayBye extends Smalltalk, ConvoMixinWithOverrideSayBye {\n+        @Override\n+        String sayBye();\n+    }\n+\n+    static interface ConvoWithDefaultSayHelloWithOverrideSayBye extends Smalltalk, ConvoMixinWithOverrideSayBye {\n+        @Override\n+        String sayBye();\n+\n+        @Override\n+        default String sayHello() {\n+            return \"Ciao\";\n+        }\n+\n+        static String saySomething() {\n+            return \"blah\";\n+        }\n+    }\n+\n+    @Test\n+    public void testSmalltalk() {\n+        var convo = CompositeProxy.create(Smalltalk.class);\n+        assertEquals(\"Hello\", convo.sayHello());\n+        assertEquals(\"Bye\", convo.sayBye());\n+    }\n+\n+    @Test\n+    public void testConvo() {\n+        final var otherThings = \"How is your day?\";\n+        var convo = CompositeProxy.create(Convo.class,\n+                new Smalltalk() {}, new ConvoMixin.Stub(otherThings));\n+        assertEquals(\"Hello\", convo.sayHello());\n+        assertEquals(\"Bye\", convo.sayBye());\n+        assertEquals(otherThings, convo.sayThings());\n+    }\n+\n+    @Test\n+    public void testConvoWithDuke() {\n+        final var otherThings = \"How is your day?\";\n+        var convo = CompositeProxy.create(Convo.class, new Smalltalk() {\n+            @Override\n+            public String sayHello() {\n+                return \"Hello, Duke\";\n+            }\n+        }, new ConvoMixin.Stub(otherThings));\n+        assertEquals(\"Hello, Duke\", convo.sayHello());\n+        assertEquals(\"Bye\", convo.sayBye());\n+        assertEquals(otherThings, convo.sayThings());\n+    }\n+\n+    @Test\n+    public void testConvoWithCustomSayBye() {\n+        var mixin = new ConvoMixinWithOverrideSayBye.Stub(\"How is your day?\", \"See you\");\n+\n+        var convo = CompositeProxy.create(ConvoWithOverrideSayBye.class, new Smalltalk() {}, mixin);\n+\n+        var expectedConvo = new ConvoWithOverrideSayBye() {\n+            @Override\n+            public String sayBye() {\n+                return mixin.sayBye;\n+            }\n+\n+            @Override\n+            public String sayThings() {\n+                return mixin.sayThings;\n+            }\n+        };\n+\n+        assertEquals(expectedConvo.sayHello(), convo.sayHello());\n+        assertEquals(expectedConvo.sayBye(), convo.sayBye());\n+        assertEquals(expectedConvo.sayThings(), convo.sayThings());\n+    }\n+\n+    @Test\n+    public void testConvoWithCustomSayHelloAndSayBye() {\n+        var mixin = new ConvoMixinWithOverrideSayBye.Stub(\"How is your day?\", \"See you\");\n+\n+        var convo = CompositeProxy.create(ConvoWithDefaultSayHelloWithOverrideSayBye.class, new Smalltalk() {}, mixin);\n+\n+        var expectedConvo = new ConvoWithDefaultSayHelloWithOverrideSayBye() {\n+            @Override\n+            public String sayBye() {\n+                return mixin.sayBye;\n+            }\n+\n+            @Override\n+            public String sayThings() {\n+                return mixin.sayThings;\n+            }\n+        };\n+\n+        assertEquals(\"Ciao\", expectedConvo.sayHello());\n+        assertEquals(expectedConvo.sayHello(), convo.sayHello());\n+        assertEquals(expectedConvo.sayBye(), convo.sayBye());\n+        assertEquals(expectedConvo.sayThings(), convo.sayThings());\n+    }\n+\n+    @Test\n+    public void testInherited() {\n+        interface Base {\n+            String doSome();\n+        }\n+\n+        interface Next extends Base {\n+            String doNext();\n+        }\n+\n+        interface Last extends Next {\n+        }\n+\n+        var last = CompositeProxy.create(Last.class, new Next() {\n+            @Override\n+            public String doNext() {\n+                return \"next\";\n+            }\n+\n+            @Override\n+            public String doSome() {\n+                return \"some\";\n+            }\n+        });\n+\n+        assertEquals(\"next\", last.doNext());\n+        assertEquals(\"some\", last.doSome());\n+    }\n+\n+    @Test\n+    public void testNestedProxy() {\n+        interface AddM {\n+            String m();\n+        }\n+\n+        interface AddN {\n+            String n();\n+        }\n+\n+        interface A extends AddM {\n+        }\n+\n+        interface B extends AddN  {\n+        }\n+\n+        interface C extends A, B {\n+        }\n+\n+        var proxyA = CompositeProxy.create(A.class, new AddM() {\n+            @Override\n+            public String m() {\n+                return \"hello\";\n+            }\n+        });\n+        var proxyB = CompositeProxy.create(B.class, new AddN() {\n+            @Override\n+            public String n() {\n+                return \"bye\";\n+            }\n+\n+        });\n+        var proxyC = CompositeProxy.create(C.class, proxyA, proxyB);\n+\n+        assertEquals(\"hello\", proxyC.m());\n+        assertEquals(\"bye\", proxyC.n());\n+    }\n+\n+    @Test\n+    public void testComposite() {\n+        interface A {\n+            String sayHello();\n+            String sayBye();\n+            default String talk() {\n+                return String.join(\",\", sayHello(), sayBye());\n+            }\n+        }\n+\n+        interface B extends A {\n+            @Override\n+            default String sayHello() {\n+                return \"ciao\";\n+            }\n+        }\n+\n+        var proxy = CompositeProxy.create(B.class, new A() {\n+            @Override\n+            public String sayHello() {\n+                return \"hello\";\n+            }\n+\n+            @Override\n+            public String sayBye() {\n+                return \"bye\";\n+            }\n+        });\n+\n+        assertEquals(\"ciao,bye\", proxy.talk());\n+    }\n+\n+    @ParameterizedTest\n+    @ValueSource(booleans = {true, false})\n+    public void testBasicObjectMethods(boolean withOverrides) {\n+        interface A {\n+            default void foo() {}\n+        }\n+\n+        interface B {\n+            default void bar() {}\n+        }\n+\n+        interface C extends A, B {\n+        }\n+\n+        final A aImpl;\n+        final B bImpl;\n+\n+        if (withOverrides) {\n+            aImpl = new A() {\n+                @Override\n+                public String toString() {\n+                    return \"theA\";\n+                }\n+\n+                @Override\n+                public boolean equals(Object other) {\n+                    return true;\n+                }\n+\n+                @Override\n+                public int hashCode() {\n+                    return 7;\n+                }\n+            };\n+\n+            bImpl = new B() {\n+                @Override\n+                public String toString() {\n+                    return \"theB\";\n+                }\n+            };\n+        } else {\n+            aImpl = new A() {};\n+            bImpl = new B() {};\n+        }\n+\n+        var proxy = CompositeProxy.create(C.class, aImpl, bImpl);\n+        var proxy2 = CompositeProxy.create(C.class, aImpl, bImpl);\n+\n+        assertNotEquals(proxy.toString(), proxy2.toString());\n+        assertNotEquals(proxy.hashCode(), proxy2.hashCode());\n+        assertFalse(proxy.equals(proxy2));\n+        assertFalse(proxy2.equals(proxy));\n+        assertTrue(proxy.equals(proxy));\n+        assertTrue(proxy2.equals(proxy2));\n+    }\n+\n+    @Test\n+    public void testJavadocExample() {\n+        interface Sailboat {\n+            default void trimSails() {}\n+        }\n+\n+        interface WithMain {\n+            void trimMain();\n+        }\n+\n+        interface WithJib {\n+            void trimJib();\n+        }\n+\n+        interface Sloop extends Sailboat, WithMain, WithJib {\n+            @Override\n+            public default void trimSails() {\n+                System.out.println(\"On the sloop:\");\n+                trimMain();\n+                trimJib();\n+            }\n+        }\n+\n+        interface Catboat extends Sailboat, WithMain {\n+            @Override\n+            public default void trimSails() {\n+                System.out.println(\"On the catboat:\");\n+                trimMain();\n+            }\n+        }\n+\n+        final var withMain = new WithMain() {\n+            @Override\n+            public void trimMain() {\n+                System.out.println(\"  trim the main\");\n+            }\n+        };\n+\n+        final var withJib = new WithJib() {\n+            @Override\n+            public void trimJib() {\n+                System.out.println(\"  trim the jib\");\n+            }\n+        };\n+\n+        Sloop sloop = CompositeProxy.create(Sloop.class, new Sailboat() {}, withMain, withJib);\n+\n+        Catboat catboat = CompositeProxy.create(Catboat.class, new Sailboat() {}, withMain);\n+\n+        sloop.trimSails();\n+        catboat.trimSails();\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/util\/CompositeProxyTest.java","additions":374,"deletions":0,"binary":false,"changes":374,"status":"added"},{"patch":"@@ -149,3 +149,4 @@\n-                        JPackageUserScript.POST_IMAGE.create(cmd, List.of(\n-                                WinGlobals.JS_SHELL.expr(),\n-                                WinGlobals.JS_FS.expr(),\n+                        final List<String> script = new ArrayList<>();\n+                        script.addAll(WinGlobals.JS_SHELL.expr());\n+                        script.addAll(WinGlobals.JS_FS.expr());\n+                        script.addAll(List.of(\n@@ -156,0 +157,1 @@\n+                        JPackageUserScript.POST_IMAGE.create(cmd, script);\n@@ -206,1 +208,1 @@\n-                .withEmptyDirectory(\"..\/packages\")\n+                .withNonexistantPath(\"..\/packages\")\n","filename":"test\/jdk\/tools\/jpackage\/share\/PostImageScriptTest.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -85,0 +85,5 @@\n+        Files.createDirectories(runtimePath.resolve(\"foo\/bar\/src.zip\"));\n+        Files.createFile(runtimePath.resolve(\"foo\/jmods\"));\n+        Files.createFile(runtimePath.resolve(\"foo\/src.zip\"));\n+        Files.createDirectories(runtimePath.resolve(\"custom\/jmods\"));\n+\n@@ -91,0 +96,4 @@\n+        TKit.assertDirectoryExists(appRuntimeDir.resolve(\"foo\/bar\/src.zip\"));\n+        TKit.assertDirectoryExists(appRuntimeDir.resolve(\"custom\/jmods\"));\n+        TKit.assertFileExists(appRuntimeDir.resolve(\"foo\/jmods\"));\n+        TKit.assertFileExists(appRuntimeDir.resolve(\"foo\/src.zip\"));\n","filename":"test\/jdk\/tools\/jpackage\/share\/RuntimeImageTest.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -604,0 +604,48 @@\n+\n+        \/\/private method with parameter, usable method without parameter:\n+        createJar(new File(\"some.jar\"), new File(\"Foo\"),\n+            \"private static void main(String[] args){}\",\n+            \"void main() {System.out.println(\\\"THE_CHOSEN_ONE\\\");}\");\n+        tr = doExec(javaCmd, \"-jar\", \"some.jar\");\n+        tr.contains(\"THE_CHOSEN_ONE\");\n+        if (!tr.testStatus)\n+            System.out.println(tr);\n+\n+        createJar(new File(\"some.jar\"), new File(\"Foo\"),\n+            \"private void main(String[] args){}\",\n+            \"void main() {System.out.println(\\\"THE_CHOSEN_ONE\\\");}\");\n+        tr = doExec(javaCmd, \"-jar\", \"some.jar\");\n+        tr.contains(\"THE_CHOSEN_ONE\");\n+        if (!tr.testStatus)\n+            System.out.println(tr);\n+\n+        \/\/method with a wrong return type with parameter, usable method without parameter:\n+        createJar(new File(\"some.jar\"), new File(\"Foo\"),\n+            \"public static int main(String[] args){ return -1; }\",\n+            \"void main() {System.out.println(\\\"THE_CHOSEN_ONE\\\");}\");\n+        tr = doExec(javaCmd, \"-jar\", \"some.jar\");\n+        tr.contains(\"THE_CHOSEN_ONE\");\n+        if (!tr.testStatus)\n+            System.out.println(tr);\n+\n+        createJar(new File(\"some.jar\"), new File(\"Foo\"),\n+            \"public int main(String[] args){ return -1; }\",\n+            \"void main() {System.out.println(\\\"THE_CHOSEN_ONE\\\");}\");\n+        tr = doExec(javaCmd, \"-jar\", \"some.jar\");\n+        tr.contains(\"THE_CHOSEN_ONE\");\n+        if (!tr.testStatus)\n+            System.out.println(tr);\n+\n+        \/\/ instance method abstract class:\n+        createJarForSource(null, new File(\"some.jar\"), new File(\"Foo\"),\n+                \"\"\"\n+                public abstract class Foo {\n+                    void main() {\n+                        System.out.println(\"Cannot be called.\");\n+                    }\n+                }\n+                \"\"\");\n+        tr = doExec(javaCmd, \"-jar\", \"some.jar\");\n+        tr.contains(\"Error: abstract class Foo can not be instantiated\");\n+        if (!tr.testStatus)\n+            System.out.println(tr);\n","filename":"test\/jdk\/tools\/launcher\/Arrrghs.java","additions":49,"deletions":1,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,1 @@\n+import java.util.stream.Collectors;\n@@ -67,0 +68,1 @@\n+    static final String NL = System.getProperty(\"line.separator\");\n@@ -290,0 +292,10 @@\n+        String source =\n+                Arrays.stream(mainDefs != null ? mainDefs : new String[0])\n+                      .collect(Collectors.joining(NL,\n+                                                  \"public class Foo {\" + NL,\n+                                                  \"}\" + NL));\n+        createJarForSource(mEntry, jarName, mainClass, source);\n+    }\n+\n+    static void createJarForSource(String mEntry, File jarName, File mainClass,\n+            String source) throws FileNotFoundException {\n@@ -294,7 +306,1 @@\n-            ps.println(\"public class Foo {\");\n-            if (mainDefs != null) {\n-                for (String x : mainDefs) {\n-                    ps.println(x);\n-                }\n-            }\n-            ps.println(\"}\");\n+            ps.println(source);\n","filename":"test\/jdk\/tools\/launcher\/TestHelper.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,2 @@\n-            if (tr.contains(\"-J\")) {\n+            if (tr.contains(\" -J-\")) {\n+                System.err.println(tr);\n","filename":"test\/jdk\/tools\/launcher\/ToolsOpts.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8266666 8281969 8319339\n+ * @bug 8266666 8281969 8319339 8338833\n@@ -209,0 +209,44 @@\n+    \/*\n+     * Make sure an error is generated for links with invalid reference.\n+     *\/\n+    @Test\n+    public void testLinkReferenceNotFound(Path base) throws Exception {\n+        Path srcDir = base.resolve(\"src\");\n+        Path outDir = base.resolve(\"out\");\n+\n+        new ClassBuilder(tb, \"pkg.A\")\n+                .setModifiers(\"public\", \"class\")\n+                .addMembers(\n+                        ClassBuilder.MethodBuilder\n+                                .parse(\"public void inline() { }\")\n+                                .setComments(\"\"\"\n+                                    First sentence.\n+                                    {@snippet :\n+                                        First line  \/\/ @link substring=\"First\" target=\"String\"\n+                                        Second line \/\/ @link substring=\"Second\" target=\"StringReader\"\n+                                    }\n+                                \"\"\"))\n+                .write(srcDir);\n+\n+        javadoc(\"-d\", outDir.toString(),\n+                \"-sourcepath\", srcDir.toString(),\n+                \"pkg\");\n+\n+        checkExit(Exit.ERROR);\n+        checkOutput(Output.OUT, false,\n+                \"\"\"\n+                        error: reference not found: String\n+                        \"\"\");\n+        checkOutput(Output.OUT, true,\n+                \"\"\"\n+                        A.java:5: error: reference not found: StringReader\n+                        \"\"\");\n+        checkOutput(\"pkg\/A.html\", true,\n+                \"\"\"\n+                        <details class=\"invalid-tag\">\n+                        <summary>invalid reference<\/summary>\n+                        <pre><code>Second<\/code><\/pre>\n+                        <\/details>\"\"\");\n+        checkNoCrashes();\n+    }\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java","additions":46,"deletions":2,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8356165\n+ * @summary Check user input works properly\n+ * @modules\n+ *     jdk.compiler\/com.sun.tools.javac.api\n+ *     jdk.compiler\/com.sun.tools.javac.main\n+ *     jdk.jshell\/jdk.internal.jshell.tool:open\n+ *     jdk.jshell\/jdk.internal.jshell.tool.resources:open\n+ *     jdk.jshell\/jdk.jshell:open\n+ * @library \/tools\/lib\n+ * @build toolbox.ToolBox toolbox.JarTask toolbox.JavacTask\n+ * @build Compiler UITesting\n+ * @compile InputUITest.java\n+ * @run testng InputUITest\n+ *\/\n+\n+import java.util.function.Function;\n+import org.testng.annotations.Test;\n+\n+@Test\n+public class InputUITest extends UITesting {\n+\n+    static final String LINE_SEPARATOR = System.getProperty(\"line.separator\");\n+    static final String LINE_SEPARATOR_ESCAPED = LINE_SEPARATOR.replace(\"\\n\", \"\\\\n\")\n+                                                               .replace(\"\\r\", \"\\\\r\");\n+\n+    public InputUITest() {\n+        super(true);\n+    }\n+\n+    public void testUserInputWithSurrogates() throws Exception {\n+        Function<Integer, String> genSnippet =\n+                realCharsToRead -> \"new String(System.in.readNBytes(\" +\n+                                   (realCharsToRead + LINE_SEPARATOR.length()) +\n+                                   \"))\\n\";\n+        doRunTest((inputSink, out) -> {\n+            inputSink.write(genSnippet.apply(4) + \"\\uD83D\\uDE03\\n\");\n+            waitOutput(out, patternQuote(\"\\\"\\uD83D\\uDE03\" + LINE_SEPARATOR_ESCAPED + \"\\\"\"));\n+            inputSink.write(genSnippet.apply(1) + \"\\uD83D\\n\");\n+            waitOutput(out, patternQuote(\"\\\"?\" + LINE_SEPARATOR_ESCAPED + \"\\\"\"));\n+            inputSink.write(genSnippet.apply(1) + \"\\uDE03\\n\");\n+            waitOutput(out, patternQuote(\"\\\"?\" + LINE_SEPARATOR_ESCAPED + \"\\\"\"));\n+        }, false);\n+    }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/jdk\/jshell\/InputUITest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import java.io.ByteArrayOutputStream;\n@@ -65,0 +66,4 @@\n+        doRunTest(test, true);\n+    }\n+\n+    protected void doRunTest(Test test, boolean setUserInput) throws Exception {\n@@ -90,1 +95,1 @@\n-                        .in(input, input)\n+                        .in(input, setUserInput ? input : null)\n","filename":"test\/langtools\/jdk\/jshell\/UITesting.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.annotation.*;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE_USE)\n+public @interface Anno {}\n","filename":"test\/langtools\/tools\/javac\/8351232\/Anno.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+public class Cls<K, V> {\n+\n+  public static Cls<Object, Object> newInstance() {\n+    return new Cls<>();\n+  }\n+\n+  public <K1 extends K, V1 extends @Anno V> V1 doSomething(Intf1 arg) {\n+      throw new UnsupportedOperationException();\n+  }\n+\n+  public <K1 extends K, V1 extends @Anno V> V1 doSomething(Intf2 arg) {\n+      throw new UnsupportedOperationException();\n+  }\n+}\n","filename":"test\/langtools\/tools\/javac\/8351232\/Cls.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+public interface Intf1 {\n+\n+    Object foo(Object bar);\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/8351232\/Intf1.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+public interface Intf2 extends Intf1 {\n+}\n","filename":"test\/langtools\/tools\/javac\/8351232\/Intf2.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+public class TestClass {\n+  void test() {\n+    Cls.newInstance()\n+        .<Void, Void>doSomething(\n+            image -> {\n+              return;\n+            });\n+  }\n+}\n","filename":"test\/langtools\/tools\/javac\/8351232\/TestClass.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8351232\n+ * @summary NPE when type annotation missing on classpath\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *\/\n+\n+import java.io.File;\n+import com.sun.tools.javac.api.*;\n+\n+public class TypeAnnotationSymNullTest {\n+    public static void main(String[] args) {\n+        File testSrc = new File(System.getProperty(\"test.src\", \".\"));\n+\n+        File ANNO = new File(\"ANNO\");\n+        ANNO.mkdirs();\n+\n+        \/\/ first, compile Anno to the ANNO directory\n+        compile(0, \"-d\", ANNO.getPath(), new File(testSrc, \"Anno.java\").getPath());\n+\n+        File CLP = new File(\"CLP\");\n+        CLP.mkdirs();\n+\n+        \/\/ second, compile Cls, Intf1 and Intf2 to the CLP directory with ANNO on classpath\n+        compile(0, \"-cp\", ANNO.getPath(), \"-d\", CLP.getPath(), new File(testSrc, \"Cls.java\").getPath(),\n+                                                            new File(testSrc, \"Intf1.java\").getPath(),\n+                                                            new File(testSrc, \"Intf2.java\").getPath());\n+\n+        \/\/ now compile TestClass with CLP on classpath (but Anno.class missing)\n+        \/\/ compilation fails (exit code 1) but should not get NPE from compiler (exit code 4)\n+        compile(1, \"-cp\", CLP.getPath(), \"-d\", \".\", new File(testSrc, \"TestClass.java\").getPath());\n+    }\n+\n+    private static void compile(int expectedExit, String... args) {\n+        int exitCode = JavacTool.create().run(null, null, null, args);\n+        if (exitCode != expectedExit) {\n+            throw new AssertionError(\"test compilation failed with exit code: \" + exitCode);\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/8351232\/TypeAnnotationSymNullTest.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -21,1 +21,0 @@\n-SuperInitFails.java:185:28: compiler.err.cant.ref.before.ctor.called: this\n@@ -34,1 +33,1 @@\n-33 errors\n+32 errors\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/SuperInitFails.out","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 8194743 8345438 8356551\n+ * @bug 8194743 8345438 8356551 8349754\n@@ -504,0 +504,11 @@\n+    \/\/ Test for JDK-8349754\n+    public static class Test24 {\n+        private int i;\n+        class Sub extends Test24 {\n+            Sub() {\n+                i = 3;      \/\/ here \"i\" refers to \"Test23.this.i\", not \"this.i\" - so it's OK\n+                super();\n+            }\n+        }\n+    }\n+\n@@ -550,0 +561,1 @@\n+        new Test24();\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/SuperInitGood.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8347530\n+ * @summary Improve error message with invalid permits clauses\n+ * @compile\/fail\/ref=T8347530.out -XDrawDiagnostics T8347530.java\n+ *\/\n+\n+class T8347530 {\n+    \/\/ sealed interfaces\n+    sealed interface A0 permits B0 {}\n+    class B0 {}     \/\/ class {0} must implement sealed interface\n+\n+    sealed interface A1 permits B1 {}\n+    record B1() {}  \/\/ record {0} must implement sealed interface\n+\n+    sealed interface A2 permits B2 {}\n+    enum B2 {}      \/\/ enum {0} must implement sealed interface\n+\n+    sealed interface A3 permits B3 {}\n+    interface B3 {} \/\/ interface {0} must implement sealed interface\n+\n+    \/\/ sealed classes\n+    sealed class C0 permits S0 {}\n+    class S0 {}     \/\/ class {0} must extend sealed class\n+\n+    \/\/ record cannot extend other classes in general\n+    \/\/ enums cannot extend other classes in general\n+    \/\/ interfaces cannot extend other classes in general\n+}\n","filename":"test\/langtools\/tools\/javac\/T8347530.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"},{"patch":"@@ -0,0 +1,6 @@\n+T8347530.java:10:33: compiler.err.invalid.permits.clause: (compiler.misc.doesnt.implement.sealed: kindname.class, T8347530.B0)\n+T8347530.java:13:33: compiler.err.invalid.permits.clause: (compiler.misc.doesnt.implement.sealed: kindname.record, T8347530.B1)\n+T8347530.java:16:33: compiler.err.invalid.permits.clause: (compiler.misc.doesnt.implement.sealed: kindname.enum, T8347530.B2)\n+T8347530.java:19:33: compiler.err.invalid.permits.clause: (compiler.misc.doesnt.implement.sealed: kindname.interface, T8347530.B3)\n+T8347530.java:23:29: compiler.err.invalid.permits.clause: (compiler.misc.doesnt.extend.sealed: T8347530.S0)\n+5 errors\n","filename":"test\/langtools\/tools\/javac\/T8347530.out","additions":6,"deletions":0,"binary":false,"changes":6,"status":"added"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.stream.Stream;\n@@ -178,8 +179,1 @@\n-                boolean found = false;\n-\n-                for (LintCategory lc : LintCategory.values()) {\n-                    if (option.equals(lc.option))\n-                        found = true;\n-                }\n-\n-                if (found)\n+                if (LintCategory.options().contains(option))\n","filename":"test\/langtools\/tools\/javac\/diags\/CheckResourceKeys.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-\/\/ options: -Xlint:synchronization\n+\/\/ options: -Xlint:identity\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/AttemptToSynchronizeOnInstanceOfVbc.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+\/\/ options: -Xlint:identity --add-exports java.base\/jdk.internal=ALL-UNNAMED\n+\n+class RequiresIdentity<@jdk.internal.RequiresIdentity T> {\n+    RequiresIdentity<Integer> field; \/\/ should warn\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/RequiresIdentity.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.invalid.permits.clause\n+\/\/ key: compiler.misc.doesnt.implement.sealed\n+\n+sealed interface A3 permits B3 {}\n+interface B3 {}\n+\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/SubtypeDoesntImplementSealed.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8325859\n+ * @summary potential information loss during type inference\n+ * @modules jdk.compiler\/com.sun.tools.javac.util\n+ *\/\n+\n+import com.sun.tools.javac.util.Assert;\n+\n+public class SupplementaryInferenceContextTest {\n+    static String result;\n+    public static void main(String... args) {\n+        runT(() -> supplyNull(Integer.valueOf(1)));\n+        Assert.check(result.equals(\"class java.lang.Integer\"));\n+    }\n+\n+    static <R, X> R supplyNull(X... varargs) {\n+        result = varargs.getClass().getComponentType().toString();\n+        System.err.println(\"result is =\" + result);\n+        return null;\n+    }\n+\n+    static <T> void runT(Runnable runnable) { runnable.run(); }\n+}\n","filename":"test\/langtools\/tools\/javac\/inference_context_min\/SupplementaryInferenceContextTest.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,2 @@\n- * @bug 8210009 8321739\n- * @summary Source Launcher classloader should support getResource and getResourceAsStream\n+ * @bug 8210009 8321739 8336470\n+ * @summary Source Launcher classloader should support getResource\/s and getResourceAsStream\n@@ -47,1 +47,1 @@\n-    public static void main(String... args) throws Exception {\n+    public static void main(String... args) {\n@@ -52,1 +52,1 @@\n-    void run() throws Exception {\n+    void run() {\n","filename":"test\/langtools\/tools\/javac\/launcher\/GetResourceTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -605,1 +605,1 @@\n-                \"error: can't find main(String[]) method in class: NoMain\");\n+                \"error: can't find main(String[]) or main() method in class: NoMain\");\n@@ -613,1 +613,1 @@\n-                \"error: can't find main(String[]) method in class: BadParams\");\n+                \"error: can't find main(String[]) or main() method in class: BadParams\");\n@@ -621,1 +621,1 @@\n-                \"error: can't find main(String[]) method in class: NotVoid\");\n+                \"error: can't find main(String[]) or main() method in class: NotVoid\");\n@@ -778,0 +778,76 @@\n+    @Test\n+    public void testAbstractClassInstanceMain(Path base) throws IOException {\n+        tb.writeJavaFiles(base,\n+                          \"\"\"\n+                          public abstract class AbstractMain {\n+                              void main(String[] args) {}\n+                          }\n+                          \"\"\");\n+        testError(base.resolve(\"AbstractMain.java\"), \"\",\n+                \"error: abstract class: AbstractMain can not be instantiated\");\n+    }\n+\n+    @Test\n+    public void testWrongMainPrivate(Path base) throws IOException {\n+        tb.writeJavaFiles(base,\n+                          \"\"\"\n+                          public class WrongMainPrivate {\n+                              private static void main(String[] args) {}\n+                              void main() {\n+                                  System.out.println(\"correct\");\n+                              }\n+                          }\n+                          \"\"\");\n+        testSuccess(base.resolve(\"WrongMainPrivate.java\"),\n+                    \"correct\\n\");\n+    }\n+\n+    @Test\n+    public void testWrongMainPrivateInstance(Path base) throws IOException {\n+        tb.writeJavaFiles(base,\n+                          \"\"\"\n+                          public class WrongMainPrivate {\n+                              private void main(String[] args) {}\n+                              void main() {\n+                                  System.out.println(\"correct\");\n+                              }\n+                          }\n+                          \"\"\");\n+        testSuccess(base.resolve(\"WrongMainPrivate.java\"),\n+                    \"correct\\n\");\n+    }\n+\n+    @Test\n+    public void testWrongMainReturnType(Path base) throws IOException {\n+        tb.writeJavaFiles(base,\n+                          \"\"\"\n+                          public class WrongMainReturnType {\n+                              public static int main(String[] args) {\n+                                  return -1;\n+                              }\n+                              void main() {\n+                                  System.out.println(\"correct\");\n+                              }\n+                          }\n+                          \"\"\");\n+        testSuccess(base.resolve(\"WrongMainReturnType.java\"),\n+                    \"correct\\n\");\n+    }\n+\n+    @Test\n+    public void testWrongMainReturnTypeInstance(Path base) throws IOException {\n+        tb.writeJavaFiles(base,\n+                          \"\"\"\n+                          public class WrongMainReturnType {\n+                              public int main(String[] args) {\n+                                  return -1;\n+                              }\n+                              void main() {\n+                                  System.out.println(\"correct\");\n+                              }\n+                          }\n+                          \"\"\");\n+        testSuccess(base.resolve(\"WrongMainReturnType.java\"),\n+                    \"correct\\n\");\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/launcher\/SourceLauncherTest.java","additions":79,"deletions":3,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+Tool\n","filename":"test\/langtools\/tools\/javac\/launcher\/src\/META-INF\/services\/java.util.spi.ToolProvider","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ unnamed package\n+\n+import java.io.PrintWriter;\n+import java.util.spi.ToolProvider;\n+\n+public class Tool implements ToolProvider {\n+    @Override\n+    public String name() {\n+        return \"Tool\";\n+    }\n+\n+    @Override\n+    public int run(PrintWriter out, PrintWriter err, String... args) {\n+        out.println(\"Tool\/out\");\n+        err.println(\"Tool\/err\");\n+        return 0;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/launcher\/src\/Tool.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+import java.util.spi.ToolProvider;\n@@ -46,1 +47,3 @@\n-            new CLTest().run();\n+            var test = new CLTest();\n+            test.loadToolProviderByName(); \/\/ run first to create Tool.class\n+            test.getGetResources();\n@@ -53,1 +56,9 @@\n-    void run() throws Exception {\n+    void loadToolProviderByName() {\n+        ServiceLoader.load(ToolProvider.class).stream()\n+                .map(ServiceLoader.Provider::get)\n+                .filter(toolProvider -> toolProvider.name().equals(\"Tool\"))\n+                .findFirst()\n+                .orElseThrow();\n+    }\n+\n+    void getGetResources() throws Exception {\n@@ -55,0 +66,6 @@\n+            \/\/ scheme -> file:\n+                \"Tool.java\",\n+                \"p\/q\/CLTest.java\",\n+                \"META-INF\/services\/java.util.spi.ToolProvider\",\n+            \/\/ scheme -> sourcelauncher-memoryclassloaderNNN:\n+                \"Tool.class\",\n@@ -58,0 +75,1 @@\n+            \/\/ scheme -> jrt:\n@@ -59,0 +77,1 @@\n+            \/\/ no scheme applicable\n@@ -105,0 +124,8 @@\n+            if (name.contains(\"META-INF\")) {\n+                if (list.size() == 0) {\n+                    error(\"resource not found: \" + name);\n+                }\n+                \/\/ one or more resources found, as expected\n+                return;\n+            }\n+\n@@ -153,0 +180,3 @@\n+        if (!name.endsWith(\".class\")) {\n+            return; \/\/ ignore non-class resources\n+        }\n","filename":"test\/langtools\/tools\/javac\/launcher\/src\/p\/q\/CLTest.java","additions":33,"deletions":3,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+ * @compile\/fail\/ref=ExternalAbuseOfVbc.out -XDrawDiagnostics -Werror -Xlint:identity ExternalAbuseOfVbc.java\n@@ -9,1 +10,2 @@\n- * @compile\/ref=LintModeOffAbuseOfVbc.out -XDrawDiagnostics -Werror -Xlint:-synchronization ExternalAbuseOfVbc.java\n+ * @compile\/fail\/ref=ExternalAbuseOfVbc.out --release 16 -XDrawDiagnostics -Werror -Xlint:identity ExternalAbuseOfVbc.java\n+ * @compile\/ref=LintModeOffAbuseOfVbc.out -XDrawDiagnostics -Werror -Xlint:-synchronization,-identity ExternalAbuseOfVbc.java\n","filename":"test\/langtools\/tools\/javac\/lint\/ExternalAbuseOfVbc.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-ExternalAbuseOfVbc.java:19:13: compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\n+ExternalAbuseOfVbc.java:21:13: compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\n","filename":"test\/langtools\/tools\/javac\/lint\/ExternalAbuseOfVbc.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,21 @@\n+\/* \/nodynamiccopyright\/ *\/\n+\n+package java.lang;\n+\n+public class RequiresIdentityHelper<@jdk.internal.RequiresIdentity T> {\n+    public RequiresIdentityHelper() {}\n+    public <@jdk.internal.RequiresIdentity TT> RequiresIdentityHelper(@jdk.internal.RequiresIdentity Object o) {}\n+\n+    class RequiresIdentity2<TT> {\n+        public RequiresIdentity2() {}\n+        public void foo(@jdk.internal.RequiresIdentity Object o) {}\n+        public void bar(@jdk.internal.RequiresIdentity Object... o) {}\n+        public void gg(@jdk.internal.RequiresIdentity TT ri) {}\n+    }\n+\n+    interface RequiresIdentityInt<@jdk.internal.RequiresIdentity T> {}\n+\n+    interface MyIntFunction<@jdk.internal.RequiresIdentity R> {\n+        R apply(int value);\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lint\/RequiresIdentityHelper.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8354556\n+ * @summary Expand value-based class warnings to java.lang.ref API\n+ * @compile --patch-module java.base=${test.src} RequiresIdentityHelper.java\n+ * @compile\/fail\/ref=RequiresIdentityTest.out --patch-module java.base=${test.src} -Werror -XDrawDiagnostics -Xlint:identity RequiresIdentityTest.java\n+ * @compile\/fail\/ref=RequiresIdentityTest.out --patch-module java.base=${test.src} -Werror -XDrawDiagnostics -Xlint:synchronization RequiresIdentityTest.java\n+ * @compile\/ref=RequiresIdentityTest2.out --patch-module java.base=${test.src} -Werror -XDrawDiagnostics -Xlint:-identity RequiresIdentityTest.java\n+ * @compile\/ref=RequiresIdentityTest2.out --patch-module java.base=${test.src} -Werror -XDrawDiagnostics -Xlint:-synchronization RequiresIdentityTest.java\n+ * @compile\/fail\/ref=RequiresIdentityTest.out --patch-module java.base=${test.src} -Werror -XDrawDiagnostics -Xlint:identity RequiresIdentityHelper.java RequiresIdentityTest.java\n+ * @compile\/fail\/ref=RequiresIdentityTest.out --patch-module java.base=${test.src} -Werror -XDrawDiagnostics -Xlint:synchronization RequiresIdentityHelper.java RequiresIdentityTest.java\n+ * @compile\/ref=RequiresIdentityTest2.out --patch-module java.base=${test.src} -Werror -XDrawDiagnostics -Xlint:-identity RequiresIdentityHelper.java RequiresIdentityTest.java\n+ * @compile\/ref=RequiresIdentityTest2.out --patch-module java.base=${test.src} -Werror -XDrawDiagnostics -Xlint:-synchronization RequiresIdentityHelper.java RequiresIdentityTest.java\n+ *\/\n+\n+package java.lang;\n+\n+@SuppressWarnings(\"deprecation\")\n+public class RequiresIdentityTest extends RequiresIdentityHelper<Integer> \/\/ should warn\n+                                  implements RequiresIdentityHelper.RequiresIdentityInt<Integer> { \/\/ should warn\n+    class Box<T> {}\n+\n+    RequiresIdentityHelper<Integer> field;                      \/\/ should warn\n+    RequiresIdentityHelper<Integer>[] field2;                   \/\/ should warn\n+    Box<? extends RequiresIdentityHelper<Integer>> field3;      \/\/ should warn\n+    Box<? super RequiresIdentityHelper<Integer>> field4;        \/\/ should warn\n+    RequiresIdentityHelper<Integer> field5 = new RequiresIdentityHelper<Integer>(); \/\/ two warnings here\n+\n+    public RequiresIdentityTest() {}\n+    public RequiresIdentityTest(Integer i) {\n+        super(i); \/\/ should warn\n+    }\n+\n+    void test(RequiresIdentity2<Object> ri, Integer i) { \/\/ warn on the first argument due to its enclosing type: RequiresIdentityHelper<Integer>\n+        RequiresIdentityHelper<Integer> localVar;     \/\/ should warn\n+        RequiresIdentityHelper<Integer>[] localVar2;  \/\/ should warn\n+        \/\/ there should be warnings for the invocations below\n+        ri.foo(i);\n+        ri.bar(i,  \/\/ warn here\n+               i); \/\/ and here too\n+        ri.gg(i);\n+    }\n+\n+    interface I extends RequiresIdentityHelper.RequiresIdentityInt<Integer> {} \/\/ should warn\n+\n+    void m(Object o) {\n+        RequiresIdentityHelper<?> ri = (RequiresIdentityHelper<Integer>) o; \/\/ should warn\n+    }\n+\n+    RequiresIdentityHelper<Integer> test() { \/\/ warn\n+        return null;\n+    }\n+\n+    \/\/ two warns here one for the type parameter and one for the result type\n+    <T extends RequiresIdentityHelper<Integer>> T test2() { return null; }\n+\n+    class SomeClass<T extends RequiresIdentityHelper<Integer>> {} \/\/ warn\n+\n+    record R(RequiresIdentityHelper<Integer> c) {} \/\/ warn\n+    record RR(R r) {}\n+\n+    void m1(RequiresIdentityInt<Integer> ri) { \/\/ warn here\n+        if (ri instanceof RequiresIdentityInt<Integer> rii) {} \/\/ and here\n+    }\n+\n+    void m2(RR rr) {\n+        if (rr instanceof RR(R(RequiresIdentityHelper<Integer> rii))) {}\n+    }\n+\n+    <T> void m3() {}\n+    void m4() {\n+        this.<RequiresIdentityHelper<Integer>>m3();\n+    }\n+\n+    MyIntFunction<Integer> field6 = Integer::new; \/\/ two warnings here\n+\n+    class Run<T> {\n+        public <@jdk.internal.RequiresIdentity K> void run() {}\n+    }\n+    void m5(Runnable r) {}\n+    void m6() {\n+        m5(new Run<Object>()::<Integer>run);\n+    }\n+\n+    void m7(Integer i, Object o) {\n+        RequiresIdentityHelper<Object> var1 = new <Object>RequiresIdentityHelper<Object>(i);\n+        RequiresIdentityHelper<Object> var2 = new <Integer>RequiresIdentityHelper<Object>(o);\n+        RequiresIdentityHelper<Integer> var3 = new <Object>RequiresIdentityHelper<Integer>(o);\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lint\/RequiresIdentityTest.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+RequiresIdentityTest.java:19:65: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:20:88: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:23:27: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:24:36: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:25:8: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:26:8: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:27:72: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:27:27: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:31:15: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:34:32: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:35:31: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:36:40: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:38:16: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:39:16: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:40:16: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:41:15: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:44:67: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:47:63: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:50:27: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:55:6: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:55:49: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:57:21: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:59:36: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:62:32: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:63:46: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:67:54: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:72:37: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:75:37: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:75:18: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:82:32: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:86:90: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:87:52: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:88:82: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:88:31: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+- compiler.err.warnings.and.werror\n+- compiler.note.unchecked.filename: RequiresIdentityTest.java\n+- compiler.note.unchecked.recompile\n+1 error\n+34 warnings\n","filename":"test\/langtools\/tools\/javac\/lint\/RequiresIdentityTest.out","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+- compiler.note.unchecked.filename: RequiresIdentityTest.java\n+- compiler.note.unchecked.recompile\n","filename":"test\/langtools\/tools\/javac\/lint\/RequiresIdentityTest2.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8348906\n+ * @summary Verify the InstanceOfTree model\n+ *\/\n+\n+import com.sun.source.tree.CompilationUnitTree;\n+import com.sun.source.tree.InstanceOfTree;\n+import com.sun.source.util.JavacTask;\n+import com.sun.source.util.TreeScanner;\n+import java.net.URI;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import javax.tools.JavaCompiler;\n+import javax.tools.JavaFileObject;\n+import javax.tools.SimpleJavaFileObject;\n+import javax.tools.ToolProvider;\n+\n+public class InstanceOfModelTest {\n+    private final JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();\n+\n+    public static void main(String... args) throws Exception {\n+        new InstanceOfModelTest().run();\n+    }\n+\n+    private void run() throws Exception {\n+        JavaFileObject input =\n+                SimpleJavaFileObject.forSource(URI.create(\"mem:\/\/Test.java\"),\n+                                               \"\"\"\n+                                               public class Test {\n+                                                   void test(Object o) {\n+                                                       boolean _ = o instanceof R;\n+                                                       boolean _ = o instanceof R r;\n+                                                       boolean _ = o instanceof R(var v);\n+                                                   }\n+                                                   record R(int i) {}\n+                                               }\n+                                               \"\"\");\n+        JavacTask task =\n+                (JavacTask) compiler.getTask(null, null, null, null, null, List.of(input));\n+        CompilationUnitTree cut = task.parse().iterator().next();\n+\n+        task.analyze();\n+\n+        List<String> instanceOf = new ArrayList<>();\n+\n+        new TreeScanner<Void, Void>() {\n+            @Override\n+            public Void visitInstanceOf(InstanceOfTree node, Void p) {\n+                instanceOf.add(node.getPattern() + \":\" + node.getType());\n+                return super.visitInstanceOf(node, p);\n+            }\n+        }.scan(cut, null);\n+\n+        List<String> expectedInstanceOf = List.of(\n+            \"null:R\",\n+            \"R r:R\",\n+            \"R(int v):null\"\n+        );\n+\n+        if (!Objects.equals(expectedInstanceOf, instanceOf)) {\n+            throw new AssertionError(\"Expected: \" + expectedInstanceOf + \",\\n\" +\n+                                     \"got: \" + instanceOf);\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/InstanceOfModelTest.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -559,1 +559,1 @@\n-                \"Sealed.java:1:66: compiler.err.invalid.permits.clause: (compiler.misc.doesnt.extend.sealed: pkg.Sub2)\",\n+                \"Sealed.java:1:66: compiler.err.invalid.permits.clause: (compiler.misc.doesnt.implement.sealed: kindname.class, pkg.Sub2)\",\n","filename":"test\/langtools\/tools\/javac\/sealed\/SealedDiffConfigurationsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-CyclicHierarchyTest.java:9:37: compiler.err.invalid.permits.clause: (compiler.misc.doesnt.extend.sealed: CyclicHierarchyTest.Add)\n+CyclicHierarchyTest.java:9:37: compiler.err.invalid.permits.clause: (compiler.misc.doesnt.implement.sealed: kindname.class, CyclicHierarchyTest.Add)\n","filename":"test\/langtools\/tools\/javac\/sealed\/erroneous_hierarchy\/CyclicHierarchyTest.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,17 @@\n+# Allow querying of various System properties in @requires clauses\n+requires.extraPropDefns = ..\/jtreg-ext\/requires\/VMProps.java\n+requires.extraPropDefns.bootlibs = ..\/lib\/jdk\/test\/whitebox\n+requires.extraPropDefns.libs = \\\n+    ..\/lib\/jdk\/test\/lib\/Platform.java \\\n+    ..\/lib\/jdk\/test\/lib\/Container.java\n+requires.extraPropDefns.javacOpts = \\\n+    --add-exports java.base\/jdk.internal.foreign=ALL-UNNAMED \\\n+    --add-exports java.base\/jdk.internal.misc=ALL-UNNAMED\n+requires.extraPropDefns.vmOpts = \\\n+    -XX:+UnlockDiagnosticVMOptions \\\n+    -XX:+WhiteBoxAPI \\\n+    --add-exports java.base\/jdk.internal.foreign=ALL-UNNAMED \\\n+    --add-exports java.base\/jdk.internal.misc=ALL-UNNAMED\n+requires.properties= \\\n+    jdk.static\n+\n","filename":"test\/lib-test\/TEST.ROOT","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires !jdk.static\n","filename":"test\/lib-test\/jdk\/test\/lib\/process\/TestNativeProcessBuilder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -245,0 +245,1 @@\n+                                                             \"aot=debug\",\n@@ -267,0 +268,2 @@\n+                                                   \"-Xlog:aot\",\n+                                                   \"-Xlog:aot+heap=error\",\n@@ -268,1 +271,0 @@\n-                                                   \"-Xlog:cds+heap=error\",\n@@ -273,0 +275,1 @@\n+                                                             \"aot=debug\",\n@@ -275,1 +278,1 @@\n-                                                             \"cds+heap=warning\",\n+                                                             \"aot+heap=warning\",\n@@ -285,0 +288,2 @@\n+                                                   \"-Xlog:aot\",\n+                                                   \"-Xlog:aot+heap=error\",\n@@ -286,1 +291,0 @@\n-                                                   \"-Xlog:cds+heap=error\",\n@@ -291,0 +295,1 @@\n+                                                             \"aot=debug\",\n@@ -293,1 +298,1 @@\n-                                                             \"cds+heap=warning\",\n+                                                             \"aot+heap=warning\",\n@@ -334,0 +339,1 @@\n+                                            \"-Xlog:aot\",\n@@ -337,0 +343,1 @@\n+                                                      \"aot=debug\",\n@@ -365,1 +372,1 @@\n-                                                   logToFile(productionRunLog(), \"cds\"));\n+                                                   logToFile(productionRunLog(), \"aot\", \"cds\"));\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSAppTester.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -258,1 +258,1 @@\n-        cmd.add(\"-Xlog:cds,cds+hashtables\");\n+        cmd.add(\"-Xlog:cds,aot+hashtables\");\n@@ -781,2 +781,4 @@\n-    \/\/ Set a list of {jvm, \"java\"} which will be physically copied. If a file needs copied physically, add it to the list.\n-    private static String[] phCopied = {System.mapLibraryName(\"jvm\"), \"java\"};\n+    \/\/ The jvm.cfg file must be copied because the cds\/NonJVMVariantLocation.java\n+    \/\/ test is testing a CDS archive can be loaded from a non-JVM variant directory.\n+    \/\/ Set a list of {jvm, \"java\", \"jvm.cfg\"} which will be physically copied. If a file needs copied physically, add it to the list.\n+    private static String[] phCopied = {System.mapLibraryName(\"jvm\"), \"java\", \"jvm.cfg\"};\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSTestUtils.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ package org.openjdk.bench.java.lang.foreign;\n+\n+import jdk.internal.misc.Unsafe;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Setup;\n+import java.lang.foreign.Arena;\n+import java.lang.foreign.MemorySegment;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@Warmup(iterations = 5, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n+@Measurement(iterations = 10, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n+@State(org.openjdk.jmh.annotations.Scope.Thread)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Fork(value = 3, jvmArgs = {\"--enable-native-access=ALL-UNNAMED\", \"--add-opens=java.base\/jdk.internal.misc=ALL-UNNAMED\"})\n+public class MemorySegmentFillUnsafe {\n+\n+    static final Unsafe UNSAFE = Utils.unsafe;\n+    long src;\n+\n+    @Param({\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"15\", \"16\", \"63\", \"64\", \"255\", \"256\"})\n+    public int size;\n+\n+    @Param({\"true\", \"false\"})\n+    public boolean aligned;\n+\n+    private MemorySegment segment;\n+    private long address;\n+\n+    @Setup\n+    public void setup() throws Throwable {\n+        Arena arena = Arena.global();\n+        long alignment = 1;\n+        \/\/ this complex logic is to ensure that if in the future we decide to batch writes with different\n+        \/\/ batches based on alignment, we would spot it here\n+        if (size == 2 || size == 3) {\n+            alignment = 2;\n+        } else if (size >= 4 && size <= 7) {\n+            alignment = 4;\n+        } else {\n+            alignment = 8;\n+        }\n+        if (aligned) {\n+            segment = arena.allocate(size, alignment);\n+        } else {\n+            \/\/ forcibly misaligned in both address AND size, given that would be the worst case\n+            segment = arena.allocate(size + 1, alignment).asSlice(1);\n+        }\n+        address = segment.address();\n+    }\n+\n+    @Benchmark\n+    public void panama() {\n+        segment.fill((byte) 99);\n+    }\n+\n+    @Benchmark\n+    public void unsafe() {\n+        UNSAFE.setMemory(address, size, (byte) 99);\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySegmentFillUnsafe.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -230,0 +230,19 @@\n+\n+\n+    \/** Invokes the valueOf(double) of BigDecimal with various different values. *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TEST_SIZE)\n+    public void testValueOfWithDouble(Blackhole bh) {\n+        for (double s : doubleInputs) {\n+            bh.consume(BigDecimal.valueOf(s));\n+        }\n+    }\n+\n+    \/** Create BigDecimal from double with Double.toString on different values. *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TEST_SIZE)\n+    public void testValueOfWithDoubleString(Blackhole bh) {\n+        for (double s : doubleInputs) {\n+            bh.consume(new BigDecimal(Double.toString(s)));\n+        }\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigDecimals.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.vm.compiler;\n+\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.*;\n+\n+import java.lang.invoke.*;\n+import java.lang.foreign.*;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+\/**\n+ * The purpose of this benchmark is to see the effect of automatic alignment in auto vectorization.\n+ *\n+ * Note: If you are interested in a nice visualization of load and store misalignment, please look\n+ *       at the benchmark {@link VectorAutoAlignmentVisualization}.\n+ *\/\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@State(Scope.Thread)\n+@Warmup(iterations = 2, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 5, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 1)\n+public abstract class VectorAutoAlignment {\n+    @Param({\"1024\", \"1152\", \"1280\", \"1408\", \"1536\", \"1664\", \"1792\", \"1920\", \"1984\", \"2048\", \"2114\",\n+            \"2176\", \"2304\", \"2432\", \"2560\", \"2688\", \"2816\", \"2944\", \"3072\", \"3200\", \"3328\", \"3456\",\n+            \"3584\", \"3712\", \"3840\", \"3968\", \"4096\", \"4224\", \"4352\", \"4480\"})\n+    public int SIZE;\n+\n+    private MemorySegment ms;\n+\n+    @Setup\n+    public void init() throws Throwable {\n+        long totalSize = 4L * SIZE + 4L * SIZE;\n+        long alignment = 4 * 1024; \/\/ 4k = page size\n+        ms = Arena.ofAuto().allocate(totalSize, alignment);\n+    }\n+\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n+    public void kernel1L1S(int offset_load, int offset_store) {\n+        for (int i = 0; i < SIZE - \/* slack for offset *\/ 32; i++) {\n+            int v = ms.get(ValueLayout.JAVA_INT_UNALIGNED, 4L * i + 4L * offset_load + 4L * SIZE);\n+            ms.set(ValueLayout.JAVA_INT_UNALIGNED, 4L * i + 4L * offset_store, v);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void bench1L1S() throws Throwable {\n+        \/\/ Go over all possible offsets, to get an average performance.\n+        for (int offset_load = 0; offset_load < 32; offset_load++) {\n+            for (int offset_store = 0; offset_store < 32; offset_store++) {\n+                kernel1L1S(offset_load, offset_store);\n+            }\n+        }\n+    }\n+\n+    @Fork(value = 1, jvmArgs = {\n+        \"-XX:-UseSuperWord\"\n+    })\n+    public static class NoVectorization extends VectorAutoAlignment {}\n+\n+    @Fork(value = 1, jvmArgs = {\n+        \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:SuperWordAutomaticAlignment=0\"\n+    })\n+    public static class NoAutoAlign extends VectorAutoAlignment {}\n+\n+    @Fork(value = 1, jvmArgs = {\n+        \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:SuperWordAutomaticAlignment=1\"\n+    })\n+    public static class AlignStore extends VectorAutoAlignment {}\n+\n+\n+    @Fork(value = 1, jvmArgs = {\n+        \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:SuperWordAutomaticAlignment=2\"\n+    })\n+    public static class AlignLoad extends VectorAutoAlignment {}\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorAutoAlignment.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,210 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.vm.compiler;\n+\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.*;\n+\n+import java.lang.invoke.*;\n+import java.lang.foreign.*;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+\/*\n+\n+  The purpose of this benchmark is to see the effect of automatic alignment in auto vectorization.\n+  It is recommended to view the differing results when using SuperWordAutomaticAlignment.\n+\n+  Without automatic alignment, i.e. SuperWordAutomaticAlignment=0, we may get a plot like below, for bench1L1S:\n+\n+  OFFSET_STORE\n+  ^\n+  | ###############|X\n+  | ---------------0-  <--- store aligned\n+  | ##############X|#\n+  | #############X#|#\n+  | ############X##|#\n+  | ###########X###|#\n+  | ##########X####|#\n+  | #########X#####|#\n+  | ########X######|#\n+  | #######X#######|#\n+  | ######X########|#\n+  | #####X#########|#\n+  | ####X##########|#\n+  | ###X###########|#\n+  | ##X############|#\n+  | #X#############|#\n+  | X##############|#\n+    ---OFFSET_LOAD ---->\n+\n+                   ^\n+     loads aligned |\n+\n+  #: lowest performance, both misaligned and also relatively misaligned.\n+  X: low performance, both misaligned but relatively aligned.\n+  |: medium performance, load aligned, store misaligned.\n+  -: good performance, load misaligned, store aligned.\n+  0: extreme performance, load and store aligned.\n+\n+  Why is case \"-\" better than \"|\"? I.e. why are misaligned stores worse than misaligned loads?\n+  Misalignment means that a load or store goes over a cache line, and is split into two loads\n+  or stores. Most CPU's can execute 2 loads and 1 store per cycle, that is at least a partial\n+  explanation why we are more limited on stores than loads.\n+  No splitting, full alignment -> 1 load  and 1 store\n+  Split load, store aligned    -> 2 loads and 1 store\n+  Split store, load aligned    -> 1 load  and 2 stores\n+\n+  The warmup and measurement time is relatively short, but the benchmark already takes 25 min\n+  to go over the whole grid. This leads to some noise, but the pattern is very visible visually.\n+  Hence: this benchmark is more for visualization than for regression testing.\n+  For regression testing, please look at the related VectorAutoAlignment benchmark.\n+\n+  If you want to turn the JMH results into a table, then you may use this Java code.\n+\n+    import java.io.*;\n+    import java.util.ArrayList;\n+\n+    public class Extract {\n+        record Cell(int x, int y, float t) {}\n+\n+        public static void main(String[] args) throws Exception {\n+            String fileName = args[0];\n+            System.out.println(\"Loading from file: \" + fileName);\n+\n+            ArrayList<Cell> cells = new ArrayList<>();\n+\n+            try(BufferedReader br = new BufferedReader(new FileReader(fileName))) {\n+                for(String line; (line = br.readLine()) != null; ) {\n+                    System.out.println(line);\n+                    String[] parts = line.split(\"[ ]+\");\n+                    if (parts.length != 11) { continue; }\n+                    System.out.println(String.join(\" \", parts));\n+                    int x = Integer.parseInt(parts[2]);\n+                    int y = Integer.parseInt(parts[3]);\n+                    float t = Float.parseFloat(parts[7]);\n+                    System.out.println(\"x=\" + x + \", y=\" + y + \", t=\" + t);\n+                    cells.add(new Cell(x, y, t));\n+                }\n+            }\n+\n+            int maxX = cells.stream().mapToInt(c -> c.x).max().getAsInt();\n+            int maxY = cells.stream().mapToInt(c -> c.y).max().getAsInt();\n+            float[][] grid = new float[maxX + 1][maxY + 1];\n+\n+            for (Cell c : cells) {\n+                grid[c.x][c.y] = c.t;\n+            }\n+\n+            for (int x = maxY; x >= 0; x--) {\n+                for (int y = 0; y <= maxY; y++) {\n+                    System.out.print(String.format(\"%.5f \", grid[x][y]));\n+                }\n+                System.out.println();\n+            }\n+            System.out.println(\"x-axis  (->)  LOAD_OFFSET\");\n+            System.out.println(\"y-axis  (up)  STORE_OFFSET\");\n+        }\n+    }\n+\n+ *\/\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@State(Scope.Thread)\n+@Warmup(iterations = 2, time = 200, timeUnit = TimeUnit.MILLISECONDS)\n+@Measurement(iterations = 3, time = 200, timeUnit = TimeUnit.MILLISECONDS)\n+@Fork(value = 1)\n+public class VectorAutoAlignmentVisualization {\n+    @Param({\"2560\"})\n+    public int SIZE;\n+\n+    @Param({  \"0\",   \"1\",   \"2\",   \"3\",   \"4\",   \"5\",   \"6\",   \"7\",   \"8\",   \"9\",\n+             \"10\",  \"11\",  \"12\",  \"13\",  \"14\",  \"15\",  \"16\",  \"17\",  \"18\",  \"19\",\n+             \"20\",  \"21\",  \"22\",  \"23\",  \"24\",  \"25\",  \"26\",  \"27\",  \"28\",  \"29\",\n+             \"30\",  \"31\"})\n+    public int OFFSET_LOAD;\n+\n+    @Param({  \"0\",   \"1\",   \"2\",   \"3\",   \"4\",   \"5\",   \"6\",   \"7\",   \"8\",   \"9\",\n+             \"10\",  \"11\",  \"12\",  \"13\",  \"14\",  \"15\",  \"16\",  \"17\",  \"18\",  \"19\",\n+             \"20\",  \"21\",  \"22\",  \"23\",  \"24\",  \"25\",  \"26\",  \"27\",  \"28\",  \"29\",\n+             \"30\",  \"31\"})\n+    public int OFFSET_STORE;\n+\n+    @Param({\"2000\"})\n+    public int DISTANCE;\n+\n+    \/\/ To get compile-time constants for OFFSET_LOAD, OFFSET_STORE, and DISTANCE\n+    static final MutableCallSite MUTABLE_CONSTANT_OFFSET_LOAD = new MutableCallSite(MethodType.methodType(int.class));\n+    static final MethodHandle MUTABLE_CONSTANT_OFFSET_LOAD_HANDLE = MUTABLE_CONSTANT_OFFSET_LOAD.dynamicInvoker();\n+    static final MutableCallSite MUTABLE_CONSTANT_OFFSET_STORE = new MutableCallSite(MethodType.methodType(int.class));\n+    static final MethodHandle MUTABLE_CONSTANT_OFFSET_STORE_HANDLE = MUTABLE_CONSTANT_OFFSET_STORE.dynamicInvoker();\n+    static final MutableCallSite MUTABLE_CONSTANT_DISTANCE = new MutableCallSite(MethodType.methodType(int.class));\n+    static final MethodHandle MUTABLE_CONSTANT_DISTANCE_HANDLE = MUTABLE_CONSTANT_DISTANCE.dynamicInvoker();\n+\n+    private MemorySegment ms;\n+\n+    @Setup\n+    public void init() throws Throwable {\n+        long totalSize = 4L * SIZE + 4L * DISTANCE;\n+        long alignment = 4 * 1024; \/\/ 4k = page size\n+        ms = Arena.ofAuto().allocate(totalSize, alignment);\n+\n+        MethodHandle offset_load_con = MethodHandles.constant(int.class, OFFSET_LOAD);\n+        MUTABLE_CONSTANT_OFFSET_LOAD.setTarget(offset_load_con);\n+        MethodHandle offset_store_con = MethodHandles.constant(int.class, OFFSET_STORE);\n+        MUTABLE_CONSTANT_OFFSET_STORE.setTarget(offset_store_con);\n+        MethodHandle distance_con = MethodHandles.constant(int.class, DISTANCE);\n+        MUTABLE_CONSTANT_DISTANCE.setTarget(distance_con);\n+    }\n+\n+    @CompilerControl(CompilerControl.Mode.INLINE)\n+    private int offset_load_con() throws Throwable {\n+        return (int) MUTABLE_CONSTANT_OFFSET_LOAD_HANDLE.invokeExact();\n+    }\n+\n+    @CompilerControl(CompilerControl.Mode.INLINE)\n+    private int offset_store_con() throws Throwable {\n+        return (int) MUTABLE_CONSTANT_OFFSET_STORE_HANDLE.invokeExact();\n+    }\n+\n+    @CompilerControl(CompilerControl.Mode.INLINE)\n+    private int distance_con() throws Throwable {\n+        return (int) MUTABLE_CONSTANT_DISTANCE_HANDLE.invokeExact();\n+    }\n+\n+    @Benchmark\n+    public void bench1L1S() throws Throwable {\n+        int offset_load = offset_load_con();\n+        int offset_store = offset_store_con();\n+        int distance = distance_con();\n+        \/\/ Note: the offsets and distance are compile-time constants, which means\n+        \/\/       we can already prove non-aliasing of loads and stores at compile\n+        \/\/       time, which allows vectorization even without any aliasing runtime\n+        \/\/       checks.\n+        for (int i = 0; i < SIZE - \/* slack for offset *\/ 32; i++) {\n+            int v = ms.get(ValueLayout.JAVA_INT_UNALIGNED, 4L * i + 4L * offset_load + 4L * distance);\n+            ms.set(ValueLayout.JAVA_INT_UNALIGNED, 4L * i + 4L * offset_store, v);\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorAutoAlignmentVisualization.java","additions":210,"deletions":0,"binary":false,"changes":210,"status":"added"}]}