{"files":[{"patch":"@@ -112,2 +112,1 @@\n-    --override-methods=summary \\\n-    --no-external-specs-page\n+    --override-methods=summary\n@@ -119,2 +118,1 @@\n-    -html5 -javafx --expand-requires transitive \\\n-    --no-external-specs-page\n+    -html5 -javafx --expand-requires transitive\n","filename":"make\/Docs.gmk","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -287,21 +287,0 @@\n-# Param 1 - dir to find debuginfo files in\n-FindDebuginfoFiles = \\\n-    $(wildcard $(addprefix $1\/*, $(DEBUGINFO_SUFFIXES)) \\\n-        $(addprefix $1\/*\/*, $(DEBUGINFO_SUFFIXES)) \\\n-        $(addprefix $1\/*\/*\/*, $(DEBUGINFO_SUFFIXES)))\n-\n-# Pick the correct debug info files to copy, either zipped or not.\n-ifeq ($(ZIP_EXTERNAL_DEBUG_SYMBOLS), true)\n-  DEBUGINFO_SUFFIXES += .diz\n-else\n-  DEBUGINFO_SUFFIXES := .debuginfo .pdb .map\n-  # On Macosx, if debug symbols have not been zipped, find all files inside *.dSYM\n-  # dirs.\n-  ifeq ($(call isTargetOs, macosx), true)\n-    $(call FillFindCache, \\\n-        $(SUPPORT_OUTPUTDIR)\/modules_libs $(SUPPORT_OUTPUTDIR)\/modules_cmds)\n-    FindDebuginfoFiles = \\\n-        $(if $(wildcard $1), $(call containing, .dSYM\/, $(call FindFiles, $1)))\n-  endif\n-endif\n-\n","filename":"make\/Images.gmk","additions":0,"deletions":21,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"make\/autoconf\/boot-jdk.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -372,0 +372,1 @@\n+        LDFLAGS_STATIC_JDK=\"$LDFLAGS_STATIC_JDK $GCOV_LDFLAGS\"\n@@ -466,0 +467,1 @@\n+        LDFLAGS_STATIC_JDK=\"$LDFLAGS_STATIC_JDK $ASAN_LDFLAGS\"\n@@ -499,0 +501,1 @@\n+        LDFLAGS_STATIC_JDK=\"$LDFLAGS_STATIC_JDK $LSAN_LDFLAGS\"\n@@ -541,0 +544,1 @@\n+        LDFLAGS_STATIC_JDK=\"$LDFLAGS_STATIC_JDK $UBSAN_LDFLAGS\"\n","filename":"make\/autoconf\/jdk-options.m4","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -244,1 +244,1 @@\n-        \"windows-x64\", \"windows-x86\", \"windows-aarch64\",\n+        \"windows-x64\", \"windows-aarch64\",\n@@ -468,9 +468,0 @@\n-        \"windows-x86\": {\n-            target_os: \"windows\",\n-            target_cpu: \"x86\",\n-            build_cpu: \"x64\",\n-            dependencies: [\"devkit\", \"gtest\"],\n-            configure_args: concat(common.configure_args_32bit,\n-                \"--enable-deprecated-ports\"),\n-        },\n-\n@@ -719,4 +710,0 @@\n-        \"windows-x86\": {\n-            platform: \"windows-x86\",\n-            jdk_suffix: \"zip\",\n-        },\n","filename":"make\/conf\/jib-profiles.js","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -176,0 +176,6 @@\n+  else ifeq ($(call isCompiler, clang), true)\n+    JVM_CFLAGS_FEATURES += -flto -fno-strict-aliasing\n+    ifeq ($(call isBuildOs, aix), true)\n+      JVM_CFLAGS_FEATURES += -ffat-lto-objects\n+    endif\n+    JVM_LDFLAGS_FEATURES += $(CXX_O_FLAG_HIGHEST_JVM) -flto -fno-strict-aliasing\n","filename":"make\/hotspot\/lib\/JvmFeatures.gmk","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,0 +92,1 @@\n+        --add-exports java.base\/jdk.internal.classfile.components=ALL-UNNAMED \\\n","filename":"make\/test\/BuildMicrobenchmark.gmk","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -237,2 +237,2 @@\n-  \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n-  ldr(rscratch2, Address(rthread, JavaThread::lock_id_offset()));\n+  \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n+  ldr(rscratch2, Address(rthread, JavaThread::monitor_owner_id_offset()));\n@@ -500,2 +500,2 @@\n-    \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n-    ldr(rscratch2, Address(rthread, JavaThread::lock_id_offset()));\n+    \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n+    ldr(rscratch2, Address(rthread, JavaThread::monitor_owner_id_offset()));\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -5481,1 +5481,1 @@\n-    const uint64_t range_mask = (1ULL << log2i(range)) - 1;\n+    const uint64_t range_mask = right_n_bits(log2i_ceil(range));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -629,1 +629,1 @@\n-  \/\/ and NULL it as marker that esp is now tos until next java call\n+  \/\/ and null it as marker that esp is now tos until next java call\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1716,1 +1716,1 @@\n-void LIR_Assembler::intrinsic_op(LIR_Code code, LIR_Opr value, LIR_Opr thread, LIR_Opr dest, LIR_Op* op) {\n+void LIR_Assembler::intrinsic_op(LIR_Code code, LIR_Opr value, LIR_Opr tmp, LIR_Opr dest, LIR_Op* op) {\n@@ -1726,0 +1726,8 @@\n+    case lir_f2hf: {\n+      __ f2hf(dest.as_register(), value.as_float_reg(), tmp.as_float_reg());\n+      break;\n+    }\n+    case lir_hf2f: {\n+      __ hf2f(dest->as_float_reg(), value.as_register());\n+      break;\n+    }\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1535,2 +1535,6 @@\n-        case lir_add: __ z_agfi(lreg, c);  break;\n-        case lir_sub: __ z_agfi(lreg, -c); break; \/\/ note: -min_jint == min_jint\n+        case lir_add:\n+                      __ add2reg_32(lreg, c);\n+                      break;\n+        case lir_sub:\n+                      __ add2reg_32(lreg, java_negate(c));\n+                      break;\n@@ -2542,1 +2546,0 @@\n-    intptr_t super_check_offset = k->is_loaded() ? k->super_check_offset() : -1L;\n@@ -2547,2 +2550,1 @@\n-                                     failure_target, nullptr,\n-                                     RegisterOrConstant(super_check_offset));\n+                                     failure_target, nullptr);\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRAssembler_s390.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -351,1 +351,1 @@\n-  movptr(boxReg, Address(r15_thread, JavaThread::lock_id_offset()));\n+  movptr(boxReg, Address(r15_thread, JavaThread::monitor_owner_id_offset()));\n@@ -657,1 +657,1 @@\n-    \/\/ Try to CAS owner (no owner => current thread's _lock_id).\n+    \/\/ Try to CAS owner (no owner => current thread's _monitor_owner_id).\n@@ -659,1 +659,1 @@\n-    movptr(box, Address(thread, JavaThread::lock_id_offset()));\n+    movptr(box, Address(thread, JavaThread::monitor_owner_id_offset()));\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -5242,0 +5242,4 @@\n+#ifdef ASSERT\n+  mov64(scratch1, 0xCafeBabeDeadBeef);\n+  movq(scratch2, scratch1);\n+#endif\n@@ -5443,0 +5447,1 @@\n+  \/\/ Note: Clobbers r_array_base and slot.\n@@ -5460,1 +5465,1 @@\n-  xorl(slot, (u1)(Klass::SECONDARY_SUPERS_TABLE_SIZE - 1)); \/\/ slot ^ 63 === 63 - slot (mod 64)\n+  movb(slot, Address(r_super_klass, Klass::hash_slot_offset()));\n@@ -5774,1 +5779,0 @@\n-    assert(VM_Version::supports_sse2(), \"\");\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -408,1 +408,1 @@\n-  \/\/ and NULL it as marker that esp is now tos until next java call\n+  \/\/ and null it as marker that esp is now tos until next java call\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6215,0 +6215,1 @@\n+  ins_cost(500);\n@@ -6231,0 +6232,1 @@\n+  ins_cost(500);\n@@ -6242,0 +6244,1 @@\n+  ins_cost(500);\n@@ -6268,0 +6271,1 @@\n+  ins_cost(500);\n@@ -6284,0 +6288,24 @@\n+instruct vmuludq_reg(vec dst, vec src1, vec src2) %{\n+  predicate(UseAVX > 0 && n->as_MulVL()->has_uint_inputs());\n+  match(Set dst (MulVL src1 src2));\n+  ins_cost(100);\n+  format %{ \"vpmuludq $dst,$src1,$src2\\t! muludq packedL\" %}\n+  ins_encode %{\n+    int vlen_enc = vector_length_encoding(this);\n+    __ vpmuludq($dst$$XMMRegister, $src1$$XMMRegister, $src2$$XMMRegister, vlen_enc);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n+instruct vmuldq_reg(vec dst, vec src1, vec src2) %{\n+  predicate(UseAVX > 0 && n->as_MulVL()->has_int_inputs());\n+  match(Set dst (MulVL src1 src2));\n+  ins_cost(100);\n+  format %{ \"vpmuldq $dst,$src1,$src2\\t! muldq packedL\" %}\n+  ins_encode %{\n+    int vlen_enc = vector_length_encoding(this);\n+    __ vpmuldq($dst$$XMMRegister, $src1$$XMMRegister, $src2$$XMMRegister, vlen_enc);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -4452,1 +4452,1 @@\n-  format %{ \"maxF $dst, $a, $b \\t! using tmp, atmp and btmp as TEMP\" %}\n+  format %{ \"maxF $dst, $a, $b \\t! using $tmp, $atmp and $btmp as TEMP\" %}\n@@ -4459,1 +4459,1 @@\n-instruct maxF_reduction_reg(legRegF dst, legRegF a, legRegF b, legRegF xmmt, rRegI tmp, rFlagsReg cr) %{\n+instruct maxF_reduction_reg(legRegF dst, legRegF a, legRegF b, legRegF xtmp, rRegI rtmp, rFlagsReg cr) %{\n@@ -4462,1 +4462,1 @@\n-  effect(USE a, USE b, TEMP xmmt, TEMP tmp, KILL cr);\n+  effect(USE a, USE b, TEMP xtmp, TEMP rtmp, KILL cr);\n@@ -4464,1 +4464,1 @@\n-  format %{ \"$dst = max($a, $b)\\t# intrinsic (float)\" %}\n+  format %{ \"maxF_reduction $dst, $a, $b \\t!using $xtmp and $rtmp as TEMP\" %}\n@@ -4466,1 +4466,1 @@\n-    emit_fp_min_max(masm, $dst$$XMMRegister, $a$$XMMRegister, $b$$XMMRegister, $xmmt$$XMMRegister, $tmp$$Register,\n+    emit_fp_min_max(masm, $dst$$XMMRegister, $a$$XMMRegister, $b$$XMMRegister, $xtmp$$XMMRegister, $rtmp$$Register,\n@@ -4477,1 +4477,1 @@\n-  format %{ \"maxD $dst, $a, $b \\t! using tmp, atmp and btmp as TEMP\" %}\n+  format %{ \"maxD $dst, $a, $b \\t! using $tmp, $atmp and $btmp as TEMP\" %}\n@@ -4484,1 +4484,1 @@\n-instruct maxD_reduction_reg(legRegD dst, legRegD a, legRegD b, legRegD xmmt, rRegL tmp, rFlagsReg cr) %{\n+instruct maxD_reduction_reg(legRegD dst, legRegD a, legRegD b, legRegD xtmp, rRegL rtmp, rFlagsReg cr) %{\n@@ -4487,1 +4487,1 @@\n-  effect(USE a, USE b, TEMP xmmt, TEMP tmp, KILL cr);\n+  effect(USE a, USE b, TEMP xtmp, TEMP rtmp, KILL cr);\n@@ -4489,1 +4489,1 @@\n-  format %{ \"$dst = max($a, $b)\\t# intrinsic (double)\" %}\n+  format %{ \"maxD_reduction $dst, $a, $b \\t! using $xtmp and $rtmp as TEMP\" %}\n@@ -4491,1 +4491,1 @@\n-    emit_fp_min_max(masm, $dst$$XMMRegister, $a$$XMMRegister, $b$$XMMRegister, $xmmt$$XMMRegister, $tmp$$Register,\n+    emit_fp_min_max(masm, $dst$$XMMRegister, $a$$XMMRegister, $b$$XMMRegister, $xtmp$$XMMRegister, $rtmp$$Register,\n@@ -4502,1 +4502,1 @@\n-  format %{ \"minF $dst, $a, $b \\t! using tmp, atmp and btmp as TEMP\" %}\n+  format %{ \"minF $dst, $a, $b \\t! using $tmp, $atmp and $btmp as TEMP\" %}\n@@ -4509,1 +4509,1 @@\n-instruct minF_reduction_reg(legRegF dst, legRegF a, legRegF b, legRegF xmmt, rRegI tmp, rFlagsReg cr) %{\n+instruct minF_reduction_reg(legRegF dst, legRegF a, legRegF b, legRegF xtmp, rRegI rtmp, rFlagsReg cr) %{\n@@ -4512,1 +4512,1 @@\n-  effect(USE a, USE b, TEMP xmmt, TEMP tmp, KILL cr);\n+  effect(USE a, USE b, TEMP xtmp, TEMP rtmp, KILL cr);\n@@ -4514,1 +4514,1 @@\n-  format %{ \"$dst = min($a, $b)\\t# intrinsic (float)\" %}\n+  format %{ \"minF_reduction $dst, $a, $b \\t! using $xtmp and $rtmp as TEMP\" %}\n@@ -4516,1 +4516,1 @@\n-    emit_fp_min_max(masm, $dst$$XMMRegister, $a$$XMMRegister, $b$$XMMRegister, $xmmt$$XMMRegister, $tmp$$Register,\n+    emit_fp_min_max(masm, $dst$$XMMRegister, $a$$XMMRegister, $b$$XMMRegister, $xtmp$$XMMRegister, $rtmp$$Register,\n@@ -4527,1 +4527,1 @@\n-    format %{ \"minD $dst, $a, $b \\t! using tmp, atmp and btmp as TEMP\" %}\n+    format %{ \"minD $dst, $a, $b \\t! using $tmp, $atmp and $btmp as TEMP\" %}\n@@ -4534,1 +4534,1 @@\n-instruct minD_reduction_reg(legRegD dst, legRegD a, legRegD b, legRegD xmmt, rRegL tmp, rFlagsReg cr) %{\n+instruct minD_reduction_reg(legRegD dst, legRegD a, legRegD b, legRegD xtmp, rRegL rtmp, rFlagsReg cr) %{\n@@ -4537,1 +4537,1 @@\n-  effect(USE a, USE b, TEMP xmmt, TEMP tmp, KILL cr);\n+  effect(USE a, USE b, TEMP xtmp, TEMP rtmp, KILL cr);\n@@ -4539,1 +4539,1 @@\n-  format %{ \"$dst = min($a, $b)\\t# intrinsic (double)\" %}\n+  format %{ \"maxD_reduction $dst, $a, $b \\t! using $xtmp and $rtmp as TEMP\" %}\n@@ -4541,1 +4541,1 @@\n-    emit_fp_min_max(masm, $dst$$XMMRegister, $a$$XMMRegister, $b$$XMMRegister, $xmmt$$XMMRegister, $tmp$$Register,\n+    emit_fp_min_max(masm, $dst$$XMMRegister, $a$$XMMRegister, $b$$XMMRegister, $xtmp$$XMMRegister, $rtmp$$Register,\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2367,1 +2367,1 @@\n-    assert(!target->can_be_statically_bound() || target->equals(cha_monomorphic_target), \"\");\n+    assert(!target->can_be_statically_bound() || target == cha_monomorphic_target, \"\");\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -265,3 +265,1 @@\n-  if (Arguments::is_internal_module_property(key) &&\n-      !Arguments::is_module_path_property(key) &&\n-      !Arguments::is_add_modules_property(key)) {\n+  if (Arguments::is_incompatible_cds_internal_module_property(key)) {\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+#include \"oops\/access.hpp\"\n@@ -61,0 +62,1 @@\n+#include \"oops\/typeArrayKlass.hpp\"\n@@ -65,0 +67,1 @@\n+#include \"runtime\/javaCalls.hpp\"\n@@ -2114,0 +2117,1 @@\n+      ArchiveWorkers workers;\n@@ -2115,1 +2119,1 @@\n-      ArchiveWorkers::workers()->run_task(&task);\n+      workers.run_task(&task);\n@@ -2804,1 +2808,6 @@\n-  ClassFileStream* cfs = cpe->open_stream_for_loader(THREAD, file_name, loader_data);\n+  ClassFileStream* cfs;\n+  if (class_loader() != nullptr && !cpe->is_modules_image()) {\n+    cfs = get_stream_from_class_loader(class_loader, cpe, file_name, CHECK_NULL);\n+  } else {\n+    cfs = cpe->open_stream_for_loader(THREAD, file_name, loader_data);\n+  }\n@@ -2811,0 +2820,28 @@\n+ClassFileStream* FileMapInfo::get_stream_from_class_loader(Handle class_loader,\n+                                                           ClassPathEntry* cpe,\n+                                                           const char* file_name,\n+                                                           TRAPS) {\n+  JavaValue result(T_OBJECT);\n+  oop class_name = java_lang_String::create_oop_from_str(file_name, THREAD);\n+  Handle h_class_name = Handle(THREAD, class_name);\n+\n+  \/\/ byte[] ClassLoader.getResourceAsByteArray(String name)\n+  JavaCalls::call_virtual(&result,\n+                          class_loader,\n+                          vmClasses::ClassLoader_klass(),\n+                          vmSymbols::getResourceAsByteArray_name(),\n+                          vmSymbols::getResourceAsByteArray_signature(),\n+                          h_class_name,\n+                          CHECK_NULL);\n+  assert(result.get_type() == T_OBJECT, \"just checking\");\n+  oop obj = result.get_oop();\n+  assert(obj != nullptr, \"ClassLoader.getResourceAsByteArray should not return null\");\n+\n+  \/\/ copy from byte[] to a buffer\n+  typeArrayOop ba = typeArrayOop(obj);\n+  jint len = ba->length();\n+  u1* buffer = NEW_RESOURCE_ARRAY(u1, len);\n+  ArrayAccess<>::arraycopy_to_native<>(ba, typeArrayOopDesc::element_offset<jbyte>(0), buffer, len);\n+\n+  return new ClassFileStream(buffer, len, cpe->name());\n+}\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":39,"deletions":2,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -547,0 +547,4 @@\n+  static ClassFileStream* get_stream_from_class_loader(Handle class_loader,\n+                                                       ClassPathEntry* cpe,\n+                                                       const char* file_name,\n+                                                       TRAPS);\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -286,1 +286,1 @@\n-  _symbol_rs = ReservedSpace(symbol_rs_size);\n+  _symbol_rs = ReservedSpace(symbol_rs_size, mtClassShared);\n@@ -320,1 +320,1 @@\n-static GrowableArray<Method*>* _pending_method_handle_intrinsics = NULL;\n+static GrowableArray<Method*>* _pending_method_handle_intrinsics = nullptr;\n@@ -428,2 +428,1 @@\n-  CDS_JAVA_HEAP_ONLY(Modules::serialize(soc);)\n-  CDS_JAVA_HEAP_ONLY(Modules::serialize_addmods_names(soc);)\n+  CDS_JAVA_HEAP_ONLY(Modules::serialize_archived_module_info(soc);)\n@@ -572,4 +571,1 @@\n-  \/\/ Write module name into archive\n-  CDS_JAVA_HEAP_ONLY(Modules::dump_main_module_name();)\n-  \/\/ Write module names from --add-modules into archive\n-  CDS_JAVA_HEAP_ONLY(Modules::dump_addmods_names();)\n+  CDS_JAVA_HEAP_ONLY(Modules::dump_archived_module_info());\n@@ -1023,3 +1019,1 @@\n-      if (ik->is_linked()) {\n-        ik->constants()->add_dumped_interned_strings();\n-      }\n+      ik->constants()->add_dumped_interned_strings();\n@@ -1097,3 +1091,0 @@\n-  \/\/ We are about to open the archives. Initialize workers now.\n-  ArchiveWorkers::workers()->initialize();\n-\n@@ -1691,3 +1682,0 @@\n-  \/\/ Archive was fully read. Workers are no longer needed.\n-  ArchiveWorkers::workers()->shutdown();\n-\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":5,"deletions":17,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -800,0 +800,7 @@\n+\n+  \/\/ Redefinition support.\n+  if (this->is_old() || root_m->is_old() || target->is_old()) {\n+    guarantee(CURRENT_THREAD_ENV->jvmti_state_changed(), \"old method not detected\");\n+    return nullptr;\n+  }\n+\n@@ -839,16 +846,0 @@\n-\/\/ ------------------------------------------------------------------\n-\/\/ ciMethod::equals\n-\/\/\n-\/\/ Returns true if the methods are the same, taking redefined methods\n-\/\/ into account.\n-bool ciMethod::equals(const ciMethod* m) const {\n-  if (this == m) return true;\n-  VM_ENTRY_MARK;\n-  Method* m1 = this->get_Method();\n-  Method* m2 = m->get_Method();\n-  if (m1->is_old()) m1 = m1->get_new_method();\n-  if (m2->is_old()) m2 = m2->get_new_method();\n-  return m1 == m2;\n-}\n-\n-\n@@ -893,0 +884,6 @@\n+    \/\/ Redefinition support.\n+    if (this->is_old() || m->is_old()) {\n+      guarantee(CURRENT_THREAD_ENV->jvmti_state_changed(), \"old method not detected\");\n+      return nullptr;\n+    }\n+\n@@ -1574,0 +1571,8 @@\n+\n+\/\/ ciMethod::is_old\n+\/\/\n+\/\/ Return true for redefined methods\n+bool ciMethod::is_old() const {\n+  ASSERT_IN_VM;\n+  return get_Method()->is_old();\n+}\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":21,"deletions":16,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -367,0 +367,1 @@\n+  bool is_old() const;\n@@ -373,2 +374,0 @@\n-  bool equals(const ciMethod* m) const;\n-\n","filename":"src\/hotspot\/share\/ci\/ciMethod.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1854,0 +1854,1 @@\n+  \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4256,0 +4257,2 @@\n+\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4304,0 +4307,2 @@\n+\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4400,0 +4405,2 @@\n+\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4420,0 +4427,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4459,0 +4467,1 @@\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4496,0 +4505,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4511,0 +4521,1 @@\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4597,0 +4608,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4690,0 +4702,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4946,0 +4959,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4979,0 +4993,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -5017,0 +5032,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -5861,0 +5877,1 @@\n+        \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -952,0 +952,6 @@\n+  if (is_vm_statically_linked()) {\n+    CanonicalizeEntry = CAST_TO_FN_PTR(canonicalize_fn_t, os::lookup_function(\"JDK_Canonicalize\"));\n+    assert(CanonicalizeEntry != nullptr, \"could not lookup JDK_Canonicalize\");\n+    return;\n+  }\n+\n@@ -958,0 +964,1 @@\n+  assert(CanonicalizeEntry != nullptr, \"could not lookup JDK_Canonicalize in java library\");\n@@ -962,0 +969,12 @@\n+\n+  if (is_vm_statically_linked()) {\n+      JImageOpen = CAST_TO_FN_PTR(JImageOpen_t, os::lookup_function(\"JIMAGE_Open\"));\n+      JImageClose = CAST_TO_FN_PTR(JImageClose_t, os::lookup_function(\"JIMAGE_Close\"));\n+      JImageFindResource = CAST_TO_FN_PTR(JImageFindResource_t, os::lookup_function(\"JIMAGE_FindResource\"));\n+      JImageGetResource = CAST_TO_FN_PTR(JImageGetResource_t, os::lookup_function(\"JIMAGE_GetResource\"));\n+      assert(JImageOpen != nullptr && JImageClose != nullptr &&\n+            JImageFindResource != nullptr && JImageGetResource != nullptr,\n+            \"could not lookup all jimage library functions\");\n+      return;\n+    }\n+\n@@ -976,0 +995,3 @@\n+  assert(JImageOpen != nullptr && JImageClose != nullptr &&\n+        JImageFindResource != nullptr && JImageGetResource != nullptr,\n+        \"could not lookup all jimage library functions in jimage library\");\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -89,0 +89,1 @@\n+  void *lib_handle = nullptr;\n@@ -90,8 +91,12 @@\n-  char buffer[JVM_MAXPATHLEN];\n-  char ebuf[1024];\n-  if (!os::dll_locate_lib(buffer, sizeof(buffer), Arguments::get_dll_dir(), \"verify\"))\n-    return nullptr; \/\/ Caller will throw VerifyError\n-\n-  void *lib_handle = os::dll_load(buffer, ebuf, sizeof(ebuf));\n-  if (lib_handle == nullptr)\n-    return nullptr; \/\/ Caller will throw VerifyError\n+  if (is_vm_statically_linked()) {\n+    lib_handle = os::get_default_process_handle();\n+  } else {\n+    char buffer[JVM_MAXPATHLEN];\n+    char ebuf[1024];\n+    if (!os::dll_locate_lib(buffer, sizeof(buffer), Arguments::get_dll_dir(), \"verify\"))\n+      return nullptr; \/\/ Caller will throw VerifyError\n+\n+    lib_handle = os::dll_load(buffer, ebuf, sizeof(ebuf));\n+    if (lib_handle == nullptr)\n+      return nullptr; \/\/ Caller will throw VerifyError\n+  }\n@@ -109,0 +114,1 @@\n+\/\/ This method determines whether we run the verifier and class file format checking code.\n@@ -114,0 +120,1 @@\n+\/\/ This method determines whether we allow package access in access checks in reflection.\n@@ -124,0 +131,15 @@\n+\/\/ Callers will pass should_verify_class as true, depending on the results of should_verify_for() above,\n+\/\/ or pass true for redefinition of any class.\n+static bool is_eligible_for_verification(InstanceKlass* klass, bool should_verify_class) {\n+  Symbol* name = klass->name();\n+\n+  return (should_verify_class &&\n+    \/\/ Can not verify the bytecodes for shared classes because they have\n+    \/\/ already been rewritten to contain constant pool cache indices,\n+    \/\/ which the verifier can't understand.\n+    \/\/ Shared classes shouldn't have stackmaps either.\n+    \/\/ However, bytecodes for shared old classes can be verified because\n+    \/\/ they have not been rewritten.\n+    !(klass->is_shared() && klass->is_rewritten()));\n+}\n+\n@@ -277,21 +299,0 @@\n-bool Verifier::is_eligible_for_verification(InstanceKlass* klass, bool should_verify_class) {\n-  Symbol* name = klass->name();\n-\n-  return (should_verify_class &&\n-    \/\/ return if the class is a bootstrapping class\n-    \/\/ or defineClass specified not to verify by default (flags override passed arg)\n-    \/\/ We need to skip the following four for bootstrapping\n-    name != vmSymbols::java_lang_Object() &&\n-    name != vmSymbols::java_lang_Class() &&\n-    name != vmSymbols::java_lang_String() &&\n-    name != vmSymbols::java_lang_Throwable() &&\n-\n-    \/\/ Can not verify the bytecodes for shared classes because they have\n-    \/\/ already been rewritten to contain constant pool cache indices,\n-    \/\/ which the verifier can't understand.\n-    \/\/ Shared classes shouldn't have stackmaps either.\n-    \/\/ However, bytecodes for shared old classes can be verified because\n-    \/\/ they have not been rewritten.\n-    !(klass->is_shared() && klass->is_rewritten()));\n-}\n-\n","filename":"src\/hotspot\/share\/classfile\/verifier.cpp","additions":30,"deletions":29,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n-  static bool is_eligible_for_verification(InstanceKlass* klass, bool should_verify_class);\n","filename":"src\/hotspot\/share\/classfile\/verifier.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -737,0 +737,2 @@\n+  template(getResourceAsByteArray_name,                     \"getResourceAsByteArray\")                             \\\n+  template(getResourceAsByteArray_signature,                \"(Ljava\/lang\/String;)[B\")                             \\\n@@ -757,1 +759,1 @@\n-  \/* Thread.dump_to_file jcmd *\/                                                                                  \\\n+  \/* jcmd Thread.dump_to_file *\/                                                                                  \\\n@@ -761,0 +763,5 @@\n+                                                                                                                  \\\n+  \/* jcmd Thread.vthread_scheduler and Thread.vthread_pollers *\/                                                  \\\n+  template(jdk_internal_vm_JcmdVThreadCommands,    \"jdk\/internal\/vm\/JcmdVThreadCommands\")                         \\\n+  template(printScheduler_name,                    \"printScheduler\")                                              \\\n+  template(printPollers_name,                      \"printPollers\")                                                \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1451,1 +1451,1 @@\n-#if defined(X86) && !defined(ZERO)\n+#if defined(IA32) && !defined(ZERO)\n@@ -1473,1 +1473,1 @@\n-#endif \/\/ X86 && !ZERO\n+#endif \/\/ IA32 && !ZERO\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -222,0 +222,1 @@\n+  size_t len = strlen(name);\n@@ -223,1 +224,1 @@\n-    if (strlen(name) == 1) {\n+    if (len == 1) {\n@@ -227,1 +228,2 @@\n-    memmove(name, name + 1, strlen(name + 1) + 1);\n+    memmove(name, name + 1, len); \/\/ Include terminating nul in move.\n+    len--;\n@@ -230,1 +232,0 @@\n-  size_t len = strlen(name);\n@@ -236,1 +237,1 @@\n-  if (strlen(name) == 0) {\n+  if (len == 0) {\n","filename":"src\/hotspot\/share\/compiler\/methodMatcher.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -366,2 +366,3 @@\n-    HeapWord* src_region_start = region_to_addr(src_region);\n-    HeapWord* new_top = destination - pointer_delta(src_region_start, overflowing_obj);\n+    \/\/ The [overflowing_obj, src_region_start) part has been accounted for, so\n+    \/\/ must move back the new_top, now that this overflowing obj is deferred.\n+    HeapWord* new_top = destination - pointer_delta(region_to_addr(src_region), overflowing_obj);\n@@ -894,1 +895,1 @@\n-    \/\/ Compacting objs inn [dense_prefix_end, old_space->top())\n+    \/\/ Compacting objs in [dense_prefix_end, old_space->top())\n@@ -1600,1 +1601,1 @@\n-          size_t live_words = region_ptr->partial_obj_size();\n+          size_t partial_obj_size = region_ptr->partial_obj_size();\n@@ -1602,1 +1603,1 @@\n-          if (live_words == ParallelCompactData::RegionSize) {\n+          if (partial_obj_size == ParallelCompactData::RegionSize) {\n@@ -1610,1 +1611,0 @@\n-\n@@ -1615,1 +1615,1 @@\n-            forward_objs_in_range(cm, region_start + live_words, split_point, preceding_destination + live_words);\n+            forward_objs_in_range(cm, region_start + partial_obj_size, split_point, preceding_destination + partial_obj_size);\n@@ -1622,1 +1622,1 @@\n-            forward_objs_in_range(cm, region_start + live_words, region_end, destination + live_words);\n+            forward_objs_in_range(cm, region_start + partial_obj_size, region_end, destination + partial_obj_size);\n@@ -1988,5 +1988,5 @@\n-\/\/ On filling a destination region (dest-region), we need to know the location\n-\/\/ of the word that will be at the start of the dest-region after compaction.\n-\/\/ A dest-region can have one or more source regions, but only the first\n-\/\/ source-region contains this location. This location is retrieved by calling\n-\/\/ `first_src_addr` on a dest-region.\n+\/\/ On starting to fill a destination region (dest-region), we need to know the\n+\/\/ location of the word that will be at the start of the dest-region after\n+\/\/ compaction. A dest-region can have one or more source regions, but only the\n+\/\/ first source-region contains this location. This location is retrieved by\n+\/\/ calling `first_src_addr` on a dest-region.\n@@ -2021,3 +2021,3 @@\n-\/\/ Therefore, in this example, region-n will have two dest-regions, one for\n-\/\/ the final region in old-space and the other for the first region in\n-\/\/ eden-space.\n+\/\/ Therefore, in this example, region-n will have two dest-regions:\n+\/\/ 1. the final region in old-space\n+\/\/ 2. the first region in eden-space.\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n@@ -29,0 +30,1 @@\n+#include \"gc\/shenandoah\/shenandoahCardTable.hpp\"\n@@ -435,0 +437,84 @@\n+Node* ShenandoahBarrierSetC2::byte_map_base_node(GraphKit* kit) const {\n+  BarrierSet* bs = BarrierSet::barrier_set();\n+  ShenandoahBarrierSet* ctbs = barrier_set_cast<ShenandoahBarrierSet>(bs);\n+  CardTable::CardValue* card_table_base = ctbs->card_table()->byte_map_base();\n+  if (card_table_base != nullptr) {\n+    return kit->makecon(TypeRawPtr::make((address)card_table_base));\n+  } else {\n+    return kit->null();\n+  }\n+}\n+\n+void ShenandoahBarrierSetC2::post_barrier(GraphKit* kit,\n+                                          Node* ctl,\n+                                          Node* oop_store,\n+                                          Node* obj,\n+                                          Node* adr,\n+                                          uint  adr_idx,\n+                                          Node* val,\n+                                          BasicType bt,\n+                                          bool use_precise) const {\n+  assert(ShenandoahCardBarrier, \"Should have been checked by caller\");\n+\n+  \/\/ No store check needed if we're storing a null.\n+  if (val != nullptr && val->is_Con()) {\n+    \/\/ must be either an oop or NULL\n+    const Type* t = val->bottom_type();\n+    if (t == TypePtr::NULL_PTR || t == Type::TOP)\n+      return;\n+  }\n+\n+  if (ReduceInitialCardMarks && obj == kit->just_allocated_object(kit->control())) {\n+    \/\/ We can skip marks on a freshly-allocated object in Eden.\n+    \/\/ Keep this code in sync with new_deferred_store_barrier() in runtime.cpp.\n+    \/\/ That routine informs GC to take appropriate compensating steps,\n+    \/\/ upon a slow-path allocation, so as to make this card-mark\n+    \/\/ elision safe.\n+    return;\n+  }\n+\n+  if (!use_precise) {\n+    \/\/ All card marks for a (non-array) instance are in one place:\n+    adr = obj;\n+  }\n+  \/\/ (Else it's an array (or unknown), and we want more precise card marks.)\n+  assert(adr != nullptr, \"\");\n+\n+  IdealKit ideal(kit, true);\n+\n+  \/\/ Convert the pointer to an int prior to doing math on it\n+  Node* cast = __ CastPX(__ ctrl(), adr);\n+\n+  \/\/ Divide by card size\n+  Node* card_offset = __ URShiftX( cast, __ ConI(CardTable::card_shift()) );\n+\n+  \/\/ Combine card table base and card offset\n+  Node* card_adr = __ AddP(__ top(), byte_map_base_node(kit), card_offset );\n+\n+  \/\/ Get the alias_index for raw card-mark memory\n+  int adr_type = Compile::AliasIdxRaw;\n+  Node*   zero = __ ConI(0); \/\/ Dirty card value\n+\n+  if (UseCondCardMark) {\n+    \/\/ The classic GC reference write barrier is typically implemented\n+    \/\/ as a store into the global card mark table.  Unfortunately\n+    \/\/ unconditional stores can result in false sharing and excessive\n+    \/\/ coherence traffic as well as false transactional aborts.\n+    \/\/ UseCondCardMark enables MP \"polite\" conditional card mark\n+    \/\/ stores.  In theory we could relax the load from ctrl() to\n+    \/\/ no_ctrl, but that doesn't buy much latitude.\n+    Node* card_val = __ load( __ ctrl(), card_adr, TypeInt::BYTE, T_BYTE, adr_type);\n+    __ if_then(card_val, BoolTest::ne, zero);\n+  }\n+\n+  \/\/ Smash zero into card\n+  __ store(__ ctrl(), card_adr, zero, T_BYTE, adr_type, MemNode::unordered);\n+\n+  if (UseCondCardMark) {\n+    __ end_if();\n+  }\n+\n+  \/\/ Final sync IdealKit and GraphKit.\n+  kit->final_sync(ideal);\n+}\n+\n@@ -502,0 +588,15 @@\n+\n+    Node* result = BarrierSetC2::store_at_resolved(access, val);\n+\n+    if (ShenandoahCardBarrier) {\n+      const bool anonymous = (decorators & ON_UNKNOWN_OOP_REF) != 0;\n+      const bool is_array = (decorators & IS_ARRAY) != 0;\n+      const bool use_precise = is_array || anonymous;\n+      post_barrier(kit, kit->control(), access.raw_access(), access.base(),\n+                   adr, adr_idx, val.node(), access.type(), use_precise);\n+    }\n+    return result;\n+  } else {\n+    assert(access.is_opt_access(), \"only for optimization passes\");\n+    assert(((decorators & C2_TIGHTLY_COUPLED_ALLOC) != 0 || !ShenandoahSATBBarrier) && (decorators & C2_ARRAY_COPY) != 0, \"unexpected caller of this code\");\n+    return BarrierSetC2::store_at_resolved(access, val);\n@@ -503,1 +604,0 @@\n-  return BarrierSetC2::store_at_resolved(access, val);\n@@ -574,1 +674,1 @@\n-                                                   Node* new_val, const Type* value_type) const {\n+                                                             Node* new_val, const Type* value_type) const {\n@@ -615,0 +715,4 @@\n+    if (ShenandoahCardBarrier) {\n+      post_barrier(kit, kit->control(), access.raw_access(), access.base(),\n+                   access.addr().node(), access.alias_idx(), new_val, T_OBJECT, true);\n+    }\n@@ -669,0 +773,4 @@\n+    if (ShenandoahCardBarrier) {\n+      post_barrier(kit, kit->control(), access.raw_access(), access.base(),\n+                   access.addr().node(), access.alias_idx(), new_val, T_OBJECT, true);\n+    }\n@@ -682,0 +790,4 @@\n+    if (ShenandoahCardBarrier) {\n+      post_barrier(kit, kit->control(), access.raw_access(), access.base(),\n+                   access.addr().node(), access.alias_idx(), val, T_OBJECT, true);\n+    }\n@@ -855,3 +967,19 @@\n-void ShenandoahBarrierSetC2::eliminate_gc_barrier(PhaseIterGVN* igvn, Node* n) const {\n-  if (is_shenandoah_wb_pre_call(n)) {\n-    shenandoah_eliminate_wb_pre(n, igvn);\n+void ShenandoahBarrierSetC2::eliminate_gc_barrier(PhaseIterGVN* igvn, Node* node) const {\n+  if (is_shenandoah_wb_pre_call(node)) {\n+    shenandoah_eliminate_wb_pre(node, igvn);\n+  }\n+  if (ShenandoahCardBarrier && node->Opcode() == Op_CastP2X) {\n+    Node* shift = node->unique_out();\n+    Node* addp = shift->unique_out();\n+    for (DUIterator_Last jmin, j = addp->last_outs(jmin); j >= jmin; --j) {\n+      Node* mem = addp->last_out(j);\n+      if (UseCondCardMark && mem->is_Load()) {\n+        assert(mem->Opcode() == Op_LoadB, \"unexpected code shape\");\n+        \/\/ The load is checking if the card has been written so\n+        \/\/ replace it with zero to fold the test.\n+        igvn->replace_node(mem, igvn->intcon(0));\n+        continue;\n+      }\n+      assert(mem->is_Store(), \"store required\");\n+      igvn->replace_node(mem, mem->in(MemNode::Memory));\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":133,"deletions":5,"binary":false,"changes":138,"status":"modified"},{"patch":"@@ -70,0 +70,12 @@\n+  Node* byte_map_base_node(GraphKit* kit) const;\n+\n+  void post_barrier(GraphKit* kit,\n+                    Node* ctl,\n+                    Node* store,\n+                    Node* obj,\n+                    Node* adr,\n+                    uint adr_idx,\n+                    Node* val,\n+                    BasicType bt,\n+                    bool use_precise) const;\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n@@ -34,0 +35,1 @@\n+class ShenandoahCardTable;\n@@ -38,0 +40,1 @@\n+  ShenandoahCardTable* _card_table;\n@@ -42,1 +45,1 @@\n-  ShenandoahBarrierSet(ShenandoahHeap* heap);\n+  ShenandoahBarrierSet(ShenandoahHeap* heap, MemRegion heap_region);\n@@ -50,0 +53,4 @@\n+  inline ShenandoahCardTable* card_table() {\n+    return _card_table;\n+  }\n+\n@@ -114,0 +121,5 @@\n+  template <DecoratorSet decorators, typename T>\n+  void write_ref_field_post(T* field);\n+\n+  void write_ref_array(HeapWord* start, size_t count);\n+\n@@ -116,1 +128,1 @@\n-  inline void arraycopy_marking(T* src, T* dst, size_t count);\n+  inline void arraycopy_marking(T* src, T* dst, size_t count, bool is_old_marking);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.hpp","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n@@ -31,0 +32,1 @@\n+#include \"gc\/shared\/cardTable.hpp\"\n@@ -32,0 +34,1 @@\n+#include \"gc\/shenandoah\/shenandoahCardTable.hpp\"\n@@ -35,0 +38,1 @@\n+#include \"gc\/shenandoah\/shenandoahGeneration.hpp\"\n@@ -39,0 +43,2 @@\n+#include \"gc\/shenandoah\/mode\/shenandoahMode.hpp\"\n+#include \"memory\/iterator.inline.hpp\"\n@@ -106,0 +112,1 @@\n+      _heap->is_in_active_generation(obj) &&\n@@ -113,0 +120,1 @@\n+      _heap->is_in_active_generation(obj) &&\n@@ -176,0 +184,7 @@\n+template <DecoratorSet decorators, typename T>\n+inline void ShenandoahBarrierSet::write_ref_field_post(T* field) {\n+  assert(ShenandoahCardBarrier, \"Should have been checked by caller\");\n+  volatile CardTable::CardValue* byte = card_table()->byte_for(field);\n+  *byte = CardTable::dirty_card_val();\n+}\n+\n@@ -237,1 +252,4 @@\n-  shenandoah_assert_marked_if(nullptr, value, !CompressedOops::is_null(value) && ShenandoahHeap::heap()->is_evacuation_in_progress());\n+  shenandoah_assert_marked_if(nullptr, value,\n+                              !CompressedOops::is_null(value) && ShenandoahHeap::heap()->is_evacuation_in_progress()\n+                              && !(ShenandoahHeap::heap()->active_generation()->is_young()\n+                                   && ShenandoahHeap::heap()->heap_region_containing(value)->is_old()));\n@@ -257,0 +275,4 @@\n+  if (ShenandoahCardBarrier) {\n+    ShenandoahBarrierSet* bs = ShenandoahBarrierSet::barrier_set();\n+    bs->write_ref_field_post<decorators>(addr);\n+  }\n@@ -277,1 +299,5 @@\n-  return bs->oop_cmpxchg(decorators, addr, compare_value, new_value);\n+  oop result = bs->oop_cmpxchg(decorators, addr, compare_value, new_value);\n+  if (ShenandoahCardBarrier) {\n+    bs->write_ref_field_post<decorators>(addr);\n+  }\n+  return result;\n@@ -285,1 +311,6 @@\n-  return bs->oop_cmpxchg(resolved_decorators, AccessInternal::oop_field_addr<decorators>(base, offset), compare_value, new_value);\n+  auto addr = AccessInternal::oop_field_addr<decorators>(base, offset);\n+  oop result = bs->oop_cmpxchg(resolved_decorators, addr, compare_value, new_value);\n+  if (ShenandoahCardBarrier) {\n+    bs->write_ref_field_post<decorators>(addr);\n+  }\n+  return result;\n@@ -301,1 +332,5 @@\n-  return bs->oop_xchg(decorators, addr, new_value);\n+  oop result = bs->oop_xchg(decorators, addr, new_value);\n+  if (ShenandoahCardBarrier) {\n+    bs->write_ref_field_post<decorators>(addr);\n+  }\n+  return result;\n@@ -309,1 +344,6 @@\n-  return bs->oop_xchg(resolved_decorators, AccessInternal::oop_field_addr<decorators>(base, offset), new_value);\n+  auto addr = AccessInternal::oop_field_addr<decorators>(base, offset);\n+  oop result = bs->oop_xchg(resolved_decorators, addr, new_value);\n+  if (ShenandoahCardBarrier) {\n+    bs->write_ref_field_post<decorators>(addr);\n+  }\n+  return result;\n@@ -326,0 +366,3 @@\n+  T* src = arrayOopDesc::obj_offset_to_raw(src_obj, src_offset_in_bytes, src_raw);\n+  T* dst = arrayOopDesc::obj_offset_to_raw(dst_obj, dst_offset_in_bytes, dst_raw);\n+\n@@ -331,0 +374,3 @@\n+  if (ShenandoahCardBarrier) {\n+    bs->write_ref_array((HeapWord*) dst, length);\n+  }\n@@ -335,1 +381,9 @@\n-  assert(HAS_FWD == _heap->has_forwarded_objects(), \"Forwarded object status is sane\");\n+  \/\/ Young cycles are allowed to run when old marking is in progress. When old marking is in progress,\n+  \/\/ this barrier will be called with ENQUEUE=true and HAS_FWD=false, even though the young generation\n+  \/\/ may have forwarded objects. In this case, the `arraycopy_work` is first called with HAS_FWD=true and\n+  \/\/ ENQUEUE=false.\n+  assert(HAS_FWD == _heap->has_forwarded_objects() || (_heap->gc_state() & ShenandoahHeap::OLD_MARKING) != 0,\n+         \"Forwarded object status is sane\");\n+  \/\/ This function cannot be called to handle marking and evacuation at the same time (they operate on\n+  \/\/ different sides of the copy).\n+  assert((HAS_FWD || EVAC) != ENQUEUE, \"Cannot evacuate and mark both sides of copy.\");\n@@ -353,2 +407,1 @@\n-        obj = fwd;\n-      if (ENQUEUE && !ctx->is_marked_strong(obj)) {\n+      if (ENQUEUE && !ctx->is_marked_strong_or_old(obj)) {\n@@ -365,0 +418,1 @@\n+    \/\/ No elements to copy, no need for barrier\n@@ -367,0 +421,1 @@\n+\n@@ -368,3 +423,1 @@\n-  if ((gc_state & ShenandoahHeap::MARKING) != 0) {\n-    arraycopy_marking(src, dst, count);\n-  } else if ((gc_state & ShenandoahHeap::EVACUATION) != 0) {\n+  if ((gc_state & ShenandoahHeap::EVACUATION) != 0) {\n@@ -375,0 +428,12 @@\n+\n+  if (_heap->mode()->is_generational()) {\n+    assert(ShenandoahSATBBarrier, \"Generational mode assumes SATB mode\");\n+    if ((gc_state & ShenandoahHeap::YOUNG_MARKING) != 0) {\n+      arraycopy_marking(src, dst, count, false);\n+    }\n+    if ((gc_state & ShenandoahHeap::OLD_MARKING) != 0) {\n+      arraycopy_marking(src, dst, count, true);\n+    }\n+  } else if ((gc_state & ShenandoahHeap::MARKING) != 0) {\n+    arraycopy_marking(src, dst, count, false);\n+  }\n@@ -378,1 +443,1 @@\n-void ShenandoahBarrierSet::arraycopy_marking(T* src, T* dst, size_t count) {\n+void ShenandoahBarrierSet::arraycopy_marking(T* src, T* dst, size_t count, bool is_old_marking) {\n@@ -380,3 +445,40 @@\n-  T* array = ShenandoahSATBBarrier ? dst : src;\n-  if (!_heap->marking_context()->allocated_after_mark_start(reinterpret_cast<HeapWord*>(array))) {\n-    arraycopy_work<T, false, false, true>(array, count);\n+  \/*\n+   * Note that an old-gen object is considered live if it is live at the start of OLD marking or if it is promoted\n+   * following the start of OLD marking.\n+   *\n+   * 1. Every object promoted following the start of OLD marking will be above TAMS within its old-gen region\n+   * 2. Every object live at the start of OLD marking will be referenced from a \"root\" or it will be referenced from\n+   *    another live OLD-gen object.  With regards to old-gen, roots include stack locations and all of live young-gen.\n+   *    All root references to old-gen are identified during a bootstrap young collection.  All references from other\n+   *    old-gen objects will be marked during the traversal of all old objects, or will be marked by the SATB barrier.\n+   *\n+   * During old-gen marking (which is interleaved with young-gen collections), call arraycopy_work() if:\n+   *\n+   * 1. The overwritten array resides in old-gen and it is below TAMS within its old-gen region\n+   * 2. Do not call arraycopy_work for any array residing in young-gen because young-gen collection is idle at this time\n+   *\n+   * During young-gen marking, call arraycopy_work() if:\n+   *\n+   * 1. The overwritten array resides in young-gen and is below TAMS within its young-gen region\n+   * 2. Additionally, if array resides in old-gen, regardless of its relationship to TAMS because this old-gen array\n+   *    may hold references to young-gen\n+   *\/\n+  if (ShenandoahSATBBarrier) {\n+    T* array = dst;\n+    HeapWord* array_addr = reinterpret_cast<HeapWord*>(array);\n+    ShenandoahHeapRegion* r = _heap->heap_region_containing(array_addr);\n+    if (is_old_marking) {\n+      \/\/ Generational, old marking\n+      assert(_heap->mode()->is_generational(), \"Invariant\");\n+      if (r->is_old() && (array_addr < _heap->marking_context()->top_at_mark_start(r))) {\n+        arraycopy_work<T, false, false, true>(array, count);\n+      }\n+    } else if (_heap->mode()->is_generational()) {\n+      \/\/ Generational, young marking\n+      if (r->is_old() || (array_addr < _heap->marking_context()->top_at_mark_start(r))) {\n+        arraycopy_work<T, false, false, true>(array, count);\n+      }\n+    } else if (array_addr < _heap->marking_context()->top_at_mark_start(r)) {\n+      \/\/ Non-generational, marking\n+      arraycopy_work<T, false, false, true>(array, count);\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp","additions":117,"deletions":15,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -1174,7 +1174,0 @@\n-#define JNI_ONLOAD_SYMBOLS   {\"JNI_OnLoad\"}\n-#define JNI_ONUNLOAD_SYMBOLS {\"JNI_OnUnload\"}\n-#define JVM_ONLOAD_SYMBOLS      {\"JVM_OnLoad\"}\n-#define AGENT_ONLOAD_SYMBOLS    {\"Agent_OnLoad\"}\n-#define AGENT_ONUNLOAD_SYMBOLS  {\"Agent_OnUnload\"}\n-#define AGENT_ONATTACH_SYMBOLS  {\"Agent_OnAttach\"}\n-\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -326,0 +326,3 @@\n+\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n+\n@@ -618,0 +621,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -971,0 +975,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -1193,0 +1198,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3227,0 +3227,4 @@\n+C2V_VMENTRY_0(jint, getCompilationActivityMode, (JNIEnv* env, jobject))\n+  return CompileBroker::get_compilation_activity_mode();\n+}\n+\n@@ -3389,0 +3393,1 @@\n+  {CC \"getCompilationActivityMode\",                   CC \"()I\",                                                                             FN_PTR(getCompilationActivityMode)},\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-  nonstatic_field(JavaThread,                  _lock_id,                                      int64_t)                               \\\n+  nonstatic_field(JavaThread,                  _monitor_owner_id,                             int64_t)                               \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+#include \"oops\/objLayout.hpp\"\n@@ -874,0 +875,2 @@\n+  ObjLayout::initialize();\n+\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+#include \"oops\/fieldStreams.inline.hpp\"\n@@ -65,0 +66,1 @@\n+#include \"runtime\/fieldDescriptor.inline.hpp\"\n@@ -407,8 +409,20 @@\n-  objArrayOop rr = resolved_references();\n-  if (rr != nullptr) {\n-    int rr_len = rr->length();\n-    for (int i = 0; i < rr_len; i++) {\n-      oop p = rr->obj_at(i);\n-      if (java_lang_String::is_instance(p) &&\n-          !ArchiveHeapWriter::is_string_too_large_to_archive(p)) {\n-        HeapShared::add_to_dumped_interned_strings(p);\n+  InstanceKlass* ik = pool_holder();\n+  if (!ik->is_linked()) {\n+    \/\/ resolved_references() doesn't exist yet, so we have no resolved CONSTANT_String entries. However,\n+    \/\/ some static final fields may have default values that were initialized when the class was parsed.\n+    \/\/ We need to enter those into the CDS archive strings table.\n+    for (JavaFieldStream fs(ik); !fs.done(); fs.next()) {\n+      if (fs.access_flags().is_static()) {\n+        fieldDescriptor& fd = fs.field_descriptor();\n+        if (fd.field_type() == T_OBJECT) {\n+          int offset = fd.offset();\n+          check_and_add_dumped_interned_string(ik->java_mirror()->obj_field(offset));\n+        }\n+      }\n+    }\n+  } else {\n+    objArrayOop rr = resolved_references();\n+    if (rr != nullptr) {\n+      int rr_len = rr->length();\n+      for (int i = 0; i < rr_len; i++) {\n+        check_and_add_dumped_interned_string(rr->obj_at(i));\n@@ -419,0 +433,8 @@\n+\n+void ConstantPool::check_and_add_dumped_interned_string(oop obj) {\n+  if (obj != nullptr && java_lang_String::is_instance(obj) &&\n+      !ArchiveHeapWriter::is_string_too_large_to_archive(obj)) {\n+    HeapShared::add_to_dumped_interned_strings(obj);\n+  }\n+}\n+\n@@ -432,1 +454,1 @@\n-    assert(cache() == NULL, \"must not have cpCache\");\n+    assert(cache() == nullptr, \"must not have cpCache\");\n@@ -478,1 +500,1 @@\n-    assert(cache() == NULL, \"must not have cpCache\");\n+    assert(cache() == nullptr, \"must not have cpCache\");\n@@ -1296,0 +1318,1 @@\n+        \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":33,"deletions":10,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -165,0 +165,1 @@\n+  static void check_and_add_dumped_interned_string(oop obj);\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -833,3 +833,9 @@\n-  print_resolved_field_entries(st);\n-  print_resolved_method_entries(st);\n-  print_resolved_indy_entries(st);\n+  if (_resolved_field_entries != nullptr) {\n+    print_resolved_field_entries(st);\n+  }\n+  if (_resolved_method_entries != nullptr) {\n+    print_resolved_method_entries(st);\n+  }\n+  if (_resolved_indy_entries != nullptr) {\n+    print_resolved_indy_entries(st);\n+  }\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -972,0 +972,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -992,0 +993,1 @@\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -3548,0 +3550,1 @@\n+        \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -348,1 +348,2 @@\n-  return (bci == 0 || bci < code_size()) ? bci : -1;\n+  \/\/ Called from the verifier, and should return -1 if not valid.\n+  return ((is_native() && bci == 0) || (!is_native() && 0 <= bci && bci < code_size())) ? bci : -1;\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -959,1 +959,0 @@\n-          \/\/ IA64     1     1     1          1    1         50          41\n","filename":"src\/hotspot\/share\/opto\/chaitin.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4825,0 +4825,3 @@\n+    if (_log != nullptr) {\n+      _log->done(\"phase\");\n+    }\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -227,4 +227,0 @@\n-#if (defined(IA64) && !defined(AIX))\n-  Node* adr_last_Java_fp = basic_plus_adr(top(), thread, in_bytes(JavaThread::last_Java_fp_offset()));\n-  store_to_memory(control(), adr_last_Java_fp, null(), T_ADDRESS, MemNode::unordered);\n-#endif\n","filename":"src\/hotspot\/share\/opto\/generateOptoStub.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2233,1 +2233,1 @@\n-      st->print(\"Profiled_Loop \");\n+      st->print(\"Profiled Loop \");\n@@ -2236,1 +2236,1 @@\n-      st->print(\"Loop_Limit_Check \");\n+      st->print(\"Loop Limit Check \");\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3888,1 +3888,1 @@\n-  \/\/ Change the lock_id of the JavaThread\n+  \/\/ Change the _monitor_owner_id of the JavaThread\n@@ -3890,2 +3890,2 @@\n-  Node* thread_id_offset = basic_plus_adr(thread, in_bytes(JavaThread::lock_id_offset()));\n-  Node* tid_memory = store_to_memory(control(), thread_id_offset, tid, T_LONG, MemNode::unordered, true);\n+  Node* monitor_owner_id_offset = basic_plus_adr(thread, in_bytes(JavaThread::monitor_owner_id_offset()));\n+  store_to_memory(control(), monitor_owner_id_offset, tid, T_LONG, MemNode::unordered, true);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -949,5 +949,0 @@\n- public:\n-  IfTrueNode* create_initialized_assertion_predicate(IfNode* template_assertion_predicate, Node* new_init,\n-                                                     Node* new_stride, Node* control);\n-  DEBUG_ONLY(static bool assertion_predicate_has_loop_opaque_node(IfNode* iff);)\n-  DEBUG_ONLY(static void count_opaque_loop_nodes(Node* n, uint& init, uint& stride);)\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -803,1 +803,0 @@\n-    assert(assertion_predicate_has_loop_opaque_node(iff), \"must find OpaqueLoop* nodes\");\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-  \/\/ On platforms with weak memory ordering (e.g., PPC, Ia64) we distinguish\n+  \/\/ On platforms with weak memory ordering (e.g., PPC) we distinguish\n@@ -572,1 +572,1 @@\n-  \/\/ On platforms with weak memory ordering (e.g., PPC, Ia64) we distinguish\n+  \/\/ On platforms with weak memory ordering (e.g., PPC) we distinguish\n","filename":"src\/hotspot\/share\/opto\/memnode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -200,0 +200,1 @@\n+class MulVLNode;\n@@ -753,0 +754,1 @@\n+        DEFINE_CLASS_ID(MulVL, Vector, 10)\n@@ -986,0 +988,1 @@\n+  DEFINE_CLASS_QUERY(MulVL)\n@@ -2128,0 +2131,47 @@\n+\/\/ Interface to define actions that should be taken when running DataNodeBFS. Each use can extend this class to specify\n+\/\/ a customized BFS.\n+class BFSActions : public StackObj {\n+ public:\n+  \/\/ Should a node's inputs further be visited in the BFS traversal? By default, we visit all data inputs. Override this\n+  \/\/ method to provide a custom filter.\n+  virtual bool should_visit(Node* node) const {\n+    \/\/ By default, visit all inputs.\n+    return true;\n+  };\n+\n+  \/\/ Is the visited node a target node that we are looking for in the BFS traversal? We do not visit its inputs further\n+  \/\/ but the BFS will continue to visit all unvisited nodes in the queue.\n+  virtual bool is_target_node(Node* node) const = 0;\n+\n+  \/\/ Defines an action that should be taken when we visit a target node in the BFS traversal.\n+  virtual void target_node_action(Node* target_node) = 0;\n+};\n+\n+\/\/ Class to perform a BFS traversal on the data nodes from a given start node. The provided BFSActions guide which\n+\/\/ data node's inputs should be further visited, which data nodes are target nodes and what to do with the target nodes.\n+class DataNodeBFS : public StackObj {\n+  BFSActions& _bfs_actions;\n+\n+ public:\n+  explicit DataNodeBFS(BFSActions& bfs_action) : _bfs_actions(bfs_action) {}\n+\n+  \/\/ Run the BFS starting from 'start_node' and apply the actions provided to this class.\n+  void run(Node* start_node) {\n+    ResourceMark rm;\n+    Unique_Node_List _nodes_to_visit;\n+    _nodes_to_visit.push(start_node);\n+    for (uint i = 0; i < _nodes_to_visit.size(); i++) {\n+      Node* next = _nodes_to_visit[i];\n+      for (uint j = 1; j < next->req(); j++) {\n+        Node* input = next->in(j);\n+        if (_bfs_actions.is_target_node(input)) {\n+          assert(_bfs_actions.should_visit(input), \"must also pass node filter\");\n+          _bfs_actions.target_node_action(input);\n+        } else if (_bfs_actions.should_visit(input)) {\n+          _nodes_to_visit.push(input);\n+        }\n+      }\n+    }\n+  }\n+};\n+\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":50,"deletions":0,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -430,1 +430,1 @@\n-  \/\/ and memory stacks (ie. IA64).\n+  \/\/ and memory stacks.\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2500,1 +2500,1 @@\n-    bad_address = os::reserve_memory(size);\n+    bad_address = os::reserve_memory(size, false, mtInternal);\n@@ -2504,1 +2504,0 @@\n-      MemTracker::record_virtual_memory_tag((void*)bad_address, mtInternal);\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3140,2 +3140,2 @@\n-  \/\/ Set lock id of new current Thread\n-  thread->set_lock_id(java_lang_Thread::thread_id(threadObj));\n+  \/\/ Set _monitor_owner_id of new current Thread\n+  thread->set_monitor_owner_id(java_lang_Thread::thread_id(threadObj));\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -194,0 +194,10 @@\n+WB_ENTRY(jint, WB_TakeLockAndHangInSafepoint(JNIEnv* env, jobject wb))\n+  JavaThread* self = JavaThread::current();\n+  \/\/ VMStatistic_lock is used to minimize interference with VM locking\n+  MutexLocker mu(VMStatistic_lock);\n+  VM_HangInSafepoint force_safepoint_stuck_op;\n+  VMThread::execute(&force_safepoint_stuck_op);\n+  ShouldNotReachHere();\n+  return 0;\n+WB_END\n+\n@@ -436,1 +446,2 @@\n-    return Universe::heap()->is_in(p);\n+    ShenandoahHeap* sh = ShenandoahHeap::heap();\n+    return sh->mode()->is_generational() ?  sh->is_in_old(p) : sh->is_in(p);\n@@ -708,6 +719,1 @@\n-  jlong addr = 0;\n-\n-  addr = (jlong)(uintptr_t)os::reserve_memory(size);\n-  MemTracker::record_virtual_memory_tag((address)addr, mtTest);\n-\n-  return addr;\n+  return (jlong)(uintptr_t)os::reserve_memory(size, false, mtTest);\n@@ -717,4 +723,1 @@\n-  addr = (jlong)(uintptr_t)os::attempt_reserve_memory_at((char*)(uintptr_t)addr, (size_t)size);\n-  MemTracker::record_virtual_memory_tag((address)addr, mtTest);\n-\n-  return addr;\n+  return (jlong)(uintptr_t)os::attempt_reserve_memory_at((char*)(uintptr_t)addr, (size_t)size, false, mtTest);\n@@ -3105,0 +3108,1 @@\n+  {CC\"lockAndStuckInSafepoint\", CC\"()V\", (void*)&WB_TakeLockAndHangInSafepoint},\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -324,1 +324,11 @@\n-  if  (strncmp(property, MODULE_PROPERTY_PREFIX, MODULE_PROPERTY_PREFIX_LEN) == 0) {\n+  return internal_module_property_helper(property, false);\n+}\n+\n+\/\/ Returns true if property is one of those recognized by is_internal_module_property() but\n+\/\/ is not supported by CDS archived full module graph.\n+bool Arguments::is_incompatible_cds_internal_module_property(const char* property) {\n+  return internal_module_property_helper(property, true);\n+}\n+\n+bool Arguments::internal_module_property_helper(const char* property, bool check_for_cds) {\n+  if (strncmp(property, MODULE_PROPERTY_PREFIX, MODULE_PROPERTY_PREFIX_LEN) == 0) {\n@@ -330,4 +340,1 @@\n-        matches_property_suffix(property_suffix, ADDMODS, ADDMODS_LEN) ||\n-        matches_property_suffix(property_suffix, PATH, PATH_LEN) ||\n-        matches_property_suffix(property_suffix, ILLEGAL_NATIVE_ACCESS, ILLEGAL_NATIVE_ACCESS_LEN) ||\n-        matches_property_suffix(property_suffix, ENABLE_NATIVE_ACCESS, ENABLE_NATIVE_ACCESS_LEN)) {\n+        matches_property_suffix(property_suffix, ILLEGAL_NATIVE_ACCESS, ILLEGAL_NATIVE_ACCESS_LEN)) {\n@@ -338,0 +345,9 @@\n+\n+    if (!check_for_cds) {\n+      \/\/ CDS notes: these properties are supported by CDS archived full module graph.\n+      if (matches_property_suffix(property_suffix, PATH, PATH_LEN) ||\n+          matches_property_suffix(property_suffix, ADDMODS, ADDMODS_LEN) ||\n+          matches_property_suffix(property_suffix, ENABLE_NATIVE_ACCESS, ENABLE_NATIVE_ACCESS_LEN)) {\n+        return true;\n+      }\n+    }\n@@ -342,9 +358,0 @@\n-bool Arguments::is_add_modules_property(const char* key) {\n-  return (strcmp(key, MODULE_PROPERTY_PREFIX ADDMODS) == 0);\n-}\n-\n-\/\/ Return true if the key matches the --module-path property name (\"jdk.module.path\").\n-bool Arguments::is_module_path_property(const char* key) {\n-  return (strcmp(key, MODULE_PROPERTY_PREFIX PATH) == 0);\n-}\n-\n@@ -1772,4 +1779,5 @@\n-unsigned int addreads_count = 0;\n-unsigned int addexports_count = 0;\n-unsigned int addopens_count = 0;\n-unsigned int enable_native_access_count = 0;\n+static unsigned int addreads_count = 0;\n+static unsigned int addexports_count = 0;\n+static unsigned int addopens_count = 0;\n+static unsigned int enable_native_access_count = 0;\n+static bool patch_mod_javabase = false;\n@@ -1779,0 +1787,5 @@\n+  \/\/ This may modify compiler flags. Must be called before CompilerConfig::check_args_consistency()\n+  if (!CDSConfig::check_vm_args_consistency(mode_flag_cmd_line)) {\n+    return false;\n+  }\n+\n@@ -3024,4 +3037,0 @@\n-  if (!check_vm_args_consistency()) {\n-    return JNI_ERR;\n-  }\n-\n@@ -3033,1 +3042,1 @@\n-  if (!CDSConfig::check_vm_args_consistency(mode_flag_cmd_line)) {\n+  if (!check_vm_args_consistency()) {\n@@ -3737,0 +3746,4 @@\n+  return JNI_OK;\n+}\n+\n+void Arguments::set_compact_headers_flags() {\n@@ -3742,3 +3755,0 @@\n-  if (UseCompactObjectHeaders && LockingMode != LM_LIGHTWEIGHT) {\n-    FLAG_SET_DEFAULT(LockingMode, LM_LIGHTWEIGHT);\n-  }\n@@ -3750,1 +3760,1 @@\n-    \/\/ If UseObjectMonitorTable is on the command line, turn off UseCompactObjectHeaders.\n+      \/\/ If UseObjectMonitorTable is on the command line, turn off UseCompactObjectHeaders.\n@@ -3753,1 +3763,1 @@\n-    \/\/ If neither on the command line, the defaults are incompatible, but turn on UseObjectMonitorTable.\n+      \/\/ If neither on the command line, the defaults are incompatible, but turn on UseObjectMonitorTable.\n@@ -3758,0 +3768,3 @@\n+  if (UseCompactObjectHeaders && LockingMode != LM_LIGHTWEIGHT) {\n+    FLAG_SET_DEFAULT(LockingMode, LM_LIGHTWEIGHT);\n+  }\n@@ -3762,2 +3775,0 @@\n-\n-  return JNI_OK;\n@@ -3776,0 +3787,2 @@\n+  set_compact_headers_flags();\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":43,"deletions":30,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -268,0 +268,1 @@\n+  static void set_compact_headers_flags();\n@@ -368,0 +369,2 @@\n+  static bool internal_module_property_helper(const char* property, bool check_for_cds);\n+\n@@ -466,3 +469,1 @@\n-  static bool is_add_modules_property(const char* key);\n-  static unsigned int addmods_count() { return  _addmods_count; }\n-  static bool is_module_path_property(const char* key);\n+  static bool is_incompatible_cds_internal_module_property(const char* property);\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -637,3 +637,0 @@\n-  \/\/ Note: on ia64 this guarantee can be fooled by frames with no memory stack\n-  \/\/ in that it will fail to detect a problem when there is one. This needs\n-  \/\/ more work in tiger timeframe.\n@@ -2435,2 +2432,1 @@\n-    \/\/ 4852688: ProfileInterpreter is off by default for ia64.  The result is\n-    \/\/ infinite heroic-opt-uncommon-trap\/deopt\/recompile cycles, since the\n+    \/\/ The result is infinite heroic-opt-uncommon-trap\/deopt\/recompile cycles, since the\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -167,4 +167,3 @@\n-  \/\/ For sparc and ia32 use sp. ia64 can have memory frames that are empty so multiple frames\n-  \/\/ will have identical sp values. For ia64 the bsp (fp) value will serve. No real frame\n-  \/\/ should have an id() of null so it is a distinguishing value for an unmatchable frame.\n-  \/\/ We also have relationals which allow comparing a frame to anoth frame's id() allow\n+  \/\/ For sparc and ia32 use sp.\n+  \/\/ No real frame should have an id() of null so it is a distinguishing value for an unmatchable frame.\n+  \/\/ We also have relationals which allow comparing a frame to another frame's id() allowing\n","filename":"src\/hotspot\/share\/runtime\/frame.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -120,5 +120,0 @@\n-  \/\/ Do this after the transition because this allows us to put an assert\n-  \/\/ the Java->vm transition which checks to see that stack is not walkable\n-  \/\/ on sparc\/ia64 which will catch violations of the resetting of last_Java_frame\n-  \/\/ invariants (i.e. _flags always cleared on return to Java)\n-\n","filename":"src\/hotspot\/share\/runtime\/javaCalls.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -240,2 +240,2 @@\n-  \/\/ Set the lock_id to the next thread_id temporarily while initialization runs.\n-  set_lock_id(ThreadIdentifier::next());\n+  \/\/ Set the _monitor_owner_id to the next thread_id temporarily while initialization runs.\n+  set_monitor_owner_id(ThreadIdentifier::next());\n@@ -267,2 +267,2 @@\n-  \/\/ Update the lock_id with the tid value.\n-  set_lock_id(java_lang_Thread::thread_id(thread_oop()));\n+  \/\/ Update the _monitor_owner_id with the tid value.\n+  set_monitor_owner_id(java_lang_Thread::thread_id(thread_oop()));\n@@ -439,1 +439,1 @@\n-  _lock_id(0),\n+  _monitor_owner_id(0),\n@@ -522,0 +522,4 @@\n+#if INCLUDE_JFR\n+  _last_freeze_fail_result(freeze_ok),\n+#endif\n+\n@@ -1544,2 +1548,1 @@\n-      \/\/ _lock_id is the thread ID of the mounted virtual thread\n-      st->print_cr(\"   Carrying virtual thread #\" INT64_FORMAT, lock_id());\n+      st->print_cr(\"   Carrying virtual thread #\" INT64_FORMAT, java_lang_Thread::thread_id(vthread()));\n@@ -1729,1 +1732,1 @@\n-  set_lock_id(java_lang_Thread::thread_id(thread_oop()));\n+  set_monitor_owner_id(java_lang_Thread::thread_id(thread_oop()));\n@@ -2234,1 +2237,1 @@\n-  target->set_lock_id(java_lang_Thread::thread_id(thread_oop()));\n+  target->set_monitor_owner_id(java_lang_Thread::thread_id(thread_oop()));\n@@ -2365,1 +2368,1 @@\n-#endif\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-  int64_t _lock_id;\n+  int64_t _monitor_owner_id;\n@@ -173,3 +173,3 @@\n-  void set_lock_id(int64_t tid) {\n-    assert(tid >= ThreadIdentifier::initial() && tid < ThreadIdentifier::current(), \"invalid tid\");\n-    _lock_id = tid;\n+  void set_monitor_owner_id(int64_t id) {\n+    assert(id >= ThreadIdentifier::initial() && id < ThreadIdentifier::current(), \"\");\n+    _monitor_owner_id = id;\n@@ -177,1 +177,1 @@\n-  int64_t lock_id() const { return _lock_id; }\n+  int64_t monitor_owner_id() const { return _monitor_owner_id; }\n@@ -892,1 +892,1 @@\n-  static ByteSize lock_id_offset()            { return byte_offset_of(JavaThread, _lock_id); }\n+  static ByteSize monitor_owner_id_offset()   { return byte_offset_of(JavaThread, _monitor_owner_id); }\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -707,0 +707,1 @@\n+  \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1292,1 +1292,1 @@\n-  int64_t key = ObjectMonitor::owner_from(thread);\n+  int64_t key = ObjectMonitor::owner_id_from(thread);\n@@ -1298,1 +1298,1 @@\n-  int64_t key = ObjectMonitor::owner_from(vthread);\n+  int64_t key = ObjectMonitor::owner_id_from(vthread);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-  assert(main_thread_tid == thread->lock_id(), \"\");\n+  assert(main_thread_tid == thread->monitor_owner_id(), \"\");\n@@ -501,3 +501,0 @@\n-  \/\/ Initialize object layout after parsing the args\n-  ObjLayout::initialize();\n-\n@@ -555,1 +552,1 @@\n-  \/\/ Set the lock_id now since we will run Java code before the Thread instance\n+  \/\/ Set the _monitor_owner_id now since we will run Java code before the Thread instance\n@@ -557,1 +554,1 @@\n-  main_thread->set_lock_id(ThreadIdentifier::next());\n+  main_thread->set_monitor_owner_id(ThreadIdentifier::next());\n@@ -1367,2 +1364,1 @@\n-          \/\/ _lock_id is the thread ID of the mounted virtual thread\n-          st->print_cr(\"   Mounted virtual thread #\" INT64_FORMAT, p->lock_id());\n+          st->print_cr(\"   Mounted virtual thread #\" INT64_FORMAT, java_lang_Thread::thread_id(p->vthread()));\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -371,1 +371,1 @@\n-    int64_t key = ObjectMonitor::owner_from(thread);\n+    int64_t key = ObjectMonitor::owner_id_from(thread);\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,0 +63,12 @@\n+\/\/ used by whitebox API to emulate VM issues\n+\/\/ when VM can't operate and doesn't respond to jcmd\n+class VM_HangInSafepoint: public VM_Operation {\n+public:\n+  VMOp_Type type() const { return VMOp_ForceSafepoint; }\n+  void doit() {\n+    while(true) {\n+      os::naked_short_sleep(10);\n+    }\n+  }\n+};\n+\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -664,1 +664,0 @@\n-  nonstatic_field(JavaThread,                  _osthread,                                     OSThread*)                             \\\n@@ -670,1 +669,1 @@\n-  nonstatic_field(JavaThread,                  _lock_id,                                      int64_t)                               \\\n+  nonstatic_field(JavaThread,                  _monitor_owner_id,                             int64_t)                               \\\n@@ -672,0 +671,1 @@\n+  nonstatic_field(Thread,                      _osthread,                                     OSThread*)                             \\\n@@ -1027,1 +1027,6 @@\n-  nonstatic_field(UpcallStub::FrameData,       jfa,                                           JavaFrameAnchor)\n+  nonstatic_field(UpcallStub::FrameData,       jfa,                                           JavaFrameAnchor)                       \\\n+                                                                                                                                     \\\n+  nonstatic_field(Mutex,                       _name,                                         const char*)                           \\\n+  static_field(Mutex,                          _mutex_array,                                  Mutex**)                               \\\n+  static_field(Mutex,                          _num_mutex,                                    int)                                   \\\n+  volatile_nonstatic_field(Mutex,              _owner,                                        Thread*)\n@@ -1944,0 +1949,1 @@\n+  declare_toplevel_type(Mutex)                                            \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -132,0 +132,2 @@\n+  DCmdFactory::register_DCmdFactory(new DCmdFactoryImpl<VThreadSchedulerDCmd>(full_export, true, false));\n+  DCmdFactory::register_DCmdFactory(new DCmdFactoryImpl<VThreadPollersDCmd>(full_export, true, false));\n@@ -155,2 +157,1 @@\n-  \/\/ These commands won't be exported via the DiagnosticCommandMBean until an\n-  \/\/ appropriate permission is created for them\n+  \/\/ These commands not currently exported via the DiagnosticCommandMBean\n@@ -1102,7 +1103,0 @@\n-  InstanceKlass* ik = InstanceKlass::cast(k);\n-  if (HAS_PENDING_EXCEPTION) {\n-    java_lang_Throwable::print(PENDING_EXCEPTION, output());\n-    output()->cr();\n-    CLEAR_PENDING_EXCEPTION;\n-    return;\n-  }\n@@ -1139,0 +1133,39 @@\n+\/\/ Calls a static no-arg method on jdk.internal.vm.JcmdVThreadCommands that returns a byte[] with\n+\/\/ the output. If the method completes successfully then the bytes are copied to the output stream.\n+\/\/ If the method fails then the exception is printed to the output stream.\n+static void execute_vthread_command(Symbol* method_name, outputStream* output, TRAPS) {\n+  ResourceMark rm(THREAD);\n+  HandleMark hm(THREAD);\n+\n+  Klass* k = SystemDictionary::resolve_or_fail(vmSymbols::jdk_internal_vm_JcmdVThreadCommands(), true, CHECK);\n+\n+  JavaValue result(T_OBJECT);\n+  JavaCallArguments args;\n+  JavaCalls::call_static(&result,\n+                         k,\n+                         method_name,\n+                         vmSymbols::void_byte_array_signature(),\n+                         &args,\n+                         THREAD);\n+  if (HAS_PENDING_EXCEPTION) {\n+    java_lang_Throwable::print(PENDING_EXCEPTION, output);\n+    output->cr();\n+    CLEAR_PENDING_EXCEPTION;\n+    return;\n+  }\n+\n+  \/\/ copy the bytes to the output stream\n+  oop res = cast_to_oop(result.get_jobject());\n+  typeArrayOop ba = typeArrayOop(res);\n+  jbyte* addr = typeArrayOop(res)->byte_at_addr(0);\n+  output->print_raw((const char*)addr, ba->length());\n+}\n+\n+void VThreadSchedulerDCmd::execute(DCmdSource source, TRAPS) {\n+  execute_vthread_command(vmSymbols::printScheduler_name(), output(), CHECK);\n+}\n+\n+void VThreadPollersDCmd::execute(DCmdSource source, TRAPS) {\n+  execute_vthread_command(vmSymbols::printPollers_name(), output(), CHECK);\n+}\n+\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":42,"deletions":9,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -67,5 +67,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.util.PropertyPermission\",\n-                        \"java.vm.version\", \"read\"};\n-    return p;\n-  }\n@@ -83,5 +78,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -104,5 +94,0 @@\n-    static const JavaPermission permission() {\n-      JavaPermission p = {\"java.util.PropertyPermission\",\n-                          \"*\", \"read\"};\n-      return p;\n-    }\n@@ -126,5 +111,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -149,5 +129,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -167,5 +142,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -189,5 +159,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -211,5 +176,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -243,5 +203,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -287,5 +242,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-      \"monitor\", nullptr};\n-      return p;\n-  }\n@@ -306,5 +256,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-      \"monitor\", nullptr};\n-      return p;\n-  }\n@@ -337,5 +282,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -363,5 +303,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -390,5 +325,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -414,5 +344,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -440,5 +365,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -464,5 +384,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -574,6 +489,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n-\n@@ -596,5 +505,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -620,5 +524,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -641,5 +540,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -661,5 +555,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -687,5 +576,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -708,5 +592,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -728,5 +607,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -751,5 +625,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -771,5 +640,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -837,5 +701,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -860,5 +719,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -883,5 +737,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -906,5 +755,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -930,5 +774,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -957,3 +796,22 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", nullptr};\n-    return p;\n+  virtual void execute(DCmdSource source, TRAPS);\n+};\n+\n+class VThreadSchedulerDCmd : public DCmd {\n+public:\n+  VThreadSchedulerDCmd(outputStream* output, bool heap) : DCmd(output, heap) { }\n+  static const char* name() {\n+    return \"Thread.vthread_scheduler\";\n+  }\n+  static const char* description() {\n+    return \"Print the virtual thread scheduler, and the delayed task schedulers that support \"\n+           \"virtual threads doing timed operations.\";\n+  }\n+  static const char* impact() { return \"Low\"; }\n+  virtual void execute(DCmdSource source, TRAPS);\n+};\n+\n+class VThreadPollersDCmd : public DCmd {\n+public:\n+  VThreadPollersDCmd(outputStream* output, bool heap) : DCmd(output, heap) { }\n+  static const char* name() {\n+    return \"Thread.vthread_pollers\";\n@@ -961,0 +819,4 @@\n+  static const char* description() {\n+    return \"Print the I\/O pollers that support virtual threads doing blocking network I\/O operations.\";\n+  }\n+  static const char* impact() { return \"Low\"; }\n@@ -980,5 +842,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -998,5 +855,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -1016,5 +868,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":26,"deletions":179,"binary":false,"changes":205,"status":"modified"},{"patch":"@@ -563,0 +563,3 @@\n+\/\/ A named constant for the integral representation of a Java null.\n+const intptr_t NULL_WORD = 0;\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -620,0 +620,1 @@\n+  GrowableArrayNestingCheck(Arena* arena);\n@@ -622,0 +623,1 @@\n+  void on_arena_alloc(Arena* arena) const;\n@@ -661,1 +663,1 @@\n-      debug_only(COMMA _nesting_check(false)) {\n+      debug_only(COMMA _nesting_check(arena)) {\n@@ -688,0 +690,1 @@\n+  void on_arena_alloc_check() const;\n@@ -752,0 +755,1 @@\n+    debug_only(_metadata.on_arena_alloc_check());\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,2 +49,0 @@\n-import sun.reflect.misc.ReflectUtil;\n-import sun.security.action.GetPropertyAction;\n@@ -264,1 +262,1 @@\n-            GetPropertyAction.privilegedGetProperty(\"TRACE\");\n+            System.getProperty(\"TRACE\");\n@@ -1860,6 +1858,0 @@\n-    private boolean isCustomSubclass() {\n-        \/\/ Return true if this class is a custom subclass of ObjectInputStream\n-        return getClass().getClassLoader()\n-                    != ObjectInputStream.class.getClassLoader();\n-    }\n-\n@@ -1911,6 +1903,0 @@\n-                \/\/ ReflectUtil.checkProxyPackageAccess makes a test\n-                \/\/ equivalent to isCustomSubclass so there's no need\n-                \/\/ to condition this call to isCustomSubclass == true here.\n-                ReflectUtil.checkProxyPackageAccess(\n-                        getClass().getClassLoader(),\n-                        cl.getInterfaces());\n@@ -1986,1 +1972,0 @@\n-        final boolean checksRequired = isCustomSubclass();\n@@ -1990,2 +1975,0 @@\n-            } else if (checksRequired) {\n-                ReflectUtil.checkPackageAccess(cl);\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":1,"deletions":18,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -1211,6 +1210,0 @@\n-    private boolean isCustomSubclass() {\n-        \/\/ Return true if this class is a custom subclass of ObjectOutputStream\n-        return getClass().getClassLoader()\n-                   != ObjectOutputStream.class.getClassLoader();\n-    }\n-\n@@ -1234,3 +1227,0 @@\n-        if (isCustomSubclass()) {\n-            ReflectUtil.checkPackageAccess(cl);\n-        }\n@@ -1263,3 +1253,0 @@\n-        if (cl != null && isCustomSubclass()) {\n-            ReflectUtil.checkPackageAccess(cl);\n-        }\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -285,6 +285,1 @@\n-        boolean result = false;\n-        try {\n-            result = parseBoolean(System.getProperty(name));\n-        } catch (IllegalArgumentException | NullPointerException e) {\n-        }\n-        return result;\n+        return name != null && !name.isEmpty() && parseBoolean(System.getProperty(name));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Boolean.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n- * Character information is based on the Unicode Standard, version 15.1.\n+ * Character information is based on the Unicode Standard, version 16.0.\n@@ -79,0 +79,2 @@\n+ * <tr><th scope=\"row\" style=\"text-align:left\">Java SE 24<\/th>\n+ *     <td>Unicode 16.0<\/td><\/tr>\n@@ -757,1 +759,1 @@\n-        private static final int NUM_ENTITIES = 759;\n+        private static final int NUM_ENTITIES = 782;\n@@ -3634,0 +3636,93 @@\n+        \/**\n+         * Constant for the \"Todhri\" Unicode\n+         * character block.\n+         * @since 24\n+         *\/\n+        public static final UnicodeBlock TODHRI =\n+                new UnicodeBlock(\"TODHRI\");\n+\n+        \/**\n+         * Constant for the \"Garay\" Unicode\n+         * character block.\n+         * @since 24\n+         *\/\n+        public static final UnicodeBlock GARAY =\n+                new UnicodeBlock(\"GARAY\");\n+\n+        \/**\n+         * Constant for the \"Tulu-Tigalari\" Unicode\n+         * character block.\n+         * @since 24\n+         *\/\n+        public static final UnicodeBlock TULU_TIGALARI =\n+                new UnicodeBlock(\"TULU_TIGALARI\",\n+                        \"TULU-TIGALARI\");\n+\n+        \/**\n+         * Constant for the \"Myanmar Extended-C\" Unicode\n+         * character block.\n+         * @since 24\n+         *\/\n+        public static final UnicodeBlock MYANMAR_EXTENDED_C =\n+                new UnicodeBlock(\"MYANMAR_EXTENDED_C\",\n+                        \"MYANMAR EXTENDED-C\",\n+                        \"MYANMAREXTENDED-C\");\n+\n+        \/**\n+         * Constant for the \"Sunuwar\" Unicode\n+         * character block.\n+         * @since 24\n+         *\/\n+        public static final UnicodeBlock SUNUWAR =\n+                new UnicodeBlock(\"SUNUWAR\");\n+\n+        \/**\n+         * Constant for the \"Egyptian Hieroglyphs Extended-A\" Unicode\n+         * character block.\n+         * @since 24\n+         *\/\n+        public static final UnicodeBlock EGYPTIAN_HIEROGLYPHS_EXTENDED_A =\n+                new UnicodeBlock(\"EGYPTIAN_HIEROGLYPHS_EXTENDED_A\",\n+                        \"EGYPTIAN HIEROGLYPHS EXTENDED-A\",\n+                        \"EGYPTIANHIEROGLYPHSEXTENDED-A\");\n+\n+        \/**\n+         * Constant for the \"Gurung Khema\" Unicode\n+         * character block.\n+         * @since 24\n+         *\/\n+        public static final UnicodeBlock GURUNG_KHEMA =\n+                new UnicodeBlock(\"GURUNG_KHEMA\",\n+                        \"GURUNG KHEMA\",\n+                        \"GURUNGKHEMA\");\n+\n+        \/**\n+         * Constant for the \"Kirat Rai\" Unicode\n+         * character block.\n+         * @since 24\n+         *\/\n+        public static final UnicodeBlock KIRAT_RAI =\n+                new UnicodeBlock(\"KIRAT_RAI\",\n+                        \"KIRAT RAI\",\n+                        \"KIRATRAI\");\n+\n+        \/**\n+         * Constant for the \"Symbols for Legacy Computing Supplement\" Unicode\n+         * character block.\n+         * @since 24\n+         *\/\n+        public static final UnicodeBlock SYMBOLS_FOR_LEGACY_COMPUTING_SUPPLEMENT =\n+                new UnicodeBlock(\"SYMBOLS_FOR_LEGACY_COMPUTING_SUPPLEMENT\",\n+                        \"SYMBOLS FOR LEGACY COMPUTING SUPPLEMENT\",\n+                        \"SYMBOLSFORLEGACYCOMPUTINGSUPPLEMENT\");\n+\n+        \/**\n+         * Constant for the \"Ol Onal\" Unicode\n+         * character block.\n+         * @since 24\n+         *\/\n+        public static final UnicodeBlock OL_ONAL =\n+                new UnicodeBlock(\"OL_ONAL\",\n+                        \"OL ONAL\",\n+                        \"OLONAL\");\n+\n@@ -3823,1 +3918,1 @@\n-            0x105C0,  \/\/               unassigned\n+            0x105C0,  \/\/ 105C0..105FF; Todhri\n@@ -3852,1 +3947,2 @@\n-            0x10D40,  \/\/               unassigned\n+            0x10D40,  \/\/ 10D40..10D8F; Garay\n+            0x10D90,  \/\/               unassigned\n@@ -3873,1 +3969,1 @@\n-            0x11380,  \/\/               unassigned\n+            0x11380,  \/\/ 11380..113FF; Tulu-Tigalari\n@@ -3881,1 +3977,1 @@\n-            0x116D0,  \/\/               unassigned\n+            0x116D0,  \/\/ 116D0..116FF; Myanmar Extended-C\n@@ -3896,0 +3992,1 @@\n+            0x11BC0,  \/\/ 11BC0..11BFF; Sunuwar\n@@ -3914,1 +4011,1 @@\n-            0x13460,  \/\/               unassigned\n+            0x13460,  \/\/ 13460..143FF; Egyptian Hieroglyphs Extended-A\n@@ -3917,0 +4014,2 @@\n+            0x16100,  \/\/ 16100..1613F; Gurung Khema\n+            0x16140,  \/\/               unassigned\n@@ -3923,0 +4022,2 @@\n+            0x16D40,  \/\/ 16D40..16D7F; Kirat Rai\n+            0x16D80,  \/\/               unassigned\n@@ -3942,0 +4043,2 @@\n+            0x1CC00,  \/\/ 1CC00..1CEBF; Symbols for Legacy Computing Supplement\n+            0x1CEC0,  \/\/               unassigned\n@@ -3967,0 +4070,2 @@\n+            0x1E5D0,  \/\/ 1E5D0..1E5FF; Ol Onal\n+            0x1E600,  \/\/               unassigned\n@@ -4205,1 +4310,1 @@\n-            null,\n+            TODHRI,\n@@ -4234,0 +4339,1 @@\n+            GARAY,\n@@ -4255,1 +4361,1 @@\n-            null,\n+            TULU_TIGALARI,\n@@ -4263,1 +4369,1 @@\n-            null,\n+            MYANMAR_EXTENDED_C,\n@@ -4278,0 +4384,1 @@\n+            SUNUWAR,\n@@ -4296,1 +4403,1 @@\n-            null,\n+            EGYPTIAN_HIEROGLYPHS_EXTENDED_A,\n@@ -4299,0 +4406,2 @@\n+            GURUNG_KHEMA,\n+            null,\n@@ -4305,0 +4414,2 @@\n+            KIRAT_RAI,\n+            null,\n@@ -4324,0 +4435,2 @@\n+            SYMBOLS_FOR_LEGACY_COMPUTING_SUPPLEMENT,\n+            null,\n@@ -4349,0 +4462,2 @@\n+            OL_ONAL,\n+            null,\n@@ -4520,0 +4635,1 @@\n+\n@@ -5403,0 +5519,42 @@\n+        \/**\n+         * Unicode script \"Todhri\".\n+         * @since 24\n+         *\/\n+        TODHRI,\n+\n+        \/**\n+         * Unicode script \"Garay\".\n+         * @since 24\n+         *\/\n+        GARAY,\n+\n+        \/**\n+         * Unicode script \"Tulu Tigalari\".\n+         * @since 24\n+         *\/\n+        TULU_TIGALARI,\n+\n+        \/**\n+         * Unicode script \"Sunuwar\".\n+         * @since 24\n+         *\/\n+        SUNUWAR,\n+\n+        \/**\n+         * Unicode script \"Gurung Khema\".\n+         * @since 24\n+         *\/\n+        GURUNG_KHEMA,\n+\n+        \/**\n+         * Unicode script \"Kirat Rai\".\n+         * @since 24\n+         *\/\n+        KIRAT_RAI,\n+\n+        \/**\n+         * Unicode script \"Ol Onal\".\n+         * @since 24\n+         *\/\n+        OL_ONAL,\n+\n@@ -5507,2 +5665,2 @@\n-            0x0892,   \/\/ 0892..0897; UNKNOWN\n-            0x0898,   \/\/ 0898..08E1; ARABIC\n+            0x0892,   \/\/ 0892..0896; UNKNOWN\n+            0x0897,   \/\/ 0897..08E1; ARABIC\n@@ -5921,3 +6079,2 @@\n-            0x1B4D,   \/\/ 1B4D..1B4F; UNKNOWN\n-            0x1B50,   \/\/ 1B50..1B7E; BALINESE\n-            0x1B7F,   \/\/ 1B7F      ; UNKNOWN\n+            0x1B4D,   \/\/ 1B4D      ; UNKNOWN\n+            0x1B4E,   \/\/ 1B4E..1B7F; BALINESE\n@@ -5934,2 +6091,2 @@\n-            0x1C80,   \/\/ 1C80..1C88; CYRILLIC\n-            0x1C89,   \/\/ 1C89..1C8F; UNKNOWN\n+            0x1C80,   \/\/ 1C80..1C8A; CYRILLIC\n+            0x1C8B,   \/\/ 1C8B..1C8F; UNKNOWN\n@@ -6028,2 +6185,2 @@\n-            0x2190,   \/\/ 2190..2426; COMMON\n-            0x2427,   \/\/ 2427..243F; UNKNOWN\n+            0x2190,   \/\/ 2190..2429; COMMON\n+            0x242A,   \/\/ 242A..243F; UNKNOWN\n@@ -6110,2 +6267,2 @@\n-            0x31C0,   \/\/ 31C0..31E3; COMMON\n-            0x31E4,   \/\/ 31E4..31EE; UNKNOWN\n+            0x31C0,   \/\/ 31C0..31E5; COMMON\n+            0x31E6,   \/\/ 31E6..31EE; UNKNOWN\n@@ -6139,2 +6296,2 @@\n-            0xA78B,   \/\/ A78B..A7CA; LATIN\n-            0xA7CB,   \/\/ A7CB..A7CF; UNKNOWN\n+            0xA78B,   \/\/ A78B..A7CD; LATIN\n+            0xA7CE,   \/\/ A7CE..A7CF; UNKNOWN\n@@ -6145,2 +6302,2 @@\n-            0xA7D5,   \/\/ A7D5..A7D9; LATIN\n-            0xA7DA,   \/\/ A7DA..A7F1; UNKNOWN\n+            0xA7D5,   \/\/ A7D5..A7DC; LATIN\n+            0xA7DD,   \/\/ A7DD..A7F1; UNKNOWN\n@@ -6367,1 +6524,3 @@\n-            0x105BD,  \/\/ 105BD..105FF; UNKNOWN\n+            0x105BD,  \/\/ 105BD..105BF; UNKNOWN\n+            0x105C0,  \/\/ 105C0..105F3; TODHRI\n+            0x105F4,  \/\/ 105F4..105FF; UNKNOWN\n@@ -6465,1 +6624,7 @@\n-            0x10D3A,  \/\/ 10D3A..10E5F; UNKNOWN\n+            0x10D3A,  \/\/ 10D3A..10D3F; UNKNOWN\n+            0x10D40,  \/\/ 10D40..10D65; GARAY\n+            0x10D66,  \/\/ 10D66..10D68; UNKNOWN\n+            0x10D69,  \/\/ 10D69..10D85; GARAY\n+            0x10D86,  \/\/ 10D86..10D8D; UNKNOWN\n+            0x10D8E,  \/\/ 10D8E..10D8F; GARAY\n+            0x10D90,  \/\/ 10D90..10E5F; UNKNOWN\n@@ -6473,2 +6638,4 @@\n-            0x10EB2,  \/\/ 10EB2..10EFC; UNKNOWN\n-            0x10EFD,  \/\/ 10EFD..10EFF; ARABIC\n+            0x10EB2,  \/\/ 10EB2..10EC1; UNKNOWN\n+            0x10EC2,  \/\/ 10EC2..10EC4; ARABIC\n+            0x10EC5,  \/\/ 10EC5..10EFB; UNKNOWN\n+            0x10EFC,  \/\/ 10EFC..10EFF; ARABIC\n@@ -6556,1 +6723,23 @@\n-            0x11375,  \/\/ 11375..113FF; UNKNOWN\n+            0x11375,  \/\/ 11375..1137F; UNKNOWN\n+            0x11380,  \/\/ 11380..11389; TULU_TIGALARI\n+            0x1138A,  \/\/ 1138A       ; UNKNOWN\n+            0x1138B,  \/\/ 1138B       ; TULU_TIGALARI\n+            0x1138C,  \/\/ 1138C..1138D; UNKNOWN\n+            0x1138E,  \/\/ 1138E       ; TULU_TIGALARI\n+            0x1138F,  \/\/ 1138F       ; UNKNOWN\n+            0x11390,  \/\/ 11390..113B5; TULU_TIGALARI\n+            0x113B6,  \/\/ 113B6       ; UNKNOWN\n+            0x113B7,  \/\/ 113B7..113C0; TULU_TIGALARI\n+            0x113C1,  \/\/ 113C1       ; UNKNOWN\n+            0x113C2,  \/\/ 113C2       ; TULU_TIGALARI\n+            0x113C3,  \/\/ 113C3..113C4; UNKNOWN\n+            0x113C5,  \/\/ 113C5       ; TULU_TIGALARI\n+            0x113C6,  \/\/ 113C6       ; UNKNOWN\n+            0x113C7,  \/\/ 113C7..113CA; TULU_TIGALARI\n+            0x113CB,  \/\/ 113CB       ; UNKNOWN\n+            0x113CC,  \/\/ 113CC..113D5; TULU_TIGALARI\n+            0x113D6,  \/\/ 113D6       ; UNKNOWN\n+            0x113D7,  \/\/ 113D7..113D8; TULU_TIGALARI\n+            0x113D9,  \/\/ 113D9..113E0; UNKNOWN\n+            0x113E1,  \/\/ 113E1..113E2; TULU_TIGALARI\n+            0x113E3,  \/\/ 113E3..113FF; UNKNOWN\n@@ -6578,1 +6767,3 @@\n-            0x116CA,  \/\/ 116CA..116FF; UNKNOWN\n+            0x116CA,  \/\/ 116CA..116CF; UNKNOWN\n+            0x116D0,  \/\/ 116D0..116E3; MYANMAR\n+            0x116E4,  \/\/ 116E4..116FF; UNKNOWN\n@@ -6620,1 +6811,5 @@\n-            0x11B0A,  \/\/ 11B0A..11BFF; UNKNOWN\n+            0x11B0A,  \/\/ 11B0A..11BBF; UNKNOWN\n+            0x11BC0,  \/\/ 11BC0..11BE1; SUNUWAR\n+            0x11BE2,  \/\/ 11BE2..11BEF; UNKNOWN\n+            0x11BF0,  \/\/ 11BF0..11BF9; SUNUWAR\n+            0x11BFA,  \/\/ 11BFA..11BFF; UNKNOWN\n@@ -6667,2 +6862,2 @@\n-            0x11F3E,  \/\/ 11F3E..11F59; KAWI\n-            0x11F5A,  \/\/ 11F5A..11FAF; UNKNOWN\n+            0x11F3E,  \/\/ 11F3E..11F5A; KAWI\n+            0x11F5B,  \/\/ 11F5B..11FAF; UNKNOWN\n@@ -6685,1 +6880,3 @@\n-            0x13456,  \/\/ 13456..143FF; UNKNOWN\n+            0x13456,  \/\/ 13456..1345F; UNKNOWN\n+            0x13460,  \/\/ 13460..143FA; EGYPTIAN_HIEROGLYPHS\n+            0x143FB,  \/\/ 143FB..143FF; UNKNOWN\n@@ -6687,1 +6884,3 @@\n-            0x14647,  \/\/ 14647..167FF; UNKNOWN\n+            0x14647,  \/\/ 14647..160FF; UNKNOWN\n+            0x16100,  \/\/ 16100..16139; GURUNG_KHEMA\n+            0x1613A,  \/\/ 1613A..167FF; UNKNOWN\n@@ -6712,1 +6911,3 @@\n-            0x16B90,  \/\/ 16B90..16E3F; UNKNOWN\n+            0x16B90,  \/\/ 16B90..16D3F; UNKNOWN\n+            0x16D40,  \/\/ 16D40..16D79; KIRAT_RAI\n+            0x16D7A,  \/\/ 16D7A..16E3F; UNKNOWN\n@@ -6732,1 +6933,2 @@\n-            0x18CD6,  \/\/ 18CD6..18CFF; UNKNOWN\n+            0x18CD6,  \/\/ 18CD6..18CFE; UNKNOWN\n+            0x18CFF,  \/\/ 18CFF       ; KHITAN_SMALL_SCRIPT\n@@ -6765,1 +6967,5 @@\n-            0x1BCA4,  \/\/ 1BCA4..1CEFF; UNKNOWN\n+            0x1BCA4,  \/\/ 1BCA4..1CBFF; UNKNOWN\n+            0x1CC00,  \/\/ 1CC00..1CCF9; COMMON\n+            0x1CCFA,  \/\/ 1CCFA..1CCFF; UNKNOWN\n+            0x1CD00,  \/\/ 1CD00..1CEB3; COMMON\n+            0x1CEB4,  \/\/ 1CEB4..1CEFF; UNKNOWN\n@@ -6876,1 +7082,5 @@\n-            0x1E4FA,  \/\/ 1E4FA..1E7DF; UNKNOWN\n+            0x1E4FA,  \/\/ 1E4FA..1E5CF; UNKNOWN\n+            0x1E5D0,  \/\/ 1E5D0..1E5FA; OL_ONAL\n+            0x1E5FB,  \/\/ 1E5FB..1E5FE; UNKNOWN\n+            0x1E5FF,  \/\/ 1E5FF       ; OL_ONAL\n+            0x1E600,  \/\/ 1E600..1E7DF; UNKNOWN\n@@ -7017,2 +7227,4 @@\n-            0x1F8B0,  \/\/ 1F8B0..1F8B1; COMMON\n-            0x1F8B2,  \/\/ 1F8B2..1F8FF; UNKNOWN\n+            0x1F8B0,  \/\/ 1F8B0..1F8BB; COMMON\n+            0x1F8BC,  \/\/ 1F8BC..1F8BF; UNKNOWN\n+            0x1F8C0,  \/\/ 1F8C0..1F8C1; COMMON\n+            0x1F8C2,  \/\/ 1F8C2..1F8FF; UNKNOWN\n@@ -7025,10 +7237,8 @@\n-            0x1FA80,  \/\/ 1FA80..1FA88; COMMON\n-            0x1FA89,  \/\/ 1FA89..1FA8F; UNKNOWN\n-            0x1FA90,  \/\/ 1FA90..1FABD; COMMON\n-            0x1FABE,  \/\/ 1FABE       ; UNKNOWN\n-            0x1FABF,  \/\/ 1FABF..1FAC5; COMMON\n-            0x1FAC6,  \/\/ 1FAC6..1FACD; UNKNOWN\n-            0x1FACE,  \/\/ 1FACE..1FADB; COMMON\n-            0x1FADC,  \/\/ 1FADC..1FADF; UNKNOWN\n-            0x1FAE0,  \/\/ 1FAE0..1FAE8; COMMON\n-            0x1FAE9,  \/\/ 1FAE9..1FAEF; UNKNOWN\n+            0x1FA80,  \/\/ 1FA80..1FA89; COMMON\n+            0x1FA8A,  \/\/ 1FA8A..1FA8E; UNKNOWN\n+            0x1FA8F,  \/\/ 1FA8F..1FAC6; COMMON\n+            0x1FAC7,  \/\/ 1FAC7..1FACD; UNKNOWN\n+            0x1FACE,  \/\/ 1FACE..1FADC; COMMON\n+            0x1FADD,  \/\/ 1FADD..1FADE; UNKNOWN\n+            0x1FADF,  \/\/ 1FADF..1FAE9; COMMON\n+            0x1FAEA,  \/\/ 1FAEA..1FAEF; UNKNOWN\n@@ -7039,3 +7249,1 @@\n-            0x1FB94,  \/\/ 1FB94..1FBCA; COMMON\n-            0x1FBCB,  \/\/ 1FBCB..1FBEF; UNKNOWN\n-            0x1FBF0,  \/\/ 1FBF0..1FBF9; COMMON\n+            0x1FB94,  \/\/ 1FB94..1FBF9; COMMON\n@@ -7168,2 +7376,2 @@\n-            UNKNOWN,                  \/\/ 0892..0897\n-            ARABIC,                   \/\/ 0898..08E1\n+            UNKNOWN,                  \/\/ 0892..0896\n+            ARABIC,                   \/\/ 0897..08E1\n@@ -7582,3 +7790,2 @@\n-            UNKNOWN,                  \/\/ 1B4D..1B4F\n-            BALINESE,                 \/\/ 1B50..1B7E\n-            UNKNOWN,                  \/\/ 1B7F\n+            UNKNOWN,                  \/\/ 1B4D\n+            BALINESE,                 \/\/ 1B4E..1B7F\n@@ -7595,2 +7802,2 @@\n-            CYRILLIC,                 \/\/ 1C80..1C88\n-            UNKNOWN,                  \/\/ 1C89..1C8F\n+            CYRILLIC,                 \/\/ 1C80..1C8A\n+            UNKNOWN,                  \/\/ 1C8B..1C8F\n@@ -7689,2 +7896,2 @@\n-            COMMON,                   \/\/ 2190..2426\n-            UNKNOWN,                  \/\/ 2427..243F\n+            COMMON,                   \/\/ 2190..2429\n+            UNKNOWN,                  \/\/ 242A..243F\n@@ -7771,2 +7978,2 @@\n-            COMMON,                   \/\/ 31C0..31E3\n-            UNKNOWN,                  \/\/ 31E4..31EE\n+            COMMON,                   \/\/ 31C0..31E5\n+            UNKNOWN,                  \/\/ 31E6..31EE\n@@ -7800,2 +8007,2 @@\n-            LATIN,                    \/\/ A78B..A7CA\n-            UNKNOWN,                  \/\/ A7CB..A7CF\n+            LATIN,                    \/\/ A78B..A7CD\n+            UNKNOWN,                  \/\/ A7CE..A7CF\n@@ -7806,2 +8013,2 @@\n-            LATIN,                    \/\/ A7D5..A7D9\n-            UNKNOWN,                  \/\/ A7DA..A7F1\n+            LATIN,                    \/\/ A7D5..A7DC\n+            UNKNOWN,                  \/\/ A7DD..A7F1\n@@ -8028,1 +8235,3 @@\n-            UNKNOWN,                  \/\/ 105BD..105FF\n+            UNKNOWN,                  \/\/ 105BD..105BF\n+            TODHRI,                   \/\/ 105C0..105F3\n+            UNKNOWN,                  \/\/ 105F4..105FF\n@@ -8126,1 +8335,7 @@\n-            UNKNOWN,                  \/\/ 10D3A..10E5F\n+            UNKNOWN,                  \/\/ 10D3A..10D3F\n+            GARAY,                    \/\/ 10D40..10D65\n+            UNKNOWN,                  \/\/ 10D66..10D68\n+            GARAY,                    \/\/ 10D69..10D85\n+            UNKNOWN,                  \/\/ 10D86..10D8D\n+            GARAY,                    \/\/ 10D8E..10D8F\n+            UNKNOWN,                  \/\/ 10D90..10E5F\n@@ -8134,2 +8349,4 @@\n-            UNKNOWN,                  \/\/ 10EB2..10EFC\n-            ARABIC,                   \/\/ 10EFD..10EFF\n+            UNKNOWN,                  \/\/ 10EB2..10EC1\n+            ARABIC,                   \/\/ 10EC2..10EC4\n+            UNKNOWN,                  \/\/ 10EC5..10EFB\n+            ARABIC,                   \/\/ 10EFC..10EFF\n@@ -8217,1 +8434,23 @@\n-            UNKNOWN,                  \/\/ 11375..113FF\n+            UNKNOWN,                  \/\/ 11375..1137F\n+            TULU_TIGALARI,            \/\/ 11380..11389\n+            UNKNOWN,                  \/\/ 1138A\n+            TULU_TIGALARI,            \/\/ 1138B\n+            UNKNOWN,                  \/\/ 1138C..1138D\n+            TULU_TIGALARI,            \/\/ 1138E\n+            UNKNOWN,                  \/\/ 1138F\n+            TULU_TIGALARI,            \/\/ 11390..113B5\n+            UNKNOWN,                  \/\/ 113B6\n+            TULU_TIGALARI,            \/\/ 113B7..113C0\n+            UNKNOWN,                  \/\/ 113C1\n+            TULU_TIGALARI,            \/\/ 113C2\n+            UNKNOWN,                  \/\/ 113C3..113C4\n+            TULU_TIGALARI,            \/\/ 113C5\n+            UNKNOWN,                  \/\/ 113C6\n+            TULU_TIGALARI,            \/\/ 113C7..113CA\n+            UNKNOWN,                  \/\/ 113CB\n+            TULU_TIGALARI,            \/\/ 113CC..113D5\n+            UNKNOWN,                  \/\/ 113D6\n+            TULU_TIGALARI,            \/\/ 113D7..113D8\n+            UNKNOWN,                  \/\/ 113D9..113E0\n+            TULU_TIGALARI,            \/\/ 113E1..113E2\n+            UNKNOWN,                  \/\/ 113E3..113FF\n@@ -8239,1 +8478,3 @@\n-            UNKNOWN,                  \/\/ 116CA..116FF\n+            UNKNOWN,                  \/\/ 116CA..116CF\n+            MYANMAR,                  \/\/ 116D0..116E3\n+            UNKNOWN,                  \/\/ 116E4..116FF\n@@ -8281,1 +8522,5 @@\n-            UNKNOWN,                  \/\/ 11B0A..11BFF\n+            UNKNOWN,                  \/\/ 11B0A..11BBF\n+            SUNUWAR,                  \/\/ 11BC0..11BE1\n+            UNKNOWN,                  \/\/ 11BE2..11BEF\n+            SUNUWAR,                  \/\/ 11BF0..11BF9\n+            UNKNOWN,                  \/\/ 11BFA..11BFF\n@@ -8328,2 +8573,2 @@\n-            KAWI,                     \/\/ 11F3E..11F59\n-            UNKNOWN,                  \/\/ 11F5A..11FAF\n+            KAWI,                     \/\/ 11F3E..11F5A\n+            UNKNOWN,                  \/\/ 11F5B..11FAF\n@@ -8346,1 +8591,3 @@\n-            UNKNOWN,                  \/\/ 13456..143FF\n+            UNKNOWN,                  \/\/ 13456..1345F\n+            EGYPTIAN_HIEROGLYPHS,     \/\/ 13460..143FA\n+            UNKNOWN,                  \/\/ 143FB..143FF\n@@ -8348,1 +8595,3 @@\n-            UNKNOWN,                  \/\/ 14647..167FF\n+            UNKNOWN,                  \/\/ 14647..160FF\n+            GURUNG_KHEMA,             \/\/ 16100..16139\n+            UNKNOWN,                  \/\/ 1613A..167FF\n@@ -8373,1 +8622,3 @@\n-            UNKNOWN,                  \/\/ 16B90..16E3F\n+            UNKNOWN,                  \/\/ 16B90..16D3F\n+            KIRAT_RAI,                \/\/ 16D40..16D79\n+            UNKNOWN,                  \/\/ 16D7A..16E3F\n@@ -8393,1 +8644,2 @@\n-            UNKNOWN,                  \/\/ 18CD6..18CFF\n+            UNKNOWN,                  \/\/ 18CD6..18CFE\n+            KHITAN_SMALL_SCRIPT,      \/\/ 18CFF\n@@ -8426,1 +8678,5 @@\n-            UNKNOWN,                  \/\/ 1BCA4..1CEFF\n+            UNKNOWN,                  \/\/ 1BCA4..1CBFF\n+            COMMON,                   \/\/ 1CC00..1CCF9\n+            UNKNOWN,                  \/\/ 1CCFA..1CCFF\n+            COMMON,                   \/\/ 1CD00..1CEB3\n+            UNKNOWN,                  \/\/ 1CEB4..1CEFF\n@@ -8537,1 +8793,5 @@\n-            UNKNOWN,                  \/\/ 1E4FA..1E7DF\n+            UNKNOWN,                  \/\/ 1E4FA..1E5CF\n+            OL_ONAL,                  \/\/ 1E5D0..1E5FA\n+            UNKNOWN,                  \/\/ 1E5FB..1E5FE\n+            OL_ONAL,                  \/\/ 1E5FF\n+            UNKNOWN,                  \/\/ 1E600..1E7DF\n@@ -8678,2 +8938,4 @@\n-            COMMON,                   \/\/ 1F8B0..1F8B1\n-            UNKNOWN,                  \/\/ 1F8B2..1F8FF\n+            COMMON,                   \/\/ 1F8B0..1F8BB\n+            UNKNOWN,                  \/\/ 1F8BC..1F8BF\n+            COMMON,                   \/\/ 1F8C0..1F8C1\n+            UNKNOWN,                  \/\/ 1F8C2..1F8FF\n@@ -8686,10 +8948,8 @@\n-            COMMON,                   \/\/ 1FA80..1FA88\n-            UNKNOWN,                  \/\/ 1FA89..1FA8F\n-            COMMON,                   \/\/ 1FA90..1FABD\n-            UNKNOWN,                  \/\/ 1FABE\n-            COMMON,                   \/\/ 1FABF..1FAC5\n-            UNKNOWN,                  \/\/ 1FAC6..1FACD\n-            COMMON,                   \/\/ 1FACE..1FADB\n-            UNKNOWN,                  \/\/ 1FADC..1FADF\n-            COMMON,                   \/\/ 1FAE0..1FAE8\n-            UNKNOWN,                  \/\/ 1FAE9..1FAEF\n+            COMMON,                   \/\/ 1FA80..1FA89\n+            UNKNOWN,                  \/\/ 1FA8A..1FA8E\n+            COMMON,                   \/\/ 1FA8F..1FAC6\n+            UNKNOWN,                  \/\/ 1FAC7..1FACD\n+            COMMON,                   \/\/ 1FACE..1FADC\n+            UNKNOWN,                  \/\/ 1FADD..1FADE\n+            COMMON,                   \/\/ 1FADF..1FAE9\n+            UNKNOWN,                  \/\/ 1FAEA..1FAEF\n@@ -8700,3 +8960,1 @@\n-            COMMON,                   \/\/ 1FB94..1FBCA\n-            UNKNOWN,                  \/\/ 1FBCB..1FBEF\n-            COMMON,                   \/\/ 1FBF0..1FBF9\n+            COMMON,                   \/\/ 1FB94..1FBF9\n@@ -8770,0 +9028,1 @@\n+            aliases.put(\"GARA\", GARAY);\n@@ -8778,0 +9037,1 @@\n+            aliases.put(\"GUKH\", GURUNG_KHEMA);\n@@ -8799,0 +9059,1 @@\n+            aliases.put(\"KRAI\", KIRAT_RAI);\n@@ -8835,0 +9096,1 @@\n+            aliases.put(\"ONAO\", OL_ONAL);\n@@ -8866,0 +9128,1 @@\n+            aliases.put(\"SUNU\", SUNUWAR);\n@@ -8883,0 +9146,1 @@\n+            aliases.put(\"TODR\", TODHRI);\n@@ -8884,0 +9148,1 @@\n+            aliases.put(\"TUTG\", TULU_TIGALARI);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Character.java","additions":366,"deletions":101,"binary":false,"changes":467,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+import java.security.AllPermission;\n@@ -63,1 +64,0 @@\n-import java.util.HashSet;\n@@ -95,2 +95,0 @@\n-import sun.security.util.SecurityConstants;\n-import sun.reflect.misc.ReflectUtil;\n@@ -2775,1 +2773,1 @@\n-            perms.add(SecurityConstants.ALL_PERMISSION);\n+            perms.add(new AllPermission());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1289,5 +1289,1 @@\n-        String v = null;\n-        try {\n-            v = System.getProperty(nm);\n-        } catch (IllegalArgumentException | NullPointerException e) {\n-        }\n+        String v = nm != null && !nm.isEmpty() ? System.getProperty(nm) : null;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1385,5 +1385,1 @@\n-        String v = null;\n-        try {\n-            v = System.getProperty(nm);\n-        } catch (IllegalArgumentException | NullPointerException e) {\n-        }\n+        String v = nm != null && !nm.isEmpty() ? System.getProperty(nm) : null;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-import java.net.URL;\n@@ -51,4 +50,0 @@\n-import java.security.AccessController;\n-import java.security.CodeSource;\n-import java.security.PrivilegedAction;\n-import java.util.Collections;\n@@ -61,1 +56,0 @@\n-import java.util.PropertyPermission;\n@@ -64,1 +58,1 @@\n-import java.util.WeakHashMap;\n+import java.util.concurrent.ScheduledExecutorService;\n@@ -96,1 +90,0 @@\n-import sun.security.util.SecurityConstants;\n@@ -204,1 +197,0 @@\n-        checkIO();\n@@ -216,1 +208,0 @@\n-        checkIO();\n@@ -228,1 +219,0 @@\n-        checkIO();\n@@ -279,8 +269,0 @@\n-    private static void checkIO() {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPermission(new RuntimePermission(\"setIO\"));\n-        }\n-    }\n-\n@@ -291,14 +273,0 @@\n-    private static class CallersHolder {\n-        \/\/ Remember callers of setSecurityManager() here so that warning\n-        \/\/ is only printed once for each different caller\n-        static final Map<Class<?>, Boolean> callers\n-            = Collections.synchronizedMap(new WeakHashMap<>());\n-    }\n-\n-    static URL codeSource(Class<?> clazz) {\n-        PrivilegedAction<ProtectionDomain> pa = clazz::getProtectionDomain;\n-        @SuppressWarnings(\"removal\")\n-        CodeSource cs = AccessController.doPrivileged(pa).getCodeSource();\n-        return (cs != null) ? cs.getLocation() : null;\n-    }\n-\n@@ -685,6 +653,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPropertiesAccess();\n-        }\n-\n@@ -729,6 +691,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPropertiesAccess();\n-        }\n-\n@@ -766,6 +722,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPropertyAccess(key);\n-        }\n-\n@@ -794,6 +744,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPropertyAccess(key);\n-        }\n-\n@@ -826,7 +770,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPermission(new PropertyPermission(key,\n-                SecurityConstants.PROPERTY_WRITE_ACTION));\n-        }\n-\n@@ -857,6 +794,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPermission(new PropertyPermission(key, \"write\"));\n-        }\n-\n@@ -909,6 +840,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPermission(new RuntimePermission(\"getenv.\"+name));\n-        }\n-\n@@ -949,6 +874,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPermission(new RuntimePermission(\"getenv.*\"));\n-        }\n-\n@@ -1380,7 +1299,0 @@\n-        \/**\n-         * The {@code RuntimePermission(\"loggerFinder\")} is\n-         * necessary to subclass and instantiate the {@code LoggerFinder} class,\n-         * as well as to obtain loggers from an instance of that class.\n-         *\/\n-        static final RuntimePermission LOGGERFINDER_PERMISSION =\n-                new RuntimePermission(\"loggerFinder\");\n@@ -1397,14 +1309,0 @@\n-            this(checkPermission());\n-        }\n-\n-        private LoggerFinder(Void unused) {\n-            \/\/ nothing to do.\n-        }\n-\n-        private static Void checkPermission() {\n-            @SuppressWarnings(\"removal\")\n-            final SecurityManager sm = System.getSecurityManager();\n-            if (sm != null) {\n-                sm.checkPermission(LOGGERFINDER_PERMISSION);\n-            }\n-            return null;\n@@ -1480,5 +1378,0 @@\n-            @SuppressWarnings(\"removal\")\n-            final SecurityManager sm = System.getSecurityManager();\n-            if (sm != null) {\n-                sm.checkPermission(LOGGERFINDER_PERMISSION);\n-            }\n@@ -1490,1 +1383,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -1497,4 +1389,1 @@\n-                PrivilegedAction<LoggerFinder> pa =\n-                        () -> LoggerFinderLoader.getLoggerFinder();\n-                finder = AccessController.doPrivileged(pa, null,\n-                        LOGGERFINDER_PERMISSION);\n+                finder = LoggerFinderLoader.getLoggerFinder();\n@@ -1597,1 +1486,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1606,11 +1494,0 @@\n-        final SecurityManager sm = System.getSecurityManager();\n-        \/\/ We don't use LazyLoggers if a resource bundle is specified.\n-        \/\/ Bootstrap sensitive classes in the JDK do not use resource bundles\n-        \/\/ when logging. This could be revisited later, if it needs to.\n-        if (sm != null) {\n-            final PrivilegedAction<Logger> pa =\n-                    () -> LoggerFinder.accessProvider()\n-                            .getLocalizedLogger(name, rb, caller.getModule());\n-            return AccessController.doPrivileged(pa, null,\n-                                         LoggerFinder.LOGGERFINDER_PERMISSION);\n-        }\n@@ -2429,0 +2306,4 @@\n+\n+            public Stream<ScheduledExecutorService> virtualThreadDelayedTaskSchedulers() {\n+                return VirtualThread.delayedTaskSchedulers();\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":6,"deletions":125,"binary":false,"changes":131,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -35,1 +34,0 @@\n-import java.util.Properties;\n@@ -712,2 +710,1 @@\n-        Properties props = GetPropertyAction.privilegedGetProperties();\n-                props.getProperty(\"java.lang.invoke.MethodHandleNatives.USE_SOFT_CACHE\", \"true\"));\n+                System.getProperty(\"java.lang.invoke.MethodHandleNatives.USE_SOFT_CACHE\", \"true\"));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleNatives.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -55,1 +55,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -987,1 +986,1 @@\n-    private static final String PROXY_PACKAGE_PREFIX = ReflectUtil.PROXY_PACKAGE;\n+    private static final String PROXY_PACKAGE_PREFIX = \"com.sun.proxy\";\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Proxy.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -106,1 +106,0 @@\n-    @SuppressWarnings(\"removal\")\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ProxyGenerator.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -55,2 +55,0 @@\n-import sun.security.action.GetIntegerAction;\n-import sun.security.action.GetPropertyAction;\n@@ -79,1 +77,1 @@\n-            GetPropertyAction.privilegedGetProperty(\"value.bsm.debug\") != null;\n+            System.getProperty(\"value.bsm.debug\") != null;\n@@ -81,1 +79,1 @@\n-            GetIntegerAction.privilegedGetProperty(\"jdk.value.recursion.threshold\", Integer.MAX_VALUE);\n+            Integer.getInteger(\"jdk.value.recursion.threshold\", Integer.MAX_VALUE);\n@@ -377,1 +375,1 @@\n-            SALT = GetIntegerAction.privilegedGetProperty(\"value.bsm.salt\", value);\n+            SALT = Integer.getInteger(\"value.bsm.salt\", value);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/ValueObjectMethods.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+import java.util.concurrent.ScheduledExecutorService;\n@@ -599,0 +600,5 @@\n+    \/**\n+     * Returns a stream of the delayed task schedulers used for virtual threads.\n+     *\/\n+    Stream<ScheduledExecutorService> virtualThreadDelayedTaskSchedulers();\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,5 +34,5 @@\n-import java.lang.classfile.components.ClassPrinter.LeafNode;\n-import java.lang.classfile.components.ClassPrinter.ListNode;\n-import java.lang.classfile.components.ClassPrinter.MapNode;\n-import java.lang.classfile.components.ClassPrinter.Node;\n-import java.lang.classfile.components.ClassPrinter.Verbosity;\n+import jdk.internal.classfile.components.ClassPrinter.LeafNode;\n+import jdk.internal.classfile.components.ClassPrinter.ListNode;\n+import jdk.internal.classfile.components.ClassPrinter.MapNode;\n+import jdk.internal.classfile.components.ClassPrinter.Node;\n+import jdk.internal.classfile.components.ClassPrinter.Verbosity;\n@@ -56,0 +56,1 @@\n+import static java.lang.constant.ConstantDescs.BSM_NULL_CONSTANT;\n@@ -277,1 +278,6 @@\n-                out.accept(quoteAndEscapeYaml(leaf.value()));\n+                var v = leaf.value();\n+                if (BSM_NULL_CONSTANT.equals(v)) {\n+                    out.accept(\"null\");\n+                } else {\n+                    out.accept(quoteAndEscapeYaml(v));\n+                }\n@@ -332,0 +338,1 @@\n+        if (s.equalsIgnoreCase(\"null\")) return \"'\" + s + \"'\";\n@@ -361,1 +368,6 @@\n-                out.accept(quoteAndEscapeJson(leaf.value()));\n+                var v = leaf.value();\n+                if (BSM_NULL_CONSTANT.equals(v)) {\n+                    out.accept(\"null\");\n+                } else {\n+                    out.accept(quoteAndEscapeJson(v));\n+                }\n@@ -437,1 +449,6 @@\n-                out.accept(xmlEscape(leaf.value()));\n+                var v = leaf.value();\n+                if (BSM_NULL_CONSTANT.equals(v)) {\n+                    out.accept(\"<null\/>\");\n+                } else {\n+                    out.accept(xmlEscape(v));\n+                }\n@@ -545,1 +562,1 @@\n-                        case NULL -> ret.accept(\"null\");\n+                        case NULL -> ret.accept(BSM_NULL_CONSTANT);\n@@ -935,1 +952,1 @@\n-                                    .map(Utf8Entry::stringValue).orElse(\"null\"),\n+                                    .<ConstantDesc>map(Utf8Entry::stringValue).orElse(BSM_NULL_CONSTANT),\n@@ -937,1 +954,1 @@\n-                                    .map(Utf8Entry::stringValue).orElse(\"null\")));\n+                                    .<ConstantDesc>map(Utf8Entry::stringValue).orElse(BSM_NULL_CONSTANT)));\n@@ -946,2 +963,2 @@\n-                                        .map(cle -> cle.name().stringValue()).orElse(\"null\")),\n-                                leaf(\"inner name\", ic.innerName().map(Utf8Entry::stringValue).orElse(\"null\")),\n+                                        .map(cle -> (ConstantDesc)cle.name().stringValue()).orElse(BSM_NULL_CONSTANT)),\n+                                leaf(\"inner name\", ic.innerName().<ConstantDesc>map(Utf8Entry::stringValue).orElse(BSM_NULL_CONSTANT)),\n@@ -954,1 +971,1 @@\n-                                leaf(\"name\", p.name().map(Utf8Entry::stringValue).orElse(\"null\")),\n+                                leaf(\"name\", p.name().<ConstantDesc>map(Utf8Entry::stringValue).orElse(BSM_NULL_CONSTANT)),\n@@ -962,1 +979,1 @@\n-                                  leaf(\"version\", ma.moduleVersion().map(Utf8Entry::stringValue).orElse(\"null\")),\n+                                  leaf(\"version\", ma.moduleVersion().<ConstantDesc>map(Utf8Entry::stringValue).orElse(BSM_NULL_CONSTANT)),\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassPrinterImpl.java","additions":32,"deletions":15,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import java.lang.classfile.components.ClassRemapper;\n+import jdk.internal.classfile.components.ClassRemapper;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassRemapperImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-import java.util.function.Consumer;\n+import java.util.stream.Collectors;\n@@ -40,1 +40,0 @@\n-import java.util.stream.Collectors;\n@@ -68,28 +67,62 @@\n-            Consumer<Runnable> check = c -> {\n-                try {\n-                    c.run();\n-                } catch (VerifyError|Exception e) {\n-                    errors.add(new VerifyError(\"%s at constant pool index %d in %s\".formatted(e.getMessage(), cpe.index(), toString(classModel))));\n-                }\n-            };\n-            check.accept(switch (cpe) {\n-                case DoubleEntry de -> de::doubleValue;\n-                case FloatEntry fe -> fe::floatValue;\n-                case IntegerEntry ie -> ie::intValue;\n-                case LongEntry le -> le::longValue;\n-                case Utf8Entry ue -> ue::stringValue;\n-                case ConstantDynamicEntry cde -> cde::asSymbol;\n-                case InvokeDynamicEntry ide -> ide::asSymbol;\n-                case ClassEntry ce -> ce::asSymbol;\n-                case StringEntry se -> se::stringValue;\n-                case MethodHandleEntry mhe -> mhe::asSymbol;\n-                case MethodTypeEntry mte -> mte::asSymbol;\n-                case FieldRefEntry fre -> {\n-                    check.accept(fre.owner()::asSymbol);\n-                    check.accept(fre::typeSymbol);\n-                    yield () -> verifyFieldName(fre.name().stringValue());\n-                }\n-                case InterfaceMethodRefEntry imre -> {\n-                    check.accept(imre.owner()::asSymbol);\n-                    check.accept(imre::typeSymbol);\n-                    yield () -> verifyMethodName(imre.name().stringValue());\n+            try {\n+                switch (cpe) {\n+                    case DoubleEntry de -> de.doubleValue();\n+                    case FloatEntry fe -> fe.floatValue();\n+                    case IntegerEntry ie -> ie.intValue();\n+                    case LongEntry le -> le.longValue();\n+                    case Utf8Entry ue -> ue.stringValue();\n+                    case ConstantDynamicEntry cde -> cde.asSymbol();\n+                    case InvokeDynamicEntry ide -> ide.asSymbol();\n+                    case ClassEntry ce -> ce.asSymbol();\n+                    case StringEntry se -> se.stringValue();\n+                    case MethodHandleEntry mhe -> mhe.asSymbol();\n+                    case MethodTypeEntry mte -> mte.asSymbol();\n+                    case FieldRefEntry fre -> {\n+                        try {\n+                            fre.owner().asSymbol();\n+                        } catch (VerifyError|Exception e) {\n+                            errors.add(cpeVerifyError(cpe, e));\n+                        }\n+                        try {\n+                            fre.typeSymbol();\n+                        } catch (VerifyError|Exception e) {\n+                            errors.add(cpeVerifyError(cpe, e));\n+                        }\n+                        verifyFieldName(fre.name().stringValue());\n+                    }\n+                    case InterfaceMethodRefEntry imre -> {\n+                        try {\n+                            imre.owner().asSymbol();\n+                        } catch (VerifyError|Exception e) {\n+                            errors.add(cpeVerifyError(cpe, e));\n+                        }\n+                        try {\n+                            imre.typeSymbol();\n+                        } catch (VerifyError|Exception e) {\n+                            errors.add(cpeVerifyError(cpe, e));\n+                        }\n+                        verifyMethodName(imre.name().stringValue());\n+                    }\n+                    case MethodRefEntry mre -> {\n+                        try {\n+                            mre.owner().asSymbol();\n+                        } catch (VerifyError|Exception e) {\n+                            errors.add(cpeVerifyError(cpe, e));\n+                        }\n+                        try {\n+                            mre.typeSymbol();\n+                        } catch (VerifyError|Exception e) {\n+                            errors.add(cpeVerifyError(cpe, e));\n+                        }\n+                        verifyMethodName(mre.name().stringValue());\n+                    }\n+                    case ModuleEntry me -> me.asSymbol();\n+                    case NameAndTypeEntry nate -> {\n+                        try {\n+                            nate.name().stringValue();\n+                        } catch (VerifyError|Exception e) {\n+                            errors.add(cpeVerifyError(cpe, e));\n+                        }\n+                        nate.type().stringValue();\n+                    }\n+                    case PackageEntry pe -> pe.asSymbol();\n@@ -97,12 +130,3 @@\n-                case MethodRefEntry mre -> {\n-                    check.accept(mre.owner()::asSymbol);\n-                    check.accept(mre::typeSymbol);\n-                    yield () -> verifyMethodName(mre.name().stringValue());\n-                }\n-                case ModuleEntry me -> me::asSymbol;\n-                case NameAndTypeEntry nate -> {\n-                    check.accept(nate.name()::stringValue);\n-                    yield () -> nate.type().stringValue();\n-                }\n-                case PackageEntry pe -> pe::asSymbol;\n-            });\n+            } catch (VerifyError|Exception e) {\n+                errors.add(cpeVerifyError(cpe, e));\n+            }\n@@ -112,0 +136,4 @@\n+    private VerifyError cpeVerifyError(final PoolEntry cpe, final Throwable e) {\n+        return new VerifyError(\"%s at constant pool index %d in %s\".formatted(e.getMessage(), cpe.index(), toString(classModel)));\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/ParserVerifier.java","additions":70,"deletions":42,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-        @JEP(number=480, title=\"Structured Concurrency\", status=\"Third Preview\")\n+        @JEP(number=499, title=\"Structured Concurrency\", status=\"Fourth Preview\")\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/javac\/PreviewFeature.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-import java.security.PrivilegedAction;\n@@ -78,16 +77,0 @@\n-    \/**\n-     * A convenience class for acquiring the capability to instantiate\n-     * reflective objects.  Use this instead of a raw call to {@link\n-     * #getReflectionFactory} in order to avoid being limited by the\n-     * permissions of your callers.\n-     *\n-     * <p>An instance of this class can be used as the argument of\n-     * <code>AccessController.doPrivileged<\/code>.\n-     *\/\n-    public static final class GetReflectionFactoryAction\n-        implements PrivilegedAction<ReflectionFactory> {\n-        public ReflectionFactory run() {\n-            return getReflectionFactory();\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -84,1 +84,0 @@\n-    exports java.lang.classfile.components;\n@@ -179,0 +178,2 @@\n+    exports jdk.internal.classfile.components to\n+        jdk.jfr;\n@@ -295,1 +296,0 @@\n-        java.desktop,\n@@ -320,5 +320,0 @@\n-        java.management.rmi,\n-        java.rmi,\n-    exports sun.security.action to\n-        java.desktop,\n-        java.security.jgss;\n@@ -337,1 +332,0 @@\n-        java.rmi,\n@@ -351,2 +345,0 @@\n-        java.desktop,\n-        java.rmi,\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -4760,1 +4760,1 @@\n-                chk.checkPreview(tree.pos(), env.info.scope.owner, sym);\n+                chk.checkPreview(tree.pos(), env.info.scope.owner, site, sym);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1928,1 +1928,2 @@\n-            checkPreview(tree.pos(), m, other);\n+            checkPreview(TreeInfo.diagnosticPositionFor(m, tree),\n+                         m, origin.type, other);\n@@ -2008,1 +2009,2 @@\n-                (other.flags() & PREVIEW_API) == 0) {\n+                ((other.flags() & PREVIEW_API) == 0 &&\n+                 (other.owner.flags() & PREVIEW_API) == 0)) {\n@@ -3928,2 +3930,23 @@\n-        if ((s.flags() & PREVIEW_API) != 0 && !preview.participatesInPreview(syms, other, s) && !disablePreviewCheck) {\n-            if ((s.flags() & PREVIEW_REFLECTIVE) == 0) {\n+        checkPreview(pos, other, Type.noType, s);\n+    }\n+\n+    void checkPreview(DiagnosticPosition pos, Symbol other, Type site, Symbol s) {\n+        boolean sIsPreview;\n+        Symbol previewSymbol;\n+        if ((s.flags() & PREVIEW_API) != 0) {\n+            sIsPreview = true;\n+            previewSymbol=  s;\n+        } else if ((s.kind == Kind.MTH || s.kind == Kind.VAR) &&\n+                   site.tsym != null &&\n+                   (site.tsym.flags() & PREVIEW_API) == 0 &&\n+                   (s.owner.flags() & PREVIEW_API) != 0) {\n+            \/\/calling a method, or using a field, whose owner is a preview, but\n+            \/\/using a site that is not a preview. Also produce an error or warning:\n+            sIsPreview = true;\n+            previewSymbol = s.owner;\n+        } else {\n+            sIsPreview = false;\n+            previewSymbol = null;\n+        }\n+        if (sIsPreview && !preview.participatesInPreview(syms, other, s) && !disablePreviewCheck) {\n+            if ((previewSymbol.flags() & PREVIEW_REFLECTIVE) == 0) {\n@@ -4183,0 +4206,23 @@\n+\n+        @Override\n+        public void visitLambda(JCLambda tree) {\n+            final boolean constructorPrev = constructor;\n+            final boolean firstStatementPrev = firstStatement;\n+            final JCReturn earlyReturnPrev = earlyReturn;\n+            final Name initCallPrev = initCall;\n+            final int scanDepthPrev = scanDepth;\n+            constructor = false;\n+            firstStatement = false;\n+            earlyReturn = null;\n+            initCall = null;\n+            scanDepth = 0;\n+            try {\n+                super.visitLambda(tree);\n+            } finally {\n+                constructor = constructorPrev;\n+                firstStatement = firstStatementPrev;\n+                earlyReturn = earlyReturnPrev;\n+                initCall = initCallPrev;\n+                scanDepth = scanDepthPrev;\n+            }\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":50,"deletions":4,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1811,7 +1811,1 @@\n-        long mod = 0;\n-        try {\n-            mod = filename.getLastModified();\n-        } catch (SecurityException e) {\n-            throw new AssertionError(\"CRT: couldn't get source file modification date: \" + e.getMessage());\n-        }\n-        return mod;\n+        return filename.getLastModified();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3448,1 +3448,1 @@\n-                    if (typeDepth == 0) {\n+                    if (typeDepth == 0 && !peekToken(lookahead, DOT)) {\n@@ -4240,1 +4240,1 @@\n-                            if (token.name() == names.transitive && !isTransitive) {\n+                            if (token.name() == names.transitive) {\n@@ -4245,0 +4245,3 @@\n+                                if (isTransitive) {\n+                                    log.error(DiagnosticFlag.SYNTAX, token.pos, Errors.RepeatedModifier);\n+                                }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,3 +33,0 @@\n-import java.net.MalformedURLException;\n-import java.net.URL;\n-import java.nio.file.Path;\n@@ -65,1 +62,0 @@\n-import com.sun.tools.javac.file.JavacFileManager;\n@@ -170,1 +166,0 @@\n-    private SecurityException processorLoaderException;\n@@ -271,12 +266,11 @@\n-        try {\n-            if (fileManager.hasLocation(ANNOTATION_PROCESSOR_MODULE_PATH)) {\n-                try {\n-                    serviceLoader = fileManager.getServiceLoader(ANNOTATION_PROCESSOR_MODULE_PATH, Processor.class);\n-                } catch (IOException e) {\n-                    throw new Abort(e);\n-                }\n-            } else {\n-                \/\/ If processorpath is not explicitly set, use the classpath.\n-                processorClassLoader = fileManager.hasLocation(ANNOTATION_PROCESSOR_PATH)\n-                    ? fileManager.getClassLoader(ANNOTATION_PROCESSOR_PATH)\n-                    : fileManager.getClassLoader(CLASS_PATH);\n+        if (fileManager.hasLocation(ANNOTATION_PROCESSOR_MODULE_PATH)) {\n+            try {\n+                serviceLoader = fileManager.getServiceLoader(ANNOTATION_PROCESSOR_MODULE_PATH, Processor.class);\n+            } catch (IOException e) {\n+                throw new Abort(e);\n+            }\n+        } else {\n+            \/\/ If processorpath is not explicitly set, use the classpath.\n+            processorClassLoader = fileManager.hasLocation(ANNOTATION_PROCESSOR_PATH)\n+                ? fileManager.getClassLoader(ANNOTATION_PROCESSOR_PATH)\n+                : fileManager.getClassLoader(CLASS_PATH);\n@@ -284,2 +278,2 @@\n-                if (options.isSet(\"accessInternalAPI\"))\n-                    ModuleHelper.addExports(getClass().getModule(), processorClassLoader.getUnnamedModule());\n+            if (options.isSet(\"accessInternalAPI\"))\n+                ModuleHelper.addExports(getClass().getModule(), processorClassLoader.getUnnamedModule());\n@@ -287,3 +281,2 @@\n-                if (processorClassLoader != null && processorClassLoader instanceof Closeable closeable) {\n-                    compiler.closeables = compiler.closeables.prepend(closeable);\n-                }\n+            if (processorClassLoader != null && processorClassLoader instanceof Closeable closeable) {\n+                compiler.closeables = compiler.closeables.prepend(closeable);\n@@ -291,2 +284,0 @@\n-        } catch (SecurityException e) {\n-            processorLoaderException = e;\n@@ -308,20 +299,16 @@\n-            if (processorLoaderException == null) {\n-                \/*\n-                 * If the \"-processor\" option is used, search the appropriate\n-                 * path for the named class.  Otherwise, use a service\n-                 * provider mechanism to create the processor iterator.\n-                 *\n-                 * Note: if an explicit processor path is not set,\n-                 * only the class path and _not_ the module path are\n-                 * searched for processors.\n-                 *\/\n-                String processorNames = options.get(Option.PROCESSOR);\n-                if (fileManager.hasLocation(ANNOTATION_PROCESSOR_MODULE_PATH)) {\n-                    processorIterator = (processorNames == null) ?\n-                            new ServiceIterator(serviceLoader, log) :\n-                            new NameServiceIterator(serviceLoader, log, processorNames);\n-                } else if (processorNames != null) {\n-                    processorIterator = new NameProcessIterator(processorNames, processorClassLoader, log);\n-                } else {\n-                    processorIterator = new ServiceIterator(processorClassLoader, log);\n-                }\n+            \/*\n+             * If the \"-processor\" option is used, search the appropriate\n+             * path for the named class.  Otherwise, use a service\n+             * provider mechanism to create the processor iterator.\n+             *\n+             * Note: if an explicit processor path is not set,\n+             * only the class path and _not_ the module path are\n+             * searched for processors.\n+             *\/\n+            String processorNames = options.get(Option.PROCESSOR);\n+            if (fileManager.hasLocation(ANNOTATION_PROCESSOR_MODULE_PATH)) {\n+                processorIterator = (processorNames == null) ?\n+                        new ServiceIterator(serviceLoader, log) :\n+                        new NameServiceIterator(serviceLoader, log, processorNames);\n+            } else if (processorNames != null) {\n+                processorIterator = new NameProcessIterator(processorNames, processorClassLoader, log);\n@@ -329,8 +316,1 @@\n-                \/*\n-                 * A security exception will occur if we can't create a classloader.\n-                 * Ignore the exception if, with hindsight, we didn't need it anyway\n-                 * (i.e. no processor was specified either explicitly, or implicitly,\n-                 * in service configuration file.) Otherwise, we cannot continue.\n-                 *\/\n-                processorIterator = handleServiceLoaderUnavailability(\"proc.cant.create.loader\",\n-                        processorLoaderException);\n+                processorIterator = new ServiceIterator(processorClassLoader, log);\n@@ -366,41 +346,0 @@\n-    \/**\n-     * Returns an empty processor iterator if no processors are on the\n-     * relevant path, otherwise if processors are present, logs an\n-     * error.  Called when a service loader is unavailable for some\n-     * reason, either because a service loader class cannot be found\n-     * or because a security policy prevents class loaders from being\n-     * created.\n-     *\n-     * @param key The resource key to use to log an error message\n-     * @param e   If non-null, pass this exception to Abort\n-     *\/\n-    private Iterator<Processor> handleServiceLoaderUnavailability(String key, Exception e) {\n-        if (fileManager instanceof JavacFileManager standardFileManager) {\n-            Iterable<? extends Path> workingPath = fileManager.hasLocation(ANNOTATION_PROCESSOR_PATH)\n-                ? standardFileManager.getLocationAsPaths(ANNOTATION_PROCESSOR_PATH)\n-                : standardFileManager.getLocationAsPaths(CLASS_PATH);\n-\n-            if (needClassLoader(options.get(Option.PROCESSOR), workingPath) )\n-                handleException(key, e);\n-\n-        } else {\n-            handleException(key, e);\n-        }\n-\n-        return Collections.emptyIterator();\n-    }\n-\n-    \/**\n-     * Handle a security exception thrown during initializing the\n-     * Processor iterator.\n-     *\/\n-    private void handleException(String key, Exception e) {\n-        if (e != null) {\n-            log.error(key, e.getLocalizedMessage());\n-            throw new Abort(e);\n-        } else {\n-            log.error(key);\n-            throw new Abort();\n-        }\n-    }\n-\n@@ -420,7 +359,2 @@\n-                try {\n-                    loader = ServiceLoader.load(Processor.class, classLoader);\n-                    this.iterator = loader.iterator();\n-                } catch (Exception e) {\n-                    \/\/ Fail softly if a loader is not actually needed.\n-                    this.iterator = handleServiceLoaderUnavailability(\"proc.no.service\", null);\n-                }\n+                loader = ServiceLoader.load(Processor.class, classLoader);\n+                this.iterator = loader.iterator();\n@@ -1551,26 +1485,0 @@\n-    \/*\n-     * Called retroactively to determine if a class loader was required,\n-     * after we have failed to create one.\n-     *\/\n-    private boolean needClassLoader(String procNames, Iterable<? extends Path> workingpath) {\n-        if (procNames != null)\n-            return true;\n-\n-        URL[] urls = new URL[1];\n-        for(Path pathElement : workingpath) {\n-            try {\n-                urls[0] = pathElement.toUri().toURL();\n-                if (ServiceProxy.hasService(Processor.class, urls))\n-                    return true;\n-            } catch (MalformedURLException ex) {\n-                throw new AssertionError(ex);\n-            }\n-            catch (ServiceProxy.ServiceConfigurationError e) {\n-                log.error(Errors.ProcBadConfigFile(e.getLocalizedMessage()));\n-                return true;\n-            }\n-        }\n-\n-        return false;\n-    }\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacProcessingEnvironment.java","additions":35,"deletions":127,"binary":false,"changes":162,"status":"modified"},{"patch":"@@ -1182,3 +1182,0 @@\n-compiler.err.proc.no.service=\\\n-    A ServiceLoader was not usable and is required for annotation processing.\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -579,11 +579,2 @@\n-        } else if (code != null) {\n-            if (options.showDisassembled) {\n-                codeWriter.writeMinimal(code);\n-            }\n-\n-            if (options.showLineAndLocalVariableTables) {\n-                code.findAttribute(Attributes.lineNumberTable())\n-                        .ifPresent(a -> attrWriter.write(a, code));\n-                code.findAttribute(Attributes.localVariableTable())\n-                        .ifPresent(a -> attrWriter.write(a, code));\n-            }\n+        } else if (code != null && options.showDisassembled) {\n+            codeWriter.writeMinimal(code);\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/ClassWriter.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -104,6 +104,3 @@\n-    if (x == NULL) {\n-        ERROR_MESSAGE((\"JDWP Can't find class %s\", name));\n-        EXIT_ERROR(AGENT_ERROR_NULL_POINTER,NULL);\n-    }\n-        ERROR_MESSAGE((\"JDWP Exception occurred finding class %s\", name));\n-        EXIT_ERROR(AGENT_ERROR_NULL_POINTER,NULL);\n+        JNI_FUNC_PTR(env,ExceptionClear)(env); \/\/ keep -Xcheck:jni happy\n+        ERROR_MESSAGE((\"JNI Exception occurred finding class %s\", name));\n+        EXIT_ERROR(AGENT_ERROR_JNI_EXCEPTION,NULL);\n@@ -133,8 +130,4 @@\n-    if (method == NULL) {\n-        ERROR_MESSAGE((\"JDWP Can't find method %s with signature %s\",\n-                                name, signature));\n-        EXIT_ERROR(AGENT_ERROR_NULL_POINTER,NULL);\n-    }\n-        ERROR_MESSAGE((\"JDWP Exception occurred finding method %s with signature %s\",\n-                                name, signature));\n-        EXIT_ERROR(AGENT_ERROR_NULL_POINTER,NULL);\n+        JNI_FUNC_PTR(env,ExceptionClear)(env); \/\/ keep -Xcheck:jni happy\n+        ERROR_MESSAGE((\"JNI Exception occurred finding method %s with signature %s\",\n+                       name, signature));\n+        EXIT_ERROR(AGENT_ERROR_JNI_EXCEPTION,NULL);\n@@ -164,5 +157,1 @@\n-    if (method == NULL) {\n-        ERROR_MESSAGE((\"JDWP Can't find method %s with signature %s\",\n-                                name, signature));\n-        EXIT_ERROR(AGENT_ERROR_NULL_POINTER,NULL);\n-    }\n+        JNI_FUNC_PTR(env,ExceptionClear)(env); \/\/ keep -Xcheck:jni happy\n@@ -171,2 +160,2 @@\n-                                name, signature));\n-        EXIT_ERROR(AGENT_ERROR_NULL_POINTER,NULL);\n+                       name, signature));\n+        EXIT_ERROR(AGENT_ERROR_JNI_EXCEPTION,NULL);\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.c","additions":10,"deletions":21,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -34,4 +34,0 @@\n-import java.net.URL;\n-import java.security.AccessController;\n-import java.security.ProtectionDomain;\n-import java.security.PrivilegedAction;\n@@ -1844,1 +1840,1 @@\n-     * Represents the options for the depreacted method-access methods.\n+     * Represents the options for the deprecated method-access methods.\n@@ -1865,1 +1861,1 @@\n-            return ALLOW;\n+            return WARN;\n@@ -1896,8 +1892,2 @@\n-        static final StackWalker INSTANCE;\n-        static {\n-            PrivilegedAction<StackWalker> pa = () ->\n-                    StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE);\n-            @SuppressWarnings(\"removal\")\n-            StackWalker walker = AccessController.doPrivileged(pa);\n-            INSTANCE = walker;\n-        }\n+        static final StackWalker INSTANCE =\n+                StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE);\n@@ -1933,3 +1923,1 @@\n-        PrivilegedAction<ProtectionDomain> pa = callerClass::getProtectionDomain;\n-        @SuppressWarnings(\"removal\")\n-        CodeSource cs = AccessController.doPrivileged(pa).getCodeSource();\n+        CodeSource cs = callerClass.getProtectionDomain().getCodeSource();\n","filename":"src\/jdk.unsupported\/share\/classes\/sun\/misc\/Unsafe.java","additions":5,"deletions":17,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -95,0 +95,1 @@\n+serviceability\/sa\/TestJhsdbJstackPrintVMLocks.java            8307393   generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList-zgc.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+\n@@ -99,0 +100,1 @@\n+gc\/shenandoah\/oom\/TestAllocOutOfMemory.java#large 8344312 linux-ppc64le\n@@ -105,11 +107,0 @@\n-runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java#id0 8344583 macosx-aarch64\n-runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java#id1 8344583 macosx-aarch64\n-runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java#id2 8344583 macosx-aarch64\n-runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java#id3 8344583 macosx-aarch64\n-runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java#id4 8344583 macosx-aarch64\n-runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java#id5 8344583 macosx-aarch64\n-runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java#id6 8344583 macosx-aarch64\n-runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java#id7 8344583 macosx-aarch64\n-runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java#id8 8344583 macosx-aarch64\n-runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java#id9 8344583 macosx-aarch64\n-\n@@ -148,0 +139,20 @@\n+compiler\/c2\/autovectorization\/TestIndexOverflowIR.java                          8348568 generic-all\n+compiler\/c2\/irTests\/TestVectorConditionalMove.java                              8348568 generic-all\n+compiler\/c2\/irTests\/TestVectorizationMismatchedAccess.java                      8348568 generic-all\n+compiler\/c2\/irTests\/TestVectorizationNotRun.java                                8348568 generic-all\n+compiler\/c2\/TestCastX2NotProcessedIGVN.java                                     8348568 generic-all\n+compiler\/loopopts\/superword\/TestAlignVector.java                                8348568 generic-all\n+compiler\/loopopts\/superword\/TestAlignVector.java#NoAlignVector-COH              8348568 generic-all\n+compiler\/loopopts\/superword\/TestAlignVector.java#VerifyAlignVector-COH          8348568 generic-all\n+compiler\/loopopts\/superword\/TestIndependentPacksWithCyclicDependency.java       8348568 generic-all\n+compiler\/loopopts\/superword\/TestMulAddS2I.java                                  8348568 generic-all\n+compiler\/loopopts\/superword\/TestScheduleReordersScalarMemops.java               8348568 generic-all\n+compiler\/loopopts\/superword\/TestSplitPacks.java                                 8348568 generic-all\n+compiler\/loopopts\/superword\/TestUnorderedReductionPartialVectorization.java     8348568 generic-all\n+compiler\/vectorization\/TestFloatConversionsVector.java                          8348568 generic-all\n+compiler\/vectorization\/runner\/ArrayTypeConvertTest.java                         8348568 generic-all\n+compiler\/vectorization\/runner\/LoopCombinedOpTest.java                           8348568 generic-all\n+compiler\/vectorization\/runner\/VectorizationTestRunner.java                      8348568 generic-all\n+\n+gc\/stress\/gcbasher\/TestGCBasherWithParallel.java                                8348568 generic-all\n+\n@@ -151,0 +162,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":23,"deletions":11,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -58,5 +58,1 @@\n-  -runtime\/cds\/CheckSharingWithDefaultArchive.java \\\n-  -runtime\/cds\/appcds\/aotClassLinking\/BulkLoaderTest.java \\\n-  -runtime\/cds\/appcds\/dynamicArchive\/DynamicSharedSymbols.java \\\n-  -runtime\/cds\/appcds\/dynamicArchive\/TestAutoCreateSharedArchive.java \\\n-  -runtime\/cds\/appcds\/jcmd\n+  -runtime\/cds\n@@ -416,0 +412,2 @@\n+ -runtime\/Monitor\/StressWrapper_TestRecursiveLocking_36M.java \\\n+ -runtime\/Monitor\/TestRecursiveLocking.java \\\n@@ -485,0 +483,1 @@\n+ -runtime\/cds\/appcds\/LambdaInvokeVirtual.java \\\n@@ -513,0 +512,1 @@\n+ -serviceability\/sa\/TestJhsdbJstackPrintVMLocks.java \\\n@@ -685,0 +685,1 @@\n+ -runtime\/Monitor\/StressWrapper_TestRecursiveLocking_36M.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,4 @@\n- * @run driver compiler.ciReplay.TestInliningProtectionDomain\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *      compiler.ciReplay.TestInliningProtectionDomain\n","filename":"test\/hotspot\/jtreg\/compiler\/ciReplay\/TestInliningProtectionDomain.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -199,0 +199,10 @@\n+    @Test\n+    public void isConcreteTest() {\n+        for (Class<?> c : classes) {\n+            ResolvedJavaType type = metaAccess.lookupJavaType(c);\n+            boolean expected = c.isArray() || !isAbstract(c.getModifiers());\n+            boolean actual = type.isConcrete();\n+            assertEquals(expected, actual);\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.runtime.test\/src\/jdk\/vm\/ci\/runtime\/test\/TestResolvedJavaType.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -264,0 +264,40 @@\n+    public static final String SATURATING_ADD_VB = VECTOR_PREFIX + \"SATURATING_ADD_VB\" + POSTFIX;\n+    static {\n+        vectorNode(SATURATING_ADD_VB, \"SaturatingAddV\", TYPE_BYTE);\n+    }\n+\n+    public static final String SATURATING_ADD_VS = VECTOR_PREFIX + \"SATURATING_ADD_VS\" + POSTFIX;\n+    static {\n+        vectorNode(SATURATING_ADD_VS, \"SaturatingAddV\", TYPE_SHORT);\n+    }\n+\n+    public static final String SATURATING_ADD_VI = VECTOR_PREFIX + \"SATURATING_ADD_VI\" + POSTFIX;\n+    static {\n+        vectorNode(SATURATING_ADD_VI, \"SaturatingAddV\", TYPE_INT);\n+    }\n+\n+    public static final String SATURATING_ADD_VL = VECTOR_PREFIX + \"SATURATING_ADD_VL\" + POSTFIX;\n+    static {\n+        vectorNode(SATURATING_ADD_VL, \"SaturatingAddV\", TYPE_LONG);\n+    }\n+\n+    public static final String SATURATING_SUB_VB = VECTOR_PREFIX + \"SATURATING_SUB_VB\" + POSTFIX;\n+    static {\n+        vectorNode(SATURATING_SUB_VB, \"SaturatingSubV\", TYPE_BYTE);\n+    }\n+\n+    public static final String SATURATING_SUB_VS = VECTOR_PREFIX + \"SATURATING_SUB_VS\" + POSTFIX;\n+    static {\n+        vectorNode(SATURATING_SUB_VS, \"SaturatingSubV\", TYPE_SHORT);\n+    }\n+\n+    public static final String SATURATING_SUB_VI = VECTOR_PREFIX + \"SATURATING_SUB_VI\" + POSTFIX;\n+    static {\n+        vectorNode(SATURATING_SUB_VI, \"SaturatingSubV\", TYPE_INT);\n+    }\n+\n+    public static final String SATURATING_SUB_VL = VECTOR_PREFIX + \"SATURATING_SUB_VL\" + POSTFIX;\n+    static {\n+        vectorNode(SATURATING_SUB_VL, \"SaturatingSubV\", TYPE_LONG);\n+    }\n+\n@@ -1144,0 +1184,20 @@\n+    public static final String MOV_F2I = PREFIX + \"MOV_F2I\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(MOV_F2I, \"MoveF2I\");\n+    }\n+\n+    public static final String MOV_I2F = PREFIX + \"MOV_I2F\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(MOV_I2F, \"MoveI2F\");\n+    }\n+\n+    public static final String MOV_D2L = PREFIX + \"MOV_D2L\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(MOV_D2L, \"MoveD2L\");\n+    }\n+\n+    public static final String MOV_L2D = PREFIX + \"MOD_L2D\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(MOV_L2D, \"MoveL2D\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-          .shouldContain(\"Mismatched modules: runtime jdk.compiler dump time jdk.httpserver\");\n+          .shouldContain(\"Mismatched values for property jdk.module.main: runtime jdk.compiler dump time jdk.httpserver\");\n@@ -86,1 +86,1 @@\n-          .shouldContain(\"Module jdk.httpserver specified during dump time but not during runtime\");\n+          .shouldContain(\"Mismatched values for property jdk.module.main: jdk.httpserver specified during dump time but not during runtime\");\n@@ -106,1 +106,1 @@\n-          .shouldContain(\"Module jdk.httpserver specified during runtime but not during dump time\")\n+          .shouldContain(\"Mismatched values for property jdk.module.main: jdk.httpserver specified during runtime but not during dump time\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/module\/ModuleOption.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -361,1 +361,1 @@\n-  \/\/ enable VM_INIT event notification mode\n+  \/\/ enable VM_INIT\/VM_DEATH event notification modes\n@@ -364,1 +364,7 @@\n-    LOG1(\"Agent_OnLoad: Error in JVMTI SetEventNotificationMode: %d\\n\", err);\n+    LOG1(\"Agent_OnLoad: Error in JVMTI SetEventNotificationMode(JVMTI_EVENT_VM_INIT): %d\\n\", err);\n+    failed = true;\n+    return JNI_ERR;\n+  }\n+  err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, nullptr);\n+  if (err != JVMTI_ERROR_NONE) {\n+    LOG1(\"Agent_OnLoad: Error in JVMTI SetEventNotificationMode(JVMTI_EVENT_VM_DEATH): %d\\n\", err);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/HiddenClass\/libHiddenClassSigTest.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -47,0 +47,2 @@\n+java\/util\/concurrent\/locks\/StampedLock\/OOMEInStampedLock.java 8345266 generic-all\n+\n@@ -73,3 +75,0 @@\n-# Direct buffer memory allocated before test launch\n-java\/nio\/Buffer\/LimitDirectMemory.java 8342849 generic-all\n-\n","filename":"test\/jdk\/ProblemList-Virtual.txt","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -468,2 +468,1 @@\n-java\/awt\/security\/WarningWindowDisposeTest\/WarningWindowDisposeTest.java 8266059 macosx-all\n-java\/awt\/Robot\/InfiniteLoopException.java 8342638 windows-all\n+java\/awt\/Robot\/InfiniteLoopException.java 8342638 windows-all,linux-all\n@@ -472,0 +471,1 @@\n+java\/awt\/Robot\/ScreenCaptureRobotTest.java 8344581 macosx-all\n@@ -807,0 +807,1 @@\n+javax\/swing\/JTabbedPane\/TestJTabbedPaneOpaqueColor.java 8345090 windows-all,linux-all\n","filename":"test\/jdk\/ProblemList.txt","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import java.lang.classfile.components.CodeStackTracker;\n+import jdk.internal.classfile.components.CodeStackTracker;\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/RebuildingTransformation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -536,5 +536,1 @@\n-            if (kind.isClass()) {\n-                prefix = \"class\";\n-            } else if (kind.isInterface()) {\n-                prefix = \"interface\";\n-            }\n+            prefix = \"class\";\n@@ -583,1 +579,1 @@\n-                \"interface: com.sun.source.tree.SwitchExpressionTree\",\n+                \"class: com.sun.source.tree.SwitchExpressionTree\",\n@@ -601,1 +597,1 @@\n-                \"interface: com.sun.source.tree.SwitchExpressionTree\",\n+                \"class: com.sun.source.tree.SwitchExpressionTree\",\n@@ -612,1 +608,1 @@\n-                \"interface: com.sun.source.tree.YieldTree\",\n+                \"class: com.sun.source.tree.YieldTree\",\n@@ -646,1 +642,1 @@\n-                \"interface: com.sun.source.tree.PatternTree\",\n+                \"class: com.sun.source.tree.PatternTree\",\n@@ -649,1 +645,1 @@\n-                \"interface: com.sun.source.tree.BindingPatternTree\",\n+                \"class: com.sun.source.tree.BindingPatternTree\",\n@@ -685,1 +681,1 @@\n-                \"interface: com.sun.source.tree.PatternTree\",\n+                \"class: com.sun.source.tree.PatternTree\",\n@@ -688,1 +684,1 @@\n-                \"interface: com.sun.source.tree.BindingPatternTree\",\n+                \"class: com.sun.source.tree.BindingPatternTree\",\n","filename":"test\/jdk\/tools\/sincechecker\/SinceChecker.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -382,0 +382,1 @@\n+        vmOptFinalFlag(map, \"UseTransparentHugePages\");\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -21,0 +21,3 @@\n+SuperInitFails.java:195:25: compiler.err.return.before.superclass.initialized\n+SuperInitFails.java:200:33: compiler.err.ctor.calls.not.allowed.here\n+SuperInitFails.java:205:29: compiler.err.redundant.superclass.init\n@@ -29,1 +32,1 @@\n-SuperInitFails.java:150:18: compiler.err.ctor.calls.not.allowed.here\n+SuperInitFails.java:150:18: compiler.err.call.must.only.appear.in.ctor\n@@ -32,1 +35,1 @@\n-29 errors\n+32 errors\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/SuperInitFails.out","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -458,0 +458,35 @@\n+    \/\/ Lambdas within constructors\n+    public static class Test22 {\n+        public Test22() {\n+            Runnable r = () -> System.out.println();\n+            super();\n+            r.run();\n+        }\n+        public Test22(int x) {\n+            Runnable r = () -> System.out.println();\n+            r.run();\n+            super();\n+        }\n+        public Test22(char x) {\n+            Runnable r = () -> {\n+                class A {\n+                    A() {\n+                        return;\n+                    }\n+                    A(int x) {\n+                        Runnable r2 = () -> {\n+                            return;\n+                        };\n+                        this();\n+                        r2.run();\n+                    }\n+                    A(char x) {\n+                        this(0);\n+                    }\n+                }\n+                return;\n+            };\n+            r.run();\n+            super();\n+        }\n+    }\n@@ -503,0 +538,1 @@\n+        new Test22('x');\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/SuperInitGood.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-ValueClassSuperInitFails.java:170:18: compiler.err.ctor.calls.not.allowed.here\n+ValueClassSuperInitFails.java:170:18: compiler.err.call.must.only.appear.in.ctor\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/ValueClassSuperInitFails.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-compiler.err.proc.no.service                            # JavacProcessingEnvironment: no service loader available\n","filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -102,0 +102,2 @@\n+  public native void lockAndStuckInSafepoint();\n+\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}