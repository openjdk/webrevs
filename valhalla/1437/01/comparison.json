{"files":[{"patch":"@@ -742,1 +742,0 @@\n-      decorators |= C2_MISMATCHED;\n@@ -746,1 +745,3 @@\n-        kit->access_store_at(base, adr, TypeRawPtr::BOTTOM, payload, val_type, bt, is_array ? (decorators | IS_ARRAY) : decorators, true, this);\n+        kit->insert_mem_bar(Op_MemBarCPUOrder);\n+        kit->access_store_at(base, adr, TypeRawPtr::BOTTOM, payload, val_type, bt, decorators | C2_MISMATCHED | (is_array ? IS_ARRAY : 0), true, this);\n+        kit->insert_mem_bar(Op_MemBarCPUOrder);\n@@ -768,3 +769,0 @@\n-        kit->set_control(kit->IfFalse(iff));\n-        region->init_req(1, kit->control());\n-\n@@ -772,0 +770,1 @@\n+        kit->set_control(kit->IfFalse(iff));\n@@ -774,1 +773,3 @@\n-          kit->access_store_at(base, ptr, TypeRawPtr::BOTTOM, payload, val_type, bt, is_array ? (decorators | IS_ARRAY) : decorators, true, this);\n+          kit->insert_mem_bar(Op_MemBarCPUOrder);\n+          kit->access_store_at(base, ptr, TypeRawPtr::BOTTOM, payload, val_type, bt, decorators | C2_MISMATCHED | (is_array ? IS_ARRAY : 0), true, this);\n+          kit->insert_mem_bar(Op_MemBarCPUOrder);\n@@ -778,2 +779,1 @@\n-\n-        kit->set_control(kit->IfTrue(iff));\n+        region->init_req(1, kit->control());\n@@ -782,0 +782,1 @@\n+        kit->set_control(kit->IfTrue(iff));\n@@ -814,1 +815,3 @@\n-            kit->access_store_at(cast, adr, TypeRawPtr::BOTTOM, payload, val_type_null_free, bt_null_free, is_array ? (decorators | IS_ARRAY) : decorators, true, this);\n+            kit->insert_mem_bar(Op_MemBarCPUOrder);\n+            kit->access_store_at(cast, adr, TypeRawPtr::BOTTOM, payload, val_type_null_free, bt_null_free, decorators | C2_MISMATCHED | (is_array ? IS_ARRAY : 0), true, this);\n+            kit->insert_mem_bar(Op_MemBarCPUOrder);\n@@ -828,1 +831,0 @@\n-\n@@ -854,2 +856,0 @@\n-      const TypePtr* adr_type = TypeRawPtr::BOTTOM;\n-      Node* mem = kit->memory(adr_type);\n@@ -859,2 +859,6 @@\n-      Node* st = kit->gvn().transform(new StoreLSpecialNode(kit->control(), mem, adr, adr_type, payload, oop_offset, MemNode::unordered));\n-      kit->set_memory(st, adr_type);\n+      kit->insert_mem_bar(Op_MemBarCPUOrder);\n+      Node* mem = kit->reset_memory();\n+      kit->set_all_memory(mem);\n+      Node* st = kit->gvn().transform(new StoreLSpecialNode(kit->control(), mem, adr, TypeRawPtr::BOTTOM, payload, oop_offset, MemNode::unordered));\n+      kit->set_memory(st, TypeRawPtr::BOTTOM);\n+      kit->insert_mem_bar(Op_MemBarCPUOrder);\n@@ -862,2 +866,0 @@\n-    \/\/ Prevent loads from floating above this mismatched store\n-    kit->insert_mem_bar(Op_MemBarCPUOrder);\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":18,"deletions":16,"binary":false,"changes":34,"status":"modified"}]}