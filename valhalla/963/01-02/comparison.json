{"files":[{"patch":"@@ -27,0 +27,1 @@\n+ * @summary test VarHandle on value class array\n@@ -29,1 +30,0 @@\n- * @summary test VarHandle on value class array\n","filename":"test\/jdk\/valhalla\/valuetypes\/ArrayElementVarHandleTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n- * @run junit\/othervm -XX:+EnableValhalla LambdaConversion\n@@ -28,0 +27,1 @@\n+ * @run junit\/othervm -XX:+EnableValhalla LambdaConversion\n","filename":"test\/jdk\/valhalla\/valuetypes\/LambdaMetaFactory\/LambdaConversion.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @summary LambdaMetaFactory rejects value or identity superinterface\n@@ -31,1 +32,0 @@\n- * @summary LambdaMetaFactory rejects value or identity superinterface\n","filename":"test\/jdk\/valhalla\/valuetypes\/LambdaMetaFactory\/LambdaMetaFactoryTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n- * @run junit\/othervm -XX:+EnableValhalla LambdaTest\n@@ -28,0 +27,1 @@\n+ * @run junit\/othervm -XX:+EnableValhalla LambdaTest\n","filename":"test\/jdk\/valhalla\/valuetypes\/LambdaMetaFactory\/LambdaTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,2 +26,0 @@\n- * @run junit\/othervm -XX:+EnableValhalla -XX:InlineFieldMaxFlatSize=128 MHZeroValue\n- * @run junit\/othervm -XX:+EnableValhalla -XX:InlineFieldMaxFlatSize=0 MHZeroValue\n@@ -30,0 +28,2 @@\n+ * @run junit\/othervm -XX:+EnableValhalla -XX:InlineFieldMaxFlatSize=128 MHZeroValue\n+ * @run junit\/othervm -XX:+EnableValhalla -XX:InlineFieldMaxFlatSize=0 MHZeroValue\n","filename":"test\/jdk\/valhalla\/valuetypes\/MHZeroValue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @run junit\/othervm -XX:+EnableValhalla MethodHandleTest\n@@ -29,0 +28,1 @@\n+ * @run junit\/othervm -XX:+EnableValhalla MethodHandleTest\n","filename":"test\/jdk\/valhalla\/valuetypes\/MethodHandleTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n- * @run main\/othervm -XX:+EnableValhalla MethodReference\n@@ -28,0 +27,1 @@\n+ * @run main\/othervm -XX:+EnableValhalla MethodReference\n","filename":"test\/jdk\/valhalla\/valuetypes\/MethodReference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n- * @run junit\/othervm -XX:+EnableValhalla Nest\n@@ -28,1 +27,2 @@\n- * has the enclosing instance and possibly other captured outer locals\n+ *          has the enclosing instance and possibly other captured outer locals\n+ * @run junit\/othervm -XX:+EnableValhalla Nest\n","filename":"test\/jdk\/valhalla\/valuetypes\/Nest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n- * @run junit\/othervm -XX:+EnableValhalla NullRestrictedTest\n- * @run junit\/othervm -XX:+EnableValhalla -XX:InlineFieldMaxFlatSize=0 NullRestrictedTest\n@@ -31,0 +29,2 @@\n+ * @run junit\/othervm -XX:+EnableValhalla NullRestrictedTest\n+ * @run junit\/othervm -XX:+EnableValhalla -XX:InlineFieldMaxFlatSize=0 NullRestrictedTest\n","filename":"test\/jdk\/valhalla\/valuetypes\/NullRestrictedTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @summary test Object methods on value classes\n@@ -29,1 +30,0 @@\n- * @summary test Object methods on value classes\n","filename":"test\/jdk\/valhalla\/valuetypes\/ObjectMethods.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @summary Test ObjectMethods::bootstrap call via condy\n@@ -29,1 +30,0 @@\n- * @summary Test ObjectMethods::bootstrap call via condy\n","filename":"test\/jdk\/valhalla\/valuetypes\/ObjectMethodsViaCondy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n- * @run testng\/othervm -XX:+EnableValhalla ObjectNewInstance\n@@ -29,0 +28,1 @@\n+ * @run testng\/othervm -XX:+EnableValhalla ObjectNewInstance\n","filename":"test\/jdk\/valhalla\/valuetypes\/ObjectNewInstance.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n- * @run testng\/othervm -XX:+EnableValhalla ProxyTest\n@@ -28,0 +27,1 @@\n+ * @run testng\/othervm -XX:+EnableValhalla ProxyTest\n","filename":"test\/jdk\/valhalla\/valuetypes\/ProxyTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @run junit\/othervm -XX:+EnableValhalla Reflection\n@@ -29,0 +28,1 @@\n+ * @run junit\/othervm -XX:+EnableValhalla Reflection\n","filename":"test\/jdk\/valhalla\/valuetypes\/Reflection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n- * @run junit\/othervm -XX:+EnableValhalla StreamTest\n@@ -28,0 +27,1 @@\n+ * @run junit\/othervm -XX:+EnableValhalla StreamTest\n","filename":"test\/jdk\/valhalla\/valuetypes\/StreamTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n- * @modules java.base\/jdk.internal.misc\n@@ -58,0 +57,1 @@\n+ * @modules java.base\/jdk.internal.misc\n","filename":"test\/jdk\/valhalla\/valuetypes\/UseValueClassTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @modules java.base\/jdk.internal.misc\n@@ -35,0 +34,1 @@\n+ * @modules java.base\/jdk.internal.misc\n","filename":"test\/jdk\/valhalla\/valuetypes\/ValhallaFeaturesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @run junit\/othervm -XX:+EnableValhalla ValueConstantDesc\n@@ -29,0 +28,1 @@\n+ * @run junit\/othervm -XX:+EnableValhalla ValueConstantDesc\n","filename":"test\/jdk\/valhalla\/valuetypes\/ValueConstantDesc.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @run testng\/othervm -XX:+EnableValhalla WeakReferenceTest\n@@ -35,0 +34,1 @@\n+ * @run testng\/othervm -XX:+EnableValhalla WeakReferenceTest\n","filename":"test\/jdk\/valhalla\/valuetypes\/WeakReferenceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}