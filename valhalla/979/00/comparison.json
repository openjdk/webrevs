{"files":[{"patch":"@@ -1,37 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-public primitive class Point {\n-\n-    public static Point getInstance(int x, int y) {\n-        return new Point(x, y);\n-    }\n-\n-    public final int x;\n-    public final int y;\n-\n-    public Point(int x, int y) {\n-        this.x = x;\n-        this.y = y;\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/Point.java","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -24,0 +24,3 @@\n+import jdk.internal.vm.annotation.ImplicitlyConstructible;\n+\n+@ImplicitlyConstructible\n@@ -25,3 +28,3 @@\n-    Point p;\n-    public Value(Point p) {\n-        this.p = p;\n+    int v;\n+    public Value(int v) {\n+        this.v = v;\n@@ -30,2 +33,2 @@\n-    static Value getInstance(Point p) {\n-        return new Value(p);\n+    public static Value getInstance(int v) {\n+        return new Value(v);\n@@ -33,1 +36,0 @@\n-\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/Value.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,0 @@\n-    static final Class<?> type = boolean.class;\n-\n@@ -87,1 +85,1 @@\n-                    VarHandleTestAccessBoolean.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccessBoolean.class, \"final_v\" + postfix, boolean.class);\n@@ -91,1 +89,1 @@\n-                    VarHandleTestAccessBoolean.class, \"v\" + postfix, type);\n+                    VarHandleTestAccessBoolean.class, \"v\" + postfix, boolean.class);\n@@ -95,1 +93,1 @@\n-                VarHandleTestAccessBoolean.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccessBoolean.class, \"static_final_v\" + postfix, boolean.class);\n@@ -99,1 +97,1 @@\n-                VarHandleTestAccessBoolean.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccessBoolean.class, \"static_v\" + postfix, boolean.class);\n@@ -118,1 +116,1 @@\n-                VarHandleTestAccessBoolean.class, \"final_v\", type);\n+                VarHandleTestAccessBoolean.class, \"final_v\", boolean.class);\n@@ -121,1 +119,1 @@\n-                VarHandleTestAccessBoolean.class, \"v\", type);\n+                VarHandleTestAccessBoolean.class, \"v\", boolean.class);\n@@ -124,1 +122,1 @@\n-            VarHandleTestAccessBoolean.class, \"static_final_v\", type);\n+            VarHandleTestAccessBoolean.class, \"static_final_v\", boolean.class);\n@@ -127,1 +125,1 @@\n-            VarHandleTestAccessBoolean.class, \"static_v\", type);\n+            VarHandleTestAccessBoolean.class, \"static_v\", boolean.class);\n@@ -214,1 +212,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), boolean.class);\n@@ -226,1 +224,1 @@\n-                    VarHandleTestAccessBoolean.class, \"final_v\", type);\n+                    VarHandleTestAccessBoolean.class, \"final_v\", boolean.class);\n@@ -231,1 +229,1 @@\n-                    VarHandleTestAccessBoolean.class, \"v\", type);\n+                    VarHandleTestAccessBoolean.class, \"v\", boolean.class);\n@@ -239,1 +237,1 @@\n-                VarHandleTestAccessBoolean.class, \"static_final_v\", type);\n+                VarHandleTestAccessBoolean.class, \"static_final_v\", boolean.class);\n@@ -244,1 +242,1 @@\n-                VarHandleTestAccessBoolean.class, \"static_v\", type);\n+                VarHandleTestAccessBoolean.class, \"static_v\", boolean.class);\n@@ -359,0 +357,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessBoolean.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,0 @@\n-    static final Class<?> type = byte.class;\n-\n@@ -87,1 +85,1 @@\n-                    VarHandleTestAccessByte.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccessByte.class, \"final_v\" + postfix, byte.class);\n@@ -91,1 +89,1 @@\n-                    VarHandleTestAccessByte.class, \"v\" + postfix, type);\n+                    VarHandleTestAccessByte.class, \"v\" + postfix, byte.class);\n@@ -95,1 +93,1 @@\n-                VarHandleTestAccessByte.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccessByte.class, \"static_final_v\" + postfix, byte.class);\n@@ -99,1 +97,1 @@\n-                VarHandleTestAccessByte.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccessByte.class, \"static_v\" + postfix, byte.class);\n@@ -118,1 +116,1 @@\n-                VarHandleTestAccessByte.class, \"final_v\", type);\n+                VarHandleTestAccessByte.class, \"final_v\", byte.class);\n@@ -121,1 +119,1 @@\n-                VarHandleTestAccessByte.class, \"v\", type);\n+                VarHandleTestAccessByte.class, \"v\", byte.class);\n@@ -124,1 +122,1 @@\n-            VarHandleTestAccessByte.class, \"static_final_v\", type);\n+            VarHandleTestAccessByte.class, \"static_final_v\", byte.class);\n@@ -127,1 +125,1 @@\n-            VarHandleTestAccessByte.class, \"static_v\", type);\n+            VarHandleTestAccessByte.class, \"static_v\", byte.class);\n@@ -214,1 +212,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), byte.class);\n@@ -226,1 +224,1 @@\n-                    VarHandleTestAccessByte.class, \"final_v\", type);\n+                    VarHandleTestAccessByte.class, \"final_v\", byte.class);\n@@ -231,1 +229,1 @@\n-                    VarHandleTestAccessByte.class, \"v\", type);\n+                    VarHandleTestAccessByte.class, \"v\", byte.class);\n@@ -239,1 +237,1 @@\n-                VarHandleTestAccessByte.class, \"static_final_v\", type);\n+                VarHandleTestAccessByte.class, \"static_final_v\", byte.class);\n@@ -244,1 +242,1 @@\n-                VarHandleTestAccessByte.class, \"static_v\", type);\n+                VarHandleTestAccessByte.class, \"static_v\", byte.class);\n@@ -348,0 +346,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessByte.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,0 @@\n-    static final Class<?> type = char.class;\n-\n@@ -87,1 +85,1 @@\n-                    VarHandleTestAccessChar.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccessChar.class, \"final_v\" + postfix, char.class);\n@@ -91,1 +89,1 @@\n-                    VarHandleTestAccessChar.class, \"v\" + postfix, type);\n+                    VarHandleTestAccessChar.class, \"v\" + postfix, char.class);\n@@ -95,1 +93,1 @@\n-                VarHandleTestAccessChar.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccessChar.class, \"static_final_v\" + postfix, char.class);\n@@ -99,1 +97,1 @@\n-                VarHandleTestAccessChar.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccessChar.class, \"static_v\" + postfix, char.class);\n@@ -118,1 +116,1 @@\n-                VarHandleTestAccessChar.class, \"final_v\", type);\n+                VarHandleTestAccessChar.class, \"final_v\", char.class);\n@@ -121,1 +119,1 @@\n-                VarHandleTestAccessChar.class, \"v\", type);\n+                VarHandleTestAccessChar.class, \"v\", char.class);\n@@ -124,1 +122,1 @@\n-            VarHandleTestAccessChar.class, \"static_final_v\", type);\n+            VarHandleTestAccessChar.class, \"static_final_v\", char.class);\n@@ -127,1 +125,1 @@\n-            VarHandleTestAccessChar.class, \"static_v\", type);\n+            VarHandleTestAccessChar.class, \"static_v\", char.class);\n@@ -214,1 +212,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), char.class);\n@@ -226,1 +224,1 @@\n-                    VarHandleTestAccessChar.class, \"final_v\", type);\n+                    VarHandleTestAccessChar.class, \"final_v\", char.class);\n@@ -231,1 +229,1 @@\n-                    VarHandleTestAccessChar.class, \"v\", type);\n+                    VarHandleTestAccessChar.class, \"v\", char.class);\n@@ -239,1 +237,1 @@\n-                VarHandleTestAccessChar.class, \"static_final_v\", type);\n+                VarHandleTestAccessChar.class, \"static_final_v\", char.class);\n@@ -244,1 +242,1 @@\n-                VarHandleTestAccessChar.class, \"static_v\", type);\n+                VarHandleTestAccessChar.class, \"static_v\", char.class);\n@@ -348,0 +346,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessChar.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,0 @@\n-    static final Class<?> type = double.class;\n-\n@@ -87,1 +85,1 @@\n-                    VarHandleTestAccessDouble.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccessDouble.class, \"final_v\" + postfix, double.class);\n@@ -91,1 +89,1 @@\n-                    VarHandleTestAccessDouble.class, \"v\" + postfix, type);\n+                    VarHandleTestAccessDouble.class, \"v\" + postfix, double.class);\n@@ -95,1 +93,1 @@\n-                VarHandleTestAccessDouble.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccessDouble.class, \"static_final_v\" + postfix, double.class);\n@@ -99,1 +97,1 @@\n-                VarHandleTestAccessDouble.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccessDouble.class, \"static_v\" + postfix, double.class);\n@@ -118,1 +116,1 @@\n-                VarHandleTestAccessDouble.class, \"final_v\", type);\n+                VarHandleTestAccessDouble.class, \"final_v\", double.class);\n@@ -121,1 +119,1 @@\n-                VarHandleTestAccessDouble.class, \"v\", type);\n+                VarHandleTestAccessDouble.class, \"v\", double.class);\n@@ -124,1 +122,1 @@\n-            VarHandleTestAccessDouble.class, \"static_final_v\", type);\n+            VarHandleTestAccessDouble.class, \"static_final_v\", double.class);\n@@ -127,1 +125,1 @@\n-            VarHandleTestAccessDouble.class, \"static_v\", type);\n+            VarHandleTestAccessDouble.class, \"static_v\", double.class);\n@@ -214,1 +212,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), double.class);\n@@ -226,1 +224,1 @@\n-                    VarHandleTestAccessDouble.class, \"final_v\", type);\n+                    VarHandleTestAccessDouble.class, \"final_v\", double.class);\n@@ -231,1 +229,1 @@\n-                    VarHandleTestAccessDouble.class, \"v\", type);\n+                    VarHandleTestAccessDouble.class, \"v\", double.class);\n@@ -239,1 +237,1 @@\n-                VarHandleTestAccessDouble.class, \"static_final_v\", type);\n+                VarHandleTestAccessDouble.class, \"static_final_v\", double.class);\n@@ -244,1 +242,1 @@\n-                VarHandleTestAccessDouble.class, \"static_v\", type);\n+                VarHandleTestAccessDouble.class, \"static_v\", double.class);\n@@ -383,0 +381,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessDouble.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,0 @@\n-    static final Class<?> type = float.class;\n-\n@@ -87,1 +85,1 @@\n-                    VarHandleTestAccessFloat.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccessFloat.class, \"final_v\" + postfix, float.class);\n@@ -91,1 +89,1 @@\n-                    VarHandleTestAccessFloat.class, \"v\" + postfix, type);\n+                    VarHandleTestAccessFloat.class, \"v\" + postfix, float.class);\n@@ -95,1 +93,1 @@\n-                VarHandleTestAccessFloat.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccessFloat.class, \"static_final_v\" + postfix, float.class);\n@@ -99,1 +97,1 @@\n-                VarHandleTestAccessFloat.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccessFloat.class, \"static_v\" + postfix, float.class);\n@@ -118,1 +116,1 @@\n-                VarHandleTestAccessFloat.class, \"final_v\", type);\n+                VarHandleTestAccessFloat.class, \"final_v\", float.class);\n@@ -121,1 +119,1 @@\n-                VarHandleTestAccessFloat.class, \"v\", type);\n+                VarHandleTestAccessFloat.class, \"v\", float.class);\n@@ -124,1 +122,1 @@\n-            VarHandleTestAccessFloat.class, \"static_final_v\", type);\n+            VarHandleTestAccessFloat.class, \"static_final_v\", float.class);\n@@ -127,1 +125,1 @@\n-            VarHandleTestAccessFloat.class, \"static_v\", type);\n+            VarHandleTestAccessFloat.class, \"static_v\", float.class);\n@@ -214,1 +212,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), float.class);\n@@ -226,1 +224,1 @@\n-                    VarHandleTestAccessFloat.class, \"final_v\", type);\n+                    VarHandleTestAccessFloat.class, \"final_v\", float.class);\n@@ -231,1 +229,1 @@\n-                    VarHandleTestAccessFloat.class, \"v\", type);\n+                    VarHandleTestAccessFloat.class, \"v\", float.class);\n@@ -239,1 +237,1 @@\n-                VarHandleTestAccessFloat.class, \"static_final_v\", type);\n+                VarHandleTestAccessFloat.class, \"static_final_v\", float.class);\n@@ -244,1 +242,1 @@\n-                VarHandleTestAccessFloat.class, \"static_v\", type);\n+                VarHandleTestAccessFloat.class, \"static_v\", float.class);\n@@ -383,0 +381,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessFloat.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,0 @@\n-    static final Class<?> type = int.class;\n-\n@@ -87,1 +85,1 @@\n-                    VarHandleTestAccessInt.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccessInt.class, \"final_v\" + postfix, int.class);\n@@ -91,1 +89,1 @@\n-                    VarHandleTestAccessInt.class, \"v\" + postfix, type);\n+                    VarHandleTestAccessInt.class, \"v\" + postfix, int.class);\n@@ -95,1 +93,1 @@\n-                VarHandleTestAccessInt.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccessInt.class, \"static_final_v\" + postfix, int.class);\n@@ -99,1 +97,1 @@\n-                VarHandleTestAccessInt.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccessInt.class, \"static_v\" + postfix, int.class);\n@@ -118,1 +116,1 @@\n-                VarHandleTestAccessInt.class, \"final_v\", type);\n+                VarHandleTestAccessInt.class, \"final_v\", int.class);\n@@ -121,1 +119,1 @@\n-                VarHandleTestAccessInt.class, \"v\", type);\n+                VarHandleTestAccessInt.class, \"v\", int.class);\n@@ -124,1 +122,1 @@\n-            VarHandleTestAccessInt.class, \"static_final_v\", type);\n+            VarHandleTestAccessInt.class, \"static_final_v\", int.class);\n@@ -127,1 +125,1 @@\n-            VarHandleTestAccessInt.class, \"static_v\", type);\n+            VarHandleTestAccessInt.class, \"static_v\", int.class);\n@@ -214,1 +212,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), int.class);\n@@ -226,1 +224,1 @@\n-                    VarHandleTestAccessInt.class, \"final_v\", type);\n+                    VarHandleTestAccessInt.class, \"final_v\", int.class);\n@@ -231,1 +229,1 @@\n-                    VarHandleTestAccessInt.class, \"v\", type);\n+                    VarHandleTestAccessInt.class, \"v\", int.class);\n@@ -239,1 +237,1 @@\n-                VarHandleTestAccessInt.class, \"static_final_v\", type);\n+                VarHandleTestAccessInt.class, \"static_final_v\", int.class);\n@@ -244,1 +242,1 @@\n-                VarHandleTestAccessInt.class, \"static_v\", type);\n+                VarHandleTestAccessInt.class, \"static_v\", int.class);\n@@ -348,0 +346,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessInt.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,0 @@\n-    static final Class<?> type = long.class;\n-\n@@ -87,1 +85,1 @@\n-                    VarHandleTestAccessLong.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccessLong.class, \"final_v\" + postfix, long.class);\n@@ -91,1 +89,1 @@\n-                    VarHandleTestAccessLong.class, \"v\" + postfix, type);\n+                    VarHandleTestAccessLong.class, \"v\" + postfix, long.class);\n@@ -95,1 +93,1 @@\n-                VarHandleTestAccessLong.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccessLong.class, \"static_final_v\" + postfix, long.class);\n@@ -99,1 +97,1 @@\n-                VarHandleTestAccessLong.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccessLong.class, \"static_v\" + postfix, long.class);\n@@ -118,1 +116,1 @@\n-                VarHandleTestAccessLong.class, \"final_v\", type);\n+                VarHandleTestAccessLong.class, \"final_v\", long.class);\n@@ -121,1 +119,1 @@\n-                VarHandleTestAccessLong.class, \"v\", type);\n+                VarHandleTestAccessLong.class, \"v\", long.class);\n@@ -124,1 +122,1 @@\n-            VarHandleTestAccessLong.class, \"static_final_v\", type);\n+            VarHandleTestAccessLong.class, \"static_final_v\", long.class);\n@@ -127,1 +125,1 @@\n-            VarHandleTestAccessLong.class, \"static_v\", type);\n+            VarHandleTestAccessLong.class, \"static_v\", long.class);\n@@ -214,1 +212,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), long.class);\n@@ -226,1 +224,1 @@\n-                    VarHandleTestAccessLong.class, \"final_v\", type);\n+                    VarHandleTestAccessLong.class, \"final_v\", long.class);\n@@ -231,1 +229,1 @@\n-                    VarHandleTestAccessLong.class, \"v\", type);\n+                    VarHandleTestAccessLong.class, \"v\", long.class);\n@@ -239,1 +237,1 @@\n-                VarHandleTestAccessLong.class, \"static_final_v\", type);\n+                VarHandleTestAccessLong.class, \"static_final_v\", long.class);\n@@ -244,1 +242,1 @@\n-                VarHandleTestAccessLong.class, \"static_v\", type);\n+                VarHandleTestAccessLong.class, \"static_v\", long.class);\n@@ -348,0 +346,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessLong.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1,1402 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ -- This file was mechanically generated: Do not edit! -- \/\/\n-\n-\/*\n- * @test\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestAccessPoint.java\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=10    -Xint                   VarHandleTestAccessPoint\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=20000 -XX:TieredStopAtLevel=1 VarHandleTestAccessPoint\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=20000                         VarHandleTestAccessPoint\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=20000 -XX:-TieredCompilation  VarHandleTestAccessPoint\n- *\/\n-\n-import org.testng.annotations.BeforeClass;\n-import org.testng.annotations.DataProvider;\n-import org.testng.annotations.Test;\n-\n-import java.lang.invoke.MethodHandles;\n-import java.lang.invoke.VarHandle;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-\n-import jdk.internal.value.PrimitiveClass;\n-import static org.testng.Assert.*;\n-\n-public class VarHandleTestAccessPoint extends VarHandleBaseTest {\n-    static final Class<?> type = PrimitiveClass.asValueType(Point.class);\n-\n-    static final Point static_final_v = Point.getInstance(1,1);\n-\n-    static Point static_v;\n-\n-    final Point final_v = Point.getInstance(1,1);\n-\n-    Point v;\n-\n-    static final Point static_final_v2 = Point.getInstance(1,1);\n-\n-    static Point static_v2;\n-\n-    final Point final_v2 = Point.getInstance(1,1);\n-\n-    Point v2;\n-\n-    VarHandle vhFinalField;\n-\n-    VarHandle vhField;\n-\n-    VarHandle vhStaticField;\n-\n-    VarHandle vhStaticFinalField;\n-\n-    VarHandle vhArray;\n-\n-    VarHandle vhArrayObject;\n-\n-    VarHandle[] allocate(boolean same) {\n-        List<VarHandle> vhs = new ArrayList<>();\n-\n-        String postfix = same ? \"\" : \"2\";\n-        VarHandle vh;\n-        try {\n-            vh = MethodHandles.lookup().findVarHandle(\n-                    VarHandleTestAccessPoint.class, \"final_v\" + postfix, type);\n-            vhs.add(vh);\n-\n-            vh = MethodHandles.lookup().findVarHandle(\n-                    VarHandleTestAccessPoint.class, \"v\" + postfix, type);\n-            vhs.add(vh);\n-\n-            vh = MethodHandles.lookup().findStaticVarHandle(\n-                VarHandleTestAccessPoint.class, \"static_final_v\" + postfix, type);\n-            vhs.add(vh);\n-\n-            vh = MethodHandles.lookup().findStaticVarHandle(\n-                VarHandleTestAccessPoint.class, \"static_v\" + postfix, type);\n-            vhs.add(vh);\n-\n-            if (same) {\n-                vh = MethodHandles.arrayElementVarHandle(Point[].class);\n-            }\n-            else {\n-                vh = MethodHandles.arrayElementVarHandle(String[].class);\n-            }\n-            vhs.add(vh);\n-        } catch (Exception e) {\n-            throw new InternalError(e);\n-        }\n-        return vhs.toArray(new VarHandle[0]);\n-    }\n-\n-    @BeforeClass\n-    public void setup() throws Exception {\n-        vhFinalField = MethodHandles.lookup().findVarHandle(\n-                VarHandleTestAccessPoint.class, \"final_v\", type);\n-\n-        vhField = MethodHandles.lookup().findVarHandle(\n-                VarHandleTestAccessPoint.class, \"v\", type);\n-\n-        vhStaticFinalField = MethodHandles.lookup().findStaticVarHandle(\n-            VarHandleTestAccessPoint.class, \"static_final_v\", type);\n-\n-        vhStaticField = MethodHandles.lookup().findStaticVarHandle(\n-            VarHandleTestAccessPoint.class, \"static_v\", type);\n-\n-        vhArray = MethodHandles.arrayElementVarHandle(Point[].class);\n-        vhArrayObject = MethodHandles.arrayElementVarHandle(Object[].class);\n-    }\n-\n-\n-    @DataProvider\n-    public Object[][] varHandlesProvider() throws Exception {\n-        List<VarHandle> vhs = new ArrayList<>();\n-        vhs.add(vhField);\n-        vhs.add(vhStaticField);\n-        vhs.add(vhArray);\n-\n-        return vhs.stream().map(tc -> new Object[]{tc}).toArray(Object[][]::new);\n-    }\n-\n-    @Test\n-    public void testEquals() {\n-        VarHandle[] vhs1 = allocate(true);\n-        VarHandle[] vhs2 = allocate(true);\n-\n-        for (int i = 0; i < vhs1.length; i++) {\n-            for (int j = 0; j < vhs1.length; j++) {\n-                if (i != j) {\n-                    assertNotEquals(vhs1[i], vhs1[j]);\n-                    assertNotEquals(vhs1[i], vhs2[j]);\n-                }\n-            }\n-        }\n-\n-        VarHandle[] vhs3 = allocate(false);\n-        for (int i = 0; i < vhs1.length; i++) {\n-            assertNotEquals(vhs1[i], vhs3[i]);\n-        }\n-    }\n-\n-    @Test(dataProvider = \"varHandlesProvider\")\n-    public void testIsAccessModeSupported(VarHandle vh) {\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.GET));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.SET));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.GET_VOLATILE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.SET_VOLATILE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.GET_ACQUIRE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.SET_RELEASE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.GET_OPAQUE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.SET_OPAQUE));\n-\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.COMPARE_AND_SET));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.COMPARE_AND_EXCHANGE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.COMPARE_AND_EXCHANGE_ACQUIRE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.COMPARE_AND_EXCHANGE_RELEASE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_PLAIN));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.WEAK_COMPARE_AND_SET));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_ACQUIRE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_RELEASE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_SET));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_SET_ACQUIRE));\n-        assertTrue(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_SET_RELEASE));\n-\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_ADD));\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_ADD_ACQUIRE));\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_ADD_RELEASE));\n-\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_BITWISE_OR));\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_BITWISE_OR_ACQUIRE));\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_BITWISE_OR_RELEASE));\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_BITWISE_AND));\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_BITWISE_AND_ACQUIRE));\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_BITWISE_AND_RELEASE));\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_BITWISE_XOR));\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_BITWISE_XOR_ACQUIRE));\n-        assertFalse(vh.isAccessModeSupported(VarHandle.AccessMode.GET_AND_BITWISE_XOR_RELEASE));\n-    }\n-\n-\n-    @DataProvider\n-    public Object[][] typesProvider() throws Exception {\n-        List<Object[]> types = new ArrayList<>();\n-        types.add(new Object[] {vhField, Arrays.asList(VarHandleTestAccessPoint.class)});\n-        types.add(new Object[] {vhStaticField, Arrays.asList()});\n-        types.add(new Object[] {vhArray, Arrays.asList(Point[].class, int.class)});\n-\n-        return types.stream().toArray(Object[][]::new);\n-    }\n-\n-    @Test(dataProvider = \"typesProvider\")\n-    public void testTypes(VarHandle vh, List<Class<?>> pts) {\n-        assertEquals(vh.varType(), type);\n-\n-        assertEquals(vh.coordinateTypes(), pts);\n-\n-        testTypes(vh);\n-    }\n-\n-\n-    @Test\n-    public void testLookupInstanceToStatic() {\n-        checkIAE(\"Lookup of static final field to instance final field\", () -> {\n-            MethodHandles.lookup().findStaticVarHandle(\n-                    VarHandleTestAccessPoint.class, \"final_v\", type);\n-        });\n-\n-        checkIAE(\"Lookup of static field to instance field\", () -> {\n-            MethodHandles.lookup().findStaticVarHandle(\n-                    VarHandleTestAccessPoint.class, \"v\", type);\n-        });\n-    }\n-\n-    @Test\n-    public void testLookupStaticToInstance() {\n-        checkIAE(\"Lookup of instance final field to static final field\", () -> {\n-            MethodHandles.lookup().findVarHandle(\n-                VarHandleTestAccessPoint.class, \"static_final_v\", type);\n-        });\n-\n-        checkIAE(\"Lookup of instance field to static field\", () -> {\n-            vhStaticField = MethodHandles.lookup().findVarHandle(\n-                VarHandleTestAccessPoint.class, \"static_v\", type);\n-        });\n-    }\n-\n-\n-    @DataProvider\n-    public Object[][] accessTestCaseProvider() throws Exception {\n-        List<AccessTestCase<?>> cases = new ArrayList<>();\n-\n-        cases.add(new VarHandleAccessTestCase(\"Instance final field\",\n-                                              vhFinalField, vh -> testInstanceFinalField(this, vh)));\n-        cases.add(new VarHandleAccessTestCase(\"Instance final field unsupported\",\n-                                              vhFinalField, vh -> testInstanceFinalFieldUnsupported(this, vh),\n-                                              false));\n-\n-        cases.add(new VarHandleAccessTestCase(\"Static final field\",\n-                                              vhStaticFinalField, VarHandleTestAccessPoint::testStaticFinalField));\n-        cases.add(new VarHandleAccessTestCase(\"Static final field unsupported\",\n-                                              vhStaticFinalField, VarHandleTestAccessPoint::testStaticFinalFieldUnsupported,\n-                                              false));\n-\n-        cases.add(new VarHandleAccessTestCase(\"Instance field\",\n-                                              vhField, vh -> testInstanceField(this, vh)));\n-        cases.add(new VarHandleAccessTestCase(\"Instance field unsupported\",\n-                                              vhField, vh -> testInstanceFieldUnsupported(this, vh),\n-                                              false));\n-\n-        cases.add(new VarHandleAccessTestCase(\"Static field\",\n-                                              vhStaticField, VarHandleTestAccessPoint::testStaticField));\n-        cases.add(new VarHandleAccessTestCase(\"Static field unsupported\",\n-                                              vhStaticField, VarHandleTestAccessPoint::testStaticFieldUnsupported,\n-                                              false));\n-\n-        cases.add(new VarHandleAccessTestCase(\"Array\",\n-                                              vhArray, VarHandleTestAccessPoint::testArray));\n-        cases.add(new VarHandleAccessTestCase(\"Array Object[]\",\n-                                              vhArrayObject, VarHandleTestAccessPoint::testArray));\n-        cases.add(new VarHandleAccessTestCase(\"Array unsupported\",\n-                                              vhArray, VarHandleTestAccessPoint::testArrayUnsupported,\n-                                              false));\n-        cases.add(new VarHandleAccessTestCase(\"Array index out of bounds\",\n-                                              vhArray, VarHandleTestAccessPoint::testArrayIndexOutOfBounds,\n-                                              false));\n-        cases.add(new VarHandleAccessTestCase(\"Array store exception\",\n-                                              vhArrayObject, VarHandleTestAccessPoint::testArrayStoreException,\n-                                              false));\n-        \/\/ Work around issue with jtreg summary reporting which truncates\n-        \/\/ the String result of Object.toString to 30 characters, hence\n-        \/\/ the first dummy argument\n-        return cases.stream().map(tc -> new Object[]{tc.toString(), tc}).toArray(Object[][]::new);\n-    }\n-\n-    @Test(dataProvider = \"accessTestCaseProvider\")\n-    public <T> void testAccess(String desc, AccessTestCase<T> atc) throws Throwable {\n-        T t = atc.get();\n-        int iters = atc.requiresLoop() ? ITERS : 1;\n-        for (int c = 0; c < iters; c++) {\n-            atc.testAccess(t);\n-        }\n-    }\n-\n-\n-\n-\n-    static void testInstanceFinalField(VarHandleTestAccessPoint recv, VarHandle vh) {\n-        \/\/ Plain\n-        {\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"get Point value\");\n-        }\n-\n-\n-        \/\/ Volatile\n-        {\n-            Point x = (Point) vh.getVolatile(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"getVolatile Point value\");\n-        }\n-\n-        \/\/ Lazy\n-        {\n-            Point x = (Point) vh.getAcquire(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"getRelease Point value\");\n-        }\n-\n-        \/\/ Opaque\n-        {\n-            Point x = (Point) vh.getOpaque(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"getOpaque Point value\");\n-        }\n-    }\n-\n-    static void testInstanceFinalFieldUnsupported(VarHandleTestAccessPoint recv, VarHandle vh) {\n-        checkUOE(() -> {\n-            vh.set(recv, Point.getInstance(2,2));\n-        });\n-\n-        checkUOE(() -> {\n-            vh.setVolatile(recv, Point.getInstance(2,2));\n-        });\n-\n-        checkUOE(() -> {\n-            vh.setRelease(recv, Point.getInstance(2,2));\n-        });\n-\n-        checkUOE(() -> {\n-            vh.setOpaque(recv, Point.getInstance(2,2));\n-        });\n-\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAdd(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAddAcquire(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAddRelease(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOr(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOrAcquire(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOrRelease(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAnd(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAndAcquire(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAndRelease(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXor(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXorAcquire(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXorRelease(recv, Point.getInstance(1,1));\n-        });\n-    }\n-\n-    static void testStaticFinalField(VarHandle vh) {\n-        \/\/ Plain\n-        {\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(1,1), \"get Point value\");\n-        }\n-\n-\n-        \/\/ Volatile\n-        {\n-            Point x = (Point) vh.getVolatile();\n-            assertEquals(x, Point.getInstance(1,1), \"getVolatile Point value\");\n-        }\n-\n-        \/\/ Lazy\n-        {\n-            Point x = (Point) vh.getAcquire();\n-            assertEquals(x, Point.getInstance(1,1), \"getRelease Point value\");\n-        }\n-\n-        \/\/ Opaque\n-        {\n-            Point x = (Point) vh.getOpaque();\n-            assertEquals(x, Point.getInstance(1,1), \"getOpaque Point value\");\n-        }\n-    }\n-\n-    static void testStaticFinalFieldUnsupported(VarHandle vh) {\n-        checkUOE(() -> {\n-            vh.set(Point.getInstance(2,2));\n-        });\n-\n-        checkUOE(() -> {\n-            vh.setVolatile(Point.getInstance(2,2));\n-        });\n-\n-        checkUOE(() -> {\n-            vh.setRelease(Point.getInstance(2,2));\n-        });\n-\n-        checkUOE(() -> {\n-            vh.setOpaque(Point.getInstance(2,2));\n-        });\n-\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAdd(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAddAcquire(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAddRelease(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOr(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOrAcquire(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOrRelease(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAnd(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAndAcquire(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAndRelease(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXor(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXorAcquire(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXorRelease(Point.getInstance(1,1));\n-        });\n-    }\n-\n-\n-    static void testInstanceField(VarHandleTestAccessPoint recv, VarHandle vh) {\n-        \/\/ Plain\n-        {\n-            vh.set(recv, Point.getInstance(1,1));\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"set Point value\");\n-        }\n-\n-\n-        \/\/ Volatile\n-        {\n-            vh.setVolatile(recv, Point.getInstance(2,2));\n-            Point x = (Point) vh.getVolatile(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"setVolatile Point value\");\n-        }\n-\n-        \/\/ Lazy\n-        {\n-            vh.setRelease(recv, Point.getInstance(1,1));\n-            Point x = (Point) vh.getAcquire(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"setRelease Point value\");\n-        }\n-\n-        \/\/ Opaque\n-        {\n-            vh.setOpaque(recv, Point.getInstance(2,2));\n-            Point x = (Point) vh.getOpaque(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"setOpaque Point value\");\n-        }\n-\n-        vh.set(recv, Point.getInstance(1,1));\n-\n-        \/\/ Compare\n-        {\n-            boolean r = vh.compareAndSet(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n-            assertEquals(r, true, \"success compareAndSet Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"success compareAndSet Point value\");\n-        }\n-\n-        {\n-            boolean r = vh.compareAndSet(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(r, false, \"failing compareAndSet Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"failing compareAndSet Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchange(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n-            assertEquals(r, Point.getInstance(2,2), \"success compareAndExchange Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"success compareAndExchange Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchange(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchange Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchange Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchangeAcquire(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n-            assertEquals(r, Point.getInstance(1,1), \"success compareAndExchangeAcquire Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"success compareAndExchangeAcquire Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchangeAcquire(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchangeRelease(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n-            assertEquals(r, Point.getInstance(2,2), \"success compareAndExchangeRelease Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"success compareAndExchangeRelease Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchangeRelease(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point value\");\n-        }\n-\n-        {\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = vh.weakCompareAndSetPlain(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n-        }\n-\n-        {\n-            boolean success = vh.weakCompareAndSetPlain(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n-        }\n-\n-        {\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = vh.weakCompareAndSetAcquire(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n-        }\n-\n-        {\n-            boolean success = vh.weakCompareAndSetAcquire(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n-        }\n-\n-        {\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = vh.weakCompareAndSetRelease(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n-        }\n-\n-        {\n-            boolean success = vh.weakCompareAndSetRelease(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetRelease Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetRelease Point value\");\n-        }\n-\n-        {\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = vh.weakCompareAndSet(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSet Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point value\");\n-        }\n-\n-        {\n-            boolean success = vh.weakCompareAndSet(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSet Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSet Point value\");\n-        }\n-\n-        \/\/ Compare set and get\n-        {\n-            vh.set(recv, Point.getInstance(1,1));\n-\n-            Point o = (Point) vh.getAndSet(recv, Point.getInstance(2,2));\n-            assertEquals(o, Point.getInstance(1,1), \"getAndSet Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"getAndSet Point value\");\n-        }\n-\n-        {\n-            vh.set(recv, Point.getInstance(1,1));\n-\n-            Point o = (Point) vh.getAndSetAcquire(recv, Point.getInstance(2,2));\n-            assertEquals(o, Point.getInstance(1,1), \"getAndSetAcquire Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"getAndSetAcquire Point value\");\n-        }\n-\n-        {\n-            vh.set(recv, Point.getInstance(1,1));\n-\n-            Point o = (Point) vh.getAndSetRelease(recv, Point.getInstance(2,2));\n-            assertEquals(o, Point.getInstance(1,1), \"getAndSetRelease Point\");\n-            Point x = (Point) vh.get(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"getAndSetRelease Point value\");\n-        }\n-\n-\n-    }\n-\n-    static void testInstanceFieldUnsupported(VarHandleTestAccessPoint recv, VarHandle vh) {\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAdd(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAddAcquire(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAddRelease(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOr(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOrAcquire(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOrRelease(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAnd(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAndAcquire(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAndRelease(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXor(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXorAcquire(recv, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXorRelease(recv, Point.getInstance(1,1));\n-        });\n-    }\n-\n-\n-    static void testStaticField(VarHandle vh) {\n-        \/\/ Plain\n-        {\n-            vh.set(Point.getInstance(1,1));\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(1,1), \"set Point value\");\n-        }\n-\n-\n-        \/\/ Volatile\n-        {\n-            vh.setVolatile(Point.getInstance(2,2));\n-            Point x = (Point) vh.getVolatile();\n-            assertEquals(x, Point.getInstance(2,2), \"setVolatile Point value\");\n-        }\n-\n-        \/\/ Lazy\n-        {\n-            vh.setRelease(Point.getInstance(1,1));\n-            Point x = (Point) vh.getAcquire();\n-            assertEquals(x, Point.getInstance(1,1), \"setRelease Point value\");\n-        }\n-\n-        \/\/ Opaque\n-        {\n-            vh.setOpaque(Point.getInstance(2,2));\n-            Point x = (Point) vh.getOpaque();\n-            assertEquals(x, Point.getInstance(2,2), \"setOpaque Point value\");\n-        }\n-\n-        vh.set(Point.getInstance(1,1));\n-\n-        \/\/ Compare\n-        {\n-            boolean r = vh.compareAndSet(Point.getInstance(1,1), Point.getInstance(2,2));\n-            assertEquals(r, true, \"success compareAndSet Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"success compareAndSet Point value\");\n-        }\n-\n-        {\n-            boolean r = vh.compareAndSet(Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(r, false, \"failing compareAndSet Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"failing compareAndSet Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchange(Point.getInstance(2,2), Point.getInstance(1,1));\n-            assertEquals(r, Point.getInstance(2,2), \"success compareAndExchange Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(1,1), \"success compareAndExchange Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchange(Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchange Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchange Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchangeAcquire(Point.getInstance(1,1), Point.getInstance(2,2));\n-            assertEquals(r, Point.getInstance(1,1), \"success compareAndExchangeAcquire Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"success compareAndExchangeAcquire Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchangeAcquire(Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchangeRelease(Point.getInstance(2,2), Point.getInstance(1,1));\n-            assertEquals(r, Point.getInstance(2,2), \"success compareAndExchangeRelease Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(1,1), \"success compareAndExchangeRelease Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) vh.compareAndExchangeRelease(Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point value\");\n-        }\n-\n-        {\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = vh.weakCompareAndSetPlain(Point.getInstance(1,1), Point.getInstance(2,2));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n-        }\n-\n-        {\n-            boolean success = vh.weakCompareAndSetPlain(Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n-        }\n-\n-        {\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = vh.weakCompareAndSetAcquire(Point.getInstance(2,2), Point.getInstance(1,1));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n-        }\n-\n-        {\n-            boolean success = vh.weakCompareAndSetAcquire(Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n-        }\n-\n-        {\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = vh.weakCompareAndSetRelease(Point.getInstance(1,1), Point.getInstance(2,2));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n-        }\n-\n-        {\n-            boolean success = vh.weakCompareAndSetRelease(Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetRelease Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetRelease Point value\");\n-        }\n-\n-        {\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = vh.weakCompareAndSet(Point.getInstance(2,2), Point.getInstance(1,1));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSet Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point\");\n-        }\n-\n-        {\n-            boolean success = vh.weakCompareAndSet(Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSet Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSet Point value\");\n-        }\n-\n-        \/\/ Compare set and get\n-        {\n-            vh.set(Point.getInstance(1,1));\n-\n-            Point o = (Point) vh.getAndSet(Point.getInstance(2,2));\n-            assertEquals(o, Point.getInstance(1,1), \"getAndSet Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"getAndSet Point value\");\n-        }\n-\n-        {\n-            vh.set(Point.getInstance(1,1));\n-\n-            Point o = (Point) vh.getAndSetAcquire(Point.getInstance(2,2));\n-            assertEquals(o, Point.getInstance(1,1), \"getAndSetAcquire Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"getAndSetAcquire Point value\");\n-        }\n-\n-        {\n-            vh.set(Point.getInstance(1,1));\n-\n-            Point o = (Point) vh.getAndSetRelease(Point.getInstance(2,2));\n-            assertEquals(o, Point.getInstance(1,1), \"getAndSetRelease Point\");\n-            Point x = (Point) vh.get();\n-            assertEquals(x, Point.getInstance(2,2), \"getAndSetRelease Point value\");\n-        }\n-\n-\n-    }\n-\n-    static void testStaticFieldUnsupported(VarHandle vh) {\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAdd(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAddAcquire(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAddRelease(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOr(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOrAcquire(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOrRelease(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAnd(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAndAcquire(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAndRelease(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXor(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXorAcquire(Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXorRelease(Point.getInstance(1,1));\n-        });\n-    }\n-\n-\n-    static void testArray(VarHandle vh) {\n-        Point[] array = new Point[10];\n-\n-        for (int i = 0; i < array.length; i++) {\n-            \/\/ Plain\n-            {\n-                vh.set(array, i, Point.getInstance(1,1));\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"get Point value\");\n-            }\n-\n-\n-            \/\/ Volatile\n-            {\n-                vh.setVolatile(array, i, Point.getInstance(2,2));\n-                Point x = (Point) vh.getVolatile(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"setVolatile Point value\");\n-            }\n-\n-            \/\/ Lazy\n-            {\n-                vh.setRelease(array, i, Point.getInstance(1,1));\n-                Point x = (Point) vh.getAcquire(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"setRelease Point value\");\n-            }\n-\n-            \/\/ Opaque\n-            {\n-                vh.setOpaque(array, i, Point.getInstance(2,2));\n-                Point x = (Point) vh.getOpaque(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"setOpaque Point value\");\n-            }\n-\n-            vh.set(array, i, Point.getInstance(1,1));\n-\n-            \/\/ Compare\n-            {\n-                boolean r = vh.compareAndSet(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n-                assertEquals(r, true, \"success compareAndSet Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"success compareAndSet Point value\");\n-            }\n-\n-            {\n-                boolean r = vh.compareAndSet(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n-                assertEquals(r, false, \"failing compareAndSet Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"failing compareAndSet Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) vh.compareAndExchange(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n-                assertEquals(r, Point.getInstance(2,2), \"success compareAndExchange Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"success compareAndExchange Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) vh.compareAndExchange(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n-                assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchange Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchange Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) vh.compareAndExchangeAcquire(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n-                assertEquals(r, Point.getInstance(1,1), \"success compareAndExchangeAcquire Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"success compareAndExchangeAcquire Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) vh.compareAndExchangeAcquire(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n-                assertEquals(r, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) vh.compareAndExchangeRelease(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n-                assertEquals(r, Point.getInstance(2,2), \"success compareAndExchangeRelease Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"success compareAndExchangeRelease Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) vh.compareAndExchangeRelease(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n-                assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point value\");\n-            }\n-\n-            {\n-                boolean success = false;\n-                for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                    success = vh.weakCompareAndSetPlain(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n-                    if (!success) weakDelay();\n-                }\n-                assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n-            }\n-\n-            {\n-                boolean success = vh.weakCompareAndSetPlain(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n-                assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n-            }\n-\n-            {\n-                boolean success = false;\n-                for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                    success = vh.weakCompareAndSetAcquire(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n-                    if (!success) weakDelay();\n-                }\n-                assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n-            }\n-\n-            {\n-                boolean success = vh.weakCompareAndSetAcquire(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n-                assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n-            }\n-\n-            {\n-                boolean success = false;\n-                for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                    success = vh.weakCompareAndSetRelease(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n-                    if (!success) weakDelay();\n-                }\n-                assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n-            }\n-\n-            {\n-                boolean success = vh.weakCompareAndSetRelease(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n-                assertEquals(success, false, \"failing weakCompareAndSetRelease Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetRelease Point value\");\n-            }\n-\n-            {\n-                boolean success = false;\n-                for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                    success = vh.weakCompareAndSet(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n-                    if (!success) weakDelay();\n-                }\n-                assertEquals(success, true, \"success weakCompareAndSet Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point\");\n-            }\n-\n-            {\n-                boolean success = vh.weakCompareAndSet(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n-                assertEquals(success, false, \"failing weakCompareAndSet Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSet Point value\");\n-            }\n-\n-            \/\/ Compare set and get\n-            {\n-                vh.set(array, i, Point.getInstance(1,1));\n-\n-                Point o = (Point) vh.getAndSet(array, i, Point.getInstance(2,2));\n-                assertEquals(o, Point.getInstance(1,1), \"getAndSet Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"getAndSet Point value\");\n-            }\n-\n-            {\n-                vh.set(array, i, Point.getInstance(1,1));\n-\n-                Point o = (Point) vh.getAndSetAcquire(array, i, Point.getInstance(2,2));\n-                assertEquals(o, Point.getInstance(1,1), \"getAndSetAcquire Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"getAndSetAcquire Point value\");\n-            }\n-\n-            {\n-                vh.set(array, i, Point.getInstance(1,1));\n-\n-                Point o = (Point) vh.getAndSetRelease(array, i, Point.getInstance(2,2));\n-                assertEquals(o, Point.getInstance(1,1), \"getAndSetRelease Point\");\n-                Point x = (Point) vh.get(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"getAndSetRelease Point value\");\n-            }\n-\n-\n-        }\n-    }\n-\n-    static void testArrayUnsupported(VarHandle vh) {\n-        Point[] array = new Point[10];\n-\n-        int i = 0;\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAdd(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAddAcquire(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndAddRelease(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOr(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOrAcquire(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseOrRelease(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAnd(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAndAcquire(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseAndRelease(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXor(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXorAcquire(array, i, Point.getInstance(1,1));\n-        });\n-\n-        checkUOE(() -> {\n-            Point o = (Point) vh.getAndBitwiseXorRelease(array, i, Point.getInstance(1,1));\n-        });\n-    }\n-\n-    static void testArrayIndexOutOfBounds(VarHandle vh) throws Throwable {\n-        Point[] array = new Point[10];\n-\n-        for (int i : new int[]{-1, Integer.MIN_VALUE, 10, 11, Integer.MAX_VALUE}) {\n-            final int ci = i;\n-\n-            checkAIOOBE(() -> {\n-                Point x = (Point) vh.get(array, ci);\n-            });\n-\n-            checkAIOOBE(() -> {\n-                vh.set(array, ci, Point.getInstance(1,1));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                Point x = (Point) vh.getVolatile(array, ci);\n-            });\n-\n-            checkAIOOBE(() -> {\n-                vh.setVolatile(array, ci, Point.getInstance(1,1));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                Point x = (Point) vh.getAcquire(array, ci);\n-            });\n-\n-            checkAIOOBE(() -> {\n-                vh.setRelease(array, ci, Point.getInstance(1,1));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                Point x = (Point) vh.getOpaque(array, ci);\n-            });\n-\n-            checkAIOOBE(() -> {\n-                vh.setOpaque(array, ci, Point.getInstance(1,1));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                boolean r = vh.compareAndSet(array, ci, Point.getInstance(1,1), Point.getInstance(2,2));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                Point r = (Point) vh.compareAndExchange(array, ci, Point.getInstance(2,2), Point.getInstance(1,1));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                Point r = (Point) vh.compareAndExchangeAcquire(array, ci, Point.getInstance(2,2), Point.getInstance(1,1));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                Point r = (Point) vh.compareAndExchangeRelease(array, ci, Point.getInstance(2,2), Point.getInstance(1,1));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                boolean r = vh.weakCompareAndSetPlain(array, ci, Point.getInstance(1,1), Point.getInstance(2,2));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                boolean r = vh.weakCompareAndSet(array, ci, Point.getInstance(1,1), Point.getInstance(2,2));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                boolean r = vh.weakCompareAndSetAcquire(array, ci, Point.getInstance(1,1), Point.getInstance(2,2));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                boolean r = vh.weakCompareAndSetRelease(array, ci, Point.getInstance(1,1), Point.getInstance(2,2));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                Point o = (Point) vh.getAndSet(array, ci, Point.getInstance(1,1));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                Point o = (Point) vh.getAndSetAcquire(array, ci, Point.getInstance(1,1));\n-            });\n-\n-            checkAIOOBE(() -> {\n-                Point o = (Point) vh.getAndSetRelease(array, ci, Point.getInstance(1,1));\n-            });\n-\n-\n-        }\n-    }\n-\n-    static void testArrayStoreException(VarHandle vh) throws Throwable {\n-        Object[] array = new Point[10];\n-        Arrays.fill(array, Point.getInstance(1,1));\n-        Object value = new Object();\n-\n-        \/\/ Set\n-        checkASE(() -> {\n-            vh.set(array, 0, value);\n-        });\n-\n-        \/\/ SetVolatile\n-        checkASE(() -> {\n-            vh.setVolatile(array, 0, value);\n-        });\n-\n-        \/\/ SetOpaque\n-        checkASE(() -> {\n-            vh.setOpaque(array, 0, value);\n-        });\n-\n-        \/\/ SetRelease\n-        checkASE(() -> {\n-            vh.setRelease(array, 0, value);\n-        });\n-\n-        \/\/ CompareAndSet\n-        checkASE(() -> { \/\/ receiver reference class\n-            boolean r = vh.compareAndSet(array, 0, Point.getInstance(1,1), value);\n-        });\n-\n-        \/\/ WeakCompareAndSet\n-        checkASE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSetPlain(array, 0, Point.getInstance(1,1), value);\n-        });\n-\n-        \/\/ WeakCompareAndSetVolatile\n-        checkASE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSet(array, 0, Point.getInstance(1,1), value);\n-        });\n-\n-        \/\/ WeakCompareAndSetAcquire\n-        checkASE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSetAcquire(array, 0, Point.getInstance(1,1), value);\n-        });\n-\n-        \/\/ WeakCompareAndSetRelease\n-        checkASE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSetRelease(array, 0, Point.getInstance(1,1), value);\n-        });\n-\n-        \/\/ CompareAndExchange\n-        checkASE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.compareAndExchange(array, 0, Point.getInstance(1,1), value);\n-        });\n-\n-        \/\/ CompareAndExchangeAcquire\n-        checkASE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.compareAndExchangeAcquire(array, 0, Point.getInstance(1,1), value);\n-        });\n-\n-        \/\/ CompareAndExchangeRelease\n-        checkASE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.compareAndExchangeRelease(array, 0, Point.getInstance(1,1), value);\n-        });\n-\n-        \/\/ GetAndSet\n-        checkASE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.getAndSet(array, 0, value);\n-        });\n-\n-        \/\/ GetAndSetAcquire\n-        checkASE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.getAndSetAcquire(array, 0, value);\n-        });\n-\n-        \/\/ GetAndSetRelease\n-        checkASE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.getAndSetRelease(array, 0, value);\n-        });\n-    }\n-}\n-\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessPoint.java","additions":0,"deletions":1402,"binary":false,"changes":1402,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,0 @@\n-    static final Class<?> type = short.class;\n-\n@@ -87,1 +85,1 @@\n-                    VarHandleTestAccessShort.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccessShort.class, \"final_v\" + postfix, short.class);\n@@ -91,1 +89,1 @@\n-                    VarHandleTestAccessShort.class, \"v\" + postfix, type);\n+                    VarHandleTestAccessShort.class, \"v\" + postfix, short.class);\n@@ -95,1 +93,1 @@\n-                VarHandleTestAccessShort.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccessShort.class, \"static_final_v\" + postfix, short.class);\n@@ -99,1 +97,1 @@\n-                VarHandleTestAccessShort.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccessShort.class, \"static_v\" + postfix, short.class);\n@@ -118,1 +116,1 @@\n-                VarHandleTestAccessShort.class, \"final_v\", type);\n+                VarHandleTestAccessShort.class, \"final_v\", short.class);\n@@ -121,1 +119,1 @@\n-                VarHandleTestAccessShort.class, \"v\", type);\n+                VarHandleTestAccessShort.class, \"v\", short.class);\n@@ -124,1 +122,1 @@\n-            VarHandleTestAccessShort.class, \"static_final_v\", type);\n+            VarHandleTestAccessShort.class, \"static_final_v\", short.class);\n@@ -127,1 +125,1 @@\n-            VarHandleTestAccessShort.class, \"static_v\", type);\n+            VarHandleTestAccessShort.class, \"static_v\", short.class);\n@@ -214,1 +212,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), short.class);\n@@ -226,1 +224,1 @@\n-                    VarHandleTestAccessShort.class, \"final_v\", type);\n+                    VarHandleTestAccessShort.class, \"final_v\", short.class);\n@@ -231,1 +229,1 @@\n-                    VarHandleTestAccessShort.class, \"v\", type);\n+                    VarHandleTestAccessShort.class, \"v\", short.class);\n@@ -239,1 +237,1 @@\n-                VarHandleTestAccessShort.class, \"static_final_v\", type);\n+                VarHandleTestAccessShort.class, \"static_final_v\", short.class);\n@@ -244,1 +242,1 @@\n-                VarHandleTestAccessShort.class, \"static_v\", type);\n+                VarHandleTestAccessShort.class, \"static_v\", short.class);\n@@ -348,0 +346,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessShort.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,0 @@\n-    static final Class<?> type = String.class;\n-\n@@ -88,1 +86,1 @@\n-                    VarHandleTestAccessString.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccessString.class, \"final_v\" + postfix, String.class);\n@@ -92,1 +90,1 @@\n-                    VarHandleTestAccessString.class, \"v\" + postfix, type);\n+                    VarHandleTestAccessString.class, \"v\" + postfix, String.class);\n@@ -96,1 +94,1 @@\n-                VarHandleTestAccessString.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccessString.class, \"static_final_v\" + postfix, String.class);\n@@ -100,1 +98,1 @@\n-                VarHandleTestAccessString.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccessString.class, \"static_v\" + postfix, String.class);\n@@ -119,1 +117,1 @@\n-                VarHandleTestAccessString.class, \"final_v\", type);\n+                VarHandleTestAccessString.class, \"final_v\", String.class);\n@@ -122,1 +120,1 @@\n-                VarHandleTestAccessString.class, \"v\", type);\n+                VarHandleTestAccessString.class, \"v\", String.class);\n@@ -125,1 +123,1 @@\n-            VarHandleTestAccessString.class, \"static_final_v\", type);\n+            VarHandleTestAccessString.class, \"static_final_v\", String.class);\n@@ -128,1 +126,1 @@\n-            VarHandleTestAccessString.class, \"static_v\", type);\n+            VarHandleTestAccessString.class, \"static_v\", String.class);\n@@ -216,1 +214,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), String.class);\n@@ -228,1 +226,1 @@\n-                    VarHandleTestAccessString.class, \"final_v\", type);\n+                    VarHandleTestAccessString.class, \"final_v\", String.class);\n@@ -233,1 +231,1 @@\n-                    VarHandleTestAccessString.class, \"v\", type);\n+                    VarHandleTestAccessString.class, \"v\", String.class);\n@@ -241,1 +239,1 @@\n-                VarHandleTestAccessString.class, \"static_final_v\", type);\n+                VarHandleTestAccessString.class, \"static_final_v\", String.class);\n@@ -246,1 +244,1 @@\n-                VarHandleTestAccessString.class, \"static_v\", type);\n+                VarHandleTestAccessString.class, \"static_v\", String.class);\n@@ -401,0 +399,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessString.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,5 +28,9 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestAccessValue.java\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=10    -Xint                   VarHandleTestAccessValue\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=20000 -XX:TieredStopAtLevel=1 VarHandleTestAccessValue\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=20000                         VarHandleTestAccessValue\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=20000 -XX:-TieredCompilation  VarHandleTestAccessValue\n+ * @modules java.base\/jdk.internal.vm.annotation\n+ * @run testng\/othervm -Diters=10   -Xint                                                   VarHandleTestAccessValue\n+ *\n+ * @comment Set CompileThresholdScaling to 0.1 so that the warmup loop sets to 2000 iterations\n+ *          to hit compilation thresholds\n+ *\n+ * @run testng\/othervm -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:TieredStopAtLevel=1 VarHandleTestAccessValue\n+ * @run testng\/othervm -Diters=2000 -XX:CompileThresholdScaling=0.1                         VarHandleTestAccessValue\n+ * @run testng\/othervm -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:-TieredCompilation  VarHandleTestAccessValue\n@@ -48,3 +52,1 @@\n-    static final Class<?> type = Value.class;\n-\n-    static final Value static_final_v = Value.getInstance(Point.getInstance(1,1));\n+    static final Value static_final_v = Value.getInstance(10);\n@@ -54,1 +56,1 @@\n-    final Value final_v = Value.getInstance(Point.getInstance(1,1));\n+    final Value final_v = Value.getInstance(10);\n@@ -58,1 +60,1 @@\n-    static final Value static_final_v2 = Value.getInstance(Point.getInstance(1,1));\n+    static final Value static_final_v2 = Value.getInstance(10);\n@@ -62,1 +64,1 @@\n-    final Value final_v2 = Value.getInstance(Point.getInstance(1,1));\n+    final Value final_v2 = Value.getInstance(10);\n@@ -85,1 +87,1 @@\n-                    VarHandleTestAccessValue.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccessValue.class, \"final_v\" + postfix, Value.class);\n@@ -89,1 +91,1 @@\n-                    VarHandleTestAccessValue.class, \"v\" + postfix, type);\n+                    VarHandleTestAccessValue.class, \"v\" + postfix, Value.class);\n@@ -93,1 +95,1 @@\n-                VarHandleTestAccessValue.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccessValue.class, \"static_final_v\" + postfix, Value.class);\n@@ -97,1 +99,1 @@\n-                VarHandleTestAccessValue.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccessValue.class, \"static_v\" + postfix, Value.class);\n@@ -116,1 +118,1 @@\n-                VarHandleTestAccessValue.class, \"final_v\", type);\n+                VarHandleTestAccessValue.class, \"final_v\", Value.class);\n@@ -119,1 +121,1 @@\n-                VarHandleTestAccessValue.class, \"v\", type);\n+                VarHandleTestAccessValue.class, \"v\", Value.class);\n@@ -122,1 +124,1 @@\n-            VarHandleTestAccessValue.class, \"static_final_v\", type);\n+            VarHandleTestAccessValue.class, \"static_final_v\", Value.class);\n@@ -125,1 +127,1 @@\n-            VarHandleTestAccessValue.class, \"static_v\", type);\n+            VarHandleTestAccessValue.class, \"static_v\", Value.class);\n@@ -213,1 +215,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), Value.class);\n@@ -225,1 +227,1 @@\n-                    VarHandleTestAccessValue.class, \"final_v\", type);\n+                    VarHandleTestAccessValue.class, \"final_v\", Value.class);\n@@ -230,1 +232,1 @@\n-                    VarHandleTestAccessValue.class, \"v\", type);\n+                    VarHandleTestAccessValue.class, \"v\", Value.class);\n@@ -238,1 +240,1 @@\n-                VarHandleTestAccessValue.class, \"static_final_v\", type);\n+                VarHandleTestAccessValue.class, \"static_final_v\", Value.class);\n@@ -243,1 +245,1 @@\n-                VarHandleTestAccessValue.class, \"static_v\", type);\n+                VarHandleTestAccessValue.class, \"static_v\", Value.class);\n@@ -304,3 +306,0 @@\n-\n-\n-\n@@ -311,1 +310,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"get Value value\");\n+            assertEquals(x, Value.getInstance(10), \"get Value value\");\n@@ -318,1 +317,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"getVolatile Value value\");\n+            assertEquals(x, Value.getInstance(10), \"getVolatile Value value\");\n@@ -324,1 +323,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"getRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"getRelease Value value\");\n@@ -330,1 +329,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"getOpaque Value value\");\n+            assertEquals(x, Value.getInstance(10), \"getOpaque Value value\");\n@@ -336,1 +335,1 @@\n-            vh.set(recv, Value.getInstance(Point.getInstance(2,2)));\n+            vh.set(recv, Value.getInstance(20));\n@@ -340,1 +339,1 @@\n-            vh.setVolatile(recv, Value.getInstance(Point.getInstance(2,2)));\n+            vh.setVolatile(recv, Value.getInstance(20));\n@@ -344,1 +343,1 @@\n-            vh.setRelease(recv, Value.getInstance(Point.getInstance(2,2)));\n+            vh.setRelease(recv, Value.getInstance(20));\n@@ -348,1 +347,1 @@\n-            vh.setOpaque(recv, Value.getInstance(Point.getInstance(2,2)));\n+            vh.setOpaque(recv, Value.getInstance(20));\n@@ -353,1 +352,1 @@\n-            Value o = (Value) vh.getAndAdd(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAdd(recv, Value.getInstance(10));\n@@ -357,1 +356,1 @@\n-            Value o = (Value) vh.getAndAddAcquire(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAddAcquire(recv, Value.getInstance(10));\n@@ -361,1 +360,1 @@\n-            Value o = (Value) vh.getAndAddRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAddRelease(recv, Value.getInstance(10));\n@@ -365,1 +364,1 @@\n-            Value o = (Value) vh.getAndBitwiseOr(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOr(recv, Value.getInstance(10));\n@@ -369,1 +368,1 @@\n-            Value o = (Value) vh.getAndBitwiseOrAcquire(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOrAcquire(recv, Value.getInstance(10));\n@@ -373,1 +372,1 @@\n-            Value o = (Value) vh.getAndBitwiseOrRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOrRelease(recv, Value.getInstance(10));\n@@ -377,1 +376,1 @@\n-            Value o = (Value) vh.getAndBitwiseAnd(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAnd(recv, Value.getInstance(10));\n@@ -381,1 +380,1 @@\n-            Value o = (Value) vh.getAndBitwiseAndAcquire(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAndAcquire(recv, Value.getInstance(10));\n@@ -385,1 +384,1 @@\n-            Value o = (Value) vh.getAndBitwiseAndRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAndRelease(recv, Value.getInstance(10));\n@@ -389,1 +388,1 @@\n-            Value o = (Value) vh.getAndBitwiseXor(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXor(recv, Value.getInstance(10));\n@@ -393,1 +392,1 @@\n-            Value o = (Value) vh.getAndBitwiseXorAcquire(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXorAcquire(recv, Value.getInstance(10));\n@@ -397,1 +396,1 @@\n-            Value o = (Value) vh.getAndBitwiseXorRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXorRelease(recv, Value.getInstance(10));\n@@ -401,0 +400,1 @@\n+\n@@ -405,1 +405,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"get Value value\");\n+            assertEquals(x, Value.getInstance(10), \"get Value value\");\n@@ -412,1 +412,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"getVolatile Value value\");\n+            assertEquals(x, Value.getInstance(10), \"getVolatile Value value\");\n@@ -418,1 +418,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"getRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"getRelease Value value\");\n@@ -424,1 +424,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"getOpaque Value value\");\n+            assertEquals(x, Value.getInstance(10), \"getOpaque Value value\");\n@@ -430,1 +430,1 @@\n-            vh.set(Value.getInstance(Point.getInstance(2,2)));\n+            vh.set(Value.getInstance(20));\n@@ -434,1 +434,1 @@\n-            vh.setVolatile(Value.getInstance(Point.getInstance(2,2)));\n+            vh.setVolatile(Value.getInstance(20));\n@@ -438,1 +438,1 @@\n-            vh.setRelease(Value.getInstance(Point.getInstance(2,2)));\n+            vh.setRelease(Value.getInstance(20));\n@@ -442,1 +442,1 @@\n-            vh.setOpaque(Value.getInstance(Point.getInstance(2,2)));\n+            vh.setOpaque(Value.getInstance(20));\n@@ -447,1 +447,1 @@\n-            Value o = (Value) vh.getAndAdd(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAdd(Value.getInstance(10));\n@@ -451,1 +451,1 @@\n-            Value o = (Value) vh.getAndAddAcquire(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAddAcquire(Value.getInstance(10));\n@@ -455,1 +455,1 @@\n-            Value o = (Value) vh.getAndAddRelease(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAddRelease(Value.getInstance(10));\n@@ -459,1 +459,1 @@\n-            Value o = (Value) vh.getAndBitwiseOr(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOr(Value.getInstance(10));\n@@ -463,1 +463,1 @@\n-            Value o = (Value) vh.getAndBitwiseOrAcquire(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOrAcquire(Value.getInstance(10));\n@@ -467,1 +467,1 @@\n-            Value o = (Value) vh.getAndBitwiseOrRelease(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOrRelease(Value.getInstance(10));\n@@ -471,1 +471,1 @@\n-            Value o = (Value) vh.getAndBitwiseAnd(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAnd(Value.getInstance(10));\n@@ -475,1 +475,1 @@\n-            Value o = (Value) vh.getAndBitwiseAndAcquire(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAndAcquire(Value.getInstance(10));\n@@ -479,1 +479,1 @@\n-            Value o = (Value) vh.getAndBitwiseAndRelease(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAndRelease(Value.getInstance(10));\n@@ -483,1 +483,1 @@\n-            Value o = (Value) vh.getAndBitwiseXor(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXor(Value.getInstance(10));\n@@ -487,1 +487,1 @@\n-            Value o = (Value) vh.getAndBitwiseXorAcquire(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXorAcquire(Value.getInstance(10));\n@@ -491,1 +491,1 @@\n-            Value o = (Value) vh.getAndBitwiseXorRelease(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXorRelease(Value.getInstance(10));\n@@ -499,1 +499,1 @@\n-            vh.set(recv, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(recv, Value.getInstance(10));\n@@ -501,1 +501,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"set Value value\");\n+            assertEquals(x, Value.getInstance(10), \"set Value value\");\n@@ -507,1 +507,1 @@\n-            vh.setVolatile(recv, Value.getInstance(Point.getInstance(2,2)));\n+            vh.setVolatile(recv, Value.getInstance(20));\n@@ -509,1 +509,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setVolatile Value value\");\n+            assertEquals(x, Value.getInstance(20), \"setVolatile Value value\");\n@@ -514,1 +514,1 @@\n-            vh.setRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setRelease(recv, Value.getInstance(10));\n@@ -516,1 +516,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"setRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"setRelease Value value\");\n@@ -521,1 +521,1 @@\n-            vh.setOpaque(recv, Value.getInstance(Point.getInstance(2,2)));\n+            vh.setOpaque(recv, Value.getInstance(20));\n@@ -523,1 +523,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setOpaque Value value\");\n+            assertEquals(x, Value.getInstance(20), \"setOpaque Value value\");\n@@ -526,1 +526,1 @@\n-        vh.set(recv, Value.getInstance(Point.getInstance(1,1)));\n+        vh.set(recv, Value.getInstance(10));\n@@ -530,1 +530,1 @@\n-            boolean r = vh.compareAndSet(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+            boolean r = vh.compareAndSet(recv, Value.getInstance(10), Value.getInstance(20));\n@@ -533,1 +533,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success compareAndSet Value value\");\n@@ -537,1 +537,1 @@\n-            boolean r = vh.compareAndSet(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean r = vh.compareAndSet(recv, Value.getInstance(10), Value.getInstance(30));\n@@ -540,1 +540,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing compareAndSet Value value\");\n@@ -544,2 +544,2 @@\n-            Value r = (Value) vh.compareAndExchange(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchange Value\");\n+            Value r = (Value) vh.compareAndExchange(recv, Value.getInstance(20), Value.getInstance(10));\n+            assertEquals(r, Value.getInstance(20), \"success compareAndExchange Value\");\n@@ -547,1 +547,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchange Value value\");\n+            assertEquals(x, Value.getInstance(10), \"success compareAndExchange Value value\");\n@@ -551,2 +551,2 @@\n-            Value r = (Value) vh.compareAndExchange(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value\");\n+            Value r = (Value) vh.compareAndExchange(recv, Value.getInstance(20), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(10), \"failing compareAndExchange Value\");\n@@ -554,1 +554,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing compareAndExchange Value value\");\n@@ -558,2 +558,2 @@\n-            Value r = (Value) vh.compareAndExchangeAcquire(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeAcquire Value\");\n+            Value r = (Value) vh.compareAndExchangeAcquire(recv, Value.getInstance(10), Value.getInstance(20));\n+            assertEquals(r, Value.getInstance(10), \"success compareAndExchangeAcquire Value\");\n@@ -561,1 +561,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success compareAndExchangeAcquire Value value\");\n@@ -565,2 +565,2 @@\n-            Value r = (Value) vh.compareAndExchangeAcquire(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value\");\n+            Value r = (Value) vh.compareAndExchangeAcquire(recv, Value.getInstance(10), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(20), \"failing compareAndExchangeAcquire Value\");\n@@ -568,1 +568,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing compareAndExchangeAcquire Value value\");\n@@ -572,2 +572,2 @@\n-            Value r = (Value) vh.compareAndExchangeRelease(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeRelease Value\");\n+            Value r = (Value) vh.compareAndExchangeRelease(recv, Value.getInstance(20), Value.getInstance(10));\n+            assertEquals(r, Value.getInstance(20), \"success compareAndExchangeRelease Value\");\n@@ -575,1 +575,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"success compareAndExchangeRelease Value value\");\n@@ -579,2 +579,2 @@\n-            Value r = (Value) vh.compareAndExchangeRelease(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value\");\n+            Value r = (Value) vh.compareAndExchangeRelease(recv, Value.getInstance(20), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(10), \"failing compareAndExchangeRelease Value\");\n@@ -582,1 +582,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing compareAndExchangeRelease Value value\");\n@@ -588,1 +588,1 @@\n-                success = vh.weakCompareAndSetPlain(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                success = vh.weakCompareAndSetPlain(recv, Value.getInstance(10), Value.getInstance(20));\n@@ -593,1 +593,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetPlain Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetPlain Value value\");\n@@ -597,1 +597,1 @@\n-            boolean success = vh.weakCompareAndSetPlain(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = vh.weakCompareAndSetPlain(recv, Value.getInstance(10), Value.getInstance(30));\n@@ -600,1 +600,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetPlain Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetPlain Value value\");\n@@ -606,1 +606,1 @@\n-                success = vh.weakCompareAndSetAcquire(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                success = vh.weakCompareAndSetAcquire(recv, Value.getInstance(20), Value.getInstance(10));\n@@ -611,1 +611,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSetAcquire Value\");\n+            assertEquals(x, Value.getInstance(10), \"success weakCompareAndSetAcquire Value\");\n@@ -615,1 +615,1 @@\n-            boolean success = vh.weakCompareAndSetAcquire(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = vh.weakCompareAndSetAcquire(recv, Value.getInstance(20), Value.getInstance(30));\n@@ -618,1 +618,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSetAcquire Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSetAcquire Value value\");\n@@ -624,1 +624,1 @@\n-                success = vh.weakCompareAndSetRelease(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                success = vh.weakCompareAndSetRelease(recv, Value.getInstance(10), Value.getInstance(20));\n@@ -629,1 +629,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetRelease Value\");\n+            assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetRelease Value\");\n@@ -633,1 +633,1 @@\n-            boolean success = vh.weakCompareAndSetRelease(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = vh.weakCompareAndSetRelease(recv, Value.getInstance(10), Value.getInstance(30));\n@@ -636,1 +636,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetRelease Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetRelease Value value\");\n@@ -642,1 +642,1 @@\n-                success = vh.weakCompareAndSet(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                success = vh.weakCompareAndSet(recv, Value.getInstance(20), Value.getInstance(10));\n@@ -647,1 +647,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(10), \"success weakCompareAndSet Value value\");\n@@ -651,1 +651,1 @@\n-            boolean success = vh.weakCompareAndSet(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = vh.weakCompareAndSet(recv, Value.getInstance(20), Value.getInstance(30));\n@@ -654,1 +654,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSet Value value\");\n@@ -659,1 +659,1 @@\n-            vh.set(recv, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(recv, Value.getInstance(10));\n@@ -661,2 +661,2 @@\n-            Value o = (Value) vh.getAndSet(recv, Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSet Value\");\n+            Value o = (Value) vh.getAndSet(recv, Value.getInstance(20));\n+            assertEquals(o, Value.getInstance(10), \"getAndSet Value\");\n@@ -664,1 +664,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"getAndSet Value value\");\n@@ -668,1 +668,1 @@\n-            vh.set(recv, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(recv, Value.getInstance(10));\n@@ -670,2 +670,2 @@\n-            Value o = (Value) vh.getAndSetAcquire(recv, Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSetAcquire Value\");\n+            Value o = (Value) vh.getAndSetAcquire(recv, Value.getInstance(20));\n+            assertEquals(o, Value.getInstance(10), \"getAndSetAcquire Value\");\n@@ -673,1 +673,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSetAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"getAndSetAcquire Value value\");\n@@ -677,1 +677,1 @@\n-            vh.set(recv, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(recv, Value.getInstance(10));\n@@ -679,2 +679,2 @@\n-            Value o = (Value) vh.getAndSetRelease(recv, Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSetRelease Value\");\n+            Value o = (Value) vh.getAndSetRelease(recv, Value.getInstance(20));\n+            assertEquals(o, Value.getInstance(10), \"getAndSetRelease Value\");\n@@ -682,1 +682,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSetRelease Value value\");\n+            assertEquals(x, Value.getInstance(20), \"getAndSetRelease Value value\");\n@@ -691,1 +691,1 @@\n-            Value o = (Value) vh.getAndAdd(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAdd(recv, Value.getInstance(10));\n@@ -695,1 +695,1 @@\n-            Value o = (Value) vh.getAndAddAcquire(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAddAcquire(recv, Value.getInstance(10));\n@@ -699,1 +699,1 @@\n-            Value o = (Value) vh.getAndAddRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAddRelease(recv, Value.getInstance(10));\n@@ -703,1 +703,1 @@\n-            Value o = (Value) vh.getAndBitwiseOr(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOr(recv, Value.getInstance(10));\n@@ -707,1 +707,1 @@\n-            Value o = (Value) vh.getAndBitwiseOrAcquire(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOrAcquire(recv, Value.getInstance(10));\n@@ -711,1 +711,1 @@\n-            Value o = (Value) vh.getAndBitwiseOrRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOrRelease(recv, Value.getInstance(10));\n@@ -715,1 +715,1 @@\n-            Value o = (Value) vh.getAndBitwiseAnd(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAnd(recv, Value.getInstance(10));\n@@ -719,1 +719,1 @@\n-            Value o = (Value) vh.getAndBitwiseAndAcquire(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAndAcquire(recv, Value.getInstance(10));\n@@ -723,1 +723,1 @@\n-            Value o = (Value) vh.getAndBitwiseAndRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAndRelease(recv, Value.getInstance(10));\n@@ -727,1 +727,1 @@\n-            Value o = (Value) vh.getAndBitwiseXor(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXor(recv, Value.getInstance(10));\n@@ -731,1 +731,1 @@\n-            Value o = (Value) vh.getAndBitwiseXorAcquire(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXorAcquire(recv, Value.getInstance(10));\n@@ -735,1 +735,1 @@\n-            Value o = (Value) vh.getAndBitwiseXorRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXorRelease(recv, Value.getInstance(10));\n@@ -743,1 +743,1 @@\n-            vh.set(Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(Value.getInstance(10));\n@@ -745,1 +745,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"set Value value\");\n+            assertEquals(x, Value.getInstance(10), \"set Value value\");\n@@ -751,1 +751,1 @@\n-            vh.setVolatile(Value.getInstance(Point.getInstance(2,2)));\n+            vh.setVolatile(Value.getInstance(20));\n@@ -753,1 +753,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setVolatile Value value\");\n+            assertEquals(x, Value.getInstance(20), \"setVolatile Value value\");\n@@ -758,1 +758,1 @@\n-            vh.setRelease(Value.getInstance(Point.getInstance(1,1)));\n+            vh.setRelease(Value.getInstance(10));\n@@ -760,1 +760,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"setRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"setRelease Value value\");\n@@ -765,1 +765,1 @@\n-            vh.setOpaque(Value.getInstance(Point.getInstance(2,2)));\n+            vh.setOpaque(Value.getInstance(20));\n@@ -767,1 +767,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setOpaque Value value\");\n+            assertEquals(x, Value.getInstance(20), \"setOpaque Value value\");\n@@ -770,1 +770,1 @@\n-        vh.set(Value.getInstance(Point.getInstance(1,1)));\n+        vh.set(Value.getInstance(10));\n@@ -774,1 +774,1 @@\n-            boolean r = vh.compareAndSet(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+            boolean r = vh.compareAndSet(Value.getInstance(10), Value.getInstance(20));\n@@ -777,1 +777,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success compareAndSet Value value\");\n@@ -781,1 +781,1 @@\n-            boolean r = vh.compareAndSet(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean r = vh.compareAndSet(Value.getInstance(10), Value.getInstance(30));\n@@ -784,1 +784,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing compareAndSet Value value\");\n@@ -788,2 +788,2 @@\n-            Value r = (Value) vh.compareAndExchange(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchange Value\");\n+            Value r = (Value) vh.compareAndExchange(Value.getInstance(20), Value.getInstance(10));\n+            assertEquals(r, Value.getInstance(20), \"success compareAndExchange Value\");\n@@ -791,1 +791,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchange Value value\");\n+            assertEquals(x, Value.getInstance(10), \"success compareAndExchange Value value\");\n@@ -795,2 +795,2 @@\n-            Value r = (Value) vh.compareAndExchange(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value\");\n+            Value r = (Value) vh.compareAndExchange(Value.getInstance(20), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(10), \"failing compareAndExchange Value\");\n@@ -798,1 +798,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing compareAndExchange Value value\");\n@@ -802,2 +802,2 @@\n-            Value r = (Value) vh.compareAndExchangeAcquire(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeAcquire Value\");\n+            Value r = (Value) vh.compareAndExchangeAcquire(Value.getInstance(10), Value.getInstance(20));\n+            assertEquals(r, Value.getInstance(10), \"success compareAndExchangeAcquire Value\");\n@@ -805,1 +805,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success compareAndExchangeAcquire Value value\");\n@@ -809,2 +809,2 @@\n-            Value r = (Value) vh.compareAndExchangeAcquire(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value\");\n+            Value r = (Value) vh.compareAndExchangeAcquire(Value.getInstance(10), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(20), \"failing compareAndExchangeAcquire Value\");\n@@ -812,1 +812,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing compareAndExchangeAcquire Value value\");\n@@ -816,2 +816,2 @@\n-            Value r = (Value) vh.compareAndExchangeRelease(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeRelease Value\");\n+            Value r = (Value) vh.compareAndExchangeRelease(Value.getInstance(20), Value.getInstance(10));\n+            assertEquals(r, Value.getInstance(20), \"success compareAndExchangeRelease Value\");\n@@ -819,1 +819,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"success compareAndExchangeRelease Value value\");\n@@ -823,2 +823,2 @@\n-            Value r = (Value) vh.compareAndExchangeRelease(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value\");\n+            Value r = (Value) vh.compareAndExchangeRelease(Value.getInstance(20), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(10), \"failing compareAndExchangeRelease Value\");\n@@ -826,1 +826,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing compareAndExchangeRelease Value value\");\n@@ -832,1 +832,1 @@\n-                success = vh.weakCompareAndSetPlain(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                success = vh.weakCompareAndSetPlain(Value.getInstance(10), Value.getInstance(20));\n@@ -837,1 +837,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetPlain Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetPlain Value value\");\n@@ -841,1 +841,1 @@\n-            boolean success = vh.weakCompareAndSetPlain(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = vh.weakCompareAndSetPlain(Value.getInstance(10), Value.getInstance(30));\n@@ -844,1 +844,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetPlain Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetPlain Value value\");\n@@ -850,1 +850,1 @@\n-                success = vh.weakCompareAndSetAcquire(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                success = vh.weakCompareAndSetAcquire(Value.getInstance(20), Value.getInstance(10));\n@@ -855,1 +855,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSetAcquire Value\");\n+            assertEquals(x, Value.getInstance(10), \"success weakCompareAndSetAcquire Value\");\n@@ -859,1 +859,1 @@\n-            boolean success = vh.weakCompareAndSetAcquire(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = vh.weakCompareAndSetAcquire(Value.getInstance(20), Value.getInstance(30));\n@@ -862,1 +862,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSetAcquire Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSetAcquire Value value\");\n@@ -868,1 +868,1 @@\n-                success = vh.weakCompareAndSetRelease(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                success = vh.weakCompareAndSetRelease(Value.getInstance(10), Value.getInstance(20));\n@@ -873,1 +873,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetRelease Value\");\n+            assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetRelease Value\");\n@@ -877,1 +877,1 @@\n-            boolean success = vh.weakCompareAndSetRelease(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = vh.weakCompareAndSetRelease(Value.getInstance(10), Value.getInstance(30));\n@@ -880,1 +880,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetRelease Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetRelease Value value\");\n@@ -886,1 +886,1 @@\n-                success = vh.weakCompareAndSet(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                success = vh.weakCompareAndSet(Value.getInstance(20), Value.getInstance(10));\n@@ -891,1 +891,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSet Value\");\n+            assertEquals(x, Value.getInstance(10), \"success weakCompareAndSet Value\");\n@@ -895,1 +895,1 @@\n-            boolean success = vh.weakCompareAndSet(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = vh.weakCompareAndSet(Value.getInstance(20), Value.getInstance(30));\n@@ -898,1 +898,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSet Value value\");\n@@ -903,1 +903,1 @@\n-            vh.set(Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(Value.getInstance(10));\n@@ -905,2 +905,2 @@\n-            Value o = (Value) vh.getAndSet(Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSet Value\");\n+            Value o = (Value) vh.getAndSet(Value.getInstance(20));\n+            assertEquals(o, Value.getInstance(10), \"getAndSet Value\");\n@@ -908,1 +908,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"getAndSet Value value\");\n@@ -912,1 +912,1 @@\n-            vh.set(Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(Value.getInstance(10));\n@@ -914,2 +914,2 @@\n-            Value o = (Value) vh.getAndSetAcquire(Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSetAcquire Value\");\n+            Value o = (Value) vh.getAndSetAcquire(Value.getInstance(20));\n+            assertEquals(o, Value.getInstance(10), \"getAndSetAcquire Value\");\n@@ -917,1 +917,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSetAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"getAndSetAcquire Value value\");\n@@ -921,1 +921,1 @@\n-            vh.set(Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(Value.getInstance(10));\n@@ -923,2 +923,2 @@\n-            Value o = (Value) vh.getAndSetRelease(Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSetRelease Value\");\n+            Value o = (Value) vh.getAndSetRelease(Value.getInstance(20));\n+            assertEquals(o, Value.getInstance(10), \"getAndSetRelease Value\");\n@@ -926,1 +926,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSetRelease Value value\");\n+            assertEquals(x, Value.getInstance(20), \"getAndSetRelease Value value\");\n@@ -935,1 +935,1 @@\n-            Value o = (Value) vh.getAndAdd(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAdd(Value.getInstance(10));\n@@ -939,1 +939,1 @@\n-            Value o = (Value) vh.getAndAddAcquire(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAddAcquire(Value.getInstance(10));\n@@ -943,1 +943,1 @@\n-            Value o = (Value) vh.getAndAddRelease(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAddRelease(Value.getInstance(10));\n@@ -947,1 +947,1 @@\n-            Value o = (Value) vh.getAndBitwiseOr(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOr(Value.getInstance(10));\n@@ -951,1 +951,1 @@\n-            Value o = (Value) vh.getAndBitwiseOrAcquire(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOrAcquire(Value.getInstance(10));\n@@ -955,1 +955,1 @@\n-            Value o = (Value) vh.getAndBitwiseOrRelease(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOrRelease(Value.getInstance(10));\n@@ -959,1 +959,1 @@\n-            Value o = (Value) vh.getAndBitwiseAnd(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAnd(Value.getInstance(10));\n@@ -963,1 +963,1 @@\n-            Value o = (Value) vh.getAndBitwiseAndAcquire(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAndAcquire(Value.getInstance(10));\n@@ -967,1 +967,1 @@\n-            Value o = (Value) vh.getAndBitwiseAndRelease(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAndRelease(Value.getInstance(10));\n@@ -971,1 +971,1 @@\n-            Value o = (Value) vh.getAndBitwiseXor(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXor(Value.getInstance(10));\n@@ -975,1 +975,1 @@\n-            Value o = (Value) vh.getAndBitwiseXorAcquire(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXorAcquire(Value.getInstance(10));\n@@ -979,1 +979,1 @@\n-            Value o = (Value) vh.getAndBitwiseXorRelease(Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXorRelease(Value.getInstance(10));\n@@ -990,1 +990,1 @@\n-                vh.set(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                vh.set(array, i, Value.getInstance(10));\n@@ -992,1 +992,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"get Value value\");\n+                assertEquals(x, Value.getInstance(10), \"get Value value\");\n@@ -998,1 +998,1 @@\n-                vh.setVolatile(array, i, Value.getInstance(Point.getInstance(2,2)));\n+                vh.setVolatile(array, i, Value.getInstance(20));\n@@ -1000,1 +1000,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setVolatile Value value\");\n+                assertEquals(x, Value.getInstance(20), \"setVolatile Value value\");\n@@ -1005,1 +1005,1 @@\n-                vh.setRelease(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                vh.setRelease(array, i, Value.getInstance(10));\n@@ -1007,1 +1007,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"setRelease Value value\");\n+                assertEquals(x, Value.getInstance(10), \"setRelease Value value\");\n@@ -1012,1 +1012,1 @@\n-                vh.setOpaque(array, i, Value.getInstance(Point.getInstance(2,2)));\n+                vh.setOpaque(array, i, Value.getInstance(20));\n@@ -1014,1 +1014,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setOpaque Value value\");\n+                assertEquals(x, Value.getInstance(20), \"setOpaque Value value\");\n@@ -1017,1 +1017,1 @@\n-            vh.set(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(array, i, Value.getInstance(10));\n@@ -1021,1 +1021,1 @@\n-                boolean r = vh.compareAndSet(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                boolean r = vh.compareAndSet(array, i, Value.getInstance(10), Value.getInstance(20));\n@@ -1024,1 +1024,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndSet Value value\");\n+                assertEquals(x, Value.getInstance(20), \"success compareAndSet Value value\");\n@@ -1028,1 +1028,1 @@\n-                boolean r = vh.compareAndSet(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+                boolean r = vh.compareAndSet(array, i, Value.getInstance(10), Value.getInstance(30));\n@@ -1031,1 +1031,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndSet Value value\");\n+                assertEquals(x, Value.getInstance(20), \"failing compareAndSet Value value\");\n@@ -1035,2 +1035,2 @@\n-                Value r = (Value) vh.compareAndExchange(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchange Value\");\n+                Value r = (Value) vh.compareAndExchange(array, i, Value.getInstance(20), Value.getInstance(10));\n+                assertEquals(r, Value.getInstance(20), \"success compareAndExchange Value\");\n@@ -1038,1 +1038,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchange Value value\");\n+                assertEquals(x, Value.getInstance(10), \"success compareAndExchange Value value\");\n@@ -1042,2 +1042,2 @@\n-                Value r = (Value) vh.compareAndExchange(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value\");\n+                Value r = (Value) vh.compareAndExchange(array, i, Value.getInstance(20), Value.getInstance(30));\n+                assertEquals(r, Value.getInstance(10), \"failing compareAndExchange Value\");\n@@ -1045,1 +1045,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value value\");\n+                assertEquals(x, Value.getInstance(10), \"failing compareAndExchange Value value\");\n@@ -1049,2 +1049,2 @@\n-                Value r = (Value) vh.compareAndExchangeAcquire(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeAcquire Value\");\n+                Value r = (Value) vh.compareAndExchangeAcquire(array, i, Value.getInstance(10), Value.getInstance(20));\n+                assertEquals(r, Value.getInstance(10), \"success compareAndExchangeAcquire Value\");\n@@ -1052,1 +1052,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeAcquire Value value\");\n+                assertEquals(x, Value.getInstance(20), \"success compareAndExchangeAcquire Value value\");\n@@ -1056,2 +1056,2 @@\n-                Value r = (Value) vh.compareAndExchangeAcquire(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value\");\n+                Value r = (Value) vh.compareAndExchangeAcquire(array, i, Value.getInstance(10), Value.getInstance(30));\n+                assertEquals(r, Value.getInstance(20), \"failing compareAndExchangeAcquire Value\");\n@@ -1059,1 +1059,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value value\");\n+                assertEquals(x, Value.getInstance(20), \"failing compareAndExchangeAcquire Value value\");\n@@ -1063,2 +1063,2 @@\n-                Value r = (Value) vh.compareAndExchangeRelease(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeRelease Value\");\n+                Value r = (Value) vh.compareAndExchangeRelease(array, i, Value.getInstance(20), Value.getInstance(10));\n+                assertEquals(r, Value.getInstance(20), \"success compareAndExchangeRelease Value\");\n@@ -1066,1 +1066,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeRelease Value value\");\n+                assertEquals(x, Value.getInstance(10), \"success compareAndExchangeRelease Value value\");\n@@ -1070,2 +1070,2 @@\n-                Value r = (Value) vh.compareAndExchangeRelease(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value\");\n+                Value r = (Value) vh.compareAndExchangeRelease(array, i, Value.getInstance(20), Value.getInstance(30));\n+                assertEquals(r, Value.getInstance(10), \"failing compareAndExchangeRelease Value\");\n@@ -1073,1 +1073,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value value\");\n+                assertEquals(x, Value.getInstance(10), \"failing compareAndExchangeRelease Value value\");\n@@ -1079,1 +1079,1 @@\n-                    success = vh.weakCompareAndSetPlain(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                    success = vh.weakCompareAndSetPlain(array, i, Value.getInstance(10), Value.getInstance(20));\n@@ -1084,1 +1084,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetPlain Value value\");\n+                assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetPlain Value value\");\n@@ -1088,1 +1088,1 @@\n-                boolean success = vh.weakCompareAndSetPlain(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+                boolean success = vh.weakCompareAndSetPlain(array, i, Value.getInstance(10), Value.getInstance(30));\n@@ -1091,1 +1091,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetPlain Value value\");\n+                assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetPlain Value value\");\n@@ -1097,1 +1097,1 @@\n-                    success = vh.weakCompareAndSetAcquire(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                    success = vh.weakCompareAndSetAcquire(array, i, Value.getInstance(20), Value.getInstance(10));\n@@ -1102,1 +1102,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSetAcquire Value\");\n+                assertEquals(x, Value.getInstance(10), \"success weakCompareAndSetAcquire Value\");\n@@ -1106,1 +1106,1 @@\n-                boolean success = vh.weakCompareAndSetAcquire(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+                boolean success = vh.weakCompareAndSetAcquire(array, i, Value.getInstance(20), Value.getInstance(30));\n@@ -1109,1 +1109,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSetAcquire Value value\");\n+                assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSetAcquire Value value\");\n@@ -1115,1 +1115,1 @@\n-                    success = vh.weakCompareAndSetRelease(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                    success = vh.weakCompareAndSetRelease(array, i, Value.getInstance(10), Value.getInstance(20));\n@@ -1120,1 +1120,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetRelease Value\");\n+                assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetRelease Value\");\n@@ -1124,1 +1124,1 @@\n-                boolean success = vh.weakCompareAndSetRelease(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+                boolean success = vh.weakCompareAndSetRelease(array, i, Value.getInstance(10), Value.getInstance(30));\n@@ -1127,1 +1127,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetRelease Value value\");\n+                assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetRelease Value value\");\n@@ -1133,1 +1133,1 @@\n-                    success = vh.weakCompareAndSet(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                    success = vh.weakCompareAndSet(array, i, Value.getInstance(20), Value.getInstance(10));\n@@ -1138,1 +1138,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSet Value\");\n+                assertEquals(x, Value.getInstance(10), \"success weakCompareAndSet Value\");\n@@ -1142,1 +1142,1 @@\n-                boolean success = vh.weakCompareAndSet(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+                boolean success = vh.weakCompareAndSet(array, i, Value.getInstance(20), Value.getInstance(30));\n@@ -1145,1 +1145,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSet Value value\");\n+                assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSet Value value\");\n@@ -1150,1 +1150,1 @@\n-                vh.set(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                vh.set(array, i, Value.getInstance(10));\n@@ -1152,2 +1152,2 @@\n-                Value o = (Value) vh.getAndSet(array, i, Value.getInstance(Point.getInstance(2,2)));\n-                assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSet Value\");\n+                Value o = (Value) vh.getAndSet(array, i, Value.getInstance(20));\n+                assertEquals(o, Value.getInstance(10), \"getAndSet Value\");\n@@ -1155,1 +1155,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSet Value value\");\n+                assertEquals(x, Value.getInstance(20), \"getAndSet Value value\");\n@@ -1159,1 +1159,1 @@\n-                vh.set(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                vh.set(array, i, Value.getInstance(10));\n@@ -1161,2 +1161,2 @@\n-                Value o = (Value) vh.getAndSetAcquire(array, i, Value.getInstance(Point.getInstance(2,2)));\n-                assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSetAcquire Value\");\n+                Value o = (Value) vh.getAndSetAcquire(array, i, Value.getInstance(20));\n+                assertEquals(o, Value.getInstance(10), \"getAndSetAcquire Value\");\n@@ -1164,1 +1164,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSetAcquire Value value\");\n+                assertEquals(x, Value.getInstance(20), \"getAndSetAcquire Value value\");\n@@ -1168,1 +1168,1 @@\n-                vh.set(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                vh.set(array, i, Value.getInstance(10));\n@@ -1170,2 +1170,2 @@\n-                Value o = (Value) vh.getAndSetRelease(array, i, Value.getInstance(Point.getInstance(2,2)));\n-                assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSetRelease Value\");\n+                Value o = (Value) vh.getAndSetRelease(array, i, Value.getInstance(20));\n+                assertEquals(o, Value.getInstance(10), \"getAndSetRelease Value\");\n@@ -1173,1 +1173,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSetRelease Value value\");\n+                assertEquals(x, Value.getInstance(20), \"getAndSetRelease Value value\");\n@@ -1186,1 +1186,1 @@\n-            Value o = (Value) vh.getAndAdd(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAdd(array, i, Value.getInstance(10));\n@@ -1190,1 +1190,1 @@\n-            Value o = (Value) vh.getAndAddAcquire(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAddAcquire(array, i, Value.getInstance(10));\n@@ -1194,1 +1194,1 @@\n-            Value o = (Value) vh.getAndAddRelease(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndAddRelease(array, i, Value.getInstance(10));\n@@ -1198,1 +1198,1 @@\n-            Value o = (Value) vh.getAndBitwiseOr(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOr(array, i, Value.getInstance(10));\n@@ -1202,1 +1202,1 @@\n-            Value o = (Value) vh.getAndBitwiseOrAcquire(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOrAcquire(array, i, Value.getInstance(10));\n@@ -1206,1 +1206,1 @@\n-            Value o = (Value) vh.getAndBitwiseOrRelease(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseOrRelease(array, i, Value.getInstance(10));\n@@ -1210,1 +1210,1 @@\n-            Value o = (Value) vh.getAndBitwiseAnd(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAnd(array, i, Value.getInstance(10));\n@@ -1214,1 +1214,1 @@\n-            Value o = (Value) vh.getAndBitwiseAndAcquire(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAndAcquire(array, i, Value.getInstance(10));\n@@ -1218,1 +1218,1 @@\n-            Value o = (Value) vh.getAndBitwiseAndRelease(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseAndRelease(array, i, Value.getInstance(10));\n@@ -1222,1 +1222,1 @@\n-            Value o = (Value) vh.getAndBitwiseXor(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXor(array, i, Value.getInstance(10));\n@@ -1226,1 +1226,1 @@\n-            Value o = (Value) vh.getAndBitwiseXorAcquire(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXorAcquire(array, i, Value.getInstance(10));\n@@ -1230,1 +1230,1 @@\n-            Value o = (Value) vh.getAndBitwiseXorRelease(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            Value o = (Value) vh.getAndBitwiseXorRelease(array, i, Value.getInstance(10));\n@@ -1245,1 +1245,1 @@\n-                vh.set(array, ci, Value.getInstance(Point.getInstance(1,1)));\n+                vh.set(array, ci, Value.getInstance(10));\n@@ -1253,1 +1253,1 @@\n-                vh.setVolatile(array, ci, Value.getInstance(Point.getInstance(1,1)));\n+                vh.setVolatile(array, ci, Value.getInstance(10));\n@@ -1261,1 +1261,1 @@\n-                vh.setRelease(array, ci, Value.getInstance(Point.getInstance(1,1)));\n+                vh.setRelease(array, ci, Value.getInstance(10));\n@@ -1269,1 +1269,1 @@\n-                vh.setOpaque(array, ci, Value.getInstance(Point.getInstance(1,1)));\n+                vh.setOpaque(array, ci, Value.getInstance(10));\n@@ -1273,1 +1273,1 @@\n-                boolean r = vh.compareAndSet(array, ci, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                boolean r = vh.compareAndSet(array, ci, Value.getInstance(10), Value.getInstance(20));\n@@ -1277,1 +1277,1 @@\n-                Value r = (Value) vh.compareAndExchange(array, ci, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                Value r = (Value) vh.compareAndExchange(array, ci, Value.getInstance(20), Value.getInstance(10));\n@@ -1281,1 +1281,1 @@\n-                Value r = (Value) vh.compareAndExchangeAcquire(array, ci, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                Value r = (Value) vh.compareAndExchangeAcquire(array, ci, Value.getInstance(20), Value.getInstance(10));\n@@ -1285,1 +1285,1 @@\n-                Value r = (Value) vh.compareAndExchangeRelease(array, ci, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                Value r = (Value) vh.compareAndExchangeRelease(array, ci, Value.getInstance(20), Value.getInstance(10));\n@@ -1289,1 +1289,1 @@\n-                boolean r = vh.weakCompareAndSetPlain(array, ci, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                boolean r = vh.weakCompareAndSetPlain(array, ci, Value.getInstance(10), Value.getInstance(20));\n@@ -1293,1 +1293,1 @@\n-                boolean r = vh.weakCompareAndSet(array, ci, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                boolean r = vh.weakCompareAndSet(array, ci, Value.getInstance(10), Value.getInstance(20));\n@@ -1297,1 +1297,1 @@\n-                boolean r = vh.weakCompareAndSetAcquire(array, ci, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                boolean r = vh.weakCompareAndSetAcquire(array, ci, Value.getInstance(10), Value.getInstance(20));\n@@ -1301,1 +1301,1 @@\n-                boolean r = vh.weakCompareAndSetRelease(array, ci, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                boolean r = vh.weakCompareAndSetRelease(array, ci, Value.getInstance(10), Value.getInstance(20));\n@@ -1305,1 +1305,1 @@\n-                Value o = (Value) vh.getAndSet(array, ci, Value.getInstance(Point.getInstance(1,1)));\n+                Value o = (Value) vh.getAndSet(array, ci, Value.getInstance(10));\n@@ -1309,1 +1309,1 @@\n-                Value o = (Value) vh.getAndSetAcquire(array, ci, Value.getInstance(Point.getInstance(1,1)));\n+                Value o = (Value) vh.getAndSetAcquire(array, ci, Value.getInstance(10));\n@@ -1313,1 +1313,1 @@\n-                Value o = (Value) vh.getAndSetRelease(array, ci, Value.getInstance(Point.getInstance(1,1)));\n+                Value o = (Value) vh.getAndSetRelease(array, ci, Value.getInstance(10));\n@@ -1322,1 +1322,1 @@\n-        Arrays.fill(array, Value.getInstance(Point.getInstance(1,1)));\n+        Arrays.fill(array, Value.getInstance(10));\n@@ -1347,1 +1347,1 @@\n-            boolean r = vh.compareAndSet(array, 0, Value.getInstance(Point.getInstance(1,1)), value);\n+            boolean r = vh.compareAndSet(array, 0, Value.getInstance(10), value);\n@@ -1352,1 +1352,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(array, 0, Value.getInstance(Point.getInstance(1,1)), value);\n+            boolean r = vh.weakCompareAndSetPlain(array, 0, Value.getInstance(10), value);\n@@ -1357,1 +1357,1 @@\n-            boolean r = vh.weakCompareAndSet(array, 0, Value.getInstance(Point.getInstance(1,1)), value);\n+            boolean r = vh.weakCompareAndSet(array, 0, Value.getInstance(10), value);\n@@ -1362,1 +1362,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)), value);\n+            boolean r = vh.weakCompareAndSetAcquire(array, 0, Value.getInstance(10), value);\n@@ -1367,1 +1367,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(array, 0, Value.getInstance(Point.getInstance(1,1)), value);\n+            boolean r = vh.weakCompareAndSetRelease(array, 0, Value.getInstance(10), value);\n@@ -1372,1 +1372,1 @@\n-            Value x = (Value) vh.compareAndExchange(array, 0, Value.getInstance(Point.getInstance(1,1)), value);\n+            Value x = (Value) vh.compareAndExchange(array, 0, Value.getInstance(10), value);\n@@ -1377,1 +1377,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)), value);\n+            Value x = (Value) vh.compareAndExchangeAcquire(array, 0, Value.getInstance(10), value);\n@@ -1382,1 +1382,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(array, 0, Value.getInstance(Point.getInstance(1,1)), value);\n+            Value x = (Value) vh.compareAndExchangeRelease(array, 0, Value.getInstance(10), value);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessValue.java","additions":305,"deletions":305,"binary":false,"changes":610,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    static final Class<?> type = boolean.class;\n-\n@@ -51,1 +49,1 @@\n-    static boolean static_v = true;\n+    static boolean static_v;\n@@ -70,1 +68,1 @@\n-                VarHandleTestMethodHandleAccessBoolean.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccessBoolean.class, \"final_v\", boolean.class);\n@@ -73,1 +71,1 @@\n-                VarHandleTestMethodHandleAccessBoolean.class, \"v\", type);\n+                VarHandleTestMethodHandleAccessBoolean.class, \"v\", boolean.class);\n@@ -76,1 +74,1 @@\n-            VarHandleTestMethodHandleAccessBoolean.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccessBoolean.class, \"static_final_v\", boolean.class);\n@@ -79,1 +77,1 @@\n-            VarHandleTestMethodHandleAccessBoolean.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccessBoolean.class, \"static_v\", boolean.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessBoolean.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    static final Class<?> type = byte.class;\n-\n@@ -51,1 +49,1 @@\n-    static byte static_v = (byte)0x01;\n+    static byte static_v;\n@@ -70,1 +68,1 @@\n-                VarHandleTestMethodHandleAccessByte.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccessByte.class, \"final_v\", byte.class);\n@@ -73,1 +71,1 @@\n-                VarHandleTestMethodHandleAccessByte.class, \"v\", type);\n+                VarHandleTestMethodHandleAccessByte.class, \"v\", byte.class);\n@@ -76,1 +74,1 @@\n-            VarHandleTestMethodHandleAccessByte.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccessByte.class, \"static_final_v\", byte.class);\n@@ -79,1 +77,1 @@\n-            VarHandleTestMethodHandleAccessByte.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccessByte.class, \"static_v\", byte.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessByte.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    static final Class<?> type = char.class;\n-\n@@ -51,1 +49,1 @@\n-    static char static_v = '\\u0123';\n+    static char static_v;\n@@ -70,1 +68,1 @@\n-                VarHandleTestMethodHandleAccessChar.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccessChar.class, \"final_v\", char.class);\n@@ -73,1 +71,1 @@\n-                VarHandleTestMethodHandleAccessChar.class, \"v\", type);\n+                VarHandleTestMethodHandleAccessChar.class, \"v\", char.class);\n@@ -76,1 +74,1 @@\n-            VarHandleTestMethodHandleAccessChar.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccessChar.class, \"static_final_v\", char.class);\n@@ -79,1 +77,1 @@\n-            VarHandleTestMethodHandleAccessChar.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccessChar.class, \"static_v\", char.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessChar.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    static final Class<?> type = double.class;\n-\n@@ -51,1 +49,1 @@\n-    static double static_v = 1.0d;\n+    static double static_v;\n@@ -70,1 +68,1 @@\n-                VarHandleTestMethodHandleAccessDouble.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccessDouble.class, \"final_v\", double.class);\n@@ -73,1 +71,1 @@\n-                VarHandleTestMethodHandleAccessDouble.class, \"v\", type);\n+                VarHandleTestMethodHandleAccessDouble.class, \"v\", double.class);\n@@ -76,1 +74,1 @@\n-            VarHandleTestMethodHandleAccessDouble.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccessDouble.class, \"static_final_v\", double.class);\n@@ -79,1 +77,1 @@\n-            VarHandleTestMethodHandleAccessDouble.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccessDouble.class, \"static_v\", double.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessDouble.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    static final Class<?> type = float.class;\n-\n@@ -51,1 +49,1 @@\n-    static float static_v = 1.0f;\n+    static float static_v;\n@@ -70,1 +68,1 @@\n-                VarHandleTestMethodHandleAccessFloat.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccessFloat.class, \"final_v\", float.class);\n@@ -73,1 +71,1 @@\n-                VarHandleTestMethodHandleAccessFloat.class, \"v\", type);\n+                VarHandleTestMethodHandleAccessFloat.class, \"v\", float.class);\n@@ -76,1 +74,1 @@\n-            VarHandleTestMethodHandleAccessFloat.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccessFloat.class, \"static_final_v\", float.class);\n@@ -79,1 +77,1 @@\n-            VarHandleTestMethodHandleAccessFloat.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccessFloat.class, \"static_v\", float.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessFloat.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    static final Class<?> type = int.class;\n-\n@@ -51,1 +49,1 @@\n-    static int static_v = 0x01234567;\n+    static int static_v;\n@@ -70,1 +68,1 @@\n-                VarHandleTestMethodHandleAccessInt.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccessInt.class, \"final_v\", int.class);\n@@ -73,1 +71,1 @@\n-                VarHandleTestMethodHandleAccessInt.class, \"v\", type);\n+                VarHandleTestMethodHandleAccessInt.class, \"v\", int.class);\n@@ -76,1 +74,1 @@\n-            VarHandleTestMethodHandleAccessInt.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccessInt.class, \"static_final_v\", int.class);\n@@ -79,1 +77,1 @@\n-            VarHandleTestMethodHandleAccessInt.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccessInt.class, \"static_v\", int.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessInt.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    static final Class<?> type = long.class;\n-\n@@ -51,1 +49,1 @@\n-    static long static_v = 0x0123456789ABCDEFL;\n+    static long static_v;\n@@ -70,1 +68,1 @@\n-                VarHandleTestMethodHandleAccessLong.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccessLong.class, \"final_v\", long.class);\n@@ -73,1 +71,1 @@\n-                VarHandleTestMethodHandleAccessLong.class, \"v\", type);\n+                VarHandleTestMethodHandleAccessLong.class, \"v\", long.class);\n@@ -76,1 +74,1 @@\n-            VarHandleTestMethodHandleAccessLong.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccessLong.class, \"static_final_v\", long.class);\n@@ -79,1 +77,1 @@\n-            VarHandleTestMethodHandleAccessLong.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccessLong.class, \"static_v\", long.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessLong.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1,793 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ -- This file was mechanically generated: Do not edit! -- \/\/\n-\n-\/*\n- * @test\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodHandleAccessPoint.java\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=2000 VarHandleTestMethodHandleAccessPoint\n- *\/\n-\n-import org.testng.annotations.BeforeClass;\n-import org.testng.annotations.DataProvider;\n-import org.testng.annotations.Test;\n-\n-import java.lang.invoke.MethodHandle;\n-import java.lang.invoke.MethodHandles;\n-import java.lang.invoke.VarHandle;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-\n-import jdk.internal.value.PrimitiveClass;\n-import static org.testng.Assert.*;\n-\n-public class VarHandleTestMethodHandleAccessPoint extends VarHandleBaseTest {\n-    static final Class<?> type = PrimitiveClass.asValueType(Point.class);\n-\n-    static final Point static_final_v = Point.getInstance(1,1);\n-\n-    static Point static_v = Point.getInstance(1,1);\n-\n-    final Point final_v = Point.getInstance(1,1);\n-\n-    Point v;\n-\n-    VarHandle vhFinalField;\n-\n-    VarHandle vhField;\n-\n-    VarHandle vhStaticField;\n-\n-    VarHandle vhStaticFinalField;\n-\n-    VarHandle vhArray;\n-\n-    @BeforeClass\n-    public void setup() throws Exception {\n-        vhFinalField = MethodHandles.lookup().findVarHandle(\n-                VarHandleTestMethodHandleAccessPoint.class, \"final_v\", type);\n-\n-        vhField = MethodHandles.lookup().findVarHandle(\n-                VarHandleTestMethodHandleAccessPoint.class, \"v\", type);\n-\n-        vhStaticFinalField = MethodHandles.lookup().findStaticVarHandle(\n-            VarHandleTestMethodHandleAccessPoint.class, \"static_final_v\", type);\n-\n-        vhStaticField = MethodHandles.lookup().findStaticVarHandle(\n-            VarHandleTestMethodHandleAccessPoint.class, \"static_v\", type);\n-\n-        vhArray = MethodHandles.arrayElementVarHandle(Point[].class);\n-    }\n-\n-\n-    @DataProvider\n-    public Object[][] accessTestCaseProvider() throws Exception {\n-        List<AccessTestCase<?>> cases = new ArrayList<>();\n-\n-        for (VarHandleToMethodHandle f : VarHandleToMethodHandle.values()) {\n-            cases.add(new MethodHandleAccessTestCase(\"Instance field\",\n-                                                     vhField, f, hs -> testInstanceField(this, hs)));\n-            cases.add(new MethodHandleAccessTestCase(\"Instance field unsupported\",\n-                                                     vhField, f, hs -> testInstanceFieldUnsupported(this, hs),\n-                                                     false));\n-\n-            cases.add(new MethodHandleAccessTestCase(\"Static field\",\n-                                                     vhStaticField, f, VarHandleTestMethodHandleAccessPoint::testStaticField));\n-            cases.add(new MethodHandleAccessTestCase(\"Static field unsupported\",\n-                                                     vhStaticField, f, VarHandleTestMethodHandleAccessPoint::testStaticFieldUnsupported,\n-                                                     false));\n-\n-            cases.add(new MethodHandleAccessTestCase(\"Array\",\n-                                                     vhArray, f, VarHandleTestMethodHandleAccessPoint::testArray));\n-            cases.add(new MethodHandleAccessTestCase(\"Array unsupported\",\n-                                                     vhArray, f, VarHandleTestMethodHandleAccessPoint::testArrayUnsupported,\n-                                                     false));\n-            cases.add(new MethodHandleAccessTestCase(\"Array index out of bounds\",\n-                                                     vhArray, f, VarHandleTestMethodHandleAccessPoint::testArrayIndexOutOfBounds,\n-                                                     false));\n-        }\n-\n-        \/\/ Work around issue with jtreg summary reporting which truncates\n-        \/\/ the String result of Object.toString to 30 characters, hence\n-        \/\/ the first dummy argument\n-        return cases.stream().map(tc -> new Object[]{tc.toString(), tc}).toArray(Object[][]::new);\n-    }\n-\n-    @Test(dataProvider = \"accessTestCaseProvider\")\n-    public <T> void testAccess(String desc, AccessTestCase<T> atc) throws Throwable {\n-        T t = atc.get();\n-        int iters = atc.requiresLoop() ? ITERS : 1;\n-        for (int c = 0; c < iters; c++) {\n-            atc.testAccess(t);\n-        }\n-    }\n-\n-\n-    static void testInstanceField(VarHandleTestMethodHandleAccessPoint recv, Handles hs) throws Throwable {\n-        \/\/ Plain\n-        {\n-            hs.get(TestAccessMode.SET).invokeExact(recv, Point.getInstance(1,1));\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"set Point value\");\n-        }\n-\n-\n-        \/\/ Volatile\n-        {\n-            hs.get(TestAccessMode.SET_VOLATILE).invokeExact(recv, Point.getInstance(2,2));\n-            Point x = (Point) hs.get(TestAccessMode.GET_VOLATILE).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"setVolatile Point value\");\n-        }\n-\n-        \/\/ Lazy\n-        {\n-            hs.get(TestAccessMode.SET_RELEASE).invokeExact(recv, Point.getInstance(1,1));\n-            Point x = (Point) hs.get(TestAccessMode.GET_ACQUIRE).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"setRelease Point value\");\n-        }\n-\n-        \/\/ Opaque\n-        {\n-            hs.get(TestAccessMode.SET_OPAQUE).invokeExact(recv, Point.getInstance(2,2));\n-            Point x = (Point) hs.get(TestAccessMode.GET_OPAQUE).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"setOpaque Point value\");\n-        }\n-\n-        hs.get(TestAccessMode.SET).invokeExact(recv, Point.getInstance(1,1));\n-\n-        \/\/ Compare\n-        {\n-            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n-            assertEquals(r, true, \"success compareAndSet Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"success compareAndSet Point value\");\n-        }\n-\n-        {\n-            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(r, false, \"failing compareAndSet Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"failing compareAndSet Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n-            assertEquals(r, Point.getInstance(2,2), \"success compareAndExchange Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"success compareAndExchange Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchange Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchange Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n-            assertEquals(r, Point.getInstance(1,1), \"success compareAndExchangeAcquire Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"success compareAndExchangeAcquire Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n-            assertEquals(r, Point.getInstance(2,2), \"success compareAndExchangeRelease Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"success compareAndExchangeRelease Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point value\");\n-        }\n-\n-        {\n-            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN);\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = (boolean) mh.invokeExact(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n-        }\n-\n-        {\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n-        }\n-\n-        {\n-            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE);\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = (boolean) mh.invokeExact(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n-        }\n-\n-        {\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n-        }\n-\n-        {\n-            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE);\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = (boolean) mh.invokeExact(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n-        }\n-\n-        {\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetRelease Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetRelease Point value\");\n-        }\n-\n-        {\n-            boolean success = false;\n-            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET);\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = (boolean) mh.invokeExact(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSet Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point\");\n-        }\n-\n-        {\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSet Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSet Point value\");\n-        }\n-\n-        \/\/ Compare set and get\n-        {\n-            Point o = (Point) hs.get(TestAccessMode.GET_AND_SET).invokeExact(recv, Point.getInstance(2,2));\n-            assertEquals(o, Point.getInstance(1,1), \"getAndSet Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n-            assertEquals(x, Point.getInstance(2,2), \"getAndSet Point value\");\n-        }\n-\n-\n-    }\n-\n-    static void testInstanceFieldUnsupported(VarHandleTestMethodHandleAccessPoint recv, Handles hs) throws Throwable {\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET_AND_ADD)) {\n-            checkUOE(am, () -> {\n-                Point r = (Point) hs.get(am).invokeExact(recv, Point.getInstance(1,1));\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET_AND_BITWISE)) {\n-            checkUOE(am, () -> {\n-                Point r = (Point) hs.get(am).invokeExact(recv, Point.getInstance(1,1));\n-            });\n-        }\n-    }\n-\n-\n-    static void testStaticField(Handles hs) throws Throwable {\n-        \/\/ Plain\n-        {\n-            hs.get(TestAccessMode.SET).invokeExact(Point.getInstance(1,1));\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(1,1), \"set Point value\");\n-        }\n-\n-\n-        \/\/ Volatile\n-        {\n-            hs.get(TestAccessMode.SET_VOLATILE).invokeExact(Point.getInstance(2,2));\n-            Point x = (Point) hs.get(TestAccessMode.GET_VOLATILE).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"setVolatile Point value\");\n-        }\n-\n-        \/\/ Lazy\n-        {\n-            hs.get(TestAccessMode.SET_RELEASE).invokeExact(Point.getInstance(1,1));\n-            Point x = (Point) hs.get(TestAccessMode.GET_ACQUIRE).invokeExact();\n-            assertEquals(x, Point.getInstance(1,1), \"setRelease Point value\");\n-        }\n-\n-        \/\/ Opaque\n-        {\n-            hs.get(TestAccessMode.SET_OPAQUE).invokeExact(Point.getInstance(2,2));\n-            Point x = (Point) hs.get(TestAccessMode.GET_OPAQUE).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"setOpaque Point value\");\n-        }\n-\n-        hs.get(TestAccessMode.SET).invokeExact(Point.getInstance(1,1));\n-\n-        \/\/ Compare\n-        {\n-            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(Point.getInstance(1,1), Point.getInstance(2,2));\n-            assertEquals(r, true, \"success compareAndSet Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"success compareAndSet Point value\");\n-        }\n-\n-        {\n-            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(r, false, \"failing compareAndSet Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"failing compareAndSet Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(Point.getInstance(2,2), Point.getInstance(1,1));\n-            assertEquals(r, Point.getInstance(2,2), \"success compareAndExchange Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(1,1), \"success compareAndExchange Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchange Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchange Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(Point.getInstance(1,1), Point.getInstance(2,2));\n-            assertEquals(r, Point.getInstance(1,1), \"success compareAndExchangeAcquire Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"success compareAndExchangeAcquire Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(Point.getInstance(2,2), Point.getInstance(1,1));\n-            assertEquals(r, Point.getInstance(2,2), \"success compareAndExchangeRelease Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(1,1), \"success compareAndExchangeRelease Point value\");\n-        }\n-\n-        {\n-            Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point value\");\n-        }\n-\n-        {\n-            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN);\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = (boolean) mh.invokeExact(Point.getInstance(1,1), Point.getInstance(2,2));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n-        }\n-\n-        {\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n-        }\n-\n-        {\n-            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE);\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = (boolean) mh.invokeExact(Point.getInstance(2,2), Point.getInstance(1,1));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n-        }\n-\n-        {\n-            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE);\n-            boolean success = (boolean) mh.invokeExact(Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n-        }\n-\n-        {\n-            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE);\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = (boolean) mh.invokeExact(Point.getInstance(1,1), Point.getInstance(2,2));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n-        }\n-\n-        {\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(Point.getInstance(1,1), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSetRelease Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetRelease Point value\");\n-        }\n-\n-        {\n-            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET);\n-            boolean success = false;\n-            for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                success = (boolean) mh.invokeExact(Point.getInstance(2,2), Point.getInstance(1,1));\n-                if (!success) weakDelay();\n-            }\n-            assertEquals(success, true, \"success weakCompareAndSet Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point\");\n-        }\n-\n-        {\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(Point.getInstance(2,2), Point.getInstance(3,3));\n-            assertEquals(success, false, \"failing weakCompareAndSet Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetRe Point value\");\n-        }\n-\n-        \/\/ Compare set and get\n-        {\n-            hs.get(TestAccessMode.SET).invokeExact(Point.getInstance(1,1));\n-\n-            Point o = (Point) hs.get(TestAccessMode.GET_AND_SET).invokeExact(Point.getInstance(2,2));\n-            assertEquals(o, Point.getInstance(1,1), \"getAndSet Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"getAndSet Point value\");\n-        }\n-\n-        \/\/ Compare set and get\n-        {\n-            hs.get(TestAccessMode.SET).invokeExact(Point.getInstance(1,1));\n-\n-            Point o = (Point) hs.get(TestAccessMode.GET_AND_SET_ACQUIRE).invokeExact(Point.getInstance(2,2));\n-            assertEquals(o, Point.getInstance(1,1), \"getAndSetAcquire Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"getAndSetAcquire Point value\");\n-        }\n-\n-        \/\/ Compare set and get\n-        {\n-            hs.get(TestAccessMode.SET).invokeExact(Point.getInstance(1,1));\n-\n-            Point o = (Point) hs.get(TestAccessMode.GET_AND_SET_RELEASE).invokeExact(Point.getInstance(2,2));\n-            assertEquals(o, Point.getInstance(1,1), \"getAndSetRelease Point\");\n-            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n-            assertEquals(x, Point.getInstance(2,2), \"getAndSetRelease Point value\");\n-        }\n-\n-\n-    }\n-\n-    static void testStaticFieldUnsupported(Handles hs) throws Throwable {\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET_AND_ADD)) {\n-            checkUOE(am, () -> {\n-                Point r = (Point) hs.get(am).invokeExact(Point.getInstance(1,1));\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET_AND_BITWISE)) {\n-            checkUOE(am, () -> {\n-                Point r = (Point) hs.get(am).invokeExact(Point.getInstance(1,1));\n-            });\n-        }\n-    }\n-\n-\n-    static void testArray(Handles hs) throws Throwable {\n-        Point[] array = new Point[10];\n-\n-        for (int i = 0; i < array.length; i++) {\n-            \/\/ Plain\n-            {\n-                hs.get(TestAccessMode.SET).invokeExact(array, i, Point.getInstance(1,1));\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"get Point value\");\n-            }\n-\n-\n-            \/\/ Volatile\n-            {\n-                hs.get(TestAccessMode.SET_VOLATILE).invokeExact(array, i, Point.getInstance(2,2));\n-                Point x = (Point) hs.get(TestAccessMode.GET_VOLATILE).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"setVolatile Point value\");\n-            }\n-\n-            \/\/ Lazy\n-            {\n-                hs.get(TestAccessMode.SET_RELEASE).invokeExact(array, i, Point.getInstance(1,1));\n-                Point x = (Point) hs.get(TestAccessMode.GET_ACQUIRE).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"setRelease Point value\");\n-            }\n-\n-            \/\/ Opaque\n-            {\n-                hs.get(TestAccessMode.SET_OPAQUE).invokeExact(array, i, Point.getInstance(2,2));\n-                Point x = (Point) hs.get(TestAccessMode.GET_OPAQUE).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"setOpaque Point value\");\n-            }\n-\n-            hs.get(TestAccessMode.SET).invokeExact(array, i, Point.getInstance(1,1));\n-\n-            \/\/ Compare\n-            {\n-                boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n-                assertEquals(r, true, \"success compareAndSet Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"success compareAndSet Point value\");\n-            }\n-\n-            {\n-                boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n-                assertEquals(r, false, \"failing compareAndSet Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"failing compareAndSet Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n-                assertEquals(r, Point.getInstance(2,2), \"success compareAndExchange Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"success compareAndExchange Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n-                assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchange Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchange Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n-                assertEquals(r, Point.getInstance(1,1), \"success compareAndExchangeAcquire Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"success compareAndExchangeAcquire Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n-                assertEquals(r, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"failing compareAndExchangeAcquire Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n-                assertEquals(r, Point.getInstance(2,2), \"success compareAndExchangeRelease Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"success compareAndExchangeRelease Point value\");\n-            }\n-\n-            {\n-                Point r = (Point) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n-                assertEquals(r, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"failing compareAndExchangeRelease Point value\");\n-            }\n-\n-            {\n-                MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN);\n-                boolean success = false;\n-                for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                    success = (boolean) mh.invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n-                    if (!success) weakDelay();\n-                }\n-                assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n-            }\n-\n-            {\n-                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n-                assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n-            }\n-\n-            {\n-                MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE);\n-                boolean success = false;\n-                for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                    success = (boolean) mh.invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n-                    if (!success) weakDelay();\n-                }\n-                assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n-            }\n-\n-            {\n-                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n-                assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n-            }\n-\n-            {\n-                MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE);\n-                boolean success = false;\n-                for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                    success = (boolean) mh.invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n-                    if (!success) weakDelay();\n-                }\n-                assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n-            }\n-\n-            {\n-                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n-                assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetAcquire Point value\");\n-            }\n-\n-            {\n-                MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET);\n-                boolean success = false;\n-                for (int c = 0; c < WEAK_ATTEMPTS && !success; c++) {\n-                    success = (boolean) mh.invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n-                    if (!success) weakDelay();\n-                }\n-                assertEquals(success, true, \"success weakCompareAndSet Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point\");\n-            }\n-\n-            {\n-                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n-                assertEquals(success, false, \"failing weakCompareAndSet Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSet Point value\");\n-            }\n-\n-            \/\/ Compare set and get\n-            {\n-                hs.get(TestAccessMode.SET).invokeExact(array, i, Point.getInstance(1,1));\n-\n-                Point o = (Point) hs.get(TestAccessMode.GET_AND_SET).invokeExact(array, i, Point.getInstance(2,2));\n-                assertEquals(o, Point.getInstance(1,1), \"getAndSet Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"getAndSet Point value\");\n-            }\n-\n-            {\n-                hs.get(TestAccessMode.SET).invokeExact(array, i, Point.getInstance(1,1));\n-\n-                Point o = (Point) hs.get(TestAccessMode.GET_AND_SET_ACQUIRE).invokeExact(array, i, Point.getInstance(2,2));\n-                assertEquals(o, Point.getInstance(1,1), \"getAndSetAcquire Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"getAndSetAcquire Point value\");\n-            }\n-\n-            {\n-                hs.get(TestAccessMode.SET).invokeExact(array, i, Point.getInstance(1,1));\n-\n-                Point o = (Point) hs.get(TestAccessMode.GET_AND_SET_RELEASE).invokeExact(array, i, Point.getInstance(2,2));\n-                assertEquals(o, Point.getInstance(1,1), \"getAndSetRelease Point\");\n-                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n-                assertEquals(x, Point.getInstance(2,2), \"getAndSetRelease Point value\");\n-            }\n-\n-\n-        }\n-    }\n-\n-    static void testArrayUnsupported(Handles hs) throws Throwable {\n-        Point[] array = new Point[10];\n-\n-        final int i = 0;\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET_AND_ADD)) {\n-            checkUOE(am, () -> {\n-                Point o = (Point) hs.get(am).invokeExact(array, i, Point.getInstance(1,1));\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET_AND_BITWISE)) {\n-            checkUOE(am, () -> {\n-                Point o = (Point) hs.get(am).invokeExact(array, i, Point.getInstance(1,1));\n-            });\n-        }\n-    }\n-\n-    static void testArrayIndexOutOfBounds(Handles hs) throws Throwable {\n-        Point[] array = new Point[10];\n-\n-        for (int i : new int[]{-1, Integer.MIN_VALUE, 10, 11, Integer.MAX_VALUE}) {\n-            final int ci = i;\n-\n-            for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET)) {\n-                checkAIOOBE(am, () -> {\n-                    Point x = (Point) hs.get(am).invokeExact(array, ci);\n-                });\n-            }\n-\n-            for (TestAccessMode am : testAccessModesOfType(TestAccessType.SET)) {\n-                checkAIOOBE(am, () -> {\n-                    hs.get(am).invokeExact(array, ci, Point.getInstance(1,1));\n-                });\n-            }\n-\n-            for (TestAccessMode am : testAccessModesOfType(TestAccessType.COMPARE_AND_SET)) {\n-                checkAIOOBE(am, () -> {\n-                    boolean r = (boolean) hs.get(am).invokeExact(array, ci, Point.getInstance(1,1), Point.getInstance(2,2));\n-                });\n-            }\n-\n-            for (TestAccessMode am : testAccessModesOfType(TestAccessType.COMPARE_AND_EXCHANGE)) {\n-                checkAIOOBE(am, () -> {\n-                    Point r = (Point) hs.get(am).invokeExact(array, ci, Point.getInstance(2,2), Point.getInstance(1,1));\n-                });\n-            }\n-\n-            for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET_AND_SET)) {\n-                checkAIOOBE(am, () -> {\n-                    Point o = (Point) hs.get(am).invokeExact(array, ci, Point.getInstance(1,1));\n-                });\n-            }\n-\n-\n-        }\n-    }\n-}\n-\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessPoint.java","additions":0,"deletions":793,"binary":false,"changes":793,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    static final Class<?> type = short.class;\n-\n@@ -51,1 +49,1 @@\n-    static short static_v = (short)0x0123;\n+    static short static_v;\n@@ -70,1 +68,1 @@\n-                VarHandleTestMethodHandleAccessShort.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccessShort.class, \"final_v\", short.class);\n@@ -73,1 +71,1 @@\n-                VarHandleTestMethodHandleAccessShort.class, \"v\", type);\n+                VarHandleTestMethodHandleAccessShort.class, \"v\", short.class);\n@@ -76,1 +74,1 @@\n-            VarHandleTestMethodHandleAccessShort.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccessShort.class, \"static_final_v\", short.class);\n@@ -79,1 +77,1 @@\n-            VarHandleTestMethodHandleAccessShort.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccessShort.class, \"static_v\", short.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessShort.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    static final Class<?> type = String.class;\n-\n@@ -51,1 +49,1 @@\n-    static String static_v = \"foo\";\n+    static String static_v;\n@@ -70,1 +68,1 @@\n-                VarHandleTestMethodHandleAccessString.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccessString.class, \"final_v\", String.class);\n@@ -73,1 +71,1 @@\n-                VarHandleTestMethodHandleAccessString.class, \"v\", type);\n+                VarHandleTestMethodHandleAccessString.class, \"v\", String.class);\n@@ -76,1 +74,1 @@\n-            VarHandleTestMethodHandleAccessString.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccessString.class, \"static_final_v\", String.class);\n@@ -79,1 +77,1 @@\n-            VarHandleTestMethodHandleAccessString.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccessString.class, \"static_v\", String.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessString.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,4 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodHandleAccessValue.java\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=2000 VarHandleTestMethodHandleAccessValue\n+ * @modules java.base\/jdk.internal.vm.annotation\n+ * @comment Set CompileThresholdScaling to 0.1 so that the warmup loop sets to 2000 iterations\n+ *          to hit compilation thresholds\n+ * @run testng\/othervm -Diters=2000 -XX:CompileThresholdScaling=0.1 VarHandleTestMethodHandleAccessValue\n@@ -46,1 +48,1 @@\n-    static final Class<?> type = Value.class;\n+    static final Value static_final_v = Value.getInstance(10);\n@@ -48,1 +50,1 @@\n-    static final Value static_final_v = Value.getInstance(Point.getInstance(1,1));\n+    static Value static_v;\n@@ -50,3 +52,1 @@\n-    static Value static_v = Value.getInstance(Point.getInstance(1,1));\n-\n-    final Value final_v = Value.getInstance(Point.getInstance(1,1));\n+    final Value final_v = Value.getInstance(10);\n@@ -69,1 +69,1 @@\n-                VarHandleTestMethodHandleAccessValue.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccessValue.class, \"final_v\", Value.class);\n@@ -72,1 +72,1 @@\n-                VarHandleTestMethodHandleAccessValue.class, \"v\", type);\n+                VarHandleTestMethodHandleAccessValue.class, \"v\", Value.class);\n@@ -75,1 +75,1 @@\n-            VarHandleTestMethodHandleAccessValue.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccessValue.class, \"static_final_v\", Value.class);\n@@ -78,1 +78,1 @@\n-            VarHandleTestMethodHandleAccessValue.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccessValue.class, \"static_v\", Value.class);\n@@ -130,1 +130,1 @@\n-            hs.get(TestAccessMode.SET).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)));\n+            hs.get(TestAccessMode.SET).invokeExact(recv, Value.getInstance(10));\n@@ -132,1 +132,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"set Value value\");\n+            assertEquals(x, Value.getInstance(10), \"set Value value\");\n@@ -138,1 +138,1 @@\n-            hs.get(TestAccessMode.SET_VOLATILE).invokeExact(recv, Value.getInstance(Point.getInstance(2,2)));\n+            hs.get(TestAccessMode.SET_VOLATILE).invokeExact(recv, Value.getInstance(20));\n@@ -140,1 +140,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setVolatile Value value\");\n+            assertEquals(x, Value.getInstance(20), \"setVolatile Value value\");\n@@ -145,1 +145,1 @@\n-            hs.get(TestAccessMode.SET_RELEASE).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)));\n+            hs.get(TestAccessMode.SET_RELEASE).invokeExact(recv, Value.getInstance(10));\n@@ -147,1 +147,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"setRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"setRelease Value value\");\n@@ -152,1 +152,1 @@\n-            hs.get(TestAccessMode.SET_OPAQUE).invokeExact(recv, Value.getInstance(Point.getInstance(2,2)));\n+            hs.get(TestAccessMode.SET_OPAQUE).invokeExact(recv, Value.getInstance(20));\n@@ -154,1 +154,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setOpaque Value value\");\n+            assertEquals(x, Value.getInstance(20), \"setOpaque Value value\");\n@@ -157,1 +157,1 @@\n-        hs.get(TestAccessMode.SET).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)));\n+        hs.get(TestAccessMode.SET).invokeExact(recv, Value.getInstance(10));\n@@ -161,1 +161,1 @@\n-            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(recv, Value.getInstance(10), Value.getInstance(20));\n@@ -164,1 +164,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success compareAndSet Value value\");\n@@ -168,1 +168,1 @@\n-            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(recv, Value.getInstance(10), Value.getInstance(30));\n@@ -171,1 +171,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing compareAndSet Value value\");\n@@ -175,2 +175,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchange Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(recv, Value.getInstance(20), Value.getInstance(10));\n+            assertEquals(r, Value.getInstance(20), \"success compareAndExchange Value\");\n@@ -178,1 +178,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchange Value value\");\n+            assertEquals(x, Value.getInstance(10), \"success compareAndExchange Value value\");\n@@ -182,2 +182,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(recv, Value.getInstance(20), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(10), \"failing compareAndExchange Value\");\n@@ -185,1 +185,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing compareAndExchange Value value\");\n@@ -189,2 +189,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeAcquire Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(recv, Value.getInstance(10), Value.getInstance(20));\n+            assertEquals(r, Value.getInstance(10), \"success compareAndExchangeAcquire Value\");\n@@ -192,1 +192,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success compareAndExchangeAcquire Value value\");\n@@ -196,2 +196,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(recv, Value.getInstance(10), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(20), \"failing compareAndExchangeAcquire Value\");\n@@ -199,1 +199,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing compareAndExchangeAcquire Value value\");\n@@ -203,2 +203,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeRelease Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(recv, Value.getInstance(20), Value.getInstance(10));\n+            assertEquals(r, Value.getInstance(20), \"success compareAndExchangeRelease Value\");\n@@ -206,1 +206,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"success compareAndExchangeRelease Value value\");\n@@ -210,2 +210,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(recv, Value.getInstance(20), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(10), \"failing compareAndExchangeRelease Value\");\n@@ -213,1 +213,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing compareAndExchangeRelease Value value\");\n@@ -220,1 +220,1 @@\n-                success = (boolean) mh.invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                success = (boolean) mh.invokeExact(recv, Value.getInstance(10), Value.getInstance(20));\n@@ -225,1 +225,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetPlain Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetPlain Value value\");\n@@ -229,1 +229,1 @@\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(recv, Value.getInstance(10), Value.getInstance(30));\n@@ -232,1 +232,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetPlain Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetPlain Value value\");\n@@ -239,1 +239,1 @@\n-                success = (boolean) mh.invokeExact(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                success = (boolean) mh.invokeExact(recv, Value.getInstance(20), Value.getInstance(10));\n@@ -244,1 +244,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSetAcquire Value\");\n+            assertEquals(x, Value.getInstance(10), \"success weakCompareAndSetAcquire Value\");\n@@ -248,1 +248,1 @@\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(recv, Value.getInstance(20), Value.getInstance(30));\n@@ -251,1 +251,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSetAcquire Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSetAcquire Value value\");\n@@ -258,1 +258,1 @@\n-                success = (boolean) mh.invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                success = (boolean) mh.invokeExact(recv, Value.getInstance(10), Value.getInstance(20));\n@@ -263,1 +263,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetRelease Value\");\n+            assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetRelease Value\");\n@@ -267,1 +267,1 @@\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(recv, Value.getInstance(10), Value.getInstance(30));\n@@ -270,1 +270,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetRelease Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetRelease Value value\");\n@@ -277,1 +277,1 @@\n-                success = (boolean) mh.invokeExact(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                success = (boolean) mh.invokeExact(recv, Value.getInstance(20), Value.getInstance(10));\n@@ -282,1 +282,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSet Value\");\n+            assertEquals(x, Value.getInstance(10), \"success weakCompareAndSet Value\");\n@@ -286,1 +286,1 @@\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(recv, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(recv, Value.getInstance(20), Value.getInstance(30));\n@@ -289,1 +289,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSet Value value\");\n@@ -294,2 +294,2 @@\n-            Value o = (Value) hs.get(TestAccessMode.GET_AND_SET).invokeExact(recv, Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSet Value\");\n+            Value o = (Value) hs.get(TestAccessMode.GET_AND_SET).invokeExact(recv, Value.getInstance(20));\n+            assertEquals(o, Value.getInstance(10), \"getAndSet Value\");\n@@ -297,1 +297,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"getAndSet Value value\");\n@@ -307,1 +307,1 @@\n-                Value r = (Value) hs.get(am).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)));\n+                Value r = (Value) hs.get(am).invokeExact(recv, Value.getInstance(10));\n@@ -313,1 +313,1 @@\n-                Value r = (Value) hs.get(am).invokeExact(recv, Value.getInstance(Point.getInstance(1,1)));\n+                Value r = (Value) hs.get(am).invokeExact(recv, Value.getInstance(10));\n@@ -322,1 +322,1 @@\n-            hs.get(TestAccessMode.SET).invokeExact(Value.getInstance(Point.getInstance(1,1)));\n+            hs.get(TestAccessMode.SET).invokeExact(Value.getInstance(10));\n@@ -324,1 +324,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"set Value value\");\n+            assertEquals(x, Value.getInstance(10), \"set Value value\");\n@@ -330,1 +330,1 @@\n-            hs.get(TestAccessMode.SET_VOLATILE).invokeExact(Value.getInstance(Point.getInstance(2,2)));\n+            hs.get(TestAccessMode.SET_VOLATILE).invokeExact(Value.getInstance(20));\n@@ -332,1 +332,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setVolatile Value value\");\n+            assertEquals(x, Value.getInstance(20), \"setVolatile Value value\");\n@@ -337,1 +337,1 @@\n-            hs.get(TestAccessMode.SET_RELEASE).invokeExact(Value.getInstance(Point.getInstance(1,1)));\n+            hs.get(TestAccessMode.SET_RELEASE).invokeExact(Value.getInstance(10));\n@@ -339,1 +339,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"setRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"setRelease Value value\");\n@@ -344,1 +344,1 @@\n-            hs.get(TestAccessMode.SET_OPAQUE).invokeExact(Value.getInstance(Point.getInstance(2,2)));\n+            hs.get(TestAccessMode.SET_OPAQUE).invokeExact(Value.getInstance(20));\n@@ -346,1 +346,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setOpaque Value value\");\n+            assertEquals(x, Value.getInstance(20), \"setOpaque Value value\");\n@@ -349,1 +349,1 @@\n-        hs.get(TestAccessMode.SET).invokeExact(Value.getInstance(Point.getInstance(1,1)));\n+        hs.get(TestAccessMode.SET).invokeExact(Value.getInstance(10));\n@@ -353,1 +353,1 @@\n-            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(Value.getInstance(10), Value.getInstance(20));\n@@ -356,1 +356,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success compareAndSet Value value\");\n@@ -360,1 +360,1 @@\n-            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(Value.getInstance(10), Value.getInstance(30));\n@@ -363,1 +363,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing compareAndSet Value value\");\n@@ -367,2 +367,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchange Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(Value.getInstance(20), Value.getInstance(10));\n+            assertEquals(r, Value.getInstance(20), \"success compareAndExchange Value\");\n@@ -370,1 +370,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchange Value value\");\n+            assertEquals(x, Value.getInstance(10), \"success compareAndExchange Value value\");\n@@ -374,2 +374,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(Value.getInstance(20), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(10), \"failing compareAndExchange Value\");\n@@ -377,1 +377,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing compareAndExchange Value value\");\n@@ -381,2 +381,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeAcquire Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(Value.getInstance(10), Value.getInstance(20));\n+            assertEquals(r, Value.getInstance(10), \"success compareAndExchangeAcquire Value\");\n@@ -384,1 +384,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success compareAndExchangeAcquire Value value\");\n@@ -388,2 +388,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(Value.getInstance(10), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(20), \"failing compareAndExchangeAcquire Value\");\n@@ -391,1 +391,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing compareAndExchangeAcquire Value value\");\n@@ -395,2 +395,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeRelease Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(Value.getInstance(20), Value.getInstance(10));\n+            assertEquals(r, Value.getInstance(20), \"success compareAndExchangeRelease Value\");\n@@ -398,1 +398,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"success compareAndExchangeRelease Value value\");\n@@ -402,2 +402,2 @@\n-            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-            assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value\");\n+            Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(Value.getInstance(20), Value.getInstance(30));\n+            assertEquals(r, Value.getInstance(10), \"failing compareAndExchangeRelease Value\");\n@@ -405,1 +405,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing compareAndExchangeRelease Value value\");\n@@ -412,1 +412,1 @@\n-                success = (boolean) mh.invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                success = (boolean) mh.invokeExact(Value.getInstance(10), Value.getInstance(20));\n@@ -417,1 +417,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetPlain Value value\");\n+            assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetPlain Value value\");\n@@ -421,1 +421,1 @@\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(Value.getInstance(10), Value.getInstance(30));\n@@ -424,1 +424,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetPlain Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetPlain Value value\");\n@@ -431,1 +431,1 @@\n-                success = (boolean) mh.invokeExact(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                success = (boolean) mh.invokeExact(Value.getInstance(20), Value.getInstance(10));\n@@ -436,1 +436,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSetAcquire Value\");\n+            assertEquals(x, Value.getInstance(10), \"success weakCompareAndSetAcquire Value\");\n@@ -441,1 +441,1 @@\n-            boolean success = (boolean) mh.invokeExact(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = (boolean) mh.invokeExact(Value.getInstance(20), Value.getInstance(30));\n@@ -444,1 +444,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSetAcquire Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSetAcquire Value value\");\n@@ -451,1 +451,1 @@\n-                success = (boolean) mh.invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                success = (boolean) mh.invokeExact(Value.getInstance(10), Value.getInstance(20));\n@@ -456,1 +456,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetRelease Value\");\n+            assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetRelease Value\");\n@@ -460,1 +460,1 @@\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(Value.getInstance(10), Value.getInstance(30));\n@@ -463,1 +463,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetRelease Value value\");\n+            assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetRelease Value value\");\n@@ -470,1 +470,1 @@\n-                success = (boolean) mh.invokeExact(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                success = (boolean) mh.invokeExact(Value.getInstance(20), Value.getInstance(10));\n@@ -475,1 +475,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSet Value\");\n+            assertEquals(x, Value.getInstance(10), \"success weakCompareAndSet Value\");\n@@ -479,1 +479,1 @@\n-            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(Value.getInstance(20), Value.getInstance(30));\n@@ -482,1 +482,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSetRe Value value\");\n+            assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSetRe Value value\");\n@@ -487,1 +487,1 @@\n-            hs.get(TestAccessMode.SET).invokeExact(Value.getInstance(Point.getInstance(1,1)));\n+            hs.get(TestAccessMode.SET).invokeExact(Value.getInstance(10));\n@@ -489,2 +489,2 @@\n-            Value o = (Value) hs.get(TestAccessMode.GET_AND_SET).invokeExact(Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSet Value\");\n+            Value o = (Value) hs.get(TestAccessMode.GET_AND_SET).invokeExact(Value.getInstance(20));\n+            assertEquals(o, Value.getInstance(10), \"getAndSet Value\");\n@@ -492,1 +492,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSet Value value\");\n+            assertEquals(x, Value.getInstance(20), \"getAndSet Value value\");\n@@ -497,1 +497,1 @@\n-            hs.get(TestAccessMode.SET).invokeExact(Value.getInstance(Point.getInstance(1,1)));\n+            hs.get(TestAccessMode.SET).invokeExact(Value.getInstance(10));\n@@ -499,2 +499,2 @@\n-            Value o = (Value) hs.get(TestAccessMode.GET_AND_SET_ACQUIRE).invokeExact(Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSetAcquire Value\");\n+            Value o = (Value) hs.get(TestAccessMode.GET_AND_SET_ACQUIRE).invokeExact(Value.getInstance(20));\n+            assertEquals(o, Value.getInstance(10), \"getAndSetAcquire Value\");\n@@ -502,1 +502,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSetAcquire Value value\");\n+            assertEquals(x, Value.getInstance(20), \"getAndSetAcquire Value value\");\n@@ -507,1 +507,1 @@\n-            hs.get(TestAccessMode.SET).invokeExact(Value.getInstance(Point.getInstance(1,1)));\n+            hs.get(TestAccessMode.SET).invokeExact(Value.getInstance(10));\n@@ -509,2 +509,2 @@\n-            Value o = (Value) hs.get(TestAccessMode.GET_AND_SET_RELEASE).invokeExact(Value.getInstance(Point.getInstance(2,2)));\n-            assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSetRelease Value\");\n+            Value o = (Value) hs.get(TestAccessMode.GET_AND_SET_RELEASE).invokeExact(Value.getInstance(20));\n+            assertEquals(o, Value.getInstance(10), \"getAndSetRelease Value\");\n@@ -512,1 +512,1 @@\n-            assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSetRelease Value value\");\n+            assertEquals(x, Value.getInstance(20), \"getAndSetRelease Value value\");\n@@ -522,1 +522,1 @@\n-                Value r = (Value) hs.get(am).invokeExact(Value.getInstance(Point.getInstance(1,1)));\n+                Value r = (Value) hs.get(am).invokeExact(Value.getInstance(10));\n@@ -528,1 +528,1 @@\n-                Value r = (Value) hs.get(am).invokeExact(Value.getInstance(Point.getInstance(1,1)));\n+                Value r = (Value) hs.get(am).invokeExact(Value.getInstance(10));\n@@ -540,1 +540,1 @@\n-                hs.get(TestAccessMode.SET).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(TestAccessMode.SET).invokeExact(array, i, Value.getInstance(10));\n@@ -542,1 +542,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"get Value value\");\n+                assertEquals(x, Value.getInstance(10), \"get Value value\");\n@@ -548,1 +548,1 @@\n-                hs.get(TestAccessMode.SET_VOLATILE).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)));\n+                hs.get(TestAccessMode.SET_VOLATILE).invokeExact(array, i, Value.getInstance(20));\n@@ -550,1 +550,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setVolatile Value value\");\n+                assertEquals(x, Value.getInstance(20), \"setVolatile Value value\");\n@@ -555,1 +555,1 @@\n-                hs.get(TestAccessMode.SET_RELEASE).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(TestAccessMode.SET_RELEASE).invokeExact(array, i, Value.getInstance(10));\n@@ -557,1 +557,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"setRelease Value value\");\n+                assertEquals(x, Value.getInstance(10), \"setRelease Value value\");\n@@ -562,1 +562,1 @@\n-                hs.get(TestAccessMode.SET_OPAQUE).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)));\n+                hs.get(TestAccessMode.SET_OPAQUE).invokeExact(array, i, Value.getInstance(20));\n@@ -564,1 +564,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"setOpaque Value value\");\n+                assertEquals(x, Value.getInstance(20), \"setOpaque Value value\");\n@@ -567,1 +567,1 @@\n-            hs.get(TestAccessMode.SET).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)));\n+            hs.get(TestAccessMode.SET).invokeExact(array, i, Value.getInstance(10));\n@@ -571,1 +571,1 @@\n-                boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(array, i, Value.getInstance(10), Value.getInstance(20));\n@@ -574,1 +574,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndSet Value value\");\n+                assertEquals(x, Value.getInstance(20), \"success compareAndSet Value value\");\n@@ -578,1 +578,1 @@\n-                boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+                boolean r = (boolean) hs.get(TestAccessMode.COMPARE_AND_SET).invokeExact(array, i, Value.getInstance(10), Value.getInstance(30));\n@@ -581,1 +581,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndSet Value value\");\n+                assertEquals(x, Value.getInstance(20), \"failing compareAndSet Value value\");\n@@ -585,2 +585,2 @@\n-                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchange Value\");\n+                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(array, i, Value.getInstance(20), Value.getInstance(10));\n+                assertEquals(r, Value.getInstance(20), \"success compareAndExchange Value\");\n@@ -588,1 +588,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchange Value value\");\n+                assertEquals(x, Value.getInstance(10), \"success compareAndExchange Value value\");\n@@ -592,2 +592,2 @@\n-                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value\");\n+                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE).invokeExact(array, i, Value.getInstance(20), Value.getInstance(30));\n+                assertEquals(r, Value.getInstance(10), \"failing compareAndExchange Value\");\n@@ -595,1 +595,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchange Value value\");\n+                assertEquals(x, Value.getInstance(10), \"failing compareAndExchange Value value\");\n@@ -599,2 +599,2 @@\n-                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeAcquire Value\");\n+                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(array, i, Value.getInstance(10), Value.getInstance(20));\n+                assertEquals(r, Value.getInstance(10), \"success compareAndExchangeAcquire Value\");\n@@ -602,1 +602,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeAcquire Value value\");\n+                assertEquals(x, Value.getInstance(20), \"success compareAndExchangeAcquire Value value\");\n@@ -606,2 +606,2 @@\n-                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value\");\n+                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_ACQUIRE).invokeExact(array, i, Value.getInstance(10), Value.getInstance(30));\n+                assertEquals(r, Value.getInstance(20), \"failing compareAndExchangeAcquire Value\");\n@@ -609,1 +609,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing compareAndExchangeAcquire Value value\");\n+                assertEquals(x, Value.getInstance(20), \"failing compareAndExchangeAcquire Value value\");\n@@ -613,2 +613,2 @@\n-                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(2,2)), \"success compareAndExchangeRelease Value\");\n+                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(array, i, Value.getInstance(20), Value.getInstance(10));\n+                assertEquals(r, Value.getInstance(20), \"success compareAndExchangeRelease Value\");\n@@ -616,1 +616,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success compareAndExchangeRelease Value value\");\n+                assertEquals(x, Value.getInstance(10), \"success compareAndExchangeRelease Value value\");\n@@ -620,2 +620,2 @@\n-                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n-                assertEquals(r, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value\");\n+                Value r = (Value) hs.get(TestAccessMode.COMPARE_AND_EXCHANGE_RELEASE).invokeExact(array, i, Value.getInstance(20), Value.getInstance(30));\n+                assertEquals(r, Value.getInstance(10), \"failing compareAndExchangeRelease Value\");\n@@ -623,1 +623,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing compareAndExchangeRelease Value value\");\n+                assertEquals(x, Value.getInstance(10), \"failing compareAndExchangeRelease Value value\");\n@@ -630,1 +630,1 @@\n-                    success = (boolean) mh.invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                    success = (boolean) mh.invokeExact(array, i, Value.getInstance(10), Value.getInstance(20));\n@@ -635,1 +635,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetPlain Value value\");\n+                assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetPlain Value value\");\n@@ -639,1 +639,1 @@\n-                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(array, i, Value.getInstance(10), Value.getInstance(30));\n@@ -642,1 +642,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetPlain Value value\");\n+                assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetPlain Value value\");\n@@ -649,1 +649,1 @@\n-                    success = (boolean) mh.invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                    success = (boolean) mh.invokeExact(array, i, Value.getInstance(20), Value.getInstance(10));\n@@ -654,1 +654,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSetAcquire Value\");\n+                assertEquals(x, Value.getInstance(10), \"success weakCompareAndSetAcquire Value\");\n@@ -658,1 +658,1 @@\n-                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(array, i, Value.getInstance(20), Value.getInstance(30));\n@@ -661,1 +661,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSetAcquire Value value\");\n+                assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSetAcquire Value value\");\n@@ -668,1 +668,1 @@\n-                    success = (boolean) mh.invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                    success = (boolean) mh.invokeExact(array, i, Value.getInstance(10), Value.getInstance(20));\n@@ -673,1 +673,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"success weakCompareAndSetRelease Value\");\n+                assertEquals(x, Value.getInstance(20), \"success weakCompareAndSetRelease Value\");\n@@ -677,1 +677,1 @@\n-                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(3,3)));\n+                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(array, i, Value.getInstance(10), Value.getInstance(30));\n@@ -680,1 +680,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"failing weakCompareAndSetAcquire Value value\");\n+                assertEquals(x, Value.getInstance(20), \"failing weakCompareAndSetAcquire Value value\");\n@@ -687,1 +687,1 @@\n-                    success = (boolean) mh.invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                    success = (boolean) mh.invokeExact(array, i, Value.getInstance(20), Value.getInstance(10));\n@@ -692,1 +692,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"success weakCompareAndSet Value\");\n+                assertEquals(x, Value.getInstance(10), \"success weakCompareAndSet Value\");\n@@ -696,1 +696,1 @@\n-                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(3,3)));\n+                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(array, i, Value.getInstance(20), Value.getInstance(30));\n@@ -699,1 +699,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(1,1)), \"failing weakCompareAndSet Value value\");\n+                assertEquals(x, Value.getInstance(10), \"failing weakCompareAndSet Value value\");\n@@ -704,1 +704,1 @@\n-                hs.get(TestAccessMode.SET).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(TestAccessMode.SET).invokeExact(array, i, Value.getInstance(10));\n@@ -706,2 +706,2 @@\n-                Value o = (Value) hs.get(TestAccessMode.GET_AND_SET).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)));\n-                assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSet Value\");\n+                Value o = (Value) hs.get(TestAccessMode.GET_AND_SET).invokeExact(array, i, Value.getInstance(20));\n+                assertEquals(o, Value.getInstance(10), \"getAndSet Value\");\n@@ -709,1 +709,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSet Value value\");\n+                assertEquals(x, Value.getInstance(20), \"getAndSet Value value\");\n@@ -713,1 +713,1 @@\n-                hs.get(TestAccessMode.SET).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(TestAccessMode.SET).invokeExact(array, i, Value.getInstance(10));\n@@ -715,2 +715,2 @@\n-                Value o = (Value) hs.get(TestAccessMode.GET_AND_SET_ACQUIRE).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)));\n-                assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSetAcquire Value\");\n+                Value o = (Value) hs.get(TestAccessMode.GET_AND_SET_ACQUIRE).invokeExact(array, i, Value.getInstance(20));\n+                assertEquals(o, Value.getInstance(10), \"getAndSetAcquire Value\");\n@@ -718,1 +718,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSetAcquire Value value\");\n+                assertEquals(x, Value.getInstance(20), \"getAndSetAcquire Value value\");\n@@ -722,1 +722,1 @@\n-                hs.get(TestAccessMode.SET).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(TestAccessMode.SET).invokeExact(array, i, Value.getInstance(10));\n@@ -724,2 +724,2 @@\n-                Value o = (Value) hs.get(TestAccessMode.GET_AND_SET_RELEASE).invokeExact(array, i, Value.getInstance(Point.getInstance(2,2)));\n-                assertEquals(o, Value.getInstance(Point.getInstance(1,1)), \"getAndSetRelease Value\");\n+                Value o = (Value) hs.get(TestAccessMode.GET_AND_SET_RELEASE).invokeExact(array, i, Value.getInstance(20));\n+                assertEquals(o, Value.getInstance(10), \"getAndSetRelease Value\");\n@@ -727,1 +727,1 @@\n-                assertEquals(x, Value.getInstance(Point.getInstance(2,2)), \"getAndSetRelease Value value\");\n+                assertEquals(x, Value.getInstance(20), \"getAndSetRelease Value value\");\n@@ -741,1 +741,1 @@\n-                Value o = (Value) hs.get(am).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                Value o = (Value) hs.get(am).invokeExact(array, i, Value.getInstance(10));\n@@ -747,1 +747,1 @@\n-                Value o = (Value) hs.get(am).invokeExact(array, i, Value.getInstance(Point.getInstance(1,1)));\n+                Value o = (Value) hs.get(am).invokeExact(array, i, Value.getInstance(10));\n@@ -766,1 +766,1 @@\n-                    hs.get(am).invokeExact(array, ci, Value.getInstance(Point.getInstance(1,1)));\n+                    hs.get(am).invokeExact(array, ci, Value.getInstance(10));\n@@ -772,1 +772,1 @@\n-                    boolean r = (boolean) hs.get(am).invokeExact(array, ci, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(2,2)));\n+                    boolean r = (boolean) hs.get(am).invokeExact(array, ci, Value.getInstance(10), Value.getInstance(20));\n@@ -778,1 +778,1 @@\n-                    Value r = (Value) hs.get(am).invokeExact(array, ci, Value.getInstance(Point.getInstance(2,2)), Value.getInstance(Point.getInstance(1,1)));\n+                    Value r = (Value) hs.get(am).invokeExact(array, ci, Value.getInstance(20), Value.getInstance(10));\n@@ -784,1 +784,1 @@\n-                    Value o = (Value) hs.get(am).invokeExact(array, ci, Value.getInstance(Point.getInstance(1,1)));\n+                    Value o = (Value) hs.get(am).invokeExact(array, ci, Value.getInstance(10));\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessValue.java","additions":190,"deletions":190,"binary":false,"changes":380,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypeBoolean.java\n@@ -34,1 +33,1 @@\n-*\/\n+ *\/\n@@ -51,2 +50,0 @@\n-    static final Class<?> type = boolean.class;\n-\n@@ -74,1 +71,1 @@\n-                VarHandleTestMethodTypeBoolean.class, \"final_v\", type);\n+                VarHandleTestMethodTypeBoolean.class, \"final_v\", boolean.class);\n@@ -77,1 +74,1 @@\n-                VarHandleTestMethodTypeBoolean.class, \"v\", type);\n+                VarHandleTestMethodTypeBoolean.class, \"v\", boolean.class);\n@@ -80,1 +77,1 @@\n-            VarHandleTestMethodTypeBoolean.class, \"static_final_v\", type);\n+            VarHandleTestMethodTypeBoolean.class, \"static_final_v\", boolean.class);\n@@ -83,1 +80,1 @@\n-            VarHandleTestMethodTypeBoolean.class, \"static_v\", type);\n+            VarHandleTestMethodTypeBoolean.class, \"static_v\", boolean.class);\n@@ -925,1 +922,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class)).\n@@ -929,1 +926,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class)).\n@@ -933,1 +930,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, int.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class)).\n@@ -947,1 +944,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -951,1 +948,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, Class.class)).\n@@ -959,1 +956,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeBoolean.class, type)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeBoolean.class, boolean.class)).\n@@ -963,1 +960,1 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, boolean.class)).\n@@ -971,1 +968,1 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, boolean.class)).\n@@ -980,1 +977,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeBoolean.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeBoolean.class, boolean.class, Class.class)).\n@@ -988,1 +985,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, boolean.class, boolean.class)).\n@@ -992,1 +989,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, boolean.class, boolean.class)).\n@@ -996,1 +993,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, Class.class, boolean.class)).\n@@ -1000,1 +997,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, boolean.class, Class.class)).\n@@ -1004,1 +1001,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , boolean.class, boolean.class)).\n@@ -1013,1 +1010,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, boolean.class, boolean.class, Class.class)).\n@@ -1020,1 +1017,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, boolean.class, boolean.class)).\n@@ -1024,1 +1021,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class, boolean.class, boolean.class)).\n@@ -1028,1 +1025,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, Class.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, Class.class, boolean.class)).\n@@ -1032,1 +1029,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, boolean.class, Class.class)).\n@@ -1036,1 +1033,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, int.class , type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class , boolean.class, boolean.class)).\n@@ -1041,1 +1038,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeBoolean.class , type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeBoolean.class , boolean.class, boolean.class)).\n@@ -1045,1 +1042,1 @@\n-                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeBoolean.class , type, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeBoolean.class , boolean.class, boolean.class)).\n@@ -1050,1 +1047,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -1054,1 +1051,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, type, type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, boolean.class, boolean.class, Class.class)).\n@@ -1061,1 +1058,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, boolean.class)).\n@@ -1065,1 +1062,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class, boolean.class)).\n@@ -1069,1 +1066,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, Class.class)).\n@@ -1073,1 +1070,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class, boolean.class)).\n@@ -1078,1 +1075,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeBoolean.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeBoolean.class, boolean.class)).\n@@ -1082,1 +1079,1 @@\n-                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeBoolean.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeBoolean.class, boolean.class)).\n@@ -1087,1 +1084,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -1091,1 +1088,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, boolean.class)).\n@@ -1099,1 +1096,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, boolean.class)).\n@@ -1103,1 +1100,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class, boolean.class)).\n@@ -1107,1 +1104,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, Class.class)).\n@@ -1111,1 +1108,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class, boolean.class)).\n@@ -1116,1 +1113,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeBoolean.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeBoolean.class, boolean.class)).\n@@ -1120,1 +1117,1 @@\n-                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeBoolean.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeBoolean.class, boolean.class)).\n@@ -1125,1 +1122,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -1129,1 +1126,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, VarHandleTestMethodTypeBoolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeBoolean.class, boolean.class)).\n@@ -1686,1 +1683,1 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, boolean.class, Class.class)).\n@@ -1693,1 +1690,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, boolean.class)).\n@@ -1697,1 +1694,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean.class, Class.class)).\n@@ -1706,1 +1703,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean.class, boolean.class, Class.class)).\n@@ -1714,1 +1711,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class, boolean.class)).\n@@ -1718,1 +1715,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean.class, Class.class)).\n@@ -1723,1 +1720,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, boolean.class, boolean.class)).\n@@ -1727,1 +1724,1 @@\n-                int x = (int) hs.get(am, methodType(int.class, type, type)).\n+                int x = (int) hs.get(am, methodType(int.class, boolean.class, boolean.class)).\n@@ -1732,1 +1729,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -1736,1 +1733,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, type, type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean.class, boolean.class, Class.class)).\n@@ -1744,1 +1741,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class)).\n@@ -1749,1 +1746,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, boolean.class)).\n@@ -1753,1 +1750,1 @@\n-                int x = (int) hs.get(am, methodType(int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, boolean.class)).\n@@ -1758,1 +1755,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -1762,1 +1759,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean.class, Class.class)).\n@@ -1771,1 +1768,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class)).\n@@ -1776,1 +1773,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, boolean.class)).\n@@ -1780,1 +1777,1 @@\n-                int x = (int) hs.get(am, methodType(int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, boolean.class)).\n@@ -1785,1 +1782,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -1789,1 +1786,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean.class, Class.class)).\n@@ -2680,1 +2677,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class)).\n@@ -2684,1 +2681,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class, int.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class)).\n@@ -2688,1 +2685,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, int.class, int.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class)).\n@@ -2692,1 +2689,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, Class.class)).\n@@ -2706,1 +2703,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -2710,1 +2707,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, Class.class)).\n@@ -2718,1 +2715,1 @@\n-                hs.get(am, methodType(void.class, boolean[].class, int.class, type)).\n+                hs.get(am, methodType(void.class, boolean[].class, int.class, boolean.class)).\n@@ -2722,1 +2719,1 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class, boolean.class)).\n@@ -2730,1 +2727,1 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class, boolean.class)).\n@@ -2734,1 +2731,1 @@\n-                hs.get(am, methodType(void.class, boolean[].class, Class.class, type)).\n+                hs.get(am, methodType(void.class, boolean[].class, Class.class, boolean.class)).\n@@ -2750,1 +2747,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, boolean.class, boolean.class)).\n@@ -2754,1 +2751,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, boolean.class, boolean.class)).\n@@ -2758,1 +2755,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, Class.class, boolean.class)).\n@@ -2762,1 +2759,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, boolean.class, Class.class)).\n@@ -2766,1 +2763,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, boolean.class, boolean.class)).\n@@ -2770,1 +2767,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, Class.class, boolean.class, boolean.class)).\n@@ -2779,1 +2776,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, boolean.class, boolean.class, Class.class)).\n@@ -2787,1 +2784,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, boolean.class, boolean.class)).\n@@ -2791,1 +2788,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, boolean.class, boolean.class)).\n@@ -2795,1 +2792,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, Class.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, Class.class, boolean.class)).\n@@ -2799,1 +2796,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, boolean.class, Class.class)).\n@@ -2803,1 +2800,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, int.class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, boolean.class, boolean.class)).\n@@ -2807,1 +2804,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, Class.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, Class.class, boolean.class, boolean.class)).\n@@ -2812,1 +2809,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, boolean[].class, int.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, boolean[].class, int.class, boolean.class, boolean.class)).\n@@ -2816,1 +2813,1 @@\n-                int x = (int) hs.get(am, methodType(int.class, boolean[].class, int.class, type, type)).\n+                int x = (int) hs.get(am, methodType(int.class, boolean[].class, int.class, boolean.class, boolean.class)).\n@@ -2821,1 +2818,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -2825,1 +2822,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, type, type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, boolean.class, boolean.class, Class.class)).\n@@ -2833,1 +2830,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, boolean.class)).\n@@ -2837,1 +2834,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, boolean.class)).\n@@ -2841,1 +2838,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, Class.class)).\n@@ -2845,1 +2842,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, int.class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, boolean.class)).\n@@ -2849,1 +2846,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, Class.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, Class.class, boolean.class)).\n@@ -2854,1 +2851,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, boolean[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, boolean[].class, int.class, boolean.class)).\n@@ -2858,1 +2855,1 @@\n-                int x = (int) hs.get(am, methodType(int.class, boolean[].class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, boolean[].class, int.class, boolean.class)).\n@@ -2863,1 +2860,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -2867,1 +2864,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, boolean.class, Class.class)).\n@@ -2876,1 +2873,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, boolean.class)).\n@@ -2880,1 +2877,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, boolean.class)).\n@@ -2884,1 +2881,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, Class.class)).\n@@ -2888,1 +2885,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, int.class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, boolean.class)).\n@@ -2892,1 +2889,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, Class.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, Class.class, boolean.class)).\n@@ -2897,1 +2894,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, boolean[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, boolean[].class, int.class, boolean.class)).\n@@ -2901,1 +2898,1 @@\n-                int x = (int) hs.get(am, methodType(int.class, boolean[].class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, boolean[].class, int.class, boolean.class)).\n@@ -2906,1 +2903,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n@@ -2910,1 +2907,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(type, boolean[].class, int.class, type, Class.class)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, boolean[].class, int.class, boolean.class, Class.class)).\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeBoolean.java","additions":111,"deletions":114,"binary":false,"changes":225,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypeByte.java\n@@ -34,1 +33,1 @@\n-*\/\n+ *\/\n@@ -51,2 +50,0 @@\n-    static final Class<?> type = byte.class;\n-\n@@ -74,1 +71,1 @@\n-                VarHandleTestMethodTypeByte.class, \"final_v\", type);\n+                VarHandleTestMethodTypeByte.class, \"final_v\", byte.class);\n@@ -77,1 +74,1 @@\n-                VarHandleTestMethodTypeByte.class, \"v\", type);\n+                VarHandleTestMethodTypeByte.class, \"v\", byte.class);\n@@ -80,1 +77,1 @@\n-            VarHandleTestMethodTypeByte.class, \"static_final_v\", type);\n+            VarHandleTestMethodTypeByte.class, \"static_final_v\", byte.class);\n@@ -83,1 +80,1 @@\n-            VarHandleTestMethodTypeByte.class, \"static_v\", type);\n+            VarHandleTestMethodTypeByte.class, \"static_v\", byte.class);\n@@ -1011,1 +1008,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class)).\n@@ -1015,1 +1012,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class)).\n@@ -1019,1 +1016,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, int.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, int.class)).\n@@ -1033,1 +1030,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -1037,1 +1034,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, Class.class)).\n@@ -1045,1 +1042,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeByte.class, type)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1049,1 +1046,1 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, byte.class)).\n@@ -1057,1 +1054,1 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, byte.class)).\n@@ -1066,1 +1063,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeByte.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeByte.class, byte.class, Class.class)).\n@@ -1074,1 +1071,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, byte.class, byte.class)).\n@@ -1078,1 +1075,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, byte.class, byte.class)).\n@@ -1082,1 +1079,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, Class.class, byte.class)).\n@@ -1086,1 +1083,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, byte.class, Class.class)).\n@@ -1090,1 +1087,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , byte.class, byte.class)).\n@@ -1099,1 +1096,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, byte.class, byte.class, Class.class)).\n@@ -1106,1 +1103,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, type, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, byte.class, byte.class)).\n@@ -1110,1 +1107,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class, type, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class, byte.class, byte.class)).\n@@ -1114,1 +1111,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, Class.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, Class.class, byte.class)).\n@@ -1118,1 +1115,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, byte.class, Class.class)).\n@@ -1122,1 +1119,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, int.class , type, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, int.class , byte.class, byte.class)).\n@@ -1127,1 +1124,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeByte.class , type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeByte.class , byte.class, byte.class)).\n@@ -1131,1 +1128,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class , type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class , byte.class, byte.class)).\n@@ -1136,1 +1133,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -1140,1 +1137,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, type, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, byte.class, byte.class, Class.class)).\n@@ -1147,1 +1144,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1151,1 +1148,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class, byte.class)).\n@@ -1155,1 +1152,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, Class.class)).\n@@ -1159,1 +1156,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, int.class, byte.class)).\n@@ -1164,1 +1161,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeByte.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1168,1 +1165,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1173,1 +1170,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -1177,1 +1174,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1184,1 +1181,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1188,1 +1185,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class, byte.class)).\n@@ -1192,1 +1189,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, Class.class)).\n@@ -1196,1 +1193,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, int.class, byte.class)).\n@@ -1201,1 +1198,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeByte.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1205,1 +1202,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1210,1 +1207,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -1214,1 +1211,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1221,1 +1218,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1225,1 +1222,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class, byte.class)).\n@@ -1229,1 +1226,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, Class.class)).\n@@ -1233,1 +1230,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, int.class, byte.class)).\n@@ -1238,1 +1235,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeByte.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1242,1 +1239,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1247,1 +1244,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -1251,1 +1248,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, VarHandleTestMethodTypeByte.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, VarHandleTestMethodTypeByte.class, byte.class)).\n@@ -1869,1 +1866,1 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, byte.class, Class.class)).\n@@ -1876,1 +1873,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, byte.class)).\n@@ -1880,1 +1877,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte.class, Class.class)).\n@@ -1889,1 +1886,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte.class, byte.class, Class.class)).\n@@ -1897,1 +1894,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class, byte.class)).\n@@ -1901,1 +1898,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte.class, Class.class)).\n@@ -1906,1 +1903,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, byte.class, byte.class)).\n@@ -1910,1 +1907,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte.class, byte.class)).\n@@ -1915,1 +1912,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -1919,1 +1916,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, type, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte.class, byte.class, Class.class)).\n@@ -1927,1 +1924,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class)).\n@@ -1932,1 +1929,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, byte.class)).\n@@ -1936,1 +1933,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte.class)).\n@@ -1941,1 +1938,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -1945,1 +1942,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte.class, Class.class)).\n@@ -1953,1 +1950,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class)).\n@@ -1958,1 +1955,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, byte.class)).\n@@ -1962,1 +1959,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte.class)).\n@@ -1967,1 +1964,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -1971,1 +1968,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte.class, Class.class)).\n@@ -1979,1 +1976,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class)).\n@@ -1984,1 +1981,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, byte.class)).\n@@ -1988,1 +1985,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte.class)).\n@@ -1993,1 +1990,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -1997,1 +1994,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte.class, Class.class)).\n@@ -2985,1 +2982,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class)).\n@@ -2989,1 +2986,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class, int.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class, int.class)).\n@@ -2993,1 +2990,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, int.class, int.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, int.class, int.class)).\n@@ -2997,1 +2994,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, Class.class)).\n@@ -3011,1 +3008,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -3015,1 +3012,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, Class.class)).\n@@ -3023,1 +3020,1 @@\n-                hs.get(am, methodType(void.class, byte[].class, int.class, type)).\n+                hs.get(am, methodType(void.class, byte[].class, int.class, byte.class)).\n@@ -3027,1 +3024,1 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class, byte.class)).\n@@ -3035,1 +3032,1 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class, byte.class)).\n@@ -3039,1 +3036,1 @@\n-                hs.get(am, methodType(void.class, byte[].class, Class.class, type)).\n+                hs.get(am, methodType(void.class, byte[].class, Class.class, byte.class)).\n@@ -3055,1 +3052,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, byte.class, byte.class)).\n@@ -3059,1 +3056,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, byte.class, byte.class)).\n@@ -3063,1 +3060,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, Class.class, byte.class)).\n@@ -3067,1 +3064,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, byte.class, Class.class)).\n@@ -3071,1 +3068,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, byte.class, byte.class)).\n@@ -3075,1 +3072,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte[].class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte[].class, Class.class, byte.class, byte.class)).\n@@ -3084,1 +3081,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, byte.class, byte.class, Class.class)).\n@@ -3092,1 +3089,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, type, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, byte.class, byte.class)).\n@@ -3096,1 +3093,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class, int.class, byte.class, byte.class)).\n@@ -3100,1 +3097,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, Class.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, Class.class, byte.class)).\n@@ -3104,1 +3101,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, byte.class, Class.class)).\n@@ -3108,1 +3105,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, int.class, int.class, type, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, int.class, int.class, byte.class, byte.class)).\n@@ -3112,1 +3109,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, Class.class, type, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, Class.class, byte.class, byte.class)).\n@@ -3117,1 +3114,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, byte[].class, int.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, byte[].class, int.class, byte.class, byte.class)).\n@@ -3121,1 +3118,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, byte.class, byte.class)).\n@@ -3126,1 +3123,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -3130,1 +3127,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, type, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, byte.class, byte.class, Class.class)).\n@@ -3138,1 +3135,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, byte.class)).\n@@ -3142,1 +3139,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class, int.class, byte.class)).\n@@ -3146,1 +3143,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, Class.class)).\n@@ -3150,1 +3147,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, int.class, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, int.class, int.class, byte.class)).\n@@ -3154,1 +3151,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, Class.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, Class.class, byte.class)).\n@@ -3159,1 +3156,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, byte[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, byte[].class, int.class, byte.class)).\n@@ -3163,1 +3160,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, byte.class)).\n@@ -3168,1 +3165,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -3172,1 +3169,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, byte.class, Class.class)).\n@@ -3180,1 +3177,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, byte.class)).\n@@ -3184,1 +3181,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class, int.class, byte.class)).\n@@ -3188,1 +3185,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, Class.class)).\n@@ -3192,1 +3189,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, int.class, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, int.class, int.class, byte.class)).\n@@ -3196,1 +3193,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, Class.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, Class.class, byte.class)).\n@@ -3201,1 +3198,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, byte[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, byte[].class, int.class, byte.class)).\n@@ -3205,1 +3202,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, byte.class)).\n@@ -3210,1 +3207,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -3214,1 +3211,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, byte.class, Class.class)).\n@@ -3222,1 +3219,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, byte.class)).\n@@ -3226,1 +3223,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, Class.class, int.class, byte.class)).\n@@ -3230,1 +3227,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, Class.class)).\n@@ -3234,1 +3231,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, int.class, int.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, int.class, int.class, byte.class)).\n@@ -3238,1 +3235,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, Class.class, type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, Class.class, byte.class)).\n@@ -3243,1 +3240,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, byte[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, byte[].class, int.class, byte.class)).\n@@ -3247,1 +3244,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, byte[].class, int.class, byte.class)).\n@@ -3252,1 +3249,1 @@\n-                byte x = (byte) hs.get(am, methodType(type)).\n+                byte x = (byte) hs.get(am, methodType(byte.class)).\n@@ -3256,1 +3253,1 @@\n-                byte x = (byte) hs.get(am, methodType(type, byte[].class, int.class, type, Class.class)).\n+                byte x = (byte) hs.get(am, methodType(byte.class, byte[].class, int.class, byte.class, Class.class)).\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeByte.java","additions":133,"deletions":136,"binary":false,"changes":269,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypeChar.java\n@@ -34,1 +33,1 @@\n-*\/\n+ *\/\n@@ -51,2 +50,0 @@\n-    static final Class<?> type = char.class;\n-\n@@ -74,1 +71,1 @@\n-                VarHandleTestMethodTypeChar.class, \"final_v\", type);\n+                VarHandleTestMethodTypeChar.class, \"final_v\", char.class);\n@@ -77,1 +74,1 @@\n-                VarHandleTestMethodTypeChar.class, \"v\", type);\n+                VarHandleTestMethodTypeChar.class, \"v\", char.class);\n@@ -80,1 +77,1 @@\n-            VarHandleTestMethodTypeChar.class, \"static_final_v\", type);\n+            VarHandleTestMethodTypeChar.class, \"static_final_v\", char.class);\n@@ -83,1 +80,1 @@\n-            VarHandleTestMethodTypeChar.class, \"static_v\", type);\n+            VarHandleTestMethodTypeChar.class, \"static_v\", char.class);\n@@ -1011,1 +1008,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class)).\n@@ -1015,1 +1012,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class)).\n@@ -1019,1 +1016,1 @@\n-                char x = (char) hs.get(am, methodType(type, int.class)).\n+                char x = (char) hs.get(am, methodType(char.class, int.class)).\n@@ -1033,1 +1030,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -1037,1 +1034,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, Class.class)).\n@@ -1045,1 +1042,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeChar.class, type)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1049,1 +1046,1 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, char.class)).\n@@ -1057,1 +1054,1 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, char.class)).\n@@ -1066,1 +1063,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeChar.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeChar.class, char.class, Class.class)).\n@@ -1074,1 +1071,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, char.class, char.class)).\n@@ -1078,1 +1075,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, char.class, char.class)).\n@@ -1082,1 +1079,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, Class.class, char.class)).\n@@ -1086,1 +1083,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, char.class, Class.class)).\n@@ -1090,1 +1087,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , char.class, char.class)).\n@@ -1099,1 +1096,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, char.class, char.class, Class.class)).\n@@ -1106,1 +1103,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, type, type)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, char.class, char.class)).\n@@ -1110,1 +1107,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class, type, type)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class, char.class, char.class)).\n@@ -1114,1 +1111,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, Class.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, Class.class, char.class)).\n@@ -1118,1 +1115,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, char.class, Class.class)).\n@@ -1122,1 +1119,1 @@\n-                char x = (char) hs.get(am, methodType(type, int.class , type, type)).\n+                char x = (char) hs.get(am, methodType(char.class, int.class , char.class, char.class)).\n@@ -1127,1 +1124,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeChar.class , type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeChar.class , char.class, char.class)).\n@@ -1131,1 +1128,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class , type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class , char.class, char.class)).\n@@ -1136,1 +1133,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -1140,1 +1137,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, type, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, char.class, char.class, Class.class)).\n@@ -1147,1 +1144,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1151,1 +1148,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class, char.class)).\n@@ -1155,1 +1152,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, Class.class)).\n@@ -1159,1 +1156,1 @@\n-                char x = (char) hs.get(am, methodType(type, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, int.class, char.class)).\n@@ -1164,1 +1161,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeChar.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1168,1 +1165,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1173,1 +1170,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -1177,1 +1174,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1184,1 +1181,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1188,1 +1185,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class, char.class)).\n@@ -1192,1 +1189,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, Class.class)).\n@@ -1196,1 +1193,1 @@\n-                char x = (char) hs.get(am, methodType(type, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, int.class, char.class)).\n@@ -1201,1 +1198,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeChar.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1205,1 +1202,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1210,1 +1207,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -1214,1 +1211,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1221,1 +1218,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1225,1 +1222,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class, char.class)).\n@@ -1229,1 +1226,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, Class.class)).\n@@ -1233,1 +1230,1 @@\n-                char x = (char) hs.get(am, methodType(type, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, int.class, char.class)).\n@@ -1238,1 +1235,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeChar.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1242,1 +1239,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1247,1 +1244,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -1251,1 +1248,1 @@\n-                char x = (char) hs.get(am, methodType(type, VarHandleTestMethodTypeChar.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, VarHandleTestMethodTypeChar.class, char.class)).\n@@ -1869,1 +1866,1 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, char.class, Class.class)).\n@@ -1876,1 +1873,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, char.class)).\n@@ -1880,1 +1877,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, char.class, Class.class)).\n@@ -1889,1 +1886,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, char.class, char.class, Class.class)).\n@@ -1897,1 +1894,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class, char.class)).\n@@ -1901,1 +1898,1 @@\n-                char x = (char) hs.get(am, methodType(type, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char.class, Class.class)).\n@@ -1906,1 +1903,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, char.class, char.class)).\n@@ -1910,1 +1907,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, char.class, char.class)).\n@@ -1915,1 +1912,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -1919,1 +1916,1 @@\n-                char x = (char) hs.get(am, methodType(type, type, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char.class, char.class, Class.class)).\n@@ -1927,1 +1924,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class)).\n@@ -1932,1 +1929,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, char.class)).\n@@ -1936,1 +1933,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, char.class)).\n@@ -1941,1 +1938,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -1945,1 +1942,1 @@\n-                char x = (char) hs.get(am, methodType(type, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char.class, Class.class)).\n@@ -1953,1 +1950,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class)).\n@@ -1958,1 +1955,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, char.class)).\n@@ -1962,1 +1959,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, char.class)).\n@@ -1967,1 +1964,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -1971,1 +1968,1 @@\n-                char x = (char) hs.get(am, methodType(type, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char.class, Class.class)).\n@@ -1979,1 +1976,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class)).\n@@ -1984,1 +1981,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, char.class)).\n@@ -1988,1 +1985,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, char.class)).\n@@ -1993,1 +1990,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -1997,1 +1994,1 @@\n-                char x = (char) hs.get(am, methodType(type, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char.class, Class.class)).\n@@ -2985,1 +2982,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class)).\n@@ -2989,1 +2986,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class, int.class)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class, int.class)).\n@@ -2993,1 +2990,1 @@\n-                char x = (char) hs.get(am, methodType(type, int.class, int.class)).\n+                char x = (char) hs.get(am, methodType(char.class, int.class, int.class)).\n@@ -2997,1 +2994,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, Class.class)).\n@@ -3011,1 +3008,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -3015,1 +3012,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, Class.class)).\n@@ -3023,1 +3020,1 @@\n-                hs.get(am, methodType(void.class, char[].class, int.class, type)).\n+                hs.get(am, methodType(void.class, char[].class, int.class, char.class)).\n@@ -3027,1 +3024,1 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class, char.class)).\n@@ -3035,1 +3032,1 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class, char.class)).\n@@ -3039,1 +3036,1 @@\n-                hs.get(am, methodType(void.class, char[].class, Class.class, type)).\n+                hs.get(am, methodType(void.class, char[].class, Class.class, char.class)).\n@@ -3055,1 +3052,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, char.class, char.class)).\n@@ -3059,1 +3056,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, char.class, char.class)).\n@@ -3063,1 +3060,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, Class.class, char.class)).\n@@ -3067,1 +3064,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, char.class, Class.class)).\n@@ -3071,1 +3068,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, char.class, char.class)).\n@@ -3075,1 +3072,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, char[].class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, char[].class, Class.class, char.class, char.class)).\n@@ -3084,1 +3081,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, char.class, char.class, Class.class)).\n@@ -3092,1 +3089,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, type, type)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, char.class, char.class)).\n@@ -3096,1 +3093,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class, int.class, char.class, char.class)).\n@@ -3100,1 +3097,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, Class.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, Class.class, char.class)).\n@@ -3104,1 +3101,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, char.class, Class.class)).\n@@ -3108,1 +3105,1 @@\n-                char x = (char) hs.get(am, methodType(type, int.class, int.class, type, type)).\n+                char x = (char) hs.get(am, methodType(char.class, int.class, int.class, char.class, char.class)).\n@@ -3112,1 +3109,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, Class.class, type, type)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, Class.class, char.class, char.class)).\n@@ -3117,1 +3114,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, char[].class, int.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, char[].class, int.class, char.class, char.class)).\n@@ -3121,1 +3118,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, char.class, char.class)).\n@@ -3126,1 +3123,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -3130,1 +3127,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, type, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, char.class, char.class, Class.class)).\n@@ -3138,1 +3135,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, char.class)).\n@@ -3142,1 +3139,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class, int.class, char.class)).\n@@ -3146,1 +3143,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, Class.class)).\n@@ -3150,1 +3147,1 @@\n-                char x = (char) hs.get(am, methodType(type, int.class, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, int.class, int.class, char.class)).\n@@ -3154,1 +3151,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, Class.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, Class.class, char.class)).\n@@ -3159,1 +3156,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, char[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, char[].class, int.class, char.class)).\n@@ -3163,1 +3160,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, char.class)).\n@@ -3168,1 +3165,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -3172,1 +3169,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, char.class, Class.class)).\n@@ -3180,1 +3177,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, char.class)).\n@@ -3184,1 +3181,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class, int.class, char.class)).\n@@ -3188,1 +3185,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, Class.class)).\n@@ -3192,1 +3189,1 @@\n-                char x = (char) hs.get(am, methodType(type, int.class, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, int.class, int.class, char.class)).\n@@ -3196,1 +3193,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, Class.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, Class.class, char.class)).\n@@ -3201,1 +3198,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, char[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, char[].class, int.class, char.class)).\n@@ -3205,1 +3202,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, char.class)).\n@@ -3210,1 +3207,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -3214,1 +3211,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, char.class, Class.class)).\n@@ -3222,1 +3219,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, char.class)).\n@@ -3226,1 +3223,1 @@\n-                char x = (char) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, Class.class, int.class, char.class)).\n@@ -3230,1 +3227,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, Class.class)).\n@@ -3234,1 +3231,1 @@\n-                char x = (char) hs.get(am, methodType(type, int.class, int.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, int.class, int.class, char.class)).\n@@ -3238,1 +3235,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, Class.class, type)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, Class.class, char.class)).\n@@ -3243,1 +3240,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, char[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, char[].class, int.class, char.class)).\n@@ -3247,1 +3244,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, char[].class, int.class, char.class)).\n@@ -3252,1 +3249,1 @@\n-                char x = (char) hs.get(am, methodType(type)).\n+                char x = (char) hs.get(am, methodType(char.class)).\n@@ -3256,1 +3253,1 @@\n-                char x = (char) hs.get(am, methodType(type, char[].class, int.class, type, Class.class)).\n+                char x = (char) hs.get(am, methodType(char.class, char[].class, int.class, char.class, Class.class)).\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeChar.java","additions":133,"deletions":136,"binary":false,"changes":269,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypeDouble.java\n@@ -34,1 +33,1 @@\n-*\/\n+ *\/\n@@ -51,2 +50,0 @@\n-    static final Class<?> type = double.class;\n-\n@@ -74,1 +71,1 @@\n-                VarHandleTestMethodTypeDouble.class, \"final_v\", type);\n+                VarHandleTestMethodTypeDouble.class, \"final_v\", double.class);\n@@ -77,1 +74,1 @@\n-                VarHandleTestMethodTypeDouble.class, \"v\", type);\n+                VarHandleTestMethodTypeDouble.class, \"v\", double.class);\n@@ -80,1 +77,1 @@\n-            VarHandleTestMethodTypeDouble.class, \"static_final_v\", type);\n+            VarHandleTestMethodTypeDouble.class, \"static_final_v\", double.class);\n@@ -83,1 +80,1 @@\n-            VarHandleTestMethodTypeDouble.class, \"static_v\", type);\n+            VarHandleTestMethodTypeDouble.class, \"static_v\", double.class);\n@@ -743,1 +740,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class)).\n@@ -747,1 +744,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class)).\n@@ -751,1 +748,1 @@\n-                double x = (double) hs.get(am, methodType(type, int.class)).\n+                double x = (double) hs.get(am, methodType(double.class, int.class)).\n@@ -765,1 +762,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -769,1 +766,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, Class.class)).\n@@ -777,1 +774,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeDouble.class, type)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeDouble.class, double.class)).\n@@ -781,1 +778,1 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, double.class)).\n@@ -789,1 +786,1 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, double.class)).\n@@ -798,1 +795,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeDouble.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeDouble.class, double.class, Class.class)).\n@@ -806,1 +803,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, double.class, double.class)).\n@@ -810,1 +807,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, double.class, double.class)).\n@@ -814,1 +811,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, Class.class, double.class)).\n@@ -818,1 +815,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, double.class, Class.class)).\n@@ -822,1 +819,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , double.class, double.class)).\n@@ -831,1 +828,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, double.class, double.class, Class.class)).\n@@ -838,1 +835,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, type, type)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, double.class, double.class)).\n@@ -842,1 +839,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class, type, type)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class, double.class, double.class)).\n@@ -846,1 +843,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, Class.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, Class.class, double.class)).\n@@ -850,1 +847,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, double.class, Class.class)).\n@@ -854,1 +851,1 @@\n-                double x = (double) hs.get(am, methodType(type, int.class , type, type)).\n+                double x = (double) hs.get(am, methodType(double.class, int.class , double.class, double.class)).\n@@ -859,1 +856,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeDouble.class , type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeDouble.class , double.class, double.class)).\n@@ -863,1 +860,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class , type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class , double.class, double.class)).\n@@ -868,1 +865,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -872,1 +869,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, type, type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, double.class, double.class, Class.class)).\n@@ -879,1 +876,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, double.class)).\n@@ -883,1 +880,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class, double.class)).\n@@ -887,1 +884,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, Class.class)).\n@@ -891,1 +888,1 @@\n-                double x = (double) hs.get(am, methodType(type, int.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, int.class, double.class)).\n@@ -896,1 +893,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeDouble.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeDouble.class, double.class)).\n@@ -900,1 +897,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, double.class)).\n@@ -905,1 +902,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -909,1 +906,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, double.class)).\n@@ -916,1 +913,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, double.class)).\n@@ -920,1 +917,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class, double.class)).\n@@ -924,1 +921,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, Class.class)).\n@@ -928,1 +925,1 @@\n-                double x = (double) hs.get(am, methodType(type, int.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, int.class, double.class)).\n@@ -933,1 +930,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeDouble.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeDouble.class, double.class)).\n@@ -937,1 +934,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeDouble.class, double.class)).\n@@ -942,1 +939,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -946,1 +943,1 @@\n-                double x = (double) hs.get(am, methodType(type, VarHandleTestMethodTypeDouble.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, VarHandleTestMethodTypeDouble.class, double.class)).\n@@ -1378,1 +1375,1 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, double.class, Class.class)).\n@@ -1385,1 +1382,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, double.class)).\n@@ -1389,1 +1386,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, double.class, Class.class)).\n@@ -1398,1 +1395,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, double.class, double.class, Class.class)).\n@@ -1406,1 +1403,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class, double.class)).\n@@ -1410,1 +1407,1 @@\n-                double x = (double) hs.get(am, methodType(type, type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double.class, Class.class)).\n@@ -1415,1 +1412,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, double.class, double.class)).\n@@ -1419,1 +1416,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, double.class, double.class)).\n@@ -1424,1 +1421,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -1428,1 +1425,1 @@\n-                double x = (double) hs.get(am, methodType(type, type, type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double.class, double.class, Class.class)).\n@@ -1436,1 +1433,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class)).\n@@ -1441,1 +1438,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, double.class)).\n@@ -1445,1 +1442,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, double.class)).\n@@ -1450,1 +1447,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -1454,1 +1451,1 @@\n-                double x = (double) hs.get(am, methodType(type, type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double.class, Class.class)).\n@@ -1462,1 +1459,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class)).\n@@ -1467,1 +1464,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, double.class)).\n@@ -1471,1 +1468,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, double.class)).\n@@ -1476,1 +1473,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -1480,1 +1477,1 @@\n-                double x = (double) hs.get(am, methodType(type, type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double.class, Class.class)).\n@@ -2174,1 +2171,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class)).\n@@ -2178,1 +2175,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class, int.class)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class, int.class)).\n@@ -2182,1 +2179,1 @@\n-                double x = (double) hs.get(am, methodType(type, int.class, int.class)).\n+                double x = (double) hs.get(am, methodType(double.class, int.class, int.class)).\n@@ -2186,1 +2183,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, Class.class)).\n@@ -2200,1 +2197,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -2204,1 +2201,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, Class.class)).\n@@ -2212,1 +2209,1 @@\n-                hs.get(am, methodType(void.class, double[].class, int.class, type)).\n+                hs.get(am, methodType(void.class, double[].class, int.class, double.class)).\n@@ -2216,1 +2213,1 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class, double.class)).\n@@ -2224,1 +2221,1 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class, double.class)).\n@@ -2228,1 +2225,1 @@\n-                hs.get(am, methodType(void.class, double[].class, Class.class, type)).\n+                hs.get(am, methodType(void.class, double[].class, Class.class, double.class)).\n@@ -2244,1 +2241,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, double.class, double.class)).\n@@ -2248,1 +2245,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, double.class, double.class)).\n@@ -2252,1 +2249,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, Class.class, double.class)).\n@@ -2256,1 +2253,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, double.class, Class.class)).\n@@ -2260,1 +2257,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, double.class, double.class)).\n@@ -2264,1 +2261,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, double[].class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, double[].class, Class.class, double.class, double.class)).\n@@ -2273,1 +2270,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, double.class, double.class, Class.class)).\n@@ -2281,1 +2278,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, type, type)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, double.class, double.class)).\n@@ -2285,1 +2282,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class, int.class, double.class, double.class)).\n@@ -2289,1 +2286,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, Class.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, Class.class, double.class)).\n@@ -2293,1 +2290,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, double.class, Class.class)).\n@@ -2297,1 +2294,1 @@\n-                double x = (double) hs.get(am, methodType(type, int.class, int.class, type, type)).\n+                double x = (double) hs.get(am, methodType(double.class, int.class, int.class, double.class, double.class)).\n@@ -2301,1 +2298,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, Class.class, type, type)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, Class.class, double.class, double.class)).\n@@ -2306,1 +2303,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, double[].class, int.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, double[].class, int.class, double.class, double.class)).\n@@ -2310,1 +2307,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, double.class, double.class)).\n@@ -2315,1 +2312,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -2319,1 +2316,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, type, type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, double.class, double.class, Class.class)).\n@@ -2327,1 +2324,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, double.class)).\n@@ -2331,1 +2328,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class, int.class, double.class)).\n@@ -2335,1 +2332,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, Class.class)).\n@@ -2339,1 +2336,1 @@\n-                double x = (double) hs.get(am, methodType(type, int.class, int.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, int.class, int.class, double.class)).\n@@ -2343,1 +2340,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, Class.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, Class.class, double.class)).\n@@ -2348,1 +2345,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, double[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, double[].class, int.class, double.class)).\n@@ -2352,1 +2349,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, double.class)).\n@@ -2357,1 +2354,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -2361,1 +2358,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, double.class, Class.class)).\n@@ -2369,1 +2366,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, double.class)).\n@@ -2373,1 +2370,1 @@\n-                double x = (double) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, Class.class, int.class, double.class)).\n@@ -2377,1 +2374,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, Class.class)).\n@@ -2381,1 +2378,1 @@\n-                double x = (double) hs.get(am, methodType(type, int.class, int.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, int.class, int.class, double.class)).\n@@ -2385,1 +2382,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, Class.class, type)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, Class.class, double.class)).\n@@ -2390,1 +2387,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, double[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, double[].class, int.class, double.class)).\n@@ -2394,1 +2391,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, double[].class, int.class, double.class)).\n@@ -2399,1 +2396,1 @@\n-                double x = (double) hs.get(am, methodType(type)).\n+                double x = (double) hs.get(am, methodType(double.class)).\n@@ -2403,1 +2400,1 @@\n-                double x = (double) hs.get(am, methodType(type, double[].class, int.class, type, Class.class)).\n+                double x = (double) hs.get(am, methodType(double.class, double[].class, int.class, double.class, Class.class)).\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeDouble.java","additions":111,"deletions":114,"binary":false,"changes":225,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypeFloat.java\n@@ -34,1 +33,1 @@\n-*\/\n+ *\/\n@@ -51,2 +50,0 @@\n-    static final Class<?> type = float.class;\n-\n@@ -74,1 +71,1 @@\n-                VarHandleTestMethodTypeFloat.class, \"final_v\", type);\n+                VarHandleTestMethodTypeFloat.class, \"final_v\", float.class);\n@@ -77,1 +74,1 @@\n-                VarHandleTestMethodTypeFloat.class, \"v\", type);\n+                VarHandleTestMethodTypeFloat.class, \"v\", float.class);\n@@ -80,1 +77,1 @@\n-            VarHandleTestMethodTypeFloat.class, \"static_final_v\", type);\n+            VarHandleTestMethodTypeFloat.class, \"static_final_v\", float.class);\n@@ -83,1 +80,1 @@\n-            VarHandleTestMethodTypeFloat.class, \"static_v\", type);\n+            VarHandleTestMethodTypeFloat.class, \"static_v\", float.class);\n@@ -743,1 +740,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class)).\n@@ -747,1 +744,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class)).\n@@ -751,1 +748,1 @@\n-                float x = (float) hs.get(am, methodType(type, int.class)).\n+                float x = (float) hs.get(am, methodType(float.class, int.class)).\n@@ -765,1 +762,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -769,1 +766,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, Class.class)).\n@@ -777,1 +774,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeFloat.class, type)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeFloat.class, float.class)).\n@@ -781,1 +778,1 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, float.class)).\n@@ -789,1 +786,1 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, float.class)).\n@@ -798,1 +795,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeFloat.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeFloat.class, float.class, Class.class)).\n@@ -806,1 +803,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, float.class, float.class)).\n@@ -810,1 +807,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, float.class, float.class)).\n@@ -814,1 +811,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, Class.class, float.class)).\n@@ -818,1 +815,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, float.class, Class.class)).\n@@ -822,1 +819,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , float.class, float.class)).\n@@ -831,1 +828,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, float.class, float.class, Class.class)).\n@@ -838,1 +835,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, type, type)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, float.class, float.class)).\n@@ -842,1 +839,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class, type, type)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class, float.class, float.class)).\n@@ -846,1 +843,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, Class.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, Class.class, float.class)).\n@@ -850,1 +847,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, float.class, Class.class)).\n@@ -854,1 +851,1 @@\n-                float x = (float) hs.get(am, methodType(type, int.class , type, type)).\n+                float x = (float) hs.get(am, methodType(float.class, int.class , float.class, float.class)).\n@@ -859,1 +856,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeFloat.class , type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeFloat.class , float.class, float.class)).\n@@ -863,1 +860,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class , type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class , float.class, float.class)).\n@@ -868,1 +865,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -872,1 +869,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, type, type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, float.class, float.class, Class.class)).\n@@ -879,1 +876,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, float.class)).\n@@ -883,1 +880,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class, float.class)).\n@@ -887,1 +884,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, Class.class)).\n@@ -891,1 +888,1 @@\n-                float x = (float) hs.get(am, methodType(type, int.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, int.class, float.class)).\n@@ -896,1 +893,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeFloat.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeFloat.class, float.class)).\n@@ -900,1 +897,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, float.class)).\n@@ -905,1 +902,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -909,1 +906,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, float.class)).\n@@ -916,1 +913,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, float.class)).\n@@ -920,1 +917,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class, float.class)).\n@@ -924,1 +921,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, Class.class)).\n@@ -928,1 +925,1 @@\n-                float x = (float) hs.get(am, methodType(type, int.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, int.class, float.class)).\n@@ -933,1 +930,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeFloat.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeFloat.class, float.class)).\n@@ -937,1 +934,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeFloat.class, float.class)).\n@@ -942,1 +939,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -946,1 +943,1 @@\n-                float x = (float) hs.get(am, methodType(type, VarHandleTestMethodTypeFloat.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, VarHandleTestMethodTypeFloat.class, float.class)).\n@@ -1378,1 +1375,1 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, float.class, Class.class)).\n@@ -1385,1 +1382,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, float.class)).\n@@ -1389,1 +1386,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, float.class, Class.class)).\n@@ -1398,1 +1395,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, float.class, float.class, Class.class)).\n@@ -1406,1 +1403,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class, float.class)).\n@@ -1410,1 +1407,1 @@\n-                float x = (float) hs.get(am, methodType(type, type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float.class, Class.class)).\n@@ -1415,1 +1412,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, float.class, float.class)).\n@@ -1419,1 +1416,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, float.class, float.class)).\n@@ -1424,1 +1421,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -1428,1 +1425,1 @@\n-                float x = (float) hs.get(am, methodType(type, type, type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float.class, float.class, Class.class)).\n@@ -1436,1 +1433,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class)).\n@@ -1441,1 +1438,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, float.class)).\n@@ -1445,1 +1442,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, float.class)).\n@@ -1450,1 +1447,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -1454,1 +1451,1 @@\n-                float x = (float) hs.get(am, methodType(type, type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float.class, Class.class)).\n@@ -1462,1 +1459,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class)).\n@@ -1467,1 +1464,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, float.class)).\n@@ -1471,1 +1468,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, float.class)).\n@@ -1476,1 +1473,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -1480,1 +1477,1 @@\n-                float x = (float) hs.get(am, methodType(type, type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float.class, Class.class)).\n@@ -2174,1 +2171,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class)).\n@@ -2178,1 +2175,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class, int.class)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class, int.class)).\n@@ -2182,1 +2179,1 @@\n-                float x = (float) hs.get(am, methodType(type, int.class, int.class)).\n+                float x = (float) hs.get(am, methodType(float.class, int.class, int.class)).\n@@ -2186,1 +2183,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, Class.class)).\n@@ -2200,1 +2197,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -2204,1 +2201,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, Class.class)).\n@@ -2212,1 +2209,1 @@\n-                hs.get(am, methodType(void.class, float[].class, int.class, type)).\n+                hs.get(am, methodType(void.class, float[].class, int.class, float.class)).\n@@ -2216,1 +2213,1 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class, float.class)).\n@@ -2224,1 +2221,1 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class, float.class)).\n@@ -2228,1 +2225,1 @@\n-                hs.get(am, methodType(void.class, float[].class, Class.class, type)).\n+                hs.get(am, methodType(void.class, float[].class, Class.class, float.class)).\n@@ -2244,1 +2241,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, float.class, float.class)).\n@@ -2248,1 +2245,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, float.class, float.class)).\n@@ -2252,1 +2249,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, Class.class, float.class)).\n@@ -2256,1 +2253,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, float.class, Class.class)).\n@@ -2260,1 +2257,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, float.class, float.class)).\n@@ -2264,1 +2261,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, float[].class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, float[].class, Class.class, float.class, float.class)).\n@@ -2273,1 +2270,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, float.class, float.class, Class.class)).\n@@ -2281,1 +2278,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, type, type)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, float.class, float.class)).\n@@ -2285,1 +2282,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class, int.class, float.class, float.class)).\n@@ -2289,1 +2286,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, Class.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, Class.class, float.class)).\n@@ -2293,1 +2290,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, float.class, Class.class)).\n@@ -2297,1 +2294,1 @@\n-                float x = (float) hs.get(am, methodType(type, int.class, int.class, type, type)).\n+                float x = (float) hs.get(am, methodType(float.class, int.class, int.class, float.class, float.class)).\n@@ -2301,1 +2298,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, Class.class, type, type)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, Class.class, float.class, float.class)).\n@@ -2306,1 +2303,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, float[].class, int.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, float[].class, int.class, float.class, float.class)).\n@@ -2310,1 +2307,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, float.class, float.class)).\n@@ -2315,1 +2312,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -2319,1 +2316,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, type, type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, float.class, float.class, Class.class)).\n@@ -2327,1 +2324,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, float.class)).\n@@ -2331,1 +2328,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class, int.class, float.class)).\n@@ -2335,1 +2332,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, Class.class)).\n@@ -2339,1 +2336,1 @@\n-                float x = (float) hs.get(am, methodType(type, int.class, int.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, int.class, int.class, float.class)).\n@@ -2343,1 +2340,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, Class.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, Class.class, float.class)).\n@@ -2348,1 +2345,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, float[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, float[].class, int.class, float.class)).\n@@ -2352,1 +2349,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, float.class)).\n@@ -2357,1 +2354,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -2361,1 +2358,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, float.class, Class.class)).\n@@ -2369,1 +2366,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, float.class)).\n@@ -2373,1 +2370,1 @@\n-                float x = (float) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, Class.class, int.class, float.class)).\n@@ -2377,1 +2374,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, Class.class)).\n@@ -2381,1 +2378,1 @@\n-                float x = (float) hs.get(am, methodType(type, int.class, int.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, int.class, int.class, float.class)).\n@@ -2385,1 +2382,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, Class.class, type)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, Class.class, float.class)).\n@@ -2390,1 +2387,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, float[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, float[].class, int.class, float.class)).\n@@ -2394,1 +2391,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, float[].class, int.class, float.class)).\n@@ -2399,1 +2396,1 @@\n-                float x = (float) hs.get(am, methodType(type)).\n+                float x = (float) hs.get(am, methodType(float.class)).\n@@ -2403,1 +2400,1 @@\n-                float x = (float) hs.get(am, methodType(type, float[].class, int.class, type, Class.class)).\n+                float x = (float) hs.get(am, methodType(float.class, float[].class, int.class, float.class, Class.class)).\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeFloat.java","additions":111,"deletions":114,"binary":false,"changes":225,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypeInt.java\n@@ -34,1 +33,1 @@\n-*\/\n+ *\/\n@@ -51,2 +50,0 @@\n-    static final Class<?> type = int.class;\n-\n@@ -74,1 +71,1 @@\n-                VarHandleTestMethodTypeInt.class, \"final_v\", type);\n+                VarHandleTestMethodTypeInt.class, \"final_v\", int.class);\n@@ -77,1 +74,1 @@\n-                VarHandleTestMethodTypeInt.class, \"v\", type);\n+                VarHandleTestMethodTypeInt.class, \"v\", int.class);\n@@ -80,1 +77,1 @@\n-            VarHandleTestMethodTypeInt.class, \"static_final_v\", type);\n+            VarHandleTestMethodTypeInt.class, \"static_final_v\", int.class);\n@@ -83,1 +80,1 @@\n-            VarHandleTestMethodTypeInt.class, \"static_v\", type);\n+            VarHandleTestMethodTypeInt.class, \"static_v\", int.class);\n@@ -1011,1 +1008,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class)).\n@@ -1015,1 +1012,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class)).\n@@ -1019,1 +1016,1 @@\n-                int x = (int) hs.get(am, methodType(type, int.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class)).\n@@ -1033,1 +1030,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -1037,1 +1034,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, Class.class)).\n@@ -1045,1 +1042,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeInt.class, type)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1049,1 +1046,1 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class)).\n@@ -1057,1 +1054,1 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class)).\n@@ -1066,1 +1063,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeInt.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeInt.class, int.class, Class.class)).\n@@ -1074,1 +1071,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, int.class, int.class)).\n@@ -1078,1 +1075,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, int.class)).\n@@ -1082,1 +1079,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, Class.class, int.class)).\n@@ -1086,1 +1083,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, int.class, Class.class)).\n@@ -1090,1 +1087,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , int.class, int.class)).\n@@ -1099,1 +1096,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, int.class, int.class, Class.class)).\n@@ -1106,1 +1103,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, type, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, int.class, int.class)).\n@@ -1110,1 +1107,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class, type, type)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class, int.class, int.class)).\n@@ -1114,1 +1111,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, Class.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, Class.class, int.class)).\n@@ -1118,1 +1115,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, int.class, Class.class)).\n@@ -1122,1 +1119,1 @@\n-                int x = (int) hs.get(am, methodType(type, int.class , type, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class , int.class, int.class)).\n@@ -1127,1 +1124,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeInt.class , type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeInt.class , int.class, int.class)).\n@@ -1131,1 +1128,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class , type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class , int.class, int.class)).\n@@ -1136,1 +1133,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -1140,1 +1137,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, type, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, int.class, int.class, Class.class)).\n@@ -1147,1 +1144,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1151,1 +1148,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class, int.class)).\n@@ -1155,1 +1152,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, Class.class)).\n@@ -1159,1 +1156,1 @@\n-                int x = (int) hs.get(am, methodType(type, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, int.class)).\n@@ -1164,1 +1161,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeInt.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1168,1 +1165,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1173,1 +1170,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -1177,1 +1174,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1184,1 +1181,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1188,1 +1185,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class, int.class)).\n@@ -1192,1 +1189,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, Class.class)).\n@@ -1196,1 +1193,1 @@\n-                int x = (int) hs.get(am, methodType(type, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, int.class)).\n@@ -1201,1 +1198,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeInt.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1205,1 +1202,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1210,1 +1207,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -1214,1 +1211,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1221,1 +1218,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1225,1 +1222,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class, int.class)).\n@@ -1229,1 +1226,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, Class.class)).\n@@ -1233,1 +1230,1 @@\n-                int x = (int) hs.get(am, methodType(type, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, int.class)).\n@@ -1238,1 +1235,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeInt.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1242,1 +1239,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1247,1 +1244,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -1251,1 +1248,1 @@\n-                int x = (int) hs.get(am, methodType(type, VarHandleTestMethodTypeInt.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, VarHandleTestMethodTypeInt.class, int.class)).\n@@ -1869,1 +1866,1 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, int.class, Class.class)).\n@@ -1876,1 +1873,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class)).\n@@ -1880,1 +1877,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, Class.class)).\n@@ -1889,1 +1886,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, Class.class)).\n@@ -1897,1 +1894,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class, int.class)).\n@@ -1901,1 +1898,1 @@\n-                int x = (int) hs.get(am, methodType(type, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, Class.class)).\n@@ -1906,1 +1903,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, int.class, int.class)).\n@@ -1910,1 +1907,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class)).\n@@ -1915,1 +1912,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -1919,1 +1916,1 @@\n-                int x = (int) hs.get(am, methodType(type, type, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, int.class, Class.class)).\n@@ -1927,1 +1924,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class)).\n@@ -1932,1 +1929,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, int.class)).\n@@ -1936,1 +1933,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class)).\n@@ -1941,1 +1938,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -1945,1 +1942,1 @@\n-                int x = (int) hs.get(am, methodType(type, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, Class.class)).\n@@ -1953,1 +1950,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class)).\n@@ -1958,1 +1955,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, int.class)).\n@@ -1962,1 +1959,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class)).\n@@ -1967,1 +1964,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -1971,1 +1968,1 @@\n-                int x = (int) hs.get(am, methodType(type, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, Class.class)).\n@@ -1979,1 +1976,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class)).\n@@ -1984,1 +1981,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, int.class)).\n@@ -1988,1 +1985,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int.class)).\n@@ -1993,1 +1990,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -1997,1 +1994,1 @@\n-                int x = (int) hs.get(am, methodType(type, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, Class.class)).\n@@ -2985,1 +2982,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class)).\n@@ -2989,1 +2986,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class, int.class)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class, int.class)).\n@@ -2993,1 +2990,1 @@\n-                int x = (int) hs.get(am, methodType(type, int.class, int.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, int.class)).\n@@ -2997,1 +2994,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, Class.class)).\n@@ -3011,1 +3008,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -3015,1 +3012,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, Class.class)).\n@@ -3023,1 +3020,1 @@\n-                hs.get(am, methodType(void.class, int[].class, int.class, type)).\n+                hs.get(am, methodType(void.class, int[].class, int.class, int.class)).\n@@ -3027,1 +3024,1 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class, int.class)).\n@@ -3035,1 +3032,1 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class, int.class)).\n@@ -3039,1 +3036,1 @@\n-                hs.get(am, methodType(void.class, int[].class, Class.class, type)).\n+                hs.get(am, methodType(void.class, int[].class, Class.class, int.class)).\n@@ -3055,1 +3052,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, int.class, int.class)).\n@@ -3059,1 +3056,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, int.class, int.class)).\n@@ -3063,1 +3060,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, Class.class, int.class)).\n@@ -3067,1 +3064,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, int.class, Class.class)).\n@@ -3071,1 +3068,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, int.class, int.class)).\n@@ -3075,1 +3072,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int[].class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int[].class, Class.class, int.class, int.class)).\n@@ -3084,1 +3081,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, int.class, int.class, Class.class)).\n@@ -3092,1 +3089,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, type, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, int.class, int.class)).\n@@ -3096,1 +3093,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class, int.class, int.class, int.class)).\n@@ -3100,1 +3097,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, Class.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, Class.class, int.class)).\n@@ -3104,1 +3101,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, int.class, Class.class)).\n@@ -3108,1 +3105,1 @@\n-                int x = (int) hs.get(am, methodType(type, int.class, int.class, type, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, int.class, int.class, int.class)).\n@@ -3112,1 +3109,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, Class.class, type, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, Class.class, int.class, int.class)).\n@@ -3117,1 +3114,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, int[].class, int.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, int[].class, int.class, int.class, int.class)).\n@@ -3121,1 +3118,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, int.class, int.class)).\n@@ -3126,1 +3123,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -3130,1 +3127,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, type, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, int.class, int.class, Class.class)).\n@@ -3138,1 +3135,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, int.class)).\n@@ -3142,1 +3139,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class, int.class, int.class)).\n@@ -3146,1 +3143,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, Class.class)).\n@@ -3150,1 +3147,1 @@\n-                int x = (int) hs.get(am, methodType(type, int.class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, int.class, int.class)).\n@@ -3154,1 +3151,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, Class.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, Class.class, int.class)).\n@@ -3159,1 +3156,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, int[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, int[].class, int.class, int.class)).\n@@ -3163,1 +3160,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, int.class)).\n@@ -3168,1 +3165,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -3172,1 +3169,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, int.class, Class.class)).\n@@ -3180,1 +3177,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, int.class)).\n@@ -3184,1 +3181,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class, int.class, int.class)).\n@@ -3188,1 +3185,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, Class.class)).\n@@ -3192,1 +3189,1 @@\n-                int x = (int) hs.get(am, methodType(type, int.class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, int.class, int.class)).\n@@ -3196,1 +3193,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, Class.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, Class.class, int.class)).\n@@ -3201,1 +3198,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, int[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, int[].class, int.class, int.class)).\n@@ -3205,1 +3202,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, int.class)).\n@@ -3210,1 +3207,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -3214,1 +3211,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, int.class, Class.class)).\n@@ -3222,1 +3219,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, int.class)).\n@@ -3226,1 +3223,1 @@\n-                int x = (int) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, Class.class, int.class, int.class)).\n@@ -3230,1 +3227,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, Class.class)).\n@@ -3234,1 +3231,1 @@\n-                int x = (int) hs.get(am, methodType(type, int.class, int.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int.class, int.class, int.class)).\n@@ -3238,1 +3235,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, Class.class, type)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, Class.class, int.class)).\n@@ -3243,1 +3240,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, int[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, int[].class, int.class, int.class)).\n@@ -3247,1 +3244,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, int[].class, int.class, int.class)).\n@@ -3252,1 +3249,1 @@\n-                int x = (int) hs.get(am, methodType(type)).\n+                int x = (int) hs.get(am, methodType(int.class)).\n@@ -3256,1 +3253,1 @@\n-                int x = (int) hs.get(am, methodType(type, int[].class, int.class, type, Class.class)).\n+                int x = (int) hs.get(am, methodType(int.class, int[].class, int.class, int.class, Class.class)).\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeInt.java","additions":133,"deletions":136,"binary":false,"changes":269,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypeLong.java\n@@ -34,1 +33,1 @@\n-*\/\n+ *\/\n@@ -51,2 +50,0 @@\n-    static final Class<?> type = long.class;\n-\n@@ -74,1 +71,1 @@\n-                VarHandleTestMethodTypeLong.class, \"final_v\", type);\n+                VarHandleTestMethodTypeLong.class, \"final_v\", long.class);\n@@ -77,1 +74,1 @@\n-                VarHandleTestMethodTypeLong.class, \"v\", type);\n+                VarHandleTestMethodTypeLong.class, \"v\", long.class);\n@@ -80,1 +77,1 @@\n-            VarHandleTestMethodTypeLong.class, \"static_final_v\", type);\n+            VarHandleTestMethodTypeLong.class, \"static_final_v\", long.class);\n@@ -83,1 +80,1 @@\n-            VarHandleTestMethodTypeLong.class, \"static_v\", type);\n+            VarHandleTestMethodTypeLong.class, \"static_v\", long.class);\n@@ -1011,1 +1008,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class)).\n@@ -1015,1 +1012,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class)).\n@@ -1019,1 +1016,1 @@\n-                long x = (long) hs.get(am, methodType(type, int.class)).\n+                long x = (long) hs.get(am, methodType(long.class, int.class)).\n@@ -1033,1 +1030,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -1037,1 +1034,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, Class.class)).\n@@ -1045,1 +1042,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeLong.class, type)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1049,1 +1046,1 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, long.class)).\n@@ -1057,1 +1054,1 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, long.class)).\n@@ -1066,1 +1063,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeLong.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeLong.class, long.class, Class.class)).\n@@ -1074,1 +1071,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, long.class, long.class)).\n@@ -1078,1 +1075,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, long.class, long.class)).\n@@ -1082,1 +1079,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, Class.class, long.class)).\n@@ -1086,1 +1083,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, long.class, Class.class)).\n@@ -1090,1 +1087,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , long.class, long.class)).\n@@ -1099,1 +1096,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, long.class, long.class, Class.class)).\n@@ -1106,1 +1103,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, type, type)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, long.class, long.class)).\n@@ -1110,1 +1107,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class, type, type)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class, long.class, long.class)).\n@@ -1114,1 +1111,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, Class.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, Class.class, long.class)).\n@@ -1118,1 +1115,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, long.class, Class.class)).\n@@ -1122,1 +1119,1 @@\n-                long x = (long) hs.get(am, methodType(type, int.class , type, type)).\n+                long x = (long) hs.get(am, methodType(long.class, int.class , long.class, long.class)).\n@@ -1127,1 +1124,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeLong.class , type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeLong.class , long.class, long.class)).\n@@ -1131,1 +1128,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class , type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class , long.class, long.class)).\n@@ -1136,1 +1133,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -1140,1 +1137,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, type, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, long.class, long.class, Class.class)).\n@@ -1147,1 +1144,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1151,1 +1148,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class, long.class)).\n@@ -1155,1 +1152,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, Class.class)).\n@@ -1159,1 +1156,1 @@\n-                long x = (long) hs.get(am, methodType(type, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, int.class, long.class)).\n@@ -1164,1 +1161,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeLong.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1168,1 +1165,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1173,1 +1170,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -1177,1 +1174,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1184,1 +1181,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1188,1 +1185,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class, long.class)).\n@@ -1192,1 +1189,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, Class.class)).\n@@ -1196,1 +1193,1 @@\n-                long x = (long) hs.get(am, methodType(type, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, int.class, long.class)).\n@@ -1201,1 +1198,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeLong.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1205,1 +1202,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1210,1 +1207,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -1214,1 +1211,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1221,1 +1218,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1225,1 +1222,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class, long.class)).\n@@ -1229,1 +1226,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, Class.class)).\n@@ -1233,1 +1230,1 @@\n-                long x = (long) hs.get(am, methodType(type, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, int.class, long.class)).\n@@ -1238,1 +1235,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeLong.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1242,1 +1239,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1247,1 +1244,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -1251,1 +1248,1 @@\n-                long x = (long) hs.get(am, methodType(type, VarHandleTestMethodTypeLong.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, VarHandleTestMethodTypeLong.class, long.class)).\n@@ -1869,1 +1866,1 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, long.class, Class.class)).\n@@ -1876,1 +1873,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, long.class)).\n@@ -1880,1 +1877,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, long.class, Class.class)).\n@@ -1889,1 +1886,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, long.class, long.class, Class.class)).\n@@ -1897,1 +1894,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class, long.class)).\n@@ -1901,1 +1898,1 @@\n-                long x = (long) hs.get(am, methodType(type, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long.class, Class.class)).\n@@ -1906,1 +1903,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, long.class, long.class)).\n@@ -1910,1 +1907,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, long.class, long.class)).\n@@ -1915,1 +1912,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -1919,1 +1916,1 @@\n-                long x = (long) hs.get(am, methodType(type, type, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long.class, long.class, Class.class)).\n@@ -1927,1 +1924,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class)).\n@@ -1932,1 +1929,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, long.class)).\n@@ -1936,1 +1933,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, long.class)).\n@@ -1941,1 +1938,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -1945,1 +1942,1 @@\n-                long x = (long) hs.get(am, methodType(type, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long.class, Class.class)).\n@@ -1953,1 +1950,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class)).\n@@ -1958,1 +1955,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, long.class)).\n@@ -1962,1 +1959,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, long.class)).\n@@ -1967,1 +1964,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -1971,1 +1968,1 @@\n-                long x = (long) hs.get(am, methodType(type, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long.class, Class.class)).\n@@ -1979,1 +1976,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class)).\n@@ -1984,1 +1981,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, long.class)).\n@@ -1988,1 +1985,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, long.class)).\n@@ -1993,1 +1990,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -1997,1 +1994,1 @@\n-                long x = (long) hs.get(am, methodType(type, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long.class, Class.class)).\n@@ -2985,1 +2982,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class)).\n@@ -2989,1 +2986,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class, int.class)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class, int.class)).\n@@ -2993,1 +2990,1 @@\n-                long x = (long) hs.get(am, methodType(type, int.class, int.class)).\n+                long x = (long) hs.get(am, methodType(long.class, int.class, int.class)).\n@@ -2997,1 +2994,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, Class.class)).\n@@ -3011,1 +3008,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -3015,1 +3012,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, Class.class)).\n@@ -3023,1 +3020,1 @@\n-                hs.get(am, methodType(void.class, long[].class, int.class, type)).\n+                hs.get(am, methodType(void.class, long[].class, int.class, long.class)).\n@@ -3027,1 +3024,1 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class, long.class)).\n@@ -3035,1 +3032,1 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class, long.class)).\n@@ -3039,1 +3036,1 @@\n-                hs.get(am, methodType(void.class, long[].class, Class.class, type)).\n+                hs.get(am, methodType(void.class, long[].class, Class.class, long.class)).\n@@ -3055,1 +3052,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, long.class, long.class)).\n@@ -3059,1 +3056,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, long.class, long.class)).\n@@ -3063,1 +3060,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, Class.class, long.class)).\n@@ -3067,1 +3064,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, long.class, Class.class)).\n@@ -3071,1 +3068,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, long.class, long.class)).\n@@ -3075,1 +3072,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, long[].class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, long[].class, Class.class, long.class, long.class)).\n@@ -3084,1 +3081,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, long.class, long.class, Class.class)).\n@@ -3092,1 +3089,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, type, type)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, long.class, long.class)).\n@@ -3096,1 +3093,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class, int.class, long.class, long.class)).\n@@ -3100,1 +3097,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, Class.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, Class.class, long.class)).\n@@ -3104,1 +3101,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, long.class, Class.class)).\n@@ -3108,1 +3105,1 @@\n-                long x = (long) hs.get(am, methodType(type, int.class, int.class, type, type)).\n+                long x = (long) hs.get(am, methodType(long.class, int.class, int.class, long.class, long.class)).\n@@ -3112,1 +3109,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, Class.class, type, type)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, Class.class, long.class, long.class)).\n@@ -3117,1 +3114,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, long[].class, int.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, long[].class, int.class, long.class, long.class)).\n@@ -3121,1 +3118,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, long.class, long.class)).\n@@ -3126,1 +3123,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -3130,1 +3127,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, type, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, long.class, long.class, Class.class)).\n@@ -3138,1 +3135,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, long.class)).\n@@ -3142,1 +3139,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class, int.class, long.class)).\n@@ -3146,1 +3143,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, Class.class)).\n@@ -3150,1 +3147,1 @@\n-                long x = (long) hs.get(am, methodType(type, int.class, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, int.class, int.class, long.class)).\n@@ -3154,1 +3151,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, Class.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, Class.class, long.class)).\n@@ -3159,1 +3156,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, long[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, long[].class, int.class, long.class)).\n@@ -3163,1 +3160,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, long.class)).\n@@ -3168,1 +3165,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -3172,1 +3169,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, long.class, Class.class)).\n@@ -3180,1 +3177,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, long.class)).\n@@ -3184,1 +3181,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class, int.class, long.class)).\n@@ -3188,1 +3185,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, Class.class)).\n@@ -3192,1 +3189,1 @@\n-                long x = (long) hs.get(am, methodType(type, int.class, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, int.class, int.class, long.class)).\n@@ -3196,1 +3193,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, Class.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, Class.class, long.class)).\n@@ -3201,1 +3198,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, long[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, long[].class, int.class, long.class)).\n@@ -3205,1 +3202,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, long.class)).\n@@ -3210,1 +3207,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -3214,1 +3211,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, long.class, Class.class)).\n@@ -3222,1 +3219,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, long.class)).\n@@ -3226,1 +3223,1 @@\n-                long x = (long) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, Class.class, int.class, long.class)).\n@@ -3230,1 +3227,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, Class.class)).\n@@ -3234,1 +3231,1 @@\n-                long x = (long) hs.get(am, methodType(type, int.class, int.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, int.class, int.class, long.class)).\n@@ -3238,1 +3235,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, Class.class, type)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, Class.class, long.class)).\n@@ -3243,1 +3240,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, long[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, long[].class, int.class, long.class)).\n@@ -3247,1 +3244,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, long[].class, int.class, long.class)).\n@@ -3252,1 +3249,1 @@\n-                long x = (long) hs.get(am, methodType(type)).\n+                long x = (long) hs.get(am, methodType(long.class)).\n@@ -3256,1 +3253,1 @@\n-                long x = (long) hs.get(am, methodType(type, long[].class, int.class, type, Class.class)).\n+                long x = (long) hs.get(am, methodType(long.class, long[].class, int.class, long.class, Class.class)).\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeLong.java","additions":133,"deletions":136,"binary":false,"changes":269,"status":"modified"},{"patch":"@@ -1,2064 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ -- This file was mechanically generated: Do not edit! -- \/\/\n-\n-\/*\n- * @test\n- * @bug 8156486\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypePoint.java\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses VarHandleTestMethodTypePoint\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=true -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true VarHandleTestMethodTypePoint\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=false VarHandleTestMethodTypePoint\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true VarHandleTestMethodTypePoint\n-*\/\n-\n-import org.testng.annotations.BeforeClass;\n-import org.testng.annotations.DataProvider;\n-import org.testng.annotations.Test;\n-\n-import java.lang.invoke.MethodHandles;\n-import java.lang.invoke.VarHandle;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-\n-import jdk.internal.value.PrimitiveClass;\n-import static org.testng.Assert.*;\n-\n-import static java.lang.invoke.MethodType.*;\n-\n-public class VarHandleTestMethodTypePoint extends VarHandleBaseTest {\n-    static final Class<?> type = PrimitiveClass.asValueType(Point.class);\n-\n-    static final Point static_final_v = Point.getInstance(1,1);\n-\n-    static Point static_v = Point.getInstance(1,1);\n-\n-    final Point final_v = Point.getInstance(1,1);\n-\n-    Point v = Point.getInstance(1,1);\n-\n-    VarHandle vhFinalField;\n-\n-    VarHandle vhField;\n-\n-    VarHandle vhStaticField;\n-\n-    VarHandle vhStaticFinalField;\n-\n-    VarHandle vhArray;\n-\n-    @BeforeClass\n-    public void setup() throws Exception {\n-        vhFinalField = MethodHandles.lookup().findVarHandle(\n-                VarHandleTestMethodTypePoint.class, \"final_v\", type);\n-\n-        vhField = MethodHandles.lookup().findVarHandle(\n-                VarHandleTestMethodTypePoint.class, \"v\", type);\n-\n-        vhStaticFinalField = MethodHandles.lookup().findStaticVarHandle(\n-            VarHandleTestMethodTypePoint.class, \"static_final_v\", type);\n-\n-        vhStaticField = MethodHandles.lookup().findStaticVarHandle(\n-            VarHandleTestMethodTypePoint.class, \"static_v\", type);\n-\n-        vhArray = MethodHandles.arrayElementVarHandle(Point[].class);\n-    }\n-\n-    @DataProvider\n-    public Object[][] accessTestCaseProvider() throws Exception {\n-        List<AccessTestCase<?>> cases = new ArrayList<>();\n-\n-        cases.add(new VarHandleAccessTestCase(\"Instance field\",\n-                                              vhField, vh -> testInstanceFieldWrongMethodType(this, vh),\n-                                              false));\n-\n-        cases.add(new VarHandleAccessTestCase(\"Static field\",\n-                                              vhStaticField, VarHandleTestMethodTypePoint::testStaticFieldWrongMethodType,\n-                                              false));\n-\n-        cases.add(new VarHandleAccessTestCase(\"Array\",\n-                                              vhArray, VarHandleTestMethodTypePoint::testArrayWrongMethodType,\n-                                              false));\n-\n-        for (VarHandleToMethodHandle f : VarHandleToMethodHandle.values()) {\n-            cases.add(new MethodHandleAccessTestCase(\"Instance field\",\n-                                                     vhField, f, hs -> testInstanceFieldWrongMethodType(this, hs),\n-                                                     false));\n-\n-            cases.add(new MethodHandleAccessTestCase(\"Static field\",\n-                                                     vhStaticField, f, VarHandleTestMethodTypePoint::testStaticFieldWrongMethodType,\n-                                                     false));\n-\n-            cases.add(new MethodHandleAccessTestCase(\"Array\",\n-                                                     vhArray, f, VarHandleTestMethodTypePoint::testArrayWrongMethodType,\n-                                                     false));\n-        }\n-        \/\/ Work around issue with jtreg summary reporting which truncates\n-        \/\/ the String result of Object.toString to 30 characters, hence\n-        \/\/ the first dummy argument\n-        return cases.stream().map(tc -> new Object[]{tc.toString(), tc}).toArray(Object[][]::new);\n-    }\n-\n-    @Test(dataProvider = \"accessTestCaseProvider\")\n-    public <T> void testAccess(String desc, AccessTestCase<T> atc) throws Throwable {\n-        T t = atc.get();\n-        int iters = atc.requiresLoop() ? ITERS : 1;\n-        for (int c = 0; c < iters; c++) {\n-            atc.testAccess(t);\n-        }\n-    }\n-\n-\n-    static void testInstanceFieldWrongMethodType(VarHandleTestMethodTypePoint recv, VarHandle vh) throws Throwable {\n-        \/\/ Get\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.get(null);\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.get(Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            Point x = (Point) vh.get(0);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.get(recv);\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.get(recv);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.get();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.get(recv, Void.class);\n-        });\n-\n-\n-        \/\/ Set\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            vh.set(null, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            vh.set(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.set(recv, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            vh.set(0, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.set();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.set(recv, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetVolatile\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.getVolatile(null);\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.getVolatile(Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            Point x = (Point) vh.getVolatile(0);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.getVolatile(recv);\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getVolatile(recv);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getVolatile();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getVolatile(recv, Void.class);\n-        });\n-\n-\n-        \/\/ SetVolatile\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            vh.setVolatile(null, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            vh.setVolatile(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.setVolatile(recv, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            vh.setVolatile(0, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.setVolatile();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.setVolatile(recv, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetOpaque\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.getOpaque(null);\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.getOpaque(Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            Point x = (Point) vh.getOpaque(0);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.getOpaque(recv);\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getOpaque(recv);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getOpaque();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getOpaque(recv, Void.class);\n-        });\n-\n-\n-        \/\/ SetOpaque\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            vh.setOpaque(null, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            vh.setOpaque(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.setOpaque(recv, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            vh.setOpaque(0, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.setOpaque();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.setOpaque(recv, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetAcquire\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.getAcquire(null);\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.getAcquire(Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            Point x = (Point) vh.getAcquire(0);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.getAcquire(recv);\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAcquire(recv);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAcquire(recv, Void.class);\n-        });\n-\n-\n-        \/\/ SetRelease\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            vh.setRelease(null, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            vh.setRelease(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.setRelease(recv, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            vh.setRelease(0, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.setRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.setRelease(recv, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndSet\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            boolean r = vh.compareAndSet(null, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            boolean r = vh.compareAndSet(Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.compareAndSet(recv, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.compareAndSet(recv, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            boolean r = vh.compareAndSet(0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.compareAndSet();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.compareAndSet(recv, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSet\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            boolean r = vh.weakCompareAndSetPlain(null, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSetPlain(Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSetPlain(recv, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSetPlain(recv, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            boolean r = vh.weakCompareAndSetPlain(0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSetPlain();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSetPlain(recv, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSetVolatile\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            boolean r = vh.weakCompareAndSet(null, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSet(Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSet(recv, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSet(recv, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            boolean r = vh.weakCompareAndSet(0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSet();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSet(recv, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSetAcquire\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            boolean r = vh.weakCompareAndSetAcquire(null, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSetAcquire(Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSetAcquire(recv, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSetAcquire(recv, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            boolean r = vh.weakCompareAndSetAcquire(0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSetAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSetAcquire(recv, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSetRelease\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            boolean r = vh.weakCompareAndSetRelease(null, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSetRelease(Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSetRelease(recv, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSetRelease(recv, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            boolean r = vh.weakCompareAndSetRelease(0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSetRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSetRelease(recv, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndExchange\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.compareAndExchange(null, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.compareAndExchange(Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            Point x = (Point) vh.compareAndExchange(recv, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            Point x = (Point) vh.compareAndExchange(recv, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ reciever primitive class\n-            Point x = (Point) vh.compareAndExchange(0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.compareAndExchange(recv, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.compareAndExchange(recv, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.compareAndExchange();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.compareAndExchange(recv, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndExchangeAcquire\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.compareAndExchangeAcquire(null, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.compareAndExchangeAcquire(Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            Point x = (Point) vh.compareAndExchangeAcquire(recv, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            Point x = (Point) vh.compareAndExchangeAcquire(recv, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ reciever primitive class\n-            Point x = (Point) vh.compareAndExchangeAcquire(0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.compareAndExchangeAcquire(recv, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.compareAndExchangeAcquire(recv, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.compareAndExchangeAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.compareAndExchangeAcquire(recv, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndExchangeRelease\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.compareAndExchangeRelease(null, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.compareAndExchangeRelease(Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            Point x = (Point) vh.compareAndExchangeRelease(recv, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            Point x = (Point) vh.compareAndExchangeRelease(recv, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ reciever primitive class\n-            Point x = (Point) vh.compareAndExchangeRelease(0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.compareAndExchangeRelease(recv, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.compareAndExchangeRelease(recv, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.compareAndExchangeRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.compareAndExchangeRelease(recv, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetAndSet\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.getAndSet(null, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.getAndSet(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            Point x = (Point) vh.getAndSet(recv, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ reciever primitive class\n-            Point x = (Point) vh.getAndSet(0, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.getAndSet(recv, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAndSet(recv, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAndSet();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAndSet(recv, Point.getInstance(1,1), Void.class);\n-        });\n-\n-        \/\/ GetAndSetAcquire\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.getAndSetAcquire(null, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.getAndSetAcquire(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            Point x = (Point) vh.getAndSetAcquire(recv, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ reciever primitive class\n-            Point x = (Point) vh.getAndSetAcquire(0, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.getAndSetAcquire(recv, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAndSetAcquire(recv, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAndSetAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAndSetAcquire(recv, Point.getInstance(1,1), Void.class);\n-        });\n-\n-        \/\/ GetAndSetRelease\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.getAndSetRelease(null, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            Point x = (Point) vh.getAndSetRelease(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            Point x = (Point) vh.getAndSetRelease(recv, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ reciever primitive class\n-            Point x = (Point) vh.getAndSetRelease(0, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.getAndSetRelease(recv, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAndSetRelease(recv, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAndSetRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAndSetRelease(recv, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-    }\n-\n-    static void testInstanceFieldWrongMethodType(VarHandleTestMethodTypePoint recv, Handles hs) throws Throwable {\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET)) {\n-            \/\/ Incorrect argument types\n-            checkNPE(() -> { \/\/ null receiver\n-                Point x = (Point) hs.get(am, methodType(type, VarHandleTestMethodTypePoint.class)).\n-                    invokeExact((VarHandleTestMethodTypePoint) null);\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ receiver reference class\n-                Point x = (Point) hs.get(am, methodType(type, Class.class)).\n-                    invokeExact(Void.class);\n-            });\n-            checkWMTE(() -> { \/\/ receiver primitive class\n-                Point x = (Point) hs.get(am, methodType(type, int.class)).\n-                    invokeExact(0);\n-            });\n-            \/\/ Incorrect return type\n-            hs.checkWMTEOrCCE(() -> { \/\/ reference class\n-                Void x = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypePoint.class)).\n-                    invokeExact(recv);\n-            });\n-            checkWMTE(() -> { \/\/ primitive class\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypePoint.class)).\n-                    invokeExact(recv);\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                Point x = (Point) hs.get(am, methodType(type)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                Point x = (Point) hs.get(am, methodType(type, VarHandleTestMethodTypePoint.class, Class.class)).\n-                    invokeExact(recv, Void.class);\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.SET)) {\n-            \/\/ Incorrect argument types\n-            checkNPE(() -> { \/\/ null receiver\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypePoint.class, type)).\n-                    invokeExact((VarHandleTestMethodTypePoint) null, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ receiver reference class\n-                hs.get(am, methodType(void.class, Class.class, type)).\n-                    invokeExact(Void.class, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ value reference class\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypePoint.class, Class.class)).\n-                    invokeExact(recv, Void.class);\n-            });\n-            checkWMTE(() -> { \/\/ receiver primitive class\n-                hs.get(am, methodType(void.class, int.class, type)).\n-                    invokeExact(0, Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                hs.get(am, methodType(void.class)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypePoint.class, type, Class.class)).\n-                    invokeExact(recv, Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.COMPARE_AND_SET)) {\n-            \/\/ Incorrect argument types\n-            checkNPE(() -> { \/\/ null receiver\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypePoint.class, type, type)).\n-                    invokeExact((VarHandleTestMethodTypePoint) null, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ receiver reference class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n-                    invokeExact(Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ expected reference class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypePoint.class, Class.class, type)).\n-                    invokeExact(recv, Void.class, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ actual reference class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypePoint.class, type, Class.class)).\n-                    invokeExact(recv, Point.getInstance(1,1), Void.class);\n-            });\n-            checkWMTE(() -> { \/\/ receiver primitive class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n-                    invokeExact(0, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypePoint.class, type, type, Class.class)).\n-                    invokeExact(recv, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.COMPARE_AND_EXCHANGE)) {\n-            checkNPE(() -> { \/\/ null receiver\n-                Point x = (Point) hs.get(am, methodType(type, VarHandleTestMethodTypePoint.class, type, type)).\n-                    invokeExact((VarHandleTestMethodTypePoint) null, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ receiver reference class\n-                Point x = (Point) hs.get(am, methodType(type, Class.class, type, type)).\n-                    invokeExact(Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ expected reference class\n-                Point x = (Point) hs.get(am, methodType(type, VarHandleTestMethodTypePoint.class, Class.class, type)).\n-                    invokeExact(recv, Void.class, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ actual reference class\n-                Point x = (Point) hs.get(am, methodType(type, VarHandleTestMethodTypePoint.class, type, Class.class)).\n-                    invokeExact(recv, Point.getInstance(1,1), Void.class);\n-            });\n-            checkWMTE(() -> { \/\/ reciever primitive class\n-                Point x = (Point) hs.get(am, methodType(type, int.class , type, type)).\n-                    invokeExact(0, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect return type\n-            hs.checkWMTEOrCCE(() -> { \/\/ reference class\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypePoint.class , type, type)).\n-                    invokeExact(recv, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            checkWMTE(() -> { \/\/ primitive class\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypePoint.class , type, type)).\n-                    invokeExact(recv, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                Point x = (Point) hs.get(am, methodType(type)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                Point x = (Point) hs.get(am, methodType(type, VarHandleTestMethodTypePoint.class, type, type, Class.class)).\n-                    invokeExact(recv, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET_AND_SET)) {\n-            checkNPE(() -> { \/\/ null receiver\n-                Point x = (Point) hs.get(am, methodType(type, VarHandleTestMethodTypePoint.class, type)).\n-                    invokeExact((VarHandleTestMethodTypePoint) null, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ receiver reference class\n-                Point x = (Point) hs.get(am, methodType(type, Class.class, type)).\n-                    invokeExact(Void.class, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ value reference class\n-                Point x = (Point) hs.get(am, methodType(type, VarHandleTestMethodTypePoint.class, Class.class)).\n-                    invokeExact(recv, Void.class);\n-            });\n-            checkWMTE(() -> { \/\/ reciever primitive class\n-                Point x = (Point) hs.get(am, methodType(type, int.class, type)).\n-                    invokeExact(0, Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect return type\n-            hs.checkWMTEOrCCE(() -> { \/\/ reference class\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypePoint.class, type)).\n-                    invokeExact(recv, Point.getInstance(1,1));\n-            });\n-            checkWMTE(() -> { \/\/ primitive class\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypePoint.class, type)).\n-                    invokeExact(recv, Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                Point x = (Point) hs.get(am, methodType(type)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                Point x = (Point) hs.get(am, methodType(type, VarHandleTestMethodTypePoint.class, type)).\n-                    invokeExact(recv, Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-\n-\n-    }\n-\n-\n-    static void testStaticFieldWrongMethodType(VarHandle vh) throws Throwable {\n-        \/\/ Get\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.get();\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.get();\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.get(Void.class);\n-        });\n-\n-\n-        \/\/ Set\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.set(Void.class);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.set();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.set(Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetVolatile\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.getVolatile();\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getVolatile();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getVolatile(Void.class);\n-        });\n-\n-\n-        \/\/ SetVolatile\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.setVolatile(Void.class);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.setVolatile();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.setVolatile(Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetOpaque\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.getOpaque();\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getOpaque();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getOpaque(Void.class);\n-        });\n-\n-\n-        \/\/ SetOpaque\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.setOpaque(Void.class);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.setOpaque();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.setOpaque(Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetAcquire\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.getAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAcquire(Void.class);\n-        });\n-\n-\n-        \/\/ SetRelease\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.setRelease(Void.class);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.setRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.setRelease(Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndSet\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.compareAndSet(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.compareAndSet(Point.getInstance(1,1), Void.class);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.compareAndSet();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.compareAndSet(Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSet\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSetPlain(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSetPlain(Point.getInstance(1,1), Void.class);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSetPlain();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSetPlain(Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSetVolatile\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSet(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSet(Point.getInstance(1,1), Void.class);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSet();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSet(Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSetAcquire\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSetAcquire(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSetAcquire(Point.getInstance(1,1), Void.class);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSetAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSetAcquire(Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSetRelease\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSetRelease(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSetRelease(Point.getInstance(1,1), Void.class);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSetRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSetRelease(Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndExchange\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ expected reference class\n-            Point x = (Point) vh.compareAndExchange(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            Point x = (Point) vh.compareAndExchange(Point.getInstance(1,1), Void.class);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.compareAndExchange(Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.compareAndExchange(Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.compareAndExchange();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.compareAndExchange(Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndExchangeAcquire\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ expected reference class\n-            Point x = (Point) vh.compareAndExchangeAcquire(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            Point x = (Point) vh.compareAndExchangeAcquire(Point.getInstance(1,1), Void.class);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.compareAndExchangeAcquire(Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.compareAndExchangeAcquire(Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.compareAndExchangeAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.compareAndExchangeAcquire(Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndExchangeRelease\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ expected reference class\n-            Point x = (Point) vh.compareAndExchangeRelease(Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            Point x = (Point) vh.compareAndExchangeRelease(Point.getInstance(1,1), Void.class);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.compareAndExchangeRelease(Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.compareAndExchangeRelease(Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.compareAndExchangeRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.compareAndExchangeRelease(Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetAndSet\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ value reference class\n-            Point x = (Point) vh.getAndSet(Void.class);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.getAndSet(Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAndSet(Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAndSet();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAndSet(Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetAndSetAcquire\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ value reference class\n-            Point x = (Point) vh.getAndSetAcquire(Void.class);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.getAndSetAcquire(Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAndSetAcquire(Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAndSetAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAndSetAcquire(Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetAndSetRelease\n-        \/\/ Incorrect argument types\n-        checkCCE(() -> { \/\/ value reference class\n-            Point x = (Point) vh.getAndSetRelease(Void.class);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.getAndSetRelease(Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAndSetRelease(Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAndSetRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAndSetRelease(Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-    }\n-\n-    static void testStaticFieldWrongMethodType(Handles hs) throws Throwable {\n-        int i = 0;\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET)) {\n-            \/\/ Incorrect return type\n-            hs.checkWMTEOrCCE(() -> { \/\/ reference class\n-                Void x = (Void) hs.get(am, methodType(Void.class)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ primitive class\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class)).\n-                    invokeExact();\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ >\n-                Point x = (Point) hs.get(am, methodType(Class.class)).\n-                    invokeExact(Void.class);\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.SET)) {\n-            hs.checkWMTEOrCCE(() -> { \/\/ value reference class\n-                hs.get(am, methodType(void.class, Class.class)).\n-                    invokeExact(Void.class);\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                hs.get(am, methodType(void.class)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                hs.get(am, methodType(void.class, type, Class.class)).\n-                    invokeExact(Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.COMPARE_AND_SET)) {\n-            \/\/ Incorrect argument types\n-            hs.checkWMTEOrCCE(() -> { \/\/ expected reference class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n-                    invokeExact(Void.class, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ actual reference class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n-                    invokeExact(Point.getInstance(1,1), Void.class);\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n-                    invokeExact(Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.COMPARE_AND_EXCHANGE)) {\n-            \/\/ Incorrect argument types\n-            hs.checkWMTEOrCCE(() -> { \/\/ expected reference class\n-                Point x = (Point) hs.get(am, methodType(type, Class.class, type)).\n-                    invokeExact(Void.class, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ actual reference class\n-                Point x = (Point) hs.get(am, methodType(type, type, Class.class)).\n-                    invokeExact(Point.getInstance(1,1), Void.class);\n-            });\n-            \/\/ Incorrect return type\n-            hs.checkWMTEOrCCE(() -> { \/\/ reference class\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n-                    invokeExact(Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            checkWMTE(() -> { \/\/ primitive class\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type, type)).\n-                    invokeExact(Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                Point x = (Point) hs.get(am, methodType(type)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                Point x = (Point) hs.get(am, methodType(type, type, type, Class.class)).\n-                    invokeExact(Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET_AND_SET)) {\n-            \/\/ Incorrect argument types\n-            hs.checkWMTEOrCCE(() -> { \/\/ value reference class\n-                Point x = (Point) hs.get(am, methodType(type, Class.class)).\n-                    invokeExact(Void.class);\n-            });\n-            \/\/ Incorrect return type\n-            hs.checkWMTEOrCCE(() -> { \/\/ reference class\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n-                    invokeExact(Point.getInstance(1,1));\n-            });\n-            checkWMTE(() -> { \/\/ primitive class\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n-                    invokeExact(Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                Point x = (Point) hs.get(am, methodType(type)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                Point x = (Point) hs.get(am, methodType(type, type, Class.class)).\n-                    invokeExact(Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-\n-\n-    }\n-\n-\n-    static void testArrayWrongMethodType(VarHandle vh) throws Throwable {\n-        Point[] array = new Point[10];\n-        Arrays.fill(array, Point.getInstance(1,1));\n-\n-        \/\/ Get\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            Point x = (Point) vh.get(null, 0);\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            Point x = (Point) vh.get(Void.class, 0);\n-        });\n-        checkWMTE(() -> { \/\/ array primitive class\n-            Point x = (Point) vh.get(0, 0);\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            Point x = (Point) vh.get(array, Void.class);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.get(array, 0);\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.get(array, 0);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.get();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.get(array, 0, Void.class);\n-        });\n-\n-\n-        \/\/ Set\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            vh.set(null, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            vh.set(Void.class, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.set(array, 0, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            vh.set(0, 0, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            vh.set(array, Void.class, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.set();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.set(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetVolatile\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            Point x = (Point) vh.getVolatile(null, 0);\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            Point x = (Point) vh.getVolatile(Void.class, 0);\n-        });\n-        checkWMTE(() -> { \/\/ array primitive class\n-            Point x = (Point) vh.getVolatile(0, 0);\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            Point x = (Point) vh.getVolatile(array, Void.class);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.getVolatile(array, 0);\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getVolatile(array, 0);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getVolatile();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getVolatile(array, 0, Void.class);\n-        });\n-\n-\n-        \/\/ SetVolatile\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            vh.setVolatile(null, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            vh.setVolatile(Void.class, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.setVolatile(array, 0, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            vh.setVolatile(0, 0, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            vh.setVolatile(array, Void.class, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.setVolatile();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.setVolatile(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetOpaque\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            Point x = (Point) vh.getOpaque(null, 0);\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            Point x = (Point) vh.getOpaque(Void.class, 0);\n-        });\n-        checkWMTE(() -> { \/\/ array primitive class\n-            Point x = (Point) vh.getOpaque(0, 0);\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            Point x = (Point) vh.getOpaque(array, Void.class);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.getOpaque(array, 0);\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getOpaque(array, 0);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getOpaque();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getOpaque(array, 0, Void.class);\n-        });\n-\n-\n-        \/\/ SetOpaque\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            vh.setOpaque(null, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            vh.setOpaque(Void.class, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.setOpaque(array, 0, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            vh.setOpaque(0, 0, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            vh.setOpaque(array, Void.class, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.setOpaque();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.setOpaque(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetAcquire\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            Point x = (Point) vh.getAcquire(null, 0);\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            Point x = (Point) vh.getAcquire(Void.class, 0);\n-        });\n-        checkWMTE(() -> { \/\/ array primitive class\n-            Point x = (Point) vh.getAcquire(0, 0);\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            Point x = (Point) vh.getAcquire(array, Void.class);\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void x = (Void) vh.getAcquire(array, 0);\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAcquire(array, 0);\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAcquire(array, 0, Void.class);\n-        });\n-\n-\n-        \/\/ SetRelease\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            vh.setRelease(null, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            vh.setRelease(Void.class, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            vh.setRelease(array, 0, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            vh.setRelease(0, 0, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            vh.setRelease(array, Void.class, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            vh.setRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            vh.setRelease(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndSet\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            boolean r = vh.compareAndSet(null, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            boolean r = vh.compareAndSet(Void.class, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.compareAndSet(array, 0, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.compareAndSet(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            boolean r = vh.compareAndSet(0, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            boolean r = vh.compareAndSet(array, Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.compareAndSet();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.compareAndSet(array, 0, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSet\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            boolean r = vh.weakCompareAndSetPlain(null, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSetPlain(Void.class, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSetPlain(array, 0, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSetPlain(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            boolean r = vh.weakCompareAndSetPlain(0, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            boolean r = vh.weakCompareAndSetPlain(array, Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSetPlain();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSetPlain(array, 0, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSetVolatile\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            boolean r = vh.weakCompareAndSet(null, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSet(Void.class, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSet(array, 0, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSet(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            boolean r = vh.weakCompareAndSet(0, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            boolean r = vh.weakCompareAndSet(array, Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSet();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSet(array, 0, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSetAcquire\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            boolean r = vh.weakCompareAndSetAcquire(null, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSetAcquire(Void.class, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSetAcquire(array, 0, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSetAcquire(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            boolean r = vh.weakCompareAndSetAcquire(0, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            boolean r = vh.weakCompareAndSetAcquire(array, Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSetAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSetAcquire(array, 0, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ WeakCompareAndSetRelease\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            boolean r = vh.weakCompareAndSetRelease(null, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ receiver reference class\n-            boolean r = vh.weakCompareAndSetRelease(Void.class, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            boolean r = vh.weakCompareAndSetRelease(array, 0, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            boolean r = vh.weakCompareAndSetRelease(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ receiver primitive class\n-            boolean r = vh.weakCompareAndSetRelease(0, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            boolean r = vh.weakCompareAndSetRelease(array, Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            boolean r = vh.weakCompareAndSetRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            boolean r = vh.weakCompareAndSetRelease(array, 0, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndExchange\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.compareAndExchange(null, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            Point x = (Point) vh.compareAndExchange(Void.class, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            Point x = (Point) vh.compareAndExchange(array, 0, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            Point x = (Point) vh.compareAndExchange(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ array primitive class\n-            Point x = (Point) vh.compareAndExchange(0, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            Point x = (Point) vh.compareAndExchange(array, Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.compareAndExchange(array, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.compareAndExchange(array, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.compareAndExchange();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.compareAndExchange(array, 0, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndExchangeAcquire\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.compareAndExchangeAcquire(null, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            Point x = (Point) vh.compareAndExchangeAcquire(Void.class, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            Point x = (Point) vh.compareAndExchangeAcquire(array, 0, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            Point x = (Point) vh.compareAndExchangeAcquire(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ array primitive class\n-            Point x = (Point) vh.compareAndExchangeAcquire(0, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            Point x = (Point) vh.compareAndExchangeAcquire(array, Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.compareAndExchangeAcquire(array, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.compareAndExchangeAcquire(array, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.compareAndExchangeAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.compareAndExchangeAcquire(array, 0, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ CompareAndExchangeRelease\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null receiver\n-            Point x = (Point) vh.compareAndExchangeRelease(null, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            Point x = (Point) vh.compareAndExchangeRelease(Void.class, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ expected reference class\n-            Point x = (Point) vh.compareAndExchangeRelease(array, 0, Void.class, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ actual reference class\n-            Point x = (Point) vh.compareAndExchangeRelease(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ array primitive class\n-            Point x = (Point) vh.compareAndExchangeRelease(0, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            Point x = (Point) vh.compareAndExchangeRelease(array, Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.compareAndExchangeRelease(array, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.compareAndExchangeRelease(array, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.compareAndExchangeRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.compareAndExchangeRelease(array, 0, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetAndSet\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            Point x = (Point) vh.getAndSet(null, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            Point x = (Point) vh.getAndSet(Void.class, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            Point x = (Point) vh.getAndSet(array, 0, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ reciarrayever primitive class\n-            Point x = (Point) vh.getAndSet(0, 0, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            Point x = (Point) vh.getAndSet(array, Void.class, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.getAndSet(array, 0, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAndSet(array, 0, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAndSet();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAndSet(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetAndSetAcquire\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            Point x = (Point) vh.getAndSetAcquire(null, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            Point x = (Point) vh.getAndSetAcquire(Void.class, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            Point x = (Point) vh.getAndSetAcquire(array, 0, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ reciarrayever primitive class\n-            Point x = (Point) vh.getAndSetAcquire(0, 0, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            Point x = (Point) vh.getAndSetAcquire(array, Void.class, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.getAndSetAcquire(array, 0, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAndSetAcquire(array, 0, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAndSetAcquire();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAndSetAcquire(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-        \/\/ GetAndSetRelease\n-        \/\/ Incorrect argument types\n-        checkNPE(() -> { \/\/ null array\n-            Point x = (Point) vh.getAndSetRelease(null, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ array reference class\n-            Point x = (Point) vh.getAndSetRelease(Void.class, 0, Point.getInstance(1,1));\n-        });\n-        checkCCE(() -> { \/\/ value reference class\n-            Point x = (Point) vh.getAndSetRelease(array, 0, Void.class);\n-        });\n-        checkWMTE(() -> { \/\/ reciarrayever primitive class\n-            Point x = (Point) vh.getAndSetRelease(0, 0, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ index reference class\n-            Point x = (Point) vh.getAndSetRelease(array, Void.class, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect return type\n-        checkCCE(() -> { \/\/ reference class\n-            Void r = (Void) vh.getAndSetRelease(array, 0, Point.getInstance(1,1));\n-        });\n-        checkWMTE(() -> { \/\/ primitive class\n-            boolean x = (boolean) vh.getAndSetRelease(array, 0, Point.getInstance(1,1));\n-        });\n-        \/\/ Incorrect arity\n-        checkWMTE(() -> { \/\/ 0\n-            Point x = (Point) vh.getAndSetRelease();\n-        });\n-        checkWMTE(() -> { \/\/ >\n-            Point x = (Point) vh.getAndSetRelease(array, 0, Point.getInstance(1,1), Void.class);\n-        });\n-\n-\n-    }\n-\n-    static void testArrayWrongMethodType(Handles hs) throws Throwable {\n-        Point[] array = new Point[10];\n-        Arrays.fill(array, Point.getInstance(1,1));\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET)) {\n-            \/\/ Incorrect argument types\n-            checkNPE(() -> { \/\/ null array\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, int.class)).\n-                    invokeExact((Point[]) null, 0);\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ array reference class\n-                Point x = (Point) hs.get(am, methodType(type, Class.class, int.class)).\n-                    invokeExact(Void.class, 0);\n-            });\n-            checkWMTE(() -> { \/\/ array primitive class\n-                Point x = (Point) hs.get(am, methodType(type, int.class, int.class)).\n-                    invokeExact(0, 0);\n-            });\n-            checkWMTE(() -> { \/\/ index reference class\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, Class.class)).\n-                    invokeExact(array, Void.class);\n-            });\n-            \/\/ Incorrect return type\n-            hs.checkWMTEOrCCE(() -> { \/\/ reference class\n-                Void x = (Void) hs.get(am, methodType(Void.class, Point[].class, int.class)).\n-                    invokeExact(array, 0);\n-            });\n-            checkWMTE(() -> { \/\/ primitive class\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, Point[].class, int.class)).\n-                    invokeExact(array, 0);\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                Point x = (Point) hs.get(am, methodType(type)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, int.class, Class.class)).\n-                    invokeExact(array, 0, Void.class);\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.SET)) {\n-            \/\/ Incorrect argument types\n-            checkNPE(() -> { \/\/ null array\n-                hs.get(am, methodType(void.class, Point[].class, int.class, type)).\n-                    invokeExact((Point[]) null, 0, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ array reference class\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n-                    invokeExact(Void.class, 0, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ value reference class\n-                hs.get(am, methodType(void.class, Point[].class, int.class, Class.class)).\n-                    invokeExact(array, 0, Void.class);\n-            });\n-            checkWMTE(() -> { \/\/ receiver primitive class\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n-                    invokeExact(0, 0, Point.getInstance(1,1));\n-            });\n-            checkWMTE(() -> { \/\/ index reference class\n-                hs.get(am, methodType(void.class, Point[].class, Class.class, type)).\n-                    invokeExact(array, Void.class, Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                hs.get(am, methodType(void.class)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                hs.get(am, methodType(void.class, Point[].class, int.class, Class.class)).\n-                    invokeExact(array, 0, Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.COMPARE_AND_SET)) {\n-            \/\/ Incorrect argument types\n-            checkNPE(() -> { \/\/ null receiver\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Point[].class, int.class, type, type)).\n-                    invokeExact((Point[]) null, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ receiver reference class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n-                    invokeExact(Void.class, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ expected reference class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Point[].class, int.class, Class.class, type)).\n-                    invokeExact(array, 0, Void.class, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ actual reference class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Point[].class, int.class, type, Class.class)).\n-                    invokeExact(array, 0, Point.getInstance(1,1), Void.class);\n-            });\n-            checkWMTE(() -> { \/\/ receiver primitive class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n-                    invokeExact(0, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            checkWMTE(() -> { \/\/ index reference class\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Point[].class, Class.class, type, type)).\n-                    invokeExact(array, Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Point[].class, int.class, type, type, Class.class)).\n-                    invokeExact(array, 0, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.COMPARE_AND_EXCHANGE)) {\n-            \/\/ Incorrect argument types\n-            checkNPE(() -> { \/\/ null receiver\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, int.class, type, type)).\n-                    invokeExact((Point[]) null, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ array reference class\n-                Point x = (Point) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n-                    invokeExact(Void.class, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ expected reference class\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, int.class, Class.class, type)).\n-                    invokeExact(array, 0, Void.class, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ actual reference class\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, int.class, type, Class.class)).\n-                    invokeExact(array, 0, Point.getInstance(1,1), Void.class);\n-            });\n-            checkWMTE(() -> { \/\/ array primitive class\n-                Point x = (Point) hs.get(am, methodType(type, int.class, int.class, type, type)).\n-                    invokeExact(0, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            checkWMTE(() -> { \/\/ index reference class\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, Class.class, type, type)).\n-                    invokeExact(array, Void.class, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect return type\n-            hs.checkWMTEOrCCE(() -> { \/\/ reference class\n-                Void r = (Void) hs.get(am, methodType(Void.class, Point[].class, int.class, type, type)).\n-                    invokeExact(array, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            checkWMTE(() -> { \/\/ primitive class\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, Point[].class, int.class, type, type)).\n-                    invokeExact(array, 0, Point.getInstance(1,1), Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                Point x = (Point) hs.get(am, methodType(type)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, int.class, type, type, Class.class)).\n-                    invokeExact(array, 0, Point.getInstance(1,1), Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-\n-        for (TestAccessMode am : testAccessModesOfType(TestAccessType.GET_AND_SET)) {\n-            \/\/ Incorrect argument types\n-            checkNPE(() -> { \/\/ null array\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, int.class, type)).\n-                    invokeExact((Point[]) null, 0, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ array reference class\n-                Point x = (Point) hs.get(am, methodType(type, Class.class, int.class, type)).\n-                    invokeExact(Void.class, 0, Point.getInstance(1,1));\n-            });\n-            hs.checkWMTEOrCCE(() -> { \/\/ value reference class\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, int.class, Class.class)).\n-                    invokeExact(array, 0, Void.class);\n-            });\n-            checkWMTE(() -> { \/\/ array primitive class\n-                Point x = (Point) hs.get(am, methodType(type, int.class, int.class, type)).\n-                    invokeExact(0, 0, Point.getInstance(1,1));\n-            });\n-            checkWMTE(() -> { \/\/ index reference class\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, Class.class, type)).\n-                    invokeExact(array, Void.class, Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect return type\n-            hs.checkWMTEOrCCE(() -> { \/\/ reference class\n-                Void r = (Void) hs.get(am, methodType(Void.class, Point[].class, int.class, type)).\n-                    invokeExact(array, 0, Point.getInstance(1,1));\n-            });\n-            checkWMTE(() -> { \/\/ primitive class\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, Point[].class, int.class, type)).\n-                    invokeExact(array, 0, Point.getInstance(1,1));\n-            });\n-            \/\/ Incorrect arity\n-            checkWMTE(() -> { \/\/ 0\n-                Point x = (Point) hs.get(am, methodType(type)).\n-                    invokeExact();\n-            });\n-            checkWMTE(() -> { \/\/ >\n-                Point x = (Point) hs.get(am, methodType(type, Point[].class, int.class, type, Class.class)).\n-                    invokeExact(array, 0, Point.getInstance(1,1), Void.class);\n-            });\n-        }\n-\n-\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypePoint.java","additions":0,"deletions":2064,"binary":false,"changes":2064,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypeShort.java\n@@ -34,1 +33,1 @@\n-*\/\n+ *\/\n@@ -51,2 +50,0 @@\n-    static final Class<?> type = short.class;\n-\n@@ -74,1 +71,1 @@\n-                VarHandleTestMethodTypeShort.class, \"final_v\", type);\n+                VarHandleTestMethodTypeShort.class, \"final_v\", short.class);\n@@ -77,1 +74,1 @@\n-                VarHandleTestMethodTypeShort.class, \"v\", type);\n+                VarHandleTestMethodTypeShort.class, \"v\", short.class);\n@@ -80,1 +77,1 @@\n-            VarHandleTestMethodTypeShort.class, \"static_final_v\", type);\n+            VarHandleTestMethodTypeShort.class, \"static_final_v\", short.class);\n@@ -83,1 +80,1 @@\n-            VarHandleTestMethodTypeShort.class, \"static_v\", type);\n+            VarHandleTestMethodTypeShort.class, \"static_v\", short.class);\n@@ -1011,1 +1008,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class)).\n@@ -1015,1 +1012,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class)).\n@@ -1019,1 +1016,1 @@\n-                short x = (short) hs.get(am, methodType(type, int.class)).\n+                short x = (short) hs.get(am, methodType(short.class, int.class)).\n@@ -1033,1 +1030,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -1037,1 +1034,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, Class.class)).\n@@ -1045,1 +1042,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeShort.class, type)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1049,1 +1046,1 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, short.class)).\n@@ -1057,1 +1054,1 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, short.class)).\n@@ -1066,1 +1063,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeShort.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeShort.class, short.class, Class.class)).\n@@ -1074,1 +1071,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, short.class, short.class)).\n@@ -1078,1 +1075,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, short.class, short.class)).\n@@ -1082,1 +1079,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, Class.class, short.class)).\n@@ -1086,1 +1083,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, short.class, Class.class)).\n@@ -1090,1 +1087,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , short.class, short.class)).\n@@ -1099,1 +1096,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, short.class, short.class, Class.class)).\n@@ -1106,1 +1103,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, type, type)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, short.class, short.class)).\n@@ -1110,1 +1107,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class, type, type)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class, short.class, short.class)).\n@@ -1114,1 +1111,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, Class.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, Class.class, short.class)).\n@@ -1118,1 +1115,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, short.class, Class.class)).\n@@ -1122,1 +1119,1 @@\n-                short x = (short) hs.get(am, methodType(type, int.class , type, type)).\n+                short x = (short) hs.get(am, methodType(short.class, int.class , short.class, short.class)).\n@@ -1127,1 +1124,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeShort.class , type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeShort.class , short.class, short.class)).\n@@ -1131,1 +1128,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class , type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class , short.class, short.class)).\n@@ -1136,1 +1133,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -1140,1 +1137,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, type, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, short.class, short.class, Class.class)).\n@@ -1147,1 +1144,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1151,1 +1148,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class, short.class)).\n@@ -1155,1 +1152,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, Class.class)).\n@@ -1159,1 +1156,1 @@\n-                short x = (short) hs.get(am, methodType(type, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, int.class, short.class)).\n@@ -1164,1 +1161,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeShort.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1168,1 +1165,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1173,1 +1170,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -1177,1 +1174,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1184,1 +1181,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1188,1 +1185,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class, short.class)).\n@@ -1192,1 +1189,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, Class.class)).\n@@ -1196,1 +1193,1 @@\n-                short x = (short) hs.get(am, methodType(type, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, int.class, short.class)).\n@@ -1201,1 +1198,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeShort.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1205,1 +1202,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1210,1 +1207,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -1214,1 +1211,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1221,1 +1218,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1225,1 +1222,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class, short.class)).\n@@ -1229,1 +1226,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, Class.class)).\n@@ -1233,1 +1230,1 @@\n-                short x = (short) hs.get(am, methodType(type, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, int.class, short.class)).\n@@ -1238,1 +1235,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeShort.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1242,1 +1239,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1247,1 +1244,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -1251,1 +1248,1 @@\n-                short x = (short) hs.get(am, methodType(type, VarHandleTestMethodTypeShort.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, VarHandleTestMethodTypeShort.class, short.class)).\n@@ -1869,1 +1866,1 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, short.class, Class.class)).\n@@ -1876,1 +1873,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, short.class)).\n@@ -1880,1 +1877,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, short.class, Class.class)).\n@@ -1889,1 +1886,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, short.class, short.class, Class.class)).\n@@ -1897,1 +1894,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class, short.class)).\n@@ -1901,1 +1898,1 @@\n-                short x = (short) hs.get(am, methodType(type, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short.class, Class.class)).\n@@ -1906,1 +1903,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, short.class, short.class)).\n@@ -1910,1 +1907,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, short.class, short.class)).\n@@ -1915,1 +1912,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -1919,1 +1916,1 @@\n-                short x = (short) hs.get(am, methodType(type, type, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short.class, short.class, Class.class)).\n@@ -1927,1 +1924,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class)).\n@@ -1932,1 +1929,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, short.class)).\n@@ -1936,1 +1933,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, short.class)).\n@@ -1941,1 +1938,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -1945,1 +1942,1 @@\n-                short x = (short) hs.get(am, methodType(type, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short.class, Class.class)).\n@@ -1953,1 +1950,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class)).\n@@ -1958,1 +1955,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, short.class)).\n@@ -1962,1 +1959,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, short.class)).\n@@ -1967,1 +1964,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -1971,1 +1968,1 @@\n-                short x = (short) hs.get(am, methodType(type, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short.class, Class.class)).\n@@ -1979,1 +1976,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class)).\n@@ -1984,1 +1981,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, short.class)).\n@@ -1988,1 +1985,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, short.class)).\n@@ -1993,1 +1990,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -1997,1 +1994,1 @@\n-                short x = (short) hs.get(am, methodType(type, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short.class, Class.class)).\n@@ -2985,1 +2982,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class)).\n@@ -2989,1 +2986,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class, int.class)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class, int.class)).\n@@ -2993,1 +2990,1 @@\n-                short x = (short) hs.get(am, methodType(type, int.class, int.class)).\n+                short x = (short) hs.get(am, methodType(short.class, int.class, int.class)).\n@@ -2997,1 +2994,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, Class.class)).\n@@ -3011,1 +3008,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -3015,1 +3012,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, Class.class)).\n@@ -3023,1 +3020,1 @@\n-                hs.get(am, methodType(void.class, short[].class, int.class, type)).\n+                hs.get(am, methodType(void.class, short[].class, int.class, short.class)).\n@@ -3027,1 +3024,1 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class, short.class)).\n@@ -3035,1 +3032,1 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class, short.class)).\n@@ -3039,1 +3036,1 @@\n-                hs.get(am, methodType(void.class, short[].class, Class.class, type)).\n+                hs.get(am, methodType(void.class, short[].class, Class.class, short.class)).\n@@ -3055,1 +3052,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, short.class, short.class)).\n@@ -3059,1 +3056,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, short.class, short.class)).\n@@ -3063,1 +3060,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, Class.class, short.class)).\n@@ -3067,1 +3064,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, short.class, Class.class)).\n@@ -3071,1 +3068,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, short.class, short.class)).\n@@ -3075,1 +3072,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, short[].class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, short[].class, Class.class, short.class, short.class)).\n@@ -3084,1 +3081,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, short.class, short.class, Class.class)).\n@@ -3092,1 +3089,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, type, type)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, short.class, short.class)).\n@@ -3096,1 +3093,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class, int.class, short.class, short.class)).\n@@ -3100,1 +3097,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, Class.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, Class.class, short.class)).\n@@ -3104,1 +3101,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, short.class, Class.class)).\n@@ -3108,1 +3105,1 @@\n-                short x = (short) hs.get(am, methodType(type, int.class, int.class, type, type)).\n+                short x = (short) hs.get(am, methodType(short.class, int.class, int.class, short.class, short.class)).\n@@ -3112,1 +3109,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, Class.class, type, type)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, Class.class, short.class, short.class)).\n@@ -3117,1 +3114,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, short[].class, int.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, short[].class, int.class, short.class, short.class)).\n@@ -3121,1 +3118,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, short.class, short.class)).\n@@ -3126,1 +3123,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -3130,1 +3127,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, type, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, short.class, short.class, Class.class)).\n@@ -3138,1 +3135,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, short.class)).\n@@ -3142,1 +3139,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class, int.class, short.class)).\n@@ -3146,1 +3143,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, Class.class)).\n@@ -3150,1 +3147,1 @@\n-                short x = (short) hs.get(am, methodType(type, int.class, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, int.class, int.class, short.class)).\n@@ -3154,1 +3151,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, Class.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, Class.class, short.class)).\n@@ -3159,1 +3156,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, short[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, short[].class, int.class, short.class)).\n@@ -3163,1 +3160,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, short.class)).\n@@ -3168,1 +3165,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -3172,1 +3169,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, short.class, Class.class)).\n@@ -3180,1 +3177,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, short.class)).\n@@ -3184,1 +3181,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class, int.class, short.class)).\n@@ -3188,1 +3185,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, Class.class)).\n@@ -3192,1 +3189,1 @@\n-                short x = (short) hs.get(am, methodType(type, int.class, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, int.class, int.class, short.class)).\n@@ -3196,1 +3193,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, Class.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, Class.class, short.class)).\n@@ -3201,1 +3198,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, short[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, short[].class, int.class, short.class)).\n@@ -3205,1 +3202,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, short.class)).\n@@ -3210,1 +3207,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -3214,1 +3211,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, short.class, Class.class)).\n@@ -3222,1 +3219,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, short.class)).\n@@ -3226,1 +3223,1 @@\n-                short x = (short) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, Class.class, int.class, short.class)).\n@@ -3230,1 +3227,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, Class.class)).\n@@ -3234,1 +3231,1 @@\n-                short x = (short) hs.get(am, methodType(type, int.class, int.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, int.class, int.class, short.class)).\n@@ -3238,1 +3235,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, Class.class, type)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, Class.class, short.class)).\n@@ -3243,1 +3240,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, short[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, short[].class, int.class, short.class)).\n@@ -3247,1 +3244,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, short[].class, int.class, short.class)).\n@@ -3252,1 +3249,1 @@\n-                short x = (short) hs.get(am, methodType(type)).\n+                short x = (short) hs.get(am, methodType(short.class)).\n@@ -3256,1 +3253,1 @@\n-                short x = (short) hs.get(am, methodType(type, short[].class, int.class, type, Class.class)).\n+                short x = (short) hs.get(am, methodType(short.class, short[].class, int.class, short.class, Class.class)).\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeShort.java","additions":133,"deletions":136,"binary":false,"changes":269,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypeString.java\n@@ -34,1 +33,1 @@\n-*\/\n+ *\/\n@@ -51,2 +50,0 @@\n-    static final Class<?> type = String.class;\n-\n@@ -74,1 +71,1 @@\n-                VarHandleTestMethodTypeString.class, \"final_v\", type);\n+                VarHandleTestMethodTypeString.class, \"final_v\", String.class);\n@@ -77,1 +74,1 @@\n-                VarHandleTestMethodTypeString.class, \"v\", type);\n+                VarHandleTestMethodTypeString.class, \"v\", String.class);\n@@ -80,1 +77,1 @@\n-            VarHandleTestMethodTypeString.class, \"static_final_v\", type);\n+            VarHandleTestMethodTypeString.class, \"static_final_v\", String.class);\n@@ -83,1 +80,1 @@\n-            VarHandleTestMethodTypeString.class, \"static_v\", type);\n+            VarHandleTestMethodTypeString.class, \"static_v\", String.class);\n@@ -657,1 +654,1 @@\n-                String x = (String) hs.get(am, methodType(type, VarHandleTestMethodTypeString.class)).\n+                String x = (String) hs.get(am, methodType(String.class, VarHandleTestMethodTypeString.class)).\n@@ -661,1 +658,1 @@\n-                String x = (String) hs.get(am, methodType(type, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, Class.class)).\n@@ -665,1 +662,1 @@\n-                String x = (String) hs.get(am, methodType(type, int.class)).\n+                String x = (String) hs.get(am, methodType(String.class, int.class)).\n@@ -679,1 +676,1 @@\n-                String x = (String) hs.get(am, methodType(type)).\n+                String x = (String) hs.get(am, methodType(String.class)).\n@@ -683,1 +680,1 @@\n-                String x = (String) hs.get(am, methodType(type, VarHandleTestMethodTypeString.class, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, VarHandleTestMethodTypeString.class, Class.class)).\n@@ -691,1 +688,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeString.class, type)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeString.class, String.class)).\n@@ -695,1 +692,1 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, String.class)).\n@@ -703,1 +700,1 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, String.class)).\n@@ -712,1 +709,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeString.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeString.class, String.class, Class.class)).\n@@ -720,1 +717,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class, String.class, String.class)).\n@@ -724,1 +721,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, String.class, String.class)).\n@@ -728,1 +725,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class, Class.class, String.class)).\n@@ -732,1 +729,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class, String.class, Class.class)).\n@@ -736,1 +733,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , String.class, String.class)).\n@@ -745,1 +742,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class, String.class, String.class, Class.class)).\n@@ -752,1 +749,1 @@\n-                String x = (String) hs.get(am, methodType(type, VarHandleTestMethodTypeString.class, type, type)).\n+                String x = (String) hs.get(am, methodType(String.class, VarHandleTestMethodTypeString.class, String.class, String.class)).\n@@ -756,1 +753,1 @@\n-                String x = (String) hs.get(am, methodType(type, Class.class, type, type)).\n+                String x = (String) hs.get(am, methodType(String.class, Class.class, String.class, String.class)).\n@@ -760,1 +757,1 @@\n-                String x = (String) hs.get(am, methodType(type, VarHandleTestMethodTypeString.class, Class.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, VarHandleTestMethodTypeString.class, Class.class, String.class)).\n@@ -764,1 +761,1 @@\n-                String x = (String) hs.get(am, methodType(type, VarHandleTestMethodTypeString.class, type, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, VarHandleTestMethodTypeString.class, String.class, Class.class)).\n@@ -768,1 +765,1 @@\n-                String x = (String) hs.get(am, methodType(type, int.class , type, type)).\n+                String x = (String) hs.get(am, methodType(String.class, int.class , String.class, String.class)).\n@@ -773,1 +770,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeString.class , type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeString.class , String.class, String.class)).\n@@ -777,1 +774,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class , type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class , String.class, String.class)).\n@@ -782,1 +779,1 @@\n-                String x = (String) hs.get(am, methodType(type)).\n+                String x = (String) hs.get(am, methodType(String.class)).\n@@ -786,1 +783,1 @@\n-                String x = (String) hs.get(am, methodType(type, VarHandleTestMethodTypeString.class, type, type, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, VarHandleTestMethodTypeString.class, String.class, String.class, Class.class)).\n@@ -793,1 +790,1 @@\n-                String x = (String) hs.get(am, methodType(type, VarHandleTestMethodTypeString.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, VarHandleTestMethodTypeString.class, String.class)).\n@@ -797,1 +794,1 @@\n-                String x = (String) hs.get(am, methodType(type, Class.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, Class.class, String.class)).\n@@ -801,1 +798,1 @@\n-                String x = (String) hs.get(am, methodType(type, VarHandleTestMethodTypeString.class, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, VarHandleTestMethodTypeString.class, Class.class)).\n@@ -805,1 +802,1 @@\n-                String x = (String) hs.get(am, methodType(type, int.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, int.class, String.class)).\n@@ -810,1 +807,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeString.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeString.class, String.class)).\n@@ -814,1 +811,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeString.class, String.class)).\n@@ -819,1 +816,1 @@\n-                String x = (String) hs.get(am, methodType(type)).\n+                String x = (String) hs.get(am, methodType(String.class)).\n@@ -823,1 +820,1 @@\n-                String x = (String) hs.get(am, methodType(type, VarHandleTestMethodTypeString.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, VarHandleTestMethodTypeString.class, String.class)).\n@@ -1195,1 +1192,1 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, String.class, Class.class)).\n@@ -1202,1 +1199,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, String.class)).\n@@ -1206,1 +1203,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, String.class, Class.class)).\n@@ -1215,1 +1212,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, String.class, String.class, Class.class)).\n@@ -1223,1 +1220,1 @@\n-                String x = (String) hs.get(am, methodType(type, Class.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, Class.class, String.class)).\n@@ -1227,1 +1224,1 @@\n-                String x = (String) hs.get(am, methodType(type, type, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, String.class, Class.class)).\n@@ -1232,1 +1229,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, String.class, String.class)).\n@@ -1236,1 +1233,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, String.class, String.class)).\n@@ -1241,1 +1238,1 @@\n-                String x = (String) hs.get(am, methodType(type)).\n+                String x = (String) hs.get(am, methodType(String.class)).\n@@ -1245,1 +1242,1 @@\n-                String x = (String) hs.get(am, methodType(type, type, type, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, String.class, String.class, Class.class)).\n@@ -1253,1 +1250,1 @@\n-                String x = (String) hs.get(am, methodType(type, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, Class.class)).\n@@ -1258,1 +1255,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, String.class)).\n@@ -1262,1 +1259,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, String.class)).\n@@ -1267,1 +1264,1 @@\n-                String x = (String) hs.get(am, methodType(type)).\n+                String x = (String) hs.get(am, methodType(String.class)).\n@@ -1271,1 +1268,1 @@\n-                String x = (String) hs.get(am, methodType(type, type, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, String.class, Class.class)).\n@@ -1869,1 +1866,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, int.class)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, int.class)).\n@@ -1873,1 +1870,1 @@\n-                String x = (String) hs.get(am, methodType(type, Class.class, int.class)).\n+                String x = (String) hs.get(am, methodType(String.class, Class.class, int.class)).\n@@ -1877,1 +1874,1 @@\n-                String x = (String) hs.get(am, methodType(type, int.class, int.class)).\n+                String x = (String) hs.get(am, methodType(String.class, int.class, int.class)).\n@@ -1881,1 +1878,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, Class.class)).\n@@ -1895,1 +1892,1 @@\n-                String x = (String) hs.get(am, methodType(type)).\n+                String x = (String) hs.get(am, methodType(String.class)).\n@@ -1899,1 +1896,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, int.class, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, int.class, Class.class)).\n@@ -1907,1 +1904,1 @@\n-                hs.get(am, methodType(void.class, String[].class, int.class, type)).\n+                hs.get(am, methodType(void.class, String[].class, int.class, String.class)).\n@@ -1911,1 +1908,1 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class, String.class)).\n@@ -1919,1 +1916,1 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class, String.class)).\n@@ -1923,1 +1920,1 @@\n-                hs.get(am, methodType(void.class, String[].class, Class.class, type)).\n+                hs.get(am, methodType(void.class, String[].class, Class.class, String.class)).\n@@ -1939,1 +1936,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, String.class, String.class)).\n@@ -1943,1 +1940,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, String.class, String.class)).\n@@ -1947,1 +1944,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, Class.class, String.class)).\n@@ -1951,1 +1948,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, String.class, Class.class)).\n@@ -1955,1 +1952,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, String.class, String.class)).\n@@ -1959,1 +1956,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, String[].class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, String[].class, Class.class, String.class, String.class)).\n@@ -1968,1 +1965,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, String.class, String.class, Class.class)).\n@@ -1976,1 +1973,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, int.class, type, type)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, int.class, String.class, String.class)).\n@@ -1980,1 +1977,1 @@\n-                String x = (String) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n+                String x = (String) hs.get(am, methodType(String.class, Class.class, int.class, String.class, String.class)).\n@@ -1984,1 +1981,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, int.class, Class.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, int.class, Class.class, String.class)).\n@@ -1988,1 +1985,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, int.class, type, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, int.class, String.class, Class.class)).\n@@ -1992,1 +1989,1 @@\n-                String x = (String) hs.get(am, methodType(type, int.class, int.class, type, type)).\n+                String x = (String) hs.get(am, methodType(String.class, int.class, int.class, String.class, String.class)).\n@@ -1996,1 +1993,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, Class.class, type, type)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, Class.class, String.class, String.class)).\n@@ -2001,1 +1998,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, String[].class, int.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, String[].class, int.class, String.class, String.class)).\n@@ -2005,1 +2002,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, type, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, String.class, String.class)).\n@@ -2010,1 +2007,1 @@\n-                String x = (String) hs.get(am, methodType(type)).\n+                String x = (String) hs.get(am, methodType(String.class)).\n@@ -2014,1 +2011,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, int.class, type, type, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, int.class, String.class, String.class, Class.class)).\n@@ -2022,1 +2019,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, int.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, int.class, String.class)).\n@@ -2026,1 +2023,1 @@\n-                String x = (String) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, Class.class, int.class, String.class)).\n@@ -2030,1 +2027,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, int.class, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, int.class, Class.class)).\n@@ -2034,1 +2031,1 @@\n-                String x = (String) hs.get(am, methodType(type, int.class, int.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, int.class, int.class, String.class)).\n@@ -2038,1 +2035,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, Class.class, type)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, Class.class, String.class)).\n@@ -2043,1 +2040,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, String[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, String[].class, int.class, String.class)).\n@@ -2047,1 +2044,1 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, type)).\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, String[].class, int.class, String.class)).\n@@ -2052,1 +2049,1 @@\n-                String x = (String) hs.get(am, methodType(type)).\n+                String x = (String) hs.get(am, methodType(String.class)).\n@@ -2056,1 +2053,1 @@\n-                String x = (String) hs.get(am, methodType(type, String[].class, int.class, type, Class.class)).\n+                String x = (String) hs.get(am, methodType(String.class, String[].class, int.class, String.class, Class.class)).\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeString.java","additions":89,"deletions":92,"binary":false,"changes":181,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,6 +29,6 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodTypeValue.java\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses VarHandleTestMethodTypeValue\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=true -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true VarHandleTestMethodTypeValue\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=false VarHandleTestMethodTypeValue\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true VarHandleTestMethodTypeValue\n-*\/\n+ * @modules java.base\/jdk.internal.vm.annotation\n+ * @run testng\/othervm VarHandleTestMethodTypeValue\n+ * @run testng\/othervm -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=true -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true VarHandleTestMethodTypeValue\n+ * @run testng\/othervm -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=false VarHandleTestMethodTypeValue\n+ * @run testng\/othervm -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true VarHandleTestMethodTypeValue\n+ *\/\n@@ -51,3 +51,1 @@\n-    static final Class<?> type = Value.class;\n-\n-    static final Value static_final_v = Value.getInstance(Point.getInstance(1,1));\n+    static final Value static_final_v = Value.getInstance(10);\n@@ -55,1 +53,1 @@\n-    static Value static_v = Value.getInstance(Point.getInstance(1,1));\n+    static Value static_v = Value.getInstance(10);\n@@ -57,1 +55,1 @@\n-    final Value final_v = Value.getInstance(Point.getInstance(1,1));\n+    final Value final_v = Value.getInstance(10);\n@@ -59,1 +57,1 @@\n-    Value v = Value.getInstance(Point.getInstance(1,1));\n+    Value v = Value.getInstance(10);\n@@ -74,1 +72,1 @@\n-                VarHandleTestMethodTypeValue.class, \"final_v\", type);\n+                VarHandleTestMethodTypeValue.class, \"final_v\", Value.class);\n@@ -77,1 +75,1 @@\n-                VarHandleTestMethodTypeValue.class, \"v\", type);\n+                VarHandleTestMethodTypeValue.class, \"v\", Value.class);\n@@ -80,1 +78,1 @@\n-            VarHandleTestMethodTypeValue.class, \"static_final_v\", type);\n+            VarHandleTestMethodTypeValue.class, \"static_final_v\", Value.class);\n@@ -83,1 +81,1 @@\n-            VarHandleTestMethodTypeValue.class, \"static_v\", type);\n+            VarHandleTestMethodTypeValue.class, \"static_v\", Value.class);\n@@ -164,1 +162,1 @@\n-            vh.set(null, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(null, Value.getInstance(10));\n@@ -167,1 +165,1 @@\n-            vh.set(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(Void.class, Value.getInstance(10));\n@@ -173,1 +171,1 @@\n-            vh.set(0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(0, Value.getInstance(10));\n@@ -180,1 +178,1 @@\n-            vh.set(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.set(recv, Value.getInstance(10), Void.class);\n@@ -214,1 +212,1 @@\n-            vh.setVolatile(null, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setVolatile(null, Value.getInstance(10));\n@@ -217,1 +215,1 @@\n-            vh.setVolatile(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setVolatile(Void.class, Value.getInstance(10));\n@@ -223,1 +221,1 @@\n-            vh.setVolatile(0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setVolatile(0, Value.getInstance(10));\n@@ -230,1 +228,1 @@\n-            vh.setVolatile(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.setVolatile(recv, Value.getInstance(10), Void.class);\n@@ -264,1 +262,1 @@\n-            vh.setOpaque(null, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setOpaque(null, Value.getInstance(10));\n@@ -267,1 +265,1 @@\n-            vh.setOpaque(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setOpaque(Void.class, Value.getInstance(10));\n@@ -273,1 +271,1 @@\n-            vh.setOpaque(0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setOpaque(0, Value.getInstance(10));\n@@ -280,1 +278,1 @@\n-            vh.setOpaque(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.setOpaque(recv, Value.getInstance(10), Void.class);\n@@ -314,1 +312,1 @@\n-            vh.setRelease(null, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setRelease(null, Value.getInstance(10));\n@@ -317,1 +315,1 @@\n-            vh.setRelease(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setRelease(Void.class, Value.getInstance(10));\n@@ -323,1 +321,1 @@\n-            vh.setRelease(0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setRelease(0, Value.getInstance(10));\n@@ -330,1 +328,1 @@\n-            vh.setRelease(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.setRelease(recv, Value.getInstance(10), Void.class);\n@@ -337,1 +335,1 @@\n-            boolean r = vh.compareAndSet(null, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.compareAndSet(null, Value.getInstance(10), Value.getInstance(10));\n@@ -340,1 +338,1 @@\n-            boolean r = vh.compareAndSet(Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.compareAndSet(Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -343,1 +341,1 @@\n-            boolean r = vh.compareAndSet(recv, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.compareAndSet(recv, Void.class, Value.getInstance(10));\n@@ -346,1 +344,1 @@\n-            boolean r = vh.compareAndSet(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.compareAndSet(recv, Value.getInstance(10), Void.class);\n@@ -349,1 +347,1 @@\n-            boolean r = vh.compareAndSet(0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.compareAndSet(0, Value.getInstance(10), Value.getInstance(10));\n@@ -356,1 +354,1 @@\n-            boolean r = vh.compareAndSet(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.compareAndSet(recv, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -363,1 +361,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(null, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetPlain(null, Value.getInstance(10), Value.getInstance(10));\n@@ -366,1 +364,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetPlain(Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -369,1 +367,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(recv, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetPlain(recv, Void.class, Value.getInstance(10));\n@@ -372,1 +370,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetPlain(recv, Value.getInstance(10), Void.class);\n@@ -375,1 +373,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetPlain(0, Value.getInstance(10), Value.getInstance(10));\n@@ -382,1 +380,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetPlain(recv, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -389,1 +387,1 @@\n-            boolean r = vh.weakCompareAndSet(null, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSet(null, Value.getInstance(10), Value.getInstance(10));\n@@ -392,1 +390,1 @@\n-            boolean r = vh.weakCompareAndSet(Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSet(Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -395,1 +393,1 @@\n-            boolean r = vh.weakCompareAndSet(recv, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSet(recv, Void.class, Value.getInstance(10));\n@@ -398,1 +396,1 @@\n-            boolean r = vh.weakCompareAndSet(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSet(recv, Value.getInstance(10), Void.class);\n@@ -401,1 +399,1 @@\n-            boolean r = vh.weakCompareAndSet(0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSet(0, Value.getInstance(10), Value.getInstance(10));\n@@ -408,1 +406,1 @@\n-            boolean r = vh.weakCompareAndSet(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSet(recv, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -415,1 +413,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(null, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetAcquire(null, Value.getInstance(10), Value.getInstance(10));\n@@ -418,1 +416,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetAcquire(Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -421,1 +419,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(recv, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetAcquire(recv, Void.class, Value.getInstance(10));\n@@ -424,1 +422,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetAcquire(recv, Value.getInstance(10), Void.class);\n@@ -427,1 +425,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetAcquire(0, Value.getInstance(10), Value.getInstance(10));\n@@ -434,1 +432,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetAcquire(recv, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -441,1 +439,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(null, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetRelease(null, Value.getInstance(10), Value.getInstance(10));\n@@ -444,1 +442,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetRelease(Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -447,1 +445,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(recv, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetRelease(recv, Void.class, Value.getInstance(10));\n@@ -450,1 +448,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetRelease(recv, Value.getInstance(10), Void.class);\n@@ -453,1 +451,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetRelease(0, Value.getInstance(10), Value.getInstance(10));\n@@ -460,1 +458,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetRelease(recv, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -467,1 +465,1 @@\n-            Value x = (Value) vh.compareAndExchange(null, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchange(null, Value.getInstance(10), Value.getInstance(10));\n@@ -470,1 +468,1 @@\n-            Value x = (Value) vh.compareAndExchange(Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchange(Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -473,1 +471,1 @@\n-            Value x = (Value) vh.compareAndExchange(recv, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchange(recv, Void.class, Value.getInstance(10));\n@@ -476,1 +474,1 @@\n-            Value x = (Value) vh.compareAndExchange(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchange(recv, Value.getInstance(10), Void.class);\n@@ -479,1 +477,1 @@\n-            Value x = (Value) vh.compareAndExchange(0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchange(0, Value.getInstance(10), Value.getInstance(10));\n@@ -483,1 +481,1 @@\n-            Void r = (Void) vh.compareAndExchange(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.compareAndExchange(recv, Value.getInstance(10), Value.getInstance(10));\n@@ -486,1 +484,1 @@\n-            boolean x = (boolean) vh.compareAndExchange(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.compareAndExchange(recv, Value.getInstance(10), Value.getInstance(10));\n@@ -493,1 +491,1 @@\n-            Value x = (Value) vh.compareAndExchange(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchange(recv, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -500,1 +498,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(null, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeAcquire(null, Value.getInstance(10), Value.getInstance(10));\n@@ -503,1 +501,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeAcquire(Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -506,1 +504,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(recv, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeAcquire(recv, Void.class, Value.getInstance(10));\n@@ -509,1 +507,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeAcquire(recv, Value.getInstance(10), Void.class);\n@@ -512,1 +510,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeAcquire(0, Value.getInstance(10), Value.getInstance(10));\n@@ -516,1 +514,1 @@\n-            Void r = (Void) vh.compareAndExchangeAcquire(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.compareAndExchangeAcquire(recv, Value.getInstance(10), Value.getInstance(10));\n@@ -519,1 +517,1 @@\n-            boolean x = (boolean) vh.compareAndExchangeAcquire(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.compareAndExchangeAcquire(recv, Value.getInstance(10), Value.getInstance(10));\n@@ -526,1 +524,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeAcquire(recv, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -533,1 +531,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(null, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeRelease(null, Value.getInstance(10), Value.getInstance(10));\n@@ -536,1 +534,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeRelease(Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -539,1 +537,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(recv, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeRelease(recv, Void.class, Value.getInstance(10));\n@@ -542,1 +540,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeRelease(recv, Value.getInstance(10), Void.class);\n@@ -545,1 +543,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeRelease(0, Value.getInstance(10), Value.getInstance(10));\n@@ -549,1 +547,1 @@\n-            Void r = (Void) vh.compareAndExchangeRelease(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.compareAndExchangeRelease(recv, Value.getInstance(10), Value.getInstance(10));\n@@ -552,1 +550,1 @@\n-            boolean x = (boolean) vh.compareAndExchangeRelease(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.compareAndExchangeRelease(recv, Value.getInstance(10), Value.getInstance(10));\n@@ -559,1 +557,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeRelease(recv, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -566,1 +564,1 @@\n-            Value x = (Value) vh.getAndSet(null, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSet(null, Value.getInstance(10));\n@@ -569,1 +567,1 @@\n-            Value x = (Value) vh.getAndSet(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSet(Void.class, Value.getInstance(10));\n@@ -575,1 +573,1 @@\n-            Value x = (Value) vh.getAndSet(0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSet(0, Value.getInstance(10));\n@@ -579,1 +577,1 @@\n-            Void r = (Void) vh.getAndSet(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.getAndSet(recv, Value.getInstance(10));\n@@ -582,1 +580,1 @@\n-            boolean x = (boolean) vh.getAndSet(recv, Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.getAndSet(recv, Value.getInstance(10));\n@@ -589,1 +587,1 @@\n-            Value x = (Value) vh.getAndSet(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.getAndSet(recv, Value.getInstance(10), Void.class);\n@@ -595,1 +593,1 @@\n-            Value x = (Value) vh.getAndSetAcquire(null, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetAcquire(null, Value.getInstance(10));\n@@ -598,1 +596,1 @@\n-            Value x = (Value) vh.getAndSetAcquire(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetAcquire(Void.class, Value.getInstance(10));\n@@ -604,1 +602,1 @@\n-            Value x = (Value) vh.getAndSetAcquire(0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetAcquire(0, Value.getInstance(10));\n@@ -608,1 +606,1 @@\n-            Void r = (Void) vh.getAndSetAcquire(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.getAndSetAcquire(recv, Value.getInstance(10));\n@@ -611,1 +609,1 @@\n-            boolean x = (boolean) vh.getAndSetAcquire(recv, Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.getAndSetAcquire(recv, Value.getInstance(10));\n@@ -618,1 +616,1 @@\n-            Value x = (Value) vh.getAndSetAcquire(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.getAndSetAcquire(recv, Value.getInstance(10), Void.class);\n@@ -624,1 +622,1 @@\n-            Value x = (Value) vh.getAndSetRelease(null, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetRelease(null, Value.getInstance(10));\n@@ -627,1 +625,1 @@\n-            Value x = (Value) vh.getAndSetRelease(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetRelease(Void.class, Value.getInstance(10));\n@@ -633,1 +631,1 @@\n-            Value x = (Value) vh.getAndSetRelease(0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetRelease(0, Value.getInstance(10));\n@@ -637,1 +635,1 @@\n-            Void r = (Void) vh.getAndSetRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.getAndSetRelease(recv, Value.getInstance(10));\n@@ -640,1 +638,1 @@\n-            boolean x = (boolean) vh.getAndSetRelease(recv, Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.getAndSetRelease(recv, Value.getInstance(10));\n@@ -647,1 +645,1 @@\n-            Value x = (Value) vh.getAndSetRelease(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.getAndSetRelease(recv, Value.getInstance(10), Void.class);\n@@ -657,1 +655,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, VarHandleTestMethodTypeValue.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, VarHandleTestMethodTypeValue.class)).\n@@ -661,1 +659,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, Class.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, Class.class)).\n@@ -665,1 +663,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, int.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, int.class)).\n@@ -679,1 +677,1 @@\n-                Value x = (Value) hs.get(am, methodType(type)).\n+                Value x = (Value) hs.get(am, methodType(Value.class)).\n@@ -683,1 +681,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, VarHandleTestMethodTypeValue.class, Class.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, VarHandleTestMethodTypeValue.class, Class.class)).\n@@ -691,2 +689,2 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeValue.class, type)).\n-                    invokeExact((VarHandleTestMethodTypeValue) null, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeValue.class, Value.class)).\n+                    invokeExact((VarHandleTestMethodTypeValue) null, Value.getInstance(10));\n@@ -695,2 +693,2 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n-                    invokeExact(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(am, methodType(void.class, Class.class, Value.class)).\n+                    invokeExact(Void.class, Value.getInstance(10));\n@@ -703,2 +701,2 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n-                    invokeExact(0, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(am, methodType(void.class, int.class, Value.class)).\n+                    invokeExact(0, Value.getInstance(10));\n@@ -712,2 +710,2 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodTypeValue.class, type, Class.class)).\n-                    invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                hs.get(am, methodType(void.class, VarHandleTestMethodTypeValue.class, Value.class, Class.class)).\n+                    invokeExact(recv, Value.getInstance(10), Void.class);\n@@ -720,2 +718,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class, type, type)).\n-                    invokeExact((VarHandleTestMethodTypeValue) null, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class, Value.class, Value.class)).\n+                    invokeExact((VarHandleTestMethodTypeValue) null, Value.getInstance(10), Value.getInstance(10));\n@@ -724,2 +722,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n-                    invokeExact(Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, Value.class, Value.class)).\n+                    invokeExact(Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -728,2 +726,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class, Class.class, type)).\n-                    invokeExact(recv, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class, Class.class, Value.class)).\n+                    invokeExact(recv, Void.class, Value.getInstance(10));\n@@ -732,2 +730,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class, type, Class.class)).\n-                    invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class, Value.class, Class.class)).\n+                    invokeExact(recv, Value.getInstance(10), Void.class);\n@@ -736,2 +734,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n-                    invokeExact(0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , Value.class, Value.class)).\n+                    invokeExact(0, Value.getInstance(10), Value.getInstance(10));\n@@ -745,2 +743,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class, type, type, Class.class)).\n-                    invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class, Value.class, Value.class, Class.class)).\n+                    invokeExact(recv, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -752,2 +750,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, VarHandleTestMethodTypeValue.class, type, type)).\n-                    invokeExact((VarHandleTestMethodTypeValue) null, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, VarHandleTestMethodTypeValue.class, Value.class, Value.class)).\n+                    invokeExact((VarHandleTestMethodTypeValue) null, Value.getInstance(10), Value.getInstance(10));\n@@ -756,2 +754,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Class.class, type, type)).\n-                    invokeExact(Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, Class.class, Value.class, Value.class)).\n+                    invokeExact(Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -760,2 +758,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, VarHandleTestMethodTypeValue.class, Class.class, type)).\n-                    invokeExact(recv, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, VarHandleTestMethodTypeValue.class, Class.class, Value.class)).\n+                    invokeExact(recv, Void.class, Value.getInstance(10));\n@@ -764,2 +762,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, VarHandleTestMethodTypeValue.class, type, Class.class)).\n-                    invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                Value x = (Value) hs.get(am, methodType(Value.class, VarHandleTestMethodTypeValue.class, Value.class, Class.class)).\n+                    invokeExact(recv, Value.getInstance(10), Void.class);\n@@ -768,2 +766,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, int.class , type, type)).\n-                    invokeExact(0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, int.class , Value.class, Value.class)).\n+                    invokeExact(0, Value.getInstance(10), Value.getInstance(10));\n@@ -773,2 +771,2 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeValue.class , type, type)).\n-                    invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeValue.class , Value.class, Value.class)).\n+                    invokeExact(recv, Value.getInstance(10), Value.getInstance(10));\n@@ -777,2 +775,2 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class , type, type)).\n-                    invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class , Value.class, Value.class)).\n+                    invokeExact(recv, Value.getInstance(10), Value.getInstance(10));\n@@ -782,1 +780,1 @@\n-                Value x = (Value) hs.get(am, methodType(type)).\n+                Value x = (Value) hs.get(am, methodType(Value.class)).\n@@ -786,2 +784,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, VarHandleTestMethodTypeValue.class, type, type, Class.class)).\n-                    invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                Value x = (Value) hs.get(am, methodType(Value.class, VarHandleTestMethodTypeValue.class, Value.class, Value.class, Class.class)).\n+                    invokeExact(recv, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -793,2 +791,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, VarHandleTestMethodTypeValue.class, type)).\n-                    invokeExact((VarHandleTestMethodTypeValue) null, Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, VarHandleTestMethodTypeValue.class, Value.class)).\n+                    invokeExact((VarHandleTestMethodTypeValue) null, Value.getInstance(10));\n@@ -797,2 +795,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Class.class, type)).\n-                    invokeExact(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, Class.class, Value.class)).\n+                    invokeExact(Void.class, Value.getInstance(10));\n@@ -801,1 +799,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, VarHandleTestMethodTypeValue.class, Class.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, VarHandleTestMethodTypeValue.class, Class.class)).\n@@ -805,2 +803,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, int.class, type)).\n-                    invokeExact(0, Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, int.class, Value.class)).\n+                    invokeExact(0, Value.getInstance(10));\n@@ -810,2 +808,2 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeValue.class, type)).\n-                    invokeExact(recv, Value.getInstance(Point.getInstance(1,1)));\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodTypeValue.class, Value.class)).\n+                    invokeExact(recv, Value.getInstance(10));\n@@ -814,2 +812,2 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class, type)).\n-                    invokeExact(recv, Value.getInstance(Point.getInstance(1,1)));\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodTypeValue.class, Value.class)).\n+                    invokeExact(recv, Value.getInstance(10));\n@@ -819,1 +817,1 @@\n-                Value x = (Value) hs.get(am, methodType(type)).\n+                Value x = (Value) hs.get(am, methodType(Value.class)).\n@@ -823,2 +821,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, VarHandleTestMethodTypeValue.class, type)).\n-                    invokeExact(recv, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                Value x = (Value) hs.get(am, methodType(Value.class, VarHandleTestMethodTypeValue.class, Value.class)).\n+                    invokeExact(recv, Value.getInstance(10), Void.class);\n@@ -857,1 +855,1 @@\n-            vh.set(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.set(Value.getInstance(10), Void.class);\n@@ -884,1 +882,1 @@\n-            vh.setVolatile(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.setVolatile(Value.getInstance(10), Void.class);\n@@ -911,1 +909,1 @@\n-            vh.setOpaque(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.setOpaque(Value.getInstance(10), Void.class);\n@@ -938,1 +936,1 @@\n-            vh.setRelease(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.setRelease(Value.getInstance(10), Void.class);\n@@ -945,1 +943,1 @@\n-            boolean r = vh.compareAndSet(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.compareAndSet(Void.class, Value.getInstance(10));\n@@ -948,1 +946,1 @@\n-            boolean r = vh.compareAndSet(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.compareAndSet(Value.getInstance(10), Void.class);\n@@ -955,1 +953,1 @@\n-            boolean r = vh.compareAndSet(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.compareAndSet(Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -962,1 +960,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetPlain(Void.class, Value.getInstance(10));\n@@ -965,1 +963,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetPlain(Value.getInstance(10), Void.class);\n@@ -972,1 +970,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetPlain(Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -979,1 +977,1 @@\n-            boolean r = vh.weakCompareAndSet(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSet(Void.class, Value.getInstance(10));\n@@ -982,1 +980,1 @@\n-            boolean r = vh.weakCompareAndSet(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSet(Value.getInstance(10), Void.class);\n@@ -989,1 +987,1 @@\n-            boolean r = vh.weakCompareAndSet(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSet(Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -996,1 +994,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetAcquire(Void.class, Value.getInstance(10));\n@@ -999,1 +997,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetAcquire(Value.getInstance(10), Void.class);\n@@ -1006,1 +1004,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetAcquire(Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1013,1 +1011,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetRelease(Void.class, Value.getInstance(10));\n@@ -1016,1 +1014,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetRelease(Value.getInstance(10), Void.class);\n@@ -1023,1 +1021,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetRelease(Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1030,1 +1028,1 @@\n-            Value x = (Value) vh.compareAndExchange(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchange(Void.class, Value.getInstance(10));\n@@ -1033,1 +1031,1 @@\n-            Value x = (Value) vh.compareAndExchange(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchange(Value.getInstance(10), Void.class);\n@@ -1037,1 +1035,1 @@\n-            Void r = (Void) vh.compareAndExchange(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.compareAndExchange(Value.getInstance(10), Value.getInstance(10));\n@@ -1040,1 +1038,1 @@\n-            boolean x = (boolean) vh.compareAndExchange(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.compareAndExchange(Value.getInstance(10), Value.getInstance(10));\n@@ -1047,1 +1045,1 @@\n-            Value x = (Value) vh.compareAndExchange(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchange(Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1054,1 +1052,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeAcquire(Void.class, Value.getInstance(10));\n@@ -1057,1 +1055,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeAcquire(Value.getInstance(10), Void.class);\n@@ -1061,1 +1059,1 @@\n-            Void r = (Void) vh.compareAndExchangeAcquire(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.compareAndExchangeAcquire(Value.getInstance(10), Value.getInstance(10));\n@@ -1064,1 +1062,1 @@\n-            boolean x = (boolean) vh.compareAndExchangeAcquire(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.compareAndExchangeAcquire(Value.getInstance(10), Value.getInstance(10));\n@@ -1071,1 +1069,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeAcquire(Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1078,1 +1076,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeRelease(Void.class, Value.getInstance(10));\n@@ -1081,1 +1079,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeRelease(Value.getInstance(10), Void.class);\n@@ -1085,1 +1083,1 @@\n-            Void r = (Void) vh.compareAndExchangeRelease(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.compareAndExchangeRelease(Value.getInstance(10), Value.getInstance(10));\n@@ -1088,1 +1086,1 @@\n-            boolean x = (boolean) vh.compareAndExchangeRelease(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.compareAndExchangeRelease(Value.getInstance(10), Value.getInstance(10));\n@@ -1095,1 +1093,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeRelease(Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1106,1 +1104,1 @@\n-            Void r = (Void) vh.getAndSet(Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.getAndSet(Value.getInstance(10));\n@@ -1109,1 +1107,1 @@\n-            boolean x = (boolean) vh.getAndSet(Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.getAndSet(Value.getInstance(10));\n@@ -1116,1 +1114,1 @@\n-            Value x = (Value) vh.getAndSet(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.getAndSet(Value.getInstance(10), Void.class);\n@@ -1127,1 +1125,1 @@\n-            Void r = (Void) vh.getAndSetAcquire(Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.getAndSetAcquire(Value.getInstance(10));\n@@ -1130,1 +1128,1 @@\n-            boolean x = (boolean) vh.getAndSetAcquire(Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.getAndSetAcquire(Value.getInstance(10));\n@@ -1137,1 +1135,1 @@\n-            Value x = (Value) vh.getAndSetAcquire(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.getAndSetAcquire(Value.getInstance(10), Void.class);\n@@ -1148,1 +1146,1 @@\n-            Void r = (Void) vh.getAndSetRelease(Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.getAndSetRelease(Value.getInstance(10));\n@@ -1151,1 +1149,1 @@\n-            boolean x = (boolean) vh.getAndSetRelease(Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.getAndSetRelease(Value.getInstance(10));\n@@ -1158,1 +1156,1 @@\n-            Value x = (Value) vh.getAndSetRelease(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.getAndSetRelease(Value.getInstance(10), Void.class);\n@@ -1195,2 +1193,2 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n-                    invokeExact(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                hs.get(am, methodType(void.class, Value.class, Class.class)).\n+                    invokeExact(Value.getInstance(10), Void.class);\n@@ -1202,2 +1200,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n-                    invokeExact(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, Value.class)).\n+                    invokeExact(Void.class, Value.getInstance(10));\n@@ -1206,2 +1204,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n-                    invokeExact(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value.class, Class.class)).\n+                    invokeExact(Value.getInstance(10), Void.class);\n@@ -1215,2 +1213,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n-                    invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value.class, Value.class, Class.class)).\n+                    invokeExact(Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1223,2 +1221,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Class.class, type)).\n-                    invokeExact(Void.class, Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, Class.class, Value.class)).\n+                    invokeExact(Void.class, Value.getInstance(10));\n@@ -1227,2 +1225,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, type, Class.class)).\n-                    invokeExact(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value.class, Class.class)).\n+                    invokeExact(Value.getInstance(10), Void.class);\n@@ -1232,2 +1230,2 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n-                    invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                Void r = (Void) hs.get(am, methodType(Void.class, Value.class, Value.class)).\n+                    invokeExact(Value.getInstance(10), Value.getInstance(10));\n@@ -1236,2 +1234,2 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type, type)).\n-                    invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Value.class, Value.class)).\n+                    invokeExact(Value.getInstance(10), Value.getInstance(10));\n@@ -1241,1 +1239,1 @@\n-                Value x = (Value) hs.get(am, methodType(type)).\n+                Value x = (Value) hs.get(am, methodType(Value.class)).\n@@ -1245,2 +1243,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, type, type, Class.class)).\n-                    invokeExact(Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value.class, Value.class, Class.class)).\n+                    invokeExact(Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1253,1 +1251,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, Class.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, Class.class)).\n@@ -1258,2 +1256,2 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n-                    invokeExact(Value.getInstance(Point.getInstance(1,1)));\n+                Void r = (Void) hs.get(am, methodType(Void.class, Value.class)).\n+                    invokeExact(Value.getInstance(10));\n@@ -1262,2 +1260,2 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, type)).\n-                    invokeExact(Value.getInstance(Point.getInstance(1,1)));\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Value.class)).\n+                    invokeExact(Value.getInstance(10));\n@@ -1267,1 +1265,1 @@\n-                Value x = (Value) hs.get(am, methodType(type)).\n+                Value x = (Value) hs.get(am, methodType(Value.class)).\n@@ -1271,2 +1269,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, type, Class.class)).\n-                    invokeExact(Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value.class, Class.class)).\n+                    invokeExact(Value.getInstance(10), Void.class);\n@@ -1282,1 +1280,1 @@\n-        Arrays.fill(array, Value.getInstance(Point.getInstance(1,1)));\n+        Arrays.fill(array, Value.getInstance(10));\n@@ -1317,1 +1315,1 @@\n-            vh.set(null, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(null, 0, Value.getInstance(10));\n@@ -1320,1 +1318,1 @@\n-            vh.set(Void.class, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(Void.class, 0, Value.getInstance(10));\n@@ -1326,1 +1324,1 @@\n-            vh.set(0, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(0, 0, Value.getInstance(10));\n@@ -1329,1 +1327,1 @@\n-            vh.set(array, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            vh.set(array, Void.class, Value.getInstance(10));\n@@ -1336,1 +1334,1 @@\n-            vh.set(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.set(array, 0, Value.getInstance(10), Void.class);\n@@ -1373,1 +1371,1 @@\n-            vh.setVolatile(null, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setVolatile(null, 0, Value.getInstance(10));\n@@ -1376,1 +1374,1 @@\n-            vh.setVolatile(Void.class, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setVolatile(Void.class, 0, Value.getInstance(10));\n@@ -1382,1 +1380,1 @@\n-            vh.setVolatile(0, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setVolatile(0, 0, Value.getInstance(10));\n@@ -1385,1 +1383,1 @@\n-            vh.setVolatile(array, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setVolatile(array, Void.class, Value.getInstance(10));\n@@ -1392,1 +1390,1 @@\n-            vh.setVolatile(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.setVolatile(array, 0, Value.getInstance(10), Void.class);\n@@ -1429,1 +1427,1 @@\n-            vh.setOpaque(null, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setOpaque(null, 0, Value.getInstance(10));\n@@ -1432,1 +1430,1 @@\n-            vh.setOpaque(Void.class, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setOpaque(Void.class, 0, Value.getInstance(10));\n@@ -1438,1 +1436,1 @@\n-            vh.setOpaque(0, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setOpaque(0, 0, Value.getInstance(10));\n@@ -1441,1 +1439,1 @@\n-            vh.setOpaque(array, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setOpaque(array, Void.class, Value.getInstance(10));\n@@ -1448,1 +1446,1 @@\n-            vh.setOpaque(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.setOpaque(array, 0, Value.getInstance(10), Void.class);\n@@ -1485,1 +1483,1 @@\n-            vh.setRelease(null, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setRelease(null, 0, Value.getInstance(10));\n@@ -1488,1 +1486,1 @@\n-            vh.setRelease(Void.class, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setRelease(Void.class, 0, Value.getInstance(10));\n@@ -1494,1 +1492,1 @@\n-            vh.setRelease(0, 0, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setRelease(0, 0, Value.getInstance(10));\n@@ -1497,1 +1495,1 @@\n-            vh.setRelease(array, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            vh.setRelease(array, Void.class, Value.getInstance(10));\n@@ -1504,1 +1502,1 @@\n-            vh.setRelease(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            vh.setRelease(array, 0, Value.getInstance(10), Void.class);\n@@ -1511,1 +1509,1 @@\n-            boolean r = vh.compareAndSet(null, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.compareAndSet(null, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1514,1 +1512,1 @@\n-            boolean r = vh.compareAndSet(Void.class, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.compareAndSet(Void.class, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1517,1 +1515,1 @@\n-            boolean r = vh.compareAndSet(array, 0, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.compareAndSet(array, 0, Void.class, Value.getInstance(10));\n@@ -1520,1 +1518,1 @@\n-            boolean r = vh.compareAndSet(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.compareAndSet(array, 0, Value.getInstance(10), Void.class);\n@@ -1523,1 +1521,1 @@\n-            boolean r = vh.compareAndSet(0, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.compareAndSet(0, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1526,1 +1524,1 @@\n-            boolean r = vh.compareAndSet(array, Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.compareAndSet(array, Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -1533,1 +1531,1 @@\n-            boolean r = vh.compareAndSet(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.compareAndSet(array, 0, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1540,1 +1538,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(null, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetPlain(null, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1543,1 +1541,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(Void.class, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetPlain(Void.class, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1546,1 +1544,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(array, 0, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetPlain(array, 0, Void.class, Value.getInstance(10));\n@@ -1549,1 +1547,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetPlain(array, 0, Value.getInstance(10), Void.class);\n@@ -1552,1 +1550,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(0, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetPlain(0, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1555,1 +1553,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(array, Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetPlain(array, Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -1562,1 +1560,1 @@\n-            boolean r = vh.weakCompareAndSetPlain(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetPlain(array, 0, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1569,1 +1567,1 @@\n-            boolean r = vh.weakCompareAndSet(null, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSet(null, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1572,1 +1570,1 @@\n-            boolean r = vh.weakCompareAndSet(Void.class, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSet(Void.class, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1575,1 +1573,1 @@\n-            boolean r = vh.weakCompareAndSet(array, 0, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSet(array, 0, Void.class, Value.getInstance(10));\n@@ -1578,1 +1576,1 @@\n-            boolean r = vh.weakCompareAndSet(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSet(array, 0, Value.getInstance(10), Void.class);\n@@ -1581,1 +1579,1 @@\n-            boolean r = vh.weakCompareAndSet(0, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSet(0, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1584,1 +1582,1 @@\n-            boolean r = vh.weakCompareAndSet(array, Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSet(array, Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -1591,1 +1589,1 @@\n-            boolean r = vh.weakCompareAndSet(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSet(array, 0, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1598,1 +1596,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(null, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetAcquire(null, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1601,1 +1599,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(Void.class, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetAcquire(Void.class, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1604,1 +1602,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(array, 0, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetAcquire(array, 0, Void.class, Value.getInstance(10));\n@@ -1607,1 +1605,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetAcquire(array, 0, Value.getInstance(10), Void.class);\n@@ -1610,1 +1608,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(0, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetAcquire(0, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1613,1 +1611,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(array, Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetAcquire(array, Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -1620,1 +1618,1 @@\n-            boolean r = vh.weakCompareAndSetAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetAcquire(array, 0, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1627,1 +1625,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(null, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetRelease(null, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1630,1 +1628,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(Void.class, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetRelease(Void.class, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1633,1 +1631,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(array, 0, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetRelease(array, 0, Void.class, Value.getInstance(10));\n@@ -1636,1 +1634,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetRelease(array, 0, Value.getInstance(10), Void.class);\n@@ -1639,1 +1637,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(0, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetRelease(0, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1642,1 +1640,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(array, Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean r = vh.weakCompareAndSetRelease(array, Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -1649,1 +1647,1 @@\n-            boolean r = vh.weakCompareAndSetRelease(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            boolean r = vh.weakCompareAndSetRelease(array, 0, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1656,1 +1654,1 @@\n-            Value x = (Value) vh.compareAndExchange(null, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchange(null, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1659,1 +1657,1 @@\n-            Value x = (Value) vh.compareAndExchange(Void.class, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchange(Void.class, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1662,1 +1660,1 @@\n-            Value x = (Value) vh.compareAndExchange(array, 0, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchange(array, 0, Void.class, Value.getInstance(10));\n@@ -1665,1 +1663,1 @@\n-            Value x = (Value) vh.compareAndExchange(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchange(array, 0, Value.getInstance(10), Void.class);\n@@ -1668,1 +1666,1 @@\n-            Value x = (Value) vh.compareAndExchange(0, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchange(0, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1671,1 +1669,1 @@\n-            Value x = (Value) vh.compareAndExchange(array, Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchange(array, Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -1675,1 +1673,1 @@\n-            Void r = (Void) vh.compareAndExchange(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.compareAndExchange(array, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1678,1 +1676,1 @@\n-            boolean x = (boolean) vh.compareAndExchange(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.compareAndExchange(array, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1685,1 +1683,1 @@\n-            Value x = (Value) vh.compareAndExchange(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchange(array, 0, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1692,1 +1690,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(null, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeAcquire(null, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1695,1 +1693,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(Void.class, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeAcquire(Void.class, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1698,1 +1696,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(array, 0, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeAcquire(array, 0, Void.class, Value.getInstance(10));\n@@ -1701,1 +1699,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeAcquire(array, 0, Value.getInstance(10), Void.class);\n@@ -1704,1 +1702,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(0, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeAcquire(0, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1707,1 +1705,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(array, Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeAcquire(array, Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -1711,1 +1709,1 @@\n-            Void r = (Void) vh.compareAndExchangeAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.compareAndExchangeAcquire(array, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1714,1 +1712,1 @@\n-            boolean x = (boolean) vh.compareAndExchangeAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.compareAndExchangeAcquire(array, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1721,1 +1719,1 @@\n-            Value x = (Value) vh.compareAndExchangeAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeAcquire(array, 0, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1728,1 +1726,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(null, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeRelease(null, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1731,1 +1729,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(Void.class, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeRelease(Void.class, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1734,1 +1732,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(array, 0, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeRelease(array, 0, Void.class, Value.getInstance(10));\n@@ -1737,1 +1735,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeRelease(array, 0, Value.getInstance(10), Void.class);\n@@ -1740,1 +1738,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(0, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeRelease(0, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1743,1 +1741,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(array, Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.compareAndExchangeRelease(array, Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -1747,1 +1745,1 @@\n-            Void r = (Void) vh.compareAndExchangeRelease(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.compareAndExchangeRelease(array, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1750,1 +1748,1 @@\n-            boolean x = (boolean) vh.compareAndExchangeRelease(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.compareAndExchangeRelease(array, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1757,1 +1755,1 @@\n-            Value x = (Value) vh.compareAndExchangeRelease(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.compareAndExchangeRelease(array, 0, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1764,1 +1762,1 @@\n-            Value x = (Value) vh.getAndSet(null, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSet(null, 0, Value.getInstance(10));\n@@ -1767,1 +1765,1 @@\n-            Value x = (Value) vh.getAndSet(Void.class, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSet(Void.class, 0, Value.getInstance(10));\n@@ -1773,1 +1771,1 @@\n-            Value x = (Value) vh.getAndSet(0, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSet(0, 0, Value.getInstance(10));\n@@ -1776,1 +1774,1 @@\n-            Value x = (Value) vh.getAndSet(array, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSet(array, Void.class, Value.getInstance(10));\n@@ -1780,1 +1778,1 @@\n-            Void r = (Void) vh.getAndSet(array, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.getAndSet(array, 0, Value.getInstance(10));\n@@ -1783,1 +1781,1 @@\n-            boolean x = (boolean) vh.getAndSet(array, 0, Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.getAndSet(array, 0, Value.getInstance(10));\n@@ -1790,1 +1788,1 @@\n-            Value x = (Value) vh.getAndSet(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.getAndSet(array, 0, Value.getInstance(10), Void.class);\n@@ -1797,1 +1795,1 @@\n-            Value x = (Value) vh.getAndSetAcquire(null, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetAcquire(null, 0, Value.getInstance(10));\n@@ -1800,1 +1798,1 @@\n-            Value x = (Value) vh.getAndSetAcquire(Void.class, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetAcquire(Void.class, 0, Value.getInstance(10));\n@@ -1806,1 +1804,1 @@\n-            Value x = (Value) vh.getAndSetAcquire(0, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetAcquire(0, 0, Value.getInstance(10));\n@@ -1809,1 +1807,1 @@\n-            Value x = (Value) vh.getAndSetAcquire(array, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetAcquire(array, Void.class, Value.getInstance(10));\n@@ -1813,1 +1811,1 @@\n-            Void r = (Void) vh.getAndSetAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.getAndSetAcquire(array, 0, Value.getInstance(10));\n@@ -1816,1 +1814,1 @@\n-            boolean x = (boolean) vh.getAndSetAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.getAndSetAcquire(array, 0, Value.getInstance(10));\n@@ -1823,1 +1821,1 @@\n-            Value x = (Value) vh.getAndSetAcquire(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.getAndSetAcquire(array, 0, Value.getInstance(10), Void.class);\n@@ -1830,1 +1828,1 @@\n-            Value x = (Value) vh.getAndSetRelease(null, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetRelease(null, 0, Value.getInstance(10));\n@@ -1833,1 +1831,1 @@\n-            Value x = (Value) vh.getAndSetRelease(Void.class, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetRelease(Void.class, 0, Value.getInstance(10));\n@@ -1839,1 +1837,1 @@\n-            Value x = (Value) vh.getAndSetRelease(0, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetRelease(0, 0, Value.getInstance(10));\n@@ -1842,1 +1840,1 @@\n-            Value x = (Value) vh.getAndSetRelease(array, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+            Value x = (Value) vh.getAndSetRelease(array, Void.class, Value.getInstance(10));\n@@ -1846,1 +1844,1 @@\n-            Void r = (Void) vh.getAndSetRelease(array, 0, Value.getInstance(Point.getInstance(1,1)));\n+            Void r = (Void) vh.getAndSetRelease(array, 0, Value.getInstance(10));\n@@ -1849,1 +1847,1 @@\n-            boolean x = (boolean) vh.getAndSetRelease(array, 0, Value.getInstance(Point.getInstance(1,1)));\n+            boolean x = (boolean) vh.getAndSetRelease(array, 0, Value.getInstance(10));\n@@ -1856,1 +1854,1 @@\n-            Value x = (Value) vh.getAndSetRelease(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+            Value x = (Value) vh.getAndSetRelease(array, 0, Value.getInstance(10), Void.class);\n@@ -1864,1 +1862,1 @@\n-        Arrays.fill(array, Value.getInstance(Point.getInstance(1,1)));\n+        Arrays.fill(array, Value.getInstance(10));\n@@ -1869,1 +1867,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, int.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, int.class)).\n@@ -1873,1 +1871,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, Class.class, int.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, Class.class, int.class)).\n@@ -1877,1 +1875,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, int.class, int.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, int.class, int.class)).\n@@ -1881,1 +1879,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, Class.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, Class.class)).\n@@ -1895,1 +1893,1 @@\n-                Value x = (Value) hs.get(am, methodType(type)).\n+                Value x = (Value) hs.get(am, methodType(Value.class)).\n@@ -1899,1 +1897,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, int.class, Class.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, int.class, Class.class)).\n@@ -1907,2 +1905,2 @@\n-                hs.get(am, methodType(void.class, Value[].class, int.class, type)).\n-                    invokeExact((Value[]) null, 0, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(am, methodType(void.class, Value[].class, int.class, Value.class)).\n+                    invokeExact((Value[]) null, 0, Value.getInstance(10));\n@@ -1911,2 +1909,2 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n-                    invokeExact(Void.class, 0, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(am, methodType(void.class, Class.class, int.class, Value.class)).\n+                    invokeExact(Void.class, 0, Value.getInstance(10));\n@@ -1919,2 +1917,2 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n-                    invokeExact(0, 0, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(am, methodType(void.class, int.class, int.class, Value.class)).\n+                    invokeExact(0, 0, Value.getInstance(10));\n@@ -1923,2 +1921,2 @@\n-                hs.get(am, methodType(void.class, Value[].class, Class.class, type)).\n-                    invokeExact(array, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+                hs.get(am, methodType(void.class, Value[].class, Class.class, Value.class)).\n+                    invokeExact(array, Void.class, Value.getInstance(10));\n@@ -1933,1 +1931,1 @@\n-                    invokeExact(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                    invokeExact(array, 0, Value.getInstance(10), Void.class);\n@@ -1939,2 +1937,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, type, type)).\n-                    invokeExact((Value[]) null, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, Value.class, Value.class)).\n+                    invokeExact((Value[]) null, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1943,2 +1941,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n-                    invokeExact(Void.class, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, Value.class, Value.class)).\n+                    invokeExact(Void.class, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1947,2 +1945,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, Class.class, type)).\n-                    invokeExact(array, 0, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, Class.class, Value.class)).\n+                    invokeExact(array, 0, Void.class, Value.getInstance(10));\n@@ -1951,2 +1949,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, type, Class.class)).\n-                    invokeExact(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, Value.class, Class.class)).\n+                    invokeExact(array, 0, Value.getInstance(10), Void.class);\n@@ -1955,2 +1953,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n-                    invokeExact(0, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, Value.class, Value.class)).\n+                    invokeExact(0, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1959,2 +1957,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value[].class, Class.class, type, type)).\n-                    invokeExact(array, Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value[].class, Class.class, Value.class, Value.class)).\n+                    invokeExact(array, Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -1968,2 +1966,2 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, type, type, Class.class)).\n-                    invokeExact(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, Value.class, Value.class, Class.class)).\n+                    invokeExact(array, 0, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -1976,2 +1974,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, int.class, type, type)).\n-                    invokeExact((Value[]) null, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, int.class, Value.class, Value.class)).\n+                    invokeExact((Value[]) null, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1980,2 +1978,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n-                    invokeExact(Void.class, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, Class.class, int.class, Value.class, Value.class)).\n+                    invokeExact(Void.class, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1984,2 +1982,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, int.class, Class.class, type)).\n-                    invokeExact(array, 0, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, int.class, Class.class, Value.class)).\n+                    invokeExact(array, 0, Void.class, Value.getInstance(10));\n@@ -1988,2 +1986,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, int.class, type, Class.class)).\n-                    invokeExact(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, int.class, Value.class, Class.class)).\n+                    invokeExact(array, 0, Value.getInstance(10), Void.class);\n@@ -1992,2 +1990,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, int.class, int.class, type, type)).\n-                    invokeExact(0, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, int.class, int.class, Value.class, Value.class)).\n+                    invokeExact(0, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -1996,2 +1994,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, Class.class, type, type)).\n-                    invokeExact(array, Void.class, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, Class.class, Value.class, Value.class)).\n+                    invokeExact(array, Void.class, Value.getInstance(10), Value.getInstance(10));\n@@ -2001,2 +1999,2 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, Value[].class, int.class, type, type)).\n-                    invokeExact(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                Void r = (Void) hs.get(am, methodType(Void.class, Value[].class, int.class, Value.class, Value.class)).\n+                    invokeExact(array, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -2005,2 +2003,2 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, type, type)).\n-                    invokeExact(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)));\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, Value.class, Value.class)).\n+                    invokeExact(array, 0, Value.getInstance(10), Value.getInstance(10));\n@@ -2010,1 +2008,1 @@\n-                Value x = (Value) hs.get(am, methodType(type)).\n+                Value x = (Value) hs.get(am, methodType(Value.class)).\n@@ -2014,2 +2012,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, int.class, type, type, Class.class)).\n-                    invokeExact(array, 0, Value.getInstance(Point.getInstance(1,1)), Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, int.class, Value.class, Value.class, Class.class)).\n+                    invokeExact(array, 0, Value.getInstance(10), Value.getInstance(10), Void.class);\n@@ -2022,2 +2020,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, int.class, type)).\n-                    invokeExact((Value[]) null, 0, Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, int.class, Value.class)).\n+                    invokeExact((Value[]) null, 0, Value.getInstance(10));\n@@ -2026,2 +2024,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Class.class, int.class, type)).\n-                    invokeExact(Void.class, 0, Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, Class.class, int.class, Value.class)).\n+                    invokeExact(Void.class, 0, Value.getInstance(10));\n@@ -2030,1 +2028,1 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, int.class, Class.class)).\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, int.class, Class.class)).\n@@ -2034,2 +2032,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, int.class, int.class, type)).\n-                    invokeExact(0, 0, Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, int.class, int.class, Value.class)).\n+                    invokeExact(0, 0, Value.getInstance(10));\n@@ -2038,2 +2036,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, Class.class, type)).\n-                    invokeExact(array, Void.class, Value.getInstance(Point.getInstance(1,1)));\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, Class.class, Value.class)).\n+                    invokeExact(array, Void.class, Value.getInstance(10));\n@@ -2043,2 +2041,2 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, Value[].class, int.class, type)).\n-                    invokeExact(array, 0, Value.getInstance(Point.getInstance(1,1)));\n+                Void r = (Void) hs.get(am, methodType(Void.class, Value[].class, int.class, Value.class)).\n+                    invokeExact(array, 0, Value.getInstance(10));\n@@ -2047,2 +2045,2 @@\n-                boolean x = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, type)).\n-                    invokeExact(array, 0, Value.getInstance(Point.getInstance(1,1)));\n+                boolean x = (boolean) hs.get(am, methodType(boolean.class, Value[].class, int.class, Value.class)).\n+                    invokeExact(array, 0, Value.getInstance(10));\n@@ -2052,1 +2050,1 @@\n-                Value x = (Value) hs.get(am, methodType(type)).\n+                Value x = (Value) hs.get(am, methodType(Value.class)).\n@@ -2056,2 +2054,2 @@\n-                Value x = (Value) hs.get(am, methodType(type, Value[].class, int.class, type, Class.class)).\n-                    invokeExact(array, 0, Value.getInstance(Point.getInstance(1,1)), Void.class);\n+                Value x = (Value) hs.get(am, methodType(Value.class, Value[].class, int.class, Value.class, Class.class)).\n+                    invokeExact(array, 0, Value.getInstance(10), Void.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeValue.java","additions":398,"deletions":400,"binary":false,"changes":798,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,3 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestAccess$Type$.java\n+ * @modules java.base\/jdk.internal.vm.annotation\n+#end[Value]\n+ * @run testng\/othervm -Diters=10   -Xint                                                   VarHandleTestAccess$Type$\n@@ -34,6 +36,0 @@\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=10    -Xint                   VarHandleTestAccess$Type$\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:TieredStopAtLevel=1 VarHandleTestAccess$Type$\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=2000 -XX:CompileThresholdScaling=0.1                         VarHandleTestAccess$Type$\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=2000 -XX:CompileThresholdScaling=0.1 -XX:-TieredCompilation  VarHandleTestAccess$Type$\n-#else[Value]\n- * @run testng\/othervm -Diters=10    -Xint                   VarHandleTestAccess$Type$\n@@ -43,1 +39,0 @@\n-#end[Value]\n@@ -56,3 +51,0 @@\n-#if[Point]\n-import jdk.internal.value.PrimitiveClass;\n-#end[Point]\n@@ -62,6 +54,0 @@\n-#if[Point]\n-    static final Class<?> type = PrimitiveClass.asValueType($type$.class);\n-#else[Point]\n-    static final Class<?> type = $type$.class;\n-#end[Point]\n-\n@@ -105,1 +91,1 @@\n-                    VarHandleTestAccess$Type$.class, \"final_v\" + postfix, type);\n+                    VarHandleTestAccess$Type$.class, \"final_v\" + postfix, $type$.class);\n@@ -109,1 +95,1 @@\n-                    VarHandleTestAccess$Type$.class, \"v\" + postfix, type);\n+                    VarHandleTestAccess$Type$.class, \"v\" + postfix, $type$.class);\n@@ -113,1 +99,1 @@\n-                VarHandleTestAccess$Type$.class, \"static_final_v\" + postfix, type);\n+                VarHandleTestAccess$Type$.class, \"static_final_v\" + postfix, $type$.class);\n@@ -117,1 +103,1 @@\n-                VarHandleTestAccess$Type$.class, \"static_v\" + postfix, type);\n+                VarHandleTestAccess$Type$.class, \"static_v\" + postfix, $type$.class);\n@@ -140,1 +126,1 @@\n-                VarHandleTestAccess$Type$.class, \"final_v\", type);\n+                VarHandleTestAccess$Type$.class, \"final_v\", $type$.class);\n@@ -143,1 +129,1 @@\n-                VarHandleTestAccess$Type$.class, \"v\", type);\n+                VarHandleTestAccess$Type$.class, \"v\", $type$.class);\n@@ -146,1 +132,1 @@\n-            VarHandleTestAccess$Type$.class, \"static_final_v\", type);\n+            VarHandleTestAccess$Type$.class, \"static_final_v\", $type$.class);\n@@ -149,1 +135,1 @@\n-            VarHandleTestAccess$Type$.class, \"static_v\", type);\n+            VarHandleTestAccess$Type$.class, \"static_v\", $type$.class);\n@@ -271,1 +257,1 @@\n-        assertEquals(vh.varType(), type);\n+        assertEquals(vh.varType(), $type$.class);\n@@ -283,1 +269,1 @@\n-                    VarHandleTestAccess$Type$.class, \"final_v\", type);\n+                    VarHandleTestAccess$Type$.class, \"final_v\", $type$.class);\n@@ -288,1 +274,1 @@\n-                    VarHandleTestAccess$Type$.class, \"v\", type);\n+                    VarHandleTestAccess$Type$.class, \"v\", $type$.class);\n@@ -296,1 +282,1 @@\n-                VarHandleTestAccess$Type$.class, \"static_final_v\", type);\n+                VarHandleTestAccess$Type$.class, \"static_final_v\", $type$.class);\n@@ -301,1 +287,1 @@\n-                VarHandleTestAccess$Type$.class, \"static_v\", type);\n+                VarHandleTestAccess$Type$.class, \"static_v\", $type$.class);\n@@ -509,0 +495,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/X-VarHandleTestAccess.java.template","additions":18,"deletions":31,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,2 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodHandleAccess$Type$.java\n+ * @modules java.base\/jdk.internal.vm.annotation\n+#end[Value]\n@@ -32,2 +33,0 @@\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Diters=200 -XX:CompileThresholdScaling=0.1 VarHandleTestMethodHandleAccess$Type$\n-#else[Value]\n@@ -35,1 +34,0 @@\n-#end[Value]\n@@ -49,3 +47,0 @@\n-#if[Point]\n-import jdk.internal.value.PrimitiveClass;\n-#end[Point]\n@@ -55,6 +50,0 @@\n-#if[Point]\n-    static final Class<?> type = PrimitiveClass.asValueType($type$.class);\n-#else[Point]\n-    static final Class<?> type = $type$.class;\n-#end[Point]\n-\n@@ -63,1 +52,1 @@\n-    static $type$ static_v = $value1$;\n+    static $type$ static_v;\n@@ -82,1 +71,1 @@\n-                VarHandleTestMethodHandleAccess$Type$.class, \"final_v\", type);\n+                VarHandleTestMethodHandleAccess$Type$.class, \"final_v\", $type$.class);\n@@ -85,1 +74,1 @@\n-                VarHandleTestMethodHandleAccess$Type$.class, \"v\", type);\n+                VarHandleTestMethodHandleAccess$Type$.class, \"v\", $type$.class);\n@@ -88,1 +77,1 @@\n-            VarHandleTestMethodHandleAccess$Type$.class, \"static_final_v\", type);\n+            VarHandleTestMethodHandleAccess$Type$.class, \"static_final_v\", $type$.class);\n@@ -91,1 +80,1 @@\n-            VarHandleTestMethodHandleAccess$Type$.class, \"static_v\", type);\n+            VarHandleTestMethodHandleAccess$Type$.class, \"static_v\", $type$.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/X-VarHandleTestMethodHandleAccess.java.template","additions":8,"deletions":19,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @compile -XDenablePrimitiveClasses Point.java Value.java VarHandleTestMethodType$Type$.java\n@@ -31,5 +30,2 @@\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses VarHandleTestMethodType$Type$\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=true -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true VarHandleTestMethodType$Type$\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=false VarHandleTestMethodType$Type$\n- * @run testng\/othervm -XX:+EnableValhalla -XX:+EnablePrimitiveClasses -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true VarHandleTestMethodType$Type$\n-#else[Value]\n+ * @modules java.base\/jdk.internal.vm.annotation\n+#end[Value]\n@@ -40,2 +36,1 @@\n-#end[Value]\n-*\/\n+ *\/\n@@ -53,3 +48,0 @@\n-#if[Point]\n-import jdk.internal.value.PrimitiveClass;\n-#end[Point]\n@@ -61,6 +53,0 @@\n-#if[Point]\n-    static final Class<?> type = PrimitiveClass.asValueType($type$.class);\n-#else[Point]\n-    static final Class<?> type = $type$.class;\n-#end[Point]\n-\n@@ -88,1 +74,1 @@\n-                VarHandleTestMethodType$Type$.class, \"final_v\", type);\n+                VarHandleTestMethodType$Type$.class, \"final_v\", $type$.class);\n@@ -91,1 +77,1 @@\n-                VarHandleTestMethodType$Type$.class, \"v\", type);\n+                VarHandleTestMethodType$Type$.class, \"v\", $type$.class);\n@@ -94,1 +80,1 @@\n-            VarHandleTestMethodType$Type$.class, \"static_final_v\", type);\n+            VarHandleTestMethodType$Type$.class, \"static_final_v\", $type$.class);\n@@ -97,1 +83,1 @@\n-            VarHandleTestMethodType$Type$.class, \"static_v\", type);\n+            VarHandleTestMethodType$Type$.class, \"static_v\", $type$.class);\n@@ -1031,1 +1017,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class)).\n@@ -1035,1 +1021,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class)).\n@@ -1039,1 +1025,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, int.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, int.class)).\n@@ -1053,1 +1039,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -1057,1 +1043,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, Class.class)).\n@@ -1065,1 +1051,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodType$Type$.class, type)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1069,1 +1055,1 @@\n-                hs.get(am, methodType(void.class, Class.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, $type$.class)).\n@@ -1077,1 +1063,1 @@\n-                hs.get(am, methodType(void.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, $type$.class)).\n@@ -1086,1 +1072,1 @@\n-                hs.get(am, methodType(void.class, VarHandleTestMethodType$Type$.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, VarHandleTestMethodType$Type$.class, $type$.class, Class.class)).\n@@ -1095,1 +1081,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodType$Type$.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodType$Type$.class, $type$.class, $type$.class)).\n@@ -1099,1 +1085,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, $type$.class, $type$.class)).\n@@ -1103,1 +1089,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodType$Type$.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodType$Type$.class, Class.class, $type$.class)).\n@@ -1107,1 +1093,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodType$Type$.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodType$Type$.class, $type$.class, Class.class)).\n@@ -1111,1 +1097,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class , $type$.class, $type$.class)).\n@@ -1120,1 +1106,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodType$Type$.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, VarHandleTestMethodType$Type$.class, $type$.class, $type$.class, Class.class)).\n@@ -1127,1 +1113,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, type, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, $type$.class, $type$.class)).\n@@ -1131,1 +1117,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class, type, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class, $type$.class, $type$.class)).\n@@ -1135,1 +1121,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, Class.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, Class.class, $type$.class)).\n@@ -1139,1 +1125,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, $type$.class, Class.class)).\n@@ -1143,1 +1129,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, int.class , type, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, int.class , $type$.class, $type$.class)).\n@@ -1148,1 +1134,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodType$Type$.class , type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodType$Type$.class , $type$.class, $type$.class)).\n@@ -1152,1 +1138,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, VarHandleTestMethodType$Type$.class , type, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, VarHandleTestMethodType$Type$.class , $type$.class, $type$.class)).\n@@ -1157,1 +1143,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -1161,1 +1147,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, type, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, $type$.class, $type$.class, Class.class)).\n@@ -1168,1 +1154,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1172,1 +1158,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class, $type$.class)).\n@@ -1176,1 +1162,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, Class.class)).\n@@ -1180,1 +1166,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, int.class, $type$.class)).\n@@ -1185,1 +1171,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodType$Type$.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1189,1 +1175,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, VarHandleTestMethodType$Type$.class, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1194,1 +1180,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -1198,1 +1184,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1207,1 +1193,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1211,1 +1197,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class, $type$.class)).\n@@ -1215,1 +1201,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, Class.class)).\n@@ -1219,1 +1205,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, int.class, $type$.class)).\n@@ -1224,1 +1210,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodType$Type$.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1228,1 +1214,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, VarHandleTestMethodType$Type$.class, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1233,1 +1219,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -1237,1 +1223,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1246,1 +1232,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1250,1 +1236,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class, $type$.class)).\n@@ -1254,1 +1240,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, Class.class)).\n@@ -1258,1 +1244,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, int.class, $type$.class)).\n@@ -1263,1 +1249,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodType$Type$.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1267,1 +1253,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, VarHandleTestMethodType$Type$.class, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1272,1 +1258,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -1276,1 +1262,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, VarHandleTestMethodType$Type$.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, VarHandleTestMethodType$Type$.class, $type$.class)).\n@@ -1901,1 +1887,1 @@\n-                hs.get(am, methodType(void.class, type, Class.class)).\n+                hs.get(am, methodType(void.class, $type$.class, Class.class)).\n@@ -1909,1 +1895,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, $type$.class)).\n@@ -1913,1 +1899,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$.class, Class.class)).\n@@ -1922,1 +1908,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$.class, $type$.class, Class.class)).\n@@ -1930,1 +1916,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class, $type$.class)).\n@@ -1934,1 +1920,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$.class, Class.class)).\n@@ -1939,1 +1925,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, $type$.class, $type$.class)).\n@@ -1943,1 +1929,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, type, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$.class, $type$.class)).\n@@ -1948,1 +1934,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -1952,1 +1938,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, type, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$.class, $type$.class, Class.class)).\n@@ -1960,1 +1946,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class)).\n@@ -1965,1 +1951,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, $type$.class)).\n@@ -1969,1 +1955,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$.class)).\n@@ -1974,1 +1960,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -1978,1 +1964,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$.class, Class.class)).\n@@ -1988,1 +1974,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class)).\n@@ -1993,1 +1979,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, $type$.class)).\n@@ -1997,1 +1983,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$.class)).\n@@ -2002,1 +1988,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -2006,1 +1992,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$.class, Class.class)).\n@@ -2016,1 +2002,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class)).\n@@ -2021,1 +2007,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, $type$.class)).\n@@ -2025,1 +2011,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$.class)).\n@@ -2030,1 +2016,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -2034,1 +2020,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$.class, Class.class)).\n@@ -3029,1 +3015,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class)).\n@@ -3033,1 +3019,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class, int.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class, int.class)).\n@@ -3037,1 +3023,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, int.class, int.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, int.class, int.class)).\n@@ -3041,1 +3027,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, Class.class)).\n@@ -3055,1 +3041,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -3059,1 +3045,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, Class.class)).\n@@ -3067,1 +3053,1 @@\n-                hs.get(am, methodType(void.class, $type$[].class, int.class, type)).\n+                hs.get(am, methodType(void.class, $type$[].class, int.class, $type$.class)).\n@@ -3071,1 +3057,1 @@\n-                hs.get(am, methodType(void.class, Class.class, int.class, type)).\n+                hs.get(am, methodType(void.class, Class.class, int.class, $type$.class)).\n@@ -3079,1 +3065,1 @@\n-                hs.get(am, methodType(void.class, int.class, int.class, type)).\n+                hs.get(am, methodType(void.class, int.class, int.class, $type$.class)).\n@@ -3083,1 +3069,1 @@\n-                hs.get(am, methodType(void.class, $type$[].class, Class.class, type)).\n+                hs.get(am, methodType(void.class, $type$[].class, Class.class, $type$.class)).\n@@ -3100,1 +3086,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$[].class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$[].class, int.class, $type$.class, $type$.class)).\n@@ -3104,1 +3090,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, Class.class, int.class, $type$.class, $type$.class)).\n@@ -3108,1 +3094,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$[].class, int.class, Class.class, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$[].class, int.class, Class.class, $type$.class)).\n@@ -3112,1 +3098,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$[].class, int.class, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$[].class, int.class, $type$.class, Class.class)).\n@@ -3116,1 +3102,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, int.class, int.class, $type$.class, $type$.class)).\n@@ -3120,1 +3106,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$[].class, Class.class, type, type)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$[].class, Class.class, $type$.class, $type$.class)).\n@@ -3129,1 +3115,1 @@\n-                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$[].class, int.class, type, type, Class.class)).\n+                boolean r = (boolean) hs.get(am, methodType(boolean.class, $type$[].class, int.class, $type$.class, $type$.class, Class.class)).\n@@ -3137,1 +3123,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, type, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, $type$.class, $type$.class)).\n@@ -3141,1 +3127,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class, int.class, type, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class, int.class, $type$.class, $type$.class)).\n@@ -3145,1 +3131,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, Class.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, Class.class, $type$.class)).\n@@ -3149,1 +3135,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, $type$.class, Class.class)).\n@@ -3153,1 +3139,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, int.class, int.class, type, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, int.class, int.class, $type$.class, $type$.class)).\n@@ -3157,1 +3143,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, Class.class, type, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, Class.class, $type$.class, $type$.class)).\n@@ -3162,1 +3148,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, $type$[].class, int.class, type, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, $type$[].class, int.class, $type$.class, $type$.class)).\n@@ -3166,1 +3152,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$[].class, int.class, type, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$[].class, int.class, $type$.class, $type$.class)).\n@@ -3171,1 +3157,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -3175,1 +3161,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, type, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, $type$.class, $type$.class, Class.class)).\n@@ -3183,1 +3169,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, $type$.class)).\n@@ -3187,1 +3173,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class, int.class, $type$.class)).\n@@ -3191,1 +3177,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, Class.class)).\n@@ -3195,1 +3181,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, int.class, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, int.class, int.class, $type$.class)).\n@@ -3199,1 +3185,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, Class.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, Class.class, $type$.class)).\n@@ -3204,1 +3190,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, $type$[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, $type$[].class, int.class, $type$.class)).\n@@ -3208,1 +3194,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$[].class, int.class, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$[].class, int.class, $type$.class)).\n@@ -3213,1 +3199,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -3217,1 +3203,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, $type$.class, Class.class)).\n@@ -3227,1 +3213,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, $type$.class)).\n@@ -3231,1 +3217,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class, int.class, $type$.class)).\n@@ -3235,1 +3221,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, Class.class)).\n@@ -3239,1 +3225,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, int.class, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, int.class, int.class, $type$.class)).\n@@ -3243,1 +3229,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, Class.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, Class.class, $type$.class)).\n@@ -3248,1 +3234,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, $type$[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, $type$[].class, int.class, $type$.class)).\n@@ -3252,1 +3238,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$[].class, int.class, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$[].class, int.class, $type$.class)).\n@@ -3257,1 +3243,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -3261,1 +3247,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, $type$.class, Class.class)).\n@@ -3271,1 +3257,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, $type$.class)).\n@@ -3275,1 +3261,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, Class.class, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, Class.class, int.class, $type$.class)).\n@@ -3279,1 +3265,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, Class.class)).\n@@ -3283,1 +3269,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, int.class, int.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, int.class, int.class, $type$.class)).\n@@ -3287,1 +3273,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, Class.class, type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, Class.class, $type$.class)).\n@@ -3292,1 +3278,1 @@\n-                Void r = (Void) hs.get(am, methodType(Void.class, $type$[].class, int.class, type)).\n+                Void r = (Void) hs.get(am, methodType(Void.class, $type$[].class, int.class, $type$.class)).\n@@ -3296,1 +3282,1 @@\n-                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$[].class, int.class, type)).\n+                $wrong_primitive_type$ x = ($wrong_primitive_type$) hs.get(am, methodType($wrong_primitive_type$.class, $type$[].class, int.class, $type$.class)).\n@@ -3301,1 +3287,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class)).\n@@ -3305,1 +3291,1 @@\n-                $type$ x = ($type$) hs.get(am, methodType(type, $type$[].class, int.class, type, Class.class)).\n+                $type$ x = ($type$) hs.get(am, methodType($type$.class, $type$[].class, int.class, $type$.class, Class.class)).\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/X-VarHandleTestMethodType.java.template","additions":135,"deletions":149,"binary":false,"changes":284,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-for type in boolean byte short char int long float double String Point Value\n+for type in boolean byte short char int long float double String Value\n@@ -31,2 +31,2 @@\n-# Object = object of identity class or value class\n-# Value = value class or primitive class\n+ # Object = objects of identity or value class\n+ # Value = value class \n@@ -37,1 +37,1 @@\n-    Point|Value)\n+    Value)\n@@ -91,5 +91,0 @@\n-    Point)\n-      value1=\"Point.getInstance(1,1)\"\n-      value2=\"Point.getInstance(2,2)\"\n-      value3=\"Point.getInstance(3,3)\"\n-      ;;\n@@ -97,3 +92,3 @@\n-      value1=\"Value.getInstance(Point.getInstance(1,1))\"\n-      value2=\"Value.getInstance(Point.getInstance(2,2))\"\n-      value3=\"Value.getInstance(Point.getInstance(3,3))\"\n+      value1=\"Value.getInstance(10)\"\n+      value2=\"Value.getInstance(20)\"\n+      value3=\"Value.getInstance(30)\"\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/generate-vh-tests.sh","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-                Arguments.of( \"MethodHandleTest$Line\", L, Set.of(\"p1\", \"p2\")),\n+                Arguments.of(\"MethodHandleTest$Line\", L, Set.of(\"p1\", \"p2\")),\n@@ -105,1 +105,1 @@\n-                Arguments.of( \"MethodHandleTest$Ref\", R, Set.of(\"p\", \"l\", \"list\", \"vo\"))\n+                Arguments.of(\"MethodHandleTest$Ref\", R, Set.of(\"p\", \"l\", \"list\", \"vo\"))\n@@ -136,4 +136,4 @@\n-                Arguments.of( Ref.class, R, \"p\", true),\n-                Arguments.of( Ref.class, R, \"l\", false),\n-                Arguments.of( Ref.class, R, \"list\", false),\n-                Arguments.of( Ref.class, R, \"vo\", false)\n+                Arguments.of(Ref.class, R, \"p\", true),\n+                Arguments.of(Ref.class, R, \"l\", false),\n+                Arguments.of(Ref.class, R, \"list\", false),\n+                Arguments.of(Ref.class, R, \"vo\", false)\n","filename":"test\/jdk\/valhalla\/valuetypes\/MethodHandleTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}