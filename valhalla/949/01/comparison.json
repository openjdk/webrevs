{"files":[{"patch":"@@ -301,1 +301,1 @@\n-            obj = Unsafe.getUnsafe().makePrivateBuffer(obj);\n+            obj = U.makePrivateBuffer(obj);\n@@ -304,1 +304,1 @@\n-                Unsafe.getUnsafe().putByte(obj, start_offset + i * Byte.BYTES, init[i]);\n+                U.putByte(obj, start_offset + i * Byte.BYTES, init[i]);\n@@ -306,1 +306,1 @@\n-            obj = Unsafe.getUnsafe().finishPrivateBuffer(obj);\n+            obj = U.finishPrivateBuffer(obj);\n@@ -313,1 +313,1 @@\n-            obj = Unsafe.getUnsafe().makePrivateBuffer(obj);\n+            obj = U.makePrivateBuffer(obj);\n@@ -316,1 +316,1 @@\n-                Unsafe.getUnsafe().putShort(obj, start_offset + i * Short.BYTES, init[i]);\n+                U.putShort(obj, start_offset + i * Short.BYTES, init[i]);\n@@ -318,1 +318,1 @@\n-            obj = Unsafe.getUnsafe().finishPrivateBuffer(obj);\n+            obj = U.finishPrivateBuffer(obj);\n@@ -325,1 +325,1 @@\n-            obj = Unsafe.getUnsafe().makePrivateBuffer(obj);\n+            obj = U.makePrivateBuffer(obj);\n@@ -328,1 +328,1 @@\n-                Unsafe.getUnsafe().putInt(obj, start_offset + i * Integer.BYTES, init[i]);\n+                U.putInt(obj, start_offset + i * Integer.BYTES, init[i]);\n@@ -330,1 +330,1 @@\n-            obj = Unsafe.getUnsafe().finishPrivateBuffer(obj);\n+            obj = U.finishPrivateBuffer(obj);\n@@ -337,1 +337,1 @@\n-            obj = Unsafe.getUnsafe().makePrivateBuffer(obj);\n+            obj = U.makePrivateBuffer(obj);\n@@ -340,1 +340,1 @@\n-                Unsafe.getUnsafe().putLong(obj, start_offset + i * Long.BYTES, init[i]);\n+                U.putLong(obj, start_offset + i * Long.BYTES, init[i]);\n@@ -342,1 +342,1 @@\n-            obj = Unsafe.getUnsafe().finishPrivateBuffer(obj);\n+            obj = U.finishPrivateBuffer(obj);\n@@ -349,1 +349,1 @@\n-            obj = Unsafe.getUnsafe().makePrivateBuffer(obj);\n+            obj = U.makePrivateBuffer(obj);\n@@ -352,1 +352,1 @@\n-                Unsafe.getUnsafe().putFloat(obj, start_offset + i * Float.BYTES, init[i]);\n+                U.putFloat(obj, start_offset + i * Float.BYTES, init[i]);\n@@ -354,1 +354,1 @@\n-            obj = Unsafe.getUnsafe().finishPrivateBuffer(obj);\n+            obj = U.finishPrivateBuffer(obj);\n@@ -361,1 +361,1 @@\n-            obj = Unsafe.getUnsafe().makePrivateBuffer(obj);\n+            obj = U.makePrivateBuffer(obj);\n@@ -364,1 +364,1 @@\n-                Unsafe.getUnsafe().putDouble(obj, start_offset + i * Double.BYTES, init[i]);\n+                U.putDouble(obj, start_offset + i * Double.BYTES, init[i]);\n@@ -366,1 +366,1 @@\n-            obj = Unsafe.getUnsafe().finishPrivateBuffer(obj);\n+            obj = U.finishPrivateBuffer(obj);\n@@ -377,1 +377,1 @@\n-                return Unsafe.getUnsafe().objectFieldOffset(field);\n+                return U.objectFieldOffset(field);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/VectorSupport.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -541,1 +541,1 @@\n-                                 return (long)Unsafe.getUnsafe().getByte(vecpayload, start_offset + ix * Byte.BYTES);\n+                                 return (long)U.getByte(vecpayload, start_offset + ix * Byte.BYTES);\n@@ -575,1 +575,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -577,2 +577,2 @@\n-                                    Unsafe.getUnsafe().putByte(tpayload, start_offset + ix * Byte.BYTES, (byte)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putByte(tpayload, start_offset + ix * Byte.BYTES, (byte)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -827,1 +827,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -830,3 +830,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -834,1 +834,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -557,1 +557,1 @@\n-                                 return (long)Unsafe.getUnsafe().getByte(vecpayload, start_offset + ix * Byte.BYTES);\n+                                 return (long)U.getByte(vecpayload, start_offset + ix * Byte.BYTES);\n@@ -607,1 +607,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -609,2 +609,2 @@\n-                                    Unsafe.getUnsafe().putByte(tpayload, start_offset + ix * Byte.BYTES, (byte)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putByte(tpayload, start_offset + ix * Byte.BYTES, (byte)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -859,1 +859,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -862,3 +862,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -866,1 +866,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -589,1 +589,1 @@\n-                                 return (long)Unsafe.getUnsafe().getByte(vecpayload, start_offset + ix * Byte.BYTES);\n+                                 return (long)U.getByte(vecpayload, start_offset + ix * Byte.BYTES);\n@@ -671,1 +671,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -673,2 +673,2 @@\n-                                    Unsafe.getUnsafe().putByte(tpayload, start_offset + ix * Byte.BYTES, (byte)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putByte(tpayload, start_offset + ix * Byte.BYTES, (byte)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -923,1 +923,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -926,3 +926,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -930,1 +930,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -533,1 +533,1 @@\n-                                 return (long)Unsafe.getUnsafe().getByte(vecpayload, start_offset + ix * Byte.BYTES);\n+                                 return (long)U.getByte(vecpayload, start_offset + ix * Byte.BYTES);\n@@ -559,1 +559,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -561,2 +561,2 @@\n-                                    Unsafe.getUnsafe().putByte(tpayload, start_offset + ix * Byte.BYTES, (byte)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putByte(tpayload, start_offset + ix * Byte.BYTES, (byte)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -811,1 +811,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -814,3 +814,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -818,1 +818,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -526,1 +526,1 @@\n-                                 return (long)Unsafe.getUnsafe().getByte(vecpayload, start_offset + ix * Byte.BYTES);\n+                                 return (long)U.getByte(vecpayload, start_offset + ix * Byte.BYTES);\n@@ -545,1 +545,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -547,2 +547,2 @@\n-                                    Unsafe.getUnsafe().putByte(tpayload, start_offset + ix * Byte.BYTES, (byte)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putByte(tpayload, start_offset + ix * Byte.BYTES, (byte)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -797,1 +797,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -800,3 +800,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -804,1 +804,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+    static final Unsafe U = Unsafe.getUnsafe();\n+\n@@ -140,1 +142,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+            if (U.getBoolean(mbits, mOffset + i)) {\n@@ -162,1 +164,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -166,2 +168,2 @@\n-            byte v = Unsafe.getUnsafe().getByte(vec, vOffset + i * Byte.BYTES);\n-            Unsafe.getUnsafe().putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(i, v));\n+            byte v = U.getByte(vec, vOffset + i * Byte.BYTES);\n+            U.putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(i, v));\n@@ -169,1 +171,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -184,1 +186,0 @@\n-        VectorPayloadMF mbits = ((AbstractMask<Byte>)m).getBits();\n@@ -186,1 +187,2 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF mbits = ((AbstractMask<Byte>)m).getBits();\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -191,3 +193,4 @@\n-            byte v = Unsafe.getUnsafe().getByte(vec, vOffset + i * Byte.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v) : v;\n-            Unsafe.getUnsafe().putByte(tpayload, vOffset + i * Byte.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                byte v = U.getByte(vec, vOffset + i * Byte.BYTES);\n+                U.putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(i, v));\n+            }\n@@ -195,1 +198,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -216,1 +219,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -220,3 +223,3 @@\n-            byte v1 = Unsafe.getUnsafe().getByte(vec1, vOffset + i * Byte.BYTES);\n-            byte v2 = Unsafe.getUnsafe().getByte(vec2, vOffset + i * Byte.BYTES);\n-            Unsafe.getUnsafe().putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(i, v1, v2));\n+            byte v1 = U.getByte(vec1, vOffset + i * Byte.BYTES);\n+            byte v2 = U.getByte(vec2, vOffset + i * Byte.BYTES);\n+            U.putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(i, v1, v2));\n@@ -224,1 +227,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -244,1 +247,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -249,4 +252,5 @@\n-            byte v1 = Unsafe.getUnsafe().getByte(vec1, vOffset + i * Byte.BYTES);\n-            byte v2 = Unsafe.getUnsafe().getByte(vec2, vOffset + i * Byte.BYTES);\n-            byte v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2) : v1;\n-            Unsafe.getUnsafe().putByte(tpayload, vOffset + i * Byte.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                byte v1 = U.getByte(vec1, vOffset + i * Byte.BYTES);\n+                byte v2 = U.getByte(vec2, vOffset + i * Byte.BYTES);\n+                U.putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(i, v1, v2));\n+            }\n@@ -254,1 +258,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -278,1 +282,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -282,4 +286,4 @@\n-            byte v1 = Unsafe.getUnsafe().getByte(vec1, vOffset + i * Byte.BYTES);\n-            byte v2 = Unsafe.getUnsafe().getByte(vec2, vOffset + i * Byte.BYTES);\n-            byte v3 = Unsafe.getUnsafe().getByte(vec3, vOffset + i * Byte.BYTES);\n-            Unsafe.getUnsafe().putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(i, v1, v2, v3));\n+            byte v1 = U.getByte(vec1, vOffset + i * Byte.BYTES);\n+            byte v2 = U.getByte(vec2, vOffset + i * Byte.BYTES);\n+            byte v3 = U.getByte(vec3, vOffset + i * Byte.BYTES);\n+            U.putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(i, v1, v2, v3));\n@@ -287,1 +291,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -310,1 +314,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -315,5 +319,6 @@\n-            byte v1 = Unsafe.getUnsafe().getByte(vec1, vOffset + i * Byte.BYTES);\n-            byte v2 = Unsafe.getUnsafe().getByte(vec2, vOffset + i * Byte.BYTES);\n-            byte v3 = Unsafe.getUnsafe().getByte(vec3, vOffset + i * Byte.BYTES);\n-            byte v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2, v3) : v1;\n-            Unsafe.getUnsafe().putByte(tpayload, vOffset + i * Byte.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                byte v1 = U.getByte(vec1, vOffset + i * Byte.BYTES);\n+                byte v2 = U.getByte(vec2, vOffset + i * Byte.BYTES);\n+                byte v3 = U.getByte(vec3, vOffset + i * Byte.BYTES);\n+                U.putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(i, v1, v2, v3));\n+            }\n@@ -321,1 +326,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -343,2 +348,2 @@\n-            byte v1 = Unsafe.getUnsafe().getByte(vec, vOffset + i * Byte.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n+            byte v1 = U.getByte(vec, vOffset + i * Byte.BYTES);\n+            v = U.getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n@@ -356,1 +361,1 @@\n-            byte v1 = Unsafe.getUnsafe().getByte(vec, vOffset + i * Byte.BYTES);\n+            byte v1 = U.getByte(vec, vOffset + i * Byte.BYTES);\n@@ -377,1 +382,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -381,1 +386,1 @@\n-            Unsafe.getUnsafe().putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(memory, offset, i));\n+            U.putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(memory, offset, i));\n@@ -383,1 +388,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -395,3 +400,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                byte.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(byte.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -402,2 +406,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(memory, offset, i));\n@@ -406,1 +410,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -410,1 +414,0 @@\n-\n@@ -424,1 +427,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -428,1 +431,1 @@\n-            Unsafe.getUnsafe().putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(memory, offset, i));\n+            U.putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(memory, offset, i));\n@@ -430,1 +433,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -442,3 +445,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                byte.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(byte.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -449,2 +451,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putByte(tpayload, vOffset + i * Byte.BYTES, f.apply(memory, offset, i));\n@@ -453,1 +455,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -474,1 +476,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getByte(vec, vOffset + i * Byte.BYTES));\n+            f.apply(memory, offset, i, U.getByte(vec, vOffset + i * Byte.BYTES));\n@@ -490,2 +492,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getByte(vec, vOffset + i * Byte.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getByte(vec, vOffset + i * Byte.BYTES));\n@@ -510,1 +512,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getByte(vec, vOffset + i * Byte.BYTES));\n+            f.apply(memory, offset, i, U.getByte(vec, vOffset + i * Byte.BYTES));\n@@ -526,2 +528,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getByte(vec, vOffset + i * Byte.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getByte(vec, vOffset + i * Byte.BYTES));\n@@ -554,1 +556,1 @@\n-        mbits = Unsafe.getUnsafe().makePrivateBuffer(mbits);\n+        mbits = U.makePrivateBuffer(mbits);\n@@ -558,3 +560,3 @@\n-            byte v1 = Unsafe.getUnsafe().getByte(vec1, vOffset + i * Byte.BYTES);\n-            byte v2 = Unsafe.getUnsafe().getByte(vec2, vOffset + i * Byte.BYTES);\n-            Unsafe.getUnsafe().putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n+            byte v1 = U.getByte(vec1, vOffset + i * Byte.BYTES);\n+            byte v2 = U.getByte(vec2, vOffset + i * Byte.BYTES);\n+            U.putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n@@ -562,1 +564,1 @@\n-        mbits = Unsafe.getUnsafe().finishPrivateBuffer(mbits);\n+        mbits = U.finishPrivateBuffer(mbits);\n@@ -4360,1 +4362,1 @@\n-                if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+                if (U.getBoolean(mbits, mOffset + i)) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":71,"deletions":69,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -516,1 +516,1 @@\n-                         return (long)Double.doubleToLongBits(Unsafe.getUnsafe().getDouble(vecpayload, start_offset + ix * Double.BYTES));\n+                         return (long)Double.doubleToLongBits(U.getDouble(vecpayload, start_offset + ix * Double.BYTES));\n@@ -536,1 +536,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -538,2 +538,2 @@\n-                                    Unsafe.getUnsafe().putDouble(tpayload, start_offset + ix * Double.BYTES, Double.longBitsToDouble((long)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putDouble(tpayload, start_offset + ix * Double.BYTES, Double.longBitsToDouble((long)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -788,1 +788,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -791,3 +791,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -795,1 +795,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -518,1 +518,1 @@\n-                         return (long)Double.doubleToLongBits(Unsafe.getUnsafe().getDouble(vecpayload, start_offset + ix * Double.BYTES));\n+                         return (long)Double.doubleToLongBits(U.getDouble(vecpayload, start_offset + ix * Double.BYTES));\n@@ -540,1 +540,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -542,2 +542,2 @@\n-                                    Unsafe.getUnsafe().putDouble(tpayload, start_offset + ix * Double.BYTES, Double.longBitsToDouble((long)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putDouble(tpayload, start_offset + ix * Double.BYTES, Double.longBitsToDouble((long)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -792,1 +792,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -795,3 +795,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -799,1 +799,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -522,1 +522,1 @@\n-                         return (long)Double.doubleToLongBits(Unsafe.getUnsafe().getDouble(vecpayload, start_offset + ix * Double.BYTES));\n+                         return (long)Double.doubleToLongBits(U.getDouble(vecpayload, start_offset + ix * Double.BYTES));\n@@ -548,1 +548,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -550,2 +550,2 @@\n-                                    Unsafe.getUnsafe().putDouble(tpayload, start_offset + ix * Double.BYTES, Double.longBitsToDouble((long)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putDouble(tpayload, start_offset + ix * Double.BYTES, Double.longBitsToDouble((long)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -800,1 +800,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -803,3 +803,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -807,1 +807,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -515,1 +515,1 @@\n-                         return (long)Double.doubleToLongBits(Unsafe.getUnsafe().getDouble(vecpayload, start_offset + ix * Double.BYTES));\n+                         return (long)Double.doubleToLongBits(U.getDouble(vecpayload, start_offset + ix * Double.BYTES));\n@@ -534,1 +534,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -536,2 +536,2 @@\n-                                    Unsafe.getUnsafe().putDouble(tpayload, start_offset + ix * Double.BYTES, Double.longBitsToDouble((long)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putDouble(tpayload, start_offset + ix * Double.BYTES, Double.longBitsToDouble((long)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -786,1 +786,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -789,3 +789,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -793,1 +793,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -514,1 +514,1 @@\n-                         return (long)Double.doubleToLongBits(Unsafe.getUnsafe().getDouble(vecpayload, start_offset + ix * Double.BYTES));\n+                         return (long)Double.doubleToLongBits(U.getDouble(vecpayload, start_offset + ix * Double.BYTES));\n@@ -533,1 +533,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -535,2 +535,2 @@\n-                                    Unsafe.getUnsafe().putDouble(tpayload, start_offset + ix * Double.BYTES, Double.longBitsToDouble((long)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putDouble(tpayload, start_offset + ix * Double.BYTES, Double.longBitsToDouble((long)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -785,1 +785,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -788,3 +788,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -792,1 +792,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+    static final Unsafe U = Unsafe.getUnsafe();\n+\n@@ -140,1 +142,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+            if (U.getBoolean(mbits, mOffset + i)) {\n@@ -162,1 +164,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -166,2 +168,2 @@\n-            double v = Unsafe.getUnsafe().getDouble(vec, vOffset + i * Double.BYTES);\n-            Unsafe.getUnsafe().putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(i, v));\n+            double v = U.getDouble(vec, vOffset + i * Double.BYTES);\n+            U.putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(i, v));\n@@ -169,1 +171,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -184,1 +186,0 @@\n-        VectorPayloadMF mbits = ((AbstractMask<Double>)m).getBits();\n@@ -186,1 +187,2 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF mbits = ((AbstractMask<Double>)m).getBits();\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -191,3 +193,4 @@\n-            double v = Unsafe.getUnsafe().getDouble(vec, vOffset + i * Double.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v) : v;\n-            Unsafe.getUnsafe().putDouble(tpayload, vOffset + i * Double.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                double v = U.getDouble(vec, vOffset + i * Double.BYTES);\n+                U.putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(i, v));\n+            }\n@@ -195,1 +198,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -216,1 +219,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -220,3 +223,3 @@\n-            double v1 = Unsafe.getUnsafe().getDouble(vec1, vOffset + i * Double.BYTES);\n-            double v2 = Unsafe.getUnsafe().getDouble(vec2, vOffset + i * Double.BYTES);\n-            Unsafe.getUnsafe().putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(i, v1, v2));\n+            double v1 = U.getDouble(vec1, vOffset + i * Double.BYTES);\n+            double v2 = U.getDouble(vec2, vOffset + i * Double.BYTES);\n+            U.putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(i, v1, v2));\n@@ -224,1 +227,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -244,1 +247,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -249,4 +252,5 @@\n-            double v1 = Unsafe.getUnsafe().getDouble(vec1, vOffset + i * Double.BYTES);\n-            double v2 = Unsafe.getUnsafe().getDouble(vec2, vOffset + i * Double.BYTES);\n-            double v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2) : v1;\n-            Unsafe.getUnsafe().putDouble(tpayload, vOffset + i * Double.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                double v1 = U.getDouble(vec1, vOffset + i * Double.BYTES);\n+                double v2 = U.getDouble(vec2, vOffset + i * Double.BYTES);\n+                U.putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(i, v1, v2));\n+            }\n@@ -254,1 +258,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -278,1 +282,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -282,4 +286,4 @@\n-            double v1 = Unsafe.getUnsafe().getDouble(vec1, vOffset + i * Double.BYTES);\n-            double v2 = Unsafe.getUnsafe().getDouble(vec2, vOffset + i * Double.BYTES);\n-            double v3 = Unsafe.getUnsafe().getDouble(vec3, vOffset + i * Double.BYTES);\n-            Unsafe.getUnsafe().putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(i, v1, v2, v3));\n+            double v1 = U.getDouble(vec1, vOffset + i * Double.BYTES);\n+            double v2 = U.getDouble(vec2, vOffset + i * Double.BYTES);\n+            double v3 = U.getDouble(vec3, vOffset + i * Double.BYTES);\n+            U.putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(i, v1, v2, v3));\n@@ -287,1 +291,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -310,1 +314,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -315,5 +319,6 @@\n-            double v1 = Unsafe.getUnsafe().getDouble(vec1, vOffset + i * Double.BYTES);\n-            double v2 = Unsafe.getUnsafe().getDouble(vec2, vOffset + i * Double.BYTES);\n-            double v3 = Unsafe.getUnsafe().getDouble(vec3, vOffset + i * Double.BYTES);\n-            double v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2, v3) : v1;\n-            Unsafe.getUnsafe().putDouble(tpayload, vOffset + i * Double.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                double v1 = U.getDouble(vec1, vOffset + i * Double.BYTES);\n+                double v2 = U.getDouble(vec2, vOffset + i * Double.BYTES);\n+                double v3 = U.getDouble(vec3, vOffset + i * Double.BYTES);\n+                U.putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(i, v1, v2, v3));\n+            }\n@@ -321,1 +326,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -343,2 +348,2 @@\n-            double v1 = Unsafe.getUnsafe().getDouble(vec, vOffset + i * Double.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n+            double v1 = U.getDouble(vec, vOffset + i * Double.BYTES);\n+            v = U.getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n@@ -356,1 +361,1 @@\n-            double v1 = Unsafe.getUnsafe().getDouble(vec, vOffset + i * Double.BYTES);\n+            double v1 = U.getDouble(vec, vOffset + i * Double.BYTES);\n@@ -377,1 +382,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -381,1 +386,1 @@\n-            Unsafe.getUnsafe().putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(memory, offset, i));\n+            U.putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(memory, offset, i));\n@@ -383,1 +388,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -395,3 +400,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                double.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(double.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -402,2 +406,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(memory, offset, i));\n@@ -406,1 +410,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -410,1 +414,0 @@\n-\n@@ -424,1 +427,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -428,1 +431,1 @@\n-            Unsafe.getUnsafe().putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(memory, offset, i));\n+            U.putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(memory, offset, i));\n@@ -430,1 +433,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -442,3 +445,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                double.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(double.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -449,2 +451,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putDouble(tpayload, vOffset + i * Double.BYTES, f.apply(memory, offset, i));\n@@ -453,1 +455,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -474,1 +476,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getDouble(vec, vOffset + i * Double.BYTES));\n+            f.apply(memory, offset, i, U.getDouble(vec, vOffset + i * Double.BYTES));\n@@ -490,2 +492,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getDouble(vec, vOffset + i * Double.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getDouble(vec, vOffset + i * Double.BYTES));\n@@ -510,1 +512,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getDouble(vec, vOffset + i * Double.BYTES));\n+            f.apply(memory, offset, i, U.getDouble(vec, vOffset + i * Double.BYTES));\n@@ -526,2 +528,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getDouble(vec, vOffset + i * Double.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getDouble(vec, vOffset + i * Double.BYTES));\n@@ -554,1 +556,1 @@\n-        mbits = Unsafe.getUnsafe().makePrivateBuffer(mbits);\n+        mbits = U.makePrivateBuffer(mbits);\n@@ -558,3 +560,3 @@\n-            double v1 = Unsafe.getUnsafe().getDouble(vec1, vOffset + i * Double.BYTES);\n-            double v2 = Unsafe.getUnsafe().getDouble(vec2, vOffset + i * Double.BYTES);\n-            Unsafe.getUnsafe().putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n+            double v1 = U.getDouble(vec1, vOffset + i * Double.BYTES);\n+            double v2 = U.getDouble(vec2, vOffset + i * Double.BYTES);\n+            U.putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n@@ -562,1 +564,1 @@\n-        mbits = Unsafe.getUnsafe().finishPrivateBuffer(mbits);\n+        mbits = U.finishPrivateBuffer(mbits);\n@@ -3955,1 +3957,1 @@\n-                if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+                if (U.getBoolean(mbits, mOffset + i)) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":71,"deletions":69,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -518,1 +518,1 @@\n-                         return (long)Float.floatToIntBits(Unsafe.getUnsafe().getFloat(vecpayload, start_offset + ix * Float.BYTES));\n+                         return (long)Float.floatToIntBits(U.getFloat(vecpayload, start_offset + ix * Float.BYTES));\n@@ -540,1 +540,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -542,2 +542,2 @@\n-                                    Unsafe.getUnsafe().putFloat(tpayload, start_offset + ix * Float.BYTES, Float.intBitsToFloat((int)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putFloat(tpayload, start_offset + ix * Float.BYTES, Float.intBitsToFloat((int)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -792,1 +792,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -795,3 +795,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -799,1 +799,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -522,1 +522,1 @@\n-                         return (long)Float.floatToIntBits(Unsafe.getUnsafe().getFloat(vecpayload, start_offset + ix * Float.BYTES));\n+                         return (long)Float.floatToIntBits(U.getFloat(vecpayload, start_offset + ix * Float.BYTES));\n@@ -548,1 +548,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -550,2 +550,2 @@\n-                                    Unsafe.getUnsafe().putFloat(tpayload, start_offset + ix * Float.BYTES, Float.intBitsToFloat((int)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putFloat(tpayload, start_offset + ix * Float.BYTES, Float.intBitsToFloat((int)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -800,1 +800,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -803,3 +803,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -807,1 +807,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -530,1 +530,1 @@\n-                         return (long)Float.floatToIntBits(Unsafe.getUnsafe().getFloat(vecpayload, start_offset + ix * Float.BYTES));\n+                         return (long)Float.floatToIntBits(U.getFloat(vecpayload, start_offset + ix * Float.BYTES));\n@@ -564,1 +564,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -566,2 +566,2 @@\n-                                    Unsafe.getUnsafe().putFloat(tpayload, start_offset + ix * Float.BYTES, Float.intBitsToFloat((int)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putFloat(tpayload, start_offset + ix * Float.BYTES, Float.intBitsToFloat((int)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -816,1 +816,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -819,3 +819,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -823,1 +823,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -516,1 +516,1 @@\n-                         return (long)Float.floatToIntBits(Unsafe.getUnsafe().getFloat(vecpayload, start_offset + ix * Float.BYTES));\n+                         return (long)Float.floatToIntBits(U.getFloat(vecpayload, start_offset + ix * Float.BYTES));\n@@ -536,1 +536,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -538,2 +538,2 @@\n-                                    Unsafe.getUnsafe().putFloat(tpayload, start_offset + ix * Float.BYTES, Float.intBitsToFloat((int)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putFloat(tpayload, start_offset + ix * Float.BYTES, Float.intBitsToFloat((int)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -788,1 +788,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -791,3 +791,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -795,1 +795,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -514,1 +514,1 @@\n-                         return (long)Float.floatToIntBits(Unsafe.getUnsafe().getFloat(vecpayload, start_offset + ix * Float.BYTES));\n+                         return (long)Float.floatToIntBits(U.getFloat(vecpayload, start_offset + ix * Float.BYTES));\n@@ -533,1 +533,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -535,2 +535,2 @@\n-                                    Unsafe.getUnsafe().putFloat(tpayload, start_offset + ix * Float.BYTES, Float.intBitsToFloat((int)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putFloat(tpayload, start_offset + ix * Float.BYTES, Float.intBitsToFloat((int)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -785,1 +785,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -788,3 +788,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -792,1 +792,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+    static final Unsafe U = Unsafe.getUnsafe();\n+\n@@ -140,1 +142,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+            if (U.getBoolean(mbits, mOffset + i)) {\n@@ -162,1 +164,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -166,2 +168,2 @@\n-            float v = Unsafe.getUnsafe().getFloat(vec, vOffset + i * Float.BYTES);\n-            Unsafe.getUnsafe().putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(i, v));\n+            float v = U.getFloat(vec, vOffset + i * Float.BYTES);\n+            U.putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(i, v));\n@@ -169,1 +171,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -184,1 +186,0 @@\n-        VectorPayloadMF mbits = ((AbstractMask<Float>)m).getBits();\n@@ -186,1 +187,2 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF mbits = ((AbstractMask<Float>)m).getBits();\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -191,3 +193,4 @@\n-            float v = Unsafe.getUnsafe().getFloat(vec, vOffset + i * Float.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v) : v;\n-            Unsafe.getUnsafe().putFloat(tpayload, vOffset + i * Float.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                float v = U.getFloat(vec, vOffset + i * Float.BYTES);\n+                U.putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(i, v));\n+            }\n@@ -195,1 +198,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -216,1 +219,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -220,3 +223,3 @@\n-            float v1 = Unsafe.getUnsafe().getFloat(vec1, vOffset + i * Float.BYTES);\n-            float v2 = Unsafe.getUnsafe().getFloat(vec2, vOffset + i * Float.BYTES);\n-            Unsafe.getUnsafe().putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(i, v1, v2));\n+            float v1 = U.getFloat(vec1, vOffset + i * Float.BYTES);\n+            float v2 = U.getFloat(vec2, vOffset + i * Float.BYTES);\n+            U.putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(i, v1, v2));\n@@ -224,1 +227,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -244,1 +247,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -249,4 +252,5 @@\n-            float v1 = Unsafe.getUnsafe().getFloat(vec1, vOffset + i * Float.BYTES);\n-            float v2 = Unsafe.getUnsafe().getFloat(vec2, vOffset + i * Float.BYTES);\n-            float v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2) : v1;\n-            Unsafe.getUnsafe().putFloat(tpayload, vOffset + i * Float.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                float v1 = U.getFloat(vec1, vOffset + i * Float.BYTES);\n+                float v2 = U.getFloat(vec2, vOffset + i * Float.BYTES);\n+                U.putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(i, v1, v2));\n+            }\n@@ -254,1 +258,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -278,1 +282,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -282,4 +286,4 @@\n-            float v1 = Unsafe.getUnsafe().getFloat(vec1, vOffset + i * Float.BYTES);\n-            float v2 = Unsafe.getUnsafe().getFloat(vec2, vOffset + i * Float.BYTES);\n-            float v3 = Unsafe.getUnsafe().getFloat(vec3, vOffset + i * Float.BYTES);\n-            Unsafe.getUnsafe().putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(i, v1, v2, v3));\n+            float v1 = U.getFloat(vec1, vOffset + i * Float.BYTES);\n+            float v2 = U.getFloat(vec2, vOffset + i * Float.BYTES);\n+            float v3 = U.getFloat(vec3, vOffset + i * Float.BYTES);\n+            U.putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(i, v1, v2, v3));\n@@ -287,1 +291,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -310,1 +314,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -315,5 +319,6 @@\n-            float v1 = Unsafe.getUnsafe().getFloat(vec1, vOffset + i * Float.BYTES);\n-            float v2 = Unsafe.getUnsafe().getFloat(vec2, vOffset + i * Float.BYTES);\n-            float v3 = Unsafe.getUnsafe().getFloat(vec3, vOffset + i * Float.BYTES);\n-            float v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2, v3) : v1;\n-            Unsafe.getUnsafe().putFloat(tpayload, vOffset + i * Float.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                float v1 = U.getFloat(vec1, vOffset + i * Float.BYTES);\n+                float v2 = U.getFloat(vec2, vOffset + i * Float.BYTES);\n+                float v3 = U.getFloat(vec3, vOffset + i * Float.BYTES);\n+                U.putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(i, v1, v2, v3));\n+            }\n@@ -321,1 +326,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -343,2 +348,2 @@\n-            float v1 = Unsafe.getUnsafe().getFloat(vec, vOffset + i * Float.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n+            float v1 = U.getFloat(vec, vOffset + i * Float.BYTES);\n+            v = U.getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n@@ -356,1 +361,1 @@\n-            float v1 = Unsafe.getUnsafe().getFloat(vec, vOffset + i * Float.BYTES);\n+            float v1 = U.getFloat(vec, vOffset + i * Float.BYTES);\n@@ -377,1 +382,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -381,1 +386,1 @@\n-            Unsafe.getUnsafe().putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(memory, offset, i));\n+            U.putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(memory, offset, i));\n@@ -383,1 +388,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -395,3 +400,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                float.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(float.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -402,2 +406,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(memory, offset, i));\n@@ -406,1 +410,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -410,1 +414,0 @@\n-\n@@ -424,1 +427,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -428,1 +431,1 @@\n-            Unsafe.getUnsafe().putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(memory, offset, i));\n+            U.putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(memory, offset, i));\n@@ -430,1 +433,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -442,3 +445,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                float.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(float.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -449,2 +451,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putFloat(tpayload, vOffset + i * Float.BYTES, f.apply(memory, offset, i));\n@@ -453,1 +455,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -474,1 +476,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getFloat(vec, vOffset + i * Float.BYTES));\n+            f.apply(memory, offset, i, U.getFloat(vec, vOffset + i * Float.BYTES));\n@@ -490,2 +492,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getFloat(vec, vOffset + i * Float.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getFloat(vec, vOffset + i * Float.BYTES));\n@@ -510,1 +512,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getFloat(vec, vOffset + i * Float.BYTES));\n+            f.apply(memory, offset, i, U.getFloat(vec, vOffset + i * Float.BYTES));\n@@ -526,2 +528,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getFloat(vec, vOffset + i * Float.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getFloat(vec, vOffset + i * Float.BYTES));\n@@ -554,1 +556,1 @@\n-        mbits = Unsafe.getUnsafe().makePrivateBuffer(mbits);\n+        mbits = U.makePrivateBuffer(mbits);\n@@ -558,3 +560,3 @@\n-            float v1 = Unsafe.getUnsafe().getFloat(vec1, vOffset + i * Float.BYTES);\n-            float v2 = Unsafe.getUnsafe().getFloat(vec2, vOffset + i * Float.BYTES);\n-            Unsafe.getUnsafe().putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n+            float v1 = U.getFloat(vec1, vOffset + i * Float.BYTES);\n+            float v2 = U.getFloat(vec2, vOffset + i * Float.BYTES);\n+            U.putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n@@ -562,1 +564,1 @@\n-        mbits = Unsafe.getUnsafe().finishPrivateBuffer(mbits);\n+        mbits = U.finishPrivateBuffer(mbits);\n@@ -3905,1 +3907,1 @@\n-                if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+                if (U.getBoolean(mbits, mOffset + i)) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":71,"deletions":69,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -529,1 +529,1 @@\n-                                 return (long)Unsafe.getUnsafe().getInt(vecpayload, start_offset + ix * Integer.BYTES);\n+                                 return (long)U.getInt(vecpayload, start_offset + ix * Integer.BYTES);\n@@ -551,1 +551,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -553,2 +553,2 @@\n-                                    Unsafe.getUnsafe().putInt(tpayload, start_offset + ix * Integer.BYTES, (int)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putInt(tpayload, start_offset + ix * Integer.BYTES, (int)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -803,1 +803,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -806,3 +806,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -810,1 +810,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -533,1 +533,1 @@\n-                                 return (long)Unsafe.getUnsafe().getInt(vecpayload, start_offset + ix * Integer.BYTES);\n+                                 return (long)U.getInt(vecpayload, start_offset + ix * Integer.BYTES);\n@@ -559,1 +559,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -561,2 +561,2 @@\n-                                    Unsafe.getUnsafe().putInt(tpayload, start_offset + ix * Integer.BYTES, (int)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putInt(tpayload, start_offset + ix * Integer.BYTES, (int)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -811,1 +811,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -814,3 +814,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -818,1 +818,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -541,1 +541,1 @@\n-                                 return (long)Unsafe.getUnsafe().getInt(vecpayload, start_offset + ix * Integer.BYTES);\n+                                 return (long)U.getInt(vecpayload, start_offset + ix * Integer.BYTES);\n@@ -575,1 +575,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -577,2 +577,2 @@\n-                                    Unsafe.getUnsafe().putInt(tpayload, start_offset + ix * Integer.BYTES, (int)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putInt(tpayload, start_offset + ix * Integer.BYTES, (int)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -827,1 +827,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -830,3 +830,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -834,1 +834,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -527,1 +527,1 @@\n-                                 return (long)Unsafe.getUnsafe().getInt(vecpayload, start_offset + ix * Integer.BYTES);\n+                                 return (long)U.getInt(vecpayload, start_offset + ix * Integer.BYTES);\n@@ -547,1 +547,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -549,2 +549,2 @@\n-                                    Unsafe.getUnsafe().putInt(tpayload, start_offset + ix * Integer.BYTES, (int)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putInt(tpayload, start_offset + ix * Integer.BYTES, (int)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -799,1 +799,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -802,3 +802,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -806,1 +806,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -526,1 +526,1 @@\n-                                 return (long)Unsafe.getUnsafe().getInt(vecpayload, start_offset + ix * Integer.BYTES);\n+                                 return (long)U.getInt(vecpayload, start_offset + ix * Integer.BYTES);\n@@ -545,1 +545,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -547,2 +547,2 @@\n-                                    Unsafe.getUnsafe().putInt(tpayload, start_offset + ix * Integer.BYTES, (int)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putInt(tpayload, start_offset + ix * Integer.BYTES, (int)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -728,1 +728,1 @@\n-            newObj = Unsafe.getUnsafe().makePrivateBuffer(newObj);\n+            newObj = U.makePrivateBuffer(newObj);\n@@ -732,1 +732,1 @@\n-                Unsafe.getUnsafe().putBoolean(newObj, mf_offset + i, true);\n+                U.putBoolean(newObj, mf_offset + i, true);\n@@ -734,1 +734,1 @@\n-            newObj = Unsafe.getUnsafe().finishPrivateBuffer(newObj);\n+            newObj = U.finishPrivateBuffer(newObj);\n@@ -811,1 +811,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -814,3 +814,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -818,1 +818,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+    static final Unsafe U = Unsafe.getUnsafe();\n+\n@@ -140,1 +142,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+            if (U.getBoolean(mbits, mOffset + i)) {\n@@ -162,1 +164,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -166,2 +168,2 @@\n-            int v = Unsafe.getUnsafe().getInt(vec, vOffset + i * Integer.BYTES);\n-            Unsafe.getUnsafe().putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(i, v));\n+            int v = U.getInt(vec, vOffset + i * Integer.BYTES);\n+            U.putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(i, v));\n@@ -169,1 +171,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -184,1 +186,0 @@\n-        VectorPayloadMF mbits = ((AbstractMask<Integer>)m).getBits();\n@@ -186,1 +187,2 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF mbits = ((AbstractMask<Integer>)m).getBits();\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -191,3 +193,4 @@\n-            int v = Unsafe.getUnsafe().getInt(vec, vOffset + i * Integer.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v) : v;\n-            Unsafe.getUnsafe().putInt(tpayload, vOffset + i * Integer.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                int v = U.getInt(vec, vOffset + i * Integer.BYTES);\n+                U.putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(i, v));\n+            }\n@@ -195,1 +198,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -216,1 +219,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -220,3 +223,3 @@\n-            int v1 = Unsafe.getUnsafe().getInt(vec1, vOffset + i * Integer.BYTES);\n-            int v2 = Unsafe.getUnsafe().getInt(vec2, vOffset + i * Integer.BYTES);\n-            Unsafe.getUnsafe().putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(i, v1, v2));\n+            int v1 = U.getInt(vec1, vOffset + i * Integer.BYTES);\n+            int v2 = U.getInt(vec2, vOffset + i * Integer.BYTES);\n+            U.putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(i, v1, v2));\n@@ -224,1 +227,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -244,1 +247,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -249,4 +252,5 @@\n-            int v1 = Unsafe.getUnsafe().getInt(vec1, vOffset + i * Integer.BYTES);\n-            int v2 = Unsafe.getUnsafe().getInt(vec2, vOffset + i * Integer.BYTES);\n-            int v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2) : v1;\n-            Unsafe.getUnsafe().putInt(tpayload, vOffset + i * Integer.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                int v1 = U.getInt(vec1, vOffset + i * Integer.BYTES);\n+                int v2 = U.getInt(vec2, vOffset + i * Integer.BYTES);\n+                U.putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(i, v1, v2));\n+            }\n@@ -254,1 +258,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -278,1 +282,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -282,4 +286,4 @@\n-            int v1 = Unsafe.getUnsafe().getInt(vec1, vOffset + i * Integer.BYTES);\n-            int v2 = Unsafe.getUnsafe().getInt(vec2, vOffset + i * Integer.BYTES);\n-            int v3 = Unsafe.getUnsafe().getInt(vec3, vOffset + i * Integer.BYTES);\n-            Unsafe.getUnsafe().putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(i, v1, v2, v3));\n+            int v1 = U.getInt(vec1, vOffset + i * Integer.BYTES);\n+            int v2 = U.getInt(vec2, vOffset + i * Integer.BYTES);\n+            int v3 = U.getInt(vec3, vOffset + i * Integer.BYTES);\n+            U.putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(i, v1, v2, v3));\n@@ -287,1 +291,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -310,1 +314,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -315,5 +319,6 @@\n-            int v1 = Unsafe.getUnsafe().getInt(vec1, vOffset + i * Integer.BYTES);\n-            int v2 = Unsafe.getUnsafe().getInt(vec2, vOffset + i * Integer.BYTES);\n-            int v3 = Unsafe.getUnsafe().getInt(vec3, vOffset + i * Integer.BYTES);\n-            int v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2, v3) : v1;\n-            Unsafe.getUnsafe().putInt(tpayload, vOffset + i * Integer.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                int v1 = U.getInt(vec1, vOffset + i * Integer.BYTES);\n+                int v2 = U.getInt(vec2, vOffset + i * Integer.BYTES);\n+                int v3 = U.getInt(vec3, vOffset + i * Integer.BYTES);\n+                U.putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(i, v1, v2, v3));\n+            }\n@@ -321,1 +326,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -343,2 +348,2 @@\n-            int v1 = Unsafe.getUnsafe().getInt(vec, vOffset + i * Integer.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n+            int v1 = U.getInt(vec, vOffset + i * Integer.BYTES);\n+            v = U.getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n@@ -356,1 +361,1 @@\n-            int v1 = Unsafe.getUnsafe().getInt(vec, vOffset + i * Integer.BYTES);\n+            int v1 = U.getInt(vec, vOffset + i * Integer.BYTES);\n@@ -377,1 +382,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -381,1 +386,1 @@\n-            Unsafe.getUnsafe().putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(memory, offset, i));\n+            U.putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(memory, offset, i));\n@@ -383,1 +388,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -395,3 +400,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                int.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(int.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -402,2 +406,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(memory, offset, i));\n@@ -406,1 +410,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -410,1 +414,0 @@\n-\n@@ -424,1 +427,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -428,1 +431,1 @@\n-            Unsafe.getUnsafe().putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(memory, offset, i));\n+            U.putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(memory, offset, i));\n@@ -430,1 +433,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -442,3 +445,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                int.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(int.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -449,2 +451,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putInt(tpayload, vOffset + i * Integer.BYTES, f.apply(memory, offset, i));\n@@ -453,1 +455,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -474,1 +476,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getInt(vec, vOffset + i * Integer.BYTES));\n+            f.apply(memory, offset, i, U.getInt(vec, vOffset + i * Integer.BYTES));\n@@ -490,2 +492,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getInt(vec, vOffset + i * Integer.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getInt(vec, vOffset + i * Integer.BYTES));\n@@ -510,1 +512,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getInt(vec, vOffset + i * Integer.BYTES));\n+            f.apply(memory, offset, i, U.getInt(vec, vOffset + i * Integer.BYTES));\n@@ -526,2 +528,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getInt(vec, vOffset + i * Integer.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getInt(vec, vOffset + i * Integer.BYTES));\n@@ -554,1 +556,1 @@\n-        mbits = Unsafe.getUnsafe().makePrivateBuffer(mbits);\n+        mbits = U.makePrivateBuffer(mbits);\n@@ -558,3 +560,3 @@\n-            int v1 = Unsafe.getUnsafe().getInt(vec1, vOffset + i * Integer.BYTES);\n-            int v2 = Unsafe.getUnsafe().getInt(vec2, vOffset + i * Integer.BYTES);\n-            Unsafe.getUnsafe().putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n+            int v1 = U.getInt(vec1, vOffset + i * Integer.BYTES);\n+            int v2 = U.getInt(vec2, vOffset + i * Integer.BYTES);\n+            U.putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n@@ -562,1 +564,1 @@\n-        mbits = Unsafe.getUnsafe().finishPrivateBuffer(mbits);\n+        mbits = U.finishPrivateBuffer(mbits);\n@@ -4073,1 +4075,1 @@\n-                if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+                if (U.getBoolean(mbits, mOffset + i)) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":71,"deletions":69,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -517,1 +517,1 @@\n-                                 return (long)Unsafe.getUnsafe().getLong(vecpayload, start_offset + ix * Long.BYTES);\n+                                 return (long)U.getLong(vecpayload, start_offset + ix * Long.BYTES);\n@@ -537,1 +537,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -539,2 +539,2 @@\n-                                    Unsafe.getUnsafe().putLong(tpayload, start_offset + ix * Long.BYTES, (long)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putLong(tpayload, start_offset + ix * Long.BYTES, (long)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -789,1 +789,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -792,3 +792,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -796,1 +796,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -519,1 +519,1 @@\n-                                 return (long)Unsafe.getUnsafe().getLong(vecpayload, start_offset + ix * Long.BYTES);\n+                                 return (long)U.getLong(vecpayload, start_offset + ix * Long.BYTES);\n@@ -541,1 +541,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -543,2 +543,2 @@\n-                                    Unsafe.getUnsafe().putLong(tpayload, start_offset + ix * Long.BYTES, (long)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putLong(tpayload, start_offset + ix * Long.BYTES, (long)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -793,1 +793,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -796,3 +796,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -800,1 +800,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -523,1 +523,1 @@\n-                                 return (long)Unsafe.getUnsafe().getLong(vecpayload, start_offset + ix * Long.BYTES);\n+                                 return (long)U.getLong(vecpayload, start_offset + ix * Long.BYTES);\n@@ -549,1 +549,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -551,2 +551,2 @@\n-                                    Unsafe.getUnsafe().putLong(tpayload, start_offset + ix * Long.BYTES, (long)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putLong(tpayload, start_offset + ix * Long.BYTES, (long)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -801,1 +801,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -804,3 +804,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -808,1 +808,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -516,1 +516,1 @@\n-                                 return (long)Unsafe.getUnsafe().getLong(vecpayload, start_offset + ix * Long.BYTES);\n+                                 return (long)U.getLong(vecpayload, start_offset + ix * Long.BYTES);\n@@ -535,1 +535,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -537,2 +537,2 @@\n-                                    Unsafe.getUnsafe().putLong(tpayload, start_offset + ix * Long.BYTES, (long)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putLong(tpayload, start_offset + ix * Long.BYTES, (long)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -787,1 +787,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -790,3 +790,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -794,1 +794,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -516,1 +516,1 @@\n-                                 return (long)Unsafe.getUnsafe().getLong(vecpayload, start_offset + ix * Long.BYTES);\n+                                 return (long)U.getLong(vecpayload, start_offset + ix * Long.BYTES);\n@@ -535,1 +535,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -537,2 +537,2 @@\n-                                    Unsafe.getUnsafe().putLong(tpayload, start_offset + ix * Long.BYTES, (long)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putLong(tpayload, start_offset + ix * Long.BYTES, (long)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -787,1 +787,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -790,3 +790,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -794,1 +794,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+    static final Unsafe U = Unsafe.getUnsafe();\n+\n@@ -140,1 +142,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+            if (U.getBoolean(mbits, mOffset + i)) {\n@@ -162,1 +164,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -166,2 +168,2 @@\n-            long v = Unsafe.getUnsafe().getLong(vec, vOffset + i * Long.BYTES);\n-            Unsafe.getUnsafe().putLong(tpayload, vOffset + i * Long.BYTES, f.apply(i, v));\n+            long v = U.getLong(vec, vOffset + i * Long.BYTES);\n+            U.putLong(tpayload, vOffset + i * Long.BYTES, f.apply(i, v));\n@@ -169,1 +171,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -184,1 +186,0 @@\n-        VectorPayloadMF mbits = ((AbstractMask<Long>)m).getBits();\n@@ -186,1 +187,2 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF mbits = ((AbstractMask<Long>)m).getBits();\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -191,3 +193,4 @@\n-            long v = Unsafe.getUnsafe().getLong(vec, vOffset + i * Long.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v) : v;\n-            Unsafe.getUnsafe().putLong(tpayload, vOffset + i * Long.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                long v = U.getLong(vec, vOffset + i * Long.BYTES);\n+                U.putLong(tpayload, vOffset + i * Long.BYTES, f.apply(i, v));\n+            }\n@@ -195,1 +198,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -216,1 +219,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -220,3 +223,3 @@\n-            long v1 = Unsafe.getUnsafe().getLong(vec1, vOffset + i * Long.BYTES);\n-            long v2 = Unsafe.getUnsafe().getLong(vec2, vOffset + i * Long.BYTES);\n-            Unsafe.getUnsafe().putLong(tpayload, vOffset + i * Long.BYTES, f.apply(i, v1, v2));\n+            long v1 = U.getLong(vec1, vOffset + i * Long.BYTES);\n+            long v2 = U.getLong(vec2, vOffset + i * Long.BYTES);\n+            U.putLong(tpayload, vOffset + i * Long.BYTES, f.apply(i, v1, v2));\n@@ -224,1 +227,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -244,1 +247,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -249,4 +252,5 @@\n-            long v1 = Unsafe.getUnsafe().getLong(vec1, vOffset + i * Long.BYTES);\n-            long v2 = Unsafe.getUnsafe().getLong(vec2, vOffset + i * Long.BYTES);\n-            long v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2) : v1;\n-            Unsafe.getUnsafe().putLong(tpayload, vOffset + i * Long.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                long v1 = U.getLong(vec1, vOffset + i * Long.BYTES);\n+                long v2 = U.getLong(vec2, vOffset + i * Long.BYTES);\n+                U.putLong(tpayload, vOffset + i * Long.BYTES, f.apply(i, v1, v2));\n+            }\n@@ -254,1 +258,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -278,1 +282,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -282,4 +286,4 @@\n-            long v1 = Unsafe.getUnsafe().getLong(vec1, vOffset + i * Long.BYTES);\n-            long v2 = Unsafe.getUnsafe().getLong(vec2, vOffset + i * Long.BYTES);\n-            long v3 = Unsafe.getUnsafe().getLong(vec3, vOffset + i * Long.BYTES);\n-            Unsafe.getUnsafe().putLong(tpayload, vOffset + i * Long.BYTES, f.apply(i, v1, v2, v3));\n+            long v1 = U.getLong(vec1, vOffset + i * Long.BYTES);\n+            long v2 = U.getLong(vec2, vOffset + i * Long.BYTES);\n+            long v3 = U.getLong(vec3, vOffset + i * Long.BYTES);\n+            U.putLong(tpayload, vOffset + i * Long.BYTES, f.apply(i, v1, v2, v3));\n@@ -287,1 +291,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -310,1 +314,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -315,5 +319,6 @@\n-            long v1 = Unsafe.getUnsafe().getLong(vec1, vOffset + i * Long.BYTES);\n-            long v2 = Unsafe.getUnsafe().getLong(vec2, vOffset + i * Long.BYTES);\n-            long v3 = Unsafe.getUnsafe().getLong(vec3, vOffset + i * Long.BYTES);\n-            long v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2, v3) : v1;\n-            Unsafe.getUnsafe().putLong(tpayload, vOffset + i * Long.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                long v1 = U.getLong(vec1, vOffset + i * Long.BYTES);\n+                long v2 = U.getLong(vec2, vOffset + i * Long.BYTES);\n+                long v3 = U.getLong(vec3, vOffset + i * Long.BYTES);\n+                U.putLong(tpayload, vOffset + i * Long.BYTES, f.apply(i, v1, v2, v3));\n+            }\n@@ -321,1 +326,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -343,2 +348,2 @@\n-            long v1 = Unsafe.getUnsafe().getLong(vec, vOffset + i * Long.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n+            long v1 = U.getLong(vec, vOffset + i * Long.BYTES);\n+            v = U.getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n@@ -356,1 +361,1 @@\n-            long v1 = Unsafe.getUnsafe().getLong(vec, vOffset + i * Long.BYTES);\n+            long v1 = U.getLong(vec, vOffset + i * Long.BYTES);\n@@ -377,1 +382,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -381,1 +386,1 @@\n-            Unsafe.getUnsafe().putLong(tpayload, vOffset + i * Long.BYTES, f.apply(memory, offset, i));\n+            U.putLong(tpayload, vOffset + i * Long.BYTES, f.apply(memory, offset, i));\n@@ -383,1 +388,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -395,3 +400,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                long.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(long.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -402,2 +406,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putLong(tpayload, vOffset + i * Long.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putLong(tpayload, vOffset + i * Long.BYTES, f.apply(memory, offset, i));\n@@ -406,1 +410,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -410,1 +414,0 @@\n-\n@@ -424,1 +427,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -428,1 +431,1 @@\n-            Unsafe.getUnsafe().putLong(tpayload, vOffset + i * Long.BYTES, f.apply(memory, offset, i));\n+            U.putLong(tpayload, vOffset + i * Long.BYTES, f.apply(memory, offset, i));\n@@ -430,1 +433,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -442,3 +445,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                long.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(long.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -449,2 +451,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putLong(tpayload, vOffset + i * Long.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putLong(tpayload, vOffset + i * Long.BYTES, f.apply(memory, offset, i));\n@@ -453,1 +455,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -474,1 +476,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getLong(vec, vOffset + i * Long.BYTES));\n+            f.apply(memory, offset, i, U.getLong(vec, vOffset + i * Long.BYTES));\n@@ -490,2 +492,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getLong(vec, vOffset + i * Long.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getLong(vec, vOffset + i * Long.BYTES));\n@@ -510,1 +512,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getLong(vec, vOffset + i * Long.BYTES));\n+            f.apply(memory, offset, i, U.getLong(vec, vOffset + i * Long.BYTES));\n@@ -526,2 +528,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getLong(vec, vOffset + i * Long.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getLong(vec, vOffset + i * Long.BYTES));\n@@ -554,1 +556,1 @@\n-        mbits = Unsafe.getUnsafe().makePrivateBuffer(mbits);\n+        mbits = U.makePrivateBuffer(mbits);\n@@ -558,3 +560,3 @@\n-            long v1 = Unsafe.getUnsafe().getLong(vec1, vOffset + i * Long.BYTES);\n-            long v2 = Unsafe.getUnsafe().getLong(vec2, vOffset + i * Long.BYTES);\n-            Unsafe.getUnsafe().putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n+            long v1 = U.getLong(vec1, vOffset + i * Long.BYTES);\n+            long v2 = U.getLong(vec2, vOffset + i * Long.BYTES);\n+            U.putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n@@ -562,1 +564,1 @@\n-        mbits = Unsafe.getUnsafe().finishPrivateBuffer(mbits);\n+        mbits = U.finishPrivateBuffer(mbits);\n@@ -3999,1 +4001,1 @@\n-                if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+                if (U.getBoolean(mbits, mOffset + i)) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":71,"deletions":69,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -533,1 +533,1 @@\n-                                 return (long)Unsafe.getUnsafe().getShort(vecpayload, start_offset + ix * Short.BYTES);\n+                                 return (long)U.getShort(vecpayload, start_offset + ix * Short.BYTES);\n@@ -559,1 +559,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -561,2 +561,2 @@\n-                                    Unsafe.getUnsafe().putShort(tpayload, start_offset + ix * Short.BYTES, (short)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putShort(tpayload, start_offset + ix * Short.BYTES, (short)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -811,1 +811,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -814,3 +814,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -818,1 +818,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -541,1 +541,1 @@\n-                                 return (long)Unsafe.getUnsafe().getShort(vecpayload, start_offset + ix * Short.BYTES);\n+                                 return (long)U.getShort(vecpayload, start_offset + ix * Short.BYTES);\n@@ -575,1 +575,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -577,2 +577,2 @@\n-                                    Unsafe.getUnsafe().putShort(tpayload, start_offset + ix * Short.BYTES, (short)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putShort(tpayload, start_offset + ix * Short.BYTES, (short)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -827,1 +827,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -830,3 +830,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -834,1 +834,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -557,1 +557,1 @@\n-                                 return (long)Unsafe.getUnsafe().getShort(vecpayload, start_offset + ix * Short.BYTES);\n+                                 return (long)U.getShort(vecpayload, start_offset + ix * Short.BYTES);\n@@ -607,1 +607,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -609,2 +609,2 @@\n-                                    Unsafe.getUnsafe().putShort(tpayload, start_offset + ix * Short.BYTES, (short)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putShort(tpayload, start_offset + ix * Short.BYTES, (short)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -859,1 +859,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -862,3 +862,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -866,1 +866,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -529,1 +529,1 @@\n-                                 return (long)Unsafe.getUnsafe().getShort(vecpayload, start_offset + ix * Short.BYTES);\n+                                 return (long)U.getShort(vecpayload, start_offset + ix * Short.BYTES);\n@@ -551,1 +551,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -553,2 +553,2 @@\n-                                    Unsafe.getUnsafe().putShort(tpayload, start_offset + ix * Short.BYTES, (short)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putShort(tpayload, start_offset + ix * Short.BYTES, (short)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -803,1 +803,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -806,3 +806,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -810,1 +810,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -526,1 +526,1 @@\n-                                 return (long)Unsafe.getUnsafe().getShort(vecpayload, start_offset + ix * Short.BYTES);\n+                                 return (long)U.getShort(vecpayload, start_offset + ix * Short.BYTES);\n@@ -545,1 +545,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -547,2 +547,2 @@\n-                                    Unsafe.getUnsafe().putShort(tpayload, start_offset + ix * Short.BYTES, (short)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.putShort(tpayload, start_offset + ix * Short.BYTES, (short)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -797,1 +797,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -800,3 +800,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -804,1 +804,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+    static final Unsafe U = Unsafe.getUnsafe();\n+\n@@ -140,1 +142,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+            if (U.getBoolean(mbits, mOffset + i)) {\n@@ -162,1 +164,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -166,2 +168,2 @@\n-            short v = Unsafe.getUnsafe().getShort(vec, vOffset + i * Short.BYTES);\n-            Unsafe.getUnsafe().putShort(tpayload, vOffset + i * Short.BYTES, f.apply(i, v));\n+            short v = U.getShort(vec, vOffset + i * Short.BYTES);\n+            U.putShort(tpayload, vOffset + i * Short.BYTES, f.apply(i, v));\n@@ -169,1 +171,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -184,1 +186,0 @@\n-        VectorPayloadMF mbits = ((AbstractMask<Short>)m).getBits();\n@@ -186,1 +187,2 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF mbits = ((AbstractMask<Short>)m).getBits();\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -191,3 +193,4 @@\n-            short v = Unsafe.getUnsafe().getShort(vec, vOffset + i * Short.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v) : v;\n-            Unsafe.getUnsafe().putShort(tpayload, vOffset + i * Short.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                short v = U.getShort(vec, vOffset + i * Short.BYTES);\n+                U.putShort(tpayload, vOffset + i * Short.BYTES, f.apply(i, v));\n+            }\n@@ -195,1 +198,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -216,1 +219,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -220,3 +223,3 @@\n-            short v1 = Unsafe.getUnsafe().getShort(vec1, vOffset + i * Short.BYTES);\n-            short v2 = Unsafe.getUnsafe().getShort(vec2, vOffset + i * Short.BYTES);\n-            Unsafe.getUnsafe().putShort(tpayload, vOffset + i * Short.BYTES, f.apply(i, v1, v2));\n+            short v1 = U.getShort(vec1, vOffset + i * Short.BYTES);\n+            short v2 = U.getShort(vec2, vOffset + i * Short.BYTES);\n+            U.putShort(tpayload, vOffset + i * Short.BYTES, f.apply(i, v1, v2));\n@@ -224,1 +227,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -244,1 +247,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -249,4 +252,5 @@\n-            short v1 = Unsafe.getUnsafe().getShort(vec1, vOffset + i * Short.BYTES);\n-            short v2 = Unsafe.getUnsafe().getShort(vec2, vOffset + i * Short.BYTES);\n-            short v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2) : v1;\n-            Unsafe.getUnsafe().putShort(tpayload, vOffset + i * Short.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                short v1 = U.getShort(vec1, vOffset + i * Short.BYTES);\n+                short v2 = U.getShort(vec2, vOffset + i * Short.BYTES);\n+                U.putShort(tpayload, vOffset + i * Short.BYTES, f.apply(i, v1, v2));\n+            }\n@@ -254,1 +258,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -278,1 +282,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -282,4 +286,4 @@\n-            short v1 = Unsafe.getUnsafe().getShort(vec1, vOffset + i * Short.BYTES);\n-            short v2 = Unsafe.getUnsafe().getShort(vec2, vOffset + i * Short.BYTES);\n-            short v3 = Unsafe.getUnsafe().getShort(vec3, vOffset + i * Short.BYTES);\n-            Unsafe.getUnsafe().putShort(tpayload, vOffset + i * Short.BYTES, f.apply(i, v1, v2, v3));\n+            short v1 = U.getShort(vec1, vOffset + i * Short.BYTES);\n+            short v2 = U.getShort(vec2, vOffset + i * Short.BYTES);\n+            short v3 = U.getShort(vec3, vOffset + i * Short.BYTES);\n+            U.putShort(tpayload, vOffset + i * Short.BYTES, f.apply(i, v1, v2, v3));\n@@ -287,1 +291,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -310,1 +314,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -315,5 +319,6 @@\n-            short v1 = Unsafe.getUnsafe().getShort(vec1, vOffset + i * Short.BYTES);\n-            short v2 = Unsafe.getUnsafe().getShort(vec2, vOffset + i * Short.BYTES);\n-            short v3 = Unsafe.getUnsafe().getShort(vec3, vOffset + i * Short.BYTES);\n-            short v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2, v3) : v1;\n-            Unsafe.getUnsafe().putShort(tpayload, vOffset + i * Short.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                short v1 = U.getShort(vec1, vOffset + i * Short.BYTES);\n+                short v2 = U.getShort(vec2, vOffset + i * Short.BYTES);\n+                short v3 = U.getShort(vec3, vOffset + i * Short.BYTES);\n+                U.putShort(tpayload, vOffset + i * Short.BYTES, f.apply(i, v1, v2, v3));\n+            }\n@@ -321,1 +326,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -343,2 +348,2 @@\n-            short v1 = Unsafe.getUnsafe().getShort(vec, vOffset + i * Short.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n+            short v1 = U.getShort(vec, vOffset + i * Short.BYTES);\n+            v = U.getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n@@ -356,1 +361,1 @@\n-            short v1 = Unsafe.getUnsafe().getShort(vec, vOffset + i * Short.BYTES);\n+            short v1 = U.getShort(vec, vOffset + i * Short.BYTES);\n@@ -377,1 +382,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -381,1 +386,1 @@\n-            Unsafe.getUnsafe().putShort(tpayload, vOffset + i * Short.BYTES, f.apply(memory, offset, i));\n+            U.putShort(tpayload, vOffset + i * Short.BYTES, f.apply(memory, offset, i));\n@@ -383,1 +388,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -395,3 +400,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                short.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(short.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -402,2 +406,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putShort(tpayload, vOffset + i * Short.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putShort(tpayload, vOffset + i * Short.BYTES, f.apply(memory, offset, i));\n@@ -406,1 +410,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -410,1 +414,0 @@\n-\n@@ -424,1 +427,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -428,1 +431,1 @@\n-            Unsafe.getUnsafe().putShort(tpayload, vOffset + i * Short.BYTES, f.apply(memory, offset, i));\n+            U.putShort(tpayload, vOffset + i * Short.BYTES, f.apply(memory, offset, i));\n@@ -430,1 +433,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -442,3 +445,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                short.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory(short.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -449,2 +451,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().putShort(tpayload, vOffset + i * Short.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.putShort(tpayload, vOffset + i * Short.BYTES, f.apply(memory, offset, i));\n@@ -453,1 +455,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -474,1 +476,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getShort(vec, vOffset + i * Short.BYTES));\n+            f.apply(memory, offset, i, U.getShort(vec, vOffset + i * Short.BYTES));\n@@ -490,2 +492,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getShort(vec, vOffset + i * Short.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getShort(vec, vOffset + i * Short.BYTES));\n@@ -510,1 +512,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().getShort(vec, vOffset + i * Short.BYTES));\n+            f.apply(memory, offset, i, U.getShort(vec, vOffset + i * Short.BYTES));\n@@ -526,2 +528,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().getShort(vec, vOffset + i * Short.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.getShort(vec, vOffset + i * Short.BYTES));\n@@ -554,1 +556,1 @@\n-        mbits = Unsafe.getUnsafe().makePrivateBuffer(mbits);\n+        mbits = U.makePrivateBuffer(mbits);\n@@ -558,3 +560,3 @@\n-            short v1 = Unsafe.getUnsafe().getShort(vec1, vOffset + i * Short.BYTES);\n-            short v2 = Unsafe.getUnsafe().getShort(vec2, vOffset + i * Short.BYTES);\n-            Unsafe.getUnsafe().putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n+            short v1 = U.getShort(vec1, vOffset + i * Short.BYTES);\n+            short v2 = U.getShort(vec2, vOffset + i * Short.BYTES);\n+            U.putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n@@ -562,1 +564,1 @@\n-        mbits = Unsafe.getUnsafe().finishPrivateBuffer(mbits);\n+        mbits = U.finishPrivateBuffer(mbits);\n@@ -4354,1 +4356,1 @@\n-                if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+                if (U.getBoolean(mbits, mOffset + i)) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":71,"deletions":69,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -64,0 +64,2 @@\n+    static final Unsafe U = Unsafe.getUnsafe();\n+\n@@ -144,1 +146,1 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+            if (U.getBoolean(mbits, mOffset + i)) {\n@@ -166,1 +168,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -170,2 +172,2 @@\n-            $type$ v = Unsafe.getUnsafe().get$Type$(vec, vOffset + i * $Boxtype$.BYTES);\n-            Unsafe.getUnsafe().put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(i, v));\n+            $type$ v = U.get$Type$(vec, vOffset + i * $Boxtype$.BYTES);\n+            U.put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(i, v));\n@@ -173,1 +175,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -188,1 +190,0 @@\n-        VectorPayloadMF mbits = ((AbstractMask<$Boxtype$>)m).getBits();\n@@ -190,1 +191,2 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+        VectorPayloadMF mbits = ((AbstractMask<$Boxtype$>)m).getBits();\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -195,3 +197,4 @@\n-            $type$ v = Unsafe.getUnsafe().get$Type$(vec, vOffset + i * $Boxtype$.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v) : v;\n-            Unsafe.getUnsafe().put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                $type$ v = U.get$Type$(vec, vOffset + i * $Boxtype$.BYTES);\n+                U.put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(i, v));\n+            }\n@@ -199,1 +202,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -220,1 +223,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -224,3 +227,3 @@\n-            $type$ v1 = Unsafe.getUnsafe().get$Type$(vec1, vOffset + i * $Boxtype$.BYTES);\n-            $type$ v2 = Unsafe.getUnsafe().get$Type$(vec2, vOffset + i * $Boxtype$.BYTES);\n-            Unsafe.getUnsafe().put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(i, v1, v2));\n+            $type$ v1 = U.get$Type$(vec1, vOffset + i * $Boxtype$.BYTES);\n+            $type$ v2 = U.get$Type$(vec2, vOffset + i * $Boxtype$.BYTES);\n+            U.put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(i, v1, v2));\n@@ -228,1 +231,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -248,1 +251,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -253,4 +256,5 @@\n-            $type$ v1 = Unsafe.getUnsafe().get$Type$(vec1, vOffset + i * $Boxtype$.BYTES);\n-            $type$ v2 = Unsafe.getUnsafe().get$Type$(vec2, vOffset + i * $Boxtype$.BYTES);\n-            $type$ v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2) : v1;\n-            Unsafe.getUnsafe().put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                $type$ v1 = U.get$Type$(vec1, vOffset + i * $Boxtype$.BYTES);\n+                $type$ v2 = U.get$Type$(vec2, vOffset + i * $Boxtype$.BYTES);\n+                U.put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(i, v1, v2));\n+            }\n@@ -258,1 +262,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -282,1 +286,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -286,4 +290,4 @@\n-            $type$ v1 = Unsafe.getUnsafe().get$Type$(vec1, vOffset + i * $Boxtype$.BYTES);\n-            $type$ v2 = Unsafe.getUnsafe().get$Type$(vec2, vOffset + i * $Boxtype$.BYTES);\n-            $type$ v3 = Unsafe.getUnsafe().get$Type$(vec3, vOffset + i * $Boxtype$.BYTES);\n-            Unsafe.getUnsafe().put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(i, v1, v2, v3));\n+            $type$ v1 = U.get$Type$(vec1, vOffset + i * $Boxtype$.BYTES);\n+            $type$ v2 = U.get$Type$(vec2, vOffset + i * $Boxtype$.BYTES);\n+            $type$ v3 = U.get$Type$(vec3, vOffset + i * $Boxtype$.BYTES);\n+            U.put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(i, v1, v2, v3));\n@@ -291,1 +295,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -314,1 +318,1 @@\n-        VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec1);\n+        VectorPayloadMF tpayload = U.makePrivateBuffer(vec1);\n@@ -319,5 +323,6 @@\n-            $type$ v1 = Unsafe.getUnsafe().get$Type$(vec1, vOffset + i * $Boxtype$.BYTES);\n-            $type$ v2 = Unsafe.getUnsafe().get$Type$(vec2, vOffset + i * $Boxtype$.BYTES);\n-            $type$ v3 = Unsafe.getUnsafe().get$Type$(vec3, vOffset + i * $Boxtype$.BYTES);\n-            $type$ v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v1, v2, v3) : v1;\n-            Unsafe.getUnsafe().put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, v);\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                $type$ v1 = U.get$Type$(vec1, vOffset + i * $Boxtype$.BYTES);\n+                $type$ v2 = U.get$Type$(vec2, vOffset + i * $Boxtype$.BYTES);\n+                $type$ v3 = U.get$Type$(vec3, vOffset + i * $Boxtype$.BYTES);\n+                U.put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(i, v1, v2, v3));\n+            }\n@@ -325,1 +330,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -347,2 +352,2 @@\n-            $type$ v1 = Unsafe.getUnsafe().get$Type$(vec, vOffset + i * $Boxtype$.BYTES);\n-            v = Unsafe.getUnsafe().getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n+            $type$ v1 = U.get$Type$(vec, vOffset + i * $Boxtype$.BYTES);\n+            v = U.getBoolean(mbits, mOffset + i) ? f.apply(i, v, v1) : v;\n@@ -360,1 +365,1 @@\n-            $type$ v1 = Unsafe.getUnsafe().get$Type$(vec, vOffset + i * $Boxtype$.BYTES);\n+            $type$ v1 = U.get$Type$(vec, vOffset + i * $Boxtype$.BYTES);\n@@ -381,1 +386,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -385,1 +390,1 @@\n-            Unsafe.getUnsafe().put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(memory, offset, i));\n+            U.put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(memory, offset, i));\n@@ -387,1 +392,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -399,3 +404,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                $type$.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory($type$.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -406,2 +410,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(memory, offset, i));\n@@ -410,1 +414,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -414,1 +418,0 @@\n-\n@@ -428,1 +431,1 @@\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n+            U.makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n@@ -432,1 +435,1 @@\n-            Unsafe.getUnsafe().put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(memory, offset, i));\n+            U.put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(memory, offset, i));\n@@ -434,1 +437,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -446,3 +449,2 @@\n-        VectorPayloadMF tpayload =\n-            Unsafe.getUnsafe().makePrivateBuffer(VectorPayloadMF.newVectorInstanceFactory(\n-                $type$.class, length, is_max_species));\n+        VectorPayloadMF tpayload = VectorPayloadMF.newVectorInstanceFactory($type$.class, length, is_max_species);\n+        tpayload = U.makePrivateBuffer(tpayload);\n@@ -453,2 +455,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                Unsafe.getUnsafe().put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(memory, offset, i));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                U.put$Type$(tpayload, vOffset + i * $Boxtype$.BYTES, f.apply(memory, offset, i));\n@@ -457,1 +459,1 @@\n-        tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+        tpayload = U.finishPrivateBuffer(tpayload);\n@@ -478,1 +480,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().get$Type$(vec, vOffset + i * $Boxtype$.BYTES));\n+            f.apply(memory, offset, i, U.get$Type$(vec, vOffset + i * $Boxtype$.BYTES));\n@@ -494,2 +496,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().get$Type$(vec, vOffset + i * $Boxtype$.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.get$Type$(vec, vOffset + i * $Boxtype$.BYTES));\n@@ -514,1 +516,1 @@\n-            f.apply(memory, offset, i, Unsafe.getUnsafe().get$Type$(vec, vOffset + i * $Boxtype$.BYTES));\n+            f.apply(memory, offset, i, U.get$Type$(vec, vOffset + i * $Boxtype$.BYTES));\n@@ -530,2 +532,2 @@\n-            if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n-                f.apply(memory, offset, i, Unsafe.getUnsafe().get$Type$(vec, vOffset + i * $Boxtype$.BYTES));\n+            if (U.getBoolean(mbits, mOffset + i)) {\n+                f.apply(memory, offset, i, U.get$Type$(vec, vOffset + i * $Boxtype$.BYTES));\n@@ -558,1 +560,1 @@\n-        mbits = Unsafe.getUnsafe().makePrivateBuffer(mbits);\n+        mbits = U.makePrivateBuffer(mbits);\n@@ -562,3 +564,3 @@\n-            $type$ v1 = Unsafe.getUnsafe().get$Type$(vec1, vOffset + i * $Boxtype$.BYTES);\n-            $type$ v2 = Unsafe.getUnsafe().get$Type$(vec2, vOffset + i * $Boxtype$.BYTES);\n-            Unsafe.getUnsafe().putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n+            $type$ v1 = U.get$Type$(vec1, vOffset + i * $Boxtype$.BYTES);\n+            $type$ v2 = U.get$Type$(vec2, vOffset + i * $Boxtype$.BYTES);\n+            U.putBoolean(mbits, mOffset + i, f.apply(cond, i, v1, v2));\n@@ -566,1 +568,1 @@\n-        mbits = Unsafe.getUnsafe().finishPrivateBuffer(mbits);\n+        mbits = U.finishPrivateBuffer(mbits);\n@@ -5637,1 +5639,1 @@\n-                if (Unsafe.getUnsafe().getBoolean(mbits, mOffset + i)) {\n+                if (U.getBoolean(mbits, mOffset + i)) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":71,"deletions":69,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -570,1 +570,1 @@\n-                         return (long)$Type$.$type$To$Bitstype$Bits(Unsafe.getUnsafe().get$Type$(vecpayload, start_offset + ix * $Boxtype$.BYTES));\n+                         return (long)$Type$.$type$To$Bitstype$Bits(U.get$Type$(vecpayload, start_offset + ix * $Boxtype$.BYTES));\n@@ -619,1 +619,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -621,2 +621,2 @@\n-                                    Unsafe.getUnsafe().put$Type$(tpayload, start_offset + ix * $Boxtype$.BYTES, $Type$.$bitstype$BitsTo$Type$(($bitstype$)bits));\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.put$Type$(tpayload, start_offset + ix * $Boxtype$.BYTES, $Type$.$bitstype$BitsTo$Type$(($bitstype$)bits));\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -725,1 +725,1 @@\n-                                 return (long)Unsafe.getUnsafe().get$Type$(vecpayload, start_offset + ix * $Boxtype$.BYTES);\n+                                 return (long)U.get$Type$(vecpayload, start_offset + ix * $Boxtype$.BYTES);\n@@ -826,1 +826,1 @@\n-                                    VectorPayloadMF tpayload = Unsafe.getUnsafe().makePrivateBuffer(vec);\n+                                    VectorPayloadMF tpayload = U.makePrivateBuffer(vec);\n@@ -828,2 +828,2 @@\n-                                    Unsafe.getUnsafe().put$Type$(tpayload, start_offset + ix * $Boxtype$.BYTES, ($type$)bits);\n-                                    tpayload = Unsafe.getUnsafe().finishPrivateBuffer(tpayload);\n+                                    U.put$Type$(tpayload, start_offset + ix * $Boxtype$.BYTES, ($type$)bits);\n+                                    tpayload = U.finishPrivateBuffer(tpayload);\n@@ -1031,1 +1031,1 @@\n-            newObj = Unsafe.getUnsafe().makePrivateBuffer(newObj);\n+            newObj = U.makePrivateBuffer(newObj);\n@@ -1035,1 +1035,1 @@\n-                Unsafe.getUnsafe().putBoolean(newObj, mf_offset + i, true);\n+                U.putBoolean(newObj, mf_offset + i, true);\n@@ -1037,1 +1037,1 @@\n-            newObj = Unsafe.getUnsafe().finishPrivateBuffer(newObj);\n+            newObj = U.finishPrivateBuffer(newObj);\n@@ -1139,1 +1139,1 @@\n-            r = Unsafe.getUnsafe().makePrivateBuffer(r);\n+            r = U.makePrivateBuffer(r);\n@@ -1142,3 +1142,3 @@\n-                int ssi = Unsafe.getUnsafe().getByte(indices2, offset + i * Byte.BYTES);\n-                int si = Unsafe.getUnsafe().getByte(indices1, offset + ssi * Byte.BYTES);\n-                Unsafe.getUnsafe().putByte(r, offset + i * Byte.BYTES, (byte) si);\n+                int ssi = U.getByte(indices2, offset + i * Byte.BYTES);\n+                int si = U.getByte(indices1, offset + ssi * Byte.BYTES);\n+                U.putByte(r, offset + i * Byte.BYTES, (byte) si);\n@@ -1146,1 +1146,1 @@\n-            r = Unsafe.getUnsafe().finishPrivateBuffer(r);\n+            r = U.finishPrivateBuffer(r);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"}]}