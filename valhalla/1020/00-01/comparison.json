{"files":[{"patch":"@@ -279,0 +279,4 @@\n+            if (--counter[0] == 0) {\n+                throw new StackOverflowError(\"fail to evaluate == for value class \" + o1.getClass().getName());\n+            }\n+\n@@ -280,4 +284,0 @@\n-                counter[0]--;\n-                if (counter[0] == 0) {\n-                    throw new StackOverflowError(\"fail to evaluate == for value class \" + o1.getClass().getName());\n-                }\n@@ -297,0 +297,4 @@\n+            if (--counter[0] == 0) {\n+                throw new StackOverflowError(\"fail to evaluate hashCode for value class \" + o.getClass().getName());\n+            }\n+\n@@ -298,4 +302,0 @@\n-                counter[0]--;\n-                if (counter[0] == 0) {\n-                    throw new StackOverflowError(\"fail to evaluate hashCode for value class \" + o.getClass().getName());\n-                }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/ValueObjectMethods.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -274,8 +274,1 @@\n-        Object ref = getReference(o, offset);\n-        \/\/ TODO: implicit constructible value object\n-        if (ref == null && type.isValue()) {\n-            \/\/ If the type of the returned reference is a primitive value type,\n-            \/\/ return the zero instance if null\n-            ref = ValueClass.zeroInstance(type);\n-        }\n-        return ref;\n+        return getReference(o, offset);\n@@ -285,8 +278,1 @@\n-        Object ref = getReferenceVolatile(o, offset);\n-        \/\/ TODO: implicit constructible value object\n-        if (ref == null && type.isValue()) {\n-            \/\/ If the type of the returned reference is a primitive value type,\n-            \/\/ return the zero instance if null\n-            ref = ValueClass.zeroInstance(type);\n-        }\n-        return ref;\n+        return getReferenceVolatile(o, offset);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Unsafe.java","additions":2,"deletions":16,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.lang.invoke.MethodHandles;\n","filename":"test\/jdk\/valhalla\/valuetypes\/ValueConstantDesc.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}