{"files":[{"patch":"@@ -1238,0 +1238,1 @@\n+                    boolean thisInvocation = false;\n@@ -1248,0 +1249,1 @@\n+                            thisInvocation = TreeInfo.name(mi.meth) == names._this;\n@@ -1254,1 +1256,6 @@\n-                        CtorPrologueVisitor ctorPrologueVisitor = new CtorPrologueVisitor(localEnv, addedSuperInIdentityClass && allowValueClasses);\n+                        CtorPrologueVisitor ctorPrologueVisitor = new CtorPrologueVisitor(localEnv,\n+                                addedSuperInIdentityClass && allowValueClasses ?\n+                                        PrologueVisitorMode.WARNINGS_ONLY :\n+                                        thisInvocation ?\n+                                                PrologueVisitorMode.THIS_CONSTRUCTOR :\n+                                                PrologueVisitorMode.SUPER_CONSTRUCTOR);\n@@ -1269,0 +1276,6 @@\n+    enum PrologueVisitorMode {\n+        WARNINGS_ONLY,\n+        SUPER_CONSTRUCTOR,\n+        THIS_CONSTRUCTOR\n+    }\n+\n@@ -1271,1 +1284,1 @@\n-        boolean warningsOnly;\n+        PrologueVisitorMode mode;\n@@ -1273,1 +1286,1 @@\n-        CtorPrologueVisitor(Env<AttrContext> localEnv, boolean warningsOnly) {\n+        CtorPrologueVisitor(Env<AttrContext> localEnv, PrologueVisitorMode mode) {\n@@ -1276,1 +1289,1 @@\n-            this.warningsOnly = warningsOnly;\n+            this.mode = mode;\n@@ -1314,1 +1327,1 @@\n-            if (!warningsOnly) {\n+            if (mode != PrologueVisitorMode.WARNINGS_ONLY) {\n@@ -1427,0 +1440,5 @@\n+                    \/\/ cant reference an instance field before a this constructor\n+                    if (mode == PrologueVisitorMode.THIS_CONSTRUCTOR) {\n+                        reportPrologueError(tree, sym);\n+                        return;\n+                    }\n@@ -1467,5 +1485,9 @@\n-                                if (!warningsOnly) {\n-                                    \/* do not generate proxies in warning only mode, as in that mode\n-                                     * we are dealing with code that is not in the prologue phase\n-                                     *\/\n-                                    localProxyVarsGen.addFieldReadInPrologue(localEnv.enclMethod, sym);\n+                                \/* do not generate proxies in warning only mode, as in that mode\n+                                 * we are dealing with code that is not in the prologue phase\n+                                 *\/\n+                                if (mode != PrologueVisitorMode.WARNINGS_ONLY) {\n+                                    if (mode == PrologueVisitorMode.THIS_CONSTRUCTOR) {\n+                                        reportPrologueError(tree, sym);\n+                                    } else {\n+                                        localProxyVarsGen.addFieldReadInPrologue(localEnv.enclMethod, sym);\n+                                    }\n@@ -1604,1 +1626,2 @@\n-                            CtorPrologueVisitor ctorPrologueVisitor = new CtorPrologueVisitor(initEnv, !v.isStrict());\n+                            CtorPrologueVisitor ctorPrologueVisitor = new CtorPrologueVisitor(initEnv,\n+                                    !v.isStrict() ? PrologueVisitorMode.WARNINGS_ONLY : PrologueVisitorMode.SUPER_CONSTRUCTOR);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":34,"deletions":11,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -400,1 +400,1 @@\n-    cannot reference {0} before supertype constructor has been called\n+    cannot reference {0} before constructor has been called\n@@ -404,1 +404,1 @@\n-    cannot assign initialized field ''{0}'' before supertype constructor has been called\n+    cannot assign initialized field ''{0}'' before constructor has been called\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,10 +19,0 @@\n-    class C2 {\n-        final int x;\n-        C2() {\n-            this(x = 3); \/\/ error\n-        }\n-        C2(int i) {\n-            x = 4;\n-        }\n-    }\n-\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/DA_DUConstructors.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,3 +1,2 @@\n-DA_DUConstructors.java:22:17: compiler.err.var.might.already.be.assigned: x\n-DA_DUConstructors.java:41:23: compiler.err.var.might.not.have.been.initialized: x\n-2 errors\n+DA_DUConstructors.java:31:23: compiler.err.var.might.not.have.been.initialized: x\n+1 error\n","filename":"test\/langtools\/tools\/javac\/DefiniteAssignment\/DA_DUConstructors.out","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-EarlyAssignmentNoPreview1.java:13:14: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n+EarlyAssignmentNoPreview1.java:12:9: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/EarlyAssignmentNoPreview1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-EarlyAssignmentNoPreview2.java:13:18: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n+EarlyAssignmentNoPreview2.java:12:13: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/EarlyAssignmentNoPreview2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-EarlyAssignmentNoPreview3.java:13:44: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n+EarlyAssignmentNoPreview3.java:12:39: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/EarlyAssignmentNoPreview3.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -248,0 +248,24 @@\n+\n+    static class Inner7 {\n+        private int x;\n+\n+        public Inner7(byte y) {\n+            x = y;\n+            this((int)y);\n+        }\n+        public Inner7(int x) {\n+            this.x = x;\n+            super();\n+        }\n+    }\n+\n+    static class Inner8 {\n+        final int x;\n+\n+        Inner8() {\n+            this(x = 3); \/\/ error\n+        }\n+        Inner8(int i) {\n+            x = 4;\n+        }\n+    }\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/SuperInitFails.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+SuperInitFails.java:253:13: compiler.err.cant.ref.before.ctor.called: x\n+SuperInitFails.java:266:18: compiler.err.cant.ref.before.ctor.called: x\n@@ -36,1 +38,1 @@\n-35 errors\n+37 errors\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/SuperInitFails.out","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -9,0 +9,2 @@\n+SuperInitFails.java:253:13: compiler.err.cant.ref.before.ctor.called: x\n+SuperInitFails.java:266:18: compiler.err.cant.ref.before.ctor.called: x\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/SuperInitFailsWarnings.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -428,5 +428,0 @@\n-        public Test20(byte y) {\n-            x = y;\n-            this((int)y);\n-            this.x++;\n-        }\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/SuperInitGood.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -951,1 +951,1 @@\n-        assertFail(\"compiler.err.var.might.already.be.assigned\",\n+        assertFail(\"compiler.err.cant.ref.before.ctor.called\",\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}