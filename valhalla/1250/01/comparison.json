{"files":[{"patch":"@@ -8,0 +8,1 @@\n+warning=issuestitle\n","filename":".jcheck\/conf","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -182,2 +182,3 @@\n-to\n-<code>jtreg:$(TOPDIR)\/test\/hotspot\/jtreg:tier1 jtreg:$(TOPDIR)\/test\/jdk:tier1 jtreg:$(TOPDIR)\/test\/langtools:tier1 jtreg:$(TOPDIR)\/test\/nashorn:tier1 jtreg:$(TOPDIR)\/test\/jaxp:tier1<\/code>.\n+to include all subcomponent test directories that define `tier1`,\n+for example:\n+<code>jtreg:$(TOPDIR)\/test\/hotspot\/jtreg:tier1 jtreg:$(TOPDIR)\/test\/jdk:tier1 jtreg:$(TOPDIR)\/test\/langtools:tier1 ...<\/code>.\n","filename":"doc\/testing.html","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -106,5 +106,5 @@\n-example, `:tier1` will expand to `jtreg:$(TOPDIR)\/test\/hotspot\/jtreg:tier1\n-jtreg:$(TOPDIR)\/test\/jdk:tier1 jtreg:$(TOPDIR)\/test\/langtools:tier1\n-jtreg:$(TOPDIR)\/test\/nashorn:tier1 jtreg:$(TOPDIR)\/test\/jaxp:tier1`. You can\n-always submit a list of fully qualified test descriptors in the `TEST` variable\n-if you want to shortcut the parser.\n+example, `:tier1` will expand to include all subcomponent test directories\n+that define `tier1`, for example: `jtreg:$(TOPDIR)\/test\/hotspot\/jtreg:tier1\n+jtreg:$(TOPDIR)\/test\/jdk:tier1 jtreg:$(TOPDIR)\/test\/langtools:tier1 ...`. You\n+can always submit a list of fully qualified test descriptors in the `TEST`\n+variable if you want to shortcut the parser.\n","filename":"doc\/testing.md","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -686,22 +686,19 @@\n-    $(eval MAN_$m := $(call FindModuleManDirs, $m)) \\\n-    $(foreach d, $(MAN_$m), \\\n-      $(foreach f, $(call ApplySpecFilter, $(filter %.md, $(call FindFiles, $d))), \\\n-        $(eval $m_$f_NAME := MAN_TO_HTML_$m_$(strip $(call RelativePath, $f, $(TOPDIR)))) \\\n-        $(eval $(call SetupProcessMarkdown, $($m_$f_NAME), \\\n-            SRC := $d, \\\n-            FILES := $f, \\\n-            DEST := $(DOCS_OUTPUTDIR)\/specs\/man, \\\n-            FILTER := $(PANDOC_HTML_MANPAGE_FILTER), \\\n-            CSS := $(GLOBAL_SPECS_DEFAULT_CSS_FILE), \\\n-            REPLACEMENTS := \\\n-\t\t@@COPYRIGHT_YEAR@@ => $(COPYRIGHT_YEAR) ; \\\n-\t\t@@VERSION_SHORT@@ => $(VERSION_SHORT) ; \\\n-\t\t@@VERSION_SPECIFICATION@@ => $(VERSION_SPECIFICATION), \\\n-            OPTIONS := --toc -V include-before='$(SPECS_TOP)' -V include-after='$(SPECS_BOTTOM_1)', \\\n-            POST_PROCESS := $(TOOL_FIXUPPANDOC) --insert-nav --nav-right-info '$(HEADER_RIGHT_SIDE_INFO)' \\\n-                --nav-subdirs 1 --nav-link-guides, \\\n-            EXTRA_DEPS := $(PANDOC_HTML_MANPAGE_FILTER) \\\n-                $(PANDOC_HTML_MANPAGE_FILTER_SOURCE), \\\n-        )) \\\n-        $(eval JDK_SPECS_TARGETS += $($($m_$f_NAME))) \\\n-      ) \\\n+    $(eval MAN_$m := $(call ApplySpecFilter, $(filter %.md, $(call FindFiles, \\\n+          $(call FindModuleManDirs, $m))))) \\\n+    $(if $(MAN_$m), \\\n+      $(eval $(call SetupProcessMarkdown, MAN_TO_HTML_$m, \\\n+        FILES := $(MAN_$m), \\\n+        DEST := $(DOCS_OUTPUTDIR)\/specs\/man, \\\n+        FILTER := $(PANDOC_HTML_MANPAGE_FILTER), \\\n+        CSS := $(GLOBAL_SPECS_DEFAULT_CSS_FILE), \\\n+        REPLACEMENTS := \\\n+            @@COPYRIGHT_YEAR@@ => $(COPYRIGHT_YEAR) ; \\\n+            @@VERSION_SHORT@@ => $(VERSION_SHORT) ; \\\n+            @@VERSION_SPECIFICATION@@ => $(VERSION_SPECIFICATION), \\\n+        OPTIONS := --toc -V include-before='$(SPECS_TOP)' -V include-after='$(SPECS_BOTTOM_1)', \\\n+        POST_PROCESS := $(TOOL_FIXUPPANDOC) --insert-nav --nav-right-info '$(HEADER_RIGHT_SIDE_INFO)' \\\n+            --nav-subdirs 1 --nav-link-guides, \\\n+        EXTRA_DEPS := $(PANDOC_HTML_MANPAGE_FILTER) \\\n+            $(PANDOC_HTML_MANPAGE_FILTER_SOURCE), \\\n+      )) \\\n+      $(eval JDK_SPECS_TARGETS += $(MAN_TO_HTML_$m)) \\\n","filename":"make\/Docs.gmk","additions":19,"deletions":22,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -31,0 +31,3 @@\n+# Hook to include the corresponding custom file, if present.\n+$(eval $(call IncludeCustomExtension, TestImage-pre.gmk))\n+\n","filename":"make\/TestImage.gmk","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -462,1 +462,1 @@\n-    CFLAGS_OS_DEF_JVM=\"-DAIX -Dalloca'(size)'=__builtin_alloca'(size)' -D_LARGE_FILES\"\n+    CFLAGS_OS_DEF_JVM=\"-DAIX -D_LARGE_FILES\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,1 +121,0 @@\n-    EXECUTABLE_LDFLAGS=\"$EXECUTABLE_LDFLAGS -Wl,--allow-shlib-undefined\"\n","filename":"make\/autoconf\/flags-ldflags.m4","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -193,0 +193,11 @@\n+  # Setup default CDS alignment. On platforms where one build may run on machines with different\n+  # page sizes, the JVM choses a compatible alignment to fit all possible page sizes. This slightly\n+  # increases archive size.\n+  # The only platform having this problem at the moment is Linux on aarch64, which may encounter\n+  # three different page sizes: 4K, 64K, and if run on Mac m1 hardware, 16K.\n+  COMPATIBLE_CDS_ALIGNMENT_DEFAULT=false\n+  if test \"x$OPENJDK_TARGET_OS\" = \"xlinux\" && test \"x$OPENJDK_TARGET_CPU\" = \"xaarch64\"; then\n+    COMPATIBLE_CDS_ALIGNMENT_DEFAULT=true\n+  fi\n+  AC_SUBST(COMPATIBLE_CDS_ALIGNMENT_DEFAULT)\n+\n@@ -676,1 +687,1 @@\n-  UTIL_ARG_ENABLE(NAME: compatible-cds-alignment, DEFAULT: false,\n+  UTIL_ARG_ENABLE(NAME: compatible-cds-alignment, DEFAULT: $COMPATIBLE_CDS_ALIGNMENT_DEFAULT,\n","filename":"make\/autoconf\/jdk-options.m4","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -41,2 +41,4 @@\n-  ifneq ($$($1_REPLACEMENTS), )\n-    $1_$2_PANDOC_INPUT := $$(SUPPORT_OUTPUTDIR)\/markdown\/$$($1_$2_MARKER)_pre.tmp\n+  # Only continue if this target file hasn't been processed already. This lets\n+  # the first found source file override any other with the same name.\n+  ifeq ($$($1_$2_OUTPUT_FILE_PROCESSED), )\n+    $1_$2_OUTPUT_FILE_PROCESSED := true\n@@ -44,8 +46,2 @@\n-    $$(eval $$(call SetupTextFileProcessing, $1_$2_PREPROCESSED, \\\n-        SOURCE_FILES := $$($1_$2_INPUT_FILE), \\\n-        OUTPUT_FILE := $$($1_$2_PANDOC_INPUT), \\\n-        REPLACEMENTS := $$($1_REPLACEMENTS), \\\n-    ))\n-  else\n-    $1_$2_PANDOC_INPUT := $$($1_$2_INPUT_FILE)\n-  endif\n+    ifneq ($$($1_REPLACEMENTS), )\n+      $1_$2_PANDOC_INPUT := $$(SUPPORT_OUTPUTDIR)\/markdown\/$$($1_$2_MARKER)_pre.tmp\n@@ -53,5 +49,8 @@\n-  ifneq ($$($1_POST_PROCESS), )\n-    $1_$2_PANDOC_OUTPUT := $$(SUPPORT_OUTPUTDIR)\/markdown\/$$($1_$2_MARKER)_post.tmp\n-  else\n-    $1_$2_PANDOC_OUTPUT := $$($1_$2_OUTPUT_FILE)\n-  endif\n+      $$(eval $$(call SetupTextFileProcessing, $1_$2_PREPROCESSED, \\\n+          SOURCE_FILES := $$($1_$2_INPUT_FILE), \\\n+          OUTPUT_FILE := $$($1_$2_PANDOC_INPUT), \\\n+          REPLACEMENTS := $$($1_REPLACEMENTS), \\\n+      ))\n+    else\n+      $1_$2_PANDOC_INPUT := $$($1_$2_INPUT_FILE)\n+    endif\n@@ -59,3 +58,2 @@\n-  ifneq ($$($1_CSS), )\n-    ifneq ($$(findstring https:\/, $$($1_CSS)), )\n-      $1_$2_CSS_OPTION := --css '$$($1_CSS)'\n+    ifneq ($$($1_POST_PROCESS), )\n+      $1_$2_PANDOC_OUTPUT := $$(SUPPORT_OUTPUTDIR)\/markdown\/$$($1_$2_MARKER)_post.tmp\n@@ -63,2 +61,10 @@\n-      $1_$2_CSS := $$(strip $$(call RelativePath, $$($1_CSS), $$($1_$2_TARGET_DIR)))\n-      $1_$2_CSS_OPTION := --css '$$($1_$2_CSS)'\n+      $1_$2_PANDOC_OUTPUT := $$($1_$2_OUTPUT_FILE)\n+    endif\n+\n+    ifneq ($$($1_CSS), )\n+      ifneq ($$(findstring https:\/, $$($1_CSS)), )\n+        $1_$2_CSS_OPTION := --css '$$($1_CSS)'\n+      else\n+        $1_$2_CSS := $$(strip $$(call RelativePath, $$($1_CSS), $$($1_$2_TARGET_DIR)))\n+        $1_$2_CSS_OPTION := --css '$$($1_$2_CSS)'\n+      endif\n@@ -66,1 +72,0 @@\n-  endif\n@@ -68,4 +73,4 @@\n-  # This does not need to be included in VARDEPS since it's from the actual\n-  # source file. Only run the shell if the recipe gets executed below.\n-  $1_$2_OPTIONS_FROM_SRC = \\\n-      $$(shell $$(GREP) _pandoc-options_: $3\/$2 | $$(CUT) -d : -f 2-)\n+    # This does not need to be included in VARDEPS since it's from the actual\n+    # source file. Only run the shell if the recipe gets executed below.\n+    $1_$2_OPTIONS_FROM_SRC = \\\n+        $$(shell $$(GREP) _pandoc-options_: $3\/$2 | $$(CUT) -d : -f 2-)\n@@ -73,3 +78,3 @@\n-  ifneq ($$($1_FILTER), )\n-    $1_$2_OPTIONS := --filter $$($1_FILTER)\n-  endif\n+    ifneq ($$($1_FILTER), )\n+      $1_$2_OPTIONS := --filter $$($1_FILTER)\n+    endif\n@@ -77,4 +82,4 @@\n-  $1_$2_VARDEPS := $$($1_OPTIONS) $$($1_$2_OPTIONS) $$($1_CSS) \\\n-      $$($1_REPLACEMENTS) $$($1_POST_PROCESS)\n-  $1_$2_VARDEPS_FILE := $$(call DependOnVariable, $1_$2_VARDEPS, \\\n-      $$(SUPPORT_OUTPUTDIR)\/markdown\/$$($1_$2_MARKER).vardeps)\n+    $1_$2_VARDEPS := $$($1_OPTIONS) $$($1_$2_OPTIONS) $$($1_CSS) \\\n+        $$($1_REPLACEMENTS) $$($1_POST_PROCESS)\n+    $1_$2_VARDEPS_FILE := $$(call DependOnVariable, $1_$2_VARDEPS, \\\n+        $$(SUPPORT_OUTPUTDIR)\/markdown\/$$($1_$2_MARKER).vardeps)\n@@ -82,1 +87,1 @@\n-  $$($1_$2_PANDOC_OUTPUT): $$($1_$2_PANDOC_INPUT) $$($1_$2_VARDEPS_FILE) $$($1_EXTRA_DEPS)\n+    $$($1_$2_PANDOC_OUTPUT): $$($1_$2_PANDOC_INPUT) $$($1_$2_VARDEPS_FILE) $$($1_EXTRA_DEPS)\n@@ -99,4 +104,4 @@\n-  # If we have no post processing, PANDOC_OUTPUT is set to OUTPUT_FILE. Otherwise\n-  # PANDOC_OUTPUT is a temporary file, and we must now create the real OUTPUT_FILE.\n-  ifneq ($$($1_POST_PROCESS), )\n-    $$($1_$2_OUTPUT_FILE): $$($1_$2_PANDOC_OUTPUT)\n+    # If we have no post processing, PANDOC_OUTPUT is set to OUTPUT_FILE. Otherwise\n+    # PANDOC_OUTPUT is a temporary file, and we must now create the real OUTPUT_FILE.\n+    ifneq ($$($1_POST_PROCESS), )\n+      $$($1_$2_OUTPUT_FILE): $$($1_$2_PANDOC_OUTPUT)\n@@ -107,1 +112,1 @@\n-  endif\n+    endif\n@@ -109,1 +114,2 @@\n-  $1 += $$($1_$2_OUTPUT_FILE)\n+    $1 += $$($1_$2_OUTPUT_FILE)\n+  endif\n","filename":"make\/common\/ProcessMarkdown.gmk","additions":45,"deletions":39,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -123,0 +123,1 @@\n+    jdk.internal.le \\\n","filename":"make\/conf\/module-loader-map.conf","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -90,0 +90,1 @@\n+    static final String LIKELY_SCRIPT_PREFIX = \"likelyScript.\";\n@@ -117,0 +118,1 @@\n+    static boolean nonlikelyScript;\n@@ -120,0 +122,3 @@\n+    \/\/ \"likelyScript\" map\n+    private static final Map<String, SortedSet<String>> likelyScriptMap = new HashMap<>();\n+\n@@ -178,1 +183,1 @@\n-       \/\/ no instantiation\n+        \/\/ no instantiation\n@@ -478,2 +483,2 @@\n-                .filter(key -> key.startsWith(PARENT_LOCALE_PREFIX))\n-                .forEach(key -> {\n+            .filter(key -> key.startsWith(PARENT_LOCALE_PREFIX))\n+            .forEach(key -> {\n@@ -495,0 +500,10 @@\n+        handlerLikelySubtags.getData().forEach((from, to) -> {\n+            if (!from.contains(\"-\")) { \/\/ look for language-only tag\n+                var script = to.split(\"-\")[1];\n+                var key = LIKELY_SCRIPT_PREFIX + script;\n+                var prev = likelyScriptMap.putIfAbsent(key, new TreeSet<String>(Set.of(from)));\n+                if (prev != null) {\n+                    prev.add(from);\n+                }\n+            }\n+        });\n@@ -564,0 +579,1 @@\n+            metaInfo.putAll(likelyScriptMap);\n@@ -1138,1 +1154,1 @@\n-            Locale p = childToParentLocaleMap.get(l);\n+            Locale p = getParentLocale(l);\n@@ -1155,0 +1171,21 @@\n+    private static Locale getParentLocale(Locale child) {\n+        Locale parent = childToParentLocaleMap.get(child);\n+\n+        \/\/ check non-likely script for root\n+        if (nonlikelyScript && parent == null && child.getCountry().isEmpty()) {\n+            var lang = \" \" + child.getLanguage() + \" \";\n+            var script = child.getScript();\n+\n+            if (!script.isEmpty()) {\n+                parent = likelyScriptMap.entrySet().stream()\n+                    .filter(e -> e.getValue().contains(lang))\n+                    .findAny()\n+                    .map(Map.Entry::getKey)\n+                    .map(likely -> likely.equals(script) ? null : Locale.ROOT)\n+                    .orElse(null);\n+            }\n+        }\n+\n+        return parent;\n+    }\n+\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/CLDRConverter.java","additions":41,"deletions":4,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+import java.util.stream.Collectors;\n@@ -309,7 +310,6 @@\n-                    private static final Map<String, String> resourceNameToLocales = HashMap.newHashMap(%d);\n-                %s\n-                    static {\n-                \"\"\", CLDRConverter.isBaseModule ? \"cldr\" : \"resources.cldr.provider\",\n-                className, metaInfo.keySet().stream().filter(k -> k.equals(\"AvailableLocales\")).count(),\n-                CLDRConverter.isBaseModule ?\n-                    \"\"\"\n+                \"\"\",\n+                    CLDRConverter.isBaseModule ? \"cldr\" : \"resources.cldr.provider\",\n+                    className);\n+\n+            if (CLDRConverter.isBaseModule) {\n+                out.printf(\"\"\"\n@@ -318,0 +318,3 @@\n+                        static final boolean nonlikelyScript = %s; \/\/ package access from CLDRLocaleProviderAdapter\n+\n+                        static {\n@@ -320,24 +323,11 @@\n-                        CLDRConverter.handlerSupplMeta.getLanguageAliasData().size()) :\n-                    \"\");\n-\n-            for (String key : metaInfo.keySet()) {\n-                if (key.startsWith(CLDRConverter.PARENT_LOCALE_PREFIX)) {\n-                    String parentTag = key.substring(CLDRConverter.PARENT_LOCALE_PREFIX.length());\n-                    if (\"root\".equals(parentTag)) {\n-                        out.printf(\"        parentLocalesMap.put(Locale.ROOT,\\n\");\n-                    } else {\n-                        out.printf(\"        parentLocalesMap.put(Locale.forLanguageTag(\\\"%s\\\"),\\n\",\n-                                   parentTag);\n-                    }\n-                    String[] children = toLocaleList(metaInfo.get(key), true).split(\" \");\n-                    Arrays.sort(children);\n-                    out.printf(\"            new String[] {\\n\" +\n-                               \"                \");\n-                    int count = 0;\n-                    for (int i = 0; i < children.length; i++) {\n-                        String child = children[i];\n-                        out.printf(\"\\\"%s\\\", \", child);\n-                        count += child.length() + 4;\n-                        if (i != children.length - 1 && count > 64) {\n-                            out.printf(\"\\n                \");\n-                            count = 0;\n+                        CLDRConverter.handlerSupplMeta.getLanguageAliasData().size(),\n+                        Boolean.valueOf(CLDRConverter.nonlikelyScript)));\n+\n+                for (String key : metaInfo.keySet()) {\n+                    if (key.startsWith(CLDRConverter.PARENT_LOCALE_PREFIX)) {\n+                        String parentTag = key.substring(CLDRConverter.PARENT_LOCALE_PREFIX.length());\n+                        if (\"root\".equals(parentTag)) {\n+                            out.printf(\"        parentLocalesMap.put(Locale.ROOT,\\n\");\n+                        } else {\n+                            out.printf(\"        parentLocalesMap.put(Locale.forLanguageTag(\\\"%s\\\"),\\n\",\n+                                    parentTag);\n@@ -345,6 +335,1 @@\n-                    }\n-                    out.printf(\"\\n            });\\n\");\n-                } else {\n-                    if (\"AvailableLocales\".equals(key)) {\n-                        out.printf(\"        resourceNameToLocales.put(\\\"%s\\\",\\n\", key);\n-                        out.printf(\"            \\\"%s\\\");\\n\", toLocaleList(applyLanguageAliases(metaInfo.get(key)), false));\n+                        generateStringArray(metaInfo.get(key), out);\n@@ -353,3 +338,3 @@\n-            }\n-            \/\/ for languageAliasMap\n-            if (CLDRConverter.isBaseModule) {\n+                out.println();\n+\n+                \/\/ for languageAliasMap\n@@ -359,1 +344,1 @@\n-            }\n+                out.printf(\"    }\\n\\n\");\n@@ -361,1 +346,1 @@\n-            out.printf(\"    }\\n\\n\");\n+                \/\/ end of static initializer block.\n@@ -363,4 +348,1 @@\n-            \/\/ end of static initializer block.\n-\n-            \/\/ Canonical TZ names for delayed initialization\n-            if (CLDRConverter.isBaseModule) {\n+                \/\/ Delayed initialization section\n@@ -368,2 +350,4 @@\n-                               private static class TZCanonicalIDMapHolder {\n-                                   static final Map<String, String> tzCanonicalIDMap = HashMap.newHashMap(%d);\n+                               private static class CLDRMapHolder {\n+                                   private static final Map<String, String> tzCanonicalIDMap = HashMap.newHashMap(%d);\n+                                   private static final Map<String, String> likelyScriptMap = HashMap.newHashMap(%d);\n+\n@@ -371,1 +355,2 @@\n-                           \"\"\", CLDRConverter.handlerTimeZone.getData().size());\n+                           \"\"\", CLDRConverter.handlerTimeZone.getData().size(),\n+                                metaInfo.keySet().stream().filter(k -> k.startsWith(CLDRConverter.LIKELY_SCRIPT_PREFIX)).count());\n@@ -376,1 +361,1 @@\n-                                ids[0]);\n+                            ids[0]);\n@@ -382,1 +367,12 @@\n-                out.printf(\"        }\\n    }\\n\\n\");\n+                out.println();\n+\n+                \/\/ for likelyScript map\n+                for (String key : metaInfo.keySet()) {\n+                    if (key.startsWith(CLDRConverter.LIKELY_SCRIPT_PREFIX)) {\n+                        \/\/ ensure spaces at the begin\/end for delimiting purposes\n+                        out.printf(\"            likelyScriptMap.put(\\\"%s\\\", \\\"%s\\\");\\n\",\n+                                key.substring(CLDRConverter.LIKELY_SCRIPT_PREFIX.length()),\n+                                \" \" + metaInfo.get(key).stream().collect(Collectors.joining(\" \")) + \" \");\n+                    }\n+                }\n+                out.printf(\"        }\\n    }\\n\");\n@@ -384,0 +380,1 @@\n+            out.println();\n@@ -393,1 +390,1 @@\n-                        return resourceNameToLocales.getOrDefault(category, \"\");\n+                        return \" %s\";\n@@ -395,2 +392,0 @@\n-                    %s\n-                }\n@@ -398,1 +393,4 @@\n-                CLDRConverter.isBaseModule ? \"\"\"\n+                toLocaleList(applyLanguageAliases(metaInfo.get(\"AvailableLocales\")), false));\n+\n+            if(CLDRConverter.isBaseModule) {\n+                out.printf(\"\"\"\n@@ -407,1 +405,1 @@\n-                        return TZCanonicalIDMapHolder.tzCanonicalIDMap;\n+                        return CLDRMapHolder.tzCanonicalIDMap;\n@@ -413,1 +411,8 @@\n-                \"\"\" : \"\");\n+\n+                    \/\/ package access from CLDRLocaleProviderAdapter\n+                    Map<String, String> likelyScriptMap() {\n+                        return CLDRMapHolder.likelyScriptMap;\n+                    }\n+                \"\"\");\n+            }\n+            out.printf(\"}\\n\");\n@@ -417,0 +422,18 @@\n+    private static void generateStringArray(SortedSet<String> set, PrintWriter out) throws IOException {\n+        String[] children = toLocaleList(set, true).split(\" \");\n+        Arrays.sort(children);\n+        out.printf(\"            new String[] {\\n\" +\n+                \"                \");\n+        int count = 0;\n+        for (int i = 0; i < children.length; i++) {\n+            String child = children[i];\n+            out.printf(\"\\\"%s\\\", \", child);\n+            count += child.length() + 4;\n+            if (i != children.length - 1 && count > 64) {\n+                out.printf(\"\\n                \");\n+                count = 0;\n+            }\n+        }\n+        out.printf(\"\\n            });\\n\");\n+    }\n+\n@@ -436,1 +459,3 @@\n-                sb.append(' ');\n+                if (sb.length() > 0) {\n+                    sb.append(' ');\n+                }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/ResourceBundleGenerator.java","additions":84,"deletions":59,"binary":false,"changes":143,"status":"modified"},{"patch":"@@ -60,2 +60,2 @@\n-    private final Map<String, Object> firstDayMap;\n-    private final Map<String, Object> minDaysMap;\n+    private static final Map<String, Object> firstDayMap = new HashMap<>();\n+    private static final Map<String, Object> minDaysMap = new HashMap<>();\n@@ -67,1 +67,1 @@\n-    private final Map<String, String> parentLocalesMap;\n+    private static final Map<String, String> parentLocalesMap = new HashMap<>();\n@@ -71,1 +71,1 @@\n-    private final Map<String, Map<String, SortedSet<String>>> inputSkeletonMap;\n+    private static final Map<String, Map<String, SortedSet<String>>> inputSkeletonMap = new HashMap<>();\n@@ -76,7 +76,0 @@\n-    SupplementalDataParseHandler() {\n-        firstDayMap = new HashMap<>();\n-        minDaysMap = new HashMap<>();\n-        parentLocalesMap = new HashMap<>();\n-        inputSkeletonMap = new HashMap<>();\n-    }\n-\n@@ -161,0 +154,2 @@\n+                    var parent = attributes.getValue(\"parent\").replaceAll(\"_\", \"-\");\n+\n@@ -162,1 +157,1 @@\n-                        attributes.getValue(\"parent\").replaceAll(\"_\", \"-\"),\n+                        parent,\n@@ -164,0 +159,4 @@\n+\n+                    if (\"root\".equals(parent)) {\n+                        CLDRConverter.nonlikelyScript = \"nonlikelyScript\".equals(attributes.getValue(\"localeRules\"));\n+                    }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/SupplementalDataParseHandler.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -315,3 +315,0 @@\n-            if (Math.abs(time - System.currentTimeMillis()) > ((long) 10) * 365 * 24 * 60 * 60 * 1000) {\n-                throw new RuntimeException(\"time is more than 10 years from present: \" + time);\n-            }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatecurrencydata\/GenerateCurrencyData.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -978,1 +978,1 @@\n-            int targetIdx = addString(cp, header.moduleMainClass);\n+            int targetIdx = addClassName(cp, header.moduleMainClass);\n","filename":"make\/langtools\/src\/classes\/build\/tools\/symbolgenerator\/CreateSymbols.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+\n+COPY += .ico\n","filename":"make\/modules\/jdk.httpserver\/Java.gmk","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,45 +0,0 @@\n-#\n-# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-include LibCommon.gmk\n-\n-ifeq ($(call isTargetOs, aix), false)\n-  ##############################################################################\n-  ## Build lible\n-  ##############################################################################\n-\n-  $(eval $(call SetupJdkLibrary, BUILD_LIBLE, \\\n-      NAME := le, \\\n-      LINK_TYPE := C++, \\\n-      OPTIMIZATION := LOW, \\\n-      EXTRA_HEADER_DIRS := \\\n-          java.base:libjava \\\n-          java.base:libjvm, \\\n-      LD_SET_ORIGIN := false, \\\n-      LIBS_windows := user32.lib, \\\n-  ))\n-\n-  TARGETS += $(BUILD_LIBLE)\n-endif\n","filename":"make\/modules\/jdk.internal.le\/Lib.gmk","additions":0,"deletions":45,"binary":false,"changes":45,"status":"deleted"},{"patch":"@@ -697,0 +697,5 @@\n+\/\/ Class for all non_special pointer registers (excluding rfp)\n+reg_class no_special_no_rfp_ptr_reg %{\n+  return _NO_SPECIAL_NO_RFP_PTR_REG_mask;\n+%}\n+\n@@ -1128,0 +1133,1 @@\n+extern RegMask _NO_SPECIAL_NO_RFP_PTR_REG_mask;\n@@ -1216,0 +1222,1 @@\n+  RegMask _NO_SPECIAL_NO_RFP_PTR_REG_mask;\n@@ -1252,0 +1259,3 @@\n+\n+    _NO_SPECIAL_NO_RFP_PTR_REG_mask = _NO_SPECIAL_PTR_REG_mask;\n+    _NO_SPECIAL_NO_RFP_PTR_REG_mask.Remove(OptoReg::as_OptoReg(r29->as_VMReg()));\n@@ -4716,0 +4726,12 @@\n+\/\/ This operand is not allowed to use rfp even if\n+\/\/ rfp is not used to hold the frame pointer.\n+operand iRegPNoSpNoRfp()\n+%{\n+  constraint(ALLOC_IN_RC(no_special_no_rfp_ptr_reg));\n+  match(RegP);\n+  match(iRegPNoSp);\n+  op_cost(0);\n+  format %{ %}\n+  interface(REG_INTER);\n+%}\n+\n@@ -16165,1 +16187,3 @@\n-instruct TailCalljmpInd(iRegPNoSp jump_target, inline_cache_RegP method_ptr)\n+\/\/ Don't use rfp for 'jump_target' because a MachEpilogNode has already been\n+\/\/ emitted just above the TailCall which has reset rfp to the caller state.\n+instruct TailCalljmpInd(iRegPNoSpNoRfp jump_target, inline_cache_RegP method_ptr)\n@@ -16178,1 +16202,1 @@\n-instruct TailjmpInd(iRegPNoSp jump_target, iRegP_R0 ex_oop)\n+instruct TailjmpInd(iRegPNoSpNoRfp jump_target, iRegP_R0 ex_oop)\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-\/\/ Copyright (c) 2020, 2023, Arm Limited. All rights reserved.\n+\/\/ Copyright (c) 2020, 2024, Arm Limited. All rights reserved.\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-\/\/ Copyright (c) 2020, 2023, Arm Limited. All rights reserved.\n+\/\/ Copyright (c) 2020, 2024, Arm Limited. All rights reserved.\n@@ -162,1 +162,0 @@\n-      case Op_LoadVectorGather:\n@@ -164,1 +163,0 @@\n-      case Op_LoadVectorGatherMasked:\n@@ -173,0 +171,6 @@\n+      case Op_LoadVectorGather:\n+      case Op_LoadVectorGatherMasked:\n+        if (UseSVE == 0 || is_subword_type(bt)) {\n+          return false;\n+        }\n+        break;\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1265,1 +1265,2 @@\n-                      *op->stub()->entry());\n+                      *op->stub()->entry(),\n+                      op->zero_array());\n@@ -2690,1 +2691,3 @@\n-  __ bind(*stub->continuation());\n+  if (stub != nullptr) {\n+    __ bind(*stub->continuation());\n+  }\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -894,1 +894,7 @@\n-  CodeEmitInfo* info = state_for(x, x->state());\n+  CodeEmitInfo* info = nullptr;\n+  if (x->state_before() != nullptr && x->state_before()->force_reexecute()) {\n+    info = state_for(x, x->state_before());\n+    info->set_force_reexecute();\n+  } else {\n+    info = state_for(x, x->state());\n+  }\n@@ -927,0 +933,3 @@\n+  if (x->check_flag(Instruction::OmitChecksFlag)) {\n+    flags = 0;\n+  }\n@@ -1149,1 +1158,7 @@\n-  CodeEmitInfo* info = state_for(x, x->state());\n+  CodeEmitInfo* info = nullptr;\n+  if (x->state_before() != nullptr && x->state_before()->force_reexecute()) {\n+    info = state_for(x, x->state_before());\n+    info->set_force_reexecute();\n+  } else {\n+    info = state_for(x, x->state());\n+  }\n@@ -1166,1 +1181,1 @@\n-  __ allocate_array(reg, len, tmp1, tmp2, tmp3, tmp4, elem_type, klass_reg, slow_path, false);\n+  __ allocate_array(reg, len, tmp1, tmp2, tmp3, tmp4, elem_type, klass_reg, slow_path, x->zero_array());\n@@ -1200,1 +1215,1 @@\n-  __ allocate_array(reg, len, tmp1, tmp2, tmp3, tmp4, T_OBJECT, klass_reg, slow_path, x->is_null_free());\n+  __ allocate_array(reg, len, tmp1, tmp2, tmp3, tmp4, T_OBJECT, klass_reg, slow_path, true, x->is_null_free());\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRGenerator_aarch64.cpp","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -289,2 +289,1 @@\n-\n-void C1_MacroAssembler::allocate_array(Register obj, Register len, Register t1, Register t2, int base_offset_in_bytes, int f, Register klass, Label& slow_case) {\n+void C1_MacroAssembler::allocate_array(Register obj, Register len, Register t1, Register t2, int base_offset_in_bytes, int f, Register klass, Label& slow_case, bool zero_array) {\n@@ -315,1 +314,3 @@\n-  initialize_body(obj, arr_size, base_offset, t1, t2);\n+  if (zero_array) {\n+    initialize_body(obj, arr_size, base_offset, t1, t2);\n+  }\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -103,1 +103,2 @@\n-  void allocate_array(Register obj, Register len, Register t, Register t2, int base_offset_in_bytes, int f, Register klass, Label& slow_case);\n+  \/\/ zero_array          : zero the allocated array or not\n+  void allocate_array(Register obj, Register len, Register t, Register t2, int base_offset_in_bytes, int f, Register klass, Label& slow_case, bool zero_array);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-  RegMaskIterator rmi(stub->live());\n+  RegMaskIterator rmi(stub->preserve_set());\n@@ -522,1 +522,1 @@\n-      \/\/ We have size encoding in OptoReg of stub->live()\n+      \/\/ We have size encoding in OptoReg of stub->preserve_set()\n@@ -563,6 +563,2 @@\n-  \/\/ Remove C-ABI SOE registers, scratch regs and _ref register that will be updated\n-  if (stub->result() != noreg) {\n-    _gp_regs -= RegSet::range(r19, r30) + RegSet::of(r8, r9, stub->result());\n-  } else {\n-    _gp_regs -= RegSet::range(r19, r30) + RegSet::of(r8, r9);\n-  }\n+  \/\/ Remove C-ABI SOE registers and scratch regs\n+  _gp_regs -= RegSet::range(r19, r30) + RegSet::of(r8, r9);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shared\/barrierSetAssembler_aarch64.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -145,3 +145,5 @@\n-\/\/ Default value if probing is not implemented for a certain platform: 128TB\n-static const size_t DEFAULT_MAX_ADDRESS_BIT = 47;\n-\/\/ Minimum value returned, if probing fails: 64GB\n+\/\/ Default value if probing is not implemented for a certain platform\n+\/\/ Max address bit is restricted by implicit assumptions in the code, for instance\n+\/\/ the bit layout of XForwardingEntry or Partial array entry (see XMarkStackEntry) in mark stack\n+static const size_t DEFAULT_MAX_ADDRESS_BIT = 46;\n+\/\/ Minimum value returned, if probing fails\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/x\/xGlobals_aarch64.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -39,3 +39,5 @@\n-\/\/ Default value if probing is not implemented for a certain platform: 128TB\n-static const size_t DEFAULT_MAX_ADDRESS_BIT = 47;\n-\/\/ Minimum value returned, if probing fails: 64GB\n+\/\/ Default value if probing is not implemented for a certain platform\n+\/\/ Max address bit is restricted by implicit assumptions in the code, for instance\n+\/\/ the bit layout of XForwardingEntry or Partial array entry (see XMarkStackEntry) in mark stack\n+static const size_t DEFAULT_MAX_ADDRESS_BIT = 46;\n+\/\/ Minimum value returned, if probing fail\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zAddress_aarch64.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1144,1 +1144,0 @@\n-  Assembler::InlineSkippedInstructionsCounter skipped_counter(masm);\n@@ -1163,1 +1162,0 @@\n-  Assembler::InlineSkippedInstructionsCounter skipped_counter(masm);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5908,1 +5908,0 @@\n-  Register cnt2 = tmp2;  \/\/ cnt2 only used in array length compare\n@@ -5911,0 +5910,1 @@\n+  int klass_offset  = arrayOopDesc::klass_offset_in_bytes();\n@@ -5914,0 +5914,10 @@\n+  \/\/ When the length offset is not aligned to 8 bytes,\n+  \/\/ then we align it down. This is valid because the new\n+  \/\/ offset will always be the klass which is the same\n+  \/\/ for type arrays.\n+  int start_offset = align_down(length_offset, BytesPerWord);\n+  int extra_length = base_offset - start_offset;\n+  assert(start_offset == length_offset || start_offset == klass_offset,\n+         \"start offset must be 8-byte-aligned or be the klass offset\");\n+  assert(base_offset != start_offset, \"must include the length field\");\n+  extra_length = extra_length \/ elem_size; \/\/ We count in elements, not bytes.\n@@ -5947,5 +5957,4 @@\n-    ldrw(cnt2, Address(a2, length_offset));\n-    eorw(tmp5, cnt1, cnt2);\n-    cbnzw(tmp5, DONE);\n-    lea(a1, Address(a1, base_offset));\n-    lea(a2, Address(a2, base_offset));\n+    \/\/ Increase loop counter by diff between base- and actual start-offset.\n+    addw(cnt1, cnt1, extra_length);\n+    lea(a1, Address(a1, start_offset));\n+    lea(a2, Address(a2, start_offset));\n@@ -6014,1 +6023,3 @@\n-    ldrw(cnt2, Address(a2, length_offset));\n+    \/\/ Increase loop counter by diff between base- and actual start-offset.\n+    addw(cnt1, cnt1, extra_length);\n+\n@@ -6019,1 +6030,1 @@\n-    ldr(tmp3, Address(pre(a1, base_offset)));\n+    ldr(tmp3, Address(pre(a1, start_offset)));\n@@ -6022,1 +6033,1 @@\n-    ldr(tmp4, Address(pre(a2, base_offset)));\n+    ldr(tmp4, Address(pre(a2, start_offset)));\n@@ -6024,2 +6035,0 @@\n-    cmp(cnt2, cnt1);\n-    br(NE, DONE);\n@@ -6057,3 +6066,1 @@\n-    ldr(tmp4, Address(pre(a2, base_offset)));\n-    cmp(cnt2, cnt1);\n-    br(NE, DONE);\n+    ldr(tmp4, Address(pre(a2, start_offset)));\n@@ -6080,3 +6087,0 @@\n-    cmp(cnt2, cnt1);\n-    br(NE, DONE);\n-    cbz(cnt1, SAME);\n@@ -6084,2 +6088,2 @@\n-    ldr(tmp3, Address(a1, base_offset));\n-    ldr(tmp4, Address(a2, base_offset));\n+    ldr(tmp3, Address(a1, start_offset));\n+    ldr(tmp4, Address(a2, start_offset));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":23,"deletions":19,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-void Relocation::pd_set_data_value(address x, intptr_t o, bool verify_only) {\n+void Relocation::pd_set_data_value(address x, bool verify_only) {\n","filename":"src\/hotspot\/cpu\/aarch64\/relocInfo_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-void Relocation::pd_set_data_value(address x, intptr_t o, bool verify_only) {\n+void Relocation::pd_set_data_value(address x, bool verify_only) {\n@@ -37,1 +37,1 @@\n-    guarantee(ni->data() == (intptr_t)(x + o), \"instructions must match\");\n+    guarantee(ni->data() == (intptr_t)x, \"instructions must match\");\n@@ -39,1 +39,1 @@\n-    ni->set_data((intptr_t)(x + o));\n+    ni->set_data((intptr_t)x);\n","filename":"src\/hotspot\/cpu\/arm\/relocInfo_arm.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -285,1 +285,1 @@\n-  : _masm(masm), _reg_mask(stub->live()), _result_reg(stub->result()) {\n+  : _masm(masm), _reg_mask(stub->preserve_set()) {\n@@ -320,5 +320,0 @@\n-      \/\/ '_result_reg' will hold the end result of the operation. Its content must thus not be preserved.\n-      if (std_reg == _result_reg) {\n-        continue;\n-      }\n-\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/barrierSetAssembler_ppc.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -101,1 +101,0 @@\n-  Register _result_reg;\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/barrierSetAssembler_ppc.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -890,1 +890,0 @@\n-  Assembler::InlineSkippedInstructionsCounter skipped_counter(masm);\n@@ -914,1 +913,0 @@\n-  Assembler::InlineSkippedInstructionsCounter skipped_counter(masm);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/z\/zBarrierSetAssembler_ppc.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,4 +35,1 @@\n-void Relocation::pd_set_data_value(address x, intptr_t o, bool verify_only) {\n-  \/\/ Currently we don't support splitting of relocations.\n-  assert(o == 0, \"tried to split relocations\");\n-\n+void Relocation::pd_set_data_value(address x, bool verify_only) {\n","filename":"src\/hotspot\/cpu\/ppc\/relocInfo_ppc.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1872,1 +1872,0 @@\n-  INSN(vandn_vx,   0b1010111, 0b100, 0b000001);\n@@ -1874,1 +1873,0 @@\n-  INSN(vclmul_vx,  0b1010111, 0b110, 0b001100);\n@@ -1876,1 +1874,0 @@\n-  INSN(vclmulh_vx, 0b1010111, 0b110, 0b001101);\n@@ -1878,1 +1875,0 @@\n-  INSN(vror_vx,    0b1010111, 0b100, 0b010100);\n@@ -1880,1 +1876,0 @@\n-  INSN(vrol_vx,    0b1010111, 0b100, 0b010101);\n@@ -1890,2 +1885,6 @@\n-  INSN(vbrev8_v, 0b1010111, 0b010, 0b01000, 0b010010);\n-  INSN(vrev8_v,  0b1010111, 0b010, 0b01001, 0b010010);\n+  INSN(vbrev_v,  0b1010111, 0b010, 0b01010, 0b010010); \/\/ reverse bits in every element\n+  INSN(vbrev8_v, 0b1010111, 0b010, 0b01000, 0b010010); \/\/ reverse bits in every byte of element\n+  INSN(vrev8_v,  0b1010111, 0b010, 0b01001, 0b010010); \/\/ reverse bytes in every elememt\n+\n+  INSN(vclz_v,  0b1010111, 0b010, 0b01100, 0b010010); \/\/ count leading zeros\n+  INSN(vctz_v,  0b1010111, 0b010, 0b01101, 0b010010); \/\/ count trailing zeros\n@@ -1907,0 +1906,10 @@\n+#define INSN(NAME, op, funct3, Vs1, funct6)                                    \\\n+  void NAME(VectorRegister Vd, VectorRegister Vs2, VectorMask vm = unmasked) { \\\n+    patch_VArith(op, Vd, funct3, Vs1, Vs2, vm, funct6);                        \\\n+  }\n+\n+  \/\/ Vector Basic Bit-manipulation (Zvbb) Extension\n+  INSN(vcpop_v,  0b1010111, 0b010, 0b01110, 0b010010);\n+\n+#undef INSN\n+\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -399,1 +399,1 @@\n-  RegMaskIterator rmi(stub->live());\n+  RegMaskIterator rmi(stub->preserve_set());\n@@ -417,6 +417,2 @@\n-  \/\/ Remove C-ABI SOE registers, tmp regs and _ref register that will be updated\n-  if (stub->result() != noreg) {\n-    _gp_regs -= RegSet::range(x18, x27) + RegSet::of(x2) + RegSet::of(x8, x9) + RegSet::of(x5, stub->result());\n-  } else {\n-    _gp_regs -= RegSet::range(x18, x27) + RegSet::of(x2, x5) + RegSet::of(x8, x9);\n-  }\n+  \/\/ Remove C-ABI SOE registers and tmp regs\n+  _gp_regs -= RegSet::range(x18, x27) + RegSet::of(x2, x5) + RegSet::of(x8, x9);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.cpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -118,0 +118,1 @@\n+  product(bool, UseZvbb, false, EXPERIMENTAL, \"Use Zvbb instructions\")           \\\n","filename":"src\/hotspot\/cpu\/riscv\/globals_riscv.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2101,1 +2101,1 @@\n-    mv(dst, Address((address)obj, rspec));\n+    la(dst, Address((address)obj, rspec));\n@@ -2117,1 +2117,1 @@\n-  mv(dst, Address((address)obj, rspec));\n+  la(dst, Address((address)obj, rspec));\n@@ -3347,5 +3347,1 @@\n-  mv(t1, (address)&SharedRuntime::_partial_subtype_ctr);\n-  Address pst_counter_addr(t1);\n-  ld(t0, pst_counter_addr);\n-  add(t0, t0, 1);\n-  sd(t0, pst_counter_addr);\n+  incrementw(ExternalAddress((address)&SharedRuntime::_partial_subtype_ctr));\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -766,7 +766,0 @@\n-  void mv(Register Rd, Address dest) {\n-    assert(dest.getMode() == Address::literal, \"Address mode should be Address::literal\");\n-    relocate(dest.rspec(), [&] {\n-      movptr(Rd, dest.target());\n-    });\n-  }\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-void Relocation::pd_set_data_value(address x, intptr_t o, bool verify_only) {\n+void Relocation::pd_set_data_value(address x, bool verify_only) {\n","filename":"src\/hotspot\/cpu\/riscv\/relocInfo_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -652,0 +652,1 @@\n+\/\/ Class for all non-special integer registers\n@@ -656,0 +657,1 @@\n+\/\/ Class for all non-special long integer registers\n@@ -664,0 +666,1 @@\n+\/\/ Class for all non_special pointer registers\n@@ -668,0 +671,5 @@\n+\/\/ Class for all non_special pointer registers (excluding fp)\n+reg_class no_special_no_fp_ptr_reg %{\n+  return _NO_SPECIAL_NO_FP_PTR_REG_mask;\n+%}\n+\n@@ -1040,0 +1048,1 @@\n+extern RegMask _NO_SPECIAL_NO_FP_PTR_REG_mask;\n@@ -1102,0 +1111,1 @@\n+RegMask _NO_SPECIAL_NO_FP_PTR_REG_mask;\n@@ -1136,0 +1146,3 @@\n+\n+  _NO_SPECIAL_NO_FP_PTR_REG_mask = _NO_SPECIAL_PTR_REG_mask;\n+  _NO_SPECIAL_NO_FP_PTR_REG_mask.Remove(OptoReg::as_OptoReg(x8->as_VMReg()));\n@@ -3178,0 +3191,12 @@\n+\/\/ This operand is not allowed to use fp even if\n+\/\/ fp is not used to hold the frame pointer.\n+operand iRegPNoSpNoFp()\n+%{\n+  constraint(ALLOC_IN_RC(no_special_no_fp_ptr_reg));\n+  match(RegP);\n+  match(iRegPNoSp);\n+  op_cost(0);\n+  format %{ %}\n+  interface(REG_INTER);\n+%}\n+\n@@ -10509,1 +10534,3 @@\n-instruct TailCalljmpInd(iRegPNoSp jump_target, inline_cache_RegP method_oop)\n+\/\/ Don't use fp for 'jump_target' because a MachEpilogNode has already been\n+\/\/ emitted just above the TailCall which has reset fp to the caller state.\n+instruct TailCalljmpInd(iRegPNoSpNoFp jump_target, inline_cache_RegP method_oop)\n@@ -10522,1 +10549,1 @@\n-instruct TailjmpInd(iRegPNoSp jump_target, iRegP_R10 ex_oop)\n+instruct TailjmpInd(iRegPNoSpNoFp jump_target, iRegP_R10 ex_oop)\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -76,0 +76,6 @@\n+      case Op_CountTrailingZerosV:\n+      case Op_CountLeadingZerosV:\n+      case Op_ReverseBytesV:\n+      case Op_PopCountVL:\n+      case Op_PopCountVI:\n+        return UseZvbb;\n@@ -3756,0 +3762,26 @@\n+\/\/ -------------------------------- Reverse Bytes Vector Operations ------------------------\n+\n+instruct vreverse_bytes_masked(vReg dst_src, vRegMask_V0 v0) %{\n+  match(Set dst_src (ReverseBytesV dst_src v0));\n+  format %{ \"vreverse_bytes_masked $dst_src, $dst_src, v0\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    uint vlen = Matcher::vector_length(this);\n+    __ vsetvli_helper(bt, vlen);\n+    __ vrev8_v(as_VectorRegister($dst_src$$reg), as_VectorRegister($dst_src$$reg), Assembler::v0_t);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vreverse_bytes(vReg dst, vReg src) %{\n+  match(Set dst (ReverseBytesV src));\n+  format %{ \"vreverse_bytes $dst, $src\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    uint vlen = Matcher::vector_length(this);\n+    __ vsetvli_helper(bt, vlen);\n+    __ vrev8_v(as_VectorRegister($dst$$reg), as_VectorRegister($src$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -3787,0 +3819,87 @@\n+\n+\/\/ ------------------------------ Popcount vector ------------------------------\n+\n+instruct vpopcount_masked(vReg dst_src, vRegMask_V0 v0) %{\n+  match(Set dst_src (PopCountVI dst_src v0));\n+  match(Set dst_src (PopCountVL dst_src v0));\n+  ins_cost(VEC_COST);\n+  format %{ \"vcpop_v $dst_src, $dst_src, $v0\\t# vcpop_v with mask\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    uint vlen = Matcher::vector_length(this);\n+    __ vsetvli_helper(bt, vlen);\n+    __ vcpop_v(as_VectorRegister($dst_src$$reg), as_VectorRegister($dst_src$$reg), Assembler::v0_t);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vpopcount(vReg dst, vReg src) %{\n+  match(Set dst (PopCountVI src));\n+  match(Set dst (PopCountVL src));\n+  ins_cost(VEC_COST);\n+  format %{ \"vcpop_v $dst, $src\\t# vcpop_v without mask\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    uint vlen = Matcher::vector_length(this);\n+    __ vsetvli_helper(bt, vlen);\n+    __ vcpop_v(as_VectorRegister($dst$$reg), as_VectorRegister($src$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+\/\/ ------------------------------ CountLeadingZerosV --------------------------\n+\n+instruct vcountLeadingZeros_masked(vReg dst_src, vRegMask_V0 v0) %{\n+  match(Set dst_src (CountLeadingZerosV dst_src v0));\n+  ins_cost(VEC_COST);\n+  format %{ \"vcount_leading_zeros_masked $dst_src, $dst_src, v0\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    uint vlen = Matcher::vector_length(this);\n+    __ vsetvli_helper(bt, vlen);\n+    __ vclz_v(as_VectorRegister($dst_src$$reg), as_VectorRegister($dst_src$$reg), Assembler::v0_t);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vcountLeadingZeros(vReg dst, vReg src) %{\n+  match(Set dst (CountLeadingZerosV src));\n+  ins_cost(VEC_COST);\n+  format %{ \"vcount_leading_zeros $dst, $src\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    uint vlen = Matcher::vector_length(this);\n+    __ vsetvli_helper(bt, vlen);\n+    __ vclz_v(as_VectorRegister($dst$$reg), as_VectorRegister($src$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+\/\/ ------------------------------ CountTrailingZerosV --------------------------\n+\n+instruct vcountTrailingZeros_masked(vReg dst_src, vRegMask_V0 v0) %{\n+  match(Set dst_src (CountTrailingZerosV dst_src v0));\n+  ins_cost(VEC_COST);\n+  format %{ \"vcount_trailing_zeros_masked $dst_src, $dst_src, v0\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    uint vlen = Matcher::vector_length(this);\n+    __ vsetvli_helper(bt, vlen);\n+    __ vctz_v(as_VectorRegister($dst_src$$reg), as_VectorRegister($dst_src$$reg), Assembler::v0_t);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vcountTrailingZeros(vReg dst, vReg src) %{\n+  match(Set dst (CountTrailingZerosV src));\n+  ins_cost(VEC_COST);\n+  format %{ \"vcount_trailing_zeros $dst, $src\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    uint vlen = Matcher::vector_length(this);\n+    __ vsetvli_helper(bt, vlen);\n+    __ vctz_v(as_VectorRegister($dst$$reg), as_VectorRegister($src$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":119,"deletions":0,"binary":false,"changes":119,"status":"modified"},{"patch":"@@ -80,4 +80,1 @@\n-    __ la(t1, ExternalAddress((address)&counter));\n-    __ lwu(t0, Address(t1, 0));\n-    __ addiw(t0, t0, 1);\n-    __ sw(t0, Address(t1, 0));\n+    __ incrementw(ExternalAddress((address)&counter));\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -248,0 +248,6 @@\n+  \/\/ UseZvbb (depends on RVV).\n+  if (UseZvbb && !UseRVV) {\n+    FLAG_SET_DEFAULT(UseZvbb, false);\n+    warning(\"Cannot enable UseZvbb on cpu without RVV support.\");\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -164,0 +164,1 @@\n+  decl(ext_Zvbb        , \"Zvbb\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZvbb))        \\\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -355,4 +355,0 @@\n-\n-  RelocationHolder rspec(int offset) const {\n-    return offset == 0 ? _rspec : _rspec.plus(offset);\n-  }\n","filename":"src\/hotspot\/cpu\/s390\/assembler_s390.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,3 +33,1 @@\n-void Relocation::pd_set_data_value(address x, intptr_t o, bool verify_only) {\n-  \/\/ we don't support splitting of relocations, so o must be zero:\n-  assert(o == 0, \"tried to split relocations\");\n+void Relocation::pd_set_data_value(address x, bool verify_only) {\n@@ -39,1 +37,1 @@\n-        nativeMovConstReg_at(addr())->set_data_plain(((intptr_t)x) + o, code());\n+        nativeMovConstReg_at(addr())->set_data_plain(((intptr_t)x), code());\n@@ -43,1 +41,1 @@\n-          nativeMovConstReg_at(addr())->set_narrow_klass(((intptr_t)x) + o);\n+          nativeMovConstReg_at(addr())->set_narrow_klass(((intptr_t)x));\n@@ -45,1 +43,1 @@\n-          nativeMovConstReg_at(addr())->set_narrow_oop(((intptr_t)x) + o);\n+          nativeMovConstReg_at(addr())->set_narrow_oop(((intptr_t)x));\n@@ -50,1 +48,1 @@\n-        nativeMovConstReg_at(addr())->set_pcrel_addr(((intptr_t)x) + o, code());\n+        nativeMovConstReg_at(addr())->set_pcrel_addr(((intptr_t)x), code());\n@@ -53,1 +51,1 @@\n-        nativeMovConstReg_at(addr())->set_pcrel_data(((intptr_t)x) + o, code());\n+        nativeMovConstReg_at(addr())->set_pcrel_data(((intptr_t)x), code());\n","filename":"src\/hotspot\/cpu\/s390\/relocInfo_s390.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1661,1 +1661,2 @@\n-                      *op->stub()->entry());\n+                      *op->stub()->entry(),\n+                      op->zero_array());\n@@ -3639,1 +3640,3 @@\n-  __ bind(*stub->continuation());\n+  if (stub != nullptr) {\n+    __ bind(*stub->continuation());\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRAssembler_x86.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1032,1 +1032,7 @@\n-  CodeEmitInfo* info = state_for(x, x->state());\n+  CodeEmitInfo* info = nullptr;\n+  if (x->state_before() != nullptr && x->state_before()->force_reexecute()) {\n+    info = state_for(x, x->state_before());\n+    info->set_force_reexecute();\n+  } else {\n+    info = state_for(x, x->state());\n+  }\n@@ -1044,0 +1050,7 @@\n+  int flags;\n+  ciArrayKlass* expected_type;\n+  arraycopy_helper(x, &flags, &expected_type);\n+  if (x->check_flag(Instruction::OmitChecksFlag)) {\n+    flags = 0;\n+  }\n+\n@@ -1051,0 +1064,5 @@\n+\n+  if (expected_type != nullptr && flags == 0) {\n+    FrameMap* f = Compilation::current()->frame_map();\n+    f->update_reserved_argument_area_size(3 * BytesPerWord);\n+  }\n@@ -1072,4 +1090,0 @@\n-  int flags;\n-  ciArrayKlass* expected_type;\n-  arraycopy_helper(x, &flags, &expected_type);\n-\n@@ -1338,1 +1352,7 @@\n-  CodeEmitInfo* info = state_for(x, x->state());\n+  CodeEmitInfo* info = nullptr;\n+  if (x->state_before() != nullptr && x->state_before()->force_reexecute()) {\n+    info = state_for(x, x->state_before());\n+    info->set_force_reexecute();\n+  } else {\n+    info = state_for(x, x->state());\n+  }\n@@ -1355,1 +1375,1 @@\n-  __ allocate_array(reg, len, tmp1, tmp2, tmp3, tmp4, elem_type, klass_reg, slow_path, false);\n+  __ allocate_array(reg, len, tmp1, tmp2, tmp3, tmp4, elem_type, klass_reg, slow_path, x->zero_array());\n@@ -1389,1 +1409,1 @@\n-  __ allocate_array(reg, len, tmp1, tmp2, tmp3, tmp4, T_OBJECT, klass_reg, slow_path, x->is_null_free());\n+  __ allocate_array(reg, len, tmp1, tmp2, tmp3, tmp4, T_OBJECT, klass_reg, slow_path, true, x->is_null_free());\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRGenerator_x86.cpp","additions":28,"deletions":8,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -294,1 +294,1 @@\n-void C1_MacroAssembler::allocate_array(Register obj, Register len, Register t1, Register t2, int base_offset_in_bytes, Address::ScaleFactor f, Register klass, Label& slow_case) {\n+void C1_MacroAssembler::allocate_array(Register obj, Register len, Register t1, Register t2, int base_offset_in_bytes, Address::ScaleFactor f, Register klass, Label& slow_case, bool zero_array) {\n@@ -316,5 +316,7 @@\n-  const Register len_zero = len;\n-  \/\/ Align-up to word boundary, because we clear the 4 bytes potentially\n-  \/\/ following the length field in initialize_header().\n-  int base_offset = align_up(base_offset_in_bytes, BytesPerWord);\n-  initialize_body(obj, arr_size, base_offset, len_zero);\n+  if (zero_array) {\n+    const Register len_zero = len;\n+    \/\/ Align-up to word boundary, because we clear the 4 bytes potentially\n+    \/\/ following the length field in initialize_header().\n+    int base_offset = align_up(base_offset_in_bytes, BytesPerWord);\n+    initialize_body(obj, arr_size, base_offset, len_zero);\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/c1_MacroAssembler_x86.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -92,1 +92,2 @@\n-  void allocate_array(Register obj, Register len, Register t, Register t2, int base_offset_in_bytes, Address::ScaleFactor f, Register klass, Label& slow_case);\n+  \/\/ zero_array          : zero the allocated array or not\n+  void allocate_array(Register obj, Register len, Register t, Register t2, int base_offset_in_bytes, Address::ScaleFactor f, Register klass, Label& slow_case, bool zero_array);\n","filename":"src\/hotspot\/cpu\/x86\/c1_MacroAssembler_x86.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -631,7 +631,0 @@\n-  if (stub->result() != noreg) {\n-    caller_saved.Remove(OptoReg::as_OptoReg(stub->result()->as_VMReg()));\n-  }\n-\n-  \/\/ Create mask of live registers\n-  RegMask live = stub->live();\n-\n@@ -643,1 +636,1 @@\n-  RegMaskIterator rmi(live);\n+  RegMaskIterator rmi(stub->preserve_set());\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shared\/barrierSetAssembler_x86.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1216,1 +1216,0 @@\n-  Assembler::InlineSkippedInstructionsCounter skipped_counter(masm);\n@@ -1236,1 +1235,0 @@\n-  Assembler::InlineSkippedInstructionsCounter skipped_counter(masm);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/z\/zBarrierSetAssembler_x86.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-void Relocation::pd_set_data_value(address x, intptr_t o, bool verify_only) {\n+void Relocation::pd_set_data_value(address x, bool verify_only) {\n@@ -41,1 +41,0 @@\n-  x += o;\n@@ -83,1 +82,1 @@\n-    guarantee(*pd_address_in_code() == (x + o), \"instructions must match\");\n+    guarantee(*pd_address_in_code() == x, \"instructions must match\");\n@@ -85,1 +84,1 @@\n-    *pd_address_in_code() = x + o;\n+    *pd_address_in_code() = x;\n","filename":"src\/hotspot\/cpu\/x86\/relocInfo_x86.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -13558,0 +13558,2 @@\n+\/\/ Don't use ebp for 'jump_target' because a MachEpilogNode has already been\n+\/\/ emitted just above the TailCall which has reset ebp to the caller state.\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12739,0 +12739,2 @@\n+\/\/ Don't use rbp for 'jump_target' because a MachEpilogNode has already been\n+\/\/ emitted just above the TailCall which has reset rbp to the caller state.\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-void Relocation::pd_set_data_value(address x, intptr_t o, bool verify_only) {\n+void Relocation::pd_set_data_value(address x, bool verify_only) {\n","filename":"src\/hotspot\/cpu\/zero\/relocInfo_zero.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2445,7 +2445,0 @@\n-\/\/ create binary file, rewriting existing file if required\n-int os::create_binary_file(const char* path, bool rewrite_existing) {\n-  int oflags = O_WRONLY | O_CREAT;\n-  oflags |= rewrite_existing ? O_TRUNC : O_EXCL;\n-  return ::open(path, oflags, S_IREAD | S_IWRITE);\n-}\n-\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-                      untype(offset) \/ M, untype(offset) + length \/ M, length \/ M);\n+                      untype(offset) \/ M, untype(to_zoffset_end(offset, length)) \/ M, length \/ M);\n@@ -153,1 +153,1 @@\n-                      untype(offset) \/ M, untype(offset) + length \/ M, length \/ M);\n+                      untype(offset) \/ M, untype(to_zoffset_end(offset, length)) \/ M, length \/ M);\n","filename":"src\/hotspot\/os\/bsd\/gc\/z\/zPhysicalMemoryBacking_bsd.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2387,8 +2387,0 @@\n-\n-\/\/ create binary file, rewriting existing file if required\n-int os::create_binary_file(const char* path, bool rewrite_existing) {\n-  int oflags = O_WRONLY | O_CREAT;\n-  oflags |= rewrite_existing ? O_TRUNC : O_EXCL;\n-  return ::open(path, oflags, S_IREAD | S_IWRITE);\n-}\n-\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -600,1 +600,1 @@\n-                      untype(offset) \/ M, untype(offset + length) \/ M, length \/ M);\n+                      untype(offset) \/ M, untype(to_zoffset_end(offset, length)) \/ M, length \/ M);\n@@ -700,1 +700,1 @@\n-                      untype(offset) \/ M, untype(offset + length) \/ M, length \/ M);\n+                      untype(offset) \/ M, untype(to_zoffset_end(offset, length)) \/ M, length \/ M);\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zPhysicalMemoryBacking_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5124,8 +5124,0 @@\n-\n-\/\/ create binary file, rewriting existing file if required\n-int os::create_binary_file(const char* path, bool rewrite_existing) {\n-  int oflags = O_WRONLY | O_CREAT;\n-  oflags |= rewrite_existing ? O_TRUNC : O_EXCL;\n-  return ::open(path, oflags, S_IREAD | S_IWRITE);\n-}\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -228,1 +228,1 @@\n-                      untype(offset) \/ M, (untype(offset) + length) \/ M, length \/ M);\n+                      untype(offset) \/ M, untype(to_zoffset_end(offset, length)) \/ M, length \/ M);\n@@ -235,1 +235,1 @@\n-                      untype(offset) \/ M, (untype(offset) + length) \/ M, length \/ M);\n+                      untype(offset) \/ M, untype(to_zoffset_end(offset, length)) \/ M, length \/ M);\n","filename":"src\/hotspot\/os\/windows\/gc\/z\/zPhysicalMemoryBacking_windows.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4892,7 +4892,0 @@\n-\/\/ create binary file, rewriting existing file if required\n-int os::create_binary_file(const char* path, bool rewrite_existing) {\n-  int oflags = _O_CREAT | _O_WRONLY | _O_BINARY;\n-  oflags |= rewrite_existing ? _O_TRUNC : _O_EXCL;\n-  return ::open(path, oflags, _S_IREAD | _S_IWRITE);\n-}\n-\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    .type _SafeFetch32_impl,@function\n+    .type SafeFetch32_impl,@function\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/safefetch_linux_x86_32.S","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1015,0 +1015,2 @@\n+  \/\/ Record size of code before we generate stubs in instructions section\n+  _main_code_size = _insts.size();\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -437,0 +437,3 @@\n+  \/\/ Size of code without stubs generated at the end of instructions section\n+  csize_t      _main_code_size;\n+\n@@ -467,0 +470,1 @@\n+    _main_code_size  = 0;\n@@ -640,0 +644,3 @@\n+  \/\/ size of code without stubs in instruction section\n+  csize_t main_code_size() const         { return _main_code_size; }\n+\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -238,0 +238,3 @@\n+#if defined(X86) || defined(AARCH64)\n+  case vmIntrinsics::_clone:\n+#endif\n","filename":"src\/hotspot\/share\/c1\/c1_Compiler.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2272,2 +2272,5 @@\n-      if (type != nullptr && type->is_loaded() &&\n-          type->is_instance_klass() && !type->as_instance_klass()->is_interface()) {\n+      if (type != nullptr && type->is_loaded()) {\n+        assert(!type->is_instance_klass() || !type->as_instance_klass()->is_interface(), \"Must not be an interface\");\n+        \/\/ Detects non-interface instances, primitive arrays, and some object arrays.\n+        \/\/ Array receivers can only call Object methods, so we should be able to allow\n+        \/\/ all object arrays here too, even those with unloaded types.\n@@ -2494,1 +2497,1 @@\n-  apush(append_split(new NewTypeArray(ipop(), (BasicType)stream()->get_index(), state_before)));\n+  apush(append_split(new NewTypeArray(ipop(), (BasicType)stream()->get_index(), state_before, true)));\n@@ -3926,0 +3929,1 @@\n+  case vmIntrinsics::_clone                  : append_alloc_array_copy(callee); return;\n@@ -3929,0 +3933,3 @@\n+  if (_inline_bailout_msg != nullptr) {\n+    return;\n+  }\n@@ -3990,0 +3997,3 @@\n+  if (_inline_bailout_msg != nullptr) {\n+    return false;\n+  }\n@@ -4703,0 +4713,37 @@\n+void GraphBuilder::append_alloc_array_copy(ciMethod* callee) {\n+  const int args_base = state()->stack_size() - callee->arg_size();\n+  ciType* receiver_type = state()->stack_at(args_base)->exact_type();\n+  if (receiver_type == nullptr) {\n+    inline_bailout(\"must have a receiver\");\n+    return;\n+  }\n+  if (!receiver_type->is_type_array_klass()) {\n+    inline_bailout(\"clone array not primitive\");\n+    return;\n+  }\n+\n+  ValueStack* state_before = copy_state_before();\n+  state_before->set_force_reexecute();\n+  Value src = apop();\n+  BasicType basic_type = src->exact_type()->as_array_klass()->element_type()->basic_type();\n+  Value length = append(new ArrayLength(src, state_before));\n+  Value new_array = append_split(new NewTypeArray(length, basic_type, state_before, false));\n+\n+  ValueType* result_type = as_ValueType(callee->return_type());\n+  vmIntrinsics::ID id = vmIntrinsics::_arraycopy;\n+  Values* args = new Values(5);\n+  args->push(src);\n+  args->push(append(new Constant(new IntConstant(0))));\n+  args->push(new_array);\n+  args->push(append(new Constant(new IntConstant(0))));\n+  args->push(length);\n+  const bool has_receiver = true;\n+  Intrinsic* array_copy = new Intrinsic(result_type, id,\n+                                    args, has_receiver, state_before,\n+                                    vmIntrinsics::preserves_state(id),\n+                                    vmIntrinsics::can_trap(id));\n+  array_copy->set_flag(Instruction::OmitChecksFlag, true);\n+  append_split(array_copy);\n+  apush(new_array);\n+}\n+\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":50,"deletions":3,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -413,0 +413,1 @@\n+  void append_alloc_array_copy(ciMethod* callee);\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -388,0 +388,1 @@\n+    OmitChecksFlag,\n@@ -1392,0 +1393,1 @@\n+  bool _zero_array;\n@@ -1395,1 +1397,1 @@\n-  NewTypeArray(Value length, BasicType elt_type, ValueStack* state_before)\n+  NewTypeArray(Value length, BasicType elt_type, ValueStack* state_before, bool zero_array)\n@@ -1398,0 +1400,1 @@\n+  , _zero_array(zero_array)\n@@ -1402,0 +1405,1 @@\n+  bool zero_array()    const                     { return _zero_array; }\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -390,0 +390,7 @@\n+#if defined(X86) || defined(AARCH64)\n+  if (expected_type != nullptr && flags == 0) {\n+    _stub = nullptr;\n+  } else {\n+    _stub = new ArrayCopyStub(this);\n+  }\n+#else\n@@ -391,0 +398,1 @@\n+#endif\n@@ -1124,1 +1132,4 @@\n-  masm->append_code_stub(stub());\n+  ArrayCopyStub* code_stub = stub();\n+  if (code_stub != nullptr) {\n+    masm->append_code_stub(code_stub);\n+  }\n@@ -1515,1 +1526,1 @@\n-void LIR_List::allocate_array(LIR_Opr dst, LIR_Opr len, LIR_Opr t1,LIR_Opr t2, LIR_Opr t3,LIR_Opr t4, BasicType type, LIR_Opr klass, CodeStub* stub, bool is_null_free) {\n+void LIR_List::allocate_array(LIR_Opr dst, LIR_Opr len, LIR_Opr t1,LIR_Opr t2, LIR_Opr t3,LIR_Opr t4, BasicType type, LIR_Opr klass, CodeStub* stub, bool zero_array, bool is_null_free) {\n@@ -1526,0 +1537,1 @@\n+                           zero_array,\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.cpp","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1854,0 +1854,1 @@\n+  bool      _zero_array;\n@@ -1857,1 +1858,1 @@\n-  LIR_OpAllocArray(LIR_Opr klass, LIR_Opr len, LIR_Opr result, LIR_Opr t1, LIR_Opr t2, LIR_Opr t3, LIR_Opr t4, BasicType type, CodeStub* stub, bool is_null_free)\n+  LIR_OpAllocArray(LIR_Opr klass, LIR_Opr len, LIR_Opr result, LIR_Opr t1, LIR_Opr t2, LIR_Opr t3, LIR_Opr t4, BasicType type, CodeStub* stub, bool zero_array, bool is_null_free)\n@@ -1867,0 +1868,1 @@\n+    , _zero_array(zero_array)\n@@ -1878,0 +1880,1 @@\n+  bool      zero_array()   const                 { return _zero_array;  }\n@@ -2444,1 +2447,1 @@\n-  void allocate_array(LIR_Opr dst, LIR_Opr len, LIR_Opr t1,LIR_Opr t2, LIR_Opr t3,LIR_Opr t4, BasicType type, LIR_Opr klass, CodeStub* stub, bool is_null_free);\n+  void allocate_array(LIR_Opr dst, LIR_Opr len, LIR_Opr t1,LIR_Opr t2, LIR_Opr t3,LIR_Opr t4, BasicType type, LIR_Opr klass, CodeStub* stub, bool zero_array = true, bool is_null_free = false);\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+  bool     _force_reexecute;                     \/\/ force the reexecute flag on, used for patching stub\n@@ -231,0 +232,3 @@\n+  bool force_reexecute() const         { return _force_reexecute; }\n+  void set_force_reexecute()           { _force_reexecute = true; }\n+\n","filename":"src\/hotspot\/share\/c1\/c1_ValueStack.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-  _current_dump_space(nullptr),\n+  _current_dump_region(nullptr),\n@@ -344,1 +344,1 @@\n-  _current_dump_space = &_rw_region;\n+  _current_dump_region = &_rw_region;\n@@ -347,1 +347,1 @@\n-  _current_dump_space->init(&_shared_rs, &_shared_vs);\n+  _current_dump_region->init(&_shared_rs, &_shared_vs);\n@@ -563,1 +563,1 @@\n-void ArchiveBuilder::start_dump_space(DumpRegion* next) {\n+void ArchiveBuilder::start_dump_region(DumpRegion* next) {\n@@ -565,1 +565,1 @@\n-  address top = (address)(current_dump_space()->top());\n+  address top = (address)(current_dump_region()->top());\n@@ -568,2 +568,2 @@\n-  current_dump_space()->pack(next);\n-  _current_dump_space = next;\n+  current_dump_region()->pack(next);\n+  _current_dump_region = next;\n@@ -572,1 +572,1 @@\n-  _last_verified_top = (address)(current_dump_space()->top());\n+  _last_verified_top = (address)(current_dump_region()->top());\n@@ -577,1 +577,1 @@\n-  address top = (address)(current_dump_space()->top());\n+  address top = (address)(current_dump_region()->top());\n@@ -633,1 +633,1 @@\n-  start_dump_space(&_ro_region);\n+  start_dump_region(&_ro_region);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-  DumpRegion* _current_dump_space;\n+  DumpRegion* _current_dump_region;\n@@ -117,1 +117,1 @@\n-  DumpRegion* current_dump_space() const {  return _current_dump_space;  }\n+  DumpRegion* current_dump_region() const {  return _current_dump_region;  }\n@@ -281,1 +281,1 @@\n-  void start_dump_space(DumpRegion* next);\n+  void start_dump_region(DumpRegion* next);\n@@ -287,5 +287,5 @@\n-  address buffer_bottom()                    const { return _buffer_bottom;                       }\n-  address buffer_top()                       const { return (address)current_dump_space()->top(); }\n-  address requested_static_archive_bottom()  const { return  _requested_static_archive_bottom;    }\n-  address mapped_static_archive_bottom()     const { return  _mapped_static_archive_bottom;       }\n-  intx buffer_to_requested_delta()           const { return _buffer_to_requested_delta;           }\n+  address buffer_bottom()                    const { return _buffer_bottom;                        }\n+  address buffer_top()                       const { return (address)current_dump_region()->top(); }\n+  address requested_static_archive_bottom()  const { return  _requested_static_archive_bottom;     }\n+  address mapped_static_archive_bottom()     const { return  _mapped_static_archive_bottom;        }\n+  intx buffer_to_requested_delta()           const { return _buffer_to_requested_delta;            }\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -70,2 +70,4 @@\n-typedef ResourceHashtable<address, size_t,\n-      127, \/\/ prime number\n+typedef ResourceHashtable<\n+      size_t,    \/\/ offset of a filler from ArchiveHeapWriter::buffer_bottom()\n+      size_t,    \/\/ size of this filler (in bytes)\n+      127,       \/\/ prime number\n@@ -364,1 +366,1 @@\n-    _fillers->put((address)filler, fill_bytes);\n+    _fillers->put(buffered_address_to_offset((address)filler), fill_bytes);\n@@ -369,1 +371,1 @@\n-  size_t* p = _fillers->get(buffered_addr);\n+  size_t* p = _fillers->get(buffered_address_to_offset(buffered_addr));\n@@ -533,4 +535,2 @@\n-  \/\/ in the shared heap. This also has the side effect of pre-initializing the\n-  \/\/ identity_hash for all shared objects, so they are less likely to be written\n-  \/\/ into during run time, increasing the potential of memory sharing.\n-  if (src_obj != nullptr && (!(EnableValhalla && src_obj->mark().is_inline_type()))) {\n+  \/\/ in the shared heap.\n+  if (src_obj != nullptr && !src_obj->fast_no_hash_check() && (!(EnableValhalla && src_obj->mark().is_inline_type()))) {\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -313,11 +313,3 @@\n-  _dump_region->append_intptr_t((intptr_t)ptr, true);\n-}\n-\n-void WriteClosure::do_region(u_char* start, size_t size) {\n-  assert((intptr_t)start % sizeof(intptr_t) == 0, \"bad alignment\");\n-  assert(size % sizeof(intptr_t) == 0, \"bad size\");\n-  do_tag((int)size);\n-  while (size > 0) {\n-    do_ptr((void**)start);\n-    start += sizeof(intptr_t);\n-    size -= sizeof(intptr_t);\n+  \/\/ null pointers do not need to be converted to offsets\n+  if (ptr != nullptr) {\n+    ptr = (address)ArchiveBuilder::current()->buffer_to_offset(ptr);\n@@ -325,0 +317,1 @@\n+  _dump_region->append_intptr_t((intptr_t)ptr, false);\n@@ -332,1 +325,1 @@\n-  *p = (void*)obj;\n+  *p = (void*)obj != nullptr ? (void*)(SharedBaseAddress + obj) : (void*)obj;\n@@ -358,11 +351,0 @@\n-void ReadClosure::do_region(u_char* start, size_t size) {\n-  assert((intptr_t)start % sizeof(intptr_t) == 0, \"bad alignment\");\n-  assert(size % sizeof(intptr_t) == 0, \"bad size\");\n-  do_tag((int)size);\n-  while (size > 0) {\n-    *(intptr_t*)start = nextPtr();\n-    start += sizeof(intptr_t);\n-    size -= sizeof(intptr_t);\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -218,1 +218,4 @@\n-  void do_region(u_char* start, size_t size);\n+  char* region_top() {\n+    return _dump_region->top();\n+  }\n+\n@@ -241,1 +244,0 @@\n-  void do_region(u_char* start, size_t size);\n@@ -243,0 +245,1 @@\n+  char* region_top() { return nullptr; }\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+#include \"utilities\/utf8.hpp\"\n@@ -57,1 +58,5 @@\n-ClassListParser::ClassListParser(const char* file, ParseMode parse_mode) : _id2klass_table(INITIAL_TABLE_SIZE, MAX_TABLE_SIZE) {\n+ClassListParser::ClassListParser(const char* file, ParseMode parse_mode) :\n+    _classlist_file(file),\n+    _id2klass_table(INITIAL_TABLE_SIZE, MAX_TABLE_SIZE),\n+    _file_input(do_open(file), \/* need_close=*\/true),\n+    _input_stream(&_file_input) {\n@@ -60,11 +65,1 @@\n-  _classlist_file = file;\n-  _file = nullptr;\n-  \/\/ Use os::open() because neither fopen() nor os::fopen()\n-  \/\/ can handle long path name on Windows.\n-  int fd = os::open(file, O_RDONLY, S_IREAD);\n-  if (fd != -1) {\n-    \/\/ Obtain a File* from the file descriptor so that fgets()\n-    \/\/ can be used in parse_one_line()\n-    _file = os::fdopen(fd, \"r\");\n-  }\n-  if (_file == nullptr) {\n+  if (!_file_input.is_open()) {\n@@ -75,2 +70,1 @@\n-  _line_no = 0;\n-  _token = _line;\n+  _token = _line = nullptr;\n@@ -87,0 +81,13 @@\n+FILE* ClassListParser::do_open(const char* file) {\n+  \/\/ Use os::open() because neither fopen() nor os::fopen()\n+  \/\/ can handle long path name on Windows. (See JDK-8216184)\n+  int fd = os::open(file, O_RDONLY, S_IREAD);\n+  FILE* fp = nullptr;\n+  if (fd != -1) {\n+    \/\/ Obtain a FILE* from the file descriptor so that _input_stream\n+    \/\/ can be used in ClassListParser::parse()\n+    fp = os::fdopen(fd, \"r\");\n+  }\n+  return fp;\n+}\n+\n@@ -92,3 +99,0 @@\n-  if (_file != nullptr) {\n-    fclose(_file);\n-  }\n@@ -104,1 +108,9 @@\n-  while (parse_one_line()) {\n+  for (; !_input_stream.done(); _input_stream.next()) {\n+    _line = _input_stream.current_line();\n+    if (*_line == '#') { \/\/ comment\n+      continue;\n+    }\n+    if (!parse_one_line()) {\n+      break;\n+    }\n+\n@@ -115,0 +127,1 @@\n+    check_class_name(_class_name);\n@@ -168,21 +181,7 @@\n-  for (;;) {\n-    if (fgets(_line, sizeof(_line), _file) == nullptr) {\n-      return false;\n-    }\n-    ++ _line_no;\n-    _line_len = (int)strlen(_line);\n-    if (_line_len > _max_allowed_line_len) {\n-      error(\"input line too long (must be no longer than %d chars)\", _max_allowed_line_len);\n-    }\n-    if (*_line == '#') { \/\/ comment\n-      continue;\n-    }\n-\n-    {\n-      int len = (int)strlen(_line);\n-      int i;\n-      \/\/ Replace \\t\\r\\n\\f with ' '\n-      for (i=0; i<len; i++) {\n-        if (_line[i] == '\\t' || _line[i] == '\\r' || _line[i] == '\\n' || _line[i] == '\\f') {\n-          _line[i] = ' ';\n-        }\n+  {\n+    int len = (int)strlen(_line);\n+    int i;\n+    \/\/ Replace \\t\\r\\n\\f with ' '\n+    for (i=0; i<len; i++) {\n+      if (_line[i] == '\\t' || _line[i] == '\\r' || _line[i] == '\\n' || _line[i] == '\\f') {\n+        _line[i] = ' ';\n@@ -190,0 +189,1 @@\n+    }\n@@ -191,8 +191,7 @@\n-      \/\/ Remove trailing newline\/space\n-      while (len > 0) {\n-        if (_line[len-1] == ' ') {\n-          _line[len-1] = '\\0';\n-          len --;\n-        } else {\n-          break;\n-        }\n+    \/\/ Remove trailing newline\/space\n+    while (len > 0) {\n+      if (_line[len-1] == ' ') {\n+        _line[len-1] = '\\0';\n+        len --;\n+      } else {\n+        break;\n@@ -200,1 +199,0 @@\n-      _line_len = len;\n@@ -202,3 +200,1 @@\n-\n-    \/\/ valid line\n-    break;\n+    _line_len = len;\n@@ -289,1 +285,1 @@\n-    error(\"Too few items following the @ tag \\\"%s\\\" line #%d\", _line, _line_no);\n+    error(\"Too few items following the @ tag \\\"%s\\\" line #%zu\", _line, lineno());\n@@ -307,1 +303,1 @@\n-      error(\"Line with @ tag has too few items \\\"%s\\\" line #%d\", _token, _line_no);\n+      error(\"Line with @ tag has too few items \\\"%s\\\" line #%zu\", _token, lineno());\n@@ -318,1 +314,1 @@\n-    error(\"Invalid @ tag at the beginning of line \\\"%s\\\" line #%d\", _token, _line_no);\n+    error(\"Invalid @ tag at the beginning of line \\\"%s\\\" line #%zu\", _token, lineno());\n@@ -426,2 +422,2 @@\n-              \"An error has occurred while processing class list file %s %d:%d.\\n\",\n-              _classlist_file, _line_no, (error_index + 1));\n+              \"An error has occurred while processing class list file %s %zu:%d.\\n\",\n+              _classlist_file, lineno(), (error_index + 1));\n@@ -453,0 +449,19 @@\n+void ClassListParser::check_class_name(const char* class_name) {\n+  const char* err = nullptr;\n+  size_t len = strlen(class_name);\n+  if (len > (size_t)Symbol::max_length()) {\n+    err = \"class name too long\";\n+  } else {\n+    assert(Symbol::max_length() < INT_MAX && len < INT_MAX, \"must be\");\n+    if (!UTF8::is_legal_utf8((const unsigned char*)class_name, (int)len, \/*version_leq_47*\/false)) {\n+      err = \"class name is not valid UTF8\";\n+    }\n+  }\n+  if (err != nullptr) {\n+    jio_fprintf(defaultStream::error_stream(),\n+              \"An error has occurred while processing class list file %s:%zu %s\\n\",\n+              _classlist_file, lineno(), err);\n+    vm_exit_during_initialization(\"class list format error.\", nullptr);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":72,"deletions":57,"binary":false,"changes":129,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"utilities\/istream.hpp\"\n@@ -83,8 +84,0 @@\n-\n-    \/\/ Max number of bytes allowed per line in the classlist.\n-    \/\/ Theoretically Java class names could be 65535 bytes in length. Also, an input line\n-    \/\/ could have a very long path name up to JVM_MAXPATHLEN bytes in length. In reality,\n-    \/\/ 4K bytes is more than enough.\n-    _max_allowed_line_len = 4096,\n-    _line_buf_extra       = 10, \/\/ for detecting input too long\n-    _line_buf_size        = _max_allowed_line_len + _line_buf_extra\n@@ -99,1 +92,0 @@\n-  FILE* _file;\n@@ -103,3 +95,3 @@\n-  \/\/ The following field contains information from the *current* line being\n-  \/\/ parsed.\n-  char                _line[_line_buf_size];  \/\/ The buffer that holds the current line. Some characters in\n+  FileInput           _file_input;\n+  inputStream         _input_stream;\n+  char*               _line;                  \/\/ The buffer that holds the current line. Some characters in\n@@ -108,1 +100,0 @@\n-  int                 _line_no;               \/\/ Line number for current line being parsed\n@@ -135,0 +126,2 @@\n+  size_t lineno() { return _input_stream.lineno(); }\n+  FILE* do_open(const char* file);\n@@ -186,0 +179,1 @@\n+  void check_class_name(const char* class_name);\n","filename":"src\/hotspot\/share\/cds\/classListParser.hpp","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-CppVtableInfo** CppVtables::_index = nullptr;\n+static CppVtableInfo* _index[_num_cloned_vtable_kinds];\n@@ -224,1 +224,7 @@\n-char* CppVtables::dumptime_init(ArchiveBuilder* builder) {\n+\/\/ Vtables are all fixed offsets from ArchiveBuilder::current()->mapped_base()\n+\/\/ E.g. ConstantPool is at offset 0x58. We can archive these offsets in the\n+\/\/ RO region and use them to alculate their location at runtime without storing\n+\/\/ the pointers in the RW region\n+char* CppVtables::_vtables_serialized_base = nullptr;\n+\n+void CppVtables::dumptime_init(ArchiveBuilder* builder) {\n@@ -226,2 +232,0 @@\n-  size_t vtptrs_bytes = _num_cloned_vtable_kinds * sizeof(CppVtableInfo*);\n-  _index = (CppVtableInfo**)builder->rw_region()->allocate(vtptrs_bytes);\n@@ -233,2 +237,0 @@\n-\n-  return (char*)_index;\n@@ -238,1 +240,6 @@\n-  soc->do_ptr(&_index);\n+  if (!soc->reading()) {\n+    _vtables_serialized_base = (char*)ArchiveBuilder::current()->buffer_top();\n+  }\n+  for (int i = 0; i < _num_cloned_vtable_kinds; i++) {\n+    soc->do_ptr(&_index[i]);\n+  }\n","filename":"src\/hotspot\/share\/cds\/cppVtables.cpp","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  static CppVtableInfo** _index;\n+  static char* _vtables_serialized_base;\n@@ -41,1 +41,1 @@\n-  static char* dumptime_init(ArchiveBuilder* builder);\n+  static void dumptime_init(ArchiveBuilder* builder);\n@@ -46,0 +46,1 @@\n+  static char* vtables_serialized_base() { return _vtables_serialized_base; }\n","filename":"src\/hotspot\/share\/cds\/cppVtables.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-      assert(current_dump_space() == ro_region(), \"Must be RO space\");\n+      assert(current_dump_region() == ro_region(), \"Must be RO space\");\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -281,8 +281,0 @@\n-\n-    \/\/ The archived objects are discovered in a predictable order. Compute\n-    \/\/ their identity_hash() as soon as we see them. This ensures that the\n-    \/\/ the identity_hash in the object header will have a predictable value,\n-    \/\/ making the archive reproducible.\n-    if (!obj->klass()->is_inline_klass()) {\n-      obj->identity_hash();\n-    }\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -516,1 +516,1 @@\n-  char* cloned_vtables = CppVtables::dumptime_init(&builder);\n+  CppVtables::dumptime_init(&builder);\n@@ -547,1 +547,1 @@\n-  mapinfo->set_cloned_vtables(cloned_vtables);\n+  mapinfo->set_cloned_vtables(CppVtables::vtables_serialized_base());\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,2 +51,14 @@\n-  \/\/ Read\/write the region specified.\n-  virtual void do_region(u_char* start, size_t size) = 0;\n+  \/\/ Iterate on the pointers from p[0] through p[num_pointers-1]\n+  void do_ptrs(void** p, size_t size) {\n+    assert((intptr_t)p % sizeof(intptr_t) == 0, \"bad alignment\");\n+    assert(size % sizeof(intptr_t) == 0, \"bad size\");\n+    do_tag((int)size);\n+    while (size > 0) {\n+      do_ptr(p);\n+      p++;\n+      size -= sizeof(intptr_t);\n+    }\n+  }\n+\n+  \/\/ Address of the first element being written (write only)\n+  virtual char* region_top() = 0;\n","filename":"src\/hotspot\/share\/cds\/serializeClosure.hpp","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1187,1 +1187,2 @@\n-\/\/ heuristic (e.g. post call nop instructions; see InlineSkippedInstructionsCounter)\n+\/\/ heuristic (e.g. post call nop instructions and GC barriers;\n+\/\/ see InlineSkippedInstructionsCounter).\n@@ -1193,1 +1194,1 @@\n-        int isize = code->insts_end() - code->verified_entry_point() - code->skipped_instructions_size();\n+        int isize = code->inline_insts_size();\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-  soc->do_region((u_char*)&Symbol::_vm_symbols[FIRST_SID],\n+  soc->do_ptrs((void**)&Symbol::_vm_symbols[FIRST_SID],\n@@ -210,1 +210,1 @@\n-  soc->do_region((u_char*)_type_signatures, sizeof(_type_signatures));\n+  soc->do_ptrs((void**)_type_signatures, sizeof(_type_signatures));\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -439,1 +439,1 @@\n-  template(argsize_name,                              \"argsize\")                                  \\\n+  template(bottom_name,                               \"bottom\")                                   \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -134,0 +134,1 @@\n+  uint inline_insts_size;\n@@ -154,0 +155,1 @@\n+    inline_insts_size   += nm->inline_insts_size();\n@@ -188,0 +190,3 @@\n+    if (inline_insts_size != 0) {\n+      tty->print_cr(\"     inline code = %u (%f%%)\", inline_insts_size, (inline_insts_size * 100.0f)\/total_nm_size);\n+    }\n@@ -1267,1 +1272,9 @@\n-  CHECKED_CAST(_skipped_instructions_size, uint16_t, (code_buffer->total_skipped_instructions_size()));\n+\n+  int size = code_buffer->main_code_size();\n+  assert(size >= 0, \"should be initialized\");\n+  \/\/ Use instructions section size if it is 0 (e.g. native wrapper)\n+  if (size == 0) size = code_size(); \/\/ requires _stub_offset to be set\n+  assert(size <= code_size(), \"incorrect size: %d > %d\", size, code_size());\n+  _inline_insts_size = size - _verified_entry_offset\n+                     - code_buffer->total_skipped_instructions_size();\n+  assert(_inline_insts_size >= 0, \"sanity\");\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -226,0 +226,2 @@\n+  int _inline_insts_size;\n+\n@@ -240,1 +242,0 @@\n-  uint16_t _skipped_instructions_size;\n@@ -597,1 +598,1 @@\n-  int skipped_instructions_size () const { return _skipped_instructions_size; }\n+  int inline_insts_size() const { return _inline_insts_size; }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -280,24 +280,0 @@\n-\/\/\/\/\/\/\/\/ Methods for RelocationHolder\n-\n-RelocationHolder RelocationHolder::plus(int offset) const {\n-  if (offset != 0) {\n-    switch (type()) {\n-    case relocInfo::none:\n-      break;\n-    case relocInfo::oop_type:\n-      {\n-        oop_Relocation* r = (oop_Relocation*)reloc();\n-        return oop_Relocation::spec(r->oop_index(), r->offset() + offset);\n-      }\n-    case relocInfo::metadata_type:\n-      {\n-        metadata_Relocation* r = (metadata_Relocation*)reloc();\n-        return metadata_Relocation::spec(r->metadata_index(), r->offset() + offset);\n-      }\n-    default:\n-      ShouldNotReachHere();\n-    }\n-  }\n-  return (*this);\n-}\n-\n@@ -405,1 +381,1 @@\n-  p = pack_2_ints_to(p, _oop_index, _offset);\n+  p = pack_1_int_to(p, _oop_index);\n@@ -411,1 +387,1 @@\n-  unpack_2_ints(_oop_index, _offset);\n+  _oop_index = unpack_1_int();\n@@ -416,1 +392,1 @@\n-  p = pack_2_ints_to(p, _metadata_index, _offset);\n+  p = pack_1_int_to(p, _metadata_index);\n@@ -422,1 +398,1 @@\n-  unpack_2_ints(_metadata_index, _offset);\n+  _metadata_index = unpack_1_int();\n@@ -858,2 +834,2 @@\n-      tty->print(\" | [oop_addr=\" INTPTR_FORMAT \" *=\" INTPTR_FORMAT \" offset=%d]\",\n-                 p2i(oop_addr), p2i(raw_oop), r->offset());\n+      tty->print(\" | [oop_addr=\" INTPTR_FORMAT \" *=\" INTPTR_FORMAT \"]\",\n+                 p2i(oop_addr), p2i(raw_oop));\n@@ -881,2 +857,2 @@\n-      tty->print(\" | [metadata_addr=\" INTPTR_FORMAT \" *=\" INTPTR_FORMAT \" offset=%d]\",\n-                 p2i(metadata_addr), p2i(raw_metadata), r->offset());\n+      tty->print(\" | [metadata_addr=\" INTPTR_FORMAT \" *=\" INTPTR_FORMAT \"]\",\n+                 p2i(metadata_addr), p2i(raw_metadata));\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":8,"deletions":32,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -132,6 +132,1 @@\n-\/\/          [n]      n is the index of an oop in the CodeBlob's oop pool\n-\/\/          [[N]n l] and l is a byte offset to be applied to the oop\n-\/\/          [Nn Ll]  both index and offset may be 32 bits if necessary\n-\/\/   Here is a special hack, used only by the old compiler:\n-\/\/          [[N]n 00] the value is the __address__ of the nth oop in the pool\n-\/\/   (Note that the offset allows optimal references to class variables.)\n+\/\/          [[N]n]   the index of an oop in the CodeBlob's oop pool\n@@ -518,3 +513,0 @@\n-  \/\/ Add a constant offset to a relocation.  Helper for class Address.\n-  RelocationHolder plus(int offset) const;\n-\n@@ -791,2 +783,2 @@\n-  void       pd_set_data_value       (address x, intptr_t off, bool verify_only = false); \/\/ a set or mem-ref\n-  void       pd_verify_data_value    (address x, intptr_t off) { pd_set_data_value(x, off, true); }\n+  void       pd_set_data_value       (address x, bool verify_only = false); \/\/ a set or mem-ref\n+  void       pd_verify_data_value    (address x) { pd_set_data_value(x, true); }\n@@ -898,1 +890,0 @@\n-\/\/ By convention, the \"value\" does not include a separately reckoned \"offset\".\n@@ -903,1 +894,1 @@\n-  bool          is_data() override             { return true; }\n+  bool    is_data() override { return true; }\n@@ -905,6 +896,4 @@\n-  \/\/ both target and offset must be computed somehow from relocation data\n-  virtual int    offset()                      { return 0; }\n-  address         value() override             = 0;\n-  void        set_value(address x) override    { set_value(x, offset()); }\n-  void        set_value(address x, intptr_t o) {\n-    if (addr_in_const())\n+  \/\/ target must be computed somehow from relocation data\n+  address value() override = 0;\n+  void    set_value(address x) override {\n+    if (addr_in_const()) {\n@@ -912,2 +901,3 @@\n-    else\n-      pd_set_data_value(x, o);\n+    } else {\n+      pd_set_data_value(x);\n+    }\n@@ -915,2 +905,2 @@\n-  void        verify_value(address x) {\n-    if (addr_in_const())\n+  void    verify_value(address x) {\n+    if (addr_in_const()) {\n@@ -918,2 +908,3 @@\n-    else\n-      pd_verify_data_value(x, offset());\n+    } else {\n+      pd_verify_data_value(x);\n+    }\n@@ -921,12 +912,0 @@\n-\n-  \/\/ The \"o\" (displacement) argument is relevant only to split relocations\n-  \/\/ on RISC machines.  In some CPUs (SPARC), the set-hi and set-lo ins'ns\n-  \/\/ can encode more than 32 bits between them.  This allows compilers to\n-  \/\/ share set-hi instructions between addresses that differ by a small\n-  \/\/ offset (e.g., different static variables in the same class).\n-  \/\/ On such machines, the \"x\" argument to set_value on all set-lo\n-  \/\/ instructions must be the same as the \"x\" argument for the\n-  \/\/ corresponding set-hi instructions.  The \"o\" arguments for the\n-  \/\/ set-hi instructions are ignored, and must not affect the high-half\n-  \/\/ immediate constant.  The \"o\" arguments for the set-lo instructions are\n-  \/\/ added into the low-half immediate constant, and must not overflow it.\n@@ -979,3 +958,2 @@\n-  \/\/ encode in one of these formats:  [] [n] [n l] [Nn l] [Nn Ll]\n-  \/\/ an oop in the CodeBlob's oop pool\n-  static RelocationHolder spec(int oop_index, int offset = 0) {\n+  \/\/ an oop in the CodeBlob's oop pool; encoded as [n] or [Nn]\n+  static RelocationHolder spec(int oop_index) {\n@@ -983,1 +961,1 @@\n-    return RelocationHolder::construct<oop_Relocation>(oop_index, offset);\n+    return RelocationHolder::construct<oop_Relocation>(oop_index);\n@@ -985,1 +963,1 @@\n-  \/\/ an oop in the instruction stream\n+  \/\/ an oop in the instruction stream; encoded as []\n@@ -992,2 +970,1 @@\n-    const int offset    = 0;    \/\/ if you want an offset, use the oop pool\n-    return RelocationHolder::construct<oop_Relocation>(oop_index, offset);\n+    return RelocationHolder::construct<oop_Relocation>(oop_index);\n@@ -1000,1 +977,0 @@\n-  jint _offset;                     \/\/ byte offset to apply to the oop itself\n@@ -1002,2 +978,2 @@\n-  oop_Relocation(int oop_index, int offset)\n-    : DataRelocation(relocInfo::oop_type), _oop_index(oop_index), _offset(offset) { }\n+  oop_Relocation(int oop_index)\n+    : DataRelocation(relocInfo::oop_type), _oop_index(oop_index) { }\n@@ -1010,1 +986,0 @@\n-  int offset() override { return _offset; }\n@@ -1012,1 +987,1 @@\n-  \/\/ data is packed in \"2_ints\" format:  [i o] or [Ii Oo]\n+  \/\/ oop_index is packed in \"1_int\" format:  [n] or [Nn]\n@@ -1034,3 +1009,2 @@\n-  \/\/ encode in one of these formats:  [] [n] [n l] [Nn l] [Nn Ll]\n-  \/\/ an metadata in the CodeBlob's metadata pool\n-  static RelocationHolder spec(int metadata_index, int offset = 0) {\n+  \/\/ an metadata in the CodeBlob's metadata pool; encoded as [n] or [Nn]\n+  static RelocationHolder spec(int metadata_index) {\n@@ -1038,1 +1012,1 @@\n-    return RelocationHolder::construct<metadata_Relocation>(metadata_index, offset);\n+    return RelocationHolder::construct<metadata_Relocation>(metadata_index);\n@@ -1040,1 +1014,1 @@\n-  \/\/ an metadata in the instruction stream\n+  \/\/ an metadata in the instruction stream; encoded as []\n@@ -1043,2 +1017,1 @@\n-    const int offset    = 0;    \/\/ if you want an offset, use the metadata pool\n-    return RelocationHolder::construct<metadata_Relocation>(metadata_index, offset);\n+    return RelocationHolder::construct<metadata_Relocation>(metadata_index);\n@@ -1051,1 +1024,0 @@\n-  jint _offset;                     \/\/ byte offset to apply to the metadata itself\n@@ -1053,2 +1025,2 @@\n-  metadata_Relocation(int metadata_index, int offset)\n-    : DataRelocation(relocInfo::metadata_type), _metadata_index(metadata_index), _offset(offset) { }\n+  metadata_Relocation(int metadata_index)\n+    : DataRelocation(relocInfo::metadata_type), _metadata_index(metadata_index) { }\n@@ -1066,1 +1038,0 @@\n-  int offset() override { return _offset; }\n@@ -1068,1 +1039,1 @@\n-  \/\/ data is packed in \"2_ints\" format:  [i o] or [Ii Oo]\n+  \/\/ metadata_index is packed in \"1_int\" format:  [n] or [Nn]\n","filename":"src\/hotspot\/share\/code\/relocInfo.hpp","additions":32,"deletions":61,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-VMReg VMRegImpl::stack0 = (VMReg)(intptr_t)VMRegImpl::stack_0()->value();\n+VMReg VMRegImpl::stack0 = (VMReg)(intptr_t)FIRST_STACK;\n","filename":"src\/hotspot\/share\/code\/vmreg.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,2 @@\n-    BAD_REG = -1\n+    BAD_REG = -1,\n+    FIRST_STACK = (ConcreteRegisterImpl::number_of_registers + 7) & ~7\n@@ -74,1 +75,1 @@\n-    return first() + ((ConcreteRegisterImpl::number_of_registers + 7) & ~7);\n+    return first() + FIRST_STACK;\n","filename":"src\/hotspot\/share\/code\/vmreg.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-  _limit(0), _hit_limit(false),\n+  _limit(0), _hit_limit(false), _limit_in_process(false),\n@@ -184,0 +184,2 @@\n+  \/\/ active limit for this compilation, if any\n+  size_t _limit;\n@@ -185,0 +187,1 @@\n+  \/\/ peak usage, bytes, over all arenas\n@@ -186,0 +189,1 @@\n+  \/\/ usage in node arena when total peaked\n@@ -187,0 +191,1 @@\n+  \/\/ usage in resource area when total peaked\n@@ -188,0 +193,1 @@\n+  \/\/ number of nodes (c2 only) when total peaked\n@@ -195,1 +201,1 @@\n-      _time(0), _num_recomp(0), _thread(nullptr),\n+      _time(0), _num_recomp(0), _thread(nullptr), _limit(0),\n@@ -203,0 +209,1 @@\n+  void set_limit(size_t limit) { _limit = limit; }\n@@ -221,0 +228,1 @@\n+    st->print_cr(\"  limit  : memory limit, if set\");\n@@ -228,1 +236,1 @@\n-    st->print_cr(\"total     NA        RA        result  #nodes  time    type  #rc thread              method\");\n+    st->print_cr(\"total     NA        RA        result  #nodes  limit   time    type  #rc thread              method\");\n@@ -263,1 +271,13 @@\n-    st->print(\"%u \", _live_nodes_at_peak);\n+    if (_live_nodes_at_peak > 0) {\n+      st->print(\"%u \", _live_nodes_at_peak);\n+    } else {\n+      st->print(\"-\");\n+    }\n+    col += 8; st->fill_to(col);\n+\n+    \/\/ Limit\n+    if (_limit > 0) {\n+      st->print(PROPERFMT \" \", PROPERFMTARGS(_limit));\n+    } else {\n+      st->print(\"-\");\n+    }\n@@ -325,1 +345,1 @@\n-           unsigned live_nodes_at_peak, const char* result) {\n+           unsigned live_nodes_at_peak, size_t limit, const char* result) {\n@@ -346,0 +366,1 @@\n+    e->set_limit(limit);\n@@ -433,0 +454,1 @@\n+                    arena_stat->limit(),\n@@ -486,0 +508,4 @@\n+  if (arena_stat->limit_in_process()) {\n+    return; \/\/ avoid recursion on limit hit\n+  }\n+\n@@ -492,1 +518,0 @@\n-\n@@ -498,0 +523,2 @@\n+      arena_stat->set_limit_in_process(true); \/\/ prevent recursive limit hits\n+\n@@ -519,2 +546,2 @@\n-        ss.print(\"Hit MemLimit %s (limit: %zu now: %zu)\",\n-                 (hit_limit_before ? \"again\" : \"\"),\n+        ss.print(\"Hit MemLimit %s(limit: %zu now: %zu)\",\n+                 (hit_limit_before ? \"again \" : \"\"),\n@@ -536,0 +563,2 @@\n+\n+      arena_stat->set_limit_in_process(false);\n","filename":"src\/hotspot\/share\/compiler\/compilationMemoryStatistic.cpp","additions":37,"deletions":8,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+  bool _limit_in_process;\n@@ -89,0 +90,3 @@\n+  bool   limit_in_process() const     { return _limit_in_process; }\n+  void   set_limit_in_process(bool v) { _limit_in_process = v; }\n+\n","filename":"src\/hotspot\/share\/compiler\/compilationMemoryStatistic.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+#include \"gc\/shared\/memAllocator.hpp\"\n@@ -1399,0 +1400,1 @@\n+    InternalOOMEMark iom(THREAD);\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include \"utilities\/istream.hpp\"\n@@ -45,0 +46,17 @@\n+\/\/ Default compile commands, if defined, are parsed before any of the\n+\/\/ explicitly defined compile commands. Thus, explicitly defined compile\n+\/\/ commands take precedence over default compile commands. The effect is\n+\/\/ as if the default compile commands had been specified at the start of\n+\/\/ the command line.\n+static const char* const default_compile_commands[] = {\n+#ifdef ASSERT\n+    \/\/ In debug builds, impose a (generous) per-compilation memory limit\n+    \/\/ to catch pathological compilations during testing. The suboption\n+    \/\/ \"crash\" will cause the JVM to assert.\n+    \/\/\n+    \/\/ Note: to disable the default limit at the command line,\n+    \/\/ set a limit of 0 (e.g. -XX:CompileCommand=MemLimit,*.*,0).\n+    \"MemLimit,*.*,1G~crash\",\n+#endif\n+    nullptr };\n+\n@@ -908,0 +926,8 @@\n+bool CompilerOracle::parse_from_line_quietly(char* line) {\n+  const bool quiet0 = _quiet;\n+  _quiet = true;\n+  const bool result = parse_from_line(line);\n+  _quiet = quiet0;\n+  return result;\n+}\n+\n@@ -1059,22 +1085,2 @@\n-  char token[1024];\n-  int  pos = 0;\n-  int  c = getc(stream);\n-  bool success = true;\n-  while(c != EOF && pos < (int)(sizeof(token)-1)) {\n-    if (c == '\\n') {\n-      token[pos++] = '\\0';\n-      if (!parse_from_line(token)) {\n-        success = false;\n-      }\n-      pos = 0;\n-    } else {\n-      token[pos++] = c;\n-    }\n-    c = getc(stream);\n-  }\n-  token[pos++] = '\\0';\n-  if (!parse_from_line(token)) {\n-    success = false;\n-  }\n-  fclose(stream);\n-  return success;\n+  FileInput input(stream, \/*need_close=*\/ true);\n+  return parse_from_input(&input, parse_from_line);\n@@ -1083,5 +1089,3 @@\n-bool CompilerOracle::parse_from_string(const char* str, bool (*parse_line)(char*)) {\n-  char token[1024];\n-  int  pos = 0;\n-  const char* sp = str;\n-  int  c = *sp++;\n+bool CompilerOracle::parse_from_input(inputStream::Input* input,\n+                                      CompilerOracle::\n+                                      parse_from_line_fn_t* parse_from_line) {\n@@ -1089,9 +1093,3 @@\n-  while (c != '\\0' && pos < (int)(sizeof(token)-1)) {\n-    if (c == '\\n') {\n-      token[pos++] = '\\0';\n-      if (!parse_line(token)) {\n-        success = false;\n-      }\n-      pos = 0;\n-    } else {\n-      token[pos++] = c;\n+  for (inputStream in(input); !in.done(); in.next()) {\n+    if (!parse_from_line(in.current_line())) {\n+      success = false;\n@@ -1099,5 +1097,0 @@\n-    c = *sp++;\n-  }\n-  token[pos++] = '\\0';\n-  if (!parse_line(token)) {\n-    success = false;\n@@ -1108,0 +1101,7 @@\n+bool CompilerOracle::parse_from_string(const char* str,\n+                                       CompilerOracle::\n+                                       parse_from_line_fn_t* parse_from_line) {\n+  MemoryInput input(str, strlen(str));\n+  return parse_from_input(&input, parse_from_line);\n+}\n+\n@@ -1110,0 +1110,8 @@\n+  \/\/ Register default compile commands first - any commands specified via CompileCommand will\n+  \/\/ supersede these default commands.\n+  for (int i = 0; default_compile_commands[i] != nullptr; i ++) {\n+    char* s = os::strdup(default_compile_commands[i]);\n+    success = CompilerOracle::parse_from_line_quietly(s);\n+    os::free(s);\n+    assert(success, \"default compile command \\\"%s\\\" failed to parse\", default_compile_commands[i]);\n+  }\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.cpp","additions":49,"deletions":41,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"utilities\/istream.hpp\"\n@@ -123,0 +124,3 @@\n+ public:\n+  typedef bool parse_from_line_fn_t(char*);\n+\n@@ -128,0 +132,4 @@\n+  \/\/ The core parser.\n+  static bool parse_from_input(inputStream::Input* input,\n+                               parse_from_line_fn_t* parse_from_line);\n+\n@@ -180,1 +188,2 @@\n-  static bool parse_from_string(const char* option_string, bool (*parser)(char*));\n+  static bool parse_from_string(const char* option_string,\n+                                parse_from_line_fn_t* parser);\n@@ -182,0 +191,1 @@\n+  static bool parse_from_line_quietly(char* line);\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.hpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -133,2 +133,1 @@\n-HeapWord* G1AllocRegion::new_alloc_region_and_allocate(size_t word_size,\n-                                                       bool force) {\n+HeapWord* G1AllocRegion::new_alloc_region_and_allocate(size_t word_size) {\n@@ -139,1 +138,1 @@\n-  HeapRegion* new_alloc_region = allocate_new_region(word_size, force);\n+  HeapRegion* new_alloc_region = allocate_new_region(word_size);\n@@ -261,3 +260,2 @@\n-HeapRegion* MutatorAllocRegion::allocate_new_region(size_t word_size,\n-                                                    bool force) {\n-  return _g1h->new_mutator_alloc_region(word_size, force, _node_index);\n+HeapRegion* MutatorAllocRegion::allocate_new_region(size_t word_size) {\n+  return _g1h->new_mutator_alloc_region(word_size, _node_index);\n@@ -347,3 +345,1 @@\n-HeapRegion* G1GCAllocRegion::allocate_new_region(size_t word_size,\n-                                                 bool force) {\n-  assert(!force, \"not supported for GC alloc regions\");\n+HeapRegion* G1GCAllocRegion::allocate_new_region(size_t word_size) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1AllocRegion.cpp","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -86,4 +86,2 @@\n-  \/\/ allocation. The force parameter will be passed on to\n-  \/\/ G1CollectedHeap::allocate_new_alloc_region() and tells it to try\n-  \/\/ to allocate a new region even if the max has been reached.\n-  HeapWord* new_alloc_region_and_allocate(size_t word_size, bool force);\n+  \/\/ allocation.\n+  HeapWord* new_alloc_region_and_allocate(size_t word_size);\n@@ -135,1 +133,1 @@\n-  virtual HeapRegion* allocate_new_region(size_t word_size, bool force) = 0;\n+  virtual HeapRegion* allocate_new_region(size_t word_size) = 0;\n@@ -175,6 +173,0 @@\n-  \/\/ Should be called to allocate a new region even if the max of this\n-  \/\/ type of regions has been reached. Should only be called if other\n-  \/\/ allocation attempts have failed and we are not holding a valid\n-  \/\/ active region.\n-  inline HeapWord* attempt_allocation_force(size_t word_size);\n-\n@@ -216,1 +208,1 @@\n-  virtual HeapRegion* allocate_new_region(size_t word_size, bool force);\n+  virtual HeapRegion* allocate_new_region(size_t word_size);\n@@ -252,1 +244,1 @@\n-  virtual HeapRegion* allocate_new_region(size_t word_size, bool force);\n+  virtual HeapRegion* allocate_new_region(size_t word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1AllocRegion.hpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-  HeapWord* result = new_alloc_region_and_allocate(desired_word_size, false \/* force *\/);\n+  HeapWord* result = new_alloc_region_and_allocate(desired_word_size);\n@@ -111,13 +111,0 @@\n-inline HeapWord* G1AllocRegion::attempt_allocation_force(size_t word_size) {\n-  assert_alloc_region(_alloc_region != nullptr, \"not initialized properly\");\n-\n-  trace(\"forcing alloc\", word_size, word_size);\n-  HeapWord* result = new_alloc_region_and_allocate(word_size, true \/* force *\/);\n-  if (result != nullptr) {\n-    trace(\"alloc forced\", word_size, word_size, word_size, result);\n-    return result;\n-  }\n-  trace(\"alloc forced failed\", word_size, word_size);\n-  return nullptr;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1AllocRegion.inline.hpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -121,1 +122,1 @@\n-    _g1h->hr_printer()->reuse(retained_region);\n+    G1HeapRegionPrinter::reuse(retained_region);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -124,2 +124,0 @@\n-  inline HeapWord* attempt_allocation_force(size_t word_size);\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,5 +74,0 @@\n-inline HeapWord* G1Allocator::attempt_allocation_force(size_t word_size) {\n-  uint node_index = current_node_index();\n-  return mutator_alloc_region(node_index)->attempt_allocation_force(word_size);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.inline.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -328,1 +329,1 @@\n-    _hr_printer.alloc(hr);\n+    G1HeapRegionPrinter::alloc(hr);\n@@ -527,1 +528,1 @@\n-    _hr_printer.alloc(r);\n+    G1HeapRegionPrinter::alloc(r);\n@@ -713,2 +714,0 @@\n-private:\n-  G1HRPrinter* _hr_printer;\n@@ -718,1 +717,1 @@\n-    _hr_printer->post_compaction(hr);\n+    G1HeapRegionPrinter::post_compaction(hr);\n@@ -721,3 +720,0 @@\n-\n-  PostCompactionPrinterClosure(G1HRPrinter* hr_printer)\n-    : _hr_printer(hr_printer) { }\n@@ -731,2 +727,2 @@\n-  if (_hr_printer.is_active()) {\n-    PostCompactionPrinterClosure cl(hr_printer());\n+  if (G1HeapRegionPrinter::is_active()) {\n+    PostCompactionPrinterClosure cl;\n@@ -1155,1 +1151,0 @@\n-  _hr_printer(),\n@@ -2407,1 +2402,1 @@\n-  guarantee(!is_gc_active(), \"collection is not reentrant\");\n+  guarantee(!is_stw_gc_active(), \"collection is not reentrant\");\n@@ -2477,1 +2472,1 @@\n-  IsGCActiveMark active_gc_mark;\n+  IsSTWGCActiveMark active_gc_mark;\n@@ -2854,1 +2849,0 @@\n-                                                      bool force,\n@@ -2858,1 +2852,1 @@\n-  if (force || should_allocate) {\n+  if (should_allocate) {\n@@ -2865,1 +2859,1 @@\n-      _hr_printer.alloc(new_alloc_region, !should_allocate);\n+      G1HeapRegionPrinter::alloc(new_alloc_region);\n@@ -2881,1 +2875,1 @@\n-  _hr_printer.retire(alloc_region);\n+  G1HeapRegionPrinter::retire(alloc_region);\n@@ -2928,1 +2922,1 @@\n-    _hr_printer.alloc(new_alloc_region);\n+    G1HeapRegionPrinter::alloc(new_alloc_region);\n@@ -2949,1 +2943,1 @@\n-  _hr_printer.retire(alloc_region);\n+  G1HeapRegionPrinter::retire(alloc_region);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":13,"deletions":19,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -268,2 +267,0 @@\n-  G1HRPrinter _hr_printer;\n-\n@@ -471,1 +468,1 @@\n-  HeapRegion* new_mutator_alloc_region(size_t word_size, bool force, uint node_index);\n+  HeapRegion* new_mutator_alloc_region(size_t word_size, uint node_index);\n@@ -672,2 +669,0 @@\n-  G1HRPrinter* hr_printer() { return &_hr_printer; }\n-\n@@ -757,1 +752,1 @@\n-  \/\/ precondition: !is_gc_active()\n+  \/\/ precondition: !is_stw_gc_active()\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-  assert(!is_gc_active(), \"must not pin objects during a GC\");\n+  assert(!is_stw_gc_active(), \"must not pin objects during a GC pause\");\n@@ -277,1 +277,1 @@\n-  assert(!is_gc_active(), \"must not unpin objects during a GC\");\n+  assert(!is_stw_gc_active(), \"must not unpin objects during a GC pause\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"gc\/g1\/g1CollectionSetCandidates.hpp\"\n+#include \"gc\/g1\/g1CollectionSetCandidates.inline.hpp\"\n@@ -47,1 +47,1 @@\n-  _candidates.sort(compare);\n+  _candidates.sort(compare_gc_efficiency);\n@@ -97,1 +97,16 @@\n-int G1CollectionCandidateList::compare(G1CollectionSetCandidateInfo* ci1, G1CollectionSetCandidateInfo* ci2) {\n+int G1CollectionCandidateList::compare_gc_efficiency(G1CollectionSetCandidateInfo* ci1, G1CollectionSetCandidateInfo* ci2) {\n+  assert(ci1->_r != nullptr && ci2->_r != nullptr, \"Should not be!\");\n+\n+  double gc_eff1 = ci1->_gc_efficiency;\n+  double gc_eff2 = ci2->_gc_efficiency;\n+\n+  if (gc_eff1 > gc_eff2) {\n+    return -1;\n+  } else if (gc_eff1 < gc_eff2) {\n+    return 1;\n+  } else {\n+    return 0;\n+  }\n+}\n+\n+int G1CollectionCandidateList::compare_reclaimble_bytes(G1CollectionSetCandidateInfo* ci1, G1CollectionSetCandidateInfo* ci2) {\n@@ -109,2 +124,2 @@\n-  double gc_eff1 = ci1->_gc_efficiency;\n-  double gc_eff2 = ci2->_gc_efficiency;\n+  size_t reclaimable1 = ci1->_r->reclaimable_bytes();\n+  size_t reclaimable2 = ci2->_r->reclaimable_bytes();\n@@ -112,1 +127,1 @@\n-  if (gc_eff1 > gc_eff2) {\n+  if (reclaimable1 > reclaimable2) {\n@@ -114,1 +129,1 @@\n-  } if (gc_eff1 < gc_eff2) {\n+  } else if (reclaimable1 < reclaimable2) {\n@@ -185,0 +200,11 @@\n+void G1CollectionSetCandidates::sort_marking_by_efficiency() {\n+  G1CollectionCandidateListIterator iter = _marking_regions.begin();\n+  for (; iter != _marking_regions.end(); ++iter) {\n+    HeapRegion* hr = (*iter)->_r;\n+    (*iter)->_gc_efficiency = hr->calc_gc_efficiency();\n+  }\n+  _marking_regions.sort_by_efficiency();\n+\n+  _marking_regions.verify();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.cpp","additions":33,"deletions":7,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-#include \"gc\/g1\/g1_globals.hpp\"\n@@ -132,1 +131,3 @@\n-  static int compare(G1CollectionSetCandidateInfo* ci1, G1CollectionSetCandidateInfo* ci2);\n+  static int compare_gc_efficiency(G1CollectionSetCandidateInfo* ci1, G1CollectionSetCandidateInfo* ci2);\n+\n+  static int compare_reclaimble_bytes(G1CollectionSetCandidateInfo* ci1, G1CollectionSetCandidateInfo* ci2);\n@@ -216,0 +217,2 @@\n+  void sort_marking_by_efficiency();\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-      _data[idx] = CandidateInfo(hr, hr->calc_gc_efficiency());\n+      _data[idx] = CandidateInfo(hr, 0.0);\n@@ -100,1 +100,1 @@\n-    void sort_by_efficiency() {\n+    void sort_by_reclaimable_bytes() {\n@@ -107,1 +107,1 @@\n-      qsort(_data, _cur_claim_idx, sizeof(_data[0]), (_sort_Fn)G1CollectionCandidateList::compare);\n+      qsort(_data, _cur_claim_idx, sizeof(_data[0]), (_sort_Fn)G1CollectionCandidateList::compare_reclaimble_bytes);\n@@ -155,2 +155,1 @@\n-      assert(!r->rem_set()->is_updating(), \"must be\");\n-      if (!r->rem_set()->is_complete()) {\n+      if (!r->rem_set()->is_tracked()) {\n@@ -252,1 +251,1 @@\n-    _result.sort_by_efficiency();\n+    _result.sort_by_reclaimable_bytes();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -1320,1 +1321,1 @@\n-      _g1h->hr_printer()->cleanup(&_cleanup_list);\n+      G1HeapRegionPrinter::mark_reclaim(&_cleanup_list);\n@@ -1440,0 +1441,1 @@\n+\n@@ -1441,0 +1443,6 @@\n+\n+      if (_needs_remembered_set_rebuild) {\n+        \/\/ Prune rebuild candidates based on G1HeapWastePercent.\n+        \/\/ Improves rebuild time in addition to remembered set memory usage.\n+        G1CollectionSetChooser::build(_g1h->workers(), _g1h->num_regions(), _g1h->policy()->candidates());\n+      }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-#include \"gc\/g1\/g1_globals.hpp\"\n+#include \"gc\/shared\/gc_globals.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRebuildAndScrub.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  IsGCActiveMark          _active;\n+  IsSTWGCActiveMark       _active;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,38 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-\n-#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n-\n-void G1HRPrinter::cleanup(FreeRegionList* cleanup_list) {\n-  if (is_active()) {\n-    FreeRegionListIterator iter(cleanup_list);\n-    while (iter.more_available()) {\n-      HeapRegion* hr = iter.get_next();\n-      cleanup(hr);\n-    }\n-  }\n-}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HRPrinter.cpp","additions":0,"deletions":38,"binary":false,"changes":38,"status":"deleted"},{"patch":"@@ -1,124 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_GC_G1_G1HRPRINTER_HPP\n-#define SHARE_GC_G1_G1HRPRINTER_HPP\n-\n-#include \"gc\/g1\/g1HeapRegion.hpp\"\n-#include \"logging\/log.hpp\"\n-\n-#define SKIP_RETIRED_FULL_REGIONS 1\n-\n-class FreeRegionList;\n-\n-class G1HRPrinter {\n-\n-private:\n-\n-  \/\/ Print an action event.\n-  static void print(const char* action, HeapRegion* hr) {\n-    log_trace(gc, region)(\"G1HR %s(%s) [\" PTR_FORMAT \", \" PTR_FORMAT \", \" PTR_FORMAT \"]\",\n-                          action, hr->get_type_str(), p2i(hr->bottom()), p2i(hr->top()), p2i(hr->end()));\n-  }\n-\n-public:\n-  \/\/ In some places we iterate over a list in order to generate output\n-  \/\/ for the list's elements. By exposing this we can avoid this\n-  \/\/ iteration if the printer is not active.\n-  bool is_active() { return log_is_enabled(Trace, gc, region); }\n-\n-  \/\/ The methods below are convenient wrappers for the print() method.\n-\n-  void alloc(HeapRegion* hr, bool force = false) {\n-    if (is_active()) {\n-      print((force) ? \"ALLOC-FORCE\" : \"ALLOC\", hr);\n-    }\n-  }\n-\n-  void retire(HeapRegion* hr) {\n-    if (is_active()) {\n-      if (!SKIP_RETIRED_FULL_REGIONS || hr->top() < hr->end()) {\n-        print(\"RETIRE\", hr);\n-      }\n-    }\n-  }\n-\n-  void reuse(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"REUSE\", hr);\n-    }\n-  }\n-\n-  void cset(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"CSET\", hr);\n-    }\n-  }\n-\n-  void evac_failure(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"EVAC-FAILURE\", hr);\n-    }\n-  }\n-\n-  void cleanup(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"CLEANUP\", hr);\n-    }\n-  }\n-\n-  void cleanup(FreeRegionList* free_list);\n-\n-  void post_compaction(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"POST-COMPACTION\", hr);\n-    }\n-  }\n-\n-  void commit(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"COMMIT\", hr);\n-    }\n-  }\n-\n-  void active(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"ACTIVE\", hr);\n-    }\n-  }\n-\n-  void inactive(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"INACTIVE\", hr);\n-    }\n-  }\n-\n-  void uncommit(HeapRegion* hr) {\n-    if (is_active()) {\n-      print(\"UNCOMMIT\", hr);\n-    }\n-  }\n-};\n-\n-#endif \/\/ SHARE_GC_G1_G1HRPRINTER_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HRPrinter.hpp","additions":0,"deletions":124,"binary":false,"changes":124,"status":"deleted"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -173,1 +174,1 @@\n-    G1CollectedHeap::heap()->hr_printer()->commit(hr);\n+    G1HeapRegionPrinter::commit(hr);\n@@ -196,2 +197,1 @@\n-  G1HRPrinter* printer = G1CollectedHeap::heap()->hr_printer();\n-  if (printer->is_active()) {\n+  if (G1HeapRegionPrinter::is_active()) {\n@@ -202,1 +202,1 @@\n-      printer->uncommit(hr);\n+      G1HeapRegionPrinter::uncommit(hr);\n@@ -226,1 +226,1 @@\n-    G1CollectedHeap::heap()->hr_printer()->active(hr);\n+    G1HeapRegionPrinter::active(hr);\n@@ -253,1 +253,1 @@\n-    G1CollectedHeap::heap()->hr_printer()->inactive(hr);\n+    G1HeapRegionPrinter::inactive(hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n+\n+void G1HeapRegionPrinter::mark_reclaim(FreeRegionList* cleanup_list) {\n+  if (is_active()) {\n+    FreeRegionListIterator iter(cleanup_list);\n+    while (iter.more_available()) {\n+      HeapRegion* hr = iter.get_next();\n+      mark_reclaim(hr);\n+    }\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionPrinter.cpp","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_GC_G1_G1HEAPREGIONPRINTER_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONPRINTER_HPP\n+\n+#include \"gc\/g1\/g1HeapRegion.hpp\"\n+#include \"logging\/log.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+\n+class FreeRegionList;\n+\n+class G1HeapRegionPrinter : public AllStatic {\n+\n+  \/\/ Print an action event.\n+  static void print(const char* action, HeapRegion* hr) {\n+    log_trace(gc, region)(\"G1HR %s(%s) [\" PTR_FORMAT \", \" PTR_FORMAT \", \" PTR_FORMAT \"]\",\n+                          action, hr->get_type_str(), p2i(hr->bottom()), p2i(hr->top()), p2i(hr->end()));\n+  }\n+\n+  static void mark_reclaim(HeapRegion* hr) {\n+    print(\"MARK-RECLAIM\", hr);\n+  }\n+\n+public:\n+  \/\/ In some places we iterate over a list in order to generate output\n+  \/\/ for the list's elements. By exposing this we can avoid this\n+  \/\/ iteration if the printer is not active.\n+  static bool is_active() { return log_is_enabled(Trace, gc, region); }\n+\n+  \/\/ The methods below are convenient wrappers for the print() method.\n+\n+  static void alloc(HeapRegion* hr)                     { print(\"ALLOC\", hr); }\n+\n+  static void retire(HeapRegion* hr)                    { print(\"RETIRE\", hr); }\n+\n+  static void reuse(HeapRegion* hr)                     { print(\"REUSE\", hr); }\n+\n+  static void cset(HeapRegion* hr)                      { print(\"CSET\", hr); }\n+\n+  static void evac_failure(HeapRegion* hr)              { print(\"EVAC-FAILURE\", hr); }\n+\n+  static void mark_reclaim(FreeRegionList* free_list);\n+\n+  static void eager_reclaim(HeapRegion* hr)             { print(\"EAGER-RECLAIM\", hr); }\n+\n+  static void evac_reclaim(HeapRegion* hr)              { print(\"EVAC-RECLAIM\", hr); }\n+\n+  static void post_compaction(HeapRegion* hr)           { print(\"POST-COMPACTION\", hr); }\n+\n+  static void commit(HeapRegion* hr)                    { print(\"COMMIT\", hr); }\n+\n+  static void active(HeapRegion* hr)                    { print(\"ACTIVE\", hr); }\n+\n+  static void inactive(HeapRegion* hr)                  { print(\"INACTIVE\", hr); }\n+\n+  static void uncommit(HeapRegion* hr)                  { print(\"UNCOMMIT\", hr); }\n+};\n+\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONPRINTER_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionPrinter.hpp","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonotonicArena.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,0 @@\n-#include \"gc\/g1\/g1_globals.hpp\"\n-#include \"gc\/shared\/gc_globals.hpp\"\n@@ -35,0 +33,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonotonicArenaFreeMemoryTask.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -646,1 +647,1 @@\n-      _g1h->hr_printer()->evac_failure(r);\n+      G1HeapRegionPrinter::evac_failure(r);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-#include \"gc\/g1\/g1_globals.hpp\"\n@@ -35,0 +34,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1313,1 +1313,1 @@\n-    G1CollectionSetChooser::build(_g1h->workers(), _g1h->num_regions(), candidates());\n+    candidates()->sort_marking_by_efficiency();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -187,0 +187,2 @@\n+  G1CollectionSetCandidates* candidates() const;\n+\n@@ -189,1 +191,0 @@\n-  G1CollectionSetCandidates* candidates() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-#include \"gc\/g1\/g1_globals.hpp\"\n@@ -49,0 +48,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n@@ -1567,1 +1567,1 @@\n-  assert(!_g1h->is_gc_active(), \"Only call concurrently\");\n+  assert(!_g1h->is_stw_gc_active(), \"Only call concurrently\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-  IsGCActiveMark x;\n+  IsSTWGCActiveMark x;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -52,1 +52,0 @@\n-#include \"gc\/g1\/g1_globals.hpp\"\n@@ -56,0 +55,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n@@ -219,4 +219,0 @@\n-G1HRPrinter* G1YoungCollector::hr_printer() const {\n-  return _g1h->hr_printer();\n-}\n-\n@@ -267,2 +263,0 @@\n-private:\n-  G1HRPrinter* _hr_printer;\n@@ -270,2 +264,0 @@\n-  G1PrintCollectionSetClosure(G1HRPrinter* hr_printer) : HeapRegionClosure(), _hr_printer(hr_printer) { }\n-\n@@ -273,1 +265,1 @@\n-    _hr_printer->cset(r);\n+    G1HeapRegionPrinter::cset(r);\n@@ -289,2 +281,2 @@\n-  if (hr_printer()->is_active()) {\n-    G1PrintCollectionSetClosure cl(hr_printer());\n+  if (G1HeapRegionPrinter::is_active()) {\n+    G1PrintCollectionSetClosure cl;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-class G1HRPrinter;\n@@ -72,1 +71,0 @@\n-  G1HRPrinter* hr_printer() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"gc\/g1\/g1_globals.hpp\"\n+#include \"gc\/shared\/gc_globals.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCAllocationFailureInjector.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/g1_globals.hpp\"\n+#include \"gc\/shared\/gc_globals.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCAllocationFailureInjector.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-#include \"gc\/g1\/g1_globals.hpp\"\n@@ -32,0 +31,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCAllocationFailureInjector.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -415,1 +416,1 @@\n-      _g1h->hr_printer()->cleanup(r);\n+      G1HeapRegionPrinter::eager_reclaim(r);\n@@ -763,1 +764,1 @@\n-    _g1h->hr_printer()->cleanup(r);\n+    G1HeapRegionPrinter::evac_reclaim(r);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -82,4 +82,1 @@\n-void MutableNUMASpace::mangle_unused_area_complete() {\n-  \/\/ This method should do nothing.\n-  \/\/ It can be called on a numa space during a full compaction.\n-}\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-  virtual void mangle_unused_area_complete() PRODUCT_RETURN;\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -170,4 +170,0 @@\n-void MutableSpace::mangle_unused_area_complete() {\n-  mangler()->mangle_unused_area_complete();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-  virtual void mangle_unused_area_complete() PRODUCT_RETURN;\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"code\/codeCache.hpp\"\n@@ -38,1 +37,0 @@\n-#include \"gc\/shared\/gcInitLogger.hpp\"\n@@ -462,1 +460,1 @@\n-  assert(!is_gc_active(), \"not reentrant\");\n+  assert(!is_stw_gc_active(), \"not reentrant\");\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-#include \"gc\/parallel\/objectStartArray.hpp\"\n@@ -37,3 +36,0 @@\n-#include \"gc\/shared\/referenceProcessor.hpp\"\n-#include \"gc\/shared\/softRefPolicy.hpp\"\n-#include \"gc\/shared\/strongRootsScope.hpp\"\n@@ -43,1 +39,0 @@\n-#include \"utilities\/ostream.hpp\"\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-#include \"gc\/parallel\/psParallelCompact.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.inline.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+#include \"gc\/shared\/strongRootsScope.hpp\"\n@@ -1273,1 +1274,1 @@\n-  assert(!heap->is_gc_active(), \"not reentrant\");\n+  assert(!heap->is_stw_gc_active(), \"not reentrant\");\n@@ -1275,1 +1276,1 @@\n-  IsGCActiveMark mark;\n+  IsSTWGCActiveMark mark;\n@@ -1496,1 +1497,1 @@\n-    assert(ParallelScavengeHeap::heap()->is_gc_active(), \"called outside gc\");\n+    assert(ParallelScavengeHeap::heap()->is_stw_gc_active(), \"called outside gc\");\n@@ -1513,1 +1514,1 @@\n-  assert(ParallelScavengeHeap::heap()->is_gc_active(), \"called outside gc\");\n+  assert(ParallelScavengeHeap::heap()->is_stw_gc_active(), \"called outside gc\");\n@@ -1990,1 +1991,1 @@\n-  assert(ParallelScavengeHeap::heap()->is_gc_active(), \"called outside gc\");\n+  assert(ParallelScavengeHeap::heap()->is_stw_gc_active(), \"called outside gc\");\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+#include \"gc\/shared\/referenceProcessor.hpp\"\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+#include \"gc\/shared\/strongRootsScope.hpp\"\n@@ -87,1 +88,1 @@\n-  assert(ParallelScavengeHeap::heap()->is_gc_active(), \"called outside gc\");\n+  assert(ParallelScavengeHeap::heap()->is_stw_gc_active(), \"called outside gc\");\n@@ -118,1 +119,1 @@\n-  assert(ParallelScavengeHeap::heap()->is_gc_active(), \"called outside gc\");\n+  assert(ParallelScavengeHeap::heap()->is_stw_gc_active(), \"called outside gc\");\n@@ -235,1 +236,1 @@\n-  assert(!ParallelScavengeHeap::heap()->is_gc_active(), \"not reentrant\");\n+  assert(!ParallelScavengeHeap::heap()->is_stw_gc_active(), \"not reentrant\");\n@@ -239,1 +240,1 @@\n-  IsGCActiveMark mark;\n+  IsSTWGCActiveMark mark;\n@@ -267,1 +268,1 @@\n-    assert(ParallelScavengeHeap::heap()->is_gc_active(), \"called outside gc\");\n+    assert(ParallelScavengeHeap::heap()->is_stw_gc_active(), \"called outside gc\");\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"gc\/shared\/referenceProcessor.hpp\"\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"gc\/parallel\/psParallelCompact.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVMOperations.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -229,0 +229,1 @@\n+    _promotion_failed(false),\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -487,1 +487,1 @@\n-  guarantee(!is_gc_active(), \"collection is not reentrant\");\n+  guarantee(!is_stw_gc_active(), \"collection is not reentrant\");\n@@ -498,1 +498,1 @@\n-  IsGCActiveMark active_gc_mark;\n+  IsSTWGCActiveMark active_gc_mark;\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-  if (nm->is_native_method() || nm->is_compiled_by_c2() || nm->is_compiled_by_c1()) {\n+  if (nm->is_native_method() || nm->is_compiled_by_c2() || nm->is_compiled_by_c1() || nm->is_compiled_by_jvmci()) {\n@@ -72,6 +72,0 @@\n-#if INCLUDE_JVMCI\n-  if (nm->is_compiled_by_jvmci() && nm->jvmci_nmethod_data()->has_entry_barrier()) {\n-    return true;\n-  }\n-#endif\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/barrierSetNMethod.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -94,5 +94,0 @@\n-BarrierStubC2::BarrierStubC2(const MachNode* node)\n-  : _node(node),\n-    _entry(),\n-    _continuation() {}\n-\n@@ -103,0 +98,6 @@\n+BarrierStubC2::BarrierStubC2(const MachNode* node)\n+  : _node(node),\n+    _entry(),\n+    _continuation(),\n+    _preserve(live()) {}\n+\n@@ -115,0 +116,21 @@\n+void BarrierStubC2::preserve(Register r) {\n+  const VMReg vm_reg = r->as_VMReg();\n+  assert(vm_reg->is_Register(), \"r must be a general-purpose register\");\n+  _preserve.Insert(OptoReg::as_OptoReg(vm_reg));\n+}\n+\n+void BarrierStubC2::dont_preserve(Register r) {\n+  VMReg vm_reg = r->as_VMReg();\n+  assert(vm_reg->is_Register(), \"r must be a general-purpose register\");\n+  \/\/ Subtract the given register and all its sub-registers (e.g. {R11, R11_H}\n+  \/\/ for r11 in aarch64).\n+  do {\n+    _preserve.Remove(OptoReg::as_OptoReg(vm_reg));\n+    vm_reg = vm_reg->next();\n+  } while (vm_reg->is_Register() && !vm_reg->is_concrete());\n+}\n+\n+const RegMask& BarrierStubC2::preserve_set() const {\n+  return _preserve;\n+}\n+\n@@ -835,0 +857,1 @@\n+  BarrierSetC2State* bs_state = barrier_set_state();\n@@ -857,0 +880,8 @@\n+      \/\/ If this node tracks out-liveness, update it\n+      if (!bs_state->needs_livein_data()) {\n+        RegMask* const regs = bs_state->live(node);\n+        if (regs != nullptr) {\n+          regs->OR(new_live);\n+        }\n+      }\n+\n@@ -880,4 +911,6 @@\n-       \/\/ If this node tracks liveness, update it\n-      RegMask* const regs = barrier_set_state()->live(node);\n-      if (regs != NULL) {\n-        regs->OR(new_live);\n+      \/\/ If this node tracks in-liveness, update it\n+      if (bs_state->needs_livein_data()) {\n+        RegMask* const regs = bs_state->live(node);\n+        if (regs != nullptr) {\n+          regs->OR(new_live);\n+        }\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp","additions":42,"deletions":9,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -234,0 +234,1 @@\n+  virtual bool needs_livein_data() const = 0;\n@@ -245,0 +246,7 @@\n+  RegMask         _preserve;\n+\n+  \/\/ Registers that are live-in\/live-out of the entire memory access\n+  \/\/ implementation (possibly including multiple barriers). Whether live-in or\n+  \/\/ live-out registers are returned depends on\n+  \/\/ BarrierSetC2State::needs_livein_data().\n+  RegMask& live() const;\n@@ -248,1 +256,2 @@\n-  RegMask& live() const;\n+\n+  \/\/ Entry point to the stub.\n@@ -250,0 +259,1 @@\n+  \/\/ Return point from the stub (typically end of barrier).\n@@ -252,1 +262,6 @@\n-  virtual Register result() const = 0;\n+  \/\/ Preserve the value in reg across runtime calls in this barrier.\n+  void preserve(Register reg);\n+  \/\/ Do not preserve the value in reg across runtime calls in this barrier.\n+  void dont_preserve(Register reg);\n+  \/\/ Set of registers whose value needs to be preserved across runtime calls in this barrier.\n+  const RegMask& preserve_set() const;\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.hpp","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-  _is_gc_active(false),\n+  _is_stw_gc_active(false),\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,2 +93,1 @@\n-  friend class IsGCActiveMark; \/\/ Block structured external access to _is_gc_active\n-  friend class DisableIsGCActiveMark; \/\/ Disable current IsGCActiveMark\n+  friend class IsSTWGCActiveMark; \/\/ Block structured external access to _is_stw_gc_active\n@@ -96,1 +95,0 @@\n-  friend class ParallelObjectIterator;\n@@ -115,1 +113,1 @@\n-  bool _is_gc_active;\n+  bool _is_stw_gc_active;\n@@ -378,4 +376,2 @@\n-  \/\/ Returns \"true\" iff there is a stop-world GC in progress.  (I assume\n-  \/\/ that it should answer \"false\" for the concurrent part of a concurrent\n-  \/\/ collector -- dld).\n-  bool is_gc_active() const { return _is_gc_active; }\n+  \/\/ Returns \"true\" iff there is a stop-world GC in progress.\n+  bool is_stw_gc_active() const { return _is_stw_gc_active; }\n@@ -407,1 +403,0 @@\n- protected:\n@@ -412,1 +407,0 @@\n- public:\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-  product(bool, ZGenerational, false,                                       \\\n+  product(bool, ZGenerational, true,                                        \\\n@@ -544,1 +544,1 @@\n-          \"Initial tenured generation size (in bytes)\")                     \\\n+          \"(Deprecated) Initial tenured generation size (in bytes)\")        \\\n","filename":"src\/hotspot\/share\/gc\/shared\/gc_globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-  return desired_size < max_minus ? desired_size : max_minus;\n+  return MIN2(desired_size, max_minus);\n@@ -267,0 +267,3 @@\n+\n+      \/\/ Derive MinNewSize from MinHeapSize\n+      MinNewSize = MIN2(scale_by_NewRatio_aligned(MinHeapSize, GenAlignment), initial_young_size);\n","filename":"src\/hotspot\/share\/gc\/shared\/genArguments.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-\/\/ _is_gc_active state without requiring accessors in CollectedHeap\n+\/\/ _is_stw_gc_active state without requiring accessors in CollectedHeap\n@@ -34,1 +34,1 @@\n-IsGCActiveMark::IsGCActiveMark() {\n+IsSTWGCActiveMark::IsSTWGCActiveMark() {\n@@ -36,2 +36,2 @@\n-  assert(!heap->is_gc_active(), \"Not reentrant\");\n-  heap->_is_gc_active = true;\n+  assert(!heap->is_stw_gc_active(), \"Not reentrant\");\n+  heap->_is_stw_gc_active = true;\n@@ -40,1 +40,1 @@\n-IsGCActiveMark::~IsGCActiveMark() {\n+IsSTWGCActiveMark::~IsSTWGCActiveMark() {\n@@ -42,14 +42,2 @@\n-  assert(heap->is_gc_active(), \"Sanity\");\n-  heap->_is_gc_active = false;\n-}\n-\n-DisableIsGCActiveMark::DisableIsGCActiveMark() {\n-  CollectedHeap* heap = Universe::heap();\n-  assert(heap->is_gc_active(), \"Not reentrant\");\n-  heap->_is_gc_active = false;\n-}\n-\n-DisableIsGCActiveMark::~DisableIsGCActiveMark() {\n-  CollectedHeap* heap = Universe::heap();\n-  assert(!heap->is_gc_active(), \"Sanity\");\n-  heap->_is_gc_active = true;\n+  assert(heap->is_stw_gc_active(), \"Sanity\");\n+  heap->_is_stw_gc_active = false;\n","filename":"src\/hotspot\/share\/gc\/shared\/isGCActiveMark.cpp","additions":7,"deletions":19,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-\/\/ _is_gc_active state without requiring accessors in CollectedHeap\n+\/\/ _is_stw_gc_active state without requiring accessors in CollectedHeap\n@@ -33,1 +33,1 @@\n-class IsGCActiveMark : public StackObj {\n+class IsSTWGCActiveMark : public StackObj {\n@@ -35,8 +35,2 @@\n-  IsGCActiveMark();\n-  ~IsGCActiveMark();\n-};\n-\n-class DisableIsGCActiveMark : public StackObj {\n- public:\n-  DisableIsGCActiveMark();\n-  ~DisableIsGCActiveMark();\n+  IsSTWGCActiveMark();\n+  ~IsSTWGCActiveMark();\n","filename":"src\/hotspot\/share\/gc\/shared\/isGCActiveMark.hpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,1 +177,1 @@\n-JVMFlag::Error InitialTenuringThresholdConstraintFunc(uintx value, bool verbose) {\n+JVMFlag::Error InitialTenuringThresholdConstraintFunc(uint value, bool verbose) {\n@@ -188,1 +188,1 @@\n-JVMFlag::Error MaxTenuringThresholdConstraintFunc(uintx value, bool verbose) {\n+JVMFlag::Error MaxTenuringThresholdConstraintFunc(uint value, bool verbose) {\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,2 +52,2 @@\n- f(uintx,  InitialTenuringThresholdConstraintFunc)             \\\n- f(uintx,  MaxTenuringThresholdConstraintFunc)                 \\\n+ f(uint,   InitialTenuringThresholdConstraintFunc)             \\\n+ f(uint,   MaxTenuringThresholdConstraintFunc)                 \\\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-  if (!_thread->in_retryable_allocation()) {\n+  if (!_thread->is_in_internal_oome_mark()) {\n@@ -129,1 +129,0 @@\n-\n@@ -135,0 +134,1 @@\n+\n@@ -140,1 +140,1 @@\n-    THROW_OOP_(Universe::out_of_memory_error_retry(), true);\n+    THROW_OOP_(Universe::out_of_memory_error_java_heap_without_backtrace(), true);\n@@ -150,1 +150,1 @@\n-  assert(!Universe::heap()->is_gc_active(), \"Allocation during gc not allowed\");\n+  assert(!Universe::heap()->is_stw_gc_active(), \"Allocation during GC pause not allowed\");\n@@ -321,4 +321,1 @@\n-HeapWord* MemAllocator::mem_allocate_slow(Allocation& allocation) const {\n-  \/\/ Allocation of an oop can always invoke a safepoint.\n-  debug_only(allocation._thread->check_for_valid_safepoint_state());\n-\n+HeapWord* MemAllocator::mem_allocate(Allocation& allocation) const {\n@@ -326,2 +323,2 @@\n-    \/\/ Try refilling the TLAB and allocating the object in it.\n-    HeapWord* mem = mem_allocate_inside_tlab_slow(allocation);\n+    \/\/ Try allocating from an existing TLAB.\n+    HeapWord* mem = mem_allocate_inside_tlab_fast();\n@@ -333,2 +330,2 @@\n-  return mem_allocate_outside_tlab(allocation);\n-}\n+  \/\/ Allocation of an oop can always invoke a safepoint.\n+  debug_only(allocation._thread->check_for_valid_safepoint_state());\n@@ -336,1 +333,0 @@\n-HeapWord* MemAllocator::mem_allocate(Allocation& allocation) const {\n@@ -338,2 +334,2 @@\n-    \/\/ Try allocating from an existing TLAB.\n-    HeapWord* mem = mem_allocate_inside_tlab_fast();\n+    \/\/ Try refilling the TLAB and allocating the object in it.\n+    HeapWord* mem = mem_allocate_inside_tlab_slow(allocation);\n@@ -345,1 +341,1 @@\n-  return mem_allocate_slow(allocation);\n+  return mem_allocate_outside_tlab(allocation);\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":12,"deletions":16,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -55,3 +55,0 @@\n-  \/\/ Fast-path TLAB allocation failed. Takes a slow-path and potentially safepoint.\n-  HeapWord* mem_allocate_slow(Allocation& allocation) const;\n-\n@@ -128,0 +125,33 @@\n+\/\/ Manages a scope where a failed heap allocation results in\n+\/\/ suppression of JVMTI \"resource exhausted\" events and\n+\/\/ throwing a shared, backtrace-less OOME instance.\n+\/\/ Used for OOMEs that will not be propagated to user code.\n+class InternalOOMEMark: public StackObj {\n+ private:\n+  bool _outer;\n+  JavaThread* _thread;\n+\n+ public:\n+  explicit InternalOOMEMark(JavaThread* thread) {\n+    if (thread != nullptr) {\n+      _outer = thread->is_in_internal_oome_mark();\n+      thread->set_is_in_internal_oome_mark(true);\n+      _thread = thread;\n+    } else {\n+      _outer = false;\n+      _thread = nullptr;\n+    }\n+  }\n+\n+  ~InternalOOMEMark() {\n+    if (_thread != nullptr) {\n+      \/\/ Check that only InternalOOMEMark sets\n+      \/\/ JavaThread::_is_in_internal_oome_mark\n+      assert(_thread->is_in_internal_oome_mark(), \"must be\");\n+      _thread->set_is_in_internal_oome_mark(_outer);\n+    }\n+  }\n+\n+  JavaThread* thread() const  { return _thread; }\n+};\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.hpp","additions":33,"deletions":3,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorageSet.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,0 +76,2 @@\n+  HeapWord* top() const            { return _top;    }\n+\n@@ -78,0 +80,1 @@\n+  void set_top(HeapWord* value)    { _top = value; }\n@@ -115,4 +118,0 @@\n-  \/\/ Accessors\n-  HeapWord* top() const            { return _top;    }\n-  void set_top(HeapWord* value)    { _top = value; }\n-\n@@ -142,1 +141,1 @@\n-  virtual HeapWord* allocate(size_t word_size);\n+  HeapWord* allocate(size_t word_size);\n@@ -144,1 +143,1 @@\n-  virtual HeapWord* par_allocate(size_t word_size);\n+  HeapWord* par_allocate(size_t word_size);\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-#include \"memory\/allocation.hpp\"\n@@ -39,0 +38,1 @@\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedupProcessor.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-  nonstatic_field(CollectedHeap,               _is_gc_active,                                 bool)                                  \\\n+  nonstatic_field(CollectedHeap,               _is_stw_gc_active,                             bool)                                  \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,2 @@\n-  while (Atomic::cmpxchg(&_state, unlocked, locked) != unlocked) {\n+  while (Atomic::load(&_state) == locked ||\n+         Atomic::cmpxchg(&_state, unlocked, locked) != unlocked) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahLock.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2016, 2024, Red Hat, Inc. All rights reserved.\n@@ -31,1 +31,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTaskqueue.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-  const IsGCActiveMark          _is_gc_active_mark;\n+  const IsSTWGCActiveMark       _is_gc_active_mark;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,2 @@\n+  warning(\"Non-generational ZGC is deprecated.\");\n+\n","filename":"src\/hotspot\/share\/gc\/x\/xArguments.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-    IsGCActiveMark gc_active_mark;\n+    IsSTWGCActiveMark gc_active_mark;\n","filename":"src\/hotspot\/share\/gc\/x\/xDriver.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  log_info(gc, init)(\"Using legacy single-generation mode\");\n+  log_info(gc, init)(\"Using deprecated non-generational mode\");\n","filename":"src\/hotspot\/share\/gc\/x\/xInitialize.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,0 +145,4 @@\n+  bool needs_livein_data() const {\n+    return true;\n+  }\n+\n@@ -203,0 +207,3 @@\n+  \/\/ The runtime call updates the value of ref, so we should not spill and\n+  \/\/ reload its outdated value.\n+  dont_preserve(ref);\n@@ -213,4 +220,0 @@\n-Register ZLoadBarrierStubC2::result() const {\n-  return ref();\n-}\n-\n@@ -275,4 +278,0 @@\n-Register ZStoreBarrierStubC2::result() const {\n-  return noreg;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -54,1 +54,0 @@\n-  virtual Register result() const = 0;\n@@ -73,1 +72,0 @@\n-  virtual Register result() const;\n@@ -97,1 +95,0 @@\n-  virtual Register result() const;\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-ZActivatedArray<T>::~ZActivatedArray<T>() {\n+ZActivatedArray<T>::~ZActivatedArray() {\n","filename":"src\/hotspot\/share\/gc\/z\/zArray.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -441,1 +441,1 @@\n-    IsGCActiveMark gc_active_mark;\n+    IsSTWGCActiveMark gc_active_mark;\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zNMT.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -486,3 +486,0 @@\n-    \/\/ Workaround OopMapCacheAlloc_lock reordering with the StackWatermark_lock\n-    DisableIsGCActiveMark mark;\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zVerify.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -224,1 +224,1 @@\n-     print_java_help(\"printStartupHelp\");\n+     print_java_help(\"getStartupHelp\");\n@@ -249,1 +249,1 @@\n-void JfrDCmd::print_java_help(const char* help_method) const {\n+void JfrDCmd::print_java_help(const char* get_help_method) const {\n@@ -253,2 +253,2 @@\n-  JfrJavaArguments printHelp(&result, javaClass(), help_method, signature, thread);\n-  invoke(printHelp, thread);\n+  JfrJavaArguments java_method(&result, javaClass(), get_help_method, signature, thread);\n+  invoke(java_method, thread);\n@@ -259,1 +259,1 @@\n-  print_java_help(\"printHelp\");\n+  print_java_help(\"getHelp\");\n","filename":"src\/hotspot\/share\/jfr\/dcmd\/jfrDcmds.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/jfrbitset.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -251,6 +251,0 @@\n-    \/\/ Traverse the monitor chunks\n-    MonitorChunk* chunk = jt->monitor_chunks();\n-    for (; chunk != nullptr; chunk = chunk->next()) {\n-      chunk->oops_do(&rcl);\n-    }\n-\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/rootResolver.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrNativeMemoryEvent.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -774,5 +774,2 @@\n-    \/\/ We would like to be strict about the nmethod entry barrier but there are various test\n-    \/\/ configurations which generate assembly without being a full compiler. So for now we enforce\n-    \/\/ that JIT compiled methods must have an nmethod barrier.\n-    bool install_default = JVMCIENV->get_HotSpotNmethod_isDefault(installed_code) != 0;\n-    if (_nmethod_entry_patch_offset == -1 && install_default) {\n+    \/\/ Enforce that compiled methods have an nmethod barrier.\n+    if (_nmethod_entry_patch_offset == -1) {\n@@ -819,2 +816,1 @@\n-      if (_nmethod_entry_patch_offset != -1) {\n-        BarrierSetNMethod* bs_nm = BarrierSet::barrier_set()->barrier_set_nmethod();\n+      BarrierSetNMethod* bs_nm = BarrierSet::barrier_set()->barrier_set_nmethod();\n@@ -822,5 +818,4 @@\n-        \/\/ an empty error buffer for use by the verify_barrier code\n-        err_msg msg(\"\");\n-        if (!bs_nm->verify_barrier(nm, msg)) {\n-          JVMCI_THROW_MSG_(IllegalArgumentException, err_msg(\"nmethod entry barrier is malformed: %s\", msg.buffer()), JVMCI::ok);\n-        }\n+      \/\/ an empty error buffer for use by the verify_barrier code\n+      err_msg msg(\"\");\n+      if (!bs_nm->verify_barrier(nm, msg)) {\n+        JVMCI_THROW_MSG_(IllegalArgumentException, err_msg(\"nmethod entry barrier is malformed: %s\", msg.buffer()), JVMCI::ok);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -178,4 +178,14 @@\n-  Universe_narrow_oop_base = CompressedOops::base();\n-  Universe_narrow_oop_shift = CompressedOops::shift();\n-  Universe_narrow_klass_base = CompressedKlassPointers::base();\n-  Universe_narrow_klass_shift = CompressedKlassPointers::shift();\n+  if (UseCompressedOops) {\n+    Universe_narrow_oop_base = CompressedOops::base();\n+    Universe_narrow_oop_shift = CompressedOops::shift();\n+  } else {\n+    Universe_narrow_oop_base = nullptr;\n+    Universe_narrow_oop_shift = 0;\n+  }\n+  if (UseCompressedClassPointers) {\n+    Universe_narrow_klass_base = CompressedKlassPointers::base();\n+    Universe_narrow_klass_shift = CompressedKlassPointers::shift();\n+  } else {\n+    Universe_narrow_klass_base = nullptr;\n+    Universe_narrow_klass_shift = 0;\n+  }\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVMInit.cpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"gc\/shared\/memAllocator.hpp\"\n@@ -95,1 +96,1 @@\n-\/\/ If there is a pending nonasync exception upon closing the scope and the runtime\n+\/\/ If there is a pending OutOfMemoryError upon closing the scope and the runtime\n@@ -98,1 +99,1 @@\n-\/\/   1. The pending nonasync exception is cleared\n+\/\/   1. The pending OutOfMemoryError is cleared\n@@ -100,2 +101,1 @@\n-\/\/   3. Checks that an OutOfMemoryError is Universe::out_of_memory_error_retry().\n-class RetryableAllocationMark: public StackObj {\n+class RetryableAllocationMark {\n@@ -103,1 +103,1 @@\n-  JavaThread* _thread;\n+   InternalOOMEMark _iom;\n@@ -105,9 +105,1 @@\n-  RetryableAllocationMark(JavaThread* thread, bool activate) {\n-    if (activate) {\n-      assert(!thread->in_retryable_allocation(), \"retryable allocation scope is non-reentrant\");\n-      _thread = thread;\n-      _thread->set_in_retryable_allocation(true);\n-    } else {\n-      _thread = nullptr;\n-    }\n-  }\n+  RetryableAllocationMark(JavaThread* thread, bool activate) : _iom(activate ? thread : nullptr) {}\n@@ -115,3 +107,2 @@\n-    if (_thread != nullptr) {\n-      _thread->set_in_retryable_allocation(false);\n-      JavaThread* THREAD = _thread; \/\/ For exception macros.\n+    JavaThread* THREAD = _iom.thread(); \/\/ For exception macros.\n+    if (THREAD != nullptr) {\n@@ -120,6 +111,3 @@\n-        \/\/ Do not clear probable async exceptions.\n-        CLEAR_PENDING_NONASYNC_EXCEPTION;\n-        oop retry_oome = Universe::out_of_memory_error_retry();\n-        if (ex->is_a(retry_oome->klass()) && retry_oome != ex) {\n-          ResourceMark rm;\n-          fatal(\"Unexpected exception in scope of retryable allocation: \" INTPTR_FORMAT \" of type %s\", p2i(ex), ex->klass()->external_name());\n+        THREAD->set_vm_result(nullptr);\n+        if (ex->is_a(vmClasses::OutOfMemoryError_klass())) {\n+          CLEAR_PENDING_EXCEPTION;\n@@ -127,1 +115,0 @@\n-        _thread->set_vm_result(nullptr);\n@@ -790,0 +777,1 @@\n+  guarantee(nmethod_entry_patch_offset != -1, \"missing entry barrier\");\n@@ -881,1 +869,1 @@\n-  assert(!Universe::heap()->is_gc_active(), \"can't extend the root set during GC\");\n+  assert(!Universe::heap()->is_stw_gc_active(), \"can't extend the root set during GC pause\");\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":13,"deletions":25,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -57,4 +57,2 @@\n-  \/\/ This is the offset of the patchable part of the nmethod entry barrier sequence.  The meaning is\n-  \/\/ somewhat platform dependent as the way patching is done varies by architecture.  Older JVMCI\n-  \/\/ based compilers didn't emit the entry barrier so having a positive value for this offset\n-  \/\/ confirms that the installed code supports the entry barrier.\n+  \/\/ This is the offset of the patchable part of the nmethod entry barrier sequence. The meaning is\n+  \/\/ somewhat platform dependent as the way patching is done varies by architecture.\n@@ -132,4 +130,0 @@\n-  bool has_entry_barrier() {\n-    return _nmethod_entry_patch_offset != -1;\n-  }\n-\n@@ -137,1 +131,0 @@\n-    guarantee(_nmethod_entry_patch_offset != -1, \"missing entry barrier\");\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.hpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+#include \"nmt\/memflags.hpp\"\n@@ -102,57 +103,0 @@\n-#define MEMORY_TYPES_DO(f)                                                           \\\n-  \/* Memory type by sub systems. It occupies lower byte. *\/                          \\\n-  f(mtJavaHeap,       \"Java Heap\")   \/* Java heap                                 *\/ \\\n-  f(mtClass,          \"Class\")       \/* Java classes                              *\/ \\\n-  f(mtThread,         \"Thread\")      \/* thread objects                            *\/ \\\n-  f(mtThreadStack,    \"Thread Stack\")                                                \\\n-  f(mtCode,           \"Code\")        \/* generated code                            *\/ \\\n-  f(mtGC,             \"GC\")                                                          \\\n-  f(mtGCCardSet,      \"GCCardSet\")   \/* G1 card set remembered set                *\/ \\\n-  f(mtCompiler,       \"Compiler\")                                                    \\\n-  f(mtJVMCI,          \"JVMCI\")                                                       \\\n-  f(mtInternal,       \"Internal\")    \/* memory used by VM, but does not belong to *\/ \\\n-                                     \/* any of above categories, and not used by  *\/ \\\n-                                     \/* NMT                                       *\/ \\\n-  f(mtOther,          \"Other\")       \/* memory not used by VM                     *\/ \\\n-  f(mtSymbol,         \"Symbol\")                                                      \\\n-  f(mtNMT,            \"Native Memory Tracking\")  \/* memory used by NMT            *\/ \\\n-  f(mtClassShared,    \"Shared class space\")      \/* class data sharing            *\/ \\\n-  f(mtChunk,          \"Arena Chunk\") \/* chunk that holds content of arenas        *\/ \\\n-  f(mtTest,           \"Test\")        \/* Test type for verifying NMT               *\/ \\\n-  f(mtTracing,        \"Tracing\")                                                     \\\n-  f(mtLogging,        \"Logging\")                                                     \\\n-  f(mtStatistics,     \"Statistics\")                                                  \\\n-  f(mtArguments,      \"Arguments\")                                                   \\\n-  f(mtModule,         \"Module\")                                                      \\\n-  f(mtSafepoint,      \"Safepoint\")                                                   \\\n-  f(mtSynchronizer,   \"Synchronization\")                                             \\\n-  f(mtServiceability, \"Serviceability\")                                              \\\n-  f(mtMetaspace,      \"Metaspace\")                                                   \\\n-  f(mtStringDedup,    \"String Deduplication\")                                        \\\n-  f(mtObjectMonitor,  \"Object Monitors\")                                             \\\n-  f(mtNone,           \"Unknown\")                                                     \\\n-  \/\/end\n-\n-#define MEMORY_TYPE_DECLARE_ENUM(type, human_readable) \\\n-  type,\n-\n-\/*\n- * Memory types\n- *\/\n-enum class MEMFLAGS : uint8_t  {\n-  MEMORY_TYPES_DO(MEMORY_TYPE_DECLARE_ENUM)\n-  mt_number_of_types   \/\/ number of memory types (mtDontTrack\n-                       \/\/ is not included as validate type)\n-};\n-\/\/ Extra insurance that MEMFLAGS truly has the same size as uint8_t.\n-STATIC_ASSERT(sizeof(MEMFLAGS) == sizeof(uint8_t));\n-\n-#define MEMORY_TYPE_SHORTNAME(type, human_readable) \\\n-  constexpr MEMFLAGS type = MEMFLAGS::type;\n-\n-\/\/ Generate short aliases for the enum values. E.g. mtGC instead of MEMFLAGS::mtGC.\n-MEMORY_TYPES_DO(MEMORY_TYPE_SHORTNAME)\n-\n-\/\/ Make an int version of the sentinel end value.\n-constexpr int mt_number_of_types = static_cast<int>(MEMFLAGS::mt_number_of_types);\n-\n","filename":"src\/hotspot\/share\/memory\/allocation.hpp","additions":2,"deletions":58,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,2 +25,0 @@\n-#include \"memory\/allocation.hpp\"\n-#include \"memory\/allocation.inline.hpp\"\n@@ -28,0 +26,1 @@\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/memory\/guardedMemory.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/memory\/padded.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -140,1 +140,0 @@\n-                           _oom_retry,\n@@ -661,0 +660,4 @@\n+oop Universe::out_of_memory_error_java_heap_without_backtrace() {\n+  return out_of_memory_errors()->obj_at(_oom_java_heap);\n+}\n+\n@@ -685,3 +688,0 @@\n-\/\/ Throw default _out_of_memory_error_retry object as it will never propagate out of the VM\n-oop Universe::out_of_memory_error_retry()              { return out_of_memory_errors()->obj_at(_oom_retry);  }\n-\n@@ -791,3 +791,0 @@\n-  msg = java_lang_String::create_from_str(\"Java heap space: failed retryable allocation\", CHECK);\n-  java_lang_Throwable::set_message(oom_array->obj_at(_oom_retry), msg());\n-\n@@ -1360,2 +1357,2 @@\n-bool Universe::is_gc_active() {\n-  return heap()->is_gc_active();\n+bool Universe::is_stw_gc_active() {\n+  return heap()->is_stw_gc_active();\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -279,0 +279,1 @@\n+  static oop out_of_memory_error_java_heap_without_backtrace();\n@@ -286,2 +287,0 @@\n-  \/\/ Throw default _out_of_memory_error_retry object as it will never propagate out of the VM\n-  static oop out_of_memory_error_retry();\n@@ -302,1 +301,1 @@\n-  DEBUG_ONLY(static bool is_gc_active();)\n+  DEBUG_ONLY(static bool is_stw_gc_active();)\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/nmt\/allocationSite.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"nmt\/memflags.hpp\"\n@@ -30,0 +31,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -34,0 +36,4 @@\n+\/\/ The malloc header, as well as the coming VMATree implementation, rely on MEMFLAGS\n+\/\/ fitting into eight bits.\n+STATIC_ASSERT(sizeof(MEMFLAGS) == sizeof(uint8_t));\n+\n","filename":"src\/hotspot\/share\/nmt\/mallocHeader.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/nmt\/mallocHeader.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-#include \"memory\/allocation.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/nmt\/mallocTracker.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +29,2 @@\n-#include \"memory\/allocation.hpp\" \/\/ for mt_number_of_types\n+#include \"nmt\/memflags.hpp\"\n+#include \"utilities\/debug.hpp\"\n","filename":"src\/hotspot\/share\/nmt\/memFlagBitmap.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#include \"memory\/allocation.hpp\"\n@@ -34,0 +33,1 @@\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/nmt\/memMapPrinter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023, Red Hat, Inc. and\/or its affiliates.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. and\/or its affiliates.\n@@ -29,1 +29,0 @@\n-#include \"memory\/allocation.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/nmt\/memMapPrinter.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include \"memory\/allocation.hpp\"\n@@ -30,0 +29,1 @@\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/nmt\/memReporter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,6 +149,11 @@\n-  out->print_cr(\"State: %s\", NMTUtil::tracking_level_to_string(_tracking_level));\n-  out->print_cr(\"Malloc allocation site table size: %d\", MallocSiteTable::hash_buckets());\n-  out->print_cr(\"             Tracking stack depth: %d\", NMT_TrackingStackDepth);\n-  out->cr();\n-  MallocSiteTable::print_tuning_statistics(out);\n-  out->cr();\n+  out->print_cr(\"State: %s\",\n+                NMTUtil::tracking_level_to_string(_tracking_level));\n+  if (_tracking_level == NMT_detail) {\n+    out->print_cr(\"Malloc allocation site table size: %d\",\n+                  MallocSiteTable::hash_buckets());\n+    out->print_cr(\"             Tracking stack depth: %d\",\n+                  NMT_TrackingStackDepth);\n+    out->cr();\n+    MallocSiteTable::print_tuning_statistics(out);\n+    out->cr();\n+  }\n","filename":"src\/hotspot\/share\/nmt\/memTracker.cpp","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_NMT_MEMFLAGS_HPP\n+#define SHARE_NMT_MEMFLAGS_HPP\n+\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+#define MEMORY_TYPES_DO(f)                                                           \\\n+  \/* Memory type by sub systems. It occupies lower byte. *\/                          \\\n+  f(mtJavaHeap,       \"Java Heap\")   \/* Java heap                                 *\/ \\\n+  f(mtClass,          \"Class\")       \/* Java classes                              *\/ \\\n+  f(mtThread,         \"Thread\")      \/* thread objects                            *\/ \\\n+  f(mtThreadStack,    \"Thread Stack\")                                                \\\n+  f(mtCode,           \"Code\")        \/* generated code                            *\/ \\\n+  f(mtGC,             \"GC\")                                                          \\\n+  f(mtGCCardSet,      \"GCCardSet\")   \/* G1 card set remembered set                *\/ \\\n+  f(mtCompiler,       \"Compiler\")                                                    \\\n+  f(mtJVMCI,          \"JVMCI\")                                                       \\\n+  f(mtInternal,       \"Internal\")    \/* memory used by VM, but does not belong to *\/ \\\n+                                     \/* any of above categories, and not used by  *\/ \\\n+                                     \/* NMT                                       *\/ \\\n+  f(mtOther,          \"Other\")       \/* memory not used by VM                     *\/ \\\n+  f(mtSymbol,         \"Symbol\")                                                      \\\n+  f(mtNMT,            \"Native Memory Tracking\")  \/* memory used by NMT            *\/ \\\n+  f(mtClassShared,    \"Shared class space\")      \/* class data sharing            *\/ \\\n+  f(mtChunk,          \"Arena Chunk\") \/* chunk that holds content of arenas        *\/ \\\n+  f(mtTest,           \"Test\")        \/* Test type for verifying NMT               *\/ \\\n+  f(mtTracing,        \"Tracing\")                                                     \\\n+  f(mtLogging,        \"Logging\")                                                     \\\n+  f(mtStatistics,     \"Statistics\")                                                  \\\n+  f(mtArguments,      \"Arguments\")                                                   \\\n+  f(mtModule,         \"Module\")                                                      \\\n+  f(mtSafepoint,      \"Safepoint\")                                                   \\\n+  f(mtSynchronizer,   \"Synchronization\")                                             \\\n+  f(mtServiceability, \"Serviceability\")                                              \\\n+  f(mtMetaspace,      \"Metaspace\")                                                   \\\n+  f(mtStringDedup,    \"String Deduplication\")                                        \\\n+  f(mtObjectMonitor,  \"Object Monitors\")                                             \\\n+  f(mtNone,           \"Unknown\")                                                     \\\n+  \/\/end\n+\n+#define MEMORY_TYPE_DECLARE_ENUM(type, human_readable) \\\n+  type,\n+\n+enum class MEMFLAGS : uint8_t  {\n+  MEMORY_TYPES_DO(MEMORY_TYPE_DECLARE_ENUM)\n+  mt_number_of_types   \/\/ number of memory types (mtDontTrack\n+                       \/\/ is not included as validate type)\n+};\n+\n+#define MEMORY_TYPE_SHORTNAME(type, human_readable) \\\n+  constexpr MEMFLAGS type = MEMFLAGS::type;\n+\n+\/\/ Generate short aliases for the enum values. E.g. mtGC instead of MEMFLAGS::mtGC.\n+MEMORY_TYPES_DO(MEMORY_TYPE_SHORTNAME)\n+\n+\/\/ Make an int version of the sentinel end value.\n+constexpr int mt_number_of_types = static_cast<int>(MEMFLAGS::mt_number_of_types);\n+\n+#endif \/\/ SHARE_NMT_MEMFLAGS_HPP\n","filename":"src\/hotspot\/share\/nmt\/memflags.hpp","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,2 @@\n-#include \"memory\/allocation.hpp\" \/\/ for MEMFLAGS only\n+#include \"memory\/allStatic.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/nmt\/nmtCommon.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -140,1 +140,1 @@\n-    if (check_detail_tracking_level(output())) {\n+    if (MemTracker::enabled()) {\n@@ -142,0 +142,2 @@\n+    } else {\n+      output()->print_cr(\"Native memory tracking is not enabled\");\n","filename":"src\/hotspot\/share\/nmt\/nmtDCmd.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1861,2 +1861,2 @@\n-  \/\/ Lazily create the _oop_map_cache at first request\n-  \/\/ Lock-free access requires load_acquire.\n+  \/\/ Lazily create the _oop_map_cache at first request.\n+  \/\/ Load_acquire is needed to safely get instance published with CAS by another thread.\n@@ -1865,6 +1865,7 @@\n-    MutexLocker x(OopMapCacheAlloc_lock,  Mutex::_no_safepoint_check_flag);\n-    \/\/ Check if _oop_map_cache was allocated while we were waiting for this lock\n-    if ((oop_map_cache = _oop_map_cache) == nullptr) {\n-      oop_map_cache = new OopMapCache();\n-      \/\/ Ensure _oop_map_cache is stable, since it is examined without a lock\n-      Atomic::release_store(&_oop_map_cache, oop_map_cache);\n+    \/\/ Try to install new instance atomically.\n+    oop_map_cache = new OopMapCache();\n+    OopMapCache* other = Atomic::cmpxchg(&_oop_map_cache, (OopMapCache*)nullptr, oop_map_cache);\n+    if (other != nullptr) {\n+      \/\/ Someone else managed to install before us, ditch local copy and use the existing one.\n+      delete oop_map_cache;\n+      oop_map_cache = other;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -253,2 +253,2 @@\n-  st->print_cr(\"       size: %d argsize: %d max_size: %d sp: %d pc: \" PTR_FORMAT,\n-               c->stack_size(), c->argsize(), c->max_thawing_size(), c->sp(), p2i(c->pc()));\n+  st->print_cr(\"       size: %d bottom: %d max_size: %d sp: %d pc: \" PTR_FORMAT,\n+               c->stack_size(), c->bottom(), c->max_thawing_size(), c->sp(), p2i(c->pc()));\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -877,1 +877,1 @@\n-    if (!THREAD->in_retryable_allocation()) {\n+    if (!THREAD->is_in_internal_oome_mark()) {\n@@ -882,1 +882,1 @@\n-      THROW_OOP(Universe::out_of_memory_error_retry());\n+      THROW_OOP(Universe::out_of_memory_error_java_heap_without_backtrace());\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -325,1 +325,1 @@\n-  if (Universe::heap()->is_gc_active()) {\n+  if (Universe::heap()->is_stw_gc_active()) {\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-  return Universe::heap()->is_gc_active() && is_objArray() && is_forwarded() && (UseParallelGC || UseG1GC);\n+  return Universe::heap()->is_stw_gc_active() && is_objArray() && is_forwarded() && (UseParallelGC || UseG1GC);\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -224,0 +224,2 @@\n+  jint int_field_relaxed(int offset) const;\n+  void int_field_put_relaxed(int offset, jint contents);\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -256,0 +256,2 @@\n+inline jint oopDesc::int_field_relaxed(int offset) const            { return Atomic::load(field_addr<jint>(offset)); }\n+inline void oopDesc::int_field_put_relaxed(int offset, jint value)  { Atomic::store(field_addr<jint>(offset), value); }\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -536,1 +536,0 @@\n-  assert(argsize() >= 0, \"\");\n@@ -540,1 +539,0 @@\n-    assert(argsize() == 0, \"\");\n@@ -542,0 +540,2 @@\n+  } else {\n+    assert(argsize() >= 0, \"\");\n@@ -550,1 +550,1 @@\n-  int size = stack_size() - argsize() - sp();\n+  int size = bottom() - sp();\n@@ -573,6 +573,9 @@\n-    assert(closure._size <= size + argsize() + frame::metadata_words,\n-           \"size: %d argsize: %d closure.size: %d end sp: \" PTR_FORMAT \" start sp: %d chunk size: %d\",\n-           size, argsize(), closure._size, closure._sp - start_address(), sp(), stack_size());\n-    assert(argsize() == closure._argsize - (closure._num_frames > 0 ? frame::metadata_words_at_top : 0),\n-           \"argsize(): %d closure.argsize: %d closure.callee_interpreted: %d\",\n-           argsize(), closure._argsize, closure._callee_interpreted);\n+    assert(closure._size <= size + (stack_size() - bottom()),\n+           \"size: %d bottom: %d closure.size: %d end sp: \" PTR_FORMAT \" start sp: %d chunk size: %d\",\n+           size, bottom(), closure._size, closure._sp - start_address(), sp(), stack_size());\n+    if (closure._num_frames > 0) {\n+      assert(closure._argsize >= frame::metadata_words_at_top, \"should be set up\");\n+      assert(argsize() == closure._argsize - frame::metadata_words_at_top,\n+             \"argsize(): %d closure.argsize: %d closure.callee_interpreted: %d\",\n+             argsize(), closure._argsize, closure._callee_interpreted);\n+    }\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.cpp","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -104,0 +104,1 @@\n+  inline void set_bottom(int value);\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -63,0 +63,3 @@\n+inline int stackChunkOopDesc::bottom() const            { return jdk_internal_vm_StackChunk::bottom(as_oop()); }\n+inline void stackChunkOopDesc::set_bottom(int value)    { jdk_internal_vm_StackChunk::set_bottom(this, value); }\n+\n@@ -69,3 +72,0 @@\n-inline int stackChunkOopDesc::argsize() const           { return jdk_internal_vm_StackChunk::argsize(as_oop()); }\n-inline void stackChunkOopDesc::set_argsize(int value)   { jdk_internal_vm_StackChunk::set_argsize(as_oop(), value); }\n-\n@@ -111,1 +111,4 @@\n-inline int stackChunkOopDesc::bottom() const { return stack_size() - argsize() - frame::metadata_words_at_top; }\n+inline int stackChunkOopDesc::argsize() const {\n+  assert(!is_empty(), \"should not ask for argsize in empty chunk\");\n+  return stack_size() - bottom() - frame::metadata_words_at_top;\n+}\n@@ -135,4 +138,2 @@\n-  assert(sp() <= stack_size(), \"\");\n-  assert((sp() == stack_size()) == (sp() >= stack_size() - argsize() - frame::metadata_words_at_top),\n-    \"sp: %d size: %d argsize: %d\", sp(), stack_size(), argsize());\n-  return sp() == stack_size();\n+  assert(sp() <= bottom(), \"\");\n+  return sp() == bottom();\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.inline.hpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1168,15 +1168,0 @@\n-static void cast_argument(int nargs, int arg_nb, ciType* t, GraphKit& kit) {\n-  PhaseGVN& gvn = kit.gvn();\n-  Node* arg = kit.argument(arg_nb);\n-  const Type* arg_type = arg->bottom_type();\n-  const Type* sig_type = TypeOopPtr::make_from_klass(t->as_klass());\n-  if (arg_type->isa_oopptr() && !arg_type->higher_equal(sig_type)) {\n-    const Type* narrowed_arg_type = arg_type->filter_speculative(sig_type); \/\/ keep speculative part\n-    arg = gvn.transform(new CheckCastPPNode(kit.control(), arg, narrowed_arg_type));\n-    kit.set_argument(arg_nb, arg);\n-  }\n-  if (sig_type->is_inlinetypeptr()) {\n-    arg = InlineTypeNode::make_from_oop(&kit, arg, sig_type->inline_klass(), !kit.gvn().type(arg)->maybe_null());\n-    kit.set_argument(arg_nb, arg);\n-  }\n-}\n@@ -1257,1 +1242,9 @@\n-          cast_argument(nargs, 0, signature->accessing_klass(), kit);\n+          Node* recv = kit.argument(0);\n+          Node* casted_recv = kit.maybe_narrow_object_type(recv, signature->accessing_klass());\n+          if (casted_recv->is_top()) {\n+            print_inlining_failure(C, callee, jvms->depth() - 1, jvms->bci(),\n+                                   \"argument types mismatch\");\n+            return nullptr; \/\/ FIXME: effectively dead; issue a halt node instead\n+          } else if (casted_recv != recv) {\n+            kit.set_argument(0, casted_recv);\n+          }\n@@ -1263,1 +1256,9 @@\n-            cast_argument(nargs, receiver_skip + j, t, kit);\n+            Node* arg = kit.argument(receiver_skip + j);\n+            Node* casted_arg = kit.maybe_narrow_object_type(arg, t->as_klass());\n+            if (casted_arg->is_top()) {\n+              print_inlining_failure(C, callee, jvms->depth() - 1, jvms->bci(),\n+                                     \"argument types mismatch\");\n+              return nullptr; \/\/ FIXME: effectively dead; issue a halt node instead\n+            } else if (casted_arg != arg) {\n+              kit.set_argument(receiver_skip + j, casted_arg);\n+            }\n","filename":"src\/hotspot\/share\/opto\/callGenerator.cpp","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -507,0 +507,5 @@\n+  \/\/ Return the uncommon trap If projection of this Parse Predicate.\n+  ParsePredicateUncommonProj* uncommon_proj() const {\n+    return proj_out(0)->as_IfFalse();\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -860,2 +860,0 @@\n-  \/\/ If any phase is randomized for stress testing, seed random number\n-  \/\/ generation and log the seed for repeatability.\n@@ -864,9 +862,1 @@\n-    if (FLAG_IS_DEFAULT(StressSeed) || (FLAG_IS_ERGO(StressSeed) && directive->RepeatCompilationOption)) {\n-      _stress_seed = static_cast<uint>(Ticks::now().nanoseconds());\n-      FLAG_SET_ERGO(StressSeed, _stress_seed);\n-    } else {\n-      _stress_seed = StressSeed;\n-    }\n-    if (_log != nullptr) {\n-      _log->elem(\"stress_test seed='%u'\", _stress_seed);\n-    }\n+    initialize_stress_seed(directive);\n@@ -1010,0 +1000,5 @@\n+\n+  if (StressLCM || StressGCM) {\n+    initialize_stress_seed(directive);\n+  }\n+\n@@ -5620,0 +5615,12 @@\n+void Compile::initialize_stress_seed(const DirectiveSet* directive) {\n+  if (FLAG_IS_DEFAULT(StressSeed) || (FLAG_IS_ERGO(StressSeed) && directive->RepeatCompilationOption)) {\n+    _stress_seed = static_cast<uint>(Ticks::now().nanoseconds());\n+    FLAG_SET_ERGO(StressSeed, _stress_seed);\n+  } else {\n+    _stress_seed = StressSeed;\n+  }\n+  if (_log != nullptr) {\n+    _log->elem(\"stress_test seed='%u'\", _stress_seed);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":18,"deletions":11,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1309,0 +1309,3 @@\n+  \/\/ seed random number generation and log the seed for repeatability.\n+  void initialize_stress_seed(const DirectiveSet* directive);\n+\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -562,2 +562,2 @@\n-        } else if (nesting > 0 && load_type->isa_narrowklass()) {\n-          NOT_PRODUCT(if (TraceReduceAllocationMerges) tty->print_cr(\"Can NOT reduce Phi %d on invocation %d. Nested NarrowKlass Load: %s\", n->_idx, _invocation, use_use->Name());)\n+        } else if (load_type->isa_narrowklass() || load_type->isa_klassptr()) {\n+          NOT_PRODUCT(if (TraceReduceAllocationMerges) tty->print_cr(\"Can NOT reduce Phi %d on invocation %d. [Narrow] Klass Load: %s\", n->_idx, _invocation, use_use->Name());)\n@@ -2226,1 +2226,2 @@\n-                  strcmp(call->as_CallLeaf()->_name, \"get_class_id_intrinsic\") == 0)\n+                  strcmp(call->as_CallLeaf()->_name, \"get_class_id_intrinsic\") == 0 ||\n+                  strcmp(call->as_CallLeaf()->_name, \"unsafe_setmemory\") == 0)\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -4757,0 +4757,14 @@\n+\n+Node* GraphKit::maybe_narrow_object_type(Node* obj, ciKlass* type) {\n+  const Type* obj_type = obj->bottom_type();\n+  const TypeOopPtr* sig_type = TypeOopPtr::make_from_klass(type);\n+  if (obj_type->isa_oopptr() && sig_type->is_loaded() && !obj_type->higher_equal(sig_type)) {\n+    const Type* narrow_obj_type = obj_type->filter_speculative(sig_type); \/\/ keep speculative part\n+    Node* casted_obj = gvn().transform(new CheckCastPPNode(control(), obj, narrow_obj_type));\n+    obj = casted_obj;\n+  }\n+  if (sig_type->is_inlinetypeptr()) {\n+    obj = InlineTypeNode::make_from_oop(this, obj, sig_type->inline_klass(), !gvn().type(obj)->maybe_null());\n+  }\n+  return obj;\n+}\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -455,0 +455,2 @@\n+  Node* maybe_narrow_object_type(Node* obj, ciKlass* type);\n+\n","filename":"src\/hotspot\/share\/opto\/graphKit.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -612,17 +612,1 @@\n-    if (caller != nullptr) {\n-      stringStream bciStream;\n-      ciMethod* last = nullptr;\n-      int last_bci;\n-      while(caller) {\n-        if (caller->has_method()) {\n-          last = caller->method();\n-          last_bci = caller->bci();\n-        }\n-        bciStream.print(\"%d \", caller->bci());\n-        caller = caller->caller();\n-      }\n-      print_prop(\"bci\", bciStream.freeze());\n-      if (last != nullptr && last->has_linenumber_table() && last_bci >= 0) {\n-        print_prop(\"line\", last->line_number_from_bci(last_bci));\n-      }\n-    }\n+    print_bci_and_line_number(caller);\n@@ -657,0 +641,29 @@\n+void IdealGraphPrinter::print_bci_and_line_number(JVMState* caller) {\n+  if (caller != nullptr) {\n+    ResourceMark rm;\n+    stringStream bciStream;\n+    stringStream lineStream;\n+\n+    \/\/ Print line and bci numbers for the callee and all entries in the call stack until we reach the root method.\n+    while (caller) {\n+      const int bci = caller->bci();\n+      bool appended_line = false;\n+      if (caller->has_method()) {\n+        ciMethod* method = caller->method();\n+        if (method->has_linenumber_table() && bci >= 0) {\n+          lineStream.print(\"%d \", method->line_number_from_bci(bci));\n+          appended_line = true;\n+        }\n+      }\n+      if (!appended_line) {\n+        lineStream.print(\"%s \", \"_\");\n+      }\n+      bciStream.print(\"%d \", bci);\n+      caller = caller->caller();\n+    }\n+\n+    print_prop(\"bci\", bciStream.freeze());\n+    print_prop(\"line\", lineStream.freeze());\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/idealGraphPrinter.cpp","additions":30,"deletions":17,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+class JVMState;\n@@ -99,3 +100,4 @@\n-  void print_method(ciMethod *method, int bci, InlineTree *tree);\n-  void print_inline_tree(InlineTree *tree);\n-  void visit_node(Node *n, bool edges, VectorSet* temp_set);\n+  void print_method(ciMethod* method, int bci, InlineTree* tree);\n+  void print_inline_tree(InlineTree* tree);\n+  void visit_node(Node* n, bool edges, VectorSet* temp_set);\n+  void print_bci_and_line_number(JVMState* caller);\n","filename":"src\/hotspot\/share\/opto\/idealGraphPrinter.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -102,2 +102,2 @@\n-IfProjNode* PhaseIdealLoop::create_new_if_for_predicate(ParsePredicateSuccessProj* parse_predicate_proj, Node* new_entry,\n-                                                        Deoptimization::DeoptReason reason,\n+IfTrueNode* PhaseIdealLoop::create_new_if_for_predicate(ParsePredicateSuccessProj* parse_predicate_success_proj,\n+                                                        Node* new_entry, const Deoptimization::DeoptReason reason,\n@@ -105,6 +105,4 @@\n-  assert(parse_predicate_proj->is_uncommon_trap_if_pattern(reason), \"must be a uct if pattern!\");\n-  ParsePredicateNode* parse_predicate = parse_predicate_proj->in(0)->as_ParsePredicate();\n-\n-  ProjNode* uncommon_proj = parse_predicate->proj_out(false);\n-  Node* uct_region = uncommon_proj->unique_ctrl_out();\n-  assert(uct_region->is_Region() || uct_region->is_Call(), \"must be a region or call uct\");\n+  assert(parse_predicate_success_proj->is_uncommon_trap_if_pattern(reason), \"must be a uct if pattern!\");\n+  ParsePredicateNode* parse_predicate = parse_predicate_success_proj->in(0)->as_ParsePredicate();\n+  ParsePredicateUncommonProj* uncommon_proj = parse_predicate->uncommon_proj();\n+  Node* uncommon_trap = parse_predicate->uncommon_trap();\n@@ -113,3 +111,3 @@\n-  if (!uct_region->is_Region()) { \/\/ create a region to guard the call\n-    assert(uct_region->is_Call(), \"must be call uct\");\n-    CallNode* call = uct_region->as_Call();\n+  if (!uncommon_trap->is_Region()) { \/\/ create a region to guard the call\n+    assert(uncommon_trap->is_Call(), \"must be call uct\");\n+    CallNode* call = uncommon_trap->as_Call();\n@@ -117,1 +115,1 @@\n-    uct_region = new RegionNode(1);\n+    uncommon_trap = new RegionNode(1);\n@@ -119,1 +117,1 @@\n-    uncommon_proj = uncommon_proj->clone()->as_Proj();\n+    uncommon_proj = uncommon_proj->clone()->as_IfFalse();\n@@ -121,3 +119,3 @@\n-    uct_region->add_req(uncommon_proj);\n-    register_control(uct_region, loop, uncommon_proj);\n-    _igvn.replace_input_of(call, 0, uct_region);\n+    uncommon_trap->add_req(uncommon_proj);\n+    register_control(uncommon_trap, loop, uncommon_proj);\n+    _igvn.replace_input_of(call, 0, uncommon_trap);\n@@ -126,1 +124,1 @@\n-      set_idom(call, uct_region, dom_depth(uct_region));\n+      set_idom(call, uncommon_trap, dom_depth(uncommon_trap));\n@@ -130,1 +128,1 @@\n-    lazy_replace(uncommon_proj_orig, uct_region);\n+    lazy_replace(uncommon_proj_orig, uncommon_trap);\n@@ -133,3 +131,3 @@\n-    for (; proj_index < uct_region->req(); proj_index++)\n-      if (uct_region->in(proj_index) == uncommon_proj) break;\n-    assert(proj_index < uct_region->req(), \"sanity\");\n+    for (; proj_index < uncommon_trap->req(); proj_index++)\n+      if (uncommon_trap->in(proj_index) == uncommon_proj) break;\n+    assert(proj_index < uncommon_trap->req(), \"sanity\");\n@@ -160,2 +158,3 @@\n-  IfProjNode* if_cont = new IfTrueNode(new_iff);\n-  IfProjNode* if_uct  = new IfFalseNode(new_iff);\n+\n+  IfTrueNode* if_cont = new IfTrueNode(new_iff);\n+  IfFalseNode* if_uct = new IfFalseNode(new_iff);\n@@ -164,1 +163,1 @@\n-  register_control(if_uct, get_loop(uct_region), new_iff);\n+  register_control(if_uct, get_loop(uncommon_trap), new_iff);\n@@ -166,1 +165,1 @@\n-  _igvn.add_input_to(uct_region, if_uct);\n+  _igvn.add_input_to(uncommon_trap, if_uct);\n@@ -170,1 +169,1 @@\n-  assert(uct_region->in(uct_region->req() - 1) == if_uct, \"new edge should be last\");\n+  assert(uncommon_trap->in(uncommon_trap->req() - 1) == if_uct, \"new edge should be last\");\n@@ -172,2 +171,2 @@\n-  for (DUIterator_Fast imax, i = uct_region->fast_outs(imax); i < imax; i++) {\n-    Node* use = uct_region->fast_out(i);\n+  for (DUIterator_Fast imax, i = uncommon_trap->fast_outs(imax); i < imax; i++) {\n+    Node* use = uncommon_trap->fast_out(i);\n@@ -175,1 +174,1 @@\n-      assert(use->in(0) == uct_region, \"\");\n+      assert(use->in(0) == uncommon_trap, \"\");\n@@ -196,1 +195,1 @@\n-  assert(!has_phi || uct_region->req() > 3, \"no phis when region is created\");\n+  assert(!has_phi || uncommon_trap->req() > 3, \"no phis when region is created\");\n@@ -208,1 +207,1 @@\n-    Node* ridom = idom(uct_region);\n+    Node* ridom = idom(uncommon_trap);\n@@ -210,1 +209,1 @@\n-    set_idom(uct_region, nrdom, dom_depth(uct_region));\n+    set_idom(uncommon_trap, nrdom, dom_depth(uncommon_trap));\n@@ -213,1 +212,1 @@\n-  return if_cont->as_IfProj();\n+  return if_cont;\n@@ -760,2 +759,2 @@\n-BoolNode* PhaseIdealLoop::rc_predicate(IdealLoopTree* loop, Node* ctrl, int scale, Node* offset, Node* init,\n-                                       Node* limit, jint stride, Node* range, bool upper, bool& overflow) {\n+BoolNode* PhaseIdealLoop::rc_predicate(Node* ctrl, const int scale, Node* offset, Node* init, Node* limit,\n+                                       const jint stride, Node* range, const bool upper, bool& overflow) {\n@@ -1168,1 +1167,1 @@\n-    BoolNode* new_predicate_bol = invar.clone(bol, ctrl)->as_Bool();\n+    BoolNode* hoisted_check_predicate_bool = invar.clone(bol, ctrl)->as_Bool();\n@@ -1173,2 +1172,3 @@\n-      new_predicate_bol = new BoolNode(new_predicate_bol->in(1), new_predicate_bol->_test.negate());\n-      register_new_node(new_predicate_bol, ctrl);\n+      hoisted_check_predicate_bool = new BoolNode(hoisted_check_predicate_bool->in(1),\n+                                                  hoisted_check_predicate_bool->_test.negate());\n+      register_new_node(hoisted_check_predicate_bool, ctrl);\n@@ -1179,1 +1179,1 @@\n-    new_predicate_iff->set_req(1, new_predicate_bol);\n+    new_predicate_iff->set_req(1, hoisted_check_predicate_bool);\n@@ -1223,1 +1223,2 @@\n-    Node* ctrl = parse_predicate_proj->in(0)->as_If()->in(0);\n+    ParsePredicateNode* parse_predicate = parse_predicate_proj->in(0)->as_ParsePredicate();\n+    Node* ctrl = parse_predicate->in(0);\n@@ -1232,1 +1233,1 @@\n-    BoolNode* lower_bound_bol = rc_predicate(loop, ctrl, scale, offset, init, limit, stride, rng, false, overflow);\n+    BoolNode* lower_bound_bol = rc_predicate(ctrl, scale, offset, init, limit, stride, rng, false, overflow);\n@@ -1239,1 +1240,3 @@\n-    if (TraceLoopPredicate) tty->print_cr(\"lower bound check if: %d\", lower_bound_iff->_idx);\n+    if (TraceLoopPredicate) {\n+      tty->print_cr(\"lower bound check if: %d\", lower_bound_iff->_idx);\n+    }\n@@ -1242,2 +1245,1 @@\n-    BoolNode* upper_bound_bol = rc_predicate(loop, lower_bound_proj, scale, offset, init, limit, stride, rng, true,\n-                                             overflow);\n+    BoolNode* upper_bound_bol = rc_predicate(lower_bound_proj, scale, offset, init, limit, stride, rng, true, overflow);\n@@ -1250,1 +1252,3 @@\n-    if (TraceLoopPredicate) tty->print_cr(\"upper bound check if: %d\", lower_bound_iff->_idx);\n+    if (TraceLoopPredicate) {\n+      tty->print_cr(\"upper bound check if: %d\", upper_bound_iff->_idx);\n+    }\n@@ -1297,1 +1301,1 @@\n-  BoolNode* bol = rc_predicate(loop, upper_bound_proj, scale, offset, opaque_init, limit, stride, rng,\n+  BoolNode* bol = rc_predicate(upper_bound_proj, scale, offset, opaque_init, limit, stride, rng,\n@@ -1320,1 +1324,1 @@\n-  bol = rc_predicate(loop, new_proj, scale, offset, max_value, limit, stride, rng, (stride > 0) != (scale > 0),\n+  bol = rc_predicate(new_proj, scale, offset, max_value, limit, stride, rng, (stride > 0) != (scale > 0),\n@@ -1343,4 +1347,0 @@\n-  if (head->is_OuterStripMinedLoop()) {\n-    return false;\n-  }\n-\n@@ -1517,1 +1517,1 @@\n-bool IdealLoopTree::loop_predication( PhaseIdealLoop *phase) {\n+bool IdealLoopTree::loop_predication(PhaseIdealLoop* phase) {\n@@ -1524,1 +1524,1 @@\n-  \/\/ self\n+  \/\/ Self\n@@ -1529,1 +1529,2 @@\n-  if (_next) { \/\/sibling\n+  \/\/ Sibling\n+  if (_next) {\n@@ -1537,1 +1538,5 @@\n-  return _head->is_Loop() && !_irreducible && !tail()->is_top();\n+  return !_head->is_Root() &&\n+         _head->is_Loop() &&\n+         !_head->is_OuterStripMinedLoop() &&\n+         !_irreducible &&\n+         !tail()->is_top();\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":60,"deletions":55,"binary":false,"changes":115,"status":"modified"},{"patch":"@@ -2775,1 +2775,1 @@\n-  BoolNode* bol = rc_predicate(loop, ctrl, scale_con, offset, value, nullptr, stride_con,\n+  BoolNode* bol = rc_predicate(ctrl, scale_con, offset, value, nullptr, stride_con,\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4323,1 +4323,1 @@\n-  Node* entry = loop->_head->in(LoopNode::EntryControl);\n+  Node* entry = loop->_head->as_Loop()->skip_strip_mined()->in(LoopNode::EntryControl);\n@@ -4362,1 +4362,1 @@\n-  Node* entry = loop->_head->in(LoopNode::EntryControl);\n+  Node* entry = loop->_head->as_Loop()->skip_strip_mined()->in(LoopNode::EntryControl);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1345,1 +1345,1 @@\n-  IfProjNode* create_new_if_for_predicate(ParsePredicateSuccessProj* parse_predicate_proj, Node* new_entry,\n+  IfTrueNode* create_new_if_for_predicate(ParsePredicateSuccessProj* parse_predicate_proj, Node* new_entry,\n@@ -1368,1 +1368,1 @@\n-  BoolNode* rc_predicate(IdealLoopTree* loop, Node* ctrl, int scale, Node* offset, Node* init, Node* limit,\n+  BoolNode* rc_predicate(Node* ctrl, int scale, Node* offset, Node* init, Node* limit,\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -635,0 +635,3 @@\n+    } else if (!res_type->klass_is_exact()) {\n+      NOT_PRODUCT(fail_eliminate = \"Not an exact type.\";)\n+      can_eliminate = false;\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3024,1 +3024,5 @@\n-  const TypeAryPtr* aryptr_t = _store->adr_type()->isa_aryptr();\n+  const TypePtr* ptr_t = _store->adr_type();\n+  if (ptr_t == nullptr) {\n+    return nullptr;\n+  }\n+  const TypeAryPtr* aryptr_t = ptr_t->isa_aryptr();\n@@ -3069,0 +3073,1 @@\n+      other_store->adr_type() == nullptr ||\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1586,1 +1586,0 @@\n-  DUIterator_Fast i;\n@@ -1588,0 +1587,1 @@\n+  DUIterator_Fast i;\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1350,1 +1350,0 @@\n-  _method_size = 0;\n@@ -1394,0 +1393,1 @@\n+  \/\/ GC barrier stubs are generated in code section\n@@ -1395,1 +1395,1 @@\n-  stub_req += bs->estimate_stub_size();\n+  code_req += bs->estimate_stub_size();\n@@ -1404,1 +1404,1 @@\n-  if (StressCodeBuffers)\n+  if (StressCodeBuffers) {\n@@ -1406,1 +1406,1 @@\n-\n+  }\n@@ -1415,3 +1415,4 @@\n-  if (C->has_method_handle_invokes())\n-    total_req += deopt_handler_req;  \/\/ deopt MH handler\n-\n+  if (C->has_method_handle_invokes()) {\n+    total_req += deopt_handler_req;        \/\/ deopt MH handler\n+    stub_req  += deopt_handler_req;\n+  }\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -80,1 +80,0 @@\n-  int                    _method_size;           \/\/ Size of nmethod code segment in bytes\n@@ -169,1 +168,0 @@\n-  int               code_size()                 { return _method_size; }\n","filename":"src\/hotspot\/share\/opto\/output.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-  _align_to_ref(nullptr),                                   \/\/ memory reference to align vectors to\n@@ -54,0 +53,2 @@\n+  _mem_ref_for_main_loop_alignment(nullptr),\n+  _aw_for_main_loop_alignment(0),\n@@ -519,5 +520,0 @@\n-  \/\/ Take the first mem_ref as the reference to align to. The pre-loop trip count is\n-  \/\/ modified to align this reference to a vector-aligned address. If strict alignment\n-  \/\/ is required, we may change the reference later (see filter_packs_for_alignment()).\n-  MemNode* align_to_mem_ref = nullptr;\n-\n@@ -530,5 +526,0 @@\n-    if (align_to_mem_ref == nullptr) {\n-      align_to_mem_ref = mem_ref;\n-      set_align_to_ref(align_to_mem_ref);\n-    }\n-\n@@ -576,3 +567,0 @@\n-  assert(_pairset.is_empty() || align_to_mem_ref != nullptr,\n-         \"pairset empty or we find the alignment reference\");\n-\n@@ -1726,1 +1714,5 @@\n-    set_align_to_ref(current->as_constrained()->mem_ref());\n+    MemNode const* mem = current->as_constrained()->mem_ref();\n+    Node_List* pack = get_pack(mem);\n+    assert(pack != nullptr, \"memop of final solution must still be packed\");\n+    _mem_ref_for_main_loop_alignment = mem;\n+    _aw_for_main_loop_alignment = pack->size() * mem->memory_size();\n@@ -3400,0 +3392,26 @@\n+\/\/ Find the memop pack with the maximum vector width, unless they were already\n+\/\/ determined by SuperWord::filter_packs_for_alignment().\n+void SuperWord::determine_mem_ref_and_aw_for_main_loop_alignment() {\n+  if (_mem_ref_for_main_loop_alignment != nullptr) {\n+    assert(vectors_should_be_aligned(), \"mem_ref only set if filtered for alignment\");\n+    return;\n+  }\n+\n+  MemNode const* mem_ref = nullptr;\n+  int max_aw = 0;\n+  for (int i = 0; i < _packset.length(); i++) {\n+    Node_List* pack = _packset.at(i);\n+    MemNode* first = pack->at(0)->isa_Mem();\n+    if (first == nullptr) { continue; }\n+\n+    int vw = first->memory_size() * pack->size();\n+    if (vw > max_aw) {\n+      max_aw = vw;\n+      mem_ref = first;\n+    }\n+  }\n+  assert(mem_ref != nullptr && max_aw > 0, \"found mem_ref and aw\");\n+  _mem_ref_for_main_loop_alignment = mem_ref;\n+  _aw_for_main_loop_alignment = max_aw;\n+}\n+\n@@ -3410,2 +3428,3 @@\n-\/\/ the address of \"align_to_ref\" to the maximal possible vector width. We adjust the pre-loop\n-\/\/ iteration count by adjusting the pre-loop limit.\n+\/\/ the address of \"_mem_ref_for_main_loop_alignment\" to \"_aw_for_main_loop_alignment\", which is a\n+\/\/ sufficiently large alignment width. We adjust the pre-loop iteration count by adjusting the\n+\/\/ pre-loop limit.\n@@ -3413,2 +3432,4 @@\n-  const MemNode* align_to_ref = _align_to_ref;\n-  assert(align_to_ref != nullptr, \"align_to_ref must be set\");\n+  determine_mem_ref_and_aw_for_main_loop_alignment();\n+  const MemNode* align_to_ref = _mem_ref_for_main_loop_alignment;\n+  const int aw                = _aw_for_main_loop_alignment;\n+  assert(align_to_ref != nullptr && aw > 0, \"must have alignment reference and aw\");\n@@ -3559,4 +3580,1 @@\n-\n-  \/\/ We chose an aw that is the maximal possible vector width for the type of\n-  \/\/ align_to_ref.\n-  const int aw       = vector_width_in_bytes(align_to_ref);\n+  \/\/\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":41,"deletions":23,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -414,1 +414,0 @@\n-  MemNode const* _align_to_ref;          \/\/ Memory reference that pre-loop will align to\n@@ -419,0 +418,5 @@\n+  \/\/ Memory reference, and the alignment width (aw) for which we align the main-loop,\n+  \/\/ by adjusting the pre-loop limit.\n+  MemNode const* _mem_ref_for_main_loop_alignment;\n+  int _aw_for_main_loop_alignment;\n+\n@@ -566,2 +570,0 @@\n-  const MemNode* align_to_ref() const { return _align_to_ref; }\n-  void set_align_to_ref(const MemNode* m) { _align_to_ref = m; }\n@@ -673,0 +675,1 @@\n+  void determine_mem_ref_and_aw_for_main_loop_alignment();\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -62,0 +62,11 @@\n+#define log_if_needed(...)        \\\n+  if (C->print_intrinsics()) {    \\\n+    tty->print_cr(__VA_ARGS__);   \\\n+  }\n+\n+#ifndef PRODUCT\n+#define non_product_log_if_needed(...) log_if_needed(__VA_ARGS__)\n+#else\n+#define non_product_log_if_needed(...)\n+#endif\n+\n@@ -88,6 +99,2 @@\n-      #ifndef PRODUCT\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** Rejected vector mask loading (%s,%s,%d) because architecture does not support it\",\n-                        NodeClassNames[Op_VectorLoadMask], type2name(elem_bt), num_elem);\n-        }\n-      #endif\n+        non_product_log_if_needed(\"  ** Rejected vector mask loading (%s,%s,%d) because architecture does not support it\",\n+                                  NodeClassNames[Op_VectorLoadMask], type2name(elem_bt), num_elem);\n@@ -101,6 +108,2 @@\n-      #ifndef PRODUCT\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"Rejected vector mask predicate using (%s,%s,%d) because architecture does not support it\",\n-                        NodeClassNames[opc], type2name(elem_bt), num_elem);\n-        }\n-      #endif\n+        non_product_log_if_needed(\"Rejected vector mask predicate using (%s,%s,%d) because architecture does not support it\",\n+                                  NodeClassNames[opc], type2name(elem_bt), num_elem);\n@@ -188,5 +191,1 @@\n-#ifndef PRODUCT\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** Rejected intrinsification because no valid vector op could be extracted\");\n-    }\n-#endif\n+    non_product_log_if_needed(\"  ** Rejected intrinsification because no valid vector op could be extracted\");\n@@ -198,6 +197,2 @@\n-#ifndef PRODUCT\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support variable vector shifts\",\n-                      NodeClassNames[sopc], type2name(type), num_elem);\n-      }\n-#endif\n+      non_product_log_if_needed(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support variable vector shifts\",\n+                                NodeClassNames[sopc], type2name(type), num_elem);\n@@ -208,6 +203,2 @@\n-#ifndef PRODUCT\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support integral vector negate\",\n-                      NodeClassNames[sopc], type2name(type), num_elem);\n-      }\n-#endif\n+      non_product_log_if_needed(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support integral vector negate\",\n+                                NodeClassNames[sopc], type2name(type), num_elem);\n@@ -219,6 +210,2 @@\n-#ifndef PRODUCT\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support it\",\n-                      NodeClassNames[sopc], type2name(type), num_elem);\n-      }\n-#endif\n+      non_product_log_if_needed(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support it\",\n+                                NodeClassNames[sopc], type2name(type), num_elem);\n@@ -233,6 +220,2 @@\n-#ifndef PRODUCT\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** Rejected vector mask op (%s,%s,%d) because architecture does not support it\",\n-                      NodeClassNames[sopc], type2name(type), num_elem);\n-      }\n-#endif\n+      non_product_log_if_needed(\"  ** Rejected vector mask op (%s,%s,%d) because architecture does not support it\",\n+                                NodeClassNames[sopc], type2name(type), num_elem);\n@@ -244,6 +227,2 @@\n-#ifndef PRODUCT\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** Not a svml call or load\/store vector op (%s,%s,%d)\",\n-                        NodeClassNames[sopc], type2name(type), num_elem);\n-        }\n-#endif\n+        non_product_log_if_needed(\"  ** Not a svml call or load\/store vector op (%s,%s,%d)\",\n+                                  NodeClassNames[sopc], type2name(type), num_elem);\n@@ -257,4 +236,2 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support variable vector shifts\",\n-                    NodeClassNames[sopc], type2name(type), num_elem);\n-    }\n+    log_if_needed(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support variable vector shifts\",\n+                  NodeClassNames[sopc], type2name(type), num_elem);\n@@ -270,6 +247,2 @@\n-    #ifndef PRODUCT\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** Rejected vector mask loading (%s,%s,%d) because architecture does not support it\",\n-                      NodeClassNames[Op_VectorLoadMask], type2name(type), num_elem);\n-      }\n-    #endif\n+      non_product_log_if_needed(\"  ** Rejected vector mask loading (%s,%s,%d) because architecture does not support it\",\n+                                NodeClassNames[Op_VectorLoadMask], type2name(type), num_elem);\n@@ -286,6 +259,2 @@\n-    #ifndef PRODUCT\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"Rejected vector mask storing (%s,%s,%d) because architecture does not support it\",\n-                      NodeClassNames[Op_VectorStoreMask], type2name(type), num_elem);\n-      }\n-    #endif\n+      non_product_log_if_needed(\"Rejected vector mask storing (%s,%s,%d) because architecture does not support it\",\n+                                NodeClassNames[Op_VectorStoreMask], type2name(type), num_elem);\n@@ -308,6 +277,2 @@\n-    #ifndef PRODUCT\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"Rejected vector mask predicate using (%s,%s,%d) because architecture does not support it\",\n-                      NodeClassNames[sopc], type2name(type), num_elem);\n-      }\n-    #endif\n+      non_product_log_if_needed(\"Rejected vector mask predicate using (%s,%s,%d) because architecture does not support it\",\n+                                NodeClassNames[sopc], type2name(type), num_elem);\n@@ -363,2 +328,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: opr=%s vclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: opr=%s vclass=%s etype=%s vlen=%s\",\n@@ -369,1 +333,0 @@\n-    }\n@@ -375,3 +338,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -381,3 +342,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -393,3 +352,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** missing constant: maskclass=%s\", NodeClassNames[argument(2)->Opcode()]);\n-      }\n+      log_if_needed(\"  ** missing constant: maskclass=%s\", NodeClassNames[argument(2)->Opcode()]);\n@@ -400,3 +357,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** mask klass argument not initialized\");\n-      }\n+      log_if_needed(\"  ** mask klass argument not initialized\");\n@@ -407,3 +362,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** null mask values are not allowed for masked op\");\n-      }\n+      log_if_needed(\"  ** null mask values are not allowed for masked op\");\n@@ -419,3 +372,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** operation not supported: opc=%s bt=%s\", NodeClassNames[opc], type2name(elem_bt));\n-    }\n+    log_if_needed(\"  ** operation not supported: opc=%s bt=%s\", NodeClassNames[opc], type2name(elem_bt));\n@@ -426,2 +377,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not a svml call: arity=%d opc=%d vlen=%d etype=%s\",\n+      log_if_needed(\"  ** not a svml call: arity=%d opc=%d vlen=%d etype=%s\",\n@@ -429,1 +379,0 @@\n-      }\n@@ -442,3 +391,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** vector stubs support is disabled\");\n-      }\n+      log_if_needed(\"  ** vector stubs support is disabled\");\n@@ -448,3 +395,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** no vector calling conventions supported\");\n-      }\n+      log_if_needed(\"  ** no vector calling conventions supported\");\n@@ -454,2 +399,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** vector size (vlen=%d, etype=%s) is not supported\",\n+      log_if_needed(\"  ** vector size (vlen=%d, etype=%s) is not supported\",\n@@ -457,1 +401,0 @@\n-      }\n@@ -466,2 +409,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=%d opc=%d vlen=%d etype=%s ismask=%d is_masked_op=%d\",\n+    log_if_needed(\"  ** not supported: arity=%d opc=%d vlen=%d etype=%s ismask=%d is_masked_op=%d\",\n@@ -470,1 +412,0 @@\n-    }\n@@ -477,2 +418,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=%d opc=%d vlen=%d etype=%s ismask=0 is_masked_op=1\",\n+    log_if_needed(\"  ** not supported: arity=%d opc=%d vlen=%d etype=%s ismask=0 is_masked_op=1\",\n@@ -480,1 +420,0 @@\n-    }\n@@ -489,2 +428,1 @@\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** unbox failed v3=%s\",\n+        log_if_needed(\"  ** unbox failed v3=%s\",\n@@ -492,1 +430,0 @@\n-        }\n@@ -500,2 +437,1 @@\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** unbox failed v2=%s\",\n+        log_if_needed(\"  ** unbox failed v2=%s\",\n@@ -503,1 +439,0 @@\n-        }\n@@ -511,2 +446,1 @@\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** unbox failed v1=%s\",\n+        log_if_needed(\"  ** unbox failed v1=%s\",\n@@ -514,1 +448,0 @@\n-        }\n@@ -529,2 +462,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** unbox failed mask=%s\",\n+      log_if_needed(\"  ** unbox failed mask=%s\",\n@@ -532,1 +464,0 @@\n-      }\n@@ -542,2 +473,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** svml call failed for %s_%s_%d\",\n+      log_if_needed(\"  ** svml call failed for %s_%s_%d\",\n@@ -547,1 +477,0 @@\n-      }\n@@ -602,3 +531,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -711,3 +638,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -723,2 +648,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=1 op=cast#%d\/3 vlen2=%d etype2=%s\",\n+    log_if_needed(\"  ** not supported: arity=1 op=cast#%d\/3 vlen2=%d etype2=%s\",\n@@ -726,1 +650,0 @@\n-    }\n@@ -735,2 +658,1 @@\n-    if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** unbox failed mask=%s\",\n+    log_if_needed(\"  ** unbox failed mask=%s\",\n@@ -738,1 +660,0 @@\n-    }\n@@ -777,3 +698,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -794,2 +713,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=1 op=cast#%d\/3 vlen2=%d etype2=%s\",\n+    log_if_needed(\"  ** not supported: arity=1 op=cast#%d\/3 vlen2=%d etype2=%s\",\n@@ -797,1 +715,0 @@\n-    }\n@@ -841,2 +758,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: vclass=%s etype=%s vlen=%s bitwise=%s\",\n+    log_if_needed(\"  ** missing constant: vclass=%s etype=%s vlen=%s bitwise=%s\",\n@@ -847,1 +763,0 @@\n-    }\n@@ -852,3 +767,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -859,3 +772,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -875,2 +786,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=0 op=broadcast vlen=%d etype=%s ismask=%d bcast_mode=%d\",\n+    log_if_needed(\"  ** not supported: arity=0 op=broadcast vlen=%d etype=%s ismask=%d bcast_mode=%d\",\n@@ -880,1 +790,0 @@\n-    }\n@@ -976,2 +885,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: vclass=%s etype=%s vlen=%s from_ms=%s\",\n+    log_if_needed(\"  ** missing constant: vclass=%s etype=%s vlen=%s from_ms=%s\",\n@@ -982,1 +890,0 @@\n-    }\n@@ -986,3 +893,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -994,3 +899,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -1004,2 +907,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s ismask=no\",\n+    log_if_needed(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s ismask=no\",\n@@ -1008,1 +910,0 @@\n-    }\n@@ -1049,3 +950,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** non-primitive array element type\");\n-    }\n+    log_if_needed(\"  ** non-primitive array element type\");\n@@ -1056,2 +955,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s atype=%s ismask=no\",\n+    log_if_needed(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s atype=%s ismask=no\",\n@@ -1060,1 +958,0 @@\n-    }\n@@ -1071,2 +968,1 @@\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d*8 etype=%s\/8 ismask=no\",\n+        log_if_needed(\"  ** not supported: arity=%d op=%s vlen=%d*8 etype=%s\/8 ismask=no\",\n@@ -1075,1 +971,0 @@\n-        }\n@@ -1083,2 +978,1 @@\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d*8 etype=%s\/8 ismask=no\",\n+        log_if_needed(\"  ** not supported: arity=%d op=%s vlen=%d*8 etype=%s\/8 ismask=no\",\n@@ -1087,1 +981,0 @@\n-        }\n@@ -1201,2 +1094,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: vclass=%s mclass=%s etype=%s vlen=%s from_ms=%s\",\n+    log_if_needed(\"  ** missing constant: vclass=%s mclass=%s etype=%s vlen=%s from_ms=%s\",\n@@ -1208,1 +1100,0 @@\n-    }\n@@ -1212,3 +1103,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -1219,3 +1108,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** mask klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** mask klass argument not initialized\");\n@@ -1227,3 +1114,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -1251,2 +1136,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s atype=%s\",\n+    log_if_needed(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s atype=%s\",\n@@ -1255,1 +1139,0 @@\n-    }\n@@ -1277,2 +1160,1 @@\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** missing constant: offsetInRange=%s\",\n+        log_if_needed(\"  ** missing constant: offsetInRange=%s\",\n@@ -1280,1 +1162,0 @@\n-        }\n@@ -1289,2 +1170,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: op=%s vlen=%d etype=%s mismatched_ms=%d\",\n+      log_if_needed(\"  ** not supported: op=%s vlen=%d etype=%s mismatched_ms=%d\",\n@@ -1293,1 +1173,0 @@\n-      }\n@@ -1304,2 +1183,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: op=loadMasked vlen=%d etype=%s mismatched_ms=%d\",\n+    log_if_needed(\"  ** not supported: op=loadMasked vlen=%d etype=%s mismatched_ms=%d\",\n@@ -1307,1 +1185,0 @@\n-    }\n@@ -1317,2 +1194,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s mismatched_ms=1\",\n+      log_if_needed(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s mismatched_ms=1\",\n@@ -1321,1 +1197,0 @@\n-      }\n@@ -1331,2 +1206,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s\",\n+    log_if_needed(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s\",\n@@ -1335,1 +1209,0 @@\n-    }\n@@ -1355,2 +1228,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** unbox failed mask=%s\",\n+    log_if_needed(\"  ** unbox failed mask=%s\",\n@@ -1359,1 +1231,0 @@\n-    }\n@@ -1368,2 +1239,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** unbox failed vector=%s\",\n+      log_if_needed(\"  ** unbox failed vector=%s\",\n@@ -1371,1 +1241,0 @@\n-      }\n@@ -1463,2 +1332,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: vclass=%s etype=%s vlen=%s viclass=%s\",\n+    log_if_needed(\"  ** missing constant: vclass=%s etype=%s vlen=%s viclass=%s\",\n@@ -1469,1 +1337,0 @@\n-    }\n@@ -1474,3 +1341,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -1482,3 +1347,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -1495,3 +1358,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** missing constant: maskclass=%s\", NodeClassNames[argument(1)->Opcode()]);\n-      }\n+      log_if_needed(\"  ** missing constant: maskclass=%s\", NodeClassNames[argument(1)->Opcode()]);\n@@ -1502,3 +1363,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** mask klass argument not initialized\");\n-      }\n+      log_if_needed(\"  ** mask klass argument not initialized\");\n@@ -1509,3 +1368,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** null mask values are not allowed for masked op\");\n-      }\n+      log_if_needed(\"  ** null mask values are not allowed for masked op\");\n@@ -1518,2 +1375,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s is_masked_op=1\",\n+      log_if_needed(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s is_masked_op=1\",\n@@ -1522,1 +1378,0 @@\n-      }\n@@ -1528,2 +1383,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s is_masked_op=0\",\n+      log_if_needed(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s is_masked_op=0\",\n@@ -1532,1 +1386,0 @@\n-      }\n@@ -1540,2 +1393,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: arity=%d op=%s\/loadindex vlen=%d etype=int is_masked_op=%d\",\n+      log_if_needed(\"  ** not supported: arity=%d op=%s\/loadindex vlen=%d etype=int is_masked_op=%d\",\n@@ -1544,1 +1396,0 @@\n-      }\n@@ -1562,2 +1413,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s atype=%s ismask=no\",\n+    log_if_needed(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s atype=%s ismask=no\",\n@@ -1566,1 +1416,0 @@\n-    }\n@@ -1598,2 +1447,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** unbox failed mask=%s\",\n+      log_if_needed(\"  ** unbox failed mask=%s\",\n@@ -1602,1 +1450,0 @@\n-      }\n@@ -1672,2 +1519,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: opr=%s vclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: opr=%s vclass=%s etype=%s vlen=%s\",\n@@ -1678,1 +1524,0 @@\n-    }\n@@ -1682,3 +1527,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -1689,3 +1532,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -1699,3 +1540,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** missing constant: maskclass=%s\", NodeClassNames[argument(2)->Opcode()]);\n-      }\n+      log_if_needed(\"  ** missing constant: maskclass=%s\", NodeClassNames[argument(2)->Opcode()]);\n@@ -1706,3 +1545,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** mask klass argument not initialized\");\n-      }\n+      log_if_needed(\"  ** mask klass argument not initialized\");\n@@ -1713,3 +1550,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** null mask values are not allowed for masked op\");\n-      }\n+      log_if_needed(\"  ** null mask values are not allowed for masked op\");\n@@ -1727,2 +1562,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=1 op=%d\/reduce vlen=%d etype=%s is_masked_op=%d\",\n+    log_if_needed(\"  ** not supported: arity=1 op=%d\/reduce vlen=%d etype=%s is_masked_op=%d\",\n@@ -1730,1 +1564,0 @@\n-    }\n@@ -1737,2 +1570,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=1 op=%d\/reduce vlen=%d etype=%s is_masked_op=1\",\n+    log_if_needed(\"  ** not supported: arity=1 op=%d\/reduce vlen=%d etype=%s is_masked_op=1\",\n@@ -1740,1 +1572,0 @@\n-    }\n@@ -1759,2 +1590,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** unbox failed mask=%s\",\n+      log_if_needed(\"  ** unbox failed mask=%s\",\n@@ -1762,1 +1592,0 @@\n-      }\n@@ -1825,2 +1654,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: cond=%s vclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: cond=%s vclass=%s etype=%s vlen=%s\",\n@@ -1831,1 +1659,0 @@\n-    }\n@@ -1835,3 +1662,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -1842,3 +1667,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -1854,2 +1677,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=2 op=test\/%d vlen=%d etype=%s ismask=%d\",\n+    log_if_needed(\"  ** not supported: arity=2 op=test\/%d vlen=%d etype=%s ismask=%d\",\n@@ -1858,1 +1680,0 @@\n-    }\n@@ -1903,2 +1724,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: vclass=%s mclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: vclass=%s mclass=%s etype=%s vlen=%s\",\n@@ -1909,1 +1729,0 @@\n-    }\n@@ -1913,3 +1732,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -1920,3 +1737,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -1930,2 +1745,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=2 op=blend vlen=%d etype=%s ismask=useload\",\n+    log_if_needed(\"  ** not supported: arity=2 op=blend vlen=%d etype=%s ismask=useload\",\n@@ -1933,1 +1747,0 @@\n-    }\n@@ -1977,2 +1790,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: cond=%s vclass=%s mclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: cond=%s vclass=%s mclass=%s etype=%s vlen=%s\",\n@@ -1984,1 +1796,0 @@\n-    }\n@@ -1988,3 +1799,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -1995,3 +1804,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -2007,2 +1814,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: unsigned comparison op=comp\/%d vlen=%d etype=%s ismask=usestore\",\n+      log_if_needed(\"  ** not supported: unsigned comparison op=comp\/%d vlen=%d etype=%s ismask=usestore\",\n@@ -2010,1 +1816,0 @@\n-      }\n@@ -2016,2 +1821,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=2 op=comp\/%d vlen=%d etype=%s ismask=usestore\",\n+    log_if_needed(\"  ** not supported: arity=2 op=comp\/%d vlen=%d etype=%s ismask=usestore\",\n@@ -2019,1 +1823,0 @@\n-    }\n@@ -2035,2 +1838,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: mask = null arity=2 op=comp\/%d vlen=%d etype=%s ismask=usestore is_masked_op=1\",\n+    log_if_needed(\"  ** not supported: mask = null arity=2 op=comp\/%d vlen=%d etype=%s ismask=usestore is_masked_op=1\",\n@@ -2038,1 +1840,0 @@\n-    }\n@@ -2044,2 +1845,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=2 op=comp\/%d vlen=%d etype=%s ismask=usestore is_masked_op=1\",\n+    log_if_needed(\"  ** not supported: arity=2 op=comp\/%d vlen=%d etype=%s ismask=usestore is_masked_op=1\",\n@@ -2047,1 +1847,0 @@\n-    }\n@@ -2100,2 +1899,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: vclass=%s sclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: vclass=%s sclass=%s etype=%s vlen=%s\",\n@@ -2106,1 +1904,0 @@\n-    }\n@@ -2111,3 +1908,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -2118,3 +1913,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -2128,2 +1921,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=0 op=load\/shuffle vlen=%d etype=%s ismask=no\",\n+    log_if_needed(\"  ** not supported: arity=0 op=load\/shuffle vlen=%d etype=%s ismask=no\",\n@@ -2131,1 +1923,0 @@\n-    }\n@@ -2141,3 +1932,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** mask_klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** mask_klass argument not initialized\");\n@@ -2152,2 +1941,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: arity=2 op=shuffle\/rearrange vlen=%d etype=%s ismask=no\",\n+      log_if_needed(\"  ** not supported: arity=2 op=shuffle\/rearrange vlen=%d etype=%s ismask=no\",\n@@ -2155,1 +1943,0 @@\n-      }\n@@ -2178,2 +1965,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: arity=3 op=shuffle\/rearrange vlen=%d etype=%s ismask=useload is_masked_op=1\",\n+      log_if_needed(\"  ** not supported: arity=3 op=shuffle\/rearrange vlen=%d etype=%s ismask=useload is_masked_op=1\",\n@@ -2181,1 +1967,0 @@\n-      }\n@@ -2283,2 +2068,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: opr=%s vclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: opr=%s vclass=%s etype=%s vlen=%s\",\n@@ -2289,1 +2073,0 @@\n-    }\n@@ -2293,3 +2076,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -2303,3 +2084,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** missing constant: maskclass=%s\", NodeClassNames[argument(2)->Opcode()]);\n-      }\n+      log_if_needed(\"  ** missing constant: maskclass=%s\", NodeClassNames[argument(2)->Opcode()]);\n@@ -2310,3 +2089,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** mask klass argument not initialized\");\n-      }\n+      log_if_needed(\"  ** mask klass argument not initialized\");\n@@ -2317,3 +2094,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** null mask values are not allowed for masked op\");\n-      }\n+      log_if_needed(\"  ** null mask values are not allowed for masked op\");\n@@ -2326,3 +2101,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -2340,3 +2113,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** operation not supported: op=%d bt=%s\", opr->get_con(), type2name(elem_bt));\n-    }\n+    log_if_needed(\"  ** operation not supported: op=%d bt=%s\", opr->get_con(), type2name(elem_bt));\n@@ -2348,3 +2119,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** operation not supported: opc=%s bt=%s\", NodeClassNames[opc], type2name(elem_bt));\n-    }\n+    log_if_needed(\"  ** operation not supported: opc=%s bt=%s\", NodeClassNames[opc], type2name(elem_bt));\n@@ -2373,2 +2142,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: arity=0 op=int\/%d vlen=%d etype=%s is_masked_op=%d\",\n+      log_if_needed(\"  ** not supported: arity=0 op=int\/%d vlen=%d etype=%s is_masked_op=%d\",\n@@ -2376,1 +2144,0 @@\n-      }\n@@ -2407,3 +2174,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** unbox failed mask=%s\", NodeClassNames[argument(7)->Opcode()]);\n-      }\n+      log_if_needed(\"  ** unbox failed mask=%s\", NodeClassNames[argument(7)->Opcode()]);\n@@ -2459,2 +2224,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: opr=%s vclass_from=%s etype_from=%s vlen_from=%s vclass_to=%s etype_to=%s vlen_to=%s\",\n+    log_if_needed(\"  ** missing constant: opr=%s vclass_from=%s etype_from=%s vlen_from=%s vclass_to=%s etype_to=%s vlen_to=%s\",\n@@ -2468,1 +2232,0 @@\n-    }\n@@ -2472,3 +2235,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -2511,2 +2272,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=1 op=%s\/1 vlen1=%d etype1=%s ismask=%d\",\n+    log_if_needed(\"  ** not supported: arity=1 op=%s\/1 vlen1=%d etype1=%s ismask=%d\",\n@@ -2515,1 +2275,0 @@\n-    }\n@@ -2524,2 +2283,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=1 op=%s\/2 vlen2=%d etype2=%s ismask=%d\",\n+    log_if_needed(\"  ** not supported: arity=1 op=%s\/2 vlen2=%d etype2=%s ismask=%d\",\n@@ -2528,1 +2286,0 @@\n-    }\n@@ -2568,2 +2325,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: arity=1 op=cast#%d\/3 vlen2=%d etype2=%s ismask=%d\",\n+      log_if_needed(\"  ** not supported: arity=1 op=cast#%d\/3 vlen2=%d etype2=%s ismask=%d\",\n@@ -2571,1 +2327,0 @@\n-      }\n@@ -2583,2 +2338,1 @@\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** not supported: arity=1 op=cast#%d\/4 vlen1=%d etype2=%s ismask=%d\",\n+        log_if_needed(\"  ** not supported: arity=1 op=cast#%d\/4 vlen1=%d etype2=%s ismask=%d\",\n@@ -2587,1 +2341,0 @@\n-        }\n@@ -2605,2 +2358,1 @@\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** not supported: arity=1 op=cast\/5 vlen2=%d etype1=%s ismask=%d\",\n+        log_if_needed(\"  ** not supported: arity=1 op=cast\/5 vlen2=%d etype1=%s ismask=%d\",\n@@ -2608,1 +2360,0 @@\n-        }\n@@ -2619,2 +2370,1 @@\n-          if (C->print_intrinsics()) {\n-            tty->print_cr(\"  ** not supported: arity=1 op=maskcast vlen2=%d etype2=%s ismask=%d\",\n+          log_if_needed(\"  ** not supported: arity=1 op=maskcast vlen2=%d etype2=%s ismask=%d\",\n@@ -2622,1 +2372,0 @@\n-          }\n@@ -2660,2 +2409,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: vclass=%s etype=%s vlen=%s idx=%s\",\n+    log_if_needed(\"  ** missing constant: vclass=%s etype=%s vlen=%s idx=%s\",\n@@ -2666,1 +2414,0 @@\n-    }\n@@ -2670,3 +2417,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -2677,3 +2422,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -2685,2 +2428,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=1 op=insert vlen=%d etype=%s ismask=no\",\n+    log_if_needed(\"  ** not supported: arity=1 op=insert vlen=%d etype=%s ismask=no\",\n@@ -2688,1 +2430,0 @@\n-    }\n@@ -2754,2 +2495,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: vclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: vclass=%s etype=%s vlen=%s\",\n@@ -2759,1 +2499,0 @@\n-    }\n@@ -2763,3 +2502,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -2770,3 +2507,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -2810,3 +2545,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** Rejected mask extraction because architecture does not support it\");\n-      }\n+      log_if_needed(\"  ** Rejected mask extraction because architecture does not support it\");\n@@ -2818,3 +2551,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** missing constant: idx=%s\", NodeClassNames[argument(4)->Opcode()]);\n-      }\n+      log_if_needed(\"  ** missing constant: idx=%s\", NodeClassNames[argument(4)->Opcode()]);\n@@ -2826,2 +2557,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: arity=1 op=extract vlen=%d etype=%s ismask=no\",\n+      log_if_needed(\"  ** not supported: arity=1 op=extract vlen=%d etype=%s ismask=no\",\n@@ -2829,1 +2559,0 @@\n-      }\n@@ -2885,2 +2614,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: opr=%s vclass=%s mclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: opr=%s vclass=%s mclass=%s etype=%s vlen=%s\",\n@@ -2892,1 +2620,0 @@\n-    }\n@@ -2897,3 +2624,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -2905,3 +2630,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -2916,2 +2639,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: opc=%d vlen=%d etype=%s ismask=useload\",\n+    log_if_needed(\"  ** not supported: opc=%d vlen=%d etype=%s ismask=useload\",\n@@ -2919,1 +2641,0 @@\n-    }\n@@ -2930,2 +2651,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** unbox failed vector=%s\",\n+      log_if_needed(\"  ** unbox failed vector=%s\",\n@@ -2933,1 +2653,0 @@\n-      }\n@@ -2944,2 +2663,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** unbox failed mask=%s\",\n+    log_if_needed(\"  ** unbox failed mask=%s\",\n@@ -2947,1 +2665,0 @@\n-    }\n@@ -2978,2 +2695,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: vclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: vclass=%s etype=%s vlen=%s\",\n@@ -2983,1 +2699,0 @@\n-    }\n@@ -2988,3 +2703,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -2996,3 +2709,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -3007,3 +2718,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: vlen=%d etype=%s\", num_elem, type2name(elem_bt));\n-    }\n+    log_if_needed(\"  ** not supported: vlen=%d etype=%s\", num_elem, type2name(elem_bt));\n@@ -3024,3 +2733,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: vlen=%d etype=%s\", num_elem, type2name(elem_bt));\n-      }\n+      log_if_needed(\"  ** not supported: vlen=%d etype=%s\", num_elem, type2name(elem_bt));\n@@ -3035,2 +2742,1 @@\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** Rejected op (%s) because architecture does not support it\",\n+        log_if_needed(\"  ** Rejected op (%s) because architecture does not support it\",\n@@ -3038,1 +2744,0 @@\n-        }\n@@ -3048,2 +2753,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** unbox failed vector=%s\",\n+    log_if_needed(\"  ** unbox failed vector=%s\",\n@@ -3051,1 +2755,0 @@\n-    }\n@@ -3064,3 +2767,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: vlen=%d etype=%s\", num_elem, type2name(elem_bt));\n-      }\n+      log_if_needed(\"  ** not supported: vlen=%d etype=%s\", num_elem, type2name(elem_bt));\n@@ -3127,2 +2828,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** missing constant: mclass=%s etype=%s vlen=%s\",\n+    log_if_needed(\"  ** missing constant: mclass=%s etype=%s vlen=%s\",\n@@ -3132,1 +2832,0 @@\n-    }\n@@ -3137,3 +2836,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** klass argument not initialized\");\n-    }\n+    log_if_needed(\"  ** klass argument not initialized\");\n@@ -3145,3 +2842,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n-    }\n+    log_if_needed(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n@@ -3160,3 +2855,1 @@\n-      if (C->print_intrinsics()) {\n-        tty->print_cr(\"  ** not supported: vlen=%d etype=%s\", num_elem, type2name(elem_bt));\n-      }\n+      log_if_needed(\"  ** not supported: vlen=%d etype=%s\", num_elem, type2name(elem_bt));\n@@ -3171,2 +2864,1 @@\n-        if (C->print_intrinsics()) {\n-          tty->print_cr(\"  ** Rejected op (%s) because architecture does not support it\",\n+        log_if_needed(\"  ** Rejected op (%s) because architecture does not support it\",\n@@ -3174,1 +2866,0 @@\n-        }\n@@ -3183,3 +2874,1 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** offset or limit argument is null\");\n-    }\n+    log_if_needed(\"  ** offset or limit argument is null\");\n@@ -3241,0 +2930,3 @@\n+\n+#undef non_product_log_if_needed\n+#undef log_if_needed\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":175,"deletions":483,"binary":false,"changes":658,"status":"modified"},{"patch":"@@ -605,1 +605,1 @@\n-  if (Universe::heap()->is_gc_active()) {\n+  if (Universe::heap()->is_stw_gc_active()) {\n","filename":"src\/hotspot\/share\/prims\/forte.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/prims\/jvmtiAgentList.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -932,1 +932,3 @@\n-    assert(!_thread->is_in_any_VTMS_transition(), \"CFLH events are not allowed in any VTMS transition\");\n+    if (_thread->is_in_any_VTMS_transition()) {\n+      return; \/\/ no events should be posted if thread is in any VTMS transition\n+    }\n@@ -1369,2 +1371,2 @@\n-  if (thread->is_in_tmp_VTMS_transition()) {\n-    return; \/\/ skip ClassLoad events in tmp VTMS transition\n+  if (thread->is_in_any_VTMS_transition()) {\n+    return; \/\/ no events should be posted if thread is in any VTMS transition\n@@ -1372,1 +1374,0 @@\n-  assert(!thread->is_in_any_VTMS_transition(), \"class load events are not allowed in any VTMS transition\");\n@@ -1407,2 +1408,2 @@\n-  if (thread->is_in_tmp_VTMS_transition()) {\n-    return; \/\/ skip ClassPrepare events in tmp VTMS transition\n+  if (thread->is_in_any_VTMS_transition()) {\n+    return; \/\/ no events should be posted if thread is in any VTMS transition\n@@ -1410,1 +1411,0 @@\n-  assert(!thread->is_in_any_VTMS_transition(), \"class prepare events are not allowed in any VTMS transition\");\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -163,7 +163,3 @@\n-  jlong byte_offset = field_offset_to_byte_offset(field_offset);\n-\n-  if (sizeof(char*) == sizeof(jint)) {   \/\/ (this constant folds!)\n-    return cast_from_oop<address>(p) + (jint) byte_offset;\n-  } else {\n-    return cast_from_oop<address>(p) +        byte_offset;\n-  }\n+  uintptr_t base_address = cast_from_oop<uintptr_t>(p);\n+  uintptr_t byte_offset  = (uintptr_t)field_offset_to_byte_offset(field_offset);\n+  return (void*)(base_address + byte_offset);\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -500,0 +500,1 @@\n+  { \"ZGenerational\",                JDK_Version::jdk(23), JDK_Version::undefined(), JDK_Version::undefined() },\n@@ -506,0 +507,1 @@\n+  { \"OldSize\",                      JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -406,1 +406,1 @@\n-  virtual stackChunkOop allocate_chunk_slow(size_t stack_size) = 0;\n+  virtual stackChunkOop allocate_chunk_slow(size_t stack_size, int argsize_md) = 0;\n@@ -441,8 +441,0 @@\n-\n-#ifdef ASSERT\n-  bool is_empty(stackChunkOop chunk) {\n-    \/\/ during freeze, the chunk is in an intermediate state (after setting the chunk's argsize but before setting its\n-    \/\/ ultimate sp) so we use this instead of stackChunkOopDesc::is_empty\n-    return chunk->sp() >= chunk->stack_size() - chunk->argsize() - frame::metadata_words_at_top;\n-  }\n-#endif\n@@ -454,1 +446,1 @@\n-  stackChunkOop allocate_chunk(size_t stack_size);\n+  stackChunkOop allocate_chunk(size_t stack_size, int argsize_md);\n@@ -463,1 +455,1 @@\n-  virtual stackChunkOop allocate_chunk_slow(size_t stack_size) override { return allocate_chunk(stack_size); }\n+  virtual stackChunkOop allocate_chunk_slow(size_t stack_size, int argsize_md) override { return allocate_chunk(stack_size, argsize_md); }\n@@ -546,1 +538,1 @@\n-  stackChunkOop chunk = allocate_chunk(cont_size() + frame::metadata_words);\n+  stackChunkOop chunk = allocate_chunk(cont_size() + frame::metadata_words, _cont.argsize() + frame::metadata_words_at_top);\n@@ -575,1 +567,1 @@\n-  if (chunk_sp < chunk->stack_size()) {\n+  if (!chunk->is_empty()) {\n@@ -588,1 +580,0 @@\n-  DEBUG_ONLY(_orig_chunk_sp = chunk->sp_address();)\n@@ -593,1 +584,1 @@\n-  if (chunk->sp() < chunk->stack_size()) { \/\/ we are copying into a non-empty chunk\n+  if (!chunk->is_empty()) { \/\/ we are copying into a non-empty chunk\n@@ -595,1 +586,1 @@\n-    assert(chunk->sp() < (chunk->stack_size() - chunk->argsize()), \"\");\n+    DEBUG_ONLY(_orig_chunk_sp = chunk->sp_address();)\n@@ -633,2 +624,1 @@\n-    DEBUG_ONLY(_empty = true;)\n-    const int chunk_start_sp = chunk->sp();\n+    const int chunk_start_sp = chunk->stack_size();\n@@ -636,1 +626,2 @@\n-    assert(chunk_start_sp == chunk->stack_size(), \"\");\n+    DEBUG_ONLY(_empty = true;)\n+    DEBUG_ONLY(_orig_chunk_sp = chunk->start_address() + chunk_start_sp;)\n@@ -639,1 +630,2 @@\n-    chunk->set_argsize(_cont.argsize());\n+    chunk->set_bottom(chunk_start_sp - _cont.argsize() - frame::metadata_words_at_top);\n+    chunk->set_sp(chunk->bottom());\n@@ -657,1 +649,0 @@\n-  chunk->set_argsize(_cont.argsize());\n@@ -934,1 +925,0 @@\n-    unextended_sp = chunk->sp();\n@@ -942,0 +932,2 @@\n+    } else {\n+      unextended_sp = chunk->stack_size() - frame::metadata_words_at_top;\n@@ -979,1 +971,1 @@\n-    chunk = allocate_chunk_slow(_freeze_size);\n+    chunk = allocate_chunk_slow(_freeze_size, argsize_md);\n@@ -986,5 +978,1 @@\n-\n-    int sp = chunk->stack_size() - argsize_md;\n-    chunk->set_sp(sp);\n-    chunk->set_argsize(argsize);\n-    assert(is_empty(chunk), \"\");\n+    assert(chunk->is_empty(), \"\");\n@@ -997,1 +985,1 @@\n-      chunk->set_argsize(argsize);\n+      chunk->set_bottom(sp);\n@@ -1007,1 +995,1 @@\n-  assert(!_barriers || is_empty(chunk), \"\");\n+  assert(!_barriers || chunk->is_empty(), \"\");\n@@ -1009,2 +997,2 @@\n-  assert(!is_empty(chunk) || StackChunkFrameStream<ChunkFrames::Mixed>(chunk).is_done(), \"\");\n-  assert(!is_empty(chunk) || StackChunkFrameStream<ChunkFrames::Mixed>(chunk).to_frame().is_empty(), \"\");\n+  assert(!chunk->is_empty() || StackChunkFrameStream<ChunkFrames::Mixed>(chunk).is_done(), \"\");\n+  assert(!chunk->is_empty() || StackChunkFrameStream<ChunkFrames::Mixed>(chunk).to_frame().is_empty(), \"\");\n@@ -1056,1 +1044,1 @@\n-    assert((last_pc == nullptr) == is_empty(_cont.tail()), \"\");\n+    assert((last_pc == nullptr) == _cont.tail()->is_empty(), \"\");\n@@ -1309,0 +1297,1 @@\n+  int                                          _argsize_md;\n@@ -1324,0 +1313,2 @@\n+    int bottom = (int)_stack_size - _argsize_md;\n+\n@@ -1325,1 +1316,2 @@\n-    jdk_internal_vm_StackChunk::set_sp(mem, (int)_stack_size);\n+    jdk_internal_vm_StackChunk::set_bottom(mem, bottom);\n+    jdk_internal_vm_StackChunk::set_sp(mem, bottom);\n@@ -1349,0 +1341,1 @@\n+                      int argsize_md,\n@@ -1353,0 +1346,1 @@\n+      _argsize_md(argsize_md),\n@@ -1386,1 +1380,1 @@\n-stackChunkOop Freeze<ConfigT>::allocate_chunk(size_t stack_size) {\n+stackChunkOop Freeze<ConfigT>::allocate_chunk(size_t stack_size, int argsize_md) {\n@@ -1408,1 +1402,1 @@\n-  StackChunkAllocator allocator(klass, size_in_words, current, stack_size, _cont, _jvmti_event_collector);\n+  StackChunkAllocator allocator(klass, size_in_words, current, stack_size, argsize_md, _cont, _jvmti_event_collector);\n@@ -1418,1 +1412,1 @@\n-  assert(chunk->sp() == chunk->stack_size(), \"\");\n+  assert(chunk->sp() == chunk->bottom(), \"\");\n@@ -1422,1 +1416,1 @@\n-  assert(chunk->argsize() == 0, \"\");\n+  assert(chunk->is_empty(), \"\");\n@@ -1855,2 +1849,1 @@\n-  chunk->set_sp(chunk->stack_size());\n-  chunk->set_argsize(0);\n+  chunk->set_sp(chunk->bottom());\n@@ -1860,1 +1853,1 @@\n- int ThawBase::remove_top_compiled_frame_from_chunk(stackChunkOop chunk, int &argsize) {\n+int ThawBase::remove_top_compiled_frame_from_chunk(stackChunkOop chunk, int &argsize) {\n@@ -2107,2 +2100,1 @@\n-    chunk->set_argsize(0);\n-    chunk->set_sp(chunk->stack_size());\n+    chunk->set_sp(chunk->bottom());\n@@ -2380,1 +2372,0 @@\n-    assert(chunk->argsize() == 0, \"\");\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":35,"deletions":44,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-int jdk_internal_vm_StackChunk::_argsize_offset;\n+int jdk_internal_vm_StackChunk::_bottom_offset;\n@@ -96,1 +96,1 @@\n-  macro(_argsize_offset, k, vmSymbols::argsize_name(), int_signature,        false);\n+  macro(_bottom_offset,  k, vmSymbols::bottom_name(),  int_signature,        false);\n","filename":"src\/hotspot\/share\/runtime\/continuationJavaClasses.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-  static int _argsize_offset;\n+  static int _bottom_offset;\n@@ -115,2 +115,3 @@\n-  static inline int argsize(oop chunk);\n-  static inline void set_argsize(oop chunk, int value);\n+  static inline int bottom(oop chunk);\n+  static inline void set_bottom(oop chunk, int value);\n+  static inline void set_bottom(HeapWord* chunk, int value);\n","filename":"src\/hotspot\/share\/runtime\/continuationJavaClasses.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -118,0 +118,7 @@\n+inline void jdk_internal_vm_StackChunk::set_bottom(HeapWord* chunk, int value) {\n+  \/\/ Used by StackChunkAllocator before the Object has been finished,\n+  \/\/ so don't cast too oop and use int_field_put in this function.\n+  assert(_bottom_offset != 0, \"must be set\");\n+  *(int*)(((char*)chunk) + _bottom_offset) = (int)value;\n+}\n+\n@@ -119,1 +126,1 @@\n-  return chunk->int_field(_sp_offset);\n+  return chunk->int_field_relaxed(_sp_offset);\n@@ -123,1 +130,1 @@\n-  chunk->int_field_put(_sp_offset, value);\n+  chunk->int_field_put_relaxed(_sp_offset, value);\n@@ -141,2 +148,2 @@\n-inline int jdk_internal_vm_StackChunk::argsize(oop chunk) {\n-  return chunk->int_field(_argsize_offset);\n+inline int jdk_internal_vm_StackChunk::bottom(oop chunk) {\n+  return chunk->int_field(_bottom_offset);\n@@ -145,2 +152,2 @@\n-inline void jdk_internal_vm_StackChunk::set_argsize(oop chunk, int value) {\n-  chunk->int_field_put(_argsize_offset, value);\n+inline void jdk_internal_vm_StackChunk::set_bottom(oop chunk, int value) {\n+  chunk->int_field_put(_bottom_offset, value);\n","filename":"src\/hotspot\/share\/runtime\/continuationJavaClasses.inline.hpp","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"gc\/shared\/memAllocator.hpp\"\n@@ -565,1 +566,1 @@\n-    bool unused;\n+    bool unused = false;\n@@ -1276,0 +1277,1 @@\n+        InternalOOMEMark iom(THREAD);\n@@ -1294,0 +1296,1 @@\n+      InternalOOMEMark iom(THREAD);\n@@ -1297,0 +1300,1 @@\n+      InternalOOMEMark iom(THREAD);\n@@ -1825,1 +1829,1 @@\n-      array->element(i)->free_monitors(thread);\n+      array->element(i)->free_monitors();\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-JVMFlag::Error AllocatePrefetchStepSizeConstraintFunc(intx value, bool verbose) {\n+JVMFlag::Error AllocatePrefetchStepSizeConstraintFunc(int value, bool verbose) {\n@@ -74,1 +74,1 @@\n-                          \"AllocatePrefetchStepSize (\" INTX_FORMAT \") must be multiple of %d\\n\",\n+                          \"AllocatePrefetchStepSize (%d) must be multiple of %d\\n\",\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsCompiler.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-  f(intx,  AllocatePrefetchStepSizeConstraintFunc)      \\\n+  f(int,   AllocatePrefetchStepSizeConstraintFunc)      \\\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsCompiler.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -434,2 +434,0 @@\n-  _monitor_chunks(nullptr),\n-\n@@ -460,0 +458,1 @@\n+  _is_in_internal_oome_mark(false),\n@@ -464,1 +463,0 @@\n-  _in_retryable_allocation(false),\n@@ -1054,7 +1052,1 @@\n-  if (Thread::is_lock_owned(adr)) return true;\n-\n-  for (MonitorChunk* chunk = monitor_chunks(); chunk != nullptr; chunk = chunk->next()) {\n-    if (chunk->contains(adr)) return true;\n-  }\n-\n-  return false;\n+  return is_in_full_stack(adr);\n@@ -1071,16 +1063,0 @@\n-void JavaThread::add_monitor_chunk(MonitorChunk* chunk) {\n-  chunk->set_next(monitor_chunks());\n-  set_monitor_chunks(chunk);\n-}\n-\n-void JavaThread::remove_monitor_chunk(MonitorChunk* chunk) {\n-  guarantee(monitor_chunks() != nullptr, \"must be non empty\");\n-  if (monitor_chunks() == chunk) {\n-    set_monitor_chunks(chunk->next());\n-  } else {\n-    MonitorChunk* prev = monitor_chunks();\n-    while (prev->next() != chunk) prev = prev->next();\n-    prev->set_next(chunk->next());\n-  }\n-}\n-\n@@ -1412,7 +1388,0 @@\n-  if (has_last_Java_frame()) {\n-    \/\/ Traverse the monitor chunks\n-    for (MonitorChunk* chunk = monitor_chunks(); chunk != nullptr; chunk = chunk->next()) {\n-      chunk->oops_do(f);\n-    }\n-  }\n-\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":2,"deletions":33,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+class InternalOOMEMark;\n@@ -196,4 +197,0 @@\n-  MonitorChunk* _monitor_chunks;              \/\/ Contains the off stack monitors\n-                                              \/\/ allocated during deoptimization\n-                                              \/\/ and by JNI_MonitorEnter\/Exit\n-\n@@ -339,0 +336,2 @@\n+  \/\/ In scope of an InternalOOMEMark?\n+  bool _is_in_internal_oome_mark;\n@@ -354,4 +353,0 @@\n-  \/\/ True if in a runtime call from compiled code that will deoptimize\n-  \/\/ and re-execute a failed heap allocation in the interpreter.\n-  bool      _in_retryable_allocation;\n-\n@@ -684,1 +679,1 @@\n-  \/\/ Fast-locking support\n+  \/\/ Stack-locking support (not for LM_LIGHTWEIGHT)\n@@ -725,0 +720,4 @@\n+  \/\/ Is thread in scope of an InternalOOMEMark?\n+  bool is_in_internal_oome_mark() const          { return _is_in_internal_oome_mark; }\n+  void set_is_in_internal_oome_mark(bool b)      { _is_in_internal_oome_mark = b;    }\n+\n@@ -734,3 +733,0 @@\n-  virtual bool in_retryable_allocation() const    { return _in_retryable_allocation; }\n-  void set_in_retryable_allocation(bool b)        { _in_retryable_allocation = b; }\n-\n@@ -889,3 +885,0 @@\n- private:\n-  void set_monitor_chunks(MonitorChunk* monitor_chunks) { _monitor_chunks = monitor_chunks; }\n-\n@@ -893,3 +886,0 @@\n-  MonitorChunk* monitor_chunks() const           { return _monitor_chunks; }\n-  void add_monitor_chunk(MonitorChunk* chunk);\n-  void remove_monitor_chunk(MonitorChunk* chunk);\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":8,"deletions":18,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-  assert(!Universe::heap()->is_gc_active(), \"can't extend the root set during GC\");\n+  assert(!Universe::heap()->is_stw_gc_active(), \"can't extend the root set during GC pause\");\n@@ -110,1 +110,1 @@\n-  assert(!Universe::heap()->is_gc_active(), \"can't extend the root set during GC\");\n+  assert(!Universe::heap()->is_stw_gc_active(), \"can't extend the root set during GC pause\");\n","filename":"src\/hotspot\/share\/runtime\/jniHandles.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-  _next               = nullptr;\n","filename":"src\/hotspot\/share\/runtime\/monitorChunk.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-  MonitorChunk*    _next;\n@@ -47,4 +46,0 @@\n-  \/\/ link operations\n-  MonitorChunk* next() const                { return _next; }\n-  void set_next(MonitorChunk* next)         { _next = next; }\n-\n@@ -57,1 +52,0 @@\n-\n","filename":"src\/hotspot\/share\/runtime\/monitorChunk.hpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -103,1 +103,0 @@\n-Mutex*   OopMapCacheAlloc_lock        = nullptr;\n@@ -352,1 +351,0 @@\n-  MUTEX_DEFL(OopMapCacheAlloc_lock          , PaddedMutex  ,  Threads_lock, true);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,0 @@\n-extern Mutex*   OopMapCacheAlloc_lock;           \/\/ protects allocation of oop_map caches\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1714,0 +1714,7 @@\n+\/\/ create binary file, rewriting existing file if required\n+int os::create_binary_file(const char* path, bool rewrite_existing) {\n+  int oflags = O_WRONLY | O_CREAT WINDOWS_ONLY(| O_BINARY);\n+  oflags |= rewrite_existing ? O_TRUNC : O_EXCL;\n+  return ::open(path, oflags, S_IREAD | S_IWRITE);\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -609,1 +609,1 @@\n-  ATTRIBUTE_NORETURN static void infinite_sleep();\n+  [[noreturn]] static void infinite_sleep();\n@@ -633,1 +633,1 @@\n-  ATTRIBUTE_NORETURN static void exit(int num);\n+  [[noreturn]] static void exit(int num);\n@@ -637,1 +637,1 @@\n-  ATTRIBUTE_NORETURN static void _exit(int num);\n+  [[noreturn]] static void _exit(int num);\n@@ -644,2 +644,2 @@\n-  ATTRIBUTE_NORETURN static void abort(bool dump_core, void *siginfo, const void *context);\n-  ATTRIBUTE_NORETURN static void abort(bool dump_core = true);\n+  [[noreturn]] static void abort(bool dump_core, void *siginfo, const void *context);\n+  [[noreturn]] static void abort(bool dump_core = true);\n@@ -652,1 +652,1 @@\n-  ATTRIBUTE_NORETURN static void die();\n+  [[noreturn]] static void die();\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1101,1 +1101,3 @@\n-    } else if (LockingMode == LM_LEGACY && mark.has_locker() && current->is_lock_owned((address)mark.locker())) {\n+    } else if (LockingMode == LM_LEGACY && mark.has_locker()\n+               && current->is_Java_thread()\n+               && JavaThread::cast(current)->is_lock_owned((address)mark.locker())) {\n@@ -1122,3 +1124,5 @@\n-    \/\/ An async deflation can race after the inflate() call and before we\n-    \/\/ can update the ObjectMonitor's header with the hash value below.\n-    monitor = inflate(current, obj, inflate_cause_hash_code);\n+    \/\/ There's no need to inflate if the mark has already got a monitor.\n+    \/\/ NOTE: an async deflation can race after we get the monitor and\n+    \/\/ before we can update the ObjectMonitor's header with the hash\n+    \/\/ value below.\n+    monitor = mark.has_monitor() ? mark.monitor() : inflate(current, obj, inflate_cause_hash_code);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/cdsConfig.hpp\"\n@@ -106,1 +107,4 @@\n-  _hashStateX = os::random();\n+  \/\/ If we are dumping, keep ihashes constant. Note that during dumping we only\n+  \/\/ ever run one java thread, and no other thread should generate ihashes either,\n+  \/\/ so using a constant seed should work fine.\n+  _hashStateX = CDSConfig::is_dumping_static_archive() ? 0x12345678 : os::random();\n@@ -530,10 +534,0 @@\n-\/\/ We had to move these methods here, because vm threads get into ObjectSynchronizer::enter\n-\/\/ However, there is a note in JavaThread::is_lock_owned() about the VM threads not being\n-\/\/ used for compilation in the future. If that change is made, the need for these methods\n-\/\/ should be revisited, and they should be removed if possible.\n-\n-bool Thread::is_lock_owned(address adr) const {\n-  assert(LockingMode != LM_LIGHTWEIGHT, \"should not be called with new lightweight locking\");\n-  return is_in_full_stack(adr);\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -213,8 +213,0 @@\n-  \/\/ Determines if a heap allocation failure will be retried\n-  \/\/ (e.g., by deoptimizing and re-executing in the interpreter).\n-  \/\/ In this case, the failed allocation must raise\n-  \/\/ Universe::out_of_memory_error_retry() and omit side effects\n-  \/\/ such as JVMTI events and handling -XX:+HeapDumpOnOutOfMemoryError\n-  \/\/ and -XX:OnOutOfMemoryError.\n-  virtual bool in_retryable_allocation() const { return false; }\n-\n@@ -486,3 +478,0 @@\n-  \/\/ Used by fast lock support\n-  virtual bool is_lock_owned(address adr) const;\n-\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+#include \"runtime\/synchronizer.hpp\"\n@@ -51,1 +52,1 @@\n-void vframeArrayElement::free_monitors(JavaThread* jt) {\n+void vframeArrayElement::free_monitors() {\n@@ -55,1 +56,0 @@\n-     jt->remove_monitor_chunk(chunk);\n@@ -75,1 +75,1 @@\n-    Thread* current_thread = Thread::current();\n+    JavaThread* current_thread = JavaThread::current();\n@@ -88,1 +88,0 @@\n-      vf->thread()->add_monitor_chunk(_monitors);\n@@ -98,1 +97,2 @@\n-          assert(monitor->owner() == nullptr || !monitor->owner()->is_unlocked(), \"object must be null or locked\");\n+          assert(monitor->owner() != nullptr, \"monitor owner must not be null\");\n+          assert(!monitor->owner()->is_unlocked(), \"monitor must be locked\");\n@@ -100,0 +100,3 @@\n+          assert(ObjectSynchronizer::current_thread_holds_lock(current_thread, Handle(current_thread, dest->obj())),\n+                 \"should be held, before move_to\");\n+\n@@ -101,0 +104,3 @@\n+\n+          assert(ObjectSynchronizer::current_thread_holds_lock(current_thread, Handle(current_thread, dest->obj())),\n+                 \"should be held, after move_to\");\n@@ -311,0 +317,2 @@\n+    assert(src->obj() != nullptr || ObjectSynchronizer::current_thread_holds_lock(thread, Handle(thread, src->obj())),\n+           \"should be held, before move_to\");\n@@ -312,0 +320,2 @@\n+    assert(src->obj() != nullptr || ObjectSynchronizer::current_thread_holds_lock(thread, Handle(thread, src->obj())),\n+           \"should be held, after move_to\");\n@@ -652,1 +662,0 @@\n-  JavaThread* jt = JavaThread::current();\n@@ -654,1 +663,1 @@\n-     element(index)->free_monitors(jt);\n+     element(index)->free_monitors();\n","filename":"src\/hotspot\/share\/runtime\/vframeArray.cpp","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-  void free_monitors(JavaThread* jt);\n+  void free_monitors();\n","filename":"src\/hotspot\/share\/runtime\/vframeArray.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-    dumper.dump(path, out, level, false, HeapDumper::default_num_of_dump_threads());\n+    dumper.dump(path, out, level);\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3127,0 +3127,12 @@\n+\n+  if (_oome && num_dump_threads > 1) {\n+    \/\/ Each additional parallel writer requires several MB of internal memory\n+    \/\/ (DumpWriter buffer, DumperClassCacheTable, GZipCompressor buffers).\n+    \/\/ For the OOM handling we may already be limited in memory.\n+    \/\/ Lets ensure we have at least 20MB per thread.\n+    julong max_threads = os::free_memory() \/ (20 * M);\n+    if (num_dump_threads > max_threads) {\n+      num_dump_threads = MAX2<uint>(1, (uint)max_threads);\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,2 +63,2 @@\n-  \/\/ parallel_thread_num >= 0 indicates thread numbers of parallel object dump\n-  int dump(const char* path, outputStream* out = nullptr, int compression = -1, bool overwrite = false, uint parallel_thread_num = 1);\n+  \/\/ parallel_thread_num >= 0 indicates thread numbers of parallel object dump.\n+  int dump(const char* path, outputStream* out = nullptr, int compression = -1, bool overwrite = false, uint parallel_thread_num = default_num_of_dump_threads());\n","filename":"src\/hotspot\/share\/services\/heapDumper.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,1 @@\n-\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/services\/mallocLimit.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/services\/mallocLimit.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-#include \"memory\/allocation.hpp\"\n@@ -36,0 +35,1 @@\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,50 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_UTILITY_ATTRIBUTENORETURN_HPP\n-#define SHARE_UTILITY_ATTRIBUTENORETURN_HPP\n-\n-\/\/ Provide a (temporary) macro for the [[noreturn]] attribute.\n-\/\/\n-\/\/ Unfortunately, some older (though still in use) compilers have bugs when\n-\/\/ using [[noreturn]].  For them we use an empty definition for the attribute.\n-\/\/\n-\/\/ Note: This can't be placed in globalDefinitions_xxx.hpp because the\n-\/\/ attribute is used in debug.hpp, which can't include globalDefinitions.hpp.\n-\n-\/\/ clang 12 (and possibly prior) crashes during build if we use [[noreturn]]\n-\/\/ for assertion failure reporting functions.  The problem seems to be fixed\n-\/\/ in clang 13.\n-#ifdef __clang__\n-#if __clang_major__ < 13\n-#define ATTRIBUTE_NORETURN\n-#endif\n-#endif\n-\n-\/\/ All other platforms can use [[noreturn]].\n-#ifndef ATTRIBUTE_NORETURN\n-#define ATTRIBUTE_NORETURN [[noreturn]]\n-#endif\n-\n-#endif \/\/ SHARE_UTILITY_ATTRIBUTENORETURN_HPP\n","filename":"src\/hotspot\/share\/utilities\/attributeNoreturn.hpp","additions":0,"deletions":50,"binary":false,"changes":50,"status":"deleted"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/bitMap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  ChunkedList<T, F>() : _top(_values), _next_used(nullptr), _next_free(nullptr) {}\n+  ChunkedList() : _top(_values), _next_used(nullptr), _next_free(nullptr) {}\n","filename":"src\/hotspot\/share\/utilities\/chunkedList.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"utilities\/attributeNoreturn.hpp\"\n@@ -257,1 +256,1 @@\n-ATTRIBUTE_NORETURN\n+[[noreturn]]\n@@ -260,1 +259,1 @@\n-ATTRIBUTE_NORETURN\n+[[noreturn]]\n@@ -265,1 +264,1 @@\n-ATTRIBUTE_NORETURN\n+[[noreturn]]\n@@ -269,1 +268,1 @@\n-ATTRIBUTE_NORETURN\n+[[noreturn]]\n@@ -273,1 +272,1 @@\n-ATTRIBUTE_NORETURN\n+[[noreturn]]\n@@ -278,3 +277,3 @@\n-ATTRIBUTE_NORETURN void report_should_not_call(const char* file, int line);\n-ATTRIBUTE_NORETURN void report_should_not_reach_here(const char* file, int line);\n-ATTRIBUTE_NORETURN void report_unimplemented(const char* file, int line);\n+[[noreturn]] void report_should_not_call(const char* file, int line);\n+[[noreturn]] void report_should_not_reach_here(const char* file, int line);\n+[[noreturn]] void report_unimplemented(const char* file, int line);\n@@ -282,1 +281,1 @@\n-\/\/ NOT ATTRIBUTE_NORETURN\n+\/\/ NOT [[noreturn]]\n","filename":"src\/hotspot\/share\/utilities\/debug.hpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-  EventLogBase<T>(const char* name, const char* handle, int length = LogEventsBufferEntries):\n+  EventLogBase(const char* name, const char* handle, int length = LogEventsBufferEntries):\n","filename":"src\/hotspot\/share\/utilities\/events.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"utilities\/attributeNoreturn.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include <alloca.h>\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_gcc.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,368 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"memory\/allocation.inline.hpp\"\n+#include \"runtime\/orderAccess.hpp\"\n+#include \"utilities\/istream.hpp\"\n+#include \"utilities\/ostream.hpp\"\n+#include \"utilities\/xmlstream.hpp\"\n+\n+#ifndef ASSERT\n+#define COV(casen) {}\n+#else \/\/ASSERT\n+\/\/ Support for coverage testing.  Used by the gtest.\n+\/* $ sed < istream.cpp '\/^.* COV(\\([A-Z][^)]*\\)).*$\/!d;s\/\/COV_FN(\\1)\/' |\n+     tr '\\12' ' ' | fold -sw72 | sed 's| $||;s|.*|  & \\\\|'\n+  *\/\n+#define DO_COV_CASES(COV_FN) \\\n+  COV_FN(NXT_L) COV_FN(NXT_N) COV_FN(FIB_P) COV_FN(FIB_E) COV_FN(FIB_N) \\\n+  COV_FN(FIB_L) COV_FN(PFB_C) COV_FN(PFB_P) COV_FN(PFB_A) \\\n+  COV_FN(PFB_G) COV_FN(PFB_H) COV_FN(SBC_C) COV_FN(SBC_B) COV_FN(SBC_N) \\\n+  COV_FN(SBC_L) COV_FN(EXB_R) COV_FN(EXB_A)\n+  \/**\/\n+#define COV_COUNT(casename) coverage_case_##casename\n+#define DECLARE_COV_CASE(casename) static int COV_COUNT(casename);\n+DO_COV_CASES(DECLARE_COV_CASE)\n+#undef DECLARE_COV_CASE\n+\n+static int current_coverage_mode = 0;\n+#define COV(casename) {                                 \\\n+    if (current_coverage_mode != 0) {                   \\\n+      COV_COUNT(casename)++;                            \\\n+    }                                                  }\n+#endif \/\/ASSERT\n+\n+bool inputStream::next() {\n+  \/\/ We have to look at the current line first, just in case nobody\n+  \/\/ actually called current_line() or done().\n+  preload();\n+  if (definitely_done()) {\n+    return false;         \/\/ OK to call this->next() after done is true\n+  }\n+  \/\/ current line is at buffer[beg..end]; now skip past its '\\0'\n+  assert(have_current_line(), \"\");\n+\n+  set_buffer_content(_next, _content_end);\n+  if (!need_to_read()) {  \/\/ any next line was already in the buffer\n+    COV(NXT_L);\n+    assert(have_current_line(), \"\");\n+    return true;\n+  } else {                \/\/ go back to the source for more\n+    COV(NXT_N);\n+    return fill_buffer();\n+  }\n+}\n+\n+void inputStream::set_done() {\n+  size_t end = _beg = _end = _content_end;\n+  _next = end + NEXT_PHANTOM;\n+  _line_ending = 0;\n+  assert(definitely_done(), \"\");\n+}\n+\n+void inputStream::set_error(bool error_condition) {\n+  if (error_condition) {\n+    set_done();\n+    _input_state = IState::ERR_STATE;\n+    assert(error(), \"\");\n+  } else if (error()) {\n+    _input_state = definitely_done() ? IState::EOF_STATE : IState::NTR_STATE;\n+  }\n+}\n+\n+void inputStream::clear_buffer() {\n+  _content_end = _beg = _end = _next = 0;\n+  _line_ending = 0;\n+}\n+\n+const char* inputStream::next_content(size_t& next_content_length) const {\n+  assert(is_sane(), \"\");\n+  size_t len = buffered_content_length(false);\n+  next_content_length = len;\n+  return len == 0 ? \"\" : &_buffer[_next];\n+}\n+\n+void inputStream::set_input(inputStream::Input* input) {\n+  clear_buffer();\n+  _input = input;\n+  _input_state = IState::NTR_STATE;\n+}\n+\n+bool inputStream::fill_buffer() {\n+  size_t fill_offset, fill_length;\n+  assert(!definitely_done(), \"\");  \/\/ caller responsibility\n+  while (need_to_read()) {\n+    prepare_to_fill_buffer(fill_offset, fill_length);\n+    if (error())  return false;\n+    assert(fill_length > 0, \"\");\n+    assert(fill_offset < _buffer_size, \"\");\n+    assert(fill_offset + fill_length <= _buffer_size, \"\");\n+    size_t nr = 0;\n+    if (_input != nullptr && _input_state == IState::NTR_STATE) {\n+      nr = _input->read(&_buffer[fill_offset], fill_length);\n+      if (nr == 0)  _input_state = IState::EOF_STATE;  \/\/ do not get EOF twice\n+    }\n+    bool last_partial = false;\n+    if (nr > 0) {\n+      fill_offset += nr;\n+    } else if (_beg == _end) {  \/\/ no partial line, so end it now\n+      \/\/ we hit the end of the file (or there was never anything there)\n+      COV(FIB_P);\n+      assert(!definitely_done(), \"\");\n+      set_done();\n+      assert(definitely_done(), \"\");\n+      return false;\n+    } else {\n+      \/\/ pretend to read a newline, to complete the last partial line\n+      COV(FIB_E);\n+      _buffer[fill_offset++] = '\\n';  \/\/ insert phantom newline\n+      last_partial = true;\n+    }\n+    set_buffer_content(_beg, fill_offset);\n+    assert(!definitely_done(), \"\");\n+    if (need_to_read()) { COV(FIB_N); }\n+    else                { COV(FIB_L); }\n+    if (last_partial) {\n+      assert(have_current_line(), \"\");\n+      _line_ending = 0;\n+      _content_end -= 1;  \/\/ reverse insertion of phantom newline\n+      assert(_next == _content_end + NEXT_PHANTOM, \"\");\n+      assert(have_current_line(), \"\");\n+    }\n+  }\n+  return true;\n+}\n+\n+\/\/ Find some space in the buffer for reading.  If there is already a\n+\/\/ partial line in the buffer, new space must follow it immediately.\n+\/\/ The partial line is between _beg and _end, and no other parts of\n+\/\/ the buffer are in use.\n+void inputStream::prepare_to_fill_buffer(size_t& fill_offset,\n+                                         size_t& fill_length) {\n+  assert(need_to_read(), \"\");  \/\/ _next pointer out of the way\n+  size_t end = _content_end;\n+  if (_beg == end) { \/\/ if no partial line present...\n+    COV(PFB_C);\n+    clear_buffer();\n+    fill_offset = 0;\n+    fill_length = _buffer_size;\n+    return;   \/\/ use the whole buffer\n+  }\n+  \/\/ at this point we have a pending line that needs more input\n+  if (_beg > 0 && (_input != nullptr || end == _buffer_size)) {\n+    COV(PFB_P);\n+    \/\/ compact the buffer by overwriting characters from previous lines\n+    size_t shift_left = _beg;\n+    ::memmove(_buffer, _buffer + shift_left, _content_end - _beg);\n+    _beg -= shift_left;\n+    _end -= shift_left;\n+    _next -= shift_left;\n+    _content_end -= shift_left;\n+    end = _content_end;\n+  }\n+  if (end < _buffer_size) {\n+    COV(PFB_A);\n+    fill_offset = end;\n+    fill_length = _buffer_size - end;\n+    return;   \/\/ use the whole buffer except partial line at the beginning\n+  }\n+  \/\/ the whole buffer contains a partial line, which means we must expand\n+  COV(PFB_G);\n+  size_t new_size = (_buffer_size < BIG_SIZE ? BIG_SIZE\n+                     : _buffer_size + _buffer_size \/ 2);\n+  assert(new_size > _buffer_size, \"\");\n+  if (expand_buffer(new_size)) {\n+    COV(PFB_H);\n+    fill_offset = end;\n+    fill_length = _buffer_size - end;\n+    return;   \/\/ use the expanded buffer, except the partial line\n+  }\n+  \/\/ no recovery from failed allocation; just set the error state and bail\n+  set_error();\n+}\n+\n+\/\/ The only buffer content is between the given offsets.\n+\/\/ Set _beg, _end, _next, and _content_end appropriately.\n+void inputStream::set_buffer_content(size_t content_start,\n+                                     size_t content_end) {\n+  assert(content_end <= _buffer_size, \"\");\n+  assert(content_start <= content_end + NEXT_PHANTOM, \"\");\n+  if (content_start >= content_end) {   \/\/ empty content; clear buffer\n+    COV(SBC_C);\n+    clear_buffer();\n+    return;\n+  }\n+  COV(SBC_B);\n+  size_t content_len = content_end - content_start;\n+  _beg = content_start;\n+  _content_end = content_end;\n+\n+  \/\/ this is where we scan for newlines\n+  char* nl = (char*) memchr(&_buffer[content_start], '\\n', content_len);\n+  if (nl == nullptr) {\n+    COV(SBC_N);\n+    _next = _end = content_end;\n+    _line_ending = 0;\n+    assert(need_to_read(), \"\");\n+  } else {\n+    COV(SBC_L);\n+    *nl = '\\0';  \/\/ so that this->current_line() will work\n+    ++_line_count;\n+    size_t end = nl - &_buffer[0];\n+    _next = end + 1;\n+    assert(_next != _content_end + NEXT_PHANTOM, \"\");\n+    if (end > content_start && nl[-1] == '\\r') { \/\/ yuck\n+      \/\/ again, for this->current_line(), remove '\\r' before '\\n'\n+      nl[-1] = '\\0';\n+      --end;\n+      \/\/ Note: we could treat '\\r' alone as a line ending on some\n+      \/\/ platforms, but that is way too much work.  Newline '\\n' is\n+      \/\/ supported everywhere, and some tools insist on accompanying\n+      \/\/ it with return as well, so we remove that.  But return '\\r'\n+      \/\/ by itself is an obsolete format, and also inconsistent with\n+      \/\/ outputStream, which standarizes on '\\n' and never emits '\\r'.\n+      \/\/ Postel's law suggests that we write '\\n' only and grudgingly\n+      \/\/ accept '\\r' before '\\n'.\n+    }\n+    _end = end;  \/\/ now this->current_line() points to buf[beg..end]\n+    _line_ending = (int)(_next - end);\n+    assert(have_current_line(), \"\");\n+    assert(current_line() == &_buffer[_beg], \"\");\n+    assert(current_line_length() == _end - _beg, \"\");\n+  }\n+}\n+\n+\/\/ Return true iff we expanded the buffer to the given length.\n+bool inputStream::expand_buffer(size_t new_length) {\n+  assert(new_length > _buffer_size, \"\");\n+  char* new_buf = nullptr;\n+  assert(new_length > sizeof(_small_buffer), \"\");\n+  if (_buffer == &_small_buffer[0]) {\n+    \/\/ fresh alloc from c-heap\n+    COV(EXB_A);\n+    new_buf = NEW_C_HEAP_ARRAY(char, new_length, mtInternal);\n+    assert(new_buf != nullptr, \"would have exited VM if OOM\");\n+    if (_content_end > 0) {\n+      assert(_content_end <= _buffer_size, \"\");\n+      ::memcpy(new_buf, _buffer, _content_end);  \/\/ copy only the active content\n+    }\n+  } else {\n+    \/\/ realloc\n+    COV(EXB_R);\n+    new_buf = REALLOC_C_HEAP_ARRAY(char, _buffer, new_length, mtInternal);\n+    assert(new_buf != nullptr, \"would have exited VM if OOM\");\n+  }\n+\n+  if (new_buf == nullptr) {\n+    return false;   \/\/ do not further update _buffer etc.\n+  }\n+  _buffer = new_buf;\n+  _buffer_size = new_length;\n+  return true;\n+}\n+\n+inputStream::~inputStream() {\n+  if (has_c_heap_buffer()) {\n+    FreeHeap(_buffer);\n+    DEBUG_ONLY(_buffer = (char*)((uintptr_t)0xdeadbeef)); \/\/ sanity\n+  }\n+}\n+\n+#ifdef ASSERT\n+void inputStream::dump(const char* what) {\n+  int diff = (int)(_end - _beg);\n+  if (!_buffer || _beg > _buffer_size || _end > _buffer_size)\n+    diff = 0;\n+\n+  bool ntr = (_next == _end),\n+       hcl = (_beg < _content_end && _end < _next),\n+       ddn = (_beg == _content_end && _next > _content_end);\n+  tty->print_cr(\"%s%sistream %s%s%s%s%s [%d<%.*s>%d\/%d..%d] LE=%d,\"\n+                \" B=%llx%s[%d], LN=%d, CH=%d\",\n+                what ? what : \"\", what ? \": \" : \"\",\n+                _buffer == nullptr ? \"U\" : \"\",\n+                ntr ? \"R\" : \"\",\n+                hcl ? \"L\" : \"\",\n+                ddn ? \"D\" : \"\",\n+                (_next < _content_end ? \"\" :\n+                 _next == _content_end ? \"N\" : \"P\"),\n+                (int)_beg,\n+                diff < 0 ? 0 : diff > 10 ? 10 : diff,\n+                _buffer ? &_buffer[_beg] : \"\",\n+                (int)_end, (int)_next, (int)_content_end,\n+                _line_ending,\n+                (unsigned long long)(intptr_t)_buffer,\n+                _buffer == _small_buffer ? \"(SB)\" : \"\",\n+                (int)_buffer_size,\n+                (int)_line_count,\n+                has_c_heap_buffer());\n+  assert(is_sane(), \"\");\n+}\n+#endif\n+\n+#ifdef ASSERT\n+\/\/ More support for coverage testing.\n+int inputStream::coverage_mode(int start,\n+                               int& cases, int& total, int& zeroes) {\n+  int old_mode = current_coverage_mode;\n+  current_coverage_mode = start;\n+  int num_cases = 0, zero_count = 0, case_count = 0;\n+#define COUNT_COV_CASE(casename) {              \\\n+    int tem = COV_COUNT(casename);              \\\n+    case_count += tem;                          \\\n+    if (tem == 0)  ++zero_count;                \\\n+    num_cases++;                                \\\n+  }\n+  DO_COV_CASES(COUNT_COV_CASE)\n+#undef COUNT_COV_CASE\n+  if (start < 0) {\n+    tty->print(\"istream coverage:\");\n+    #define PRINT_COV_CASE(casename) \\\n+      tty->print(\" %s:%d\", #casename, COV_COUNT(casename));\n+    DO_COV_CASES(PRINT_COV_CASE)\n+    tty->cr();\n+    #undef PRINT_COV_CASE\n+    if (zero_count != 0) {\n+      case_count = -case_count;\n+      #define ZERO_COV_CASE(casename)                  \\\n+        if (COV_COUNT(casename) == 0)                  \\\n+          tty->print_cr(\"%s: no coverage for %s\",      \\\n+                        __FILE__, #casename);          \\\n+      DO_COV_CASES(ZERO_COV_CASE)\n+      #undef ZERO_COV_CASE\n+    }\n+  }\n+  if (start >= 2 || start < 0) {\n+    #define CLEAR_COV_CASE(casename) \\\n+       COV_COUNT(casename) = 0;\n+    DO_COV_CASES(CLEAR_COV_CASE)\n+    #undef CLEAR_COV_CASE\n+  }\n+  cases  = num_cases;\n+  total  = case_count;\n+  zeroes = zero_count;\n+  return old_mode;\n+}\n+#endif \/\/ASSERT\n","filename":"src\/hotspot\/share\/utilities\/istream.cpp","additions":368,"deletions":0,"binary":false,"changes":368,"status":"added"},{"patch":"@@ -0,0 +1,386 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_UTILITIES_ISTREAM_HPP\n+#define SHARE_UTILITIES_ISTREAM_HPP\n+\n+#include \"memory\/allocation.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"utilities\/macros.hpp\"\n+#include \"utilities\/ostream.hpp\"\n+\n+\/\/ Input streams for reading line-oriented textual data. These streams\n+\/\/ treat newline '\\n' very differently from all other bytes.  Carriage\n+\/\/ return '\\r' is just another bit of whitespace, although it is\n+\/\/ removed just before newline.\n+\/\/\n+\/\/ Null '\\0' is just a data byte, although it also terminates C\n+\/\/ strings; the `current_line` function adds a null after removing any\n+\/\/ line terminator but does not specially process any nulls embedded\n+\/\/ in the line.\n+\/\/\n+\/\/ There are sizing access functions which allow lines to contain\n+\/\/ null, but the simpler function assumes null termination, and thus\n+\/\/ lines containing null will \"look\" shorter when viewed as C strings.\n+\/\/ Use the sizing access functions if you care about this.\n+\/\/\n+\/\/ Formatting guidelines:\n+\/\/\n+\/\/ Configuration data should be line-oriented.  It should be readable\n+\/\/ by humans (though perhaps with difficulty).  It should be easily\n+\/\/ processed by text editors and by widely available text processing\n+\/\/ tools such as grep, sed, and awk.\n+\/\/\n+\/\/ Configuration data should not require \"compilers\" to generate, if\n+\/\/ possible.  It should be editable by hand, if possible.  In cases\n+\/\/ where binary data is strongly required, pick a binary format\n+\/\/ already native to Hotspot, such as classfile, jar, or jmod.\n+\/\/\n+\/\/ Each line should be separately parseable; the parsing can be ad\n+\/\/ hoc.  For constructs inherently larger than single lines (such as\n+\/\/ complex method configuration information), try to use a structuring\n+\/\/ principle that allows \"leaf\" data to be line-oriented, and delimits\n+\/\/ that data with markup lines of some sort.  Try to pick a\n+\/\/ line-friendly version of a standard format like XML or Markdown.\n+\/\/ JSON is somewhat problematic because there is no line-friendly leaf\n+\/\/ syntax: everything at the leaves must be a quoted string in JSON.\n+\/\/\n+\/\/ Use simple parsing via scanf-like formats for simple applications.\n+\/\/ But, keep in mind that these formats may lose data when applied to\n+\/\/ unusual strings, such as class names that contain spaces, or method\n+\/\/ names that contain punctuation.  For more robust transmission of\n+\/\/ potentially unusual names, consider wrapping them in XML-flavored\n+\/\/ lines like <tag attr='pay load'\/>.\n+\/\/\n+\/\/ Note: Input streams are never MT-safe.\n+\n+class inputStream : public CHeapObjBase {\n+ public:\n+  class Input;\n+\n+ private:\n+  NONCOPYABLE(inputStream);\n+\n+  static constexpr size_t SMALL_SIZE =  240 DEBUG_ONLY(*0 + 10);\n+  static constexpr size_t BIG_SIZE   = 2048 DEBUG_ONLY(*0 + 20);\n+\n+ protected:\n+  \/\/ Values for _input_state, to distinguish some phases of history:\n+  \/\/ Do we need to read more input (NTR)?  Did we see EOF already?\n+  \/\/ Was there an error getting input or allocating buffer space?\n+  enum class IState : int { NTR_STATE, EOF_STATE, ERR_STATE };\n+\n+  \/\/ Named offset for _next relative to _content_end, of phantom '\\n'.\n+  static const int NEXT_PHANTOM = 1;\n+\n+  Input* _input;   \/\/ where the input comes from or else nullptr\n+  IState _input_state;  \/\/ one of {NTR,EOF,ERR}_STATE\n+  char   _line_ending;  \/\/ one of {0,1,2} for \"\", \"\\n\", \"\\r\\n\"\n+  char*  _buffer;       \/\/ scratch buffer holding at least the current line\n+  size_t _buffer_size;  \/\/ allocated size of buffer\n+  size_t _content_end;  \/\/ offset to end of valid contents of buffer\n+  size_t _beg;          \/\/ offset in buffer to start of current line\n+  size_t _end;          \/\/ offset to end of known current line (else content_end)\n+  size_t _next;         \/\/ offset to known start of next line (else =end)\n+  size_t _line_count;   \/\/ increasing non-resettable count of lines read\n+  char   _small_buffer[SMALL_SIZE];  \/\/ stack-allocated buffer for holding lines;\n+                                     \/\/ will switch to C_HEAP allocation when necessary.\n+\n+  bool has_c_heap_buffer() {\n+    return _buffer != &_small_buffer[0];\n+  }\n+\n+  \/\/ Buffer states\n+  \/\/\n+  \/\/ The current line (less any line ending) is always [beg..end).\n+  \/\/ It is always the case that 0 <= beg <= end <= con_end <= buffer_size.\n+  \/\/ When there is a current line buffered, end < next <= 1+con_end.\n+  \/\/ In that case, the value of next is end + max(1, strlen(lend)),\n+  \/\/ where lend is \"\\n\", \"\\r\\n\", or (for a last partial line) \"\".\n+  \/\/ But if next == end, we need to read more input, or observe an EOF.\n+  \/\/\n+  \/\/   beg ==end ==next ==  con_end => nothing buffered, we need to read\n+  \/\/   beg <=end < next <=  con_end => have current line, with terminator\n+  \/\/   beg < end < next ==1+con_end => have partial current line (saw EOF)\n+  \/\/   beg < end ==next ==  con_end => partial line, we need to read\n+  \/\/   beg ==end < next ==1+con_end => definitely done; no more I\/O\n+  \/\/\n+  \/\/ These states are in three mutually exclusive groups:\n+  \/\/   need_to_read()      <= nothing or partial line in buffer\n+  \/\/   have_current_line() <= beg\/end point to valid line (partial only if EOF)\n+  \/\/   definitely_done()   <= consumed all lines && (hit EOF || hit error)\n+  \/\/ These states are internal; the user can only look at next\/done\/error.\n+  \/\/\n+  \/\/ Relative to these states, everything already read from the input\n+  \/\/ before the first byte of the current line is logically present\n+  \/\/ (but not accessible) before _beg, while everything not yet read\n+  \/\/ from the input is after _content_end.  The difference between\n+  \/\/ these two pointers is constant, except when characters change\n+  \/\/ from being in the current line to being (logically) before it,\n+  \/\/ when next is called.\n+\n+  bool is_sane() const {\n+    assert(_buffer != nullptr, \"\");\n+    assert(_content_end <= _buffer_size, \"\");\n+    assert(_beg <= _end && _end <= _content_end, \"\");\n+    assert(_end <= _next && _next <= _content_end + NEXT_PHANTOM, \"\");\n+    assert(_buffer_size == 0 || _next <= _buffer_size, \"\");\n+    return true;\n+  }\n+\n+  bool need_to_read() const {\n+    assert(is_sane(), \"\");\n+    return _next == _end;\n+  }\n+  bool have_current_line() const {\n+    assert(is_sane(), \"\");\n+    \/\/ _beg < _content_end because there is an \\0 (was \\n) at _end,\n+    \/\/ or else it is a non-empty partial line and the \\0 is at\n+    \/\/ _content_end.  In either case, if _end == _next we are\n+    \/\/ still searching for more input.\n+    return (_beg < _content_end && _end < _next);\n+  }\n+  bool definitely_done() const {\n+    assert(is_sane(), \"\");\n+    \/\/ If _beg < _content_end we still have a line of some sort.\n+    \/\/ Otherwise, if _next > _content_end, we have seen EOF or error.\n+    return (_beg == _content_end && _next > _content_end);\n+  }\n+\n+  \/\/ Reset indexes within the buffer to point to no content.\n+  void clear_buffer();\n+\n+  \/\/ Reset indexes within the buffer to point to the given content.\n+  \/\/ This is where we scan for newlines as well.\n+  void set_buffer_content(size_t content_start, size_t content_end);\n+\n+  \/\/ Try to make the buffer bigger.  This may be necessary in order to\n+  \/\/ buffer a very long line.  Returns false if there was an\n+  \/\/ allocation failure.\n+  \/\/\n+  \/\/ On allocation failure, just make do with whatever buffer there\n+  \/\/ was to start with; the caller must check for this condition and\n+  \/\/ avoid buffering more data in the non-expanded buffer.  However,\n+  \/\/ the buffer will always be non-null, so at least one line can be\n+  \/\/ buffered, if it is of normal size.\n+  bool expand_buffer(size_t new_length);\n+\n+  \/\/ Make sure there is at least one line in the buffer, and set\n+  \/\/ _beg\/_end to indicate where it is.  Any content before _beg can\n+  \/\/ be overwritten to make more room in the buffer.  If there is no\n+  \/\/ more input, set the state up to indicate we are done.\n+  bool fill_buffer();\n+\n+  \/\/ Find some room in the buffer so we can call read on it.\n+  \/\/ This might call expand_buffer but will try not to.\n+  \/\/ The assumption is that read already buffers slow I\/O calls.\n+  \/\/ The purpose for the small buffer managed here is to store whole lines,\n+  \/\/ and perhaps edit them in-place.\n+  void prepare_to_fill_buffer(size_t& fill_offset, size_t& fill_length);\n+\n+  \/\/ Quick check for an initially incomplete buffer...\n+  void preload() const {\n+    if (need_to_read()) {\n+      const_cast<inputStream*>(this)->fill_buffer();\n+    }\n+  }\n+\n+  \/\/ How much content is buffered (if any) after the current line?\n+  size_t buffered_content_length(bool include_current) const {\n+    return (include_current       ? _content_end - _beg :\n+            _content_end >= _next ? _content_end - _next : 0);\n+  }\n+\n+  \/\/ Returns a pointer and count to characters buffered after the\n+  \/\/ current line, but not yet read from my input source.  Only useful\n+  \/\/ if you are trying to stack input streams on top of each other\n+  \/\/ somehow.  You can also ask the input source if it thinks it has\n+  \/\/ more bytes.\n+  const char* next_content(size_t& next_content_length) const;\n+\n+ public:\n+  \/\/ Create an empty input stream.\n+  \/\/ Call push_back_input or set_input to configure.\n+  inputStream() :\n+    _input(nullptr),\n+    _input_state(IState::NTR_STATE),\n+    _line_ending(0),\n+    _buffer(&_small_buffer[0]),\n+    _buffer_size(sizeof(_small_buffer)),\n+    _content_end(0),\n+    _beg(0),\n+    _end(0),\n+    _next(0),\n+    _line_count(0) {}\n+\n+  \/\/ Take input from the given source.  Buffer only a modest amount.\n+  inputStream(Input* input)\n+    : inputStream()\n+  {\n+    set_input(input);\n+  }\n+\n+  virtual ~inputStream();\n+\n+  \/\/ Discards any previous input and sets the given input source.\n+  void set_input(Input* input);\n+\n+  \/\/ Returns a pointer to a null terminated mutable copy of the current line.\n+  \/\/ Note that embedded nulls may make the line appear shorter than it really is.\n+  \/\/ This may trigger input activity if there is not enough data buffered.\n+  \/\/ If there are no more lines, return an empty line, statically allocated.\n+  char* current_line() const {\n+    preload();\n+    if (definitely_done())\n+      return (char*)\"\";\n+    return &_buffer[_beg];\n+  }\n+\n+  \/\/ Return the size of the current line, exclusive of any line terminator.\n+  \/\/ If no lines have been read yet, or there are none remaining, return zero.\n+  size_t current_line_length() const {\n+    preload();\n+    return _end - _beg;\n+  }\n+\n+  \/\/ Reports my current input source, if any, else a null pointer.\n+  Input* input() const { return _input; }\n+\n+  \/\/ Discards the current line, gets ready to report the next line.\n+  \/\/ Returns true if there is one, which is always the opposite of done().\n+  \/\/ Fetches input if necessary.\n+  bool next();\n+\n+  \/\/ Reports if there are no more lines.  Fetches input if necessary.\n+  bool done() const  {\n+    preload();\n+    return definitely_done();\n+  }\n+\n+  \/\/ Discard pending input and do not read any more.\n+  \/\/ Takes no action if already done, whether in an error state or not.\n+  void set_done();\n+\n+  \/\/ Reports if this stream has had an error was reported on it.\n+  bool error() const {\n+    return _input_state == IState::ERR_STATE;\n+  }\n+\n+  \/\/ Set this stream done with an error, if the argument is true.\n+  \/\/ If it is false but there is an error condition, clear the error.\n+  \/\/ Otherwise do nothing.\n+  void set_error(bool error_condition = true);\n+\n+  \/\/ lineno is the 1-based ordinal of the current line; it starts at one\n+  size_t lineno() const         { preload(); return _line_count; }\n+\n+  \/\/ Copy the current line to the given output stream.\n+  void print_on(outputStream* out);\n+\n+  \/\/ Copy the current line to the given output stream, and also call cr().\n+  void print_cr_on(outputStream* out) {\n+    print_on(out); out->cr();\n+  }\n+\n+#ifdef ASSERT\n+  void dump(const char* what = nullptr);\n+  static int coverage_mode(int mode, int& cases, int& total, int& zeroes);\n+#else\n+  void dump(const char* what = nullptr) { }\n+#endif\n+\n+\n+  \/\/ Block-oriented input, which treats all bytes equally.\n+  class Input : public CHeapObjBase {\n+  public:\n+    \/\/ Read some characters from an external source into the line buffer.\n+    \/\/ If there are no more, return zero, otherwise return non-zero.\n+    \/\/ It must be OK to call read even after it returns zero.\n+    virtual size_t read(char* buf, size_t size) = 0;\n+    \/\/ Example: read(b,s) { return fread(b, 1, s, _my_fp); }\n+    \/\/ Example: read(b,s) { return 0; } \/\/ never more than the initial buffer\n+  };\n+};\n+\n+\/\/ for reading lines from files\n+class FileInput : public inputStream::Input {\n+  NONCOPYABLE(FileInput);\n+\n+ protected:\n+  fileStream& _fs;\n+  fileStream _private_fs;\n+\n+  \/\/ it does not seem likely there are such file streams around\n+  FileInput(fileStream& fs)\n+    : _fs(fs)\n+  { }\n+\n+ public:\n+  \/\/ just forward all the constructor arguments to the wrapped line-input class\n+  template<typename... Arg>\n+  FileInput(Arg... arg)\n+    : _fs(_private_fs), _private_fs(arg...)\n+  { }\n+\n+  FileInput(const char* file_name)\n+    : FileInput(file_name, \"rt\")\n+  { }\n+\n+  bool is_open() const { return _fs.is_open(); }\n+\n+ protected:\n+  size_t read(char* buf, size_t size) override {\n+    return _fs.read(buf, size);\n+  }\n+};\n+\n+class MemoryInput : public inputStream::Input {\n+  const void* _base;\n+  const size_t _limit;\n+  size_t      _offset;\n+\n+ public:\n+  MemoryInput(const void* base, size_t size,\n+              size_t offset = 0)\n+    : _base(base), _limit(size), _offset(offset) {}\n+\n+  MemoryInput(const char* start)\n+    : MemoryInput(start, 0, strlen(start))\n+  { }\n+\n+ protected:\n+  size_t read(char* buf, size_t size) override {\n+    size_t nr = size;\n+    if (nr > _limit - _offset) {\n+      nr = _limit - _offset;\n+    }\n+    if (nr > 0) {\n+      ::memcpy(buf, (char*)_base + _offset, nr);\n+      _offset += nr;\n+    }\n+    return nr;\n+  }\n+};\n+\n+#endif \/\/ SHARE_UTILITIES_ISTREAM_HPP\n","filename":"src\/hotspot\/share\/utilities\/istream.hpp","additions":386,"deletions":0,"binary":false,"changes":386,"status":"added"},{"patch":"@@ -85,1 +85,1 @@\n-  NONCOPYABLE(LinkedList<E>);\n+  NONCOPYABLE(LinkedList);\n","filename":"src\/hotspot\/share\/utilities\/linkedlist.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -400,1 +400,1 @@\n-  copy[_written] = 0;  \/\/ terminating null\n+  copy[_written] = '\\0';  \/\/ terminating null\n@@ -593,13 +593,0 @@\n-char* fileStream::readln(char *data, int count ) {\n-  char * ret = nullptr;\n-  if (_file != nullptr) {\n-    ret = ::fgets(data, count, _file);\n-    \/\/ Get rid of annoying \\n char only if it is present.\n-    size_t len = ::strlen(data);\n-    if (len > 0 && data[len - 1] == '\\n') {\n-      data[len - 1] = '\\0';\n-    }\n-  }\n-  return ret;\n-}\n-\n@@ -608,2 +595,2 @@\n-    if (_need_close) fclose(_file);\n-    _file      = nullptr;\n+    close();\n+    _file = nullptr;\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":3,"deletions":16,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -245,3 +245,13 @@\n-  size_t read(void *data, size_t size, size_t count) { return _file != nullptr ? ::fread(data, size, count, _file) : 0; }\n-  char* readln(char *data, int count);\n-  int eof() { return _file != nullptr ? feof(_file) : -1; }\n+  \/\/ unlike other classes in this file, fileStream can perform input as well as output\n+  size_t read(void* data, size_t size) {\n+    if (_file == nullptr)  return 0;\n+    return ::fread(data, 1, size, _file);\n+  }\n+  size_t read(void *data, size_t size, size_t count) {\n+    return read(data, size * count);\n+  }\n+  void close() {\n+    if (_file == nullptr || !_need_close)  return;\n+    fclose(_file);\n+    _need_close = false;\n+  }\n@@ -249,1 +259,0 @@\n-  void rewind() { if (_file != nullptr) ::rewind(_file); }\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-  ATTRIBUTE_NORETURN\n+  [[noreturn]]\n@@ -172,1 +172,1 @@\n-  ATTRIBUTE_NORETURN\n+  [[noreturn]]\n@@ -177,1 +177,1 @@\n-  ATTRIBUTE_NORETURN\n+  [[noreturn]]\n@@ -183,1 +183,1 @@\n-  ATTRIBUTE_NORETURN\n+  [[noreturn]]\n@@ -187,1 +187,1 @@\n-  ATTRIBUTE_NORETURN\n+  [[noreturn]]\n@@ -192,1 +192,1 @@\n-  ATTRIBUTE_NORETURN\n+  [[noreturn]]\n","filename":"src\/hotspot\/share\/utilities\/vmError.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -409,1 +409,2 @@\n-             * name of the implementation, and which defaults to \"java.base\". If no\n+             * name of the implementation, and which defaults to the value of\n+             * {@code JdkConsoleProvider.DEFAULT_PROVIDER_MODULE_NAME}. If no\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -195,2 +195,3 @@\n-    \/\/ Holder for the initial value of `in`, set within `initPhase1()`.\n-    private static InputStream initialIn;\n+    \/\/ Initial values of System.in and System.err, set in initPhase1().\n+    private static @Stable InputStream initialIn;\n+    private static @Stable PrintStream initialErr;\n@@ -359,3 +360,0 @@\n-    \/\/ Remember initial System.err. setSecurityManager() warning goes here\n-    private static volatile @Stable PrintStream initialErrStream;\n-\n@@ -421,1 +419,1 @@\n-                initialErrStream.printf(\"\"\"\n+                initialErr.printf(\"\"\"\n@@ -2204,1 +2202,2 @@\n-        setErr0(newPrintStream(fdErr, props.getProperty(\"stderr.encoding\")));\n+        initialErr = newPrintStream(fdErr, props.getProperty(\"stderr.encoding\"));\n+        setErr0(initialErr);\n@@ -2410,2 +2409,0 @@\n-        initialErrStream = System.err;\n-\n@@ -2602,0 +2599,4 @@\n+            public PrintStream initialSystemErr() {\n+                return initialErr;\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+     * @since 23\n@@ -68,0 +69,1 @@\n+     * @since 23\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/ClassSignature.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -215,2 +215,1 @@\n-        labelBinding(breakLabel);\n-        return this;\n+        return labelBinding(breakLabel);\n@@ -256,1 +255,1 @@\n-        branchInstruction(BytecodeHelpers.reverseBranchOpcode(opcode), thenBlock.endLabel());\n+        branch(BytecodeHelpers.reverseBranchOpcode(opcode), thenBlock.endLabel());\n@@ -260,2 +259,1 @@\n-        labelBinding(breakLabel);\n-        return this;\n+        return labelBinding(breakLabel);\n@@ -308,1 +306,1 @@\n-        branchInstruction(BytecodeHelpers.reverseBranchOpcode(opcode), elseBlock.startLabel());\n+        branch(BytecodeHelpers.reverseBranchOpcode(opcode), elseBlock.startLabel());\n@@ -312,1 +310,1 @@\n-            thenBlock.branchInstruction(Opcode.GOTO, thenBlock.breakLabel());\n+            thenBlock.branch(Opcode.GOTO, thenBlock.breakLabel());\n@@ -317,2 +315,1 @@\n-        labelBinding(breakLabel);\n-        return this;\n+        return labelBinding(breakLabel);\n@@ -419,0 +416,1 @@\n+     * @since 23\n@@ -420,3 +418,2 @@\n-    default CodeBuilder loadInstruction(TypeKind tk, int slot) {\n-        with(LoadInstruction.of(tk, slot));\n-        return this;\n+    default CodeBuilder loadLocal(TypeKind tk, int slot) {\n+        return with(LoadInstruction.of(tk, slot));\n@@ -430,0 +427,1 @@\n+     * @since 23\n@@ -431,14 +429,2 @@\n-    default CodeBuilder storeInstruction(TypeKind tk, int slot) {\n-        with(StoreInstruction.of(tk, slot));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an instruction to increment a local variable by a constant\n-     * @param slot the local variable slot\n-     * @param val the increment value\n-     * @return this builder\n-     *\/\n-    default CodeBuilder incrementInstruction(int slot, int val) {\n-        with(IncrementInstruction.of(slot, val));\n-        return this;\n+    default CodeBuilder storeLocal(TypeKind tk, int slot) {\n+        return with(StoreInstruction.of(tk, slot));\n@@ -453,0 +439,1 @@\n+     * @since 23\n@@ -454,27 +441,2 @@\n-    default CodeBuilder branchInstruction(Opcode op, Label target) {\n-        with(BranchInstruction.of(op, target));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an instruction to access a jump table by key match and jump\n-     * @param defaultTarget the default jump target\n-     * @param cases the switch cases\n-     * @return this builder\n-     *\/\n-    default CodeBuilder lookupSwitchInstruction(Label defaultTarget, List<SwitchCase> cases) {\n-        with(LookupSwitchInstruction.of(defaultTarget, cases));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an instruction to access a jump table by index and jump\n-     * @param lowValue the low key value\n-     * @param highValue the high key value\n-     * @param defaultTarget the default jump target\n-     * @param cases the switch cases\n-     * @return this builder\n-     *\/\n-    default CodeBuilder tableSwitchInstruction(int lowValue, int highValue, Label defaultTarget, List<SwitchCase> cases) {\n-        with(TableSwitchInstruction.of(lowValue, highValue, defaultTarget, cases));\n-        return this;\n+    default CodeBuilder branch(Opcode op, Label target) {\n+        return with(BranchInstruction.of(op, target));\n@@ -487,0 +449,1 @@\n+     * @since 23\n@@ -488,12 +451,2 @@\n-    default CodeBuilder returnInstruction(TypeKind tk) {\n-        with(ReturnInstruction.of(tk));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an instruction to throw an exception or error\n-     * @return this builder\n-     *\/\n-    default CodeBuilder throwInstruction() {\n-        with(ThrowInstruction.of());\n-        return this;\n+    default CodeBuilder return_(TypeKind tk) {\n+        return with(ReturnInstruction.of(tk));\n@@ -508,0 +461,1 @@\n+     * @since 23\n@@ -509,3 +463,2 @@\n-    default CodeBuilder fieldInstruction(Opcode opcode, FieldRefEntry ref) {\n-        with(FieldInstruction.of(opcode, ref));\n-        return this;\n+    default CodeBuilder fieldAccess(Opcode opcode, FieldRefEntry ref) {\n+        return with(FieldInstruction.of(opcode, ref));\n@@ -522,0 +475,1 @@\n+     * @since 23\n@@ -523,2 +477,2 @@\n-    default CodeBuilder fieldInstruction(Opcode opcode, ClassDesc owner, String name, ClassDesc type) {\n-        return fieldInstruction(opcode, constantPool().fieldRefEntry(owner, name, type));\n+    default CodeBuilder fieldAccess(Opcode opcode, ClassDesc owner, String name, ClassDesc type) {\n+        return fieldAccess(opcode, constantPool().fieldRefEntry(owner, name, type));\n@@ -533,0 +487,1 @@\n+     * @since 23\n@@ -534,1 +489,1 @@\n-    default CodeBuilder invokeInstruction(Opcode opcode, MemberRefEntry ref) {\n+    default CodeBuilder invoke(Opcode opcode, MemberRefEntry ref) {\n@@ -547,0 +502,1 @@\n+     * @since 23\n@@ -548,2 +504,2 @@\n-    default CodeBuilder invokeInstruction(Opcode opcode, ClassDesc owner, String name, MethodTypeDesc desc, boolean isInterface) {\n-        return invokeInstruction(opcode,\n+    default CodeBuilder invoke(Opcode opcode, ClassDesc owner, String name, MethodTypeDesc desc, boolean isInterface) {\n+        return invoke(opcode,\n@@ -554,101 +510,0 @@\n-    \/**\n-     * Generate an instruction to invoke a dynamically-computed call site\n-     * @param ref the dynamic call site\n-     * @return this builder\n-     *\/\n-    default CodeBuilder invokeDynamicInstruction(InvokeDynamicEntry ref) {\n-        with(InvokeDynamicInstruction.of(ref));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an instruction to invoke a dynamically-computed call site\n-     * @param desc the dynamic call site\n-     * @return this builder\n-     *\/\n-    default CodeBuilder invokeDynamicInstruction(DynamicCallSiteDesc desc) {\n-        MethodHandleEntry bsMethod = handleDescToHandleInfo(constantPool(), (DirectMethodHandleDesc) desc.bootstrapMethod());\n-        var cpArgs = desc.bootstrapArgs();\n-        List<LoadableConstantEntry> bsArguments = new ArrayList<>(cpArgs.length);\n-        for (var constantValue : cpArgs) {\n-            bsArguments.add(BytecodeHelpers.constantEntry(constantPool(), constantValue));\n-        }\n-        BootstrapMethodEntry bm = constantPool().bsmEntry(bsMethod, bsArguments);\n-        NameAndTypeEntry nameAndType = constantPool().nameAndTypeEntry(desc.invocationName(), desc.invocationType());\n-        invokeDynamicInstruction(constantPool().invokeDynamicEntry(bm, nameAndType));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an instruction to create a new object\n-     * @param type the object type\n-     * @return this builder\n-     *\/\n-    default CodeBuilder newObjectInstruction(ClassEntry type) {\n-        with(NewObjectInstruction.of(type));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an instruction to create a new object\n-     * @param type the object type\n-     * @return this builder\n-     * @throws IllegalArgumentException if {@code type} represents a primitive type\n-     *\/\n-    default CodeBuilder newObjectInstruction(ClassDesc type) {\n-        return newObjectInstruction(constantPool().classEntry(type));\n-    }\n-\n-    \/**\n-     * Generate an instruction to create a new array of a primitive type\n-     * @param typeKind the primitive component type\n-     * @return this builder\n-     *\/\n-    default CodeBuilder newPrimitiveArrayInstruction(TypeKind typeKind) {\n-        with(NewPrimitiveArrayInstruction.of(typeKind));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an instruction to create a new array of reference\n-     * @param type the component type\n-     * @return this builder\n-     *\/\n-    default CodeBuilder newReferenceArrayInstruction(ClassEntry type) {\n-        with(NewReferenceArrayInstruction.of(type));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an instruction to create a new array of reference\n-     * @param type the component type\n-     * @return this builder\n-     * @throws IllegalArgumentException if {@code type} represents a primitive type\n-     *\/\n-    default CodeBuilder newReferenceArrayInstruction(ClassDesc type) {\n-        return newReferenceArrayInstruction(constantPool().classEntry(type));\n-    }\n-\n-    \/**\n-     * Generate an instruction to create a new multidimensional array\n-     * @param dimensions the number of dimensions\n-     * @param type the array type\n-     * @return this builder\n-     *\/\n-    default CodeBuilder newMultidimensionalArrayInstruction(int dimensions,\n-                                                            ClassEntry type) {\n-        with(NewMultiArrayInstruction.of(type, dimensions));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an instruction to create a new multidimensional array\n-     * @param dimensions the number of dimensions\n-     * @param type the array type\n-     * @return this builder\n-     *\/\n-    default CodeBuilder newMultidimensionalArrayInstruction(int dimensions,\n-                                                            ClassDesc type) {\n-        return newMultidimensionalArrayInstruction(dimensions, constantPool().classEntry(type));\n-    }\n-\n@@ -659,0 +514,1 @@\n+     * @since 23\n@@ -660,1 +516,1 @@\n-    default CodeBuilder arrayLoadInstruction(TypeKind tk) {\n+    default CodeBuilder arrayLoad(TypeKind tk) {\n@@ -662,2 +518,1 @@\n-        with(ArrayLoadInstruction.of(opcode));\n-        return this;\n+        return with(ArrayLoadInstruction.of(opcode));\n@@ -670,0 +525,1 @@\n+     * @since 23\n@@ -671,1 +527,1 @@\n-    default CodeBuilder arrayStoreInstruction(TypeKind tk) {\n+    default CodeBuilder arrayStore(TypeKind tk) {\n@@ -673,26 +529,1 @@\n-        with(ArrayStoreInstruction.of(opcode));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate a type checking instruction\n-     * @see Opcode.Kind#TYPE_CHECK\n-     * @param opcode the type check instruction opcode\n-     * @param type the type\n-     * @return this builder\n-     *\/\n-    default CodeBuilder typeCheckInstruction(Opcode opcode,\n-                                             ClassEntry type) {\n-        with(TypeCheckInstruction.of(opcode, type));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate a type checking instruction\n-     * @see Opcode.Kind#TYPE_CHECK\n-     * @param opcode the type check instruction opcode\n-     * @param type the type\n-     * @return this builder\n-     *\/\n-    default CodeBuilder typeCheckInstruction(Opcode opcode, ClassDesc type) {\n-        return typeCheckInstruction(opcode, constantPool().classEntry(type));\n+        return with(ArrayStoreInstruction.of(opcode));\n@@ -702,1 +533,1 @@\n-     * Generate a type converting instruction\n+     * Generate instruction(s) to convert {@code fromType} to {@code toType}\n@@ -706,26 +537,60 @@\n-     *\/\n-    default CodeBuilder convertInstruction(TypeKind fromType, TypeKind toType) {\n-        with(ConvertInstruction.of(fromType, toType));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate a stack manipulating instruction\n-     * @param opcode the stack instruction opcode\n-     * @see Opcode.Kind#STACK\n-     * @return this builder\n-     *\/\n-    default CodeBuilder stackInstruction(Opcode opcode) {\n-        with(StackInstruction.of(opcode));\n-        return this;\n-    }\n-\n-    \/**\n-     * Generate an operator instruction\n-     * @see Opcode.Kind#OPERATOR\n-     * @param opcode the operator instruction opcode\n-     * @return this builder\n-     *\/\n-    default CodeBuilder operatorInstruction(Opcode opcode) {\n-        with(OperatorInstruction.of(opcode));\n-        return this;\n+     * @throws IllegalArgumentException for conversions of {@code VoidType} or {@code ReferenceType}\n+     * @since 23\n+     *\/\n+    default CodeBuilder conversion(TypeKind fromType, TypeKind toType) {\n+        return switch (fromType) {\n+            case IntType, ByteType, CharType, ShortType, BooleanType ->\n+                    switch (toType) {\n+                        case IntType -> this;\n+                        case LongType -> i2l();\n+                        case DoubleType -> i2d();\n+                        case FloatType -> i2f();\n+                        case ByteType -> i2b();\n+                        case CharType -> i2c();\n+                        case ShortType -> i2s();\n+                        case BooleanType -> iconst_1().iand();\n+                        case VoidType, ReferenceType ->\n+                            throw new IllegalArgumentException(String.format(\"convert %s -> %s\", fromType, toType));\n+                    };\n+            case LongType ->\n+                    switch (toType) {\n+                        case IntType -> l2i();\n+                        case LongType -> this;\n+                        case DoubleType -> l2d();\n+                        case FloatType -> l2f();\n+                        case ByteType -> l2i().i2b();\n+                        case CharType -> l2i().i2c();\n+                        case ShortType -> l2i().i2s();\n+                        case BooleanType -> l2i().iconst_1().iand();\n+                        case VoidType, ReferenceType ->\n+                            throw new IllegalArgumentException(String.format(\"convert %s -> %s\", fromType, toType));\n+                    };\n+            case DoubleType ->\n+                    switch (toType) {\n+                        case IntType -> d2i();\n+                        case LongType -> d2l();\n+                        case DoubleType -> this;\n+                        case FloatType -> d2f();\n+                        case ByteType -> d2i().i2b();\n+                        case CharType -> d2i().i2c();\n+                        case ShortType -> d2i().i2s();\n+                        case BooleanType -> d2i().iconst_1().iand();\n+                        case VoidType, ReferenceType ->\n+                            throw new IllegalArgumentException(String.format(\"convert %s -> %s\", fromType, toType));\n+                    };\n+            case FloatType ->\n+                    switch (toType) {\n+                        case IntType -> f2i();\n+                        case LongType -> f2l();\n+                        case DoubleType -> f2d();\n+                        case FloatType -> this;\n+                        case ByteType -> f2i().i2b();\n+                        case CharType -> f2i().i2c();\n+                        case ShortType -> f2i().i2s();\n+                        case BooleanType -> f2i().iconst_1().iand();\n+                        case VoidType, ReferenceType ->\n+                            throw new IllegalArgumentException(String.format(\"convert %s -> %s\", fromType, toType));\n+                    };\n+            case VoidType, ReferenceType ->\n+                throw new IllegalArgumentException(String.format(\"convert %s -> %s\", fromType, toType));\n+        };\n@@ -740,0 +605,1 @@\n+     * @since 23\n@@ -741,1 +607,1 @@\n-    default CodeBuilder constantInstruction(Opcode opcode, ConstantDesc value) {\n+    default CodeBuilder loadConstant(Opcode opcode, ConstantDesc value) {\n@@ -754,0 +620,1 @@\n+     * @since 23\n@@ -755,1 +622,1 @@\n-    default CodeBuilder constantInstruction(ConstantDesc value) {\n+    default CodeBuilder loadConstant(ConstantDesc value) {\n@@ -788,20 +655,0 @@\n-    \/**\n-     * Generate a monitor instruction\n-     * @see Opcode.Kind#MONITOR\n-     * @param opcode the monitor instruction opcode\n-     * @return this builder\n-     *\/\n-    default CodeBuilder monitorInstruction(Opcode opcode) {\n-        with(MonitorInstruction.of(opcode));\n-        return null;\n-    }\n-\n-    \/**\n-     * Generate a do nothing instruction\n-     * @return this builder\n-     *\/\n-    default CodeBuilder nopInstruction() {\n-        with(NopInstruction.of());\n-        return this;\n-    }\n-\n@@ -813,1 +660,1 @@\n-        return nopInstruction();\n+        return with(NopInstruction.of());\n@@ -834,2 +681,1 @@\n-        with((LabelImpl) label);\n-        return this;\n+        return with((LabelImpl) label);\n@@ -844,2 +690,1 @@\n-        with(LineNumber.of(line));\n-        return this;\n+        return with(LineNumber.of(line));\n@@ -857,2 +702,1 @@\n-        with(ExceptionCatch.of(handler, start, end, Optional.of(catchType)));\n-        return this;\n+        return with(ExceptionCatch.of(handler, start, end, Optional.of(catchType)));\n@@ -870,2 +714,1 @@\n-        with(ExceptionCatch.of(handler, start, end, catchType));\n-        return this;\n+        return with(ExceptionCatch.of(handler, start, end, catchType));\n@@ -895,2 +738,1 @@\n-        with(ExceptionCatch.of(handler, start, end));\n-        return this;\n+        return with(ExceptionCatch.of(handler, start, end));\n@@ -909,2 +751,1 @@\n-        with(CharacterRange.of(startScope, endScope, characterRangeStart, characterRangeEnd, flags));\n-        return this;\n+        return with(CharacterRange.of(startScope, endScope, characterRangeStart, characterRangeEnd, flags));\n@@ -923,2 +764,1 @@\n-        with(LocalVariable.of(slot, nameEntry, descriptorEntry, startScope, endScope));\n-        return this;\n+        return with(LocalVariable.of(slot, nameEntry, descriptorEntry, startScope, endScope));\n@@ -953,2 +793,1 @@\n-        with(LocalVariableType.of(slot, nameEntry, signatureEntry, startScope, endScope));\n-        return this;\n+        return with(LocalVariableType.of(slot, nameEntry, signatureEntry, startScope, endScope));\n@@ -988,1 +827,1 @@\n-        return arrayLoadInstruction(TypeKind.ReferenceType);\n+        return arrayLoad(TypeKind.ReferenceType);\n@@ -996,1 +835,1 @@\n-        return arrayStoreInstruction(TypeKind.ReferenceType);\n+        return arrayStore(TypeKind.ReferenceType);\n@@ -1005,1 +844,1 @@\n-        return loadInstruction(TypeKind.ReferenceType, slot);\n+        return loadLocal(TypeKind.ReferenceType, slot);\n@@ -1014,1 +853,1 @@\n-        return newReferenceArrayInstruction(classEntry);\n+        return with(NewReferenceArrayInstruction.of(classEntry));\n@@ -1024,1 +863,1 @@\n-        return newReferenceArrayInstruction(constantPool().classEntry(className));\n+        return anewarray(constantPool().classEntry(className));\n@@ -1032,1 +871,1 @@\n-        return returnInstruction(TypeKind.ReferenceType);\n+        return return_(TypeKind.ReferenceType);\n@@ -1040,1 +879,1 @@\n-        return operatorInstruction(Opcode.ARRAYLENGTH);\n+        return with(OperatorInstruction.of(Opcode.ARRAYLENGTH));\n@@ -1049,1 +888,1 @@\n-        return storeInstruction(TypeKind.ReferenceType, slot);\n+        return storeLocal(TypeKind.ReferenceType, slot);\n@@ -1057,1 +896,1 @@\n-        return throwInstruction();\n+        return with(ThrowInstruction.of());\n@@ -1065,1 +904,1 @@\n-        return arrayLoadInstruction(TypeKind.ByteType);\n+        return arrayLoad(TypeKind.ByteType);\n@@ -1073,1 +912,1 @@\n-        return arrayStoreInstruction(TypeKind.ByteType);\n+        return arrayStore(TypeKind.ByteType);\n@@ -1082,1 +921,1 @@\n-        return constantInstruction(Opcode.BIPUSH, b);\n+        return loadConstant(Opcode.BIPUSH, b);\n@@ -1090,1 +929,1 @@\n-        return arrayLoadInstruction(TypeKind.CharType);\n+        return arrayLoad(TypeKind.CharType);\n@@ -1098,1 +937,1 @@\n-        return arrayStoreInstruction(TypeKind.CharType);\n+        return arrayStore(TypeKind.CharType);\n@@ -1107,1 +946,1 @@\n-        return typeCheckInstruction(Opcode.CHECKCAST, type);\n+        return with(TypeCheckInstruction.of(Opcode.CHECKCAST, type));\n@@ -1117,1 +956,1 @@\n-        return typeCheckInstruction(Opcode.CHECKCAST, type);\n+        return checkcast(constantPool().classEntry(type));\n@@ -1125,1 +964,1 @@\n-        return convertInstruction(TypeKind.DoubleType, TypeKind.FloatType);\n+        return with(ConvertInstruction.of(Opcode.D2F));\n@@ -1133,1 +972,1 @@\n-        return convertInstruction(TypeKind.DoubleType, TypeKind.IntType);\n+        return with(ConvertInstruction.of(Opcode.D2I));\n@@ -1141,1 +980,1 @@\n-        return convertInstruction(TypeKind.DoubleType, TypeKind.LongType);\n+        return with(ConvertInstruction.of(Opcode.D2L));\n@@ -1149,1 +988,1 @@\n-        return operatorInstruction(Opcode.DADD);\n+        return with(OperatorInstruction.of(Opcode.DADD));\n@@ -1157,1 +996,1 @@\n-        return arrayLoadInstruction(TypeKind.DoubleType);\n+        return arrayLoad(TypeKind.DoubleType);\n@@ -1165,1 +1004,1 @@\n-        return arrayStoreInstruction(TypeKind.DoubleType);\n+        return arrayStore(TypeKind.DoubleType);\n@@ -1173,1 +1012,1 @@\n-        return operatorInstruction(Opcode.DCMPG);\n+        return with(OperatorInstruction.of(Opcode.DCMPG));\n@@ -1181,1 +1020,1 @@\n-        return operatorInstruction(Opcode.DCMPL);\n+        return with(OperatorInstruction.of(Opcode.DCMPL));\n@@ -1205,1 +1044,1 @@\n-        return operatorInstruction(Opcode.DDIV);\n+        return with(OperatorInstruction.of(Opcode.DDIV));\n@@ -1214,1 +1053,1 @@\n-        return loadInstruction(TypeKind.DoubleType, slot);\n+        return loadLocal(TypeKind.DoubleType, slot);\n@@ -1222,1 +1061,1 @@\n-        return operatorInstruction(Opcode.DMUL);\n+        return with(OperatorInstruction.of(Opcode.DMUL));\n@@ -1230,1 +1069,1 @@\n-        return operatorInstruction(Opcode.DNEG);\n+        return with(OperatorInstruction.of(Opcode.DNEG));\n@@ -1238,1 +1077,1 @@\n-        return operatorInstruction(Opcode.DREM);\n+        return with(OperatorInstruction.of(Opcode.DREM));\n@@ -1246,1 +1085,1 @@\n-        return returnInstruction(TypeKind.DoubleType);\n+        return return_(TypeKind.DoubleType);\n@@ -1255,1 +1094,1 @@\n-        return storeInstruction(TypeKind.DoubleType, slot);\n+        return storeLocal(TypeKind.DoubleType, slot);\n@@ -1263,1 +1102,1 @@\n-        return operatorInstruction(Opcode.DSUB);\n+        return with(OperatorInstruction.of(Opcode.DSUB));\n@@ -1271,1 +1110,1 @@\n-        return stackInstruction(Opcode.DUP);\n+        return with(StackInstruction.of(Opcode.DUP));\n@@ -1279,1 +1118,1 @@\n-        return stackInstruction(Opcode.DUP2);\n+        return with(StackInstruction.of(Opcode.DUP2));\n@@ -1288,1 +1127,1 @@\n-        return stackInstruction(Opcode.DUP2_X1);\n+        return with(StackInstruction.of(Opcode.DUP2_X1));\n@@ -1297,1 +1136,1 @@\n-        return stackInstruction(Opcode.DUP2_X2);\n+        return with(StackInstruction.of(Opcode.DUP2_X2));\n@@ -1305,1 +1144,1 @@\n-        return stackInstruction(Opcode.DUP_X1);\n+        return with(StackInstruction.of(Opcode.DUP_X1));\n@@ -1313,1 +1152,1 @@\n-        return stackInstruction(Opcode.DUP_X2);\n+        return with(StackInstruction.of(Opcode.DUP_X2));\n@@ -1321,1 +1160,1 @@\n-        return convertInstruction(TypeKind.FloatType, TypeKind.DoubleType);\n+        return with(ConvertInstruction.of(Opcode.F2D));\n@@ -1329,1 +1168,1 @@\n-        return convertInstruction(TypeKind.FloatType, TypeKind.IntType);\n+        return with(ConvertInstruction.of(Opcode.F2I));\n@@ -1337,1 +1176,1 @@\n-        return convertInstruction(TypeKind.FloatType, TypeKind.LongType);\n+        return with(ConvertInstruction.of(Opcode.F2L));\n@@ -1345,1 +1184,1 @@\n-        return operatorInstruction(Opcode.FADD);\n+        return with(OperatorInstruction.of(Opcode.FADD));\n@@ -1353,1 +1192,1 @@\n-        return arrayLoadInstruction(TypeKind.FloatType);\n+        return arrayLoad(TypeKind.FloatType);\n@@ -1361,1 +1200,1 @@\n-        return arrayStoreInstruction(TypeKind.FloatType);\n+        return arrayStore(TypeKind.FloatType);\n@@ -1369,1 +1208,1 @@\n-        return operatorInstruction(Opcode.FCMPG);\n+        return with(OperatorInstruction.of(Opcode.FCMPG));\n@@ -1377,1 +1216,1 @@\n-        return operatorInstruction(Opcode.FCMPL);\n+        return with(OperatorInstruction.of(Opcode.FCMPL));\n@@ -1409,1 +1248,1 @@\n-        return operatorInstruction(Opcode.FDIV);\n+        return with(OperatorInstruction.of(Opcode.FDIV));\n@@ -1418,1 +1257,1 @@\n-        return loadInstruction(TypeKind.FloatType, slot);\n+        return loadLocal(TypeKind.FloatType, slot);\n@@ -1426,1 +1265,1 @@\n-        return operatorInstruction(Opcode.FMUL);\n+        return with(OperatorInstruction.of(Opcode.FMUL));\n@@ -1434,1 +1273,1 @@\n-        return operatorInstruction(Opcode.FNEG);\n+        return with(OperatorInstruction.of(Opcode.FNEG));\n@@ -1442,1 +1281,1 @@\n-        return operatorInstruction(Opcode.FREM);\n+        return with(OperatorInstruction.of(Opcode.FREM));\n@@ -1450,1 +1289,1 @@\n-        return returnInstruction(TypeKind.FloatType);\n+        return return_(TypeKind.FloatType);\n@@ -1459,1 +1298,1 @@\n-        return storeInstruction(TypeKind.FloatType, slot);\n+        return storeLocal(TypeKind.FloatType, slot);\n@@ -1467,1 +1306,1 @@\n-        return operatorInstruction(Opcode.FSUB);\n+        return with(OperatorInstruction.of(Opcode.FSUB));\n@@ -1476,1 +1315,1 @@\n-        return fieldInstruction(Opcode.GETFIELD, ref);\n+        return fieldAccess(Opcode.GETFIELD, ref);\n@@ -1488,1 +1327,1 @@\n-        return fieldInstruction(Opcode.GETFIELD, owner, name, type);\n+        return fieldAccess(Opcode.GETFIELD, owner, name, type);\n@@ -1497,1 +1336,1 @@\n-        return fieldInstruction(Opcode.GETSTATIC, ref);\n+        return fieldAccess(Opcode.GETSTATIC, ref);\n@@ -1509,1 +1348,1 @@\n-        return fieldInstruction(Opcode.GETSTATIC, owner, name, type);\n+        return fieldAccess(Opcode.GETSTATIC, owner, name, type);\n@@ -1518,1 +1357,1 @@\n-        return branchInstruction(Opcode.GOTO, target);\n+        return branch(Opcode.GOTO, target);\n@@ -1527,1 +1366,1 @@\n-        return branchInstruction(Opcode.GOTO_W, target);\n+        return branch(Opcode.GOTO_W, target);\n@@ -1535,1 +1374,1 @@\n-        return convertInstruction(TypeKind.IntType, TypeKind.ByteType);\n+        return with(ConvertInstruction.of(Opcode.I2B));\n@@ -1543,1 +1382,1 @@\n-        return convertInstruction(TypeKind.IntType, TypeKind.CharType);\n+        return with(ConvertInstruction.of(Opcode.I2C));\n@@ -1551,1 +1390,1 @@\n-        return convertInstruction(TypeKind.IntType, TypeKind.DoubleType);\n+        return with(ConvertInstruction.of(Opcode.I2D));\n@@ -1559,1 +1398,1 @@\n-        return convertInstruction(TypeKind.IntType, TypeKind.FloatType);\n+        return with(ConvertInstruction.of(Opcode.I2F));\n@@ -1567,1 +1406,1 @@\n-        return convertInstruction(TypeKind.IntType, TypeKind.LongType);\n+        return with(ConvertInstruction.of(Opcode.I2L));\n@@ -1575,1 +1414,1 @@\n-        return convertInstruction(TypeKind.IntType, TypeKind.ShortType);\n+        return with(ConvertInstruction.of(Opcode.I2S));\n@@ -1583,1 +1422,1 @@\n-        return operatorInstruction(Opcode.IADD);\n+        return with(OperatorInstruction.of(Opcode.IADD));\n@@ -1591,1 +1430,1 @@\n-        return arrayLoadInstruction(TypeKind.IntType);\n+        return arrayLoad(TypeKind.IntType);\n@@ -1599,1 +1438,1 @@\n-        return operatorInstruction(Opcode.IAND);\n+        return with(OperatorInstruction.of(Opcode.IAND));\n@@ -1607,1 +1446,1 @@\n-        return arrayStoreInstruction(TypeKind.IntType);\n+        return arrayStore(TypeKind.IntType);\n@@ -1671,1 +1510,1 @@\n-        return operatorInstruction(Opcode.IDIV);\n+        return with(OperatorInstruction.of(Opcode.IDIV));\n@@ -1680,1 +1519,1 @@\n-        return branchInstruction(Opcode.IF_ACMPEQ, target);\n+        return branch(Opcode.IF_ACMPEQ, target);\n@@ -1689,1 +1528,1 @@\n-        return branchInstruction(Opcode.IF_ACMPNE, target);\n+        return branch(Opcode.IF_ACMPNE, target);\n@@ -1698,1 +1537,1 @@\n-        return branchInstruction(Opcode.IF_ICMPEQ, target);\n+        return branch(Opcode.IF_ICMPEQ, target);\n@@ -1707,1 +1546,1 @@\n-        return branchInstruction(Opcode.IF_ICMPGE, target);\n+        return branch(Opcode.IF_ICMPGE, target);\n@@ -1716,1 +1555,1 @@\n-        return branchInstruction(Opcode.IF_ICMPGT, target);\n+        return branch(Opcode.IF_ICMPGT, target);\n@@ -1725,1 +1564,1 @@\n-        return branchInstruction(Opcode.IF_ICMPLE, target);\n+        return branch(Opcode.IF_ICMPLE, target);\n@@ -1734,1 +1573,1 @@\n-        return branchInstruction(Opcode.IF_ICMPLT, target);\n+        return branch(Opcode.IF_ICMPLT, target);\n@@ -1743,1 +1582,1 @@\n-        return branchInstruction(Opcode.IF_ICMPNE, target);\n+        return branch(Opcode.IF_ICMPNE, target);\n@@ -1752,1 +1591,1 @@\n-        return branchInstruction(Opcode.IFNONNULL, target);\n+        return branch(Opcode.IFNONNULL, target);\n@@ -1761,1 +1600,1 @@\n-        return branchInstruction(Opcode.IFNULL, target);\n+        return branch(Opcode.IFNULL, target);\n@@ -1770,1 +1609,1 @@\n-        return branchInstruction(Opcode.IFEQ, target);\n+        return branch(Opcode.IFEQ, target);\n@@ -1779,1 +1618,1 @@\n-        return branchInstruction(Opcode.IFGE, target);\n+        return branch(Opcode.IFGE, target);\n@@ -1788,1 +1627,1 @@\n-        return branchInstruction(Opcode.IFGT, target);\n+        return branch(Opcode.IFGT, target);\n@@ -1797,1 +1636,1 @@\n-        return branchInstruction(Opcode.IFLE, target);\n+        return branch(Opcode.IFLE, target);\n@@ -1806,1 +1645,1 @@\n-        return branchInstruction(Opcode.IFLT, target);\n+        return branch(Opcode.IFLT, target);\n@@ -1815,1 +1654,1 @@\n-        return branchInstruction(Opcode.IFNE, target);\n+        return branch(Opcode.IFNE, target);\n@@ -1825,1 +1664,1 @@\n-        return incrementInstruction(slot, val);\n+        return with(IncrementInstruction.of(slot, val));\n@@ -1834,1 +1673,1 @@\n-        return loadInstruction(TypeKind.IntType, slot);\n+        return loadLocal(TypeKind.IntType, slot);\n@@ -1842,1 +1681,1 @@\n-        return operatorInstruction(Opcode.IMUL);\n+        return with(OperatorInstruction.of(Opcode.IMUL));\n@@ -1850,1 +1689,1 @@\n-        return operatorInstruction(Opcode.INEG);\n+        return with(OperatorInstruction.of(Opcode.INEG));\n@@ -1857,0 +1696,1 @@\n+     * @since 23\n@@ -1858,2 +1698,2 @@\n-    default CodeBuilder instanceof_(ClassEntry target) {\n-        return typeCheckInstruction(Opcode.INSTANCEOF, target);\n+    default CodeBuilder instanceOf(ClassEntry target) {\n+        return with(TypeCheckInstruction.of(Opcode.INSTANCEOF, target));\n@@ -1867,0 +1707,1 @@\n+     * @since 23\n@@ -1868,2 +1709,2 @@\n-    default CodeBuilder instanceof_(ClassDesc target) {\n-        return typeCheckInstruction(Opcode.INSTANCEOF, constantPool().classEntry(target));\n+    default CodeBuilder instanceOf(ClassDesc target) {\n+        return instanceOf(constantPool().classEntry(target));\n@@ -1878,1 +1719,1 @@\n-        return invokeDynamicInstruction(ref);\n+        return with(InvokeDynamicInstruction.of(ref));\n@@ -1887,1 +1728,9 @@\n-        return invokeDynamicInstruction(ref);\n+        MethodHandleEntry bsMethod = handleDescToHandleInfo(constantPool(), (DirectMethodHandleDesc) ref.bootstrapMethod());\n+        var cpArgs = ref.bootstrapArgs();\n+        List<LoadableConstantEntry> bsArguments = new ArrayList<>(cpArgs.length);\n+        for (var constantValue : cpArgs) {\n+            bsArguments.add(BytecodeHelpers.constantEntry(constantPool(), constantValue));\n+        }\n+        BootstrapMethodEntry bm = constantPool().bsmEntry(bsMethod, bsArguments);\n+        NameAndTypeEntry nameAndType = constantPool().nameAndTypeEntry(ref.invocationName(), ref.invocationType());\n+        return invokedynamic(constantPool().invokeDynamicEntry(bm, nameAndType));\n@@ -1896,1 +1745,1 @@\n-        return invokeInstruction(Opcode.INVOKEINTERFACE, ref);\n+        return invoke(Opcode.INVOKEINTERFACE, ref);\n@@ -1908,1 +1757,1 @@\n-        return invokeInstruction(Opcode.INVOKEINTERFACE, constantPool().interfaceMethodRefEntry(owner, name, type));\n+        return invoke(Opcode.INVOKEINTERFACE, constantPool().interfaceMethodRefEntry(owner, name, type));\n@@ -1918,1 +1767,1 @@\n-        return invokeInstruction(Opcode.INVOKESPECIAL, ref);\n+        return invoke(Opcode.INVOKESPECIAL, ref);\n@@ -1928,1 +1777,1 @@\n-        return invokeInstruction(Opcode.INVOKESPECIAL, ref);\n+        return invoke(Opcode.INVOKESPECIAL, ref);\n@@ -1941,1 +1790,1 @@\n-        return invokeInstruction(Opcode.INVOKESPECIAL, owner, name, type, false);\n+        return invoke(Opcode.INVOKESPECIAL, owner, name, type, false);\n@@ -1955,1 +1804,1 @@\n-        return invokeInstruction(Opcode.INVOKESPECIAL, owner, name, type, isInterface);\n+        return invoke(Opcode.INVOKESPECIAL, owner, name, type, isInterface);\n@@ -1964,1 +1813,1 @@\n-        return invokeInstruction(Opcode.INVOKESTATIC, ref);\n+        return invoke(Opcode.INVOKESTATIC, ref);\n@@ -1973,1 +1822,1 @@\n-        return invokeInstruction(Opcode.INVOKESTATIC, ref);\n+        return invoke(Opcode.INVOKESTATIC, ref);\n@@ -1985,1 +1834,1 @@\n-        return invokeInstruction(Opcode.INVOKESTATIC, owner, name, type, false);\n+        return invoke(Opcode.INVOKESTATIC, owner, name, type, false);\n@@ -1998,1 +1847,1 @@\n-        return invokeInstruction(Opcode.INVOKESTATIC, owner, name, type, isInterface);\n+        return invoke(Opcode.INVOKESTATIC, owner, name, type, isInterface);\n@@ -2007,1 +1856,1 @@\n-        return invokeInstruction(Opcode.INVOKEVIRTUAL, ref);\n+        return invoke(Opcode.INVOKEVIRTUAL, ref);\n@@ -2019,1 +1868,1 @@\n-        return invokeInstruction(Opcode.INVOKEVIRTUAL, owner, name, type, false);\n+        return invoke(Opcode.INVOKEVIRTUAL, owner, name, type, false);\n@@ -2027,1 +1876,1 @@\n-        return operatorInstruction(Opcode.IOR);\n+        return with(OperatorInstruction.of(Opcode.IOR));\n@@ -2035,1 +1884,1 @@\n-        return operatorInstruction(Opcode.IREM);\n+        return with(OperatorInstruction.of(Opcode.IREM));\n@@ -2043,1 +1892,1 @@\n-        return returnInstruction(TypeKind.IntType);\n+        return return_(TypeKind.IntType);\n@@ -2051,1 +1900,1 @@\n-        return operatorInstruction(Opcode.ISHL);\n+        return with(OperatorInstruction.of(Opcode.ISHL));\n@@ -2059,1 +1908,1 @@\n-        return operatorInstruction(Opcode.ISHR);\n+        return with(OperatorInstruction.of(Opcode.ISHR));\n@@ -2068,1 +1917,1 @@\n-        return storeInstruction(TypeKind.IntType, slot);\n+        return storeLocal(TypeKind.IntType, slot);\n@@ -2076,1 +1925,1 @@\n-        return operatorInstruction(Opcode.ISUB);\n+        return with(OperatorInstruction.of(Opcode.ISUB));\n@@ -2084,1 +1933,1 @@\n-        return operatorInstruction(Opcode.IUSHR);\n+        return with(OperatorInstruction.of(Opcode.IUSHR));\n@@ -2092,1 +1941,1 @@\n-        return operatorInstruction(Opcode.IXOR);\n+        return with(OperatorInstruction.of(Opcode.IXOR));\n@@ -2102,1 +1951,1 @@\n-        return lookupSwitchInstruction(defaultTarget, cases);\n+        return with(LookupSwitchInstruction.of(defaultTarget, cases));\n@@ -2110,1 +1959,1 @@\n-        return convertInstruction(TypeKind.LongType, TypeKind.DoubleType);\n+        return with(ConvertInstruction.of(Opcode.L2D));\n@@ -2118,1 +1967,1 @@\n-        return convertInstruction(TypeKind.LongType, TypeKind.FloatType);\n+        return with(ConvertInstruction.of(Opcode.L2F));\n@@ -2126,1 +1975,1 @@\n-        return convertInstruction(TypeKind.LongType, TypeKind.IntType);\n+        return with(ConvertInstruction.of(Opcode.L2I));\n@@ -2134,1 +1983,1 @@\n-        return operatorInstruction(Opcode.LADD);\n+        return with(OperatorInstruction.of(Opcode.LADD));\n@@ -2142,1 +1991,1 @@\n-        return arrayLoadInstruction(TypeKind.LongType);\n+        return arrayLoad(TypeKind.LongType);\n@@ -2150,1 +1999,1 @@\n-        return operatorInstruction(Opcode.LAND);\n+        return with(OperatorInstruction.of(Opcode.LAND));\n@@ -2158,1 +2007,1 @@\n-        return arrayStoreInstruction(TypeKind.LongType);\n+        return arrayStore(TypeKind.LongType);\n@@ -2166,1 +2015,1 @@\n-        return operatorInstruction(Opcode.LCMP);\n+        return with(OperatorInstruction.of(Opcode.LCMP));\n@@ -2211,1 +2060,1 @@\n-        return operatorInstruction(Opcode.LDIV);\n+        return with(OperatorInstruction.of(Opcode.LDIV));\n@@ -2220,1 +2069,1 @@\n-        return loadInstruction(TypeKind.LongType, slot);\n+        return loadLocal(TypeKind.LongType, slot);\n@@ -2228,1 +2077,1 @@\n-        return operatorInstruction(Opcode.LMUL);\n+        return with(OperatorInstruction.of(Opcode.LMUL));\n@@ -2236,1 +2085,1 @@\n-        return operatorInstruction(Opcode.LNEG);\n+        return with(OperatorInstruction.of(Opcode.LNEG));\n@@ -2244,1 +2093,1 @@\n-        return operatorInstruction(Opcode.LOR);\n+        return with(OperatorInstruction.of(Opcode.LOR));\n@@ -2252,1 +2101,1 @@\n-        return operatorInstruction(Opcode.LREM);\n+        return with(OperatorInstruction.of(Opcode.LREM));\n@@ -2260,1 +2109,1 @@\n-        return returnInstruction(TypeKind.LongType);\n+        return return_(TypeKind.LongType);\n@@ -2268,1 +2117,1 @@\n-        return operatorInstruction(Opcode.LSHL);\n+        return with(OperatorInstruction.of(Opcode.LSHL));\n@@ -2276,1 +2125,1 @@\n-        return operatorInstruction(Opcode.LSHR);\n+        return with(OperatorInstruction.of(Opcode.LSHR));\n@@ -2285,1 +2134,1 @@\n-        return storeInstruction(TypeKind.LongType, slot);\n+        return storeLocal(TypeKind.LongType, slot);\n@@ -2293,1 +2142,1 @@\n-        return operatorInstruction(Opcode.LSUB);\n+        return with(OperatorInstruction.of(Opcode.LSUB));\n@@ -2301,1 +2150,1 @@\n-        return operatorInstruction(Opcode.LUSHR);\n+        return with(OperatorInstruction.of(Opcode.LUSHR));\n@@ -2309,1 +2158,1 @@\n-        return operatorInstruction(Opcode.LXOR);\n+        return with(OperatorInstruction.of(Opcode.LXOR));\n@@ -2317,1 +2166,1 @@\n-        return monitorInstruction(Opcode.MONITORENTER);\n+        return with(MonitorInstruction.of(Opcode.MONITORENTER));\n@@ -2325,1 +2174,1 @@\n-        return monitorInstruction(Opcode.MONITOREXIT);\n+        return with(MonitorInstruction.of(Opcode.MONITOREXIT));\n@@ -2335,1 +2184,1 @@\n-        return newMultidimensionalArrayInstruction(dims, array);\n+        return with(NewMultiArrayInstruction.of(array, dims));\n@@ -2346,1 +2195,1 @@\n-        return newMultidimensionalArrayInstruction(dims, constantPool().classEntry(array));\n+        return multianewarray(constantPool().classEntry(array), dims);\n@@ -2355,1 +2204,1 @@\n-        return newObjectInstruction(clazz);\n+        return with(NewObjectInstruction.of(clazz));\n@@ -2365,1 +2214,1 @@\n-        return newObjectInstruction(constantPool().classEntry(clazz));\n+        return new_(constantPool().classEntry(clazz));\n@@ -2374,1 +2223,1 @@\n-        return newPrimitiveArrayInstruction(typeKind);\n+        return with(NewPrimitiveArrayInstruction.of(typeKind));\n@@ -2382,1 +2231,1 @@\n-        return stackInstruction(Opcode.POP);\n+        return with(StackInstruction.of(Opcode.POP));\n@@ -2390,1 +2239,1 @@\n-        return stackInstruction(Opcode.POP2);\n+        return with(StackInstruction.of(Opcode.POP2));\n@@ -2399,1 +2248,1 @@\n-        return fieldInstruction(Opcode.PUTFIELD, ref);\n+        return fieldAccess(Opcode.PUTFIELD, ref);\n@@ -2411,1 +2260,1 @@\n-        return fieldInstruction(Opcode.PUTFIELD, owner, name, type);\n+        return fieldAccess(Opcode.PUTFIELD, owner, name, type);\n@@ -2420,1 +2269,1 @@\n-        return fieldInstruction(Opcode.PUTSTATIC, ref);\n+        return fieldAccess(Opcode.PUTSTATIC, ref);\n@@ -2432,1 +2281,1 @@\n-        return fieldInstruction(Opcode.PUTSTATIC, owner, name, type);\n+        return fieldAccess(Opcode.PUTSTATIC, owner, name, type);\n@@ -2440,1 +2289,1 @@\n-        return returnInstruction(TypeKind.VoidType);\n+        return return_(TypeKind.VoidType);\n@@ -2448,1 +2297,1 @@\n-        return arrayLoadInstruction(TypeKind.ShortType);\n+        return arrayLoad(TypeKind.ShortType);\n@@ -2456,1 +2305,1 @@\n-        return arrayStoreInstruction(TypeKind.ShortType);\n+        return arrayStore(TypeKind.ShortType);\n@@ -2465,1 +2314,1 @@\n-        return constantInstruction(Opcode.SIPUSH, s);\n+        return loadConstant(Opcode.SIPUSH, s);\n@@ -2473,1 +2322,1 @@\n-        return stackInstruction(Opcode.SWAP);\n+        return with(StackInstruction.of(Opcode.SWAP));\n@@ -2485,1 +2334,1 @@\n-        return tableSwitchInstruction(low, high, defaultTarget, cases);\n+        return with(TableSwitchInstruction.of(low, high, defaultTarget, cases));\n@@ -2502,1 +2351,1 @@\n-        return tableSwitchInstruction(low, high, defaultTarget, cases);\n+        return tableswitch(low, high, defaultTarget, cases);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/CodeBuilder.java","additions":279,"deletions":430,"binary":false,"changes":709,"status":"modified"},{"patch":"@@ -188,0 +188,1 @@\n+     * @sealedGraph\n@@ -191,2 +192,1 @@\n-    public sealed interface TypeArg\n-            permits SignaturesImpl.TypeArgImpl {\n+    public sealed interface TypeArg {\n@@ -195,4 +195,2 @@\n-         * Indicator for whether a wildcard has default bound, no bound,\n-         * an upper bound, or a lower bound\n-         *\n-         * @since 22\n+         * Models an unbounded type argument {@code *}.\n+         * @since 23\n@@ -201,11 +199,2 @@\n-        public enum WildcardIndicator {\n-\n-            \/**\n-             * default bound wildcard (empty)\n-             *\/\n-            DEFAULT,\n-\n-            \/**\n-             * unbounded indicator {@code *}\n-             *\/\n-            UNBOUNDED,\n+        public sealed interface Unbounded extends TypeArg permits SignaturesImpl.UnboundedTypeArgImpl {\n+        }\n@@ -213,4 +202,6 @@\n-            \/**\n-             * upper-bounded indicator {@code +}\n-             *\/\n-            EXTENDS,\n+        \/**\n+         * Models a type argument with an explicit bound type.\n+         * @since 23\n+         *\/\n+        @PreviewFeature(feature = PreviewFeature.Feature.CLASSFILE_API)\n+        public sealed interface Bounded extends TypeArg permits SignaturesImpl.TypeArgImpl {\n@@ -219,1 +210,2 @@\n-             * lower-bounded indicator {@code -}\n+             * Models a type argument's wildcard indicator.\n+             * @since 23\n@@ -221,1 +213,27 @@\n-            SUPER;\n+            @PreviewFeature(feature = PreviewFeature.Feature.CLASSFILE_API)\n+            public enum WildcardIndicator {\n+\n+                \/**\n+                 * No wildcard (empty), an exact type. Also known as\n+                 * {@index invariant}.\n+                 *\/\n+                NONE,\n+\n+                \/**\n+                 * Upper-bound indicator {@code +}. Also known as\n+                 * {@index covariant}.\n+                 *\/\n+                EXTENDS,\n+\n+                \/**\n+                 * Lower-bound indicator {@code -}. Also known as\n+                 * {@index contravariant}.\n+                 *\/\n+                SUPER;\n+            }\n+\n+            \/** {@return the kind of wildcard} *\/\n+            WildcardIndicator wildcardIndicator();\n+\n+            \/** {@return the signature of the type bound} *\/\n+            RefTypeSig boundType();\n@@ -224,6 +242,0 @@\n-        \/** {@return the wildcard indicator} *\/\n-        WildcardIndicator wildcardIndicator();\n-\n-        \/** {@return the signature of the type bound, if any} *\/\n-        Optional<RefTypeSig> boundType();\n-\n@@ -233,0 +245,1 @@\n+         * @since 23\n@@ -234,1 +247,1 @@\n-        public static TypeArg of(RefTypeSig boundType) {\n+        public static TypeArg.Bounded of(RefTypeSig boundType) {\n@@ -236,1 +249,1 @@\n-            return of(WildcardIndicator.DEFAULT, Optional.of(boundType));\n+            return bounded(Bounded.WildcardIndicator.NONE, boundType);\n@@ -241,0 +254,1 @@\n+         * @since 23\n@@ -242,2 +256,2 @@\n-        public static TypeArg unbounded() {\n-            return of(WildcardIndicator.UNBOUNDED, Optional.empty());\n+        public static TypeArg.Unbounded unbounded() {\n+            return SignaturesImpl.UnboundedTypeArgImpl.INSTANCE;\n@@ -249,0 +263,1 @@\n+         * @since 23\n@@ -250,1 +265,1 @@\n-        public static TypeArg extendsOf(RefTypeSig boundType) {\n+        public static TypeArg.Bounded extendsOf(RefTypeSig boundType) {\n@@ -252,1 +267,1 @@\n-            return of(WildcardIndicator.EXTENDS, Optional.of(boundType));\n+            return bounded(Bounded.WildcardIndicator.EXTENDS, boundType);\n@@ -258,0 +273,1 @@\n+         * @since 23\n@@ -259,1 +275,1 @@\n-        public static TypeArg superOf(RefTypeSig boundType) {\n+        public static TypeArg.Bounded superOf(RefTypeSig boundType) {\n@@ -261,1 +277,1 @@\n-            return of(WildcardIndicator.SUPER, Optional.of(boundType));\n+            return bounded(Bounded.WildcardIndicator.SUPER, boundType);\n@@ -268,0 +284,1 @@\n+         * @since 23\n@@ -269,1 +286,3 @@\n-        public static TypeArg of(WildcardIndicator wildcard, Optional<RefTypeSig> boundType) {\n+        public static TypeArg.Bounded bounded(Bounded.WildcardIndicator wildcard, RefTypeSig boundType) {\n+            requireNonNull(wildcard);\n+            requireNonNull(boundType);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/Signature.java","additions":57,"deletions":38,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    private final int newarraycode;\n+    private final int newarrayCode;\n@@ -69,3 +69,6 @@\n-    \/** {@return the code used by the {@code newarray} opcode corresponding to this type} *\/\n-    public int newarraycode() {\n-        return newarraycode;\n+    \/**\n+     * {@return the code used by the {@code newarray} opcode corresponding to this type}\n+     * @since 23\n+     *\/\n+    public int newarrayCode() {\n+        return newarrayCode;\n@@ -97,1 +100,1 @@\n-    TypeKind(String name, String descriptor, int newarraycode) {\n+    TypeKind(String name, String descriptor, int newarrayCode) {\n@@ -100,1 +103,1 @@\n-        this.newarraycode = newarraycode;\n+        this.newarrayCode = newarrayCode;\n@@ -106,1 +109,3 @@\n-     * @param newarraycode the operand of the {@code newarray} instruction\n+     * @param newarrayCode the operand of the {@code newarray} instruction\n+     * @throws IllegalArgumentException if the code is invalid\n+     * @since 23\n@@ -108,2 +113,2 @@\n-    public static TypeKind fromNewArrayCode(int newarraycode) {\n-        return switch (newarraycode) {\n+    public static TypeKind fromNewarrayCode(int newarrayCode) {\n+        return switch (newarrayCode) {\n@@ -118,1 +123,1 @@\n-            default -> throw new IllegalArgumentException(\"Bad new array code: \" + newarraycode);\n+            default -> throw new IllegalArgumentException(\"Bad newarray code: \" + newarrayCode);\n@@ -125,0 +130,1 @@\n+     * @throws IllegalArgumentException only if the descriptor is not valid\n@@ -127,0 +133,3 @@\n+        if (s.isEmpty()) { \/\/ implicit null check\n+            throw new IllegalArgumentException(\"Empty descriptor\");\n+        }\n@@ -147,1 +156,3 @@\n-        return fromDescriptor(descriptor.descriptorString());\n+        return descriptor.isPrimitive() \/\/ implicit null check\n+                ? fromDescriptor(descriptor.descriptorString())\n+                : TypeKind.ReferenceType;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/TypeKind.java","additions":23,"deletions":12,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-        if (typeKind.newarraycode() < 0) {\n+        if (typeKind.newarrayCode() < 0) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/instruction\/NewPrimitiveArrayInstruction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n- * java.lang.classfile.CodeBuilder#invokeInstruction(java.lang.classfile.Opcode,\n+ * java.lang.classfile.CodeBuilder#invoke(java.lang.classfile.Opcode,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-                        b.invokeInstruction(i.opcode(), CD_Bar, i.name().stringValue(), i.typeSymbol(), i.isInterface());\n+                        b.invoke(i.opcode(), CD_Bar, i.name().stringValue(), i.typeSymbol(), i.isInterface());\n@@ -330,1 +330,1 @@\n-                                                              codeBuilder.invokeInstruction(i.opcode(), CD_Bar,\n+                                                              codeBuilder.invoke(i.opcode(), CD_Bar,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/snippet-files\/PackageSnippets.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import sun.util.logging.PlatformLogger;\n@@ -76,0 +75,1 @@\n+        private final TreeSet<String> linkerTypes = new TreeSet<>();\n@@ -90,0 +90,6 @@\n+        HolderClassBuilder addLinkerType(String methodType) {\n+            validateMethodType(methodType);\n+            linkerTypes.add(methodType);\n+            return this;\n+        }\n+\n@@ -133,1 +139,1 @@\n-            \/\/ The invoker type to ask for is retrieved by removing the first\n+            \/\/ The linker type to ask for is retrieved by removing the first\n@@ -135,0 +141,16 @@\n+            MethodType[] linkerMethodTypes = new MethodType[linkerTypes.size()];\n+            index = 0;\n+            for (String linkerType : linkerTypes) {\n+                MethodType mt = asMethodType(linkerType);\n+                final int lastParam = mt.parameterCount() - 1;\n+                if (!checkLinkerTypeParams(mt)) {\n+                    throw new RuntimeException(\n+                            \"Linker type parameter must start and end with Object: \" + linkerType);\n+                }\n+                mt = mt.dropParameterTypes(lastParam, lastParam + 1);\n+                linkerMethodTypes[index] = mt.dropParameterTypes(0, 1);\n+                index++;\n+            }\n+\n+            \/\/ The invoker type to ask for is retrieved by removing the first\n+            \/\/ argument, which needs to be of Object.class\n@@ -139,1 +161,0 @@\n-                final int lastParam = mt.parameterCount() - 1;\n@@ -142,1 +163,1 @@\n-                            \"Invoker type parameter must start and end with Object: \" + invokerType);\n+                            \"Invoker type parameter must start with 2 Objects: \" + invokerType);\n@@ -144,2 +165,1 @@\n-                mt = mt.dropParameterTypes(lastParam, lastParam + 1);\n-                invokerMethodTypes[index] = mt.dropParameterTypes(0, 1);\n+                invokerMethodTypes[index] = mt.dropParameterTypes(0, 2);\n@@ -174,1 +194,1 @@\n-                            invokerMethodTypes, callSiteMethodTypes));\n+                            linkerMethodTypes, invokerMethodTypes, callSiteMethodTypes));\n@@ -210,0 +230,6 @@\n+            return (mt.parameterCount() >= 2 &&\n+                    mt.parameterType(0) == Object.class &&\n+                    mt.parameterType(1) == Object.class);\n+        }\n+\n+        public static boolean checkLinkerTypeParams(MethodType mt) {\n@@ -323,0 +349,3 @@\n+                                } else if (parts[2].endsWith(\"nvoker\")) {\n+                                    \/\/ MH.exactInvoker exactInvoker MH.invoker invoker\n+                                    builder.addInvokerType(methodType);\n@@ -324,8 +353,1 @@\n-                                    MethodType mt = HolderClassBuilder.asMethodType(methodType);\n-                                    \/\/ Work around JDK-8327499\n-                                    if (HolderClassBuilder.checkInvokerTypeParams(mt)) {\n-                                        builder.addInvokerType(methodType);\n-                                    } else {\n-                                        PlatformLogger.getLogger(\"java.lang.invoke\")\n-                                                .warning(\"Invalid LF_RESOLVE \" + parts[1] + \" \" + parts[2] + \" \" + parts[3]);\n-                                    }\n+                                    builder.addLinkerType(methodType);\n@@ -468,2 +490,2 @@\n-     * the invoker forms for the set of supplied {@code invokerMethodTypes}\n-     * and {@code callSiteMethodTypes}.\n+     * the invoker forms for the set of supplied {@code linkerMethodTypes}\n+     * {@code invokerMethodTypes}, and {@code callSiteMethodTypes}.\n@@ -472,1 +494,2 @@\n-            MethodType[] invokerMethodTypes, MethodType[] callSiteMethodTypes) {\n+            MethodType[] linkerMethodTypes, MethodType[] invokerMethodTypes,\n+            MethodType[] callSiteMethodTypes) {\n@@ -477,2 +500,2 @@\n-        int[] types = {\n-            MethodTypeForm.LF_EX_LINKER,\n+\n+        int[] invokerTypes = {\n@@ -480,2 +503,1 @@\n-            MethodTypeForm.LF_GEN_LINKER,\n-            MethodTypeForm.LF_GEN_INVOKER\n+            MethodTypeForm.LF_GEN_INVOKER,\n@@ -484,1 +506,1 @@\n-        for (int i = 0; i < invokerMethodTypes.length; i++) {\n+        for (MethodType methodType : invokerMethodTypes) {\n@@ -486,3 +508,3 @@\n-            if (dedupSet.add(invokerMethodTypes[i])) {\n-                for (int type : types) {\n-                    LambdaForm invokerForm = Invokers.invokeHandleForm(invokerMethodTypes[i],\n+            if (dedupSet.add(methodType)) {\n+                for (int type : invokerTypes) {\n+                    LambdaForm invokerForm = Invokers.invokeHandleForm(methodType,\n@@ -496,0 +518,18 @@\n+        int[] linkerTypes = {\n+                MethodTypeForm.LF_EX_LINKER,\n+                MethodTypeForm.LF_GEN_LINKER,\n+        };\n+\n+        dedupSet = new HashSet<>();\n+        for (MethodType methodType : linkerMethodTypes) {\n+            \/\/ generate methods representing linkers of the specified type\n+            if (dedupSet.add(methodType)) {\n+                for (int type : linkerTypes) {\n+                    LambdaForm linkerForm = Invokers.invokeHandleForm(methodType,\n+                            \/*customized*\/false, type);\n+                    forms.add(linkerForm);\n+                    names.add(linkerForm.kind.defaultLambdaName);\n+                }\n+            }\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java","additions":66,"deletions":26,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -386,1 +386,1 @@\n-                cob.constantInstruction(ifaceDesc);\n+                cob.loadConstant(ifaceDesc);\n@@ -410,1 +410,1 @@\n-                    cob.constantInstruction(mi.desc);\n+                    cob.loadConstant(mi.desc);\n@@ -427,1 +427,1 @@\n-                cob.constantInstruction(proxyDesc);\n+                cob.loadConstant(proxyDesc);\n@@ -432,1 +432,1 @@\n-                cob.constantInstruction(Lookup.ORIGINAL);\n+                cob.loadConstant(Lookup.ORIGINAL);\n@@ -456,1 +456,1 @@\n-                                        bcb.loadInstruction(TypeKind.from(mi.desc.parameterType(j)),\n+                                        bcb.loadLocal(TypeKind.from(mi.desc.parameterType(j)),\n@@ -460,1 +460,1 @@\n-                                    bcb.returnInstruction(TypeKind.from(mi.desc.returnType()));\n+                                    bcb.return_(TypeKind.from(mi.desc.returnType()));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleProxies.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1127,1 +1127,1 @@\n-                    cb.constantInstruction(len);\n+                    cb.loadConstant(len);\n@@ -1140,1 +1140,1 @@\n-                            cb.loadInstruction(kind, off);\n+                            cb.loadLocal(kind, off);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -698,1 +698,1 @@\n-                                    .constantInstruction(Opcode.LDC, CD_Proxy)\n+                                    .ldc(CD_Proxy)\n@@ -772,1 +772,1 @@\n-                            cob.constantInstruction(parameterTypes.length)\n+                            cob.loadConstant(parameterTypes.length)\n@@ -776,1 +776,1 @@\n-                                   .constantInstruction(i);\n+                                   .loadConstant(i);\n@@ -820,1 +820,1 @@\n-                cob.loadInstruction(TypeKind.from(type).asLoadable(), slot);\n+                cob.loadLocal(TypeKind.from(type).asLoadable(), slot);\n@@ -839,1 +839,1 @@\n-                   .returnInstruction(TypeKind.from(type).asLoadable());\n+                   .return_(TypeKind.from(type).asLoadable());\n@@ -856,1 +856,1 @@\n-               .constantInstruction(parameterTypes.length)\n+               .loadConstant(parameterTypes.length)\n@@ -862,1 +862,1 @@\n-                   .constantInstruction(i);\n+                   .loadConstant(i);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ProxyGenerator.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -417,1 +417,1 @@\n-                cb.constantInstruction(0)\n+                cb.loadConstant(0)\n@@ -457,1 +457,1 @@\n-                            cb.instanceof_(Wrapper.forBasicType(classLabel)\n+                            cb.instanceOf(Wrapper.forBasicType(classLabel)\n@@ -467,1 +467,1 @@\n-                            cb.instanceof_(ConstantDescs.CD_Number);\n+                            cb.instanceOf(ConstantDescs.CD_Number);\n@@ -496,1 +496,1 @@\n-                                cb.instanceof_(ConstantDescs.CD_Character);\n+                                cb.instanceOf(ConstantDescs.CD_Character);\n@@ -517,1 +517,1 @@\n-                            cb.instanceof_(classLabelConstableOpt.orElseThrow());\n+                            cb.instanceOf(classLabelConstableOpt.orElseThrow());\n@@ -521,1 +521,1 @@\n-                            cb.constantInstruction(extraClassLabels.size());\n+                            cb.loadConstant(extraClassLabels.size());\n@@ -540,1 +540,1 @@\n-                    cb.constantInstruction(enumIdx);\n+                    cb.loadConstant(enumIdx);\n@@ -564,1 +564,1 @@\n-                    cb.instanceof_(ConstantDescs.CD_Number);\n+                    cb.instanceOf(ConstantDescs.CD_Number);\n@@ -574,1 +574,1 @@\n-                    cb.instanceof_(ConstantDescs.CD_Character);\n+                    cb.instanceOf(ConstantDescs.CD_Character);\n@@ -590,1 +590,1 @@\n-                        cb.constantInstruction(c ? 1 : 0);\n+                        cb.loadConstant(c ? 1 : 0);\n@@ -592,1 +592,1 @@\n-                        cb.constantInstruction((ConstantDesc) element.caseLabel());\n+                        cb.loadConstant((ConstantDesc) element.caseLabel());\n@@ -608,1 +608,1 @@\n-                cb.constantInstruction(idx);\n+                cb.loadConstant(idx);\n@@ -612,1 +612,1 @@\n-            cb.constantInstruction(cases.size());\n+            cb.loadConstant(cases.size());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/SwitchBootstraps.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -5683,12 +5683,2 @@\n-        long q1, r_tmp;\n-        if (v1 == 1) {\n-            q1 = tmp;\n-            r_tmp = 0;\n-        } else if (tmp >= 0) {\n-            q1 = tmp \/ v1;\n-            r_tmp = tmp - q1 * v1;\n-        } else {\n-            long[] rq = divRemNegativeLong(tmp, v1);\n-            q1 = rq[1];\n-            r_tmp = rq[0];\n-        }\n+        long q1 = Long.divideUnsigned(tmp, v1);\n+        long r_tmp = Long.remainderUnsigned(tmp, v1);\n@@ -5705,12 +5695,2 @@\n-        long q0;\n-        if (v1 == 1) {\n-            q0 = tmp;\n-            r_tmp = 0;\n-        } else if (tmp >= 0) {\n-            q0 = tmp \/ v1;\n-            r_tmp = tmp - q0 * v1;\n-        } else {\n-            long[] rq = divRemNegativeLong(tmp, v1);\n-            q0 = rq[1];\n-            r_tmp = rq[0];\n-        }\n+        long q0 = Long.divideUnsigned(tmp, v1);\n+        r_tmp = Long.remainderUnsigned(tmp, v1);\n@@ -5796,31 +5776,0 @@\n-    \/**\n-     * Calculate the quotient and remainder of dividing a negative long by\n-     * another long.\n-     *\n-     * @param n the numerator; must be negative\n-     * @param d the denominator; must not be unity\n-     * @return a two-element {@code long} array with the remainder and quotient in\n-     *         the initial and final elements, respectively\n-     *\/\n-    private static long[] divRemNegativeLong(long n, long d) {\n-        assert n < 0 : \"Non-negative numerator \" + n;\n-        assert d != 1 : \"Unity denominator\";\n-\n-        \/\/ Approximate the quotient and remainder\n-        long q = (n >>> 1) \/ (d >>> 1);\n-        long r = n - q * d;\n-\n-        \/\/ Correct the approximation\n-        while (r < 0) {\n-            r += d;\n-            q--;\n-        }\n-        while (r >= d) {\n-            r -= d;\n-            q++;\n-        }\n-\n-        \/\/ n - q*d == r && 0 <= r < d, hence we're done.\n-        return new long[] {r, q};\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":5,"deletions":56,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1095,3 +1095,3 @@\n-            long dividendValue = value[offset] & LONG_MASK;\n-            int q = (int) (dividendValue \/ divisorLong);\n-            int r = (int) (dividendValue - q * divisorLong);\n+            int dividendValue = value[offset];\n+            int q = Integer.divideUnsigned(dividendValue, divisor);\n+            int r = Integer.remainderUnsigned(dividendValue, divisor);\n@@ -1109,15 +1109,3 @@\n-        \/\/ Normalize the divisor\n-        int shift = Integer.numberOfLeadingZeros(divisor);\n-\n-        int rem = value[offset];\n-        long remLong = rem & LONG_MASK;\n-        if (remLong < divisorLong) {\n-            quotient.value[0] = 0;\n-        } else {\n-            quotient.value[0] = (int)(remLong \/ divisorLong);\n-            rem = (int) (remLong - (quotient.value[0] * divisorLong));\n-            remLong = rem & LONG_MASK;\n-        }\n-        int xlen = intLen;\n-        while (--xlen > 0) {\n-            long dividendEstimate = (remLong << 32) |\n+        long rem = 0;\n+        for (int xlen = intLen; xlen > 0; xlen--) {\n+            long dividendEstimate = (rem << 32) |\n@@ -1125,9 +1113,2 @@\n-            int q;\n-            if (dividendEstimate >= 0) {\n-                q = (int) (dividendEstimate \/ divisorLong);\n-                rem = (int) (dividendEstimate - q * divisorLong);\n-            } else {\n-                long tmp = divWord(dividendEstimate, divisor);\n-                q = (int) (tmp & LONG_MASK);\n-                rem = (int) (tmp >>> 32);\n-            }\n+            int q = (int) Long.divideUnsigned(dividendEstimate, divisorLong);\n+            rem = Long.remainderUnsigned(dividendEstimate, divisorLong);\n@@ -1135,1 +1116,0 @@\n-            remLong = rem & LONG_MASK;\n@@ -1139,5 +1119,1 @@\n-        \/\/ Unnormalize\n-        if (shift > 0)\n-            return rem % divisor;\n-        else\n-            return rem;\n+        return (int)rem;\n@@ -1560,8 +1536,2 @@\n-                if (nChunk >= 0) {\n-                    qhat = (int) (nChunk \/ dhLong);\n-                    qrem = (int) (nChunk - (qhat * dhLong));\n-                } else {\n-                    long tmp = divWord(nChunk, dh);\n-                    qhat = (int) (tmp & LONG_MASK);\n-                    qrem = (int) (tmp >>> 32);\n-                }\n+                qhat = (int) Long.divideUnsigned(nChunk, dhLong);\n+                qrem = (int) Long.remainderUnsigned(nChunk, dhLong);\n@@ -1619,8 +1589,2 @@\n-            if (nChunk >= 0) {\n-                qhat = (int) (nChunk \/ dhLong);\n-                qrem = (int) (nChunk - (qhat * dhLong));\n-            } else {\n-                long tmp = divWord(nChunk, dh);\n-                qhat = (int) (tmp & LONG_MASK);\n-                qrem = (int) (tmp >>> 32);\n-            }\n+            qhat = (int) Long.divideUnsigned(nChunk, dhLong);\n+            qrem = (int) Long.remainderUnsigned(nChunk, dhLong);\n@@ -1735,8 +1699,2 @@\n-                if (nChunk >= 0) {\n-                    qhat = (int) (nChunk \/ dhLong);\n-                    qrem = (int) (nChunk - (qhat * dhLong));\n-                } else {\n-                    long tmp = divWord(nChunk, dh);\n-                    qhat =(int)(tmp & LONG_MASK);\n-                    qrem = (int)(tmp>>>32);\n-                }\n+                qhat = (int) Long.divideUnsigned(nChunk, dhLong);\n+                qrem = (int) Long.remainderUnsigned(nChunk, dhLong);\n@@ -1837,34 +1795,0 @@\n-    \/**\n-     * This method divides a long quantity by an int to estimate\n-     * qhat for two multi precision numbers. It is used when\n-     * the signed value of n is less than zero.\n-     * Returns long value where high 32 bits contain remainder value and\n-     * low 32 bits contain quotient value.\n-     *\/\n-    static long divWord(long n, int d) {\n-        long dLong = d & LONG_MASK;\n-        long r;\n-        long q;\n-        if (dLong == 1) {\n-            q = (int)n;\n-            r = 0;\n-            return (r << 32) | (q & LONG_MASK);\n-        }\n-\n-        \/\/ Approximate the quotient and remainder\n-        q = (n >>> 1) \/ (dLong >>> 1);\n-        r = n - q*dLong;\n-\n-        \/\/ Correct the approximation\n-        while (r < 0) {\n-            r += dLong;\n-            q--;\n-        }\n-        while (r >= dLong) {\n-            r -= dLong;\n-            q++;\n-        }\n-        \/\/ n - q*dlong == r && 0 <= r <dLong, hence we're done.\n-        return (r << 32) | (q & LONG_MASK);\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":16,"deletions":92,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,0 +101,14 @@\n+ * @implNote\n+ * The JDK's {@code WatchService} implementations buffer up to 512 pending\n+ * events for each registered watchable object. If this limit is exceeded,\n+ * pending events are discarded and the special\n+ * {@link StandardWatchEventKinds#OVERFLOW OVERFLOW} event is queued. This\n+ * special event is the trigger to re-examine the state of the object, e.g.\n+ * scan a watched directory to get an updated list of the files in the\n+ * directory. The limit for the pending events can be changed from its default\n+ * with the system property\n+ * {@systemProperty jdk.nio.file.WatchService.maxEventsPerPoll}\n+ * set to a value that parses as a positive integer. This may be useful in\n+ * environments where there is a high volume of changes and where the impact\n+ * of discarded events is high.\n+ *\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/WatchService.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,0 @@\n-     * @since 22\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/DSAPrivateKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,0 @@\n-     * @since 22\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/DSAPublicKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,0 @@\n-     * @since 22\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/ECPrivateKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,0 @@\n-     * @since 22\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/ECPublicKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,0 @@\n-     * @since 22\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/EdECPrivateKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,0 @@\n-     * @since 22\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/EdECPublicKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-     * @since 22\n+     * @since 11\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/RSAPrivateKey.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-     * @since 22\n+     * @since 11\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/RSAPublicKey.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,0 @@\n-     * @since 22\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/XECPrivateKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-     * @since 22\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/XECPublicKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+import java.util.function.Function;\n@@ -983,0 +984,1 @@\n+\n@@ -989,1 +991,1 @@\n-            return LOCALE_CACHE.computeIfAbsent(baseloc, Locale::createLocale);\n+            return LOCALE_CACHE.computeIfAbsent(baseloc, LOCALE_CREATOR);\n@@ -992,1 +994,1 @@\n-            return LOCALE_CACHE.computeIfAbsent(key, Locale::createLocale);\n+            return LOCALE_CACHE.computeIfAbsent(key, LOCALE_CREATOR);\n@@ -996,4 +998,11 @@\n-    private static final ReferencedKeyMap<Object, Locale> LOCALE_CACHE = ReferencedKeyMap.create(true, ConcurrentHashMap::new);\n-    private static Locale createLocale(Object key) {\n-        if (key instanceof BaseLocale base) {\n-            return new Locale(base, null);\n+    private static final ReferencedKeyMap<Object, Locale> LOCALE_CACHE\n+            = ReferencedKeyMap.create(true, ReferencedKeyMap.concurrentHashMapSupplier());\n+\n+    private static final Function<Object, Locale> LOCALE_CREATOR = new Function<>() {\n+        @Override\n+        public Locale apply(Object key) {\n+            if (key instanceof BaseLocale base) {\n+                return new Locale(base, null);\n+            }\n+            LocaleKey lk = (LocaleKey)key;\n+            return new Locale(lk.base, lk.exts);\n@@ -1001,3 +1010,1 @@\n-        LocaleKey lk = (LocaleKey)key;\n-        return new Locale(lk.base, lk.exts);\n-    }\n+    };\n@@ -1006,0 +1013,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/Locale.java","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n- * l.lock();\n+ * l.lock(); \/\/ lock() as the last statement before the try block\n@@ -87,1 +87,1 @@\n- *   l.unlock();\n+ *   l.unlock(); \/\/ unlock() as the first statement in the finally block\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/Lock.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,2 +74,3 @@\n- * follow a call to {@code lock} with a {@code try} block, most\n- * typically in a before\/after construction such as:\n+ * follow a call to {@code lock} with a {@code try} block, and\n+ * to <em>always<\/em> immediately call {@code unlock} as the\n+ * first statement in the finally block, as follows:\n@@ -83,1 +84,1 @@\n- *     lock.lock();  \/\/ block until condition holds\n+ *     lock.lock();  \/\/ lock() as the last statement before the try block\n@@ -87,1 +88,1 @@\n- *       lock.unlock();\n+ *       lock.unlock(); \/\/ unlock() as the first statement in the finally block\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/ReentrantLock.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -144,0 +144,1 @@\n+ *     \/\/ Code between the lock() above, and the unlock() below must not throw\n@@ -161,1 +162,1 @@\n- *\n+ *     \/\/ Make sure that code that could throw is executed inside the try block\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/ReentrantReadWriteLock.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,0 +145,1 @@\n+            FactoryMapHolder.class.getModule().addUses(RandomGenerator.class);\n@@ -146,1 +147,1 @@\n-                .load(RandomGenerator.class)\n+                .load(RandomGenerator.class, ClassLoader.getPlatformClassLoader())\n@@ -344,3 +345,0 @@\n-     * @implSpec Availability is determined by RandomGeneratorFactory using the\n-     * service provider API to locate implementations of the RandomGenerator interface.\n-     *\n@@ -379,1 +377,1 @@\n-     *\n+     * <p>\n@@ -382,3 +380,0 @@\n-     * @implSpec Availability is determined by RandomGeneratorFactory using the service provider API\n-     * to locate implementations of the RandomGenerator interface.\n-     *\n@@ -618,2 +613,0 @@\n-\n-\n","filename":"src\/java.base\/share\/classes\/java\/util\/random\/RandomGeneratorFactory.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,3 +53,1 @@\n- * selecting random number generator algorithms. RandomGeneratorFactory\n- * registers implementations of {@link RandomGenerator} interface using the\n- * service provider API.\n+ * selecting random number generator algorithms.\n@@ -639,1 +637,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/java\/util\/random\/package-info.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -155,0 +155,5 @@\n+ * Note that the CLDR locale data are subject to change. Users should not assume\n+ * that the locale data remain the same across CLDR versions. Otherwise, unexpected\n+ * incompatible behaviors may occur, such as an exception on parsing a date.\n+ * Refer to <a href=\"https:\/\/cldr.unicode.org\/index\/downloads\">CLDR Releases<\/a>\n+ * for the deltas between their releases.\n@@ -267,1 +272,1 @@\n-}\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/util\/spi\/LocaleServiceProvider.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -251,0 +251,5 @@\n+            \/\/ It's not allowed for a Spliterator to report SORTED if not also ORDERED\n+            if ((c & Spliterator.SORTED) != 0 && (c & Spliterator.ORDERED) == 0) {\n+                c &= ~(Spliterator.SORTED);\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/StreamSpliterators.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,0 @@\n-     * @since 22\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/interfaces\/DHPrivateKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,0 @@\n-     * @since 22\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/interfaces\/DHPublicKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.io.PrintStream;\n@@ -405,0 +406,5 @@\n+    \/**\n+     * Returns the initial value of System.err.\n+     *\/\n+    PrintStream initialSystemErr();\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -265,0 +265,3 @@\n+            if (npairs < 0 || npairs > code.codeLength >> 3) {\n+                throw new IllegalArgumentException(\"Invalid lookupswitch npairs value: \" + npairs);\n+            }\n@@ -317,0 +320,3 @@\n+            if (high < low || high - low > code.codeLength >> 2) {\n+                throw new IllegalArgumentException(\"Invalid tableswitch values low: \" + low + \" high: \" + high);\n+            }\n@@ -554,1 +560,1 @@\n-            return TypeKind.fromNewArrayCode(code.classReader.readU1(pos + 1));\n+            return TypeKind.fromNewarrayCode(code.classReader.readU1(pos + 1));\n@@ -1146,1 +1152,1 @@\n-            writer.writeNewPrimitiveArray(typeKind.newarraycode());\n+            writer.writeNewPrimitiveArray(typeKind.newarrayCode());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractInstruction.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-                b.branchInstruction(Opcode.GOTO, tryCatchEnd);\n+                b.branch(Opcode.GOTO, tryCatchEnd);\n@@ -79,1 +79,1 @@\n-                b.branchInstruction(Opcode.GOTO, tryCatchEnd);\n+                b.branch(Opcode.GOTO, tryCatchEnd);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/CatchBuilderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -394,13 +394,2 @@\n-        if (index <= 0 || index >= constantPoolCount) {\n-            throw new ConstantPoolException(\"Bad CP UTF8 index: \" + index);\n-        }\n-        PoolEntry info = cp[index];\n-        if (info == null) {\n-            int offset = cpOffset[index];\n-            int tag = readU1(offset);\n-            final int q = offset + 1;\n-            if (tag != TAG_UTF8) throw new ConstantPoolException(\"Not a UTF8 - index: \" + index);\n-            AbstractPoolEntry.Utf8EntryImpl uinfo\n-                    = new AbstractPoolEntry.Utf8EntryImpl(this, index, buffer, q + 2, readU2(q));\n-            cp[index] = uinfo;\n-            return uinfo;\n+        if (entryByIndex(index, TAG_UTF8, TAG_UTF8) instanceof AbstractPoolEntry.Utf8EntryImpl utf8) {\n+            return utf8;\n@@ -408,1 +397,1 @@\n-        return (AbstractPoolEntry.Utf8EntryImpl) info;\n+        throw new ConstantPoolException(\"Not a UTF8 - index: \" + index);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassReaderImpl.java","additions":3,"deletions":14,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-                    cob.fieldInstruction(fai.opcode(), map(fai.owner().asSymbol()),\n+                    cob.fieldAccess(fai.opcode(), map(fai.owner().asSymbol()),\n@@ -240,1 +240,1 @@\n-                    cob.invokeInstruction(ii.opcode(), map(ii.owner().asSymbol()),\n+                    cob.invoke(ii.opcode(), map(ii.owner().asSymbol()),\n@@ -244,1 +244,1 @@\n-                    cob.invokeDynamicInstruction(DynamicCallSiteDesc.of(\n+                    cob.invokedynamic(DynamicCallSiteDesc.of(\n@@ -249,1 +249,1 @@\n-                    cob.newObjectInstruction(map(c.className().asSymbol()));\n+                    cob.new_(map(c.className().asSymbol()));\n@@ -255,1 +255,1 @@\n-                    cob.typeCheckInstruction(c.opcode(), map(c.type().asSymbol()));\n+                    cob.with(TypeCheckInstruction.of(c.opcode(), map(c.type().asSymbol())));\n@@ -266,1 +266,1 @@\n-                    cob.constantInstruction(ldc.opcode(),\n+                    cob.loadConstant(ldc.opcode(),\n@@ -375,5 +375,5 @@\n-                        cts.typeArgs().stream()\n-                                .map(ta -> Signature.TypeArg.of(\n-                                        ta.wildcardIndicator(),\n-                                        ta.boundType().map(this::mapSignature)))\n-                                .toArray(Signature.TypeArg[]::new));\n+                        cts.typeArgs().stream().map(ta -> switch (ta) {\n+                            case Signature.TypeArg.Unbounded u -> u;\n+                            case Signature.TypeArg.Bounded bta -> Signature.TypeArg.bounded(\n+                                    bta.wildcardIndicator(), mapSignature(bta.boundType()));\n+                        }).toArray(Signature.TypeArg[]::new));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassRemapperImpl.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-                cob.loadInstruction(\n+                cob.loadLocal(\n@@ -57,1 +57,1 @@\n-                cob.storeInstruction(\n+                cob.storeLocal(\n@@ -61,1 +61,1 @@\n-                cob.incrementInstruction(\n+                cob.iinc(\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/CodeLocalsShifterImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-                cob.branchInstruction(\n+                cob.branch(\n@@ -58,1 +58,1 @@\n-                cob.lookupSwitchInstruction(\n+                cob.lookupswitch(\n@@ -65,1 +65,1 @@\n-                cob.tableSwitchInstruction(\n+                cob.tableswitch(\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/CodeRelabelerImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -283,2 +283,12 @@\n-                for (var ta : typeArgs)\n-                    sb.append(((TypeArgImpl)ta).signatureString());\n+                for (var ta : typeArgs) {\n+                    switch (ta) {\n+                        case TypeArg.Bounded b -> {\n+                            switch (b.wildcardIndicator()) {\n+                                case SUPER -> sb.append('-');\n+                                case EXTENDS -> sb.append('+');\n+                            }\n+                            sb.append(b.boundType().signatureString());\n+                        }\n+                        case TypeArg.Unbounded _ -> sb.append('*');\n+                    }\n+                }\n@@ -291,1 +301,3 @@\n-    public static record TypeArgImpl(WildcardIndicator wildcardIndicator, Optional<RefTypeSig> boundType) implements Signature.TypeArg {\n+    public static enum UnboundedTypeArgImpl implements TypeArg.Unbounded {\n+        INSTANCE;\n+    }\n@@ -293,8 +305,1 @@\n-        public String signatureString() {\n-            return switch (wildcardIndicator) {\n-                case DEFAULT -> boundType.get().signatureString();\n-                case EXTENDS -> \"+\" + boundType.get().signatureString();\n-                case SUPER -> \"-\" + boundType.get().signatureString();\n-                case UNBOUNDED -> \"*\";\n-            };\n-        }\n+    public static record TypeArgImpl(WildcardIndicator wildcardIndicator, RefTypeSig boundType) implements Signature.TypeArg.Bounded {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/SignaturesImpl.java","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+\n@@ -207,4 +208,1 @@\n-        \/\/ If we have an enclosing layout, drop the alignment check for the accessed element,\n-        \/\/ we check the root layout instead\n-        ValueLayout accessedLayout = enclosing != null ? valueLayout.withByteAlignment(1) : valueLayout;\n-        VarHandle handle = accessedLayout.varHandle();\n+        VarHandle handle = valueLayout.varHandle();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -277,2 +277,2 @@\n-                    cb.constantInstruction(null);\n-                    cb.storeInstruction(ReferenceType, scopeLocal); \/\/ need to initialize all scope locals here in case an exception occurs\n+                    cb.loadConstant(null);\n+                    cb.storeLocal(ReferenceType, scopeLocal); \/\/ need to initialize all scope locals here in case an exception occurs\n@@ -287,1 +287,1 @@\n-            cb.constantInstruction(callingSequence.allocationSize());\n+            cb.loadConstant(callingSequence.allocationSize());\n@@ -295,1 +295,1 @@\n-        cb.storeInstruction(ReferenceType, contextIdx);\n+        cb.storeLocal(ReferenceType, contextIdx);\n@@ -303,1 +303,1 @@\n-            cb.storeInstruction(ReferenceType, returnBufferIdx);\n+            cb.storeLocal(ReferenceType, returnBufferIdx);\n@@ -326,1 +326,1 @@\n-                    cb.loadInstruction(ReferenceType, returnBufferIdx);\n+                    cb.loadLocal(ReferenceType, returnBufferIdx);\n@@ -342,1 +342,1 @@\n-                    cb.storeInstruction(ReferenceType, returnBufferIdx);\n+                    cb.storeLocal(ReferenceType, returnBufferIdx);\n@@ -355,1 +355,1 @@\n-            cb.constantInstruction(CLASS_DATA_DESC);\n+            cb.loadConstant(CLASS_DATA_DESC);\n@@ -357,1 +357,1 @@\n-            cb.loadInstruction(ReferenceType, 0); \/\/ load target arg\n+            cb.loadLocal(ReferenceType, 0); \/\/ load target arg\n@@ -362,1 +362,1 @@\n-            cb.loadInstruction(TypeKind.from(leafArgTypes.get(i)), leafArgSlots[i]);\n+            cb.loadLocal(TypeKind.from(leafArgTypes.get(i)), leafArgSlots[i]);\n@@ -399,1 +399,1 @@\n-                cb.returnInstruction(TypeKind.from(callerMethodType.returnType()));\n+                cb.return_(TypeKind.from(callerMethodType.returnType()));\n@@ -414,1 +414,1 @@\n-            cb.throwInstruction();\n+            cb.athrow();\n@@ -420,1 +420,1 @@\n-                cb.returnInstruction(returnTypeKind);\n+                cb.return_(returnTypeKind);\n@@ -480,1 +480,1 @@\n-        cb.storeInstruction(TypeKind.from(storeType), leafArgSlots[leafArgTypes.size()]);\n+        cb.storeLocal(TypeKind.from(storeType), leafArgSlots[leafArgTypes.size()]);\n@@ -486,1 +486,1 @@\n-        cb.loadInstruction(TypeKind.from(highLevelType), cb.parameterSlot(paramIndex));\n+        cb.loadLocal(TypeKind.from(highLevelType), cb.parameterSlot(paramIndex));\n@@ -508,1 +508,1 @@\n-            cb.loadInstruction(ReferenceType, scopeSlots[i]);\n+            cb.loadLocal(ReferenceType, scopeSlots[i]);\n@@ -517,1 +517,1 @@\n-        cb.storeInstruction(ReferenceType, nextScopeLocal); \/\/ store off one to release later\n+        cb.storeLocal(ReferenceType, nextScopeLocal); \/\/ store off one to release later\n@@ -531,1 +531,1 @@\n-            cb.loadInstruction(ReferenceType, scopeLocal);\n+            cb.loadLocal(ReferenceType, scopeLocal);\n@@ -533,1 +533,1 @@\n-                ifCb.loadInstruction(ReferenceType, scopeLocal);\n+                ifCb.loadLocal(ReferenceType, scopeLocal);\n@@ -542,1 +542,1 @@\n-        cb.storeInstruction(typeKind, retValIdx);\n+        cb.storeLocal(typeKind, retValIdx);\n@@ -547,1 +547,1 @@\n-        cb.loadInstruction(TypeKind.from(loadType), retValIdx);\n+        cb.loadLocal(TypeKind.from(loadType), retValIdx);\n@@ -553,1 +553,1 @@\n-        cb.loadInstruction(ReferenceType, contextIdx);\n+        cb.loadLocal(ReferenceType, contextIdx);\n@@ -561,1 +561,1 @@\n-        cb.loadInstruction(ReferenceType, contextIdx);\n+        cb.loadLocal(ReferenceType, contextIdx);\n@@ -566,1 +566,1 @@\n-        cb.loadInstruction(ReferenceType, contextIdx);\n+        cb.loadLocal(ReferenceType, contextIdx);\n@@ -573,2 +573,2 @@\n-        cb.constantInstruction(boxAddress.size());\n-        cb.constantInstruction(boxAddress.align());\n+        cb.loadConstant(boxAddress.size());\n+        cb.loadConstant(boxAddress.align());\n@@ -587,1 +587,1 @@\n-            cb.loadInstruction(ReferenceType, returnAllocatorIdx);\n+            cb.loadLocal(ReferenceType, returnAllocatorIdx);\n@@ -606,1 +606,1 @@\n-            cb.storeInstruction(storeTypeKind, valueIdx);\n+            cb.storeLocal(storeTypeKind, valueIdx);\n@@ -609,2 +609,2 @@\n-            cb.constantInstruction(offset);\n-            cb.loadInstruction(storeTypeKind, valueIdx);\n+            cb.loadConstant(offset);\n+            cb.loadLocal(storeTypeKind, valueIdx);\n@@ -621,1 +621,1 @@\n-            cb.storeInstruction(LongType, longValueIdx);\n+            cb.storeLocal(LongType, longValueIdx);\n@@ -623,1 +623,1 @@\n-            cb.storeInstruction(ReferenceType, writeAddrIdx);\n+            cb.storeLocal(ReferenceType, writeAddrIdx);\n@@ -650,2 +650,2 @@\n-                cb.loadInstruction(LongType, longValueIdx);\n-                cb.constantInstruction(mask);\n+                cb.loadLocal(LongType, longValueIdx);\n+                cb.loadConstant(mask);\n@@ -654,1 +654,1 @@\n-                    cb.constantInstruction(shiftAmount);\n+                    cb.loadConstant(shiftAmount);\n@@ -660,1 +660,1 @@\n-                cb.storeInstruction(chunkStoreTypeKind, chunkIdx);\n+                cb.storeLocal(chunkStoreTypeKind, chunkIdx);\n@@ -664,1 +664,1 @@\n-                cb.loadInstruction(ReferenceType, writeAddrIdx);\n+                cb.loadLocal(ReferenceType, writeAddrIdx);\n@@ -667,2 +667,2 @@\n-                cb.constantInstruction(writeOffset);\n-                cb.loadInstruction(chunkStoreTypeKind, chunkIdx);\n+                cb.loadConstant(writeOffset);\n+                cb.loadLocal(chunkStoreTypeKind, chunkIdx);\n@@ -693,1 +693,1 @@\n-                cb.storeInstruction(storeTypeKind, valueIdx); \/\/ store away the stored value, need it later\n+                cb.storeLocal(storeTypeKind, valueIdx); \/\/ store away the stored value, need it later\n@@ -696,1 +696,1 @@\n-                cb.loadInstruction(ReferenceType, returnBufferIdx);\n+                cb.loadLocal(ReferenceType, returnBufferIdx);\n@@ -698,2 +698,2 @@\n-                cb.constantInstruction(retBufOffset);\n-                cb.loadInstruction(storeTypeKind, valueIdx);\n+                cb.loadConstant(retBufOffset);\n+                cb.loadLocal(storeTypeKind, valueIdx);\n@@ -716,1 +716,1 @@\n-                cb.loadInstruction(ReferenceType, returnBufferIdx);\n+                cb.loadLocal(ReferenceType, returnBufferIdx);\n@@ -718,1 +718,1 @@\n-                cb.constantInstruction(retBufOffset);\n+                cb.loadConstant(retBufOffset);\n@@ -738,1 +738,1 @@\n-        cb.constantInstruction(shiftLeft.shiftAmount() * Byte.SIZE);\n+        cb.loadConstant(shiftLeft.shiftAmount() * Byte.SIZE);\n@@ -745,1 +745,1 @@\n-        cb.constantInstruction(shiftRight.shiftAmount() * Byte.SIZE);\n+        cb.loadConstant(shiftRight.shiftAmount() * Byte.SIZE);\n@@ -760,1 +760,1 @@\n-                cb.constantInstruction(0xFF);\n+                cb.loadConstant(0xFF);\n@@ -811,1 +811,1 @@\n-            cb.constantInstruction(offset);\n+            cb.loadConstant(offset);\n@@ -817,1 +817,1 @@\n-            cb.storeInstruction(ReferenceType, readAddrIdx);\n+            cb.storeLocal(ReferenceType, readAddrIdx);\n@@ -819,1 +819,1 @@\n-            cb.constantInstruction(0L); \/\/ result\n+            cb.loadConstant(0L); \/\/ result\n@@ -821,1 +821,1 @@\n-            cb.storeInstruction(LongType, resultIdx);\n+            cb.storeLocal(LongType, resultIdx);\n@@ -850,1 +850,1 @@\n-                cb.loadInstruction(ReferenceType, readAddrIdx);\n+                cb.loadLocal(ReferenceType, readAddrIdx);\n@@ -854,1 +854,1 @@\n-                cb.constantInstruction(readOffset);\n+                cb.loadConstant(readOffset);\n@@ -861,1 +861,1 @@\n-                    cb.constantInstruction(shiftAmount);\n+                    cb.loadConstant(shiftAmount);\n@@ -865,1 +865,1 @@\n-                cb.loadInstruction(LongType, resultIdx);\n+                cb.loadLocal(LongType, resultIdx);\n@@ -867,1 +867,1 @@\n-                cb.storeInstruction(LongType, resultIdx);\n+                cb.storeLocal(LongType, resultIdx);\n@@ -873,1 +873,1 @@\n-            cb.loadInstruction(LongType, resultIdx);\n+            cb.loadLocal(LongType, resultIdx);\n@@ -893,1 +893,1 @@\n-        cb.constantInstruction(0L);\n+        cb.loadConstant(0L);\n@@ -900,3 +900,3 @@\n-        cb.storeInstruction(ReferenceType, storeIdx);\n-        cb.constantInstruction(0L);\n-        cb.constantInstruction(size);\n+        cb.storeLocal(ReferenceType, storeIdx);\n+        cb.loadConstant(0L);\n+        cb.loadConstant(size);\n@@ -905,1 +905,1 @@\n-        cb.loadInstruction(ReferenceType, storeIdx);\n+        cb.loadLocal(ReferenceType, storeIdx);\n@@ -910,2 +910,2 @@\n-        cb.constantInstruction(size);\n-        cb.constantInstruction(alignment);\n+        cb.loadConstant(size);\n+        cb.loadConstant(alignment);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java","additions":65,"deletions":65,"binary":false,"changes":130,"status":"modified"},{"patch":"@@ -87,0 +87,2 @@\n+        @JEP(number=476, title=\"Module Import Declarations\", status=\"Preview\")\n+        MODULE_IMPORTS,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/javac\/PreviewFeature.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.io.PrintStream;\n@@ -499,0 +500,7 @@\n+\n+    \/**\n+     * Return the initial value of System.err that was set during VM initialization.\n+     *\/\n+    public static PrintStream initialErr() {\n+        return SharedSecrets.getJavaLangAccess().initialSystemErr();\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/VM.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-package jdk.random;\n+package jdk.internal.random;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/random\/L128X1024MixRandom.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L128X1024MixRandom.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-package jdk.random;\n+package jdk.internal.random;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/random\/L128X128MixRandom.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L128X128MixRandom.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-package jdk.random;\n+package jdk.internal.random;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/random\/L128X256MixRandom.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L128X256MixRandom.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-package jdk.random;\n+package jdk.internal.random;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/random\/L32X64MixRandom.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L32X64MixRandom.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-package jdk.random;\n+package jdk.internal.random;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/random\/L64X1024MixRandom.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L64X1024MixRandom.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-package jdk.random;\n+package jdk.internal.random;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/random\/L64X128MixRandom.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L64X128MixRandom.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-package jdk.random;\n+package jdk.internal.random;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/random\/L64X128StarStarRandom.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L64X128StarStarRandom.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-package jdk.random;\n+package jdk.internal.random;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/random\/L64X256MixRandom.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L64X256MixRandom.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-package jdk.random;\n+package jdk.internal.random;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/random\/Xoroshiro128PlusPlus.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.random\/share\/classes\/jdk\/random\/Xoroshiro128PlusPlus.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-package jdk.random;\n+package jdk.internal.random;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/random\/Xoshiro256PlusPlus.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.random\/share\/classes\/jdk\/random\/Xoshiro256PlusPlus.java","status":"renamed"},{"patch":"@@ -103,0 +103,15 @@\n+    \/**\n+     * @return a supplier to create a {@code ConcurrentHashMap} appropriate for use in the\n+     *         create methods.\n+     * @param <K> the type of keys maintained by the new map\n+     * @param <V> the type of mapped values\n+     *\/\n+    public static <K, V> Supplier<Map<ReferenceKey<K>, V>> concurrentHashMapSupplier() {\n+        return new Supplier<>() {\n+            @Override\n+            public Map<ReferenceKey<K>, V> get() {\n+                return new ConcurrentHashMap<>();\n+            }\n+        };\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ReferencedKeyMap.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -78,0 +78,9 @@\n+    \/**\n+     * @return a supplier to create a {@code ConcurrentHashMap} appropriate for use in the\n+     *         create methods.\n+     * @param <E> the type of elements maintained by this set\n+     *\/\n+    public static <E> Supplier<Map<ReferenceKey<E>, ReferenceKey<E>>> concurrentHashMapSupplier() {\n+        return ReferencedKeyMap.concurrentHashMapSupplier();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ReferencedKeySet.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private int argsize; \/\/ bottom stack-passed arguments, in words\n+    private int bottom;  \/\/ in words\n@@ -39,1 +39,1 @@\n-    public boolean isEmpty()   { return sp >= (size - argsize); }\n+    public boolean isEmpty()   { return sp == bottom; }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/StackChunk.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -270,2 +270,0 @@\n-    exports jdk.internal.util.random to\n-        jdk.random;\n@@ -400,1 +398,0 @@\n-    uses java.util.random.RandomGenerator;\n@@ -429,1 +426,11 @@\n-        java.util.SplittableRandom;\n+        java.util.SplittableRandom,\n+        jdk.internal.random.L32X64MixRandom,\n+        jdk.internal.random.L64X128MixRandom,\n+        jdk.internal.random.L64X128StarStarRandom,\n+        jdk.internal.random.L64X256MixRandom,\n+        jdk.internal.random.L64X1024MixRandom,\n+        jdk.internal.random.L128X128MixRandom,\n+        jdk.internal.random.L128X256MixRandom,\n+        jdk.internal.random.L128X1024MixRandom,\n+        jdk.internal.random.Xoroshiro128PlusPlus,\n+        jdk.internal.random.Xoshiro256PlusPlus;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,3 @@\n+import jdk.internal.util.ArraysSupport;\n+import sun.security.action.GetPropertyAction;\n+\n@@ -37,0 +40,2 @@\n+    private static final int DEFAULT_MAX_EVENT_LIST_SIZE = 512;\n+\n@@ -38,1 +43,1 @@\n-     * Maximum size of event list (in the future this may be tunable)\n+     * Maximum size of event list before dropping events and signalling OVERFLOW\n@@ -40,1 +45,18 @@\n-    static final int MAX_EVENT_LIST_SIZE    = 512;\n+    static final int MAX_EVENT_LIST_SIZE;\n+    static {\n+        String rawValue = GetPropertyAction.privilegedGetProperty(\n+            \"jdk.nio.file.WatchService.maxEventsPerPoll\",\n+            String.valueOf(DEFAULT_MAX_EVENT_LIST_SIZE));\n+        int intValue;\n+        try {\n+            \/\/ Clamp to max array length to signal OVERFLOW and drop events\n+            \/\/ before OOMing.\n+            intValue = Math.clamp(\n+                Long.decode(rawValue),\n+                1,\n+                ArraysSupport.SOFT_MAX_ARRAY_LENGTH);\n+        } catch (NumberFormatException e) {\n+            intValue = DEFAULT_MAX_EVENT_LIST_SIZE;\n+        }\n+        MAX_EVENT_LIST_SIZE = intValue;\n+    }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/AbstractWatchKey.java","additions":25,"deletions":3,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -372,2 +372,2 @@\n-        if (preferredPropList != null &&\n-                (pList = preferredPropList.getAll(type, name)) != null) {\n+        if (preferredPropList != null) {\n+            pList = preferredPropList.getAll(type, name);\n@@ -376,0 +376,3 @@\n+                if (p == null) {\n+                    continue;\n+                }\n@@ -382,1 +385,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderList.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -262,0 +262,18 @@\n+\n+            if (parent == null) {\n+                \/\/ check nonlikelyScript locales\n+                if (CLDRBaseLocaleDataMetaInfo.nonlikelyScript && locale.getCountry().isEmpty()) {\n+                    var lang = \" \" + locale.getLanguage() + \" \";\n+                    var script= locale.getScript();\n+                    if (!script.isEmpty()) {\n+                        parent = baseMetaInfo.likelyScriptMap().entrySet().stream()\n+                            .filter(e -> e.getValue().contains(lang))\n+                            .findAny()\n+                            .map(Map.Entry::getKey)\n+                            .map(likely -> likely.equals(script) ? null : Locale.ROOT)\n+                            .orElse(null);\n+                    }\n+                }\n+            }\n+\n+            \/\/ no parent found\n","filename":"src\/java.base\/share\/classes\/sun\/util\/cldr\/CLDRLocaleProviderAdapter.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-import java.util.concurrent.ConcurrentHashMap;\n+import java.util.function.UnaryOperator;\n@@ -96,1 +96,1 @@\n-            ReferencedKeySet.create(true, ConcurrentHashMap::new);\n+            ReferencedKeySet.create(true, ReferencedKeySet.concurrentHashMapSupplier());\n@@ -167,5 +167,2 @@\n-            (b) -> new BaseLocale(\n-                LocaleUtils.toLowerString(b.language).intern(),\n-                LocaleUtils.toTitleString(b.script).intern(),\n-                LocaleUtils.toUpperString(b.region).intern(),\n-                b.variant.intern()));\n+                \/\/ Avoid lambdas since this may be on the bootstrap path in many locales\n+                INTERNER);\n@@ -174,0 +171,11 @@\n+    public static final UnaryOperator<BaseLocale> INTERNER = new UnaryOperator<>() {\n+        @Override\n+        public BaseLocale apply(BaseLocale b) {\n+            return new BaseLocale(\n+                    LocaleUtils.toLowerString(b.language).intern(),\n+                    LocaleUtils.toTitleString(b.script).intern(),\n+                    LocaleUtils.toUpperString(b.region).intern(),\n+                    b.variant.intern());\n+        }\n+    };\n+\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/BaseLocale.java","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-Github: https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/b5bf572c52988dbe9d865b8f090ea819024a9936\/public_suffix_list.dat\n-Date: 2023-11-09\n+Github: https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/1cbd6e71a9b83620b1d0b11e49d3d9ff48c27e22\/public_suffix_list.dat\n+Date: 2024-05-07\n","filename":"src\/java.base\/share\/data\/publicsuffixlist\/VERSION","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -6713,1 +6713,1 @@\n-\/\/ List of new gTLDs imported from https:\/\/www.icann.org\/resources\/registries\/gtlds\/v2\/gtlds.json on 2023-11-03T15:13:18Z\n+\/\/ List of new gTLDs imported from https:\/\/www.icann.org\/resources\/registries\/gtlds\/v2\/gtlds.json on 2024-05-04T15:12:50Z\n@@ -6899,1 +6899,1 @@\n-\/\/ aol : Oath Inc.\n+\/\/ aol : Yahoo Inc.\n@@ -6991,4 +6991,0 @@\n-\/\/ avianca : Avianca Inc.\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/avianca.html\n-avianca\n-\n@@ -7019,4 +7015,0 @@\n-\/\/ bananarepublic : The Gap, Inc.\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/bananarepublic.html\n-bananarepublic\n-\n@@ -7547,4 +7539,0 @@\n-\/\/ comcast : Comcast IP Holdings I, LLC\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/comcast.html\n-comcast\n-\n@@ -7755,0 +7743,4 @@\n+\/\/ desi\n+\/\/ https:\/\/www.iana.org\/domains\/root\/db\/desi.html\n+desi\n+\n@@ -7799,1 +7791,1 @@\n-\/\/ diy : Lifestyle Domain Holdings, Inc.\n+\/\/ diy : Internet Naming Company LLC\n@@ -7931,4 +7923,0 @@\n-\/\/ etisalat : Emirates Telecommunications Corporation (trading as Etisalat)\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/etisalat.html\n-etisalat\n-\n@@ -8107,1 +8095,1 @@\n-\/\/ food : Lifestyle Domain Holdings, Inc.\n+\/\/ food : Internet Naming Company LLC\n@@ -8167,1 +8155,1 @@\n-\/\/ fun : Radix FZC DMCC\n+\/\/ fun : Radix Technologies Inc.\n@@ -8315,1 +8303,1 @@\n-\/\/ goo : NTT Resonant Inc.\n+\/\/ goo : NTT DOCOMO, INC.\n@@ -8367,4 +8355,0 @@\n-\/\/ guardian : The Guardian Life Insurance Company of America\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/guardian.html\n-guardian\n-\n@@ -8503,1 +8487,1 @@\n-\/\/ host : Radix FZC DMCC\n+\/\/ host : Radix Technologies Inc.\n@@ -8723,1 +8707,1 @@\n-\/\/ juegos : Internet Naming Company LLC\n+\/\/ juegos : Dog Beach, LLC\n@@ -8911,1 +8895,1 @@\n-\/\/ lifestyle : Lifestyle Domain Holdings, Inc.\n+\/\/ lifestyle : Internet Naming Company LLC\n@@ -8951,1 +8935,1 @@\n-\/\/ living : Lifestyle Domain Holdings, Inc.\n+\/\/ living : Internet Naming Company LLC\n@@ -9395,4 +9379,0 @@\n-\/\/ oldnavy : The Gap, Inc.\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/oldnavy.html\n-oldnavy\n-\n@@ -9419,1 +9399,1 @@\n-\/\/ online : Radix FZC DMCC\n+\/\/ online : Radix Technologies Inc.\n@@ -9623,1 +9603,1 @@\n-\/\/ press : Radix FZC DMCC\n+\/\/ press : Radix Technologies Inc.\n@@ -9931,4 +9911,0 @@\n-\/\/ sca : SVENSKA CELLULOSA AKTIEBOLAGET SCA (publ)\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/sca.html\n-sca\n-\n@@ -10079,1 +10055,1 @@\n-\/\/ site : Radix FZC DMCC\n+\/\/ site : Radix Technologies Inc.\n@@ -10159,1 +10135,1 @@\n-\/\/ space : Radix FZC DMCC\n+\/\/ space : Radix Technologies Inc.\n@@ -10211,1 +10187,1 @@\n-\/\/ store : Radix FZC DMCC\n+\/\/ store : Radix Technologies Inc.\n@@ -10327,1 +10303,1 @@\n-\/\/ tech : Radix FZC DMCC\n+\/\/ tech : Radix Technologies Inc.\n@@ -10511,1 +10487,1 @@\n-\/\/ uno : Radix FZC DMCC\n+\/\/ uno : Radix Technologies Inc.\n@@ -10527,1 +10503,1 @@\n-\/\/ vana : Lifestyle Domain Holdings, Inc.\n+\/\/ vana : Internet Naming Company LLC\n@@ -10611,4 +10587,0 @@\n-\/\/ volkswagen : Volkswagen Group of America Inc.\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/volkswagen.html\n-volkswagen\n-\n@@ -10679,1 +10651,1 @@\n-\/\/ website : Radix FZC DMCC\n+\/\/ website : Radix Technologies Inc.\n@@ -10683,0 +10655,4 @@\n+\/\/ wed\n+\/\/ https:\/\/www.iana.org\/domains\/root\/db\/wed.html\n+wed\n+\n@@ -10771,4 +10747,0 @@\n-\/\/ xfinity : Comcast IP Holdings I, LLC\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/xfinity.html\n-xfinity\n-\n@@ -11015,4 +10987,0 @@\n-\/\/ xn--mgbaakc7dvf : Emirates Telecommunications Corporation (trading as Etisalat)\n-\/\/ https:\/\/www.iana.org\/domains\/root\/db\/xn--mgbaakc7dvf.html\n-اتصالات\n-\n@@ -11155,1 +11123,1 @@\n-\/\/ yahoo : Oath Inc.\n+\/\/ yahoo : Yahoo Inc.\n@@ -11220,0 +11188,6 @@\n+\/\/ 12CHARS: https:\/\/12chars.com\n+\/\/ Submitted by Kenny Niehage <psl@12chars.com>\n+12chars.dev\n+12chars.it\n+12chars.pro\n+\n@@ -11229,0 +11203,9 @@\n+\/\/ AAA workspace : https:\/\/aaa.vodka\n+\/\/ Submitted by Kirill Rezraf <admin@aaa.vodka>\n+aaa.vodka\n+\n+\/\/ A2 Hosting\n+\/\/ Submitted by Tyler Hall <sysadmin@a2hosting.com>\n+a2hosted.com\n+cpserver.com\n+\n@@ -11245,0 +11228,4 @@\n+\/\/ Adaptable.io : https:\/\/adaptable.io\n+\/\/ Submitted by Mark Terrel <support@adaptable.io>\n+adaptable.app\n+\n@@ -11249,0 +11236,1 @@\n+aem.live\n@@ -11251,0 +11239,1 @@\n+aem.page\n@@ -11322,1 +11311,1 @@\n-\/\/ Reference: 4d863337-ff98-4501-a6f2-361eba8445d6\n+\/\/ Reference: 9e37648f-a66c-4655-9ab1-5981f8737197\n@@ -11337,0 +11326,1 @@\n+execute-api.ca-west-1.amazonaws.com\n@@ -11363,1 +11353,1 @@\n-\/\/ Reference: 7bee1013-f456-47df-bfe8-03c78d946d61\n+\/\/ Reference: 09588633-91fe-49d8-b4e7-ec36496d11f3\n@@ -11369,0 +11359,1 @@\n+auth.ap-south-2.amazoncognito.com\n@@ -11372,0 +11363,1 @@\n+auth.ap-southeast-4.amazoncognito.com\n@@ -11374,0 +11366,1 @@\n+auth.eu-central-2.amazoncognito.com\n@@ -11376,0 +11369,1 @@\n+auth.eu-south-2.amazoncognito.com\n@@ -11380,0 +11374,1 @@\n+auth.me-central-1.amazoncognito.com\n@@ -11402,1 +11397,1 @@\n-\/\/ Reference: 597f3f8e-9283-4e48-8e32-7ee25a1ff6ab\n+\/\/ Reference: 82f43f9f-bbb8-400e-8349-854f5a62f20d\n@@ -11427,0 +11422,3 @@\n+emrappui-prod.ap-south-2.amazonaws.com\n+emrnotebooks-prod.ap-south-2.amazonaws.com\n+emrstudio-prod.ap-south-2.amazonaws.com\n@@ -11436,0 +11434,3 @@\n+emrappui-prod.ap-southeast-4.amazonaws.com\n+emrnotebooks-prod.ap-southeast-4.amazonaws.com\n+emrstudio-prod.ap-southeast-4.amazonaws.com\n@@ -11439,0 +11440,3 @@\n+emrappui-prod.ca-west-1.amazonaws.com\n+emrnotebooks-prod.ca-west-1.amazonaws.com\n+emrstudio-prod.ca-west-1.amazonaws.com\n@@ -11442,0 +11446,3 @@\n+emrappui-prod.eu-central-2.amazonaws.com\n+emrnotebooks-prod.eu-central-2.amazonaws.com\n+emrstudio-prod.eu-central-2.amazonaws.com\n@@ -11448,0 +11455,3 @@\n+emrappui-prod.eu-south-2.amazonaws.com\n+emrnotebooks-prod.eu-south-2.amazonaws.com\n+emrstudio-prod.eu-south-2.amazonaws.com\n@@ -11457,0 +11467,3 @@\n+emrappui-prod.il-central-1.amazonaws.com\n+emrnotebooks-prod.il-central-1.amazonaws.com\n+emrstudio-prod.il-central-1.amazonaws.com\n@@ -11487,1 +11500,1 @@\n-\/\/ Reference: 4ab55e6f-90c0-4a8d-b6a0-52ca5dbb1c2e\n+\/\/ Reference: 87f24ece-a77e-40e8-bb4a-f6b74fe9f975\n@@ -11490,0 +11503,2 @@\n+*.af-south-1.airflow.amazonaws.com\n+*.ap-east-1.airflow.amazonaws.com\n@@ -11498,0 +11513,1 @@\n+*.eu-south-1.airflow.amazonaws.com\n@@ -11501,0 +11517,1 @@\n+*.me-south-1.airflow.amazonaws.com\n@@ -11504,0 +11521,1 @@\n+*.us-west-1.airflow.amazonaws.com\n@@ -11508,1 +11526,1 @@\n-\/\/ Reference: 0e801048-08f2-4064-9cb8-e7373e0b57f4\n+\/\/ Reference: cd5c8b3a-67b7-4b40-9236-c87ce81a3d10\n@@ -11607,0 +11625,10 @@\n+s3.dualstack.ca-west-1.amazonaws.com\n+s3-accesspoint.dualstack.ca-west-1.amazonaws.com\n+s3-accesspoint-fips.dualstack.ca-west-1.amazonaws.com\n+s3-fips.dualstack.ca-west-1.amazonaws.com\n+s3-website.dualstack.ca-west-1.amazonaws.com\n+s3.ca-west-1.amazonaws.com\n+s3-accesspoint.ca-west-1.amazonaws.com\n+s3-accesspoint-fips.ca-west-1.amazonaws.com\n+s3-fips.ca-west-1.amazonaws.com\n+s3-website.ca-west-1.amazonaws.com\n@@ -11787,0 +11815,16 @@\n+\/\/ Amazon SageMaker Ground Truth\n+\/\/ Submitted by AWS Security <psl-maintainers@amazon.com>\n+\/\/ Reference: 98dbfde4-7802-48c3-8751-b60f204e0d9c\n+labeling.ap-northeast-1.sagemaker.aws\n+labeling.ap-northeast-2.sagemaker.aws\n+labeling.ap-south-1.sagemaker.aws\n+labeling.ap-southeast-1.sagemaker.aws\n+labeling.ap-southeast-2.sagemaker.aws\n+labeling.ca-central-1.sagemaker.aws\n+labeling.eu-central-1.sagemaker.aws\n+labeling.eu-west-1.sagemaker.aws\n+labeling.eu-west-2.sagemaker.aws\n+labeling.us-east-1.sagemaker.aws\n+labeling.us-east-2.sagemaker.aws\n+labeling.us-west-2.sagemaker.aws\n+\n@@ -11789,1 +11833,1 @@\n-\/\/ Reference: fe8c9e94-5a22-486d-8750-991a3a9b13c6\n+\/\/ Reference: b5ea56df-669e-43cc-9537-14aa172f5dfc\n@@ -11802,0 +11846,3 @@\n+notebook-fips.ca-central-1.sagemaker.aws\n+notebook.ca-west-1.sagemaker.aws\n+notebook-fips.ca-west-1.sagemaker.aws\n@@ -11823,0 +11870,1 @@\n+notebook-fips.us-west-1.sagemaker.aws\n@@ -11830,1 +11878,1 @@\n-\/\/ Reference: 057ee397-6bf8-4f20-b807-d7bc145ac980\n+\/\/ Reference: 69c723d9-6e1a-4bff-a203-48eecd203183\n@@ -11844,0 +11892,1 @@\n+studio.eu-south-2.sagemaker.aws\n@@ -11888,1 +11937,1 @@\n-\/\/ Reference: 05c44955-977c-4b57-938a-f2af92733f9f\n+\/\/ Reference: 30717f72-4007-4f0f-8ed4-864c6f2efec9\n@@ -11934,0 +11983,2 @@\n+webview-assets.aws-cloud9.il-central-1.amazonaws.com\n+vfs.cloud9.il-central-1.amazonaws.com\n@@ -11953,0 +12004,5 @@\n+\/\/ AWS Directory Service\n+\/\/ Submitted by AWS Security <psl-maintainers@amazon.com>\n+\/\/ Reference: a13203e8-42dc-4045-a0d2-2ee67bed1068\n+awsapps.com\n+\n@@ -11996,0 +12052,5 @@\n+\/\/ AWS re:Post Private\n+\/\/ Submitted by AWS Security <psl-maintainers@amazon.com>\n+\/\/ Reference: 83385945-225f-416e-9aa0-ad0632bfdcee\n+*.private.repost.aws\n+\n@@ -12013,0 +12074,4 @@\n+\/\/ Apis Networks: https:\/\/apisnetworks.com\n+\/\/ Submitted by Matt Saladna <matt@apisnetworks.com>\n+panel.dev\n+\n@@ -12030,0 +12095,4 @@\n+\/\/ Aquapal : https:\/\/aquapal.net\/\n+\/\/ Submitted by Aki Ueno <admin@aquapal.net>\n+f5.si\n+\n@@ -12065,0 +12134,1 @@\n+myfritz.link\n@@ -12124,0 +12194,4 @@\n+\/\/ Besties : https:\/\/besties.house\n+\/\/ Submitted by Hazel Cora <hazy@besties.house>\n+pages.gay\n+\n@@ -12128,0 +12202,4 @@\n+\/\/ University of Bielsko-Biala regional domain: http:\/\/dns.bielsko.pl\/\n+\/\/ Submitted by Marcin <dns@ath.bielsko.pl>\n+bielsko.pl\n+\n@@ -12169,0 +12247,4 @@\n+\/\/ Brave : https:\/\/brave.com\n+\/\/ Submitted by Andrea Brancaleoni <abrancaleoni@brave.com>\n+*.s.brave.io\n+\n@@ -12170,1 +12252,2 @@\n-\/\/ Submitted by Dusan Radovanovic <dusan.radovanovic@brendly.rs>\n+\/\/ Submitted by Dusan Radovanovic <administracija@brendly.rs>\n+shop.brendly.hr\n@@ -12194,0 +12277,1 @@\n+*.my.canvasite.cn\n@@ -12195,0 +12279,1 @@\n+*.my.canva.site\n@@ -12332,0 +12417,6 @@\n+\/\/ cloudscale.ch AG : https:\/\/www.cloudscale.ch\/\n+\/\/ Submitted by Gaudenz Steinlin <support@cloudscale.ch>\n+cust.cloudscale.ch\n+objects.lpg.cloudscale.ch\n+objects.rma.cloudscale.ch\n+\n@@ -12349,1 +12440,2 @@\n-c.cdn77.org\n+cdn77-storage.com\n+rsc.contentproxy9.cz\n@@ -12352,1 +12444,0 @@\n-rsc.cdn77.org\n@@ -12354,0 +12445,2 @@\n+c.cdn77.org\n+rsc.cdn77.org\n@@ -12356,1 +12449,1 @@\n-\/\/ Submitted by Aleksander Hristov <noc@cloudns.net>\n+\/\/ Submitted by Aleksander Hristov <noc@cloudns.net> & Boyan Peychev <boyan@cloudns.net>\n@@ -12358,0 +12451,1 @@\n+cloudns.be\n@@ -12359,1 +12453,0 @@\n-cloudns.club\n@@ -12361,0 +12454,5 @@\n+cloudns.ch\n+cloudns.cl\n+cloudns.club\n+dnsabr.com\n+cloudns.cx\n@@ -12364,0 +12462,3 @@\n+dns-cloud.net\n+dns-dynamic.net\n+cloudns.nz\n@@ -12365,0 +12466,1 @@\n+cloudns.ph\n@@ -12377,0 +12479,5 @@\n+\/\/ CodeSandbox B.V. : https:\/\/codesandbox.io\n+\/\/ Submitted by Ives van Hoorne <abuse@codesandbox.io>\n+csb.app\n+preview.csb.app\n+\n@@ -12386,0 +12493,4 @@\n+\/\/ Convex : https:\/\/convex.dev\/\n+\/\/ Submitted by James Cowling <security@convex.dev>\n+convex.site\n+\n@@ -12407,0 +12518,4 @@\n+\/\/ cPanel L.L.C. : https:\/\/www.cpanel.net\/\n+\/\/ Submitted by Dustin Scherer <public.suffix@cpanel.net>\n+*.cprapid.com\n+\n@@ -12411,0 +12526,4 @@\n+\/\/ Crisp IM SAS : https:\/\/crisp.chat\/\n+\/\/ Submitted by Baptiste Jamin <hostmaster@crisp.chat>\n+on.crisp.email\n+\n@@ -12431,0 +12550,7 @@\n+\/\/ Cyclic Software : https:\/\/www.cyclic.sh\n+\/\/ Submitted by Kam Lasater <dns-admin@cyclic.sh>\n+cyclic.app\n+cyclic.cloud\n+cyclic-app.com\n+cyclic.co.in\n+\n@@ -12476,0 +12602,1 @@\n+darklang.io\n@@ -12874,0 +13001,4 @@\n+\/\/ DigitalPlat : https:\/\/www.digitalplat.org\/\n+\/\/ Submitted by Edward Hsing <contact@digitalplat.org>\n+us.kg\n+\n@@ -12911,0 +13042,12 @@\n+\/\/ EasyWP : https:\/\/www.easywp.com\n+\/\/ Submitted by <infracloudteam@namecheap.com>\n+*.ewp.live\n+\n+\/\/ Electromagnetic Field : https:\/\/www.emfcamp.org\n+\/\/ Submitted by <noc@emfcamp.org>\n+at.emf.camp\n+\n+\/\/ Elefunc, Inc. : https:\/\/elefunc.com\n+\/\/ Submitted by Cetin Sert <domains@elefunc.com>\n+rt.ht\n+\n@@ -13025,4 +13168,0 @@\n-\/\/ Facebook, Inc.\n-\/\/ Submitted by Peter Ruibal <public-suffix@fb.com>\n-apps.fbsbx.com\n-\n@@ -13186,0 +13325,4 @@\n+\/\/ FlutterFlow : https:\/\/flutterflow.io\n+\/\/ Submitted by Anton Emelyanov <anton@flutterflow.io>\n+flutterflow.app\n+\n@@ -13196,1 +13339,1 @@\n-\/\/ Forgerock : https:\/\/www.forgerock.com\n+\/\/ Forgerock : https:\/\/www.forgerock.com\n@@ -13202,1 +13345,2 @@\n-\/\/ Submitted by Koen Rouwhorst <koenrh@framer.com>\n+\/\/ Submitted by Koen Rouwhorst <security@framer.com>\n+framer.ai\n@@ -13243,0 +13387,18 @@\n+\/\/ Future Versatile Group. ：https:\/\/www.fvg-on.net\/\n+\/\/ T.Kabu <webmaster@fvg-on.net>\n+daemon.asia\n+dix.asia\n+mydns.bz\n+0am.jp\n+0g0.jp\n+0j0.jp\n+0t0.jp\n+mydns.jp\n+pgw.jp\n+wjg.jp\n+keyword-on.net\n+live-on.net\n+server-on.net\n+mydns.tw\n+mydns.vc\n+\n@@ -13254,0 +13416,4 @@\n+\/\/ GCom Internet : https:\/\/www.gcom.net.au\n+\/\/ Submitted by Leo Julius <support@gcom.net.au>\n+aliases121.com\n+\n@@ -13282,3 +13448,5 @@\n-\/\/ Ghost Foundation : https:\/\/ghost.org\n-\/\/ Submitted by Matt Hanley <security@ghost.org>\n-ghost.io\n+\/\/ Getlocalcert: https:\/\/www.getlocalcert.net\n+\/\/ Submitted by Robert Alexander <support@getlocalcert.net>\n+localcert.net\n+localhostcert.net\n+corpnet.work\n@@ -13428,0 +13596,4 @@\n+\/\/ GoDaddy Registry : https:\/\/registry.godaddy\n+\/\/ Submitted by Rohan Durrant <tldns@registry.godaddy>\n+graphic.design\n+\n@@ -13437,4 +13609,0 @@\n-\/\/ UKHomeOffice : https:\/\/www.gov.uk\/government\/organisations\/home-office\n-\/\/ Submitted by Jon Shanks <jon.shanks@digital.homeoffice.gov.uk>\n-homeoffice.gov.uk\n-\n@@ -13451,2 +13619,1 @@\n-run.app\n-a.run.app\n+*.run.app\n@@ -13552,0 +13719,4 @@\n+\/\/ GrayJay Web Solutions Inc. : https:\/\/grayjaysports.ca\n+\/\/ Submitted by Matt Yamkowy <info@grayjaysports.ca>\n+grayjayleagues.com\n+\n@@ -13586,0 +13757,5 @@\n+\/\/ Helio Networks : https:\/\/heliohost.org\n+\/\/ Submitted by Ben Frede <admin@heliohost.org>\n+helioho.st\n+heliohost.us\n+\n@@ -13599,1 +13775,0 @@\n-ravendb.me\n@@ -13607,0 +13782,6 @@\n+\/\/ Homebase : https:\/\/homebase.id\/\n+\/\/ Submitted by Jason Babo <info@homebase.id>\n+*.kin.one\n+*.id.pub\n+*.kin.pub\n+\n@@ -13684,1 +13865,1 @@\n-\/\/ Submitted by Jacob Slater <whois@igloo.to>\n+\/\/ Submitted by June Slater <whois@igloo.to>\n@@ -13733,0 +13914,8 @@\n+\/\/ is-a.dev : https:\/\/www.is-a.dev\n+\/\/ Submitted by William Harrison <admin@maintainers.is-a.dev>\n+is-a.dev\n+\n+\/\/ ir.md : https:\/\/nic.ir.md\n+\/\/ Submitted by Ali Soizi <info@nic.ir.md>\n+ir.md\n+\n@@ -13841,0 +14030,5 @@\n+\/\/ JouwWeb B.V. : https:\/\/www.jouwweb.nl\n+\/\/ Submitted by Camilo Sperberg <tech@webador.com>\n+jouwweb.site\n+webadorsite.com\n+\n@@ -13914,0 +14108,4 @@\n+\/\/ Libre IT Ltd : https:\/\/libre.nz\n+\/\/ Submitted by Tomas Maggio <support@libre.nz>\n+runcontainers.dev\n+\n@@ -13924,4 +14122,0 @@\n-\/\/ Lightmaker Property Manager, Inc. : https:\/\/app.lmpm.com\/\n-\/\/ Submitted by Greg Holland <greg.holland@lmpm.com>\n-app.lmpm.com\n-\n@@ -14060,0 +14254,5 @@\n+\/\/ Meta Platforms, Inc. : https:\/\/meta.com\/\n+\/\/ Submitted by Jacob Cordero <public-suffix@meta.com>\n+atmeta.com\n+apps.fbsbx.com\n+\n@@ -14080,0 +14279,2 @@\n+\/\/ Managed by Corporate Domains\n+\/\/ Microsoft Azure : https:\/\/home.azure\n@@ -14081,0 +14282,3 @@\n+azure-api.net\n+azureedge.net\n+azurefd.net\n@@ -14083,1 +14287,0 @@\n-cloudapp.net\n@@ -14097,0 +14300,4 @@\n+cloudapp.net\n+trafficmanager.net\n+blob.core.windows.net\n+servicebus.windows.net\n@@ -14110,0 +14317,4 @@\n+\/\/ MODX Systems LLC : https:\/\/modx.com\n+\/\/ Submitted by Elizabeth Southwell <elizabeth@modx.com>\n+modx.dev\n+\n@@ -14156,0 +14367,4 @@\n+\/\/ NGO.US Registry : https:\/\/nic.ngo.us\n+\/\/ Submitted by Alstra Solutions Ltd. Networking Team <admin@alstra.org>\n+ngo.us\n+\n@@ -14171,0 +14386,1 @@\n+ngrok.pro\n@@ -14176,1 +14392,1 @@\n-\/\/ Submitted by Nicholas Ford <nick@nimbushosting.co.uk>\n+\/\/ Submitted by Nicholas Ford <dev@nimbushosting.co.uk>\n@@ -14178,0 +14394,1 @@\n+nimsite.uk\n@@ -14183,0 +14400,4 @@\n+\/\/ NFT.Storage : https:\/\/nft.storage\/\n+\/\/ Submitted by Vasco Santos <vasco.santos@protocol.ai> or <support@nft.storage>\n+ipfs.nftstorage.link\n+\n@@ -14333,0 +14554,4 @@\n+\/\/ O3O.Foundation : https:\/\/o3o.foundation\/\n+\/\/ Submitted by the prvcy.page Registry Team <psl@registry.prvcy.page>\n+prvcy.page\n+\n@@ -14362,1 +14587,0 @@\n-123sait.ru\n@@ -14380,0 +14604,7 @@\n+\/\/ Open Domains : https:\/\/open-domains.net\n+\/\/ Submitted by William Harrison <admin@open-domains.net>\n+is-cool.dev\n+is-not-a.dev\n+localplayer.dev\n+is-local.org\n+\n@@ -14400,0 +14631,5 @@\n+\/\/ OsSav Technology Ltd. : https:\/\/ossav.com\/\n+\/\/ TLD Nic: http:\/\/nic.can.re - TLD Whois Server: whois.can.re\n+\/\/ Submitted by OsSav Technology Ltd. <support@ossav.com>\n+can.re\n+\n@@ -14450,4 +14686,5 @@\n-bar0.net\n-bar1.net\n-bar2.net\n-rdv.to\n+*.xmit.co\n+xmit.dev\n+srv.us\n+gh.srv.us\n+gl.srv.us\n@@ -14486,1 +14723,2 @@\n-bc.platform.sh\n+*.upsun.app\n+upsunapp.com\n@@ -14505,0 +14743,4 @@\n+\/\/ Pley AB : https:\/\/www.pley.com\/\n+\/\/ Submitted by Henning Pohl <infra@pley.com>\n+pley.games\n+\n@@ -14536,4 +14778,0 @@\n-\/\/ privacytools.io : https:\/\/www.privacytools.io\/\n-\/\/ Submitted by Jonah Aragon <jonah@privacytools.io>\n-prvcy.page\n-\n@@ -14581,0 +14819,2 @@\n+myradweb.net\n+servername.us\n@@ -14604,2 +14844,2 @@\n-\/\/ Submitted by Nick Chang <nickchang@qnap.com>\n-dev-myqnapcloud.com\n+\/\/ Submitted by Nick Chang <cloudadmin@qnap.com>\n+myqnapcloud.cn\n@@ -14607,0 +14847,3 @@\n+dev-myqnapcloud.com\n+mycloudnas.com\n+mynascloud.com\n@@ -14647,1 +14890,3 @@\n-\/\/ Submitted by Lincoln Bergeson <lincoln@replit.com>\n+\/\/ Submitted by Lincoln Bergeson <psl@repl.it>\n+replit.app\n+id.replit.app\n@@ -14652,0 +14897,27 @@\n+replit.dev\n+archer.replit.dev\n+bones.replit.dev\n+canary.replit.dev\n+global.replit.dev\n+hacker.replit.dev\n+id.replit.dev\n+janeway.replit.dev\n+kim.replit.dev\n+kira.replit.dev\n+kirk.replit.dev\n+odo.replit.dev\n+paris.replit.dev\n+picard.replit.dev\n+pike.replit.dev\n+prerelease.replit.dev\n+reed.replit.dev\n+riker.replit.dev\n+sisko.replit.dev\n+spock.replit.dev\n+staging.replit.dev\n+sulu.replit.dev\n+tarpit.replit.dev\n+teams.replit.dev\n+tucker.replit.dev\n+wesley.replit.dev\n+worf.replit.dev\n@@ -14748,1 +15020,1 @@\n-\/\/ Submitted by Michael Biven <mbiven@salesforce.com>\n+\/\/ Submitted by Michael Biven <mbiven@salesforce.com> and Aaron Romeo <aaron.romeo@salesforce.com>\n@@ -14752,0 +15024,1 @@\n+*.001.test.code-builder-stg.platform.salesforce.com\n@@ -14767,0 +15040,1 @@\n+cockpit.fr-par.scw.cloud\n@@ -14777,0 +15051,1 @@\n+cockpit.nl-ams.scw.cloud\n@@ -14782,0 +15057,1 @@\n+cockpit.pl-waw.scw.cloud\n@@ -14803,0 +15079,4 @@\n+\/\/ Scrypted : https:\/\/scrypted.app\n+\/\/ Submitted by Koushik Dutta <public-suffix-list@scrypted.app>\n+client.scrypted.io\n+\n@@ -14842,0 +15122,4 @@\n+\/\/ Sheezy.Art : https:\/\/sheezy.art\n+\/\/ Submitted by Nyoom <admin@sheezy.art>\n+sheezy.games\n+\n@@ -14890,1 +15174,1 @@\n-\/\/ Former AFNIC's SLDs \n+\/\/ Former AFNIC's SLDs\n@@ -14912,3 +15196,3 @@\n-\/\/ Submitted by Faith Olapade <faith.olapade@snowflake.com>\n-snowflake.app\n-privatelink.snowflake.app\n+\/\/ Submitted by Sam Haar <psl@snowflake.com>\n+*.snowflake.app\n+*.privatelink.snowflake.app\n@@ -14926,0 +15210,6 @@\n+\/\/ StackBlitz : https:\/\/stackblitz.com\n+\/\/ Submitted by Dominic Elm <hello@stackblitz.com>\n+w-corp-staticblitz.com\n+w-credentialless-staticblitz.com\n+w-staticblitz.com\n+\n@@ -14930,0 +15220,8 @@\n+\/\/ STACKIT : https:\/\/www.stackit.de\/en\/\n+\/\/ Submitted by STACKIT-DNS Team (Simon Stier) <stackit-dns@mail.schwarz>\n+runs.onstackit.cloud\n+stackit.gg\n+stackit.rocks\n+stackit.run\n+stackit.zone\n+\n@@ -14996,0 +15294,13 @@\n+\/\/ stereosense GmbH : https:\/\/www.involve.me\n+\/\/ Submitted by Florian Burmann <publicsuffix@involve.me>\n+feedback.ac\n+forms.ac\n+assessments.cx\n+calculators.cx\n+funnels.cx\n+paynow.cx\n+quizzes.cx\n+researched.cx\n+tests.cx\n+surveys.so\n+\n@@ -15004,0 +15315,6 @@\n+\/\/ Streak : https:\/\/streak.com\n+\/\/ Submitted by Blake Kadatz <eng@streak.com>\n+streak-link.com\n+streaklinks.com\n+streakusercontent.com\n+\n@@ -15066,0 +15383,1 @@\n+*.c.ts.net\n@@ -15199,0 +15517,4 @@\n+\/\/ Unison Computing, PBC : https:\/\/unison.cloud\n+\/\/ Submitted by Simon Højberg <security@unison.cloud>\n+unison-services.cloud\n+\n@@ -15248,42 +15570,0 @@\n-\/\/ Voxel.sh DNS : https:\/\/voxel.sh\/dns\/\n-\/\/ Submitted by Mia Rehlinger <dns@voxel.sh>\n-neko.am\n-nyaa.am\n-be.ax\n-cat.ax\n-es.ax\n-eu.ax\n-gg.ax\n-mc.ax\n-us.ax\n-xy.ax\n-nl.ci\n-xx.gl\n-app.gp\n-blog.gt\n-de.gt\n-to.gt\n-be.gy\n-cc.hn\n-blog.kg\n-io.kg\n-jp.kg\n-tv.kg\n-uk.kg\n-us.kg\n-de.ls\n-at.md\n-de.md\n-jp.md\n-to.md\n-indie.porn\n-vxl.sh\n-ch.tc\n-me.tc\n-we.tc\n-nyan.to\n-at.vg\n-blog.vu\n-dev.vu\n-me.vu\n-\n@@ -15302,0 +15582,5 @@\n+\/\/ Webflow, Inc. : https:\/\/www.webflow.com\n+\/\/ Submitted by Webflow Security Team <security@webflow.com>\n+webflow.io\n+webflowtest.io\n+\n@@ -15313,0 +15598,4 @@\n+\/\/ WebWaddle Ltd: https:\/\/webwaddle.com\/\n+\/\/ Submitted by Merlin Glander <hostmaster@webwaddle.com>\n+*.wadl.top\n+\n@@ -15421,0 +15710,4 @@\n+\/\/ ZAP-Hosting GmbH & Co. KG : https:\/\/zap-hosting.com\n+\/\/ Submitted by Julian Alker <security@zap-hosting.com>\n+zap.cloud\n+\n","filename":"src\/java.base\/share\/data\/publicsuffixlist\/public_suffix_list.dat","additions":449,"deletions":156,"binary":false,"changes":605,"status":"modified"},{"patch":"@@ -14,1 +14,1 @@\n-https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/b5bf572c52988dbe9d865b8f090ea819024a9936\/public_suffix_list.dat.\n+https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/1cbd6e71a9b83620b1d0b11e49d3d9ff48c27e22\/public_suffix_list.dat.\n","filename":"src\/java.base\/share\/legal\/public_suffix.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1106,2 +1106,1 @@\n-Shows all categories of settings.\n-This is the default value.\n+Shows all categories of settings in \\f[B]verbose\\f[R] detail.\n@@ -1115,0 +1114,15 @@\n+\\f[V]security\\f[R]\n+Shows all settings related to security.\n+.RS\n+.PP\n+sub-category arguments for \\f[V]security\\f[R] include the following:\n+.IP \\[bu] 2\n+\\f[V]security:all\\f[R] : shows all security settings\n+.IP \\[bu] 2\n+\\f[V]security:properties\\f[R] : shows security properties\n+.IP \\[bu] 2\n+\\f[V]security:providers\\f[R] : shows static security provider settings\n+.IP \\[bu] 2\n+\\f[V]security:tls\\f[R] : shows TLS related security settings\n+.RE\n+.TP\n","filename":"src\/java.base\/share\/man\/java.1","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -351,0 +351,2 @@\n+        Color tabbedPaneBg = new ColorUIResource(238, 238, 238);\n+        Color unselectedTabColor = new ColorUIResource(255, 255, 255);\n@@ -1023,0 +1025,5 @@\n+            \"TabbedPane.selected\", tabbedPaneBg,\n+            \"TabbedPane.contentOpaque\", Boolean.TRUE,\n+            \"TabbedPane.tabsOpaque\", Boolean.TRUE,\n+            \"TabbedPane.contentAreaColor\", tabbedPaneBg,\n+            \"TabbedPane.unselectedBackground\", unselectedTabColor,\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKLookAndFeel.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -975,0 +975,3 @@\n+        \/\/ Fill the tab rect area\n+        g.fillRect(x, y, w, h);\n+\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKPainter.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -316,1 +316,1 @@\n-            \/\/ reset current status byte to 0 (invalid value).\n+            \/\/ reset current running status byte to 0 (invalid value).\n@@ -319,1 +319,1 @@\n-            int status = 0;\n+            int runningStatus = 0;\n@@ -336,0 +336,1 @@\n+                int status;\n@@ -338,0 +339,5 @@\n+\n+                    \/\/ update running status (only for channel messages)\n+                    if ((status & 0xF0) != 0xF0) {\n+                        runningStatus = status;\n+                    }\n@@ -339,1 +345,2 @@\n-                    data1 = byteValue;\n+                    status = runningStatus;\n+                    data1  = byteValue;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/StandardMidiFileReader.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,0 +86,3 @@\n+      <uiColor name=\"nimbusTabbedPaneContentArea\">\n+         <matte red=\"238\" green=\"238\" blue=\"238\" alpha=\"255\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n+      <\/uiColor>\n@@ -21649,0 +21652,5 @@\n+               <uiProperty name=\"contentOpaque\" type=\"BOOLEAN\" value=\"true\"\/>\n+               <uiProperty name=\"tabsOpaque\" type=\"BOOLEAN\" value=\"true\"\/>\n+               <uiProperty name=\"contentAreaColor\" type=\"COLOR\">\n+                  <matte red=\"238\" green=\"238\" blue=\"238\" alpha=\"255\" uiDefaultParentName=\"nimbusTabbedPaneContentArea\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n+               <\/uiProperty>\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/skin.laf","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.awt.Color;\n@@ -124,0 +125,7 @@\n+    \/\/ Background color for selected tab and content pane\n+    private Color selectColor;\n+    \/\/ Background color for unselected tabs\n+    private Color unselectedBackground;\n+    private boolean contentOpaque = true;\n+    private boolean tabsOpaque = true;\n+\n@@ -149,0 +157,4 @@\n+        selectColor = UIManager.getColor(\"TabbedPane.selected\");\n+        contentOpaque = UIManager.getBoolean(\"TabbedPane.contentOpaque\");\n+        tabsOpaque = UIManager.getBoolean(\"TabbedPane.tabsOpaque\");\n+        unselectedBackground = UIManager.getColor(\"TabbedPane.unselectedBackground\");\n@@ -639,2 +651,11 @@\n-        tabContext.getPainter().paintTabbedPaneTabBackground(tabContext, g,\n-                x, y, width, height, tabIndex, placement);\n+\n+        if (isSelected) {\n+            g.setColor(selectColor);\n+        } else {\n+            g.setColor(getUnselectedBackgroundAt(tabIndex));\n+        }\n+\n+        if (tabsOpaque || tabPane.isOpaque()) {\n+            tabContext.getPainter().paintTabbedPaneTabBackground(tabContext, g,\n+                    x, y, width, height, tabIndex, placement);\n+        }\n@@ -658,0 +679,2 @@\n+        }\n+    }\n@@ -659,1 +682,4 @@\n-\n+    private Color getUnselectedBackgroundAt(int index) {\n+        Color color = tabPane.getBackgroundAt(index);\n+        if (color instanceof UIResource && unselectedBackground != null) {\n+            return unselectedBackground;\n@@ -661,0 +687,1 @@\n+        return color;\n@@ -740,0 +767,15 @@\n+\n+        if (tabPane.getTabCount() > 0 && (contentOpaque || tabPane.isOpaque())) {\n+            \/\/ Fill region behind content area\n+            Color color = UIManager.getColor(\"TabbedPane.contentAreaColor\");\n+            if (color != null) {\n+                g.setColor(color);\n+            } else if (selectColor == null || selectedIndex == -1) {\n+                g.setColor(tabPane.getBackground());\n+            } else {\n+                g.setColor(selectColor);\n+            }\n+            \/\/ fill content area rect for both GTK and Nimbus LAF here\n+            g.fillRect(x, y, w, h);\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthTabbedPaneUI.java","additions":46,"deletions":4,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -59,4 +59,0 @@\n-    public static CodePointIterator create(CharSequence text) {\n-        return new CharSequenceCodePointIterator(text);\n-    }\n-\n@@ -132,51 +128,0 @@\n-final class CharSequenceCodePointIterator extends CodePointIterator {\n-    private CharSequence text;\n-    private int index;\n-\n-    public CharSequenceCodePointIterator(CharSequence text) {\n-        this.text = text;\n-    }\n-\n-    public void setToStart() {\n-        index = 0;\n-    }\n-\n-    public void setToLimit() {\n-        index = text.length();\n-    }\n-\n-    public int next() {\n-        if (index < text.length()) {\n-            char cp1 = text.charAt(index++);\n-            if (Character.isHighSurrogate(cp1) && index < text.length()) {\n-                char cp2 = text.charAt(index+1);\n-                if (Character.isLowSurrogate(cp2)) {\n-                    ++index;\n-                    return Character.toCodePoint(cp1, cp2);\n-                }\n-            }\n-            return cp1;\n-        }\n-        return DONE;\n-    }\n-\n-    public int prev() {\n-        if (index > 0) {\n-            char cp2 = text.charAt(--index);\n-            if (Character.isLowSurrogate(cp2) && index > 0) {\n-                char cp1 = text.charAt(index - 1);\n-                if (Character.isHighSurrogate(cp1)) {\n-                    --index;\n-                    return Character.toCodePoint(cp1, cp2);\n-                }\n-            }\n-            return cp2;\n-        }\n-        return DONE;\n-    }\n-\n-    public int charIndex() {\n-        return index;\n-    }\n-}\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/CodePointIterator.java","additions":0,"deletions":55,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## GIFLIB v5.2.1\n+## GIFLIB v5.2.2\n@@ -27,1 +27,1 @@\n-https:\/\/sourceforge.net\/p\/giflib\/code\/ci\/master\/tree\/openbsd-reallocarray.c\n+tree\/README\n@@ -29,1 +29,19 @@\n-Copyright (c) 2008 Otto Moerbeek <otto@drijf.net>\n+== Authors ==\n+\n+Gershon Elber <gershon[AT]cs.technion.sc.il>\n+original giflib code\n+\n+Toshio Kuratomi <toshio[AT]tiki-lounge.com>\n+uncompressed gif writing code\n+former maintainer\n+\n+Eric Raymond <esr[AT]snark.thyrsus.com>\n+current as well as long time former maintainer of giflib code\n+\n+There have been many other contributors; see the attributions in the\n+version-control history to learn more.\n+\n+\n+tree\/openbsd-reallocarray.c\n+\n+Copyright (C) 2008 Otto Moerbeek <otto@drijf.net>\n@@ -31,0 +49,2 @@\n+\n+```\n","filename":"src\/java.desktop\/share\/legal\/giflib.md","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-#include <stdlib.h>\n+#include <fcntl.h>\n@@ -40,1 +40,0 @@\n-#include <fcntl.h>\n@@ -42,0 +41,1 @@\n+#include <stdlib.h>\n@@ -58,5 +58,5 @@\n-    \/\/fprintf(stderr, \"### Read: %d\\n\", len);\n-    return\n-    (((GifFilePrivateType*)gif->Private)->Read ?\n-     ((GifFilePrivateType*)gif->Private)->Read(gif,buf,len) :\n-     fread(buf,1,len,((GifFilePrivateType*)gif->Private)->File));\n+    \/\/ fprintf(stderr, \"### Read: %d\\n\", len);\n+    return (((GifFilePrivateType *)gif->Private)->Read\n+                ? ((GifFilePrivateType *)gif->Private)->Read(gif, buf, len)\n+                : fread(buf, 1, len,\n+                        ((GifFilePrivateType *)gif->Private)->File));\n@@ -69,1 +69,2 @@\n-static int DGifGetPrefixChar(GifPrefixType *Prefix, int Code, int ClearCode);\n+static int DGifGetPrefixChar(const GifPrefixType *Prefix, int Code,\n+                             int ClearCode);\n@@ -79,3 +80,1 @@\n-GifFileType *\n-DGifOpenFileName(const char *FileName, int *Error)\n-{\n+GifFileType *DGifOpenFileName(const char *FileName, int *Error) {\n@@ -86,1 +85,1 @@\n-        if (Error != NULL)\n+        if (Error != NULL) {\n@@ -88,0 +87,1 @@\n+        }\n@@ -100,3 +100,1 @@\n-GifFileType *\n-DGifOpenFileHandle(int FileHandle, int *Error)\n-{\n+GifFileType *DGifOpenFileHandle(int FileHandle, int *Error) {\n@@ -110,1 +108,1 @@\n-        if (Error != NULL)\n+        if (Error != NULL) {\n@@ -112,0 +110,1 @@\n+        }\n@@ -116,1 +115,1 @@\n-    \/*@i1@*\/memset(GifFile, '\\0', sizeof(GifFileType));\n+    \/*@i1@*\/ memset(GifFile, '\\0', sizeof(GifFileType));\n@@ -124,1 +123,1 @@\n-        if (Error != NULL)\n+        if (Error != NULL) {\n@@ -126,0 +125,1 @@\n+        }\n@@ -131,1 +131,1 @@\n-    \/*@i1@*\/memset(Private, '\\0', sizeof(GifFilePrivateType));\n+    \/*@i1@*\/ memset(Private, '\\0', sizeof(GifFilePrivateType));\n@@ -134,2 +134,2 @@\n-    _setmode(FileHandle, O_BINARY);    \/* Make sure it is in binary mode. *\/\n-#endif \/* _WIN32 *\/\n+    _setmode(FileHandle, O_BINARY); \/* Make sure it is in binary mode. *\/\n+#endif                                  \/* _WIN32 *\/\n@@ -137,1 +137,1 @@\n-    f = fdopen(FileHandle, \"rb\");    \/* Make it into a stream: *\/\n+    f = fdopen(FileHandle, \"rb\"); \/* Make it into a stream: *\/\n@@ -144,2 +144,2 @@\n-    Private->Read = NULL;        \/* don't use alternate input method (TVT) *\/\n-    GifFile->UserData = NULL;    \/* TVT *\/\n+    Private->Read = NULL;     \/* don't use alternate input method (TVT) *\/\n+    GifFile->UserData = NULL; \/* TVT *\/\n@@ -150,2 +150,3 @@\n-    if (InternalRead(GifFile, (unsigned char *)Buf, GIF_STAMP_LEN) != GIF_STAMP_LEN) {\n-        if (Error != NULL)\n+    if (InternalRead(GifFile, (unsigned char *)Buf, GIF_STAMP_LEN) !=\n+        GIF_STAMP_LEN) {\n+        if (Error != NULL) {\n@@ -153,0 +154,1 @@\n+        }\n@@ -162,1 +164,1 @@\n-        if (Error != NULL)\n+        if (Error != NULL) {\n@@ -164,0 +166,1 @@\n+        }\n@@ -180,1 +183,1 @@\n-    Private->gif89 = (Buf[GIF_VERSION_POS] == '9');\n+    Private->gif89 = (Buf[GIF_VERSION_POS + 1] == '9');\n@@ -188,3 +191,1 @@\n-GifFileType *\n-DGifOpen(void *userData, InputFunc readFunc, int *Error)\n-{\n+GifFileType *DGifOpen(void *userData, InputFunc readFunc, int *Error) {\n@@ -197,1 +198,1 @@\n-        if (Error != NULL)\n+        if (Error != NULL) {\n@@ -199,0 +200,1 @@\n+        }\n@@ -210,1 +212,1 @@\n-        if (Error != NULL)\n+        if (Error != NULL) {\n@@ -212,0 +214,1 @@\n+        }\n@@ -215,1 +218,1 @@\n-    \/*@i1@*\/memset(Private, '\\0', sizeof(GifFilePrivateType));\n+    \/*@i1@*\/ memset(Private, '\\0', sizeof(GifFilePrivateType));\n@@ -222,2 +225,2 @@\n-    Private->Read = readFunc;    \/* TVT *\/\n-    GifFile->UserData = userData;    \/* TVT *\/\n+    Private->Read = readFunc;     \/* TVT *\/\n+    GifFile->UserData = userData; \/* TVT *\/\n@@ -227,2 +230,3 @@\n-    if (InternalRead(GifFile, (unsigned char *)Buf, GIF_STAMP_LEN) != GIF_STAMP_LEN) {\n-        if (Error != NULL)\n+    if (InternalRead(GifFile, (unsigned char *)Buf, GIF_STAMP_LEN) !=\n+        GIF_STAMP_LEN) {\n+        if (Error != NULL) {\n@@ -230,0 +234,1 @@\n+        }\n@@ -238,1 +243,1 @@\n-        if (Error != NULL)\n+        if (Error != NULL) {\n@@ -240,0 +245,1 @@\n+        }\n@@ -248,1 +254,1 @@\n-        if (Error != NULL)\n+        if (Error != NULL) {\n@@ -250,0 +256,1 @@\n+        }\n@@ -256,1 +263,1 @@\n-    Private->gif89 = (Buf[GIF_VERSION_POS] == '9');\n+    Private->gif89 = (Buf[GIF_VERSION_POS + 1] == '9');\n@@ -265,3 +272,1 @@\n-int\n-DGifGetScreenDesc(GifFileType *GifFile)\n-{\n+int DGifGetScreenDesc(GifFileType *GifFile) {\n@@ -281,1 +286,1 @@\n-        DGifGetWord(GifFile, &GifFile->SHeight) == GIF_ERROR)\n+        DGifGetWord(GifFile, &GifFile->SHeight) == GIF_ERROR) {\n@@ -283,0 +288,1 @@\n+    }\n@@ -295,1 +301,1 @@\n-    if (Buf[0] & 0x80) {    \/* Do we have global color map? *\/\n+    if (Buf[0] & 0x80) { \/* Do we have global color map? *\/\n@@ -330,4 +336,2 @@\n-const char *\n-DGifGetGifVersion(GifFileType *GifFile)\n-{\n-    GifFilePrivateType *Private = (GifFilePrivateType *) GifFile->Private;\n+const char *DGifGetGifVersion(GifFileType *GifFile) {\n+    GifFilePrivateType *Private = (GifFilePrivateType *)GifFile->Private;\n@@ -335,1 +339,1 @@\n-    if (Private->gif89)\n+    if (Private->gif89) {\n@@ -337,1 +341,1 @@\n-    else\n+    } else {\n@@ -339,0 +343,1 @@\n+    }\n@@ -344,3 +349,1 @@\n-int\n-DGifGetRecordType(GifFileType *GifFile, GifRecordType* Type)\n-{\n+int DGifGetRecordType(GifFileType *GifFile, GifRecordType *Type) {\n@@ -362,1 +365,1 @@\n-    \/\/fprintf(stderr, \"### DGifGetRecordType: %02x\\n\", Buf);\n+    \/\/ fprintf(stderr, \"### DGifGetRecordType: %02x\\n\", Buf);\n@@ -364,13 +367,13 @@\n-      case DESCRIPTOR_INTRODUCER:\n-          *Type = IMAGE_DESC_RECORD_TYPE;\n-          break;\n-      case EXTENSION_INTRODUCER:\n-          *Type = EXTENSION_RECORD_TYPE;\n-          break;\n-      case TERMINATOR_INTRODUCER:\n-          *Type = TERMINATE_RECORD_TYPE;\n-          break;\n-      default:\n-          *Type = UNDEFINED_RECORD_TYPE;\n-          GifFile->Error = D_GIF_ERR_WRONG_RECORD;\n-          return GIF_ERROR;\n+    case DESCRIPTOR_INTRODUCER:\n+        *Type = IMAGE_DESC_RECORD_TYPE;\n+        break;\n+    case EXTENSION_INTRODUCER:\n+        *Type = EXTENSION_RECORD_TYPE;\n+        break;\n+    case TERMINATOR_INTRODUCER:\n+        *Type = TERMINATE_RECORD_TYPE;\n+        break;\n+    default:\n+        *Type = UNDEFINED_RECORD_TYPE;\n+        GifFile->Error = D_GIF_ERR_WRONG_RECORD;\n+        return GIF_ERROR;\n@@ -382,3 +385,1 @@\n-int\n-DGifGetImageHeader(GifFileType *GifFile)\n-{\n+int DGifGetImageHeader(GifFileType *GifFile) {\n@@ -398,1 +399,1 @@\n-        DGifGetWord(GifFile, &GifFile->Image.Height) == GIF_ERROR)\n+        DGifGetWord(GifFile, &GifFile->Image.Height) == GIF_ERROR) {\n@@ -400,0 +401,1 @@\n+    }\n@@ -418,1 +420,2 @@\n-        GifFile->Image.ColorMap = GifMakeMapObject(1 << BitsPerPixel, NULL);\n+        GifFile->Image.ColorMap =\n+            GifMakeMapObject(1 << BitsPerPixel, NULL);\n@@ -439,2 +442,2 @@\n-    Private->PixelCount = (long)GifFile->Image.Width *\n-       (long)GifFile->Image.Height;\n+    Private->PixelCount =\n+        (long)GifFile->Image.Width * (long)GifFile->Image.Height;\n@@ -450,3 +453,1 @@\n-int\n-DGifGetImageDesc(GifFileType *GifFile)\n-{\n+int DGifGetImageDesc(GifFileType *GifFile) {\n@@ -467,3 +468,3 @@\n-        SavedImage* new_saved_images =\n-            (SavedImage *)reallocarray(GifFile->SavedImages,\n-                            (GifFile->ImageCount + 1), sizeof(SavedImage));\n+        SavedImage *new_saved_images = (SavedImage *)reallocarray(\n+            GifFile->SavedImages, (GifFile->ImageCount + 1),\n+            sizeof(SavedImage));\n@@ -477,1 +478,1 @@\n-             (SavedImage *) malloc(sizeof(SavedImage))) == NULL) {\n+                 (SavedImage *)malloc(sizeof(SavedImage))) == NULL) {\n@@ -486,3 +487,3 @@\n-        sp->ImageDesc.ColorMap = GifMakeMapObject(\n-                                 GifFile->Image.ColorMap->ColorCount,\n-                                 GifFile->Image.ColorMap->Colors);\n+        sp->ImageDesc.ColorMap =\n+            GifMakeMapObject(GifFile->Image.ColorMap->ColorCount,\n+                             GifFile->Image.ColorMap->Colors);\n@@ -496,1 +497,1 @@\n-    sp->ExtensionBlocks = (ExtensionBlock *) NULL;\n+    sp->ExtensionBlocks = (ExtensionBlock *)NULL;\n@@ -506,3 +507,1 @@\n-int\n-DGifGetLine(GifFileType *GifFile, GifPixelType *Line, int LineLen)\n-{\n+int DGifGetLine(GifFileType *GifFile, GifPixelType *Line, int LineLen) {\n@@ -510,1 +509,1 @@\n-    GifFilePrivateType *Private = (GifFilePrivateType *) GifFile->Private;\n+    GifFilePrivateType *Private = (GifFilePrivateType *)GifFile->Private;\n@@ -518,1 +517,1 @@\n-    if (!LineLen)\n+    if (!LineLen) {\n@@ -520,0 +519,1 @@\n+    }\n@@ -528,3 +528,3 @@\n-            \/* We probably won't be called any more, so let's clean up\n-             * everything before we return: need to flush out all the\n-             * rest of image until an empty block (size 0)\n+            \/* We probably won't be called any more, so let's clean\n+             * up everything before we return: need to flush out all\n+             * the rest of image until an empty block (size 0)\n@@ -533,2 +533,3 @@\n-            do\n-                if (DGifGetCodeNext(GifFile, &Dummy) == GIF_ERROR)\n+            do {\n+                if (DGifGetCodeNext(GifFile, &Dummy) ==\n+                    GIF_ERROR) {\n@@ -536,1 +537,2 @@\n-            while (Dummy != NULL) ;\n+                }\n+            } while (Dummy != NULL);\n@@ -539,1 +541,1 @@\n-    } else\n+    } else {\n@@ -541,0 +543,1 @@\n+    }\n@@ -546,3 +549,1 @@\n-int\n-DGifGetPixel(GifFileType *GifFile, GifPixelType Pixel)\n-{\n+int DGifGetPixel(GifFileType *GifFile, GifPixelType Pixel) {\n@@ -550,1 +551,1 @@\n-    GifFilePrivateType *Private = (GifFilePrivateType *) GifFile->Private;\n+    GifFilePrivateType *Private = (GifFilePrivateType *)GifFile->Private;\n@@ -557,2 +558,1 @@\n-    if (--Private->PixelCount > 0xffff0000UL)\n-    {\n+    if (--Private->PixelCount > 0xffff0000UL) {\n@@ -565,3 +565,3 @@\n-            \/* We probably won't be called any more, so let's clean up\n-             * everything before we return: need to flush out all the\n-             * rest of image until an empty block (size 0)\n+            \/* We probably won't be called any more, so let's clean\n+             * up everything before we return: need to flush out all\n+             * the rest of image until an empty block (size 0)\n@@ -570,2 +570,3 @@\n-            do\n-                if (DGifGetCodeNext(GifFile, &Dummy) == GIF_ERROR)\n+            do {\n+                if (DGifGetCodeNext(GifFile, &Dummy) ==\n+                    GIF_ERROR) {\n@@ -573,1 +574,2 @@\n-            while (Dummy != NULL) ;\n+                }\n+            } while (Dummy != NULL);\n@@ -576,1 +578,1 @@\n-    } else\n+    } else {\n@@ -578,0 +580,1 @@\n+    }\n@@ -587,3 +590,2 @@\n-int\n-DGifGetExtension(GifFileType *GifFile, int *ExtCode, GifByteType **Extension)\n-{\n+int DGifGetExtension(GifFileType *GifFile, int *ExtCode,\n+                     GifByteType **Extension) {\n@@ -593,1 +595,1 @@\n-    \/\/fprintf(stderr, \"### -> DGifGetExtension:\\n\");\n+    \/\/ fprintf(stderr, \"### -> DGifGetExtension:\\n\");\n@@ -606,1 +608,2 @@\n-    \/\/fprintf(stderr, \"### <- DGifGetExtension: %02x, about to call next\\n\", Buf);\n+    \/\/ fprintf(stderr, \"### <- DGifGetExtension: %02x, about to call\n+    \/\/ next\\n\", Buf);\n@@ -616,3 +619,1 @@\n-int\n-DGifGetExtensionNext(GifFileType *GifFile, GifByteType ** Extension)\n-{\n+int DGifGetExtensionNext(GifFileType *GifFile, GifByteType **Extension) {\n@@ -622,1 +623,1 @@\n-    \/\/fprintf(stderr, \"### -> DGifGetExtensionNext\\n\");\n+    \/\/ fprintf(stderr, \"### -> DGifGetExtensionNext\\n\");\n@@ -627,1 +628,1 @@\n-    \/\/fprintf(stderr, \"### DGifGetExtensionNext sees %d\\n\", Buf);\n+    \/\/ fprintf(stderr, \"### DGifGetExtensionNext sees %d\\n\", Buf);\n@@ -630,3 +631,4 @@\n-        *Extension = Private->Buf;    \/* Use private unused buffer. *\/\n-        (*Extension)[0] = Buf;  \/* Pascal strings notation (pos. 0 is len.). *\/\n-        \/* coverity[tainted_data,check_return] *\/\n+        *Extension = Private->Buf; \/* Use private unused buffer. *\/\n+        (*Extension)[0] =\n+            Buf; \/* Pascal strings notation (pos. 0 is len.). *\/\n+                 \/* coverity[tainted_data,check_return] *\/\n@@ -637,1 +639,1 @@\n-    } else\n+    } else {\n@@ -639,1 +641,2 @@\n-    \/\/fprintf(stderr, \"### <- DGifGetExtensionNext: %p\\n\", Extension);\n+    }\n+    \/\/ fprintf(stderr, \"### <- DGifGetExtensionNext: %p\\n\", Extension);\n@@ -650,2 +653,1 @@\n-                       GraphicsControlBlock *GCB)\n-{\n+                       GraphicsControlBlock *GCB) {\n@@ -658,2 +660,3 @@\n-    GCB->DelayTime = UNSIGNED_LITTLE_ENDIAN(GifExtension[1], GifExtension[2]);\n-    if (GifExtension[0] & 0x01)\n+    GCB->DelayTime =\n+        UNSIGNED_LITTLE_ENDIAN(GifExtension[1], GifExtension[2]);\n+    if (GifExtension[0] & 0x01) {\n@@ -661,1 +664,1 @@\n-    else\n+    } else {\n@@ -663,0 +666,1 @@\n+    }\n@@ -671,3 +675,2 @@\n-int DGifSavedExtensionToGCB(GifFileType *GifFile,\n-                int ImageIndex, GraphicsControlBlock *GCB)\n-{\n+int DGifSavedExtensionToGCB(GifFileType *GifFile, int ImageIndex,\n+                            GraphicsControlBlock *GCB) {\n@@ -676,1 +679,1 @@\n-    if (ImageIndex < 0 || ImageIndex > GifFile->ImageCount - 1)\n+    if (ImageIndex < 0 || ImageIndex > GifFile->ImageCount - 1) {\n@@ -678,0 +681,1 @@\n+    }\n@@ -684,4 +688,8 @@\n-    for (i = 0; i < GifFile->SavedImages[ImageIndex].ExtensionBlockCount; i++) {\n-        ExtensionBlock *ep = &GifFile->SavedImages[ImageIndex].ExtensionBlocks[i];\n-        if (ep->Function == GRAPHICS_EXT_FUNC_CODE)\n-            return DGifExtensionToGCB(ep->ByteCount, ep->Bytes, GCB);\n+    for (i = 0; i < GifFile->SavedImages[ImageIndex].ExtensionBlockCount;\n+         i++) {\n+        ExtensionBlock *ep =\n+            &GifFile->SavedImages[ImageIndex].ExtensionBlocks[i];\n+        if (ep->Function == GRAPHICS_EXT_FUNC_CODE) {\n+            return DGifExtensionToGCB(ep->ByteCount, ep->Bytes,\n+                                      GCB);\n+        }\n@@ -696,3 +704,1 @@\n-int\n-DGifCloseFile(GifFileType *GifFile, int *ErrorCode)\n-{\n+int DGifCloseFile(GifFileType *GifFile, int *ErrorCode) {\n@@ -701,1 +707,1 @@\n-    if (GifFile == NULL || GifFile->Private == NULL)\n+    if (GifFile == NULL || GifFile->Private == NULL) {\n@@ -703,0 +709,1 @@\n+    }\n@@ -719,1 +726,2 @@\n-    GifFreeExtensions(&GifFile->ExtensionBlockCount, &GifFile->ExtensionBlocks);\n+    GifFreeExtensions(&GifFile->ExtensionBlockCount,\n+                      &GifFile->ExtensionBlocks);\n@@ -721,1 +729,1 @@\n-    Private = (GifFilePrivateType *) GifFile->Private;\n+    Private = (GifFilePrivateType *)GifFile->Private;\n@@ -725,1 +733,1 @@\n-        if (ErrorCode != NULL)\n+        if (ErrorCode != NULL) {\n@@ -727,0 +735,1 @@\n+        }\n@@ -733,1 +742,1 @@\n-        if (ErrorCode != NULL)\n+        if (ErrorCode != NULL) {\n@@ -735,0 +744,1 @@\n+        }\n@@ -742,1 +752,1 @@\n-    if (ErrorCode != NULL)\n+    if (ErrorCode != NULL) {\n@@ -744,0 +754,1 @@\n+    }\n@@ -750,3 +761,1 @@\n-static int\n-DGifGetWord(GifFileType *GifFile, GifWord *Word)\n-{\n+static int DGifGetWord(GifFileType *GifFile, GifWord *Word) {\n@@ -772,3 +781,1 @@\n-int\n-DGifGetCode(GifFileType *GifFile, int *CodeSize, GifByteType **CodeBlock)\n-{\n+int DGifGetCode(GifFileType *GifFile, int *CodeSize, GifByteType **CodeBlock) {\n@@ -793,3 +800,1 @@\n-int\n-DGifGetCodeNext(GifFileType *GifFile, GifByteType **CodeBlock)\n-{\n+int DGifGetCodeNext(GifFileType *GifFile, GifByteType **CodeBlock) {\n@@ -808,3 +813,4 @@\n-        *CodeBlock = Private->Buf;    \/* Use private unused buffer. *\/\n-        (*CodeBlock)[0] = Buf;  \/* Pascal strings notation (pos. 0 is len.). *\/\n-        \/* coverity[tainted_data] *\/\n+        *CodeBlock = Private->Buf; \/* Use private unused buffer. *\/\n+        (*CodeBlock)[0] =\n+            Buf; \/* Pascal strings notation (pos. 0 is len.). *\/\n+                 \/* coverity[tainted_data] *\/\n@@ -817,2 +823,3 @@\n-        Private->Buf[0] = 0;    \/* Make sure the buffer is empty! *\/\n-        Private->PixelCount = 0;    \/* And local info. indicate image read. *\/\n+        Private->Buf[0] = 0; \/* Make sure the buffer is empty! *\/\n+        Private->PixelCount =\n+            0; \/* And local info. indicate image read. *\/\n@@ -827,3 +834,1 @@\n-static int\n-DGifSetupDecompress(GifFileType *GifFile)\n-{\n+static int DGifSetupDecompress(GifFileType *GifFile) {\n@@ -836,2 +841,4 @@\n-    if (InternalRead(GifFile, &CodeSize, 1) < 1) {    \/* Read Code size from file. *\/\n-        return GIF_ERROR;    \/* Failed to read Code size. *\/\n+    if (InternalRead(GifFile, &CodeSize, 1) <\n+        1) { \/* Read Code size from file. *\/\n+        GifFile->Error = D_GIF_ERR_READ_FAILED;\n+        return GIF_ERROR; \/* Failed to read Code size. *\/\n@@ -843,2 +850,3 @@\n-        GifFile->Error = D_GIF_ERR_READ_FAILED;    \/* somewhat bogus error code *\/\n-        return GIF_ERROR;    \/* Failed to read Code size. *\/\n+        GifFile->Error =\n+            D_GIF_ERR_READ_FAILED; \/* somewhat bogus error code *\/\n+        return GIF_ERROR;          \/* Failed to read Code size. *\/\n@@ -847,1 +855,1 @@\n-    Private->Buf[0] = 0;    \/* Input Buffer empty. *\/\n+    Private->Buf[0] = 0; \/* Input Buffer empty. *\/\n@@ -852,3 +860,3 @@\n-    Private->RunningBits = BitsPerPixel + 1;    \/* Number of bits per code. *\/\n-    Private->MaxCode1 = 1 << Private->RunningBits;    \/* Max. code + 1. *\/\n-    Private->StackPtr = 0;    \/* No pixels on the pixel stack. *\/\n+    Private->RunningBits = BitsPerPixel + 1; \/* Number of bits per code. *\/\n+    Private->MaxCode1 = 1 << Private->RunningBits; \/* Max. code + 1. *\/\n+    Private->StackPtr = 0; \/* No pixels on the pixel stack. *\/\n@@ -856,1 +864,1 @@\n-    Private->CrntShiftState = 0;    \/* No information in CrntShiftDWord. *\/\n+    Private->CrntShiftState = 0; \/* No information in CrntShiftDWord. *\/\n@@ -860,1 +868,1 @@\n-    for (i = 0; i <= LZ_MAX_CODE; i++)\n+    for (i = 0; i <= LZ_MAX_CODE; i++) {\n@@ -862,0 +870,1 @@\n+    }\n@@ -872,3 +881,2 @@\n-static int\n-DGifDecompressLine(GifFileType *GifFile, GifPixelType *Line, int LineLen)\n-{\n+static int DGifDecompressLine(GifFileType *GifFile, GifPixelType *Line,\n+                              int LineLen) {\n@@ -879,1 +887,1 @@\n-    GifFilePrivateType *Private = (GifFilePrivateType *) GifFile->Private;\n+    GifFilePrivateType *Private = (GifFilePrivateType *)GifFile->Private;\n@@ -894,2 +902,3 @@\n-        \/* Let pop the stack off before continueing to read the GIF file: *\/\n-        while (StackPtr != 0 && i < LineLen)\n+        \/* Let pop the stack off before continueing to read the GIF\n+         * file: *\/\n+        while (StackPtr != 0 && i < LineLen) {\n@@ -897,0 +906,1 @@\n+        }\n@@ -899,2 +909,2 @@\n-    while (i < LineLen) {    \/* Decode LineLen items. *\/\n-        if (DGifDecompressInput(GifFile, &CrntCode) == GIF_ERROR)\n+    while (i < LineLen) { \/* Decode LineLen items. *\/\n+        if (DGifDecompressInput(GifFile, &CrntCode) == GIF_ERROR) {\n@@ -902,0 +912,1 @@\n+        }\n@@ -904,3 +915,4 @@\n-            \/* Note however that usually we will not be here as we will stop\n-             * decoding as soon as we got all the pixel, or EOF code will\n-             * not be read at all, and DGifGetLine\/Pixel clean everything.  *\/\n+            \/* Note however that usually we will not be here as we\n+             * will stop decoding as soon as we got all the pixel,\n+             * or EOF code will not be read at all, and\n+             * DGifGetLine\/Pixel clean everything.  *\/\n@@ -911,1 +923,1 @@\n-            for (j = 0; j <= LZ_MAX_CODE; j++)\n+            for (j = 0; j <= LZ_MAX_CODE; j++) {\n@@ -913,0 +925,1 @@\n+            }\n@@ -918,3 +931,3 @@\n-            \/* Its regular code - if in pixel range simply add it to output\n-             * stream, otherwise trace to codes linked list until the prefix\n-             * is in pixel range: *\/\n+            \/* Its regular code - if in pixel range simply add it to\n+             * output stream, otherwise trace to codes linked list\n+             * until the prefix is in pixel range: *\/\n@@ -922,1 +935,2 @@\n-                \/* This is simple - its pixel scalar, so add it to output: *\/\n+                \/* This is simple - its pixel scalar, so add it\n+                 * to output: *\/\n@@ -925,4 +939,5 @@\n-                \/* Its a code to needed to be traced: trace the linked list\n-                 * until the prefix is a pixel, while pushing the suffix\n-                 * pixels on our stack. If we done, pop the stack in reverse\n-                 * (thats what stack is good for!) order to output.  *\/\n+                \/* Its a code to needed to be traced: trace the\n+                 * linked list until the prefix is a pixel,\n+                 * while pushing the suffix pixels on our stack.\n+                 * If we done, pop the stack in reverse (thats\n+                 * what stack is good for!) order to output.  *\/\n@@ -932,9 +947,13 @@\n-                    \/* Only allowed if CrntCode is exactly the running code:\n-                     * In that case CrntCode = XXXCode, CrntCode or the\n-                     * prefix code is last code and the suffix char is\n-                     * exactly the prefix of last code! *\/\n-                    if (CrntCode == Private->RunningCode - 2) {\n-                        Suffix[Private->RunningCode - 2] =\n-                           Stack[StackPtr++] = DGifGetPrefixChar(Prefix,\n-                                                                 LastCode,\n-                                                                 ClearCode);\n+                    \/* Only allowed if CrntCode is exactly\n+                     * the running code: In that case\n+                     * CrntCode = XXXCode, CrntCode or the\n+                     * prefix code is last code and the\n+                     * suffix char is exactly the prefix of\n+                     * last code! *\/\n+                    if (CrntCode ==\n+                        Private->RunningCode - 2) {\n+                        Suffix[Private->RunningCode -\n+                               2] = Stack[StackPtr++] =\n+                            DGifGetPrefixChar(\n+                                Prefix, LastCode,\n+                                ClearCode);\n@@ -942,4 +961,5 @@\n-                        Suffix[Private->RunningCode - 2] =\n-                           Stack[StackPtr++] = DGifGetPrefixChar(Prefix,\n-                                                                 CrntCode,\n-                                                                 ClearCode);\n+                        Suffix[Private->RunningCode -\n+                               2] = Stack[StackPtr++] =\n+                            DGifGetPrefixChar(\n+                                Prefix, CrntCode,\n+                                ClearCode);\n@@ -947,1 +967,1 @@\n-                } else\n+                } else {\n@@ -949,0 +969,1 @@\n+                }\n@@ -950,4 +971,5 @@\n-                \/* Now (if image is O.K.) we should not get a NO_SUCH_CODE\n-                 * during the trace. As we might loop forever, in case of\n-                 * defective image, we use StackPtr as loop counter and stop\n-                 * before overflowing Stack[]. *\/\n+                \/* Now (if image is O.K.) we should not get a\n+                 * NO_SUCH_CODE during the trace. As we might\n+                 * loop forever, in case of defective image, we\n+                 * use StackPtr as loop counter and stop before\n+                 * overflowing Stack[]. *\/\n@@ -955,1 +977,2 @@\n-                       CrntPrefix > ClearCode && CrntPrefix <= LZ_MAX_CODE) {\n+                       CrntPrefix > ClearCode &&\n+                       CrntPrefix <= LZ_MAX_CODE) {\n@@ -959,1 +982,2 @@\n-                if (StackPtr >= LZ_MAX_CODE || CrntPrefix > LZ_MAX_CODE) {\n+                if (StackPtr >= LZ_MAX_CODE ||\n+                    CrntPrefix > LZ_MAX_CODE) {\n@@ -967,1 +991,1 @@\n-                while (StackPtr != 0 && i < LineLen)\n+                while (StackPtr != 0 && i < LineLen) {\n@@ -969,0 +993,1 @@\n+                }\n@@ -970,1 +995,3 @@\n-            if (LastCode != NO_SUCH_CODE && Private->RunningCode - 2 < (LZ_MAX_CODE+1) && Prefix[Private->RunningCode - 2] == NO_SUCH_CODE) {\n+            if (LastCode != NO_SUCH_CODE &&\n+                Private->RunningCode - 2 < (LZ_MAX_CODE + 1) &&\n+                Prefix[Private->RunningCode - 2] == NO_SUCH_CODE) {\n@@ -974,4 +1001,6 @@\n-                    \/* Only allowed if CrntCode is exactly the running code:\n-                     * In that case CrntCode = XXXCode, CrntCode or the\n-                     * prefix code is last code and the suffix char is\n-                     * exactly the prefix of last code! *\/\n+                    \/* Only allowed if CrntCode is exactly\n+                     * the running code: In that case\n+                     * CrntCode = XXXCode, CrntCode or the\n+                     * prefix code is last code and the\n+                     * suffix char is exactly the prefix of\n+                     * last code! *\/\n@@ -979,1 +1008,2 @@\n-                       DGifGetPrefixChar(Prefix, LastCode, ClearCode);\n+                        DGifGetPrefixChar(Prefix, LastCode,\n+                                          ClearCode);\n@@ -982,1 +1012,2 @@\n-                       DGifGetPrefixChar(Prefix, CrntCode, ClearCode);\n+                        DGifGetPrefixChar(Prefix, CrntCode,\n+                                          ClearCode);\n@@ -1001,3 +1032,2 @@\n-static int\n-DGifGetPrefixChar(GifPrefixType *Prefix, int Code, int ClearCode)\n-{\n+static int DGifGetPrefixChar(const GifPrefixType *Prefix, int Code,\n+                             int ClearCode) {\n@@ -1019,3 +1049,1 @@\n-int\n-DGifGetLZCodes(GifFileType *GifFile, int *Code)\n-{\n+int DGifGetLZCodes(GifFileType *GifFile, int *Code) {\n@@ -1031,1 +1059,1 @@\n-    if (DGifDecompressInput(GifFile, Code) == GIF_ERROR)\n+    if (DGifDecompressInput(GifFile, Code) == GIF_ERROR) {\n@@ -1033,0 +1061,1 @@\n+    }\n@@ -1035,1 +1064,2 @@\n-        \/* Skip rest of codes (hopefully only NULL terminating block): *\/\n+        \/* Skip rest of codes (hopefully only NULL terminating block):\n+         *\/\n@@ -1037,1 +1067,1 @@\n-            if (DGifGetCodeNext(GifFile, &CodeBlock) == GIF_ERROR)\n+            if (DGifGetCodeNext(GifFile, &CodeBlock) == GIF_ERROR) {\n@@ -1039,1 +1069,2 @@\n-        } while (CodeBlock != NULL) ;\n+            }\n+        } while (CodeBlock != NULL);\n@@ -1058,3 +1089,1 @@\n-static int\n-DGifDecompressInput(GifFileType *GifFile, int *Code)\n-{\n+static int DGifDecompressInput(GifFileType *GifFile, int *Code) {\n@@ -1062,5 +1091,2 @@\n-        0x0000, 0x0001, 0x0003, 0x0007,\n-        0x000f, 0x001f, 0x003f, 0x007f,\n-        0x00ff, 0x01ff, 0x03ff, 0x07ff,\n-        0x0fff\n-    };\n+        0x0000, 0x0001, 0x0003, 0x0007, 0x000f, 0x001f, 0x003f,\n+        0x007f, 0x00ff, 0x01ff, 0x03ff, 0x07ff, 0x0fff};\n@@ -1080,1 +1106,2 @@\n-        if (DGifBufferedInput(GifFile, Private->Buf, &NextByte) == GIF_ERROR) {\n+        if (DGifBufferedInput(GifFile, Private->Buf, &NextByte) ==\n+            GIF_ERROR) {\n@@ -1083,2 +1110,2 @@\n-        Private->CrntShiftDWord |=\n-            ((unsigned long)NextByte) << Private->CrntShiftState;\n+        Private->CrntShiftDWord |= ((unsigned long)NextByte)\n+                                   << Private->CrntShiftState;\n@@ -1112,3 +1139,2 @@\n-static int\n-DGifBufferedInput(GifFileType *GifFile, GifByteType *Buf, GifByteType *NextByte)\n-{\n+static int DGifBufferedInput(GifFileType *GifFile, GifByteType *Buf,\n+                             GifByteType *NextByte) {\n@@ -1123,2 +1149,2 @@\n-         * says the LZW termination code should come first.  Therefore we\n-         * shouldn't be inside this routine at that point.\n+         * says the LZW termination code should come first.  Therefore\n+         * we shouldn't be inside this routine at that point.\n@@ -1135,1 +1161,1 @@\n-        Buf[1] = 2;    \/* We use now the second place as last char read! *\/\n+        Buf[1] = 2; \/* We use now the second place as last char read! *\/\n@@ -1145,0 +1171,20 @@\n+\/******************************************************************************\n+ This routine is called in case of error during parsing image. We need to\n+ decrease image counter and reallocate memory for saved images. Not decreasing\n+ ImageCount may lead to null pointer dereference, because the last element in\n+ SavedImages may point to the spoilt image and null pointer buffers.\n+*******************************************************************************\/\n+void DGifDecreaseImageCounter(GifFileType *GifFile) {\n+    GifFile->ImageCount--;\n+    if (GifFile->SavedImages[GifFile->ImageCount].RasterBits != NULL) {\n+        free(GifFile->SavedImages[GifFile->ImageCount].RasterBits);\n+    }\n+\n+    \/\/ Realloc array according to the new image counter.\n+    SavedImage *correct_saved_images = (SavedImage *)reallocarray(\n+        GifFile->SavedImages, GifFile->ImageCount, sizeof(SavedImage));\n+    if (correct_saved_images != NULL) {\n+        GifFile->SavedImages = correct_saved_images;\n+    }\n+}\n+\n@@ -1150,3 +1196,1 @@\n-int\n-DGifSlurp(GifFileType *GifFile)\n-{\n+int DGifSlurp(GifFileType *GifFile) {\n@@ -1163,1 +1207,1 @@\n-        if (DGifGetRecordType(GifFile, &RecordType) == GIF_ERROR)\n+        if (DGifGetRecordType(GifFile, &RecordType) == GIF_ERROR) {\n@@ -1165,0 +1209,1 @@\n+        }\n@@ -1167,86 +1212,112 @@\n-          case IMAGE_DESC_RECORD_TYPE:\n-              if (DGifGetImageDesc(GifFile) == GIF_ERROR)\n-                  return (GIF_ERROR);\n-\n-              sp = &GifFile->SavedImages[GifFile->ImageCount - 1];\n-              \/* Allocate memory for the image *\/\n-              if (sp->ImageDesc.Width <= 0 || sp->ImageDesc.Height <= 0 ||\n-                      sp->ImageDesc.Width > (INT_MAX \/ sp->ImageDesc.Height)) {\n-                  return GIF_ERROR;\n-              }\n-              ImageSize = sp->ImageDesc.Width * sp->ImageDesc.Height;\n-\n-              if (ImageSize > (SIZE_MAX \/ sizeof(GifPixelType))) {\n-                  return GIF_ERROR;\n-              }\n-              sp->RasterBits = (unsigned char *)reallocarray(NULL, ImageSize,\n-                      sizeof(GifPixelType));\n-\n-              if (sp->RasterBits == NULL) {\n-                  return GIF_ERROR;\n-              }\n-\n-              if (sp->ImageDesc.Interlace) {\n-                  int i, j;\n-                   \/*\n-                    * The way an interlaced image should be read -\n-                    * offsets and jumps...\n-                    *\/\n-                  int InterlacedOffset[] = { 0, 4, 2, 1 };\n-                  int InterlacedJumps[] = { 8, 8, 4, 2 };\n-                  \/* Need to perform 4 passes on the image *\/\n-                  for (i = 0; i < 4; i++)\n-                      for (j = InterlacedOffset[i];\n-                       j < sp->ImageDesc.Height;\n-                       j += InterlacedJumps[i]) {\n-                      if (DGifGetLine(GifFile,\n-                              sp->RasterBits+j*sp->ImageDesc.Width,\n-                              sp->ImageDesc.Width) == GIF_ERROR)\n-                          return GIF_ERROR;\n-                      }\n-              }\n-              else {\n-                  if (DGifGetLine(GifFile,sp->RasterBits,ImageSize)==GIF_ERROR)\n-                      return (GIF_ERROR);\n-              }\n-\n-              if (GifFile->ExtensionBlocks) {\n-                  sp->ExtensionBlocks = GifFile->ExtensionBlocks;\n-                  sp->ExtensionBlockCount = GifFile->ExtensionBlockCount;\n-\n-                  GifFile->ExtensionBlocks = NULL;\n-                  GifFile->ExtensionBlockCount = 0;\n-              }\n-              break;\n-\n-          case EXTENSION_RECORD_TYPE:\n-              if (DGifGetExtension(GifFile,&ExtFunction,&ExtData) == GIF_ERROR)\n-                  return (GIF_ERROR);\n-              \/* Create an extension block with our data *\/\n-              if (ExtData != NULL) {\n-                  if (GifAddExtensionBlock(&GifFile->ExtensionBlockCount,\n-                               &GifFile->ExtensionBlocks,\n-                               ExtFunction, ExtData[0], &ExtData[1])\n-                      == GIF_ERROR)\n-                      return (GIF_ERROR);\n-              }\n-              for (;;) {\n-                  if (DGifGetExtensionNext(GifFile, &ExtData) == GIF_ERROR)\n-                      return (GIF_ERROR);\n-                  if (ExtData == NULL)\n-                      break;\n-                  \/* Continue the extension block *\/\n-                  if (ExtData != NULL)\n-                      if (GifAddExtensionBlock(&GifFile->ExtensionBlockCount,\n-                                   &GifFile->ExtensionBlocks,\n-                                   CONTINUE_EXT_FUNC_CODE,\n-                                   ExtData[0], &ExtData[1]) == GIF_ERROR)\n-                              return (GIF_ERROR);\n-              }\n-              break;\n-\n-          case TERMINATE_RECORD_TYPE:\n-              break;\n-\n-          default:    \/* Should be trapped by DGifGetRecordType *\/\n-              break;\n+        case IMAGE_DESC_RECORD_TYPE:\n+            if (DGifGetImageDesc(GifFile) == GIF_ERROR) {\n+                return (GIF_ERROR);\n+            }\n+\n+            sp = &GifFile->SavedImages[GifFile->ImageCount - 1];\n+            \/* Allocate memory for the image *\/\n+            if (sp->ImageDesc.Width <= 0 ||\n+                sp->ImageDesc.Height <= 0 ||\n+                sp->ImageDesc.Width >\n+                    (INT_MAX \/ sp->ImageDesc.Height)) {\n+                DGifDecreaseImageCounter(GifFile);\n+                return GIF_ERROR;\n+            }\n+            ImageSize = sp->ImageDesc.Width * sp->ImageDesc.Height;\n+\n+            if (ImageSize > (SIZE_MAX \/ sizeof(GifPixelType))) {\n+                DGifDecreaseImageCounter(GifFile);\n+                return GIF_ERROR;\n+            }\n+            sp->RasterBits = (unsigned char *)reallocarray(\n+                NULL, ImageSize, sizeof(GifPixelType));\n+\n+            if (sp->RasterBits == NULL) {\n+                DGifDecreaseImageCounter(GifFile);\n+                return GIF_ERROR;\n+            }\n+\n+            if (sp->ImageDesc.Interlace) {\n+                int i, j;\n+                \/*\n+                 * The way an interlaced image should be read -\n+                 * offsets and jumps...\n+                 *\/\n+                static const int InterlacedOffset[] = {0, 4, 2,\n+                                                       1};\n+                static const int InterlacedJumps[] = {8, 8, 4,\n+                                                      2};\n+                \/* Need to perform 4 passes on the image *\/\n+                for (i = 0; i < 4; i++) {\n+                    for (j = InterlacedOffset[i];\n+                         j < sp->ImageDesc.Height;\n+                         j += InterlacedJumps[i]) {\n+                        if (DGifGetLine(\n+                                GifFile,\n+                                sp->RasterBits +\n+                                    j * sp->ImageDesc\n+                                            .Width,\n+                                sp->ImageDesc.Width) ==\n+                            GIF_ERROR) {\n+                            DGifDecreaseImageCounter(\n+                                GifFile);\n+                            return GIF_ERROR;\n+                        }\n+                    }\n+                }\n+            } else {\n+                if (DGifGetLine(GifFile, sp->RasterBits,\n+                                ImageSize) == GIF_ERROR) {\n+                    DGifDecreaseImageCounter(GifFile);\n+                    return GIF_ERROR;\n+                }\n+            }\n+\n+            if (GifFile->ExtensionBlocks) {\n+                sp->ExtensionBlocks = GifFile->ExtensionBlocks;\n+                sp->ExtensionBlockCount =\n+                    GifFile->ExtensionBlockCount;\n+\n+                GifFile->ExtensionBlocks = NULL;\n+                GifFile->ExtensionBlockCount = 0;\n+            }\n+            break;\n+\n+        case EXTENSION_RECORD_TYPE:\n+            if (DGifGetExtension(GifFile, &ExtFunction, &ExtData) ==\n+                GIF_ERROR) {\n+                return (GIF_ERROR);\n+            }\n+            \/* Create an extension block with our data *\/\n+            if (ExtData != NULL) {\n+                if (GifAddExtensionBlock(\n+                        &GifFile->ExtensionBlockCount,\n+                        &GifFile->ExtensionBlocks, ExtFunction,\n+                        ExtData[0], &ExtData[1]) == GIF_ERROR) {\n+                    return (GIF_ERROR);\n+                }\n+            }\n+            for (;;) {\n+                if (DGifGetExtensionNext(GifFile, &ExtData) ==\n+                    GIF_ERROR) {\n+                    return (GIF_ERROR);\n+                }\n+                if (ExtData == NULL) {\n+                    break;\n+                }\n+                \/* Continue the extension block *\/\n+                if (GifAddExtensionBlock(\n+                        &GifFile->ExtensionBlockCount,\n+                        &GifFile->ExtensionBlocks,\n+                        CONTINUE_EXT_FUNC_CODE, ExtData[0],\n+                        &ExtData[1]) == GIF_ERROR) {\n+                    return (GIF_ERROR);\n+                }\n+            }\n+            break;\n+\n+        case TERMINATE_RECORD_TYPE:\n+            break;\n+\n+        default: \/* Should be trapped by DGifGetRecordType *\/\n+            break;\n@@ -1259,1 +1330,1 @@\n-        return(GIF_ERROR);\n+        return (GIF_ERROR);\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/giflib\/dgif_lib.c","additions":413,"deletions":342,"binary":false,"changes":755,"status":"modified"},{"patch":"@@ -41,3 +41,1 @@\n-const char *\n-GifErrorString(int ErrorCode)\n-{\n+const char *GifErrorString(int ErrorCode) {\n@@ -47,1 +45,1 @@\n-      case E_GIF_ERR_OPEN_FAILED:\n+    case E_GIF_ERR_OPEN_FAILED:\n@@ -50,1 +48,1 @@\n-      case E_GIF_ERR_WRITE_FAILED:\n+    case E_GIF_ERR_WRITE_FAILED:\n@@ -53,1 +51,1 @@\n-      case E_GIF_ERR_HAS_SCRN_DSCR:\n+    case E_GIF_ERR_HAS_SCRN_DSCR:\n@@ -56,1 +54,1 @@\n-      case E_GIF_ERR_HAS_IMAG_DSCR:\n+    case E_GIF_ERR_HAS_IMAG_DSCR:\n@@ -59,1 +57,1 @@\n-      case E_GIF_ERR_NO_COLOR_MAP:\n+    case E_GIF_ERR_NO_COLOR_MAP:\n@@ -62,1 +60,1 @@\n-      case E_GIF_ERR_DATA_TOO_BIG:\n+    case E_GIF_ERR_DATA_TOO_BIG:\n@@ -65,1 +63,1 @@\n-      case E_GIF_ERR_NOT_ENOUGH_MEM:\n+    case E_GIF_ERR_NOT_ENOUGH_MEM:\n@@ -68,1 +66,1 @@\n-      case E_GIF_ERR_DISK_IS_FULL:\n+    case E_GIF_ERR_DISK_IS_FULL:\n@@ -71,1 +69,1 @@\n-      case E_GIF_ERR_CLOSE_FAILED:\n+    case E_GIF_ERR_CLOSE_FAILED:\n@@ -74,1 +72,1 @@\n-      case E_GIF_ERR_NOT_WRITEABLE:\n+    case E_GIF_ERR_NOT_WRITEABLE:\n@@ -77,1 +75,1 @@\n-      case D_GIF_ERR_OPEN_FAILED:\n+    case D_GIF_ERR_OPEN_FAILED:\n@@ -80,1 +78,1 @@\n-      case D_GIF_ERR_READ_FAILED:\n+    case D_GIF_ERR_READ_FAILED:\n@@ -83,1 +81,1 @@\n-      case D_GIF_ERR_NOT_GIF_FILE:\n+    case D_GIF_ERR_NOT_GIF_FILE:\n@@ -86,1 +84,1 @@\n-      case D_GIF_ERR_NO_SCRN_DSCR:\n+    case D_GIF_ERR_NO_SCRN_DSCR:\n@@ -89,1 +87,1 @@\n-      case D_GIF_ERR_NO_IMAG_DSCR:\n+    case D_GIF_ERR_NO_IMAG_DSCR:\n@@ -92,1 +90,1 @@\n-      case D_GIF_ERR_NO_COLOR_MAP:\n+    case D_GIF_ERR_NO_COLOR_MAP:\n@@ -95,1 +93,1 @@\n-      case D_GIF_ERR_WRONG_RECORD:\n+    case D_GIF_ERR_WRONG_RECORD:\n@@ -98,1 +96,1 @@\n-      case D_GIF_ERR_DATA_TOO_BIG:\n+    case D_GIF_ERR_DATA_TOO_BIG:\n@@ -101,1 +99,1 @@\n-      case D_GIF_ERR_NOT_ENOUGH_MEM:\n+    case D_GIF_ERR_NOT_ENOUGH_MEM:\n@@ -104,1 +102,1 @@\n-      case D_GIF_ERR_CLOSE_FAILED:\n+    case D_GIF_ERR_CLOSE_FAILED:\n@@ -107,1 +105,1 @@\n-      case D_GIF_ERR_NOT_READABLE:\n+    case D_GIF_ERR_NOT_READABLE:\n@@ -110,1 +108,1 @@\n-      case D_GIF_ERR_IMAGE_DEFECT:\n+    case D_GIF_ERR_IMAGE_DEFECT:\n@@ -113,1 +111,1 @@\n-      case D_GIF_ERR_EOF_TOO_SOON:\n+    case D_GIF_ERR_EOF_TOO_SOON:\n@@ -116,1 +114,1 @@\n-      default:\n+    default:\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/giflib\/gif_err.c","additions":25,"deletions":27,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-\/** Begin JDK modifications to support building on Windows **\/\n@@ -39,2 +38,1 @@\n-#endif\n-\/** End JDK modifications to support building on Windows **\/\n+#endif \/* _WIN32 *\/\n@@ -43,5 +41,5 @@\n-#define HT_SIZE         8192    \/* 12bits = 4096 or twice as big! *\/\n-#define HT_KEY_MASK     0x1FFF  \/* 13bits keys *\/\n-#define HT_KEY_NUM_BITS 13      \/* 13bits keys *\/\n-#define HT_MAX_KEY      8191    \/* 13bits - 1, maximal code possible *\/\n-#define HT_MAX_CODE     4095    \/* Biggest code possible in 12 bits. *\/\n+#define HT_SIZE 8192       \/* 12bits = 4096 or twice as big! *\/\n+#define HT_KEY_MASK 0x1FFF \/* 13bits keys *\/\n+#define HT_KEY_NUM_BITS 13 \/* 13bits keys *\/\n+#define HT_MAX_KEY 8191    \/* 13bits - 1, maximal code possible *\/\n+#define HT_MAX_CODE 4095   \/* Biggest code possible in 12 bits. *\/\n@@ -51,1 +49,1 @@\n-\/* 2. The key is 12 bits Prefix code + 8 bit new char or 20 bits.           *\/\n+\/* 2. The key is 12 bits Prefix code + 8 bit new char or 20 bits.        *\/\n@@ -53,4 +51,4 @@\n-#define HT_GET_KEY(l)    (l >> 12)\n-#define HT_GET_CODE(l)   (l & 0x0FFF)\n-#define HT_PUT_KEY(l)    (l << 12)\n-#define HT_PUT_CODE(l)   (l & 0x0FFF)\n+#define HT_GET_KEY(l) (l >> 12)\n+#define HT_GET_CODE(l) (l & 0x0FFF)\n+#define HT_PUT_KEY(l) (l << 12)\n+#define HT_PUT_CODE(l) (l & 0x0FFF)\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/giflib\/gif_hash.h","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-#define GIFLIB_RELEASE 1\n+#define GIFLIB_RELEASE 2\n@@ -44,2 +44,2 @@\n-#define GIF_ERROR   0\n-#define GIF_OK      1\n+#define GIF_ERROR 0\n+#define GIF_OK 1\n@@ -47,0 +47,1 @@\n+#include <stdbool.h>\n@@ -48,11 +49,2 @@\n-\/** Begin JDK modifications to support building using old compilers**\/\n-\/\/#include <stdbool.h>\n-#ifdef bool\n-#undef bool\n-#endif\n-typedef int bool;\n-#define false 0\n-#define true 1\n-\/** End JDK modifications to support building using old compilers**\/\n-\n-#define GIF_STAMP \"GIFVER\"          \/* First chars in file - GIF stamp.  *\/\n+\n+#define GIF_STAMP \"GIFVER\" \/* First chars in file - GIF stamp.  *\/\n@@ -60,3 +52,3 @@\n-#define GIF_VERSION_POS 3           \/* Version first character in stamp. *\/\n-#define GIF87_STAMP \"GIF87a\"        \/* First chars in file - GIF stamp.  *\/\n-#define GIF89_STAMP \"GIF89a\"        \/* First chars in file - GIF stamp.  *\/\n+#define GIF_VERSION_POS 3    \/* Version first character in stamp. *\/\n+#define GIF87_STAMP \"GIF87a\" \/* First chars in file - GIF stamp.  *\/\n+#define GIF89_STAMP \"GIF89a\" \/* First chars in file - GIF stamp.  *\/\n@@ -78,1 +70,1 @@\n-    GifColorType *Colors;    \/* on malloc(3) heap *\/\n+    GifColorType *Colors; \/* on malloc(3) heap *\/\n@@ -82,3 +74,3 @@\n-    GifWord Left, Top, Width, Height;   \/* Current image dimensions. *\/\n-    bool Interlace;                     \/* Sequential\/Interlaced lines. *\/\n-    ColorMapObject *ColorMap;           \/* The local color map *\/\n+    GifWord Left, Top, Width, Height; \/* Current image dimensions. *\/\n+    bool Interlace;                   \/* Sequential\/Interlaced lines. *\/\n+    ColorMapObject *ColorMap;         \/* The local color map *\/\n@@ -89,7 +81,7 @@\n-    GifByteType *Bytes; \/* on malloc(3) heap *\/\n-    int Function;       \/* The block function code *\/\n-#define CONTINUE_EXT_FUNC_CODE    0x00    \/* continuation subblock *\/\n-#define COMMENT_EXT_FUNC_CODE     0xfe    \/* comment *\/\n-#define GRAPHICS_EXT_FUNC_CODE    0xf9    \/* graphics control (GIF89) *\/\n-#define PLAINTEXT_EXT_FUNC_CODE   0x01    \/* plaintext *\/\n-#define APPLICATION_EXT_FUNC_CODE 0xff    \/* application block (GIF89) *\/\n+    GifByteType *Bytes;            \/* on malloc(3) heap *\/\n+    int Function;                  \/* The block function code *\/\n+#define CONTINUE_EXT_FUNC_CODE 0x00    \/* continuation subblock *\/\n+#define COMMENT_EXT_FUNC_CODE 0xfe     \/* comment *\/\n+#define GRAPHICS_EXT_FUNC_CODE 0xf9    \/* graphics control (GIF89) *\/\n+#define PLAINTEXT_EXT_FUNC_CODE 0x01   \/* plaintext *\/\n+#define APPLICATION_EXT_FUNC_CODE 0xff \/* application block (GIF89) *\/\n@@ -106,9 +98,9 @@\n-    GifWord SWidth, SHeight;         \/* Size of virtual canvas *\/\n-    GifWord SColorResolution;        \/* How many colors can we generate? *\/\n-    GifWord SBackGroundColor;        \/* Background color for virtual canvas *\/\n-    GifByteType AspectByte;          \/* Used to compute pixel aspect ratio *\/\n-    ColorMapObject *SColorMap;       \/* Global colormap, NULL if nonexistent. *\/\n-    int ImageCount;                  \/* Number of current image (both APIs) *\/\n-    GifImageDesc Image;              \/* Current image (low-level API) *\/\n-    SavedImage *SavedImages;         \/* Image sequence (high-level API) *\/\n-    int ExtensionBlockCount;         \/* Count extensions past last image *\/\n+    GifWord SWidth, SHeight;   \/* Size of virtual canvas *\/\n+    GifWord SColorResolution;  \/* How many colors can we generate? *\/\n+    GifWord SBackGroundColor;  \/* Background color for virtual canvas *\/\n+    GifByteType AspectByte;    \/* Used to compute pixel aspect ratio *\/\n+    ColorMapObject *SColorMap; \/* Global colormap, NULL if nonexistent. *\/\n+    int ImageCount;            \/* Number of current image (both APIs) *\/\n+    GifImageDesc Image;        \/* Current image (low-level API) *\/\n+    SavedImage *SavedImages;   \/* Image sequence (high-level API) *\/\n+    int ExtensionBlockCount;   \/* Count extensions past last image *\/\n@@ -121,1 +113,1 @@\n-#define GIF_ASPECT_RATIO(n)    ((n)+15.0\/64.0)\n+#define GIF_ASPECT_RATIO(n) ((n) + 15.0 \/ 64.0)\n@@ -132,1 +124,1 @@\n-typedef int (*InputFunc) (GifFileType *, GifByteType *, int);\n+typedef int (*InputFunc)(GifFileType *, GifByteType *, int);\n@@ -137,1 +129,1 @@\n-typedef int (*OutputFunc) (GifFileType *, const GifByteType *, int);\n+typedef int (*OutputFunc)(GifFileType *, const GifByteType *, int);\n@@ -145,8 +137,8 @@\n-#define DISPOSAL_UNSPECIFIED      0       \/* No disposal specified. *\/\n-#define DISPOSE_DO_NOT            1       \/* Leave image in place *\/\n-#define DISPOSE_BACKGROUND        2       \/* Set area too background color *\/\n-#define DISPOSE_PREVIOUS          3       \/* Restore to previous content *\/\n-    bool UserInputFlag;      \/* User confirmation required before disposal *\/\n-    int DelayTime;           \/* pre-display delay in 0.01sec units *\/\n-    int TransparentColor;    \/* Palette index for transparency, -1 if none *\/\n-#define NO_TRANSPARENT_COLOR    -1\n+#define DISPOSAL_UNSPECIFIED 0 \/* No disposal specified. *\/\n+#define DISPOSE_DO_NOT 1       \/* Leave image in place *\/\n+#define DISPOSE_BACKGROUND 2   \/* Set area too background color *\/\n+#define DISPOSE_PREVIOUS 3     \/* Restore to previous content *\/\n+    bool UserInputFlag;    \/* User confirmation required before disposal *\/\n+    int DelayTime;         \/* pre-display delay in 0.01sec units *\/\n+    int TransparentColor;  \/* Palette index for transparency, -1 if none *\/\n+#define NO_TRANSPARENT_COLOR -1\n@@ -164,1 +156,1 @@\n-int EGifSpew(GifFileType * GifFile);\n+int EGifSpew(GifFileType *GifFile);\n@@ -168,7 +160,7 @@\n-#define E_GIF_SUCCEEDED          0\n-#define E_GIF_ERR_OPEN_FAILED    1    \/* And EGif possible errors. *\/\n-#define E_GIF_ERR_WRITE_FAILED   2\n-#define E_GIF_ERR_HAS_SCRN_DSCR  3\n-#define E_GIF_ERR_HAS_IMAG_DSCR  4\n-#define E_GIF_ERR_NO_COLOR_MAP   5\n-#define E_GIF_ERR_DATA_TOO_BIG   6\n+#define E_GIF_SUCCEEDED 0\n+#define E_GIF_ERR_OPEN_FAILED 1 \/* And EGif possible errors. *\/\n+#define E_GIF_ERR_WRITE_FAILED 2\n+#define E_GIF_ERR_HAS_SCRN_DSCR 3\n+#define E_GIF_ERR_HAS_IMAG_DSCR 4\n+#define E_GIF_ERR_NO_COLOR_MAP 5\n+#define E_GIF_ERR_DATA_TOO_BIG 6\n@@ -176,3 +168,3 @@\n-#define E_GIF_ERR_DISK_IS_FULL   8\n-#define E_GIF_ERR_CLOSE_FAILED   9\n-#define E_GIF_ERR_NOT_WRITEABLE  10\n+#define E_GIF_ERR_DISK_IS_FULL 8\n+#define E_GIF_ERR_CLOSE_FAILED 9\n+#define E_GIF_ERR_NOT_WRITEABLE 10\n@@ -181,3 +173,2 @@\n-int EGifPutScreenDesc(GifFileType *GifFile,\n-                      const int GifWidth, const int GifHeight,\n-                      const int GifColorRes,\n+int EGifPutScreenDesc(GifFileType *GifFile, const int GifWidth,\n+                      const int GifHeight, const int GifColorRes,\n@@ -186,2 +177,1 @@\n-int EGifPutImageDesc(GifFileType *GifFile,\n-                     const int GifLeft, const int GifTop,\n+int EGifPutImageDesc(GifFileType *GifFile, const int GifLeft, const int GifTop,\n@@ -192,2 +182,1 @@\n-int EGifPutLine(GifFileType *GifFile, GifPixelType *GifLine,\n-                int GifLineLen);\n+int EGifPutLine(GifFileType *GifFile, GifPixelType *GifLine, int GifLineLen);\n@@ -197,2 +186,2 @@\n-int EGifPutExtensionBlock(GifFileType *GifFile,\n-                         const int GifExtLen, const void *GifExtension);\n+int EGifPutExtensionBlock(GifFileType *GifFile, const int GifExtLen,\n+                          const void *GifExtension);\n@@ -201,2 +190,1 @@\n-                     const int GifExtLen,\n-                     const void *GifExtension);\n+                     const int GifExtLen, const void *GifExtension);\n@@ -205,2 +193,1 @@\n-int EGifPutCodeNext(GifFileType *GifFile,\n-                    const GifByteType *GifCodeBlock);\n+int EGifPutCodeNext(GifFileType *GifFile, const GifByteType *GifCodeBlock);\n@@ -215,13 +202,14 @@\n-int DGifSlurp(GifFileType * GifFile);\n-GifFileType *DGifOpen(void *userPtr, InputFunc readFunc, int *Error);    \/* new one (TVT) *\/\n-    int DGifCloseFile(GifFileType * GifFile, int *ErrorCode);\n-\n-#define D_GIF_SUCCEEDED          0\n-#define D_GIF_ERR_OPEN_FAILED    101    \/* And DGif possible errors. *\/\n-#define D_GIF_ERR_READ_FAILED    102\n-#define D_GIF_ERR_NOT_GIF_FILE   103\n-#define D_GIF_ERR_NO_SCRN_DSCR   104\n-#define D_GIF_ERR_NO_IMAG_DSCR   105\n-#define D_GIF_ERR_NO_COLOR_MAP   106\n-#define D_GIF_ERR_WRONG_RECORD   107\n-#define D_GIF_ERR_DATA_TOO_BIG   108\n+int DGifSlurp(GifFileType *GifFile);\n+GifFileType *DGifOpen(void *userPtr, InputFunc readFunc,\n+                      int *Error); \/* new one (TVT) *\/\n+int DGifCloseFile(GifFileType *GifFile, int *ErrorCode);\n+\n+#define D_GIF_SUCCEEDED 0\n+#define D_GIF_ERR_OPEN_FAILED 101 \/* And DGif possible errors. *\/\n+#define D_GIF_ERR_READ_FAILED 102\n+#define D_GIF_ERR_NOT_GIF_FILE 103\n+#define D_GIF_ERR_NO_SCRN_DSCR 104\n+#define D_GIF_ERR_NO_IMAG_DSCR 105\n+#define D_GIF_ERR_NO_COLOR_MAP 106\n+#define D_GIF_ERR_WRONG_RECORD 107\n+#define D_GIF_ERR_DATA_TOO_BIG 108\n@@ -229,4 +217,4 @@\n-#define D_GIF_ERR_CLOSE_FAILED   110\n-#define D_GIF_ERR_NOT_READABLE   111\n-#define D_GIF_ERR_IMAGE_DEFECT   112\n-#define D_GIF_ERR_EOF_TOO_SOON   113\n+#define D_GIF_ERR_CLOSE_FAILED 110\n+#define D_GIF_ERR_NOT_READABLE 111\n+#define D_GIF_ERR_IMAGE_DEFECT 112\n+#define D_GIF_ERR_EOF_TOO_SOON 113\n@@ -250,1 +238,0 @@\n-\n@@ -254,1 +241,1 @@\n-extern const char *GifErrorString(int ErrorCode);     \/* new in 2012 - ESR *\/\n+extern const char *GifErrorString(int ErrorCode); \/* new in 2012 - ESR *\/\n@@ -266,1 +253,1 @@\n-                                     const GifColorType *ColorMap);\n+                                        const GifColorType *ColorMap);\n@@ -269,2 +256,2 @@\n-                                     const ColorMapObject *ColorIn2,\n-                                     GifPixelType ColorTransIn2[]);\n+                                        const ColorMapObject *ColorIn2,\n+                                        GifPixelType ColorTransIn2[]);\n@@ -277,1 +264,2 @@\n-extern void GifApplyTranslation(SavedImage *Image, GifPixelType Translation[]);\n+extern void GifApplyTranslation(SavedImage *Image,\n+                                const GifPixelType Translation[]);\n@@ -279,2 +267,1 @@\n-                                ExtensionBlock **ExtensionBlocks,\n-                                int Function,\n+                                ExtensionBlock **ExtensionBlocks, int Function,\n@@ -285,1 +272,1 @@\n-                                  const SavedImage *CopyFrom);\n+                                     const SavedImage *CopyFrom);\n@@ -298,2 +285,1 @@\n-int DGifSavedExtensionToGCB(GifFileType *GifFile,\n-                            int ImageIndex,\n+int DGifSavedExtensionToGCB(GifFileType *GifFile, int ImageIndex,\n@@ -302,2 +288,1 @@\n-                            GifFileType *GifFile,\n-                            int ImageIndex);\n+                            GifFileType *GifFile, int ImageIndex);\n@@ -309,1 +294,1 @@\n-#define GIF_FONT_WIDTH  8\n+#define GIF_FONT_WIDTH 8\n@@ -313,3 +298,2 @@\n-extern void GifDrawText8x8(SavedImage *Image,\n-                     const int x, const int y,\n-                     const char *legend, const int color);\n+extern void GifDrawText8x8(SavedImage *Image, const int x, const int y,\n+                           const char *legend, const int color);\n@@ -317,3 +301,2 @@\n-extern void GifDrawBox(SavedImage *Image,\n-                    const int x, const int y,\n-                    const int w, const int d, const int color);\n+extern void GifDrawBox(SavedImage *Image, const int x, const int y, const int w,\n+                       const int d, const int color);\n@@ -321,3 +304,2 @@\n-extern void GifDrawRectangle(SavedImage *Image,\n-                   const int x, const int y,\n-                   const int w, const int d, const int color);\n+extern void GifDrawRectangle(SavedImage *Image, const int x, const int y,\n+                             const int w, const int d, const int color);\n@@ -325,4 +307,3 @@\n-extern void GifDrawBoxedText8x8(SavedImage *Image,\n-                          const int x, const int y,\n-                          const char *legend,\n-                          const int border, const int bg, const int fg);\n+extern void GifDrawBoxedText8x8(SavedImage *Image, const int x, const int y,\n+                                const char *legend, const int border,\n+                                const int bg, const int fg);\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/giflib\/gif_lib.h","additions":97,"deletions":116,"binary":false,"changes":213,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-#include \"gif_lib.h\"\n@@ -38,0 +37,1 @@\n+#include \"gif_lib.h\"\n@@ -40,1 +40,1 @@\n-    #define SIZE_MAX     UINTPTR_MAX\n+#define SIZE_MAX UINTPTR_MAX\n@@ -43,3 +43,3 @@\n-#define EXTENSION_INTRODUCER      0x21\n-#define DESCRIPTOR_INTRODUCER     0x2c\n-#define TERMINATOR_INTRODUCER     0x3b\n+#define EXTENSION_INTRODUCER 0x21\n+#define DESCRIPTOR_INTRODUCER 0x2c\n+#define TERMINATOR_INTRODUCER 0x3b\n@@ -47,2 +47,2 @@\n-#define LZ_MAX_CODE         4095    \/* Biggest code possible in 12 bits. *\/\n-#define LZ_BITS             12\n+#define LZ_MAX_CODE 4095 \/* Biggest code possible in 12 bits. *\/\n+#define LZ_BITS 12\n@@ -50,3 +50,3 @@\n-#define FLUSH_OUTPUT        4096    \/* Impossible code, to signal flush. *\/\n-#define FIRST_CODE          4097    \/* Impossible code, to signal first. *\/\n-#define NO_SUCH_CODE        4098    \/* Impossible code, to signal empty. *\/\n+#define FLUSH_OUTPUT 4096 \/* Impossible code, to signal flush. *\/\n+#define FIRST_CODE 4097   \/* Impossible code, to signal first. *\/\n+#define NO_SUCH_CODE 4098 \/* Impossible code, to signal empty. *\/\n@@ -54,4 +54,4 @@\n-#define FILE_STATE_WRITE    0x01\n-#define FILE_STATE_SCREEN   0x02\n-#define FILE_STATE_IMAGE    0x04\n-#define FILE_STATE_READ     0x08\n+#define FILE_STATE_WRITE 0x01\n+#define FILE_STATE_SCREEN 0x02\n+#define FILE_STATE_IMAGE 0x04\n+#define FILE_STATE_READ 0x08\n@@ -59,2 +59,2 @@\n-#define IS_READABLE(Private)    (Private->FileState & FILE_STATE_READ)\n-#define IS_WRITEABLE(Private)   (Private->FileState & FILE_STATE_WRITE)\n+#define IS_READABLE(Private) (Private->FileState & FILE_STATE_READ)\n+#define IS_WRITEABLE(Private) (Private->FileState & FILE_STATE_WRITE)\n@@ -63,17 +63,19 @@\n-    GifWord FileState, FileHandle,  \/* Where all this data goes to! *\/\n-      BitsPerPixel,     \/* Bits per pixel (Codes uses at least this + 1). *\/\n-      ClearCode,   \/* The CLEAR LZ code. *\/\n-      EOFCode,     \/* The EOF LZ code. *\/\n-      RunningCode, \/* The next code algorithm can generate. *\/\n-      RunningBits, \/* The number of bits required to represent RunningCode. *\/\n-      MaxCode1,    \/* 1 bigger than max. possible code, in RunningBits bits. *\/\n-      LastCode,    \/* The code before the current code. *\/\n-      CrntCode,    \/* Current algorithm code. *\/\n-      StackPtr,    \/* For character stack (see below). *\/\n-      CrntShiftState;    \/* Number of bits in CrntShiftDWord. *\/\n-    unsigned long CrntShiftDWord;   \/* For bytes decomposition into codes. *\/\n-    unsigned long PixelCount;   \/* Number of pixels in image. *\/\n-    FILE *File;    \/* File as stream. *\/\n-    InputFunc Read;     \/* function to read gif input (TVT) *\/\n-    OutputFunc Write;   \/* function to write gif output (MRB) *\/\n-    GifByteType Buf[256];   \/* Compressed input is buffered here. *\/\n+    GifWord FileState, FileHandle, \/* Where all this data goes to! *\/\n+        BitsPerPixel, \/* Bits per pixel (Codes uses at least this + 1). *\/\n+        ClearCode,    \/* The CLEAR LZ code. *\/\n+        EOFCode,      \/* The EOF LZ code. *\/\n+        RunningCode,  \/* The next code algorithm can generate. *\/\n+        RunningBits,  \/* The number of bits required to represent\n+                         RunningCode. *\/\n+        MaxCode1, \/* 1 bigger than max. possible code, in RunningBits bits.\n+                   *\/\n+        LastCode, \/* The code before the current code. *\/\n+        CrntCode, \/* Current algorithm code. *\/\n+        StackPtr, \/* For character stack (see below). *\/\n+        CrntShiftState;           \/* Number of bits in CrntShiftDWord. *\/\n+    unsigned long CrntShiftDWord; \/* For bytes decomposition into codes. *\/\n+    unsigned long PixelCount;     \/* Number of pixels in image. *\/\n+    FILE *File;                   \/* File as stream. *\/\n+    InputFunc Read;               \/* function to read gif input (TVT) *\/\n+    OutputFunc Write;             \/* function to write gif output (MRB) *\/\n+    GifByteType Buf[256];         \/* Compressed input is buffered here. *\/\n@@ -81,1 +83,1 @@\n-    GifByteType Suffix[LZ_MAX_CODE + 1];    \/* So we can trace the codes. *\/\n+    GifByteType Suffix[LZ_MAX_CODE + 1]; \/* So we can trace the codes. *\/\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/giflib\/gif_lib_private.h","additions":36,"deletions":34,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#include <stdlib.h>\n@@ -35,0 +34,1 @@\n+#include <stdlib.h>\n@@ -40,1 +40,1 @@\n-#define MAX(x, y)    (((x) > (y)) ? (x) : (y))\n+#define MAX(x, y) (((x) > (y)) ? (x) : (y))\n@@ -47,3 +47,1 @@\n-int\n-GifBitSize(int n)\n-{\n+int GifBitSize(int n) {\n@@ -52,2 +50,2 @@\n-    for (i = 1; i <= 8; i++)\n-        if ((1 << i) >= n)\n+    for (i = 1; i <= 8; i++) {\n+        if ((1 << i) >= n) {\n@@ -55,0 +53,2 @@\n+        }\n+    }\n@@ -59,1 +59,1 @@\n-  Color map object functions\n+ Color map object functions\n@@ -66,3 +66,1 @@\n-ColorMapObject *\n-GifMakeMapObject(int ColorCount, const GifColorType *ColorMap)\n-{\n+ColorMapObject *GifMakeMapObject(int ColorCount, const GifColorType *ColorMap) {\n@@ -72,1 +70,2 @@\n-     * make the user know that or should we automatically round up instead? *\/\n+     * make the user know that or should we automatically round up instead?\n+     *\/\n@@ -74,1 +73,1 @@\n-        return ((ColorMapObject *) NULL);\n+        return ((ColorMapObject *)NULL);\n@@ -78,2 +77,2 @@\n-    if (Object == (ColorMapObject *) NULL) {\n-        return ((ColorMapObject *) NULL);\n+    if (Object == (ColorMapObject *)NULL) {\n+        return ((ColorMapObject *)NULL);\n@@ -82,2 +81,3 @@\n-    Object->Colors = (GifColorType *)calloc(ColorCount, sizeof(GifColorType));\n-    if (Object->Colors == (GifColorType *) NULL) {\n+    Object->Colors =\n+        (GifColorType *)calloc(ColorCount, sizeof(GifColorType));\n+    if (Object->Colors == (GifColorType *)NULL) {\n@@ -85,1 +85,1 @@\n-        return ((ColorMapObject *) NULL);\n+        return ((ColorMapObject *)NULL);\n@@ -93,2 +93,2 @@\n-        memcpy((char *)Object->Colors,\n-               (char *)ColorMap, ColorCount * sizeof(GifColorType));\n+        memcpy((char *)Object->Colors, (char *)ColorMap,\n+               ColorCount * sizeof(GifColorType));\n@@ -101,1 +101,1 @@\n-Free a color map object\n+ Free a color map object\n@@ -103,3 +103,1 @@\n-void\n-GifFreeMapObject(ColorMapObject *Object)\n-{\n+void GifFreeMapObject(ColorMapObject *Object) {\n@@ -113,4 +111,1 @@\n-void\n-DumpColorMap(ColorMapObject *Object,\n-             FILE * fp)\n-{\n+void DumpColorMap(ColorMapObject *Object, FILE *fp) {\n@@ -122,2 +117,2 @@\n-                (void)fprintf(fp, \"%3d: %02x %02x %02x   \", i + j,\n-                              Object->Colors[i + j].Red,\n+                (void)fprintf(fp, \"%3d: %02x %02x %02x   \",\n+                              i + j, Object->Colors[i + j].Red,\n@@ -140,5 +135,3 @@\n-ColorMapObject *\n-GifUnionColorMap(const ColorMapObject *ColorIn1,\n-              const ColorMapObject *ColorIn2,\n-              GifPixelType ColorTransIn2[])\n-{\n+ColorMapObject *GifUnionColorMap(const ColorMapObject *ColorIn1,\n+                                 const ColorMapObject *ColorIn2,\n+                                 GifPixelType ColorTransIn2[]) {\n@@ -155,2 +148,2 @@\n-    ColorUnion = GifMakeMapObject(MAX(ColorIn1->ColorCount,\n-                               ColorIn2->ColorCount) * 2, NULL);\n+    ColorUnion = GifMakeMapObject(\n+        MAX(ColorIn1->ColorCount, ColorIn2->ColorCount) * 2, NULL);\n@@ -158,1 +151,1 @@\n-    if (ColorUnion == NULL)\n+    if (ColorUnion == NULL) {\n@@ -160,0 +153,1 @@\n+    }\n@@ -164,1 +158,1 @@\n-    for (i = 0; i < ColorIn1->ColorCount; i++)\n+    for (i = 0; i < ColorIn1->ColorCount; i++) {\n@@ -166,0 +160,1 @@\n+    }\n@@ -175,3 +170,3 @@\n-    while (ColorIn1->Colors[CrntSlot - 1].Red == 0\n-           && ColorIn1->Colors[CrntSlot - 1].Green == 0\n-           && ColorIn1->Colors[CrntSlot - 1].Blue == 0)\n+    while (ColorIn1->Colors[CrntSlot - 1].Red == 0 &&\n+           ColorIn1->Colors[CrntSlot - 1].Green == 0 &&\n+           ColorIn1->Colors[CrntSlot - 1].Blue == 0) {\n@@ -179,0 +174,1 @@\n+    }\n@@ -183,3 +179,3 @@\n-        for (j = 0; j < ColorIn1->ColorCount; j++)\n-            if (memcmp (&ColorIn1->Colors[j], &ColorIn2->Colors[i],\n-                        sizeof(GifColorType)) == 0)\n+        for (j = 0; j < ColorIn1->ColorCount; j++) {\n+            if (memcmp(&ColorIn1->Colors[j], &ColorIn2->Colors[i],\n+                       sizeof(GifColorType)) == 0) {\n@@ -187,0 +183,2 @@\n+            }\n+        }\n@@ -188,3 +186,3 @@\n-        if (j < ColorIn1->ColorCount)\n-            ColorTransIn2[i] = j;    \/* color exists in Color1 *\/\n-        else {\n+        if (j < ColorIn1->ColorCount) {\n+            ColorTransIn2[i] = j; \/* color exists in Color1 *\/\n+        } else {\n@@ -199,1 +197,1 @@\n-        return ((ColorMapObject *) NULL);\n+        return ((ColorMapObject *)NULL);\n@@ -213,1 +211,1 @@\n-        for (j = CrntSlot; j < RoundUpTo; j++)\n+        for (j = CrntSlot; j < RoundUpTo; j++) {\n@@ -215,0 +213,1 @@\n+        }\n@@ -218,3 +217,3 @@\n-            GifColorType *new_map = (GifColorType *)reallocarray(Map,\n-                                 RoundUpTo, sizeof(GifColorType));\n-            if( new_map == NULL ) {\n+            GifColorType *new_map = (GifColorType *)reallocarray(\n+                Map, RoundUpTo, sizeof(GifColorType));\n+            if (new_map == NULL) {\n@@ -222,1 +221,1 @@\n-                return ((ColorMapObject *) NULL);\n+                return ((ColorMapObject *)NULL);\n@@ -237,3 +236,1 @@\n-void\n-GifApplyTranslation(SavedImage *Image, GifPixelType Translation[])\n-{\n+void GifApplyTranslation(SavedImage *Image, const GifPixelType Translation[]) {\n@@ -241,1 +238,2 @@\n-    register int RasterSize = Image->ImageDesc.Height * Image->ImageDesc.Width;\n+    register int RasterSize =\n+        Image->ImageDesc.Height * Image->ImageDesc.Width;\n@@ -243,1 +241,1 @@\n-    for (i = 0; i < RasterSize; i++)\n+    for (i = 0; i < RasterSize; i++) {\n@@ -245,0 +243,1 @@\n+    }\n@@ -250,7 +249,3 @@\n-int\n-GifAddExtensionBlock(int *ExtensionBlockCount,\n-                     ExtensionBlock **ExtensionBlocks,\n-                     int Function,\n-                     unsigned int Len,\n-                     unsigned char ExtData[])\n-{\n+int GifAddExtensionBlock(int *ExtensionBlockCount,\n+                         ExtensionBlock **ExtensionBlocks, int Function,\n+                         unsigned int Len, unsigned char ExtData[]) {\n@@ -259,7 +254,8 @@\n-    if (*ExtensionBlocks == NULL)\n-        *ExtensionBlocks=(ExtensionBlock *)malloc(sizeof(ExtensionBlock));\n-    else {\n-        ExtensionBlock* ep_new = (ExtensionBlock *)reallocarray\n-                                      (*ExtensionBlocks, (*ExtensionBlockCount + 1),\n-                                      sizeof(ExtensionBlock));\n-        if( ep_new == NULL )\n+    if (*ExtensionBlocks == NULL) {\n+        *ExtensionBlocks =\n+            (ExtensionBlock *)malloc(sizeof(ExtensionBlock));\n+    } else {\n+        ExtensionBlock *ep_new = (ExtensionBlock *)reallocarray(\n+            *ExtensionBlocks, (*ExtensionBlockCount + 1),\n+            sizeof(ExtensionBlock));\n+        if (ep_new == NULL) {\n@@ -267,0 +263,1 @@\n+        }\n@@ -270,1 +267,1 @@\n-    if (*ExtensionBlocks == NULL)\n+    if (*ExtensionBlocks == NULL) {\n@@ -272,0 +269,1 @@\n+    }\n@@ -276,1 +274,1 @@\n-    ep->ByteCount=Len;\n+    ep->ByteCount = Len;\n@@ -278,1 +276,1 @@\n-    if (ep->Bytes == NULL)\n+    if (ep->Bytes == NULL) {\n@@ -280,0 +278,1 @@\n+    }\n@@ -288,4 +287,2 @@\n-void\n-GifFreeExtensions(int *ExtensionBlockCount,\n-                  ExtensionBlock **ExtensionBlocks)\n-{\n+void GifFreeExtensions(int *ExtensionBlockCount,\n+                       ExtensionBlock **ExtensionBlocks) {\n@@ -294,1 +291,1 @@\n-    if (*ExtensionBlocks == NULL)\n+    if (*ExtensionBlocks == NULL) {\n@@ -296,0 +293,1 @@\n+    }\n@@ -298,2 +296,1 @@\n-         ep < (*ExtensionBlocks + *ExtensionBlockCount);\n-         ep++)\n+         ep < (*ExtensionBlocks + *ExtensionBlockCount); ep++) {\n@@ -301,0 +298,1 @@\n+    }\n@@ -307,1 +305,1 @@\n- Image block allocation functions\n+   Image block allocation functions\n@@ -313,3 +311,1 @@\n-void\n-FreeLastSavedImage(GifFileType *GifFile)\n-{\n+void FreeLastSavedImage(GifFileType *GifFile) {\n@@ -318,1 +314,1 @@\n-    if ((GifFile == NULL) || (GifFile->SavedImages == NULL))\n+    if ((GifFile == NULL) || (GifFile->SavedImages == NULL)) {\n@@ -320,0 +316,1 @@\n+    }\n@@ -332,1 +329,1 @@\n-    if (sp->RasterBits != NULL)\n+    if (sp->RasterBits != NULL) {\n@@ -334,0 +331,1 @@\n+    }\n@@ -340,3 +338,4 @@\n-     * time.  If this is used in GifFreeSavedImages then it would be inefficient\n-     * (The whole array is going to be deallocated.)  If we just use it when\n-     * we want to free the last Image it's convenient to do it here.\n+     * time.  If this is used in GifFreeSavedImages then it would be\n+     * inefficient (The whole array is going to be deallocated.)  If we just\n+     * use it when we want to free the last Image it's convenient to do it\n+     * here.\n@@ -349,4 +348,4 @@\n-SavedImage *\n-GifMakeSavedImage(GifFileType *GifFile, const SavedImage *CopyFrom)\n-{\n-    if (GifFile->SavedImages == NULL)\n+SavedImage *GifMakeSavedImage(GifFileType *GifFile,\n+                              const SavedImage *CopyFrom) {\n+    \/\/ cppcheck-suppress ctunullpointer\n+    if (GifFile->SavedImages == NULL) {\n@@ -354,4 +353,5 @@\n-    else {\n-        SavedImage* newSavedImages = (SavedImage *)reallocarray(GifFile->SavedImages,\n-                               (GifFile->ImageCount + 1), sizeof(SavedImage));\n-        if( newSavedImages == NULL)\n+    } else {\n+        SavedImage *newSavedImages = (SavedImage *)reallocarray(\n+            GifFile->SavedImages, (GifFile->ImageCount + 1),\n+            sizeof(SavedImage));\n+        if (newSavedImages == NULL) {\n@@ -359,0 +359,1 @@\n+        }\n@@ -361,1 +362,1 @@\n-    if (GifFile->SavedImages == NULL)\n+    if (GifFile->SavedImages == NULL) {\n@@ -363,1 +364,1 @@\n-    else {\n+    } else {\n@@ -370,3 +371,3 @@\n-             * Make our own allocated copies of the heap fields in the\n-             * copied record.  This guards against potential aliasing\n-             * problems.\n+             * Make our own allocated copies of the heap fields in\n+             * the copied record.  This guards against potential\n+             * aliasing problems.\n@@ -378,2 +379,2 @@\n-                                         CopyFrom->ImageDesc.ColorMap->ColorCount,\n-                                         CopyFrom->ImageDesc.ColorMap->Colors);\n+                    CopyFrom->ImageDesc.ColorMap->ColorCount,\n+                    CopyFrom->ImageDesc.ColorMap->Colors);\n@@ -387,4 +388,5 @@\n-            sp->RasterBits = (unsigned char *)reallocarray(NULL,\n-                                                  (CopyFrom->ImageDesc.Height *\n-                                                  CopyFrom->ImageDesc.Width),\n-                                                  sizeof(GifPixelType));\n+            sp->RasterBits = (unsigned char *)reallocarray(\n+                NULL,\n+                (CopyFrom->ImageDesc.Height *\n+                 CopyFrom->ImageDesc.Width),\n+                sizeof(GifPixelType));\n@@ -396,2 +398,3 @@\n-                   sizeof(GifPixelType) * CopyFrom->ImageDesc.Height *\n-                   CopyFrom->ImageDesc.Width);\n+                   sizeof(GifPixelType) *\n+                       CopyFrom->ImageDesc.Height *\n+                       CopyFrom->ImageDesc.Width);\n@@ -401,3 +404,4 @@\n-                sp->ExtensionBlocks = (ExtensionBlock *)reallocarray(NULL,\n-                                      CopyFrom->ExtensionBlockCount,\n-                                      sizeof(ExtensionBlock));\n+                sp->ExtensionBlocks =\n+                    (ExtensionBlock *)reallocarray(\n+                        NULL, CopyFrom->ExtensionBlockCount,\n+                        sizeof(ExtensionBlock));\n@@ -408,2 +412,4 @@\n-                memcpy(sp->ExtensionBlocks, CopyFrom->ExtensionBlocks,\n-                       sizeof(ExtensionBlock) * CopyFrom->ExtensionBlockCount);\n+                memcpy(sp->ExtensionBlocks,\n+                       CopyFrom->ExtensionBlocks,\n+                       sizeof(ExtensionBlock) *\n+                           CopyFrom->ExtensionBlockCount);\n@@ -411,2 +417,1 @@\n-        }\n-        else {\n+        } else {\n@@ -420,3 +425,1 @@\n-void\n-GifFreeSavedImages(GifFileType *GifFile)\n-{\n+void GifFreeSavedImages(GifFileType *GifFile) {\n@@ -435,1 +438,1 @@\n-        if (sp->RasterBits != NULL)\n+        if (sp->RasterBits != NULL) {\n@@ -437,0 +440,1 @@\n+        }\n@@ -438,1 +442,2 @@\n-        GifFreeExtensions(&sp->ExtensionBlockCount, &sp->ExtensionBlocks);\n+        GifFreeExtensions(&sp->ExtensionBlockCount,\n+                          &sp->ExtensionBlocks);\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/giflib\/gifalloc.c","additions":130,"deletions":125,"binary":false,"changes":255,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include <sys\/types.h>\n@@ -35,0 +34,1 @@\n+#include <sys\/types.h>\n@@ -37,1 +37,1 @@\n-    #define SIZE_MAX     UINTPTR_MAX\n+#define SIZE_MAX UINTPTR_MAX\n@@ -44,1 +44,1 @@\n-#define MUL_NO_OVERFLOW    ((size_t)1 << (sizeof(size_t) * 4))\n+#define MUL_NO_OVERFLOW ((size_t)1 << (sizeof(size_t) * 4))\n@@ -46,3 +46,1 @@\n-void *\n-openbsd_reallocarray(void *optr, size_t nmemb, size_t size)\n-{\n+void *openbsd_reallocarray(void *optr, size_t nmemb, size_t size) {\n@@ -96,1 +94,1 @@\n-    if (size == 0 || nmemb == 0)\n+    if (size == 0 || nmemb == 0) {\n@@ -98,0 +96,1 @@\n+    }\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/giflib\/openbsd-reallocarray.c","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,2 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n@@ -61,0 +63,1 @@\n+@SuppressWarnings(\"removal\")\n@@ -72,0 +75,10 @@\n+    private static void doPrivilegedRunnable(Runnable runnable) {\n+        AccessController.doPrivileged(new PrivilegedAction<Void>() {\n+            @Override\n+            public Void run() {\n+                runnable.run();\n+                return null;\n+            }\n+        });\n+    }\n+\n@@ -73,1 +86,7 @@\n-        PROPS_PATH = setupPath();\n+        PROPS_PATH = AccessController.doPrivileged(new PrivilegedAction<Path>() {\n+            @Override\n+            public Path run() {\n+                return setupPath();\n+            }\n+        });\n+\n@@ -195,1 +214,1 @@\n-                        setFilePermission(PROPS_PATH);\n+                        doPrivilegedRunnable(() -> setFilePermission(PROPS_PATH));\n@@ -197,1 +216,1 @@\n-                        readTokens(PROPS_PATH);\n+                        doPrivilegedRunnable(() -> readTokens(PROPS_PATH));\n@@ -210,0 +229,2 @@\n+    private static WatchService watchService;\n+\n@@ -211,3 +232,4 @@\n-        try {\n-            WatchService watchService =\n-                    FileSystems.getDefault().newWatchService();\n+        doPrivilegedRunnable(() -> {\n+            try {\n+                watchService =\n+                        FileSystems.getDefault().newWatchService();\n@@ -215,6 +237,6 @@\n-            PROPS_PATH\n-                    .getParent()\n-                    .register(watchService,\n-                            ENTRY_CREATE,\n-                            ENTRY_DELETE,\n-                            ENTRY_MODIFY);\n+                PROPS_PATH\n+                        .getParent()\n+                        .register(watchService,\n+                                ENTRY_CREATE,\n+                                ENTRY_DELETE,\n+                                ENTRY_MODIFY);\n@@ -222,5 +244,5 @@\n-            new WatcherThread(watchService).start();\n-        } catch (Exception e) {\n-            if (SCREENCAST_DEBUG) {\n-                System.err.printf(\"Token storage: failed to setup \" +\n-                        \"file watch %s\\n\", e);\n+            } catch (Exception e) {\n+                if (SCREENCAST_DEBUG) {\n+                    System.err.printf(\"Token storage: failed to setup \" +\n+                            \"file watch %s\\n\", e);\n+                }\n@@ -228,0 +250,4 @@\n+        });\n+\n+        if (watchService != null) {\n+            new WatcherThread(watchService).start();\n@@ -279,1 +305,1 @@\n-                store(\"save tokens\");\n+                doPrivilegedRunnable(() -> store(\"save tokens\"));\n@@ -334,1 +360,1 @@\n-        removeMalformedRecords(malformed);\n+        doPrivilegedRunnable(() -> removeMalformedRecords(malformed));\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/TokenStorage.java","additions":46,"deletions":20,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,0 +155,2 @@\n+     *\n+     * @since 13\n","filename":"src\/java.xml.crypto\/share\/classes\/javax\/xml\/crypto\/dsig\/keyinfo\/KeyValue.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import jdk.internal.javac.PreviewFeature;\n+\n@@ -50,0 +52,6 @@\n+    \/**\n+     * {@return true if this is an module import declaration.}\n+     * @since 23\n+     *\/\n+    @PreviewFeature(feature=PreviewFeature.Feature.MODULE_IMPORTS, reflective=true)\n+    boolean isModule();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/ImportTree.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -214,0 +214,1 @@\n+            case MODULE_IMPORTS -> true;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Preview.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -272,0 +272,1 @@\n+        MODULE_IMPORTS(JDK23, Fragments.FeatureModuleImports, DiagKind.PLURAL),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4495,1 +4495,3 @@\n-        for (final JCImport imp : toplevel.getImports()) {\n+        for (final JCImportBase impBase : toplevel.getImports()) {\n+            if (!(impBase instanceof JCImport imp))\n+                continue;\n@@ -4519,2 +4521,3 @@\n-        OUTER: for (JCImport imp : toplevel.getImports()) {\n-            if (!imp.staticImport && TreeInfo.name(imp.qualid) == names.asterisk) {\n+        OUTER: for (JCImportBase impBase : toplevel.getImports()) {\n+            if (impBase instanceof JCImport imp && !imp.staticImport &&\n+                TreeInfo.name(imp.qualid) == names.asterisk) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2991,1 +2991,1 @@\n-                    tree.expr.type,\n+                    types.erasure(tree.expr.type),\n@@ -2994,1 +2994,1 @@\n-                    .VarDef(dollar_s, instanceOfExpr).setType(dollar_s.type);\n+                    .VarDef(dollar_s, instanceOfExpr);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -461,1 +461,3 @@\n-            cases = processCases(tree, newCases.toList());\n+            cases = newCases.toList();\n+            patchCompletingNormallyCases(cases);\n+            cases = processCases(tree, cases);\n@@ -526,2 +528,0 @@\n-            patchCompletingNormallyCases(cases);\n-\n@@ -688,1 +688,1 @@\n-                cases.tail.head.guard != null) {\n+                (cases.tail.head.guard != null || cases.tail.head.labels.stream().anyMatch(cl -> cl instanceof JCPatternCaseLabel p && p.syntheticGuard != null))) {\n@@ -703,0 +703,1 @@\n+                currentCase.completesNormally = false;\n@@ -951,0 +952,1 @@\n+        boolean previousCompletesNormally = false;\n@@ -955,0 +957,1 @@\n+            boolean currentCompletesNormally = c.head.completesNormally;\n@@ -989,0 +992,2 @@\n+                       !previousCompletesNormally &&\n+                       !currentCompletesNormally &&\n@@ -1004,0 +1009,1 @@\n+            previousCompletesNormally = currentCompletesNormally;\n@@ -1476,2 +1482,2 @@\n-                if (!e.getKey().isPreserved() ||\n-                    !parent.tryPrepend(e.getKey(), decl)) {\n+                if (!e.getValue().isUnnamedVariable() &&\n+                        (!e.getKey().isPreserved() || !parent.tryPrepend(e.getKey(), decl))) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,0 +70,1 @@\n+import com.sun.tools.javac.tree.JCTree.JCModuleImport;\n@@ -413,0 +414,6 @@\n+    @Override\n+    public void visitModuleImport(JCModuleImport tree) {\n+        JCModuleImport that = (JCModuleImport) parameter;\n+        result = scan(tree.module, that.module);\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TreeDiffer.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+import com.sun.tools.javac.code.Directive.ExportsDirective;\n+import com.sun.tools.javac.code.Directive.RequiresDirective;\n@@ -42,2 +44,0 @@\n-import com.sun.tools.javac.parser.Parser;\n-import com.sun.tools.javac.parser.ParserFactory;\n@@ -116,2 +116,0 @@\n-    private final ParserFactory parserFactory;\n-    private final Preview preview;\n@@ -145,2 +143,0 @@\n-        parserFactory = ParserFactory.instance(context);\n-        preview = Preview.instance(context);\n@@ -372,3 +368,1 @@\n-                for (JCImport imp : tree.getImports()) {\n-                    doImport(imp);\n-                }\n+                handleImports(tree.getImports());\n@@ -396,0 +390,10 @@\n+        private void handleImports(List<JCImportBase> imports) {\n+            for (JCImportBase imp : imports) {\n+                if (imp instanceof JCModuleImport mimp) {\n+                    doModuleImport(mimp);\n+                } else {\n+                    doImport((JCImport) imp);\n+                }\n+            }\n+        }\n+\n@@ -447,0 +451,51 @@\n+        private void doModuleImport(JCModuleImport tree) {\n+            Name moduleName = TreeInfo.fullName(tree.module);\n+            ModuleSymbol module = syms.getModule(moduleName);\n+\n+            if (module != null) {\n+                if (!env.toplevel.modle.readModules.contains(module)) {\n+                    if (env.toplevel.modle.isUnnamed()) {\n+                        log.error(tree.pos, Errors.ImportModuleDoesNotReadUnnamed(module));\n+                    } else {\n+                        log.error(tree.pos, Errors.ImportModuleDoesNotRead(env.toplevel.modle,\n+                                                                           module));\n+                    }\n+                    \/\/error recovery, make sure the module is completed:\n+                    module.getDirectives();\n+                }\n+\n+                List<ModuleSymbol> todo = List.of(module);\n+                Set<ModuleSymbol> seenModules = new HashSet<>();\n+\n+                while (!todo.isEmpty()) {\n+                    ModuleSymbol currentModule = todo.head;\n+\n+                    todo = todo.tail;\n+\n+                    if (!seenModules.add(currentModule)) {\n+                        continue;\n+                    }\n+\n+                    for (ExportsDirective export : currentModule.exports) {\n+                        if (export.modules != null && !export.modules.contains(env.toplevel.packge.modle)) {\n+                            continue;\n+                        }\n+\n+                        PackageSymbol pkg = export.getPackage();\n+                        JCImport nestedImport = make.at(tree.pos)\n+                                .Import(make.Select(make.QualIdent(pkg), names.asterisk), false);\n+\n+                        doImport(nestedImport);\n+                    }\n+\n+                    for (RequiresDirective requires : currentModule.requires) {\n+                        if (requires.isTransitive()) {\n+                            todo = todo.prepend(requires.module);\n+                        }\n+                    }\n+                }\n+            } else {\n+                log.error(tree.pos, Errors.ImportModuleNotFound(moduleName));\n+            }\n+        }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java","additions":64,"deletions":9,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -4161,1 +4161,1 @@\n-            } else if (def.hasTag(Tag.IMPORT)) {\n+            } else if (def.hasTag(Tag.IMPORT) || def.hasTag(Tag.MODULEIMPORT)) {\n@@ -4295,0 +4295,7 @@\n+        } else if (token.kind == IDENTIFIER && token.name() == names.module &&\n+                   peekToken(TokenKind.IDENTIFIER)) {\n+            checkSourceLevel(Feature.MODULE_IMPORTS);\n+            nextToken();\n+            JCExpression moduleName = qualident(false);\n+            accept(SEMI);\n+            return toP(F.at(pos).ModuleImport(moduleName));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -3230,0 +3230,3 @@\n+compiler.misc.feature.module.imports=\\\n+    module imports\n+\n@@ -3540,0 +3543,12 @@\n+# 0: name\n+compiler.err.import.module.not.found=\\\n+    imported module not found: {0}\n+\n+# 0: symbol\n+compiler.err.import.module.does.not.read.unnamed=\\\n+    unnamed module does not read: {0}\n+\n+# 0: symbol, 1: symbol\n+compiler.err.import.module.does.not.read=\\\n+    module {0} does not read: {1}\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -108,0 +108,4 @@\n+        \/** Module import clauses.\n+         *\/\n+        MODULEIMPORT,\n+\n@@ -588,2 +592,2 @@\n-        public List<JCImport> getImports() {\n-            ListBuffer<JCImport> imports = new ListBuffer<>();\n+        public List<JCImportBase> getImports() {\n+            ListBuffer<JCImportBase> imports = new ListBuffer<>();\n@@ -591,2 +595,2 @@\n-                if (tree.hasTag(IMPORT))\n-                    imports.append((JCImport)tree);\n+                if (tree instanceof JCImportBase imp)\n+                    imports.append(imp);\n@@ -611,1 +615,3 @@\n-                        && !typeDefs.head.hasTag(PACKAGEDEF) && !typeDefs.head.hasTag(IMPORT)) {\n+                        && !typeDefs.head.hasTag(PACKAGEDEF)\n+                        && !typeDefs.head.hasTag(IMPORT)\n+                        && !typeDefs.head.hasTag(MODULEIMPORT)) {\n@@ -664,0 +670,12 @@\n+    public static abstract class JCImportBase extends JCTree implements ImportTree {\n+\n+        @DefinedBy(Api.COMPILER_TREE)\n+        public Kind getKind() { return Kind.IMPORT; }\n+        @Override @DefinedBy(Api.COMPILER_TREE)\n+        public <R,D> R accept(TreeVisitor<R,D> v, D d) {\n+            return v.visitImport(this, d);\n+        }\n+\n+        public abstract JCTree getQualifiedIdentifier();\n+    }\n+\n@@ -667,1 +685,1 @@\n-    public static class JCImport extends JCTree implements ImportTree {\n+    public static class JCImport extends JCImportBase {\n@@ -682,0 +700,2 @@\n+        public boolean isModule() { return false; }\n+        @DefinedBy(Api.COMPILER_TREE)\n@@ -684,0 +704,25 @@\n+        @Override\n+        public Tag getTag() {\n+            return IMPORT;\n+        }\n+    }\n+\n+    \/**\n+     * A module import clause.\n+     *\/\n+    public static class JCModuleImport extends JCImportBase {\n+        \/** The module name. *\/\n+        public JCExpression module;\n+        protected JCModuleImport(JCExpression module) {\n+            this.module = module;\n+        }\n+        @Override\n+        public void accept(Visitor v) { v.visitModuleImport(this); }\n+\n+        @DefinedBy(Api.COMPILER_TREE)\n+        public boolean isStatic() { return false; }\n+        @DefinedBy(Api.COMPILER_TREE)\n+        public boolean isModule() { return true; }\n+        @DefinedBy(Api.COMPILER_TREE)\n+        public JCExpression getQualifiedIdentifier() { return module; }\n+\n@@ -693,1 +738,1 @@\n-            return IMPORT;\n+            return MODULEIMPORT;\n@@ -3483,0 +3528,1 @@\n+        public void visitModuleImport(JCModuleImport that)   { visitTree(that); }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java","additions":53,"deletions":7,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -383,3 +383,2 @@\n-            if (l.head.hasTag(IMPORT)) {\n-                JCImport imp = (JCImport)l.head;\n-                Name name = TreeInfo.name(imp.qualid);\n+            if (l.head instanceof JCImportBase imp) {\n+                Name name = TreeInfo.name(imp.getQualifiedIdentifier());\n@@ -388,1 +387,2 @@\n-                        isUsed(TreeInfo.symbol(imp.qualid), cdef)) {\n+                        imp instanceof JCModuleImport ||\n+                        isUsed(TreeInfo.symbol(imp.getQualifiedIdentifier()), cdef)) {\n@@ -550,0 +550,11 @@\n+    public void visitModuleImport(JCModuleImport tree) {\n+        try {\n+            print(\"import module \");\n+            printExpr(tree.module);\n+            print(';');\n+            println();\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/Pretty.java","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -260,3 +260,8 @@\n-        JCImport t = (JCImport) node;\n-        JCFieldAccess qualid = copy(t.qualid, p);\n-        return M.at(t.pos).Import(qualid, t.staticImport);\n+        if (node instanceof JCModuleImport mimp) {\n+            JCExpression module = copy(mimp.module, p);\n+            return M.at(mimp.pos).ModuleImport(module);\n+        } else {\n+            JCImport t = (JCImport) node;\n+            JCFieldAccess qualid = copy(t.qualid, p);\n+            return M.at(t.pos).Import(qualid, t.staticImport);\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeCopier.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -132,0 +132,1 @@\n+                || node instanceof JCModuleImport\n@@ -154,2 +155,8 @@\n-    public JCImport Import(JCFieldAccess qualid, boolean importStatic) {\n-        JCImport tree = new JCImport(qualid, importStatic);\n+    public JCImport Import(JCFieldAccess qualid, boolean staticImport) {\n+        JCImport tree = new JCImport(qualid, staticImport);\n+        tree.pos = pos;\n+        return tree;\n+    }\n+\n+    public JCModuleImport ModuleImport(JCExpression moduleName) {\n+        JCModuleImport tree = new JCModuleImport(moduleName);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeMaker.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -124,0 +124,3 @@\n+    \/\/ whether to allow legacy mechanisms\n+    private boolean allowLegacy = false;\n+\n@@ -254,0 +257,4 @@\n+    boolean getAllowLegacy() {\n+        return allowLegacy;\n+    }\n+\n@@ -456,0 +463,2 @@\n+            case \"allowLegacy\"->\n+                allowLegacy = parseBooleanEntry(st.sval);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/Config.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -457,3 +457,12 @@\n-            if (encrypt) {\n-                token.p11.C_EncryptInit(session.id(), mechWithParams,\n-                    p11KeyID);\n+\n+            if (type == Transformation.AES_GCM) {\n+                CK_VERSION cryptokiVersion = token.p11.getVersion();\n+                boolean useNormativeMechFirst = cryptokiVersion.major > 2 ||\n+                    (cryptokiVersion.major == 2  && cryptokiVersion.minor >= 40);\n+                if (encrypt) {\n+                    token.p11.C_GCMEncryptInitWithRetry(session.id(), mechWithParams,\n+                        p11KeyID, useNormativeMechFirst);\n+                } else {\n+                    token.p11.C_GCMDecryptInitWithRetry(session.id(), mechWithParams,\n+                        p11KeyID, useNormativeMechFirst);\n+                }\n@@ -461,2 +470,7 @@\n-                token.p11.C_DecryptInit(session.id(), mechWithParams,\n-                    p11KeyID);\n+                if (encrypt) {\n+                    token.p11.C_EncryptInit(session.id(), mechWithParams,\n+                        p11KeyID);\n+                } else {\n+                    token.p11.C_DecryptInit(session.id(), mechWithParams,\n+                        p11KeyID);\n+                }\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11AEADCipher.java","additions":20,"deletions":6,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -1225,19 +1225,0 @@\n-    private static boolean isLegacy(CK_MECHANISM_INFO mechInfo)\n-            throws PKCS11Exception {\n-        \/\/ assume full support if no mech info available\n-        \/\/ For vendor-specific mechanisms, often no mech info is provided\n-        boolean partialSupport = false;\n-\n-        if (mechInfo != null) {\n-            if ((mechInfo.flags & CKF_DECRYPT) != 0) {\n-                \/\/ non-legacy cipher mechs should support encryption\n-                partialSupport |= ((mechInfo.flags & CKF_ENCRYPT) == 0);\n-            }\n-            if ((mechInfo.flags & CKF_VERIFY) != 0) {\n-                \/\/ non-legacy signature mechs should support signing\n-                partialSupport |= ((mechInfo.flags & CKF_SIGN) == 0);\n-            }\n-        }\n-        return partialSupport;\n-    }\n-\n@@ -1312,6 +1293,0 @@\n-            if (isLegacy(mechInfo)) {\n-                if (showInfo) {\n-                    System.out.println(\"DISABLED due to legacy\");\n-                }\n-                continue;\n-            }\n@@ -1339,0 +1314,1 @@\n+            boolean allowLegacy = config.getAllowLegacy();\n@@ -1354,0 +1330,15 @@\n+\n+                    \/\/ assume full support if no mech info available\n+                    if (!allowLegacy && mechInfo != null) {\n+                        if ((d.type == CIP &&\n+                                (mechInfo.flags & CKF_ENCRYPT) == 0) ||\n+                                (d.type == SIG &&\n+                                (mechInfo.flags & CKF_SIGN) == 0)) {\n+                            if (showInfo) {\n+                                System.out.println(\"DISABLED \" +  d.type +\n+                                        \" \" + d.algorithm +\n+                                        \" due to partial support\");\n+                            }\n+                            continue;\n+                        }\n+                    }\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/SunPKCS11.java","additions":16,"deletions":25,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -796,0 +796,18 @@\n+    \/**\n+     * C_GCMEncryptInitWithRetry initializes a GCM encryption operation and retry\n+     * with alternative param structure for max compatibility.\n+     * (Encryption and decryption)\n+     *\n+     * @param hSession the session's handle\n+     *         (PKCS#11 param: CK_SESSION_HANDLE hSession)\n+     * @param pMechanism the encryption mechanism\n+     *         (PKCS#11 param: CK_MECHANISM_PTR pMechanism)\n+     * @param hKey the handle of the encryption key\n+     *         (PKCS#11 param: CK_OBJECT_HANDLE hKey)\n+     * @param useNormativeVerFirst whether to use normative version of GCM parameter first\n+     * @exception PKCS11Exception If function returns other value than CKR_OK.\n+     * @preconditions\n+     * @postconditions\n+     *\/\n+    public native void C_GCMEncryptInitWithRetry(long hSession, CK_MECHANISM pMechanism,\n+            long hKey, boolean useNormativeVerFirst) throws PKCS11Exception;\n@@ -890,0 +908,18 @@\n+    \/**\n+     * C_GCMDecryptInitWithRetry initializes a GCM decryption operation\n+     * with alternative param structure for max compatibility.\n+     * (Encryption and decryption)\n+     *\n+     * @param hSession the session's handle\n+     *         (PKCS#11 param: CK_SESSION_HANDLE hSession)\n+     * @param pMechanism the decryption mechanism\n+     *         (PKCS#11 param: CK_MECHANISM_PTR pMechanism)\n+     * @param hKey the handle of the decryption key\n+     *         (PKCS#11 param: CK_OBJECT_HANDLE hKey)\n+     * @param useNormativeVerFirst whether to use normative version of GCM parameter first\n+     * @exception PKCS11Exception If function returns other value than CKR_OK.\n+     * @preconditions\n+     * @postconditions\n+     *\/\n+    public native void C_GCMDecryptInitWithRetry(long hSession, CK_MECHANISM pMechanism,\n+            long hKey, boolean useNormativeVerFirst) throws PKCS11Exception;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/wrapper\/PKCS11.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1017,2 +1017,3 @@\n- * converts the Java CK_GCM_PARAMS object to a CK_GCM_PARAMS_NO_IVBITS pointer\n- * Note: Need to try NSS definition first to avoid SIGSEGV.\n+ * converts the Java CK_GCM_PARAMS object to a CK_GCM_PARAMS pointer\n+ * Note: Early NSS versions crash w\/ CK_GCM_PARAMS and need to use\n+ * CK_GCM_PARAMS_NO_IVBITS to avoid SIGSEGV.\n@@ -1023,1 +1024,1 @@\n- * @return pointer to the new CK_GCM_PARAMS_NO_IVBITS structure\n+ * @return pointer to the new CK_GCM_PARAMS structure\n@@ -1025,1 +1026,1 @@\n-CK_GCM_PARAMS_NO_IVBITS_PTR\n+CK_GCM_PARAMS_PTR\n@@ -1028,1 +1029,1 @@\n-    CK_GCM_PARAMS_NO_IVBITS_PTR ckParamPtr;\n+    CK_GCM_PARAMS_PTR ckParamPtr;\n@@ -1056,2 +1057,2 @@\n-    \/\/ allocate memory for CK_GCM_PARAMS_NO_IVBITS pointer\n-    ckParamPtr = calloc(1, sizeof(CK_GCM_PARAMS_NO_IVBITS));\n+    \/\/ allocate memory for CK_GCM_PARAMS pointer\n+    ckParamPtr = calloc(1, sizeof(CK_GCM_PARAMS));\n@@ -1068,0 +1069,2 @@\n+    \/\/ adjust since the value is in bits\n+    ckParamPtr->ulIvBits = ckParamPtr->ulIvLen << 3;\n@@ -1077,1 +1080,1 @@\n-        *pLength = sizeof(CK_GCM_PARAMS_NO_IVBITS);\n+        *pLength = sizeof(CK_GCM_PARAMS);\n@@ -1079,1 +1082,1 @@\n-    TRACE1(\"Created inner GCM_PARAMS PTR w\/o ulIvBits %p\\n\", ckParamPtr);\n+    TRACE1(\"Created inner GCM_PARAMS PTR %p\\n\", ckParamPtr);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_convert.c","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,0 @@\n-    CK_MECHANISM_PTR ckpTemp;\n@@ -93,10 +92,50 @@\n-    if (ckpMechanism->mechanism == CKM_AES_GCM) {\n-        if (rv == CKR_ARGUMENTS_BAD || rv == CKR_MECHANISM_PARAM_INVALID) {\n-            \/\/ retry with CKM_GCM_PARAMS structure in pkcs11t.h\n-            TRACE0(\"DEBUG C_EncryptInit: retry with CK_GCM_PARAMS\\n\");\n-            ckpTemp = updateGCMParams(env, ckpMechanism);\n-            if (ckpTemp != NULL) { \/\/ only re-call if conversion succeeds\n-                ckpMechanism = ckpTemp;\n-                rv = (*ckpFunctions->C_EncryptInit)(ckSessionHandle, ckpMechanism,\n-                        ckKeyHandle);\n-            }\n+    TRACE1(\"DEBUG C_EncryptInit: freed pMech = %p\\n\", ckpMechanism);\n+    freeCKMechanismPtr(ckpMechanism);\n+    if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) { return; }\n+\n+    TRACE0(\"FINISHED\\n\");\n+}\n+\n+\/*\n+ * Class:     sun_security_pkcs11_wrapper_PKCS11\n+ * Method:    C_GCMEncryptInitWithRetry\n+ * Signature: (JLsun\/security\/pkcs11\/wrapper\/CK_MECHANISM;JZ)V\n+ * Parametermapping:                    *PKCS11*\n+ * @param   jlong jSessionHandle        CK_SESSION_HANDLE hSession\n+ * @param   jobject jMechanism          CK_MECHANISM_PTR pMechanism\n+ * @param   jlong jKeyHandle            CK_OBJECT_HANDLE hKey\n+ * @param   jboolean useNormVerFirst    CK_BBOOL retry (only retry if the first\n+ *                                      init uses the non-normative version)\n+ *\/\n+JNIEXPORT void JNICALL\n+Java_sun_security_pkcs11_wrapper_PKCS11_C_1GCMEncryptInitWithRetry\n+(JNIEnv *env, jobject obj, jlong jSessionHandle,\n+ jobject jMechanism, jlong jKeyHandle, jboolean useNormVerFirst)\n+{\n+    CK_SESSION_HANDLE ckSessionHandle;\n+    CK_MECHANISM_PTR ckpMechanism = NULL;\n+    CK_OBJECT_HANDLE ckKeyHandle;\n+    CK_BBOOL retry = FALSE;\n+    CK_RV rv = 1;\n+\n+    CK_FUNCTION_LIST_PTR ckpFunctions = getFunctionList(env, obj);\n+    if (ckpFunctions == NULL) { return; }\n+\n+    ckSessionHandle = jLongToCKULong(jSessionHandle);\n+    ckKeyHandle = jLongToCKULong(jKeyHandle);\n+    ckpMechanism = jMechanismToCKMechanismPtr(env, jMechanism);\n+\n+    if ((*env)->ExceptionCheck(env)) { return; }\n+\n+    \/\/ if !useNormVerFirst, then update 'ckpMechanism' in place w\/\n+    \/\/ non-normative GCM params.\n+    retry = (!useNormVerFirst && updateGCMParams(env, ckpMechanism) != NULL);\n+\n+    rv = (*ckpFunctions->C_EncryptInit)(ckSessionHandle, ckpMechanism, ckKeyHandle);\n+\n+    if (rv == CKR_ARGUMENTS_BAD || rv == CKR_MECHANISM_PARAM_INVALID) {\n+        \/\/ retry and update 'ckpMechanism' in place w\/ normative GCM params.\n+        if (retry && updateGCMParams(env, ckpMechanism) != NULL) {\n+            TRACE0(\"DEBUG retry C_EncryptInit\\n\");\n+            rv = (*ckpFunctions->C_EncryptInit)(ckSessionHandle,\n+                ckpMechanism, ckKeyHandle);\n@@ -106,1 +145,1 @@\n-    TRACE1(\"DEBUG C_EncryptInit: freed pMech = %p\\n\", ckpMechanism);\n+    TRACE1(\"DEBUG C_GCMEncryptInitWithRetry: freed pMech = %p\\n\", ckpMechanism);\n@@ -315,1 +354,0 @@\n-    CK_MECHANISM_PTR ckpTemp;\n@@ -333,10 +371,51 @@\n-    if (ckpMechanism->mechanism == CKM_AES_GCM) {\n-        if (rv == CKR_ARGUMENTS_BAD || rv == CKR_MECHANISM_PARAM_INVALID) {\n-            \/\/ retry with CKM_GCM_PARAMS structure in pkcs11t.h\n-            TRACE0(\"DEBUG C_DecryptInit: retry with CK_GCM_PARAMS\\n\");\n-            ckpTemp = updateGCMParams(env, ckpMechanism);\n-            if (ckpTemp != NULL) { \/\/ only re-call if conversion succeeds\n-                ckpMechanism = ckpTemp;\n-                rv = (*ckpFunctions->C_DecryptInit)(ckSessionHandle, ckpMechanism,\n-                        ckKeyHandle);\n-            }\n+    TRACE1(\"DEBUG C_DecryptInit: freed pMech = %p\\n\", ckpMechanism);\n+    freeCKMechanismPtr(ckpMechanism);\n+    if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) { return; }\n+\n+    TRACE0(\"FINISHED\\n\");\n+}\n+\n+\/*\n+ * Class:     sun_security_pkcs11_wrapper_PKCS11\n+ * Method:    C_GCMDecryptInitWithRetry\n+ * Signature: (JLsun\/security\/pkcs11\/wrapper\/CK_MECHANISM;JZ)V\n+ * Parametermapping:                    *PKCS11*\n+ * @param   jlong jSessionHandle        CK_SESSION_HANDLE hSession\n+ * @param   jobject jMechanism          CK_MECHANISM_PTR pMechanism\n+ * @param   jlong jKeyHandle            CK_OBJECT_HANDLE hKey\n+ * @param   jboolean useNormVerFirst    CK_BBOOL retry (only retry if the first\n+ *                                      init uses the non-normative version)\n+ *\/\n+JNIEXPORT void JNICALL\n+Java_sun_security_pkcs11_wrapper_PKCS11_C_1GCMDecryptInitWithRetry\n+(JNIEnv *env, jobject obj, jlong jSessionHandle,\n+ jobject jMechanism, jlong jKeyHandle, jboolean useNormVerFirst)\n+{\n+    CK_SESSION_HANDLE ckSessionHandle;\n+    CK_MECHANISM_PTR ckpMechanism = NULL;\n+    CK_OBJECT_HANDLE ckKeyHandle;\n+    CK_BBOOL retry = FALSE;\n+    CK_RV rv = 1;\n+\n+    CK_FUNCTION_LIST_PTR ckpFunctions = getFunctionList(env, obj);\n+    if (ckpFunctions == NULL) { return; }\n+\n+    ckSessionHandle = jLongToCKULong(jSessionHandle);\n+    ckKeyHandle = jLongToCKULong(jKeyHandle);\n+    ckpMechanism = jMechanismToCKMechanismPtr(env, jMechanism);\n+\n+    if ((*env)->ExceptionCheck(env)) { return; }\n+\n+    \/\/ if !useNormVerFirst, then update 'ckpMechanism' in place w\/\n+    \/\/ non-normative GCM params.\n+    retry = (!useNormVerFirst && updateGCMParams(env, ckpMechanism) != NULL);\n+\n+    rv = (*ckpFunctions->C_DecryptInit)(ckSessionHandle, ckpMechanism,\n+        ckKeyHandle);\n+\n+    if (rv == CKR_ARGUMENTS_BAD || rv == CKR_MECHANISM_PARAM_INVALID) {\n+        \/\/ retry and update 'ckpMechanism' in place w\/ normative GCM params.\n+        if (retry && updateGCMParams(env, ckpMechanism) != NULL) {\n+            TRACE0(\"DEBUG retry C_DecryptInit with normative CK_GCM_PARAMS\\n\");\n+            rv = (*ckpFunctions->C_DecryptInit)(ckSessionHandle, ckpMechanism,\n+                ckKeyHandle);\n@@ -346,1 +425,1 @@\n-    TRACE1(\"DEBUG C_DecryptInit: freed pMech = %p\\n\", ckpMechanism);\n+    TRACE1(\"DEBUG C_GCMDecryptInitWithRetry: freed pMech = %p\\n\", ckpMechanism);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_crypt.c","additions":104,"deletions":25,"binary":false,"changes":129,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -330,5 +330,1 @@\n-                     if (mechPtr->ulParameterLen == sizeof(CK_GCM_PARAMS_NO_IVBITS)) {\n-                         TRACE0(\"[ GCM_PARAMS w\/o ulIvBits ]\\n\");\n-                         free(((CK_GCM_PARAMS_NO_IVBITS*)tmp)->pIv);\n-                         free(((CK_GCM_PARAMS_NO_IVBITS*)tmp)->pAAD);\n-                     } else if (mechPtr->ulParameterLen == sizeof(CK_GCM_PARAMS)) {\n+                     if (mechPtr->ulParameterLen == sizeof(CK_GCM_PARAMS)) {\n@@ -338,0 +334,4 @@\n+                     } else if (mechPtr->ulParameterLen == sizeof(CK_GCM_PARAMS_NO_IVBITS)) {\n+                         TRACE0(\"[ GCM_PARAMS w\/o ulIvBits ]\\n\");\n+                         free(((CK_GCM_PARAMS_NO_IVBITS*)tmp)->pIv);\n+                         free(((CK_GCM_PARAMS_NO_IVBITS*)tmp)->pAAD);\n@@ -454,3 +454,3 @@\n-\/* This function replaces the CK_GCM_PARAMS_NO_IVBITS structure associated\n- * with the specified CK_MECHANISM structure with CK_GCM_PARAMS\n- * structure.\n+\/* This function updates the specified CK_MECHANISM structure\n+ * and its GCM parameter structure switching between CK_GCM_PARAMS and\n+ * CK_GCM_PARAMS_NO_IVBITS.\n@@ -459,1 +459,1 @@\n- * the to-be-converted CK_GCM_PARAMS_NO_IVBITS structure.\n+ * the to-be-converted CK_GCM_PARAMS \/ CK_GCM_PARAMS_NO_IVBITS structure.\n@@ -461,1 +461,1 @@\n- * converted CK_GCM_PARAMS structure or NULL if no conversion took place.\n+ * converted structure or NULL if no conversion is done.\n@@ -464,9 +464,35 @@\n-    CK_GCM_PARAMS* pGcmParams2 = NULL;\n-    CK_GCM_PARAMS_NO_IVBITS* pParams = NULL;\n-    if ((mechPtr->mechanism == CKM_AES_GCM) &&\n-            (mechPtr->pParameter != NULL_PTR) &&\n-            (mechPtr->ulParameterLen == sizeof(CK_GCM_PARAMS_NO_IVBITS))) {\n-        pGcmParams2 = calloc(1, sizeof(CK_GCM_PARAMS));\n-        if (pGcmParams2 == NULL) {\n-            p11ThrowOutOfMemoryError(env, 0);\n-            return NULL;\n+    CK_GCM_PARAMS_PTR pParams;\n+    CK_GCM_PARAMS_NO_IVBITS_PTR pParamsNoIvBits;\n+    CK_ULONG paramLen;\n+\n+    if (mechPtr != NULL) {\n+        paramLen = mechPtr->ulParameterLen;\n+        if (paramLen == sizeof(CK_GCM_PARAMS)) {\n+            \/\/ CK_GCM_PARAMS => CK_GCM_PARAMS_NO_IVBITS\n+            pParams = (CK_GCM_PARAMS*) mechPtr->pParameter;\n+            pParamsNoIvBits = calloc(1, sizeof(CK_GCM_PARAMS_NO_IVBITS));\n+            pParamsNoIvBits->pIv = pParams->pIv;\n+            pParamsNoIvBits->ulIvLen = pParams->ulIvLen;\n+            pParamsNoIvBits->pAAD = pParams->pAAD;\n+            pParamsNoIvBits->ulAADLen = pParams->ulAADLen;\n+            pParamsNoIvBits->ulTagBits = pParams->ulTagBits;\n+            mechPtr->pParameter = pParamsNoIvBits;\n+            mechPtr->ulParameterLen = sizeof(CK_GCM_PARAMS_NO_IVBITS);\n+            free(pParams);\n+            TRACE0(\"DEBUG update CK_GCM_PARAMS to CK_GCM_PARAMS_NO_IVBITS\\n\");\n+            return mechPtr;\n+        } else if (paramLen == sizeof(CK_GCM_PARAMS_NO_IVBITS)) {\n+            \/\/ CK_GCM_PARAMS_NO_IVBITS => CK_GCM_PARAMS\n+            pParamsNoIvBits = (CK_GCM_PARAMS_NO_IVBITS*) mechPtr->pParameter;\n+            pParams = calloc(1, sizeof(CK_GCM_PARAMS));\n+            pParams->pIv = pParamsNoIvBits->pIv;\n+            pParams->ulIvLen = pParamsNoIvBits->ulIvLen;\n+            pParams->ulIvBits = pParamsNoIvBits->ulIvLen << 3;\n+            pParams->pAAD = pParamsNoIvBits->pAAD;\n+            pParams->ulAADLen = pParamsNoIvBits->ulAADLen;\n+            pParams->ulTagBits = pParamsNoIvBits->ulTagBits;\n+            mechPtr->pParameter = pParams;\n+            mechPtr->ulParameterLen = sizeof(CK_GCM_PARAMS);\n+            free(pParamsNoIvBits);\n+            TRACE0(\"DEBUG update CK_GCM_PARAMS_NO_IVBITS to CK_GCM_PARAMS\\n\");\n+            return mechPtr;\n@@ -474,16 +500,0 @@\n-        pParams = (CK_GCM_PARAMS_NO_IVBITS*) mechPtr->pParameter;\n-        pGcmParams2->pIv = pParams->pIv;\n-        pGcmParams2->ulIvLen = pParams->ulIvLen;\n-        pGcmParams2->ulIvBits = (pGcmParams2->ulIvLen << 3);\n-        pGcmParams2->pAAD = pParams->pAAD;\n-        pGcmParams2->ulAADLen = pParams->ulAADLen;\n-        pGcmParams2->ulTagBits = pParams->ulTagBits;\n-        TRACE1(\"DEBUG updateGCMParams: pMech %p\\n\", mechPtr);\n-        TRACE2(\"\\t=> GCM param w\/o ulIvBits %p => GCM param %p\\n\", pParams,\n-                pGcmParams2);\n-        free(pParams);\n-        mechPtr->pParameter = pGcmParams2;\n-        mechPtr->ulParameterLen = sizeof(CK_GCM_PARAMS);\n-        return mechPtr;\n-    } else {\n-        TRACE0(\"DEBUG updateGCMParams: no conversion done\\n\");\n@@ -491,0 +501,1 @@\n+    TRACE0(\"DEBUG updateGCMParams: no conversion done\\n\");\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_util.c","additions":47,"deletions":36,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+  private static Address mapped_base_address;\n@@ -101,1 +102,1 @@\n-    Address mapped_base_address = get_AddressField(FileMapHeader_type, header, \"_mapped_base_address\");\n+    mapped_base_address = get_AddressField(FileMapHeader_type, header, \"_mapped_base_address\");\n@@ -173,8 +174,20 @@\n-      \/\/ vtablesIndex points to this:\n-      \/\/     class CppVtableInfo {\n-      \/\/         intptr_t _vtable_size;\n-      \/\/         intptr_t _cloned_vtable[1];\n-      \/\/         ...\n-      \/\/     };\n-      \/\/     CppVtableInfo** CppVtables::_index;\n-      \/\/ This is the index of all the cloned vtables. E.g., for\n+      \/\/ vtablesIndex points to to an array like this:\n+      \/\/ long info[] = {\n+      \/\/   offset of the CppVtableInfo for ConstantPool,\n+      \/\/   offset of the CppVtableInfo for InstanceKlass,\n+      \/\/   offset of the CppVtableInfo for InstanceClassLoaderKlass,\n+      \/\/   ...\n+      \/\/ };\n+      \/\/\n+      \/\/ class CppVtableInfo {\n+      \/\/   intptr_t _vtable_size;\n+      \/\/   intptr_t _cloned_vtable[1];\n+      \/\/   ...\n+      \/\/ };\n+      \/\/\n+      \/\/ The loop below computes the following\n+      \/\/     CppVtableInfo* t_ConstantPool  = mapped_base_address + info[0];\n+      \/\/     CppVtableInfo* t_InstanceKlass = mapped_base_address + info[1];\n+      \/\/     ...\n+      \/\/\n+      \/\/ If we have the following objects\n@@ -183,3 +196,19 @@\n-      \/\/ the following holds true:\n-      \/\/     &_index[ConstantPool_Kind]->_cloned_vtable[0]  == ((intptr_t**)cp)[0]\n-      \/\/     &_index[InstanceKlass_Kind]->_cloned_vtable[0] == ((intptr_t**)ik)[0]\n+      \/\/\n+      \/\/ then the following holds true:\n+      \/\/     ((intptr_t**)cp)[0] == &t_ConstantPool->_cloned_vtable[0]  \/\/ The vtable for archived ConstantPools\n+      \/\/     ((intptr_t**)ik)[0] == &t_InstanceKlass->_cloned_vtable[0] \/\/ The vtable for archived InstanceKlasses\n+      \/\/\n+      \/\/ To get an idea what these address look like, do this:\n+      \/\/\n+      \/\/ $ java -Xlog:cds+vtables=debug -XX:+UnlockDiagnosticVMOptions -XX:ArchiveRelocationMode=0 --version\n+      \/\/ [0.002s][debug][cds,vtables] Copying  14 vtable entries for ConstantPool to 0x800000018\n+      \/\/ [0.002s][debug][cds,vtables] Copying  41 vtable entries for InstanceKlass to 0x800000090\n+      \/\/ [0.002s][debug][cds,vtables] Copying  41 vtable entries for InstanceClassLoaderKlass to 0x8000001e0\n+      \/\/ [0.002s][debug][cds,vtables] Copying  41 vtable entries for InstanceMirrorKlass to 0x800000330\n+      \/\/ [0.002s][debug][cds,vtables] Copying  41 vtable entries for InstanceRefKlass to 0x800000480\n+      \/\/ [0.002s][debug][cds,vtables] Copying  41 vtable entries for InstanceStackChunkKlass to 0x8000005d0\n+      \/\/ [0.002s][debug][cds,vtables] Copying  14 vtable entries for Method to 0x800000720\n+      \/\/ [0.002s][debug][cds,vtables] Copying  42 vtable entries for ObjArrayKlass to 0x800000798\n+      \/\/ [0.002s][debug][cds,vtables] Copying  42 vtable entries for TypeArrayKlass to 0x8000008f0\n+      \/\/ java 23-internal 2024-09-17\n+      \/\/ ...\n@@ -188,2 +217,8 @@\n-        Address vtableInfoAddress = vtablesIndex.getAddressAt(i * addressSize); \/\/ = _index[i]\n-        Address vtableAddress = vtableInfoAddress.addOffsetTo(addressSize); \/\/ = &_index[i]->_cloned_vtable[0]\n+        long vtable_offset = vtablesIndex.getJLongAt(i * addressSize); \/\/ long offset = _index[i]\n+\n+        \/\/ CppVtableInfo* t = the address of the CppVtableInfo for the i-th table\n+        Address vtableInfoAddress = mapped_base_address.addOffsetTo(vtable_offset);\n+\n+        \/\/ vtableAddress = &t->_cloned_vtable[0]\n+        Address vtableAddress = vtableInfoAddress.addOffsetTo(addressSize);\n+\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/memory\/FileMapInfo.java","additions":49,"deletions":14,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-        if (sp == -1 || !auth.substring(0, sp).equals (\"Basic\")) {\n+        if (sp == -1 || !auth.substring(0, sp).equalsIgnoreCase(\"Basic\")) {\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/BasicAuthenticator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -140,1 +140,0 @@\n-        flush();\n@@ -142,0 +141,7 @@\n+            \/*\n+            * write any pending chunk data. manually write chunk rather than\n+            * calling flush to avoid sending small packets\n+            *\/\n+            if (count > 0) {\n+                writeChunk();\n+            }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ChunkedOutputStream.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -210,1 +210,1 @@\n-        OutputStream tmpout = new BufferedOutputStream (ros);\n+        ByteArrayOutputStream tmpout = new ByteArrayOutputStream();\n@@ -281,2 +281,1 @@\n-        tmpout.flush() ;\n-        tmpout = null;\n+        tmpout.writeTo(ros);\n@@ -286,0 +285,1 @@\n+            ros.flush();\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ExchangeImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import java.io.BufferedOutputStream;\n@@ -689,0 +690,1 @@\n+                    rawout = new BufferedOutputStream(rawout);\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ServerImpl.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,3 @@\n+    private static final String FAVICON_RESOURCE_PATH =\n+            \"\/sun\/net\/httpserver\/simpleserver\/resources\/favicon.ico\";\n+    private static final String FAVICON_LAST_MODIFIED = \"Mon, 23 May 1995 11:11:11 GMT\";\n@@ -253,0 +256,25 @@\n+    private static boolean isFavIconRequest(HttpExchange exchange) {\n+        return \"\/favicon.ico\".equals(exchange.getRequestURI().getPath());\n+    }\n+\n+    private void serveDefaultFavIcon(HttpExchange exchange, boolean writeBody)\n+            throws IOException\n+    {\n+        var respHdrs = exchange.getResponseHeaders();\n+        try (var stream = getClass().getModule().getResourceAsStream(FAVICON_RESOURCE_PATH)) {\n+            var bytes = stream.readAllBytes();\n+            respHdrs.set(\"Content-Type\", \"image\/x-icon\");\n+            respHdrs.set(\"Last-Modified\", FAVICON_LAST_MODIFIED);\n+            if (writeBody) {\n+                exchange.sendResponseHeaders(200, bytes.length);\n+                try (OutputStream os = exchange.getResponseBody()) {\n+                    os.write(bytes);\n+                }\n+            } else {\n+                respHdrs.set(\"Content-Length\", Integer.toString(bytes.length));\n+                exchange.sendResponseHeaders(200, -1);\n+            }\n+        }\n+    }\n+\n+\n@@ -374,0 +402,1 @@\n+            boolean isHeadRequest = exchange.getRequestMethod().equals(\"HEAD\");\n@@ -379,1 +408,1 @@\n-                } else if (exchange.getRequestMethod().equals(\"HEAD\")) {\n+                } else if (isHeadRequest) {\n@@ -385,0 +414,8 @@\n+                if (isFavIconRequest(exchange)) {\n+                    try {\n+                        serveDefaultFavIcon(exchange, !isHeadRequest);\n+                        return;\n+                    } catch (IOException ignore) {\n+                        \/\/ fall through to send the not-found response\n+                    }\n+                }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/FileServerHandler.java","additions":39,"deletions":2,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.net.Inet6Address;\n@@ -172,0 +173,7 @@\n+            if (inetAddr instanceof Inet6Address && addr.contains(\":\") && !addr.startsWith(\"[\")) {\n+                \/\/ we use the \"addr\" when printing the URL, so make sure it\n+                \/\/ conforms to RFC-2732, section 2:\n+                \/\/ To use a literal IPv6 address in a URL, the literal\n+                \/\/ address should be enclosed in \"[\" and \"]\" characters.\n+                addr = \"[\" + addr + \"]\";\n+            }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/SimpleFileServerImpl.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/resources\/favicon.ico","binary":true,"status":"added"},{"patch":"@@ -1,50 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna;\n-\n-import java.io.IOException;\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n-\n-class JDKNativePty {\n-\n-    static JnaNativePty current(TerminalProvider.Stream console) throws IOException {\n-        throw new UnsupportedOperationException(\"Not supported.\");\n-    }\n-\n-    static JnaNativePty open(Attributes attr, Size size) throws IOException {\n-        throw new UnsupportedOperationException(\"Not supported.\");\n-    }\n-\n-    static int isatty(int fd) {\n-        throw new UnsupportedOperationException(\"Not supported.\");\n-    }\n-\n-    static String ttyname(int fd) {\n-        throw new UnsupportedOperationException(\"Not supported.\");\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/aix\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/JDKNativePty.java","additions":0,"deletions":50,"binary":false,"changes":50,"status":"deleted"},{"patch":"@@ -1,51 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna;\n-\n-import java.io.IOException;\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.impl.jna.linux.LinuxNativePty;\n-import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n-\n-class JDKNativePty {\n-\n-    static JnaNativePty current(TerminalProvider.Stream console) throws IOException {\n-        return LinuxNativePty.current(console);\n-    }\n-\n-    static JnaNativePty open(Attributes attr, Size size) throws IOException {\n-        return LinuxNativePty.open(attr, size);\n-    }\n-\n-    static int isatty(int fd) {\n-        return LinuxNativePty.isatty(fd);\n-    }\n-\n-    static String ttyname(int fd) {\n-        return LinuxNativePty.ttyname(fd);\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/linux\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/JDKNativePty.java","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -1,389 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2020, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.linux;\n-\n-import java.util.Arrays;\n-import java.util.EnumMap;\n-import java.util.EnumSet;\n-import java.util.List;\n-\n-\/\/import com.sun.jna.LastErrorException;\n-\/\/import com.sun.jna.Platform;\n-\/\/import com.sun.jna.Structure;\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Attributes.ControlChar;\n-import jdk.internal.org.jline.terminal.Attributes.ControlFlag;\n-import jdk.internal.org.jline.terminal.Attributes.InputFlag;\n-import jdk.internal.org.jline.terminal.Attributes.LocalFlag;\n-import jdk.internal.org.jline.terminal.Attributes.OutputFlag;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.impl.jna.LastErrorException;\n-\n-public interface CLibrary {\/\/extends com.sun.jna.Library {\n-\n-    void tcgetattr(int fd, termios termios) throws LastErrorException;\n-\n-    void tcsetattr(int fd, int cmd, termios termios) throws LastErrorException;\n-\n-    void ioctl(int fd, int cmd, winsize data) throws LastErrorException;\n-\n-    int isatty(int fd);\n-\n-    void ttyname_r(int fd, byte[] buf, int len) throws LastErrorException;\n-\n-    class winsize { \/\/extends Structure {\n-        public short ws_row;\n-        public short ws_col;\n-        public short ws_xpixel;\n-        public short ws_ypixel;\n-\n-        public winsize() {\n-        }\n-\n-        public winsize(Size ws) {\n-            ws_row = (short) ws.getRows();\n-            ws_col = (short) ws.getColumns();\n-        }\n-\n-        public Size toSize() {\n-            return new Size(ws_col, ws_row);\n-        }\n-\n-\/\/        @Override\n-\/\/        protected List<String> getFieldOrder() {\n-\/\/            return Arrays.asList(\/\/\n-\/\/                    \"ws_row\",\/\/\n-\/\/                    \"ws_col\",\/\/\n-\/\/                    \"ws_xpixel\",\/\/\n-\/\/                    \"ws_ypixel\"\/\/\n-\/\/            );\n-\/\/        }\n-\n-    }\n-\n-    class termios {\/\/ extends Structure {\n-\n-        public int c_iflag;\n-        public int c_oflag;\n-        public int c_cflag;\n-        public int c_lflag;\n-        public byte c_line;\n-        public byte[] c_cc = new byte[32];\n-        public int c_ispeed;\n-        public int c_ospeed;\n-\n-\/\/        @Override\n-\/\/        protected List<String> getFieldOrder() {\n-\/\/            return Arrays.asList(\/\/\n-\/\/                    \"c_iflag\",\/\/\n-\/\/                    \"c_oflag\",\/\/\n-\/\/                    \"c_cflag\",\/\/\n-\/\/                    \"c_lflag\",\/\/\n-\/\/                    \"c_line\",\/\/\n-\/\/                    \"c_cc\",\/\/\n-\/\/                    \"c_ispeed\",\/\/\n-\/\/                    \"c_ospeed\"\/\/\n-\/\/            );\n-\/\/        }\n-\n-        public termios() {\n-        }\n-\n-        public termios(Attributes t) {\n-            \/\/ Input flags\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.IGNBRK),           IGNBRK,     c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.BRKINT),           BRKINT,     c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.IGNPAR),           IGNPAR,     c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.PARMRK),           PARMRK,     c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.INPCK),            INPCK,      c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.ISTRIP),           ISTRIP,     c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.INLCR),            INLCR,      c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.IGNCR),            IGNCR,      c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.ICRNL),            ICRNL,      c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.IXON),             IXON,       c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.IXOFF),            IXOFF,      c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.IXANY),            IXANY,      c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.IMAXBEL),          IMAXBEL,    c_iflag);\n-            c_iflag = setFlag(t.getInputFlag(InputFlag.IUTF8),            IUTF8,      c_iflag);\n-            \/\/ Output flags\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.OPOST),          OPOST,      c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.ONLCR),          ONLCR,      c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.OCRNL),          OCRNL,      c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.ONOCR),          ONOCR,      c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.ONLRET),         ONLRET,     c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.OFILL),          OFILL,      c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.NLDLY),          NLDLY,      c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.TABDLY),         TABDLY,     c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.CRDLY),          CRDLY,      c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.FFDLY),          FFDLY,      c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.BSDLY),          BSDLY,      c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.VTDLY),          VTDLY,      c_oflag);\n-            c_oflag = setFlag(t.getOutputFlag(OutputFlag.OFDEL),          OFDEL,      c_oflag);\n-            \/\/ Control flags\n-            c_cflag = setFlag(t.getControlFlag(ControlFlag.CS5),          CS5,        c_cflag);\n-            c_cflag = setFlag(t.getControlFlag(ControlFlag.CS6),          CS6,        c_cflag);\n-            c_cflag = setFlag(t.getControlFlag(ControlFlag.CS7),          CS7,        c_cflag);\n-            c_cflag = setFlag(t.getControlFlag(ControlFlag.CS8),          CS8,        c_cflag);\n-            c_cflag = setFlag(t.getControlFlag(ControlFlag.CSTOPB),       CSTOPB,     c_cflag);\n-            c_cflag = setFlag(t.getControlFlag(ControlFlag.CREAD),        CREAD,      c_cflag);\n-            c_cflag = setFlag(t.getControlFlag(ControlFlag.PARENB),       PARENB,     c_cflag);\n-            c_cflag = setFlag(t.getControlFlag(ControlFlag.PARODD),       PARODD,     c_cflag);\n-            c_cflag = setFlag(t.getControlFlag(ControlFlag.HUPCL),        HUPCL,      c_cflag);\n-            c_cflag = setFlag(t.getControlFlag(ControlFlag.CLOCAL),       CLOCAL,     c_cflag);\n-            \/\/ Local flags\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.ECHOKE),           ECHOKE,     c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.ECHOE),            ECHOE,      c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.ECHOK),            ECHOK,      c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.ECHO),             ECHO,       c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.ECHONL),           ECHONL,     c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.ECHOPRT),          ECHOPRT,    c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.ECHOCTL),          ECHOCTL,    c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.ISIG),             ISIG,       c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.ICANON),           ICANON,     c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.EXTPROC),          EXTPROC,    c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.TOSTOP),           TOSTOP,     c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.FLUSHO),           FLUSHO,     c_lflag);\n-            c_lflag = setFlag(t.getLocalFlag(LocalFlag.NOFLSH),           NOFLSH,     c_lflag);\n-            \/\/ Control chars\n-            c_cc[VEOF]      = (byte) t.getControlChar(ControlChar.VEOF);\n-            c_cc[VEOL]      = (byte) t.getControlChar(ControlChar.VEOL);\n-            c_cc[VEOL2]     = (byte) t.getControlChar(ControlChar.VEOL2);\n-            c_cc[VERASE]    = (byte) t.getControlChar(ControlChar.VERASE);\n-            c_cc[VWERASE]   = (byte) t.getControlChar(ControlChar.VWERASE);\n-            c_cc[VKILL]     = (byte) t.getControlChar(ControlChar.VKILL);\n-            c_cc[VREPRINT]  = (byte) t.getControlChar(ControlChar.VREPRINT);\n-            c_cc[VINTR]     = (byte) t.getControlChar(ControlChar.VINTR);\n-            c_cc[VQUIT]     = (byte) t.getControlChar(ControlChar.VQUIT);\n-            c_cc[VSUSP]     = (byte) t.getControlChar(ControlChar.VSUSP);\n-            c_cc[VSTART]    = (byte) t.getControlChar(ControlChar.VSTART);\n-            c_cc[VSTOP]     = (byte) t.getControlChar(ControlChar.VSTOP);\n-            c_cc[VLNEXT]    = (byte) t.getControlChar(ControlChar.VLNEXT);\n-            c_cc[VDISCARD]  = (byte) t.getControlChar(ControlChar.VDISCARD);\n-            c_cc[VMIN]      = (byte) t.getControlChar(ControlChar.VMIN);\n-            c_cc[VTIME]     = (byte) t.getControlChar(ControlChar.VTIME);\n-        }\n-\n-        private int setFlag(boolean flag, int value, int org) {\n-            return flag ? (org | value) : org;\n-        }\n-\n-        public Attributes toAttributes() {\n-            Attributes attr = new Attributes();\n-            \/\/ Input flags\n-            EnumSet<InputFlag> iflag = attr.getInputFlags();\n-            addFlag(c_iflag, iflag, InputFlag.IGNBRK,   IGNBRK);\n-            addFlag(c_iflag, iflag, InputFlag.IGNBRK, IGNBRK);\n-            addFlag(c_iflag, iflag, InputFlag.BRKINT, BRKINT);\n-            addFlag(c_iflag, iflag, InputFlag.IGNPAR, IGNPAR);\n-            addFlag(c_iflag, iflag, InputFlag.PARMRK, PARMRK);\n-            addFlag(c_iflag, iflag, InputFlag.INPCK, INPCK);\n-            addFlag(c_iflag, iflag, InputFlag.ISTRIP, ISTRIP);\n-            addFlag(c_iflag, iflag, InputFlag.INLCR, INLCR);\n-            addFlag(c_iflag, iflag, InputFlag.IGNCR, IGNCR);\n-            addFlag(c_iflag, iflag, InputFlag.ICRNL, ICRNL);\n-            addFlag(c_iflag, iflag, InputFlag.IXON, IXON);\n-            addFlag(c_iflag, iflag, InputFlag.IXOFF, IXOFF);\n-            addFlag(c_iflag, iflag, InputFlag.IXANY, IXANY);\n-            addFlag(c_iflag, iflag, InputFlag.IMAXBEL, IMAXBEL);\n-            addFlag(c_iflag, iflag, InputFlag.IUTF8, IUTF8);\n-            \/\/ Output flags\n-            EnumSet<OutputFlag> oflag = attr.getOutputFlags();\n-            addFlag(c_oflag, oflag, OutputFlag.OPOST, OPOST);\n-            addFlag(c_oflag, oflag, OutputFlag.ONLCR, ONLCR);\n-            addFlag(c_oflag, oflag, OutputFlag.OCRNL, OCRNL);\n-            addFlag(c_oflag, oflag, OutputFlag.ONOCR, ONOCR);\n-            addFlag(c_oflag, oflag, OutputFlag.ONLRET, ONLRET);\n-            addFlag(c_oflag, oflag, OutputFlag.OFILL, OFILL);\n-            addFlag(c_oflag, oflag, OutputFlag.NLDLY, NLDLY);\n-            addFlag(c_oflag, oflag, OutputFlag.TABDLY, TABDLY);\n-            addFlag(c_oflag, oflag, OutputFlag.CRDLY, CRDLY);\n-            addFlag(c_oflag, oflag, OutputFlag.FFDLY, FFDLY);\n-            addFlag(c_oflag, oflag, OutputFlag.BSDLY, BSDLY);\n-            addFlag(c_oflag, oflag, OutputFlag.VTDLY, VTDLY);\n-            addFlag(c_oflag, oflag, OutputFlag.OFDEL, OFDEL);\n-            \/\/ Control flags\n-            EnumSet<ControlFlag> cflag = attr.getControlFlags();\n-            addFlag(c_cflag, cflag, ControlFlag.CS5, CS5);\n-            addFlag(c_cflag, cflag, ControlFlag.CS6, CS6);\n-            addFlag(c_cflag, cflag, ControlFlag.CS7, CS7);\n-            addFlag(c_cflag, cflag, ControlFlag.CS8, CS8);\n-            addFlag(c_cflag, cflag, ControlFlag.CSTOPB, CSTOPB);\n-            addFlag(c_cflag, cflag, ControlFlag.CREAD, CREAD);\n-            addFlag(c_cflag, cflag, ControlFlag.PARENB, PARENB);\n-            addFlag(c_cflag, cflag, ControlFlag.PARODD, PARODD);\n-            addFlag(c_cflag, cflag, ControlFlag.HUPCL, HUPCL);\n-            addFlag(c_cflag, cflag, ControlFlag.CLOCAL, CLOCAL);\n-            \/\/ Local flags\n-            EnumSet<LocalFlag> lflag = attr.getLocalFlags();\n-            addFlag(c_lflag, lflag, LocalFlag.ECHOKE, ECHOKE);\n-            addFlag(c_lflag, lflag, LocalFlag.ECHOE, ECHOE);\n-            addFlag(c_lflag, lflag, LocalFlag.ECHOK, ECHOK);\n-            addFlag(c_lflag, lflag, LocalFlag.ECHO, ECHO);\n-            addFlag(c_lflag, lflag, LocalFlag.ECHONL, ECHONL);\n-            addFlag(c_lflag, lflag, LocalFlag.ECHOPRT, ECHOPRT);\n-            addFlag(c_lflag, lflag, LocalFlag.ECHOCTL, ECHOCTL);\n-            addFlag(c_lflag, lflag, LocalFlag.ISIG, ISIG);\n-            addFlag(c_lflag, lflag, LocalFlag.ICANON, ICANON);\n-            addFlag(c_lflag, lflag, LocalFlag.EXTPROC, EXTPROC);\n-            addFlag(c_lflag, lflag, LocalFlag.TOSTOP, TOSTOP);\n-            addFlag(c_lflag, lflag, LocalFlag.FLUSHO, FLUSHO);\n-            addFlag(c_lflag, lflag, LocalFlag.NOFLSH, NOFLSH);\n-            \/\/ Control chars\n-            EnumMap<ControlChar, Integer> cc = attr.getControlChars();\n-            cc.put(ControlChar.VEOF,        (int) c_cc[VEOF]);\n-            cc.put(ControlChar.VEOL,        (int) c_cc[VEOL]);\n-            cc.put(ControlChar.VEOL2,       (int) c_cc[VEOL2]);\n-            cc.put(ControlChar.VERASE,      (int) c_cc[VERASE]);\n-            cc.put(ControlChar.VWERASE,     (int) c_cc[VWERASE]);\n-            cc.put(ControlChar.VKILL,       (int) c_cc[VKILL]);\n-            cc.put(ControlChar.VREPRINT,    (int) c_cc[VREPRINT]);\n-            cc.put(ControlChar.VINTR,       (int) c_cc[VINTR]);\n-            cc.put(ControlChar.VQUIT,       (int) c_cc[VQUIT]);\n-            cc.put(ControlChar.VSUSP,       (int) c_cc[VSUSP]);\n-            cc.put(ControlChar.VSTART,      (int) c_cc[VSTART]);\n-            cc.put(ControlChar.VSTOP,       (int) c_cc[VSTOP]);\n-            cc.put(ControlChar.VLNEXT,      (int) c_cc[VLNEXT]);\n-            cc.put(ControlChar.VDISCARD,    (int) c_cc[VDISCARD]);\n-            cc.put(ControlChar.VMIN,        (int) c_cc[VMIN]);\n-            cc.put(ControlChar.VTIME,       (int) c_cc[VTIME]);\n-            \/\/ Return\n-            return attr;\n-        }\n-\n-        private <T extends Enum<T>> void addFlag(int value, EnumSet<T> flags, T flag, int v) {\n-            if ((value & v) != 0) {\n-                flags.add(flag);\n-            }\n-        }\n-    }\n-\n-    \/\/ CONSTANTS\n-\n-    int TIOCGWINSZ = \/*Platform.isMIPS() || Platform.isPPC() || Platform.isSPARC() ? 0x40087468 : *\/0x00005413;\n-    int TIOCSWINSZ = \/*Platform.isMIPS() || Platform.isPPC() || Platform.isSPARC() ? 0x80087467 : *\/0x00005414;\n-\n-    int VINTR       = 0;\n-    int VQUIT       = 1;\n-    int VERASE      = 2;\n-    int VKILL       = 3;\n-    int VEOF        = 4;\n-    int VTIME       = 5;\n-    int VMIN        = 6;\n-    int VSWTC       = 7;\n-    int VSTART      = 8;\n-    int VSTOP       = 9;\n-    int VSUSP       = 10;\n-    int VEOL        = 11;\n-    int VREPRINT    = 12;\n-    int VDISCARD    = 13;\n-    int VWERASE     = 14;\n-    int VLNEXT      = 15;\n-    int VEOL2       = 16;\n-\n-    int IGNBRK =   0x0000001;\n-    int BRKINT =   0x0000002;\n-    int IGNPAR =   0x0000004;\n-    int PARMRK =   0x0000008;\n-    int INPCK =    0x0000010;\n-    int ISTRIP =   0x0000020;\n-    int INLCR =    0x0000040;\n-    int IGNCR =    0x0000080;\n-    int ICRNL =    0x0000100;\n-    int IUCLC =    0x0000200;\n-    int IXON =     0x0000400;\n-    int IXANY =    0x0000800;\n-    int IXOFF =    0x0001000;\n-    int IMAXBEL =  0x0002000;\n-    int IUTF8 =    0x0004000;\n-\n-    int OPOST =    0x0000001;\n-    int OLCUC =    0x0000002;\n-    int ONLCR =    0x0000004;\n-    int OCRNL =    0x0000008;\n-    int ONOCR =    0x0000010;\n-    int ONLRET =   0x0000020;\n-    int OFILL =    0x0000040;\n-    int OFDEL =    0x0000080;\n-    int NLDLY =    0x0000100;\n-      int NL0 =    0x0000000;\n-      int NL1 =    0x0000100;\n-    int CRDLY =    0x0000600;\n-      int CR0 =    0x0000000;\n-      int CR1 =    0x0000200;\n-      int CR2 =    0x0000400;\n-      int CR3 =    0x0000600;\n-    int TABDLY =   0x0001800;\n-      int TAB0 =   0x0000000;\n-      int TAB1 =   0x0000800;\n-      int TAB2 =   0x0001000;\n-      int TAB3 =   0x0001800;\n-      int XTABS =  0x0001800;\n-    int BSDLY =    0x0002000;\n-      int BS0 =    0x0000000;\n-      int BS1 =    0x0002000;\n-    int VTDLY =    0x0004000;\n-      int VT0 =    0x0000000;\n-      int VT1 =    0x0004000;\n-    int FFDLY =    0x0008000;\n-      int FF0 =    0x0000000;\n-      int FF1 =    0x0008000;\n-\n-    int CBAUD =    0x000100f;\n-     int B0 =      0x0000000;\n-     int B50 =     0x0000001;\n-     int B75 =     0x0000002;\n-     int B110 =    0x0000003;\n-     int B134 =    0x0000004;\n-     int B150 =    0x0000005;\n-     int B200 =    0x0000006;\n-     int B300 =    0x0000007;\n-     int B600 =    0x0000008;\n-     int B1200 =   0x0000009;\n-     int B1800 =   0x000000a;\n-     int B2400 =   0x000000b;\n-     int B4800 =   0x000000c;\n-     int B9600 =   0x000000d;\n-     int B19200 =  0x000000e;\n-     int B38400 =  0x000000f;\n-    int EXTA =  B19200;\n-    int EXTB =  B38400;\n-    int CSIZE =    0x0000030;\n-      int CS5 =    0x0000000;\n-      int CS6 =    0x0000010;\n-      int CS7 =    0x0000020;\n-      int CS8 =    0x0000030;\n-    int CSTOPB =   0x0000040;\n-    int CREAD =    0x0000080;\n-    int PARENB =   0x0000100;\n-    int PARODD =   0x0000200;\n-    int HUPCL =    0x0000400;\n-    int CLOCAL =   0x0000800;\n-\n-    int ISIG =     0x0000001;\n-    int ICANON =   0x0000002;\n-    int XCASE =    0x0000004;\n-    int ECHO =     0x0000008;\n-    int ECHOE =    0x0000010;\n-    int ECHOK =    0x0000020;\n-    int ECHONL =   0x0000040;\n-    int NOFLSH =   0x0000080;\n-    int TOSTOP =   0x0000100;\n-    int ECHOCTL =  0x0000200;\n-    int ECHOPRT =  0x0000400;\n-    int ECHOKE =   0x0000800;\n-    int FLUSHO =   0x0001000;\n-    int PENDIN =   0x0002000;\n-    int IEXTEN =   0x0008000;\n-    int EXTPROC =  0x0010000;\n-\n-    int TCSANOW =          0x0;\n-    int TCSADRAIN =        0x1;\n-    int TCSAFLUSH =        0x2;\n-\n-}\n","filename":"src\/jdk.internal.le\/linux\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/linux\/CLibrary.java","additions":0,"deletions":389,"binary":false,"changes":389,"status":"deleted"},{"patch":"@@ -1,61 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.linux;\n-\n-import jdk.internal.org.jline.terminal.impl.jna.LastErrorException;\n-\n-public final class CLibraryImpl implements CLibrary {\n-\n-    static {\n-        System.loadLibrary(\"le\");\n-        initIDs();\n-    }\n-\n-    private static native void initIDs();\n-\n-    @Override\n-    public native void tcgetattr(int fd, termios termios) throws LastErrorException;\n-\n-    @Override\n-    public native void tcsetattr(int fd, int cmd, termios termios) throws LastErrorException;\n-\n-    @Override\n-    public void ioctl(int fd, int cmd, winsize data) throws LastErrorException {\n-        if (cmd == CLibrary.TIOCGWINSZ || cmd == CLibrary.TIOCSWINSZ) {\n-            ioctl0(fd, cmd, data);\n-        } else {\n-            throw new UnsupportedOperationException(\"Command: \" + cmd + \", not supported.\");\n-        }\n-    }\n-\n-    private native void ioctl0(int fd, int cmd, winsize data) throws LastErrorException;\n-\n-    @Override\n-    public native int isatty(int fd);\n-\n-    @Override\n-    public native void ttyname_r(int fd, byte[] buf, int len) throws LastErrorException;\n-\n-}\n","filename":"src\/jdk.internal.le\/linux\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/linux\/CLibraryImpl.java","additions":0,"deletions":61,"binary":false,"changes":61,"status":"deleted"},{"patch":"@@ -1,122 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2020, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.linux;\n-\n-import java.io.FileDescriptor;\n-import java.io.IOException;\n-\n-\/\/import com.sun.jna.LastErrorException;\n-\/\/import com.sun.jna.Native;\n-\/\/import com.sun.jna.Platform;\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.impl.jna.JnaNativePty;\n-import jdk.internal.org.jline.terminal.impl.jna.LastErrorException;\n-import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n-\n-import static jdk.internal.org.jline.terminal.impl.jna.linux.CLibrary.TCSADRAIN;\n-import static jdk.internal.org.jline.terminal.impl.jna.linux.CLibrary.TIOCGWINSZ;\n-import static jdk.internal.org.jline.terminal.impl.jna.linux.CLibrary.TIOCSWINSZ;\n-import static jdk.internal.org.jline.terminal.impl.jna.linux.CLibrary.termios;\n-import static jdk.internal.org.jline.terminal.impl.jna.linux.CLibrary.winsize;\n-\n-public class LinuxNativePty extends JnaNativePty {\n-\n-\/\/    private static final CLibrary C_LIBRARY = Native.load(Platform.C_LIBRARY_NAME, CLibrary.class);\n-    private static final CLibrary C_LIBRARY = new CLibraryImpl();\n-\n-    public interface UtilLibrary {\/\/ extends com.sun.jna.Library {\n-\n-        void openpty(int[] master, int[] slave, byte[] name, CLibrary.termios t, CLibrary.winsize s) throws LastErrorException;\n-\n-\/\/        UtilLibrary INSTANCE = Native.load(\"util\", UtilLibrary.class);\n-        UtilLibrary INSTANCE = new UtilLibraryImpl();\n-    }\n-\n-    public static LinuxNativePty current(TerminalProvider.Stream consoleStream) throws IOException {\n-        switch (consoleStream) {\n-            case Output:\n-                return new LinuxNativePty(-1, null, 0, FileDescriptor.in, 1, FileDescriptor.out, ttyname(0));\n-            case Error:\n-                return new LinuxNativePty(-1, null, 0, FileDescriptor.in, 2, FileDescriptor.err, ttyname(0));\n-            default:\n-                throw new IllegalArgumentException(\"Unsupport stream for console: \" + consoleStream);\n-        }\n-    }\n-\n-    public static LinuxNativePty open(Attributes attr, Size size) throws IOException {\n-        int[] master = new int[1];\n-        int[] slave = new int[1];\n-        byte[] buf = new byte[64];\n-        UtilLibrary.INSTANCE.openpty(master, slave, buf,\n-                attr != null ? new termios(attr) : null,\n-                size != null ? new winsize(size) : null);\n-        int len = 0;\n-        while (buf[len] != 0) {\n-            len++;\n-        }\n-        String name = new String(buf, 0, len);\n-        return new LinuxNativePty(master[0], newDescriptor(master[0]), slave[0], newDescriptor(slave[0]), name);\n-    }\n-\n-    public LinuxNativePty(int master, FileDescriptor masterFD, int slave, FileDescriptor slaveFD, String name) {\n-        super(master, masterFD, slave, slaveFD, name);\n-    }\n-\n-    public LinuxNativePty(int master, FileDescriptor masterFD, int slave, FileDescriptor slaveFD, int slaveOut, FileDescriptor slaveOutFD, String name) {\n-        super(master, masterFD, slave, slaveFD, slaveOut, slaveOutFD, name);\n-    }\n-\n-    @Override\n-    public Attributes getAttr() throws IOException {\n-        termios termios = new termios();\n-        C_LIBRARY.tcgetattr(getSlave(), termios);\n-        return termios.toAttributes();\n-    }\n-\n-    @Override\n-    protected void doSetAttr(Attributes attr) throws IOException {\n-        termios termios = new termios(attr);\n-        termios org = new termios();\n-        C_LIBRARY.tcgetattr(getSlave(), org);\n-        org.c_iflag = termios.c_iflag;\n-        org.c_oflag = termios.c_oflag;\n-        org.c_lflag = termios.c_lflag;\n-        System.arraycopy(termios.c_cc, 0, org.c_cc, 0, termios.c_cc.length);\n-        C_LIBRARY.tcsetattr(getSlave(), TCSADRAIN, org);\n-    }\n-\n-    @Override\n-    public Size getSize() throws IOException {\n-        winsize sz = new winsize();\n-        C_LIBRARY.ioctl(getSlave(), TIOCGWINSZ, sz);\n-        return sz.toSize();\n-    }\n-\n-    @Override\n-    public void setSize(Size size) throws IOException {\n-        winsize sz = new winsize(size);\n-        C_LIBRARY.ioctl(getSlave(), TIOCSWINSZ, sz);\n-    }\n-\n-    public static int isatty(int fd) {\n-        return C_LIBRARY.isatty(fd);\n-    }\n-\n-    public static String ttyname(int slave) {\n-        byte[] buf = new byte[64];\n-        C_LIBRARY.ttyname_r(slave, buf, buf.length);\n-        int len = 0;\n-        while (buf[len] != 0) {\n-            len++;\n-        }\n-        return new String(buf, 0, len);\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/linux\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/linux\/LinuxNativePty.java","additions":0,"deletions":122,"binary":false,"changes":122,"status":"deleted"},{"patch":"@@ -1,37 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.linux;\n-\n-import jdk.internal.org.jline.terminal.impl.jna.LastErrorException;\n-import jdk.internal.org.jline.terminal.impl.jna.linux.LinuxNativePty.UtilLibrary;\n-\n-public final class UtilLibraryImpl implements UtilLibrary {\n-\n-    @Override\n-    public void openpty(int[] master, int[] slave, byte[] name, CLibrary.termios t, CLibrary.winsize s) throws LastErrorException {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/linux\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/linux\/UtilLibraryImpl.java","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -1,207 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"jni.h\"\n-#include \"jni_util.h\"\n-#include \"jvm.h\"\n-#include \"jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl.h\"\n-\n-#include <errno.h>\n-#include <stdlib.h>\n-#include <termios.h>\n-#include <unistd.h>\n-#include <sys\/ioctl.h>\n-\n-static jclass lastErrorExceptionClass;\n-static jmethodID lastErrorExceptionConstructor;\n-\n-static jclass termios_j;\n-static jfieldID c_iflag;\n-static jfieldID c_oflag;\n-static jfieldID c_cflag;\n-static jfieldID c_lflag;\n-static jfieldID c_line;\n-static jfieldID c_cc;\n-static jfieldID c_ispeed;\n-static jfieldID c_ospeed;\n-\n-static jclass winsize_j;\n-static jfieldID ws_row;\n-static jfieldID ws_col;\n-static jfieldID ws_xpixel;\n-static jfieldID ws_ypixel;\n-\n-static void throw_errno(JNIEnv *env);\n-\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl_initIDs\n-  (JNIEnv *env, jclass unused) {\n-    jclass cls;\n-    cls = env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/LastErrorException\");\n-    CHECK_NULL(cls);\n-    lastErrorExceptionClass = (jclass) env->NewGlobalRef(cls);\n-    lastErrorExceptionConstructor = env->GetMethodID(lastErrorExceptionClass, \"<init>\", \"(J)V\");\n-    CHECK_NULL(lastErrorExceptionConstructor);\n-\n-    cls = env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/linux\/CLibrary$termios\");\n-    CHECK_NULL(cls);\n-    termios_j = (jclass) env->NewGlobalRef(cls);\n-    c_iflag = env->GetFieldID(termios_j, \"c_iflag\", \"I\");\n-    CHECK_NULL(c_iflag);\n-    c_oflag = env->GetFieldID(termios_j, \"c_oflag\", \"I\");\n-    CHECK_NULL(c_oflag);\n-    c_cflag = env->GetFieldID(termios_j, \"c_cflag\", \"I\");\n-    CHECK_NULL(c_cflag);\n-    c_lflag = env->GetFieldID(termios_j, \"c_lflag\", \"I\");\n-    CHECK_NULL(c_lflag);\n-    c_line = env->GetFieldID(termios_j, \"c_line\", \"B\");\n-    CHECK_NULL(c_line);\n-    c_cc = env->GetFieldID(termios_j, \"c_cc\", \"[B\");\n-    CHECK_NULL(c_cc);\n-    c_ispeed = env->GetFieldID(termios_j, \"c_ispeed\", \"I\");\n-    CHECK_NULL(c_ispeed);\n-    c_ospeed = env->GetFieldID(termios_j, \"c_ospeed\", \"I\");\n-    CHECK_NULL(c_ospeed);\n-\n-    cls = env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/linux\/CLibrary$winsize\");\n-    CHECK_NULL(cls);\n-    winsize_j = (jclass) env->NewGlobalRef(cls);\n-    ws_row = env->GetFieldID(winsize_j, \"ws_row\", \"S\");\n-    CHECK_NULL(ws_row);\n-    ws_col = env->GetFieldID(winsize_j, \"ws_col\", \"S\");\n-    CHECK_NULL(ws_col);\n-    ws_xpixel= env->GetFieldID(winsize_j, \"ws_xpixel\", \"S\");\n-    CHECK_NULL(ws_xpixel);\n-    ws_ypixel= env->GetFieldID(winsize_j, \"ws_ypixel\", \"S\");\n-    CHECK_NULL(ws_ypixel);\n-}\n-\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl_tcgetattr\n-  (JNIEnv *env, jobject, jint fd, jobject result) {\n-    termios data;\n-\n-    if (tcgetattr(fd, &data) != 0) {\n-        throw_errno(env);\n-        return ;\n-    }\n-\n-    env->SetIntField(result, c_iflag, data.c_iflag);\n-    env->SetIntField(result, c_oflag, data.c_oflag);\n-    env->SetIntField(result, c_cflag, data.c_cflag);\n-    env->SetIntField(result, c_lflag, data.c_lflag);\n-    env->SetIntField(result, c_line, data.c_line);\n-    jbyteArray c_ccValue = (jbyteArray) env->GetObjectField(result, c_cc);\n-    env->SetByteArrayRegion(c_ccValue, 0, NCCS, (signed char *) data.c_cc);\/\/TODO: cast?\n-    env->SetIntField(result, c_ispeed, cfgetispeed(&data));\n-    env->SetIntField(result, c_ospeed, cfgetospeed(&data));\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl\n- * Method:    tcsetattr\n- * Signature: (IILjdk\/internal\/org\/jline\/terminal\/impl\/jna\/linux\/CLibrary\/termios;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl_tcsetattr\n-  (JNIEnv *env, jobject, jint fd, jint cmd, jobject input) {\n-    termios data;\n-\n-    data.c_iflag = env->GetIntField(input, c_iflag);\n-    data.c_oflag = env->GetIntField(input, c_oflag);\n-    data.c_cflag = env->GetIntField(input, c_cflag);\n-    data.c_lflag = env->GetIntField(input, c_lflag);\n-    data.c_line = env->GetIntField(input, c_line);\n-    jbyteArray c_ccValue = (jbyteArray) env->GetObjectField(input, c_cc);\n-    env->GetByteArrayRegion(c_ccValue, 0, NCCS, (jbyte *) data.c_cc);\n-    cfsetispeed(&data, env->GetIntField(input, c_ispeed));\n-    cfsetospeed(&data, env->GetIntField(input, c_ospeed));\n-\n-    if (tcsetattr(fd, cmd, &data) != 0) {\n-        throw_errno(env);\n-    }\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl\n- * Method:    ioctl0\n- * Signature: (IILjdk\/internal\/org\/jline\/terminal\/impl\/jna\/linux\/CLibrary\/winsize;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl_ioctl0\n-  (JNIEnv *env, jobject, jint fd, jint cmd, jobject data) {\n-    winsize ws;\n-\n-    ws.ws_row = env->GetShortField(data, ws_row);\n-    ws.ws_col = env->GetShortField(data, ws_col);\n-    ws.ws_xpixel = env->GetShortField(data, ws_xpixel);\n-    ws.ws_ypixel = env->GetShortField(data, ws_ypixel);\n-\n-    if (ioctl(fd, cmd, &ws) != 0) {\n-        throw_errno(env);\n-        return ;\n-    }\n-\n-    env->SetShortField(data, ws_row, ws.ws_row);\n-    env->SetShortField(data, ws_col, ws.ws_col);\n-    env->SetShortField(data, ws_xpixel, ws.ws_xpixel);\n-    env->SetShortField(data, ws_ypixel, ws.ws_ypixel);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl\n- * Method:    isatty\n- * Signature: (I)I\n- *\/\n-JNIEXPORT jint JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl_isatty\n-  (JNIEnv *, jobject, jint fd) {\n-    return isatty(fd);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl\n- * Method:    ttyname_r\n- * Signature: (I[BI)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_linux_CLibraryImpl_ttyname_1r\n-  (JNIEnv *env, jobject, jint fd, jbyteArray buf, jint len) {\n-    char *data = new char[len];\n-    int error = ttyname_r(fd, data, len);\n-\n-    if (error != 0) {\n-        delete[] data;\n-        throw_errno(env);\n-        return ;\n-    }\n-\n-    env->SetByteArrayRegion(buf, 0, len, (jbyte *) data);\n-    delete[] data;\n-}\n-\n-\/*\n- * Throws LastErrorException based on the errno:\n- *\/\n-static void throw_errno(JNIEnv *env) {\n-    jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                 lastErrorExceptionConstructor,\n-                                 errno);\n-    env->Throw((jthrowable) exc);\n-}\n","filename":"src\/jdk.internal.le\/linux\/native\/lible\/CLibrary.cpp","additions":0,"deletions":207,"binary":false,"changes":207,"status":"deleted"},{"patch":"@@ -1,51 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna;\n-\n-import java.io.IOException;\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.impl.jna.osx.OsXNativePty;\n-import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n-\n-class JDKNativePty {\n-\n-    static JnaNativePty current(TerminalProvider.Stream console) throws IOException {\n-        return OsXNativePty.current(console);\n-    }\n-\n-    static JnaNativePty open(Attributes attr, Size size) throws IOException {\n-        return OsXNativePty.open(attr, size);\n-    }\n-\n-    static int isatty(int fd) {\n-        return OsXNativePty.isatty(fd);\n-    }\n-\n-    static String ttyname(int fd) {\n-        return OsXNativePty.ttyname(fd);\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/macosx\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/JDKNativePty.java","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -1,394 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2020, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.osx;\n-\n-import java.util.Arrays;\n-import java.util.EnumMap;\n-import java.util.EnumSet;\n-import java.util.List;\n-\n-\/\/import com.sun.jna.LastErrorException;\n-\/\/import com.sun.jna.NativeLong;\n-\/\/import com.sun.jna.Structure;\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Attributes.ControlChar;\n-import jdk.internal.org.jline.terminal.Attributes.ControlFlag;\n-import jdk.internal.org.jline.terminal.Attributes.InputFlag;\n-import jdk.internal.org.jline.terminal.Attributes.LocalFlag;\n-import jdk.internal.org.jline.terminal.Attributes.OutputFlag;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.impl.jna.LastErrorException;\n-\n-public interface CLibrary {\/\/extends com.sun.jna.Library {\n-\n-    void tcgetattr(int fd, termios termios) throws LastErrorException;\n-\n-    void tcsetattr(int fd, int cmd, termios termios) throws LastErrorException;\n-\n-    void ioctl(int fd, NativeLong cmd, winsize data) throws LastErrorException;\n-\n-    int isatty(int fd);\n-\n-    void ttyname_r(int fd, byte[] buf, int len) throws LastErrorException;\n-\n-    void openpty(int[] master, int[] slave, byte[] name, termios t, winsize s) throws LastErrorException;\n-\n-    class winsize { \/\/extends Structure {\n-        public short ws_row;\n-        public short ws_col;\n-        public short ws_xpixel;\n-        public short ws_ypixel;\n-\n-        public winsize() {\n-        }\n-\n-        public winsize(Size ws) {\n-            ws_row = (short) ws.getRows();\n-            ws_col = (short) ws.getColumns();\n-        }\n-\n-        public Size toSize() {\n-            return new Size(ws_col, ws_row);\n-        }\n-\n-\/\/        @Override\n-\/\/        protected List<String> getFieldOrder() {\n-\/\/            return Arrays.asList(\/\/\n-\/\/                    \"ws_row\",\/\/\n-\/\/                    \"ws_col\",\/\/\n-\/\/                    \"ws_xpixel\",\/\/\n-\/\/                    \"ws_ypixel\"\/\/\n-\/\/            );\n-\/\/        }\n-\n-    }\n-\n-    class termios { \/\/extends Structure {\n-\n-        public NativeLong c_iflag;\n-        public NativeLong c_oflag;\n-        public NativeLong c_cflag;\n-        public NativeLong c_lflag;\n-        public byte[] c_cc = new byte[20];\n-        public NativeLong c_ispeed;\n-        public NativeLong c_ospeed;\n-\n-\/\/        @Override\n-\/\/        protected List<String> getFieldOrder() {\n-\/\/            return Arrays.asList(\/\/\n-\/\/                    \"c_iflag\",\/\/\n-\/\/                    \"c_oflag\",\/\/\n-\/\/                    \"c_cflag\",\/\/\n-\/\/                    \"c_lflag\",\/\/\n-\/\/                    \"c_cc\",\/\/\n-\/\/                    \"c_ispeed\",\/\/\n-\/\/                    \"c_ospeed\"\/\/\n-\/\/            );\n-\/\/        }\n-\n-        {\n-            c_iflag  = new NativeLong(0);\n-            c_oflag  = new NativeLong(0);\n-            c_cflag  = new NativeLong(0);\n-            c_lflag  = new NativeLong(0);\n-            c_ispeed = new NativeLong(0);\n-            c_ospeed = new NativeLong(0);\n-        }\n-\n-        public termios() {\n-        }\n-\n-        public termios(Attributes t) {\n-            \/\/ Input flags\n-            setFlag(t.getInputFlag(InputFlag.IGNBRK),           IGNBRK,     c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.BRKINT),           BRKINT,     c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.IGNPAR),           IGNPAR,     c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.PARMRK),           PARMRK,     c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.INPCK),            INPCK,      c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.ISTRIP),           ISTRIP,     c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.INLCR),            INLCR,      c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.IGNCR),            IGNCR,      c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.ICRNL),            ICRNL,      c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.IXON),             IXON,       c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.IXOFF),            IXOFF,      c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.IXANY),            IXANY,      c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.IMAXBEL),          IMAXBEL,    c_iflag);\n-            setFlag(t.getInputFlag(InputFlag.IUTF8),            IUTF8,      c_iflag);\n-            \/\/ Output flags\n-            setFlag(t.getOutputFlag(OutputFlag.OPOST),          OPOST,      c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.ONLCR),          ONLCR,      c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.OXTABS),         OXTABS,     c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.ONOEOT),         ONOEOT,     c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.OCRNL),          OCRNL,      c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.ONOCR),          ONOCR,      c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.ONLRET),         ONLRET,     c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.OFILL),          OFILL,      c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.NLDLY),          NLDLY,      c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.TABDLY),         TABDLY,     c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.CRDLY),          CRDLY,      c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.FFDLY),          FFDLY,      c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.BSDLY),          BSDLY,      c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.VTDLY),          VTDLY,      c_oflag);\n-            setFlag(t.getOutputFlag(OutputFlag.OFDEL),          OFDEL,      c_oflag);\n-            \/\/ Control flags\n-            setFlag(t.getControlFlag(ControlFlag.CIGNORE),      CIGNORE,    c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CS5),          CS5,        c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CS6),          CS6,        c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CS7),          CS7,        c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CS8),          CS8,        c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CSTOPB),       CSTOPB,     c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CREAD),        CREAD,      c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.PARENB),       PARENB,     c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.PARODD),       PARODD,     c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.HUPCL),        HUPCL,      c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CLOCAL),       CLOCAL,     c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CCTS_OFLOW),   CCTS_OFLOW, c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CRTS_IFLOW),   CRTS_IFLOW, c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CDTR_IFLOW),   CDTR_IFLOW, c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CDSR_OFLOW),   CDSR_OFLOW, c_cflag);\n-            setFlag(t.getControlFlag(ControlFlag.CCAR_OFLOW),   CCAR_OFLOW, c_cflag);\n-            \/\/ Local flags\n-            setFlag(t.getLocalFlag(LocalFlag.ECHOKE),           ECHOKE,     c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.ECHOE),            ECHOE,      c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.ECHOK),            ECHOK,      c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.ECHO),             ECHO,       c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.ECHONL),           ECHONL,     c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.ECHOPRT),          ECHOPRT,    c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.ECHOCTL),          ECHOCTL,    c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.ISIG),             ISIG,       c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.ICANON),           ICANON,     c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.ALTWERASE),        ALTWERASE,  c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.IEXTEN),           IEXTEN,     c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.EXTPROC),          EXTPROC,    c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.TOSTOP),           TOSTOP,     c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.FLUSHO),           FLUSHO,     c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.NOKERNINFO),       NOKERNINFO, c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.PENDIN),           PENDIN,     c_lflag);\n-            setFlag(t.getLocalFlag(LocalFlag.NOFLSH),           NOFLSH,     c_lflag);\n-            \/\/ Control chars\n-            c_cc[VEOF]      = (byte) t.getControlChar(ControlChar.VEOF);\n-            c_cc[VEOL]      = (byte) t.getControlChar(ControlChar.VEOL);\n-            c_cc[VEOL2]     = (byte) t.getControlChar(ControlChar.VEOL2);\n-            c_cc[VERASE]    = (byte) t.getControlChar(ControlChar.VERASE);\n-            c_cc[VWERASE]   = (byte) t.getControlChar(ControlChar.VWERASE);\n-            c_cc[VKILL]     = (byte) t.getControlChar(ControlChar.VKILL);\n-            c_cc[VREPRINT]  = (byte) t.getControlChar(ControlChar.VREPRINT);\n-            c_cc[VINTR]     = (byte) t.getControlChar(ControlChar.VINTR);\n-            c_cc[VQUIT]     = (byte) t.getControlChar(ControlChar.VQUIT);\n-            c_cc[VSUSP]     = (byte) t.getControlChar(ControlChar.VSUSP);\n-            c_cc[VDSUSP]    = (byte) t.getControlChar(ControlChar.VDSUSP);\n-            c_cc[VSTART]    = (byte) t.getControlChar(ControlChar.VSTART);\n-            c_cc[VSTOP]     = (byte) t.getControlChar(ControlChar.VSTOP);\n-            c_cc[VLNEXT]    = (byte) t.getControlChar(ControlChar.VLNEXT);\n-            c_cc[VDISCARD]  = (byte) t.getControlChar(ControlChar.VDISCARD);\n-            c_cc[VMIN]      = (byte) t.getControlChar(ControlChar.VMIN);\n-            c_cc[VTIME]     = (byte) t.getControlChar(ControlChar.VTIME);\n-            c_cc[VSTATUS]   = (byte) t.getControlChar(ControlChar.VSTATUS);\n-        }\n-\n-        private void setFlag(boolean flag, long value, NativeLong org) {\n-            org.setValue(flag ? org.longValue() | value : org.longValue());\n-        }\n-\n-        public Attributes toAttributes() {\n-            Attributes attr = new Attributes();\n-            \/\/ Input flags\n-            EnumSet<InputFlag> iflag = attr.getInputFlags();\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.IGNBRK,   IGNBRK);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.IGNBRK, IGNBRK);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.BRKINT, BRKINT);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.IGNPAR, IGNPAR);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.PARMRK, PARMRK);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.INPCK, INPCK);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.ISTRIP, ISTRIP);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.INLCR, INLCR);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.IGNCR, IGNCR);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.ICRNL, ICRNL);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.IXON, IXON);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.IXOFF, IXOFF);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.IXANY, IXANY);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.IMAXBEL, IMAXBEL);\n-            addFlag(c_iflag.longValue(), iflag, InputFlag.IUTF8, IUTF8);\n-            \/\/ Output flags\n-            EnumSet<OutputFlag> oflag = attr.getOutputFlags();\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.OPOST, OPOST);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.ONLCR, ONLCR);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.OXTABS, OXTABS);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.ONOEOT, ONOEOT);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.OCRNL, OCRNL);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.ONOCR, ONOCR);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.ONLRET, ONLRET);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.OFILL, OFILL);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.NLDLY, NLDLY);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.TABDLY, TABDLY);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.CRDLY, CRDLY);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.FFDLY, FFDLY);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.BSDLY, BSDLY);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.VTDLY, VTDLY);\n-            addFlag(c_oflag.longValue(), oflag, OutputFlag.OFDEL, OFDEL);\n-            \/\/ Control flags\n-            EnumSet<ControlFlag> cflag = attr.getControlFlags();\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CIGNORE, CIGNORE);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CS5, CS5);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CS6, CS6);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CS7, CS7);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CS8, CS8);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CSTOPB, CSTOPB);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CREAD, CREAD);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.PARENB, PARENB);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.PARODD, PARODD);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.HUPCL, HUPCL);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CLOCAL, CLOCAL);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CCTS_OFLOW, CCTS_OFLOW);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CRTS_IFLOW, CRTS_IFLOW);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CDSR_OFLOW, CDSR_OFLOW);\n-            addFlag(c_cflag.longValue(), cflag, ControlFlag.CCAR_OFLOW, CCAR_OFLOW);\n-            \/\/ Local flags\n-            EnumSet<LocalFlag> lflag = attr.getLocalFlags();\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.ECHOKE, ECHOKE);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.ECHOE, ECHOE);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.ECHOK, ECHOK);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.ECHO, ECHO);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.ECHONL, ECHONL);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.ECHOPRT, ECHOPRT);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.ECHOCTL, ECHOCTL);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.ISIG, ISIG);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.ICANON, ICANON);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.ALTWERASE, ALTWERASE);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.IEXTEN, IEXTEN);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.EXTPROC, EXTPROC);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.TOSTOP, TOSTOP);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.FLUSHO, FLUSHO);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.NOKERNINFO, NOKERNINFO);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.PENDIN, PENDIN);\n-            addFlag(c_lflag.longValue(), lflag, LocalFlag.NOFLSH, NOFLSH);\n-            \/\/ Control chars\n-            EnumMap<ControlChar, Integer> cc = attr.getControlChars();\n-            cc.put(ControlChar.VEOF,        (int) c_cc[VEOF]);\n-            cc.put(ControlChar.VEOL,        (int) c_cc[VEOL]);\n-            cc.put(ControlChar.VEOL2,       (int) c_cc[VEOL2]);\n-            cc.put(ControlChar.VERASE,      (int) c_cc[VERASE]);\n-            cc.put(ControlChar.VWERASE,     (int) c_cc[VWERASE]);\n-            cc.put(ControlChar.VKILL,       (int) c_cc[VKILL]);\n-            cc.put(ControlChar.VREPRINT,    (int) c_cc[VREPRINT]);\n-            cc.put(ControlChar.VINTR,       (int) c_cc[VINTR]);\n-            cc.put(ControlChar.VQUIT,       (int) c_cc[VQUIT]);\n-            cc.put(ControlChar.VSUSP,       (int) c_cc[VSUSP]);\n-            cc.put(ControlChar.VDSUSP,      (int) c_cc[VDSUSP]);\n-            cc.put(ControlChar.VSTART,      (int) c_cc[VSTART]);\n-            cc.put(ControlChar.VSTOP,       (int) c_cc[VSTOP]);\n-            cc.put(ControlChar.VLNEXT,      (int) c_cc[VLNEXT]);\n-            cc.put(ControlChar.VDISCARD,    (int) c_cc[VDISCARD]);\n-            cc.put(ControlChar.VMIN,        (int) c_cc[VMIN]);\n-            cc.put(ControlChar.VTIME,       (int) c_cc[VTIME]);\n-            cc.put(ControlChar.VSTATUS,     (int) c_cc[VSTATUS]);\n-            \/\/ Return\n-            return attr;\n-        }\n-\n-        private <T extends Enum<T>> void addFlag(long value, EnumSet<T> flags, T flag, int v) {\n-            if ((value & v) != 0) {\n-                flags.add(flag);\n-            }\n-        }\n-    }\n-\n-    \/\/ CONSTANTS\n-\n-     long TIOCGWINSZ = 0x40087468L;\n-     long TIOCSWINSZ = 0x80087467L;\n-\n-     int TCSANOW     = 0x00000000;\n-\n-     int VEOF        = 0;\n-     int VEOL        = 1;\n-     int VEOL2       = 2;\n-     int VERASE      = 3;\n-     int VWERASE     = 4;\n-     int VKILL       = 5;\n-     int VREPRINT    = 6;\n-     int VINTR       = 8;\n-     int VQUIT       = 9;\n-     int VSUSP       = 10;\n-     int VDSUSP      = 11;\n-     int VSTART      = 12;\n-     int VSTOP       = 13;\n-     int VLNEXT      = 14;\n-     int VDISCARD    = 15;\n-     int VMIN        = 16;\n-     int VTIME       = 17;\n-     int VSTATUS     = 18;\n-\n-     int IGNBRK      = 0x00000001;\n-     int BRKINT      = 0x00000002;\n-     int IGNPAR      = 0x00000004;\n-     int PARMRK      = 0x00000008;\n-     int INPCK       = 0x00000010;\n-     int ISTRIP      = 0x00000020;\n-     int INLCR       = 0x00000040;\n-     int IGNCR       = 0x00000080;\n-     int ICRNL       = 0x00000100;\n-     int IXON        = 0x00000200;\n-     int IXOFF       = 0x00000400;\n-     int IXANY       = 0x00000800;\n-     int IMAXBEL     = 0x00002000;\n-     int IUTF8       = 0x00004000;\n-\n-     int OPOST       = 0x00000001;\n-     int ONLCR       = 0x00000002;\n-     int OXTABS      = 0x00000004;\n-     int ONOEOT      = 0x00000008;\n-     int OCRNL       = 0x00000010;\n-     int ONOCR       = 0x00000020;\n-     int ONLRET      = 0x00000040;\n-     int OFILL       = 0x00000080;\n-     int NLDLY       = 0x00000300;\n-     int TABDLY      = 0x00000c04;\n-     int CRDLY       = 0x00003000;\n-     int FFDLY       = 0x00004000;\n-     int BSDLY       = 0x00008000;\n-     int VTDLY       = 0x00010000;\n-     int OFDEL       = 0x00020000;\n-\n-     int CIGNORE     = 0x00000001;\n-     int CS5         = 0x00000000;\n-     int CS6         = 0x00000100;\n-     int CS7         = 0x00000200;\n-     int CS8         = 0x00000300;\n-     int CSTOPB      = 0x00000400;\n-     int CREAD       = 0x00000800;\n-     int PARENB      = 0x00001000;\n-     int PARODD      = 0x00002000;\n-     int HUPCL       = 0x00004000;\n-     int CLOCAL      = 0x00008000;\n-     int CCTS_OFLOW  = 0x00010000;\n-     int CRTS_IFLOW  = 0x00020000;\n-     int CDTR_IFLOW  = 0x00040000;\n-     int CDSR_OFLOW  = 0x00080000;\n-     int CCAR_OFLOW  = 0x00100000;\n-\n-     int ECHOKE      = 0x00000001;\n-     int ECHOE       = 0x00000002;\n-     int ECHOK       = 0x00000004;\n-     int ECHO        = 0x00000008;\n-     int ECHONL      = 0x00000010;\n-     int ECHOPRT     = 0x00000020;\n-     int ECHOCTL     = 0x00000040;\n-     int ISIG        = 0x00000080;\n-     int ICANON      = 0x00000100;\n-     int ALTWERASE   = 0x00000200;\n-     int IEXTEN      = 0x00000400;\n-     int EXTPROC     = 0x00000800;\n-     int TOSTOP      = 0x00400000;\n-     int FLUSHO      = 0x00800000;\n-     int NOKERNINFO  = 0x02000000;\n-     int PENDIN      = 0x20000000;\n-     int NOFLSH      = 0x80000000;\n-\n-}\n","filename":"src\/jdk.internal.le\/macosx\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/CLibrary.java","additions":0,"deletions":394,"binary":false,"changes":394,"status":"deleted"},{"patch":"@@ -1,66 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.osx;\n-\n-import jdk.internal.org.jline.terminal.impl.jna.LastErrorException;\n-\n-public final class CLibraryImpl implements CLibrary {\n-\n-    static {\n-        System.loadLibrary(\"le\");\n-        initIDs();\n-    }\n-\n-    private static native void initIDs();\n-\n-    @Override\n-    public native void tcgetattr(int fd, termios termios) throws LastErrorException;\n-\n-    @Override\n-    public native void tcsetattr(int fd, int cmd, termios termios) throws LastErrorException;\n-\n-    @Override\n-    public void ioctl(int fd, NativeLong cmd, winsize data) throws LastErrorException {\n-        if (cmd.longValue() == CLibrary.TIOCGWINSZ || cmd.longValue() == CLibrary.TIOCSWINSZ) {\n-            ioctl0(fd, cmd.longValue(), data);\n-        } else {\n-            throw new UnsupportedOperationException(\"Command: \" + cmd + \", not supported.\");\n-        }\n-    }\n-\n-    private native void ioctl0(int fd, long cmd, winsize data) throws LastErrorException;\n-\n-    @Override\n-    public native int isatty(int fd);\n-\n-    @Override\n-    public native void ttyname_r(int fd, byte[] buf, int len) throws LastErrorException;\n-\n-    @Override\n-    public void openpty(int[] master, int[] slave, byte[] name, termios t, winsize s) throws LastErrorException {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/macosx\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/CLibraryImpl.java","additions":0,"deletions":66,"binary":false,"changes":66,"status":"deleted"},{"patch":"@@ -1,43 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.osx;\n-\n-class NativeLong {\n-\n-    public long value;\n-\n-    public NativeLong(long value) {\n-        this.value = value;\n-    }\n-\n-    public void setValue(long value) {\n-        this.value = value;\n-    }\n-\n-    public long longValue() {\n-        return value;\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/macosx\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/NativeLong.java","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -1,106 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2020, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.osx;\n-\n-import java.io.FileDescriptor;\n-import java.io.IOException;\n-\n-\/\/import com.sun.jna.Native;\n-\/\/import com.sun.jna.NativeLong;\n-\/\/import com.sun.jna.Platform;\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.impl.jna.JnaNativePty;\n-import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n-\n-import static jdk.internal.org.jline.terminal.impl.jna.osx.CLibrary.TCSANOW;\n-import static jdk.internal.org.jline.terminal.impl.jna.osx.CLibrary.TIOCGWINSZ;\n-import static jdk.internal.org.jline.terminal.impl.jna.osx.CLibrary.TIOCSWINSZ;\n-import static jdk.internal.org.jline.terminal.impl.jna.osx.CLibrary.termios;\n-import static jdk.internal.org.jline.terminal.impl.jna.osx.CLibrary.winsize;\n-\n-public class OsXNativePty extends JnaNativePty {\n-\n-\/\/    private static final CLibrary C_LIBRARY = Native.load(Platform.C_LIBRARY_NAME, CLibrary.class);\n-    private static final CLibrary C_LIBRARY = new CLibraryImpl();\/\/Native.load(Platform.C_LIBRARY_NAME, CLibrary.class);\n-\n-    public static OsXNativePty current(TerminalProvider.Stream consoleStream) throws IOException {\n-        switch (consoleStream) {\n-            case Output:\n-                return new OsXNativePty(-1, null, 0, FileDescriptor.in, 1, FileDescriptor.out, ttyname(0));\n-            case Error:\n-                return new OsXNativePty(-1, null, 0, FileDescriptor.in, 2, FileDescriptor.err, ttyname(0));\n-            default:\n-                throw new IllegalArgumentException(\"Unsupport stream for console: \" + consoleStream);\n-        }\n-    }\n-\n-    public static OsXNativePty open(Attributes attr, Size size) throws IOException {\n-        int[] master = new int[1];\n-        int[] slave = new int[1];\n-        byte[] buf = new byte[64];\n-        C_LIBRARY.openpty(master, slave, buf,\n-                attr != null ? new termios(attr) : null,\n-                size != null ? new winsize(size) : null);\n-        int len = 0;\n-        while (buf[len] != 0) {\n-            len++;\n-        }\n-        String name = new String(buf, 0, len);\n-        return new OsXNativePty(master[0], newDescriptor(master[0]), slave[0], newDescriptor(slave[0]), name);\n-    }\n-\n-    public OsXNativePty(int master, FileDescriptor masterFD, int slave, FileDescriptor slaveFD, String name) {\n-        super(master, masterFD, slave, slaveFD, name);\n-    }\n-\n-    public OsXNativePty(int master, FileDescriptor masterFD, int slave, FileDescriptor slaveFD, int slaveOut, FileDescriptor slaveOutFD, String name) {\n-        super(master, masterFD, slave, slaveFD, slaveOut, slaveOutFD, name);\n-    }\n-\n-    @Override\n-    public Attributes getAttr() throws IOException {\n-        termios termios = new termios();\n-        C_LIBRARY.tcgetattr(getSlave(), termios);\n-        return termios.toAttributes();\n-    }\n-\n-    @Override\n-    protected void doSetAttr(Attributes attr) throws IOException {\n-        termios termios = new termios(attr);\n-        C_LIBRARY.tcsetattr(getSlave(), TCSANOW, termios);\n-    }\n-\n-    @Override\n-    public Size getSize() throws IOException {\n-        winsize sz = new winsize();\n-        C_LIBRARY.ioctl(getSlave(), new NativeLong(TIOCGWINSZ), sz);\n-        return sz.toSize();\n-    }\n-\n-    @Override\n-    public void setSize(Size size) throws IOException {\n-        winsize sz = new winsize(size);\n-        C_LIBRARY.ioctl(getSlave(), new NativeLong(TIOCSWINSZ), sz);\n-    }\n-\n-    public static int isatty(int fd) {\n-        return C_LIBRARY.isatty(fd);\n-    }\n-\n-    public static String ttyname(int fd) {\n-        byte[] buf = new byte[64];\n-        C_LIBRARY.ttyname_r(fd, buf, buf.length);\n-        int len = 0;\n-        while (buf[len] != 0) {\n-            len++;\n-        }\n-        return new String(buf, 0, len);\n-    }\n-}\n","filename":"src\/jdk.internal.le\/macosx\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/OsXNativePty.java","additions":0,"deletions":106,"binary":false,"changes":106,"status":"deleted"},{"patch":"@@ -1,211 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"jni.h\"\n-#include \"jni_util.h\"\n-#include \"jvm.h\"\n-#include \"jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl.h\"\n-\n-#include <errno.h>\n-#include <stdlib.h>\n-#include <termios.h>\n-#include <unistd.h>\n-#include <sys\/ioctl.h>\n-\n-static jclass lastErrorExceptionClass;\n-static jmethodID lastErrorExceptionConstructor;\n-\n-static jclass termios_j;\n-static jfieldID c_iflag;\n-static jfieldID c_oflag;\n-static jfieldID c_cflag;\n-static jfieldID c_lflag;\n-static jfieldID c_cc;\n-static jfieldID c_ispeed;\n-static jfieldID c_ospeed;\n-\n-static jclass winsize_j;\n-static jfieldID ws_row;\n-static jfieldID ws_col;\n-static jfieldID ws_xpixel;\n-static jfieldID ws_ypixel;\n-\n-static jclass nativelong_j;\n-static jfieldID nativelong_value;\n-\n-static void throw_errno(JNIEnv *env);\n-\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl_initIDs\n-  (JNIEnv *env, jclass) {\n-    jclass cls;\n-    cls = env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/LastErrorException\");\n-    CHECK_NULL(cls);\n-    lastErrorExceptionClass = (jclass) env->NewGlobalRef(cls);\n-    lastErrorExceptionConstructor = env->GetMethodID(lastErrorExceptionClass, \"<init>\", \"(J)V\");\n-    CHECK_NULL(lastErrorExceptionConstructor);\n-\n-    cls = env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/CLibrary$termios\");\n-    CHECK_NULL(cls);\n-    termios_j = (jclass) env->NewGlobalRef(cls);\n-    CHECK_NULL(termios_j);\n-    c_iflag = env->GetFieldID(termios_j, \"c_iflag\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/NativeLong;\");\n-    CHECK_NULL(c_iflag);\n-    c_oflag = env->GetFieldID(termios_j, \"c_oflag\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/NativeLong;\");\n-    CHECK_NULL(c_oflag);\n-    c_cflag = env->GetFieldID(termios_j, \"c_cflag\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/NativeLong;\");\n-    CHECK_NULL(c_cflag);\n-    c_lflag = env->GetFieldID(termios_j, \"c_lflag\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/NativeLong;\");\n-    CHECK_NULL(c_lflag);\n-    c_cc = env->GetFieldID(termios_j, \"c_cc\", \"[B\");\n-    CHECK_NULL(c_cc);\n-    c_ispeed = env->GetFieldID(termios_j, \"c_ispeed\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/NativeLong;\");\n-    CHECK_NULL(c_ispeed);\n-    c_ospeed = env->GetFieldID(termios_j, \"c_ospeed\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/NativeLong;\");\n-    CHECK_NULL(c_ospeed);\n-\n-    cls = env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/CLibrary$winsize\");\n-    CHECK_NULL(cls);\n-    winsize_j = (jclass) env->NewGlobalRef(cls);\n-    ws_row = env->GetFieldID(winsize_j, \"ws_row\", \"S\");\n-    CHECK_NULL(ws_row);\n-    ws_col = env->GetFieldID(winsize_j, \"ws_col\", \"S\");\n-    CHECK_NULL(ws_col);\n-    ws_xpixel= env->GetFieldID(winsize_j, \"ws_xpixel\", \"S\");\n-    CHECK_NULL(ws_xpixel);\n-    ws_ypixel= env->GetFieldID(winsize_j, \"ws_ypixel\", \"S\");\n-    CHECK_NULL(ws_ypixel);\n-\n-    nativelong_j = env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/NativeLong\");\n-    CHECK_NULL(nativelong_j);\n-    nativelong_value = env->GetFieldID(nativelong_j, \"value\", \"J\");\n-    CHECK_NULL(nativelong_value);\n-}\n-\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl_tcgetattr\n-  (JNIEnv *env, jobject, jint fd, jobject result) {\n-    termios data;\n-\n-    if (tcgetattr(fd, &data) != 0) {\n-        throw_errno(env);\n-        return ;\n-    }\n-\n-    env->SetLongField(env->GetObjectField(result, c_iflag), nativelong_value, data.c_iflag);\n-    env->SetLongField(env->GetObjectField(result, c_oflag), nativelong_value, data.c_oflag);\n-    env->SetLongField(env->GetObjectField(result, c_cflag), nativelong_value, data.c_cflag);\n-    env->SetLongField(env->GetObjectField(result, c_lflag), nativelong_value, data.c_lflag);\n-    jbyteArray c_ccValue = (jbyteArray) env->GetObjectField(result, c_cc);\n-    env->SetByteArrayRegion(c_ccValue, 0, NCCS, (signed char *) data.c_cc);\n-    env->SetLongField(env->GetObjectField(result, c_ispeed), nativelong_value, data.c_ispeed);\n-    env->SetLongField(env->GetObjectField(result, c_ospeed), nativelong_value, data.c_ospeed);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl\n- * Method:    tcsetattr\n- * Signature: (IILjdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/CLibrary\/termios;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl_tcsetattr\n-  (JNIEnv *env, jobject, jint fd, jint cmd, jobject input) {\n-    termios data;\n-\n-    data.c_iflag = env->GetLongField(env->GetObjectField(input, c_iflag), nativelong_value);\n-    data.c_oflag = env->GetLongField(env->GetObjectField(input, c_oflag), nativelong_value);\n-    data.c_cflag = env->GetLongField(env->GetObjectField(input, c_cflag), nativelong_value);\n-    data.c_lflag = env->GetLongField(env->GetObjectField(input, c_lflag), nativelong_value);\n-    jbyteArray c_ccValue = (jbyteArray) env->GetObjectField(input, c_cc);\n-    env->GetByteArrayRegion(c_ccValue, 0, NCCS, (jbyte *) data.c_cc);\n-    data.c_ispeed = env->GetLongField(env->GetObjectField(input, c_ispeed), nativelong_value);\n-    data.c_ospeed = env->GetLongField(env->GetObjectField(input, c_ospeed), nativelong_value);\n-\n-    if (tcsetattr(fd, cmd, &data) != 0) {\n-        throw_errno(env);\n-    }\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl\n- * Method:    ioctl0\n- * Signature: (IILjdk\/internal\/org\/jline\/terminal\/impl\/jna\/osx\/CLibrary\/winsize;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl_ioctl0\n-  (JNIEnv *env, jobject, jint fd, jlong cmd, jobject data) {\n-    winsize ws;\n-\n-    ws.ws_row = env->GetShortField(data, ws_row);\n-    ws.ws_col = env->GetShortField(data, ws_col);\n-    ws.ws_xpixel = env->GetShortField(data, ws_xpixel);\n-    ws.ws_ypixel = env->GetShortField(data, ws_ypixel);\n-\n-    if (ioctl(fd, cmd, &ws) != 0) {\n-        throw_errno(env);\n-        return ;\n-    }\n-\n-    env->SetShortField(data, ws_row, ws.ws_row);\n-    env->SetShortField(data, ws_col, ws.ws_col);\n-    env->SetShortField(data, ws_xpixel, ws.ws_xpixel);\n-    env->SetShortField(data, ws_ypixel, ws.ws_ypixel);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl\n- * Method:    isatty\n- * Signature: (I)I\n- *\/\n-JNIEXPORT jint JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl_isatty\n-  (JNIEnv *, jobject, jint fd) {\n-    return isatty(fd);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl\n- * Method:    ttyname_r\n- * Signature: (I[BI)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_osx_CLibraryImpl_ttyname_1r\n-  (JNIEnv *env, jobject, jint fd, jbyteArray buf, jint len) {\n-    char *data = new char[len];\n-    int error = ttyname_r(fd, data, len);\n-\n-    if (error != 0) {\n-        delete[] data;\n-        throw_errno(env);\n-        return ;\n-    }\n-\n-    env->SetByteArrayRegion(buf, 0, len, (jbyte *) data);\n-    delete[] data;\n-}\n-\n-\/*\n- * Throws LastErrorException based on the errno:\n- *\/\n-static void throw_errno(JNIEnv *env) {\n-    jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                 lastErrorExceptionConstructor,\n-                                 errno);\n-    env->Throw((jthrowable) exc);\n-}\n","filename":"src\/jdk.internal.le\/macosx\/native\/lible\/CLibrary.cpp","additions":0,"deletions":211,"binary":false,"changes":211,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+import jdk.internal.org.jline.terminal.TerminalBuilder.SystemOutput;\n@@ -54,1 +55,3 @@\n-                                               .exec(false).build();\n+                                               .exec(false)\n+                                               .systemOutput(SystemOutput.SysOut)\n+                                               .build();\n@@ -98,1 +101,1 @@\n-                return jline.readLine(fmt.formatted(args));\n+                return jline.readLine(fmt.formatted(args).replace(\"%\", \"%%\"));\n@@ -113,1 +116,2 @@\n-                return jline.readLine(fmt.formatted(args), '\\0').toCharArray();\n+                return jline.readLine(fmt.formatted(args).replace(\"%\", \"%%\"), '\\0')\n+                            .toCharArray();\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/JdkConsoleProviderImpl.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -69,1 +69,1 @@\n-        for (;;) {\n+        for (; ; ) {\n@@ -81,2 +81,1 @@\n-                }\n-                else {\n+                } else {\n@@ -237,1 +236,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/keymap\/BindingReader.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -11,2 +11,0 @@\n-import java.io.IOException;\n-import java.io.StringWriter;\n@@ -221,1 +219,0 @@\n-\n@@ -267,1 +264,0 @@\n-\n@@ -309,3 +305,1 @@\n-                doGetBoundKeys((KeyMap<T>) keyMap.mapping[c],\n-                        prefix + (char) (c),\n-                        bound);\n+                doGetBoundKeys((KeyMap<T>) keyMap.mapping[c], prefix + (char) (c), bound);\n@@ -459,1 +453,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/keymap\/KeyMap.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -17,1 +17,1 @@\n- * @see jdk.internal.org.jline.keymap.KeyMap\n+ * @see org.jline.keymap.KeyMap\n@@ -21,2 +21,1 @@\n-public interface Binding {\n-}\n+public interface Binding {}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Binding.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2017, the original author or authors.\n+ * Copyright (c) 2002-2017, the original author(s).\n@@ -87,4 +87,4 @@\n-    \/\/ JDK specific modification\n-    default void zeroOut() {\n-        throw new UnsupportedOperationException();\n-    }\n+    \/**\n+     * Clear any internal buffer.\n+     *\/\n+    void zeroOut();\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Buffer.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2019, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author(s).\n@@ -50,1 +50,9 @@\n-    public Candidate(String value, String displ, String group, String descr, String suffix, String key, boolean complete, int sort) {\n+    public Candidate(\n+            String value,\n+            String displ,\n+            String group,\n+            String descr,\n+            String suffix,\n+            String key,\n+            boolean complete,\n+            int sort) {\n@@ -72,1 +80,2 @@\n-    public Candidate(String value, String displ, String group, String descr, String suffix, String key, boolean complete) {\n+    public Candidate(\n+            String value, String displ, String group, String descr, String suffix, String key, boolean complete) {\n@@ -162,1 +171,0 @@\n-\n@@ -166,1 +174,1 @@\n-        if( sort == o.sort() ) {\n+        if (sort == o.sort()) {\n@@ -183,1 +191,1 @@\n-        return Objects.hash(value);\n+        return Objects.hashCode(value);\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Candidate.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -21,2 +21,1 @@\n-public interface Completer\n-{\n+public interface Completer {\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Completer.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -13,1 +13,1 @@\n- * of the {@link jdk.internal.org.jline.reader.Parser} that produced it, knows if and how a completion candidate\n+ * of the {@link org.jline.reader.Parser} that produced it, knows if and how a completion candidate\n@@ -25,1 +25,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/CompletingParsedLine.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2020, the original author or authors.\n+ * Copyright (c) 2002-2020, the original author(s).\n@@ -26,2 +26,7 @@\n-    void compile(Map<LineReader.Option, Boolean> options, boolean prefix, CompletingParsedLine line\n-            , boolean caseInsensitive, int errors, String originalGroupName);\n+    void compile(\n+            Map<LineReader.Option, Boolean> options,\n+            boolean prefix,\n+            CompletingParsedLine line,\n+            boolean caseInsensitive,\n+            int errors,\n+            String originalGroupName);\n@@ -47,1 +52,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/CompletionMatcher.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,7 +2,1 @@\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n+ * Copyright (c) 2023, the original author(s).\n@@ -10,1 +4,2 @@\n- *   http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n@@ -12,6 +7,1 @@\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -48,1 +38,1 @@\n-    public int getOpenBrackets(){\n+    public int getOpenBrackets() {\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/EOFError.java","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2019, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author(s).\n@@ -16,0 +16,1 @@\n+\n@@ -17,0 +18,1 @@\n+\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Editor.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2020, the original author or authors.\n+ * Copyright (c) 2002-2020, the original author(s).\n@@ -20,2 +20,1 @@\n-    public EndOfFileException() {\n-    }\n+    public EndOfFileException() {}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/EndOfFileException.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -16,1 +16,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Expander.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2021, the original author(s).\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Highlighter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -24,2 +24,1 @@\n-public interface History extends Iterable<History.Entry>\n-{\n+public interface History extends Iterable<History.Entry> {\n@@ -78,1 +77,0 @@\n-\n@@ -113,2 +111,1 @@\n-    interface Entry\n-    {\n+    interface Entry {\n@@ -135,0 +132,1 @@\n+\n@@ -139,0 +137,1 @@\n+\n@@ -143,0 +142,1 @@\n+\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/History.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2023, the original author(s).\n@@ -24,1 +24,1 @@\n- * <h3>Thread safety<\/h3>\n+ * <h2>Thread safety<\/h2>\n@@ -34,1 +34,1 @@\n- * <h3>Prompt strings<\/h3>\n+ * <h2>Prompt strings<\/h2>\n@@ -84,1 +84,0 @@\n-\n@@ -287,0 +286,1 @@\n+    String DUMB = \"dumb\";\n@@ -304,0 +304,1 @@\n+\n@@ -320,0 +321,1 @@\n+\n@@ -323,0 +325,1 @@\n+\n@@ -326,0 +329,1 @@\n+\n@@ -329,0 +333,1 @@\n+\n@@ -332,0 +337,1 @@\n+\n@@ -393,0 +399,20 @@\n+    \/**\n+     * Max number of times a command can be repeated.\n+     *\/\n+    String MAX_REPEAT_COUNT = \"max-repeat-count\";\n+\n+    \/**\n+     * Number of spaces to display a tabulation, the default is 4.\n+     *\/\n+    String TAB_WIDTH = \"tab-width\";\n+\n+    \/**\n+     * Name of inputrc to read at line reader creation time.\n+     *\/\n+    String INPUT_RC_FILE_NAME = \"input-rc-file-name\";\n+\n+    \/**\n+     * Prefix to automatically delegate variables to system properties\n+     *\/\n+    String SYSTEM_PROPERTY_PREFIX = \"system-property-prefix\";\n+\n@@ -472,2 +498,1 @@\n-        DISABLE_UNDO\n-        ;\n+        DISABLE_UNDO;\n@@ -614,1 +639,2 @@\n-    String readLine(String prompt, String rightPrompt, Character mask, String buffer) throws UserInterruptException, EndOfFileException;\n+    String readLine(String prompt, String rightPrompt, Character mask, String buffer)\n+            throws UserInterruptException, EndOfFileException;\n@@ -634,1 +660,2 @@\n-    String readLine(String prompt, String rightPrompt, MaskingCallback maskingCallback, String buffer) throws UserInterruptException, EndOfFileException;\n+    String readLine(String prompt, String rightPrompt, MaskingCallback maskingCallback, String buffer)\n+            throws UserInterruptException, EndOfFileException;\n@@ -705,1 +732,1 @@\n-     * Read a mouse event when the {@link jdk.internal.org.jline.utils.InfoCmp.Capability#key_mouse} sequence\n+     * Read a mouse event when the {@link org.jline.utils.InfoCmp.Capability#key_mouse} sequence\n@@ -754,4 +781,4 @@\n-    \/\/ JDK specific modification\n-    default void zeroOut() {\n-        throw new UnsupportedOperationException();\n-    }\n+    \/**\n+     * Clear any internal buffers.\n+     *\/\n+    void zeroOut();\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/LineReader.java","additions":40,"deletions":13,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2020, the original author or authors.\n+ * Copyright (c) 2002-2020, the original author(s).\n@@ -41,2 +41,1 @@\n-    private LineReaderBuilder() {\n-    }\n+    private LineReaderBuilder() {}\n@@ -91,2 +90,3 @@\n-                    Log.warn(\"The Parser of class \" + parser.getClass().getName() + \" does not support the CompletingParsedLine interface. \" +\n-                            \"Completion with escaped or quoted words won't work correctly.\");\n+                    Log.warn(\"The Parser of class \" + parser.getClass().getName()\n+                            + \" does not support the CompletingParsedLine interface. \"\n+                            + \"Completion with escaped or quoted words won't work correctly.\");\n@@ -156,1 +156,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/LineReaderBuilder.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -38,2 +38,1 @@\n-        return \"Macro[\" +\n-                sequence + ']';\n+        return \"Macro[\" + sequence + ']';\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Macro.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -34,1 +34,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/MaskingCallback.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -67,1 +67,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/ParsedLine.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2021, the original author(s).\n@@ -38,1 +38,1 @@\n-        Pattern  patternCommand = Pattern.compile(\"^\\\\s*\" + REGEX_VARIABLE + \"=(\" + REGEX_COMMAND + \")(\\\\s+|$)\");\n+        Pattern patternCommand = Pattern.compile(\"^\\\\s*\" + REGEX_VARIABLE + \"=(\" + REGEX_COMMAND + \")(\\\\s+|$)\");\n@@ -53,1 +53,1 @@\n-        Pattern  patternCommand = Pattern.compile(\"^\\\\s*(\" + REGEX_VARIABLE + \")\\\\s*=[^=~].*\");\n+        Pattern patternCommand = Pattern.compile(\"^\\\\s*(\" + REGEX_VARIABLE + \")\\\\s*=[^=~].*\");\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Parser.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2021, the original author(s).\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/PrintAboveWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -41,2 +41,1 @@\n-        return \"Reference[\" +\n-                name + ']';\n+        return \"Reference[\" + name + ']';\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Reference.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,7 +2,1 @@\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n+ * Copyright (c) 2023, the original author(s).\n@@ -10,1 +4,2 @@\n- *   http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n@@ -12,6 +7,1 @@\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/SyntaxError.java","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -17,3 +17,1 @@\n-public class UserInterruptException\n-    extends RuntimeException\n-{\n+public class UserInterruptException extends RuntimeException {\n@@ -24,2 +22,1 @@\n-    public UserInterruptException(String partialLine)\n-    {\n+    public UserInterruptException(String partialLine) {\n@@ -32,2 +29,1 @@\n-    public String getPartialLine()\n-    {\n+    public String getPartialLine() {\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/UserInterruptException.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -18,1 +18,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Widget.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2017, the original author or authors.\n+ * Copyright (c) 2002-2017, the original author(s).\n@@ -23,2 +23,1 @@\n-public class BufferImpl implements Buffer\n-{\n+public class BufferImpl implements Buffer {\n@@ -49,1 +48,1 @@\n-    public BufferImpl copy () {\n+    public BufferImpl copy() {\n@@ -110,1 +109,1 @@\n-        write(new int[] { c });\n+        write(new int[] {c});\n@@ -124,1 +123,1 @@\n-        write(new int[] { c });\n+        write(new int[] {c});\n@@ -227,2 +226,1 @@\n-        }\n-        else if ((cursor + where) > length()) {\n+        } else if ((cursor + where) > length()) {\n@@ -374,1 +372,0 @@\n-    \/\/ JDK specific modification\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/BufferImpl.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2021, the original author(s).\n@@ -11,6 +11,0 @@\n-import jdk.internal.org.jline.reader.Candidate;\n-import jdk.internal.org.jline.reader.CompletingParsedLine;\n-import jdk.internal.org.jline.reader.CompletionMatcher;\n-import jdk.internal.org.jline.reader.LineReader;\n-import jdk.internal.org.jline.utils.AttributedString;\n-\n@@ -23,0 +17,6 @@\n+import jdk.internal.org.jline.reader.Candidate;\n+import jdk.internal.org.jline.reader.CompletingParsedLine;\n+import jdk.internal.org.jline.reader.CompletionMatcher;\n+import jdk.internal.org.jline.reader.LineReader;\n+import jdk.internal.org.jline.utils.AttributedString;\n+\n@@ -29,2 +29,1 @@\n-    public CompletionMatcherImpl() {\n-    }\n+    public CompletionMatcherImpl() {}\n@@ -40,2 +39,7 @@\n-    public void compile(Map<LineReader.Option, Boolean> options, boolean prefix, CompletingParsedLine line\n-            , boolean caseInsensitive, int errors, String originalGroupName) {\n+    public void compile(\n+            Map<LineReader.Option, Boolean> options,\n+            boolean prefix,\n+            CompletingParsedLine line,\n+            boolean caseInsensitive,\n+            int errors,\n+            String originalGroupName) {\n@@ -50,2 +54,1 @@\n-        for (Function<Map<String, List<Candidate>>,\n-                Map<String, List<Candidate>>> matcher : matchers) {\n+        for (Function<Map<String, List<Candidate>>, Map<String, List<Candidate>>> matcher : matchers) {\n@@ -57,2 +60,6 @@\n-        return !matching.isEmpty() ? matching.entrySet().stream().flatMap(e -> e.getValue().stream()).distinct().collect(Collectors.toList())\n-                                   : new ArrayList<>();\n+        return !matching.isEmpty()\n+                ? matching.entrySet().stream()\n+                        .flatMap(e -> e.getValue().stream())\n+                        .distinct()\n+                        .collect(Collectors.toList())\n+                : new ArrayList<>();\n@@ -66,1 +73,2 @@\n-        return matching.values().stream().flatMap(Collection::stream)\n+        return matching.values().stream()\n+                .flatMap(Collection::stream)\n@@ -69,1 +77,2 @@\n-                .findFirst().orElse(null);\n+                .findFirst()\n+                .orElse(null);\n@@ -87,2 +96,7 @@\n-    protected void defaultMatchers(Map<LineReader.Option, Boolean> options, boolean prefix, CompletingParsedLine line\n-            , boolean caseInsensitive, int errors, String originalGroupName) {\n+    protected void defaultMatchers(\n+            Map<LineReader.Option, Boolean> options,\n+            boolean prefix,\n+            CompletingParsedLine line,\n+            boolean caseInsensitive,\n+            int errors,\n+            String originalGroupName) {\n@@ -97,2 +111,1 @@\n-                    simpleMatcher(s -> (caseInsensitive ? s.toLowerCase() : s).contains(wp))\n-            ));\n+                    simpleMatcher(s -> (caseInsensitive ? s.toLowerCase() : s).contains(wp))));\n@@ -112,3 +125,4 @@\n-                        simpleMatcher(s -> p1.matcher(caseInsensitive ? s.toLowerCase() : s).matches()),\n-                        simpleMatcher(s -> p2.matcher(caseInsensitive ? s.toLowerCase() : s).matches())\n-                ));\n+                        simpleMatcher(s -> p1.matcher(caseInsensitive ? s.toLowerCase() : s)\n+                                .matches()),\n+                        simpleMatcher(s -> p2.matcher(caseInsensitive ? s.toLowerCase() : s)\n+                                .matches())));\n@@ -118,2 +132,1 @@\n-                        simpleMatcher(s -> (caseInsensitive ? s.toLowerCase() : s).contains(wdi))\n-                ));\n+                        simpleMatcher(s -> (caseInsensitive ? s.toLowerCase() : s).contains(wdi))));\n@@ -131,2 +144,2 @@\n-    protected Function<Map<String, List<Candidate>>,\n-            Map<String, List<Candidate>>> simpleMatcher(Predicate<String> predicate) {\n+    protected Function<Map<String, List<Candidate>>, Map<String, List<Candidate>>> simpleMatcher(\n+            Predicate<String> predicate) {\n@@ -138,2 +151,2 @@\n-    protected Function<Map<String, List<Candidate>>,\n-            Map<String, List<Candidate>>> typoMatcher(String word, int errors, boolean caseInsensitive, String originalGroupName) {\n+    protected Function<Map<String, List<Candidate>>, Map<String, List<Candidate>>> typoMatcher(\n+            String word, int errors, boolean caseInsensitive, String originalGroupName) {\n@@ -142,1 +155,3 @@\n-                    .filter(e -> ReaderUtils.distance(word, caseInsensitive ? e.getKey().toLowerCase() : e.getKey()) < errors)\n+                    .filter(e -> ReaderUtils.distance(\n+                                    word, caseInsensitive ? e.getKey().toLowerCase() : e.getKey())\n+                            < errors)\n@@ -181,1 +196,2 @@\n-                    .computeIfAbsent(AttributedString.fromAnsi(candidate.value()).toString(), s -> new ArrayList<>())\n+                    .computeIfAbsent(\n+                            AttributedString.fromAnsi(candidate.value()).toString(), s -> new ArrayList<>())\n@@ -209,2 +225,1 @@\n-\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/CompletionMatcherImpl.java","additions":49,"deletions":34,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -35,2 +35,1 @@\n-            }\n-            else if (escaped) {\n+            } else if (escaped) {\n@@ -43,2 +42,1 @@\n-            }\n-            else if (c == '\\'') {\n+            } else if (c == '\\'') {\n@@ -47,2 +45,1 @@\n-            }\n-            else if (inQuote) {\n+            } else if (inQuote) {\n@@ -50,2 +47,1 @@\n-            }\n-            else {\n+            } else {\n@@ -54,2 +50,4 @@\n-                        \/\/ any '\\!' should be considered an expansion escape, so skip expansion and strip the escape character\n-                        \/\/ a leading '\\^' should be considered an expansion escape, so skip expansion and strip the escape character\n+                        \/\/ any '\\!' should be considered an expansion escape, so skip expansion and strip the escape\n+                        \/\/ character\n+                        \/\/ a leading '\\^' should be considered an expansion escape, so skip expansion and strip the\n+                        \/\/ escape character\n@@ -94,1 +92,2 @@\n-                                    String previous = history.get(history.index() - 1).trim();\n+                                    String previous =\n+                                            history.get(history.index() - 1).trim();\n@@ -131,1 +130,2 @@\n-                                        throw new IllegalArgumentException((neg ? \"!-\" : \"!\") + line.substring(i1, i) + \": event not found\");\n+                                        throw new IllegalArgumentException(\n+                                                (neg ? \"!-\" : \"!\") + line.substring(i1, i) + \": event not found\");\n@@ -135,1 +135,3 @@\n-                                    } else if (!neg && idx > history.index() - history.size() && idx <= history.index()) {\n+                                    } else if (!neg\n+                                            && idx > history.index() - history.size()\n+                                            && idx <= history.index()) {\n@@ -138,1 +140,2 @@\n-                                        throw new IllegalArgumentException((neg ? \"!-\" : \"!\") + line.substring(i1, i) + \": event not found\");\n+                                        throw new IllegalArgumentException(\n+                                                (neg ? \"!-\" : \"!\") + line.substring(i1, i) + \": event not found\");\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/DefaultExpander.java","additions":18,"deletions":15,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2021, the original author(s).\n@@ -13,0 +13,1 @@\n+import jdk.internal.org.jline.reader.Highlighter;\n@@ -15,1 +16,0 @@\n-import jdk.internal.org.jline.reader.Highlighter;\n@@ -60,1 +60,2 @@\n-                while (negativeEnd < reader.getBuffer().length() - 1 && reader.getBuffer().atChar(negativeEnd + 1) != '\\n') {\n+                while (negativeEnd < reader.getBuffer().length() - 1\n+                        && reader.getBuffer().atChar(negativeEnd + 1) != '\\n') {\n@@ -107,1 +108,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/DefaultHighlighter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2020, the original author or authors.\n+ * Copyright (c) 2002-2020, the original author(s).\n@@ -24,4 +24,4 @@\n-        ROUND,   \/\/ ()\n-        CURLY,   \/\/ {}\n-        SQUARE,  \/\/ []\n-        ANGLE    \/\/ <>\n+        ROUND, \/\/ ()\n+        CURLY, \/\/ {}\n+        SQUARE, \/\/ []\n+        ANGLE \/\/ <>\n@@ -33,0 +33,1 @@\n+\n@@ -34,2 +35,1 @@\n-            if (start == null || end == null\n-              || start.isEmpty() || end.isEmpty() || start.equals(end)) {\n+            if (start == null || end == null || start.isEmpty() || end.isEmpty() || start.equals(end)) {\n@@ -188,16 +188,16 @@\n-                case ROUND:\n-                    openingBrackets[i] = '(';\n-                    closingBrackets[i] = ')';\n-                    break;\n-                case CURLY:\n-                    openingBrackets[i] = '{';\n-                    closingBrackets[i] = '}';\n-                    break;\n-                case SQUARE:\n-                    openingBrackets[i] = '[';\n-                    closingBrackets[i] = ']';\n-                    break;\n-                case ANGLE:\n-                    openingBrackets[i] = '<';\n-                    closingBrackets[i] = '>';\n-                    break;\n+                    case ROUND:\n+                        openingBrackets[i] = '(';\n+                        closingBrackets[i] = ')';\n+                        break;\n+                    case CURLY:\n+                        openingBrackets[i] = '{';\n+                        closingBrackets[i] = '}';\n+                        break;\n+                    case SQUARE:\n+                        openingBrackets[i] = '[';\n+                        closingBrackets[i] = ']';\n+                        break;\n+                    case ANGLE:\n+                        openingBrackets[i] = '<';\n+                        closingBrackets[i] = '>';\n+                        break;\n@@ -232,1 +232,0 @@\n-\n@@ -299,1 +298,1 @@\n-                if (current.length()==0) {\n+                if (current.length() == 0) {\n@@ -327,1 +326,2 @@\n-                    rawWordLength = handleDelimiterAndGetRawWordLength(current, words, rawWordStart, rawWordCursor, rawWordLength, i);\n+                    rawWordLength = handleDelimiterAndGetRawWordLength(\n+                            current, words, rawWordStart, rawWordCursor, rawWordLength, i);\n@@ -333,1 +333,2 @@\n-                } else if (quoteStart < 0 && !lineCommented\n+                } else if (quoteStart < 0\n+                        && !lineCommented\n@@ -342,1 +343,2 @@\n-                        rawWordLength = handleDelimiterAndGetRawWordLength(current, words, rawWordStart, rawWordCursor, rawWordLength, i);\n+                        rawWordLength = handleDelimiterAndGetRawWordLength(\n+                                current, words, rawWordStart, rawWordCursor, rawWordLength, i);\n@@ -346,2 +348,1 @@\n-                } else if (quoteStart < 0 && !lineCommented\n-                        && isCommentDelim(line, i, blockCommentEnd)) {\n+                } else if (quoteStart < 0 && !lineCommented && isCommentDelim(line, i, blockCommentEnd)) {\n@@ -380,2 +381,2 @@\n-                throw new EOFError(-1, -1, \"Missing closing quote\", line.charAt(quoteStart) == '\\''\n-                        ? \"quote\" : \"dquote\");\n+                throw new EOFError(\n+                        -1, -1, \"Missing closing quote\", line.charAt(quoteStart) == '\\'' ? \"quote\" : \"dquote\");\n@@ -384,2 +385,1 @@\n-                throw new EOFError(-1, -1, \"Missing closing block comment delimiter\",\n-                        \"add: \" + blockCommentEnd);\n+                throw new EOFError(-1, -1, \"Missing closing block comment delimiter\", \"add: \" + blockCommentEnd);\n@@ -388,2 +388,1 @@\n-                throw new EOFError(-1, -1, \"Missing opening block comment delimiter\",\n-                        \"missing: \" + blockCommentStart);\n+                throw new EOFError(-1, -1, \"Missing opening block comment delimiter\", \"missing: \" + blockCommentStart);\n@@ -401,2 +400,7 @@\n-                throw new EOFError(-1, -1, message, missing,\n-                        bracketChecker.getOpenBrackets(), bracketChecker.getNextClosingBracket());\n+                throw new EOFError(\n+                        -1,\n+                        -1,\n+                        message,\n+                        missing,\n+                        bracketChecker.getOpenBrackets(),\n+                        bracketChecker.getNextClosingBracket());\n@@ -423,1 +427,7 @@\n-    private int handleDelimiterAndGetRawWordLength(StringBuilder current, List<String> words, int rawWordStart, int rawWordCursor, int rawWordLength, int pos) {\n+    private int handleDelimiterAndGetRawWordLength(\n+            StringBuilder current,\n+            List<String> words,\n+            int rawWordStart,\n+            int rawWordCursor,\n+            int rawWordLength,\n+            int pos) {\n@@ -473,1 +483,1 @@\n-            for (String comment: lineCommentDelims) {\n+            for (String comment : lineCommentDelims) {\n@@ -587,2 +597,2 @@\n-                    if (!nested.isEmpty() && bid == nested.get(nested.size()-1)) {\n-                        nested.remove(nested.size()-1);\n+                    if (!nested.isEmpty() && bid == nested.get(nested.size() - 1)) {\n+                        nested.remove(nested.size() - 1);\n@@ -637,1 +647,1 @@\n-            for (int i=0; i < brackets.length; i++) {\n+            for (int i = 0; i < brackets.length; i++) {\n@@ -651,2 +661,1 @@\n-    public class ArgumentList implements ParsedLine, CompletingParsedLine\n-    {\n+    public class ArgumentList implements ParsedLine, CompletingParsedLine {\n@@ -670,5 +679,15 @@\n-        public ArgumentList(final String line, final List<String> words,\n-                            final int wordIndex, final int wordCursor,\n-                            final int cursor) {\n-            this(line, words, wordIndex, wordCursor, cursor,\n-                    null, wordCursor, words.get(wordIndex).length());\n+        public ArgumentList(\n+                final String line,\n+                final List<String> words,\n+                final int wordIndex,\n+                final int wordCursor,\n+                final int cursor) {\n+            this(\n+                    line,\n+                    words,\n+                    wordIndex,\n+                    wordCursor,\n+                    cursor,\n+                    null,\n+                    wordCursor,\n+                    words.get(wordIndex).length());\n@@ -688,4 +707,9 @@\n-        public ArgumentList(final String line, final List<String> words,\n-                            final int wordIndex, final int wordCursor,\n-                            final int cursor, final String openingQuote,\n-                            final int rawWordCursor, final int rawWordLength) {\n+        public ArgumentList(\n+                final String line,\n+                final List<String> words,\n+                final int wordIndex,\n+                final int wordCursor,\n+                final int cursor,\n+                final String openingQuote,\n+                final int rawWordCursor,\n+                final int rawWordLength) {\n@@ -735,2 +759,2 @@\n-            if (openingQuote==null) {\n-                for (int i=0; i < sb.length(); i++) {\n+            if (openingQuote == null) {\n+                for (int i = 0; i < sb.length(); i++) {\n@@ -749,1 +773,2 @@\n-                        needToBeEscaped = i -> isRawEscapeChar(sb.charAt(i)) || String.valueOf(sb.charAt(i)).equals(openingQuote);\n+                        needToBeEscaped = i -> isRawEscapeChar(sb.charAt(i))\n+                                || String.valueOf(sb.charAt(i)).equals(openingQuote);\n@@ -759,2 +784,2 @@\n-                        needToBeEscaped = i -> isDelimiterChar(sb, i) || isRawEscapeChar(sb.charAt(i))\n-                                || isRawQuoteChar(sb.charAt(i));\n+                        needToBeEscaped = i ->\n+                                isDelimiterChar(sb, i) || isRawEscapeChar(sb.charAt(i)) || isRawQuoteChar(sb.charAt(i));\n@@ -795,1 +820,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/DefaultParser.java","additions":84,"deletions":60,"binary":false,"changes":144,"status":"modified"},{"patch":"@@ -0,0 +1,394 @@\n+\/*\n+ * Copyright (c) 2002-2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.reader.impl;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+\n+import jdk.internal.org.jline.reader.LineReader;\n+import jdk.internal.org.jline.reader.Macro;\n+import jdk.internal.org.jline.reader.Reference;\n+import jdk.internal.org.jline.terminal.Terminal;\n+import jdk.internal.org.jline.utils.Log;\n+\n+public final class InputRC {\n+\n+    public static void configure(LineReader reader, URL url) throws IOException {\n+        try (InputStream is = url.openStream()) {\n+            configure(reader, is);\n+        }\n+    }\n+\n+    public static void configure(LineReader reader, InputStream is) throws IOException {\n+        try (InputStreamReader r = new InputStreamReader(is)) {\n+            configure(reader, r);\n+        }\n+    }\n+\n+    public static void configure(LineReader reader, Reader r) throws IOException {\n+        BufferedReader br;\n+        if (r instanceof BufferedReader) {\n+            br = (BufferedReader) r;\n+        } else {\n+            br = new BufferedReader(r);\n+        }\n+\n+        Terminal terminal = reader.getTerminal();\n+\n+        if (Terminal.TYPE_DUMB.equals(terminal.getType()) || Terminal.TYPE_DUMB_COLOR.equals(terminal.getType())) {\n+            reader.getVariables().putIfAbsent(LineReader.EDITING_MODE, \"dumb\");\n+        } else {\n+            reader.getVariables().putIfAbsent(LineReader.EDITING_MODE, \"emacs\");\n+        }\n+\n+        reader.setKeyMap(LineReader.MAIN);\n+        new InputRC(reader).parse(br);\n+        if (\"vi\".equals(reader.getVariable(LineReader.EDITING_MODE))) {\n+            reader.getKeyMaps().put(LineReader.MAIN, reader.getKeyMaps().get(LineReader.VIINS));\n+        } else if (\"emacs\".equals(reader.getVariable(LineReader.EDITING_MODE))) {\n+            reader.getKeyMaps().put(LineReader.MAIN, reader.getKeyMaps().get(LineReader.EMACS));\n+        } else if (\"dumb\".equals(reader.getVariable(LineReader.EDITING_MODE))) {\n+            reader.getKeyMaps().put(LineReader.MAIN, reader.getKeyMaps().get(LineReader.DUMB));\n+        }\n+    }\n+\n+    private final LineReader reader;\n+\n+    private InputRC(LineReader reader) {\n+        this.reader = reader;\n+    }\n+\n+    private void parse(BufferedReader br) throws IOException, IllegalArgumentException {\n+        String line;\n+        boolean parsing = true;\n+        List<Boolean> ifsStack = new ArrayList<>();\n+        while ((line = br.readLine()) != null) {\n+            try {\n+                line = line.trim();\n+                if (line.length() == 0) {\n+                    continue;\n+                }\n+                if (line.charAt(0) == '#') {\n+                    continue;\n+                }\n+                int i = 0;\n+                if (line.charAt(i) == '$') {\n+                    String cmd;\n+                    String args;\n+                    ++i;\n+                    while (i < line.length() && (line.charAt(i) == ' ' || line.charAt(i) == '\\t')) {\n+                        i++;\n+                    }\n+                    int s = i;\n+                    while (i < line.length() && (line.charAt(i) != ' ' && line.charAt(i) != '\\t')) {\n+                        i++;\n+                    }\n+                    cmd = line.substring(s, i);\n+                    while (i < line.length() && (line.charAt(i) == ' ' || line.charAt(i) == '\\t')) {\n+                        i++;\n+                    }\n+                    s = i;\n+                    while (i < line.length() && (line.charAt(i) != ' ' && line.charAt(i) != '\\t')) {\n+                        i++;\n+                    }\n+                    args = line.substring(s, i);\n+                    if (\"if\".equalsIgnoreCase(cmd)) {\n+                        ifsStack.add(parsing);\n+                        if (!parsing) {\n+                            continue;\n+                        }\n+                        if (args.startsWith(\"term=\")) {\n+                            \/\/ TODO\n+                        } else if (args.startsWith(\"mode=\")) {\n+                            String mode = (String) reader.getVariable(LineReader.EDITING_MODE);\n+                            parsing = args.substring(\"mode=\".length()).equalsIgnoreCase(mode);\n+                        } else {\n+                            parsing = args.equalsIgnoreCase(reader.getAppName());\n+                        }\n+                    } else if (\"else\".equalsIgnoreCase(cmd)) {\n+                        if (ifsStack.isEmpty()) {\n+                            throw new IllegalArgumentException(\"$else found without matching $if\");\n+                        }\n+                        boolean invert = true;\n+                        for (boolean b : ifsStack) {\n+                            if (!b) {\n+                                invert = false;\n+                                break;\n+                            }\n+                        }\n+                        if (invert) {\n+                            parsing = !parsing;\n+                        }\n+                    } else if (\"endif\".equalsIgnoreCase(cmd)) {\n+                        if (ifsStack.isEmpty()) {\n+                            throw new IllegalArgumentException(\"endif found without matching $if\");\n+                        }\n+                        parsing = ifsStack.remove(ifsStack.size() - 1);\n+                    } else if (\"include\".equalsIgnoreCase(cmd)) {\n+                        \/\/ TODO\n+                    }\n+                    continue;\n+                }\n+                if (!parsing) {\n+                    continue;\n+                }\n+                if (line.charAt(i++) == '\"') {\n+                    boolean esc = false;\n+                    for (; ; i++) {\n+                        if (i >= line.length()) {\n+                            throw new IllegalArgumentException(\"Missing closing quote on line '\" + line + \"'\");\n+                        }\n+                        if (esc) {\n+                            esc = false;\n+                        } else if (line.charAt(i) == '\\\\') {\n+                            esc = true;\n+                        } else if (line.charAt(i) == '\"') {\n+                            break;\n+                        }\n+                    }\n+                }\n+                while (i < line.length() && line.charAt(i) != ':' && line.charAt(i) != ' ' && line.charAt(i) != '\\t') {\n+                    i++;\n+                }\n+                String keySeq = line.substring(0, i);\n+                boolean equivalency = i + 1 < line.length() && line.charAt(i) == ':' && line.charAt(i + 1) == '=';\n+                i++;\n+                if (equivalency) {\n+                    i++;\n+                }\n+                if (keySeq.equalsIgnoreCase(\"set\")) {\n+                    String key;\n+                    String val;\n+                    while (i < line.length() && (line.charAt(i) == ' ' || line.charAt(i) == '\\t')) {\n+                        i++;\n+                    }\n+                    int s = i;\n+                    while (i < line.length() && (line.charAt(i) != ' ' && line.charAt(i) != '\\t')) {\n+                        i++;\n+                    }\n+                    key = line.substring(s, i);\n+                    while (i < line.length() && (line.charAt(i) == ' ' || line.charAt(i) == '\\t')) {\n+                        i++;\n+                    }\n+                    s = i;\n+                    while (i < line.length() && (line.charAt(i) != ' ' && line.charAt(i) != '\\t')) {\n+                        i++;\n+                    }\n+                    val = line.substring(s, i);\n+                    setVar(reader, key, val);\n+                } else {\n+                    while (i < line.length() && (line.charAt(i) == ' ' || line.charAt(i) == '\\t')) {\n+                        i++;\n+                    }\n+                    int start = i;\n+                    if (i < line.length() && (line.charAt(i) == '\\'' || line.charAt(i) == '\\\"')) {\n+                        char delim = line.charAt(i++);\n+                        boolean esc = false;\n+                        for (; ; i++) {\n+                            if (i >= line.length()) {\n+                                break;\n+                            }\n+                            if (esc) {\n+                                esc = false;\n+                            } else if (line.charAt(i) == '\\\\') {\n+                                esc = true;\n+                            } else if (line.charAt(i) == delim) {\n+                                break;\n+                            }\n+                        }\n+                    }\n+                    for (; i < line.length() && line.charAt(i) != ' ' && line.charAt(i) != '\\t'; i++)\n+                        ;\n+                    String val = line.substring(Math.min(start, line.length()), Math.min(i, line.length()));\n+                    if (keySeq.charAt(0) == '\"') {\n+                        keySeq = translateQuoted(keySeq);\n+                    } else {\n+                        \/\/ Bind key name\n+                        String keyName =\n+                                keySeq.lastIndexOf('-') > 0 ? keySeq.substring(keySeq.lastIndexOf('-') + 1) : keySeq;\n+                        char key = getKeyFromName(keyName);\n+                        keyName = keySeq.toLowerCase();\n+                        keySeq = \"\";\n+                        if (keyName.contains(\"meta-\") || keyName.contains(\"m-\")) {\n+                            keySeq += \"\\u001b\";\n+                        }\n+                        if (keyName.contains(\"control-\") || keyName.contains(\"c-\") || keyName.contains(\"ctrl-\")) {\n+                            key = (char) (Character.toUpperCase(key) & 0x1f);\n+                        }\n+                        keySeq += key;\n+                    }\n+                    if (val.length() > 0 && (val.charAt(0) == '\\'' || val.charAt(0) == '\\\"')) {\n+                        reader.getKeys().bind(new Macro(translateQuoted(val)), keySeq);\n+                    } else {\n+                        reader.getKeys().bind(new Reference(val), keySeq);\n+                    }\n+                }\n+            } catch (IllegalArgumentException e) {\n+                Log.warn(\"Unable to parse user configuration: \", e);\n+            }\n+        }\n+    }\n+\n+    private static String translateQuoted(String keySeq) {\n+        int i;\n+        String str = keySeq.substring(1, keySeq.length() - 1);\n+        StringBuilder sb = new StringBuilder();\n+        for (i = 0; i < str.length(); i++) {\n+            char c = str.charAt(i);\n+            if (c == '\\\\') {\n+                boolean ctrl = str.regionMatches(i, \"\\\\C-\", 0, 3) || str.regionMatches(i, \"\\\\M-\\\\C-\", 0, 6);\n+                boolean meta = str.regionMatches(i, \"\\\\M-\", 0, 3) || str.regionMatches(i, \"\\\\C-\\\\M-\", 0, 6);\n+                i += (meta ? 3 : 0) + (ctrl ? 3 : 0) + (!meta && !ctrl ? 1 : 0);\n+                if (i >= str.length()) {\n+                    break;\n+                }\n+                c = str.charAt(i);\n+                if (meta) {\n+                    sb.append(\"\\u001b\");\n+                }\n+                if (ctrl) {\n+                    c = c == '?' ? 0x7f : (char) (Character.toUpperCase(c) & 0x1f);\n+                }\n+                if (!meta && !ctrl) {\n+                    switch (c) {\n+                        case 'a':\n+                            c = 0x07;\n+                            break;\n+                        case 'b':\n+                            c = '\\b';\n+                            break;\n+                        case 'd':\n+                            c = 0x7f;\n+                            break;\n+                        case 'e':\n+                            c = 0x1b;\n+                            break;\n+                        case 'f':\n+                            c = '\\f';\n+                            break;\n+                        case 'n':\n+                            c = '\\n';\n+                            break;\n+                        case 'r':\n+                            c = '\\r';\n+                            break;\n+                        case 't':\n+                            c = '\\t';\n+                            break;\n+                        case 'v':\n+                            c = 0x0b;\n+                            break;\n+                        case '\\\\':\n+                            c = '\\\\';\n+                            break;\n+                        case '0':\n+                        case '1':\n+                        case '2':\n+                        case '3':\n+                        case '4':\n+                        case '5':\n+                        case '6':\n+                        case '7':\n+                            c = 0;\n+                            for (int j = 0; j < 3; j++, i++) {\n+                                if (i >= str.length()) {\n+                                    break;\n+                                }\n+                                int k = Character.digit(str.charAt(i), 8);\n+                                if (k < 0) {\n+                                    break;\n+                                }\n+                                c = (char) (c * 8 + k);\n+                            }\n+                            c &= 0xFF;\n+                            break;\n+                        case 'x':\n+                            i++;\n+                            c = 0;\n+                            for (int j = 0; j < 2; j++, i++) {\n+                                if (i >= str.length()) {\n+                                    break;\n+                                }\n+                                int k = Character.digit(str.charAt(i), 16);\n+                                if (k < 0) {\n+                                    break;\n+                                }\n+                                c = (char) (c * 16 + k);\n+                            }\n+                            c &= 0xFF;\n+                            break;\n+                        case 'u':\n+                            i++;\n+                            c = 0;\n+                            for (int j = 0; j < 4; j++, i++) {\n+                                if (i >= str.length()) {\n+                                    break;\n+                                }\n+                                int k = Character.digit(str.charAt(i), 16);\n+                                if (k < 0) {\n+                                    break;\n+                                }\n+                                c = (char) (c * 16 + k);\n+                            }\n+                            break;\n+                    }\n+                }\n+                sb.append(c);\n+            } else {\n+                sb.append(c);\n+            }\n+        }\n+        return sb.toString();\n+    }\n+\n+    private static char getKeyFromName(String name) {\n+        if (\"DEL\".equalsIgnoreCase(name) || \"Rubout\".equalsIgnoreCase(name)) {\n+            return 0x7f;\n+        } else if (\"ESC\".equalsIgnoreCase(name) || \"Escape\".equalsIgnoreCase(name)) {\n+            return '\\033';\n+        } else if (\"LFD\".equalsIgnoreCase(name) || \"NewLine\".equalsIgnoreCase(name)) {\n+            return '\\n';\n+        } else if (\"RET\".equalsIgnoreCase(name) || \"Return\".equalsIgnoreCase(name)) {\n+            return '\\r';\n+        } else if (\"SPC\".equalsIgnoreCase(name) || \"Space\".equalsIgnoreCase(name)) {\n+            return ' ';\n+        } else if (\"Tab\".equalsIgnoreCase(name)) {\n+            return '\\t';\n+        } else {\n+            return name.charAt(0);\n+        }\n+    }\n+\n+    static void setVar(LineReader reader, String key, String val) {\n+        if (LineReader.KEYMAP.equalsIgnoreCase(key)) {\n+            reader.setKeyMap(val);\n+            return;\n+        }\n+\n+        for (LineReader.Option option : LineReader.Option.values()) {\n+            if (option.name().toLowerCase(Locale.ENGLISH).replace('_', '-').equals(val)) {\n+                if (\"on\".equalsIgnoreCase(val)) {\n+                    reader.setOpt(option);\n+                } else if (\"off\".equalsIgnoreCase(val)) {\n+                    reader.unsetOpt(option);\n+                }\n+                return;\n+            }\n+        }\n+\n+        reader.setVariable(key, val);\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/InputRC.java","additions":394,"deletions":0,"binary":false,"changes":394,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/KillRing.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2022, the original author or authors.\n+ * Copyright (c) 2002-2023, the original author(s).\n@@ -21,0 +21,3 @@\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n@@ -59,0 +62,1 @@\n+import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_DISABLE_ALTERNATE_CHARSET;\n@@ -69,2 +73,1 @@\n-public class LineReaderImpl implements LineReader, Flushable\n-{\n+public class LineReaderImpl implements LineReader, Flushable {\n@@ -73,0 +76,4 @@\n+    \/**\n+     * @deprecated use {@link #DEFAULT_TAB_WIDTH} and {@link #getTabWidth()}\n+     *\/\n+    @Deprecated\n@@ -75,0 +82,1 @@\n+    public static final int DEFAULT_TAB_WIDTH = 4;\n@@ -81,5 +89,5 @@\n-    public static final int    DEFAULT_LIST_MAX = 100;\n-    public static final int    DEFAULT_MENU_LIST_MAX = Integer.MAX_VALUE;\n-    public static final int    DEFAULT_ERRORS = 2;\n-    public static final long   DEFAULT_BLINK_MATCHING_PAREN = 500L;\n-    public static final long   DEFAULT_AMBIGUOUS_BINDING = 1000L;\n+    public static final int DEFAULT_LIST_MAX = 100;\n+    public static final int DEFAULT_MENU_LIST_MAX = Integer.MAX_VALUE;\n+    public static final int DEFAULT_ERRORS = 2;\n+    public static final long DEFAULT_BLINK_MATCHING_PAREN = 500L;\n+    public static final long DEFAULT_AMBIGUOUS_BINDING = 1000L;\n@@ -99,3 +107,4 @@\n-    public static final int    DEFAULT_INDENTATION = 0;\n-    public static final int    DEFAULT_FEATURES_MAX_BUFFER_SIZE = 1000;\n-    public static final int    DEFAULT_SUGGESTIONS_MIN_BUFFER_SIZE = 1;\n+    public static final int DEFAULT_INDENTATION = 0;\n+    public static final int DEFAULT_FEATURES_MAX_BUFFER_SIZE = 1000;\n+    public static final int DEFAULT_SUGGESTIONS_MIN_BUFFER_SIZE = 1;\n+    public static final String DEFAULT_SYSTEM_PROPERTY_PREFIX = \"org.jline.reader.props.\";\n@@ -112,0 +121,1 @@\n+    public static final int DEFAULT_MAX_REPEAT_COUNT = 9999;\n@@ -200,1 +210,0 @@\n-\n@@ -204,1 +213,0 @@\n-\n@@ -209,0 +217,1 @@\n+\n@@ -215,0 +224,1 @@\n+\n@@ -221,0 +231,1 @@\n+\n@@ -235,1 +246,1 @@\n-    protected UndoTree<Buffer> undo = new UndoTree<>(this::setBuffer);\n+    protected UndoTree<Buffer> undo;\n@@ -245,1 +256,1 @@\n-    protected State   state = State.DONE;\n+    protected State state = State.DONE;\n@@ -281,1 +292,4 @@\n-    int candidateStartPosition = 0;\n+    protected int candidateStartPosition = 0;\n+\n+    protected String alternateIn;\n+    protected String alternateOut;\n@@ -291,0 +305,1 @@\n+    @SuppressWarnings(\"this-escape\")\n@@ -303,0 +318,11 @@\n+        String prefix = getString(SYSTEM_PROPERTY_PREFIX, DEFAULT_SYSTEM_PROPERTY_PREFIX);\n+        if (prefix != null) {\n+            Properties sysProps = System.getProperties();\n+            for (String s : sysProps.stringPropertyNames()) {\n+                if (s.startsWith(prefix)) {\n+                    String key = s.substring(prefix.length());\n+                    InputRC.setVar(this, key, sysProps.getProperty(s));\n+                }\n+            }\n+        }\n+\n@@ -304,0 +330,4 @@\n+        if (!Boolean.getBoolean(PROP_DISABLE_ALTERNATE_CHARSET)) {\n+            this.alternateIn = Curses.tputs(terminal.getStringCapability(Capability.enter_alt_charset_mode));\n+            this.alternateOut = Curses.tputs(terminal.getStringCapability(Capability.exit_alt_charset_mode));\n+        }\n@@ -305,0 +335,1 @@\n+        undo = new UndoTree<>(this::setBuffer);\n@@ -308,0 +339,13 @@\n+\n+        String inputRc = getString(INPUT_RC_FILE_NAME, null);\n+        if (inputRc != null) {\n+            Path inputRcPath = Paths.get(inputRc);\n+            if (Files.exists(inputRcPath)) {\n+                try (InputStream is = Files.newInputStream(inputRcPath)) {\n+                    InputRC.configure(this, is);\n+                } catch (Exception e) {\n+                    Log.debug(\"Error reading inputRc config file: \", inputRc, e);\n+                }\n+            }\n+        }\n+\n@@ -492,1 +536,2 @@\n-    public String readLine(String prompt, Character mask, String buffer) throws UserInterruptException, EndOfFileException {\n+    public String readLine(String prompt, Character mask, String buffer)\n+            throws UserInterruptException, EndOfFileException {\n@@ -506,1 +551,2 @@\n-    public String readLine(String prompt, String rightPrompt, Character mask, String buffer) throws UserInterruptException, EndOfFileException {\n+    public String readLine(String prompt, String rightPrompt, Character mask, String buffer)\n+            throws UserInterruptException, EndOfFileException {\n@@ -520,1 +566,2 @@\n-    public String readLine(String prompt, String rightPrompt, MaskingCallback maskingCallback, String buffer) throws UserInterruptException, EndOfFileException {\n+    public String readLine(String prompt, String rightPrompt, MaskingCallback maskingCallback, String buffer)\n+            throws UserInterruptException, EndOfFileException {\n@@ -621,11 +668,3 @@\n-                    if (isSet(Option.AUTO_FRESH_LINE))\n-                        callWidget(FRESH_LINE);\n-                    if (isSet(Option.MOUSE))\n-                        terminal.trackMouse(Terminal.MouseTracking.Normal);\n-                    if (isSet(Option.BRACKETED_PASTE))\n-                        terminal.writer().write(BRACKETED_PASTE_ON);\n-                } else {\n-                    \/\/ For dumb terminals, we need to make sure that CR are ignored\n-                    Attributes attr = new Attributes(originalAttributes);\n-                    attr.setInputFlag(Attributes.InputFlag.IGNCR, true);\n-                    terminal.setAttributes(attr);\n+                    if (isSet(Option.AUTO_FRESH_LINE)) callWidget(FRESH_LINE);\n+                    if (isSet(Option.MOUSE)) terminal.trackMouse(Terminal.MouseTracking.Normal);\n+                    if (isSet(Option.BRACKETED_PASTE)) terminal.writer().write(BRACKETED_PASTE_ON);\n@@ -636,2 +675,1 @@\n-                if (!isSet(Option.DISABLE_UNDO))\n-                    undo.newState(buf.copy());\n+                if (!isSet(Option.DISABLE_UNDO)) undo.newState(buf.copy());\n@@ -657,1 +695,2 @@\n-                if (buf.length() == 0 && getLastBinding().charAt(0) == originalAttributes.getControlChar(ControlChar.VEOF)) {\n+                if (buf.length() == 0\n+                        && getLastBinding().charAt(0) == originalAttributes.getControlChar(ControlChar.VEOF)) {\n@@ -678,1 +717,3 @@\n-                    Buffer copy = buf.length() <= getInt(FEATURES_MAX_BUFFER_SIZE, DEFAULT_FEATURES_MAX_BUFFER_SIZE) ? buf.copy() : null;\n+                    Buffer copy = buf.length() <= getInt(FEATURES_MAX_BUFFER_SIZE, DEFAULT_FEATURES_MAX_BUFFER_SIZE)\n+                            ? buf.copy()\n+                            : null;\n@@ -683,1 +724,4 @@\n-                    if (!isSet(Option.DISABLE_UNDO) && !isUndo && copy != null && buf.length() <= getInt(FEATURES_MAX_BUFFER_SIZE, DEFAULT_FEATURES_MAX_BUFFER_SIZE)\n+                    if (!isSet(Option.DISABLE_UNDO)\n+                            && !isUndo\n+                            && copy != null\n+                            && buf.length() <= getInt(FEATURES_MAX_BUFFER_SIZE, DEFAULT_FEATURES_MAX_BUFFER_SIZE)\n@@ -721,2 +765,2 @@\n-        }\n-        finally {\n+        } finally {\n+            AtomicBoolean interrupted = new AtomicBoolean(Thread.interrupted());\n@@ -728,0 +772,5 @@\n+                Terminal.SignalHandler tmpHandler = terminal.handle(Signal.INT, s -> interrupted.set(true));\n+                if (previousIntrHandler == null) {\n+                    previousIntrHandler = tmpHandler;\n+                }\n+\n@@ -744,0 +793,3 @@\n+                if (interrupted.get()) {\n+                    Thread.currentThread().interrupt();\n+                }\n@@ -749,2 +801,1 @@\n-        return Terminal.TYPE_DUMB.equals(terminal.getType())\n-                || Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+        return Terminal.TYPE_DUMB.equals(terminal.getType()) || Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n@@ -760,2 +811,1 @@\n-        if (isSet(Option.DELAY_LINE_WRAP))\n-            display.setDelayLineWrap(true);\n+        if (isSet(Option.DELAY_LINE_WRAP)) display.setDelayLineWrap(true);\n@@ -968,2 +1018,4 @@\n-            if (!KILL_LINE.equals(ref) && !KILL_WHOLE_LINE.equals(ref)\n-                    && !BACKWARD_KILL_WORD.equals(ref) && !KILL_WORD.equals(ref)) {\n+            if (!KILL_LINE.equals(ref)\n+                    && !KILL_WHOLE_LINE.equals(ref)\n+                    && !BACKWARD_KILL_WORD.equals(ref)\n+                    && !KILL_WORD.equals(ref)) {\n@@ -1086,1 +1138,1 @@\n-        Constructor<?> ctor = Class.forName(\"jdk.internal.org.jline.builtins.Nano\").getConstructor(Terminal.class, File.class);\n+        Constructor<?> ctor = Class.forName(\"org.jline.builtins.Nano\").getConstructor(Terminal.class, File.class);\n@@ -1100,0 +1152,4 @@\n+    protected int getTabWidth() {\n+        return getInt(LineReader.TAB_WIDTH, DEFAULT_TAB_WIDTH);\n+    }\n+\n@@ -1140,1 +1196,1 @@\n-        if (historyLine != null && historyLine.length() > 0 ) {\n+        if (historyLine != null && historyLine.length() > 0) {\n@@ -1146,1 +1202,1 @@\n-    protected void handleSignal(Signal signal) {\n+    protected synchronized void handleSignal(Signal signal) {\n@@ -1149,0 +1205,2 @@\n+            size.copy(terminal.getBufferSize());\n+            display.resize(size.getRows(), size.getColumns());\n@@ -1151,1 +1209,2 @@\n-                status.hardReset();\n+                status.resize(size);\n+                status.reset();\n@@ -1153,4 +1212,3 @@\n-            size.copy(terminal.getBufferSize());\n-            display.resize(size.getRows(), size.getColumns());\n-            \/\/ restores prompt but also prevents scrolling in consoleZ, see #492\n-            \/\/ redrawLine();\n+            terminal.puts(Capability.carriage_return);\n+            terminal.puts(Capability.clr_eos);\n+            redrawLine();\n@@ -1158,2 +1216,1 @@\n-        }\n-        else if (signal == Signal.CONT) {\n+        } else if (signal == Signal.CONT) {\n@@ -1203,2 +1260,1 @@\n-        this.prompt = (prompt == null ? AttributedString.EMPTY\n-                       : expandPromptPattern(prompt, 0, \"\", 0));\n+        this.prompt = (prompt == null ? AttributedString.EMPTY : expandPromptPattern(prompt, 0, \"\", 0));\n@@ -1208,2 +1264,1 @@\n-        this.rightPrompt = (rightPrompt == null ? AttributedString.EMPTY\n-                            : expandPromptPattern(rightPrompt, 0, \"\", 0));\n+        this.rightPrompt = (rightPrompt == null ? AttributedString.EMPTY : expandPromptPattern(rightPrompt, 0, \"\", 0));\n@@ -1236,1 +1291,1 @@\n-    protected String viDeleteChangeYankToRemap (String op) {\n+    protected String viDeleteChangeYankToRemap(String op) {\n@@ -1295,1 +1350,0 @@\n-\n@@ -1335,1 +1389,0 @@\n-\n@@ -1368,3 +1421,1 @@\n-                while (buf.cursor() < buf.length()\n-                        && !isViAlphaNum(buf.currChar())\n-                        && !isWhitespace(buf.currChar())) {\n+                while (buf.cursor() < buf.length() && !isViAlphaNum(buf.currChar()) && !isWhitespace(buf.currChar())) {\n@@ -1378,3 +1429,1 @@\n-            while (buf.cursor() < buf.length()\n-                    && nl < 2\n-                    && isWhitespace(buf.currChar())) {\n+            while (buf.cursor() < buf.length() && nl < 2 && isWhitespace(buf.currChar())) {\n@@ -1400,3 +1449,1 @@\n-            while (buf.cursor() < buf.length()\n-                    && nl < 2\n-                    && isWhitespace(buf.currChar())) {\n+            while (buf.cursor() < buf.length() && nl < 2 && isWhitespace(buf.currChar())) {\n@@ -1454,1 +1501,3 @@\n-                    while (buf.cursor() < buf.length() && !isViAlphaNum(buf.nextChar()) && !isWhitespace(buf.nextChar())) {\n+                    while (buf.cursor() < buf.length()\n+                            && !isViAlphaNum(buf.nextChar())\n+                            && !isWhitespace(buf.nextChar())) {\n@@ -1723,3 +1772,1 @@\n-                buf.currChar(first\n-                        ? Character.toUpperCase(buf.currChar())\n-                        : Character.toLowerCase(buf.currChar()));\n+                buf.currChar(first ? Character.toUpperCase(buf.currChar()) : Character.toLowerCase(buf.currChar()));\n@@ -1813,1 +1860,2 @@\n-            while (end1 < lend && !isDelimiter(buf.atChar(++end1)));\n+            while (end1 < lend && !isDelimiter(buf.atChar(++end1)))\n+                ;\n@@ -1822,1 +1870,2 @@\n-                    while (isDelimiter(buf.atChar(++sta2)));\n+                    while (isDelimiter(buf.atChar(++sta2)))\n+                        ;\n@@ -1824,1 +1873,2 @@\n-                    while (end2 < lend && !isDelimiter(buf.atChar(++end2)));\n+                    while (end2 < lend && !isDelimiter(buf.atChar(++end2)))\n+                        ;\n@@ -1833,1 +1883,2 @@\n-                while (sta2 < lend && isDelimiter(buf.atChar(++sta2)));\n+                while (sta2 < lend && isDelimiter(buf.atChar(++sta2)))\n+                    ;\n@@ -1846,1 +1897,2 @@\n-                    while (end2 < lend && !isDelimiter(buf.atChar(++end2))) ;\n+                    while (end2 < lend && !isDelimiter(buf.atChar(++end2)))\n+                        ;\n@@ -1850,2 +1902,4 @@\n-                String res = buf.substring(0, sta1) + buf.substring(sta2, end2)\n-                        + buf.substring(end1, sta2) + buf.substring(sta1, end1)\n+                String res = buf.substring(0, sta1)\n+                        + buf.substring(sta2, end2)\n+                        + buf.substring(end1, sta2)\n+                        + buf.substring(sta1, end1)\n@@ -1857,2 +1911,4 @@\n-                String res = buf.substring(0, sta2) + buf.substring(sta1, end1)\n-                        + buf.substring(end2, sta1) + buf.substring(sta2, end2)\n+                String res = buf.substring(0, sta2)\n+                        + buf.substring(sta1, end1)\n+                        + buf.substring(end2, sta1)\n+                        + buf.substring(sta2, end2)\n@@ -1991,1 +2047,2 @@\n-            } while (buf.cursor() > 0 && buf.cursor() < buf.length()\n+            } while (buf.cursor() > 0\n+                    && buf.cursor() < buf.length()\n@@ -1994,2 +2051,1 @@\n-            if (buf.cursor() <= 0 || buf.cursor() >= buf.length()\n-                    || buf.currChar() == '\\n') {\n+            if (buf.cursor() <= 0 || buf.cursor() >= buf.length() || buf.currChar() == '\\n') {\n@@ -2214,1 +2270,1 @@\n-        int pos        = buf.cursor();\n+        int pos = buf.cursor();\n@@ -2220,3 +2276,3 @@\n-        int type       = getBracketType(buf.atChar(pos));\n-        int move       = (type < 0) ? -1 : 1;\n-        int count      = 1;\n+        int type = getBracketType(buf.atChar(pos));\n+        int move = (type < 0) ? -1 : 1;\n+        int count = 1;\n@@ -2224,2 +2280,1 @@\n-        if (type == 0)\n-            return false;\n+        if (type == 0) return false;\n@@ -2238,2 +2293,1 @@\n-            }\n-            else if (curType == -type) {\n+            } else if (curType == -type) {\n@@ -2248,2 +2302,1 @@\n-        if (move > 0 && isInViMoveOperation())\n-            ++pos;\n+        if (move > 0 && isInViMoveOperation()) ++pos;\n@@ -2262,1 +2315,1 @@\n-    protected int getBracketType (int ch) {\n+    protected int getBracketType(int ch) {\n@@ -2264,6 +2317,12 @@\n-            case '[': return  1;\n-            case ']': return -1;\n-            case '{': return  2;\n-            case '}': return -2;\n-            case '(': return  3;\n-            case ')': return -3;\n+            case '[':\n+                return 1;\n+            case ']':\n+                return -1;\n+            case '{':\n+                return 2;\n+            case '}':\n+                return -2;\n+            case '(':\n+                return 3;\n+            case ')':\n+                return -3;\n@@ -2334,1 +2393,1 @@\n-\/\/            state = State.INTERRUPT;\n+            \/\/            state = State.INTERRUPT;\n@@ -2381,0 +2440,4 @@\n+        int maxRepeatCount = getInt(MAX_REPEAT_COUNT, DEFAULT_MAX_REPEAT_COUNT);\n+        if (repeatCount > maxRepeatCount) {\n+            throw new IllegalArgumentException(\"digit argument should be less than \" + maxRepeatCount);\n+        }\n@@ -2441,1 +2504,2 @@\n-        while (buf.move(-1) == -1 && buf.prevChar() != '\\n') ;\n+        while (buf.move(-1) == -1 && buf.prevChar() != '\\n')\n+            ;\n@@ -2444,1 +2508,2 @@\n-            while (buf.move(1) == 1 && buf.prevChar() != '\\n') ;\n+            while (buf.move(1) == 1 && buf.prevChar() != '\\n')\n+                ;\n@@ -2557,2 +2622,4 @@\n-    static class Pair<U,V> {\n-        final U u; final V v;\n+    static class Pair<U, V> {\n+        final U u;\n+        final V v;\n+\n@@ -2563,0 +2630,1 @@\n+\n@@ -2566,0 +2634,1 @@\n+\n@@ -2578,1 +2647,2 @@\n-                .codePoints().forEach(c -> bind(terminators, ACCEPT_LINE, new String(Character.toChars(c))));\n+                .codePoints()\n+                .forEach(c -> bind(terminators, ACCEPT_LINE, new String(Character.toChars(c))));\n@@ -2586,2 +2656,2 @@\n-                        + (searchBackward ? \"bck-i-search\" : \"fwd-i-search\")\n-                        + \": \" + searchTerm + \"_\");\n+                + (searchBackward ? \"bck-i-search\" : \"fwd-i-search\")\n+                + \": \" + searchTerm + \"_\");\n@@ -2633,2 +2703,3 @@\n-                    Pattern pat = Pattern.compile(pattern, caseInsensitive ? Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n-                                                                           : Pattern.UNICODE_CASE);\n+                    Pattern pat = Pattern.compile(\n+                            pattern,\n+                            caseInsensitive ? Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE : Pattern.UNICODE_CASE);\n@@ -2644,1 +2715,5 @@\n-                                    Spliterators.spliteratorUnknownSize(history.reverseIterator(searchIndex < 0 ? history.last() : searchIndex - 1), Spliterator.ORDERED), false)\n+                                            Spliterators.spliteratorUnknownSize(\n+                                                    history.reverseIterator(\n+                                                            searchIndex < 0 ? history.last() : searchIndex - 1),\n+                                                    Spliterator.ORDERED),\n+                                            false)\n@@ -2657,1 +2732,5 @@\n-                                    Spliterators.spliteratorUnknownSize(history.iterator((searchIndex < 0 ? history.last() : searchIndex) + 1), Spliterator.ORDERED), false)\n+                                            Spliterators.spliteratorUnknownSize(\n+                                                    history.iterator(\n+                                                            (searchIndex < 0 ? history.last() : searchIndex) + 1),\n+                                                    Spliterator.ORDERED),\n+                                            false)\n@@ -2717,1 +2796,4 @@\n-                sb.append(\"[\").append(Character.toLowerCase(c)).append(Character.toUpperCase(c)).append(\"]\");\n+                sb.append(\"[\")\n+                        .append(Character.toLowerCase(c))\n+                        .append(Character.toUpperCase(c))\n+                        .append(\"]\");\n@@ -2745,2 +2827,1 @@\n-        if (historyBuffer == null || buf.length() == 0\n-                || !buf.toString().equals(history.current())) {\n+        if (historyBuffer == null || buf.length() == 0 || !buf.toString().equals(history.current())) {\n@@ -2794,2 +2875,1 @@\n-        if (historyBuffer == null || buf.length() == 0\n-                || !buf.toString().equals(history.current())) {\n+        if (historyBuffer == null || buf.length() == 0 || !buf.toString().equals(history.current())) {\n@@ -2987,1 +3067,1 @@\n-        int indent = getInt(INDENTATION, DEFAULT_INDENTATION)*nb;\n+        int indent = getInt(INDENTATION, DEFAULT_INDENTATION) * nb;\n@@ -3020,1 +3100,0 @@\n-\n@@ -3111,2 +3190,1 @@\n-        return upLine()\n-                || upHistory() && viFirstNonBlank();\n+        return upLine() || upHistory() && viFirstNonBlank();\n@@ -3116,2 +3194,1 @@\n-        return downLine()\n-                || downHistory() && viFirstNonBlank();\n+        return downLine() || downHistory() && viFirstNonBlank();\n@@ -3178,2 +3255,1 @@\n-        return viChange(buf.cursor(), buf.length())\n-                && setKeyMap(VIINS);\n+        return viChange(buf.cursor(), buf.length()) && setKeyMap(VIINS);\n@@ -3202,1 +3278,2 @@\n-            while (buf.move(-1) == -1 && buf.prevChar() != '\\n') ;\n+            while (buf.move(-1) == -1 && buf.prevChar() != '\\n')\n+                ;\n@@ -3256,1 +3333,2 @@\n-            while (buf.move(-1) == -1 && buf.prevChar() != '\\n') ;\n+            while (buf.move(-1) == -1 && buf.prevChar() != '\\n')\n+                ;\n@@ -3263,1 +3341,2 @@\n-            while (buf.move(1) == 1 && buf.currChar() != '\\n') ;\n+            while (buf.move(1) == 1 && buf.currChar() != '\\n')\n+                ;\n@@ -3387,1 +3466,1 @@\n-        if (! isChange && startPos > 0 && startPos == buf.length()) {\n+        if (!isChange && startPos > 0 && startPos == buf.length()) {\n@@ -3427,1 +3506,2 @@\n-        while (buf.move(-1) == -1 && buf.prevChar() != '\\n') ;\n+        while (buf.move(-1) == -1 && buf.prevChar() != '\\n')\n+            ;\n@@ -3434,1 +3514,2 @@\n-        while (buf.move(1) == 1 && buf.currChar() != '\\n') ;\n+        while (buf.move(1) == 1 && buf.currChar() != '\\n')\n+            ;\n@@ -3446,1 +3527,2 @@\n-            while (buf.move(1) == 1 && buf.currChar() != '\\n');\n+            while (buf.move(1) == 1 && buf.currChar() != '\\n')\n+                ;\n@@ -3449,2 +3531,2 @@\n-            buf.move(- yankBuffer.length());\n-        } else if (yankBuffer.length () != 0) {\n+            buf.move(-yankBuffer.length());\n+        } else if (yankBuffer.length() != 0) {\n@@ -3464,1 +3546,2 @@\n-            while (buf.move(-1) == -1 && buf.prevChar() != '\\n');\n+            while (buf.move(-1) == -1 && buf.prevChar() != '\\n')\n+                ;\n@@ -3466,2 +3549,2 @@\n-            buf.move(- yankBuffer.length());\n-        } else if (yankBuffer.length () != 0) {\n+            buf.move(-yankBuffer.length());\n+        } else if (yankBuffer.length() != 0) {\n@@ -3684,1 +3767,1 @@\n-\/\/        addBuiltinWidget(widgets, QUIT, this::quit);\n+        \/\/        addBuiltinWidget(widgets, QUIT, this::quit);\n@@ -3777,0 +3860,1 @@\n+\n@@ -3800,3 +3884,0 @@\n-                if (terminal.getType().startsWith(AbstractWindowsTerminal.TYPE_WINDOWS)) {\n-                    status.resize();\n-                }\n@@ -3807,1 +3888,1 @@\n-                AttributedStringBuilder sb = new AttributedStringBuilder().tabs(TAB_WIDTH);\n+                AttributedStringBuilder sb = new AttributedStringBuilder().tabs(getTabWidth());\n@@ -3880,1 +3961,1 @@\n-                AttributedStringBuilder sb = new AttributedStringBuilder().tabs(TAB_WIDTH);\n+                AttributedStringBuilder sb = new AttributedStringBuilder().tabs(getTabWidth());\n@@ -3887,1 +3968,2 @@\n-                List<AttributedString> promptLines = sb.columnSplitLength(size.getColumns(), false, display.delayLineWrap());\n+                List<AttributedString> promptLines =\n+                        sb.columnSplitLength(size.getColumns(), false, display.delayLineWrap());\n@@ -3907,1 +3989,1 @@\n-                if (lineId  > cursorNewLinesId) {\n+                if (lineId > cursorNewLinesId) {\n@@ -3952,4 +4034,3 @@\n-        for (char c: buffer.replace(\"\\\\\", \"\\\\\\\\\").toCharArray()) {\n-            if (c == '(' || c == ')' || c == '[' || c == ']' || c == '{' || c == '}' || c == '^' || c == '*'\n-                     || c == '$' || c == '.' || c == '?' || c == '+' || c == '|' || c == '<' || c == '>' || c == '!'\n-                     || c == '-') {\n+        for (char c : buffer.replace(\"\\\\\", \"\\\\\\\\\").toCharArray()) {\n+            if (c == '(' || c == ')' || c == '[' || c == ']' || c == '{' || c == '}' || c == '^' || c == '*' || c == '$'\n+                    || c == '.' || c == '?' || c == '+' || c == '|' || c == '<' || c == '>' || c == '!' || c == '-') {\n@@ -3987,1 +4068,1 @@\n-        AttributedStringBuilder full = new AttributedStringBuilder().tabs(TAB_WIDTH);\n+        AttributedStringBuilder full = new AttributedStringBuilder().tabs(getTabWidth());\n@@ -4043,1 +4124,2 @@\n-        if (highlighter != null && !isSet(Option.DISABLE_HIGHLIGHTER)\n+        if (highlighter != null\n+                && !isSet(Option.DISABLE_HIGHLIGHTER)\n@@ -4050,2 +4132,1 @@\n-    private AttributedString expandPromptPattern(String pattern, int padToWidth,\n-                                                 String message, int line) {\n+    private AttributedString expandPromptPattern(String pattern, int padToWidth, String message, int line) {\n@@ -4068,1 +4149,2 @@\n-                decode: while (true) {\n+                decode:\n+                while (true) {\n@@ -4076,1 +4158,1 @@\n-                                astr = AttributedString.fromAnsi(str);\n+                                astr = fromAnsi(str);\n@@ -4099,2 +4181,1 @@\n-                            if (message != null)\n-                                sb.append(message);\n+                            if (message != null) sb.append(message);\n@@ -4103,2 +4184,1 @@\n-                            if (countSeen && count >= 0)\n-                                padToWidth = count;\n+                            if (countSeen && count >= 0) padToWidth = count;\n@@ -4143,2 +4223,1 @@\n-            } else\n-                sb.append(ch);\n+            } else sb.append(ch);\n@@ -4150,3 +4229,2 @@\n-            while (--padCount >= 0)\n-                sb.insert(padPos, (char) padChar); \/\/ FIXME if wide\n-            parts.set(padPartIndex, AttributedString.fromAnsi(sb.toString()));\n+            while (--padCount >= 0) sb.insert(padPos, (char) padChar); \/\/ FIXME if wide\n+            parts.set(padPartIndex, fromAnsi(sb.toString()));\n@@ -4157,0 +4235,4 @@\n+    private AttributedString fromAnsi(String str) {\n+        return AttributedString.fromAnsi(str, Collections.singletonList(0), alternateIn, alternateOut);\n+    }\n+\n@@ -4161,1 +4243,2 @@\n-    private AttributedString insertSecondaryPrompts(AttributedString strAtt, List<AttributedString> prompts, boolean computePrompts) {\n+    private AttributedString insertSecondaryPrompts(\n+            AttributedString strAtt, List<AttributedString> prompts, boolean computePrompts) {\n@@ -4174,1 +4257,3 @@\n-                width = new TerminalLine(prompt.toString(), 0, size.getColumns()).getEndLine().length();\n+                width = new TerminalLine(prompt.toString(), 0, size.getColumns())\n+                        .getEndLine()\n+                        .length();\n@@ -4230,2 +4315,1 @@\n-        boolean endsWithNl = line.length() > 0\n-            && line.charAt(line.length() - 1) == '\\n';\n+        boolean endsWithNl = line.length() > 0 && line.charAt(line.length() - 1) == '\\n';\n@@ -4233,2 +4317,1 @@\n-        int nb = size.getColumns() - width\n-            - (line.columnLength() + (endsWithNl ? 1 : 0));\n+        int nb = size.getColumns() - width - (line.columnLength() + (endsWithNl ? 1 : 0));\n@@ -4256,2 +4339,2 @@\n-                    && getLastBinding().equals(\"\\t\")\n-                    && buf.toString().matches(\"(^|[\\\\s\\\\S]*\\n)[\\r\\n\\t ]*\");\n+                && getLastBinding().equals(\"\\t\")\n+                && buf.toString().matches(\"(^|[\\\\s\\\\S]*\\n)[\\r\\n\\t ]*\");\n@@ -4468,1 +4551,2 @@\n-                        if (SELF_INSERT.equals(ref) && chars.indexOf(getLastBinding().charAt(0)) >= 0\n+                        if (SELF_INSERT.equals(ref)\n+                                        && chars.indexOf(getLastBinding().charAt(0)) >= 0\n@@ -4536,0 +4620,1 @@\n+\n@@ -4539,0 +4624,1 @@\n+\n@@ -4542,0 +4628,1 @@\n+\n@@ -4545,0 +4632,1 @@\n+\n@@ -4548,0 +4636,1 @@\n+\n@@ -4551,0 +4640,1 @@\n+\n@@ -4554,0 +4644,1 @@\n+\n@@ -4557,0 +4648,1 @@\n+\n@@ -4567,2 +4659,1 @@\n-        return Comparator\n-                .comparing(Candidate::value, Comparator.comparingInt(wordDistance))\n+        return Comparator.comparing(Candidate::value, Comparator.comparingInt(wordDistance))\n@@ -4580,1 +4671,0 @@\n-\n@@ -4582,1 +4672,3 @@\n-        return Comparator.<String>comparingInt(s -> getOthersGroupName().equals(s) ? 1 : getOriginalGroupName().equals(s) ? -1 : 0)\n+        return Comparator.<String>comparingInt(s -> getOthersGroupName().equals(s)\n+                        ? 1\n+                        : getOriginalGroupName().equals(s) ? -1 : 0)\n@@ -4603,5 +4695,3 @@\n-                    String disp = candidates.stream()\n-                            .map(Candidate::displ)\n-                            .collect(Collectors.joining(\" \"));\n-                    possible.add(new Candidate(first.value(), disp, first.group(),\n-                            first.descr(), first.suffix(), null, first.complete()));\n+                    String disp = candidates.stream().map(Candidate::displ).collect(Collectors.joining(\" \"));\n+                    possible.add(new Candidate(\n+                            first.value(), disp, first.group(), first.descr(), first.suffix(), null, first.complete()));\n@@ -4639,2 +4729,4 @@\n-        AttributedString text = insertSecondaryPrompts(AttributedStringBuilder.append(prompt, buf.toString()), new ArrayList<>());\n-        return text.columnSplitLength(size.getColumns(), false, display.delayLineWrap()).size();\n+        AttributedString text =\n+                insertSecondaryPrompts(AttributedStringBuilder.append(prompt, buf.toString()), new ArrayList<>());\n+        return text.columnSplitLength(size.getColumns(), false, display.delayLineWrap())\n+                .size();\n@@ -4654,1 +4746,2 @@\n-        public MenuSupport(List<Candidate> original, String completed, BiFunction<CharSequence, Boolean, CharSequence> escaper) {\n+        public MenuSupport(\n+                List<Candidate> original, String completed, BiFunction<CharSequence, Boolean, CharSequence> escaper) {\n@@ -4717,1 +4810,1 @@\n-                axis = options%axis;\n+                axis = options % axis;\n@@ -4775,1 +4868,3 @@\n-                            .append(post).append(\"\\n\").toAttributedString();\n+                            .append(post)\n+                            .append(\"\\n\")\n+                            .toAttributedString();\n@@ -4788,1 +4883,2 @@\n-                        .style(AttributedStyle.DEFAULT).toAttributedString());\n+                        .style(AttributedStyle.DEFAULT)\n+                        .toAttributedString());\n@@ -4801,1 +4897,0 @@\n-\n@@ -4804,1 +4899,2 @@\n-    protected boolean doMenu(List<Candidate> original, String completed, BiFunction<CharSequence, Boolean, CharSequence> escaper) {\n+    protected boolean doMenu(\n+            List<Candidate> original, String completed, BiFunction<CharSequence, Boolean, CharSequence> escaper) {\n@@ -4857,1 +4953,1 @@\n-                                && chars.indexOf(getLastBinding().charAt(0)) >= 0\n+                                        && chars.indexOf(getLastBinding().charAt(0)) >= 0\n@@ -4869,2 +4965,2 @@\n-                                && completion.suffix() != null\n-                                && completion.suffix().startsWith(getLastBinding()))) {\n+                                    && completion.suffix() != null\n+                                    && completion.suffix().startsWith(getLastBinding()))) {\n@@ -4891,2 +4987,5 @@\n-    protected boolean doList(List<Candidate> possible\n-                           , String completed, boolean runLoop, BiFunction<CharSequence, Boolean, CharSequence> escaper) {\n+    protected boolean doList(\n+            List<Candidate> possible,\n+            String completed,\n+            boolean runLoop,\n+            BiFunction<CharSequence, Boolean, CharSequence> escaper) {\n@@ -4896,3 +4995,6 @@\n-    protected boolean doList(List<Candidate> possible\n-                           , String completed\n-                           , boolean runLoop, BiFunction<CharSequence, Boolean, CharSequence> escaper, boolean forSuggestion) {\n+    protected boolean doList(\n+            List<Candidate> possible,\n+            String completed,\n+            boolean runLoop,\n+            BiFunction<CharSequence, Boolean, CharSequence> escaper,\n+            boolean forSuggestion) {\n@@ -4904,2 +5006,4 @@\n-        AttributedString text = insertSecondaryPrompts(AttributedStringBuilder.append(prompt, buf.toString()), new ArrayList<>());\n-        int promptLines = text.columnSplitLength(size.getColumns(), false, display.delayLineWrap()).size();\n+        AttributedString text =\n+                insertSecondaryPrompts(AttributedStringBuilder.append(prompt, buf.toString()), new ArrayList<>());\n+        int promptLines = text.columnSplitLength(size.getColumns(), false, display.delayLineWrap())\n+                .size();\n@@ -4909,2 +5013,5 @@\n-        if (listMax > 0 && possible.size() >= listMax\n-                || lines >= size.getRows() - promptLines) {\n+        int possibleSize = possible.size();\n+        if (possibleSize == 0 || size.getRows() == 0) {\n+            return false;\n+        }\n+        if (listMax > 0 && possibleSize >= listMax || lines >= size.getRows() - promptLines) {\n@@ -4913,1 +5020,1 @@\n-                post = () -> new AttributedString(getAppName() + \": do you wish to see all \" + possible.size()\n+                post = () -> new AttributedString(getAppName() + \": do you wish to see all \" + possibleSize\n@@ -4933,2 +5040,1 @@\n-                completionMatcher.compile(options, false, new CompletingWord(current), caseInsensitive, 0\n-                        , null);\n+                completionMatcher.compile(options, false, new CompletingWord(current), caseInsensitive, 0, null);\n@@ -4947,2 +5053,4 @@\n-                AttributedString t = insertSecondaryPrompts(AttributedStringBuilder.append(prompt, buf.toString()), new ArrayList<>());\n-                int pl = t.columnSplitLength(size.getColumns(), false, display.delayLineWrap()).size();\n+                AttributedString t = insertSecondaryPrompts(\n+                        AttributedStringBuilder.append(prompt, buf.toString()), new ArrayList<>());\n+                int pl = t.columnSplitLength(size.getColumns(), false, display.delayLineWrap())\n+                        .size();\n@@ -4957,1 +5065,2 @@\n-                    List<AttributedString> ls = pr.post.columnSplitLength(size.getColumns(), false, display.delayLineWrap());\n+                    List<AttributedString> ls =\n+                            pr.post.columnSplitLength(size.getColumns(), false, display.delayLineWrap());\n@@ -5077,5 +5186,24 @@\n-    protected PostResult computePost(List<Candidate> possible, Candidate selection, List<Candidate> ordered, String completed) {\n-        return computePost(possible, selection, ordered, completed, display::wcwidth, size.getColumns(), isSet(Option.AUTO_GROUP), isSet(Option.GROUP), isSet(Option.LIST_ROWS_FIRST));\n-    }\n-\n-    protected PostResult computePost(List<Candidate> possible, Candidate selection, List<Candidate> ordered, String completed, Function<String, Integer> wcwidth, int width, boolean autoGroup, boolean groupName, boolean rowsFirst) {\n+    protected PostResult computePost(\n+            List<Candidate> possible, Candidate selection, List<Candidate> ordered, String completed) {\n+        return computePost(\n+                possible,\n+                selection,\n+                ordered,\n+                completed,\n+                display::wcwidth,\n+                size.getColumns(),\n+                isSet(Option.AUTO_GROUP),\n+                isSet(Option.GROUP),\n+                isSet(Option.LIST_ROWS_FIRST));\n+    }\n+\n+    protected PostResult computePost(\n+            List<Candidate> possible,\n+            Candidate selection,\n+            List<Candidate> ordered,\n+            String completed,\n+            Function<String, Integer> wcwidth,\n+            int width,\n+            boolean autoGroup,\n+            boolean groupName,\n+            boolean rowsFirst) {\n@@ -5083,1 +5211,0 @@\n-        boolean customOrder = possible.stream().anyMatch(c -> c.sort() != 0);\n@@ -5086,4 +5213,2 @@\n-            Map<String, Map<Object, Candidate>> sorted;\n-            sorted = groupComparator != null\n-                        ? new TreeMap<>(groupComparator)\n-                        : new LinkedHashMap<>();\n+            Map<String, List<Candidate>> sorted;\n+            sorted = groupComparator != null ? new TreeMap<>(groupComparator) : new LinkedHashMap<>();\n@@ -5092,2 +5217,2 @@\n-                sorted.computeIfAbsent(group != null ? group : \"\", s -> new LinkedHashMap<>())\n-                        .put((customOrder ? cand.sort() : cand.value()), cand);\n+                sorted.computeIfAbsent(group != null ? group : \"\", s -> new ArrayList<>())\n+                        .add(cand);\n@@ -5095,1 +5220,1 @@\n-            for (Map.Entry<String, Map<Object, Candidate>> entry : sorted.entrySet()) {\n+            for (Map.Entry<String, List<Candidate>> entry : sorted.entrySet()) {\n@@ -5103,1 +5228,3 @@\n-                strings.add(new ArrayList<>(entry.getValue().values()));\n+                List<Candidate> candidates = entry.getValue();\n+                Collections.sort(candidates);\n+                strings.add(candidates);\n@@ -5105,1 +5232,1 @@\n-                    ordered.addAll(entry.getValue().values());\n+                    ordered.addAll(candidates);\n@@ -5110,1 +5237,1 @@\n-            TreeMap<Object, Candidate> sorted = new TreeMap<>();\n+            List<Candidate> sorted = new ArrayList<>();\n@@ -5116,1 +5243,1 @@\n-                sorted.put((customOrder ? cand.sort() : cand.value()), cand);\n+                sorted.add(cand);\n@@ -5121,1 +5248,2 @@\n-            strings.add(new ArrayList<>(sorted.values()));\n+            Collections.sort(sorted);\n+            strings.add(sorted);\n@@ -5123,1 +5251,1 @@\n-                ordered.addAll(sorted.values());\n+                ordered.addAll(sorted);\n@@ -5166,2 +5294,4 @@\n-        List<String> values = cands.stream().map(c -> AttributedString.stripAnsi(c.displ()))\n-                .filter(c -> !c.matches(\"\\\\w+\") && c.length() > 1).collect(Collectors.toList());\n+        List<String> values = cands.stream()\n+                .map(c -> AttributedString.stripAnsi(c.displ()))\n+                .filter(c -> !c.matches(\"\\\\w+\") && c.length() > 1)\n+                .collect(Collectors.toList());\n@@ -5169,1 +5299,2 @@\n-        values.forEach(v -> v.substring(0, v.length() - 1).chars()\n+        values.forEach(v -> v.substring(0, v.length() - 1)\n+                .chars()\n@@ -5171,1 +5302,1 @@\n-                .forEach(c -> notDelimiters.add(Character.toString((char)c))));\n+                .forEach(c -> notDelimiters.add(Character.toString((char) c))));\n@@ -5182,2 +5313,1 @@\n-            if (buffer.substring(0, i).matches(\".*\\\\W\")\n-                    && !notDelimiters.contains(buffer.substring(i - 1, i))) {\n+            if (buffer.substring(0, i).matches(\".*\\\\W\") && !notDelimiters.contains(buffer.substring(i - 1, i))) {\n@@ -5192,1 +5322,7 @@\n-    protected PostResult toColumns(List<Object> items, Candidate selection, String completed, Function<String, Integer> wcwidth, int width, boolean rowsFirst) {\n+    protected PostResult toColumns(\n+            List<Object> items,\n+            Candidate selection,\n+            String completed,\n+            Function<String, Integer> wcwidth,\n+            int width,\n+            boolean rowsFirst) {\n@@ -5202,2 +5338,1 @@\n-            }\n-            else if (item instanceof List) {\n+            } else if (item instanceof List) {\n@@ -5221,1 +5356,4 @@\n-                    && listSize < Math.min(getInt(MENU_LIST_MAX, DEFAULT_MENU_LIST_MAX), visibleDisplayRows() - promptLines())) {\n+                    && listSize\n+                            < Math.min(\n+                                    getInt(MENU_LIST_MAX, DEFAULT_MENU_LIST_MAX),\n+                                    visibleDisplayRows() - promptLines())) {\n@@ -5254,2 +5392,10 @@\n-    protected void toColumns(Object items, int width, int maxWidth, AttributedStringBuilder sb, Candidate selection, String completed\n-                           , boolean rowsFirst, boolean doMenuList, int[] out) {\n+    protected void toColumns(\n+            Object items,\n+            int width,\n+            int maxWidth,\n+            AttributedStringBuilder sb,\n+            Candidate selection,\n+            String completed,\n+            boolean rowsFirst,\n+            boolean doMenuList,\n+            int[] out) {\n@@ -5308,2 +5454,2 @@\n-                        AttributedString left = AttributedString.fromAnsi(cand.displ());\n-                        AttributedString right = AttributedString.fromAnsi(cand.descr());\n+                        AttributedString left = fromAnsi(cand.displ());\n+                        AttributedString right = fromAnsi(cand.descr());\n@@ -5313,2 +5459,5 @@\n-                            int rem = maxWidth - (lw + MARGIN_BETWEEN_DISPLAY_AND_DESC\n-                                    + DESC_PREFIX.length() + DESC_SUFFIX.length());\n+                            int rem = maxWidth\n+                                    - (lw\n+                                            + MARGIN_BETWEEN_DISPLAY_AND_DESC\n+                                            + DESC_PREFIX.length()\n+                                            + DESC_SUFFIX.length());\n@@ -5318,2 +5467,1 @@\n-                                            right.columnSubSequence(0, rem - WCWidth.wcwidth('\\u2026')),\n-                                            \"\\u2026\");\n+                                        right.columnSubSequence(0, rem - WCWidth.wcwidth('\\u2026')), \"\\u2026\");\n@@ -5328,2 +5476,3 @@\n-                            if (left.toString().regionMatches(\n-                                    isSet(Option.CASE_INSENSITIVE), 0, completed, 0, completed.length())) {\n+                            if (left.toString()\n+                                    .regionMatches(\n+                                            isSet(Option.CASE_INSENSITIVE), 0, completed, 0, completed.length())) {\n@@ -5343,2 +5492,3 @@\n-                            if (left.toString().regionMatches(\n-                                    isSet(Option.CASE_INSENSITIVE), 0, completed, 0, completed.length())) {\n+                            if (left.toString()\n+                                    .regionMatches(\n+                                            isSet(Option.CASE_INSENSITIVE), 0, completed, 0, completed.length())) {\n@@ -5450,1 +5600,1 @@\n-        return AttributedString.fromAnsi(\"\\u001b[\" + str + \"m \").styleAt(0);\n+        return fromAnsi(\"\\u001b[\" + str + \"m \").styleAt(0);\n@@ -5480,2 +5630,1 @@\n-        }\n-        else if (!next && !history.previous()) {\n+        } else if (!next && !history.previous()) {\n@@ -5485,3 +5634,4 @@\n-        setBuffer(modifiedHistory.containsKey(history.index())\n-                    ? modifiedHistory.get(history.index())\n-                    : history.current());\n+        setBuffer(\n+                modifiedHistory.containsKey(history.index())\n+                        ? modifiedHistory.get(history.index())\n+                        : history.current());\n@@ -5518,1 +5668,0 @@\n-\n@@ -5728,2 +5877,1 @@\n-        if (event.getType() == MouseEvent.Type.Released\n-                && event.getButton() == MouseEvent.Button.Button1) {\n+        if (event.getType() == MouseEvent.Type.Released && event.getButton() == MouseEvent.Button.Button1) {\n@@ -5737,1 +5885,1 @@\n-            AttributedStringBuilder sb = new AttributedStringBuilder().tabs(TAB_WIDTH);\n+            AttributedStringBuilder sb = new AttributedStringBuilder().tabs(getTabWidth());\n@@ -5740,1 +5888,2 @@\n-            List<AttributedString> promptLines = sb.columnSplitLength(size.getColumns(), false, display.delayLineWrap());\n+            List<AttributedString> promptLines =\n+                    sb.columnSplitLength(size.getColumns(), false, display.delayLineWrap());\n@@ -5744,2 +5893,6 @@\n-            int pl0 = currentLine == 0 ? prompt.columnLength() : secondaryPrompts.get(currentLine - 1).columnLength();\n-            int pl1 = wantedLine == 0 ? prompt.columnLength() : secondaryPrompts.get(wantedLine - 1).columnLength();\n+            int pl0 = currentLine == 0\n+                    ? prompt.columnLength()\n+                    : secondaryPrompts.get(currentLine - 1).columnLength();\n+            int pl1 = wantedLine == 0\n+                    ? prompt.columnLength()\n+                    : secondaryPrompts.get(wantedLine - 1).columnLength();\n@@ -5817,2 +5970,1 @@\n-                bell_preference = getBoolean(PREFER_VISIBLE_BELL, false)\n-                        ? BellType.VISIBLE : BellType.AUDIBLE;\n+                bell_preference = getBoolean(PREFER_VISIBLE_BELL, false) ? BellType.VISIBLE : BellType.AUDIBLE;\n@@ -5822,2 +5974,1 @@\n-            if (terminal.puts(Capability.flash_screen)\n-                    || terminal.puts(Capability.bell)) {\n+            if (terminal.puts(Capability.flash_screen) || terminal.puts(Capability.bell)) {\n@@ -5872,2 +6023,1 @@\n-        return Character.isLetterOrDigit(c)\n-                || (c < 128 && wordchars.indexOf((char) c) >= 0);\n+        return Character.isLetterOrDigit(c) || (c < 128 && wordchars.indexOf((char) c) >= 0);\n@@ -5902,0 +6052,2 @@\n+        keyMaps.put(DUMB, dumb());\n+\n@@ -5912,2 +6064,3 @@\n-        \/\/ By default, link main to emacs\n-        keyMaps.put(MAIN, keyMaps.get(EMACS));\n+        \/\/ By default, link main to emacs unless the temrinal is dumb\n+        keyMaps.put(MAIN, keyMaps.get(isTerminalDumb() ? DUMB : EMACS));\n+\n@@ -5920,72 +6073,72 @@\n-        bind(emacs, SET_MARK_COMMAND,                       ctrl('@'));\n-        bind(emacs, BEGINNING_OF_LINE,                      ctrl('A'));\n-        bind(emacs, BACKWARD_CHAR,                          ctrl('B'));\n-        bind(emacs, DELETE_CHAR_OR_LIST,                    ctrl('D'));\n-        bind(emacs, END_OF_LINE,                            ctrl('E'));\n-        bind(emacs, FORWARD_CHAR,                           ctrl('F'));\n-        bind(emacs, SEND_BREAK,                             ctrl('G'));\n-        bind(emacs, BACKWARD_DELETE_CHAR,                   ctrl('H'));\n-        bind(emacs, EXPAND_OR_COMPLETE,                     ctrl('I'));\n-        bind(emacs, ACCEPT_LINE,                            ctrl('J'));\n-        bind(emacs, KILL_LINE,                              ctrl('K'));\n-        bind(emacs, CLEAR_SCREEN,                           ctrl('L'));\n-        bind(emacs, ACCEPT_LINE,                            ctrl('M'));\n-        bind(emacs, DOWN_LINE_OR_HISTORY,                   ctrl('N'));\n-        bind(emacs, ACCEPT_LINE_AND_DOWN_HISTORY,           ctrl('O'));\n-        bind(emacs, UP_LINE_OR_HISTORY,                     ctrl('P'));\n-        bind(emacs, HISTORY_INCREMENTAL_SEARCH_BACKWARD,    ctrl('R'));\n-        bind(emacs, HISTORY_INCREMENTAL_SEARCH_FORWARD,     ctrl('S'));\n-        bind(emacs, TRANSPOSE_CHARS,                        ctrl('T'));\n-        bind(emacs, KILL_WHOLE_LINE,                        ctrl('U'));\n-        bind(emacs, QUOTED_INSERT,                          ctrl('V'));\n-        bind(emacs, BACKWARD_KILL_WORD,                     ctrl('W'));\n-        bind(emacs, YANK,                                   ctrl('Y'));\n-        bind(emacs, CHARACTER_SEARCH,                       ctrl(']'));\n-        bind(emacs, UNDO,                                   ctrl('_'));\n-        bind(emacs, SELF_INSERT,                            range(\" -~\"));\n-        bind(emacs, INSERT_CLOSE_PAREN,                     \")\");\n-        bind(emacs, INSERT_CLOSE_SQUARE,                    \"]\");\n-        bind(emacs, INSERT_CLOSE_CURLY,                     \"}\");\n-        bind(emacs, BACKWARD_DELETE_CHAR,                   del());\n-        bind(emacs, VI_MATCH_BRACKET,                       translate(\"^X^B\"));\n-        bind(emacs, SEND_BREAK,                             translate(\"^X^G\"));\n-        bind(emacs, EDIT_AND_EXECUTE_COMMAND,               translate(\"^X^E\"));\n-        bind(emacs, VI_FIND_NEXT_CHAR,                      translate(\"^X^F\"));\n-        bind(emacs, VI_JOIN,                                translate(\"^X^J\"));\n-        bind(emacs, KILL_BUFFER,                            translate(\"^X^K\"));\n-        bind(emacs, INFER_NEXT_HISTORY,                     translate(\"^X^N\"));\n-        bind(emacs, OVERWRITE_MODE,                         translate(\"^X^O\"));\n-        bind(emacs, REDO,                                   translate(\"^X^R\"));\n-        bind(emacs, UNDO,                                   translate(\"^X^U\"));\n-        bind(emacs, VI_CMD_MODE,                            translate(\"^X^V\"));\n-        bind(emacs, EXCHANGE_POINT_AND_MARK,                translate(\"^X^X\"));\n-        bind(emacs, DO_LOWERCASE_VERSION,                   translate(\"^XA-^XZ\"));\n-        bind(emacs, WHAT_CURSOR_POSITION,                   translate(\"^X=\"));\n-        bind(emacs, KILL_LINE,                              translate(\"^X^?\"));\n-        bind(emacs, SEND_BREAK,                             alt(ctrl('G')));\n-        bind(emacs, BACKWARD_KILL_WORD,                     alt(ctrl('H')));\n-        bind(emacs, SELF_INSERT_UNMETA,                     alt(ctrl('M')));\n-        bind(emacs, COMPLETE_WORD,                          alt(esc()));\n-        bind(emacs, CHARACTER_SEARCH_BACKWARD,              alt(ctrl(']')));\n-        bind(emacs, COPY_PREV_WORD,                         alt(ctrl('_')));\n-        bind(emacs, SET_MARK_COMMAND,                       alt(' '));\n-        bind(emacs, NEG_ARGUMENT,                           alt('-'));\n-        bind(emacs, DIGIT_ARGUMENT,                         range(\"\\\\E0-\\\\E9\"));\n-        bind(emacs, BEGINNING_OF_HISTORY,                   alt('<'));\n-        bind(emacs, LIST_CHOICES,                           alt('='));\n-        bind(emacs, END_OF_HISTORY,                         alt('>'));\n-        bind(emacs, LIST_CHOICES,                           alt('?'));\n-        bind(emacs, DO_LOWERCASE_VERSION,                   range(\"^[A-^[Z\"));\n-        bind(emacs, ACCEPT_AND_HOLD,                        alt('a'));\n-        bind(emacs, BACKWARD_WORD,                          alt('b'));\n-        bind(emacs, CAPITALIZE_WORD,                        alt('c'));\n-        bind(emacs, KILL_WORD,                              alt('d'));\n-        bind(emacs, KILL_WORD,                              translate(\"^[[3;5~\")); \/\/ ctrl-delete\n-        bind(emacs, FORWARD_WORD,                           alt('f'));\n-        bind(emacs, DOWN_CASE_WORD,                         alt('l'));\n-        bind(emacs, HISTORY_SEARCH_FORWARD,                 alt('n'));\n-        bind(emacs, HISTORY_SEARCH_BACKWARD,                alt('p'));\n-        bind(emacs, TRANSPOSE_WORDS,                        alt('t'));\n-        bind(emacs, UP_CASE_WORD,                           alt('u'));\n-        bind(emacs, YANK_POP,                               alt('y'));\n-        bind(emacs, BACKWARD_KILL_WORD,                     alt(del()));\n+        bind(emacs, SET_MARK_COMMAND, ctrl('@'));\n+        bind(emacs, BEGINNING_OF_LINE, ctrl('A'));\n+        bind(emacs, BACKWARD_CHAR, ctrl('B'));\n+        bind(emacs, DELETE_CHAR_OR_LIST, ctrl('D'));\n+        bind(emacs, END_OF_LINE, ctrl('E'));\n+        bind(emacs, FORWARD_CHAR, ctrl('F'));\n+        bind(emacs, SEND_BREAK, ctrl('G'));\n+        bind(emacs, BACKWARD_DELETE_CHAR, ctrl('H'));\n+        bind(emacs, EXPAND_OR_COMPLETE, ctrl('I'));\n+        bind(emacs, ACCEPT_LINE, ctrl('J'));\n+        bind(emacs, KILL_LINE, ctrl('K'));\n+        bind(emacs, CLEAR_SCREEN, ctrl('L'));\n+        bind(emacs, ACCEPT_LINE, ctrl('M'));\n+        bind(emacs, DOWN_LINE_OR_HISTORY, ctrl('N'));\n+        bind(emacs, ACCEPT_LINE_AND_DOWN_HISTORY, ctrl('O'));\n+        bind(emacs, UP_LINE_OR_HISTORY, ctrl('P'));\n+        bind(emacs, HISTORY_INCREMENTAL_SEARCH_BACKWARD, ctrl('R'));\n+        bind(emacs, HISTORY_INCREMENTAL_SEARCH_FORWARD, ctrl('S'));\n+        bind(emacs, TRANSPOSE_CHARS, ctrl('T'));\n+        bind(emacs, KILL_WHOLE_LINE, ctrl('U'));\n+        bind(emacs, QUOTED_INSERT, ctrl('V'));\n+        bind(emacs, BACKWARD_KILL_WORD, ctrl('W'));\n+        bind(emacs, YANK, ctrl('Y'));\n+        bind(emacs, CHARACTER_SEARCH, ctrl(']'));\n+        bind(emacs, UNDO, ctrl('_'));\n+        bind(emacs, SELF_INSERT, range(\" -~\"));\n+        bind(emacs, INSERT_CLOSE_PAREN, \")\");\n+        bind(emacs, INSERT_CLOSE_SQUARE, \"]\");\n+        bind(emacs, INSERT_CLOSE_CURLY, \"}\");\n+        bind(emacs, BACKWARD_DELETE_CHAR, del());\n+        bind(emacs, VI_MATCH_BRACKET, translate(\"^X^B\"));\n+        bind(emacs, SEND_BREAK, translate(\"^X^G\"));\n+        bind(emacs, EDIT_AND_EXECUTE_COMMAND, translate(\"^X^E\"));\n+        bind(emacs, VI_FIND_NEXT_CHAR, translate(\"^X^F\"));\n+        bind(emacs, VI_JOIN, translate(\"^X^J\"));\n+        bind(emacs, KILL_BUFFER, translate(\"^X^K\"));\n+        bind(emacs, INFER_NEXT_HISTORY, translate(\"^X^N\"));\n+        bind(emacs, OVERWRITE_MODE, translate(\"^X^O\"));\n+        bind(emacs, REDO, translate(\"^X^R\"));\n+        bind(emacs, UNDO, translate(\"^X^U\"));\n+        bind(emacs, VI_CMD_MODE, translate(\"^X^V\"));\n+        bind(emacs, EXCHANGE_POINT_AND_MARK, translate(\"^X^X\"));\n+        bind(emacs, DO_LOWERCASE_VERSION, translate(\"^XA-^XZ\"));\n+        bind(emacs, WHAT_CURSOR_POSITION, translate(\"^X=\"));\n+        bind(emacs, KILL_LINE, translate(\"^X^?\"));\n+        bind(emacs, SEND_BREAK, alt(ctrl('G')));\n+        bind(emacs, BACKWARD_KILL_WORD, alt(ctrl('H')));\n+        bind(emacs, SELF_INSERT_UNMETA, alt(ctrl('M')));\n+        bind(emacs, COMPLETE_WORD, alt(esc()));\n+        bind(emacs, CHARACTER_SEARCH_BACKWARD, alt(ctrl(']')));\n+        bind(emacs, COPY_PREV_WORD, alt(ctrl('_')));\n+        bind(emacs, SET_MARK_COMMAND, alt(' '));\n+        bind(emacs, NEG_ARGUMENT, alt('-'));\n+        bind(emacs, DIGIT_ARGUMENT, range(\"\\\\E0-\\\\E9\"));\n+        bind(emacs, BEGINNING_OF_HISTORY, alt('<'));\n+        bind(emacs, LIST_CHOICES, alt('='));\n+        bind(emacs, END_OF_HISTORY, alt('>'));\n+        bind(emacs, LIST_CHOICES, alt('?'));\n+        bind(emacs, DO_LOWERCASE_VERSION, range(\"^[A-^[Z\"));\n+        bind(emacs, ACCEPT_AND_HOLD, alt('a'));\n+        bind(emacs, BACKWARD_WORD, alt('b'));\n+        bind(emacs, CAPITALIZE_WORD, alt('c'));\n+        bind(emacs, KILL_WORD, alt('d'));\n+        bind(emacs, KILL_WORD, translate(\"^[[3;5~\")); \/\/ ctrl-delete\n+        bind(emacs, FORWARD_WORD, alt('f'));\n+        bind(emacs, DOWN_CASE_WORD, alt('l'));\n+        bind(emacs, HISTORY_SEARCH_FORWARD, alt('n'));\n+        bind(emacs, HISTORY_SEARCH_BACKWARD, alt('p'));\n+        bind(emacs, TRANSPOSE_WORDS, alt('t'));\n+        bind(emacs, UP_CASE_WORD, alt('u'));\n+        bind(emacs, YANK_POP, alt('y'));\n+        bind(emacs, BACKWARD_KILL_WORD, alt(del()));\n@@ -5993,6 +6146,6 @@\n-        bind(emacs, FORWARD_WORD,                           translate(\"^[[1;5C\")); \/\/ ctrl-left\n-        bind(emacs, BACKWARD_WORD,                          translate(\"^[[1;5D\")); \/\/ ctrl-right\n-        bind(emacs, FORWARD_WORD,                           alt(key(Capability.key_right)));\n-        bind(emacs, BACKWARD_WORD,                          alt(key(Capability.key_left)));\n-        bind(emacs, FORWARD_WORD,                           alt(translate(\"^[[C\")));\n-        bind(emacs, BACKWARD_WORD,                          alt(translate(\"^[[D\")));\n+        bind(emacs, FORWARD_WORD, translate(\"^[[1;5C\")); \/\/ ctrl-left\n+        bind(emacs, BACKWARD_WORD, translate(\"^[[1;5D\")); \/\/ ctrl-right\n+        bind(emacs, FORWARD_WORD, alt(key(Capability.key_right)));\n+        bind(emacs, BACKWARD_WORD, alt(key(Capability.key_left)));\n+        bind(emacs, FORWARD_WORD, alt(translate(\"^[[C\")));\n+        bind(emacs, BACKWARD_WORD, alt(translate(\"^[[D\")));\n@@ -6005,26 +6158,26 @@\n-        bind(viins, SELF_INSERT,                            range(\"^@-^_\"));\n-        bind(viins, LIST_CHOICES,                           ctrl('D'));\n-        bind(viins, SEND_BREAK,                             ctrl('G'));\n-        bind(viins, BACKWARD_DELETE_CHAR,                   ctrl('H'));\n-        bind(viins, EXPAND_OR_COMPLETE,                     ctrl('I'));\n-        bind(viins, ACCEPT_LINE,                            ctrl('J'));\n-        bind(viins, CLEAR_SCREEN,                           ctrl('L'));\n-        bind(viins, ACCEPT_LINE,                            ctrl('M'));\n-        bind(viins, MENU_COMPLETE,                          ctrl('N'));\n-        bind(viins, REVERSE_MENU_COMPLETE,                  ctrl('P'));\n-        bind(viins, HISTORY_INCREMENTAL_SEARCH_BACKWARD,    ctrl('R'));\n-        bind(viins, HISTORY_INCREMENTAL_SEARCH_FORWARD,     ctrl('S'));\n-        bind(viins, TRANSPOSE_CHARS,                        ctrl('T'));\n-        bind(viins, KILL_WHOLE_LINE,                        ctrl('U'));\n-        bind(viins, QUOTED_INSERT,                          ctrl('V'));\n-        bind(viins, BACKWARD_KILL_WORD,                     ctrl('W'));\n-        bind(viins, YANK,                                   ctrl('Y'));\n-        bind(viins, VI_CMD_MODE,                            ctrl('['));\n-        bind(viins, UNDO,                                   ctrl('_'));\n-        bind(viins, HISTORY_INCREMENTAL_SEARCH_BACKWARD,    ctrl('X') + \"r\");\n-        bind(viins, HISTORY_INCREMENTAL_SEARCH_FORWARD,     ctrl('X') + \"s\");\n-        bind(viins, SELF_INSERT,                            range(\" -~\"));\n-        bind(viins, INSERT_CLOSE_PAREN,                     \")\");\n-        bind(viins, INSERT_CLOSE_SQUARE,                    \"]\");\n-        bind(viins, INSERT_CLOSE_CURLY,                     \"}\");\n-        bind(viins, BACKWARD_DELETE_CHAR,                   del());\n+        bind(viins, SELF_INSERT, range(\"^@-^_\"));\n+        bind(viins, LIST_CHOICES, ctrl('D'));\n+        bind(viins, SEND_BREAK, ctrl('G'));\n+        bind(viins, BACKWARD_DELETE_CHAR, ctrl('H'));\n+        bind(viins, EXPAND_OR_COMPLETE, ctrl('I'));\n+        bind(viins, ACCEPT_LINE, ctrl('J'));\n+        bind(viins, CLEAR_SCREEN, ctrl('L'));\n+        bind(viins, ACCEPT_LINE, ctrl('M'));\n+        bind(viins, MENU_COMPLETE, ctrl('N'));\n+        bind(viins, REVERSE_MENU_COMPLETE, ctrl('P'));\n+        bind(viins, HISTORY_INCREMENTAL_SEARCH_BACKWARD, ctrl('R'));\n+        bind(viins, HISTORY_INCREMENTAL_SEARCH_FORWARD, ctrl('S'));\n+        bind(viins, TRANSPOSE_CHARS, ctrl('T'));\n+        bind(viins, KILL_WHOLE_LINE, ctrl('U'));\n+        bind(viins, QUOTED_INSERT, ctrl('V'));\n+        bind(viins, BACKWARD_KILL_WORD, ctrl('W'));\n+        bind(viins, YANK, ctrl('Y'));\n+        bind(viins, VI_CMD_MODE, ctrl('['));\n+        bind(viins, UNDO, ctrl('_'));\n+        bind(viins, HISTORY_INCREMENTAL_SEARCH_BACKWARD, ctrl('X') + \"r\");\n+        bind(viins, HISTORY_INCREMENTAL_SEARCH_FORWARD, ctrl('X') + \"s\");\n+        bind(viins, SELF_INSERT, range(\" -~\"));\n+        bind(viins, INSERT_CLOSE_PAREN, \")\");\n+        bind(viins, INSERT_CLOSE_SQUARE, \"]\");\n+        bind(viins, INSERT_CLOSE_CURLY, \"}\");\n+        bind(viins, BACKWARD_DELETE_CHAR, del());\n@@ -6037,109 +6190,109 @@\n-        bind(vicmd, LIST_CHOICES,                           ctrl('D'));\n-        bind(vicmd, EMACS_EDITING_MODE,                     ctrl('E'));\n-        bind(vicmd, SEND_BREAK,                             ctrl('G'));\n-        bind(vicmd, VI_BACKWARD_CHAR,                       ctrl('H'));\n-        bind(vicmd, ACCEPT_LINE,                            ctrl('J'));\n-        bind(vicmd, KILL_LINE,                              ctrl('K'));\n-        bind(vicmd, CLEAR_SCREEN,                           ctrl('L'));\n-        bind(vicmd, ACCEPT_LINE,                            ctrl('M'));\n-        bind(vicmd, VI_DOWN_LINE_OR_HISTORY,                ctrl('N'));\n-        bind(vicmd, VI_UP_LINE_OR_HISTORY,                  ctrl('P'));\n-        bind(vicmd, QUOTED_INSERT,                          ctrl('Q'));\n-        bind(vicmd, HISTORY_INCREMENTAL_SEARCH_BACKWARD,    ctrl('R'));\n-        bind(vicmd, HISTORY_INCREMENTAL_SEARCH_FORWARD,     ctrl('S'));\n-        bind(vicmd, TRANSPOSE_CHARS,                        ctrl('T'));\n-        bind(vicmd, KILL_WHOLE_LINE,                        ctrl('U'));\n-        bind(vicmd, QUOTED_INSERT,                          ctrl('V'));\n-        bind(vicmd, BACKWARD_KILL_WORD,                     ctrl('W'));\n-        bind(vicmd, YANK,                                   ctrl('Y'));\n-        bind(vicmd, HISTORY_INCREMENTAL_SEARCH_BACKWARD,    ctrl('X') + \"r\");\n-        bind(vicmd, HISTORY_INCREMENTAL_SEARCH_FORWARD,     ctrl('X') + \"s\");\n-        bind(vicmd, SEND_BREAK,                             alt(ctrl('G')));\n-        bind(vicmd, BACKWARD_KILL_WORD,                     alt(ctrl('H')));\n-        bind(vicmd, SELF_INSERT_UNMETA,                     alt(ctrl('M')));\n-        bind(vicmd, COMPLETE_WORD,                          alt(esc()));\n-        bind(vicmd, CHARACTER_SEARCH_BACKWARD,              alt(ctrl(']')));\n-        bind(vicmd, SET_MARK_COMMAND,                       alt(' '));\n-\/\/        bind(vicmd, INSERT_COMMENT,                         alt('#'));\n-\/\/        bind(vicmd, INSERT_COMPLETIONS,                     alt('*'));\n-        bind(vicmd, DIGIT_ARGUMENT,                         alt('-'));\n-        bind(vicmd, BEGINNING_OF_HISTORY,                   alt('<'));\n-        bind(vicmd, LIST_CHOICES,                           alt('='));\n-        bind(vicmd, END_OF_HISTORY,                         alt('>'));\n-        bind(vicmd, LIST_CHOICES,                           alt('?'));\n-        bind(vicmd, DO_LOWERCASE_VERSION,                   range(\"^[A-^[Z\"));\n-        bind(vicmd, BACKWARD_WORD,                          alt('b'));\n-        bind(vicmd, CAPITALIZE_WORD,                        alt('c'));\n-        bind(vicmd, KILL_WORD,                              alt('d'));\n-        bind(vicmd, FORWARD_WORD,                           alt('f'));\n-        bind(vicmd, DOWN_CASE_WORD,                         alt('l'));\n-        bind(vicmd, HISTORY_SEARCH_FORWARD,                 alt('n'));\n-        bind(vicmd, HISTORY_SEARCH_BACKWARD,                alt('p'));\n-        bind(vicmd, TRANSPOSE_WORDS,                        alt('t'));\n-        bind(vicmd, UP_CASE_WORD,                           alt('u'));\n-        bind(vicmd, YANK_POP,                               alt('y'));\n-        bind(vicmd, BACKWARD_KILL_WORD,                     alt(del()));\n-\n-        bind(vicmd, FORWARD_CHAR,                           \" \");\n-        bind(vicmd, VI_INSERT_COMMENT,                      \"#\");\n-        bind(vicmd, END_OF_LINE,                            \"$\");\n-        bind(vicmd, VI_MATCH_BRACKET,                       \"%\");\n-        bind(vicmd, VI_DOWN_LINE_OR_HISTORY,                \"+\");\n-        bind(vicmd, VI_REV_REPEAT_FIND,                     \",\");\n-        bind(vicmd, VI_UP_LINE_OR_HISTORY,                  \"-\");\n-        bind(vicmd, VI_REPEAT_CHANGE,                       \".\");\n-        bind(vicmd, VI_HISTORY_SEARCH_BACKWARD,             \"\/\");\n-        bind(vicmd, VI_DIGIT_OR_BEGINNING_OF_LINE,          \"0\");\n-        bind(vicmd, DIGIT_ARGUMENT,                         range(\"1-9\"));\n-        bind(vicmd, VI_REPEAT_FIND,                         \";\");\n-        bind(vicmd, LIST_CHOICES,                           \"=\");\n-        bind(vicmd, VI_HISTORY_SEARCH_FORWARD,              \"?\");\n-        bind(vicmd, VI_ADD_EOL,                             \"A\");\n-        bind(vicmd, VI_BACKWARD_BLANK_WORD,                 \"B\");\n-        bind(vicmd, VI_CHANGE_EOL,                          \"C\");\n-        bind(vicmd, VI_KILL_EOL,                            \"D\");\n-        bind(vicmd, VI_FORWARD_BLANK_WORD_END,              \"E\");\n-        bind(vicmd, VI_FIND_PREV_CHAR,                      \"F\");\n-        bind(vicmd, VI_FETCH_HISTORY,                       \"G\");\n-        bind(vicmd, VI_INSERT_BOL,                          \"I\");\n-        bind(vicmd, VI_JOIN,                                \"J\");\n-        bind(vicmd, VI_REV_REPEAT_SEARCH,                   \"N\");\n-        bind(vicmd, VI_OPEN_LINE_ABOVE,                     \"O\");\n-        bind(vicmd, VI_PUT_BEFORE,                          \"P\");\n-        bind(vicmd, VI_REPLACE,                             \"R\");\n-        bind(vicmd, VI_KILL_LINE,                           \"S\");\n-        bind(vicmd, VI_FIND_PREV_CHAR_SKIP,                 \"T\");\n-        bind(vicmd, REDO,                                   \"U\");\n-        bind(vicmd, VISUAL_LINE_MODE,                       \"V\");\n-        bind(vicmd, VI_FORWARD_BLANK_WORD,                  \"W\");\n-        bind(vicmd, VI_BACKWARD_DELETE_CHAR,                \"X\");\n-        bind(vicmd, VI_YANK_WHOLE_LINE,                     \"Y\");\n-        bind(vicmd, VI_FIRST_NON_BLANK,                     \"^\");\n-        bind(vicmd, VI_ADD_NEXT,                            \"a\");\n-        bind(vicmd, VI_BACKWARD_WORD,                       \"b\");\n-        bind(vicmd, VI_CHANGE,                              \"c\");\n-        bind(vicmd, VI_DELETE,                              \"d\");\n-        bind(vicmd, VI_FORWARD_WORD_END,                    \"e\");\n-        bind(vicmd, VI_FIND_NEXT_CHAR,                      \"f\");\n-        bind(vicmd, WHAT_CURSOR_POSITION,                   \"ga\");\n-        bind(vicmd, VI_BACKWARD_BLANK_WORD_END,             \"gE\");\n-        bind(vicmd, VI_BACKWARD_WORD_END,                   \"ge\");\n-        bind(vicmd, VI_BACKWARD_CHAR,                       \"h\");\n-        bind(vicmd, VI_INSERT,                              \"i\");\n-        bind(vicmd, DOWN_LINE_OR_HISTORY,                   \"j\");\n-        bind(vicmd, UP_LINE_OR_HISTORY,                     \"k\");\n-        bind(vicmd, VI_FORWARD_CHAR,                        \"l\");\n-        bind(vicmd, VI_REPEAT_SEARCH,                       \"n\");\n-        bind(vicmd, VI_OPEN_LINE_BELOW,                     \"o\");\n-        bind(vicmd, VI_PUT_AFTER,                           \"p\");\n-        bind(vicmd, VI_REPLACE_CHARS,                       \"r\");\n-        bind(vicmd, VI_SUBSTITUTE,                          \"s\");\n-        bind(vicmd, VI_FIND_NEXT_CHAR_SKIP,                 \"t\");\n-        bind(vicmd, UNDO,                                   \"u\");\n-        bind(vicmd, VISUAL_MODE,                            \"v\");\n-        bind(vicmd, VI_FORWARD_WORD,                        \"w\");\n-        bind(vicmd, VI_DELETE_CHAR,                         \"x\");\n-        bind(vicmd, VI_YANK,                                \"y\");\n-        bind(vicmd, VI_GOTO_COLUMN,                         \"|\");\n-        bind(vicmd, VI_SWAP_CASE,                           \"~\");\n-        bind(vicmd, VI_BACKWARD_CHAR,                       del());\n+        bind(vicmd, LIST_CHOICES, ctrl('D'));\n+        bind(vicmd, EMACS_EDITING_MODE, ctrl('E'));\n+        bind(vicmd, SEND_BREAK, ctrl('G'));\n+        bind(vicmd, VI_BACKWARD_CHAR, ctrl('H'));\n+        bind(vicmd, ACCEPT_LINE, ctrl('J'));\n+        bind(vicmd, KILL_LINE, ctrl('K'));\n+        bind(vicmd, CLEAR_SCREEN, ctrl('L'));\n+        bind(vicmd, ACCEPT_LINE, ctrl('M'));\n+        bind(vicmd, VI_DOWN_LINE_OR_HISTORY, ctrl('N'));\n+        bind(vicmd, VI_UP_LINE_OR_HISTORY, ctrl('P'));\n+        bind(vicmd, QUOTED_INSERT, ctrl('Q'));\n+        bind(vicmd, HISTORY_INCREMENTAL_SEARCH_BACKWARD, ctrl('R'));\n+        bind(vicmd, HISTORY_INCREMENTAL_SEARCH_FORWARD, ctrl('S'));\n+        bind(vicmd, TRANSPOSE_CHARS, ctrl('T'));\n+        bind(vicmd, KILL_WHOLE_LINE, ctrl('U'));\n+        bind(vicmd, QUOTED_INSERT, ctrl('V'));\n+        bind(vicmd, BACKWARD_KILL_WORD, ctrl('W'));\n+        bind(vicmd, YANK, ctrl('Y'));\n+        bind(vicmd, HISTORY_INCREMENTAL_SEARCH_BACKWARD, ctrl('X') + \"r\");\n+        bind(vicmd, HISTORY_INCREMENTAL_SEARCH_FORWARD, ctrl('X') + \"s\");\n+        bind(vicmd, SEND_BREAK, alt(ctrl('G')));\n+        bind(vicmd, BACKWARD_KILL_WORD, alt(ctrl('H')));\n+        bind(vicmd, SELF_INSERT_UNMETA, alt(ctrl('M')));\n+        bind(vicmd, COMPLETE_WORD, alt(esc()));\n+        bind(vicmd, CHARACTER_SEARCH_BACKWARD, alt(ctrl(']')));\n+        bind(vicmd, SET_MARK_COMMAND, alt(' '));\n+        \/\/        bind(vicmd, INSERT_COMMENT,                         alt('#'));\n+        \/\/        bind(vicmd, INSERT_COMPLETIONS,                     alt('*'));\n+        bind(vicmd, DIGIT_ARGUMENT, alt('-'));\n+        bind(vicmd, BEGINNING_OF_HISTORY, alt('<'));\n+        bind(vicmd, LIST_CHOICES, alt('='));\n+        bind(vicmd, END_OF_HISTORY, alt('>'));\n+        bind(vicmd, LIST_CHOICES, alt('?'));\n+        bind(vicmd, DO_LOWERCASE_VERSION, range(\"^[A-^[Z\"));\n+        bind(vicmd, BACKWARD_WORD, alt('b'));\n+        bind(vicmd, CAPITALIZE_WORD, alt('c'));\n+        bind(vicmd, KILL_WORD, alt('d'));\n+        bind(vicmd, FORWARD_WORD, alt('f'));\n+        bind(vicmd, DOWN_CASE_WORD, alt('l'));\n+        bind(vicmd, HISTORY_SEARCH_FORWARD, alt('n'));\n+        bind(vicmd, HISTORY_SEARCH_BACKWARD, alt('p'));\n+        bind(vicmd, TRANSPOSE_WORDS, alt('t'));\n+        bind(vicmd, UP_CASE_WORD, alt('u'));\n+        bind(vicmd, YANK_POP, alt('y'));\n+        bind(vicmd, BACKWARD_KILL_WORD, alt(del()));\n+\n+        bind(vicmd, FORWARD_CHAR, \" \");\n+        bind(vicmd, VI_INSERT_COMMENT, \"#\");\n+        bind(vicmd, END_OF_LINE, \"$\");\n+        bind(vicmd, VI_MATCH_BRACKET, \"%\");\n+        bind(vicmd, VI_DOWN_LINE_OR_HISTORY, \"+\");\n+        bind(vicmd, VI_REV_REPEAT_FIND, \",\");\n+        bind(vicmd, VI_UP_LINE_OR_HISTORY, \"-\");\n+        bind(vicmd, VI_REPEAT_CHANGE, \".\");\n+        bind(vicmd, VI_HISTORY_SEARCH_BACKWARD, \"\/\");\n+        bind(vicmd, VI_DIGIT_OR_BEGINNING_OF_LINE, \"0\");\n+        bind(vicmd, DIGIT_ARGUMENT, range(\"1-9\"));\n+        bind(vicmd, VI_REPEAT_FIND, \";\");\n+        bind(vicmd, LIST_CHOICES, \"=\");\n+        bind(vicmd, VI_HISTORY_SEARCH_FORWARD, \"?\");\n+        bind(vicmd, VI_ADD_EOL, \"A\");\n+        bind(vicmd, VI_BACKWARD_BLANK_WORD, \"B\");\n+        bind(vicmd, VI_CHANGE_EOL, \"C\");\n+        bind(vicmd, VI_KILL_EOL, \"D\");\n+        bind(vicmd, VI_FORWARD_BLANK_WORD_END, \"E\");\n+        bind(vicmd, VI_FIND_PREV_CHAR, \"F\");\n+        bind(vicmd, VI_FETCH_HISTORY, \"G\");\n+        bind(vicmd, VI_INSERT_BOL, \"I\");\n+        bind(vicmd, VI_JOIN, \"J\");\n+        bind(vicmd, VI_REV_REPEAT_SEARCH, \"N\");\n+        bind(vicmd, VI_OPEN_LINE_ABOVE, \"O\");\n+        bind(vicmd, VI_PUT_BEFORE, \"P\");\n+        bind(vicmd, VI_REPLACE, \"R\");\n+        bind(vicmd, VI_KILL_LINE, \"S\");\n+        bind(vicmd, VI_FIND_PREV_CHAR_SKIP, \"T\");\n+        bind(vicmd, REDO, \"U\");\n+        bind(vicmd, VISUAL_LINE_MODE, \"V\");\n+        bind(vicmd, VI_FORWARD_BLANK_WORD, \"W\");\n+        bind(vicmd, VI_BACKWARD_DELETE_CHAR, \"X\");\n+        bind(vicmd, VI_YANK_WHOLE_LINE, \"Y\");\n+        bind(vicmd, VI_FIRST_NON_BLANK, \"^\");\n+        bind(vicmd, VI_ADD_NEXT, \"a\");\n+        bind(vicmd, VI_BACKWARD_WORD, \"b\");\n+        bind(vicmd, VI_CHANGE, \"c\");\n+        bind(vicmd, VI_DELETE, \"d\");\n+        bind(vicmd, VI_FORWARD_WORD_END, \"e\");\n+        bind(vicmd, VI_FIND_NEXT_CHAR, \"f\");\n+        bind(vicmd, WHAT_CURSOR_POSITION, \"ga\");\n+        bind(vicmd, VI_BACKWARD_BLANK_WORD_END, \"gE\");\n+        bind(vicmd, VI_BACKWARD_WORD_END, \"ge\");\n+        bind(vicmd, VI_BACKWARD_CHAR, \"h\");\n+        bind(vicmd, VI_INSERT, \"i\");\n+        bind(vicmd, DOWN_LINE_OR_HISTORY, \"j\");\n+        bind(vicmd, UP_LINE_OR_HISTORY, \"k\");\n+        bind(vicmd, VI_FORWARD_CHAR, \"l\");\n+        bind(vicmd, VI_REPEAT_SEARCH, \"n\");\n+        bind(vicmd, VI_OPEN_LINE_BELOW, \"o\");\n+        bind(vicmd, VI_PUT_AFTER, \"p\");\n+        bind(vicmd, VI_REPLACE_CHARS, \"r\");\n+        bind(vicmd, VI_SUBSTITUTE, \"s\");\n+        bind(vicmd, VI_FIND_NEXT_CHAR_SKIP, \"t\");\n+        bind(vicmd, UNDO, \"u\");\n+        bind(vicmd, VISUAL_MODE, \"v\");\n+        bind(vicmd, VI_FORWARD_WORD, \"w\");\n+        bind(vicmd, VI_DELETE_CHAR, \"x\");\n+        bind(vicmd, VI_YANK, \"y\");\n+        bind(vicmd, VI_GOTO_COLUMN, \"|\");\n+        bind(vicmd, VI_SWAP_CASE, \"~\");\n+        bind(vicmd, VI_BACKWARD_CHAR, del());\n@@ -6153,3 +6306,3 @@\n-        bind(menu, MENU_COMPLETE,                     \"\\t\");\n-        bind(menu, REVERSE_MENU_COMPLETE,             key(Capability.back_tab));\n-        bind(menu, ACCEPT_LINE,                       \"\\r\", \"\\n\");\n+        bind(menu, MENU_COMPLETE, \"\\t\");\n+        bind(menu, REVERSE_MENU_COMPLETE, key(Capability.back_tab));\n+        bind(menu, ACCEPT_LINE, \"\\r\", \"\\n\");\n@@ -6162,3 +6315,3 @@\n-        bind(safe, SELF_INSERT,                 range(\"^@-^?\"));\n-        bind(safe, ACCEPT_LINE,                 \"\\r\", \"\\n\");\n-        bind(safe, SEND_BREAK,                  ctrl('G'));\n+        bind(safe, SELF_INSERT, range(\"^@-^?\"));\n+        bind(safe, ACCEPT_LINE, \"\\r\", \"\\n\");\n+        bind(safe, SEND_BREAK, ctrl('G'));\n@@ -6168,0 +6321,8 @@\n+    public KeyMap<Binding> dumb() {\n+        KeyMap<Binding> dumb = new KeyMap<>();\n+        bind(dumb, SELF_INSERT, range(\"^@-^?\"));\n+        bind(dumb, ACCEPT_LINE, \"\\r\", \"\\n\");\n+        bind(dumb, BEEP, ctrl('G'));\n+        return dumb;\n+    }\n+\n@@ -6170,7 +6331,7 @@\n-        bind(visual, UP_LINE,                   key(Capability.key_up),     \"k\");\n-        bind(visual, DOWN_LINE,                 key(Capability.key_down),   \"j\");\n-        bind(visual, this::deactivateRegion,    esc());\n-        bind(visual, EXCHANGE_POINT_AND_MARK,   \"o\");\n-        bind(visual, PUT_REPLACE_SELECTION,     \"p\");\n-        bind(visual, VI_DELETE,                 \"x\");\n-        bind(visual, VI_OPER_SWAP_CASE,         \"~\");\n+        bind(visual, UP_LINE, key(Capability.key_up), \"k\");\n+        bind(visual, DOWN_LINE, key(Capability.key_down), \"j\");\n+        bind(visual, this::deactivateRegion, esc());\n+        bind(visual, EXCHANGE_POINT_AND_MARK, \"o\");\n+        bind(visual, PUT_REPLACE_SELECTION, \"p\");\n+        bind(visual, VI_DELETE, \"x\");\n+        bind(visual, VI_OPER_SWAP_CASE, \"~\");\n@@ -6182,3 +6343,3 @@\n-        bind(viOpp, UP_LINE,                    key(Capability.key_up),     \"k\");\n-        bind(viOpp, DOWN_LINE,                  key(Capability.key_down),   \"j\");\n-        bind(viOpp, VI_CMD_MODE,                esc());\n+        bind(viOpp, UP_LINE, key(Capability.key_up), \"k\");\n+        bind(viOpp, DOWN_LINE, key(Capability.key_down), \"j\");\n+        bind(viOpp, VI_CMD_MODE, esc());\n@@ -6213,13 +6374,13 @@\n-        bind(map, UP_LINE_OR_SEARCH,    key(Capability.key_up));\n-        bind(map, DOWN_LINE_OR_SEARCH,  key(Capability.key_down));\n-        bind(map, BACKWARD_CHAR,        key(Capability.key_left));\n-        bind(map, FORWARD_CHAR,         key(Capability.key_right));\n-        bind(map, BEGINNING_OF_LINE,    key(Capability.key_home));\n-        bind(map, END_OF_LINE,          key(Capability.key_end));\n-        bind(map, DELETE_CHAR,          key(Capability.key_dc));\n-        bind(map, KILL_WHOLE_LINE,      key(Capability.key_dl));\n-        bind(map, OVERWRITE_MODE,       key(Capability.key_ic));\n-        bind(map, MOUSE,                key(Capability.key_mouse));\n-        bind(map, BEGIN_PASTE,          BRACKETED_PASTE_BEGIN);\n-        bind(map, FOCUS_IN,             FOCUS_IN_SEQ);\n-        bind(map, FOCUS_OUT,            FOCUS_OUT_SEQ);\n+        bind(map, UP_LINE_OR_SEARCH, key(Capability.key_up));\n+        bind(map, DOWN_LINE_OR_SEARCH, key(Capability.key_down));\n+        bind(map, BACKWARD_CHAR, key(Capability.key_left));\n+        bind(map, FORWARD_CHAR, key(Capability.key_right));\n+        bind(map, BEGINNING_OF_LINE, key(Capability.key_home));\n+        bind(map, END_OF_LINE, key(Capability.key_end));\n+        bind(map, DELETE_CHAR, key(Capability.key_dc));\n+        bind(map, KILL_WHOLE_LINE, key(Capability.key_dl));\n+        bind(map, OVERWRITE_MODE, key(Capability.key_ic));\n+        bind(map, MOUSE, key(Capability.key_mouse));\n+        bind(map, BEGIN_PASTE, BRACKETED_PASTE_BEGIN);\n+        bind(map, FOCUS_IN, FOCUS_IN_SEQ);\n+        bind(map, FOCUS_OUT, FOCUS_OUT_SEQ);\n@@ -6234,8 +6395,4 @@\n-            rebind(keyMap, BACKWARD_DELETE_CHAR,\n-                    del(), (char) attr.getControlChar(ControlChar.VERASE));\n-            rebind(keyMap, BACKWARD_KILL_WORD,\n-                    ctrl('W'),  (char) attr.getControlChar(ControlChar.VWERASE));\n-            rebind(keyMap, KILL_WHOLE_LINE,\n-                    ctrl('U'), (char) attr.getControlChar(ControlChar.VKILL));\n-            rebind(keyMap, QUOTED_INSERT,\n-                    ctrl('V'), (char) attr.getControlChar(ControlChar.VLNEXT));\n+            rebind(keyMap, BACKWARD_DELETE_CHAR, del(), (char) attr.getControlChar(ControlChar.VERASE));\n+            rebind(keyMap, BACKWARD_KILL_WORD, ctrl('W'), (char) attr.getControlChar(ControlChar.VWERASE));\n+            rebind(keyMap, KILL_WHOLE_LINE, ctrl('U'), (char) attr.getControlChar(ControlChar.VKILL));\n+            rebind(keyMap, QUOTED_INSERT, ctrl('V'), (char) attr.getControlChar(ControlChar.VLNEXT));\n@@ -6253,1 +6410,0 @@\n-    \/\/ JDK specific modification\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/LineReaderImpl.java","additions":679,"deletions":523,"binary":false,"changes":1202,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2020, the original author or authors.\n+ * Copyright (c) 2002-2020, the original author(s).\n@@ -16,1 +16,1 @@\n-    private ReaderUtils() { }\n+    private ReaderUtils() {}\n@@ -33,2 +33,1 @@\n-            return s.isEmpty() || s.equalsIgnoreCase(\"on\")\n-                    || s.equalsIgnoreCase(\"1\") || s.equalsIgnoreCase(\"true\");\n+            return s.isEmpty() || s.equalsIgnoreCase(\"on\") || s.equalsIgnoreCase(\"1\") || s.equalsIgnoreCase(\"true\");\n@@ -80,1 +79,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/ReaderUtils.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2017, the original author or authors.\n+ * Copyright (c) 2002-2017, the original author(s).\n@@ -11,2 +11,0 @@\n-import jdk.internal.org.jline.reader.MaskingCallback;\n-\n@@ -15,0 +13,2 @@\n+import jdk.internal.org.jline.reader.MaskingCallback;\n+\n@@ -32,1 +32,1 @@\n-            for (int i = line.length(); i-- > 0;) {\n+            for (int i = line.length(); i-- > 0; ) {\n@@ -43,1 +43,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/SimpleMaskingCallback.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -23,0 +23,1 @@\n+    @SuppressWarnings(\"this-escape\")\n@@ -74,1 +75,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/UndoTree.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -27,3 +27,1 @@\n-public class AggregateCompleter\n-    implements Completer\n-{\n+public class AggregateCompleter implements Completer {\n@@ -81,3 +79,1 @@\n-        return getClass().getSimpleName() + \"{\" +\n-            \"completers=\" + completers +\n-            '}';\n+        return getClass().getSimpleName() + \"{\" + \"completers=\" + completers + '}';\n@@ -85,1 +81,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/AggregateCompleter.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2019, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author(s).\n@@ -32,2 +32,1 @@\n-public class ArgumentCompleter implements Completer\n-{\n+public class ArgumentCompleter implements Completer {\n@@ -111,2 +110,1 @@\n-        }\n-        else {\n+        } else {\n@@ -116,1 +114,2 @@\n-        \/\/ ensure that all the previous completers are successful before allowing this completer to pass (only if strict).\n+        \/\/ ensure that all the previous completers are successful before allowing this completer to pass (only if\n+        \/\/ strict).\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/ArgumentCompleter.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -22,2 +22,1 @@\n-public class EnumCompleter extends StringsCompleter\n-{\n+public class EnumCompleter extends StringsCompleter {\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/EnumCompleter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -12,0 +12,1 @@\n+import java.nio.file.DirectoryStream;\n@@ -44,1 +45,1 @@\n- * @deprecated use <code>jdk.internal.org.jline.builtins.Completers$FileNameCompleter<\/code> instead\n+ * @deprecated use <code>org.jline.builtins.Completers$FileNameCompleter<\/code> instead\n@@ -47,2 +48,1 @@\n-public class FileNameCompleter implements Completer\n-{\n+public class FileNameCompleter implements Completer {\n@@ -75,2 +75,2 @@\n-        try {\n-            Files.newDirectoryStream(current, this::accept).forEach(p -> {\n+        try (DirectoryStream<Path> directoryStream = Files.newDirectoryStream(current, this::accept)) {\n+            directoryStream.forEach(p -> {\n@@ -82,1 +82,2 @@\n-                            null, null,\n+                            null,\n+                            null,\n@@ -87,2 +88,2 @@\n-                    candidates.add(new Candidate(value, getDisplay(reader.getTerminal(), p),\n-                            null, null, null, null, true));\n+                    candidates.add(\n+                            new Candidate(value, getDisplay(reader.getTerminal(), p), null, null, null, null, true));\n@@ -128,1 +129,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/FileNameCompleter.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -25,3 +25,1 @@\n-public final class NullCompleter\n-    implements Completer\n-{\n+public final class NullCompleter implements Completer {\n@@ -30,2 +28,1 @@\n-    public void complete(LineReader reader, final ParsedLine line, final List<Candidate> candidates) {\n-    }\n+    public void complete(LineReader reader, final ParsedLine line, final List<Candidate> candidates) {}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/NullCompleter.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2019, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author(s).\n@@ -30,2 +30,1 @@\n-public class StringsCompleter implements Completer\n-{\n+public class StringsCompleter implements Completer {\n@@ -57,1 +56,1 @@\n-    public StringsCompleter(Candidate ... candidates) {\n+    public StringsCompleter(Candidate... candidates) {\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/StringsCompleter.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2020, the original author or authors.\n+ * Copyright (c) 2002-2020, the original author(s).\n@@ -25,2 +25,2 @@\n-    private Map<String,List<Completer>> completers = new HashMap<>();\n-    private Map<String,String> aliasCommand = new HashMap<>();\n+    private Map<String, List<Completer>> completers = new HashMap<>();\n+    private Map<String, String> aliasCommand = new HashMap<>();\n@@ -47,3 +47,3 @@\n-                    for (String c: completers.keySet()) {\n-                        candidates.add(new Candidate(AttributedString.stripAnsi(curBuf+c)\n-                                    , c, null, null, null, null, true));\n+                    for (String c : completers.keySet()) {\n+                        candidates.add(\n+                                new Candidate(AttributedString.stripAnsi(curBuf + c), c, null, null, null, null, true));\n@@ -84,1 +84,1 @@\n-        for (String c: commands) {\n+        for (String c : commands) {\n@@ -107,2 +107,2 @@\n-        for (Map.Entry<String, List<Completer>> entry: other.getCompleters().entrySet()) {\n-            for (Completer c: entry.getValue()) {\n+        for (Map.Entry<String, List<Completer>> entry : other.getCompleters().entrySet()) {\n+            for (Completer c : entry.getValue()) {\n@@ -115,1 +115,1 @@\n-    public void addAliases(Map<String,String> aliasCommand) {\n+    public void addAliases(Map<String, String> aliasCommand) {\n@@ -122,1 +122,1 @@\n-    private Map<String,String> getAliases() {\n+    private Map<String, String> getAliases() {\n@@ -131,1 +131,1 @@\n-        for (Map.Entry<String, List<Completer>> entry: completers.entrySet()) {\n+        for (Map.Entry<String, List<Completer>> entry : completers.entrySet()) {\n@@ -146,1 +146,1 @@\n-    public Map<String,List<Completer>> getCompleters() {\n+    public Map<String, List<Completer>> getCompleters() {\n@@ -149,1 +149,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/SystemCompleter.java","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2021, the original author(s).\n@@ -44,2 +44,1 @@\n-    public DefaultHistory() {\n-    }\n+    public DefaultHistory() {}\n@@ -47,0 +46,1 @@\n+    @SuppressWarnings(\"this-escape\")\n@@ -70,2 +70,1 @@\n-            }\n-            catch (IllegalArgumentException | IOException e) {\n+            } catch (IllegalArgumentException | IOException e) {\n@@ -120,1 +119,1 @@\n-    private String doHistoryFileDataKey (Path path){\n+    private String doHistoryFileDataKey(Path path) {\n@@ -126,1 +125,1 @@\n-        if (!historyFiles.containsKey(key)){\n+        if (!historyFiles.containsKey(key)) {\n@@ -136,1 +135,1 @@\n-    private boolean isLineReaderHistory (Path path) throws IOException {\n+    private boolean isLineReaderHistory(Path path) throws IOException {\n@@ -144,1 +143,1 @@\n-    private void setLastLoaded(Path path, int lastloaded){\n+    private void setLastLoaded(Path path, int lastloaded) {\n@@ -148,1 +147,1 @@\n-    private void setEntriesInFile(Path path, int entriesInFile){\n+    private void setEntriesInFile(Path path, int entriesInFile) {\n@@ -152,1 +151,1 @@\n-    private void incEntriesInFile(Path path, int amount){\n+    private void incEntriesInFile(Path path, int amount) {\n@@ -156,1 +155,1 @@\n-    private int getLastLoaded(Path path){\n+    private int getLastLoaded(Path path) {\n@@ -160,1 +159,1 @@\n-    private int getEntriesInFile(Path path){\n+    private int getEntriesInFile(Path path) {\n@@ -171,3 +170,2 @@\n-            final String badHistoryFileSyntax = \"Bad history file syntax! \" +\n-                \"The history file `\" + path + \"` may be an older history: \" +\n-                \"please remove it or use a different history file.\";\n+            final String badHistoryFileSyntax = \"Bad history file syntax! \" + \"The history file `\" + path\n+                    + \"` may be an older history: \" + \"please remove it or use a different history file.\";\n@@ -186,2 +184,1 @@\n-        }\n-        else {\n+        } else {\n@@ -213,2 +210,1 @@\n-        internalWrite(file != null ? file : getPath(),\n-                      incremental ? getLastLoaded(file) : 0);\n+        internalWrite(file != null ? file : getPath(), incremental ? getLastLoaded(file) : 0);\n@@ -230,2 +226,5 @@\n-            try (BufferedWriter writer = Files.newBufferedWriter(path.toAbsolutePath(),\n-              StandardOpenOption.WRITE, StandardOpenOption.APPEND, StandardOpenOption.CREATE)) {\n+            try (BufferedWriter writer = Files.newBufferedWriter(\n+                    path.toAbsolutePath(),\n+                    StandardOpenOption.WRITE,\n+                    StandardOpenOption.APPEND,\n+                    StandardOpenOption.CREATE)) {\n@@ -251,6 +250,10 @@\n-        try (BufferedReader reader = Files.newBufferedReader(path)) {\n-            reader.lines().forEach(l -> {\n-                int idx = l.indexOf(':');\n-                Instant time = Instant.ofEpochMilli(Long.parseLong(l.substring(0, idx)));\n-                String line = unescape(l.substring(idx + 1));\n-                allItems.add(createEntry(allItems.size(), time, line));\n+        try (BufferedReader historyFileReader = Files.newBufferedReader(path)) {\n+            historyFileReader.lines().forEach(l -> {\n+                if (reader.isSet(LineReader.Option.HISTORY_TIMESTAMPED)) {\n+                    int idx = l.indexOf(':');\n+                    Instant time = Instant.ofEpochMilli(Long.parseLong(l.substring(0, idx)));\n+                    String line = unescape(l.substring(idx + 1));\n+                    allItems.add(createEntry(allItems.size(), time, line));\n+                } else {\n+                    allItems.add(createEntry(allItems.size(), Instant.now(), unescape(l)));\n+                }\n@@ -262,1 +265,2 @@\n-        Path temp = Files.createTempFile(path.toAbsolutePath().getParent(), path.getFileName().toString(), \".tmp\");\n+        Path temp = Files.createTempFile(\n+                path.toAbsolutePath().getParent(), path.getFileName().toString(), \".tmp\");\n@@ -354,1 +358,1 @@\n-            throw new IllegalArgumentException(\"IndexOutOfBounds: Index:\" + idx +\", Size:\" + items.size());\n+            throw new IllegalArgumentException(\"IndexOutOfBounds: Index:\" + idx + \", Size:\" + items.size());\n@@ -385,2 +389,1 @@\n-            }\n-            catch (IOException e) {\n+            } catch (IOException e) {\n@@ -420,1 +423,1 @@\n-            for (Entry e: items) {\n+            for (Entry e : items) {\n@@ -433,1 +436,1 @@\n-            for (HistoryFileData hfd: historyFiles.values()) {\n+            for (HistoryFileData hfd : historyFiles.values()) {\n@@ -636,2 +639,1 @@\n-        public HistoryFileData() {\n-        }\n+        public HistoryFileData() {}\n@@ -670,1 +672,0 @@\n-\n@@ -672,1 +673,0 @@\n-\n@@ -674,1 +674,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/history\/DefaultHistory.java","additions":38,"deletions":39,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -46,14 +46,16 @@\n-        IGNBRK,       \/* ignore BREAK condition *\/\n-        BRKINT,       \/* map BREAK to SIGINTR *\/\n-        IGNPAR,       \/* ignore (discard) parity errors *\/\n-        PARMRK,       \/* mark parity and framing errors *\/\n-        INPCK,        \/* enable checking of parity errors *\/\n-        ISTRIP,       \/* strip 8th bit off chars *\/\n-        INLCR,        \/* map NL into CR *\/\n-        IGNCR,        \/* ignore CR *\/\n-        ICRNL,        \/* map CR to NL (ala CRMOD) *\/\n-        IXON,         \/* enable output flow control *\/\n-        IXOFF,        \/* enable input flow control *\/\n-        IXANY,        \/* any char will restart after stop *\/\n-        IMAXBEL,      \/* ring bell on input queue full *\/\n-        IUTF8         \/* maintain state for UTF-8 VERASE *\/\n+        IGNBRK, \/* ignore BREAK condition *\/\n+        BRKINT, \/* map BREAK to SIGINTR *\/\n+        IGNPAR, \/* ignore (discard) parity errors *\/\n+        PARMRK, \/* mark parity and framing errors *\/\n+        INPCK, \/* enable checking of parity errors *\/\n+        ISTRIP, \/* strip 8th bit off chars *\/\n+        INLCR, \/* map NL into CR *\/\n+        IGNCR, \/* ignore CR *\/\n+        ICRNL, \/* map CR to NL (ala CRMOD) *\/\n+        IXON, \/* enable output flow control *\/\n+        IXOFF, \/* enable input flow control *\/\n+        IXANY, \/* any char will restart after stop *\/\n+        IMAXBEL, \/* ring bell on input queue full *\/\n+        IUTF8, \/* maintain state for UTF-8 VERASE *\/\n+\n+        INORMEOL \/* normalize end-of-line *\/\n@@ -66,15 +68,15 @@\n-        OPOST,       \/* enable following output processing *\/\n-        ONLCR,       \/* map NL to CR-NL (ala CRMOD) *\/\n-        OXTABS,      \/* expand tabs to spaces *\/\n-        ONOEOT,      \/* discard EOT's (^D) on output) *\/\n-        OCRNL,       \/* map CR to NL on output *\/\n-        ONOCR,       \/* no CR output at column 0 *\/\n-        ONLRET,      \/* NL performs CR function *\/\n-        OFILL,       \/* use fill characters for delay *\/\n-        NLDLY,       \/* \\n delay *\/\n-        TABDLY,      \/* horizontal tab delay *\/\n-        CRDLY,       \/* \\r delay *\/\n-        FFDLY,       \/* form feed delay *\/\n-        BSDLY,       \/* \\b delay *\/\n-        VTDLY,       \/* vertical tab delay *\/\n-        OFDEL        \/* fill is DEL, else NUL *\/\n+        OPOST, \/* enable following output processing *\/\n+        ONLCR, \/* map NL to CR-NL (ala CRMOD) *\/\n+        OXTABS, \/* expand tabs to spaces *\/\n+        ONOEOT, \/* discard EOT's (^D) on output) *\/\n+        OCRNL, \/* map CR to NL on output *\/\n+        ONOCR, \/* no CR output at column 0 *\/\n+        ONLRET, \/* NL performs CR function *\/\n+        OFILL, \/* use fill characters for delay *\/\n+        NLDLY, \/* \\n delay *\/\n+        TABDLY, \/* horizontal tab delay *\/\n+        CRDLY, \/* \\r delay *\/\n+        FFDLY, \/* form feed delay *\/\n+        BSDLY, \/* \\b delay *\/\n+        VTDLY, \/* vertical tab delay *\/\n+        OFDEL \/* fill is DEL, else NUL *\/\n@@ -87,16 +89,16 @@\n-        CIGNORE,          \/* ignore control flags *\/\n-        CS5,              \/* 5 bits    (pseudo) *\/\n-        CS6,              \/* 6 bits *\/\n-        CS7,              \/* 7 bits *\/\n-        CS8,              \/* 8 bits *\/\n-        CSTOPB,           \/* send 2 stop bits *\/\n-        CREAD,            \/* enable receiver *\/\n-        PARENB,           \/* parity enable *\/\n-        PARODD,           \/* odd parity, else even *\/\n-        HUPCL,            \/* hang up on last close *\/\n-        CLOCAL,           \/* ignore modem status lines *\/\n-        CCTS_OFLOW,       \/* CTS flow control of output *\/\n-        CRTS_IFLOW,       \/* RTS flow control of input *\/\n-        CDTR_IFLOW,       \/* DTR flow control of input *\/\n-        CDSR_OFLOW,       \/* DSR flow control of output *\/\n-        CCAR_OFLOW        \/* DCD flow control of output *\/\n+        CIGNORE, \/* ignore control flags *\/\n+        CS5, \/* 5 bits    (pseudo) *\/\n+        CS6, \/* 6 bits *\/\n+        CS7, \/* 7 bits *\/\n+        CS8, \/* 8 bits *\/\n+        CSTOPB, \/* send 2 stop bits *\/\n+        CREAD, \/* enable receiver *\/\n+        PARENB, \/* parity enable *\/\n+        PARODD, \/* odd parity, else even *\/\n+        HUPCL, \/* hang up on last close *\/\n+        CLOCAL, \/* ignore modem status lines *\/\n+        CCTS_OFLOW, \/* CTS flow control of output *\/\n+        CRTS_IFLOW, \/* RTS flow control of input *\/\n+        CDTR_IFLOW, \/* DTR flow control of input *\/\n+        CDSR_OFLOW, \/* DSR flow control of output *\/\n+        CCAR_OFLOW \/* DCD flow control of output *\/\n@@ -113,17 +115,17 @@\n-        ECHOKE,           \/* visual erase for line kill *\/\n-        ECHOE,            \/* visually erase chars *\/\n-        ECHOK,            \/* echo NL after line kill *\/\n-        ECHO,             \/* enable echoing *\/\n-        ECHONL,           \/* echo NL even if ECHO is off *\/\n-        ECHOPRT,          \/* visual erase mode for hardcopy *\/\n-        ECHOCTL,          \/* echo control chars as ^(Char) *\/\n-        ISIG,             \/* enable signals INTR, QUIT, [D]SUSP *\/\n-        ICANON,           \/* canonicalize input lines *\/\n-        ALTWERASE,        \/* use alternate WERASE algorithm *\/\n-        IEXTEN,           \/* enable DISCARD and LNEXT *\/\n-        EXTPROC,          \/* external processing *\/\n-        TOSTOP,           \/* stop background jobs from output *\/\n-        FLUSHO,           \/* output being flushed (state) *\/\n-        NOKERNINFO,       \/* no kernel output from VSTATUS *\/\n-        PENDIN,           \/* XXX retype pending input (state) *\/\n-        NOFLSH            \/* don't flush after interrupt *\/\n+        ECHOKE, \/* visual erase for line kill *\/\n+        ECHOE, \/* visually erase chars *\/\n+        ECHOK, \/* echo NL after line kill *\/\n+        ECHO, \/* enable echoing *\/\n+        ECHONL, \/* echo NL even if ECHO is off *\/\n+        ECHOPRT, \/* visual erase mode for hardcopy *\/\n+        ECHOCTL, \/* echo control chars as ^(Char) *\/\n+        ISIG, \/* enable signals INTR, QUIT, [D]SUSP *\/\n+        ICANON, \/* canonicalize input lines *\/\n+        ALTWERASE, \/* use alternate WERASE algorithm *\/\n+        IEXTEN, \/* enable DISCARD and LNEXT *\/\n+        EXTPROC, \/* external processing *\/\n+        TOSTOP, \/* stop background jobs from output *\/\n+        FLUSHO, \/* output being flushed (state) *\/\n+        NOKERNINFO, \/* no kernel output from VSTATUS *\/\n+        PENDIN, \/* XXX retype pending input (state) *\/\n+        NOFLSH \/* don't flush after interrupt *\/\n@@ -138,2 +140,1 @@\n-    public Attributes() {\n-    }\n+    public Attributes() {}\n@@ -141,0 +142,1 @@\n+    @SuppressWarnings(\"this-escape\")\n@@ -313,7 +315,6 @@\n-        return \"Attributes[\" +\n-                \"lflags: \" + append(lflag) + \", \" +\n-                \"iflags: \" + append(iflag) + \", \" +\n-                \"oflags: \" + append(oflag) + \", \" +\n-                \"cflags: \" + append(cflag) + \", \" +\n-                \"cchars: \" + append(EnumSet.allOf(ControlChar.class), this::display) +\n-                \"]\";\n+        return \"Attributes[\" + \"lflags: \"\n+                + append(lflag) + \", \" + \"iflags: \"\n+                + append(iflag) + \", \" + \"oflags: \"\n+                + append(oflag) + \", \" + \"cflags: \"\n+                + append(cflag) + \", \" + \"cchars: \"\n+                + append(EnumSet.allOf(ControlChar.class), this::display) + \"]\";\n@@ -348,1 +349,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/Attributes.java","additions":73,"deletions":73,"binary":false,"changes":146,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/Cursor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -74,7 +74,6 @@\n-        return \"MouseEvent[\" +\n-                \"type=\" + type +\n-                \", button=\" + button +\n-                \", modifiers=\" + modifiers +\n-                \", x=\" + x +\n-                \", y=\" + y +\n-                ']';\n+        return \"MouseEvent[\" + \"type=\"\n+                + type + \", button=\"\n+                + button + \", modifiers=\"\n+                + modifiers + \", x=\"\n+                + x + \", y=\"\n+                + y + ']';\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/MouseEvent.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -16,2 +16,1 @@\n-    public Size() {\n-    }\n+    public Size() {}\n@@ -19,0 +18,1 @@\n+    @SuppressWarnings(\"this-escape\")\n@@ -53,1 +53,1 @@\n-        return row * (cols+1) + col;\n+        return row * (cols + 1) + col;\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/Size.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -37,0 +37,1 @@\n+\n@@ -45,0 +46,3 @@\n+    \/**\n+     * Types of signals.\n+     *\/\n@@ -54,0 +58,5 @@\n+    \/**\n+     * The SignalHandler defines the interface used to trap signals and perform specific behaviors.\n+     * @see Terminal.Signal\n+     * @see Terminal#handle(Signal, SignalHandler)\n+     *\/\n@@ -56,0 +65,4 @@\n+        \/**\n+         * The {@code SIG_DFL} value can be used to specify that the JVM default behavior\n+         * should be used to handle this signal.\n+         *\/\n@@ -57,0 +70,5 @@\n+\n+        \/**\n+         * The {@code SIG_IGN} value can be used to ignore this signal and not perform\n+         * any special processing.\n+         *\/\n@@ -59,0 +77,4 @@\n+        \/**\n+         * Handle the signal.\n+         * @param signal the signal\n+         *\/\n@@ -62,0 +84,10 @@\n+    \/**\n+     * Registers a handler for the given {@link Signal}.\n+     * <p>\n+     * Note that the JVM does not easily allow catching the {@link Signal#QUIT} signal, which causes a thread dump\n+     * to be displayed.  This signal is mainly used when connecting through an SSH socket to a virtual terminal.\n+     *\n+     * @param signal the signal to register a handler for\n+     * @param handler the handler\n+     * @return the previous signal handler\n+     *\/\n@@ -64,0 +96,11 @@\n+    \/**\n+     * Raise the specific signal.\n+     * This is not method usually called by non system terminals.\n+     * When accessing a terminal through a SSH or Telnet connection, signals may be\n+     * conveyed by the protocol and thus need to be raised when reaching the terminal code.\n+     * The terminals do that automatically when the terminal input stream has a character\n+     * mapped to {@link Attributes.ControlChar#VINTR}, {@link Attributes.ControlChar#VQUIT},\n+     * or {@link Attributes.ControlChar#VSUSP}.\n+     *\n+     * @param signal the signal to raise\n+     *\/\n@@ -183,0 +226,7 @@\n+    \/**\n+     * Returns the terminal attributes.\n+     * The returned object can be safely modified\n+     * further used in a call to {@link #setAttributes(Attributes)}.\n+     *\n+     * @return the terminal attributes.\n+     *\/\n@@ -185,0 +235,6 @@\n+    \/**\n+     * Set the terminal attributes.\n+     * The terminal will perform a copy of the given attributes.\n+     *\n+     * @param attr the new attributes\n+     *\/\n@@ -337,1 +393,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/Terminal.java","additions":57,"deletions":2,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2021, the original author(s).\n@@ -11,3 +11,0 @@\n-import java.io.FileDescriptor;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n@@ -22,0 +19,4 @@\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashSet;\n@@ -27,0 +28,1 @@\n+import java.util.Set;\n@@ -34,1 +36,0 @@\n-import jdk.internal.org.jline.terminal.impl.AbstractWindowsTerminal;\n@@ -36,0 +37,3 @@\n+import jdk.internal.org.jline.terminal.impl.DumbTerminalProvider;\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalExt;\n@@ -52,4 +56,16 @@\n-    public static final String PROP_JNA = \"org.jline.terminal.jna\";\n-    public static final String PROP_JANSI = \"org.jline.terminal.jansi\";\n-    public static final String PROP_EXEC = \"org.jline.terminal.exec\";\n-    public static final String PROP_DUMB = \"org.jline.terminal.dumb\";\n+    public static final String PROP_PROVIDER = \"org.jline.terminal.provider\";\n+    public static final String PROP_PROVIDERS = \"org.jline.terminal.providers\";\n+    public static final String PROP_PROVIDER_FFM = \"ffm\";\n+    public static final String PROP_PROVIDER_JNI = \"jni\";\n+    public static final String PROP_PROVIDER_JANSI = \"jansi\";\n+    public static final String PROP_PROVIDER_JNA = \"jna\";\n+    public static final String PROP_PROVIDER_EXEC = \"exec\";\n+    public static final String PROP_PROVIDER_DUMB = \"dumb\";\n+    public static final String PROP_PROVIDERS_DEFAULT = String.join(\n+            \",\", PROP_PROVIDER_FFM, PROP_PROVIDER_JNI, PROP_PROVIDER_JANSI, PROP_PROVIDER_JNA, PROP_PROVIDER_EXEC);\n+    public static final String PROP_FFM = \"org.jline.terminal.\" + PROP_PROVIDER_FFM;\n+    public static final String PROP_JNI = \"org.jline.terminal.\" + PROP_PROVIDER_JNI;\n+    public static final String PROP_JANSI = \"org.jline.terminal.\" + PROP_PROVIDER_JANSI;\n+    public static final String PROP_JNA = \"org.jline.terminal.\" + PROP_PROVIDER_JNA;\n+    public static final String PROP_EXEC = \"org.jline.terminal.\" + PROP_PROVIDER_EXEC;\n+    public static final String PROP_DUMB = \"org.jline.terminal.\" + PROP_PROVIDER_DUMB;\n@@ -62,0 +78,2 @@\n+    public static final String PROP_OUTPUT_FORCED_OUT = \"forced-out\";\n+    public static final String PROP_OUTPUT_FORCED_ERR = \"forced-err\";\n@@ -71,0 +89,26 @@\n+    \/\/\n+    \/\/ System properties controlling how FileDescriptor are create.\n+    \/\/ The value can be a comma separated list of defined mechanisms.\n+    \/\/\n+    public static final String PROP_FILE_DESCRIPTOR_CREATION_MODE = \"org.jline.terminal.pty.fileDescriptorCreationMode\";\n+    public static final String PROP_FILE_DESCRIPTOR_CREATION_MODE_NATIVE = \"native\";\n+    public static final String PROP_FILE_DESCRIPTOR_CREATION_MODE_REFLECTION = \"reflection\";\n+    public static final String PROP_FILE_DESCRIPTOR_CREATION_MODE_DEFAULT =\n+            String.join(\",\", PROP_FILE_DESCRIPTOR_CREATION_MODE_REFLECTION, PROP_FILE_DESCRIPTOR_CREATION_MODE_NATIVE);\n+\n+    \/\/\n+    \/\/ System properties controlling how RedirectPipe are created.\n+    \/\/ The value can be a comma separated list of defined mechanisms.\n+    \/\/\n+    public static final String PROP_REDIRECT_PIPE_CREATION_MODE = \"org.jline.terminal.exec.redirectPipeCreationMode\";\n+    public static final String PROP_REDIRECT_PIPE_CREATION_MODE_NATIVE = \"native\";\n+    public static final String PROP_REDIRECT_PIPE_CREATION_MODE_REFLECTION = \"reflection\";\n+    public static final String PROP_REDIRECT_PIPE_CREATION_MODE_DEFAULT =\n+            String.join(\",\", PROP_REDIRECT_PIPE_CREATION_MODE_REFLECTION, PROP_REDIRECT_PIPE_CREATION_MODE_NATIVE);\n+\n+    public static final Set<String> DEPRECATED_PROVIDERS =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(PROP_PROVIDER_JNA, PROP_PROVIDER_JANSI)));\n+\n+    public static final String PROP_DISABLE_DEPRECATED_PROVIDER_WARNING =\n+            \"org.jline.terminal.disableDeprecatedProviderWarning\";\n+\n@@ -78,1 +122,3 @@\n-        SysErrOrSysOut\n+        SysErrOrSysOut,\n+        ForcedSysOut,\n+        ForcedSysErr\n@@ -118,0 +164,2 @@\n+    private String provider;\n+    private String providers;\n@@ -120,0 +168,1 @@\n+    private Boolean jni;\n@@ -121,0 +170,1 @@\n+    private Boolean ffm;\n@@ -125,1 +175,1 @@\n-    private boolean nativeSignals = false;\n+    private boolean nativeSignals = true;\n@@ -130,2 +180,1 @@\n-    private TerminalBuilder() {\n-    }\n+    private TerminalBuilder() {}\n@@ -163,0 +212,10 @@\n+    public TerminalBuilder provider(String provider) {\n+        this.provider = provider;\n+        return this;\n+    }\n+\n+    public TerminalBuilder providers(String providers) {\n+        this.providers = providers;\n+        return this;\n+    }\n+\n@@ -173,0 +232,5 @@\n+    public TerminalBuilder jni(boolean jni) {\n+        this.jni = jni;\n+        return this;\n+    }\n+\n@@ -178,0 +242,5 @@\n+    public TerminalBuilder ffm(boolean ffm) {\n+        this.ffm = ffm;\n+        return this;\n+    }\n+\n@@ -283,0 +352,6 @@\n+    \/**\n+     * Determines the default value for signal handlers.\n+     * All signals will be mapped to the given handler.\n+     * @param signalHandler the default signal handler\n+     * @return The builder\n+     *\/\n@@ -308,0 +383,5 @@\n+    \/**\n+     * Builds the terminal.\n+     * @return the newly created terminal, never {@code null}\n+     * @throws IOException if an error occurs\n+     *\/\n@@ -316,1 +396,2 @@\n-            Log.debug(() -> \"Using pty \" + ((AbstractPosixTerminal) terminal).getPty().getClass().getSimpleName());\n+            Log.debug(() -> \"Using pty \"\n+                    + ((AbstractPosixTerminal) terminal).getPty().getClass().getSimpleName());\n@@ -326,39 +407,6 @@\n-        Charset encoding = this.encoding;\n-        if (encoding == null) {\n-            String charsetName = System.getProperty(PROP_ENCODING);\n-            if (charsetName != null && Charset.isSupported(charsetName)) {\n-                encoding = Charset.forName(charsetName);\n-            }\n-        }\n-        if (encoding == null) {\n-            int codepage = this.codepage;\n-            if (codepage <= 0) {\n-                String str = System.getProperty(PROP_CODEPAGE);\n-                if (str != null) {\n-                    codepage = Integer.parseInt(str);\n-                }\n-            }\n-            if (codepage >= 0) {\n-                encoding = getCodepageCharset(codepage);\n-            } else {\n-                encoding = StandardCharsets.UTF_8;\n-            }\n-        }\n-        String type = this.type;\n-        if (type == null) {\n-            type = System.getProperty(PROP_TYPE);\n-        }\n-        if (type == null) {\n-            type = System.getenv(\"TERM\");\n-        }\n-        Boolean jna = this.jna;\n-        if (jna == null) {\n-            jna = getBoolean(PROP_JNA, true);\n-        }\n-        Boolean jansi = this.jansi;\n-        if (jansi == null) {\n-            jansi = getBoolean(PROP_JANSI, true);\n-        }\n-        Boolean exec = this.exec;\n-        if (exec == null) {\n-            exec = getBoolean(PROP_EXEC, true);\n+        Charset encoding = computeEncoding();\n+        String type = computeType();\n+\n+        String provider = this.provider;\n+        if (provider == null) {\n+            provider = System.getProperty(PROP_PROVIDER, null);\n@@ -366,0 +414,4 @@\n+\n+        boolean forceDumb =\n+                (DumbTerminal.TYPE_DUMB.equals(type) || type != null && type.startsWith(DumbTerminal.TYPE_DUMB_COLOR))\n+                        || (provider != null && provider.equals(PROP_PROVIDER_DUMB));\n@@ -371,30 +423,1 @@\n-        List<TerminalProvider> providers = new ArrayList<>();\n-        if (jna) {\n-            try {\n-                TerminalProvider provider = TerminalProvider.load(\"jna\");\n-                providers.add(provider);\n-            }  catch (Throwable t) {\n-                Log.debug(\"Unable to load JNA support: \", t);\n-                exception.addSuppressed(t);\n-            }\n-        }\n-        if (jansi) {\n-            try {\n-                TerminalProvider provider = TerminalProvider.load(\"jansi\");\n-                providers.add(provider);\n-            }  catch (Throwable t) {\n-                Log.debug(\"Unable to load JANSI support: \", t);\n-                exception.addSuppressed(t);\n-            }\n-        }\n-        if (exec)\n-        {\n-            try {\n-                TerminalProvider provider = TerminalProvider.load(\"exec\");\n-                providers.add(provider);\n-            }  catch (Throwable t) {\n-                Log.debug(\"Unable to load EXEC support: \", t);\n-                exception.addSuppressed(t);\n-            }\n-        }\n-\n+        List<TerminalProvider> providers = getProviders(provider, exception);\n@@ -403,2 +426,3 @@\n-            if (system != null && ((in != null && !in.equals(System.in)) ||\n-                    (out != null && !out.equals(System.out) && !out.equals(System.err)))) {\n+            if (system != null\n+                    && ((in != null && !in.equals(System.in))\n+                            || (out != null && !out.equals(System.out) && !out.equals(System.err)))) {\n@@ -410,28 +434,5 @@\n-            if (out != null) {\n-                if (out.equals(System.out)) {\n-                    systemOutput = SystemOutput.SysOut;\n-                } else if (out.equals(System.err)) {\n-                    systemOutput = SystemOutput.SysErr;\n-                }\n-            }\n-            if (systemOutput == null) {\n-                String str = System.getProperty(PROP_OUTPUT);\n-                if (str != null) {\n-                    switch (str.trim().toLowerCase(Locale.ROOT)) {\n-                        case PROP_OUTPUT_OUT: systemOutput = SystemOutput.SysOut; break;\n-                        case PROP_OUTPUT_ERR: systemOutput = SystemOutput.SysErr; break;\n-                        case PROP_OUTPUT_OUT_ERR: systemOutput = SystemOutput.SysOutOrSysErr; break;\n-                        case PROP_OUTPUT_ERR_OUT: systemOutput = SystemOutput.SysErrOrSysOut; break;\n-                        default:\n-                            Log.debug(\"Unsupported value for \" + PROP_OUTPUT + \": \" + str + \". Supported values are: \"\n-                                    + String.join(\", \", PROP_OUTPUT_OUT, PROP_OUTPUT_ERR, PROP_OUTPUT_OUT_ERR,PROP_OUTPUT_ERR_OUT)\n-                                    + \".\");\n-                    }\n-                }\n-            }\n-            if (systemOutput == null) {\n-                systemOutput = SystemOutput.SysOutOrSysErr;\n-            }\n-            Map<TerminalProvider.Stream, Boolean> system = Stream.of(TerminalProvider.Stream.values())\n-                    .collect(Collectors.toMap(stream -> stream, stream -> providers.stream().anyMatch(p -> p.isSystemStream(stream))));\n-            TerminalProvider.Stream console = select(system, systemOutput);\n+            SystemOutput systemOutput = computeSystemOutput();\n+            Map<SystemStream, Boolean> system = Stream.of(SystemStream.values())\n+                    .collect(Collectors.toMap(\n+                            stream -> stream, stream -> providers.stream().anyMatch(p -> p.isSystemStream(stream))));\n+            SystemStream systemStream = select(system, systemOutput);\n@@ -439,1 +440,1 @@\n-            if (system.get(TerminalProvider.Stream.Input) && console != null) {\n+            if (!forceDumb && system.get(SystemStream.Input) && systemStream != null) {\n@@ -446,2 +447,4 @@\n-                if ((OSUtils.IS_CYGWIN || OSUtils.IS_MSYSTEM)  && \"xterm\".equals(type)\n-                        && this.type == null && System.getProperty(PROP_TYPE) == null) {\n+                if ((OSUtils.IS_CYGWIN || OSUtils.IS_MSYSTEM)\n+                        && \"xterm\".equals(type)\n+                        && this.type == null\n+                        && System.getProperty(PROP_TYPE) == null) {\n@@ -450,1 +453,1 @@\n-                for ( TerminalProvider provider : providers) {\n+                for (TerminalProvider prov : providers) {\n@@ -453,2 +456,10 @@\n-                            terminal = provider.sysTerminal(name, type, ansiPassThrough, encoding,\n-                                    nativeSignals, signalHandler, paused, console, inputStreamWrapper);\n+                            terminal = prov.sysTerminal(\n+                                    name,\n+                                    type,\n+                                    ansiPassThrough,\n+                                    encoding,\n+                                    nativeSignals,\n+                                    signalHandler,\n+                                    paused,\n+                                    systemStream,\n+                                    inputStreamWrapper);\n@@ -456,1 +467,1 @@\n-                            Log.debug(\"Error creating \" + provider.name() + \" based terminal: \", t.getMessage(), t);\n+                            Log.debug(\"Error creating \" + prov.name() + \" based terminal: \", t.getMessage(), t);\n@@ -461,3 +472,5 @@\n-                if (terminal == null && OSUtils.IS_WINDOWS &&  !jna && !jansi && (dumb == null || !dumb)) {\n-                    throw new IllegalStateException(\"Unable to create a system terminal. On windows, either \"\n-                            + \"JNA or JANSI library is required.  Make sure to add one of those in the classpath.\");\n+                if (terminal == null && OSUtils.IS_WINDOWS && providers.isEmpty() && (dumb == null || !dumb)) {\n+                    throw new IllegalStateException(\n+                            \"Unable to create a system terminal. On Windows, either JLine's native libraries, JNA \"\n+                                    + \"or Jansi library is required.  Make sure to add one of those in the classpath.\",\n+                            exception);\n@@ -471,3 +484,3 @@\n-                    exception.addSuppressed(new IllegalStateException(\"A system terminal is already running. \" +\n-                            \"Make sure to use the created system Terminal on the LineReaderBuilder if you're using one \" +\n-                            \"or that previously created system Terminals have been correctly closed.\"));\n+                    exception.addSuppressed(new IllegalStateException(\"A system terminal is already running. \"\n+                            + \"Make sure to use the created system Terminal on the LineReaderBuilder if you're using one \"\n+                            + \"or that previously created system Terminals have been correctly closed.\"));\n@@ -478,27 +491,10 @@\n-            if (terminal == null && (dumb == null || dumb)) {\n-                \/\/ forced colored dumb terminal\n-                Boolean color = this.color;\n-                if (color == null) {\n-                    color = getBoolean(PROP_DUMB_COLOR, false);\n-                    \/\/ detect emacs using the env variable\n-                    if (!color) {\n-                        String emacs = System.getenv(\"INSIDE_EMACS\");\n-                        color = emacs != null && emacs.contains(\"comint\");\n-                    }\n-                    \/\/ detect Intellij Idea\n-                    if (!color) {\n-                        String command = getParentProcessCommand();\n-                        color = command != null && command.contains(\"idea\");\n-                    }\n-                    if (!color) {\n-                        color = system.get(TerminalProvider.Stream.Output) && System.getenv(\"TERM\") != null;\n-                    }\n-                    if (!color && dumb == null) {\n-                        if (Log.isDebugEnabled()) {\n-                            Log.warn(\"input is tty: {}\", system.get(TerminalProvider.Stream.Input));\n-                            Log.warn(\"output is tty: {}\", system.get(TerminalProvider.Stream.Output));\n-                            Log.warn(\"error is tty: {}\", system.get(TerminalProvider.Stream.Error));\n-                            Log.warn(\"Creating a dumb terminal\", exception);\n-                        } else {\n-                            Log.warn(\"Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)\");\n-                        }\n+            if (terminal == null && (forceDumb || dumb == null || dumb)) {\n+                if (!forceDumb && dumb == null) {\n+                    if (Log.isDebugEnabled()) {\n+                        Log.warn(\"input is tty: \" + system.get(SystemStream.Input));\n+                        Log.warn(\"output is tty: \" + system.get(SystemStream.Output));\n+                        Log.warn(\"error is tty: \" + system.get(SystemStream.Error));\n+                        Log.warn(\"Creating a dumb terminal\", exception);\n+                    } else {\n+                        Log.warn(\n+                                \"Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)\");\n@@ -507,4 +503,8 @@\n-                terminal = new DumbTerminal(name, color ? Terminal.TYPE_DUMB_COLOR : Terminal.TYPE_DUMB,\n-                        new FileInputStream(FileDescriptor.in),\n-                        new FileOutputStream(console == TerminalProvider.Stream.Output ? FileDescriptor.out : FileDescriptor.err),\n-                        encoding, signalHandler);\n+                type = getDumbTerminalType(dumb, systemStream);\n+                terminal = new DumbTerminalProvider()\n+                        .sysTerminal(name, type, false, encoding, nativeSignals, signalHandler, paused, systemStream, inputStreamWrapper);\n+                if (OSUtils.IS_WINDOWS) {\n+                    Attributes attr = terminal.getAttributes();\n+                    attr.setInputFlag(Attributes.InputFlag.IGNCR, true);\n+                    terminal.setAttributes(attr);\n+                }\n@@ -513,1 +513,1 @@\n-            for ( TerminalProvider provider : providers) {\n+            for (TerminalProvider prov : providers) {\n@@ -516,1 +516,2 @@\n-                        terminal = provider.newTerminal(name, type, inputStreamWrapper.apply(in), out, encoding, signalHandler, paused, attributes, size);\n+                        terminal = prov.newTerminal(\n+                                name, type, in, out, encoding, signalHandler, paused, attributes, size);\n@@ -518,1 +519,1 @@\n-                        Log.debug(\"Error creating \" + provider.name() + \" based terminal: \", t.getMessage(), t);\n+                        Log.debug(\"Error creating \" + prov.name() + \" based terminal: \", t.getMessage(), t);\n@@ -527,0 +528,9 @@\n+        if (terminal instanceof TerminalExt) {\n+            TerminalExt te = (TerminalExt) terminal;\n+            if (DEPRECATED_PROVIDERS.contains(te.getProvider().name())\n+                    && !getBoolean(PROP_DISABLE_DEPRECATED_PROVIDER_WARNING, false)) {\n+                Log.warn(\"The terminal provider \" + te.getProvider().name()\n+                        + \" has been deprecated, check your configuration. This warning can be disabled by setting the system property \"\n+                        + PROP_DISABLE_DEPRECATED_PROVIDER_WARNING + \" to true.\");\n+            }\n+        }\n@@ -530,1 +540,183 @@\n-    private TerminalProvider.Stream select(Map<TerminalProvider.Stream, Boolean> system, SystemOutput systemOutput) {\n+    private String getDumbTerminalType(Boolean dumb, SystemStream systemStream) {\n+        \/\/ forced colored dumb terminal\n+        Boolean color = this.color;\n+        if (color == null) {\n+            color = getBoolean(PROP_DUMB_COLOR, null);\n+        }\n+        if (dumb == null) {\n+            \/\/ detect emacs using the env variable\n+            if (color == null) {\n+                String emacs = System.getenv(\"INSIDE_EMACS\");\n+                if (emacs != null && emacs.contains(\"comint\")) {\n+                    color = true;\n+                }\n+            }\n+            \/\/ detect Intellij Idea\n+            if (color == null) {\n+                \/\/ using the env variable on windows\n+                String ideHome = System.getenv(\"IDE_HOME\");\n+                if (ideHome != null) {\n+                    color = true;\n+                } else {\n+                    \/\/ using the parent process command on unix\/mac\n+                    String command = getParentProcessCommand();\n+                    if (command != null && command.endsWith(\"\/idea\")) {\n+                        color = true;\n+                    }\n+                }\n+            }\n+            if (color == null) {\n+                color = systemStream != null && System.getenv(\"TERM\") != null;\n+            }\n+        } else {\n+            if (color == null) {\n+                color = false;\n+            }\n+        }\n+        return color ? Terminal.TYPE_DUMB_COLOR : Terminal.TYPE_DUMB;\n+    }\n+\n+    public SystemOutput computeSystemOutput() {\n+        SystemOutput systemOutput = null;\n+        if (out != null) {\n+            if (out.equals(System.out)) {\n+                systemOutput = SystemOutput.SysOut;\n+            } else if (out.equals(System.err)) {\n+                systemOutput = SystemOutput.SysErr;\n+            }\n+        }\n+        if (systemOutput == null) {\n+            systemOutput = this.systemOutput;\n+        }\n+        if (systemOutput == null) {\n+            String str = System.getProperty(PROP_OUTPUT);\n+            if (str != null) {\n+                switch (str.trim().toLowerCase(Locale.ROOT)) {\n+                    case PROP_OUTPUT_OUT:\n+                        systemOutput = SystemOutput.SysOut;\n+                        break;\n+                    case PROP_OUTPUT_ERR:\n+                        systemOutput = SystemOutput.SysErr;\n+                        break;\n+                    case PROP_OUTPUT_OUT_ERR:\n+                        systemOutput = SystemOutput.SysOutOrSysErr;\n+                        break;\n+                    case PROP_OUTPUT_ERR_OUT:\n+                        systemOutput = SystemOutput.SysErrOrSysOut;\n+                        break;\n+                    case PROP_OUTPUT_FORCED_OUT:\n+                        systemOutput = SystemOutput.ForcedSysOut;\n+                        break;\n+                    case PROP_OUTPUT_FORCED_ERR:\n+                        systemOutput = SystemOutput.ForcedSysErr;\n+                        break;\n+                    default:\n+                        Log.debug(\"Unsupported value for \" + PROP_OUTPUT + \": \" + str + \". Supported values are: \"\n+                                + String.join(\n+                                        \", \",\n+                                        PROP_OUTPUT_OUT,\n+                                        PROP_OUTPUT_ERR,\n+                                        PROP_OUTPUT_OUT_ERR,\n+                                        PROP_OUTPUT_ERR_OUT)\n+                                + \".\");\n+                }\n+            }\n+        }\n+        if (systemOutput == null) {\n+            systemOutput = SystemOutput.SysOutOrSysErr;\n+        }\n+        return systemOutput;\n+    }\n+\n+    public String computeType() {\n+        String type = this.type;\n+        if (type == null) {\n+            type = System.getProperty(PROP_TYPE);\n+        }\n+        if (type == null) {\n+            type = System.getenv(\"TERM\");\n+        }\n+        return type;\n+    }\n+\n+    public Charset computeEncoding() {\n+        Charset encoding = this.encoding;\n+        if (encoding == null) {\n+            String charsetName = System.getProperty(PROP_ENCODING);\n+            if (charsetName != null && Charset.isSupported(charsetName)) {\n+                encoding = Charset.forName(charsetName);\n+            }\n+        }\n+        if (encoding == null) {\n+            int codepage = this.codepage;\n+            if (codepage <= 0) {\n+                String str = System.getProperty(PROP_CODEPAGE);\n+                if (str != null) {\n+                    codepage = Integer.parseInt(str);\n+                }\n+            }\n+            if (codepage >= 0) {\n+                encoding = getCodepageCharset(codepage);\n+            } else {\n+                encoding = StandardCharsets.UTF_8;\n+            }\n+        }\n+        return encoding;\n+    }\n+\n+    \/**\n+     * Get the list of available terminal providers.\n+     * This list is sorted according to the {@link #PROP_PROVIDERS} system property.\n+     * @param provider if not {@code null}, only this provider will be checked\n+     * @param exception if a provider throws an exception, it will be added to this exception as a suppressed exception\n+     * @return a list of terminal providers\n+     *\/\n+    public List<TerminalProvider> getProviders(String provider, IllegalStateException exception) {\n+        List<TerminalProvider> providers = new ArrayList<>();\n+        \/\/ Check ffm provider\n+        checkProvider(provider, exception, providers, ffm, PROP_FFM, PROP_PROVIDER_FFM);\n+        \/\/ Check jni provider\n+        checkProvider(provider, exception, providers, jni, PROP_JNI, PROP_PROVIDER_JNI);\n+        \/\/ Check jansi provider\n+        checkProvider(provider, exception, providers, jansi, PROP_JANSI, PROP_PROVIDER_JANSI);\n+        \/\/ Check jna provider\n+        checkProvider(provider, exception, providers, jna, PROP_JNA, PROP_PROVIDER_JNA);\n+        \/\/ Check exec provider\n+        checkProvider(provider, exception, providers, exec, PROP_EXEC, PROP_PROVIDER_EXEC);\n+        \/\/ Order providers\n+        List<String> order = Arrays.asList(\n+                (this.providers != null ? this.providers : System.getProperty(PROP_PROVIDERS, PROP_PROVIDERS_DEFAULT))\n+                        .split(\",\"));\n+        providers.sort(Comparator.comparing(l -> {\n+            int idx = order.indexOf(l.name());\n+            return idx >= 0 ? idx : Integer.MAX_VALUE;\n+        }));\n+        String names = providers.stream().map(TerminalProvider::name).collect(Collectors.joining(\", \"));\n+        Log.debug(\"Available providers: \" + names);\n+        return providers;\n+    }\n+\n+    private void checkProvider(\n+            String provider,\n+            IllegalStateException exception,\n+            List<TerminalProvider> providers,\n+            Boolean load,\n+            String property,\n+            String name) {\n+        Boolean doLoad = provider != null ? (Boolean) name.equals(provider) : load;\n+        if (doLoad == null) {\n+            doLoad = getBoolean(property, true);\n+        }\n+        if (doLoad) {\n+            try {\n+                TerminalProvider prov = TerminalProvider.load(name);\n+                prov.isSystemStream(SystemStream.Output);\n+                providers.add(prov);\n+            } catch (Throwable t) {\n+                Log.debug(\"Unable to load \" + name + \" provider: \", t);\n+                exception.addSuppressed(t);\n+            }\n+        }\n+    }\n+\n+    private SystemStream select(Map<SystemStream, Boolean> system, SystemOutput systemOutput) {\n@@ -533,1 +725,1 @@\n-                return select(system, TerminalProvider.Stream.Output);\n+                return select(system, SystemStream.Output);\n@@ -535,1 +727,1 @@\n-                return select(system, TerminalProvider.Stream.Error);\n+                return select(system, SystemStream.Error);\n@@ -537,1 +729,1 @@\n-                return select(system, TerminalProvider.Stream.Output, TerminalProvider.Stream.Error);\n+                return select(system, SystemStream.Output, SystemStream.Error);\n@@ -539,1 +731,5 @@\n-                return select(system, TerminalProvider.Stream.Error, TerminalProvider.Stream.Output);\n+                return select(system, SystemStream.Error, SystemStream.Output);\n+            case ForcedSysOut:\n+                return SystemStream.Output;\n+            case ForcedSysErr:\n+                return SystemStream.Error;\n@@ -544,2 +740,2 @@\n-    private static TerminalProvider.Stream select(Map<TerminalProvider.Stream, Boolean> system, TerminalProvider.Stream... streams) {\n-        for (TerminalProvider.Stream s : streams) {\n+    private static SystemStream select(Map<SystemStream, Boolean> system, SystemStream... streams) {\n+        for (SystemStream s : streams) {\n@@ -560,1 +756,3 @@\n-            Object command = ((Optional<?>) infoMethod.getReturnType().getMethod(\"command\").invoke(info)).orElse(null);\n+            Object command = ((Optional<?>)\n+                            infoMethod.getReturnType().getMethod(\"command\").invoke(info))\n+                    .orElse(null);\n@@ -585,1 +783,1 @@\n-        \/\/http:\/\/docs.oracle.com\/javase\/6\/docs\/technotes\/guides\/intl\/encoding.doc.html\n+        \/\/ http:\/\/docs.oracle.com\/javase\/6\/docs\/technotes\/guides\/intl\/encoding.doc.html\n@@ -632,1 +830,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/TerminalBuilder.java","additions":367,"deletions":170,"binary":false,"changes":537,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -21,0 +21,2 @@\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n@@ -31,1 +33,2 @@\n-    public AbstractPosixTerminal(String name, String type, Pty pty, Charset encoding, SignalHandler signalHandler) throws IOException {\n+    public AbstractPosixTerminal(String name, String type, Pty pty, Charset encoding, SignalHandler signalHandler)\n+            throws IOException {\n@@ -85,0 +88,9 @@\n+    @Override\n+    public TerminalProvider getProvider() {\n+        return getPty().getProvider();\n+    }\n+\n+    @Override\n+    public SystemStream getSystemStream() {\n+        return getPty().getSystemStream();\n+    }\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractPosixTerminal.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2019, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author(s).\n@@ -11,4 +11,2 @@\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.spi.Pty;\n-import jdk.internal.org.jline.utils.NonBlockingInputStream;\n-\n+import java.io.FileDescriptor;\n+import java.io.FilterInputStream;\n@@ -19,0 +17,9 @@\n+import java.lang.reflect.Field;\n+\n+\/\/import jdk.internal.org.jline.nativ.JLineLibrary;\n+\/\/import jdk.internal.org.jline.nativ.JLineNativeLoader;\n+import jdk.internal.org.jline.terminal.Attributes;\n+import jdk.internal.org.jline.terminal.spi.Pty;\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n+import jdk.internal.org.jline.utils.NonBlockingInputStream;\n@@ -20,0 +27,4 @@\n+import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_FILE_DESCRIPTOR_CREATION_MODE;\n+import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_FILE_DESCRIPTOR_CREATION_MODE_DEFAULT;\n+import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_FILE_DESCRIPTOR_CREATION_MODE_NATIVE;\n+import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_FILE_DESCRIPTOR_CREATION_MODE_REFLECTION;\n@@ -24,0 +35,2 @@\n+    protected final TerminalProvider provider;\n+    protected final SystemStream systemStream;\n@@ -25,0 +38,6 @@\n+    private boolean skipNextLf;\n+\n+    public AbstractPty(TerminalProvider provider, SystemStream systemStream) {\n+        this.provider = provider;\n+        this.systemStream = systemStream;\n+    }\n@@ -35,0 +54,22 @@\n+        InputStream nsi = new FilterInputStream(si) {\n+            @Override\n+            public int read() throws IOException {\n+                for (; ; ) {\n+                    int c = super.read();\n+                    if (current.getInputFlag(Attributes.InputFlag.INORMEOL)) {\n+                        if (c == '\\r') {\n+                            skipNextLf = true;\n+                            c = '\\n';\n+                        } else if (c == '\\n') {\n+                            if (skipNextLf) {\n+                                skipNextLf = false;\n+                                continue;\n+                            }\n+                        } else {\n+                            skipNextLf = false;\n+                        }\n+                    }\n+                    return c;\n+                }\n+            }\n+        };\n@@ -36,1 +77,1 @@\n-            return new PtyInputStream(si);\n+            return new PtyInputStream(nsi);\n@@ -38,1 +79,1 @@\n-            return si;\n+            return nsi;\n@@ -52,0 +93,10 @@\n+    @Override\n+    public TerminalProvider getProvider() {\n+        return provider;\n+    }\n+\n+    @Override\n+    public SystemStream getSystemStream() {\n+        return systemStream;\n+    }\n+\n@@ -105,0 +156,99 @@\n+    private static FileDescriptorCreator fileDescriptorCreator;\n+\n+    protected static FileDescriptor newDescriptor(int fd) {\n+        if (fileDescriptorCreator == null) {\n+            String str =\n+                    System.getProperty(PROP_FILE_DESCRIPTOR_CREATION_MODE, PROP_FILE_DESCRIPTOR_CREATION_MODE_DEFAULT);\n+            String[] modes = str.split(\",\");\n+            IllegalStateException ise = new IllegalStateException(\"Unable to create FileDescriptor\");\n+            for (String mode : modes) {\n+                try {\n+                    switch (mode) {\n+                        case PROP_FILE_DESCRIPTOR_CREATION_MODE_NATIVE:\n+                            fileDescriptorCreator = null;\/\/new NativeFileDescriptorCreator();\n+                            break;\n+                        case PROP_FILE_DESCRIPTOR_CREATION_MODE_REFLECTION:\n+                            fileDescriptorCreator = new ReflectionFileDescriptorCreator();\n+                            break;\n+                    }\n+                } catch (Throwable t) {\n+                    \/\/ ignore\n+                    ise.addSuppressed(t);\n+                }\n+                if (fileDescriptorCreator != null) {\n+                    break;\n+                }\n+            }\n+            if (fileDescriptorCreator == null) {\n+                throw ise;\n+            }\n+        }\n+        return fileDescriptorCreator.newDescriptor(fd);\n+    }\n+\n+    interface FileDescriptorCreator {\n+        FileDescriptor newDescriptor(int fd);\n+    }\n+\n+    \/*\n+     * Class that could be used on OpenJDK 17.  However, it requires the following JVM option\n+     *   --add-exports java.base\/jdk.internal.access=ALL-UNNAMED\n+     * so the benefit does not seem important enough to warrant the problems caused\n+     * by access the jdk.internal.access package at compile time, which itself requires\n+     * custom compiler options and a different maven module, or at least a different compile\n+     * phase with a JDK 17 compiler.\n+     * So, just keep the ReflectionFileDescriptorCreator for now.\n+     *\n+    static class Jdk17FileDescriptorCreator implements FileDescriptorCreator {\n+        private final jdk.internal.access.JavaIOFileDescriptorAccess fdAccess;\n+        Jdk17FileDescriptorCreator() {\n+            fdAccess = jdk.internal.access.SharedSecrets.getJavaIOFileDescriptorAccess();\n+        }\n+\n+        @Override\n+        public FileDescriptor newDescriptor(int fd) {\n+            FileDescriptor descriptor = new FileDescriptor();\n+            fdAccess.set(descriptor, fd);\n+            return descriptor;\n+        }\n+    }\n+     *\/\n+\n+    \/**\n+     * Reflection based file descriptor creator.\n+     * This requires the following option\n+     *   --add-opens java.base\/java.io=ALL-UNNAMED\n+     *\/\n+    static class ReflectionFileDescriptorCreator implements FileDescriptorCreator {\n+        private final Field fileDescriptorField;\n+\n+        ReflectionFileDescriptorCreator() throws Exception {\n+            Field field = FileDescriptor.class.getDeclaredField(\"fd\");\n+            field.setAccessible(true);\n+            fileDescriptorField = field;\n+        }\n+\n+        @Override\n+        public FileDescriptor newDescriptor(int fd) {\n+            FileDescriptor descriptor = new FileDescriptor();\n+            try {\n+                fileDescriptorField.set(descriptor, fd);\n+            } catch (IllegalAccessException e) {\n+                \/\/ This should not happen as the field has been set accessible\n+                throw new IllegalStateException(e);\n+            }\n+            return descriptor;\n+        }\n+    }\n+\n+\/\/    static class NativeFileDescriptorCreator implements FileDescriptorCreator {\n+\/\/        NativeFileDescriptorCreator() {\n+\/\/            \/\/ Force load the library\n+\/\/            JLineNativeLoader.initialize();\n+\/\/        }\n+\/\/\n+\/\/        @Override\n+\/\/        public FileDescriptor newDescriptor(int fd) {\n+\/\/            return JLineLibrary.newFileDescriptor(fd);\n+\/\/        }\n+\/\/    }\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractPty.java","additions":157,"deletions":7,"binary":false,"changes":164,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2021, the original author(s).\n@@ -30,1 +30,1 @@\n-import jdk.internal.org.jline.terminal.Terminal;\n+import jdk.internal.org.jline.terminal.spi.TerminalExt;\n@@ -38,1 +38,1 @@\n-public abstract class AbstractTerminal implements Terminal {\n+public abstract class AbstractTerminal implements TerminalExt {\n@@ -47,1 +47,1 @@\n-    protected final ColorPalette palette = new ColorPalette(this);\n+    protected final ColorPalette palette;\n@@ -55,1 +55,3 @@\n-    public AbstractTerminal(String name, String type, Charset encoding, SignalHandler signalHandler) throws IOException {\n+    @SuppressWarnings(\"this-escape\")\n+    public AbstractTerminal(String name, String type, Charset encoding, SignalHandler signalHandler)\n+            throws IOException {\n@@ -59,0 +61,1 @@\n+        this.palette = new ColorPalette(this);\n@@ -88,1 +91,5 @@\n-        if (handler != SignalHandler.SIG_DFL && handler != SignalHandler.SIG_IGN) {\n+        if (handler == SignalHandler.SIG_DFL) {\n+            if (status != null && signal == Signal.WINCH) {\n+                status.resize();\n+            }\n+        } else if (handler != SignalHandler.SIG_IGN) {\n@@ -91,3 +98,0 @@\n-        if (status != null && signal == Signal.WINCH) {\n-            status.resize();\n-        }\n@@ -108,2 +112,1 @@\n-            status.update(null);\n-            flush();\n+            status.close();\n@@ -129,1 +132,1 @@\n-                writer().write(new char[]{'^', (char) (vcc + '@')}, 0, 2);\n+                writer().write(new char[] {'^', (char) (vcc + '@')}, 0, 2);\n@@ -220,2 +223,1 @@\n-                MouseEvent.Type.Moved, MouseEvent.Button.NoButton,\n-                EnumSet.noneOf(MouseEvent.Modifier.class), 0, 0);\n+            MouseEvent.Type.Moved, MouseEvent.Button.NoButton, EnumSet.noneOf(MouseEvent.Modifier.class), 0, 0);\n@@ -271,2 +273,1 @@\n-    public void pause() {\n-    }\n+    public void pause() {}\n@@ -275,2 +276,1 @@\n-    public void pause(boolean wait) throws InterruptedException {\n-    }\n+    public void pause(boolean wait) throws InterruptedException {}\n@@ -279,2 +279,1 @@\n-    public void resume() {\n-    }\n+    public void resume() {}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractTerminal.java","additions":19,"deletions":20,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2017, the original author or authors.\n+ * Copyright (c) 2002-2017, the original author(s).\n@@ -32,2 +32,1 @@\n-    public void flush() {\n-    }\n+    public void flush() {}\n@@ -36,3 +35,1 @@\n-    public void close() {\n-    }\n-\n+    public void close() {}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractWindowsConsoleWriter.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2019, the original author or authors.\n+ * Copyright (c) 2002-2023, the original author(s).\n@@ -11,0 +11,10 @@\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.io.PrintWriter;\n+import java.io.Writer;\n+import java.nio.charset.Charset;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n@@ -13,0 +23,2 @@\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n@@ -24,11 +36,0 @@\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.io.PrintWriter;\n-import java.io.Writer;\n-import java.nio.charset.Charset;\n-import java.nio.charset.StandardCharsets;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.function.Function;\n-\n@@ -47,1 +48,1 @@\n-public abstract class AbstractWindowsTerminal extends AbstractTerminal {\n+public abstract class AbstractWindowsTerminal<Console> extends AbstractTerminal {\n@@ -59,5 +60,5 @@\n-    protected static final int ENABLE_LINE_INPUT      = 0x0002;\n-    protected static final int ENABLE_ECHO_INPUT      = 0x0004;\n-    protected static final int ENABLE_WINDOW_INPUT    = 0x0008;\n-    protected static final int ENABLE_MOUSE_INPUT     = 0x0010;\n-    protected static final int ENABLE_INSERT_MODE     = 0x0020;\n+    protected static final int ENABLE_LINE_INPUT = 0x0002;\n+    protected static final int ENABLE_ECHO_INPUT = 0x0004;\n+    protected static final int ENABLE_WINDOW_INPUT = 0x0008;\n+    protected static final int ENABLE_MOUSE_INPUT = 0x0010;\n+    protected static final int ENABLE_INSERT_MODE = 0x0020;\n@@ -65,0 +66,1 @@\n+    protected static final int ENABLE_EXTENDED_FLAGS = 0x0080;\n@@ -74,1 +76,6 @@\n-    protected final int originalConsoleMode;\n+    protected final Console inConsole;\n+    protected final Console outConsole;\n+    protected final int originalInConsoleMode;\n+    protected final int originalOutConsoleMode;\n+    private final TerminalProvider provider;\n+    private final SystemStream systemStream;\n@@ -83,2 +90,18 @@\n-\n-    public AbstractWindowsTerminal(Writer writer, String name, String type, Charset encoding, boolean nativeSignals, SignalHandler signalHandler, Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n+    protected boolean skipNextLf;\n+\n+    @SuppressWarnings(\"this-escape\")\n+    public AbstractWindowsTerminal(\n+            TerminalProvider provider,\n+            SystemStream systemStream,\n+            Writer writer,\n+            String name,\n+            String type,\n+            Charset encoding,\n+            boolean nativeSignals,\n+            SignalHandler signalHandler,\n+            Console inConsole,\n+            int inConsoleMode,\n+            Console outConsole,\n+            int outConsoleMode,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n@@ -86,0 +109,2 @@\n+        this.provider = provider;\n+        this.systemStream = systemStream;\n@@ -92,0 +117,2 @@\n+        this.inConsole = inConsole;\n+        this.outConsole = outConsole;\n@@ -94,1 +121,2 @@\n-        originalConsoleMode = getConsoleMode();\n+        this.originalInConsoleMode = inConsoleMode;\n+        this.originalOutConsoleMode = outConsoleMode;\n@@ -97,1 +125,1 @@\n-        attributes.setControlChar(Attributes.ControlChar.VEOF,  ctrl('D'));\n+        attributes.setControlChar(Attributes.ControlChar.VEOF, ctrl('D'));\n@@ -151,1 +179,1 @@\n-        int mode = getConsoleMode();\n+        int mode = getConsoleMode(inConsole);\n@@ -176,0 +204,3 @@\n+            \/\/ mouse events not send with quick edit mode\n+            \/\/ to disable ENABLE_QUICK_EDIT_MODE just set extended flag\n+            mode |= ENABLE_EXTENDED_FLAGS;\n@@ -177,1 +208,1 @@\n-        setConsoleMode(mode);\n+        setConsoleMode(inConsole, mode);\n@@ -200,1 +231,2 @@\n-        setConsoleMode(originalConsoleMode);\n+        setConsoleMode(inConsole, originalInConsoleMode);\n+        setConsoleMode(outConsole, originalOutConsoleMode);\n@@ -204,13 +236,15 @@\n-    static final int ALT_FLAG =   0x02;\n-    static final int CTRL_FLAG =  0x04;\n-\n-    static final int RIGHT_ALT_PRESSED =   0x0001;\n-    static final int LEFT_ALT_PRESSED =    0x0002;\n-    static final int RIGHT_CTRL_PRESSED =  0x0004;\n-    static final int LEFT_CTRL_PRESSED =   0x0008;\n-    static final int SHIFT_PRESSED =       0x0010;\n-    static final int NUMLOCK_ON =          0x0020;\n-    static final int SCROLLLOCK_ON =       0x0040;\n-    static final int CAPSLOCK_ON =         0x0080;\n-\n-    protected void processKeyEvent(final boolean isKeyDown, final short virtualKeyCode, char ch, final int controlKeyState) throws IOException {\n+    static final int ALT_FLAG = 0x02;\n+    static final int CTRL_FLAG = 0x04;\n+\n+    static final int RIGHT_ALT_PRESSED = 0x0001;\n+    static final int LEFT_ALT_PRESSED = 0x0002;\n+    static final int RIGHT_CTRL_PRESSED = 0x0004;\n+    static final int LEFT_CTRL_PRESSED = 0x0008;\n+    static final int SHIFT_PRESSED = 0x0010;\n+    static final int NUMLOCK_ON = 0x0020;\n+    static final int SCROLLLOCK_ON = 0x0040;\n+    static final int CAPSLOCK_ON = 0x0080;\n+\n+    protected void processKeyEvent(\n+            final boolean isKeyDown, final short virtualKeyCode, char ch, final int controlKeyState)\n+            throws IOException {\n@@ -225,2 +259,3 @@\n-                    && (controlKeyState & (RIGHT_ALT_PRESSED | LEFT_ALT_PRESSED | RIGHT_CTRL_PRESSED | LEFT_CTRL_PRESSED | SHIFT_PRESSED))\n-                        == (RIGHT_ALT_PRESSED | LEFT_CTRL_PRESSED)) {\n+                    && (controlKeyState\n+                                    & (RIGHT_ALT_PRESSED | LEFT_ALT_PRESSED | RIGHT_CTRL_PRESSED | LEFT_CTRL_PRESSED))\n+                            == (RIGHT_ALT_PRESSED | LEFT_CTRL_PRESSED)) {\n@@ -229,1 +264,2 @@\n-                final String keySeq = getEscapeSequence(virtualKeyCode, (isCtrl ? CTRL_FLAG : 0) + (isAlt ? ALT_FLAG : 0) + (isShift ? SHIFT_FLAG : 0));\n+                final String keySeq = getEscapeSequence(\n+                        virtualKeyCode, (isCtrl ? CTRL_FLAG : 0) + (isAlt ? ALT_FLAG : 0) + (isShift ? SHIFT_FLAG : 0));\n@@ -243,1 +279,1 @@\n-                *\/\n+                 *\/\n@@ -257,1 +293,1 @@\n-                } else if (isCtrl) { \/\/Handles the ctrl key events(uchar=0)\n+                } else if (isCtrl) { \/\/ Handles the ctrl key events(uchar=0)\n@@ -260,1 +296,1 @@\n-                    } else if (virtualKeyCode == 191) { \/\/?\n+                    } else if (virtualKeyCode == 191) { \/\/ ?\n@@ -278,1 +314,1 @@\n-                processInputChar(ch);  \/\/ no such combination in Windows\n+                processInputChar(ch); \/\/ no such combination in Windows\n@@ -471,1 +507,13 @@\n-        if (c == '\\r') {\n+        if (attributes.getInputFlag(Attributes.InputFlag.INORMEOL)) {\n+            if (c == '\\r') {\n+                skipNextLf = true;\n+                c = '\\n';\n+            } else if (c == '\\n') {\n+                if (skipNextLf) {\n+                    skipNextLf = false;\n+                    return;\n+                }\n+            } else {\n+                skipNextLf = false;\n+            }\n+        } else if (c == '\\r') {\n@@ -481,4 +529,4 @@\n-\/\/        if (attributes.getLocalFlag(Attributes.LocalFlag.ECHO)) {\n-\/\/            processOutputByte(c);\n-\/\/            masterOutput.flush();\n-\/\/        }\n+        \/\/        if (attributes.getLocalFlag(Attributes.LocalFlag.ECHO)) {\n+        \/\/            processOutputByte(c);\n+        \/\/            masterOutput.flush();\n+        \/\/        }\n@@ -495,1 +543,1 @@\n-    protected abstract int getConsoleMode();\n+    protected abstract int getConsoleMode(Console console);\n@@ -497,1 +545,1 @@\n-    protected abstract void setConsoleMode(int mode);\n+    protected abstract void setConsoleMode(Console console, int mode);\n@@ -507,1 +555,4 @@\n-}\n+    @Override\n+    public TerminalProvider getProvider() {\n+        return provider;\n+    }\n@@ -509,0 +560,5 @@\n+    @Override\n+    public SystemStream getSystemStream() {\n+        return systemStream;\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractWindowsTerminal.java","additions":110,"deletions":54,"binary":false,"changes":164,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -11,5 +11,0 @@\n-import jdk.internal.org.jline.terminal.Cursor;\n-import jdk.internal.org.jline.terminal.Terminal;\n-import jdk.internal.org.jline.utils.Curses;\n-import jdk.internal.org.jline.utils.InfoCmp;\n-\n@@ -22,0 +17,5 @@\n+import jdk.internal.org.jline.terminal.Cursor;\n+import jdk.internal.org.jline.terminal.Terminal;\n+import jdk.internal.org.jline.utils.Curses;\n+import jdk.internal.org.jline.utils.InfoCmp;\n+\n@@ -108,1 +108,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/CursorSupport.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, the original author or authors.\n+ * Copyright (c) 2022, the original author(s).\n@@ -20,0 +20,1 @@\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n@@ -29,1 +30,1 @@\n-    static void diag(PrintStream out) {\n+    public static void diag(PrintStream out) {\n@@ -53,0 +54,11 @@\n+        \/\/ FFM\n+        out.println(\"FFM Support\");\n+        out.println(\"=================\");\n+        try {\n+            TerminalProvider provider = TerminalProvider.load(\"ffm\");\n+            testProvider(out, provider);\n+        } catch (Throwable t) {\n+            out.println(\"FFM support not available: \" + t);\n+        }\n+        out.println();\n+\n@@ -63,1 +75,1 @@\n-        out.println(\"JansiSupport\");\n+        out.println(\"Jansi2Support\");\n@@ -69,1 +81,11 @@\n-            out.println(\"Jansi support not available: \" + t);\n+            out.println(\"Jansi 2 support not available: \" + t);\n+        }\n+        out.println();\n+\n+        out.println(\"JniSupport\");\n+        out.println(\"=================\");\n+        try {\n+            TerminalProvider provider = TerminalProvider.load(\"jni\");\n+            testProvider(out, provider);\n+        } catch (Throwable t) {\n+            out.println(\"JNI support not available: \" + t);\n@@ -86,3 +108,3 @@\n-            out.println(\"StdIn stream =    \" + provider.isSystemStream(TerminalProvider.Stream.Input));\n-            out.println(\"StdOut stream =   \" + provider.isSystemStream(TerminalProvider.Stream.Output));\n-            out.println(\"StdErr stream =   \" + provider.isSystemStream(TerminalProvider.Stream.Error));\n+            out.println(\"StdIn stream =    \" + provider.isSystemStream(SystemStream.Input));\n+            out.println(\"StdOut stream =   \" + provider.isSystemStream(SystemStream.Output));\n+            out.println(\"StdErr stream =   \" + provider.isSystemStream(SystemStream.Error));\n@@ -93,3 +115,3 @@\n-            out.println(\"StdIn stream name =     \" + provider.systemStreamName(TerminalProvider.Stream.Input));\n-            out.println(\"StdOut stream name =    \" + provider.systemStreamName(TerminalProvider.Stream.Output));\n-            out.println(\"StdErr stream name =    \" + provider.systemStreamName(TerminalProvider.Stream.Error));\n+            out.println(\"StdIn stream name =     \" + provider.systemStreamName(SystemStream.Input));\n+            out.println(\"StdOut stream name =    \" + provider.systemStreamName(SystemStream.Output));\n+            out.println(\"StdErr stream name =    \" + provider.systemStreamName(SystemStream.Error));\n@@ -99,2 +121,10 @@\n-        try (Terminal terminal = provider.sysTerminal(\"diag\", \"xterm\", false, StandardCharsets.UTF_8,\n-                false, Terminal.SignalHandler.SIG_DFL, false, TerminalProvider.Stream.Output, input -> input) ) {\n+        try (Terminal terminal = provider.sysTerminal(\n+                \"diag\",\n+                \"xterm\",\n+                false,\n+                StandardCharsets.UTF_8,\n+                false,\n+                Terminal.SignalHandler.SIG_DFL,\n+                false,\n+                SystemStream.Output,\n+                input -> input)) {\n@@ -105,1 +135,2 @@\n-                    ForkJoinTask<Integer> t = new ForkJoinPool(1).submit(() -> terminal.reader().read(1) );\n+                    ForkJoinTask<Integer> t =\n+                            new ForkJoinPool(1).submit(() -> terminal.reader().read(1));\n@@ -111,1 +142,5 @@\n-                        sb.append(\" with pty \").append(((AbstractPosixTerminal) terminal).getPty().getClass().getName());\n+                        sb.append(\" with pty \")\n+                                .append(((AbstractPosixTerminal) terminal)\n+                                        .getPty()\n+                                        .getClass()\n+                                        .getName());\n@@ -132,1 +167,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/Diag.java","additions":49,"deletions":15,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -17,0 +17,1 @@\n+import java.util.function.Function;\n@@ -21,0 +22,2 @@\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n@@ -27,0 +30,2 @@\n+    private final TerminalProvider provider;\n+    private final SystemStream systemStream;\n@@ -33,0 +38,1 @@\n+    private boolean skipNextLf;\n@@ -34,2 +40,2 @@\n-    public DumbTerminal(InputStream in, OutputStream out) throws IOException {\n-        this(TYPE_DUMB, TYPE_DUMB, in, out, null);\n+    public DumbTerminal(InputStream in, OutputStream out, Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n+        this(TYPE_DUMB, TYPE_DUMB, in, out, null, inputStreamWrapper);\n@@ -38,2 +44,3 @@\n-    public DumbTerminal(String name, String type, InputStream in, OutputStream out, Charset encoding) throws IOException {\n-        this(name, type, in, out, encoding, SignalHandler.SIG_DFL);\n+    public DumbTerminal(String name, String type, InputStream in, OutputStream out, Charset encoding, Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n+        this(null, null, name, type, in, out, encoding, SignalHandler.SIG_DFL, inputStreamWrapper);\n@@ -42,1 +49,12 @@\n-    public DumbTerminal(String name, String type, InputStream in, OutputStream out, Charset encoding, SignalHandler signalHandler) throws IOException {\n+    @SuppressWarnings(\"this-escape\")\n+    public DumbTerminal(\n+            TerminalProvider provider,\n+            SystemStream systemStream,\n+            String name,\n+            String type,\n+            InputStream in,\n+            OutputStream out,\n+            Charset encoding,\n+            SignalHandler signalHandler,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n@@ -44,1 +62,3 @@\n-        NonBlockingInputStream nbis = NonBlocking.nonBlocking(getName(), in);\n+        this.provider = provider;\n+        this.systemStream = systemStream;\n+        NonBlockingInputStream nbis = NonBlocking.nonBlocking(getName(), inputStreamWrapper.apply(in));\n@@ -48,1 +68,1 @@\n-                for (;;) {\n+                for (; ; ) {\n@@ -65,1 +85,13 @@\n-                    if (c == '\\r') {\n+                    if (attributes.getInputFlag(Attributes.InputFlag.INORMEOL)) {\n+                        if (c == '\\r') {\n+                            skipNextLf = true;\n+                            c = '\\n';\n+                        } else if (c == '\\n') {\n+                            if (skipNextLf) {\n+                                skipNextLf = false;\n+                                continue;\n+                            }\n+                        } else {\n+                            skipNextLf = false;\n+                        }\n+                    } else if (c == '\\r') {\n@@ -83,1 +115,1 @@\n-        this.attributes.setControlChar(ControlChar.VERASE,  (char) 127);\n+        this.attributes.setControlChar(ControlChar.VERASE, (char) 127);\n@@ -85,2 +117,2 @@\n-        this.attributes.setControlChar(ControlChar.VKILL,   (char) 21);\n-        this.attributes.setControlChar(ControlChar.VLNEXT,  (char) 22);\n+        this.attributes.setControlChar(ControlChar.VKILL, (char) 21);\n+        this.attributes.setControlChar(ControlChar.VLNEXT, (char) 22);\n@@ -110,3 +142,1 @@\n-        Attributes attr = new Attributes();\n-        attr.copy(attributes);\n-        return attr;\n+        return new Attributes(attributes);\n@@ -129,0 +159,9 @@\n+    @Override\n+    public TerminalProvider getProvider() {\n+        return provider;\n+    }\n+\n+    @Override\n+    public SystemStream getSystemStream() {\n+        return systemStream;\n+    }\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/DumbTerminal.java","additions":54,"deletions":15,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.impl;\n+\n+import java.io.FileDescriptor;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.nio.charset.Charset;\n+import java.util.function.Function;\n+\n+import jdk.internal.org.jline.terminal.Attributes;\n+import jdk.internal.org.jline.terminal.Size;\n+import jdk.internal.org.jline.terminal.Terminal;\n+import jdk.internal.org.jline.terminal.TerminalBuilder;\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n+\n+public class DumbTerminalProvider implements TerminalProvider {\n+\n+    @Override\n+    public String name() {\n+        return TerminalBuilder.PROP_PROVIDER_DUMB;\n+    }\n+\n+    @Override\n+    public Terminal sysTerminal(\n+            String name,\n+            String type,\n+            boolean ansiPassThrough,\n+            Charset encoding,\n+            boolean nativeSignals,\n+            Terminal.SignalHandler signalHandler,\n+            boolean paused,\n+            SystemStream systemStream,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n+        return new DumbTerminal(\n+                this,\n+                systemStream,\n+                name,\n+                type,\n+                new FileInputStream(FileDescriptor.in),\n+                new FileOutputStream(systemStream == SystemStream.Error ? FileDescriptor.err : FileDescriptor.out),\n+                encoding,\n+                signalHandler,\n+                inputStreamWrapper);\n+    }\n+\n+    @Override\n+    public Terminal newTerminal(\n+            String name,\n+            String type,\n+            InputStream masterInput,\n+            OutputStream masterOutput,\n+            Charset encoding,\n+            Terminal.SignalHandler signalHandler,\n+            boolean paused,\n+            Attributes attributes,\n+            Size size)\n+            throws IOException {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public boolean isSystemStream(SystemStream stream) {\n+        return false;\n+    }\n+\n+    @Override\n+    public String systemStreamName(SystemStream stream) {\n+        return null;\n+    }\n+\n+    @Override\n+    public int systemStreamWidth(SystemStream stream) {\n+        return 0;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"TerminalProvider[\" + name() + \"]\";\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/DumbTerminalProvider.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -1,296 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2016, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl;\n-\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.FileDescriptor;\n-import java.io.OutputStream;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Attributes.ControlChar;\n-import jdk.internal.org.jline.terminal.Attributes.ControlFlag;\n-import jdk.internal.org.jline.terminal.Attributes.InputFlag;\n-import jdk.internal.org.jline.terminal.Attributes.LocalFlag;\n-import jdk.internal.org.jline.terminal.Attributes.OutputFlag;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n-import jdk.internal.org.jline.terminal.spi.Pty;\n-import jdk.internal.org.jline.utils.OSUtils;\n-\n-import static jdk.internal.org.jline.utils.ExecHelper.exec;\n-\n-public class ExecPty extends AbstractPty implements Pty {\n-\n-    private final String name;\n-    private final TerminalProvider.Stream console;\n-\n-    public static Pty current(TerminalProvider.Stream console) throws IOException {\n-        try {\n-            String result = exec(true, OSUtils.TTY_COMMAND);\n-            if (console != TerminalProvider.Stream.Output && console != TerminalProvider.Stream.Error) {\n-                throw new IllegalArgumentException(\"console should be Output or Error: \" + console);\n-            }\n-            return new ExecPty(result.trim(), console);\n-        } catch (IOException e) {\n-            throw new IOException(\"Not a tty\", e);\n-        }\n-    }\n-\n-    protected ExecPty(String name, TerminalProvider.Stream console) {\n-        this.name = name;\n-        this.console = console;\n-    }\n-\n-    @Override\n-    public void close() throws IOException {\n-    }\n-\n-    public String getName() {\n-        return name;\n-    }\n-\n-    @Override\n-    public InputStream getMasterInput() {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public OutputStream getMasterOutput() {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    protected InputStream doGetSlaveInput() throws IOException {\n-        return console != null\n-                ? new FileInputStream(FileDescriptor.in)\n-                : new FileInputStream(getName());\n-    }\n-\n-    @Override\n-    public OutputStream getSlaveOutput() throws IOException {\n-        return console == TerminalProvider.Stream.Output\n-                ? new FileOutputStream(FileDescriptor.out)\n-                : console == TerminalProvider.Stream.Error\n-                    ? new FileOutputStream(FileDescriptor.err)\n-                    : new FileOutputStream(getName());\n-    }\n-\n-    @Override\n-    public Attributes getAttr() throws IOException {\n-        String cfg = doGetConfig();\n-        return doGetAttr(cfg);\n-    }\n-\n-    @Override\n-    protected void doSetAttr(Attributes attr) throws IOException {\n-        List<String> commands = getFlagsToSet(attr, getAttr());\n-        if (!commands.isEmpty()) {\n-            commands.add(0, OSUtils.STTY_COMMAND);\n-            if (console == null) {\n-                commands.add(1, OSUtils.STTY_F_OPTION);\n-                commands.add(2, getName());\n-            }\n-            exec(console != null, commands.toArray(new String[0]));\n-        }\n-    }\n-\n-    protected List<String> getFlagsToSet(Attributes attr, Attributes current) {\n-        List<String> commands = new ArrayList<>();\n-        for (InputFlag flag : InputFlag.values()) {\n-            if (attr.getInputFlag(flag) != current.getInputFlag(flag)) {\n-                commands.add((attr.getInputFlag(flag) ? flag.name() : \"-\" + flag.name()).toLowerCase());\n-            }\n-        }\n-        for (OutputFlag flag : OutputFlag.values()) {\n-            if (attr.getOutputFlag(flag) != current.getOutputFlag(flag)) {\n-                commands.add((attr.getOutputFlag(flag) ? flag.name() : \"-\" + flag.name()).toLowerCase());\n-            }\n-        }\n-        for (ControlFlag flag : ControlFlag.values()) {\n-            if (attr.getControlFlag(flag) != current.getControlFlag(flag)) {\n-                commands.add((attr.getControlFlag(flag) ? flag.name() : \"-\" + flag.name()).toLowerCase());\n-            }\n-        }\n-        for (LocalFlag flag : LocalFlag.values()) {\n-            if (attr.getLocalFlag(flag) != current.getLocalFlag(flag)) {\n-                commands.add((attr.getLocalFlag(flag) ? flag.name() : \"-\" + flag.name()).toLowerCase());\n-            }\n-        }\n-        String undef = System.getProperty(\"os.name\").toLowerCase().startsWith(\"hp\") ? \"^-\" : \"undef\";\n-        for (ControlChar cchar : ControlChar.values()) {\n-            int v = attr.getControlChar(cchar);\n-            if (v >= 0 && v != current.getControlChar(cchar)) {\n-                String str = \"\";\n-                commands.add(cchar.name().toLowerCase().substring(1));\n-                if (cchar == ControlChar.VMIN || cchar == ControlChar.VTIME) {\n-                    commands.add(Integer.toString(v));\n-                }\n-                else if (v == 0) {\n-                    commands.add(undef);\n-                }\n-                else {\n-                    if (v >= 128) {\n-                        v -= 128;\n-                        str += \"M-\";\n-                    }\n-                    if (v < 32 || v == 127) {\n-                        v ^= 0x40;\n-                        str += \"^\";\n-                    }\n-                    str += (char) v;\n-                    commands.add(str);\n-                }\n-            }\n-        }\n-        return commands;\n-    }\n-\n-    @Override\n-    public Size getSize() throws IOException {\n-        String cfg = doGetConfig();\n-        return doGetSize(cfg);\n-    }\n-\n-    protected String doGetConfig() throws IOException {\n-        return console != null\n-                ? exec(true,  OSUtils.STTY_COMMAND, \"-a\")\n-                : exec(false, OSUtils.STTY_COMMAND, OSUtils.STTY_F_OPTION, getName(), \"-a\");\n-    }\n-\n-    static Attributes doGetAttr(String cfg) throws IOException {\n-        Attributes attributes = new Attributes();\n-        for (InputFlag flag : InputFlag.values()) {\n-            Boolean value = doGetFlag(cfg, flag);\n-            if (value != null) {\n-                attributes.setInputFlag(flag, value);\n-            }\n-        }\n-        for (OutputFlag flag : OutputFlag.values()) {\n-            Boolean value = doGetFlag(cfg, flag);\n-            if (value != null) {\n-                attributes.setOutputFlag(flag, value);\n-            }\n-        }\n-        for (ControlFlag flag : ControlFlag.values()) {\n-            Boolean value = doGetFlag(cfg, flag);\n-            if (value != null) {\n-                attributes.setControlFlag(flag, value);\n-            }\n-        }\n-        for (LocalFlag flag : LocalFlag.values()) {\n-            Boolean value = doGetFlag(cfg, flag);\n-            if (value != null) {\n-                attributes.setLocalFlag(flag, value);\n-            }\n-        }\n-        for (ControlChar cchar : ControlChar.values()) {\n-            String name = cchar.name().toLowerCase().substring(1);\n-            if (\"reprint\".endsWith(name)) {\n-                name = \"(?:reprint|rprnt)\";\n-            }\n-            Matcher matcher = Pattern.compile(\"[\\\\s;]\" + name + \"\\\\s*=\\\\s*(.+?)[\\\\s;]\").matcher(cfg);\n-            if (matcher.find()) {\n-                attributes.setControlChar(cchar, parseControlChar(matcher.group(1).toUpperCase()));\n-            }\n-        }\n-        return attributes;\n-    }\n-\n-    private static Boolean doGetFlag(String cfg, Enum<?> flag) {\n-        Matcher matcher = Pattern.compile(\"(?:^|[\\\\s;])(\\\\-?\" + flag.name().toLowerCase() + \")(?:[\\\\s;]|$)\").matcher(cfg);\n-        return matcher.find() ? !matcher.group(1).startsWith(\"-\") : null;\n-    }\n-\n-    static int parseControlChar(String str) {\n-        \/\/ undef\n-        if (\"<UNDEF>\".equals(str)) {\n-            return -1;\n-        }\n-        \/\/ del\n-        if (\"DEL\".equalsIgnoreCase(str)) {\n-            return 127;\n-        }\n-        \/\/ octal\n-        if (str.charAt(0) == '0') {\n-            return Integer.parseInt(str, 8);\n-        }\n-        \/\/ decimal\n-        if (str.charAt(0) >= '1' && str.charAt(0) <= '9') {\n-            return Integer.parseInt(str, 10);\n-        }\n-        \/\/ control char\n-        if (str.charAt(0) == '^') {\n-            if (str.charAt(1) == '?') {\n-                return 127;\n-            } else {\n-                return str.charAt(1) - 64;\n-            }\n-        } else if (str.charAt(0) == 'M' && str.charAt(1) == '-') {\n-            if (str.charAt(2) == '^') {\n-                if (str.charAt(3) == '?') {\n-                    return 127 + 128;\n-                } else {\n-                    return str.charAt(3) - 64 + 128;\n-                }\n-            } else {\n-                return str.charAt(2) + 128;\n-            }\n-        } else {\n-            return str.charAt(0);\n-        }\n-    }\n-\n-    static Size doGetSize(String cfg) throws IOException {\n-        return new Size(doGetInt(\"columns\", cfg), doGetInt(\"rows\", cfg));\n-    }\n-\n-    static int doGetInt(String name, String cfg) throws IOException {\n-        String[] patterns = new String[] {\n-                \"\\\\b([0-9]+)\\\\s+\" + name + \"\\\\b\",\n-                \"\\\\b\" + name + \"\\\\s+([0-9]+)\\\\b\",\n-                \"\\\\b\" + name + \"\\\\s*=\\\\s*([0-9]+)\\\\b\"\n-        };\n-        for (String pattern : patterns) {\n-            Matcher matcher = Pattern.compile(pattern).matcher(cfg);\n-            if (matcher.find()) {\n-                return Integer.parseInt(matcher.group(1));\n-            }\n-        }\n-        throw new IOException(\"Unable to parse \" + name);\n-    }\n-\n-    @Override\n-    public void setSize(Size size) throws IOException {\n-        if (console != null) {\n-            exec(true,\n-                 OSUtils.STTY_COMMAND,\n-                 \"columns\", Integer.toString(size.getColumns()),\n-                 \"rows\", Integer.toString(size.getRows()));\n-        } else {\n-            exec(false,\n-                 OSUtils.STTY_COMMAND,\n-                 OSUtils.STTY_F_OPTION, getName(),\n-                 \"columns\", Integer.toString(size.getColumns()),\n-                 \"rows\", Integer.toString(size.getRows()));\n-        }\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"ExecPty[\" + getName() + (console != null ? \", system]\" : \"]\");\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ExecPty.java","additions":0,"deletions":296,"binary":false,"changes":296,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -11,4 +11,0 @@\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Cursor;\n-import jdk.internal.org.jline.terminal.Size;\n-\n@@ -22,0 +18,5 @@\n+import jdk.internal.org.jline.terminal.Attributes;\n+import jdk.internal.org.jline.terminal.Cursor;\n+import jdk.internal.org.jline.terminal.Size;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n+\n@@ -35,0 +36,1 @@\n+    private final TerminalProvider provider;\n@@ -41,5 +43,4 @@\n-    public ExternalTerminal(String name, String type,\n-                            InputStream masterInput,\n-                            OutputStream masterOutput,\n-                            Charset encoding) throws IOException {\n-        this(name, type, masterInput, masterOutput, encoding, SignalHandler.SIG_DFL);\n+    public ExternalTerminal(\n+            String name, String type, InputStream masterInput, OutputStream masterOutput, Charset encoding)\n+            throws IOException {\n+        this(null, name, type, masterInput, masterOutput, encoding, SignalHandler.SIG_DFL);\n@@ -48,6 +49,10 @@\n-    public ExternalTerminal(String name, String type,\n-                            InputStream masterInput,\n-                            OutputStream masterOutput,\n-                            Charset encoding,\n-                            SignalHandler signalHandler) throws IOException {\n-        this(name, type, masterInput, masterOutput, encoding, signalHandler, false);\n+    public ExternalTerminal(\n+            TerminalProvider provider,\n+            String name,\n+            String type,\n+            InputStream masterInput,\n+            OutputStream masterOutput,\n+            Charset encoding,\n+            SignalHandler signalHandler)\n+            throws IOException {\n+        this(provider, name, type, masterInput, masterOutput, encoding, signalHandler, false);\n@@ -56,7 +61,11 @@\n-    public ExternalTerminal(String name, String type,\n-                            InputStream masterInput,\n-                            OutputStream masterOutput,\n-                            Charset encoding,\n-                            SignalHandler signalHandler,\n-                            boolean paused) throws IOException {\n-        this(name, type, masterInput, masterOutput, encoding, signalHandler, paused, null, null);\n+    public ExternalTerminal(\n+            TerminalProvider provider,\n+            String name,\n+            String type,\n+            InputStream masterInput,\n+            OutputStream masterOutput,\n+            Charset encoding,\n+            SignalHandler signalHandler,\n+            boolean paused)\n+            throws IOException {\n+        this(provider, name, type, masterInput, masterOutput, encoding, signalHandler, paused, null, null);\n@@ -65,8 +74,13 @@\n-    public ExternalTerminal(String name, String type,\n-                            InputStream masterInput,\n-                            OutputStream masterOutput,\n-                            Charset encoding,\n-                            SignalHandler signalHandler,\n-                            boolean paused,\n-                            Attributes attributes,\n-                            Size size) throws IOException {\n+    @SuppressWarnings(\"this-escape\")\n+    public ExternalTerminal(\n+            TerminalProvider provider,\n+            String name,\n+            String type,\n+            InputStream masterInput,\n+            OutputStream masterOutput,\n+            Charset encoding,\n+            SignalHandler signalHandler,\n+            boolean paused,\n+            Attributes attributes,\n+            Size size)\n+            throws IOException {\n@@ -74,0 +88,1 @@\n+        this.provider = provider;\n@@ -174,0 +189,4 @@\n+    @Override\n+    public TerminalProvider getProvider() {\n+        return provider;\n+    }\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ExternalTerminal.java","additions":50,"deletions":31,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -17,0 +17,1 @@\n+import java.util.EnumSet;\n@@ -26,0 +27,2 @@\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n@@ -48,15 +51,0 @@\n-    private static final String DEFAULT_TERMINAL_ATTRIBUTES =\n-                    \"speed 9600 baud; 24 rows; 80 columns;\\n\" +\n-                    \"lflags: icanon isig iexten echo echoe -echok echoke -echonl echoctl\\n\" +\n-                    \"\\t-echoprt -altwerase -noflsh -tostop -flusho pendin -nokerninfo\\n\" +\n-                    \"\\t-extproc\\n\" +\n-                    \"iflags: -istrip icrnl -inlcr -igncr ixon -ixoff ixany imaxbel iutf8\\n\" +\n-                    \"\\t-ignbrk brkint -inpck -ignpar -parmrk\\n\" +\n-                    \"oflags: opost onlcr -oxtabs -onocr -onlret\\n\" +\n-                    \"cflags: cread cs8 -parenb -parodd hupcl -clocal -cstopb -crtscts -dsrflow\\n\" +\n-                    \"\\t-dtrflow -mdmbuf\\n\" +\n-                    \"cchars: discard = ^O; dsusp = ^Y; eof = ^D; eol = <undef>;\\n\" +\n-                    \"\\teol2 = <undef>; erase = ^?; intr = ^C; kill = ^U; lnext = ^V;\\n\" +\n-                    \"\\tmin = 1; quit = ^\\\\; reprint = ^R; start = ^Q; status = ^T;\\n\" +\n-                    \"\\tstop = ^S; susp = ^Z; time = 0; werase = ^W;\\n\";\n-\n@@ -87,0 +75,1 @@\n+\n@@ -89,4 +78,4 @@\n-    public LineDisciplineTerminal(String name,\n-                                  String type,\n-                                  OutputStream masterOutput,\n-                                  Charset encoding) throws IOException {\n+    protected boolean skipNextLf;\n+\n+    public LineDisciplineTerminal(String name, String type, OutputStream masterOutput, Charset encoding)\n+            throws IOException {\n@@ -96,5 +85,4 @@\n-    public LineDisciplineTerminal(String name,\n-                                  String type,\n-                                  OutputStream masterOutput,\n-                                  Charset encoding,\n-                                  SignalHandler signalHandler) throws IOException {\n+    @SuppressWarnings(\"this-escape\")\n+    public LineDisciplineTerminal(\n+            String name, String type, OutputStream masterOutput, Charset encoding, SignalHandler signalHandler)\n+            throws IOException {\n@@ -109,1 +97,1 @@\n-        this.attributes = ExecPty.doGetAttr(DEFAULT_TERMINAL_ATTRIBUTES);\n+        this.attributes = getDefaultTerminalAttributes();\n@@ -114,0 +102,55 @@\n+    private static Attributes getDefaultTerminalAttributes() {\n+        \/\/ speed 9600 baud; 24 rows; 80 columns;\n+        \/\/ lflags: icanon isig iexten echo echoe -echok echoke -echonl echoctl\n+        \/\/     -echoprt -altwerase -noflsh -tostop -flusho pendin -nokerninfo\n+        \/\/     -extproc\n+        \/\/ iflags: -istrip icrnl -inlcr -igncr ixon -ixoff ixany imaxbel iutf8\n+        \/\/     -ignbrk brkint -inpck -ignpar -parmrk\n+        \/\/ oflags: opost onlcr -oxtabs -onocr -onlret\n+        \/\/ cflags: cread cs8 -parenb -parodd hupcl -clocal -cstopb -crtscts -dsrflow\n+        \/\/     -dtrflow -mdmbuf\n+        \/\/ cchars: discard = ^O; dsusp = ^Y; eof = ^D; eol = <undef>;\n+        \/\/     eol2 = <undef>; erase = ^?; intr = ^C; kill = ^U; lnext = ^V;\n+        \/\/     min = 1; quit = ^\\\\; reprint = ^R; start = ^Q; status = ^T;\n+        \/\/     stop = ^S; susp = ^Z; time = 0; werase = ^W;\n+        Attributes attr = new Attributes();\n+        attr.setLocalFlags(EnumSet.of(\n+                LocalFlag.ICANON,\n+                LocalFlag.ISIG,\n+                LocalFlag.IEXTEN,\n+                LocalFlag.ECHO,\n+                LocalFlag.ECHOE,\n+                LocalFlag.ECHOKE,\n+                LocalFlag.ECHOCTL,\n+                LocalFlag.PENDIN));\n+        attr.setInputFlags(EnumSet.of(\n+                InputFlag.ICRNL,\n+                InputFlag.IXON,\n+                InputFlag.IXANY,\n+                InputFlag.IMAXBEL,\n+                InputFlag.IUTF8,\n+                InputFlag.BRKINT));\n+        attr.setOutputFlags(EnumSet.of(OutputFlag.OPOST, OutputFlag.ONLCR));\n+        attr.setControlChar(ControlChar.VDISCARD, ctrl('O'));\n+        attr.setControlChar(ControlChar.VDSUSP, ctrl('Y'));\n+        attr.setControlChar(ControlChar.VEOF, ctrl('D'));\n+        attr.setControlChar(ControlChar.VERASE, ctrl('?'));\n+        attr.setControlChar(ControlChar.VINTR, ctrl('C'));\n+        attr.setControlChar(ControlChar.VKILL, ctrl('U'));\n+        attr.setControlChar(ControlChar.VLNEXT, ctrl('V'));\n+        attr.setControlChar(ControlChar.VMIN, 1);\n+        attr.setControlChar(ControlChar.VQUIT, ctrl('\\\\'));\n+        attr.setControlChar(ControlChar.VREPRINT, ctrl('R'));\n+        attr.setControlChar(ControlChar.VSTART, ctrl('Q'));\n+        attr.setControlChar(ControlChar.VSTATUS, ctrl('T'));\n+        attr.setControlChar(ControlChar.VSTOP, ctrl('S'));\n+        attr.setControlChar(ControlChar.VSUSP, ctrl('Z'));\n+        attr.setControlChar(ControlChar.VTIME, 0);\n+        attr.setControlChar(ControlChar.VWERASE, ctrl('W'));\n+        return attr;\n+    }\n+\n+    private static int ctrl(char c) {\n+        return c == '?' ? 177 : c - 64;\n+    }\n+\n@@ -133,3 +176,1 @@\n-        Attributes attr = new Attributes();\n-        attr.copy(attributes);\n-        return attr;\n+        return new Attributes(attributes);\n@@ -152,1 +193,1 @@\n-   @Override\n+    @Override\n@@ -154,1 +195,1 @@\n-       Objects.requireNonNull(signal);\n+        Objects.requireNonNull(signal);\n@@ -217,1 +258,13 @@\n-        if (c == '\\r') {\n+        if (attributes.getInputFlag(InputFlag.INORMEOL)) {\n+            if (c == '\\r') {\n+                skipNextLf = true;\n+                c = '\\n';\n+            } else if (c == '\\n') {\n+                if (skipNextLf) {\n+                    skipNextLf = false;\n+                    return false;\n+                }\n+            } else {\n+                skipNextLf = false;\n+            }\n+        } else if (c == '\\r') {\n@@ -276,0 +329,10 @@\n+    @Override\n+    public TerminalProvider getProvider() {\n+        return null;\n+    }\n+\n+    @Override\n+    public SystemStream getSystemStream() {\n+        return null;\n+    }\n+\n@@ -287,2 +350,1 @@\n-            } else if ((off < 0) || (off > b.length) || (len < 0) ||\n-                    ((off + len) > b.length) || ((off + len) < 0)) {\n+            } else if ((off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) || ((off + len) < 0)) {\n@@ -293,1 +355,1 @@\n-            for (int i = 0 ; i < len ; i++) {\n+            for (int i = 0; i < len; i++) {\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/LineDisciplineTerminal.java","additions":97,"deletions":35,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -11,5 +11,0 @@\n-import jdk.internal.org.jline.terminal.MouseEvent;\n-import jdk.internal.org.jline.terminal.Terminal;\n-import jdk.internal.org.jline.utils.InfoCmp;\n-import jdk.internal.org.jline.utils.InputStreamReader;\n-\n@@ -23,0 +18,5 @@\n+import jdk.internal.org.jline.terminal.MouseEvent;\n+import jdk.internal.org.jline.terminal.Terminal;\n+import jdk.internal.org.jline.utils.InfoCmp;\n+import jdk.internal.org.jline.utils.InputStreamReader;\n+\n@@ -81,1 +81,2 @@\n-                            && (last.getType() == MouseEvent.Type.Pressed || last.getType() == MouseEvent.Type.Dragged)) {\n+                            && (last.getType() == MouseEvent.Type.Pressed\n+                                    || last.getType() == MouseEvent.Type.Dragged)) {\n@@ -90,1 +91,2 @@\n-                            && (last.getType() == MouseEvent.Type.Pressed || last.getType() == MouseEvent.Type.Dragged)) {\n+                            && (last.getType() == MouseEvent.Type.Pressed\n+                                    || last.getType() == MouseEvent.Type.Dragged)) {\n@@ -99,1 +101,2 @@\n-                            && (last.getType() == MouseEvent.Type.Pressed || last.getType() == MouseEvent.Type.Dragged)) {\n+                            && (last.getType() == MouseEvent.Type.Pressed\n+                                    || last.getType() == MouseEvent.Type.Dragged)) {\n@@ -137,1 +140,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/MouseSupport.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -20,2 +20,1 @@\n-    private NativeSignalHandler() {\n-    }\n+    private NativeSignalHandler() {}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/NativeSignalHandler.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -41,1 +41,2 @@\n-    public PosixPtyTerminal(String name, String type, Pty pty, InputStream in, OutputStream out, Charset encoding) throws IOException {\n+    public PosixPtyTerminal(String name, String type, Pty pty, InputStream in, OutputStream out, Charset encoding)\n+            throws IOException {\n@@ -45,1 +46,9 @@\n-    public PosixPtyTerminal(String name, String type, Pty pty, InputStream in, OutputStream out, Charset encoding, SignalHandler signalHandler) throws IOException {\n+    public PosixPtyTerminal(\n+            String name,\n+            String type,\n+            Pty pty,\n+            InputStream in,\n+            OutputStream out,\n+            Charset encoding,\n+            SignalHandler signalHandler)\n+            throws IOException {\n@@ -49,1 +58,11 @@\n-    public PosixPtyTerminal(String name, String type, Pty pty, InputStream in, OutputStream out, Charset encoding, SignalHandler signalHandler, boolean paused) throws IOException {\n+    @SuppressWarnings(\"this-escape\")\n+    public PosixPtyTerminal(\n+            String name,\n+            String type,\n+            Pty pty,\n+            InputStream in,\n+            OutputStream out,\n+            Charset encoding,\n+            SignalHandler signalHandler,\n+            boolean paused)\n+            throws IOException {\n@@ -116,1 +135,1 @@\n-        if (p2 !=null) {\n+        if (p2 != null) {\n@@ -170,1 +189,1 @@\n-            for (;;) {\n+            for (; ; ) {\n@@ -196,1 +215,1 @@\n-            for (;;) {\n+            for (; ; ) {\n@@ -224,1 +243,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/PosixPtyTerminal.java","additions":26,"deletions":8,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -21,1 +21,0 @@\n-import jdk.internal.org.jline.utils.NonBlocking;\n@@ -23,0 +22,2 @@\n+import jdk.internal.org.jline.utils.FastBufferedOutputStream;\n+import jdk.internal.org.jline.utils.NonBlocking;\n@@ -38,3 +39,5 @@\n-    public PosixSysTerminal(String name, String type, Pty pty, Charset encoding,\n-                            boolean nativeSignals, SignalHandler signalHandler,\n-                            Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n+    @SuppressWarnings(\"this-escape\")\n+    public PosixSysTerminal(\n+            String name, String type, Pty pty, Charset encoding, boolean nativeSignals, SignalHandler signalHandler,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n@@ -43,1 +46,1 @@\n-        this.output = pty.getSlaveOutput();\n+        this.output = new FastBufferedOutputStream(pty.getSlaveOutput());\n@@ -101,1 +104,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/PosixSysTerminal.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,311 @@\n+\/*\n+ * Copyright (c) 2002-2016, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.impl.exec;\n+\n+import java.io.FileDescriptor;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import jdk.internal.org.jline.terminal.Attributes;\n+import jdk.internal.org.jline.terminal.Attributes.ControlChar;\n+import jdk.internal.org.jline.terminal.Attributes.ControlFlag;\n+import jdk.internal.org.jline.terminal.Attributes.InputFlag;\n+import jdk.internal.org.jline.terminal.Attributes.LocalFlag;\n+import jdk.internal.org.jline.terminal.Attributes.OutputFlag;\n+import jdk.internal.org.jline.terminal.Size;\n+import jdk.internal.org.jline.terminal.impl.AbstractPty;\n+import jdk.internal.org.jline.terminal.spi.Pty;\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n+import jdk.internal.org.jline.utils.OSUtils;\n+\n+import static jdk.internal.org.jline.utils.ExecHelper.exec;\n+\n+public class ExecPty extends AbstractPty implements Pty {\n+\n+    private final String name;\n+\n+    public static Pty current(TerminalProvider provider, SystemStream systemStream) throws IOException {\n+        try {\n+            String result = exec(true, OSUtils.TTY_COMMAND);\n+            if (systemStream != SystemStream.Output && systemStream != SystemStream.Error) {\n+                throw new IllegalArgumentException(\"systemStream should be Output or Error: \" + systemStream);\n+            }\n+            return new ExecPty(provider, systemStream, result.trim());\n+        } catch (IOException e) {\n+            throw new IOException(\"Not a tty\", e);\n+        }\n+    }\n+\n+    protected ExecPty(TerminalProvider provider, SystemStream systemStream, String name) {\n+        super(provider, systemStream);\n+        this.name = name;\n+    }\n+\n+    @Override\n+    public void close() throws IOException {}\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public InputStream getMasterInput() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public OutputStream getMasterOutput() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    protected InputStream doGetSlaveInput() throws IOException {\n+        return systemStream != null ? new FileInputStream(FileDescriptor.in) : new FileInputStream(getName());\n+    }\n+\n+    @Override\n+    public OutputStream getSlaveOutput() throws IOException {\n+        return systemStream == SystemStream.Output\n+                ? new FileOutputStream(FileDescriptor.out)\n+                : systemStream == SystemStream.Error\n+                        ? new FileOutputStream(FileDescriptor.err)\n+                        : new FileOutputStream(getName());\n+    }\n+\n+    @Override\n+    public Attributes getAttr() throws IOException {\n+        String cfg = doGetConfig();\n+        return doGetAttr(cfg);\n+    }\n+\n+    @Override\n+    protected void doSetAttr(Attributes attr) throws IOException {\n+        List<String> commands = getFlagsToSet(attr, getAttr());\n+        if (!commands.isEmpty()) {\n+            commands.add(0, OSUtils.STTY_COMMAND);\n+            if (systemStream == null) {\n+                commands.add(1, OSUtils.STTY_F_OPTION);\n+                commands.add(2, getName());\n+            }\n+            try {\n+                exec(systemStream != null, commands.toArray(new String[0]));\n+            } catch (IOException e) {\n+                \/\/ Handle partial failures with GNU stty, see #97\n+                if (e.toString().contains(\"unable to perform all requested operations\")) {\n+                    commands = getFlagsToSet(attr, getAttr());\n+                    if (!commands.isEmpty()) {\n+                        throw new IOException(\"Could not set the following flags: \" + String.join(\", \", commands), e);\n+                    }\n+                } else {\n+                    throw e;\n+                }\n+            }\n+        }\n+    }\n+\n+    protected List<String> getFlagsToSet(Attributes attr, Attributes current) {\n+        List<String> commands = new ArrayList<>();\n+        for (InputFlag flag : InputFlag.values()) {\n+            if (attr.getInputFlag(flag) != current.getInputFlag(flag) && flag != InputFlag.INORMEOL) {\n+                commands.add((attr.getInputFlag(flag) ? flag.name() : \"-\" + flag.name()).toLowerCase());\n+            }\n+        }\n+        for (OutputFlag flag : OutputFlag.values()) {\n+            if (attr.getOutputFlag(flag) != current.getOutputFlag(flag)) {\n+                commands.add((attr.getOutputFlag(flag) ? flag.name() : \"-\" + flag.name()).toLowerCase());\n+            }\n+        }\n+        for (ControlFlag flag : ControlFlag.values()) {\n+            if (attr.getControlFlag(flag) != current.getControlFlag(flag)) {\n+                commands.add((attr.getControlFlag(flag) ? flag.name() : \"-\" + flag.name()).toLowerCase());\n+            }\n+        }\n+        for (LocalFlag flag : LocalFlag.values()) {\n+            if (attr.getLocalFlag(flag) != current.getLocalFlag(flag)) {\n+                commands.add((attr.getLocalFlag(flag) ? flag.name() : \"-\" + flag.name()).toLowerCase());\n+            }\n+        }\n+        String undef = System.getProperty(\"os.name\").toLowerCase().startsWith(\"hp\") ? \"^-\" : \"undef\";\n+        for (ControlChar cchar : ControlChar.values()) {\n+            int v = attr.getControlChar(cchar);\n+            if (v >= 0 && v != current.getControlChar(cchar)) {\n+                String str = \"\";\n+                commands.add(cchar.name().toLowerCase().substring(1));\n+                if (cchar == ControlChar.VMIN || cchar == ControlChar.VTIME) {\n+                    commands.add(Integer.toString(v));\n+                } else if (v == 0) {\n+                    commands.add(undef);\n+                } else {\n+                    if (v >= 128) {\n+                        v -= 128;\n+                        str += \"M-\";\n+                    }\n+                    if (v < 32 || v == 127) {\n+                        v ^= 0x40;\n+                        str += \"^\";\n+                    }\n+                    str += (char) v;\n+                    commands.add(str);\n+                }\n+            }\n+        }\n+        return commands;\n+    }\n+\n+    @Override\n+    public Size getSize() throws IOException {\n+        String cfg = doGetConfig();\n+        return doGetSize(cfg);\n+    }\n+\n+    protected String doGetConfig() throws IOException {\n+        return systemStream != null\n+                ? exec(true, OSUtils.STTY_COMMAND, \"-a\")\n+                : exec(false, OSUtils.STTY_COMMAND, OSUtils.STTY_F_OPTION, getName(), \"-a\");\n+    }\n+\n+    public static Attributes doGetAttr(String cfg) throws IOException {\n+        Attributes attributes = new Attributes();\n+        for (InputFlag flag : InputFlag.values()) {\n+            Boolean value = doGetFlag(cfg, flag);\n+            if (value != null) {\n+                attributes.setInputFlag(flag, value);\n+            }\n+        }\n+        for (OutputFlag flag : OutputFlag.values()) {\n+            Boolean value = doGetFlag(cfg, flag);\n+            if (value != null) {\n+                attributes.setOutputFlag(flag, value);\n+            }\n+        }\n+        for (ControlFlag flag : ControlFlag.values()) {\n+            Boolean value = doGetFlag(cfg, flag);\n+            if (value != null) {\n+                attributes.setControlFlag(flag, value);\n+            }\n+        }\n+        for (LocalFlag flag : LocalFlag.values()) {\n+            Boolean value = doGetFlag(cfg, flag);\n+            if (value != null) {\n+                attributes.setLocalFlag(flag, value);\n+            }\n+        }\n+        for (ControlChar cchar : ControlChar.values()) {\n+            String name = cchar.name().toLowerCase().substring(1);\n+            if (\"reprint\".endsWith(name)) {\n+                name = \"(?:reprint|rprnt)\";\n+            }\n+            Matcher matcher =\n+                    Pattern.compile(\"[\\\\s;]\" + name + \"\\\\s*=\\\\s*(.+?)[\\\\s;]\").matcher(cfg);\n+            if (matcher.find()) {\n+                attributes.setControlChar(\n+                        cchar, parseControlChar(matcher.group(1).toUpperCase()));\n+            }\n+        }\n+        return attributes;\n+    }\n+\n+    private static Boolean doGetFlag(String cfg, Enum<?> flag) {\n+        Matcher matcher = Pattern.compile(\"(?:^|[\\\\s;])(\\\\-?\" + flag.name().toLowerCase() + \")(?:[\\\\s;]|$)\")\n+                .matcher(cfg);\n+        return matcher.find() ? !matcher.group(1).startsWith(\"-\") : null;\n+    }\n+\n+    static int parseControlChar(String str) {\n+        \/\/ undef\n+        if (\"<UNDEF>\".equals(str)) {\n+            return -1;\n+        }\n+        \/\/ del\n+        if (\"DEL\".equalsIgnoreCase(str)) {\n+            return 127;\n+        }\n+        \/\/ octal\n+        if (str.charAt(0) == '0') {\n+            return Integer.parseInt(str, 8);\n+        }\n+        \/\/ decimal\n+        if (str.charAt(0) >= '1' && str.charAt(0) <= '9') {\n+            return Integer.parseInt(str, 10);\n+        }\n+        \/\/ control char\n+        if (str.charAt(0) == '^') {\n+            if (str.charAt(1) == '?') {\n+                return 127;\n+            } else {\n+                return str.charAt(1) - 64;\n+            }\n+        } else if (str.charAt(0) == 'M' && str.charAt(1) == '-') {\n+            if (str.charAt(2) == '^') {\n+                if (str.charAt(3) == '?') {\n+                    return 127 + 128;\n+                } else {\n+                    return str.charAt(3) - 64 + 128;\n+                }\n+            } else {\n+                return str.charAt(2) + 128;\n+            }\n+        } else {\n+            return str.charAt(0);\n+        }\n+    }\n+\n+    static Size doGetSize(String cfg) throws IOException {\n+        return new Size(doGetInt(\"columns\", cfg), doGetInt(\"rows\", cfg));\n+    }\n+\n+    static int doGetInt(String name, String cfg) throws IOException {\n+        String[] patterns = new String[] {\n+            \"\\\\b([0-9]+)\\\\s+\" + name + \"\\\\b\", \"\\\\b\" + name + \"\\\\s+([0-9]+)\\\\b\", \"\\\\b\" + name + \"\\\\s*=\\\\s*([0-9]+)\\\\b\"\n+        };\n+        for (String pattern : patterns) {\n+            Matcher matcher = Pattern.compile(pattern).matcher(cfg);\n+            if (matcher.find()) {\n+                return Integer.parseInt(matcher.group(1));\n+            }\n+        }\n+        throw new IOException(\"Unable to parse \" + name);\n+    }\n+\n+    @Override\n+    public void setSize(Size size) throws IOException {\n+        if (systemStream != null) {\n+            exec(\n+                    true,\n+                    OSUtils.STTY_COMMAND,\n+                    \"columns\",\n+                    Integer.toString(size.getColumns()),\n+                    \"rows\",\n+                    Integer.toString(size.getRows()));\n+        } else {\n+            exec(\n+                    false,\n+                    OSUtils.STTY_COMMAND,\n+                    OSUtils.STTY_F_OPTION,\n+                    getName(),\n+                    \"columns\",\n+                    Integer.toString(size.getColumns()),\n+                    \"rows\",\n+                    Integer.toString(size.getRows()));\n+        }\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"ExecPty[\" + getName() + (systemStream != null ? \", system]\" : \"]\");\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/exec\/ExecPty.java","additions":311,"deletions":0,"binary":false,"changes":311,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, the original author or authors.\n+ * Copyright (c) 2022, the original author(s).\n@@ -20,0 +20,2 @@\n+\/\/import jdk.internal.org.jline.nativ.JLineLibrary;\n+\/\/import jdk.internal.org.jline.nativ.JLineNativeLoader;\n@@ -23,1 +25,1 @@\n-import jdk.internal.org.jline.terminal.impl.ExecPty;\n+import jdk.internal.org.jline.terminal.TerminalBuilder;\n@@ -27,0 +29,1 @@\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n@@ -29,0 +32,1 @@\n+import jdk.internal.org.jline.utils.Log;\n@@ -31,2 +35,8 @@\n-public class ExecTerminalProvider implements TerminalProvider\n-{\n+import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_REDIRECT_PIPE_CREATION_MODE;\n+import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_REDIRECT_PIPE_CREATION_MODE_DEFAULT;\n+import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_REDIRECT_PIPE_CREATION_MODE_NATIVE;\n+import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_REDIRECT_PIPE_CREATION_MODE_REFLECTION;\n+\n+public class ExecTerminalProvider implements TerminalProvider {\n+\n+    private static boolean warned;\n@@ -35,1 +45,1 @@\n-        return \"exec\";\n+        return TerminalBuilder.PROP_PROVIDER_EXEC;\n@@ -38,2 +48,2 @@\n-    public Pty current(Stream consoleStream) throws IOException {\n-        return ExecPty.current(consoleStream);\n+    public Pty current(SystemStream systemStream) throws IOException {\n+        return ExecPty.current(this, systemStream);\n@@ -43,3 +53,11 @@\n-    public Terminal sysTerminal(String name, String type, boolean ansiPassThrough, Charset encoding,\n-                                boolean nativeSignals, Terminal.SignalHandler signalHandler, boolean paused,\n-                                Stream consoleStream, Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n+    public Terminal sysTerminal(\n+            String name,\n+            String type,\n+            boolean ansiPassThrough,\n+            Charset encoding,\n+            boolean nativeSignals,\n+            Terminal.SignalHandler signalHandler,\n+            boolean paused,\n+            SystemStream systemStream,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n@@ -47,1 +65,2 @@\n-            return winSysTerminal(name, type, ansiPassThrough, encoding, nativeSignals, signalHandler, paused, consoleStream, inputStreamWrapper );\n+            return winSysTerminal(\n+                    name, type, ansiPassThrough, encoding, nativeSignals, signalHandler, paused, systemStream, inputStreamWrapper);\n@@ -49,1 +68,2 @@\n-            return posixSysTerminal(name, type, ansiPassThrough, encoding, nativeSignals, signalHandler, paused, consoleStream, inputStreamWrapper );\n+            return posixSysTerminal(\n+                    name, type, ansiPassThrough, encoding, nativeSignals, signalHandler, paused, systemStream, inputStreamWrapper);\n@@ -53,3 +73,11 @@\n-    public Terminal winSysTerminal(String name, String type, boolean ansiPassThrough, Charset encoding,\n-                                    boolean nativeSignals, Terminal.SignalHandler signalHandler, boolean paused,\n-                                    Stream consoleStream, Function<InputStream, InputStream> inputStreamWrapper ) throws IOException {\n+    public Terminal winSysTerminal(\n+            String name,\n+            String type,\n+            boolean ansiPassThrough,\n+            Charset encoding,\n+            boolean nativeSignals,\n+            Terminal.SignalHandler signalHandler,\n+            boolean paused,\n+            SystemStream systemStream,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n@@ -57,1 +85,1 @@\n-            Pty pty = current(consoleStream);\n+            Pty pty = current(systemStream);\n@@ -64,4 +92,12 @@\n-    public Terminal posixSysTerminal(String name, String type, boolean ansiPassThrough, Charset encoding,\n-                                     boolean nativeSignals, Terminal.SignalHandler signalHandler, boolean paused,\n-                                     Stream consoleStream, Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n-        Pty pty = current(consoleStream);\n+    public Terminal posixSysTerminal(\n+            String name,\n+            String type,\n+            boolean ansiPassThrough,\n+            Charset encoding,\n+            boolean nativeSignals,\n+            Terminal.SignalHandler signalHandler,\n+            boolean paused,\n+            SystemStream systemStream,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n+        Pty pty = current(systemStream);\n@@ -72,5 +108,12 @@\n-    public Terminal newTerminal(String name, String type, InputStream in, OutputStream out,\n-                                Charset encoding, Terminal.SignalHandler signalHandler, boolean paused,\n-                                Attributes attributes, Size size) throws IOException\n-    {\n-        return new ExternalTerminal(name, type, in, out, encoding, signalHandler, paused, attributes, size);\n+    public Terminal newTerminal(\n+            String name,\n+            String type,\n+            InputStream in,\n+            OutputStream out,\n+            Charset encoding,\n+            Terminal.SignalHandler signalHandler,\n+            boolean paused,\n+            Attributes attributes,\n+            Size size)\n+            throws IOException {\n+        return new ExternalTerminal(this, name, type, in, out, encoding, signalHandler, paused, attributes, size);\n@@ -80,1 +123,1 @@\n-    public boolean isSystemStream(Stream stream) {\n+    public boolean isSystemStream(SystemStream stream) {\n@@ -82,1 +125,1 @@\n-            return isWindowsSystemStream(stream) || isPosixSystemStream(stream);\n+            return isPosixSystemStream(stream) || isWindowsSystemStream(stream);\n@@ -88,2 +131,2 @@\n-    public boolean isWindowsSystemStream(Stream stream) {\n-        return systemStreamName( stream ) != null;\n+    public boolean isWindowsSystemStream(SystemStream stream) {\n+        return systemStreamName(stream) != null;\n@@ -92,1 +135,1 @@\n-    public boolean isPosixSystemStream(Stream stream) {\n+    public boolean isPosixSystemStream(SystemStream stream) {\n@@ -95,1 +138,2 @@\n-                    .inheritIO().start();\n+                    .inheritIO()\n+                    .start();\n@@ -98,0 +142,1 @@\n+            Log.debug(\"ExecTerminalProvider failed 'test -t' for \" + stream, t);\n@@ -104,1 +149,1 @@\n-    public String systemStreamName(Stream stream) {\n+    public String systemStreamName(SystemStream stream) {\n@@ -106,4 +151,5 @@\n-            ProcessBuilder.Redirect input = stream == Stream.Input\n-                                ? ProcessBuilder.Redirect.INHERIT\n-                                : getRedirect(stream == Stream.Output ? FileDescriptor.out : FileDescriptor.err);\n-            Process p = new ProcessBuilder(OSUtils.TTY_COMMAND).redirectInput(input).start();\n+            ProcessBuilder.Redirect input = stream == SystemStream.Input\n+                    ? ProcessBuilder.Redirect.INHERIT\n+                    : newDescriptor(stream == SystemStream.Output ? FileDescriptor.out : FileDescriptor.err);\n+            Process p =\n+                    new ProcessBuilder(OSUtils.TTY_COMMAND).redirectInput(input).start();\n@@ -115,0 +161,7 @@\n+            if (\"java.lang.reflect.InaccessibleObjectException\"\n+                            .equals(t.getClass().getName())\n+                    && !warned) {\n+                Log.warn(\n+                        \"The ExecTerminalProvider requires the JVM options: '--add-opens java.base\/java.lang=ALL-UNNAMED'\");\n+                warned = true;\n+            }\n@@ -120,12 +173,91 @@\n-    private ProcessBuilder.Redirect getRedirect(FileDescriptor fd) throws ReflectiveOperationException {\n-        \/\/ This is not really allowed, but this is the only way to redirect the output or error stream\n-        \/\/ to the input.  This is definitely not something you'd usually want to do, but in the case of\n-        \/\/ the `tty` utility, it provides a way to get\n-        Class<?> rpi = Class.forName(\"java.lang.ProcessBuilder$RedirectPipeImpl\");\n-        Constructor<?> cns = rpi.getDeclaredConstructor();\n-        cns.setAccessible(true);\n-        ProcessBuilder.Redirect input = (ProcessBuilder.Redirect) cns.newInstance();\n-        Field f = rpi.getDeclaredField(\"fd\");\n-        f.setAccessible(true);\n-        f.set(input, fd);\n-        return input;\n+    @Override\n+    public int systemStreamWidth(SystemStream stream) {\n+        try (ExecPty pty = new ExecPty(this, stream, null)) {\n+            return pty.getSize().getColumns();\n+        } catch (Throwable t) {\n+            return -1;\n+        }\n+    }\n+\n+    private static RedirectPipeCreator redirectPipeCreator;\n+\n+    protected static ProcessBuilder.Redirect newDescriptor(FileDescriptor fd) {\n+        if (redirectPipeCreator == null) {\n+            String str = System.getProperty(PROP_REDIRECT_PIPE_CREATION_MODE, PROP_REDIRECT_PIPE_CREATION_MODE_DEFAULT);\n+            String[] modes = str.split(\",\");\n+            IllegalStateException ise = new IllegalStateException(\"Unable to create RedirectPipe\");\n+            for (String mode : modes) {\n+                try {\n+                    switch (mode) {\n+                        case PROP_REDIRECT_PIPE_CREATION_MODE_NATIVE:\n+                            redirectPipeCreator = null;\/\/new NativeRedirectPipeCreator();\n+                            break;\n+                        case PROP_REDIRECT_PIPE_CREATION_MODE_REFLECTION:\n+                            redirectPipeCreator = new ReflectionRedirectPipeCreator();\n+                            break;\n+                    }\n+                } catch (Throwable t) {\n+                    \/\/ ignore\n+                    ise.addSuppressed(t);\n+                }\n+                if (redirectPipeCreator != null) {\n+                    break;\n+                }\n+            }\n+            if (redirectPipeCreator == null) {\n+                throw ise;\n+            }\n+        }\n+        return redirectPipeCreator.newRedirectPipe(fd);\n+    }\n+\n+    interface RedirectPipeCreator {\n+        ProcessBuilder.Redirect newRedirectPipe(FileDescriptor fd);\n+    }\n+\n+    \/**\n+     * Reflection based file descriptor creator.\n+     * This requires the following option\n+     *   --add-opens java.base\/java.lang=ALL-UNNAMED\n+     *\/\n+    static class ReflectionRedirectPipeCreator implements RedirectPipeCreator {\n+        private final Constructor<ProcessBuilder.Redirect> constructor;\n+        private final Field fdField;\n+\n+        @SuppressWarnings(\"unchecked\")\n+        ReflectionRedirectPipeCreator() throws Exception {\n+            Class<?> rpi = Class.forName(\"java.lang.ProcessBuilder$RedirectPipeImpl\");\n+            constructor = (Constructor<ProcessBuilder.Redirect>) rpi.getDeclaredConstructor();\n+            constructor.setAccessible(true);\n+            fdField = rpi.getDeclaredField(\"fd\");\n+            fdField.setAccessible(true);\n+        }\n+\n+        @Override\n+        public ProcessBuilder.Redirect newRedirectPipe(FileDescriptor fd) {\n+            try {\n+                ProcessBuilder.Redirect input = constructor.newInstance();\n+                fdField.set(input, fd);\n+                return input;\n+            } catch (ReflectiveOperationException e) {\n+                \/\/ This should not happen as the field has been set accessible\n+                throw new IllegalStateException(e);\n+            }\n+        }\n+    }\n+\n+\/\/    static class NativeRedirectPipeCreator implements RedirectPipeCreator {\n+\/\/        public NativeRedirectPipeCreator() {\n+\/\/            \/\/ Force load the library\n+\/\/            JLineNativeLoader.initialize();\n+\/\/        }\n+\/\/\n+\/\/        @Override\n+\/\/        public ProcessBuilder.Redirect newRedirectPipe(FileDescriptor fd) {\n+\/\/            return JLineLibrary.newRedirectPipe(fd);\n+\/\/        }\n+\/\/    }\n+\n+    @Override\n+    public String toString() {\n+        return \"TerminalProvider[\" + name() + \"]\";\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/exec\/ExecTerminalProvider.java","additions":180,"deletions":48,"binary":false,"changes":228,"status":"modified"},{"patch":"@@ -0,0 +1,1170 @@\n+\/*\n+ * Copyright (c) 2022-2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.impl.ffm;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.foreign.*;\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+import java.lang.invoke.VarHandle;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.EnumMap;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Optional;\n+\/\/import java.util.logging.Level;\n+\/\/import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import jdk.internal.org.jline.terminal.Attributes;\n+import jdk.internal.org.jline.terminal.Size;\n+import jdk.internal.org.jline.terminal.spi.Pty;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n+import jdk.internal.org.jline.utils.OSUtils;\n+\n+@SuppressWarnings(\"restricted\")\n+class CLibrary {\n+\n+\/\/    private static final Logger logger = Logger.getLogger(\"org.jline\");\n+\n+    \/\/ Window sizes.\n+    \/\/ @see <a href=\"http:\/\/man7.org\/linux\/man-pages\/man4\/tty_ioctl.4.html\">IOCTL_TTY(2) man-page<\/a>\n+    static class winsize {\n+        static final GroupLayout LAYOUT;\n+        private static final VarHandle ws_col;\n+        private static final VarHandle ws_row;\n+\n+        static {\n+            LAYOUT = MemoryLayout.structLayout(\n+                    ValueLayout.JAVA_SHORT.withName(\"ws_row\"),\n+                    ValueLayout.JAVA_SHORT.withName(\"ws_col\"),\n+                    ValueLayout.JAVA_SHORT,\n+                    ValueLayout.JAVA_SHORT);\n+            ws_row = FfmTerminalProvider.lookupVarHandle(LAYOUT, MemoryLayout.PathElement.groupElement(\"ws_row\"));\n+            ws_col = FfmTerminalProvider.lookupVarHandle(LAYOUT, MemoryLayout.PathElement.groupElement(\"ws_col\"));\n+        }\n+\n+        private final java.lang.foreign.MemorySegment seg;\n+\n+        winsize() {\n+            seg = java.lang.foreign.Arena.ofAuto().allocate(LAYOUT);\n+        }\n+\n+        winsize(short ws_col, short ws_row) {\n+            this();\n+            ws_col(ws_col);\n+            ws_row(ws_row);\n+        }\n+\n+        java.lang.foreign.MemorySegment segment() {\n+            return seg;\n+        }\n+\n+        short ws_col() {\n+            return (short) ws_col.get(seg);\n+        }\n+\n+        void ws_col(short col) {\n+            ws_col.set(seg, col);\n+        }\n+\n+        short ws_row() {\n+            return (short) ws_row.get(seg);\n+        }\n+\n+        void ws_row(short row) {\n+            ws_row.set(seg, row);\n+        }\n+    }\n+\n+    \/\/ termios structure for termios functions, describing a general terminal interface that is\n+    \/\/ provided to control asynchronous communications ports\n+    \/\/ @see <a href=\"http:\/\/man7.org\/linux\/man-pages\/man3\/termios.3.html\">TERMIOS(3) man-page<\/a>\n+    static class termios {\n+        static final GroupLayout LAYOUT;\n+        private static final VarHandle c_iflag;\n+        private static final VarHandle c_oflag;\n+        private static final VarHandle c_cflag;\n+        private static final VarHandle c_lflag;\n+        private static final long c_cc_offset;\n+        private static final VarHandle c_ispeed;\n+        private static final VarHandle c_ospeed;\n+\n+        static {\n+            if (OSUtils.IS_OSX) {\n+                LAYOUT = MemoryLayout.structLayout(\n+                        ValueLayout.JAVA_LONG.withName(\"c_iflag\"),\n+                        ValueLayout.JAVA_LONG.withName(\"c_oflag\"),\n+                        ValueLayout.JAVA_LONG.withName(\"c_cflag\"),\n+                        ValueLayout.JAVA_LONG.withName(\"c_lflag\"),\n+                        MemoryLayout.sequenceLayout(32, ValueLayout.JAVA_BYTE).withName(\"c_cc\"),\n+                        ValueLayout.JAVA_LONG.withName(\"c_ispeed\"),\n+                        ValueLayout.JAVA_LONG.withName(\"c_ospeed\"));\n+            } else if (OSUtils.IS_LINUX) {\n+                LAYOUT = MemoryLayout.structLayout(\n+                        ValueLayout.JAVA_INT.withName(\"c_iflag\"),\n+                        ValueLayout.JAVA_INT.withName(\"c_oflag\"),\n+                        ValueLayout.JAVA_INT.withName(\"c_cflag\"),\n+                        ValueLayout.JAVA_INT.withName(\"c_lflag\"),\n+                        ValueLayout.JAVA_BYTE.withName(\"c_line\"),\n+                        MemoryLayout.sequenceLayout(32, ValueLayout.JAVA_BYTE).withName(\"c_cc\"),\n+                        MemoryLayout.paddingLayout(3),\n+                        ValueLayout.JAVA_INT.withName(\"c_ispeed\"),\n+                        ValueLayout.JAVA_INT.withName(\"c_ospeed\"));\n+            } else {\n+                throw new IllegalStateException(\"Unsupported system!\");\n+            }\n+            c_iflag = adjust2LinuxHandle(\n+                    FfmTerminalProvider.lookupVarHandle(LAYOUT, MemoryLayout.PathElement.groupElement(\"c_iflag\")));\n+            c_oflag = adjust2LinuxHandle(\n+                    FfmTerminalProvider.lookupVarHandle(LAYOUT, MemoryLayout.PathElement.groupElement(\"c_oflag\")));\n+            c_cflag = adjust2LinuxHandle(\n+                    FfmTerminalProvider.lookupVarHandle(LAYOUT, MemoryLayout.PathElement.groupElement(\"c_cflag\")));\n+            c_lflag = adjust2LinuxHandle(\n+                    FfmTerminalProvider.lookupVarHandle(LAYOUT, MemoryLayout.PathElement.groupElement(\"c_lflag\")));\n+            c_cc_offset = LAYOUT.byteOffset(MemoryLayout.PathElement.groupElement(\"c_cc\"));\n+            c_ispeed = adjust2LinuxHandle(\n+                    FfmTerminalProvider.lookupVarHandle(LAYOUT, MemoryLayout.PathElement.groupElement(\"c_ispeed\")));\n+            c_ospeed = adjust2LinuxHandle(\n+                    FfmTerminalProvider.lookupVarHandle(LAYOUT, MemoryLayout.PathElement.groupElement(\"c_ospeed\")));\n+        }\n+\n+        private static VarHandle adjust2LinuxHandle(VarHandle v) {\n+            if (OSUtils.IS_LINUX) {\n+                MethodHandle id = MethodHandles.identity(int.class);\n+                v = MethodHandles.filterValue(\n+                        v,\n+                        MethodHandles.explicitCastArguments(id, MethodType.methodType(int.class, long.class)),\n+                        MethodHandles.explicitCastArguments(id, MethodType.methodType(long.class, int.class)));\n+            }\n+\n+            return v;\n+        }\n+\n+        private final java.lang.foreign.MemorySegment seg;\n+\n+        termios() {\n+            seg = java.lang.foreign.Arena.ofAuto().allocate(LAYOUT);\n+        }\n+\n+        termios(Attributes t) {\n+            this();\n+            \/\/ Input flags\n+            long c_iflag = 0;\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.IGNBRK), IGNBRK, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.BRKINT), BRKINT, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.IGNPAR), IGNPAR, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.PARMRK), PARMRK, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.INPCK), INPCK, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.ISTRIP), ISTRIP, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.INLCR), INLCR, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.IGNCR), IGNCR, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.ICRNL), ICRNL, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.IXON), IXON, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.IXOFF), IXOFF, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.IXANY), IXANY, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.IMAXBEL), IMAXBEL, c_iflag);\n+            c_iflag = setFlag(t.getInputFlag(Attributes.InputFlag.IUTF8), IUTF8, c_iflag);\n+            c_iflag(c_iflag);\n+            \/\/ Output flags\n+            long c_oflag = 0;\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.OPOST), OPOST, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.ONLCR), ONLCR, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.OXTABS), OXTABS, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.ONOEOT), ONOEOT, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.OCRNL), OCRNL, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.ONOCR), ONOCR, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.ONLRET), ONLRET, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.OFILL), OFILL, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.NLDLY), NLDLY, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.TABDLY), TABDLY, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.CRDLY), CRDLY, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.FFDLY), FFDLY, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.BSDLY), BSDLY, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.VTDLY), VTDLY, c_oflag);\n+            c_oflag = setFlag(t.getOutputFlag(Attributes.OutputFlag.OFDEL), OFDEL, c_oflag);\n+            c_oflag(c_oflag);\n+            \/\/ Control flags\n+            long c_cflag = 0;\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CIGNORE), CIGNORE, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CS5), CS5, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CS6), CS6, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CS7), CS7, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CS8), CS8, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CSTOPB), CSTOPB, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CREAD), CREAD, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.PARENB), PARENB, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.PARODD), PARODD, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.HUPCL), HUPCL, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CLOCAL), CLOCAL, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CCTS_OFLOW), CCTS_OFLOW, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CRTS_IFLOW), CRTS_IFLOW, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CDTR_IFLOW), CDTR_IFLOW, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CDSR_OFLOW), CDSR_OFLOW, c_cflag);\n+            c_cflag = setFlag(t.getControlFlag(Attributes.ControlFlag.CCAR_OFLOW), CCAR_OFLOW, c_cflag);\n+            c_cflag(c_cflag);\n+            \/\/ Local flags\n+            long c_lflag = 0;\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.ECHOKE), ECHOKE, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.ECHOE), ECHOE, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.ECHOK), ECHOK, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.ECHO), ECHO, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.ECHONL), ECHONL, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.ECHOPRT), ECHOPRT, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.ECHOCTL), ECHOCTL, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.ISIG), ISIG, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.ICANON), ICANON, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.ALTWERASE), ALTWERASE, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.IEXTEN), IEXTEN, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.EXTPROC), EXTPROC, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.TOSTOP), TOSTOP, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.FLUSHO), FLUSHO, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.NOKERNINFO), NOKERNINFO, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.PENDIN), PENDIN, c_lflag);\n+            c_lflag = setFlag(t.getLocalFlag(Attributes.LocalFlag.NOFLSH), NOFLSH, c_lflag);\n+            c_lflag(c_lflag);\n+            \/\/ Control chars\n+            byte[] c_cc = new byte[20];\n+            c_cc[VEOF] = (byte) t.getControlChar(Attributes.ControlChar.VEOF);\n+            c_cc[VEOL] = (byte) t.getControlChar(Attributes.ControlChar.VEOL);\n+            c_cc[VEOL2] = (byte) t.getControlChar(Attributes.ControlChar.VEOL2);\n+            c_cc[VERASE] = (byte) t.getControlChar(Attributes.ControlChar.VERASE);\n+            c_cc[VWERASE] = (byte) t.getControlChar(Attributes.ControlChar.VWERASE);\n+            c_cc[VKILL] = (byte) t.getControlChar(Attributes.ControlChar.VKILL);\n+            c_cc[VREPRINT] = (byte) t.getControlChar(Attributes.ControlChar.VREPRINT);\n+            c_cc[VINTR] = (byte) t.getControlChar(Attributes.ControlChar.VINTR);\n+            c_cc[VQUIT] = (byte) t.getControlChar(Attributes.ControlChar.VQUIT);\n+            c_cc[VSUSP] = (byte) t.getControlChar(Attributes.ControlChar.VSUSP);\n+            if (VDSUSP != (-1)) {\n+                c_cc[VDSUSP] = (byte) t.getControlChar(Attributes.ControlChar.VDSUSP);\n+            }\n+            c_cc[VSTART] = (byte) t.getControlChar(Attributes.ControlChar.VSTART);\n+            c_cc[VSTOP] = (byte) t.getControlChar(Attributes.ControlChar.VSTOP);\n+            c_cc[VLNEXT] = (byte) t.getControlChar(Attributes.ControlChar.VLNEXT);\n+            c_cc[VDISCARD] = (byte) t.getControlChar(Attributes.ControlChar.VDISCARD);\n+            c_cc[VMIN] = (byte) t.getControlChar(Attributes.ControlChar.VMIN);\n+            c_cc[VTIME] = (byte) t.getControlChar(Attributes.ControlChar.VTIME);\n+            if (VSTATUS != (-1)) {\n+                c_cc[VSTATUS] = (byte) t.getControlChar(Attributes.ControlChar.VSTATUS);\n+            }\n+            c_cc().copyFrom(java.lang.foreign.MemorySegment.ofArray(c_cc));\n+        }\n+\n+        java.lang.foreign.MemorySegment segment() {\n+            return seg;\n+        }\n+\n+        long c_iflag() {\n+            return (long) c_iflag.get(seg);\n+        }\n+\n+        void c_iflag(long f) {\n+            c_iflag.set(seg, f);\n+        }\n+\n+        long c_oflag() {\n+            return (long) c_oflag.get(seg);\n+        }\n+\n+        void c_oflag(long f) {\n+            c_oflag.set(seg, f);\n+        }\n+\n+        long c_cflag() {\n+            return (long) c_cflag.get(seg);\n+        }\n+\n+        void c_cflag(long f) {\n+            c_cflag.set(seg, f);\n+        }\n+\n+        long c_lflag() {\n+            return (long) c_lflag.get(seg);\n+        }\n+\n+        void c_lflag(long f) {\n+            c_lflag.set(seg, f);\n+        }\n+\n+        java.lang.foreign.MemorySegment c_cc() {\n+            return seg.asSlice(c_cc_offset, 20);\n+        }\n+\n+        long c_ispeed() {\n+            return (long) c_ispeed.get(seg);\n+        }\n+\n+        void c_ispeed(long f) {\n+            c_ispeed.set(seg, f);\n+        }\n+\n+        long c_ospeed() {\n+            return (long) c_ospeed.get(seg);\n+        }\n+\n+        void c_ospeed(long f) {\n+            c_ospeed.set(seg, f);\n+        }\n+\n+        private static long setFlag(boolean flag, long value, long org) {\n+            return flag ? org | value : org;\n+        }\n+\n+        private static <T extends Enum<T>> void addFlag(long value, EnumSet<T> flags, T flag, int v) {\n+            if ((value & v) != 0) {\n+                flags.add(flag);\n+            }\n+        }\n+\n+        public Attributes asAttributes() {\n+            Attributes attr = new Attributes();\n+            \/\/ Input flags\n+            long c_iflag = c_iflag();\n+            EnumSet<Attributes.InputFlag> iflag = attr.getInputFlags();\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.IGNBRK, IGNBRK);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.IGNBRK, IGNBRK);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.BRKINT, BRKINT);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.IGNPAR, IGNPAR);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.PARMRK, PARMRK);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.INPCK, INPCK);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.ISTRIP, ISTRIP);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.INLCR, INLCR);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.IGNCR, IGNCR);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.ICRNL, ICRNL);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.IXON, IXON);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.IXOFF, IXOFF);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.IXANY, IXANY);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.IMAXBEL, IMAXBEL);\n+            addFlag(c_iflag, iflag, Attributes.InputFlag.IUTF8, IUTF8);\n+            \/\/ Output flags\n+            long c_oflag = c_oflag();\n+            EnumSet<Attributes.OutputFlag> oflag = attr.getOutputFlags();\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.OPOST, OPOST);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.ONLCR, ONLCR);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.OXTABS, OXTABS);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.ONOEOT, ONOEOT);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.OCRNL, OCRNL);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.ONOCR, ONOCR);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.ONLRET, ONLRET);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.OFILL, OFILL);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.NLDLY, NLDLY);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.TABDLY, TABDLY);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.CRDLY, CRDLY);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.FFDLY, FFDLY);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.BSDLY, BSDLY);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.VTDLY, VTDLY);\n+            addFlag(c_oflag, oflag, Attributes.OutputFlag.OFDEL, OFDEL);\n+            \/\/ Control flags\n+            long c_cflag = c_cflag();\n+            EnumSet<Attributes.ControlFlag> cflag = attr.getControlFlags();\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CIGNORE, CIGNORE);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CS5, CS5);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CS6, CS6);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CS7, CS7);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CS8, CS8);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CSTOPB, CSTOPB);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CREAD, CREAD);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.PARENB, PARENB);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.PARODD, PARODD);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.HUPCL, HUPCL);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CLOCAL, CLOCAL);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CCTS_OFLOW, CCTS_OFLOW);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CRTS_IFLOW, CRTS_IFLOW);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CDSR_OFLOW, CDSR_OFLOW);\n+            addFlag(c_cflag, cflag, Attributes.ControlFlag.CCAR_OFLOW, CCAR_OFLOW);\n+            \/\/ Local flags\n+            long c_lflag = c_lflag();\n+            EnumSet<Attributes.LocalFlag> lflag = attr.getLocalFlags();\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.ECHOKE, ECHOKE);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.ECHOE, ECHOE);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.ECHOK, ECHOK);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.ECHO, ECHO);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.ECHONL, ECHONL);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.ECHOPRT, ECHOPRT);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.ECHOCTL, ECHOCTL);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.ISIG, ISIG);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.ICANON, ICANON);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.ALTWERASE, ALTWERASE);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.IEXTEN, IEXTEN);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.EXTPROC, EXTPROC);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.TOSTOP, TOSTOP);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.FLUSHO, FLUSHO);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.NOKERNINFO, NOKERNINFO);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.PENDIN, PENDIN);\n+            addFlag(c_lflag, lflag, Attributes.LocalFlag.NOFLSH, NOFLSH);\n+            \/\/ Control chars\n+            byte[] c_cc = c_cc().toArray(ValueLayout.JAVA_BYTE);\n+            EnumMap<Attributes.ControlChar, Integer> cc = attr.getControlChars();\n+            cc.put(Attributes.ControlChar.VEOF, (int) c_cc[VEOF]);\n+            cc.put(Attributes.ControlChar.VEOL, (int) c_cc[VEOL]);\n+            cc.put(Attributes.ControlChar.VEOL2, (int) c_cc[VEOL2]);\n+            cc.put(Attributes.ControlChar.VERASE, (int) c_cc[VERASE]);\n+            cc.put(Attributes.ControlChar.VWERASE, (int) c_cc[VWERASE]);\n+            cc.put(Attributes.ControlChar.VKILL, (int) c_cc[VKILL]);\n+            cc.put(Attributes.ControlChar.VREPRINT, (int) c_cc[VREPRINT]);\n+            cc.put(Attributes.ControlChar.VINTR, (int) c_cc[VINTR]);\n+            cc.put(Attributes.ControlChar.VQUIT, (int) c_cc[VQUIT]);\n+            cc.put(Attributes.ControlChar.VSUSP, (int) c_cc[VSUSP]);\n+            if (VDSUSP != (-1)) {\n+                cc.put(Attributes.ControlChar.VDSUSP, (int) c_cc[VDSUSP]);\n+            }\n+            cc.put(Attributes.ControlChar.VSTART, (int) c_cc[VSTART]);\n+            cc.put(Attributes.ControlChar.VSTOP, (int) c_cc[VSTOP]);\n+            cc.put(Attributes.ControlChar.VLNEXT, (int) c_cc[VLNEXT]);\n+            cc.put(Attributes.ControlChar.VDISCARD, (int) c_cc[VDISCARD]);\n+            cc.put(Attributes.ControlChar.VMIN, (int) c_cc[VMIN]);\n+            cc.put(Attributes.ControlChar.VTIME, (int) c_cc[VTIME]);\n+            if (VSTATUS != (-1)) {\n+                cc.put(Attributes.ControlChar.VSTATUS, (int) c_cc[VSTATUS]);\n+            }\n+            \/\/ Return\n+            return attr;\n+        }\n+    }\n+\n+    static MethodHandle ioctl;\n+    static MethodHandle isatty;\n+    static MethodHandle openpty;\n+    static MethodHandle tcsetattr;\n+    static MethodHandle tcgetattr;\n+    static MethodHandle ttyname_r;\n+    static LinkageError openptyError;\n+\n+    static {\n+        \/\/ methods\n+        Linker linker = Linker.nativeLinker();\n+        SymbolLookup lookup = SymbolLookup.loaderLookup().or(linker.defaultLookup());\n+        \/\/ https:\/\/man7.org\/linux\/man-pages\/man2\/ioctl.2.html\n+        ioctl = linker.downcallHandle(\n+                lookup.find(\"ioctl\").get(),\n+                FunctionDescriptor.of(\n+                        ValueLayout.JAVA_INT, ValueLayout.JAVA_INT, ValueLayout.JAVA_LONG, ValueLayout.ADDRESS),\n+                Linker.Option.firstVariadicArg(2));\n+        \/\/ https:\/\/www.man7.org\/linux\/man-pages\/man3\/isatty.3.html\n+        isatty = linker.downcallHandle(\n+                lookup.find(\"isatty\").get(), FunctionDescriptor.of(ValueLayout.JAVA_INT, ValueLayout.JAVA_INT));\n+        \/\/ https:\/\/man7.org\/linux\/man-pages\/man3\/tcsetattr.3p.html\n+        tcsetattr = linker.downcallHandle(\n+                lookup.find(\"tcsetattr\").get(),\n+                FunctionDescriptor.of(\n+                        ValueLayout.JAVA_INT, ValueLayout.JAVA_INT, ValueLayout.JAVA_INT, ValueLayout.ADDRESS));\n+        \/\/ https:\/\/man7.org\/linux\/man-pages\/man3\/tcgetattr.3p.html\n+        tcgetattr = linker.downcallHandle(\n+                lookup.find(\"tcgetattr\").get(),\n+                FunctionDescriptor.of(ValueLayout.JAVA_INT, ValueLayout.JAVA_INT, ValueLayout.ADDRESS));\n+        \/\/ https:\/\/man7.org\/linux\/man-pages\/man3\/ttyname.3.html\n+        ttyname_r = linker.downcallHandle(\n+                lookup.find(\"ttyname_r\").get(),\n+                FunctionDescriptor.of(\n+                        ValueLayout.JAVA_INT, ValueLayout.JAVA_INT, ValueLayout.ADDRESS, ValueLayout.JAVA_LONG));\n+        \/\/ https:\/\/man7.org\/linux\/man-pages\/man3\/openpty.3.html\n+        LinkageError error = null;\n+        Optional<MemorySegment> openPtyAddr = lookup.find(\"openpty\");\n+        if (openPtyAddr.isPresent()) {\n+            openpty = linker.downcallHandle(\n+                    openPtyAddr.get(),\n+                    FunctionDescriptor.of(\n+                            ValueLayout.JAVA_INT,\n+                            ValueLayout.ADDRESS,\n+                            ValueLayout.ADDRESS,\n+                            ValueLayout.ADDRESS,\n+                            ValueLayout.ADDRESS,\n+                            ValueLayout.ADDRESS));\n+            openptyError = null;\n+        } else {\n+            openpty = null;\n+            openptyError = error;\n+        }\n+    }\n+\n+    private static String readFully(InputStream in) throws IOException {\n+        int readLen = 0;\n+        ByteArrayOutputStream b = new ByteArrayOutputStream();\n+        byte[] buf = new byte[32];\n+        while ((readLen = in.read(buf, 0, buf.length)) >= 0) {\n+            b.write(buf, 0, readLen);\n+        }\n+        return b.toString();\n+    }\n+\n+    static Size getTerminalSize(int fd) {\n+        try {\n+            winsize ws = new winsize();\n+            int res = (int) ioctl.invoke(fd, (long) TIOCGWINSZ, ws.segment());\n+            return new Size(ws.ws_col(), ws.ws_row());\n+        } catch (Throwable e) {\n+            throw new RuntimeException(\"Unable to call ioctl(TIOCGWINSZ)\", e);\n+        }\n+    }\n+\n+    static void setTerminalSize(int fd, Size size) {\n+        try {\n+            winsize ws = new winsize();\n+            ws.ws_row((short) size.getRows());\n+            ws.ws_col((short) size.getColumns());\n+            int res = (int) ioctl.invoke(fd, TIOCSWINSZ, ws.segment());\n+        } catch (Throwable e) {\n+            throw new RuntimeException(\"Unable to call ioctl(TIOCSWINSZ)\", e);\n+        }\n+    }\n+\n+    static Attributes getAttributes(int fd) {\n+        try {\n+            termios t = new termios();\n+            int res = (int) tcgetattr.invoke(fd, t.segment());\n+            return t.asAttributes();\n+        } catch (Throwable e) {\n+            throw new RuntimeException(\"Unable to call tcgetattr()\", e);\n+        }\n+    }\n+\n+    static void setAttributes(int fd, Attributes attr) {\n+        try {\n+            termios t = new termios(attr);\n+            int res = (int) tcsetattr.invoke(fd, TCSANOW, t.segment());\n+        } catch (Throwable e) {\n+            throw new RuntimeException(\"Unable to call tcsetattr()\", e);\n+        }\n+    }\n+\n+    static boolean isTty(int fd) {\n+        try {\n+            return (int) isatty.invoke(fd) == 1;\n+        } catch (Throwable e) {\n+            throw new RuntimeException(\"Unable to call isatty()\", e);\n+        }\n+    }\n+\n+    static String ttyName(int fd) {\n+        try {\n+            java.lang.foreign.MemorySegment buf =\n+                    java.lang.foreign.Arena.ofAuto().allocate(64);\n+            int res = (int) ttyname_r.invoke(fd, buf, buf.byteSize());\n+            byte[] data = buf.toArray(ValueLayout.JAVA_BYTE);\n+            int len = 0;\n+            while (data[len] != 0) {\n+                len++;\n+            }\n+            return new String(data, 0, len);\n+        } catch (Throwable e) {\n+            throw new RuntimeException(\"Unable to call ttyname_r()\", e);\n+        }\n+    }\n+\n+    static Pty openpty(TerminalProvider provider, Attributes attr, Size size) {\n+        if (openptyError != null) {\n+            throw openptyError;\n+        }\n+        try {\n+            java.lang.foreign.MemorySegment buf =\n+                    java.lang.foreign.Arena.ofAuto().allocate(64);\n+            java.lang.foreign.MemorySegment master =\n+                    java.lang.foreign.Arena.ofAuto().allocate(ValueLayout.JAVA_INT);\n+            java.lang.foreign.MemorySegment slave =\n+                    java.lang.foreign.Arena.ofAuto().allocate(ValueLayout.JAVA_INT);\n+            int res = (int) openpty.invoke(\n+                    master,\n+                    slave,\n+                    buf,\n+                    attr != null ? new termios(attr).segment() : java.lang.foreign.MemorySegment.NULL,\n+                    size != null\n+                            ? new winsize((short) size.getRows(), (short) size.getColumns()).segment()\n+                            : java.lang.foreign.MemorySegment.NULL);\n+            byte[] str = buf.toArray(ValueLayout.JAVA_BYTE);\n+            int len = 0;\n+            while (str[len] != 0) {\n+                len++;\n+            }\n+            String device = new String(str, 0, len);\n+            return new FfmNativePty(\n+                    provider, null, master.get(ValueLayout.JAVA_INT, 0), slave.get(ValueLayout.JAVA_INT, 0), device);\n+        } catch (Throwable e) {\n+            throw new RuntimeException(\"Unable to call openpty()\", e);\n+        }\n+    }\n+\n+    \/\/ CONSTANTS\n+\n+    private static final int TIOCGWINSZ;\n+    private static final int TIOCSWINSZ;\n+\n+    private static final int TCSANOW;\n+    private static int TCSADRAIN;\n+    private static int TCSAFLUSH;\n+\n+    private static final int VEOF;\n+    private static final int VEOL;\n+    private static final int VEOL2;\n+    private static final int VERASE;\n+    private static final int VWERASE;\n+    private static final int VKILL;\n+    private static final int VREPRINT;\n+    private static final int VERASE2;\n+    private static final int VINTR;\n+    private static final int VQUIT;\n+    private static final int VSUSP;\n+    private static final int VDSUSP;\n+    private static final int VSTART;\n+    private static final int VSTOP;\n+    private static final int VLNEXT;\n+    private static final int VDISCARD;\n+    private static final int VMIN;\n+    private static final int VSWTC;\n+    private static final int VTIME;\n+    private static final int VSTATUS;\n+\n+    private static final int IGNBRK;\n+    private static final int BRKINT;\n+    private static final int IGNPAR;\n+    private static final int PARMRK;\n+    private static final int INPCK;\n+    private static final int ISTRIP;\n+    private static final int INLCR;\n+    private static final int IGNCR;\n+    private static final int ICRNL;\n+    private static int IUCLC;\n+    private static final int IXON;\n+    private static final int IXOFF;\n+    private static final int IXANY;\n+    private static final int IMAXBEL;\n+    private static int IUTF8;\n+\n+    private static final int OPOST;\n+    private static int OLCUC;\n+    private static final int ONLCR;\n+    private static int OXTABS;\n+    private static int NLDLY;\n+    private static int NL0;\n+    private static int NL1;\n+    private static final int TABDLY;\n+    private static int TAB0;\n+    private static int TAB1;\n+    private static int TAB2;\n+    private static int TAB3;\n+    private static int CRDLY;\n+    private static int CR0;\n+    private static int CR1;\n+    private static int CR2;\n+    private static int CR3;\n+    private static int FFDLY;\n+    private static int FF0;\n+    private static int FF1;\n+    private static int XTABS;\n+    private static int BSDLY;\n+    private static int BS0;\n+    private static int BS1;\n+    private static int VTDLY;\n+    private static int VT0;\n+    private static int VT1;\n+    private static int CBAUD;\n+    private static int B0;\n+    private static int B50;\n+    private static int B75;\n+    private static int B110;\n+    private static int B134;\n+    private static int B150;\n+    private static int B200;\n+    private static int B300;\n+    private static int B600;\n+    private static int B1200;\n+    private static int B1800;\n+    private static int B2400;\n+    private static int B4800;\n+    private static int B9600;\n+    private static int B19200;\n+    private static int B38400;\n+    private static int EXTA;\n+    private static int EXTB;\n+    private static int OFDEL;\n+    private static int ONOEOT;\n+    private static final int OCRNL;\n+    private static int ONOCR;\n+    private static final int ONLRET;\n+    private static int OFILL;\n+\n+    private static int CIGNORE;\n+    private static int CSIZE;\n+    private static final int CS5;\n+    private static final int CS6;\n+    private static final int CS7;\n+    private static final int CS8;\n+    private static final int CSTOPB;\n+    private static final int CREAD;\n+    private static final int PARENB;\n+    private static final int PARODD;\n+    private static final int HUPCL;\n+    private static final int CLOCAL;\n+    private static int CCTS_OFLOW;\n+    private static int CRTS_IFLOW;\n+    private static int CDTR_IFLOW;\n+    private static int CDSR_OFLOW;\n+    private static int CCAR_OFLOW;\n+\n+    private static final int ECHOKE;\n+    private static final int ECHOE;\n+    private static final int ECHOK;\n+    private static final int ECHO;\n+    private static final int ECHONL;\n+    private static final int ECHOPRT;\n+    private static final int ECHOCTL;\n+    private static final int ISIG;\n+    private static final int ICANON;\n+    private static int XCASE;\n+    private static int ALTWERASE;\n+    private static final int IEXTEN;\n+    private static final int EXTPROC;\n+    private static final int TOSTOP;\n+    private static final int FLUSHO;\n+    private static int NOKERNINFO;\n+    private static final int PENDIN;\n+    private static final int NOFLSH;\n+\n+    static {\n+        String osName = System.getProperty(\"os.name\");\n+        if (osName.startsWith(\"Linux\")) {\n+            String arch = System.getProperty(\"os.arch\");\n+            boolean isMipsPpcOrSparc = arch.equals(\"mips\")\n+                    || arch.equals(\"mips64\")\n+                    || arch.equals(\"mipsel\")\n+                    || arch.equals(\"mips64el\")\n+                    || arch.startsWith(\"ppc\")\n+                    || arch.startsWith(\"sparc\");\n+            TIOCGWINSZ = isMipsPpcOrSparc ? 0x40087468 : 0x00005413;\n+            TIOCSWINSZ = isMipsPpcOrSparc ? 0x80087467 : 0x00005414;\n+\n+            TCSANOW = 0x0;\n+            TCSADRAIN = 0x1;\n+            TCSAFLUSH = 0x2;\n+\n+            VINTR = 0;\n+            VQUIT = 1;\n+            VERASE = 2;\n+            VKILL = 3;\n+            VEOF = 4;\n+            VTIME = 5;\n+            VMIN = 6;\n+            VSWTC = 7;\n+            VSTART = 8;\n+            VSTOP = 9;\n+            VSUSP = 10;\n+            VEOL = 11;\n+            VREPRINT = 12;\n+            VDISCARD = 13;\n+            VWERASE = 14;\n+            VLNEXT = 15;\n+            VEOL2 = 16;\n+            VERASE2 = -1;\n+            VDSUSP = -1;\n+            VSTATUS = -1;\n+\n+            IGNBRK = 0x0000001;\n+            BRKINT = 0x0000002;\n+            IGNPAR = 0x0000004;\n+            PARMRK = 0x0000008;\n+            INPCK = 0x0000010;\n+            ISTRIP = 0x0000020;\n+            INLCR = 0x0000040;\n+            IGNCR = 0x0000080;\n+            ICRNL = 0x0000100;\n+            IUCLC = 0x0000200;\n+            IXON = 0x0000400;\n+            IXANY = 0x0000800;\n+            IXOFF = 0x0001000;\n+            IMAXBEL = 0x0002000;\n+            IUTF8 = 0x0004000;\n+\n+            OPOST = 0x0000001;\n+            OLCUC = 0x0000002;\n+            ONLCR = 0x0000004;\n+            OCRNL = 0x0000008;\n+            ONOCR = 0x0000010;\n+            ONLRET = 0x0000020;\n+            OFILL = 0x0000040;\n+            OFDEL = 0x0000080;\n+            NLDLY = 0x0000100;\n+            NL0 = 0x0000000;\n+            NL1 = 0x0000100;\n+            CRDLY = 0x0000600;\n+            CR0 = 0x0000000;\n+            CR1 = 0x0000200;\n+            CR2 = 0x0000400;\n+            CR3 = 0x0000600;\n+            TABDLY = 0x0001800;\n+            TAB0 = 0x0000000;\n+            TAB1 = 0x0000800;\n+            TAB2 = 0x0001000;\n+            TAB3 = 0x0001800;\n+            XTABS = 0x0001800;\n+            BSDLY = 0x0002000;\n+            BS0 = 0x0000000;\n+            BS1 = 0x0002000;\n+            VTDLY = 0x0004000;\n+            VT0 = 0x0000000;\n+            VT1 = 0x0004000;\n+            FFDLY = 0x0008000;\n+            FF0 = 0x0000000;\n+            FF1 = 0x0008000;\n+\n+            CBAUD = 0x000100f;\n+            B0 = 0x0000000;\n+            B50 = 0x0000001;\n+            B75 = 0x0000002;\n+            B110 = 0x0000003;\n+            B134 = 0x0000004;\n+            B150 = 0x0000005;\n+            B200 = 0x0000006;\n+            B300 = 0x0000007;\n+            B600 = 0x0000008;\n+            B1200 = 0x0000009;\n+            B1800 = 0x000000a;\n+            B2400 = 0x000000b;\n+            B4800 = 0x000000c;\n+            B9600 = 0x000000d;\n+            B19200 = 0x000000e;\n+            B38400 = 0x000000f;\n+            EXTA = B19200;\n+            EXTB = B38400;\n+            CSIZE = 0x0000030;\n+            CS5 = 0x0000000;\n+            CS6 = 0x0000010;\n+            CS7 = 0x0000020;\n+            CS8 = 0x0000030;\n+            CSTOPB = 0x0000040;\n+            CREAD = 0x0000080;\n+            PARENB = 0x0000100;\n+            PARODD = 0x0000200;\n+            HUPCL = 0x0000400;\n+            CLOCAL = 0x0000800;\n+\n+            ISIG = 0x0000001;\n+            ICANON = 0x0000002;\n+            XCASE = 0x0000004;\n+            ECHO = 0x0000008;\n+            ECHOE = 0x0000010;\n+            ECHOK = 0x0000020;\n+            ECHONL = 0x0000040;\n+            NOFLSH = 0x0000080;\n+            TOSTOP = 0x0000100;\n+            ECHOCTL = 0x0000200;\n+            ECHOPRT = 0x0000400;\n+            ECHOKE = 0x0000800;\n+            FLUSHO = 0x0001000;\n+            PENDIN = 0x0002000;\n+            IEXTEN = 0x0008000;\n+            EXTPROC = 0x0010000;\n+        } else if (osName.startsWith(\"Solaris\") || osName.startsWith(\"SunOS\")) {\n+            int _TIOC = ('T' << 8);\n+            TIOCGWINSZ = (_TIOC | 104);\n+            TIOCSWINSZ = (_TIOC | 103);\n+\n+            TCSANOW = 0x0;\n+            TCSADRAIN = 0x1;\n+            TCSAFLUSH = 0x2;\n+\n+            VINTR = 0;\n+            VQUIT = 1;\n+            VERASE = 2;\n+            VKILL = 3;\n+            VEOF = 4;\n+            VTIME = 5;\n+            VMIN = 6;\n+            VSWTC = 7;\n+            VSTART = 8;\n+            VSTOP = 9;\n+            VSUSP = 10;\n+            VEOL = 11;\n+            VREPRINT = 12;\n+            VDISCARD = 13;\n+            VWERASE = 14;\n+            VLNEXT = 15;\n+            VEOL2 = 16;\n+            VERASE2 = -1;\n+            VDSUSP = -1;\n+            VSTATUS = -1;\n+\n+            IGNBRK = 0x0000001;\n+            BRKINT = 0x0000002;\n+            IGNPAR = 0x0000004;\n+            PARMRK = 0x0000010;\n+            INPCK = 0x0000020;\n+            ISTRIP = 0x0000040;\n+            INLCR = 0x0000100;\n+            IGNCR = 0x0000200;\n+            ICRNL = 0x0000400;\n+            IUCLC = 0x0001000;\n+            IXON = 0x0002000;\n+            IXANY = 0x0004000;\n+            IXOFF = 0x0010000;\n+            IMAXBEL = 0x0020000;\n+            IUTF8 = 0x0040000;\n+\n+            OPOST = 0x0000001;\n+            OLCUC = 0x0000002;\n+            ONLCR = 0x0000004;\n+            OCRNL = 0x0000010;\n+            ONOCR = 0x0000020;\n+            ONLRET = 0x0000040;\n+            OFILL = 0x0000100;\n+            OFDEL = 0x0000200;\n+            NLDLY = 0x0000400;\n+            NL0 = 0x0000000;\n+            NL1 = 0x0000400;\n+            CRDLY = 0x0003000;\n+            CR0 = 0x0000000;\n+            CR1 = 0x0001000;\n+            CR2 = 0x0002000;\n+            CR3 = 0x0003000;\n+            TABDLY = 0x0014000;\n+            TAB0 = 0x0000000;\n+            TAB1 = 0x0004000;\n+            TAB2 = 0x0010000;\n+            TAB3 = 0x0014000;\n+            XTABS = 0x0014000;\n+            BSDLY = 0x0020000;\n+            BS0 = 0x0000000;\n+            BS1 = 0x0020000;\n+            VTDLY = 0x0040000;\n+            VT0 = 0x0000000;\n+            VT1 = 0x0040000;\n+            FFDLY = 0x0100000;\n+            FF0 = 0x0000000;\n+            FF1 = 0x0100000;\n+\n+            CBAUD = 0x0010017;\n+            B0 = 0x0000000;\n+            B50 = 0x0000001;\n+            B75 = 0x0000002;\n+            B110 = 0x0000003;\n+            B134 = 0x0000004;\n+            B150 = 0x0000005;\n+            B200 = 0x0000006;\n+            B300 = 0x0000007;\n+            B600 = 0x0000010;\n+            B1200 = 0x0000011;\n+            B1800 = 0x0000012;\n+            B2400 = 0x0000013;\n+            B4800 = 0x0000014;\n+            B9600 = 0x0000015;\n+            B19200 = 0x0000016;\n+            B38400 = 0x0000017;\n+            EXTA = 0xB19200;\n+            EXTB = 0xB38400;\n+            CSIZE = 0x0000060;\n+            CS5 = 0x0000000;\n+            CS6 = 0x0000020;\n+            CS7 = 0x0000040;\n+            CS8 = 0x0000060;\n+            CSTOPB = 0x0000100;\n+            CREAD = 0x0000200;\n+            PARENB = 0x0000400;\n+            PARODD = 0x0001000;\n+            HUPCL = 0x0002000;\n+            CLOCAL = 0x0004000;\n+\n+            ISIG = 0x0000001;\n+            ICANON = 0x0000002;\n+            XCASE = 0x0000004;\n+            ECHO = 0x0000010;\n+            ECHOE = 0x0000020;\n+            ECHOK = 0x0000040;\n+            ECHONL = 0x0000100;\n+            NOFLSH = 0x0000200;\n+            TOSTOP = 0x0000400;\n+            ECHOCTL = 0x0001000;\n+            ECHOPRT = 0x0002000;\n+            ECHOKE = 0x0004000;\n+            FLUSHO = 0x0010000;\n+            PENDIN = 0x0040000;\n+            IEXTEN = 0x0100000;\n+            EXTPROC = 0x0200000;\n+        } else if (osName.startsWith(\"Mac\") || osName.startsWith(\"Darwin\")) {\n+            TIOCGWINSZ = 0x40087468;\n+            TIOCSWINSZ = 0x80087467;\n+\n+            TCSANOW = 0x00000000;\n+\n+            VEOF = 0;\n+            VEOL = 1;\n+            VEOL2 = 2;\n+            VERASE = 3;\n+            VWERASE = 4;\n+            VKILL = 5;\n+            VREPRINT = 6;\n+            VINTR = 8;\n+            VQUIT = 9;\n+            VSUSP = 10;\n+            VDSUSP = 11;\n+            VSTART = 12;\n+            VSTOP = 13;\n+            VLNEXT = 14;\n+            VDISCARD = 15;\n+            VMIN = 16;\n+            VTIME = 17;\n+            VSTATUS = 18;\n+            VERASE2 = -1;\n+            VSWTC = -1;\n+\n+            IGNBRK = 0x00000001;\n+            BRKINT = 0x00000002;\n+            IGNPAR = 0x00000004;\n+            PARMRK = 0x00000008;\n+            INPCK = 0x00000010;\n+            ISTRIP = 0x00000020;\n+            INLCR = 0x00000040;\n+            IGNCR = 0x00000080;\n+            ICRNL = 0x00000100;\n+            IXON = 0x00000200;\n+            IXOFF = 0x00000400;\n+            IXANY = 0x00000800;\n+            IMAXBEL = 0x00002000;\n+            IUTF8 = 0x00004000;\n+\n+            OPOST = 0x00000001;\n+            ONLCR = 0x00000002;\n+            OXTABS = 0x00000004;\n+            ONOEOT = 0x00000008;\n+            OCRNL = 0x00000010;\n+            ONOCR = 0x00000020;\n+            ONLRET = 0x00000040;\n+            OFILL = 0x00000080;\n+            NLDLY = 0x00000300;\n+            TABDLY = 0x00000c04;\n+            CRDLY = 0x00003000;\n+            FFDLY = 0x00004000;\n+            BSDLY = 0x00008000;\n+            VTDLY = 0x00010000;\n+            OFDEL = 0x00020000;\n+\n+            CIGNORE = 0x00000001;\n+            CS5 = 0x00000000;\n+            CS6 = 0x00000100;\n+            CS7 = 0x00000200;\n+            CS8 = 0x00000300;\n+            CSTOPB = 0x00000400;\n+            CREAD = 0x00000800;\n+            PARENB = 0x00001000;\n+            PARODD = 0x00002000;\n+            HUPCL = 0x00004000;\n+            CLOCAL = 0x00008000;\n+            CCTS_OFLOW = 0x00010000;\n+            CRTS_IFLOW = 0x00020000;\n+            CDTR_IFLOW = 0x00040000;\n+            CDSR_OFLOW = 0x00080000;\n+            CCAR_OFLOW = 0x00100000;\n+\n+            ECHOKE = 0x00000001;\n+            ECHOE = 0x00000002;\n+            ECHOK = 0x00000004;\n+            ECHO = 0x00000008;\n+            ECHONL = 0x00000010;\n+            ECHOPRT = 0x00000020;\n+            ECHOCTL = 0x00000040;\n+            ISIG = 0x00000080;\n+            ICANON = 0x00000100;\n+            ALTWERASE = 0x00000200;\n+            IEXTEN = 0x00000400;\n+            EXTPROC = 0x00000800;\n+            TOSTOP = 0x00400000;\n+            FLUSHO = 0x00800000;\n+            NOKERNINFO = 0x02000000;\n+            PENDIN = 0x20000000;\n+            NOFLSH = 0x80000000;\n+        } else if (osName.startsWith(\"FreeBSD\")) {\n+            TIOCGWINSZ = 0x40087468;\n+            TIOCSWINSZ = 0x80087467;\n+\n+            TCSANOW = 0x0;\n+            TCSADRAIN = 0x1;\n+            TCSAFLUSH = 0x2;\n+\n+            VEOF = 0;\n+            VEOL = 1;\n+            VEOL2 = 2;\n+            VERASE = 3;\n+            VWERASE = 4;\n+            VKILL = 5;\n+            VREPRINT = 6;\n+            VERASE2 = 7;\n+            VINTR = 8;\n+            VQUIT = 9;\n+            VSUSP = 10;\n+            VDSUSP = 11;\n+            VSTART = 12;\n+            VSTOP = 13;\n+            VLNEXT = 14;\n+            VDISCARD = 15;\n+            VMIN = 16;\n+            VTIME = 17;\n+            VSTATUS = 18;\n+            VSWTC = -1;\n+\n+            IGNBRK = 0x0000001;\n+            BRKINT = 0x0000002;\n+            IGNPAR = 0x0000004;\n+            PARMRK = 0x0000008;\n+            INPCK = 0x0000010;\n+            ISTRIP = 0x0000020;\n+            INLCR = 0x0000040;\n+            IGNCR = 0x0000080;\n+            ICRNL = 0x0000100;\n+            IXON = 0x0000200;\n+            IXOFF = 0x0000400;\n+            IXANY = 0x0000800;\n+            IMAXBEL = 0x0002000;\n+\n+            OPOST = 0x0000001;\n+            ONLCR = 0x0000002;\n+            TABDLY = 0x0000004;\n+            TAB0 = 0x0000000;\n+            TAB3 = 0x0000004;\n+            ONOEOT = 0x0000008;\n+            OCRNL = 0x0000010;\n+            ONLRET = 0x0000040;\n+\n+            CIGNORE = 0x0000001;\n+            CSIZE = 0x0000300;\n+            CS5 = 0x0000000;\n+            CS6 = 0x0000100;\n+            CS7 = 0x0000200;\n+            CS8 = 0x0000300;\n+            CSTOPB = 0x0000400;\n+            CREAD = 0x0000800;\n+            PARENB = 0x0001000;\n+            PARODD = 0x0002000;\n+            HUPCL = 0x0004000;\n+            CLOCAL = 0x0008000;\n+\n+            ECHOKE = 0x0000001;\n+            ECHOE = 0x0000002;\n+            ECHOK = 0x0000004;\n+            ECHO = 0x0000008;\n+            ECHONL = 0x0000010;\n+            ECHOPRT = 0x0000020;\n+            ECHOCTL = 0x0000040;\n+            ISIG = 0x0000080;\n+            ICANON = 0x0000100;\n+            ALTWERASE = 0x000200;\n+            IEXTEN = 0x0000400;\n+            EXTPROC = 0x0000800;\n+            TOSTOP = 0x0400000;\n+            FLUSHO = 0x0800000;\n+            PENDIN = 0x2000000;\n+            NOFLSH = 0x8000000;\n+        } else {\n+            throw new UnsupportedOperationException();\n+        }\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ffm\/CLibrary.java","additions":1170,"deletions":0,"binary":false,"changes":1170,"status":"added"},{"patch":"@@ -0,0 +1,175 @@\n+\/*\n+ * Copyright (c) 2022-2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.impl.ffm;\n+\n+import java.io.FileDescriptor;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+\n+import jdk.internal.org.jline.terminal.Attributes;\n+import jdk.internal.org.jline.terminal.Size;\n+import jdk.internal.org.jline.terminal.impl.AbstractPty;\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n+\n+class FfmNativePty extends AbstractPty {\n+    private final int master;\n+    private final int slave;\n+    private final int slaveOut;\n+    private final String name;\n+    private final FileDescriptor masterFD;\n+    private final FileDescriptor slaveFD;\n+    private final FileDescriptor slaveOutFD;\n+\n+    public FfmNativePty(TerminalProvider provider, SystemStream systemStream, int master, int slave, String name) {\n+        this(\n+                provider,\n+                systemStream,\n+                master,\n+                newDescriptor(master),\n+                slave,\n+                newDescriptor(slave),\n+                slave,\n+                newDescriptor(slave),\n+                name);\n+    }\n+\n+    public FfmNativePty(\n+            TerminalProvider provider,\n+            SystemStream systemStream,\n+            int master,\n+            FileDescriptor masterFD,\n+            int slave,\n+            FileDescriptor slaveFD,\n+            int slaveOut,\n+            FileDescriptor slaveOutFD,\n+            String name) {\n+        super(provider, systemStream);\n+        this.master = master;\n+        this.slave = slave;\n+        this.slaveOut = slaveOut;\n+        this.name = name;\n+        this.masterFD = masterFD;\n+        this.slaveFD = slaveFD;\n+        this.slaveOutFD = slaveOutFD;\n+    }\n+\n+    @Override\n+    public void close() throws IOException {\n+        if (master > 0) {\n+            getMasterInput().close();\n+        }\n+        if (slave > 0) {\n+            getSlaveInput().close();\n+        }\n+    }\n+\n+    public int getMaster() {\n+        return master;\n+    }\n+\n+    public int getSlave() {\n+        return slave;\n+    }\n+\n+    public int getSlaveOut() {\n+        return slaveOut;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public FileDescriptor getMasterFD() {\n+        return masterFD;\n+    }\n+\n+    public FileDescriptor getSlaveFD() {\n+        return slaveFD;\n+    }\n+\n+    public FileDescriptor getSlaveOutFD() {\n+        return slaveOutFD;\n+    }\n+\n+    public InputStream getMasterInput() {\n+        return new FileInputStream(getMasterFD());\n+    }\n+\n+    public OutputStream getMasterOutput() {\n+        return new FileOutputStream(getMasterFD());\n+    }\n+\n+    protected InputStream doGetSlaveInput() {\n+        return new FileInputStream(getSlaveFD());\n+    }\n+\n+    public OutputStream getSlaveOutput() {\n+        return new FileOutputStream(getSlaveOutFD());\n+    }\n+\n+    @Override\n+    public Attributes getAttr() throws IOException {\n+        return CLibrary.getAttributes(slave);\n+    }\n+\n+    @Override\n+    protected void doSetAttr(Attributes attr) throws IOException {\n+        CLibrary.setAttributes(slave, attr);\n+    }\n+\n+    @Override\n+    public Size getSize() throws IOException {\n+        return CLibrary.getTerminalSize(slave);\n+    }\n+\n+    @Override\n+    public void setSize(Size size) throws IOException {\n+        CLibrary.setTerminalSize(slave, size);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FfmNativePty[\" + getName() + \"]\";\n+    }\n+\n+    public static boolean isPosixSystemStream(SystemStream stream) {\n+        switch (stream) {\n+            case Input:\n+                return CLibrary.isTty(0);\n+            case Output:\n+                return CLibrary.isTty(1);\n+            case Error:\n+                return CLibrary.isTty(2);\n+            default:\n+                throw new IllegalArgumentException();\n+        }\n+    }\n+\n+    public static String posixSystemStreamName(SystemStream stream) {\n+        switch (stream) {\n+            case Input:\n+                return CLibrary.ttyName(0);\n+            case Output:\n+                return CLibrary.ttyName(1);\n+            case Error:\n+                return CLibrary.ttyName(2);\n+            default:\n+                throw new IllegalArgumentException();\n+        }\n+    }\n+\n+    public static int systemStreamWidth(SystemStream systemStream) {\n+        int fd = systemStream == SystemStream.Output ? 1 : 2;\n+        return CLibrary.getTerminalSize(fd).getColumns();\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ffm\/FfmNativePty.java","additions":175,"deletions":0,"binary":false,"changes":175,"status":"added"},{"patch":"@@ -0,0 +1,133 @@\n+\/*\n+ * Copyright (c) 2022-2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.impl.ffm;\n+\n+import java.io.FileDescriptor;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.lang.foreign.MemoryLayout;\n+import java.lang.foreign.MemoryLayout.PathElement;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.VarHandle;\n+import java.nio.charset.Charset;\n+import java.util.function.Function;\n+\n+import jdk.internal.org.jline.terminal.Attributes;\n+import jdk.internal.org.jline.terminal.Size;\n+import jdk.internal.org.jline.terminal.Terminal;\n+import jdk.internal.org.jline.terminal.TerminalBuilder;\n+import jdk.internal.org.jline.terminal.impl.PosixPtyTerminal;\n+import jdk.internal.org.jline.terminal.impl.PosixSysTerminal;\n+import jdk.internal.org.jline.terminal.spi.Pty;\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n+import jdk.internal.org.jline.utils.OSUtils;\n+\n+public class FfmTerminalProvider implements TerminalProvider {\n+\n+    public FfmTerminalProvider() {\n+        if (!FfmTerminalProvider.class.getModule().isNativeAccessEnabled()) {\n+            throw new UnsupportedOperationException(\n+                    \"Native access is not enabled for the current module: \" + FfmTerminalProvider.class.getModule());\n+        }\n+    }\n+\n+    @Override\n+    public String name() {\n+        return TerminalBuilder.PROP_PROVIDER_FFM;\n+    }\n+\n+    @Override\n+    public Terminal sysTerminal(\n+            String name,\n+            String type,\n+            boolean ansiPassThrough,\n+            Charset encoding,\n+            boolean nativeSignals,\n+            Terminal.SignalHandler signalHandler,\n+            boolean paused,\n+            SystemStream systemStream,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n+        if (OSUtils.IS_WINDOWS) {\n+            return NativeWinSysTerminal.createTerminal(\n+                    this, systemStream, name, type, ansiPassThrough, encoding, nativeSignals, signalHandler, paused, inputStreamWrapper);\n+        } else {\n+            Pty pty = new FfmNativePty(\n+                    this,\n+                    systemStream,\n+                    -1,\n+                    null,\n+                    0,\n+                    FileDescriptor.in,\n+                    systemStream == SystemStream.Output ? 1 : 2,\n+                    systemStream == SystemStream.Output ? FileDescriptor.out : FileDescriptor.err,\n+                    CLibrary.ttyName(0));\n+            return new PosixSysTerminal(name, type, pty, encoding, nativeSignals, signalHandler, inputStreamWrapper);\n+        }\n+    }\n+\n+    @Override\n+    public Terminal newTerminal(\n+            String name,\n+            String type,\n+            InputStream in,\n+            OutputStream out,\n+            Charset encoding,\n+            Terminal.SignalHandler signalHandler,\n+            boolean paused,\n+            Attributes attributes,\n+            Size size)\n+            throws IOException {\n+        Pty pty = CLibrary.openpty(this, attributes, size);\n+        return new PosixPtyTerminal(name, type, pty, in, out, encoding, signalHandler, paused);\n+    }\n+\n+    @Override\n+    public boolean isSystemStream(SystemStream stream) {\n+        if (OSUtils.IS_WINDOWS) {\n+            return isWindowsSystemStream(stream);\n+        } else {\n+            return isPosixSystemStream(stream);\n+        }\n+    }\n+\n+    public boolean isWindowsSystemStream(SystemStream stream) {\n+        return NativeWinSysTerminal.isWindowsSystemStream(stream);\n+    }\n+\n+    public boolean isPosixSystemStream(SystemStream stream) {\n+        return FfmNativePty.isPosixSystemStream(stream);\n+    }\n+\n+    @Override\n+    public String systemStreamName(SystemStream stream) {\n+        return FfmNativePty.posixSystemStreamName(stream);\n+    }\n+\n+    @Override\n+    public int systemStreamWidth(SystemStream stream) {\n+        return FfmNativePty.systemStreamWidth(stream);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"TerminalProvider[\" + name() + \"]\";\n+    }\n+\n+    static VarHandle lookupVarHandle(MemoryLayout layout, PathElement... element) {\n+        VarHandle h = layout.varHandle(element);\n+\n+        \/\/ the last parameter of the VarHandle is additional offset, hardcode zero:\n+        h = MethodHandles.insertCoordinates(h, h.coordinateTypes().size() - 1, 0L);\n+\n+        return h;\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ffm\/FfmTerminalProvider.java","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"},{"patch":"@@ -0,0 +1,927 @@\n+\/*\n+ * Copyright (c) 2009-2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.impl.ffm;\n+\n+import java.io.IOException;\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.VarHandle;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Objects;\n+\n+@SuppressWarnings({\"unused\", \"restricted\"})\n+final class Kernel32 {\n+\n+    public static final int FORMAT_MESSAGE_FROM_SYSTEM = 0x00001000;\n+\n+    public static final int INVALID_HANDLE_VALUE = -1;\n+    public static final int STD_INPUT_HANDLE = -10;\n+    public static final int STD_OUTPUT_HANDLE = -11;\n+    public static final int STD_ERROR_HANDLE = -12;\n+\n+    public static final int ENABLE_PROCESSED_INPUT = 0x0001;\n+    public static final int ENABLE_LINE_INPUT = 0x0002;\n+    public static final int ENABLE_ECHO_INPUT = 0x0004;\n+    public static final int ENABLE_WINDOW_INPUT = 0x0008;\n+    public static final int ENABLE_MOUSE_INPUT = 0x0010;\n+    public static final int ENABLE_INSERT_MODE = 0x0020;\n+    public static final int ENABLE_QUICK_EDIT_MODE = 0x0040;\n+    public static final int ENABLE_EXTENDED_FLAGS = 0x0080;\n+\n+    public static final int RIGHT_ALT_PRESSED = 0x0001;\n+    public static final int LEFT_ALT_PRESSED = 0x0002;\n+    public static final int RIGHT_CTRL_PRESSED = 0x0004;\n+    public static final int LEFT_CTRL_PRESSED = 0x0008;\n+    public static final int SHIFT_PRESSED = 0x0010;\n+\n+    public static final int FOREGROUND_BLUE = 0x0001;\n+    public static final int FOREGROUND_GREEN = 0x0002;\n+    public static final int FOREGROUND_RED = 0x0004;\n+    public static final int FOREGROUND_INTENSITY = 0x0008;\n+    public static final int BACKGROUND_BLUE = 0x0010;\n+    public static final int BACKGROUND_GREEN = 0x0020;\n+    public static final int BACKGROUND_RED = 0x0040;\n+    public static final int BACKGROUND_INTENSITY = 0x0080;\n+\n+    \/\/ Button state\n+    public static final int FROM_LEFT_1ST_BUTTON_PRESSED = 0x0001;\n+    public static final int RIGHTMOST_BUTTON_PRESSED = 0x0002;\n+    public static final int FROM_LEFT_2ND_BUTTON_PRESSED = 0x0004;\n+    public static final int FROM_LEFT_3RD_BUTTON_PRESSED = 0x0008;\n+    public static final int FROM_LEFT_4TH_BUTTON_PRESSED = 0x0010;\n+\n+    \/\/ Event flags\n+    public static final int MOUSE_MOVED = 0x0001;\n+    public static final int DOUBLE_CLICK = 0x0002;\n+    public static final int MOUSE_WHEELED = 0x0004;\n+    public static final int MOUSE_HWHEELED = 0x0008;\n+\n+    \/\/ Event types\n+    public static final short KEY_EVENT = 0x0001;\n+    public static final short MOUSE_EVENT = 0x0002;\n+    public static final short WINDOW_BUFFER_SIZE_EVENT = 0x0004;\n+    public static final short MENU_EVENT = 0x0008;\n+    public static final short FOCUS_EVENT = 0x0010;\n+\n+    public static int WaitForSingleObject(java.lang.foreign.MemorySegment hHandle, int dwMilliseconds) {\n+        MethodHandle mh$ = requireNonNull(WaitForSingleObject$MH, \"WaitForSingleObject\");\n+        try {\n+            return (int) mh$.invokeExact(hHandle, dwMilliseconds);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static java.lang.foreign.MemorySegment GetStdHandle(int nStdHandle) {\n+        MethodHandle mh$ = requireNonNull(GetStdHandle$MH, \"GetStdHandle\");\n+        try {\n+            return (java.lang.foreign.MemorySegment) mh$.invokeExact(nStdHandle);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int FormatMessageW(\n+            int dwFlags,\n+            java.lang.foreign.MemorySegment lpSource,\n+            int dwMessageId,\n+            int dwLanguageId,\n+            java.lang.foreign.MemorySegment lpBuffer,\n+            int nSize,\n+            java.lang.foreign.MemorySegment Arguments) {\n+        MethodHandle mh$ = requireNonNull(FormatMessageW$MH, \"FormatMessageW\");\n+        try {\n+            return (int) mh$.invokeExact(dwFlags, lpSource, dwMessageId, dwLanguageId, lpBuffer, nSize, Arguments);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int SetConsoleTextAttribute(java.lang.foreign.MemorySegment hConsoleOutput, short wAttributes) {\n+        MethodHandle mh$ = requireNonNull(SetConsoleTextAttribute$MH, \"SetConsoleTextAttribute\");\n+        try {\n+            return (int) mh$.invokeExact(hConsoleOutput, wAttributes);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int SetConsoleMode(java.lang.foreign.MemorySegment hConsoleHandle, int dwMode) {\n+        MethodHandle mh$ = requireNonNull(SetConsoleMode$MH, \"SetConsoleMode\");\n+        try {\n+            return (int) mh$.invokeExact(hConsoleHandle, dwMode);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int GetConsoleMode(\n+            java.lang.foreign.MemorySegment hConsoleHandle, java.lang.foreign.MemorySegment lpMode) {\n+        MethodHandle mh$ = requireNonNull(GetConsoleMode$MH, \"GetConsoleMode\");\n+        try {\n+            return (int) mh$.invokeExact(hConsoleHandle, lpMode);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int SetConsoleTitleW(java.lang.foreign.MemorySegment lpConsoleTitle) {\n+        MethodHandle mh$ = requireNonNull(SetConsoleTitleW$MH, \"SetConsoleTitleW\");\n+        try {\n+            return (int) mh$.invokeExact(lpConsoleTitle);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int SetConsoleCursorPosition(java.lang.foreign.MemorySegment hConsoleOutput, COORD dwCursorPosition) {\n+        MethodHandle mh$ = requireNonNull(SetConsoleCursorPosition$MH, \"SetConsoleCursorPosition\");\n+        try {\n+            return (int) mh$.invokeExact(hConsoleOutput, dwCursorPosition.seg);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int FillConsoleOutputCharacterW(\n+            java.lang.foreign.MemorySegment hConsoleOutput,\n+            char cCharacter,\n+            int nLength,\n+            COORD dwWriteCoord,\n+            java.lang.foreign.MemorySegment lpNumberOfCharsWritten) {\n+        MethodHandle mh$ = requireNonNull(FillConsoleOutputCharacterW$MH, \"FillConsoleOutputCharacterW\");\n+        try {\n+            return (int) mh$.invokeExact(hConsoleOutput, cCharacter, nLength, dwWriteCoord.seg, lpNumberOfCharsWritten);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int FillConsoleOutputAttribute(\n+            java.lang.foreign.MemorySegment hConsoleOutput,\n+            short wAttribute,\n+            int nLength,\n+            COORD dwWriteCoord,\n+            java.lang.foreign.MemorySegment lpNumberOfAttrsWritten) {\n+        MethodHandle mh$ = requireNonNull(FillConsoleOutputAttribute$MH, \"FillConsoleOutputAttribute\");\n+        try {\n+            return (int) mh$.invokeExact(hConsoleOutput, wAttribute, nLength, dwWriteCoord.seg, lpNumberOfAttrsWritten);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int WriteConsoleW(\n+            java.lang.foreign.MemorySegment hConsoleOutput,\n+            java.lang.foreign.MemorySegment lpBuffer,\n+            int nNumberOfCharsToWrite,\n+            java.lang.foreign.MemorySegment lpNumberOfCharsWritten,\n+            java.lang.foreign.MemorySegment lpReserved) {\n+        MethodHandle mh$ = requireNonNull(WriteConsoleW$MH, \"WriteConsoleW\");\n+        try {\n+            return (int) mh$.invokeExact(\n+                    hConsoleOutput, lpBuffer, nNumberOfCharsToWrite, lpNumberOfCharsWritten, lpReserved);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int ReadConsoleInputW(\n+            java.lang.foreign.MemorySegment hConsoleInput,\n+            java.lang.foreign.MemorySegment lpBuffer,\n+            int nLength,\n+            java.lang.foreign.MemorySegment lpNumberOfEventsRead) {\n+        MethodHandle mh$ = requireNonNull(ReadConsoleInputW$MH, \"ReadConsoleInputW\");\n+        try {\n+            return (int) mh$.invokeExact(hConsoleInput, lpBuffer, nLength, lpNumberOfEventsRead);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int PeekConsoleInputW(\n+            java.lang.foreign.MemorySegment hConsoleInput,\n+            java.lang.foreign.MemorySegment lpBuffer,\n+            int nLength,\n+            java.lang.foreign.MemorySegment lpNumberOfEventsRead) {\n+        MethodHandle mh$ = requireNonNull(PeekConsoleInputW$MH, \"PeekConsoleInputW\");\n+        try {\n+            return (int) mh$.invokeExact(hConsoleInput, lpBuffer, nLength, lpNumberOfEventsRead);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int GetConsoleScreenBufferInfo(\n+            java.lang.foreign.MemorySegment hConsoleOutput, CONSOLE_SCREEN_BUFFER_INFO lpConsoleScreenBufferInfo) {\n+        MethodHandle mh$ = requireNonNull(GetConsoleScreenBufferInfo$MH, \"GetConsoleScreenBufferInfo\");\n+        try {\n+            return (int) mh$.invokeExact(hConsoleOutput, lpConsoleScreenBufferInfo.seg);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int ScrollConsoleScreenBuffer(\n+            java.lang.foreign.MemorySegment hConsoleOutput,\n+            SMALL_RECT lpScrollRectangle,\n+            SMALL_RECT lpClipRectangle,\n+            COORD dwDestinationOrigin,\n+            CHAR_INFO lpFill) {\n+        MethodHandle mh$ = requireNonNull(ScrollConsoleScreenBufferW$MH, \"ScrollConsoleScreenBuffer\");\n+        try {\n+            return (int)\n+                    mh$.invokeExact(hConsoleOutput, lpScrollRectangle, lpClipRectangle, dwDestinationOrigin, lpFill);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int GetLastError() {\n+        MethodHandle mh$ = requireNonNull(GetLastError$MH, \"GetLastError\");\n+        try {\n+            return (int) mh$.invokeExact();\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static int GetFileType(java.lang.foreign.MemorySegment hFile) {\n+        MethodHandle mh$ = requireNonNull(GetFileType$MH, \"GetFileType\");\n+        try {\n+            return (int) mh$.invokeExact(hFile);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static java.lang.foreign.MemorySegment _get_osfhandle(int fd) {\n+        MethodHandle mh$ = requireNonNull(_get_osfhandle$MH, \"_get_osfhandle\");\n+        try {\n+            return (java.lang.foreign.MemorySegment) mh$.invokeExact(fd);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n+\n+    public static INPUT_RECORD[] readConsoleInputHelper(java.lang.foreign.MemorySegment handle, int count, boolean peek)\n+            throws IOException {\n+        return readConsoleInputHelper(java.lang.foreign.Arena.ofAuto(), handle, count, peek);\n+    }\n+\n+    public static INPUT_RECORD[] readConsoleInputHelper(\n+            java.lang.foreign.Arena arena, java.lang.foreign.MemorySegment handle, int count, boolean peek)\n+            throws IOException {\n+        java.lang.foreign.MemorySegment inputRecordPtr = arena.allocate(INPUT_RECORD.LAYOUT, count);\n+        java.lang.foreign.MemorySegment length = arena.allocate(java.lang.foreign.ValueLayout.JAVA_INT, 1);\n+        int res = peek\n+                ? PeekConsoleInputW(handle, inputRecordPtr, count, length)\n+                : ReadConsoleInputW(handle, inputRecordPtr, count, length);\n+        if (res == 0) {\n+            throw new IOException(\"ReadConsoleInputW failed: \" + getLastErrorMessage());\n+        }\n+        int len = length.get(java.lang.foreign.ValueLayout.JAVA_INT, 0);\n+        return inputRecordPtr\n+                .elements(INPUT_RECORD.LAYOUT)\n+                .map(INPUT_RECORD::new)\n+                .limit(len)\n+                .toArray(INPUT_RECORD[]::new);\n+    }\n+\n+    public static String getLastErrorMessage() {\n+        int errorCode = GetLastError();\n+        return getErrorMessage(errorCode);\n+    }\n+\n+    public static String getErrorMessage(int errorCode) {\n+        int bufferSize = 160;\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            java.lang.foreign.MemorySegment data = arena.allocate(bufferSize);\n+            FormatMessageW(\n+                    FORMAT_MESSAGE_FROM_SYSTEM,\n+                    java.lang.foreign.MemorySegment.NULL,\n+                    errorCode,\n+                    0,\n+                    data,\n+                    bufferSize,\n+                    java.lang.foreign.MemorySegment.NULL);\n+            return new String(data.toArray(java.lang.foreign.ValueLayout.JAVA_BYTE), StandardCharsets.UTF_16LE).trim();\n+        }\n+    }\n+\n+    private static final java.lang.foreign.SymbolLookup SYMBOL_LOOKUP;\n+\n+    static {\n+        System.loadLibrary(\"msvcrt\");\n+        System.loadLibrary(\"Kernel32\");\n+        SYMBOL_LOOKUP = java.lang.foreign.SymbolLookup.loaderLookup();\n+    }\n+\n+    static MethodHandle downcallHandle(String name, java.lang.foreign.FunctionDescriptor fdesc) {\n+        return SYMBOL_LOOKUP\n+                .find(name)\n+                .map(addr -> java.lang.foreign.Linker.nativeLinker().downcallHandle(addr, fdesc))\n+                .orElse(null);\n+    }\n+\n+    static final java.lang.foreign.ValueLayout.OfBoolean C_BOOL$LAYOUT = java.lang.foreign.ValueLayout.JAVA_BOOLEAN;\n+    static final java.lang.foreign.ValueLayout.OfByte C_CHAR$LAYOUT = java.lang.foreign.ValueLayout.JAVA_BYTE;\n+    static final java.lang.foreign.ValueLayout.OfChar C_WCHAR$LAYOUT = java.lang.foreign.ValueLayout.JAVA_CHAR;\n+    static final java.lang.foreign.ValueLayout.OfShort C_SHORT$LAYOUT = java.lang.foreign.ValueLayout.JAVA_SHORT;\n+    static final java.lang.foreign.ValueLayout.OfShort C_WORD$LAYOUT = java.lang.foreign.ValueLayout.JAVA_SHORT;\n+    static final java.lang.foreign.ValueLayout.OfInt C_DWORD$LAYOUT = java.lang.foreign.ValueLayout.JAVA_INT;\n+    static final java.lang.foreign.ValueLayout.OfInt C_INT$LAYOUT = java.lang.foreign.ValueLayout.JAVA_INT;\n+    static final java.lang.foreign.ValueLayout.OfLong C_LONG$LAYOUT = java.lang.foreign.ValueLayout.JAVA_LONG;\n+    static final java.lang.foreign.ValueLayout.OfLong C_LONG_LONG$LAYOUT = java.lang.foreign.ValueLayout.JAVA_LONG;\n+    static final java.lang.foreign.ValueLayout.OfFloat C_FLOAT$LAYOUT = java.lang.foreign.ValueLayout.JAVA_FLOAT;\n+    static final java.lang.foreign.ValueLayout.OfDouble C_DOUBLE$LAYOUT = java.lang.foreign.ValueLayout.JAVA_DOUBLE;\n+    static final java.lang.foreign.AddressLayout C_POINTER$LAYOUT = java.lang.foreign.ValueLayout.ADDRESS;\n+\n+    static final MethodHandle WaitForSingleObject$MH = downcallHandle(\n+            \"WaitForSingleObject\",\n+            java.lang.foreign.FunctionDescriptor.of(C_INT$LAYOUT, C_POINTER$LAYOUT, C_INT$LAYOUT));\n+    static final MethodHandle GetStdHandle$MH =\n+            downcallHandle(\"GetStdHandle\", java.lang.foreign.FunctionDescriptor.of(C_POINTER$LAYOUT, C_INT$LAYOUT));\n+    static final MethodHandle FormatMessageW$MH = downcallHandle(\n+            \"FormatMessageW\",\n+            java.lang.foreign.FunctionDescriptor.of(\n+                    C_INT$LAYOUT,\n+                    C_INT$LAYOUT,\n+                    C_POINTER$LAYOUT,\n+                    C_INT$LAYOUT,\n+                    C_INT$LAYOUT,\n+                    C_POINTER$LAYOUT,\n+                    C_INT$LAYOUT,\n+                    C_POINTER$LAYOUT));\n+    static final MethodHandle SetConsoleTextAttribute$MH = downcallHandle(\n+            \"SetConsoleTextAttribute\",\n+            java.lang.foreign.FunctionDescriptor.of(C_INT$LAYOUT, C_POINTER$LAYOUT, C_SHORT$LAYOUT));\n+    static final MethodHandle SetConsoleMode$MH = downcallHandle(\n+            \"SetConsoleMode\", java.lang.foreign.FunctionDescriptor.of(C_INT$LAYOUT, C_POINTER$LAYOUT, C_INT$LAYOUT));\n+    static final MethodHandle GetConsoleMode$MH = downcallHandle(\n+            \"GetConsoleMode\",\n+            java.lang.foreign.FunctionDescriptor.of(C_INT$LAYOUT, C_POINTER$LAYOUT, C_POINTER$LAYOUT));\n+\n+    static final MethodHandle SetConsoleTitleW$MH =\n+            downcallHandle(\"SetConsoleTitleW\", java.lang.foreign.FunctionDescriptor.of(C_INT$LAYOUT, C_POINTER$LAYOUT));\n+    static final MethodHandle SetConsoleCursorPosition$MH = downcallHandle(\n+            \"SetConsoleCursorPosition\",\n+            java.lang.foreign.FunctionDescriptor.of(C_INT$LAYOUT, C_POINTER$LAYOUT, COORD.LAYOUT));\n+    static final MethodHandle FillConsoleOutputCharacterW$MH = downcallHandle(\n+            \"FillConsoleOutputCharacterW\",\n+            java.lang.foreign.FunctionDescriptor.of(\n+                    C_INT$LAYOUT, C_POINTER$LAYOUT, C_WCHAR$LAYOUT, C_INT$LAYOUT, COORD.LAYOUT, C_POINTER$LAYOUT));\n+    static final MethodHandle FillConsoleOutputAttribute$MH = downcallHandle(\n+            \"FillConsoleOutputAttribute\",\n+            java.lang.foreign.FunctionDescriptor.of(\n+                    C_INT$LAYOUT, C_POINTER$LAYOUT, C_SHORT$LAYOUT, C_INT$LAYOUT, COORD.LAYOUT, C_POINTER$LAYOUT));\n+    static final MethodHandle WriteConsoleW$MH = downcallHandle(\n+            \"WriteConsoleW\",\n+            java.lang.foreign.FunctionDescriptor.of(\n+                    C_INT$LAYOUT,\n+                    C_POINTER$LAYOUT,\n+                    C_POINTER$LAYOUT,\n+                    C_INT$LAYOUT,\n+                    C_POINTER$LAYOUT,\n+                    C_POINTER$LAYOUT));\n+\n+    static final MethodHandle ReadConsoleInputW$MH = downcallHandle(\n+            \"ReadConsoleInputW\",\n+            java.lang.foreign.FunctionDescriptor.of(\n+                    C_INT$LAYOUT, C_POINTER$LAYOUT, C_POINTER$LAYOUT, C_INT$LAYOUT, C_POINTER$LAYOUT));\n+    static final MethodHandle PeekConsoleInputW$MH = downcallHandle(\n+            \"PeekConsoleInputW\",\n+            java.lang.foreign.FunctionDescriptor.of(\n+                    C_INT$LAYOUT, C_POINTER$LAYOUT, C_POINTER$LAYOUT, C_INT$LAYOUT, C_POINTER$LAYOUT));\n+\n+    static final MethodHandle GetConsoleScreenBufferInfo$MH = downcallHandle(\n+            \"GetConsoleScreenBufferInfo\",\n+            java.lang.foreign.FunctionDescriptor.of(C_INT$LAYOUT, C_POINTER$LAYOUT, C_POINTER$LAYOUT));\n+\n+    static final MethodHandle ScrollConsoleScreenBufferW$MH = downcallHandle(\n+            \"ScrollConsoleScreenBufferW\",\n+            java.lang.foreign.FunctionDescriptor.of(\n+                    C_INT$LAYOUT,\n+                    C_POINTER$LAYOUT,\n+                    C_POINTER$LAYOUT,\n+                    C_POINTER$LAYOUT,\n+                    COORD.LAYOUT,\n+                    C_POINTER$LAYOUT));\n+    static final MethodHandle GetLastError$MH =\n+            downcallHandle(\"GetLastError\", java.lang.foreign.FunctionDescriptor.of(C_INT$LAYOUT));\n+    static final MethodHandle GetFileType$MH =\n+            downcallHandle(\"GetFileType\", java.lang.foreign.FunctionDescriptor.of(C_INT$LAYOUT, C_POINTER$LAYOUT));\n+    static final MethodHandle _get_osfhandle$MH =\n+            downcallHandle(\"_get_osfhandle\", java.lang.foreign.FunctionDescriptor.of(C_POINTER$LAYOUT, C_INT$LAYOUT));\n+\n+    public static final class INPUT_RECORD {\n+        static final java.lang.foreign.MemoryLayout LAYOUT = java.lang.foreign.MemoryLayout.structLayout(\n+                java.lang.foreign.ValueLayout.JAVA_SHORT.withName(\"EventType\"),\n+                java.lang.foreign.ValueLayout.JAVA_SHORT, \/\/ padding\n+                java.lang.foreign.MemoryLayout.unionLayout(\n+                                KEY_EVENT_RECORD.LAYOUT.withName(\"KeyEvent\"),\n+                                MOUSE_EVENT_RECORD.LAYOUT.withName(\"MouseEvent\"),\n+                                WINDOW_BUFFER_SIZE_RECORD.LAYOUT.withName(\"WindowBufferSizeEvent\"),\n+                                MENU_EVENT_RECORD.LAYOUT.withName(\"MenuEvent\"),\n+                                FOCUS_EVENT_RECORD.LAYOUT.withName(\"FocusEvent\"))\n+                        .withName(\"Event\"));\n+        static final VarHandle EventType$VH = varHandle(LAYOUT, \"EventType\");\n+        static final long Event$OFFSET = byteOffset(LAYOUT, \"Event\");\n+\n+        private final java.lang.foreign.MemorySegment seg;\n+\n+        public INPUT_RECORD() {\n+            this(java.lang.foreign.Arena.ofAuto());\n+        }\n+\n+        public INPUT_RECORD(java.lang.foreign.Arena arena) {\n+            this(arena.allocate(LAYOUT));\n+        }\n+\n+        public INPUT_RECORD(java.lang.foreign.MemorySegment seg) {\n+            this.seg = seg;\n+        }\n+\n+        public short eventType() {\n+            return (short) EventType$VH.get(seg);\n+        }\n+\n+        public KEY_EVENT_RECORD keyEvent() {\n+            return new KEY_EVENT_RECORD(seg, Event$OFFSET);\n+        }\n+\n+        public MOUSE_EVENT_RECORD mouseEvent() {\n+            return new MOUSE_EVENT_RECORD(seg, Event$OFFSET);\n+        }\n+\n+        public FOCUS_EVENT_RECORD focusEvent() {\n+            return new FOCUS_EVENT_RECORD(seg, Event$OFFSET);\n+        }\n+    }\n+\n+    public static final class MENU_EVENT_RECORD {\n+\n+        static final java.lang.foreign.GroupLayout LAYOUT =\n+                java.lang.foreign.MemoryLayout.structLayout(C_DWORD$LAYOUT.withName(\"dwCommandId\"));\n+        static final VarHandle COMMAND_ID = varHandle(LAYOUT, \"dwCommandId\");\n+\n+        private final java.lang.foreign.MemorySegment seg;\n+\n+        public MENU_EVENT_RECORD() {\n+            this(java.lang.foreign.Arena.ofAuto());\n+        }\n+\n+        public MENU_EVENT_RECORD(java.lang.foreign.Arena arena) {\n+            this(arena.allocate(LAYOUT));\n+        }\n+\n+        public MENU_EVENT_RECORD(java.lang.foreign.MemorySegment seg) {\n+            this.seg = seg;\n+        }\n+\n+        public int commandId() {\n+            return (int) MENU_EVENT_RECORD.COMMAND_ID.get(seg);\n+        }\n+\n+        public void commandId(int commandId) {\n+            MENU_EVENT_RECORD.COMMAND_ID.set(seg, commandId);\n+        }\n+    }\n+\n+    public static final class FOCUS_EVENT_RECORD {\n+\n+        static final java.lang.foreign.GroupLayout LAYOUT =\n+                java.lang.foreign.MemoryLayout.structLayout(C_INT$LAYOUT.withName(\"bSetFocus\"));\n+        static final VarHandle SET_FOCUS = varHandle(LAYOUT, \"bSetFocus\");\n+\n+        private final java.lang.foreign.MemorySegment seg;\n+\n+        public FOCUS_EVENT_RECORD() {\n+            this(java.lang.foreign.Arena.ofAuto());\n+        }\n+\n+        public FOCUS_EVENT_RECORD(java.lang.foreign.Arena arena) {\n+            this(arena.allocate(LAYOUT));\n+        }\n+\n+        public FOCUS_EVENT_RECORD(java.lang.foreign.MemorySegment seg) {\n+            this.seg = Objects.requireNonNull(seg);\n+        }\n+\n+        public FOCUS_EVENT_RECORD(java.lang.foreign.MemorySegment seg, long offset) {\n+            this.seg = Objects.requireNonNull(seg).asSlice(offset, LAYOUT.byteSize());\n+        }\n+\n+        public boolean setFocus() {\n+            return ((int) FOCUS_EVENT_RECORD.SET_FOCUS.get(seg) != 0);\n+        }\n+\n+        public void setFocus(boolean setFocus) {\n+            FOCUS_EVENT_RECORD.SET_FOCUS.set(seg, setFocus ? 1 : 0);\n+        }\n+    }\n+\n+    public static final class WINDOW_BUFFER_SIZE_RECORD {\n+\n+        static final java.lang.foreign.GroupLayout LAYOUT =\n+                java.lang.foreign.MemoryLayout.structLayout(COORD.LAYOUT.withName(\"size\"));\n+        static final long SIZE_OFFSET = byteOffset(LAYOUT, \"size\");\n+\n+        private final java.lang.foreign.MemorySegment seg;\n+\n+        public WINDOW_BUFFER_SIZE_RECORD() {\n+            this(java.lang.foreign.Arena.ofAuto());\n+        }\n+\n+        public WINDOW_BUFFER_SIZE_RECORD(java.lang.foreign.Arena arena) {\n+            this(arena.allocate(LAYOUT));\n+        }\n+\n+        public WINDOW_BUFFER_SIZE_RECORD(java.lang.foreign.MemorySegment seg) {\n+            this.seg = seg;\n+        }\n+\n+        public COORD size() {\n+            return new COORD(seg, SIZE_OFFSET);\n+        }\n+\n+        public String toString() {\n+            return \"WINDOW_BUFFER_SIZE_RECORD{size=\" + this.size() + '}';\n+        }\n+    }\n+\n+    public static final class MOUSE_EVENT_RECORD {\n+\n+        static final java.lang.foreign.MemoryLayout LAYOUT = java.lang.foreign.MemoryLayout.structLayout(\n+                COORD.LAYOUT.withName(\"dwMousePosition\"),\n+                C_DWORD$LAYOUT.withName(\"dwButtonState\"),\n+                C_DWORD$LAYOUT.withName(\"dwControlKeyState\"),\n+                C_DWORD$LAYOUT.withName(\"dwEventFlags\"));\n+        static final long MOUSE_POSITION_OFFSET = byteOffset(LAYOUT, \"dwMousePosition\");\n+        static final VarHandle BUTTON_STATE = varHandle(LAYOUT, \"dwButtonState\");\n+        static final VarHandle CONTROL_KEY_STATE = varHandle(LAYOUT, \"dwControlKeyState\");\n+        static final VarHandle EVENT_FLAGS = varHandle(LAYOUT, \"dwEventFlags\");\n+\n+        private final java.lang.foreign.MemorySegment seg;\n+\n+        public MOUSE_EVENT_RECORD() {\n+            this(java.lang.foreign.Arena.ofAuto());\n+        }\n+\n+        public MOUSE_EVENT_RECORD(java.lang.foreign.Arena arena) {\n+            this(arena.allocate(LAYOUT));\n+        }\n+\n+        public MOUSE_EVENT_RECORD(java.lang.foreign.MemorySegment seg) {\n+            this.seg = Objects.requireNonNull(seg);\n+        }\n+\n+        public MOUSE_EVENT_RECORD(java.lang.foreign.MemorySegment seg, long offset) {\n+            this.seg = Objects.requireNonNull(seg).asSlice(offset, LAYOUT.byteSize());\n+        }\n+\n+        public COORD mousePosition() {\n+            return new COORD(seg, MOUSE_POSITION_OFFSET);\n+        }\n+\n+        public int buttonState() {\n+            return (int) BUTTON_STATE.get(seg);\n+        }\n+\n+        public int controlKeyState() {\n+            return (int) CONTROL_KEY_STATE.get(seg);\n+        }\n+\n+        public int eventFlags() {\n+            return (int) EVENT_FLAGS.get(seg);\n+        }\n+\n+        public String toString() {\n+            return \"MOUSE_EVENT_RECORD{mousePosition=\" + mousePosition() + \", buttonState=\" + buttonState()\n+                    + \", controlKeyState=\" + controlKeyState() + \", eventFlags=\" + eventFlags() + '}';\n+        }\n+    }\n+\n+    public static final class KEY_EVENT_RECORD {\n+\n+        static final java.lang.foreign.MemoryLayout LAYOUT = java.lang.foreign.MemoryLayout.structLayout(\n+                java.lang.foreign.ValueLayout.JAVA_INT.withName(\"bKeyDown\"),\n+                java.lang.foreign.ValueLayout.JAVA_SHORT.withName(\"wRepeatCount\"),\n+                java.lang.foreign.ValueLayout.JAVA_SHORT.withName(\"wVirtualKeyCode\"),\n+                java.lang.foreign.ValueLayout.JAVA_SHORT.withName(\"wVirtualScanCode\"),\n+                java.lang.foreign.MemoryLayout.unionLayout(\n+                                java.lang.foreign.ValueLayout.JAVA_CHAR.withName(\"UnicodeChar\"),\n+                                java.lang.foreign.ValueLayout.JAVA_BYTE.withName(\"AsciiChar\"))\n+                        .withName(\"uChar\"),\n+                java.lang.foreign.ValueLayout.JAVA_INT.withName(\"dwControlKeyState\"));\n+        static final VarHandle bKeyDown$VH = varHandle(LAYOUT, \"bKeyDown\");\n+        static final VarHandle wRepeatCount$VH = varHandle(LAYOUT, \"wRepeatCount\");\n+        static final VarHandle wVirtualKeyCode$VH = varHandle(LAYOUT, \"wVirtualKeyCode\");\n+        static final VarHandle wVirtualScanCode$VH = varHandle(LAYOUT, \"wVirtualScanCode\");\n+        static final VarHandle UnicodeChar$VH = varHandle(LAYOUT, \"uChar\", \"UnicodeChar\");\n+        static final VarHandle AsciiChar$VH = varHandle(LAYOUT, \"uChar\", \"AsciiChar\");\n+        static final VarHandle dwControlKeyState$VH = varHandle(LAYOUT, \"dwControlKeyState\");\n+\n+        final java.lang.foreign.MemorySegment seg;\n+\n+        public KEY_EVENT_RECORD() {\n+            this(java.lang.foreign.Arena.ofAuto());\n+        }\n+\n+        public KEY_EVENT_RECORD(java.lang.foreign.Arena arena) {\n+            this(arena.allocate(LAYOUT));\n+        }\n+\n+        public KEY_EVENT_RECORD(java.lang.foreign.MemorySegment seg) {\n+            this.seg = seg;\n+        }\n+\n+        public KEY_EVENT_RECORD(java.lang.foreign.MemorySegment seg, long offset) {\n+            this.seg = Objects.requireNonNull(seg).asSlice(offset, LAYOUT.byteSize());\n+        }\n+\n+        public boolean keyDown() {\n+            return ((int) bKeyDown$VH.get(seg)) != 0;\n+        }\n+\n+        public int repeatCount() {\n+            return (int) wRepeatCount$VH.get(seg);\n+        }\n+\n+        public short keyCode() {\n+            return (short) wVirtualKeyCode$VH.get(seg);\n+        }\n+\n+        public short scanCode() {\n+            return (short) wVirtualScanCode$VH.get(seg);\n+        }\n+\n+        public char uchar() {\n+            return (char) UnicodeChar$VH.get(seg);\n+        }\n+\n+        public int controlKeyState() {\n+            return (int) dwControlKeyState$VH.get(seg);\n+        }\n+\n+        public String toString() {\n+            return \"KEY_EVENT_RECORD{keyDown=\" + this.keyDown() + \", repeatCount=\" + this.repeatCount() + \", keyCode=\"\n+                    + this.keyCode() + \", scanCode=\" + this.scanCode() + \", uchar=\" + this.uchar()\n+                    + \", controlKeyState=\"\n+                    + this.controlKeyState() + '}';\n+        }\n+    }\n+\n+    public static final class CHAR_INFO {\n+\n+        static final java.lang.foreign.GroupLayout LAYOUT = java.lang.foreign.MemoryLayout.structLayout(\n+                java.lang.foreign.MemoryLayout.unionLayout(\n+                                C_WCHAR$LAYOUT.withName(\"UnicodeChar\"), C_CHAR$LAYOUT.withName(\"AsciiChar\"))\n+                        .withName(\"Char\"),\n+                C_WORD$LAYOUT.withName(\"Attributes\"));\n+        static final VarHandle UnicodeChar$VH = varHandle(LAYOUT, \"Char\", \"UnicodeChar\");\n+        static final VarHandle Attributes$VH = varHandle(LAYOUT, \"Attributes\");\n+\n+        final java.lang.foreign.MemorySegment seg;\n+\n+        public CHAR_INFO() {\n+            this(java.lang.foreign.Arena.ofAuto());\n+        }\n+\n+        public CHAR_INFO(java.lang.foreign.Arena arena) {\n+            this(arena.allocate(LAYOUT));\n+        }\n+\n+        public CHAR_INFO(java.lang.foreign.Arena arena, char c, short a) {\n+            this(arena);\n+            UnicodeChar$VH.set(seg, c);\n+            Attributes$VH.set(seg, a);\n+        }\n+\n+        public CHAR_INFO(java.lang.foreign.MemorySegment seg) {\n+            this.seg = seg;\n+        }\n+\n+        public char unicodeChar() {\n+            return (char) UnicodeChar$VH.get(seg);\n+        }\n+    }\n+\n+    public static final class CONSOLE_SCREEN_BUFFER_INFO {\n+        static final java.lang.foreign.GroupLayout LAYOUT = java.lang.foreign.MemoryLayout.structLayout(\n+                COORD.LAYOUT.withName(\"dwSize\"),\n+                COORD.LAYOUT.withName(\"dwCursorPosition\"),\n+                C_WORD$LAYOUT.withName(\"wAttributes\"),\n+                SMALL_RECT.LAYOUT.withName(\"srWindow\"),\n+                COORD.LAYOUT.withName(\"dwMaximumWindowSize\"));\n+        static final long dwSize$OFFSET = byteOffset(LAYOUT, \"dwSize\");\n+        static final long dwCursorPosition$OFFSET = byteOffset(LAYOUT, \"dwCursorPosition\");\n+        static final VarHandle wAttributes$VH = varHandle(LAYOUT, \"wAttributes\");\n+        static final long srWindow$OFFSET = byteOffset(LAYOUT, \"srWindow\");\n+\n+        private final java.lang.foreign.MemorySegment seg;\n+\n+        public CONSOLE_SCREEN_BUFFER_INFO() {\n+            this(java.lang.foreign.Arena.ofAuto());\n+        }\n+\n+        public CONSOLE_SCREEN_BUFFER_INFO(java.lang.foreign.Arena arena) {\n+            this(arena.allocate(LAYOUT));\n+        }\n+\n+        public CONSOLE_SCREEN_BUFFER_INFO(java.lang.foreign.MemorySegment seg) {\n+            this.seg = seg;\n+        }\n+\n+        public COORD size() {\n+            return new COORD(seg, dwSize$OFFSET);\n+        }\n+\n+        public COORD cursorPosition() {\n+            return new COORD(seg, dwCursorPosition$OFFSET);\n+        }\n+\n+        public short attributes() {\n+            return (short) wAttributes$VH.get(seg);\n+        }\n+\n+        public SMALL_RECT window() {\n+            return new SMALL_RECT(seg, srWindow$OFFSET);\n+        }\n+\n+        public int windowWidth() {\n+            return this.window().width() + 1;\n+        }\n+\n+        public int windowHeight() {\n+            return this.window().height() + 1;\n+        }\n+\n+        public void attributes(short attr) {\n+            wAttributes$VH.set(seg, attr);\n+        }\n+    }\n+\n+    public static final class COORD {\n+\n+        static final java.lang.foreign.GroupLayout LAYOUT =\n+                java.lang.foreign.MemoryLayout.structLayout(C_SHORT$LAYOUT.withName(\"x\"), C_SHORT$LAYOUT.withName(\"y\"));\n+        static final VarHandle x$VH = varHandle(LAYOUT, \"x\");\n+        static final VarHandle y$VH = varHandle(LAYOUT, \"y\");\n+\n+        private final java.lang.foreign.MemorySegment seg;\n+\n+        public COORD() {\n+            this(java.lang.foreign.Arena.ofAuto());\n+        }\n+\n+        public COORD(java.lang.foreign.Arena arena) {\n+            this(arena.allocate(LAYOUT));\n+        }\n+\n+        public COORD(java.lang.foreign.Arena arena, short x, short y) {\n+            this(arena.allocate(LAYOUT));\n+            x(x);\n+            y(y);\n+        }\n+\n+        public COORD(java.lang.foreign.MemorySegment seg) {\n+            this.seg = seg;\n+        }\n+\n+        public COORD(java.lang.foreign.MemorySegment seg, long offset) {\n+            this.seg = Objects.requireNonNull(seg).asSlice(offset, LAYOUT.byteSize());\n+        }\n+\n+        public short x() {\n+            return (short) COORD.x$VH.get(seg);\n+        }\n+\n+        public void x(short x) {\n+            COORD.x$VH.set(seg, x);\n+        }\n+\n+        public short y() {\n+            return (short) COORD.y$VH.get(seg);\n+        }\n+\n+        public void y(short y) {\n+            COORD.y$VH.set(seg, y);\n+        }\n+\n+        public COORD copy(java.lang.foreign.Arena arena) {\n+            return new COORD(arena.allocate(LAYOUT).copyFrom(seg));\n+        }\n+    }\n+\n+    public static final class SMALL_RECT {\n+\n+        static final java.lang.foreign.GroupLayout LAYOUT = java.lang.foreign.MemoryLayout.structLayout(\n+                C_SHORT$LAYOUT.withName(\"Left\"),\n+                C_SHORT$LAYOUT.withName(\"Top\"),\n+                C_SHORT$LAYOUT.withName(\"Right\"),\n+                C_SHORT$LAYOUT.withName(\"Bottom\"));\n+        static final VarHandle Left$VH = varHandle(LAYOUT, \"Left\");\n+        static final VarHandle Top$VH = varHandle(LAYOUT, \"Top\");\n+        static final VarHandle Right$VH = varHandle(LAYOUT, \"Right\");\n+        static final VarHandle Bottom$VH = varHandle(LAYOUT, \"Bottom\");\n+\n+        private final java.lang.foreign.MemorySegment seg;\n+\n+        public SMALL_RECT() {\n+            this(java.lang.foreign.Arena.ofAuto());\n+        }\n+\n+        public SMALL_RECT(java.lang.foreign.Arena arena) {\n+            this(arena.allocate(LAYOUT));\n+        }\n+\n+        public SMALL_RECT(java.lang.foreign.Arena arena, SMALL_RECT rect) {\n+            this(arena);\n+            left(rect.left());\n+            right(rect.right());\n+            top(rect.top());\n+            bottom(rect.bottom());\n+        }\n+\n+        public SMALL_RECT(java.lang.foreign.MemorySegment seg, long offset) {\n+            this(seg.asSlice(offset, LAYOUT.byteSize()));\n+        }\n+\n+        public SMALL_RECT(java.lang.foreign.MemorySegment seg) {\n+            this.seg = seg;\n+        }\n+\n+        public short left() {\n+            return (short) Left$VH.get(seg);\n+        }\n+\n+        public short top() {\n+            return (short) Top$VH.get(seg);\n+        }\n+\n+        public short right() {\n+            return (short) Right$VH.get(seg);\n+        }\n+\n+        public short bottom() {\n+            return (short) Bottom$VH.get(seg);\n+        }\n+\n+        public short width() {\n+            return (short) (this.right() - this.left());\n+        }\n+\n+        public short height() {\n+            return (short) (this.bottom() - this.top());\n+        }\n+\n+        public void left(short l) {\n+            Left$VH.set(seg, l);\n+        }\n+\n+        public void top(short t) {\n+            Top$VH.set(seg, t);\n+        }\n+\n+        public void right(short r) {\n+            Right$VH.set(seg, r);\n+        }\n+\n+        public void bottom(short b) {\n+            Bottom$VH.set(seg, b);\n+        }\n+\n+        public SMALL_RECT copy(java.lang.foreign.Arena arena) {\n+            return new SMALL_RECT(arena.allocate(LAYOUT).copyFrom(seg));\n+        }\n+    }\n+\n+    static <T> T requireNonNull(T obj, String symbolName) {\n+        if (obj == null) {\n+            throw new UnsatisfiedLinkError(\"unresolved symbol: \" + symbolName);\n+        }\n+        return obj;\n+    }\n+\n+    static VarHandle varHandle(java.lang.foreign.MemoryLayout layout, String name) {\n+        return FfmTerminalProvider.lookupVarHandle(\n+                layout, java.lang.foreign.MemoryLayout.PathElement.groupElement(name));\n+    }\n+\n+    static VarHandle varHandle(java.lang.foreign.MemoryLayout layout, String e1, String name) {\n+        return FfmTerminalProvider.lookupVarHandle(\n+                layout,\n+                java.lang.foreign.MemoryLayout.PathElement.groupElement(e1),\n+                java.lang.foreign.MemoryLayout.PathElement.groupElement(name));\n+    }\n+\n+    static long byteOffset(java.lang.foreign.MemoryLayout layout, String name) {\n+        return layout.byteOffset(java.lang.foreign.MemoryLayout.PathElement.groupElement(name));\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ffm\/Kernel32.java","additions":927,"deletions":0,"binary":false,"changes":927,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2022-2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.impl.ffm;\n+\n+import java.io.IOException;\n+import java.lang.foreign.MemorySegment;\n+import java.lang.foreign.ValueLayout;\n+\n+import jdk.internal.org.jline.terminal.impl.AbstractWindowsConsoleWriter;\n+\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.GetStdHandle;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.STD_OUTPUT_HANDLE;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.WriteConsoleW;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.getLastErrorMessage;\n+\n+class NativeWinConsoleWriter extends AbstractWindowsConsoleWriter {\n+\n+    private final java.lang.foreign.MemorySegment console = GetStdHandle(STD_OUTPUT_HANDLE);\n+\n+    @Override\n+    protected void writeConsole(char[] text, int len) throws IOException {\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            java.lang.foreign.MemorySegment txt = arena.allocateFrom(ValueLayout.JAVA_CHAR, text);\n+            if (WriteConsoleW(console, txt, len, MemorySegment.NULL, MemorySegment.NULL) == 0) {\n+                throw new IOException(\"Failed to write to console: \" + getLastErrorMessage());\n+            }\n+        }\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ffm\/NativeWinConsoleWriter.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,302 @@\n+\/*\n+ * Copyright (c) 2022-2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.impl.ffm;\n+\n+import java.io.BufferedWriter;\n+import java.io.IOError;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.Writer;\n+import java.nio.charset.Charset;\n+import java.util.function.Function;\n+import java.util.function.IntConsumer;\n+\n+import jdk.internal.org.jline.terminal.Cursor;\n+import jdk.internal.org.jline.terminal.Size;\n+import jdk.internal.org.jline.terminal.impl.AbstractWindowsTerminal;\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n+import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n+import jdk.internal.org.jline.utils.OSUtils;\n+\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.*;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.GetConsoleMode;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.GetConsoleScreenBufferInfo;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.GetStdHandle;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.INPUT_RECORD;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.INVALID_HANDLE_VALUE;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.KEY_EVENT_RECORD;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.MOUSE_EVENT_RECORD;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.STD_ERROR_HANDLE;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.STD_INPUT_HANDLE;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.STD_OUTPUT_HANDLE;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.SetConsoleMode;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.WaitForSingleObject;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.getLastErrorMessage;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.readConsoleInputHelper;\n+\n+public class NativeWinSysTerminal extends AbstractWindowsTerminal<java.lang.foreign.MemorySegment> {\n+\n+    public static NativeWinSysTerminal createTerminal(\n+            TerminalProvider provider,\n+            SystemStream systemStream,\n+            String name,\n+            String type,\n+            boolean ansiPassThrough,\n+            Charset encoding,\n+            boolean nativeSignals,\n+            SignalHandler signalHandler,\n+            boolean paused,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            \/\/ Get input console mode\n+            java.lang.foreign.MemorySegment consoleIn = GetStdHandle(STD_INPUT_HANDLE);\n+            java.lang.foreign.MemorySegment inMode = allocateInt(arena);\n+            if (GetConsoleMode(consoleIn, inMode) == 0) {\n+                throw new IOException(\"Failed to get console mode: \" + getLastErrorMessage());\n+            }\n+            \/\/ Get output console and mode\n+            java.lang.foreign.MemorySegment console;\n+            switch (systemStream) {\n+                case Output:\n+                    console = GetStdHandle(STD_OUTPUT_HANDLE);\n+                    break;\n+                case Error:\n+                    console = GetStdHandle(STD_ERROR_HANDLE);\n+                    break;\n+                default:\n+                    throw new IllegalArgumentException(\"Unsupported stream for console: \" + systemStream);\n+            }\n+            java.lang.foreign.MemorySegment outMode = allocateInt(arena);\n+            if (GetConsoleMode(console, outMode) == 0) {\n+                throw new IOException(\"Failed to get console mode: \" + getLastErrorMessage());\n+            }\n+            \/\/ Create writer\n+            Writer writer;\n+            if (ansiPassThrough) {\n+                type = type != null ? type : OSUtils.IS_CONEMU ? TYPE_WINDOWS_CONEMU : TYPE_WINDOWS;\n+                writer = new NativeWinConsoleWriter();\n+            } else {\n+                int m = inMode.get(java.lang.foreign.ValueLayout.JAVA_INT, 0);\n+                if (enableVtp(console, m)) {\n+                    type = type != null ? type : TYPE_WINDOWS_VTP;\n+                    writer = new NativeWinConsoleWriter();\n+                } else if (OSUtils.IS_CONEMU) {\n+                    type = type != null ? type : TYPE_WINDOWS_CONEMU;\n+                    writer = new NativeWinConsoleWriter();\n+                } else {\n+                    type = type != null ? type : TYPE_WINDOWS;\n+                    writer = new WindowsAnsiWriter(new BufferedWriter(new NativeWinConsoleWriter()));\n+                }\n+            }\n+            \/\/ Create terminal\n+            NativeWinSysTerminal terminal = new NativeWinSysTerminal(\n+                    provider,\n+                    systemStream,\n+                    writer,\n+                    name,\n+                    type,\n+                    encoding,\n+                    nativeSignals,\n+                    signalHandler,\n+                    consoleIn,\n+                    inMode.get(java.lang.foreign.ValueLayout.JAVA_INT, 0),\n+                    console,\n+                    outMode.get(java.lang.foreign.ValueLayout.JAVA_INT, 0),\n+                    inputStreamWrapper);\n+            \/\/ Start input pump thread\n+            if (!paused) {\n+                terminal.resume();\n+            }\n+            return terminal;\n+        }\n+    }\n+\n+    private static boolean enableVtp(java.lang.foreign.MemorySegment console, int m) {\n+        return SetConsoleMode(console, m | AbstractWindowsTerminal.ENABLE_VIRTUAL_TERMINAL_PROCESSING) != 0;\n+    }\n+\n+    public static boolean isWindowsSystemStream(SystemStream stream) {\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            java.lang.foreign.MemorySegment console;\n+            java.lang.foreign.MemorySegment mode = allocateInt(arena);\n+            switch (stream) {\n+                case Input:\n+                    console = GetStdHandle(STD_INPUT_HANDLE);\n+                    break;\n+                case Output:\n+                    console = GetStdHandle(STD_OUTPUT_HANDLE);\n+                    break;\n+                case Error:\n+                    console = GetStdHandle(STD_ERROR_HANDLE);\n+                    break;\n+                default:\n+                    return false;\n+            }\n+            return GetConsoleMode(console, mode) != 0;\n+        }\n+    }\n+\n+    private static java.lang.foreign.MemorySegment allocateInt(java.lang.foreign.Arena arena) {\n+        return arena.allocate(java.lang.foreign.ValueLayout.JAVA_INT);\n+    }\n+\n+    NativeWinSysTerminal(\n+            TerminalProvider provider,\n+            SystemStream systemStream,\n+            Writer writer,\n+            String name,\n+            String type,\n+            Charset encoding,\n+            boolean nativeSignals,\n+            SignalHandler signalHandler,\n+            java.lang.foreign.MemorySegment inConsole,\n+            int inConsoleMode,\n+            java.lang.foreign.MemorySegment outConsole,\n+            int outConsoleMode,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException {\n+        super(\n+                provider,\n+                systemStream,\n+                writer,\n+                name,\n+                type,\n+                encoding,\n+                nativeSignals,\n+                signalHandler,\n+                inConsole,\n+                inConsoleMode,\n+                outConsole,\n+                outConsoleMode,\n+                inputStreamWrapper);\n+    }\n+\n+    @Override\n+    protected int getConsoleMode(java.lang.foreign.MemorySegment console) {\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            java.lang.foreign.MemorySegment mode = arena.allocate(java.lang.foreign.ValueLayout.JAVA_INT);\n+            if (GetConsoleMode(console, mode) == 0) {\n+                return -1;\n+            }\n+            return mode.get(java.lang.foreign.ValueLayout.JAVA_INT, 0);\n+        }\n+    }\n+\n+    @Override\n+    protected void setConsoleMode(java.lang.foreign.MemorySegment console, int mode) {\n+        SetConsoleMode(console, mode);\n+    }\n+\n+    public Size getSize() {\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            CONSOLE_SCREEN_BUFFER_INFO info = new CONSOLE_SCREEN_BUFFER_INFO(arena);\n+            GetConsoleScreenBufferInfo(outConsole, info);\n+            return new Size(info.windowWidth(), info.windowHeight());\n+        }\n+    }\n+\n+    @Override\n+    public Size getBufferSize() {\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            CONSOLE_SCREEN_BUFFER_INFO info = new CONSOLE_SCREEN_BUFFER_INFO(arena);\n+            GetConsoleScreenBufferInfo(outConsole, info);\n+            return new Size(info.size().x(), info.size().y());\n+        }\n+    }\n+\n+    protected boolean processConsoleInput() throws IOException {\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            INPUT_RECORD[] events;\n+            if (inConsole != null\n+                    && inConsole.address() != INVALID_HANDLE_VALUE\n+                    && WaitForSingleObject(inConsole, 100) == 0) {\n+                events = readConsoleInputHelper(arena, inConsole, 1, false);\n+            } else {\n+                return false;\n+            }\n+\n+            boolean flush = false;\n+            for (INPUT_RECORD event : events) {\n+                int eventType = event.eventType();\n+                if (eventType == KEY_EVENT) {\n+                    KEY_EVENT_RECORD keyEvent = event.keyEvent();\n+                    processKeyEvent(\n+                            keyEvent.keyDown(), keyEvent.keyCode(), keyEvent.uchar(), keyEvent.controlKeyState());\n+                    flush = true;\n+                } else if (eventType == WINDOW_BUFFER_SIZE_EVENT) {\n+                    raise(Signal.WINCH);\n+                } else if (eventType == MOUSE_EVENT) {\n+                    processMouseEvent(event.mouseEvent());\n+                    flush = true;\n+                } else if (eventType == FOCUS_EVENT) {\n+                    processFocusEvent(event.focusEvent().setFocus());\n+                }\n+            }\n+\n+            return flush;\n+        }\n+    }\n+\n+    private final char[] focus = new char[] {'\\033', '[', ' '};\n+\n+    private void processFocusEvent(boolean hasFocus) throws IOException {\n+        if (focusTracking) {\n+            focus[2] = hasFocus ? 'I' : 'O';\n+            slaveInputPipe.write(focus);\n+        }\n+    }\n+\n+    private final char[] mouse = new char[] {'\\033', '[', 'M', ' ', ' ', ' '};\n+\n+    private void processMouseEvent(MOUSE_EVENT_RECORD mouseEvent) throws IOException {\n+        int dwEventFlags = mouseEvent.eventFlags();\n+        int dwButtonState = mouseEvent.buttonState();\n+        if (tracking == MouseTracking.Off\n+                || tracking == MouseTracking.Normal && dwEventFlags == MOUSE_MOVED\n+                || tracking == MouseTracking.Button && dwEventFlags == MOUSE_MOVED && dwButtonState == 0) {\n+            return;\n+        }\n+        int cb = 0;\n+        dwEventFlags &= ~DOUBLE_CLICK; \/\/ Treat double-clicks as normal\n+        if (dwEventFlags == MOUSE_WHEELED) {\n+            cb |= 64;\n+            if ((dwButtonState >> 16) < 0) {\n+                cb |= 1;\n+            }\n+        } else if (dwEventFlags == MOUSE_HWHEELED) {\n+            return;\n+        } else if ((dwButtonState & FROM_LEFT_1ST_BUTTON_PRESSED) != 0) {\n+            cb |= 0x00;\n+        } else if ((dwButtonState & RIGHTMOST_BUTTON_PRESSED) != 0) {\n+            cb |= 0x01;\n+        } else if ((dwButtonState & FROM_LEFT_2ND_BUTTON_PRESSED) != 0) {\n+            cb |= 0x02;\n+        } else {\n+            cb |= 0x03;\n+        }\n+        int cx = mouseEvent.mousePosition().x();\n+        int cy = mouseEvent.mousePosition().y();\n+        mouse[3] = (char) (' ' + cb);\n+        mouse[4] = (char) (' ' + cx + 1);\n+        mouse[5] = (char) (' ' + cy + 1);\n+        slaveInputPipe.write(mouse);\n+    }\n+\n+    @Override\n+    public Cursor getCursorPosition(IntConsumer discarded) {\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            CONSOLE_SCREEN_BUFFER_INFO info = new CONSOLE_SCREEN_BUFFER_INFO(arena);\n+            if (GetConsoleScreenBufferInfo(outConsole, info) == 0) {\n+                throw new IOError(new IOException(\"Could not get the cursor position: \" + getLastErrorMessage()));\n+            }\n+            return new Cursor(info.cursorPosition().x(), info.cursorPosition().y());\n+        }\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ffm\/NativeWinSysTerminal.java","additions":302,"deletions":0,"binary":false,"changes":302,"status":"added"},{"patch":"@@ -0,0 +1,407 @@\n+\/*\n+ * Copyright (c) 2022-2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.impl.ffm;\n+\n+import java.io.IOException;\n+import java.io.Writer;\n+\n+import jdk.internal.org.jline.utils.AnsiWriter;\n+import jdk.internal.org.jline.utils.Colors;\n+\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.BACKGROUND_BLUE;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.BACKGROUND_GREEN;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.BACKGROUND_INTENSITY;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.BACKGROUND_RED;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.CHAR_INFO;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.CONSOLE_SCREEN_BUFFER_INFO;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.COORD;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.FOREGROUND_BLUE;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.FOREGROUND_GREEN;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.FOREGROUND_INTENSITY;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.FOREGROUND_RED;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.FillConsoleOutputAttribute;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.FillConsoleOutputCharacterW;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.GetConsoleScreenBufferInfo;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.GetStdHandle;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.SMALL_RECT;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.STD_OUTPUT_HANDLE;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.ScrollConsoleScreenBuffer;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.SetConsoleCursorPosition;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.SetConsoleTextAttribute;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.SetConsoleTitleW;\n+import static jdk.internal.org.jline.terminal.impl.ffm.Kernel32.getLastErrorMessage;\n+\n+class WindowsAnsiWriter extends AnsiWriter {\n+\n+    private static final java.lang.foreign.MemorySegment console = GetStdHandle(STD_OUTPUT_HANDLE);\n+\n+    private static final short FOREGROUND_BLACK = 0;\n+    private static final short FOREGROUND_YELLOW = (short) (FOREGROUND_RED | FOREGROUND_GREEN);\n+    private static final short FOREGROUND_MAGENTA = (short) (FOREGROUND_BLUE | FOREGROUND_RED);\n+    private static final short FOREGROUND_CYAN = (short) (FOREGROUND_BLUE | FOREGROUND_GREEN);\n+    private static final short FOREGROUND_WHITE = (short) (FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE);\n+\n+    private static final short BACKGROUND_BLACK = 0;\n+    private static final short BACKGROUND_YELLOW = (short) (BACKGROUND_RED | BACKGROUND_GREEN);\n+    private static final short BACKGROUND_MAGENTA = (short) (BACKGROUND_BLUE | BACKGROUND_RED);\n+    private static final short BACKGROUND_CYAN = (short) (BACKGROUND_BLUE | BACKGROUND_GREEN);\n+    private static final short BACKGROUND_WHITE = (short) (BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE);\n+\n+    private static final short[] ANSI_FOREGROUND_COLOR_MAP = {\n+        FOREGROUND_BLACK,\n+        FOREGROUND_RED,\n+        FOREGROUND_GREEN,\n+        FOREGROUND_YELLOW,\n+        FOREGROUND_BLUE,\n+        FOREGROUND_MAGENTA,\n+        FOREGROUND_CYAN,\n+        FOREGROUND_WHITE,\n+    };\n+\n+    private static final short[] ANSI_BACKGROUND_COLOR_MAP = {\n+        BACKGROUND_BLACK,\n+        BACKGROUND_RED,\n+        BACKGROUND_GREEN,\n+        BACKGROUND_YELLOW,\n+        BACKGROUND_BLUE,\n+        BACKGROUND_MAGENTA,\n+        BACKGROUND_CYAN,\n+        BACKGROUND_WHITE,\n+    };\n+\n+    private final CONSOLE_SCREEN_BUFFER_INFO info = new CONSOLE_SCREEN_BUFFER_INFO(java.lang.foreign.Arena.ofAuto());\n+    private final short originalColors;\n+\n+    private boolean negative;\n+    private boolean bold;\n+    private boolean underline;\n+    private short savedX = -1;\n+    private short savedY = -1;\n+\n+    public WindowsAnsiWriter(Writer out) throws IOException {\n+        super(out);\n+        getConsoleInfo();\n+        originalColors = info.attributes();\n+    }\n+\n+    private void getConsoleInfo() throws IOException {\n+        out.flush();\n+        if (GetConsoleScreenBufferInfo(console, info) == 0) {\n+            throw new IOException(\"Could not get the screen info: \" + getLastErrorMessage());\n+        }\n+        if (negative) {\n+            info.attributes(invertAttributeColors(info.attributes()));\n+        }\n+    }\n+\n+    private void applyAttribute() throws IOException {\n+        out.flush();\n+        short attributes = info.attributes();\n+        \/\/ bold is simulated by high foreground intensity\n+        if (bold) {\n+            attributes |= FOREGROUND_INTENSITY;\n+        }\n+        \/\/ underline is simulated by high foreground intensity\n+        if (underline) {\n+            attributes |= BACKGROUND_INTENSITY;\n+        }\n+        if (negative) {\n+            attributes = invertAttributeColors(attributes);\n+        }\n+        if (SetConsoleTextAttribute(console, attributes) == 0) {\n+            throw new IOException(getLastErrorMessage());\n+        }\n+    }\n+\n+    private short invertAttributeColors(short attributes) {\n+        \/\/ Swap the the Foreground and Background bits.\n+        int fg = 0x000F & attributes;\n+        fg <<= 4;\n+        int bg = 0X00F0 & attributes;\n+        bg >>= 4;\n+        attributes = (short) ((attributes & 0xFF00) | fg | bg);\n+        return attributes;\n+    }\n+\n+    private void applyCursorPosition() throws IOException {\n+        info.cursorPosition().x((short)\n+                Math.max(0, Math.min(info.size().x() - 1, info.cursorPosition().x())));\n+        info.cursorPosition().y((short)\n+                Math.max(0, Math.min(info.size().y() - 1, info.cursorPosition().y())));\n+        if (SetConsoleCursorPosition(console, info.cursorPosition()) == 0) {\n+            throw new IOException(getLastErrorMessage());\n+        }\n+    }\n+\n+    @Override\n+    protected void processEraseScreen(int eraseOption) throws IOException {\n+        getConsoleInfo();\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            java.lang.foreign.MemorySegment written = arena.allocate(java.lang.foreign.ValueLayout.JAVA_INT);\n+            switch (eraseOption) {\n+                case ERASE_SCREEN -> {\n+                    COORD topLeft = new COORD(arena, (short) 0, info.window().top());\n+                    int screenLength = info.window().height() * info.size().x();\n+                    FillConsoleOutputAttribute(console, originalColors, screenLength, topLeft, written);\n+                    FillConsoleOutputCharacterW(console, ' ', screenLength, topLeft, written);\n+                }\n+                case ERASE_SCREEN_TO_BEGINING -> {\n+                    COORD topLeft2 = new COORD(arena, (short) 0, info.window().top());\n+                    int lengthToCursor =\n+                            (info.cursorPosition().y() - info.window().top())\n+                                            * info.size().x()\n+                                    + info.cursorPosition().x();\n+                    FillConsoleOutputAttribute(console, originalColors, lengthToCursor, topLeft2, written);\n+                    FillConsoleOutputCharacterW(console, ' ', lengthToCursor, topLeft2, written);\n+                }\n+                case ERASE_SCREEN_TO_END -> {\n+                    int lengthToEnd =\n+                            (info.window().bottom() - info.cursorPosition().y())\n+                                            * info.size().x()\n+                                    + (info.size().x() - info.cursorPosition().x());\n+                    FillConsoleOutputAttribute(console, originalColors, lengthToEnd, info.cursorPosition(), written);\n+                    FillConsoleOutputCharacterW(console, ' ', lengthToEnd, info.cursorPosition(), written);\n+                }\n+                default -> {}\n+            }\n+        }\n+    }\n+\n+    @Override\n+    protected void processEraseLine(int eraseOption) throws IOException {\n+        getConsoleInfo();\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            java.lang.foreign.MemorySegment written = arena.allocate(java.lang.foreign.ValueLayout.JAVA_INT);\n+            switch (eraseOption) {\n+                case ERASE_LINE -> {\n+                    COORD leftColCurrRow =\n+                            new COORD(arena, (short) 0, info.cursorPosition().y());\n+                    FillConsoleOutputAttribute(\n+                            console, originalColors, info.size().x(), leftColCurrRow, written);\n+                    FillConsoleOutputCharacterW(console, ' ', info.size().x(), leftColCurrRow, written);\n+                }\n+                case ERASE_LINE_TO_BEGINING -> {\n+                    COORD leftColCurrRow2 =\n+                            new COORD(arena, (short) 0, info.cursorPosition().y());\n+                    FillConsoleOutputAttribute(\n+                            console, originalColors, info.cursorPosition().x(), leftColCurrRow2, written);\n+                    FillConsoleOutputCharacterW(\n+                            console, ' ', info.cursorPosition().x(), leftColCurrRow2, written);\n+                }\n+                case ERASE_LINE_TO_END -> {\n+                    int lengthToLastCol =\n+                            info.size().x() - info.cursorPosition().x();\n+                    FillConsoleOutputAttribute(\n+                            console, originalColors, lengthToLastCol, info.cursorPosition(), written);\n+                    FillConsoleOutputCharacterW(console, ' ', lengthToLastCol, info.cursorPosition(), written);\n+                }\n+                default -> {}\n+            }\n+        }\n+    }\n+\n+    protected void processCursorUpLine(int count) throws IOException {\n+        getConsoleInfo();\n+        info.cursorPosition().x((short) 0);\n+        info.cursorPosition().y((short) (info.cursorPosition().y() - count));\n+        applyCursorPosition();\n+    }\n+\n+    protected void processCursorDownLine(int count) throws IOException {\n+        getConsoleInfo();\n+        info.cursorPosition().x((short) 0);\n+        info.cursorPosition().y((short) (info.cursorPosition().y() + count));\n+        applyCursorPosition();\n+    }\n+\n+    @Override\n+    protected void processCursorLeft(int count) throws IOException {\n+        getConsoleInfo();\n+        info.cursorPosition().x((short) (info.cursorPosition().x() - count));\n+        applyCursorPosition();\n+    }\n+\n+    @Override\n+    protected void processCursorRight(int count) throws IOException {\n+        getConsoleInfo();\n+        info.cursorPosition().x((short) (info.cursorPosition().x() + count));\n+        applyCursorPosition();\n+    }\n+\n+    @Override\n+    protected void processCursorDown(int count) throws IOException {\n+        getConsoleInfo();\n+        int nb = Math.max(0, info.cursorPosition().y() + count - info.size().y() + 1);\n+        if (nb != count) {\n+            info.cursorPosition().y((short) (info.cursorPosition().y() + count));\n+            applyCursorPosition();\n+        }\n+        if (nb > 0) {\n+            try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+                SMALL_RECT scroll = new SMALL_RECT(arena, info.window());\n+                scroll.top((short) 0);\n+                COORD org = new COORD(arena);\n+                org.x((short) 0);\n+                org.y((short) (-nb));\n+                CHAR_INFO info = new CHAR_INFO(arena, ' ', originalColors);\n+                ScrollConsoleScreenBuffer(console, scroll, scroll, org, info);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    protected void processCursorUp(int count) throws IOException {\n+        getConsoleInfo();\n+        info.cursorPosition().y((short) (info.cursorPosition().y() - count));\n+        applyCursorPosition();\n+    }\n+\n+    @Override\n+    protected void processCursorTo(int row, int col) throws IOException {\n+        getConsoleInfo();\n+        info.cursorPosition().y((short) (info.window().top() + row - 1));\n+        info.cursorPosition().x((short) (col - 1));\n+        applyCursorPosition();\n+    }\n+\n+    @Override\n+    protected void processCursorToColumn(int x) throws IOException {\n+        getConsoleInfo();\n+        info.cursorPosition().x((short) (x - 1));\n+        applyCursorPosition();\n+    }\n+\n+    @Override\n+    protected void processSetForegroundColorExt(int paletteIndex) throws IOException {\n+        int color = Colors.roundColor(paletteIndex, 16);\n+        info.attributes((short) ((info.attributes() & ~0x0007) | ANSI_FOREGROUND_COLOR_MAP[color & 0x07]));\n+        info.attributes(\n+                (short) ((info.attributes() & ~FOREGROUND_INTENSITY) | (color >= 8 ? FOREGROUND_INTENSITY : 0)));\n+        applyAttribute();\n+    }\n+\n+    @Override\n+    protected void processSetBackgroundColorExt(int paletteIndex) throws IOException {\n+        int color = Colors.roundColor(paletteIndex, 16);\n+        info.attributes((short) ((info.attributes() & ~0x0070) | ANSI_BACKGROUND_COLOR_MAP[color & 0x07]));\n+        info.attributes(\n+                (short) ((info.attributes() & ~BACKGROUND_INTENSITY) | (color >= 8 ? BACKGROUND_INTENSITY : 0)));\n+        applyAttribute();\n+    }\n+\n+    @Override\n+    protected void processDefaultTextColor() throws IOException {\n+        info.attributes((short) ((info.attributes() & ~0x000F) | (originalColors & 0xF)));\n+        info.attributes((short) (info.attributes() & ~FOREGROUND_INTENSITY));\n+        applyAttribute();\n+    }\n+\n+    @Override\n+    protected void processDefaultBackgroundColor() throws IOException {\n+        info.attributes((short) ((info.attributes() & ~0x00F0) | (originalColors & 0xF0)));\n+        info.attributes((short) (info.attributes() & ~BACKGROUND_INTENSITY));\n+        applyAttribute();\n+    }\n+\n+    @Override\n+    protected void processAttributeRest() throws IOException {\n+        info.attributes((short) ((info.attributes() & ~0x00FF) | originalColors));\n+        this.negative = false;\n+        this.bold = false;\n+        this.underline = false;\n+        applyAttribute();\n+    }\n+\n+    @Override\n+    protected void processSetAttribute(int attribute) throws IOException {\n+        switch (attribute) {\n+            case ATTRIBUTE_INTENSITY_BOLD -> {\n+                bold = true;\n+                applyAttribute();\n+            }\n+            case ATTRIBUTE_INTENSITY_NORMAL -> {\n+                bold = false;\n+                applyAttribute();\n+            }\n+            case ATTRIBUTE_UNDERLINE -> {\n+                underline = true;\n+                applyAttribute();\n+            }\n+            case ATTRIBUTE_UNDERLINE_OFF -> {\n+                underline = false;\n+                applyAttribute();\n+            }\n+            case ATTRIBUTE_NEGATIVE_ON -> {\n+                negative = true;\n+                applyAttribute();\n+            }\n+            case ATTRIBUTE_NEGATIVE_OFF -> {\n+                negative = false;\n+                applyAttribute();\n+            }\n+            default -> {}\n+        }\n+    }\n+\n+    @Override\n+    protected void processSaveCursorPosition() throws IOException {\n+        getConsoleInfo();\n+        savedX = info.cursorPosition().x();\n+        savedY = info.cursorPosition().y();\n+    }\n+\n+    @Override\n+    protected void processRestoreCursorPosition() throws IOException {\n+        \/\/ restore only if there was a save operation first\n+        if (savedX != -1 && savedY != -1) {\n+            out.flush();\n+            info.cursorPosition().x(savedX);\n+            info.cursorPosition().y(savedY);\n+            applyCursorPosition();\n+        }\n+    }\n+\n+    @Override\n+    protected void processInsertLine(int optionInt) throws IOException {\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            getConsoleInfo();\n+            SMALL_RECT scroll = info.window().copy(arena);\n+            scroll.top(info.cursorPosition().y());\n+            COORD org =\n+                    new COORD(arena, (short) 0, (short) (info.cursorPosition().y() + optionInt));\n+            CHAR_INFO info = new CHAR_INFO(arena, ' ', originalColors);\n+            if (ScrollConsoleScreenBuffer(console, scroll, scroll, org, info) == 0) {\n+                throw new IOException(getLastErrorMessage());\n+            }\n+        }\n+    }\n+\n+    @Override\n+    protected void processDeleteLine(int optionInt) throws IOException {\n+        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined()) {\n+            getConsoleInfo();\n+            SMALL_RECT scroll = info.window().copy(arena);\n+            scroll.top(info.cursorPosition().y());\n+            COORD org =\n+                    new COORD(arena, (short) 0, (short) (info.cursorPosition().y() - optionInt));\n+            CHAR_INFO info = new CHAR_INFO(arena, ' ', originalColors);\n+            if (ScrollConsoleScreenBuffer(console, scroll, scroll, org, info) == 0) {\n+                throw new IOException(getLastErrorMessage());\n+            }\n+        }\n+    }\n+\n+    @Override\n+    protected void processChangeWindowTitle(String title) {\n+        try (java.lang.foreign.Arena session = java.lang.foreign.Arena.ofConfined()) {\n+            java.lang.foreign.MemorySegment str = session.allocateFrom(title);\n+            SetConsoleTitleW(str);\n+        }\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ffm\/WindowsAnsiWriter.java","additions":407,"deletions":0,"binary":false,"changes":407,"status":"added"},{"patch":"@@ -1,36 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna;\n-\n-@SuppressWarnings(\"serial\")\n-public class LastErrorException extends RuntimeException{\n-\n-    public final long lastError;\n-\n-    public LastErrorException(long lastError) {\n-        this.lastError = lastError;\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/LastErrorException.java","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -37,0 +37,3 @@\n+    SystemStream getSystemStream();\n+\n+    TerminalProvider getProvider();\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/spi\/Pty.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,15 @@\n+\/*\n+ * Copyright (c) 2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.spi;\n+\n+public enum SystemStream {\n+    Input,\n+    Output,\n+    Error\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/spi\/SystemStream.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.terminal.spi;\n+\n+import jdk.internal.org.jline.terminal.Terminal;\n+\n+\/**\n+ * The {@code TerminalExt} interface is implemented by {@code Terminal}s\n+ * and provides access to the Terminal's internals.\n+ *\/\n+public interface TerminalExt extends Terminal {\n+\n+    \/**\n+     * Returns the {@code TerminalProvider} that created this terminal\n+     * or {@code null} if the terminal was created with no provider.\n+     *\/\n+    TerminalProvider getProvider();\n+\n+    \/**\n+     * The underlying system stream, may be {@link SystemStream#Output},\n+     * {@link SystemStream#Error}, or {@code null} if this terminal is not bound\n+     * to a system stream.\n+     *\/\n+    SystemStream getSystemStream();\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/spi\/TerminalExt.java","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, the original author or authors.\n+ * Copyright (c) 2022, the original author(s).\n@@ -14,1 +14,0 @@\n-import java.net.URL;\n@@ -17,1 +16,0 @@\n-import java.util.ServiceLoader;\n@@ -24,0 +22,1 @@\n+import jdk.internal.org.jline.terminal.impl.ffm.FfmTerminalProvider;\n@@ -25,8 +24,1 @@\n-public interface TerminalProvider\n-{\n-\n-    enum Stream {\n-        Input,\n-        Output,\n-        Error\n-    }\n+public interface TerminalProvider {\n@@ -36,4 +28,23 @@\n-    Terminal sysTerminal(String name, String type, boolean ansiPassThrough,\n-                         Charset encoding, boolean nativeSignals,\n-                         Terminal.SignalHandler signalHandler, boolean paused,\n-                         Stream consoleStream, Function<InputStream, InputStream> inputStreamWrapper) throws IOException;\n+    Terminal sysTerminal(\n+            String name,\n+            String type,\n+            boolean ansiPassThrough,\n+            Charset encoding,\n+            boolean nativeSignals,\n+            Terminal.SignalHandler signalHandler,\n+            boolean paused,\n+            SystemStream systemStream,\n+            Function<InputStream, InputStream> inputStreamWrapper)\n+            throws IOException;\n+\n+    Terminal newTerminal(\n+            String name,\n+            String type,\n+            InputStream masterInput,\n+            OutputStream masterOutput,\n+            Charset encoding,\n+            Terminal.SignalHandler signalHandler,\n+            boolean paused,\n+            Attributes attributes,\n+            Size size)\n+            throws IOException;\n@@ -41,4 +52,1 @@\n-    Terminal newTerminal(String name, String type,\n-                         InputStream masterInput, OutputStream masterOutput,\n-                         Charset encoding, Terminal.SignalHandler signalHandler,\n-                         boolean paused, Attributes attributes, Size size) throws IOException;\n+    boolean isSystemStream(SystemStream stream);\n@@ -46,1 +54,1 @@\n-    boolean isSystemStream(Stream stream);\n+    String systemStreamName(SystemStream stream);\n@@ -48,1 +56,1 @@\n-    String systemStreamName(Stream stream);\n+    int systemStreamWidth(SystemStream stream);\n@@ -53,7 +61,1 @@\n-            case \"jna\": {\n-                try {\n-                    return (TerminalProvider) Class.forName(\"jdk.internal.org.jline.terminal.impl.jna.JnaTerminalProvider\").getConstructor().newInstance();\n-                } catch (ReflectiveOperationException t) {\n-                    throw new IOException(t);\n-                }\n-            }\n+            case \"ffm\": return new FfmTerminalProvider();\n@@ -65,1 +67,1 @@\n-        InputStream is = cl.getResourceAsStream( \"META-INF\/services\/org\/jline\/terminal\/provider\/\" + name);\n+        InputStream is = cl.getResourceAsStream(\"META-INF\/services\/org\/jline\/terminal\/provider\/\" + name);\n@@ -74,1 +76,1 @@\n-                Class<?> clazz = cl.loadClass( className );\n+                Class<?> clazz = cl.loadClass(className);\n@@ -76,2 +78,2 @@\n-            } catch ( Exception e ) {\n-                throw new IOException(\"Unable to load terminal provider \" + name, e);\n+            } catch (Exception e) {\n+                throw new IOException(\"Unable to load terminal provider \" + name + \": \" + e.getMessage(), e);\n@@ -83,1 +85,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/spi\/TerminalProvider.java","additions":34,"deletions":33,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (C) 2009-2018 the original author(s).\n+ * Copyright (c) 2009-2018, the original author(s).\n@@ -4,3 +4,2 @@\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n@@ -8,7 +7,1 @@\n- * http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -255,3 +248,2 @@\n-        for (;;) {\n-            if (!optionsIterator.hasNext())\n-                throw new IllegalArgumentException();\n+        for (; ; ) {\n+            if (!optionsIterator.hasNext()) throw new IllegalArgumentException();\n@@ -259,2 +251,1 @@\n-            if (arg != null)\n-                return (Integer) arg;\n+            if (arg != null) return (Integer) arg;\n@@ -349,4 +340,2 @@\n-                                        if (value == 38)\n-                                            processSetForegroundColorExt(r, g, b);\n-                                        else\n-                                            processSetBackgroundColorExt(r, g, b);\n+                                        if (value == 38) processSetForegroundColorExt(r, g, b);\n+                                        else processSetBackgroundColorExt(r, g, b);\n@@ -356,2 +345,1 @@\n-                                }\n-                                else if (arg2or5 == 5) {\n+                                } else if (arg2or5 == 5) {\n@@ -361,4 +349,2 @@\n-                                        if (value == 38)\n-                                            processSetForegroundColorExt(paletteIndex);\n-                                        else\n-                                            processSetBackgroundColorExt(paletteIndex);\n+                                        if (value == 38) processSetForegroundColorExt(paletteIndex);\n+                                        else processSetBackgroundColorExt(paletteIndex);\n@@ -368,2 +354,1 @@\n-                                }\n-                                else {\n+                                } else {\n@@ -452,2 +437,1 @@\n-    protected void processRestoreCursorPosition() throws IOException {\n-    }\n+    protected void processRestoreCursorPosition() throws IOException {}\n@@ -459,2 +443,1 @@\n-    protected void processSaveCursorPosition() throws IOException {\n-    }\n+    protected void processSaveCursorPosition() throws IOException {}\n@@ -467,2 +450,1 @@\n-    protected void processInsertLine(int optionInt) throws IOException {\n-    }\n+    protected void processInsertLine(int optionInt) throws IOException {}\n@@ -475,2 +457,1 @@\n-    protected void processDeleteLine(int optionInt) throws IOException {\n-    }\n+    protected void processDeleteLine(int optionInt) throws IOException {}\n@@ -483,2 +464,1 @@\n-    protected void processScrollDown(int optionInt) throws IOException {\n-    }\n+    protected void processScrollDown(int optionInt) throws IOException {}\n@@ -491,2 +471,1 @@\n-    protected void processScrollUp(int optionInt) throws IOException {\n-    }\n+    protected void processScrollUp(int optionInt) throws IOException {}\n@@ -503,2 +482,1 @@\n-    protected void processEraseScreen(int eraseOption) throws IOException {\n-    }\n+    protected void processEraseScreen(int eraseOption) throws IOException {}\n@@ -515,2 +493,15 @@\n-    protected void processEraseLine(int eraseOption) throws IOException {\n-    }\n+    protected void processEraseLine(int eraseOption) throws IOException {}\n+\n+    protected static final int ATTRIBUTE_INTENSITY_BOLD = 1; \/\/  Intensity: Bold\n+    protected static final int ATTRIBUTE_INTENSITY_FAINT = 2; \/\/  Intensity; Faint  not widely supported\n+    protected static final int ATTRIBUTE_ITALIC = 3; \/\/  Italic; on  not widely supported. Sometimes treated as inverse.\n+    protected static final int ATTRIBUTE_UNDERLINE = 4; \/\/  Underline; Single\n+    protected static final int ATTRIBUTE_BLINK_SLOW = 5; \/\/  Blink; Slow  less than 150 per minute\n+    protected static final int ATTRIBUTE_BLINK_FAST = 6; \/\/  Blink; Rapid  MS-DOS ANSI.SYS; 150 per minute or more\n+    protected static final int ATTRIBUTE_NEGATIVE_ON =\n+            7; \/\/  Image; Negative  inverse or reverse; swap foreground and background\n+    protected static final int ATTRIBUTE_CONCEAL_ON = 8; \/\/  Conceal on\n+    protected static final int ATTRIBUTE_UNDERLINE_DOUBLE = 21; \/\/  Underline; Double  not widely supported\n+    protected static final int ATTRIBUTE_INTENSITY_NORMAL = 22; \/\/  Intensity; Normal  not bold and not faint\n+    protected static final int ATTRIBUTE_UNDERLINE_OFF = 24; \/\/  Underline; None\n+    protected static final int ATTRIBUTE_BLINK_OFF = 25; \/\/  Blink; off\n@@ -518,12 +509,0 @@\n-    protected static final int ATTRIBUTE_INTENSITY_BOLD = 1; \/\/         Intensity: Bold\n-    protected static final int ATTRIBUTE_INTENSITY_FAINT = 2; \/\/        Intensity; Faint        not widely supported\n-    protected static final int ATTRIBUTE_ITALIC = 3; \/\/         Italic; on      not widely supported. Sometimes treated as inverse.\n-    protected static final int ATTRIBUTE_UNDERLINE = 4; \/\/      Underline; Single\n-    protected static final int ATTRIBUTE_BLINK_SLOW = 5; \/\/     Blink; Slow     less than 150 per minute\n-    protected static final int ATTRIBUTE_BLINK_FAST = 6; \/\/     Blink; Rapid    MS-DOS ANSI.SYS; 150 per minute or more\n-    protected static final int ATTRIBUTE_NEGATIVE_ON = 7; \/\/    Image; Negative         inverse or reverse; swap foreground and background\n-    protected static final int ATTRIBUTE_CONCEAL_ON = 8; \/\/     Conceal on\n-    protected static final int ATTRIBUTE_UNDERLINE_DOUBLE = 21; \/\/      Underline; Double       not widely supported\n-    protected static final int ATTRIBUTE_INTENSITY_NORMAL = 22; \/\/      Intensity; Normal       not bold and not faint\n-    protected static final int ATTRIBUTE_UNDERLINE_OFF = 24; \/\/         Underline; None\n-    protected static final int ATTRIBUTE_BLINK_OFF = 25; \/\/     Blink; off\n@@ -532,0 +511,1 @@\n+\n@@ -533,1 +513,1 @@\n-    protected static final int ATTRIBUTE_CONCEAL_OFF = 28; \/\/   Reveal  conceal off\n+    protected static final int ATTRIBUTE_CONCEAL_OFF = 28; \/\/  Reveal  conceal off\n@@ -549,2 +529,1 @@\n-    protected void processSetAttribute(int attribute) throws IOException {\n-    }\n+    protected void processSetAttribute(int attribute) throws IOException {}\n@@ -587,2 +566,1 @@\n-    protected void processSetForegroundColorExt(int paletteIndex) throws IOException {\n-    }\n+    protected void processSetForegroundColorExt(int paletteIndex) throws IOException {}\n@@ -628,2 +606,1 @@\n-    protected void processSetBackgroundColorExt(int paletteIndex) throws IOException {\n-    }\n+    protected void processSetBackgroundColorExt(int paletteIndex) throws IOException {}\n@@ -647,2 +624,1 @@\n-    protected void processDefaultTextColor() throws IOException {\n-    }\n+    protected void processDefaultTextColor() throws IOException {}\n@@ -654,2 +630,1 @@\n-    protected void processDefaultBackgroundColor() throws IOException {\n-    }\n+    protected void processDefaultBackgroundColor() throws IOException {}\n@@ -661,2 +636,1 @@\n-    protected void processAttributeRest() throws IOException {\n-    }\n+    protected void processAttributeRest() throws IOException {}\n@@ -671,2 +645,1 @@\n-    protected void processCursorTo(int row, int col) throws IOException {\n-    }\n+    protected void processCursorTo(int row, int col) throws IOException {}\n@@ -679,2 +652,1 @@\n-    protected void processCursorToColumn(int x) throws IOException {\n-    }\n+    protected void processCursorToColumn(int x) throws IOException {}\n@@ -687,2 +659,1 @@\n-    protected void processCursorUpLine(int count) throws IOException {\n-    }\n+    protected void processCursorUpLine(int count) throws IOException {}\n@@ -707,2 +678,1 @@\n-    protected void processCursorLeft(int count) throws IOException {\n-    }\n+    protected void processCursorLeft(int count) throws IOException {}\n@@ -727,2 +697,1 @@\n-    protected void processCursorDown(int count) throws IOException {\n-    }\n+    protected void processCursorDown(int count) throws IOException {}\n@@ -735,2 +704,1 @@\n-    protected void processCursorUp(int count) throws IOException {\n-    }\n+    protected void processCursorUp(int count) throws IOException {}\n@@ -738,2 +706,1 @@\n-    protected void processUnknownExtension(ArrayList<Object> options, int command) {\n-    }\n+    protected void processUnknownExtension(ArrayList<Object> options, int command) {}\n@@ -754,2 +721,1 @@\n-    protected void processChangeIconName(String name) {\n-    }\n+    protected void processChangeIconName(String name) {}\n@@ -761,2 +727,1 @@\n-    protected void processChangeWindowTitle(String title) {\n-    }\n+    protected void processChangeWindowTitle(String title) {}\n@@ -769,2 +734,1 @@\n-    protected void processUnknownOperatingSystemCommand(int command, String param) {\n-    }\n+    protected void processUnknownOperatingSystemCommand(int command, String param) {}\n@@ -784,2 +748,1 @@\n-    protected void processCharsetSelect(int set, char seq) {\n-    }\n+    protected void processCharsetSelect(int set, char seq) {}\n@@ -788,2 +751,1 @@\n-        if (options.size() <= index)\n-            throw new IllegalArgumentException();\n+        if (options.size() <= index) throw new IllegalArgumentException();\n@@ -791,4 +753,2 @@\n-        if (value == null)\n-            throw new IllegalArgumentException();\n-        if (!value.getClass().equals(Integer.class))\n-            throw new IllegalArgumentException();\n+        if (value == null) throw new IllegalArgumentException();\n+        if (!value.getClass().equals(Integer.class)) throw new IllegalArgumentException();\n@@ -831,1 +791,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/AnsiWriter.java","additions":57,"deletions":98,"binary":false,"changes":155,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2021, the original author(s).\n@@ -18,0 +18,1 @@\n+import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_DISABLE_ALTERNATE_CHARSET;\n@@ -33,0 +34,1 @@\n+import static jdk.internal.org.jline.utils.AttributedStyle.F_HIDDEN;\n@@ -36,1 +38,0 @@\n-import static jdk.internal.org.jline.utils.AttributedStyle.F_HIDDEN;\n@@ -38,1 +39,0 @@\n-import static jdk.internal.org.jline.terminal.TerminalBuilder.PROP_DISABLE_ALTERNATE_CHARSET;\n@@ -123,0 +123,1 @@\n+                \/\/ @spotless:off\n@@ -136,0 +137,1 @@\n+                \/\/ @spotless:on\n@@ -142,1 +144,1 @@\n-            long  s = styleCodeAt(i) & ~F_HIDDEN; \/\/ The hidden flag does not change the ansi styles\n+            long s = styleCodeAt(i) & ~F_HIDDEN; \/\/ The hidden flag does not change the ansi styles\n@@ -144,1 +146,1 @@\n-                long  d = (style ^ s) & MASK;\n+                long d = (style ^ s) & MASK;\n@@ -175,3 +177,3 @@\n-                                int r = (int)(fg >> (FG_COLOR_EXP + 16)) & 0xFF;\n-                                int g = (int)(fg >> (FG_COLOR_EXP + 8)) & 0xFF;\n-                                int b = (int)(fg >> FG_COLOR_EXP) & 0xFF;\n+                                int r = (int) (fg >> (FG_COLOR_EXP + 16)) & 0xFF;\n+                                int g = (int) (fg >> (FG_COLOR_EXP + 8)) & 0xFF;\n+                                int b = (int) (fg >> FG_COLOR_EXP) & 0xFF;\n@@ -184,1 +186,1 @@\n-                                rounded = palette.round((int)(fg >> FG_COLOR_EXP) & 0xFF);\n+                                rounded = palette.round((int) (fg >> FG_COLOR_EXP) & 0xFF);\n@@ -214,3 +216,3 @@\n-                                int r = (int)(bg >> (BG_COLOR_EXP + 16)) & 0xFF;\n-                                int g = (int)(bg >> (BG_COLOR_EXP + 8)) & 0xFF;\n-                                int b = (int)(bg >> BG_COLOR_EXP) & 0xFF;\n+                                int r = (int) (bg >> (BG_COLOR_EXP + 16)) & 0xFF;\n+                                int g = (int) (bg >> (BG_COLOR_EXP + 8)) & 0xFF;\n+                                int b = (int) (bg >> BG_COLOR_EXP) & 0xFF;\n@@ -223,1 +225,1 @@\n-                                rounded = palette.round((int)(bg >> BG_COLOR_EXP) & 0xFF);\n+                                rounded = palette.round((int) (bg >> BG_COLOR_EXP) & 0xFF);\n@@ -246,2 +248,1 @@\n-                        if (    (d & F_BOLD)  != 0 && (s & F_BOLD)  == 0\n-                                || (d & F_FAINT) != 0 && (s & F_FAINT) == 0) {\n+                        if ((d & F_BOLD) != 0 && (s & F_BOLD) == 0 || (d & F_FAINT) != 0 && (s & F_FAINT) == 0) {\n@@ -363,2 +364,1 @@\n-            if (!isHidden(cur))\n-                cols += WCWidth.wcwidth(cp);\n+            if (!isHidden(cur)) cols += WCWidth.wcwidth(cp);\n@@ -385,2 +385,1 @@\n-            if (cp == '\\n')\n-                break;\n+            if (cp == '\\n') break;\n@@ -410,1 +409,1 @@\n-                strings.add(subSequence(beg, includeNewlines ? cur+1 : cur));\n+                strings.add(subSequence(beg, includeNewlines ? cur + 1 : cur));\n@@ -432,1 +431,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/AttributedCharSequence.java","additions":19,"deletions":21,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -18,0 +18,2 @@\n+import jdk.internal.org.jline.terminal.Terminal;\n+\n@@ -106,0 +108,16 @@\n+        return fromAnsi(ansi, tabs, null, null);\n+    }\n+\n+    public static AttributedString fromAnsi(String ansi, Terminal terminal) {\n+        String alternateIn, alternateOut;\n+        if (!DISABLE_ALTERNATE_CHARSET) {\n+            alternateIn = Curses.tputs(terminal.getStringCapability(InfoCmp.Capability.enter_alt_charset_mode));\n+            alternateOut = Curses.tputs(terminal.getStringCapability(InfoCmp.Capability.exit_alt_charset_mode));\n+        } else {\n+            alternateIn = null;\n+            alternateOut = null;\n+        }\n+        return fromAnsi(ansi, Arrays.asList(0), alternateIn, alternateOut);\n+    }\n+\n+    public static AttributedString fromAnsi(String ansi, List<Integer> tabs, String altIn, String altOut) {\n@@ -111,0 +129,1 @@\n+                .altCharset(altIn, altOut)\n@@ -119,3 +138,1 @@\n-        return new AttributedStringBuilder(ansi.length())\n-                .ansiAppend(ansi)\n-                .toString();\n+        return new AttributedStringBuilder(ansi.length()).ansiAppend(ansi).toString();\n@@ -165,1 +182,1 @@\n-            return new AttributedString(buffer, newstyle, start , end);\n+            return new AttributedString(buffer, newstyle, start, end);\n@@ -182,1 +199,1 @@\n-            if (a1[s1+i] != a2[s2+i]) {\n+            if (a1[s1 + i] != a2[s2 + i]) {\n@@ -188,0 +205,1 @@\n+\n@@ -190,1 +208,1 @@\n-            if (a1[s1+i] != a2[s2+i]) {\n+            if (a1[s1 + i] != a2[s2 + i]) {\n@@ -224,1 +242,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/AttributedString.java","additions":25,"deletions":8,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -30,0 +30,3 @@\n+    private char[] altIn;\n+    private char[] altOut;\n+    private boolean inAltCharset;\n@@ -84,4 +87,1 @@\n-                Arrays.copyOfRange(buffer, start, end),\n-                Arrays.copyOfRange(style, start, end),\n-                0,\n-                end - start);\n+                Arrays.copyOfRange(buffer, start, end), Arrays.copyOfRange(style, start, end), 0, end - start);\n@@ -111,0 +111,8 @@\n+    public AttributedStringBuilder append(char c, int repeat) {\n+        AttributedString s = new AttributedString(Character.toString(c), current);\n+        while (repeat-- > 0) {\n+            append(s);\n+        }\n+        return this;\n+    }\n+\n@@ -120,1 +128,1 @@\n-    public AttributedStringBuilder style(Function<AttributedStyle,AttributedStyle> style) {\n+    public AttributedStringBuilder style(Function<AttributedStyle, AttributedStyle> style) {\n@@ -125,1 +133,1 @@\n-    public AttributedStringBuilder styled(Function<AttributedStyle,AttributedStyle> style, CharSequence cs) {\n+    public AttributedStringBuilder styled(Function<AttributedStyle, AttributedStyle> style, CharSequence cs) {\n@@ -133,1 +141,2 @@\n-    public AttributedStringBuilder styled(Function<AttributedStyle,AttributedStyle> style, Consumer<AttributedStringBuilder> consumer) {\n+    public AttributedStringBuilder styled(\n+            Function<AttributedStyle, AttributedStyle> style, Consumer<AttributedStringBuilder> consumer) {\n@@ -341,2 +350,0 @@\n-            } else if (c == '\\t' && tabs.defined()) {\n-                insertTab(current);\n@@ -344,5 +351,11 @@\n-                ensureCapacity(length + 1);\n-                buffer[length] = c;\n-                style[length] = this.current.getStyle();\n-                if (c == '\\n') {\n-                    lastLineLength = 0;\n+                if (ansiState >= 1) {\n+                    ensureCapacity(length + 1);\n+                    buffer[length++] = 27;\n+                    if (ansiState >= 2) {\n+                        ensureCapacity(length + 1);\n+                        buffer[length++] = '[';\n+                    }\n+                    ansiState = 0;\n+                }\n+                if (c == '\\t' && tabs.defined()) {\n+                    insertTab(current);\n@@ -350,1 +363,53 @@\n-                    lastLineLength++;\n+                    ensureCapacity(length + 1);\n+                    if (inAltCharset) {\n+                        switch (c) {\n+                            case 'j':\n+                                c = '\\u2518';\n+                                break;\n+                            case 'k':\n+                                c = '\\u2510';\n+                                break;\n+                            case 'l':\n+                                c = '\\u250C';\n+                                break;\n+                            case 'm':\n+                                c = '\\u2514';\n+                                break;\n+                            case 'n':\n+                                c = '\\u253C';\n+                                break;\n+                            case 'q':\n+                                c = '\\u2500';\n+                                break;\n+                            case 't':\n+                                c = '\\u251C';\n+                                break;\n+                            case 'u':\n+                                c = '\\u2524';\n+                                break;\n+                            case 'v':\n+                                c = '\\u2534';\n+                                break;\n+                            case 'w':\n+                                c = '\\u252C';\n+                                break;\n+                            case 'x':\n+                                c = '\\u2502';\n+                                break;\n+                        }\n+                    }\n+                    buffer[length] = c;\n+                    style[length] = this.current.getStyle();\n+                    if (c == '\\n') {\n+                        lastLineLength = 0;\n+                    } else {\n+                        lastLineLength++;\n+                    }\n+                    length++;\n+                    if (altIn != null && altOut != null) {\n+                        char[] alt = inAltCharset ? altOut : altIn;\n+                        if (equals(buffer, length - alt.length, alt, 0, alt.length)) {\n+                            inAltCharset = !inAltCharset;\n+                            length -= alt.length;\n+                        }\n+                    }\n@@ -352,1 +417,0 @@\n-                length++;\n@@ -358,0 +422,12 @@\n+    private static boolean equals(char[] a, int aFromIndex, char[] b, int bFromIndex, int length) {\n+        if (aFromIndex < 0 || bFromIndex < 0 || aFromIndex + length > a.length || bFromIndex + length > b.length) {\n+            return false;\n+        }\n+        for (int i = 0; i < length; i++) {\n+            if (a[aFromIndex + i] != b[bFromIndex + i]) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n@@ -396,0 +472,9 @@\n+    public AttributedStringBuilder altCharset(String altIn, String altOut) {\n+        if (length > 0) {\n+            throw new IllegalStateException(\"Cannot change alternative charset after appending text\");\n+        }\n+        this.altIn = altIn != null ? altIn.toCharArray() : null;\n+        this.altOut = altOut != null ? altOut.toCharArray() : null;\n+        return this;\n+    }\n+\n@@ -419,1 +504,1 @@\n-    private class TabStops {\n+    private static class TabStops {\n@@ -431,1 +516,1 @@\n-            for (int s: tabs) {\n+            for (int s : tabs) {\n@@ -450,1 +535,1 @@\n-                for (int s: tabs) {\n+                for (int s : tabs) {\n@@ -459,1 +544,0 @@\n-\n@@ -461,1 +545,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/AttributedStringBuilder.java","additions":105,"deletions":22,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2021, the original author or authors.\n+ * Copyright (c) 2002-2021, the original author(s).\n@@ -18,33 +18,33 @@\n-    public static final int BLACK =     0;\n-    public static final int RED =       1;\n-    public static final int GREEN =     2;\n-    public static final int YELLOW =    3;\n-    public static final int BLUE =      4;\n-    public static final int MAGENTA =   5;\n-    public static final int CYAN =      6;\n-    public static final int WHITE =     7;\n-\n-    public static final int BRIGHT =    8;\n-\n-    static final long F_BOLD            = 0x00000001;\n-    static final long F_FAINT           = 0x00000002;\n-    static final long F_ITALIC          = 0x00000004;\n-    static final long F_UNDERLINE       = 0x00000008;\n-    static final long F_BLINK           = 0x00000010;\n-    static final long F_INVERSE         = 0x00000020;\n-    static final long F_CONCEAL         = 0x00000040;\n-    static final long F_CROSSED_OUT     = 0x00000080;\n-    static final long F_FOREGROUND_IND  = 0x00000100;\n-    static final long F_FOREGROUND_RGB  = 0x00000200;\n-    static final long F_FOREGROUND      = F_FOREGROUND_IND | F_FOREGROUND_RGB;\n-    static final long F_BACKGROUND_IND  = 0x00000400;\n-    static final long F_BACKGROUND_RGB  = 0x00000800;\n-    static final long F_BACKGROUND      = F_BACKGROUND_IND | F_BACKGROUND_RGB;\n-    static final long F_HIDDEN          = 0x00001000;\n-\n-    static final long MASK           = 0x00001FFF;\n-\n-    static final int FG_COLOR_EXP    = 15;\n-    static final int BG_COLOR_EXP    = 39;\n-    static final long FG_COLOR        = 0xFFFFFFL << FG_COLOR_EXP;\n-    static final long BG_COLOR        = 0xFFFFFFL << BG_COLOR_EXP;\n+    public static final int BLACK = 0;\n+    public static final int RED = 1;\n+    public static final int GREEN = 2;\n+    public static final int YELLOW = 3;\n+    public static final int BLUE = 4;\n+    public static final int MAGENTA = 5;\n+    public static final int CYAN = 6;\n+    public static final int WHITE = 7;\n+\n+    public static final int BRIGHT = 8;\n+\n+    static final long F_BOLD = 0x00000001;\n+    static final long F_FAINT = 0x00000002;\n+    static final long F_ITALIC = 0x00000004;\n+    static final long F_UNDERLINE = 0x00000008;\n+    static final long F_BLINK = 0x00000010;\n+    static final long F_INVERSE = 0x00000020;\n+    static final long F_CONCEAL = 0x00000040;\n+    static final long F_CROSSED_OUT = 0x00000080;\n+    static final long F_FOREGROUND_IND = 0x00000100;\n+    static final long F_FOREGROUND_RGB = 0x00000200;\n+    static final long F_FOREGROUND = F_FOREGROUND_IND | F_FOREGROUND_RGB;\n+    static final long F_BACKGROUND_IND = 0x00000400;\n+    static final long F_BACKGROUND_RGB = 0x00000800;\n+    static final long F_BACKGROUND = F_BACKGROUND_IND | F_BACKGROUND_RGB;\n+    static final long F_HIDDEN = 0x00001000;\n+\n+    static final long MASK = 0x00001FFF;\n+\n+    static final int FG_COLOR_EXP = 15;\n+    static final int BG_COLOR_EXP = 39;\n+    static final long FG_COLOR = 0xFFFFFFL << FG_COLOR_EXP;\n+    static final long BG_COLOR = 0xFFFFFFL << BG_COLOR_EXP;\n@@ -73,2 +73,3 @@\n-        this.mask = mask & MASK | ((style & F_FOREGROUND) != 0 ? FG_COLOR : 0)\n-                                | ((style & F_BACKGROUND) != 0 ? BG_COLOR : 0);\n+        this.mask = mask & MASK\n+                | ((style & F_FOREGROUND) != 0 ? FG_COLOR : 0)\n+                | ((style & F_BACKGROUND) != 0 ? BG_COLOR : 0);\n@@ -179,1 +180,3 @@\n-        return new AttributedStyle(style & ~FG_COLOR | F_FOREGROUND_IND | (((long) color << FG_COLOR_EXP) & FG_COLOR), mask | F_FOREGROUND_IND);\n+        return new AttributedStyle(\n+                style & ~FG_COLOR | F_FOREGROUND_IND | (((long) color << FG_COLOR_EXP) & FG_COLOR),\n+                mask | F_FOREGROUND_IND);\n@@ -187,1 +190,3 @@\n-        return new AttributedStyle(style & ~FG_COLOR | F_FOREGROUND_RGB | ((((long) color & 0xFFFFFF) << FG_COLOR_EXP) & FG_COLOR), mask | F_FOREGROUND_RGB);\n+        return new AttributedStyle(\n+                style & ~FG_COLOR | F_FOREGROUND_RGB | ((((long) color & 0xFFFFFF) << FG_COLOR_EXP) & FG_COLOR),\n+                mask | F_FOREGROUND_RGB);\n@@ -199,1 +204,3 @@\n-        return new AttributedStyle(style & ~BG_COLOR | F_BACKGROUND_IND | (((long) color << BG_COLOR_EXP) & BG_COLOR), mask | F_BACKGROUND_IND);\n+        return new AttributedStyle(\n+                style & ~BG_COLOR | F_BACKGROUND_IND | (((long) color << BG_COLOR_EXP) & BG_COLOR),\n+                mask | F_BACKGROUND_IND);\n@@ -207,1 +214,3 @@\n-        return new AttributedStyle(style & ~BG_COLOR | F_BACKGROUND_RGB | ((((long) color & 0xFFFFFF) << BG_COLOR_EXP) & BG_COLOR), mask | F_BACKGROUND_RGB);\n+        return new AttributedStyle(\n+                style & ~BG_COLOR | F_BACKGROUND_RGB | ((((long) color & 0xFFFFFF) << BG_COLOR_EXP) & BG_COLOR),\n+                mask | F_BACKGROUND_RGB);\n@@ -252,1 +261,0 @@\n-\n@@ -269,5 +277,1 @@\n-        return \"AttributedStyle{\" +\n-                \"style=\" + style +\n-                \", mask=\" + mask +\n-                \", ansi=\" + toAnsi() +\n-                '}';\n+        return \"AttributedStyle{\" + \"style=\" + style + \", mask=\" + mask + \", ansi=\" + toAnsi() + '}';\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/AttributedStyle.java","additions":50,"deletions":46,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -17,2 +17,1 @@\n-    public ClosedException() {\n-    }\n+    public ClosedException() {}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/ClosedException.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2020, the original author or authors.\n+ * Copyright (c) 2002-2020, the original author(s).\n@@ -24,1 +24,2 @@\n-    public static final String XTERM_INITC = \"\\\\E]4;%p1%d;rgb\\\\:%p2%{255}%*%{1000}%\/%2.2X\/%p3%{255}%*%{1000}%\/%2.2X\/%p4%{255}%*%{1000}%\/%2.2X\\\\E\\\\\\\\\";\n+    public static final String XTERM_INITC =\n+            \"\\\\E]4;%p1%d;rgb\\\\:%p2%{255}%*%{1000}%\/%2.2X\/%p3%{255}%*%{1000}%\/%2.2X\/%p4%{255}%*%{1000}%\/%2.2X\\\\E\\\\\\\\\";\n@@ -44,0 +45,1 @@\n+    @SuppressWarnings(\"this-escape\")\n@@ -248,4 +250,7 @@\n-                double r = Integer.parseInt(rgb.get(0), 16) \/ ((1 << (4 * rgb.get(0).length())) - 1.0);\n-                double g = Integer.parseInt(rgb.get(1), 16) \/ ((1 << (4 * rgb.get(1).length())) - 1.0);\n-                double b = Integer.parseInt(rgb.get(2), 16) \/ ((1 << (4 * rgb.get(2).length())) - 1.0);\n-                palette[idx] = (int)((Math.round(r * 255) << 16) + (Math.round(g * 255) << 8) + Math.round(b * 255));\n+                double r = Integer.parseInt(rgb.get(0), 16)\n+                        \/ ((1 << (4 * rgb.get(0).length())) - 1.0);\n+                double g = Integer.parseInt(rgb.get(1), 16)\n+                        \/ ((1 << (4 * rgb.get(1).length())) - 1.0);\n+                double b = Integer.parseInt(rgb.get(2), 16)\n+                        \/ ((1 << (4 * rgb.get(2).length())) - 1.0);\n+                palette[idx] = (int) ((Math.round(r * 255) << 16) + (Math.round(g * 255) << 8) + Math.round(b * 255));\n@@ -259,1 +264,2 @@\n-        while (max > 0 && palette[--max] == 0);\n+        while (max > 0 && palette[--max] == 0)\n+            ;\n@@ -262,0 +268,5 @@\n+\n+    @Override\n+    public String toString() {\n+        return \"ColorPalette[\" + \"length=\" + getLength() + \", \" + \"distance='\" + getDist() + \"\\']\";\n+    }\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/ColorPalette.java","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -24,0 +24,2 @@\n+    \/\/ @spotless:off\n+\n@@ -114,0 +116,2 @@\n+    \/\/ @spotless:on\n+\n@@ -115,1 +119,1 @@\n-    public static final double[] D50 = new double[] { 96.422f, 100.0f,  82.521f };\n+    public static final double[] D50 = new double[] {96.422f, 100.0f, 82.521f};\n@@ -117,1 +121,1 @@\n-    public static final double[] D65 = new double[] { 95.047, 100.0, 108.883 };\n+    public static final double[] D65 = new double[] {95.047, 100.0, 108.883};\n@@ -120,1 +124,1 @@\n-    public static final double[] averageSurrounding = new double[] { 1.0, 0.690, 1.0 };\n+    public static final double[] averageSurrounding = new double[] {1.0, 0.690, 1.0};\n@@ -122,1 +126,1 @@\n-    public static final double[] dimSurrounding =     new double[] { 0.9, 0.590, 0.9 };\n+    public static final double[] dimSurrounding = new double[] {0.9, 0.590, 0.9};\n@@ -124,1 +128,1 @@\n-    public static final double[] darkSurrounding =    new double[] { 0.8, 0.525, 0.8 };\n+    public static final double[] darkSurrounding = new double[] {0.8, 0.525, 0.8};\n@@ -127,1 +131,1 @@\n-    public static final double[] sRGB_encoding_environment = vc(D50,  64.0,  64.0\/5, dimSurrounding);\n+    public static final double[] sRGB_encoding_environment = vc(D50, 64.0, 64.0 \/ 5, dimSurrounding);\n@@ -129,1 +133,1 @@\n-    public static final double[] sRGB_typical_environment  = vc(D50, 200.0, 200.0\/5, averageSurrounding);\n+    public static final double[] sRGB_typical_environment = vc(D50, 200.0, 200.0 \/ 5, averageSurrounding);\n@@ -131,1 +135,1 @@\n-    public static final double[] AdobeRGB_environment      = vc(D65, 160.0, 160.0\/5, averageSurrounding);\n+    public static final double[] AdobeRGB_environment = vc(D65, 160.0, 160.0 \/ 5, averageSurrounding);\n@@ -152,2 +156,3 @@\n-                 BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))) {\n-                br.lines().map(String::trim)\n+                    BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))) {\n+                br.lines()\n+                        .map(String::trim)\n@@ -209,1 +214,1 @@\n-        return doGetDistance(dist);\n+        return new NamedDistance(dist, doGetDistance(dist));\n@@ -219,1 +224,1 @@\n-                double[] w = { 2.0 + rmean, 4.0, 3.0 - rmean };\n+                double[] w = {2.0 + rmean, 4.0, 3.0 - rmean};\n@@ -231,1 +236,1 @@\n-            return (p1, p2) -> scalar(rgb2cielab(p1), rgb2cielab(p2), new double[] { w[0], w[1], w[1] });\n+            return (p1, p2) -> scalar(rgb2cielab(p1), rgb2cielab(p2), new double[] {w[0], w[1], w[1]});\n@@ -254,1 +259,1 @@\n-                return scalar(c1, c2, new double[] { w[0], w[1], w[1] });\n+                return scalar(c1, c2, new double[] {w[0], w[1], w[1]});\n@@ -276,1 +281,2 @@\n-        String[] weights = dist.substring(dist.indexOf('(') + 1, dist.length() - 1).split(\",\");\n+        String[] weights =\n+                dist.substring(dist.indexOf('(') + 1, dist.length() - 1).split(\",\");\n@@ -281,3 +287,1 @@\n-        return sqr((c1[0] - c2[0]) * w[0])\n-             + sqr((c1[1] - c2[1]) * w[1])\n-             + sqr((c1[2] - c2[2]) * w[2]);\n+        return sqr((c1[0] - c2[0]) * w[0]) + sqr((c1[1] - c2[1]) * w[1]) + sqr((c1[2] - c2[2]) * w[2]);\n@@ -287,3 +291,21 @@\n-        return sqr(c1[0] - c2[0])\n-             + sqr(c1[1] - c2[1])\n-             + sqr(c1[2] - c2[2]);\n+        return sqr(c1[0] - c2[0]) + sqr(c1[1] - c2[1]) + sqr(c1[2] - c2[2]);\n+    }\n+\n+    private static class NamedDistance implements Distance {\n+        private final String name;\n+        private final Distance delegate;\n+\n+        public NamedDistance(String name, Distance delegate) {\n+            this.name = name;\n+            this.delegate = delegate;\n+        }\n+\n+        @Override\n+        public double compute(int c1, int c2) {\n+            return delegate.compute(c1, c2);\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return name;\n+        }\n@@ -328,1 +350,1 @@\n-        double G = 0.5 * (1.0 - Math.sqrt(c_star_average_ab_pot_7 \/ (c_star_average_ab_pot_7 + 6103515625.0))); \/\/25^7\n+        double G = 0.5 * (1.0 - Math.sqrt(c_star_average_ab_pot_7 \/ (c_star_average_ab_pot_7 + 6103515625.0))); \/\/ 25^7\n@@ -368,1 +390,2 @@\n-        double S_L = 1.0 + ((0.015 * L_prime_average_minus_50_square) \/ Math.sqrt(20.0 + L_prime_average_minus_50_square));\n+        double S_L =\n+                1.0 + ((0.015 * L_prime_average_minus_50_square) \/ Math.sqrt(20.0 + L_prime_average_minus_50_square));\n@@ -372,1 +395,2 @@\n-        double h_prime_average_minus_275_div_25_square = h_prime_average_minus_275_div_25 * h_prime_average_minus_275_div_25;\n+        double h_prime_average_minus_275_div_25_square =\n+                h_prime_average_minus_275_div_25 * h_prime_average_minus_275_div_25;\n@@ -376,2 +400,2 @@\n-        double R_C = 2.0 * Math.sqrt(C_prime_average_pot_7 \/ (C_prime_average_pot_7 + 6103515625.0)); \/\/25^7\n-        double R_T = - Math.sin(Math.toRadians(2.0 * delta_theta)) * R_C;\n+        double R_C = 2.0 * Math.sqrt(C_prime_average_pot_7 \/ (C_prime_average_pot_7 + 6103515625.0)); \/\/ 25^7\n+        double R_T = -Math.sin(Math.toRadians(2.0 * delta_theta)) * R_C;\n@@ -395,1 +419,1 @@\n-        return new double[] {sJ, a, b };\n+        return new double[] {sJ, a, b};\n@@ -399,1 +423,1 @@\n-        return camlch(c1, c2, new double[] { 1.0, 1.0, 1.0 });\n+        return camlch(c1, c2, new double[] {1.0, 1.0, 1.0});\n@@ -417,4 +441,2 @@\n-        if (difference > ch)\n-            difference -= c;\n-        if (difference < -ch)\n-            difference += c;\n+        if (difference > ch) difference -= c;\n+        if (difference < -ch) difference += c;\n@@ -426,3 +448,3 @@\n-        int g = (color >>  8) & 0xFF;\n-        int b = (color >>  0) & 0xFF;\n-        return new double[] { r \/ 255.0, g \/ 255.0, b \/ 255.0 };\n+        int g = (color >> 8) & 0xFF;\n+        int b = (color >> 0) & 0xFF;\n+        return new double[] {r \/ 255.0, g \/ 255.0, b \/ 255.0};\n@@ -457,1 +479,1 @@\n-        return new double[] { lch[0], lch[1] * Math.cos(lch[2] * toRad), lch[1] * Math.sin(lch[2] * toRad) };\n+        return new double[] {lch[0], lch[1] * Math.cos(lch[2] * toRad), lch[1] * Math.sin(lch[2] * toRad)};\n@@ -463,1 +485,1 @@\n-        return new double[] { cam[J], cam[M], cam[h] };\n+        return new double[] {cam[J], cam[M], cam[h]};\n@@ -481,1 +503,0 @@\n-\n@@ -486,1 +507,2 @@\n-        \/\/ calculate corresponding (sharpened) cone response considering various luminance level and surround conditions in D\n+        \/\/ calculate corresponding (sharpened) cone response considering various luminance level and surround conditions\n+        \/\/ in D\n@@ -504,1 +526,3 @@\n-        double t = e * Math.sqrt(Math.pow(a, 2.0) + Math.pow(b, 2.0)) \/ (RGBPrime_a[0] + RGBPrime_a[1] + 1.05 * RGBPrime_a[2]);\n+        double t = e\n+                * Math.sqrt(Math.pow(a, 2.0) + Math.pow(b, 2.0))\n+                \/ (RGBPrime_a[0] + RGBPrime_a[1] + 1.05 * RGBPrime_a[2]);\n@@ -508,1 +532,4 @@\n-        double C = Math.signum(t) * Math.pow(Math.abs(t), 0.9) * Math.sqrt(J \/ 100.0) * Math.pow(1.64- Math.pow(0.29, vc[VC_N]), 0.73);\n+        double C = Math.signum(t)\n+                * Math.pow(Math.abs(t), 0.9)\n+                * Math.sqrt(J \/ 100.0)\n+                * Math.pow(1.64 - Math.pow(0.29, vc[VC_N]), 0.73);\n@@ -513,1 +540,1 @@\n-        return new double[] { J, Q, C, M, s, H, h };\n+        return new double[] {J, Q, C, M, s, H, h};\n@@ -517,2 +544,1 @@\n-        if (h < 20.14)\n-            h = h + 360;\n+        if (h < 20.14) h = h + 360;\n@@ -520,1 +546,1 @@\n-        if (h >= 20.14 && h < 90.0) {  \/\/ index i = 1\n+        if (h >= 20.14 && h < 90.0) { \/\/ index i = 1\n@@ -526,1 +552,1 @@\n-        } else if (h < 237.53) {  \/\/ index i = 3\n+        } else if (h < 237.53) { \/\/ index i = 3\n@@ -529,1 +555,1 @@\n-        } else if (h <= 380.14) {  \/\/ index i = 4\n+        } else if (h <= 380.14) { \/\/ index i = 4\n@@ -533,2 +559,1 @@\n-            if (H <= 400.0 && H >= 399.999)\n-                H = 0;\n+            if (H <= 400.0 && H >= 399.999) H = 0;\n@@ -543,2 +568,2 @@\n-        for(int channel = 0; channel < RGB.length; channel++) {\n-            if(RGB[channel] >= 0) {\n+        for (int channel = 0; channel < RGB.length; channel++) {\n+            if (RGB[channel] >= 0) {\n@@ -556,1 +581,1 @@\n-        return new double[] { vc[VC_D_RGB_R] * RGB[0], vc[VC_D_RGB_G] * RGB[1], vc[VC_D_RGB_B] * RGB[2] };\n+        return new double[] {vc[VC_D_RGB_R] * RGB[0], vc[VC_D_RGB_G] * RGB[1], vc[VC_D_RGB_B] * RGB[2]};\n@@ -561,2 +586,2 @@\n-        RGBPrime[0] =  0.7409792 * RGB[0] + 0.2180250 * RGB[1] + 0.0410058 * RGB[2];\n-        RGBPrime[1] =  0.2853532 * RGB[0] + 0.6242014 * RGB[1] + 0.0904454 * RGB[2];\n+        RGBPrime[0] = 0.7409792 * RGB[0] + 0.2180250 * RGB[1] + 0.0410058 * RGB[2];\n+        RGBPrime[1] = 0.2853532 * RGB[0] + 0.6242014 * RGB[1] + 0.0904454 * RGB[2];\n@@ -569,1 +594,1 @@\n-        RGB[0] =  0.7328 * XYZ[0] + 0.4296 * XYZ[1] - 0.1624 * XYZ[2];\n+        RGB[0] = 0.7328 * XYZ[0] + 0.4296 * XYZ[1] - 0.1624 * XYZ[2];\n@@ -571,1 +596,1 @@\n-        RGB[2] =  0.0030 * XYZ[0] + 0.0136 * XYZ[1] + 0.9834 * XYZ[2];\n+        RGB[2] = 0.0030 * XYZ[0] + 0.0136 * XYZ[1] + 0.9834 * XYZ[2];\n@@ -584,2 +609,2 @@\n-    static final int VC_F =   5;\n-    static final int VC_C =   6;\n+    static final int VC_F = 5;\n+    static final int VC_C = 6;\n@@ -610,1 +635,2 @@\n-        double D = Math.max(0.0, Math.min(1.0, vc[VC_F] * (1.0 - (1.0 \/ 3.6) * Math.pow(Math.E, (-L_A - 42.0) \/ 92.0))));\n+        double D =\n+                Math.max(0.0, Math.min(1.0, vc[VC_F] * (1.0 - (1.0 \/ 3.6) * Math.pow(Math.E, (-L_A - 42.0) \/ 92.0))));\n@@ -613,3 +639,1 @@\n-                (D * Yw \/ RGB_w[0]) + (1.0 - D),\n-                (D * Yw \/ RGB_w[1]) + (1.0 - D),\n-                (D * Yw \/ RGB_w[2]) + (1.0 - D),\n+            (D * Yw \/ RGB_w[0]) + (1.0 - D), (D * Yw \/ RGB_w[1]) + (1.0 - D), (D * Yw \/ RGB_w[2]) + (1.0 - D),\n@@ -622,1 +646,1 @@\n-        vc[VC_F_L] = 0.2 * kpow4 * (L_Ax5) + 0.1 * Math.pow(1.0 - kpow4, 2.0) * Math.pow(L_Ax5, 1.0\/3.0);\n+        vc[VC_F_L] = 0.2 * kpow4 * (L_Ax5) + 0.1 * Math.pow(1.0 - kpow4, 2.0) * Math.pow(L_Ax5, 1.0 \/ 3.0);\n@@ -629,1 +653,2 @@\n-        vc[VC_N_CB] = vc[VC_N_BB]; \/\/ chromatic contrast factors (calculate increase in J, Q, and C caused by dark backgrounds)\n+        vc[VC_N_CB] = vc[\n+                VC_N_BB]; \/\/ chromatic contrast factors (calculate increase in J, Q, and C caused by dark backgrounds)\n@@ -635,2 +660,2 @@\n-        for(int channel = 0; channel < RGBPrime_w.length; channel++) {\n-            if(RGBPrime_w[channel] >= 0) {\n+        for (int channel = 0; channel < RGBPrime_w.length; channel++) {\n+            if (RGBPrime_w[channel] >= 0) {\n@@ -663,1 +688,1 @@\n-        return new double[] { x, y, z };\n+        return new double[] {x, y, z};\n@@ -677,1 +702,1 @@\n-        return new double[] { l, a, b };\n+        return new double[] {l, a, b};\n@@ -682,0 +707,1 @@\n+\n@@ -689,1 +715,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Colors.java","additions":95,"deletions":70,"binary":false,"changes":165,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -32,2 +32,1 @@\n-    private Curses() {\n-    }\n+    private Curses() {}\n@@ -98,3 +97,3 @@\n-\/\/                        case 'l':\n-\/\/                            rawPrint('\\l');\n-\/\/                            break;\n+                                \/\/                        case 'l':\n+                                \/\/                            rawPrint('\\l');\n+                                \/\/                            break;\n@@ -141,1 +140,1 @@\n-                        out.append((char)(ch - '@'));\n+                        out.append((char) (ch - '@'));\n@@ -198,1 +197,2 @@\n-                            while (str.charAt(index++) != '}') ;\n+                            while (str.charAt(index++) != '}')\n+                                ;\n@@ -367,4 +367,12 @@\n-                                    case '-': left = true; break;\n-                                    case '+': plus = true; break;\n-                                    case '#': alternate = true; break;\n-                                    case ' ': space = true; break;\n+                                    case '-':\n+                                        left = true;\n+                                        break;\n+                                    case '+':\n+                                        plus = true;\n+                                        break;\n+                                    case '#':\n+                                        alternate = true;\n+                                        break;\n+                                    case ' ':\n+                                        space = true;\n+                                        break;\n@@ -476,1 +484,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Curses.java","additions":20,"deletions":13,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -28,1 +28,3 @@\n-        DELETE, INSERT, EQUAL\n+        DELETE,\n+        INSERT,\n+        EQUAL\n@@ -89,4 +91,2 @@\n-                if (startHiddenRange < 0)\n-                    startHiddenRange = commonStart;\n-            } else\n-                startHiddenRange = -1;\n+                if (startHiddenRange < 0) startHiddenRange = commonStart;\n+            } else startHiddenRange = -1;\n@@ -96,3 +96,2 @@\n-            && ((l1 > commonStart && text1.isHidden(commonStart))\n-                || (l2 > commonStart && text2.isHidden(commonStart))))\n-            commonStart = startHiddenRange;\n+                && ((l1 > commonStart && text1.isHidden(commonStart))\n+                        || (l2 > commonStart && text2.isHidden(commonStart)))) commonStart = startHiddenRange;\n@@ -106,4 +105,2 @@\n-                if (startHiddenRange < 0)\n-                    startHiddenRange = commonEnd;\n-            } else\n-                startHiddenRange = -1;\n+                if (startHiddenRange < 0) startHiddenRange = commonEnd;\n+            } else startHiddenRange = -1;\n@@ -112,2 +109,1 @@\n-        if (startHiddenRange >= 0)\n-            commonEnd = startHiddenRange;\n+        if (startHiddenRange >= 0) commonEnd = startHiddenRange;\n@@ -116,2 +112,1 @@\n-            diffs.add(new Diff(DiffHelper.Operation.EQUAL,\n-                    text1.subSequence(0, commonStart)));\n+            diffs.add(new Diff(DiffHelper.Operation.EQUAL, text1.subSequence(0, commonStart)));\n@@ -120,2 +115,1 @@\n-            diffs.add(new Diff(DiffHelper.Operation.INSERT,\n-                    text2.subSequence(commonStart, l2 - commonEnd)));\n+            diffs.add(new Diff(DiffHelper.Operation.INSERT, text2.subSequence(commonStart, l2 - commonEnd)));\n@@ -124,2 +118,1 @@\n-            diffs.add(new Diff(DiffHelper.Operation.DELETE,\n-                    text1.subSequence(commonStart, l1 - commonEnd)));\n+            diffs.add(new Diff(DiffHelper.Operation.DELETE, text1.subSequence(commonStart, l1 - commonEnd)));\n@@ -128,2 +121,1 @@\n-            diffs.add(new Diff(DiffHelper.Operation.EQUAL,\n-                    text1.subSequence(l1 - commonEnd, l1)));\n+            diffs.add(new Diff(DiffHelper.Operation.EQUAL, text1.subSequence(l1 - commonEnd, l1)));\n@@ -133,1 +125,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/DiffHelper.java","additions":15,"deletions":24,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2020, the original author or authors.\n+ * Copyright (c) 2002-2020, the original author(s).\n@@ -40,2 +40,2 @@\n-    private int columns;\n-    private int columns1; \/\/ columns+1\n+    protected int columns;\n+    protected int columns1; \/\/ columns+1\n@@ -52,0 +52,1 @@\n+    @SuppressWarnings(\"this-escape\")\n@@ -57,1 +58,1 @@\n-                            && can(Capability.delete_line, Capability.parm_delete_line);\n+                && can(Capability.delete_line, Capability.parm_delete_line);\n@@ -59,2 +60,1 @@\n-        this.delayedWrapAtEol = this.wrapAtEol\n-            && terminal.getBooleanCapability(Capability.eat_newline_glitch);\n+        this.delayedWrapAtEol = this.wrapAtEol && terminal.getBooleanCapability(Capability.eat_newline_glitch);\n@@ -72,1 +72,4 @@\n-    public void setDelayLineWrap(boolean v) { delayLineWrap = v; }\n+\n+    public void setDelayLineWrap(boolean v) {\n+        delayLineWrap = v;\n+    }\n@@ -76,1 +79,1 @@\n-            columns = Integer.MAX_VALUE - 1;\n+            columns = 1;\n@@ -83,1 +86,2 @@\n-            oldLines = AttributedString.join(AttributedString.EMPTY, oldLines).columnSplitLength(columns, true, delayLineWrap());\n+            oldLines = AttributedString.join(AttributedString.EMPTY, oldLines)\n+                    .columnSplitLength(columns, true, delayLineWrap());\n@@ -131,1 +135,2 @@\n-            newLines = newLines.stream().map(s -> new AttributedString(s.toString()))\n+            newLines = newLines.stream()\n+                    .map(s -> new AttributedString(s.toString()))\n@@ -141,2 +146,1 @@\n-            while (nbHeaders < l\n-                   && Objects.equals(newLines.get(nbHeaders), oldLines.get(nbHeaders))) {\n+            while (nbHeaders < l && Objects.equals(newLines.get(nbHeaders), oldLines.get(nbHeaders))) {\n@@ -146,1 +150,3 @@\n-                    && Objects.equals(newLines.get(newLines.size() - nbFooters - 1), oldLines.get(oldLines.size() - nbFooters - 1))) {\n+                    && Objects.equals(\n+                            newLines.get(newLines.size() - nbFooters - 1),\n+                            oldLines.get(oldLines.size() - nbFooters - 1))) {\n@@ -193,6 +199,2 @@\n-            AttributedString oldLine =\n-                lineIndex < oldLines.size() ? oldLines.get(lineIndex)\n-                : AttributedString.NEWLINE;\n-            AttributedString newLine =\n-                 lineIndex < newLines.size() ? newLines.get(lineIndex)\n-                : AttributedString.NEWLINE;\n+            AttributedString oldLine = lineIndex < oldLines.size() ? oldLines.get(lineIndex) : AttributedString.NEWLINE;\n+            AttributedString newLine = lineIndex < newLines.size() ? newLines.get(lineIndex) : AttributedString.NEWLINE;\n@@ -203,2 +205,2 @@\n-            boolean oldNL = oldLength > 0 && oldLine.charAt(oldLength-1)=='\\n';\n-            boolean newNL = newLength > 0 && newLine.charAt(newLength-1)=='\\n';\n+            boolean oldNL = oldLength > 0 && oldLine.charAt(oldLength - 1) == '\\n';\n+            boolean newNL = newLength > 0 && newLine.charAt(newLength - 1) == '\\n';\n@@ -213,3 +215,1 @@\n-            if (wrapNeeded\n-                && lineIndex == (cursorPos + 1) \/ columns1\n-                && lineIndex < newLines.size()) {\n+            if (wrapNeeded && lineIndex == (cursorPos + 1) \/ columns1 && lineIndex < newLines.size()) {\n@@ -253,2 +253,1 @@\n-                        if (i <= diffs.size() - 2\n-                                && diffs.get(i + 1).operation == DiffHelper.Operation.EQUAL) {\n+                        if (i <= diffs.size() - 2 && diffs.get(i + 1).operation == DiffHelper.Operation.EQUAL) {\n@@ -285,2 +284,1 @@\n-                        if (i <= diffs.size() - 2\n-                                && diffs.get(i + 1).operation == DiffHelper.Operation.EQUAL) {\n+                        if (i <= diffs.size() - 2 && diffs.get(i + 1).operation == DiffHelper.Operation.EQUAL) {\n@@ -308,4 +306,2 @@\n-            boolean newWrap = ! newNL && lineIndex < newLines.size();\n-            if (targetCursorPos + 1 == lineIndex * columns1\n-                && (newWrap || ! delayLineWrap))\n-                targetCursorPos++;\n+            boolean newWrap = !newNL && lineIndex < newLines.size();\n+            if (targetCursorPos + 1 == lineIndex * columns1 && (newWrap || !delayLineWrap)) targetCursorPos++;\n@@ -315,7 +311,5 @@\n-                boolean oldWrap = ! oldNL && lineIndex < oldLines.size();\n-                if (newWrap != oldWrap && ! (oldWrap && cleared)) {\n-                    moveVisualCursorTo(lineIndex*columns1-1, newLines);\n-                    if (newWrap)\n-                        wrapNeeded = true;\n-                    else\n-                        terminal.puts(Capability.clr_eol);\n+                boolean oldWrap = !oldNL && lineIndex < oldLines.size();\n+                if (newWrap != oldWrap && !(oldWrap && cleared)) {\n+                    moveVisualCursorTo(lineIndex * columns1 - 1, newLines);\n+                    if (newWrap) wrapNeeded = true;\n+                    else terminal.puts(Capability.clr_eol);\n@@ -325,2 +319,4 @@\n-                    terminal.writer().write(\" \\b\");\n-                    cursorPos++;\n+                    if (!fullScreen || (fullScreen && lineIndex < numLines)) {\n+                        terminal.writer().write(\" \\b\");\n+                        cursorPos++;\n+                    }\n@@ -361,2 +357,1 @@\n-        return terminal.getStringCapability(single) != null\n-                || terminal.getStringCapability(multi) != null;\n+        return terminal.getStringCapability(single) != null || terminal.getStringCapability(multi) != null;\n@@ -408,1 +403,1 @@\n-        return max != 0 ? new int[] { start1, start2, max } : null;\n+        return max != 0 ? new int[] {start1, start2, max} : null;\n@@ -416,2 +411,1 @@\n-    protected void moveVisualCursorTo(int targetPos,\n-                                      List<AttributedString> newLines) {\n+    protected void moveVisualCursorTo(int targetPos, List<AttributedString> newLines) {\n@@ -425,6 +419,5 @@\n-                AttributedString lastChar = row >= newLines.size() ? AttributedString.EMPTY\n-                    : newLines.get(row).columnSubSequence(columns-1, columns);\n-                if (lastChar.length() == 0)\n-                    rawPrint((int) ' ');\n-                else\n-                    rawPrint(lastChar);\n+                AttributedString lastChar = row >= newLines.size()\n+                        ? AttributedString.EMPTY\n+                        : newLines.get(row).columnSubSequence(columns - 1, columns);\n+                if (lastChar.length() == 0) rawPrint((int) ' ');\n+                else rawPrint(lastChar);\n@@ -502,1 +495,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Display.java","additions":45,"deletions":53,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -25,2 +25,1 @@\n-    private ExecHelper() {\n-    }\n+    private ExecHelper() {}\n@@ -34,1 +33,1 @@\n-                Map<String,String> env = pb.environment();\n+                Map<String, String> env = pb.environment();\n@@ -93,1 +92,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/ExecHelper.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2009-2023, the original author(s).\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n+package jdk.internal.org.jline.utils;\n+\n+import java.io.FilterOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+\n+\/**\n+ * A simple buffering output stream with no synchronization.\n+ *\/\n+public class FastBufferedOutputStream extends FilterOutputStream {\n+\n+    protected final byte[] buf = new byte[8192];\n+    protected int count;\n+\n+    public FastBufferedOutputStream(OutputStream out) {\n+        super(out);\n+    }\n+\n+    @Override\n+    public void write(int b) throws IOException {\n+        if (count >= buf.length) {\n+            flushBuffer();\n+        }\n+        buf[count++] = (byte) b;\n+    }\n+\n+    @Override\n+    public void write(byte b[], int off, int len) throws IOException {\n+        if (len >= buf.length) {\n+            flushBuffer();\n+            out.write(b, off, len);\n+            return;\n+        }\n+        if (len > buf.length - count) {\n+            flushBuffer();\n+        }\n+        System.arraycopy(b, off, buf, count, len);\n+        count += len;\n+    }\n+\n+    private void flushBuffer() throws IOException {\n+        if (count > 0) {\n+            out.write(buf, 0, count);\n+            count = 0;\n+        }\n+    }\n+\n+    @Override\n+    public void flush() throws IOException {\n+        flushBuffer();\n+        out.flush();\n+    }\n+}\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/FastBufferedOutputStream.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2019, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author(s).\n@@ -31,2 +31,1 @@\n-    private InfoCmp() {\n-    }\n+    private InfoCmp() {}\n@@ -36,465 +35,464 @@\n-\n-        auto_left_margin,           \/\/ auto_left_margin, bw, bw\n-        auto_right_margin,          \/\/ auto_right_margin, am, am\n-        back_color_erase,           \/\/ back_color_erase, bce, ut\n-        can_change,                 \/\/ can_change, ccc, cc\n-        ceol_standout_glitch,       \/\/ ceol_standout_glitch, xhp, xs\n-        col_addr_glitch,            \/\/ col_addr_glitch, xhpa, YA\n-        cpi_changes_res,            \/\/ cpi_changes_res, cpix, YF\n-        cr_cancels_micro_mode,      \/\/ cr_cancels_micro_mode, crxm, YB\n-        dest_tabs_magic_smso,       \/\/ dest_tabs_magic_smso, xt, xt\n-        eat_newline_glitch,         \/\/ eat_newline_glitch, xenl, xn\n-        erase_overstrike,           \/\/ erase_overstrike, eo, eo\n-        generic_type,               \/\/ generic_type, gn, gn\n-        hard_copy,                  \/\/ hard_copy, hc, hc\n-        hard_cursor,                \/\/ hard_cursor, chts, HC\n-        has_meta_key,               \/\/ has_meta_key, km, km\n-        has_print_wheel,            \/\/ has_print_wheel, daisy, YC\n-        has_status_line,            \/\/ has_status_line, hs, hs\n-        hue_lightness_saturation,   \/\/ hue_lightness_saturation, hls, hl\n-        insert_null_glitch,         \/\/ insert_null_glitch, in, in\n-        lpi_changes_res,            \/\/ lpi_changes_res, lpix, YG\n-        memory_above,               \/\/ memory_above, da, da\n-        memory_below,               \/\/ memory_below, db, db\n-        move_insert_mode,           \/\/ move_insert_mode, mir, mi\n-        move_standout_mode,         \/\/ move_standout_mode, msgr, ms\n-        needs_xon_xoff,             \/\/ needs_xon_xoff, nxon, nx\n-        no_esc_ctlc,                \/\/ no_esc_ctlc, xsb, xb\n-        no_pad_char,                \/\/ no_pad_char, npc, NP\n-        non_dest_scroll_region,     \/\/ non_dest_scroll_region, ndscr, ND\n-        non_rev_rmcup,              \/\/ non_rev_rmcup, nrrmc, NR\n-        over_strike,                \/\/ over_strike, os, os\n-        prtr_silent,                \/\/ prtr_silent, mc5i, 5i\n-        row_addr_glitch,            \/\/ row_addr_glitch, xvpa, YD\n-        semi_auto_right_margin,     \/\/ semi_auto_right_margin, sam, YE\n-        status_line_esc_ok,         \/\/ status_line_esc_ok, eslok, es\n-        tilde_glitch,               \/\/ tilde_glitch, hz, hz\n-        transparent_underline,      \/\/ transparent_underline, ul, ul\n-        xon_xoff,                   \/\/ xon_xoff, xon, xo\n-        columns,                    \/\/ columns, cols, co\n-        init_tabs,                  \/\/ init_tabs, it, it\n-        label_height,               \/\/ label_height, lh, lh\n-        label_width,                \/\/ label_width, lw, lw\n-        lines,                      \/\/ lines, lines, li\n-        lines_of_memory,            \/\/ lines_of_memory, lm, lm\n-        magic_cookie_glitch,        \/\/ magic_cookie_glitch, xmc, sg\n-        max_attributes,             \/\/ max_attributes, ma, ma\n-        max_colors,                 \/\/ max_colors, colors, Co\n-        max_pairs,                  \/\/ max_pairs, pairs, pa\n-        maximum_windows,            \/\/ maximum_windows, wnum, MW\n-        no_color_video,             \/\/ no_color_video, ncv, NC\n-        num_labels,                 \/\/ num_labels, nlab, Nl\n-        padding_baud_rate,          \/\/ padding_baud_rate, pb, pb\n-        virtual_terminal,           \/\/ virtual_terminal, vt, vt\n-        width_status_line,          \/\/ width_status_line, wsl, ws\n-        bit_image_entwining,        \/\/ bit_image_entwining, bitwin, Yo\n-        bit_image_type,             \/\/ bit_image_type, bitype, Yp\n-        buffer_capacity,            \/\/ buffer_capacity, bufsz, Ya\n-        buttons,                    \/\/ buttons, btns, BT\n-        dot_horz_spacing,           \/\/ dot_horz_spacing, spinh, Yc\n-        dot_vert_spacing,           \/\/ dot_vert_spacing, spinv, Yb\n-        max_micro_address,          \/\/ max_micro_address, maddr, Yd\n-        max_micro_jump,             \/\/ max_micro_jump, mjump, Ye\n-        micro_col_size,             \/\/ micro_col_size, mcs, Yf\n-        micro_line_size,            \/\/ micro_line_size, mls, Yg\n-        number_of_pins,             \/\/ number_of_pins, npins, Yh\n-        output_res_char,            \/\/ output_res_char, orc, Yi\n-        output_res_horz_inch,       \/\/ output_res_horz_inch, orhi, Yk\n-        output_res_line,            \/\/ output_res_line, orl, Yj\n-        output_res_vert_inch,       \/\/ output_res_vert_inch, orvi, Yl\n-        print_rate,                 \/\/ print_rate, cps, Ym\n-        wide_char_size,             \/\/ wide_char_size, widcs, Yn\n-        acs_chars,                  \/\/ acs_chars, acsc, ac\n-        back_tab,                   \/\/ back_tab, cbt, bt\n-        bell,                       \/\/ bell, bel, bl\n-        carriage_return,            \/\/ carriage_return, cr, cr\n-        change_char_pitch,          \/\/ change_char_pitch, cpi, ZA\n-        change_line_pitch,          \/\/ change_line_pitch, lpi, ZB\n-        change_res_horz,            \/\/ change_res_horz, chr, ZC\n-        change_res_vert,            \/\/ change_res_vert, cvr, ZD\n-        change_scroll_region,       \/\/ change_scroll_region, csr, cs\n-        char_padding,               \/\/ char_padding, rmp, rP\n-        clear_all_tabs,             \/\/ clear_all_tabs, tbc, ct\n-        clear_margins,              \/\/ clear_margins, mgc, MC\n-        clear_screen,               \/\/ clear_screen, clear, cl\n-        clr_bol,                    \/\/ clr_bol, el1, cb\n-        clr_eol,                    \/\/ clr_eol, el, ce\n-        clr_eos,                    \/\/ clr_eos, ed, cd\n-        column_address,             \/\/ column_address, hpa, ch\n-        command_character,          \/\/ command_character, cmdch, CC\n-        create_window,              \/\/ create_window, cwin, CW\n-        cursor_address,             \/\/ cursor_address, cup, cm\n-        cursor_down,                \/\/ cursor_down, cud1, do\n-        cursor_home,                \/\/ cursor_home, home, ho\n-        cursor_invisible,           \/\/ cursor_invisible, civis, vi\n-        cursor_left,                \/\/ cursor_left, cub1, le\n-        cursor_mem_address,         \/\/ cursor_mem_address, mrcup, CM\n-        cursor_normal,              \/\/ cursor_normal, cnorm, ve\n-        cursor_right,               \/\/ cursor_right, cuf1, nd\n-        cursor_to_ll,               \/\/ cursor_to_ll, ll, ll\n-        cursor_up,                  \/\/ cursor_up, cuu1, up\n-        cursor_visible,             \/\/ cursor_visible, cvvis, vs\n-        define_char,                \/\/ define_char, defc, ZE\n-        delete_character,           \/\/ delete_character, dch1, dc\n-        delete_line,                \/\/ delete_line, dl1, dl\n-        dial_phone,                 \/\/ dial_phone, dial, DI\n-        dis_status_line,            \/\/ dis_status_line, dsl, ds\n-        display_clock,              \/\/ display_clock, dclk, DK\n-        down_half_line,             \/\/ down_half_line, hd, hd\n-        ena_acs,                    \/\/ ena_acs, enacs, eA\n-        enter_alt_charset_mode,     \/\/ enter_alt_charset_mode, smacs, as\n-        enter_am_mode,              \/\/ enter_am_mode, smam, SA\n-        enter_blink_mode,           \/\/ enter_blink_mode, blink, mb\n-        enter_bold_mode,            \/\/ enter_bold_mode, bold, md\n-        enter_ca_mode,              \/\/ enter_ca_mode, smcup, ti\n-        enter_delete_mode,          \/\/ enter_delete_mode, smdc, dm\n-        enter_dim_mode,             \/\/ enter_dim_mode, dim, mh\n-        enter_doublewide_mode,      \/\/ enter_doublewide_mode, swidm, ZF\n-        enter_draft_quality,        \/\/ enter_draft_quality, sdrfq, ZG\n-        enter_insert_mode,          \/\/ enter_insert_mode, smir, im\n-        enter_italics_mode,         \/\/ enter_italics_mode, sitm, ZH\n-        enter_leftward_mode,        \/\/ enter_leftward_mode, slm, ZI\n-        enter_micro_mode,           \/\/ enter_micro_mode, smicm, ZJ\n-        enter_near_letter_quality,  \/\/ enter_near_letter_quality, snlq, ZK\n-        enter_normal_quality,       \/\/ enter_normal_quality, snrmq, ZL\n-        enter_protected_mode,       \/\/ enter_protected_mode, prot, mp\n-        enter_reverse_mode,         \/\/ enter_reverse_mode, rev, mr\n-        enter_secure_mode,          \/\/ enter_secure_mode, invis, mk\n-        enter_shadow_mode,          \/\/ enter_shadow_mode, sshm, ZM\n-        enter_standout_mode,        \/\/ enter_standout_mode, smso, so\n-        enter_subscript_mode,       \/\/ enter_subscript_mode, ssubm, ZN\n-        enter_superscript_mode,     \/\/ enter_superscript_mode, ssupm, ZO\n-        enter_underline_mode,       \/\/ enter_underline_mode, smul, us\n-        enter_upward_mode,          \/\/ enter_upward_mode, sum, ZP\n-        enter_xon_mode,             \/\/ enter_xon_mode, smxon, SX\n-        erase_chars,                \/\/ erase_chars, ech, ec\n-        exit_alt_charset_mode,      \/\/ exit_alt_charset_mode, rmacs, ae\n-        exit_am_mode,               \/\/ exit_am_mode, rmam, RA\n-        exit_attribute_mode,        \/\/ exit_attribute_mode, sgr0, me\n-        exit_ca_mode,               \/\/ exit_ca_mode, rmcup, te\n-        exit_delete_mode,           \/\/ exit_delete_mode, rmdc, ed\n-        exit_doublewide_mode,       \/\/ exit_doublewide_mode, rwidm, ZQ\n-        exit_insert_mode,           \/\/ exit_insert_mode, rmir, ei\n-        exit_italics_mode,          \/\/ exit_italics_mode, ritm, ZR\n-        exit_leftward_mode,         \/\/ exit_leftward_mode, rlm, ZS\n-        exit_micro_mode,            \/\/ exit_micro_mode, rmicm, ZT\n-        exit_shadow_mode,           \/\/ exit_shadow_mode, rshm, ZU\n-        exit_standout_mode,         \/\/ exit_standout_mode, rmso, se\n-        exit_subscript_mode,        \/\/ exit_subscript_mode, rsubm, ZV\n-        exit_superscript_mode,      \/\/ exit_superscript_mode, rsupm, ZW\n-        exit_underline_mode,        \/\/ exit_underline_mode, rmul, ue\n-        exit_upward_mode,           \/\/ exit_upward_mode, rum, ZX\n-        exit_xon_mode,              \/\/ exit_xon_mode, rmxon, RX\n-        fixed_pause,                \/\/ fixed_pause, pause, PA\n-        flash_hook,                 \/\/ flash_hook, hook, fh\n-        flash_screen,               \/\/ flash_screen, flash, vb\n-        form_feed,                  \/\/ form_feed, ff, ff\n-        from_status_line,           \/\/ from_status_line, fsl, fs\n-        goto_window,                \/\/ goto_window, wingo, WG\n-        hangup,                     \/\/ hangup, hup, HU\n-        init_1string,               \/\/ init_1string, is1, i1\n-        init_2string,               \/\/ init_2string, is2, is\n-        init_3string,               \/\/ init_3string, is3, i3\n-        init_file,                  \/\/ init_file, if, if\n-        init_prog,                  \/\/ init_prog, iprog, iP\n-        initialize_color,           \/\/ initialize_color, initc, Ic\n-        initialize_pair,            \/\/ initialize_pair, initp, Ip\n-        insert_character,           \/\/ insert_character, ich1, ic\n-        insert_line,                \/\/ insert_line, il1, al\n-        insert_padding,             \/\/ insert_padding, ip, ip\n-        key_a1,                     \/\/ key_a1, ka1, K1\n-        key_a3,                     \/\/ key_a3, ka3, K3\n-        key_b2,                     \/\/ key_b2, kb2, K2\n-        key_backspace,              \/\/ key_backspace, kbs, kb\n-        key_beg,                    \/\/ key_beg, kbeg, @1\n-        key_btab,                   \/\/ key_btab, kcbt, kB\n-        key_c1,                     \/\/ key_c1, kc1, K4\n-        key_c3,                     \/\/ key_c3, kc3, K5\n-        key_cancel,                 \/\/ key_cancel, kcan, @2\n-        key_catab,                  \/\/ key_catab, ktbc, ka\n-        key_clear,                  \/\/ key_clear, kclr, kC\n-        key_close,                  \/\/ key_close, kclo, @3\n-        key_command,                \/\/ key_command, kcmd, @4\n-        key_copy,                   \/\/ key_copy, kcpy, @5\n-        key_create,                 \/\/ key_create, kcrt, @6\n-        key_ctab,                   \/\/ key_ctab, kctab, kt\n-        key_dc,                     \/\/ key_dc, kdch1, kD\n-        key_dl,                     \/\/ key_dl, kdl1, kL\n-        key_down,                   \/\/ key_down, kcud1, kd\n-        key_eic,                    \/\/ key_eic, krmir, kM\n-        key_end,                    \/\/ key_end, kend, @7\n-        key_enter,                  \/\/ key_enter, kent, @8\n-        key_eol,                    \/\/ key_eol, kel, kE\n-        key_eos,                    \/\/ key_eos, ked, kS\n-        key_exit,                   \/\/ key_exit, kext, @9\n-        key_f0,                     \/\/ key_f0, kf0, k0\n-        key_f1,                     \/\/ key_f1, kf1, k1\n-        key_f10,                    \/\/ key_f10, kf10, k;\n-        key_f11,                    \/\/ key_f11, kf11, F1\n-        key_f12,                    \/\/ key_f12, kf12, F2\n-        key_f13,                    \/\/ key_f13, kf13, F3\n-        key_f14,                    \/\/ key_f14, kf14, F4\n-        key_f15,                    \/\/ key_f15, kf15, F5\n-        key_f16,                    \/\/ key_f16, kf16, F6\n-        key_f17,                    \/\/ key_f17, kf17, F7\n-        key_f18,                    \/\/ key_f18, kf18, F8\n-        key_f19,                    \/\/ key_f19, kf19, F9\n-        key_f2,                     \/\/ key_f2, kf2, k2\n-        key_f20,                    \/\/ key_f20, kf20, FA\n-        key_f21,                    \/\/ key_f21, kf21, FB\n-        key_f22,                    \/\/ key_f22, kf22, FC\n-        key_f23,                    \/\/ key_f23, kf23, FD\n-        key_f24,                    \/\/ key_f24, kf24, FE\n-        key_f25,                    \/\/ key_f25, kf25, FF\n-        key_f26,                    \/\/ key_f26, kf26, FG\n-        key_f27,                    \/\/ key_f27, kf27, FH\n-        key_f28,                    \/\/ key_f28, kf28, FI\n-        key_f29,                    \/\/ key_f29, kf29, FJ\n-        key_f3,                     \/\/ key_f3, kf3, k3\n-        key_f30,                    \/\/ key_f30, kf30, FK\n-        key_f31,                    \/\/ key_f31, kf31, FL\n-        key_f32,                    \/\/ key_f32, kf32, FM\n-        key_f33,                    \/\/ key_f33, kf33, FN\n-        key_f34,                    \/\/ key_f34, kf34, FO\n-        key_f35,                    \/\/ key_f35, kf35, FP\n-        key_f36,                    \/\/ key_f36, kf36, FQ\n-        key_f37,                    \/\/ key_f37, kf37, FR\n-        key_f38,                    \/\/ key_f38, kf38, FS\n-        key_f39,                    \/\/ key_f39, kf39, FT\n-        key_f4,                     \/\/ key_f4, kf4, k4\n-        key_f40,                    \/\/ key_f40, kf40, FU\n-        key_f41,                    \/\/ key_f41, kf41, FV\n-        key_f42,                    \/\/ key_f42, kf42, FW\n-        key_f43,                    \/\/ key_f43, kf43, FX\n-        key_f44,                    \/\/ key_f44, kf44, FY\n-        key_f45,                    \/\/ key_f45, kf45, FZ\n-        key_f46,                    \/\/ key_f46, kf46, Fa\n-        key_f47,                    \/\/ key_f47, kf47, Fb\n-        key_f48,                    \/\/ key_f48, kf48, Fc\n-        key_f49,                    \/\/ key_f49, kf49, Fd\n-        key_f5,                     \/\/ key_f5, kf5, k5\n-        key_f50,                    \/\/ key_f50, kf50, Fe\n-        key_f51,                    \/\/ key_f51, kf51, Ff\n-        key_f52,                    \/\/ key_f52, kf52, Fg\n-        key_f53,                    \/\/ key_f53, kf53, Fh\n-        key_f54,                    \/\/ key_f54, kf54, Fi\n-        key_f55,                    \/\/ key_f55, kf55, Fj\n-        key_f56,                    \/\/ key_f56, kf56, Fk\n-        key_f57,                    \/\/ key_f57, kf57, Fl\n-        key_f58,                    \/\/ key_f58, kf58, Fm\n-        key_f59,                    \/\/ key_f59, kf59, Fn\n-        key_f6,                     \/\/ key_f6, kf6, k6\n-        key_f60,                    \/\/ key_f60, kf60, Fo\n-        key_f61,                    \/\/ key_f61, kf61, Fp\n-        key_f62,                    \/\/ key_f62, kf62, Fq\n-        key_f63,                    \/\/ key_f63, kf63, Fr\n-        key_f7,                     \/\/ key_f7, kf7, k7\n-        key_f8,                     \/\/ key_f8, kf8, k8\n-        key_f9,                     \/\/ key_f9, kf9, k9\n-        key_find,                   \/\/ key_find, kfnd, @0\n-        key_help,                   \/\/ key_help, khlp, %1\n-        key_home,                   \/\/ key_home, khome, kh\n-        key_ic,                     \/\/ key_ic, kich1, kI\n-        key_il,                     \/\/ key_il, kil1, kA\n-        key_left,                   \/\/ key_left, kcub1, kl\n-        key_ll,                     \/\/ key_ll, kll, kH\n-        key_mark,                   \/\/ key_mark, kmrk, %2\n-        key_message,                \/\/ key_message, kmsg, %3\n-        key_move,                   \/\/ key_move, kmov, %4\n-        key_next,                   \/\/ key_next, knxt, %5\n-        key_npage,                  \/\/ key_npage, knp, kN\n-        key_open,                   \/\/ key_open, kopn, %6\n-        key_options,                \/\/ key_options, kopt, %7\n-        key_ppage,                  \/\/ key_ppage, kpp, kP\n-        key_previous,               \/\/ key_previous, kprv, %8\n-        key_print,                  \/\/ key_print, kprt, %9\n-        key_redo,                   \/\/ key_redo, krdo, %0\n-        key_reference,              \/\/ key_reference, kref, &1\n-        key_refresh,                \/\/ key_refresh, krfr, &2\n-        key_replace,                \/\/ key_replace, krpl, &3\n-        key_restart,                \/\/ key_restart, krst, &4\n-        key_resume,                 \/\/ key_resume, kres, &5\n-        key_right,                  \/\/ key_right, kcuf1, kr\n-        key_save,                   \/\/ key_save, ksav, &6\n-        key_sbeg,                   \/\/ key_sbeg, kBEG, &9\n-        key_scancel,                \/\/ key_scancel, kCAN, &0\n-        key_scommand,               \/\/ key_scommand, kCMD, *1\n-        key_scopy,                  \/\/ key_scopy, kCPY, *2\n-        key_screate,                \/\/ key_screate, kCRT, *3\n-        key_sdc,                    \/\/ key_sdc, kDC, *4\n-        key_sdl,                    \/\/ key_sdl, kDL, *5\n-        key_select,                 \/\/ key_select, kslt, *6\n-        key_send,                   \/\/ key_send, kEND, *7\n-        key_seol,                   \/\/ key_seol, kEOL, *8\n-        key_sexit,                  \/\/ key_sexit, kEXT, *9\n-        key_sf,                     \/\/ key_sf, kind, kF\n-        key_sfind,                  \/\/ key_sfind, kFND, *0\n-        key_shelp,                  \/\/ key_shelp, kHLP, #1\n-        key_shome,                  \/\/ key_shome, kHOM, #2\n-        key_sic,                    \/\/ key_sic, kIC, #3\n-        key_sleft,                  \/\/ key_sleft, kLFT, #4\n-        key_smessage,               \/\/ key_smessage, kMSG, %a\n-        key_smove,                  \/\/ key_smove, kMOV, %b\n-        key_snext,                  \/\/ key_snext, kNXT, %c\n-        key_soptions,               \/\/ key_soptions, kOPT, %d\n-        key_sprevious,              \/\/ key_sprevious, kPRV, %e\n-        key_sprint,                 \/\/ key_sprint, kPRT, %f\n-        key_sr,                     \/\/ key_sr, kri, kR\n-        key_sredo,                  \/\/ key_sredo, kRDO, %g\n-        key_sreplace,               \/\/ key_sreplace, kRPL, %h\n-        key_sright,                 \/\/ key_sright, kRIT, %i\n-        key_srsume,                 \/\/ key_srsume, kRES, %j\n-        key_ssave,                  \/\/ key_ssave, kSAV, !1\n-        key_ssuspend,               \/\/ key_ssuspend, kSPD, !2\n-        key_stab,                   \/\/ key_stab, khts, kT\n-        key_sundo,                  \/\/ key_sundo, kUND, !3\n-        key_suspend,                \/\/ key_suspend, kspd, &7\n-        key_undo,                   \/\/ key_undo, kund, &8\n-        key_up,                     \/\/ key_up, kcuu1, ku\n-        keypad_local,               \/\/ keypad_local, rmkx, ke\n-        keypad_xmit,                \/\/ keypad_xmit, smkx, ks\n-        lab_f0,                     \/\/ lab_f0, lf0, l0\n-        lab_f1,                     \/\/ lab_f1, lf1, l1\n-        lab_f10,                    \/\/ lab_f10, lf10, la\n-        lab_f2,                     \/\/ lab_f2, lf2, l2\n-        lab_f3,                     \/\/ lab_f3, lf3, l3\n-        lab_f4,                     \/\/ lab_f4, lf4, l4\n-        lab_f5,                     \/\/ lab_f5, lf5, l5\n-        lab_f6,                     \/\/ lab_f6, lf6, l6\n-        lab_f7,                     \/\/ lab_f7, lf7, l7\n-        lab_f8,                     \/\/ lab_f8, lf8, l8\n-        lab_f9,                     \/\/ lab_f9, lf9, l9\n-        label_format,               \/\/ label_format, fln, Lf\n-        label_off,                  \/\/ label_off, rmln, LF\n-        label_on,                   \/\/ label_on, smln, LO\n-        meta_off,                   \/\/ meta_off, rmm, mo\n-        meta_on,                    \/\/ meta_on, smm, mm\n-        micro_column_address,       \/\/ micro_column_address, mhpa, ZY\n-        micro_down,                 \/\/ micro_down, mcud1, ZZ\n-        micro_left,                 \/\/ micro_left, mcub1, Za\n-        micro_right,                \/\/ micro_right, mcuf1, Zb\n-        micro_row_address,          \/\/ micro_row_address, mvpa, Zc\n-        micro_up,                   \/\/ micro_up, mcuu1, Zd\n-        newline,                    \/\/ newline, nel, nw\n-        order_of_pins,              \/\/ order_of_pins, porder, Ze\n-        orig_colors,                \/\/ orig_colors, oc, oc\n-        orig_pair,                  \/\/ orig_pair, op, op\n-        pad_char,                   \/\/ pad_char, pad, pc\n-        parm_dch,                   \/\/ parm_dch, dch, DC\n-        parm_delete_line,           \/\/ parm_delete_line, dl, DL\n-        parm_down_cursor,           \/\/ parm_down_cursor, cud, DO\n-        parm_down_micro,            \/\/ parm_down_micro, mcud, Zf\n-        parm_ich,                   \/\/ parm_ich, ich, IC\n-        parm_index,                 \/\/ parm_index, indn, SF\n-        parm_insert_line,           \/\/ parm_insert_line, il, AL\n-        parm_left_cursor,           \/\/ parm_left_cursor, cub, LE\n-        parm_left_micro,            \/\/ parm_left_micro, mcub, Zg\n-        parm_right_cursor,          \/\/ parm_right_cursor, cuf, RI\n-        parm_right_micro,           \/\/ parm_right_micro, mcuf, Zh\n-        parm_rindex,                \/\/ parm_rindex, rin, SR\n-        parm_up_cursor,             \/\/ parm_up_cursor, cuu, UP\n-        parm_up_micro,              \/\/ parm_up_micro, mcuu, Zi\n-        pkey_key,                   \/\/ pkey_key, pfkey, pk\n-        pkey_local,                 \/\/ pkey_local, pfloc, pl\n-        pkey_xmit,                  \/\/ pkey_xmit, pfx, px\n-        plab_norm,                  \/\/ plab_norm, pln, pn\n-        print_screen,               \/\/ print_screen, mc0, ps\n-        prtr_non,                   \/\/ prtr_non, mc5p, pO\n-        prtr_off,                   \/\/ prtr_off, mc4, pf\n-        prtr_on,                    \/\/ prtr_on, mc5, po\n-        pulse,                      \/\/ pulse, pulse, PU\n-        quick_dial,                 \/\/ quick_dial, qdial, QD\n-        remove_clock,               \/\/ remove_clock, rmclk, RC\n-        repeat_char,                \/\/ repeat_char, rep, rp\n-        req_for_input,              \/\/ req_for_input, rfi, RF\n-        reset_1string,              \/\/ reset_1string, rs1, r1\n-        reset_2string,              \/\/ reset_2string, rs2, r2\n-        reset_3string,              \/\/ reset_3string, rs3, r3\n-        reset_file,                 \/\/ reset_file, rf, rf\n-        restore_cursor,             \/\/ restore_cursor, rc, rc\n-        row_address,                \/\/ row_address, vpa, cv\n-        save_cursor,                \/\/ save_cursor, sc, sc\n-        scroll_forward,             \/\/ scroll_forward, ind, sf\n-        scroll_reverse,             \/\/ scroll_reverse, ri, sr\n-        select_char_set,            \/\/ select_char_set, scs, Zj\n-        set_attributes,             \/\/ set_attributes, sgr, sa\n-        set_background,             \/\/ set_background, setb, Sb\n-        set_bottom_margin,          \/\/ set_bottom_margin, smgb, Zk\n-        set_bottom_margin_parm,     \/\/ set_bottom_margin_parm, smgbp, Zl\n-        set_clock,                  \/\/ set_clock, sclk, SC\n-        set_color_pair,             \/\/ set_color_pair, scp, sp\n-        set_foreground,             \/\/ set_foreground, setf, Sf\n-        set_left_margin,            \/\/ set_left_margin, smgl, ML\n-        set_left_margin_parm,       \/\/ set_left_margin_parm, smglp, Zm\n-        set_right_margin,           \/\/ set_right_margin, smgr, MR\n-        set_right_margin_parm,      \/\/ set_right_margin_parm, smgrp, Zn\n-        set_tab,                    \/\/ set_tab, hts, st\n-        set_top_margin,             \/\/ set_top_margin, smgt, Zo\n-        set_top_margin_parm,        \/\/ set_top_margin_parm, smgtp, Zp\n-        set_window,                 \/\/ set_window, wind, wi\n-        start_bit_image,            \/\/ start_bit_image, sbim, Zq\n-        start_char_set_def,         \/\/ start_char_set_def, scsd, Zr\n-        stop_bit_image,             \/\/ stop_bit_image, rbim, Zs\n-        stop_char_set_def,          \/\/ stop_char_set_def, rcsd, Zt\n-        subscript_characters,       \/\/ subscript_characters, subcs, Zu\n-        superscript_characters,     \/\/ superscript_characters, supcs, Zv\n-        tab,                        \/\/ tab, ht, ta\n-        these_cause_cr,             \/\/ these_cause_cr, docr, Zw\n-        to_status_line,             \/\/ to_status_line, tsl, ts\n-        tone,                       \/\/ tone, tone, TO\n-        underline_char,             \/\/ underline_char, uc, uc\n-        up_half_line,               \/\/ up_half_line, hu, hu\n-        user0,                      \/\/ user0, u0, u0\n-        user1,                      \/\/ user1, u1, u1\n-        user2,                      \/\/ user2, u2, u2\n-        user3,                      \/\/ user3, u3, u3\n-        user4,                      \/\/ user4, u4, u4\n-        user5,                      \/\/ user5, u5, u5\n-        user6,                      \/\/ user6, u6, u6\n-        user7,                      \/\/ user7, u7, u7\n-        user8,                      \/\/ user8, u8, u8\n-        user9,                      \/\/ user9, u9, u9\n-        wait_tone,                  \/\/ wait_tone, wait, WA\n-        xoff_character,             \/\/ xoff_character, xoffc, XF\n-        xon_character,              \/\/ xon_character, xonc, XN\n-        zero_motion,                \/\/ zero_motion, zerom, Zx\n-        alt_scancode_esc,           \/\/ alt_scancode_esc, scesa, S8\n-        bit_image_carriage_return,  \/\/ bit_image_carriage_return, bicr, Yv\n-        bit_image_newline,          \/\/ bit_image_newline, binel, Zz\n-        bit_image_repeat,           \/\/ bit_image_repeat, birep, Xy\n-        char_set_names,             \/\/ char_set_names, csnm, Zy\n-        code_set_init,              \/\/ code_set_init, csin, ci\n-        color_names,                \/\/ color_names, colornm, Yw\n-        define_bit_image_region,    \/\/ define_bit_image_region, defbi, Yx\n-        device_type,                \/\/ device_type, devt, dv\n-        display_pc_char,            \/\/ display_pc_char, dispc, S1\n-        end_bit_image_region,       \/\/ end_bit_image_region, endbi, Yy\n-        enter_pc_charset_mode,      \/\/ enter_pc_charset_mode, smpch, S2\n-        enter_scancode_mode,        \/\/ enter_scancode_mode, smsc, S4\n-        exit_pc_charset_mode,       \/\/ exit_pc_charset_mode, rmpch, S3\n-        exit_scancode_mode,         \/\/ exit_scancode_mode, rmsc, S5\n-        get_mouse,                  \/\/ get_mouse, getm, Gm\n-        key_mouse,                  \/\/ key_mouse, kmous, Km\n-        mouse_info,                 \/\/ mouse_info, minfo, Mi\n-        pc_term_options,            \/\/ pc_term_options, pctrm, S6\n-        pkey_plab,                  \/\/ pkey_plab, pfxl, xl\n-        req_mouse_pos,              \/\/ req_mouse_pos, reqmp, RQ\n-        scancode_escape,            \/\/ scancode_escape, scesc, S7\n-        set0_des_seq,               \/\/ set0_des_seq, s0ds, s0\n-        set1_des_seq,               \/\/ set1_des_seq, s1ds, s1\n-        set2_des_seq,               \/\/ set2_des_seq, s2ds, s2\n-        set3_des_seq,               \/\/ set3_des_seq, s3ds, s3\n-        set_a_background,           \/\/ set_a_background, setab, AB\n-        set_a_foreground,           \/\/ set_a_foreground, setaf, AF\n-        set_color_band,             \/\/ set_color_band, setcolor, Yz\n-        set_lr_margin,              \/\/ set_lr_margin, smglr, ML\n-        set_page_length,            \/\/ set_page_length, slines, YZ\n-        set_tb_margin,              \/\/ set_tb_margin, smgtb, MT\n-        enter_horizontal_hl_mode,   \/\/ enter_horizontal_hl_mode, ehhlm, Xh\n-        enter_left_hl_mode,         \/\/ enter_left_hl_mode, elhlm, Xl\n-        enter_low_hl_mode,          \/\/ enter_low_hl_mode, elohlm, Xo\n-        enter_right_hl_mode,        \/\/ enter_right_hl_mode, erhlm, Xr\n-        enter_top_hl_mode,          \/\/ enter_top_hl_mode, ethlm, Xt\n-        enter_vertical_hl_mode,     \/\/ enter_vertical_hl_mode, evhlm, Xv\n-        set_a_attributes,           \/\/ set_a_attributes, sgr1, sA\n-        set_pglen_inch,             \/\/ set_pglen_inch, slength, sL)\n+        auto_left_margin, \/\/ auto_left_margin, bw, bw\n+        auto_right_margin, \/\/ auto_right_margin, am, am\n+        back_color_erase, \/\/ back_color_erase, bce, ut\n+        can_change, \/\/ can_change, ccc, cc\n+        ceol_standout_glitch, \/\/ ceol_standout_glitch, xhp, xs\n+        col_addr_glitch, \/\/ col_addr_glitch, xhpa, YA\n+        cpi_changes_res, \/\/ cpi_changes_res, cpix, YF\n+        cr_cancels_micro_mode, \/\/ cr_cancels_micro_mode, crxm, YB\n+        dest_tabs_magic_smso, \/\/ dest_tabs_magic_smso, xt, xt\n+        eat_newline_glitch, \/\/ eat_newline_glitch, xenl, xn\n+        erase_overstrike, \/\/ erase_overstrike, eo, eo\n+        generic_type, \/\/ generic_type, gn, gn\n+        hard_copy, \/\/ hard_copy, hc, hc\n+        hard_cursor, \/\/ hard_cursor, chts, HC\n+        has_meta_key, \/\/ has_meta_key, km, km\n+        has_print_wheel, \/\/ has_print_wheel, daisy, YC\n+        has_status_line, \/\/ has_status_line, hs, hs\n+        hue_lightness_saturation, \/\/ hue_lightness_saturation, hls, hl\n+        insert_null_glitch, \/\/ insert_null_glitch, in, in\n+        lpi_changes_res, \/\/ lpi_changes_res, lpix, YG\n+        memory_above, \/\/ memory_above, da, da\n+        memory_below, \/\/ memory_below, db, db\n+        move_insert_mode, \/\/ move_insert_mode, mir, mi\n+        move_standout_mode, \/\/ move_standout_mode, msgr, ms\n+        needs_xon_xoff, \/\/ needs_xon_xoff, nxon, nx\n+        no_esc_ctlc, \/\/ no_esc_ctlc, xsb, xb\n+        no_pad_char, \/\/ no_pad_char, npc, NP\n+        non_dest_scroll_region, \/\/ non_dest_scroll_region, ndscr, ND\n+        non_rev_rmcup, \/\/ non_rev_rmcup, nrrmc, NR\n+        over_strike, \/\/ over_strike, os, os\n+        prtr_silent, \/\/ prtr_silent, mc5i, 5i\n+        row_addr_glitch, \/\/ row_addr_glitch, xvpa, YD\n+        semi_auto_right_margin, \/\/ semi_auto_right_margin, sam, YE\n+        status_line_esc_ok, \/\/ status_line_esc_ok, eslok, es\n+        tilde_glitch, \/\/ tilde_glitch, hz, hz\n+        transparent_underline, \/\/ transparent_underline, ul, ul\n+        xon_xoff, \/\/ xon_xoff, xon, xo\n+        columns, \/\/ columns, cols, co\n+        init_tabs, \/\/ init_tabs, it, it\n+        label_height, \/\/ label_height, lh, lh\n+        label_width, \/\/ label_width, lw, lw\n+        lines, \/\/ lines, lines, li\n+        lines_of_memory, \/\/ lines_of_memory, lm, lm\n+        magic_cookie_glitch, \/\/ magic_cookie_glitch, xmc, sg\n+        max_attributes, \/\/ max_attributes, ma, ma\n+        max_colors, \/\/ max_colors, colors, Co\n+        max_pairs, \/\/ max_pairs, pairs, pa\n+        maximum_windows, \/\/ maximum_windows, wnum, MW\n+        no_color_video, \/\/ no_color_video, ncv, NC\n+        num_labels, \/\/ num_labels, nlab, Nl\n+        padding_baud_rate, \/\/ padding_baud_rate, pb, pb\n+        virtual_terminal, \/\/ virtual_terminal, vt, vt\n+        width_status_line, \/\/ width_status_line, wsl, ws\n+        bit_image_entwining, \/\/ bit_image_entwining, bitwin, Yo\n+        bit_image_type, \/\/ bit_image_type, bitype, Yp\n+        buffer_capacity, \/\/ buffer_capacity, bufsz, Ya\n+        buttons, \/\/ buttons, btns, BT\n+        dot_horz_spacing, \/\/ dot_horz_spacing, spinh, Yc\n+        dot_vert_spacing, \/\/ dot_vert_spacing, spinv, Yb\n+        max_micro_address, \/\/ max_micro_address, maddr, Yd\n+        max_micro_jump, \/\/ max_micro_jump, mjump, Ye\n+        micro_col_size, \/\/ micro_col_size, mcs, Yf\n+        micro_line_size, \/\/ micro_line_size, mls, Yg\n+        number_of_pins, \/\/ number_of_pins, npins, Yh\n+        output_res_char, \/\/ output_res_char, orc, Yi\n+        output_res_horz_inch, \/\/ output_res_horz_inch, orhi, Yk\n+        output_res_line, \/\/ output_res_line, orl, Yj\n+        output_res_vert_inch, \/\/ output_res_vert_inch, orvi, Yl\n+        print_rate, \/\/ print_rate, cps, Ym\n+        wide_char_size, \/\/ wide_char_size, widcs, Yn\n+        acs_chars, \/\/ acs_chars, acsc, ac\n+        back_tab, \/\/ back_tab, cbt, bt\n+        bell, \/\/ bell, bel, bl\n+        carriage_return, \/\/ carriage_return, cr, cr\n+        change_char_pitch, \/\/ change_char_pitch, cpi, ZA\n+        change_line_pitch, \/\/ change_line_pitch, lpi, ZB\n+        change_res_horz, \/\/ change_res_horz, chr, ZC\n+        change_res_vert, \/\/ change_res_vert, cvr, ZD\n+        change_scroll_region, \/\/ change_scroll_region, csr, cs\n+        char_padding, \/\/ char_padding, rmp, rP\n+        clear_all_tabs, \/\/ clear_all_tabs, tbc, ct\n+        clear_margins, \/\/ clear_margins, mgc, MC\n+        clear_screen, \/\/ clear_screen, clear, cl\n+        clr_bol, \/\/ clr_bol, el1, cb\n+        clr_eol, \/\/ clr_eol, el, ce\n+        clr_eos, \/\/ clr_eos, ed, cd\n+        column_address, \/\/ column_address, hpa, ch\n+        command_character, \/\/ command_character, cmdch, CC\n+        create_window, \/\/ create_window, cwin, CW\n+        cursor_address, \/\/ cursor_address, cup, cm\n+        cursor_down, \/\/ cursor_down, cud1, do\n+        cursor_home, \/\/ cursor_home, home, ho\n+        cursor_invisible, \/\/ cursor_invisible, civis, vi\n+        cursor_left, \/\/ cursor_left, cub1, le\n+        cursor_mem_address, \/\/ cursor_mem_address, mrcup, CM\n+        cursor_normal, \/\/ cursor_normal, cnorm, ve\n+        cursor_right, \/\/ cursor_right, cuf1, nd\n+        cursor_to_ll, \/\/ cursor_to_ll, ll, ll\n+        cursor_up, \/\/ cursor_up, cuu1, up\n+        cursor_visible, \/\/ cursor_visible, cvvis, vs\n+        define_char, \/\/ define_char, defc, ZE\n+        delete_character, \/\/ delete_character, dch1, dc\n+        delete_line, \/\/ delete_line, dl1, dl\n+        dial_phone, \/\/ dial_phone, dial, DI\n+        dis_status_line, \/\/ dis_status_line, dsl, ds\n+        display_clock, \/\/ display_clock, dclk, DK\n+        down_half_line, \/\/ down_half_line, hd, hd\n+        ena_acs, \/\/ ena_acs, enacs, eA\n+        enter_alt_charset_mode, \/\/ enter_alt_charset_mode, smacs, as\n+        enter_am_mode, \/\/ enter_am_mode, smam, SA\n+        enter_blink_mode, \/\/ enter_blink_mode, blink, mb\n+        enter_bold_mode, \/\/ enter_bold_mode, bold, md\n+        enter_ca_mode, \/\/ enter_ca_mode, smcup, ti\n+        enter_delete_mode, \/\/ enter_delete_mode, smdc, dm\n+        enter_dim_mode, \/\/ enter_dim_mode, dim, mh\n+        enter_doublewide_mode, \/\/ enter_doublewide_mode, swidm, ZF\n+        enter_draft_quality, \/\/ enter_draft_quality, sdrfq, ZG\n+        enter_insert_mode, \/\/ enter_insert_mode, smir, im\n+        enter_italics_mode, \/\/ enter_italics_mode, sitm, ZH\n+        enter_leftward_mode, \/\/ enter_leftward_mode, slm, ZI\n+        enter_micro_mode, \/\/ enter_micro_mode, smicm, ZJ\n+        enter_near_letter_quality, \/\/ enter_near_letter_quality, snlq, ZK\n+        enter_normal_quality, \/\/ enter_normal_quality, snrmq, ZL\n+        enter_protected_mode, \/\/ enter_protected_mode, prot, mp\n+        enter_reverse_mode, \/\/ enter_reverse_mode, rev, mr\n+        enter_secure_mode, \/\/ enter_secure_mode, invis, mk\n+        enter_shadow_mode, \/\/ enter_shadow_mode, sshm, ZM\n+        enter_standout_mode, \/\/ enter_standout_mode, smso, so\n+        enter_subscript_mode, \/\/ enter_subscript_mode, ssubm, ZN\n+        enter_superscript_mode, \/\/ enter_superscript_mode, ssupm, ZO\n+        enter_underline_mode, \/\/ enter_underline_mode, smul, us\n+        enter_upward_mode, \/\/ enter_upward_mode, sum, ZP\n+        enter_xon_mode, \/\/ enter_xon_mode, smxon, SX\n+        erase_chars, \/\/ erase_chars, ech, ec\n+        exit_alt_charset_mode, \/\/ exit_alt_charset_mode, rmacs, ae\n+        exit_am_mode, \/\/ exit_am_mode, rmam, RA\n+        exit_attribute_mode, \/\/ exit_attribute_mode, sgr0, me\n+        exit_ca_mode, \/\/ exit_ca_mode, rmcup, te\n+        exit_delete_mode, \/\/ exit_delete_mode, rmdc, ed\n+        exit_doublewide_mode, \/\/ exit_doublewide_mode, rwidm, ZQ\n+        exit_insert_mode, \/\/ exit_insert_mode, rmir, ei\n+        exit_italics_mode, \/\/ exit_italics_mode, ritm, ZR\n+        exit_leftward_mode, \/\/ exit_leftward_mode, rlm, ZS\n+        exit_micro_mode, \/\/ exit_micro_mode, rmicm, ZT\n+        exit_shadow_mode, \/\/ exit_shadow_mode, rshm, ZU\n+        exit_standout_mode, \/\/ exit_standout_mode, rmso, se\n+        exit_subscript_mode, \/\/ exit_subscript_mode, rsubm, ZV\n+        exit_superscript_mode, \/\/ exit_superscript_mode, rsupm, ZW\n+        exit_underline_mode, \/\/ exit_underline_mode, rmul, ue\n+        exit_upward_mode, \/\/ exit_upward_mode, rum, ZX\n+        exit_xon_mode, \/\/ exit_xon_mode, rmxon, RX\n+        fixed_pause, \/\/ fixed_pause, pause, PA\n+        flash_hook, \/\/ flash_hook, hook, fh\n+        flash_screen, \/\/ flash_screen, flash, vb\n+        form_feed, \/\/ form_feed, ff, ff\n+        from_status_line, \/\/ from_status_line, fsl, fs\n+        goto_window, \/\/ goto_window, wingo, WG\n+        hangup, \/\/ hangup, hup, HU\n+        init_1string, \/\/ init_1string, is1, i1\n+        init_2string, \/\/ init_2string, is2, is\n+        init_3string, \/\/ init_3string, is3, i3\n+        init_file, \/\/ init_file, if, if\n+        init_prog, \/\/ init_prog, iprog, iP\n+        initialize_color, \/\/ initialize_color, initc, Ic\n+        initialize_pair, \/\/ initialize_pair, initp, Ip\n+        insert_character, \/\/ insert_character, ich1, ic\n+        insert_line, \/\/ insert_line, il1, al\n+        insert_padding, \/\/ insert_padding, ip, ip\n+        key_a1, \/\/ key_a1, ka1, K1\n+        key_a3, \/\/ key_a3, ka3, K3\n+        key_b2, \/\/ key_b2, kb2, K2\n+        key_backspace, \/\/ key_backspace, kbs, kb\n+        key_beg, \/\/ key_beg, kbeg, @1\n+        key_btab, \/\/ key_btab, kcbt, kB\n+        key_c1, \/\/ key_c1, kc1, K4\n+        key_c3, \/\/ key_c3, kc3, K5\n+        key_cancel, \/\/ key_cancel, kcan, @2\n+        key_catab, \/\/ key_catab, ktbc, ka\n+        key_clear, \/\/ key_clear, kclr, kC\n+        key_close, \/\/ key_close, kclo, @3\n+        key_command, \/\/ key_command, kcmd, @4\n+        key_copy, \/\/ key_copy, kcpy, @5\n+        key_create, \/\/ key_create, kcrt, @6\n+        key_ctab, \/\/ key_ctab, kctab, kt\n+        key_dc, \/\/ key_dc, kdch1, kD\n+        key_dl, \/\/ key_dl, kdl1, kL\n+        key_down, \/\/ key_down, kcud1, kd\n+        key_eic, \/\/ key_eic, krmir, kM\n+        key_end, \/\/ key_end, kend, @7\n+        key_enter, \/\/ key_enter, kent, @8\n+        key_eol, \/\/ key_eol, kel, kE\n+        key_eos, \/\/ key_eos, ked, kS\n+        key_exit, \/\/ key_exit, kext, @9\n+        key_f0, \/\/ key_f0, kf0, k0\n+        key_f1, \/\/ key_f1, kf1, k1\n+        key_f10, \/\/ key_f10, kf10, k;\n+        key_f11, \/\/ key_f11, kf11, F1\n+        key_f12, \/\/ key_f12, kf12, F2\n+        key_f13, \/\/ key_f13, kf13, F3\n+        key_f14, \/\/ key_f14, kf14, F4\n+        key_f15, \/\/ key_f15, kf15, F5\n+        key_f16, \/\/ key_f16, kf16, F6\n+        key_f17, \/\/ key_f17, kf17, F7\n+        key_f18, \/\/ key_f18, kf18, F8\n+        key_f19, \/\/ key_f19, kf19, F9\n+        key_f2, \/\/ key_f2, kf2, k2\n+        key_f20, \/\/ key_f20, kf20, FA\n+        key_f21, \/\/ key_f21, kf21, FB\n+        key_f22, \/\/ key_f22, kf22, FC\n+        key_f23, \/\/ key_f23, kf23, FD\n+        key_f24, \/\/ key_f24, kf24, FE\n+        key_f25, \/\/ key_f25, kf25, FF\n+        key_f26, \/\/ key_f26, kf26, FG\n+        key_f27, \/\/ key_f27, kf27, FH\n+        key_f28, \/\/ key_f28, kf28, FI\n+        key_f29, \/\/ key_f29, kf29, FJ\n+        key_f3, \/\/ key_f3, kf3, k3\n+        key_f30, \/\/ key_f30, kf30, FK\n+        key_f31, \/\/ key_f31, kf31, FL\n+        key_f32, \/\/ key_f32, kf32, FM\n+        key_f33, \/\/ key_f33, kf33, FN\n+        key_f34, \/\/ key_f34, kf34, FO\n+        key_f35, \/\/ key_f35, kf35, FP\n+        key_f36, \/\/ key_f36, kf36, FQ\n+        key_f37, \/\/ key_f37, kf37, FR\n+        key_f38, \/\/ key_f38, kf38, FS\n+        key_f39, \/\/ key_f39, kf39, FT\n+        key_f4, \/\/ key_f4, kf4, k4\n+        key_f40, \/\/ key_f40, kf40, FU\n+        key_f41, \/\/ key_f41, kf41, FV\n+        key_f42, \/\/ key_f42, kf42, FW\n+        key_f43, \/\/ key_f43, kf43, FX\n+        key_f44, \/\/ key_f44, kf44, FY\n+        key_f45, \/\/ key_f45, kf45, FZ\n+        key_f46, \/\/ key_f46, kf46, Fa\n+        key_f47, \/\/ key_f47, kf47, Fb\n+        key_f48, \/\/ key_f48, kf48, Fc\n+        key_f49, \/\/ key_f49, kf49, Fd\n+        key_f5, \/\/ key_f5, kf5, k5\n+        key_f50, \/\/ key_f50, kf50, Fe\n+        key_f51, \/\/ key_f51, kf51, Ff\n+        key_f52, \/\/ key_f52, kf52, Fg\n+        key_f53, \/\/ key_f53, kf53, Fh\n+        key_f54, \/\/ key_f54, kf54, Fi\n+        key_f55, \/\/ key_f55, kf55, Fj\n+        key_f56, \/\/ key_f56, kf56, Fk\n+        key_f57, \/\/ key_f57, kf57, Fl\n+        key_f58, \/\/ key_f58, kf58, Fm\n+        key_f59, \/\/ key_f59, kf59, Fn\n+        key_f6, \/\/ key_f6, kf6, k6\n+        key_f60, \/\/ key_f60, kf60, Fo\n+        key_f61, \/\/ key_f61, kf61, Fp\n+        key_f62, \/\/ key_f62, kf62, Fq\n+        key_f63, \/\/ key_f63, kf63, Fr\n+        key_f7, \/\/ key_f7, kf7, k7\n+        key_f8, \/\/ key_f8, kf8, k8\n+        key_f9, \/\/ key_f9, kf9, k9\n+        key_find, \/\/ key_find, kfnd, @0\n+        key_help, \/\/ key_help, khlp, %1\n+        key_home, \/\/ key_home, khome, kh\n+        key_ic, \/\/ key_ic, kich1, kI\n+        key_il, \/\/ key_il, kil1, kA\n+        key_left, \/\/ key_left, kcub1, kl\n+        key_ll, \/\/ key_ll, kll, kH\n+        key_mark, \/\/ key_mark, kmrk, %2\n+        key_message, \/\/ key_message, kmsg, %3\n+        key_move, \/\/ key_move, kmov, %4\n+        key_next, \/\/ key_next, knxt, %5\n+        key_npage, \/\/ key_npage, knp, kN\n+        key_open, \/\/ key_open, kopn, %6\n+        key_options, \/\/ key_options, kopt, %7\n+        key_ppage, \/\/ key_ppage, kpp, kP\n+        key_previous, \/\/ key_previous, kprv, %8\n+        key_print, \/\/ key_print, kprt, %9\n+        key_redo, \/\/ key_redo, krdo, %0\n+        key_reference, \/\/ key_reference, kref, &1\n+        key_refresh, \/\/ key_refresh, krfr, &2\n+        key_replace, \/\/ key_replace, krpl, &3\n+        key_restart, \/\/ key_restart, krst, &4\n+        key_resume, \/\/ key_resume, kres, &5\n+        key_right, \/\/ key_right, kcuf1, kr\n+        key_save, \/\/ key_save, ksav, &6\n+        key_sbeg, \/\/ key_sbeg, kBEG, &9\n+        key_scancel, \/\/ key_scancel, kCAN, &0\n+        key_scommand, \/\/ key_scommand, kCMD, *1\n+        key_scopy, \/\/ key_scopy, kCPY, *2\n+        key_screate, \/\/ key_screate, kCRT, *3\n+        key_sdc, \/\/ key_sdc, kDC, *4\n+        key_sdl, \/\/ key_sdl, kDL, *5\n+        key_select, \/\/ key_select, kslt, *6\n+        key_send, \/\/ key_send, kEND, *7\n+        key_seol, \/\/ key_seol, kEOL, *8\n+        key_sexit, \/\/ key_sexit, kEXT, *9\n+        key_sf, \/\/ key_sf, kind, kF\n+        key_sfind, \/\/ key_sfind, kFND, *0\n+        key_shelp, \/\/ key_shelp, kHLP, #1\n+        key_shome, \/\/ key_shome, kHOM, #2\n+        key_sic, \/\/ key_sic, kIC, #3\n+        key_sleft, \/\/ key_sleft, kLFT, #4\n+        key_smessage, \/\/ key_smessage, kMSG, %a\n+        key_smove, \/\/ key_smove, kMOV, %b\n+        key_snext, \/\/ key_snext, kNXT, %c\n+        key_soptions, \/\/ key_soptions, kOPT, %d\n+        key_sprevious, \/\/ key_sprevious, kPRV, %e\n+        key_sprint, \/\/ key_sprint, kPRT, %f\n+        key_sr, \/\/ key_sr, kri, kR\n+        key_sredo, \/\/ key_sredo, kRDO, %g\n+        key_sreplace, \/\/ key_sreplace, kRPL, %h\n+        key_sright, \/\/ key_sright, kRIT, %i\n+        key_srsume, \/\/ key_srsume, kRES, %j\n+        key_ssave, \/\/ key_ssave, kSAV, !1\n+        key_ssuspend, \/\/ key_ssuspend, kSPD, !2\n+        key_stab, \/\/ key_stab, khts, kT\n+        key_sundo, \/\/ key_sundo, kUND, !3\n+        key_suspend, \/\/ key_suspend, kspd, &7\n+        key_undo, \/\/ key_undo, kund, &8\n+        key_up, \/\/ key_up, kcuu1, ku\n+        keypad_local, \/\/ keypad_local, rmkx, ke\n+        keypad_xmit, \/\/ keypad_xmit, smkx, ks\n+        lab_f0, \/\/ lab_f0, lf0, l0\n+        lab_f1, \/\/ lab_f1, lf1, l1\n+        lab_f10, \/\/ lab_f10, lf10, la\n+        lab_f2, \/\/ lab_f2, lf2, l2\n+        lab_f3, \/\/ lab_f3, lf3, l3\n+        lab_f4, \/\/ lab_f4, lf4, l4\n+        lab_f5, \/\/ lab_f5, lf5, l5\n+        lab_f6, \/\/ lab_f6, lf6, l6\n+        lab_f7, \/\/ lab_f7, lf7, l7\n+        lab_f8, \/\/ lab_f8, lf8, l8\n+        lab_f9, \/\/ lab_f9, lf9, l9\n+        label_format, \/\/ label_format, fln, Lf\n+        label_off, \/\/ label_off, rmln, LF\n+        label_on, \/\/ label_on, smln, LO\n+        meta_off, \/\/ meta_off, rmm, mo\n+        meta_on, \/\/ meta_on, smm, mm\n+        micro_column_address, \/\/ micro_column_address, mhpa, ZY\n+        micro_down, \/\/ micro_down, mcud1, ZZ\n+        micro_left, \/\/ micro_left, mcub1, Za\n+        micro_right, \/\/ micro_right, mcuf1, Zb\n+        micro_row_address, \/\/ micro_row_address, mvpa, Zc\n+        micro_up, \/\/ micro_up, mcuu1, Zd\n+        newline, \/\/ newline, nel, nw\n+        order_of_pins, \/\/ order_of_pins, porder, Ze\n+        orig_colors, \/\/ orig_colors, oc, oc\n+        orig_pair, \/\/ orig_pair, op, op\n+        pad_char, \/\/ pad_char, pad, pc\n+        parm_dch, \/\/ parm_dch, dch, DC\n+        parm_delete_line, \/\/ parm_delete_line, dl, DL\n+        parm_down_cursor, \/\/ parm_down_cursor, cud, DO\n+        parm_down_micro, \/\/ parm_down_micro, mcud, Zf\n+        parm_ich, \/\/ parm_ich, ich, IC\n+        parm_index, \/\/ parm_index, indn, SF\n+        parm_insert_line, \/\/ parm_insert_line, il, AL\n+        parm_left_cursor, \/\/ parm_left_cursor, cub, LE\n+        parm_left_micro, \/\/ parm_left_micro, mcub, Zg\n+        parm_right_cursor, \/\/ parm_right_cursor, cuf, RI\n+        parm_right_micro, \/\/ parm_right_micro, mcuf, Zh\n+        parm_rindex, \/\/ parm_rindex, rin, SR\n+        parm_up_cursor, \/\/ parm_up_cursor, cuu, UP\n+        parm_up_micro, \/\/ parm_up_micro, mcuu, Zi\n+        pkey_key, \/\/ pkey_key, pfkey, pk\n+        pkey_local, \/\/ pkey_local, pfloc, pl\n+        pkey_xmit, \/\/ pkey_xmit, pfx, px\n+        plab_norm, \/\/ plab_norm, pln, pn\n+        print_screen, \/\/ print_screen, mc0, ps\n+        prtr_non, \/\/ prtr_non, mc5p, pO\n+        prtr_off, \/\/ prtr_off, mc4, pf\n+        prtr_on, \/\/ prtr_on, mc5, po\n+        pulse, \/\/ pulse, pulse, PU\n+        quick_dial, \/\/ quick_dial, qdial, QD\n+        remove_clock, \/\/ remove_clock, rmclk, RC\n+        repeat_char, \/\/ repeat_char, rep, rp\n+        req_for_input, \/\/ req_for_input, rfi, RF\n+        reset_1string, \/\/ reset_1string, rs1, r1\n+        reset_2string, \/\/ reset_2string, rs2, r2\n+        reset_3string, \/\/ reset_3string, rs3, r3\n+        reset_file, \/\/ reset_file, rf, rf\n+        restore_cursor, \/\/ restore_cursor, rc, rc\n+        row_address, \/\/ row_address, vpa, cv\n+        save_cursor, \/\/ save_cursor, sc, sc\n+        scroll_forward, \/\/ scroll_forward, ind, sf\n+        scroll_reverse, \/\/ scroll_reverse, ri, sr\n+        select_char_set, \/\/ select_char_set, scs, Zj\n+        set_attributes, \/\/ set_attributes, sgr, sa\n+        set_background, \/\/ set_background, setb, Sb\n+        set_bottom_margin, \/\/ set_bottom_margin, smgb, Zk\n+        set_bottom_margin_parm, \/\/ set_bottom_margin_parm, smgbp, Zl\n+        set_clock, \/\/ set_clock, sclk, SC\n+        set_color_pair, \/\/ set_color_pair, scp, sp\n+        set_foreground, \/\/ set_foreground, setf, Sf\n+        set_left_margin, \/\/ set_left_margin, smgl, ML\n+        set_left_margin_parm, \/\/ set_left_margin_parm, smglp, Zm\n+        set_right_margin, \/\/ set_right_margin, smgr, MR\n+        set_right_margin_parm, \/\/ set_right_margin_parm, smgrp, Zn\n+        set_tab, \/\/ set_tab, hts, st\n+        set_top_margin, \/\/ set_top_margin, smgt, Zo\n+        set_top_margin_parm, \/\/ set_top_margin_parm, smgtp, Zp\n+        set_window, \/\/ set_window, wind, wi\n+        start_bit_image, \/\/ start_bit_image, sbim, Zq\n+        start_char_set_def, \/\/ start_char_set_def, scsd, Zr\n+        stop_bit_image, \/\/ stop_bit_image, rbim, Zs\n+        stop_char_set_def, \/\/ stop_char_set_def, rcsd, Zt\n+        subscript_characters, \/\/ subscript_characters, subcs, Zu\n+        superscript_characters, \/\/ superscript_characters, supcs, Zv\n+        tab, \/\/ tab, ht, ta\n+        these_cause_cr, \/\/ these_cause_cr, docr, Zw\n+        to_status_line, \/\/ to_status_line, tsl, ts\n+        tone, \/\/ tone, tone, TO\n+        underline_char, \/\/ underline_char, uc, uc\n+        up_half_line, \/\/ up_half_line, hu, hu\n+        user0, \/\/ user0, u0, u0\n+        user1, \/\/ user1, u1, u1\n+        user2, \/\/ user2, u2, u2\n+        user3, \/\/ user3, u3, u3\n+        user4, \/\/ user4, u4, u4\n+        user5, \/\/ user5, u5, u5\n+        user6, \/\/ user6, u6, u6\n+        user7, \/\/ user7, u7, u7\n+        user8, \/\/ user8, u8, u8\n+        user9, \/\/ user9, u9, u9\n+        wait_tone, \/\/ wait_tone, wait, WA\n+        xoff_character, \/\/ xoff_character, xoffc, XF\n+        xon_character, \/\/ xon_character, xonc, XN\n+        zero_motion, \/\/ zero_motion, zerom, Zx\n+        alt_scancode_esc, \/\/ alt_scancode_esc, scesa, S8\n+        bit_image_carriage_return, \/\/ bit_image_carriage_return, bicr, Yv\n+        bit_image_newline, \/\/ bit_image_newline, binel, Zz\n+        bit_image_repeat, \/\/ bit_image_repeat, birep, Xy\n+        char_set_names, \/\/ char_set_names, csnm, Zy\n+        code_set_init, \/\/ code_set_init, csin, ci\n+        color_names, \/\/ color_names, colornm, Yw\n+        define_bit_image_region, \/\/ define_bit_image_region, defbi, Yx\n+        device_type, \/\/ device_type, devt, dv\n+        display_pc_char, \/\/ display_pc_char, dispc, S1\n+        end_bit_image_region, \/\/ end_bit_image_region, endbi, Yy\n+        enter_pc_charset_mode, \/\/ enter_pc_charset_mode, smpch, S2\n+        enter_scancode_mode, \/\/ enter_scancode_mode, smsc, S4\n+        exit_pc_charset_mode, \/\/ exit_pc_charset_mode, rmpch, S3\n+        exit_scancode_mode, \/\/ exit_scancode_mode, rmsc, S5\n+        get_mouse, \/\/ get_mouse, getm, Gm\n+        key_mouse, \/\/ key_mouse, kmous, Km\n+        mouse_info, \/\/ mouse_info, minfo, Mi\n+        pc_term_options, \/\/ pc_term_options, pctrm, S6\n+        pkey_plab, \/\/ pkey_plab, pfxl, xl\n+        req_mouse_pos, \/\/ req_mouse_pos, reqmp, RQ\n+        scancode_escape, \/\/ scancode_escape, scesc, S7\n+        set0_des_seq, \/\/ set0_des_seq, s0ds, s0\n+        set1_des_seq, \/\/ set1_des_seq, s1ds, s1\n+        set2_des_seq, \/\/ set2_des_seq, s2ds, s2\n+        set3_des_seq, \/\/ set3_des_seq, s3ds, s3\n+        set_a_background, \/\/ set_a_background, setab, AB\n+        set_a_foreground, \/\/ set_a_foreground, setaf, AF\n+        set_color_band, \/\/ set_color_band, setcolor, Yz\n+        set_lr_margin, \/\/ set_lr_margin, smglr, ML\n+        set_page_length, \/\/ set_page_length, slines, YZ\n+        set_tb_margin, \/\/ set_tb_margin, smgtb, MT\n+        enter_horizontal_hl_mode, \/\/ enter_horizontal_hl_mode, ehhlm, Xh\n+        enter_left_hl_mode, \/\/ enter_left_hl_mode, elhlm, Xl\n+        enter_low_hl_mode, \/\/ enter_low_hl_mode, elohlm, Xo\n+        enter_right_hl_mode, \/\/ enter_right_hl_mode, erhlm, Xr\n+        enter_top_hl_mode, \/\/ enter_top_hl_mode, ethlm, Xt\n+        enter_vertical_hl_mode, \/\/ enter_vertical_hl_mode, evhlm, Xv\n+        set_a_attributes, \/\/ set_a_attributes, sgr1, sA\n+        set_pglen_inch, \/\/ set_pglen_inch, slength, sL)\n@@ -518,2 +516,3 @@\n-             BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))) {\n-            br.lines().map(String::trim)\n+                BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))) {\n+            br.lines()\n+                    .map(String::trim)\n@@ -542,3 +541,1 @@\n-    public static String getInfoCmp(\n-            String terminal\n-    ) throws IOException, InterruptedException {\n+    public static String getInfoCmp(String terminal) throws IOException, InterruptedException {\n@@ -566,2 +563,1 @@\n-            Map<Capability, String> strings\n-    ) {\n+            Map<Capability, String> strings) {\n@@ -612,1 +608,1 @@\n-             BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))) {\n+                BufferedReader br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))) {\n@@ -620,3 +616,16 @@\n-        for (String s : Arrays.asList(\"dumb\", \"dumb-color\", \"ansi\", \"xterm\", \"xterm-256color\",\n-                \"windows\", \"windows-256color\", \"windows-conemu\", \"windows-vtp\",\n-                \"screen\", \"screen-256color\", \"rxvt-unicode\", \"rxvt-unicode-256color\", \"rxvt-basic\", \"rxvt\")) {\n+        for (String s : Arrays.asList(\n+                \"dumb\",\n+                \"dumb-color\",\n+                \"ansi\",\n+                \"xterm\",\n+                \"xterm-256color\",\n+                \"windows\",\n+                \"windows-256color\",\n+                \"windows-conemu\",\n+                \"windows-vtp\",\n+                \"screen\",\n+                \"screen-256color\",\n+                \"rxvt-unicode\",\n+                \"rxvt-unicode-256color\",\n+                \"rxvt-basic\",\n+                \"rxvt\")) {\n@@ -626,1 +635,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/InfoCmp.java","additions":488,"deletions":480,"binary":false,"changes":968,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -25,1 +25,0 @@\n-\n@@ -69,3 +68,4 @@\n-        decoder = Charset.defaultCharset().newDecoder().onMalformedInput(\n-                CodingErrorAction.REPLACE).onUnmappableCharacter(\n-                CodingErrorAction.REPLACE);\n+        decoder = Charset.defaultCharset()\n+                .newDecoder()\n+                .onMalformedInput(CodingErrorAction.REPLACE)\n+                .onUnmappableCharacter(CodingErrorAction.REPLACE);\n@@ -90,2 +90,1 @@\n-    public InputStreamReader(InputStream in, final String enc)\n-            throws UnsupportedEncodingException {\n+    public InputStreamReader(InputStream in, final String enc) throws UnsupportedEncodingException {\n@@ -98,3 +97,4 @@\n-            decoder = Charset.forName(enc).newDecoder().onMalformedInput(\n-                    CodingErrorAction.REPLACE).onUnmappableCharacter(\n-                    CodingErrorAction.REPLACE);\n+            decoder = Charset.forName(enc)\n+                    .newDecoder()\n+                    .onMalformedInput(CodingErrorAction.REPLACE)\n+                    .onUnmappableCharacter(CodingErrorAction.REPLACE);\n@@ -102,2 +102,1 @@\n-            throw (UnsupportedEncodingException)\n-                    new UnsupportedEncodingException(enc).initCause(e);\n+            throw (UnsupportedEncodingException) new UnsupportedEncodingException(enc).initCause(e);\n@@ -137,3 +136,3 @@\n-        decoder = charset.newDecoder().onMalformedInput(\n-                CodingErrorAction.REPLACE).onUnmappableCharacter(\n-                CodingErrorAction.REPLACE);\n+        decoder = charset.newDecoder()\n+                .onMalformedInput(CodingErrorAction.REPLACE)\n+                .onUnmappableCharacter(CodingErrorAction.REPLACE);\n@@ -260,2 +259,1 @@\n-                        if ((in.available() == 0)\n-                            && (out.position() > offset)) {\n+                        if ((in.available() == 0) && (out.position() > offset)) {\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/InputStreamReader.java","additions":15,"deletions":17,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -52,3 +52,2 @@\n-    public static int distance(CharSequence source, CharSequence target,\n-                               int deleteCost, int insertCost,\n-                               int replaceCost, int swapCost) {\n+    public static int distance(\n+            CharSequence source, CharSequence target, int deleteCost, int insertCost, int replaceCost, int swapCost) {\n@@ -118,1 +117,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Levenshtein.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2020, the original author or authors.\n+ * Copyright (c) 2002-2020, the original author(s).\n@@ -76,2 +76,1 @@\n-        }\n-        else {\n+        } else {\n@@ -87,1 +86,1 @@\n-\/\/            \/\/ Special handling for the last message if its a throwable, render its stack on the next line\n+\/\/            \/\/ Special handling for the last message if it's a throwable, render its stack on the next line\n@@ -90,2 +89,1 @@\n-\/\/            }\n-\/\/            else {\n+\/\/            } else {\n@@ -125,1 +123,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Log.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -87,2 +87,1 @@\n-            return (int) (reader.available() * this.encoder.averageBytesPerChar())\n-                    + bytes.remaining();\n+            return (int) (reader.available() * this.encoder.averageBytesPerChar()) + bytes.remaining();\n@@ -127,1 +126,0 @@\n-\n@@ -138,4 +136,6 @@\n-            this(inputStream,\n-                (encoding != null ? encoding : Charset.defaultCharset()).newDecoder()\n-                    .onMalformedInput(CodingErrorAction.REPLACE)\n-                    .onUnmappableCharacter(CodingErrorAction.REPLACE));\n+            this(\n+                    inputStream,\n+                    (encoding != null ? encoding : Charset.defaultCharset())\n+                            .newDecoder()\n+                            .onMalformedInput(CodingErrorAction.REPLACE)\n+                            .onUnmappableCharacter(CodingErrorAction.REPLACE));\n@@ -204,2 +204,2 @@\n-                    int nb = input.readBuffered(bytes.array(), bytes.limit(),\n-                                            bytes.capacity() - bytes.limit(), t.timeout());\n+                    int nb = input.readBuffered(\n+                            bytes.array(), bytes.limit(), bytes.capacity() - bytes.limit(), t.timeout());\n@@ -230,1 +230,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlocking.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -77,1 +77,1 @@\n-        b[off] = (byte)c;\n+        b[off] = (byte) c;\n@@ -118,2 +118,1 @@\n-    public void shutdown() {\n-    }\n+    public void shutdown() {}\n@@ -122,1 +121,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingInputStream.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -29,11 +29,9 @@\n-public class NonBlockingInputStreamImpl\n-    extends NonBlockingInputStream\n-{\n-    private InputStream in;                  \/\/ The actual input stream\n-    private int         b = READ_EXPIRED;    \/\/ Recently read byte\n-\n-    private String      name;\n-    private boolean     threadIsReading      = false;\n-    private IOException exception            = null;\n-    private long        threadDelay          = 60 * 1000;\n-    private Thread      thread;\n+public class NonBlockingInputStreamImpl extends NonBlockingInputStream {\n+    private InputStream in; \/\/ The actual input stream\n+    private int b = READ_EXPIRED; \/\/ Recently read byte\n+\n+    private String name;\n+    private boolean threadIsReading = false;\n+    private IOException exception = null;\n+    private long threadDelay = 60 * 1000;\n+    private Thread thread;\n@@ -100,2 +98,1 @@\n-            if (!isPeek)\n-                exception = null;\n+            if (!isPeek) exception = null;\n@@ -112,2 +109,1 @@\n-        }\n-        else if (!isPeek && timeout <= 0L && !threadIsReading) {\n+        } else if (!isPeek && timeout <= 0L && !threadIsReading) {\n@@ -115,2 +111,1 @@\n-        }\n-        else {\n+        } else {\n@@ -131,1 +126,1 @@\n-            while (!t.elapsed())  {\n+            while (!t.elapsed()) {\n@@ -137,2 +132,1 @@\n-                }\n-                catch (InterruptedException e) {\n+                } catch (InterruptedException e) {\n@@ -146,2 +140,1 @@\n-                    if (!isPeek)\n-                        exception = null;\n+                    if (!isPeek) exception = null;\n@@ -171,1 +164,1 @@\n-    private void run () {\n+    private void run() {\n@@ -239,1 +232,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingInputStreamImpl.java","additions":17,"deletions":25,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2017, the original author or authors.\n+ * Copyright (c) 2002-2017, the original author(s).\n@@ -60,5 +60,1 @@\n-        return buffer.hasRemaining()\n-                ? 0\n-                : closed\n-                    ? EOF\n-                    : READ_EXPIRED;\n+        return buffer.hasRemaining() ? 0 : closed ? EOF : READ_EXPIRED;\n@@ -170,1 +166,1 @@\n-            NonBlockingPumpInputStream.this.write(new byte[] { (byte) b }, 0, 1);\n+            NonBlockingPumpInputStream.this.write(new byte[] {(byte) b}, 0, 1);\n@@ -187,1 +183,0 @@\n-\n@@ -189,1 +184,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingPumpInputStream.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2017, the original author or authors.\n+ * Copyright (c) 2002-2017, the original author(s).\n@@ -124,1 +124,1 @@\n-                                throw new IOException( \"Timeout reading\" );\n+                                throw new IOException(\"Timeout reading\");\n@@ -210,2 +210,1 @@\n-        public void flush() throws IOException {\n-        }\n+        public void flush() throws IOException {}\n@@ -217,1 +216,0 @@\n-\n@@ -219,1 +217,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingPumpReader.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -26,2 +26,1 @@\n-    public void shutdown() {\n-    }\n+    public void shutdown() {}\n@@ -112,1 +111,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingReader.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -31,3 +31,1 @@\n-public class NonBlockingReaderImpl\n-    extends NonBlockingReader\n-{\n+public class NonBlockingReaderImpl extends NonBlockingReader {\n@@ -36,2 +34,2 @@\n-    private Reader in;                  \/\/ The actual input stream\n-    private int    ch   = READ_EXPIRED; \/\/ Recently read character\n+    private Reader in; \/\/ The actual input stream\n+    private int ch = READ_EXPIRED; \/\/ Recently read character\n@@ -39,5 +37,5 @@\n-    private String      name;\n-    private boolean     threadIsReading      = false;\n-    private IOException exception            = null;\n-    private long        threadDelay          = 60 * 1000;\n-    private Thread      thread;\n+    private String name;\n+    private boolean threadIsReading = false;\n+    private IOException exception = null;\n+    private long threadDelay = 60 * 1000;\n+    private Thread thread;\n@@ -138,2 +136,1 @@\n-            if (!isPeek)\n-                exception = null;\n+            if (!isPeek) exception = null;\n@@ -150,2 +147,1 @@\n-        }\n-        else if (!isPeek && timeout <= 0L && !threadIsReading) {\n+        } else if (!isPeek && timeout <= 0L && !threadIsReading) {\n@@ -153,2 +149,1 @@\n-        }\n-        else {\n+        } else {\n@@ -169,1 +164,1 @@\n-            while (!t.elapsed())  {\n+            while (!t.elapsed()) {\n@@ -175,2 +170,1 @@\n-                }\n-                catch (InterruptedException e) {\n+                } catch (InterruptedException e) {\n@@ -184,2 +178,1 @@\n-                    if (!isPeek)\n-                        exception = null;\n+                    if (!isPeek) exception = null;\n@@ -209,1 +202,1 @@\n-    private void run () {\n+    private void run() {\n@@ -248,3 +241,3 @@\n-\/\/                    if (charRead < 0) {\n-\/\/                        continue;\n-\/\/                    }\n+                    \/\/                    if (charRead < 0) {\n+                    \/\/                        continue;\n+                    \/\/                    }\n@@ -253,1 +246,1 @@\n-\/\/                    charRead = -1;\n+                    \/\/                    charRead = -1;\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingReaderImpl.java","additions":20,"deletions":27,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -12,2 +12,0 @@\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n@@ -17,1 +15,2 @@\n-    public static final boolean IS_WINDOWS = System.getProperty(\"os.name\").toLowerCase().contains(\"win\");\n+    public static final boolean IS_LINUX =\n+            System.getProperty(\"os.name\").toLowerCase().contains(\"linux\");\n@@ -19,3 +18,11 @@\n-    public static final boolean IS_CYGWIN = IS_WINDOWS\n-            && System.getenv(\"PWD\") != null\n-            && System.getenv(\"PWD\").startsWith(\"\/\");\n+    public static final boolean IS_WINDOWS =\n+            System.getProperty(\"os.name\").toLowerCase().contains(\"win\");\n+\n+    public static final boolean IS_OSX =\n+            System.getProperty(\"os.name\").toLowerCase().contains(\"mac\");\n+\n+    public static final boolean IS_AIX =\n+            System.getProperty(\"os.name\").toLowerCase().contains(\"aix\");\n+\n+    public static final boolean IS_CYGWIN =\n+            IS_WINDOWS && System.getenv(\"PWD\") != null && System.getenv(\"PWD\").startsWith(\"\/\");\n@@ -31,1 +38,1 @@\n-                || System.getenv(\"MSYSTEM\").equals(\"MSYS\"));\n+                    || System.getenv(\"MSYSTEM\").equals(\"MSYS\"));\n@@ -39,5 +46,1 @@\n-    public static final boolean IS_CONEMU = IS_WINDOWS\n-            && System.getenv(\"ConEmuPID\") != null;\n-\n-    public static final boolean IS_OSX = System.getProperty(\"os.name\").toLowerCase().contains(\"mac\");\n-    public static final boolean IS_AIX = System.getProperty(\"os.name\").equals(\"AIX\");\n+    public static final boolean IS_CONEMU = IS_WINDOWS && System.getenv(\"ConEmuPID\") != null;\n@@ -51,0 +54,4 @@\n+    private static boolean isExecutable(File f) {\n+        return f.canExecute() && !f.isDirectory();\n+    }\n+\n@@ -52,27 +59,26 @@\n-        String tty;\n-        String stty;\n-        String sttyfopt;\n-        String infocmp;\n-        String test;\n-        if (OSUtils.IS_CYGWIN || OSUtils.IS_MSYSTEM) {\n-            tty = null;\n-            stty = null;\n-            sttyfopt = null;\n-            infocmp = null;\n-            test = null;\n-            String path = System.getenv(\"PATH\");\n-            if (path != null) {\n-                String[] paths = path.split(\";\");\n-                for (String p : paths) {\n-                    if (tty == null && new File(p, \"tty.exe\").exists()) {\n-                        tty = new File(p, \"tty.exe\").getAbsolutePath();\n-                    }\n-                    if (stty == null && new File(p, \"stty.exe\").exists()) {\n-                        stty = new File(p, \"stty.exe\").getAbsolutePath();\n-                    }\n-                    if (infocmp == null && new File(p, \"infocmp.exe\").exists()) {\n-                        infocmp = new File(p, \"infocmp.exe\").getAbsolutePath();\n-                    }\n-                    if (test == null && new File(p, \"test.exe\").exists()) {\n-                        test = new File(p, \"test.exe\").getAbsolutePath();\n-                    }\n+        boolean cygwinOrMsys = OSUtils.IS_CYGWIN || OSUtils.IS_MSYSTEM;\n+        String suffix = cygwinOrMsys ? \".exe\" : \"\";\n+        String tty = null;\n+        String stty = null;\n+        String sttyfopt = null;\n+        String infocmp = null;\n+        String test = null;\n+        String path = System.getenv(\"PATH\");\n+        if (path != null) {\n+            String[] paths = path.split(File.pathSeparator);\n+            for (String p : paths) {\n+                File ttyFile = new File(p, \"tty\" + suffix);\n+                if (tty == null && isExecutable(ttyFile)) {\n+                    tty = ttyFile.getAbsolutePath();\n+                }\n+                File sttyFile = new File(p, \"stty\" + suffix);\n+                if (stty == null && isExecutable(sttyFile)) {\n+                    stty = sttyFile.getAbsolutePath();\n+                }\n+                File infocmpFile = new File(p, \"infocmp\" + suffix);\n+                if (infocmp == null && isExecutable(infocmpFile)) {\n+                    infocmp = infocmpFile.getAbsolutePath();\n+                }\n+                File testFile = new File(p, \"test\" + suffix);\n+                if (test == null && isExecutable(testFile)) {\n+                    test = testFile.getAbsolutePath();\n@@ -81,19 +87,0 @@\n-            if (tty == null) {\n-                tty = \"tty.exe\";\n-            }\n-            if (stty == null) {\n-                stty = \"stty.exe\";\n-            }\n-            if (infocmp == null) {\n-                infocmp = \"infocmp.exe\";\n-            }\n-            if (test == null) {\n-                test = \"test.exe\";\n-            }\n-        } else {\n-            tty = \"tty\";\n-            stty = IS_OSX ? \"\/bin\/stty\" : \"stty\";\n-            sttyfopt = IS_OSX ? \"-f\" : \"-F\";\n-            infocmp = \"infocmp\";\n-            test = isTestCommandValid(\"\/usr\/bin\/test\") ? \"\/usr\/bin\/test\"\n-                                                       : \"\/bin\/test\";\n@@ -101,0 +88,13 @@\n+        if (tty == null) {\n+            tty = \"tty\" + suffix;\n+        }\n+        if (stty == null) {\n+            stty = \"stty\" + suffix;\n+        }\n+        if (infocmp == null) {\n+            infocmp = \"infocmp\" + suffix;\n+        }\n+        if (test == null) {\n+            test = \"test\" + suffix;\n+        }\n+        sttyfopt = IS_OSX ? \"-f\" : \"-F\";\n@@ -107,4 +107,0 @@\n-\n-    private static boolean isTestCommandValid(String command) {\n-        return Files.isExecutable(Paths.get(command));\n-    }\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/OSUtils.java","additions":59,"deletions":63,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2017, the original author or authors.\n+ * Copyright (c) 2002-2017, the original author(s).\n@@ -381,1 +381,0 @@\n-\n@@ -467,1 +466,0 @@\n-\n@@ -469,1 +467,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/PumpReader.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -21,2 +21,1 @@\n-public final class ShutdownHooks\n-{\n+public final class ShutdownHooks {\n@@ -32,2 +31,1 @@\n-            hook = addHook(new Thread(\"JLine Shutdown Hook\")\n-            {\n+            hook = addHook(new Thread(\"JLine Shutdown Hook\") {\n@@ -56,2 +54,1 @@\n-            }\n-            catch (Throwable e) {\n+            } catch (Throwable e) {\n@@ -94,2 +91,1 @@\n-        }\n-        catch (IllegalStateException e) {\n+        } catch (IllegalStateException e) {\n@@ -103,2 +99,1 @@\n-    public interface Task\n-    {\n+    public interface Task {\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/ShutdownHooks.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2020, the original author or authors.\n+ * Copyright (c) 2002-2020, the original author(s).\n@@ -24,2 +24,1 @@\n-    private Signals() {\n-    }\n+    private Signals() {}\n@@ -44,2 +43,2 @@\n-            Object signalHandler = Proxy.newProxyInstance(loader,\n-                    new Class<?>[]{signalHandlerClass}, (proxy, method, args) -> {\n+            Object signalHandler =\n+                    Proxy.newProxyInstance(loader, new Class<?>[] {signalHandlerClass}, (proxy, method, args) -> {\n@@ -104,2 +103,1 @@\n-        return signalClass.getMethod(\"handle\", signalClass, signalHandlerClass)\n-                .invoke(null, signal, handler);\n+        return signalClass.getMethod(\"handle\", signalClass, signalHandlerClass).invoke(null, signal, handler);\n@@ -123,1 +121,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Signals.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2019, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author(s).\n@@ -11,2 +11,0 @@\n-import java.util.Objects;\n-import java.util.Collections;\n@@ -14,0 +12,1 @@\n+import java.util.Collections;\n@@ -15,0 +14,4 @@\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import jdk.internal.org.jline.terminal.Size;\n@@ -18,1 +21,0 @@\n-import jdk.internal.org.jline.terminal.Size;\n@@ -22,1 +24,1 @@\n-    protected final AbstractTerminal terminal;\n+    protected final Terminal terminal;\n@@ -24,5 +26,0 @@\n-    protected List<AttributedString> oldLines = Collections.emptyList();\n-    protected List<AttributedString> linesToRestore = Collections.emptyList();\n-    protected int rows;\n-    protected int columns;\n-    protected boolean force;\n@@ -32,0 +29,3 @@\n+    protected Display display;\n+    protected List<AttributedString> lines = Collections.emptyList();\n+    protected int scrollRegion;\n@@ -37,4 +37,2 @@\n-    public static Status getStatus(Terminal terminal, boolean create) {\n-        return terminal instanceof AbstractTerminal\n-                ? ((AbstractTerminal) terminal).getStatus(create)\n-                : null;\n+    public static Optional<Status> getExistingStatus(Terminal terminal) {\n+        return Optional.ofNullable(getStatus(terminal, false));\n@@ -43,0 +41,3 @@\n+    public static Status getStatus(Terminal terminal, boolean create) {\n+        return terminal instanceof AbstractTerminal ? ((AbstractTerminal) terminal).getStatus(create) : null;\n+    }\n@@ -44,1 +45,2 @@\n-    public Status(AbstractTerminal terminal) {\n+    @SuppressWarnings(\"this-escape\")\n+    public Status(Terminal terminal) {\n@@ -47,3 +49,3 @@\n-            && terminal.getStringCapability(Capability.save_cursor) != null\n-            && terminal.getStringCapability(Capability.restore_cursor) != null\n-            && terminal.getStringCapability(Capability.cursor_address) != null;\n+                && terminal.getStringCapability(Capability.save_cursor) != null\n+                && terminal.getStringCapability(Capability.restore_cursor) != null\n+                && terminal.getStringCapability(Capability.cursor_address) != null;\n@@ -51,6 +53,1 @@\n-            char borderChar = '\\u2700';\n-            AttributedStringBuilder bb = new AttributedStringBuilder();\n-            for (int i = 0; i < 200; i++) {\n-                bb.append(borderChar);\n-            }\n-            borderString = bb.toAttributedString();\n+            display = new MovingCursorDisplay(terminal);\n@@ -58,0 +55,2 @@\n+            display.reset();\n+            scrollRegion = display.rows - 1;\n@@ -61,0 +60,7 @@\n+    public void close() {\n+        terminal.puts(Capability.save_cursor);\n+        terminal.puts(Capability.change_scroll_region, 0, display.rows - 1);\n+        terminal.puts(Capability.restore_cursor);\n+        terminal.flush();\n+    }\n+\n@@ -66,4 +72,1 @@\n-        Size size = terminal.getSize();\n-        this.rows = size.getRows();\n-        this.columns = size.getColumns();\n-        this.force = true;\n+        resize(terminal.getSize());\n@@ -72,2 +75,2 @@\n-    public void reset() {\n-        this.force = true;\n+    public void resize(Size size) {\n+        display.resize(size.getRows(), size.getColumns());\n@@ -76,3 +79,5 @@\n-    public void hardReset() {\n-        if (suspended) {\n-            return;\n+    public void reset() {\n+        if (supported) {\n+            display.reset();\n+            scrollRegion = display.rows;\n+            terminal.puts(Capability.change_scroll_region, 0, scrollRegion);\n@@ -80,5 +85,0 @@\n-        List<AttributedString> lines = new ArrayList<>(oldLines);\n-        int b = border;\n-        update(null);\n-        border = b;\n-        update(lines);\n@@ -91,1 +91,1 @@\n-        update(oldLines);\n+        update(lines);\n@@ -94,2 +94,2 @@\n-    public void clear() {\n-        privateClear(oldLines.size());\n+    public void hide() {\n+        update(Collections.emptyList());\n@@ -98,4 +98,2 @@\n-    private void clearAll() {\n-        int b = border;\n-        border = 0;\n-        privateClear(oldLines.size() + b);\n+    public void update(List<AttributedString> lines) {\n+        update(lines, true);\n@@ -104,9 +102,2 @@\n-    private void privateClear(int statusSize) {\n-        List<AttributedString> as = new ArrayList<>();\n-        for (int i = 0; i < statusSize; i++) {\n-            as.add(new AttributedString(\"\"));\n-        }\n-        if (!as.isEmpty()) {\n-            update(as);\n-        }\n-    }\n+    private final AttributedString ellipsis =\n+            new AttributedStringBuilder().append(\"\\u2026\", AttributedStyle.INVERSE).toAttributedString();\n@@ -114,1 +105,5 @@\n-    public void update(List<AttributedString> lines) {\n+    \/**\n+     * Returns <code>true<\/code> if the cursor may be misplaced and should\n+     * be updated.\n+     *\/\n+    public void update(List<AttributedString> lines, boolean flush) {\n@@ -118,3 +113,1 @@\n-        if (lines == null) {\n-            lines = Collections.emptyList();\n-        }\n+        this.lines = new ArrayList<>(lines);\n@@ -122,1 +115,0 @@\n-            linesToRestore = new ArrayList<>(lines);\n@@ -125,2 +117,7 @@\n-        if (lines.isEmpty()) {\n-            clearAll();\n+\n+        lines = new ArrayList<>(lines);\n+        \/\/ add border\n+        int rows = display.rows;\n+        int columns = display.columns;\n+        if (border == 1 && !lines.isEmpty() && rows > 1) {\n+            lines.add(0, getBorderString(columns));\n@@ -128,2 +125,15 @@\n-        if (oldLines.equals(lines) && !force) {\n-            return;\n+        \/\/ trim or complete lines to the full width\n+        for (int i = 0; i < lines.size(); i++) {\n+            AttributedString str = lines.get(i);\n+            if (str.columnLength() > columns) {\n+                str = new AttributedStringBuilder(columns)\n+                        .append(lines.get(i).columnSubSequence(0, columns - ellipsis.columnLength()))\n+                        .append(ellipsis)\n+                        .toAttributedString();\n+            } else if (str.columnLength() < columns) {\n+                str = new AttributedStringBuilder(columns)\n+                        .append(str)\n+                        .append(' ', columns - str.columnLength())\n+                        .toAttributedString();\n+            }\n+            lines.set(i, str);\n@@ -131,4 +141,10 @@\n-        int statusSize = lines.size() + (lines.size() == 0 ? 0 : border);\n-        int nb = statusSize - oldLines.size() - (oldLines.size() == 0 ? 0 : border);\n-        if (nb > 0) {\n-            for (int i = 0; i < nb; i++) {\n+\n+        List<AttributedString> oldLines = this.display.oldLines;\n+\n+        int newScrollRegion = display.rows - 1 - lines.size();\n+        \/\/ Update the scroll region if needed.\n+        \/\/ Note that settings the scroll region usually moves the cursor, so we need to get ready for that.\n+        if (newScrollRegion < scrollRegion) {\n+            \/\/ We need to scroll up to grow the status bar\n+            terminal.puts(Capability.save_cursor);\n+            for (int i = newScrollRegion; i < scrollRegion; i++) {\n@@ -137,1 +153,3 @@\n-            for (int i = 0; i < nb; i++) {\n+            terminal.puts(Capability.change_scroll_region, 0, newScrollRegion);\n+            terminal.puts(Capability.restore_cursor);\n+            for (int i = newScrollRegion; i < scrollRegion; i++) {\n@@ -140,0 +158,6 @@\n+            scrollRegion = newScrollRegion;\n+        } else if (newScrollRegion > scrollRegion) {\n+            terminal.puts(Capability.save_cursor);\n+            terminal.puts(Capability.change_scroll_region, 0, newScrollRegion);\n+            terminal.puts(Capability.restore_cursor);\n+            scrollRegion = newScrollRegion;\n@@ -141,5 +165,9 @@\n-        terminal.puts(Capability.save_cursor);\n-        terminal.puts(Capability.cursor_address, rows - statusSize, 0);\n-        if (!terminal.puts(Capability.clr_eos)) {\n-            for (int i = rows - statusSize; i < rows; i++) {\n-                terminal.puts(Capability.cursor_address, i, 0);\n+\n+        \/\/ if the display has more lines, we need to add empty ones to make sure they will be erased\n+        List<AttributedString> toDraw = new ArrayList<>(lines);\n+        int nbToDraw = toDraw.size();\n+        int nbOldLines = oldLines.size();\n+        if (nbOldLines > nbToDraw) {\n+            terminal.puts(Capability.save_cursor);\n+            terminal.puts(Capability.cursor_address, display.rows - nbOldLines, 0);\n+            for (int i = 0; i < nbOldLines - nbToDraw; i++) {\n@@ -147,0 +175,4 @@\n+                if (i < nbOldLines - nbToDraw - 1) {\n+                    terminal.puts(Capability.cursor_down);\n+                }\n+                oldLines.remove(0);\n@@ -148,0 +180,1 @@\n+            terminal.puts(Capability.restore_cursor);\n@@ -149,12 +182,10 @@\n-        if (border == 1 && lines.size() > 0) {\n-            terminal.puts(Capability.cursor_address, rows - statusSize, 0);\n-            borderString.columnSubSequence(0, columns).print(terminal);\n-        }\n-        for (int i = 0; i < lines.size(); i++) {\n-            terminal.puts(Capability.cursor_address, rows - lines.size() + i, 0);\n-            if (lines.get(i).length() > columns) {\n-                AttributedStringBuilder asb = new AttributedStringBuilder();\n-                asb.append(lines.get(i).substring(0, columns - 3)).append(\"...\", new AttributedStyle(AttributedStyle.INVERSE));\n-                asb.toAttributedString().columnSubSequence(0, columns).print(terminal);\n-            } else {\n-                lines.get(i).columnSubSequence(0, columns).print(terminal);\n+        \/\/ update display\n+        display.update(lines, -1, flush);\n+    }\n+\n+    private AttributedString getBorderString(int columns) {\n+        if (borderString == null || borderString.length() != columns) {\n+            char borderChar = '\\u2700';\n+            AttributedStringBuilder bb = new AttributedStringBuilder();\n+            for (int i = 0; i < columns; i++) {\n+                bb.append(borderChar);\n@@ -162,0 +193,1 @@\n+            borderString = bb.toAttributedString();\n@@ -163,5 +195,1 @@\n-        terminal.puts(Capability.change_scroll_region, 0, rows - 1 - statusSize);\n-        terminal.puts(Capability.restore_cursor);\n-        terminal.flush();\n-        oldLines = new ArrayList<>(lines);\n-        force = false;\n+        return borderString;\n@@ -170,0 +198,5 @@\n+    \/**\n+     * The {@code suspend} method is used when a full-screen.\n+     * If the status was not already suspended, the lines\n+     * used by the status are cleared during this call.\n+     *\/\n@@ -171,2 +204,2 @@\n-        if (suspended) {\n-            return;\n+        if (!suspended) {\n+            suspended = true;\n@@ -174,5 +207,0 @@\n-        linesToRestore = new ArrayList<>(oldLines);\n-        int b = border;\n-        update(null);\n-        border = b;\n-        suspended = true;\n@@ -181,0 +209,6 @@\n+    \/**\n+     * The {@code restore()} call is the opposite of {@code suspend()} and\n+     * will make the status bar be updated again.\n+     * If the status was suspended, the lines\n+     * used by the status will be drawn during this call.\n+     *\/\n@@ -182,2 +216,3 @@\n-        if (!suspended) {\n-            return;\n+        if (suspended) {\n+            suspended = false;\n+            update(this.lines);\n@@ -185,3 +220,0 @@\n-        suspended = false;\n-        update(linesToRestore);\n-        linesToRestore = Collections.emptyList();\n@@ -191,1 +223,11 @@\n-        return oldLines.size() + border;\n+        return size(this.lines);\n+    }\n+\n+    private int size(List<?> lines) {\n+        int l = lines.size();\n+        return l > 0 ? l + border : 0;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Status[\" + \"supported=\" + supported + ']';\n@@ -194,0 +236,37 @@\n+    static class MovingCursorDisplay extends Display {\n+        protected int firstLine;\n+\n+        public MovingCursorDisplay(Terminal terminal) {\n+            super(terminal, false);\n+        }\n+\n+        @Override\n+        public void update(List<AttributedString> newLines, int targetCursorPos, boolean flush) {\n+            cursorPos = -1;\n+            firstLine = rows - newLines.size();\n+            super.update(newLines, targetCursorPos, flush);\n+            if (cursorPos != -1) {\n+                terminal.puts(Capability.restore_cursor);\n+            }\n+        }\n+\n+        @Override\n+        protected void moveVisualCursorTo(int targetPos, List<AttributedString> newLines) {\n+            initCursor();\n+            super.moveVisualCursorTo(targetPos, newLines);\n+        }\n+\n+        @Override\n+        protected int moveVisualCursorTo(int i1) {\n+            initCursor();\n+            return super.moveVisualCursorTo(i1);\n+        }\n+\n+        void initCursor() {\n+            if (cursorPos == -1) {\n+                terminal.puts(Capability.save_cursor);\n+                terminal.puts(Capability.cursor_address, firstLine, 0);\n+                cursorPos = 0;\n+            }\n+        }\n+    }\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Status.java","additions":182,"deletions":103,"binary":false,"changes":285,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -58,6 +58,6 @@\n-           \/\/ load indexed color\n-           Integer color = color(name);\n-           if (color != null && color != -1) {\n-               color = Colors.DEFAULT_COLORS_256[color];\n-           }\n-           return color;\n+            \/\/ load indexed color\n+            Integer color = color(name);\n+            if (color != null && color != -1) {\n+                color = Colors.DEFAULT_COLORS_256[color];\n+            }\n+            return color;\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/StyleResolver.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2018, the original author(s).\n@@ -47,1 +47,0 @@\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Timeout.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author(s).\n@@ -13,2 +13,1 @@\n-    private WCWidth() {\n-    }\n+    private WCWidth() {}\n@@ -47,2 +46,1 @@\n-    public static int wcwidth(int ucs)\n-    {\n+    public static int wcwidth(int ucs) {\n@@ -51,4 +49,2 @@\n-        if (ucs == 0)\n-            return 0;\n-        if (ucs < 32 || (ucs >= 0x7f && ucs < 0xa0))\n-            return -1;\n+        if (ucs == 0) return 0;\n+        if (ucs < 32 || (ucs >= 0x7f && ucs < 0xa0)) return -1;\n@@ -57,2 +53,1 @@\n-        if (bisearch(ucs, combining, combining.length - 1))\n-            return 0;\n+        if (bisearch(ucs, combining, combining.length - 1)) return 0;\n@@ -61,15 +56,17 @@\n-        return 1 +\n-                ((ucs >= 0x1100 &&\n-                        (ucs <= 0x115f ||                           \/* Hangul Jamo init. consonants *\/\n-                                ucs == 0x2329 || ucs == 0x232a ||\n-                                (ucs >= 0x2e80 && ucs <= 0xa4cf &&\n-                                        ucs != 0x303f) ||           \/* CJK ... Yi *\/\n-                                (ucs >= 0xac00 && ucs <= 0xd7a3) || \/* Hangul Syllables *\/\n-                                (ucs >= 0xf900 && ucs <= 0xfaff) || \/* CJK Compatibility Ideographs *\/\n-                                (ucs >= 0xfe10 && ucs <= 0xfe19) || \/* Vertical forms *\/\n-                                (ucs >= 0xfe30 && ucs <= 0xfe6f) || \/* CJK Compatibility Forms *\/\n-                                (ucs >= 0xff00 && ucs <= 0xff60) || \/* Fullwidth Forms *\/\n-                                (ucs >= 0xffe0 && ucs <= 0xffe6) ||\n-                                (ucs >= 0x1f000 && ucs <= 0x1feee) ||\n-                                (ucs >= 0x20000 && ucs <= 0x2fffd) ||\n-                                (ucs >= 0x30000 && ucs <= 0x3fffd))) ? 1 : 0);\n+        return 1\n+                + ((ucs >= 0x1100\n+                                && (ucs <= 0x115f\n+                                        || \/* Hangul Jamo init. consonants *\/ ucs == 0x2329\n+                                        || ucs == 0x232a\n+                                        || (ucs >= 0x2e80 && ucs <= 0xa4cf && ucs != 0x303f)\n+                                        || \/* CJK ... Yi *\/ (ucs >= 0xac00 && ucs <= 0xd7a3)\n+                                        || \/* Hangul Syllables *\/ (ucs >= 0xf900 && ucs <= 0xfaff)\n+                                        || \/* CJK Compatibility Ideographs *\/ (ucs >= 0xfe10 && ucs <= 0xfe19)\n+                                        || \/* Vertical forms *\/ (ucs >= 0xfe30 && ucs <= 0xfe6f)\n+                                        || \/* CJK Compatibility Forms *\/ (ucs >= 0xff00 && ucs <= 0xff60)\n+                                        || \/* Fullwidth Forms *\/ (ucs >= 0xffe0 && ucs <= 0xffe6)\n+                                        || (ucs >= 0x1f000 && ucs <= 0x1feee)\n+                                        || (ucs >= 0x20000 && ucs <= 0x2fffd)\n+                                        || (ucs >= 0x30000 && ucs <= 0x3fffd)))\n+                        ? 1\n+                        : 0);\n@@ -81,48 +78,48 @@\n-            new Interval( 0x0300, 0x036F ), new Interval( 0x0483, 0x0486 ), new Interval( 0x0488, 0x0489 ),\n-            new Interval( 0x0591, 0x05BD ), new Interval( 0x05BF, 0x05BF ), new Interval( 0x05C1, 0x05C2 ),\n-            new Interval( 0x05C4, 0x05C5 ), new Interval( 0x05C7, 0x05C7 ), new Interval( 0x0600, 0x0603 ),\n-            new Interval( 0x0610, 0x0615 ), new Interval( 0x064B, 0x065E ), new Interval( 0x0670, 0x0670 ),\n-            new Interval( 0x06D6, 0x06E4 ), new Interval( 0x06E7, 0x06E8 ), new Interval( 0x06EA, 0x06ED ),\n-            new Interval( 0x070F, 0x070F ), new Interval( 0x0711, 0x0711 ), new Interval( 0x0730, 0x074A ),\n-            new Interval( 0x07A6, 0x07B0 ), new Interval( 0x07EB, 0x07F3 ), new Interval( 0x0901, 0x0902 ),\n-            new Interval( 0x093C, 0x093C ), new Interval( 0x0941, 0x0948 ), new Interval( 0x094D, 0x094D ),\n-            new Interval( 0x0951, 0x0954 ), new Interval( 0x0962, 0x0963 ), new Interval( 0x0981, 0x0981 ),\n-            new Interval( 0x09BC, 0x09BC ), new Interval( 0x09C1, 0x09C4 ), new Interval( 0x09CD, 0x09CD ),\n-            new Interval( 0x09E2, 0x09E3 ), new Interval( 0x0A01, 0x0A02 ), new Interval( 0x0A3C, 0x0A3C ),\n-            new Interval( 0x0A41, 0x0A42 ), new Interval( 0x0A47, 0x0A48 ), new Interval( 0x0A4B, 0x0A4D ),\n-            new Interval( 0x0A70, 0x0A71 ), new Interval( 0x0A81, 0x0A82 ), new Interval( 0x0ABC, 0x0ABC ),\n-            new Interval( 0x0AC1, 0x0AC5 ), new Interval( 0x0AC7, 0x0AC8 ), new Interval( 0x0ACD, 0x0ACD ),\n-            new Interval( 0x0AE2, 0x0AE3 ), new Interval( 0x0B01, 0x0B01 ), new Interval( 0x0B3C, 0x0B3C ),\n-            new Interval( 0x0B3F, 0x0B3F ), new Interval( 0x0B41, 0x0B43 ), new Interval( 0x0B4D, 0x0B4D ),\n-            new Interval( 0x0B56, 0x0B56 ), new Interval( 0x0B82, 0x0B82 ), new Interval( 0x0BC0, 0x0BC0 ),\n-            new Interval( 0x0BCD, 0x0BCD ), new Interval( 0x0C3E, 0x0C40 ), new Interval( 0x0C46, 0x0C48 ),\n-            new Interval( 0x0C4A, 0x0C4D ), new Interval( 0x0C55, 0x0C56 ), new Interval( 0x0CBC, 0x0CBC ),\n-            new Interval( 0x0CBF, 0x0CBF ), new Interval( 0x0CC6, 0x0CC6 ), new Interval( 0x0CCC, 0x0CCD ),\n-            new Interval( 0x0CE2, 0x0CE3 ), new Interval( 0x0D41, 0x0D43 ), new Interval( 0x0D4D, 0x0D4D ),\n-            new Interval( 0x0DCA, 0x0DCA ), new Interval( 0x0DD2, 0x0DD4 ), new Interval( 0x0DD6, 0x0DD6 ),\n-            new Interval( 0x0E31, 0x0E31 ), new Interval( 0x0E34, 0x0E3A ), new Interval( 0x0E47, 0x0E4E ),\n-            new Interval( 0x0EB1, 0x0EB1 ), new Interval( 0x0EB4, 0x0EB9 ), new Interval( 0x0EBB, 0x0EBC ),\n-            new Interval( 0x0EC8, 0x0ECD ), new Interval( 0x0F18, 0x0F19 ), new Interval( 0x0F35, 0x0F35 ),\n-            new Interval( 0x0F37, 0x0F37 ), new Interval( 0x0F39, 0x0F39 ), new Interval( 0x0F71, 0x0F7E ),\n-            new Interval( 0x0F80, 0x0F84 ), new Interval( 0x0F86, 0x0F87 ), new Interval( 0x0F90, 0x0F97 ),\n-            new Interval( 0x0F99, 0x0FBC ), new Interval( 0x0FC6, 0x0FC6 ), new Interval( 0x102D, 0x1030 ),\n-            new Interval( 0x1032, 0x1032 ), new Interval( 0x1036, 0x1037 ), new Interval( 0x1039, 0x1039 ),\n-            new Interval( 0x1058, 0x1059 ), new Interval( 0x1160, 0x11FF ), new Interval( 0x135F, 0x135F ),\n-            new Interval( 0x1712, 0x1714 ), new Interval( 0x1732, 0x1734 ), new Interval( 0x1752, 0x1753 ),\n-            new Interval( 0x1772, 0x1773 ), new Interval( 0x17B4, 0x17B5 ), new Interval( 0x17B7, 0x17BD ),\n-            new Interval( 0x17C6, 0x17C6 ), new Interval( 0x17C9, 0x17D3 ), new Interval( 0x17DD, 0x17DD ),\n-            new Interval( 0x180B, 0x180D ), new Interval( 0x18A9, 0x18A9 ), new Interval( 0x1920, 0x1922 ),\n-            new Interval( 0x1927, 0x1928 ), new Interval( 0x1932, 0x1932 ), new Interval( 0x1939, 0x193B ),\n-            new Interval( 0x1A17, 0x1A18 ), new Interval( 0x1B00, 0x1B03 ), new Interval( 0x1B34, 0x1B34 ),\n-            new Interval( 0x1B36, 0x1B3A ), new Interval( 0x1B3C, 0x1B3C ), new Interval( 0x1B42, 0x1B42 ),\n-            new Interval( 0x1B6B, 0x1B73 ), new Interval( 0x1DC0, 0x1DCA ), new Interval( 0x1DFE, 0x1DFF ),\n-            new Interval( 0x200B, 0x200F ), new Interval( 0x202A, 0x202E ), new Interval( 0x2060, 0x2063 ),\n-            new Interval( 0x206A, 0x206F ), new Interval( 0x20D0, 0x20EF ), new Interval( 0x302A, 0x302F ),\n-            new Interval( 0x3099, 0x309A ), new Interval( 0xA806, 0xA806 ), new Interval( 0xA80B, 0xA80B ),\n-            new Interval( 0xA825, 0xA826 ), new Interval( 0xFB1E, 0xFB1E ), new Interval( 0xFE00, 0xFE0F ),\n-            new Interval( 0xFE20, 0xFE23 ), new Interval( 0xFEFF, 0xFEFF ), new Interval( 0xFFF9, 0xFFFB ),\n-            new Interval( 0x10A01, 0x10A03 ), new Interval( 0x10A05, 0x10A06 ), new Interval( 0x10A0C, 0x10A0F ),\n-            new Interval( 0x10A38, 0x10A3A ), new Interval( 0x10A3F, 0x10A3F ), new Interval( 0x1D167, 0x1D169 ),\n-            new Interval( 0x1D173, 0x1D182 ), new Interval( 0x1D185, 0x1D18B ), new Interval( 0x1D1AA, 0x1D1AD ),\n-            new Interval( 0x1D242, 0x1D244 ), new Interval( 0x1F3FB, 0x1F3FF ), new Interval( 0xE0001, 0xE0001 ),\n-            new Interval( 0xE0020, 0xE007F ), new Interval( 0xE0100, 0xE01EF )\n+        new Interval(0x0300, 0x036F), new Interval(0x0483, 0x0486), new Interval(0x0488, 0x0489),\n+        new Interval(0x0591, 0x05BD), new Interval(0x05BF, 0x05BF), new Interval(0x05C1, 0x05C2),\n+        new Interval(0x05C4, 0x05C5), new Interval(0x05C7, 0x05C7), new Interval(0x0600, 0x0603),\n+        new Interval(0x0610, 0x0615), new Interval(0x064B, 0x065E), new Interval(0x0670, 0x0670),\n+        new Interval(0x06D6, 0x06E4), new Interval(0x06E7, 0x06E8), new Interval(0x06EA, 0x06ED),\n+        new Interval(0x070F, 0x070F), new Interval(0x0711, 0x0711), new Interval(0x0730, 0x074A),\n+        new Interval(0x07A6, 0x07B0), new Interval(0x07EB, 0x07F3), new Interval(0x0901, 0x0902),\n+        new Interval(0x093C, 0x093C), new Interval(0x0941, 0x0948), new Interval(0x094D, 0x094D),\n+        new Interval(0x0951, 0x0954), new Interval(0x0962, 0x0963), new Interval(0x0981, 0x0981),\n+        new Interval(0x09BC, 0x09BC), new Interval(0x09C1, 0x09C4), new Interval(0x09CD, 0x09CD),\n+        new Interval(0x09E2, 0x09E3), new Interval(0x0A01, 0x0A02), new Interval(0x0A3C, 0x0A3C),\n+        new Interval(0x0A41, 0x0A42), new Interval(0x0A47, 0x0A48), new Interval(0x0A4B, 0x0A4D),\n+        new Interval(0x0A70, 0x0A71), new Interval(0x0A81, 0x0A82), new Interval(0x0ABC, 0x0ABC),\n+        new Interval(0x0AC1, 0x0AC5), new Interval(0x0AC7, 0x0AC8), new Interval(0x0ACD, 0x0ACD),\n+        new Interval(0x0AE2, 0x0AE3), new Interval(0x0B01, 0x0B01), new Interval(0x0B3C, 0x0B3C),\n+        new Interval(0x0B3F, 0x0B3F), new Interval(0x0B41, 0x0B43), new Interval(0x0B4D, 0x0B4D),\n+        new Interval(0x0B56, 0x0B56), new Interval(0x0B82, 0x0B82), new Interval(0x0BC0, 0x0BC0),\n+        new Interval(0x0BCD, 0x0BCD), new Interval(0x0C3E, 0x0C40), new Interval(0x0C46, 0x0C48),\n+        new Interval(0x0C4A, 0x0C4D), new Interval(0x0C55, 0x0C56), new Interval(0x0CBC, 0x0CBC),\n+        new Interval(0x0CBF, 0x0CBF), new Interval(0x0CC6, 0x0CC6), new Interval(0x0CCC, 0x0CCD),\n+        new Interval(0x0CE2, 0x0CE3), new Interval(0x0D41, 0x0D43), new Interval(0x0D4D, 0x0D4D),\n+        new Interval(0x0DCA, 0x0DCA), new Interval(0x0DD2, 0x0DD4), new Interval(0x0DD6, 0x0DD6),\n+        new Interval(0x0E31, 0x0E31), new Interval(0x0E34, 0x0E3A), new Interval(0x0E47, 0x0E4E),\n+        new Interval(0x0EB1, 0x0EB1), new Interval(0x0EB4, 0x0EB9), new Interval(0x0EBB, 0x0EBC),\n+        new Interval(0x0EC8, 0x0ECD), new Interval(0x0F18, 0x0F19), new Interval(0x0F35, 0x0F35),\n+        new Interval(0x0F37, 0x0F37), new Interval(0x0F39, 0x0F39), new Interval(0x0F71, 0x0F7E),\n+        new Interval(0x0F80, 0x0F84), new Interval(0x0F86, 0x0F87), new Interval(0x0F90, 0x0F97),\n+        new Interval(0x0F99, 0x0FBC), new Interval(0x0FC6, 0x0FC6), new Interval(0x102D, 0x1030),\n+        new Interval(0x1032, 0x1032), new Interval(0x1036, 0x1037), new Interval(0x1039, 0x1039),\n+        new Interval(0x1058, 0x1059), new Interval(0x1160, 0x11FF), new Interval(0x135F, 0x135F),\n+        new Interval(0x1712, 0x1714), new Interval(0x1732, 0x1734), new Interval(0x1752, 0x1753),\n+        new Interval(0x1772, 0x1773), new Interval(0x17B4, 0x17B5), new Interval(0x17B7, 0x17BD),\n+        new Interval(0x17C6, 0x17C6), new Interval(0x17C9, 0x17D3), new Interval(0x17DD, 0x17DD),\n+        new Interval(0x180B, 0x180D), new Interval(0x18A9, 0x18A9), new Interval(0x1920, 0x1922),\n+        new Interval(0x1927, 0x1928), new Interval(0x1932, 0x1932), new Interval(0x1939, 0x193B),\n+        new Interval(0x1A17, 0x1A18), new Interval(0x1B00, 0x1B03), new Interval(0x1B34, 0x1B34),\n+        new Interval(0x1B36, 0x1B3A), new Interval(0x1B3C, 0x1B3C), new Interval(0x1B42, 0x1B42),\n+        new Interval(0x1B6B, 0x1B73), new Interval(0x1DC0, 0x1DCA), new Interval(0x1DFE, 0x1DFF),\n+        new Interval(0x200B, 0x200F), new Interval(0x202A, 0x202E), new Interval(0x2060, 0x2063),\n+        new Interval(0x206A, 0x206F), new Interval(0x20D0, 0x20EF), new Interval(0x302A, 0x302F),\n+        new Interval(0x3099, 0x309A), new Interval(0xA806, 0xA806), new Interval(0xA80B, 0xA80B),\n+        new Interval(0xA825, 0xA826), new Interval(0xFB1E, 0xFB1E), new Interval(0xFE00, 0xFE0F),\n+        new Interval(0xFE20, 0xFE23), new Interval(0xFEFF, 0xFEFF), new Interval(0xFFF9, 0xFFFB),\n+        new Interval(0x10A01, 0x10A03), new Interval(0x10A05, 0x10A06), new Interval(0x10A0C, 0x10A0F),\n+        new Interval(0x10A38, 0x10A3A), new Interval(0x10A3F, 0x10A3F), new Interval(0x1D167, 0x1D169),\n+        new Interval(0x1D173, 0x1D182), new Interval(0x1D185, 0x1D18B), new Interval(0x1D1AA, 0x1D1AD),\n+        new Interval(0x1D242, 0x1D244), new Interval(0x1F3FB, 0x1F3FF), new Interval(0xE0001, 0xE0001),\n+        new Interval(0xE0020, 0xE007F), new Interval(0xE0100, 0xE01EF)\n@@ -146,2 +143,1 @@\n-        if (ucs < table[0].first || ucs > table[max].last)\n-            return false;\n+        if (ucs < table[0].first || ucs > table[max].last) return false;\n@@ -150,6 +146,3 @@\n-            if (ucs > table[mid].last)\n-                min = mid + 1;\n-            else if (ucs < table[mid].first)\n-                max = mid - 1;\n-            else\n-                return true;\n+            if (ucs > table[mid].last) min = mid + 1;\n+            else if (ucs < table[mid].first) max = mid - 1;\n+            else return true;\n@@ -160,2 +153,0 @@\n-\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/WCWidth.java","additions":75,"deletions":84,"binary":false,"changes":159,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2017, the original author or authors.\n+ * Copyright (c) 2002-2017, the original author(s).\n@@ -38,3 +38,5 @@\n-        this(out, charset.newDecoder()\n-                .onMalformedInput(CodingErrorAction.REPLACE)\n-                .onUnmappableCharacter(CodingErrorAction.REPLACE));\n+        this(\n+                out,\n+                charset.newDecoder()\n+                        .onMalformedInput(CodingErrorAction.REPLACE)\n+                        .onUnmappableCharacter(CodingErrorAction.REPLACE));\n@@ -50,1 +52,1 @@\n-        write(new byte[] { (byte)b }, 0, 1);\n+        write(new byte[] {(byte) b}, 0, 1);\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/WriterOutputStream.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -8,0 +8,3 @@\n+\tcivis=\\E[?25l, cvvis=\\E[?25h,\n+\tsmcup=\\E[?1049h, rmcup=\\E[?1049l,\n+\trc=\\E8, sc=\\E7,\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/windows-conemu.caps","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## JLine v3.22.0\n+## JLine v3.26.1\n@@ -6,1 +6,1 @@\n-Copyright (c) 2002-2018, the original author or authors.\n+Copyright (c) 2002-2023, the original author or authors.\n","filename":"src\/jdk.internal.le\/share\/legal\/jline.md","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,204 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2020, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna;\n-\n-import java.io.FileDescriptor;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.lang.reflect.Constructor;\n-\n-\/\/import com.sun.jna.Platform;\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.impl.AbstractPty;\n-import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n-import jdk.internal.org.jline.terminal.spi.Pty;\n-\/\/import jdk.internal.org.jline.terminal.impl.jna.freebsd.FreeBsdNativePty;\n-\/\/import jdk.internal.org.jline.terminal.impl.jna.linux.LinuxNativePty;\n-\/\/import jdk.internal.org.jline.terminal.impl.jna.osx.OsXNativePty;\n-\/\/import jdk.internal.org.jline.terminal.impl.jna.solaris.SolarisNativePty;\n-\n-public abstract class JnaNativePty extends AbstractPty implements Pty {\n-\n-    private final int master;\n-    private final int slave;\n-    private final int slaveOut;\n-    private final String name;\n-    private final FileDescriptor masterFD;\n-    private final FileDescriptor slaveFD;\n-    private final FileDescriptor slaveOutFD;\n-\n-    public static JnaNativePty current(TerminalProvider.Stream console) throws IOException {\n-\/\/        if (Platform.isMac()) {\n-\/\/            if (Platform.is64Bit() && Platform.isARM()) {\n-\/\/                throw new UnsupportedOperationException();\n-\/\/            }\n-\/\/            return OsXNativePty.current(console);\n-\/\/        } else if (Platform.isLinux()) {\n-\/\/            return LinuxNativePty.current(console);\n-\/\/        } else if (Platform.isSolaris()) {\n-\/\/            return SolarisNativePty.current(console);\n-\/\/        } else if (Platform.isFreeBSD()) {\n-\/\/            return FreeBsdNativePty.current(console);\n-\/\/        } else {\n-\/\/            throw new UnsupportedOperationException();\n-\/\/        }\n-        return JDKNativePty.current(console);\n-    }\n-\n-    public static JnaNativePty open(Attributes attr, Size size) throws IOException {\n-\/\/        if (Platform.isMac()) {\n-\/\/            return OsXNativePty.open(attr, size);\n-\/\/        } else if (Platform.isLinux()) {\n-\/\/            return LinuxNativePty.open(attr, size);\n-\/\/        } else if (Platform.isSolaris()) {\n-\/\/            return SolarisNativePty.open(attr, size);\n-\/\/        } else if (Platform.isFreeBSD()) {\n-\/\/            return FreeBsdNativePty.open(attr, size);\n-\/\/        } else {\n-\/\/            throw new UnsupportedOperationException();\n-\/\/        }\n-        return JDKNativePty.open(attr, size);\n-    }\n-\n-    protected JnaNativePty(int master, FileDescriptor masterFD, int slave, FileDescriptor slaveFD, String name) {\n-        this(master, masterFD, slave, slaveFD, slave, slaveFD, name);\n-    }\n-\n-    protected JnaNativePty(int master, FileDescriptor masterFD, int slave, FileDescriptor slaveFD, int slaveOut, FileDescriptor slaveOutFD, String name) {\n-        this.master = master;\n-        this.slave = slave;\n-        this.slaveOut = slaveOut;\n-        this.name = name;\n-        this.masterFD = masterFD;\n-        this.slaveFD = slaveFD;\n-        this.slaveOutFD = slaveOutFD;\n-    }\n-\n-    @Override\n-    public void close() throws IOException {\n-        if (master > 0) {\n-            getMasterInput().close();\n-        }\n-        if (slave > 0) {\n-            getSlaveInput().close();\n-        }\n-    }\n-\n-    public int getMaster() {\n-        return master;\n-    }\n-\n-    public int getSlave() {\n-        return slave;\n-    }\n-\n-    public int getSlaveOut() {\n-        return slaveOut;\n-    }\n-\n-    public String getName() {\n-        return name;\n-    }\n-\n-    public FileDescriptor getMasterFD() {\n-        return masterFD;\n-    }\n-\n-    public FileDescriptor getSlaveFD() {\n-        return slaveFD;\n-    }\n-\n-    public FileDescriptor getSlaveOutFD() {\n-        return slaveOutFD;\n-    }\n-\n-    public InputStream getMasterInput() {\n-        return new FileInputStream(getMasterFD());\n-    }\n-\n-    public OutputStream getMasterOutput() {\n-        return new FileOutputStream(getMasterFD());\n-    }\n-\n-    protected InputStream doGetSlaveInput() {\n-        return new FileInputStream(getSlaveFD());\n-    }\n-\n-    public OutputStream getSlaveOutput() {\n-        return new FileOutputStream(getSlaveOutFD());\n-    }\n-\n-    protected static FileDescriptor newDescriptor(int fd) {\n-        try {\n-            Constructor<FileDescriptor> cns = FileDescriptor.class.getDeclaredConstructor(int.class);\n-            cns.setAccessible(true);\n-            return cns.newInstance(fd);\n-        } catch (Throwable e) {\n-            throw new RuntimeException(\"Unable to create FileDescriptor\", e);\n-        }\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"JnaNativePty[\" + getName() + \"]\";\n-    }\n-\n-    public static boolean isPosixSystemStream(TerminalProvider.Stream stream) {\n-        switch (stream) {\n-            case Input: return isatty(0);\n-            case Output: return isatty(1);\n-            case Error: return isatty(2);\n-            default: return false;\n-        }\n-    }\n-\n-    public static String posixSystemStreamName(TerminalProvider.Stream stream) {\n-        switch (stream) {\n-            case Input: return ttyname(0);\n-            case Output: return ttyname(1);\n-            case Error: return ttyname(2);\n-            default: return null;\n-        }\n-    }\n-\n-    private static boolean isatty(int fd) {\n-\/\/        if (Platform.isMac()) {\n-\/\/            return OsXNativePty.isatty(fd) == 1;\n-\/\/        } else if (Platform.isLinux()) {\n-\/\/            return LinuxNativePty.isatty(fd) == 1;\n-\/\/        } else if (Platform.isSolaris()) {\n-\/\/            return SolarisNativePty.isatty(fd) == 1;\n-\/\/        } else if (Platform.isFreeBSD()) {\n-\/\/            return FreeBsdNativePty.isatty(fd) == 1;\n-\/\/        } else {\n-\/\/            return false;\n-\/\/        }\n-        return JDKNativePty.isatty(fd) == 1;\n-    }\n-\n-    private static String ttyname(int fd) {\n-\/\/        if (Platform.isMac()) {\n-\/\/            return OsXNativePty.ttyname(fd);\n-\/\/        } else if (Platform.isLinux()) {\n-\/\/            return LinuxNativePty.ttyname(fd);\n-\/\/        } else if (Platform.isSolaris()) {\n-\/\/            return SolarisNativePty.ttyname(fd);\n-\/\/        } else if (Platform.isFreeBSD()) {\n-\/\/            return FreeBsdNativePty.ttyname(fd);\n-\/\/        } else {\n-\/\/            return null;\n-\/\/        }\n-        return JDKNativePty.ttyname(fd);\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/unix\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/JnaNativePty.java","additions":0,"deletions":204,"binary":false,"changes":204,"status":"deleted"},{"patch":"@@ -1,105 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2020, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna;\n-\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.Terminal;\n-import jdk.internal.org.jline.terminal.impl.PosixPtyTerminal;\n-import jdk.internal.org.jline.terminal.impl.PosixSysTerminal;\n-\/\/import jdk.internal.org.jline.terminal.impl.jna.win.JnaWinSysTerminal;\n-import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n-import jdk.internal.org.jline.terminal.spi.Pty;\n-import jdk.internal.org.jline.utils.OSUtils;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.nio.charset.Charset;\n-import java.util.function.Function;\n-\n-public class JnaTerminalProvider implements TerminalProvider\n-{\n-    @Override\n-    public String name() {\n-        return \"jna\";\n-    }\n-\n-    public Pty current(TerminalProvider.Stream console) throws IOException {\n-        return JnaNativePty.current(console);\n-    }\n-\n-    public Pty open(Attributes attributes, Size size) throws IOException {\n-        return JnaNativePty.open(attributes, size);\n-    }\n-\n-    @Override\n-    public Terminal sysTerminal(String name, String type, boolean ansiPassThrough, Charset encoding,\n-                                boolean nativeSignals, Terminal.SignalHandler signalHandler, boolean paused,\n-                                Stream consoleStream, Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n-\/\/        if (OSUtils.IS_WINDOWS) {\n-\/\/            return winSysTerminal(name, type, ansiPassThrough, encoding, nativeSignals, signalHandler, paused, consoleStream );\n-\/\/        } else {\n-            return posixSysTerminal(name, type, ansiPassThrough, encoding, nativeSignals, signalHandler, paused, consoleStream, inputStreamWrapper );\n-\/\/        }\n-    }\n-\n-\/\/    public Terminal winSysTerminal(String name, String type, boolean ansiPassThrough, Charset encoding,\n-\/\/                                   boolean nativeSignals, Terminal.SignalHandler signalHandler, boolean paused,\n-\/\/                                   Stream console, Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n-\/\/        return JnaWinSysTerminal.createTerminal(name, type, ansiPassThrough, encoding, nativeSignals, signalHandler, paused, console);\n-\/\/    }\n-\/\/\n-    public Terminal posixSysTerminal(String name, String type, boolean ansiPassThrough, Charset encoding,\n-                                     boolean nativeSignals, Terminal.SignalHandler signalHandler, boolean paused,\n-                                     Stream consoleStream, Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n-\/\/        Pty pty = jdk.internal.org.jline.terminal.impl.ExecPty.current(consoleStream);\n-        Pty pty = current(consoleStream);\n-        return new PosixSysTerminal(name, type, pty, encoding, nativeSignals, signalHandler, inputStreamWrapper);\n-    }\n-\n-    @Override\n-    public Terminal newTerminal(String name, String type, InputStream in, OutputStream out,\n-                                Charset encoding, Terminal.SignalHandler signalHandler, boolean paused,\n-                                Attributes attributes, Size size) throws IOException\n-    {\n-        Pty pty = open(attributes, size);\n-        return new PosixPtyTerminal(name, type, pty, in, out, encoding, signalHandler, paused);\n-    }\n-\n-    @Override\n-    public boolean isSystemStream(Stream stream) {\n-        try {\n-\/\/            if (OSUtils.IS_WINDOWS) {\n-\/\/                return isWindowsSystemStream(stream);\n-\/\/            } else {\n-                return isPosixSystemStream(stream);\n-\/\/            }\n-        } catch (Throwable t) {\n-            return false;\n-        }\n-    }\n-\n-\/\/    public boolean isWindowsSystemStream(Stream stream) {\n-\/\/        return JnaWinSysTerminal.isWindowsSystemStream(stream);\n-\/\/    }\n-\n-    public boolean isPosixSystemStream(Stream stream) {\n-        return JnaNativePty.isPosixSystemStream(stream);\n-    }\n-\n-    @Override\n-    public String systemStreamName(Stream stream) {\n-        if (OSUtils.IS_WINDOWS) {\n-            return null;\n-        } else {\n-            return JnaNativePty.posixSystemStreamName(stream);\n-        }\n-    }\n-}\n","filename":"src\/jdk.internal.le\/unix\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/JnaTerminalProvider.java","additions":0,"deletions":105,"binary":false,"changes":105,"status":"deleted"},{"patch":"@@ -1,106 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2020, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna;\n-\n-import jdk.internal.org.jline.terminal.Attributes;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.Terminal;\n-import jdk.internal.org.jline.terminal.impl.PosixPtyTerminal;\n-import jdk.internal.org.jline.terminal.impl.PosixSysTerminal;\n-import jdk.internal.org.jline.terminal.impl.jna.win.JnaWinSysTerminal;\n-import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n-import jdk.internal.org.jline.terminal.spi.Pty;\n-import jdk.internal.org.jline.utils.OSUtils;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.nio.charset.Charset;\n-import java.util.function.Function;\n-\n-public class JnaTerminalProvider implements TerminalProvider\n-{\n-    @Override\n-    public String name() {\n-        return \"jna\";\n-    }\n-\n-\/\/    public Pty current(TerminalProvider.Stream console) throws IOException {\n-\/\/        return JnaNativePty.current(console);\n-\/\/    }\n-\/\/\n-\/\/    public Pty open(Attributes attributes, Size size) throws IOException {\n-\/\/        return JnaNativePty.open(attributes, size);\n-\/\/    }\n-\n-    @Override\n-    public Terminal sysTerminal(String name, String type, boolean ansiPassThrough, Charset encoding,\n-                                boolean nativeSignals, Terminal.SignalHandler signalHandler, boolean paused,\n-                                Stream consoleStream, Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n-        if (OSUtils.IS_WINDOWS) {\n-            return winSysTerminal(name, type, ansiPassThrough, encoding, nativeSignals, signalHandler, paused, consoleStream, inputStreamWrapper );\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    public Terminal winSysTerminal(String name, String type, boolean ansiPassThrough, Charset encoding,\n-                                   boolean nativeSignals, Terminal.SignalHandler signalHandler, boolean paused,\n-                                   Stream console, Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n-        return JnaWinSysTerminal.createTerminal(name, type, ansiPassThrough, encoding, nativeSignals, signalHandler, paused, console, inputStreamWrapper);\n-    }\n-\n-\/\/    public Terminal posixSysTerminal(String name, String type, boolean ansiPassThrough, Charset encoding,\n-\/\/                                     boolean nativeSignals, Terminal.SignalHandler signalHandler, boolean paused,\n-\/\/                                     Stream consoleStream) throws IOException {\n-\/\/        Pty pty = current(consoleStream);\n-\/\/        return new PosixSysTerminal(name, type, pty, encoding, nativeSignals, signalHandler);\n-\/\/    }\n-\n-    @Override\n-    public Terminal newTerminal(String name, String type, InputStream in, OutputStream out,\n-                                Charset encoding, Terminal.SignalHandler signalHandler, boolean paused,\n-                                Attributes attributes, Size size) throws IOException\n-    {\n-\/\/        Pty pty = open(attributes, size);\n-\/\/        return new PosixPtyTerminal(name, type, pty, in, out, encoding, signalHandler, paused);\n-        return null;\n-    }\n-\n-    @Override\n-    public boolean isSystemStream(Stream stream) {\n-        try {\n-            if (OSUtils.IS_WINDOWS) {\n-                return isWindowsSystemStream(stream);\n-            } else {\n-\/\/                return isPosixSystemStream(stream);\n-                return false;\n-            }\n-        } catch (Throwable t) {\n-            return false;\n-        }\n-    }\n-\n-    public boolean isWindowsSystemStream(Stream stream) {\n-        return JnaWinSysTerminal.isWindowsSystemStream(stream);\n-    }\n-\n-\/\/    public boolean isPosixSystemStream(Stream stream) {\n-\/\/        return JnaNativePty.isPosixSystemStream(stream);\n-\/\/    }\n-\n-    @Override\n-    public String systemStreamName(Stream stream) {\n-\/\/        if (OSUtils.IS_WINDOWS) {\n-            return null;\n-\/\/        } else {\n-\/\/            return JnaNativePty.posixSystemStreamName(stream);\n-\/\/        }\n-    }\n-}\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/JnaTerminalProvider.java","additions":0,"deletions":106,"binary":false,"changes":106,"status":"deleted"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.win;\n-\n-class IntByReference {\n-\n-    public int value;\n-\n-    public int getValue() {\n-        return value;\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/IntByReference.java","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -1,37 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2017, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.win;\n-\n-\/\/import com.sun.jna.LastErrorException;\n-\/\/import com.sun.jna.Pointer;\n-\/\/import com.sun.jna.ptr.IntByReference;\n-import jdk.internal.org.jline.terminal.impl.AbstractWindowsConsoleWriter;\n-import jdk.internal.org.jline.terminal.impl.jna.LastErrorException;\n-\n-import java.io.IOException;\n-\n-class JnaWinConsoleWriter extends AbstractWindowsConsoleWriter {\n-\n-    private final Pointer console;\n-    private final IntByReference writtenChars = new IntByReference();\n-\n-    JnaWinConsoleWriter(Pointer console) {\n-        this.console = console;\n-    }\n-\n-    @Override\n-    protected void writeConsole(char[] text, int len) throws IOException {\n-        try {\n-            Kernel32.INSTANCE.WriteConsoleW(this.console, text, len, this.writtenChars, null);\n-        } catch (LastErrorException e) {\n-            throw new IOException(\"Failed to write to console\", e);\n-        }\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/JnaWinConsoleWriter.java","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -1,228 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2020, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.win;\n-\n-import java.io.BufferedWriter;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.Writer;\n-import java.nio.charset.Charset;\n-import java.util.function.Function;\n-import java.util.function.IntConsumer;\n-\n-\/\/import com.sun.jna.LastErrorException;\n-\/\/import com.sun.jna.Pointer;\n-\/\/import com.sun.jna.ptr.IntByReference;\n-import jdk.internal.org.jline.terminal.Cursor;\n-import jdk.internal.org.jline.terminal.Size;\n-import jdk.internal.org.jline.terminal.impl.AbstractWindowsTerminal;\n-import jdk.internal.org.jline.terminal.impl.jna.LastErrorException;\n-import jdk.internal.org.jline.terminal.spi.TerminalProvider;\n-import jdk.internal.org.jline.utils.InfoCmp;\n-import jdk.internal.org.jline.utils.OSUtils;\n-\n-public class JnaWinSysTerminal extends AbstractWindowsTerminal {\n-\n-    private static final Pointer consoleIn = Kernel32.INSTANCE.GetStdHandle(Kernel32.STD_INPUT_HANDLE);\n-    private static final Pointer consoleOut = Kernel32.INSTANCE.GetStdHandle(Kernel32.STD_OUTPUT_HANDLE);\n-    private static final Pointer consoleErr = Kernel32.INSTANCE.GetStdHandle(Kernel32.STD_ERROR_HANDLE);\n-\n-    public static JnaWinSysTerminal createTerminal(String name, String type, boolean ansiPassThrough, Charset encoding, boolean nativeSignals, SignalHandler signalHandler, boolean paused, TerminalProvider.Stream consoleStream, Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n-        Pointer console;\n-        switch (consoleStream) {\n-            case Output:\n-                console = JnaWinSysTerminal.consoleOut;\n-                break;\n-            case Error:\n-                console = JnaWinSysTerminal.consoleErr;\n-                break;\n-            default:\n-                throw new IllegalArgumentException(\"Unsupport stream for console: \" + consoleStream);\n-        }\n-        Writer writer;\n-        if (ansiPassThrough) {\n-            if (type == null) {\n-                type = OSUtils.IS_CONEMU ? TYPE_WINDOWS_CONEMU : TYPE_WINDOWS;\n-            }\n-            writer = new JnaWinConsoleWriter(console);\n-        } else {\n-            IntByReference mode = new IntByReference();\n-            Kernel32.INSTANCE.GetConsoleMode(console, mode);\n-            try {\n-                Kernel32.INSTANCE.SetConsoleMode(console, mode.getValue() | AbstractWindowsTerminal.ENABLE_VIRTUAL_TERMINAL_PROCESSING);\n-                if (type == null) {\n-                    type = TYPE_WINDOWS_VTP;\n-                }\n-                writer = new JnaWinConsoleWriter(console);\n-            } catch (LastErrorException e) {\n-                if (OSUtils.IS_CONEMU) {\n-                    if (type == null) {\n-                        type = TYPE_WINDOWS_CONEMU;\n-                    }\n-                    writer = new JnaWinConsoleWriter(console);\n-                } else {\n-                    if (type == null) {\n-                        type = TYPE_WINDOWS;\n-                    }\n-                    writer = new WindowsAnsiWriter(new BufferedWriter(new JnaWinConsoleWriter(console)), console);\n-                }\n-            }\n-        }\n-        JnaWinSysTerminal terminal = new JnaWinSysTerminal(writer, name, type, encoding, nativeSignals, signalHandler, inputStreamWrapper);\n-        \/\/ Start input pump thread\n-        if (!paused) {\n-            terminal.resume();\n-        }\n-        return terminal;\n-    }\n-\n-    public static boolean isWindowsSystemStream(TerminalProvider.Stream stream) {\n-        try {\n-            IntByReference mode = new IntByReference();\n-            Pointer console;\n-            switch (stream) {\n-                case Input: console = consoleIn; break;\n-                case Output: console = consoleOut; break;\n-                case Error: console = consoleErr; break;\n-                default: return false;\n-            }\n-            Kernel32.INSTANCE.GetConsoleMode(console, mode);\n-            return true;\n-        } catch (LastErrorException e) {\n-            return false;\n-        }\n-    }\n-\n-    JnaWinSysTerminal(Writer writer, String name, String type, Charset encoding, boolean nativeSignals, SignalHandler signalHandler,\n-            Function<InputStream, InputStream> inputStreamWrapper) throws IOException {\n-        super(writer, name, type, encoding, nativeSignals, signalHandler, inputStreamWrapper);\n-        strings.put(InfoCmp.Capability.key_mouse, \"\\\\E[M\");\n-    }\n-\n-    @Override\n-    protected int getConsoleMode() {\n-        IntByReference mode = new IntByReference();\n-        Kernel32.INSTANCE.GetConsoleMode(consoleIn, mode);\n-        return mode.getValue();\n-    }\n-\n-    @Override\n-    protected void setConsoleMode(int mode) {\n-        Kernel32.INSTANCE.SetConsoleMode(consoleIn, mode);\n-    }\n-\n-    public Size getSize() {\n-        Kernel32.CONSOLE_SCREEN_BUFFER_INFO info = new Kernel32.CONSOLE_SCREEN_BUFFER_INFO();\n-        Kernel32.INSTANCE.GetConsoleScreenBufferInfo(consoleOut, info);\n-        return new Size(info.windowWidth(), info.windowHeight());\n-    }\n-\n-    public Size getBufferSize() {\n-        Kernel32.CONSOLE_SCREEN_BUFFER_INFO info = new Kernel32.CONSOLE_SCREEN_BUFFER_INFO();\n-        Kernel32.INSTANCE.GetConsoleScreenBufferInfo(consoleOut, info);\n-        return new Size(info.dwSize.X, info.dwSize.Y);\n-    }\n-\n-    protected boolean processConsoleInput() throws IOException {\n-        Kernel32.INPUT_RECORD event = readConsoleInput(100);\n-        if (event == null) {\n-            return false;\n-        }\n-\n-        switch (event.EventType) {\n-            case Kernel32.INPUT_RECORD.KEY_EVENT:\n-                processKeyEvent(event.Event.KeyEvent);\n-                return true;\n-            case Kernel32.INPUT_RECORD.WINDOW_BUFFER_SIZE_EVENT:\n-                raise(Signal.WINCH);\n-                return false;\n-            case Kernel32.INPUT_RECORD.MOUSE_EVENT:\n-                processMouseEvent(event.Event.MouseEvent);\n-                return true;\n-            case Kernel32.INPUT_RECORD.FOCUS_EVENT:\n-                processFocusEvent(event.Event.FocusEvent.bSetFocus);\n-                return true;\n-            default:\n-                \/\/ Skip event\n-                return false;\n-        }\n-    }\n-\n-    private void processKeyEvent(Kernel32.KEY_EVENT_RECORD keyEvent) throws IOException {\n-        processKeyEvent(keyEvent.bKeyDown, keyEvent.wVirtualKeyCode, keyEvent.uChar.UnicodeChar, keyEvent.dwControlKeyState);\n-    }\n-\n-    private char[] focus = new char[] { '\\033', '[', ' ' };\n-\n-    private void processFocusEvent(boolean hasFocus) throws IOException {\n-        if (focusTracking) {\n-            focus[2] = hasFocus ? 'I' : 'O';\n-            slaveInputPipe.write(focus);\n-        }\n-    }\n-\n-    private char[] mouse = new char[] { '\\033', '[', 'M', ' ', ' ', ' ' };\n-\n-    private void processMouseEvent(Kernel32.MOUSE_EVENT_RECORD mouseEvent) throws IOException {\n-        int dwEventFlags = mouseEvent.dwEventFlags;\n-        int dwButtonState = mouseEvent.dwButtonState;\n-        if (tracking == MouseTracking.Off\n-                || tracking == MouseTracking.Normal && dwEventFlags == Kernel32.MOUSE_MOVED\n-                || tracking == MouseTracking.Button && dwEventFlags == Kernel32.MOUSE_MOVED && dwButtonState == 0) {\n-            return;\n-        }\n-        int cb = 0;\n-        dwEventFlags &= ~ Kernel32.DOUBLE_CLICK; \/\/ Treat double-clicks as normal\n-        if (dwEventFlags == Kernel32.MOUSE_WHEELED) {\n-            cb |= 64;\n-            if ((dwButtonState >> 16) < 0) {\n-                cb |= 1;\n-            }\n-        } else if (dwEventFlags == Kernel32.MOUSE_HWHEELED) {\n-            return;\n-        } else if ((dwButtonState & Kernel32.FROM_LEFT_1ST_BUTTON_PRESSED) != 0) {\n-            cb |= 0x00;\n-        } else if ((dwButtonState & Kernel32.RIGHTMOST_BUTTON_PRESSED) != 0) {\n-            cb |= 0x01;\n-        } else if ((dwButtonState & Kernel32.FROM_LEFT_2ND_BUTTON_PRESSED) != 0) {\n-            cb |= 0x02;\n-        } else {\n-            cb |= 0x03;\n-        }\n-        int cx = mouseEvent.dwMousePosition.X;\n-        int cy = mouseEvent.dwMousePosition.Y;\n-        mouse[3] = (char) (' ' + cb);\n-        mouse[4] = (char) (' ' + cx + 1);\n-        mouse[5] = (char) (' ' + cy + 1);\n-        slaveInputPipe.write(mouse);\n-    }\n-\n-    private final Kernel32.INPUT_RECORD[] inputEvents = new Kernel32.INPUT_RECORD[1];\n-    private final IntByReference eventsRead = new IntByReference();\n-\n-    private Kernel32.INPUT_RECORD readConsoleInput(int dwMilliseconds) throws IOException {\n-        if (Kernel32.INSTANCE.WaitForSingleObject(consoleIn, dwMilliseconds) != 0) {\n-            return null;\n-        }\n-        Kernel32.INSTANCE.ReadConsoleInput(consoleIn, inputEvents, 1, eventsRead);\n-        if (eventsRead.getValue() == 1) {\n-            return inputEvents[0];\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    @Override\n-    public Cursor getCursorPosition(IntConsumer discarded) {\n-        Kernel32.CONSOLE_SCREEN_BUFFER_INFO info = new Kernel32.CONSOLE_SCREEN_BUFFER_INFO();\n-        Kernel32.INSTANCE.GetConsoleScreenBufferInfo(consoleOut, info);\n-        return new Cursor(info.dwCursorPosition.X, info.dwCursorPosition.Y);\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/JnaWinSysTerminal.java","additions":0,"deletions":228,"binary":false,"changes":228,"status":"deleted"},{"patch":"@@ -1,634 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2018, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.win;\n-\n-\/\/OpenJDK changes:\n-\/\/-references to JNA types commented out\n-\/\/-replacement types provided where needed (IntByReference, LastErrorException, Pointer)\n-\/\/-methods not used by JLine commented out\n-\/\/-provided an implementation of the interface (Kernel32Impl), backed by a native implementation (Kernel32.cpp)\n-\n-\/\/import com.sun.jna.LastErrorException;\n-\/\/import com.sun.jna.Native;\n-\/\/import com.sun.jna.Pointer;\n-\/\/import com.sun.jna.Structure;\n-\/\/import com.sun.jna.Union;\n-\/\/import com.sun.jna.ptr.IntByReference;\n-\/\/import com.sun.jna.win32.StdCallLibrary;\n-\/\/import com.sun.jna.win32.W32APIOptions;\n-import jdk.internal.org.jline.terminal.impl.jna.LastErrorException;\n-\n-interface Kernel32 {\/\/extends StdCallLibrary {\n-\n-    Kernel32 INSTANCE = new Kernel32Impl();\n-\/\/    Kernel32 INSTANCE = Native.load(\"kernel32\", Kernel32.class, W32APIOptions.UNICODE_OPTIONS);\n-\n-\/\/    Pointer INVALID_HANDLE_VALUE = Pointer.createConstant(-1L);\n-\n-    int STD_INPUT_HANDLE =  -10;\n-    int STD_OUTPUT_HANDLE = -11;\n-    int STD_ERROR_HANDLE =  -12;\n-\n-    int ENABLE_PROCESSED_INPUT =    0x0001;\n-    int ENABLE_LINE_INPUT =         0x0002;\n-    int ENABLE_ECHO_INPUT =         0x0004;\n-    int ENABLE_WINDOW_INPUT =       0x0008;\n-    int ENABLE_MOUSE_INPUT =        0x0010;\n-    int ENABLE_INSERT_MODE =        0x0020;\n-    int ENABLE_QUICK_EDIT_MODE =    0x0040;\n-    int ENABLE_EXTENDED_FLAGS =     0x0080;\n-\n-    int RIGHT_ALT_PRESSED =     0x0001;\n-    int LEFT_ALT_PRESSED =      0x0002;\n-    int RIGHT_CTRL_PRESSED =    0x0004;\n-    int LEFT_CTRL_PRESSED =     0x0008;\n-    int SHIFT_PRESSED =         0x0010;\n-\n-    int FOREGROUND_BLUE =       0x0001;\n-    int FOREGROUND_GREEN =      0x0002;\n-    int FOREGROUND_RED =        0x0004;\n-    int FOREGROUND_INTENSITY =  0x0008;\n-    int BACKGROUND_BLUE =       0x0010;\n-    int BACKGROUND_GREEN =      0x0020;\n-    int BACKGROUND_RED =        0x0040;\n-    int BACKGROUND_INTENSITY =  0x0080;\n-\n-    \/\/ Button state\n-    int FROM_LEFT_1ST_BUTTON_PRESSED = 0x0001;\n-    int RIGHTMOST_BUTTON_PRESSED     = 0x0002;\n-    int FROM_LEFT_2ND_BUTTON_PRESSED = 0x0004;\n-    int FROM_LEFT_3RD_BUTTON_PRESSED = 0x0008;\n-    int FROM_LEFT_4TH_BUTTON_PRESSED = 0x0010;\n-\n-    \/\/ Event flags\n-    int MOUSE_MOVED                  = 0x0001;\n-    int DOUBLE_CLICK                 = 0x0002;\n-    int MOUSE_WHEELED                = 0x0004;\n-    int MOUSE_HWHEELED               = 0x0008;\n-\n-    \/\/ DWORD WINAPI WaitForSingleObject(\n-    \/\/  _In_ HANDLE hHandle,\n-    \/\/  _In_ DWORD  dwMilliseconds\n-    \/\/ );\n-    int WaitForSingleObject(Pointer in_hHandle, int in_dwMilliseconds);\n-\n-    \/\/ HANDLE WINAPI GetStdHandle(\n-    \/\/ __in DWORD nStdHandle\n-    \/\/ );\n-    Pointer GetStdHandle(int nStdHandle);\n-\n-\/\/    \/\/ BOOL WINAPI AllocConsole(void);\n-\/\/    void AllocConsole() throws LastErrorException;\n-\/\/\n-\/\/    \/\/ BOOL WINAPI FreeConsole(void);\n-\/\/    void FreeConsole() throws LastErrorException;\n-\/\/\n-\/\/    \/\/ HWND WINAPI GetConsoleWindow(void);\n-\/\/    Pointer GetConsoleWindow();\n-\/\/\n-\/\/    \/\/ UINT WINAPI GetConsoleCP(void)\n-\/\/    int GetConsoleCP();\n-\/\/\n-    \/\/ UINT WINAPI GetConsoleOutputCP(void)\n-    int GetConsoleOutputCP();\n-\n-    \/\/ BOOL WINAPI FillConsoleOutputCharacter(\n-    \/\/ _In_ HANDLE hConsoleOutput,\n-    \/\/ _In_ TCHAR cCharacter,\n-    \/\/ _In_ DWORD nLength,\n-    \/\/ _In_ COORD dwWriteCoord,\n-    \/\/ _Out_ LPDWORD lpNumberOfCharsWritten);\n-    void FillConsoleOutputCharacter(Pointer in_hConsoleOutput,\n-                                    char in_cCharacter, int in_nLength, COORD in_dwWriteCoord,\n-                                    IntByReference out_lpNumberOfCharsWritten)\n-            throws LastErrorException;\n-\n-    \/\/ BOOL WINAPI FillConsoleOutputAttribute(\n-    \/\/ _In_ HANDLE hConsoleOutput,\n-    \/\/ _In_ WORD wAttribute,\n-    \/\/ _In_ DWORD nLength,\n-    \/\/ _In_ COORD dwWriteCoord,\n-    \/\/ _Out_ LPDWORD lpNumberOfAttrsWritten);\n-    void FillConsoleOutputAttribute(Pointer in_hConsoleOutput,\n-                                    short in_wAttribute, int in_nLength, COORD in_dwWriteCoord,\n-                                    IntByReference out_lpNumberOfAttrsWritten)\n-            throws LastErrorException;\n-\/\/\n-\/\/\/\/    \/\/ BOOL WINAPI GetConsoleCursorInfo(\n-\/\/\/\/    \/\/ _In_ HANDLE hConsoleOutput,\n-\/\/\/\/    \/\/ _Out_ PCONSOLE_CURSOR_INFO lpConsoleCursorInfo);\n-\/\/\/\/    void GetConsoleCursorInfo(Pointer in_hConsoleOutput,\n-\/\/\/\/                              CONSOLE_CURSOR_INFO.ByReference out_lpConsoleCursorInfo)\n-\/\/\/\/            throws LastErrorException;\n-\/\/\n-    \/\/ BOOL WINAPI GetConsoleMode(\n-    \/\/   _In_   HANDLE hConsoleHandle,\n-    \/\/   _Out_  LPDWORD lpMode);\n-    void GetConsoleMode(\n-            Pointer in_hConsoleOutput,\n-            IntByReference out_lpMode)\n-            throws LastErrorException;\n-\n-    \/\/ BOOL WINAPI GetConsoleScreenBufferInfo(\n-    \/\/ _In_   HANDLE hConsoleOutput,\n-    \/\/ _Out_  PCONSOLE_SCREEN_BUFFER_INFO lpConsoleScreenBufferInfo);\n-    void GetConsoleScreenBufferInfo(\n-            Pointer in_hConsoleOutput,\n-            CONSOLE_SCREEN_BUFFER_INFO out_lpConsoleScreenBufferInfo)\n-            throws LastErrorException;\n-\/\/\n-\/\/    \/\/ BOOL WINAPI GetNumberOfConsoleInputEvents(\n-\/\/    \/\/ _In_ HANDLE hConsoleInput,\n-\/\/    \/\/ _Out_ LPDWORD lpcNumberOfEvents);\n-\/\/    void GetNumberOfConsoleInputEvents(Pointer in_hConsoleOutput,\n-\/\/                                       IntByReference out_lpcNumberOfEvents) throws LastErrorException;\n-\/\/\n-    \/\/ BOOL WINAPI ReadConsoleInput(\n-    \/\/ _In_ HANDLE hConsoleInput,\n-    \/\/ _Out_ PINPUT_RECORD lpBuffer,\n-    \/\/ _In_ DWORD nLength,\n-    \/\/ _Out_ LPDWORD lpNumberOfEventsRead);\n-    void ReadConsoleInput(Pointer in_hConsoleOutput,\n-                          INPUT_RECORD[] out_lpBuffer, int in_nLength,\n-                          IntByReference out_lpNumberOfEventsRead) throws LastErrorException;\n-\n-\/\/    \/\/ BOOL WINAPI SetConsoleCtrlHandler(\n-\/\/    \/\/ _In_opt_  PHANDLER_ROUTINE HandlerRoutine,\n-\/\/    \/\/ _In_      BOOL Add);\n-\/\/    void SetConsoleCtrlHandler(\n-\/\/            Pointer in_opt_HandlerRoutine,\n-\/\/            boolean in_Add)\n-\/\/            throws LastErrorException;\n-\/\/\n-\/\/    \/\/ BOOL WINAPI ReadConsoleOutput(\n-\/\/    \/\/ _In_     HANDLE hConsoleOutput,\n-\/\/    \/\/ _Out_    PCHAR_INFO lpBuffer,\n-\/\/    \/\/ _In_     COORD dwBufferSize,\n-\/\/    \/\/ _In_     COORD dwBufferCoord,\n-\/\/    \/\/ _Inout_  PSMALL_RECT lpReadRegion);\n-\/\/\/\/    void ReadConsoleOutput(Pointer in_hConsoleOutput, CHAR_INFO[] out_lpBuffer,\n-\/\/\/\/                           COORD in_dwBufferSize, COORD in_dwBufferCoord,\n-\/\/\/\/                           SMALL_RECT inout_lpReadRegion) throws LastErrorException;\n-\/\/\/\/    void ReadConsoleOutputA(Pointer in_hConsoleOutput, CHAR_INFO[] out_lpBuffer,\n-\/\/\/\/                            COORD in_dwBufferSize, COORD in_dwBufferCoord,\n-\/\/\/\/                            SMALL_RECT inout_lpReadRegion) throws LastErrorException;\n-\/\/\n-\/\/    \/\/ BOOL WINAPI ReadConsoleOutputCharacter(\n-\/\/    \/\/ _In_   HANDLE hConsoleOutput,\n-\/\/    \/\/ _Out_  LPTSTR lpCharacter,\n-\/\/    \/\/ _In_   DWORD nLength,\n-\/\/    \/\/ _In_   COORD dwReadCoord,\n-\/\/    \/\/ _Out_  LPDWORD lpNumberOfCharsRead);\n-\/\/    void ReadConsoleOutputCharacter(Pointer in_hConsoleOutput,\n-\/\/                                    char[] ouy_lpCharacter, int in_nLength, COORD in_dwReadCoord,\n-\/\/                                    IntByReference out_lpNumberOfCharsRead)\n-\/\/            throws LastErrorException;\n-\/\/    void ReadConsoleOutputCharacterA(Pointer in_hConsoleOutput,\n-\/\/                                     byte[] ouy_lpCharacter, int in_nLength, COORD in_dwReadCoord,\n-\/\/                                     IntByReference out_lpNumberOfCharsRead)\n-\/\/            throws LastErrorException;\n-\/\/\n-\/\/    \/\/ BOOL WINAPI SetConsoleCursorInfo(\n-\/\/    \/\/ _In_ HANDLE hConsoleOutput,\n-\/\/    \/\/ _In_ const CONSOLE_CURSOR_INFO *lpConsoleCursorInfo);\n-\/\/    void SetConsoleCursorInfo(Pointer in_hConsoleOutput,\n-\/\/                              CONSOLE_CURSOR_INFO in_lpConsoleCursorInfo)\n-\/\/            throws LastErrorException;\n-\/\/\n-\/\/    \/\/ BOOL WINAPI SetConsoleCP(\n-\/\/    \/\/ _In_ UINT wCodePageID);\n-\/\/    void SetConsoleCP(int in_wCodePageID) throws LastErrorException;\n-\/\/\n-\/\/    \/\/ BOOL WINAPI SetConsoleOutputCP(\n-\/\/    \/\/ _In_ UINT wCodePageID);\n-\/\/    void SetConsoleOutputCP(int in_wCodePageID) throws LastErrorException;\n-\/\/\n-    \/\/ BOOL WINAPI SetConsoleCursorPosition(\n-    \/\/ _In_ HANDLE hConsoleOutput,\n-    \/\/ _In_ COORD dwCursorPosition);\n-    void SetConsoleCursorPosition(Pointer in_hConsoleOutput,\n-                                  COORD in_dwCursorPosition) throws LastErrorException;\n-\n-    \/\/ BOOL WINAPI SetConsoleMode(\n-    \/\/   _In_  HANDLE hConsoleHandle,\n-    \/\/   _In_  DWORD dwMode);\n-    void SetConsoleMode(\n-            Pointer in_hConsoleOutput,\n-            int in_dwMode) throws LastErrorException;\n-\n-\/\/    \/\/ BOOL WINAPI SetConsoleScreenBufferSize(\n-\/\/    \/\/ __in HANDLE hConsoleOutput,\n-\/\/    \/\/ __in COORD dwSize\n-\/\/    \/\/ );\n-\/\/    void SetConsoleScreenBufferSize(Pointer in_hConsoleOutput,\n-\/\/                                    COORD in_dwSize) throws LastErrorException;\n-\/\/\n-    \/\/ BOOL WINAPI SetConsoleTextAttribute(\n-    \/\/ _In_ HANDLE hConsoleOutput,\n-    \/\/ _In_ WORD   wAttributes\n-    \/\/ );\n-    void SetConsoleTextAttribute(Pointer in_hConsoleOutput,\n-                                 short in_wAttributes)\n-            throws LastErrorException;\n-\n-    \/\/ BOOL WINAPI SetConsoleTitle(\n-    \/\/ _In_ LPCTSTR lpConsoleTitle\n-    \/\/ );\n-    void SetConsoleTitle(String in_lpConsoleTitle)\n-            throws LastErrorException;\n-\n-\/\/    \/\/ BOOL WINAPI SetConsoleWindowInfo(\n-\/\/    \/\/ _In_ HANDLE hConsoleOutput,\n-\/\/    \/\/ _In_ BOOL bAbsolute,\n-\/\/    \/\/ _In_ const SMALL_RECT *lpConsoleWindow);\n-\/\/    void SetConsoleWindowInfo(Pointer in_hConsoleOutput,\n-\/\/                              boolean in_bAbsolute, SMALL_RECT in_lpConsoleWindow)\n-\/\/            throws LastErrorException;\n-\n-    \/\/ BOOL WINAPI WriteConsole(\n-    \/\/  _In_             HANDLE  hConsoleOutput,\n-    \/\/  _In_       const VOID    *lpBuffer,\n-    \/\/  _In_             DWORD   nNumberOfCharsToWrite,\n-    \/\/  _Out_            LPDWORD lpNumberOfCharsWritten,\n-    \/\/  _Reserved_       LPVOID  lpReserved\n-    \/\/ );\n-    void WriteConsoleW(Pointer in_hConsoleOutput, char[] in_lpBuffer, int in_nNumberOfCharsToWrite,\n-                          IntByReference out_lpNumberOfCharsWritten, Pointer reserved_lpReserved) throws LastErrorException;\n-\n-\/\/    \/\/ BOOL WINAPI WriteConsoleOutput(\n-\/\/    \/\/ _In_ HANDLE hConsoleOutput,\n-\/\/    \/\/ _In_ const CHAR_INFO *lpBuffer,\n-\/\/    \/\/ _In_ COORD dwBufferSize,\n-\/\/    \/\/ _In_ COORD dwBufferCoord,\n-\/\/    \/\/ _Inout_ PSMALL_RECT lpWriteRegion);\n-\/\/\/\/    void WriteConsoleOutput(Pointer in_hConsoleOutput, CHAR_INFO[] in_lpBuffer,\n-\/\/\/\/                            COORD in_dwBufferSize, COORD in_dwBufferCoord,\n-\/\/\/\/                            SMALL_RECT inout_lpWriteRegion) throws LastErrorException;\n-\/\/\/\/    void WriteConsoleOutputA(Pointer in_hConsoleOutput, CHAR_INFO[] in_lpBuffer,\n-\/\/\/\/                             COORD in_dwBufferSize, COORD in_dwBufferCoord,\n-\/\/\/\/                             SMALL_RECT inout_lpWriteRegion) throws LastErrorException;\n-\/\/\n-\/\/    \/\/ BOOL WINAPI WriteConsoleOutputCharacter(\n-\/\/    \/\/ _In_ HANDLE hConsoleOutput,\n-\/\/    \/\/ _In_ LPCTSTR lpCharacter,\n-\/\/    \/\/ _In_ DWORD nLength,\n-\/\/    \/\/ _In_ COORD dwWriteCoord,\n-\/\/    \/\/ _Out_ LPDWORD lpNumberOfCharsWritten);\n-\/\/    void WriteConsoleOutputCharacter(Pointer in_hConsoleOutput,\n-\/\/                                     char[] in_lpCharacter, int in_nLength, COORD in_dwWriteCoord,\n-\/\/                                     IntByReference out_lpNumberOfCharsWritten)\n-\/\/            throws LastErrorException;\n-\/\/    void WriteConsoleOutputCharacterA(Pointer in_hConsoleOutput,\n-\/\/                                      byte[] in_lpCharacter, int in_nLength, COORD in_dwWriteCoord,\n-\/\/                                      IntByReference out_lpNumberOfCharsWritten)\n-\/\/            throws LastErrorException;\n-\/\/\n-    \/\/ BOOL WINAPI ScrollConsoleScreenBuffer(\n-    \/\/     _In_           HANDLE     hConsoleOutput,\n-    \/\/     _In_     const SMALL_RECT *lpScrollRectangle,\n-    \/\/     _In_opt_ const SMALL_RECT *lpClipRectangle,\n-    \/\/     _In_           COORD      dwDestinationOrigin,\n-    \/\/     _In_     const CHAR_INFO  *lpFill);\n-    void ScrollConsoleScreenBuffer(Pointer in_hConsoleOutput,\n-                                   SMALL_RECT in_lpScrollRectangle,\n-                                   SMALL_RECT in_lpClipRectangle,\n-                                   COORD in_dwDestinationOrigin,\n-                                   CHAR_INFO in_lpFill)\n-            throws LastErrorException;\n-\n-    \/\/ typedef struct _CHAR_INFO {\n-    \/\/   union {\n-    \/\/     WCHAR UnicodeChar;\n-    \/\/     CHAR  AsciiChar;\n-    \/\/   } Char;\n-    \/\/   WORD  Attributes;\n-    \/\/ } CHAR_INFO, *PCHAR_INFO;\n-    class CHAR_INFO {\/\/extends Structure {\n-        public CHAR_INFO() {\n-        }\n-\n-        public CHAR_INFO(char c, short attr) {\n-            uChar = new UnionChar(c);\n-            Attributes = attr;\n-        }\n-\n-\/\/        public CHAR_INFO(byte c, short attr) {\n-\/\/            uChar = new UnionChar(c);\n-\/\/            Attributes = attr;\n-\/\/        }\n-\n-        public UnionChar uChar;\n-        public short Attributes;\n-\n-\/\/        public static CHAR_INFO[] createArray(int size) {\n-\/\/            return (CHAR_INFO[]) new CHAR_INFO().toArray(size);\n-\/\/        }\n-\/\/\n-\/\/        private static String[] fieldOrder = { \"uChar\", \"Attributes\" };\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-    }\n-\n-    \/\/ typedef struct _CONSOLE_CURSOR_INFO {\n-    \/\/   DWORD dwSize;\n-    \/\/   BOOL  bVisible;\n-    \/\/ } CONSOLE_CURSOR_INFO, *PCONSOLE_CURSOR_INFO;\n-    class CONSOLE_CURSOR_INFO {\/\/extends Structure {\n-        public int dwSize;\n-        public boolean bVisible;\n-\n-\/\/        public static class ByReference extends CONSOLE_CURSOR_INFO implements\n-\/\/                Structure.ByReference {\n-\/\/        }\n-\/\/\n-\/\/        private static String[] fieldOrder = { \"dwSize\", \"bVisible\" };\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-    }\n-\n-    \/\/ typedef struct _CONSOLE_SCREEN_BUFFER_INFO {\n-    \/\/   COORD      dwSize;\n-    \/\/   COORD      dwCursorPosition;\n-    \/\/   WORD       wAttributes;\n-    \/\/   SMALL_RECT srWindow;\n-    \/\/   COORD      dwMaximumWindowSize;\n-    \/\/ } CONSOLE_SCREEN_BUFFER_INFO;\n-    class CONSOLE_SCREEN_BUFFER_INFO {\/\/extends Structure {\n-        public COORD      dwSize;\n-        public COORD      dwCursorPosition;\n-        public short      wAttributes;\n-        public SMALL_RECT srWindow;\n-        public COORD      dwMaximumWindowSize;\n-\n-\/\/        private static String[] fieldOrder = { \"dwSize\", \"dwCursorPosition\", \"wAttributes\", \"srWindow\", \"dwMaximumWindowSize\" };\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-\n-        public int windowWidth() {\n-            return this.srWindow.width() + 1;\n-        }\n-\n-        public int windowHeight() {\n-            return this.srWindow.height() + 1;\n-        }\n-    }\n-\n-    \/\/ typedef struct _COORD {\n-    \/\/    SHORT X;\n-    \/\/    SHORT Y;\n-    \/\/  } COORD, *PCOORD;\n-    class COORD {\/\/extends Structure implements Structure.ByValue {\n-        public COORD() {\n-        }\n-\n-        public COORD(short X, short Y) {\n-            this.X = X;\n-            this.Y = Y;\n-        }\n-\n-        public short X;\n-        public short Y;\n-\n-\/\/        private static String[] fieldOrder = { \"X\", \"Y\" };\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-    }\n-\n-    \/\/ typedef struct _INPUT_RECORD {\n-    \/\/   WORD  EventType;\n-    \/\/   union {\n-    \/\/     KEY_EVENT_RECORD          KeyEvent;\n-    \/\/     MOUSE_EVENT_RECORD        MouseEvent;\n-    \/\/     WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;\n-    \/\/     MENU_EVENT_RECORD         MenuEvent;\n-    \/\/     FOCUS_EVENT_RECORD        FocusEvent;\n-    \/\/   } Event;\n-    \/\/ } INPUT_RECORD;\n-    class INPUT_RECORD {\/\/extends Structure {\n-        public static final short KEY_EVENT = 0x0001;\n-        public static final short MOUSE_EVENT = 0x0002;\n-        public static final short WINDOW_BUFFER_SIZE_EVENT = 0x0004;\n-        public static final short MENU_EVENT = 0x0008;\n-        public static final short FOCUS_EVENT = 0x0010;\n-\n-        public short EventType;\n-        public EventUnion Event;\n-\n-        public static class EventUnion {\/\/extends Union {\n-            public KEY_EVENT_RECORD KeyEvent;\n-            public MOUSE_EVENT_RECORD MouseEvent;\n-            public WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;\n-            public MENU_EVENT_RECORD MenuEvent;\n-            public FOCUS_EVENT_RECORD FocusEvent;\n-        }\n-\n-\/\/        @Override\n-\/\/        public void read() {\n-\/\/            readField(\"EventType\");\n-\/\/            switch (EventType) {\n-\/\/                case KEY_EVENT:\n-\/\/                    Event.setType(KEY_EVENT_RECORD.class);\n-\/\/                    break;\n-\/\/                case MOUSE_EVENT:\n-\/\/                    Event.setType(MOUSE_EVENT_RECORD.class);\n-\/\/                    break;\n-\/\/                case WINDOW_BUFFER_SIZE_EVENT:\n-\/\/                    Event.setType(WINDOW_BUFFER_SIZE_RECORD.class);\n-\/\/                    break;\n-\/\/                case MENU_EVENT:\n-\/\/                    Event.setType(MENU_EVENT_RECORD.class);\n-\/\/                    break;\n-\/\/                case FOCUS_EVENT:\n-\/\/                    Event.setType(MENU_EVENT_RECORD.class);\n-\/\/                    break;\n-\/\/            }\n-\/\/            super.read();\n-\/\/        }\n-\n-\/\/        private static String[] fieldOrder = {\"EventType\", \"Event\"};\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-    }\n-\n-    \/\/ typedef struct _KEY_EVENT_RECORD {\n-    \/\/   BOOL  bKeyDown;\n-    \/\/   WORD  wRepeatCount;\n-    \/\/   WORD  wVirtualKeyCode;\n-    \/\/   WORD  wVirtualScanCode;\n-    \/\/   union {\n-    \/\/     WCHAR UnicodeChar;\n-    \/\/     CHAR  AsciiChar;\n-    \/\/   } uChar;\n-    \/\/   DWORD dwControlKeyState;\n-    \/\/ } KEY_EVENT_RECORD;\n-    class KEY_EVENT_RECORD {\/\/extends Structure {\n-        public boolean bKeyDown;\n-        public short wRepeatCount;\n-        public short wVirtualKeyCode;\n-        public short wVirtualScanCode;\n-        public UnionChar uChar;\n-        public int dwControlKeyState;\n-\n-\/\/        private static String[] fieldOrder = {\"bKeyDown\", \"wRepeatCount\", \"wVirtualKeyCode\", \"wVirtualScanCode\", \"uChar\", \"dwControlKeyState\"};\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-    }\n-\n-    \/\/ typedef struct _MOUSE_EVENT_RECORD {\n-    \/\/   COORD dwMousePosition;\n-    \/\/   DWORD dwButtonState;\n-    \/\/   DWORD dwControlKeyState;\n-    \/\/   DWORD dwEventFlags;\n-    \/\/ } MOUSE_EVENT_RECORD;\n-    class MOUSE_EVENT_RECORD {\/\/extends Structure {\n-        public COORD dwMousePosition;\n-        public int dwButtonState;\n-        public int dwControlKeyState;\n-        public int dwEventFlags;\n-\n-\/\/        private static String[] fieldOrder = { \"dwMousePosition\", \"dwButtonState\", \"dwControlKeyState\", \"dwEventFlags\"};\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-    }\n-\n-    \/\/ typedef struct _WINDOW_BUFFER_SIZE_RECORD {\n-    \/\/   COORD dwSize;\n-    \/\/ } WINDOW_BUFFER_SIZE_RECORD;\n-    class WINDOW_BUFFER_SIZE_RECORD {\/\/extends Structure {\n-        public COORD dwSize;\n-\n-\/\/        private static String[] fieldOrder = {\"dwSize\"};\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-    }\n-\n-    \/\/ typedef struct _MENU_EVENT_RECORD {\n-    \/\/   UINT dwCommandId;\n-    \/\/ } MENU_EVENT_RECORD, *PMENU_EVENT_RECORD;\n-    class MENU_EVENT_RECORD {\/\/extends Structure {\n-\n-        public int dwCommandId;\n-\n-\/\/        private static String[] fieldOrder = {\"dwCommandId\"};\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-    }\n-\n-    \/\/ typedef struct _FOCUS_EVENT_RECORD {\n-    \/\/  BOOL bSetFocus;\n-    \/\/} FOCUS_EVENT_RECORD;\n-    class FOCUS_EVENT_RECORD {\/\/extends Structure {\n-        public boolean bSetFocus;\n-\n-\/\/        private static String[] fieldOrder = {\"bSetFocus\"};\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-    }\n-\n-    \/\/ typedef struct _SMALL_RECT {\n-    \/\/    SHORT Left;\n-    \/\/    SHORT Top;\n-    \/\/    SHORT Right;\n-    \/\/    SHORT Bottom;\n-    \/\/  } SMALL_RECT;\n-    class SMALL_RECT {\/\/extends Structure {\n-        public SMALL_RECT() {\n-        }\n-\n-        public SMALL_RECT(SMALL_RECT org) {\n-            this(org.Top, org.Left, org.Bottom, org.Right);\n-        }\n-\n-        public SMALL_RECT(short Top, short Left, short Bottom, short Right) {\n-            this.Top = Top;\n-            this.Left = Left;\n-            this.Bottom = Bottom;\n-            this.Right = Right;\n-        }\n-\n-        public short Left;\n-        public short Top;\n-        public short Right;\n-        public short Bottom;\n-\n-\/\/        private static String[] fieldOrder = { \"Left\", \"Top\", \"Right\", \"Bottom\" };\n-\/\/\n-\/\/        @Override\n-\/\/        protected java.util.List<String> getFieldOrder() {\n-\/\/            return java.util.Arrays.asList(fieldOrder);\n-\/\/        }\n-\n-        public short width() {\n-            return (short)(this.Right - this.Left);\n-        }\n-\n-        public short height() {\n-            return (short)(this.Bottom - this.Top);\n-        }\n-\n-    }\n-\n-    class UnionChar {\/\/extends Union {\n-        public UnionChar() {\n-        }\n-\n-        public UnionChar(char c) {\n-\/\/            setType(char.class);\n-            UnicodeChar = c;\n-        }\n-\n-\/\/        public UnionChar(byte c) {\n-\/\/            setType(byte.class);\n-\/\/            AsciiChar = c;\n-\/\/        }\n-\n-        public void set(char c) {\n-\/\/            setType(char.class);\n-            UnicodeChar = c;\n-        }\n-\n-\/\/        public void set(byte c) {\n-\/\/            setType(byte.class);\n-\/\/            AsciiChar = c;\n-\/\/        }\n-\n-        public char UnicodeChar;\n-\/\/        public byte AsciiChar;\n-    }\n-}\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32.java","additions":0,"deletions":634,"binary":false,"changes":634,"status":"deleted"},{"patch":"@@ -1,85 +0,0 @@\n-\/*\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.win;\n-\n-import jdk.internal.org.jline.terminal.impl.jna.LastErrorException;\n-import jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.CHAR_INFO;\n-import jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.CONSOLE_SCREEN_BUFFER_INFO;\n-import jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.COORD;\n-import jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.INPUT_RECORD;\n-import jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.SMALL_RECT;\n-\n-public class Kernel32Impl implements Kernel32 {\n-\n-    static {\n-        System.loadLibrary(\"le\");\n-        initIDs();\n-    }\n-\n-    private static native void initIDs();\n-\n-    @Override\n-    public native int WaitForSingleObject(Pointer in_hHandle, int in_dwMilliseconds);\n-\n-    @Override\n-    public native Pointer GetStdHandle(int nStdHandle);\n-\n-    @Override\n-    public native int GetConsoleOutputCP();\n-\n-    @Override\n-    public native void FillConsoleOutputCharacter(Pointer in_hConsoleOutput, char in_cCharacter, int in_nLength, COORD in_dwWriteCoord, IntByReference out_lpNumberOfCharsWritten) throws LastErrorException;\n-\n-    @Override\n-    public native void FillConsoleOutputAttribute(Pointer in_hConsoleOutput, short in_wAttribute, int in_nLength, COORD in_dwWriteCoord, IntByReference out_lpNumberOfAttrsWritten) throws LastErrorException;\n-\n-    @Override\n-    public native void GetConsoleMode(Pointer in_hConsoleOutput, IntByReference out_lpMode) throws LastErrorException;\n-\n-    @Override\n-    public native void GetConsoleScreenBufferInfo(Pointer in_hConsoleOutput, CONSOLE_SCREEN_BUFFER_INFO out_lpConsoleScreenBufferInfo) throws LastErrorException;\n-\n-    @Override\n-    public native void ReadConsoleInput(Pointer in_hConsoleOutput, INPUT_RECORD[] out_lpBuffer, int in_nLength, IntByReference out_lpNumberOfEventsRead) throws LastErrorException;\n-\n-    @Override\n-    public native void SetConsoleCursorPosition(Pointer in_hConsoleOutput, COORD in_dwCursorPosition) throws LastErrorException;\n-\n-    @Override\n-    public native void SetConsoleMode(Pointer in_hConsoleOutput, int in_dwMode) throws LastErrorException;\n-\n-    @Override\n-    public native void SetConsoleTextAttribute(Pointer in_hConsoleOutput, short in_wAttributes) throws LastErrorException;\n-\n-    @Override\n-    public native void SetConsoleTitle(String in_lpConsoleTitle) throws LastErrorException;\n-\n-    @Override\n-    public native void WriteConsoleW(Pointer in_hConsoleOutput, char[] in_lpBuffer, int in_nNumberOfCharsToWrite, IntByReference out_lpNumberOfCharsWritten, Pointer reserved_lpReserved) throws LastErrorException;\n-\n-    @Override\n-    public native void ScrollConsoleScreenBuffer(Pointer in_hConsoleOutput, SMALL_RECT in_lpScrollRectangle, SMALL_RECT in_lpClipRectangle, COORD in_dwDestinationOrigin, CHAR_INFO in_lpFill) throws LastErrorException;\n-\n-}\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32Impl.java","additions":0,"deletions":85,"binary":false,"changes":85,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.win;\n-\n-class Pointer {\n-    public final long value;\n-\n-    public Pointer(long value) {\n-        this.value = value;\n-    }\n-\n-}\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,353 +0,0 @@\n-\/*\n- * Copyright (c) 2002-2016, the original author or authors.\n- *\n- * This software is distributable under the BSD license. See the terms of the\n- * BSD license in the documentation provided with this software.\n- *\n- * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n- *\/\n-package jdk.internal.org.jline.terminal.impl.jna.win;\n-\n-import java.io.IOException;\n-import java.io.Writer;\n-\n-\/\/import com.sun.jna.Pointer;\n-\/\/import com.sun.jna.ptr.IntByReference;\n-import jdk.internal.org.jline.utils.AnsiWriter;\n-import jdk.internal.org.jline.utils.Colors;\n-\n-import static jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.BACKGROUND_BLUE;\n-import static jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.BACKGROUND_GREEN;\n-import static jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.BACKGROUND_INTENSITY;\n-import static jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.BACKGROUND_RED;\n-import static jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.FOREGROUND_BLUE;\n-import static jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.FOREGROUND_GREEN;\n-import static jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.FOREGROUND_INTENSITY;\n-import static jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.FOREGROUND_RED;\n-\n-\n-\/**\n- * A Windows ANSI escape processor, uses JNA to access native platform\n- * API's to change the console attributes.\n- *\n- * @since 1.0\n- * @author <a href=\"http:\/\/hiramchirino.com\">Hiram Chirino<\/a>\n- * @author Joris Kuipers\n- *\/\n-public final class WindowsAnsiWriter extends AnsiWriter {\n-\n-    private static final short FOREGROUND_BLACK   = 0;\n-    private static final short FOREGROUND_YELLOW  = (short) (FOREGROUND_RED|FOREGROUND_GREEN);\n-    private static final short FOREGROUND_MAGENTA = (short) (FOREGROUND_BLUE|FOREGROUND_RED);\n-    private static final short FOREGROUND_CYAN    = (short) (FOREGROUND_BLUE|FOREGROUND_GREEN);\n-    private static final short FOREGROUND_WHITE   = (short) (FOREGROUND_RED|FOREGROUND_GREEN|FOREGROUND_BLUE);\n-\n-    private static final short BACKGROUND_BLACK   = 0;\n-    private static final short BACKGROUND_YELLOW  = (short) (BACKGROUND_RED|BACKGROUND_GREEN);\n-    private static final short BACKGROUND_MAGENTA = (short) (BACKGROUND_BLUE|BACKGROUND_RED);\n-    private static final short BACKGROUND_CYAN    = (short) (BACKGROUND_BLUE|BACKGROUND_GREEN);\n-    private static final short BACKGROUND_WHITE   = (short) (BACKGROUND_RED|BACKGROUND_GREEN|BACKGROUND_BLUE);\n-\n-    private static final short ANSI_FOREGROUND_COLOR_MAP[] = {\n-            FOREGROUND_BLACK,\n-            FOREGROUND_RED,\n-            FOREGROUND_GREEN,\n-            FOREGROUND_YELLOW,\n-            FOREGROUND_BLUE,\n-            FOREGROUND_MAGENTA,\n-            FOREGROUND_CYAN,\n-            FOREGROUND_WHITE,\n-    };\n-\n-    private static final short ANSI_BACKGROUND_COLOR_MAP[] = {\n-            BACKGROUND_BLACK,\n-            BACKGROUND_RED,\n-            BACKGROUND_GREEN,\n-            BACKGROUND_YELLOW,\n-            BACKGROUND_BLUE,\n-            BACKGROUND_MAGENTA,\n-            BACKGROUND_CYAN,\n-            BACKGROUND_WHITE,\n-    };\n-\n-    private static final int MAX_ESCAPE_SEQUENCE_LENGTH = 100;\n-\n-    private final Pointer console;\n-\n-    private final Kernel32.CONSOLE_SCREEN_BUFFER_INFO info = new Kernel32.CONSOLE_SCREEN_BUFFER_INFO();\n-    private final short originalColors;\n-\n-    private boolean negative;\n-    private boolean bold;\n-    private boolean underline;\n-    private short savedX = -1;\n-    private short savedY = -1;\n-\n-    public WindowsAnsiWriter(Writer out, Pointer console) throws IOException {\n-        super(out);\n-        this.console = console;\n-        getConsoleInfo();\n-        originalColors = info.wAttributes;\n-    }\n-\n-    private void getConsoleInfo() throws IOException {\n-        out.flush();\n-        Kernel32.INSTANCE.GetConsoleScreenBufferInfo(console, info);\n-        if (negative) {\n-            info.wAttributes = invertAttributeColors(info.wAttributes);\n-        }\n-    }\n-\n-    private void applyAttribute() throws IOException {\n-        out.flush();\n-        short attributes = info.wAttributes;\n-        \/\/ bold is simulated by high foreground intensity\n-        if (bold) {\n-            attributes |= FOREGROUND_INTENSITY;\n-        }\n-        \/\/ underline is simulated by high foreground intensity\n-        if (underline) {\n-            attributes |= BACKGROUND_INTENSITY;\n-        }\n-        if (negative) {\n-            attributes = invertAttributeColors(attributes);\n-        }\n-        Kernel32.INSTANCE.SetConsoleTextAttribute(console, attributes);\n-    }\n-\n-    private short invertAttributeColors(short attributes) {\n-        \/\/ Swap the the Foreground and Background bits.\n-        int fg = 0x000F & attributes;\n-        fg <<= 4;\n-        int bg = 0X00F0 & attributes;\n-        bg >>= 4;\n-        attributes = (short) ((attributes & 0xFF00) | fg | bg);\n-        return attributes;\n-    }\n-\n-    private void applyCursorPosition() throws IOException {\n-        info.dwCursorPosition.X = (short) Math.max(0, Math.min(info.dwSize.X - 1, info.dwCursorPosition.X));\n-        info.dwCursorPosition.Y = (short) Math.max(0, Math.min(info.dwSize.Y - 1, info.dwCursorPosition.Y));\n-        Kernel32.INSTANCE.SetConsoleCursorPosition(console, info.dwCursorPosition);\n-    }\n-\n-    protected void processEraseScreen(int eraseOption) throws IOException {\n-        getConsoleInfo();\n-        IntByReference written = new IntByReference();\n-        switch(eraseOption) {\n-            case ERASE_SCREEN:\n-                Kernel32.COORD topLeft = new Kernel32.COORD();\n-                topLeft.X = 0;\n-                topLeft.Y = info.srWindow.Top;\n-                int screenLength = info.srWindow.height() * info.dwSize.X;\n-                Kernel32.INSTANCE.FillConsoleOutputCharacter(console, ' ', screenLength, topLeft, written);\n-                Kernel32.INSTANCE.FillConsoleOutputAttribute(console, info.wAttributes, screenLength, topLeft, written);\n-                break;\n-            case ERASE_SCREEN_TO_BEGINING:\n-                Kernel32.COORD topLeft2 = new Kernel32.COORD();\n-                topLeft2.X = 0;\n-                topLeft2.Y = info.srWindow.Top;\n-                int lengthToCursor = (info.dwCursorPosition.Y - info.srWindow.Top) * info.dwSize.X + info.dwCursorPosition.X;\n-                Kernel32.INSTANCE.FillConsoleOutputCharacter(console, ' ', lengthToCursor, topLeft2, written);\n-                Kernel32.INSTANCE.FillConsoleOutputAttribute(console, info.wAttributes, lengthToCursor, topLeft2, written);\n-                break;\n-            case ERASE_SCREEN_TO_END:\n-                int lengthToEnd = (info.srWindow.Bottom - info.dwCursorPosition.Y) * info.dwSize.X +\n-                        (info.dwSize.X - info.dwCursorPosition.X);\n-                Kernel32.INSTANCE.FillConsoleOutputCharacter(console, ' ', lengthToEnd, info.dwCursorPosition, written);\n-                Kernel32.INSTANCE.FillConsoleOutputAttribute(console, info.wAttributes, lengthToEnd, info.dwCursorPosition, written);\n-        }\n-    }\n-\n-    protected void processEraseLine(int eraseOption) throws IOException {\n-        getConsoleInfo();\n-        IntByReference written = new IntByReference();\n-        switch(eraseOption) {\n-            case ERASE_LINE:\n-                Kernel32.COORD leftColCurrRow = new Kernel32.COORD((short) 0, info.dwCursorPosition.Y);\n-                Kernel32.INSTANCE.FillConsoleOutputCharacter(console, ' ', info.dwSize.X, leftColCurrRow, written);\n-                Kernel32.INSTANCE.FillConsoleOutputAttribute(console, info.wAttributes, info.dwSize.X, leftColCurrRow, written);\n-                break;\n-            case ERASE_LINE_TO_BEGINING:\n-                Kernel32.COORD leftColCurrRow2 = new Kernel32.COORD((short) 0, info.dwCursorPosition.Y);\n-                Kernel32.INSTANCE.FillConsoleOutputCharacter(console, ' ', info.dwCursorPosition.X, leftColCurrRow2, written);\n-                Kernel32.INSTANCE.FillConsoleOutputAttribute(console, info.wAttributes, info.dwCursorPosition.X, leftColCurrRow2, written);\n-                break;\n-            case ERASE_LINE_TO_END:\n-                int lengthToLastCol = info.dwSize.X - info.dwCursorPosition.X;\n-                Kernel32.INSTANCE.FillConsoleOutputCharacter(console, ' ', lengthToLastCol, info.dwCursorPosition, written);\n-                Kernel32.INSTANCE.FillConsoleOutputAttribute(console, info.wAttributes, lengthToLastCol, info.dwCursorPosition, written);\n-        }\n-    }\n-\n-    protected void processCursorUpLine(int count) throws IOException {\n-        getConsoleInfo();\n-        info.dwCursorPosition.X = 0;\n-        info.dwCursorPosition.Y -= (short) count;\n-        applyCursorPosition();\n-    }\n-\n-    protected void processCursorDownLine(int count) throws IOException {\n-        getConsoleInfo();\n-        info.dwCursorPosition.X = 0;\n-        info.dwCursorPosition.Y += (short) count;\n-        applyCursorPosition();\n-    }\n-\n-    protected void processCursorLeft(int count) throws IOException {\n-        getConsoleInfo();\n-        info.dwCursorPosition.X -= (short) count;\n-        applyCursorPosition();\n-    }\n-\n-    protected void processCursorRight(int count) throws IOException {\n-        getConsoleInfo();\n-        info.dwCursorPosition.X += (short) count;\n-        applyCursorPosition();\n-    }\n-\n-    protected void processCursorDown(int count) throws IOException {\n-        getConsoleInfo();\n-        int nb = Math.max(0, info.dwCursorPosition.Y + count - info.dwSize.Y + 1);\n-        if (nb != count) {\n-            info.dwCursorPosition.Y += (short) count;\n-            applyCursorPosition();\n-        }\n-        if (nb > 0) {\n-            Kernel32.SMALL_RECT scroll = new Kernel32.SMALL_RECT(info.srWindow);\n-            scroll.Top = 0;\n-            Kernel32.COORD org = new Kernel32.COORD();\n-            org.X = 0;\n-            org.Y = (short)(- nb);\n-            Kernel32.CHAR_INFO info = new Kernel32.CHAR_INFO(' ', originalColors);\n-            Kernel32.INSTANCE.ScrollConsoleScreenBuffer(console, scroll, scroll, org, info);\n-        }\n-    }\n-\n-    protected void processCursorUp(int count) throws IOException {\n-        getConsoleInfo();\n-        info.dwCursorPosition.Y -= (short) count;\n-        applyCursorPosition();\n-    }\n-\n-    protected void processCursorTo(int row, int col) throws IOException {\n-        getConsoleInfo();\n-        info.dwCursorPosition.Y = (short) (info.srWindow.Top + row - 1);\n-        info.dwCursorPosition.X = (short) (col - 1);\n-        applyCursorPosition();\n-    }\n-\n-    protected void processCursorToColumn(int x) throws IOException {\n-        getConsoleInfo();\n-        info.dwCursorPosition.X = (short) (x - 1);\n-        applyCursorPosition();\n-    }\n-\n-    @Override\n-    protected void processSetForegroundColorExt(int paletteIndex) throws IOException {\n-        int color = Colors.roundColor(paletteIndex, 16);\n-        info.wAttributes = (short) ((info.wAttributes & ~0x0007) | ANSI_FOREGROUND_COLOR_MAP[color & 0x07]);\n-        info.wAttributes = (short) ((info.wAttributes & ~FOREGROUND_INTENSITY) | (color >= 8 ? FOREGROUND_INTENSITY : 0));\n-        applyAttribute();\n-    }\n-\n-    protected void processSetBackgroundColorExt(int paletteIndex) throws IOException {\n-        int color = Colors.roundColor(paletteIndex, 16);\n-        info.wAttributes = (short)((info.wAttributes & ~0x0070 ) | ANSI_BACKGROUND_COLOR_MAP[color & 0x07]);\n-        info.wAttributes = (short) ((info.wAttributes & ~BACKGROUND_INTENSITY) | (color >= 8 ? BACKGROUND_INTENSITY : 0));\n-        applyAttribute();\n-    }\n-\n-    protected void processDefaultTextColor() throws IOException {\n-        info.wAttributes = (short)((info.wAttributes & ~0x000F ) | (originalColors & 0x000F));\n-        applyAttribute();\n-    }\n-\n-    protected void processDefaultBackgroundColor() throws IOException {\n-        info.wAttributes = (short)((info.wAttributes & ~0x00F0 ) | (originalColors & 0x00F0));\n-        applyAttribute();\n-    }\n-\n-    protected void processAttributeRest() throws IOException {\n-        info.wAttributes = (short)((info.wAttributes & ~0x00FF ) | originalColors);\n-        this.negative = false;\n-        this.bold = false;\n-        this.underline = false;\n-        applyAttribute();\n-    }\n-\n-    protected void processSetAttribute(int attribute) throws IOException {\n-        switch(attribute) {\n-            case ATTRIBUTE_INTENSITY_BOLD:\n-                bold = true;\n-                applyAttribute();\n-                break;\n-            case ATTRIBUTE_INTENSITY_NORMAL:\n-                bold = false;\n-                applyAttribute();\n-                break;\n-\n-            case ATTRIBUTE_UNDERLINE:\n-                underline = true;\n-                applyAttribute();\n-                break;\n-            case ATTRIBUTE_UNDERLINE_OFF:\n-                underline = false;\n-                applyAttribute();\n-                break;\n-\n-            case ATTRIBUTE_NEGATIVE_ON:\n-                negative = true;\n-                applyAttribute();\n-                break;\n-            case ATTRIBUTE_NEGATIVE_OFF:\n-                negative = false;\n-                applyAttribute();\n-                break;\n-        }\n-    }\n-\n-    protected void processSaveCursorPosition() throws IOException {\n-        getConsoleInfo();\n-        savedX = info.dwCursorPosition.X;\n-        savedY = info.dwCursorPosition.Y;\n-    }\n-\n-    protected void processRestoreCursorPosition() throws IOException {\n-        \/\/ restore only if there was a save operation first\n-        if (savedX != -1 && savedY != -1) {\n-            out.flush();\n-            info.dwCursorPosition.X = savedX;\n-            info.dwCursorPosition.Y = savedY;\n-            applyCursorPosition();\n-        }\n-    }\n-\n-    @Override\n-    protected void processInsertLine(int optionInt) throws IOException {\n-        getConsoleInfo();\n-        Kernel32.SMALL_RECT scroll = new Kernel32.SMALL_RECT(info.srWindow);\n-        scroll.Top = info.dwCursorPosition.Y;\n-        Kernel32.COORD org = new Kernel32.COORD();\n-        org.X = 0;\n-        org.Y = (short)(info.dwCursorPosition.Y + optionInt);\n-        Kernel32.CHAR_INFO info = new Kernel32.CHAR_INFO(' ', originalColors);\n-        Kernel32.INSTANCE.ScrollConsoleScreenBuffer(console, scroll, scroll, org, info);\n-    }\n-\n-    @Override\n-    protected void processDeleteLine(int optionInt) throws IOException {\n-        getConsoleInfo();\n-        Kernel32.SMALL_RECT scroll = new Kernel32.SMALL_RECT(info.srWindow);\n-        scroll.Top = info.dwCursorPosition.Y;\n-        Kernel32.COORD org = new Kernel32.COORD();\n-        org.X = 0;\n-        org.Y = (short)(info.dwCursorPosition.Y - optionInt);\n-        Kernel32.CHAR_INFO info = new Kernel32.CHAR_INFO(' ', originalColors);\n-        Kernel32.INSTANCE.ScrollConsoleScreenBuffer(console, scroll, scroll, org, info);\n-    }\n-\n-    protected void processChangeWindowTitle(String label) {\n-        Kernel32.INSTANCE.SetConsoleTitle(label);\n-    }\n-}\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/WindowsAnsiWriter.java","additions":0,"deletions":353,"binary":false,"changes":353,"status":"deleted"},{"patch":"@@ -1,710 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"jni.h\"\n-#include \"jni_util.h\"\n-#include \"jvm.h\"\n-#include \"jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl.h\"\n-\n-#include <stdlib.h>\n-#include <wincon.h>\n-#include <winuser.h>\n-\n-static jclass pointerClass;\n-static jmethodID pointerConstructor;\n-static jfieldID pointerValue;\n-\n-static jclass intByReferenceClass;\n-static jfieldID intByReferenceValue;\n-\n-static jclass lastErrorExceptionClass;\n-static jmethodID lastErrorExceptionConstructor;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.CHAR_INFO\n-static jclass CHAR_INFO_Class;\n-static jmethodID CHAR_INFO_Constructor;\n-static jfieldID CHAR_INFO_uChar;\n-static jfieldID CHAR_INFO_Attributes;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.CONSOLE_CURSOR_INFO\n-static jclass CONSOLE_CURSOR_INFO_Class;\n-static jmethodID CONSOLE_CURSOR_INFO_Constructor;\n-static jfieldID CONSOLE_CURSOR_INFO_dwSize;\n-static jfieldID CONSOLE_CURSOR_INFO_bVisible;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.CONSOLE_SCREEN_BUFFER_INFO\n-static jclass CONSOLE_SCREEN_BUFFER_INFO_Class;\n-static jmethodID CONSOLE_SCREEN_BUFFER_INFO_Constructor;\n-static jfieldID CONSOLE_SCREEN_BUFFER_INFO_dwSize;\n-static jfieldID CONSOLE_SCREEN_BUFFER_INFO_dwCursorPosition;\n-static jfieldID CONSOLE_SCREEN_BUFFER_INFO_wAttributes;\n-static jfieldID CONSOLE_SCREEN_BUFFER_INFO_srWindow;\n-static jfieldID CONSOLE_SCREEN_BUFFER_INFO_dwMaximumWindowSize;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.COORD\n-static jclass COORD_Class;\n-static jmethodID COORD_Constructor;\n-static jfieldID COORD_X;\n-static jfieldID COORD_Y;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.INPUT_RECORD\n-static jclass INPUT_RECORD_Class;\n-static jmethodID INPUT_RECORD_Constructor;\n-static jfieldID INPUT_RECORD_EventType;\n-static jfieldID INPUT_RECORD_Event;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.INPUT_RECORD.EventUnion\n-static jclass EventUnion_Class;\n-static jmethodID EventUnion_Constructor;\n-static jfieldID EventUnion_KeyEvent;\n-static jfieldID EventUnion_MouseEvent;\n-static jfieldID EventUnion_WindowBufferSizeEvent;\n-static jfieldID EventUnion_MenuEvent;\n-static jfieldID EventUnion_FocusEvent;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.KEY_EVENT_RECORD\n-static jclass KEY_EVENT_RECORD_Class;\n-static jmethodID KEY_EVENT_RECORD_Constructor;\n-static jfieldID KEY_EVENT_RECORD_bKeyDown;\n-static jfieldID KEY_EVENT_RECORD_wRepeatCount;\n-static jfieldID KEY_EVENT_RECORD_wVirtualKeyCode;\n-static jfieldID KEY_EVENT_RECORD_wVirtualScanCode;\n-static jfieldID KEY_EVENT_RECORD_uChar;\n-static jfieldID KEY_EVENT_RECORD_dwControlKeyState;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.MOUSE_EVENT_RECORD\n-static jclass MOUSE_EVENT_RECORD_Class;\n-static jmethodID MOUSE_EVENT_RECORD_Constructor;\n-static jfieldID MOUSE_EVENT_RECORD_dwMousePosition;\n-static jfieldID MOUSE_EVENT_RECORD_dwButtonState;\n-static jfieldID MOUSE_EVENT_RECORD_dwControlKeyState;\n-static jfieldID MOUSE_EVENT_RECORD_dwEventFlags;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.WINDOW_BUFFER_SIZE_RECORD\n-static jclass WINDOW_BUFFER_SIZE_RECORD_Class;\n-static jmethodID WINDOW_BUFFER_SIZE_RECORD_Constructor;\n-static jfieldID WINDOW_BUFFER_SIZE_RECORD_dwSize;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.MENU_EVENT_RECORD\n-static jclass MENU_EVENT_RECORD_Class;\n-static jmethodID MENU_EVENT_RECORD_Constructor;\n-static jfieldID MENU_EVENT_RECORD_dwCommandId;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.FOCUS_EVENT_RECORD\n-static jclass FOCUS_EVENT_RECORD_Class;\n-static jmethodID FOCUS_EVENT_RECORD_Constructor;\n-static jfieldID FOCUS_EVENT_RECORD_bSetFocus;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.SMALL_RECT\n-static jclass SMALL_RECT_Class;\n-static jmethodID SMALL_RECT_Constructor;\n-static jfieldID SMALL_RECT_Left;\n-static jfieldID SMALL_RECT_Top;\n-static jfieldID SMALL_RECT_Right;\n-static jfieldID SMALL_RECT_Bottom;\n-\n-\/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.UnionChar\n-static jclass UnionChar_Class;\n-static jmethodID UnionChar_Constructor;\n-static jfieldID UnionChar_UnicodeChar;\n-\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_initIDs\n-  (JNIEnv *env, jclass) {\n-    jclass cls;\n-    cls = env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer\");\n-    CHECK_NULL(cls);\n-    pointerClass = (jclass) env->NewGlobalRef(cls);\n-    pointerConstructor = env->GetMethodID(cls, \"<init>\", \"(J)V\");\n-    CHECK_NULL(pointerConstructor);\n-    pointerValue  = env->GetFieldID(cls, \"value\", \"J\");\n-    CHECK_NULL(pointerValue);\n-\n-    cls = env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/LastErrorException\");\n-    CHECK_NULL(cls);\n-    lastErrorExceptionClass = (jclass) env->NewGlobalRef(cls);\n-    lastErrorExceptionConstructor = env->GetMethodID(cls, \"<init>\", \"(J)V\");\n-    CHECK_NULL(lastErrorExceptionConstructor);\n-\n-    cls = env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/IntByReference\");\n-    CHECK_NULL(cls);\n-    intByReferenceClass = (jclass) env->NewGlobalRef(cls);\n-    intByReferenceValue = env->GetFieldID(cls, \"value\", \"I\");\n-    CHECK_NULL(intByReferenceValue);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.CHAR_INFO\n-    CHAR_INFO_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$CHAR_INFO\"));\n-    CHECK_NULL(CHAR_INFO_Class);\n-    CHAR_INFO_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(CHAR_INFO_Constructor);\n-    CHAR_INFO_uChar = env->GetFieldID(CHAR_INFO_Class, \"uChar\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$UnionChar;\");\n-    CHECK_NULL(CHAR_INFO_uChar);\n-    CHAR_INFO_Attributes = env->GetFieldID(CHAR_INFO_Class, \"Attributes\", \"S\");\n-    CHECK_NULL(CHAR_INFO_Attributes);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.CONSOLE_CURSOR_INFO\n-    CONSOLE_CURSOR_INFO_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$CONSOLE_CURSOR_INFO\"));\n-    CHECK_NULL(CONSOLE_CURSOR_INFO_Class);\n-    CONSOLE_CURSOR_INFO_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(CONSOLE_CURSOR_INFO_Constructor);\n-    CONSOLE_CURSOR_INFO_dwSize = env->GetFieldID(CONSOLE_CURSOR_INFO_Class, \"dwSize\", \"I\");\n-    CHECK_NULL(CONSOLE_CURSOR_INFO_dwSize);\n-    CONSOLE_CURSOR_INFO_bVisible = env->GetFieldID(CONSOLE_CURSOR_INFO_Class, \"bVisible\", \"Z\");\n-    CHECK_NULL(CONSOLE_CURSOR_INFO_bVisible);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.CONSOLE_SCREEN_BUFFER_INFO\n-    CONSOLE_SCREEN_BUFFER_INFO_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$CONSOLE_SCREEN_BUFFER_INFO\"));\n-    CHECK_NULL(CONSOLE_SCREEN_BUFFER_INFO_Class);\n-    CONSOLE_SCREEN_BUFFER_INFO_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(CONSOLE_SCREEN_BUFFER_INFO_Constructor);\n-    CONSOLE_SCREEN_BUFFER_INFO_dwSize = env->GetFieldID(CONSOLE_SCREEN_BUFFER_INFO_Class, \"dwSize\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$COORD;\");\n-    CHECK_NULL(CONSOLE_SCREEN_BUFFER_INFO_dwSize);\n-    CONSOLE_SCREEN_BUFFER_INFO_dwCursorPosition = env->GetFieldID(CONSOLE_SCREEN_BUFFER_INFO_Class, \"dwCursorPosition\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$COORD;\");\n-    CHECK_NULL(CONSOLE_SCREEN_BUFFER_INFO_dwCursorPosition);\n-    CONSOLE_SCREEN_BUFFER_INFO_wAttributes = env->GetFieldID(CONSOLE_SCREEN_BUFFER_INFO_Class, \"wAttributes\", \"S\");\n-    CHECK_NULL(CONSOLE_SCREEN_BUFFER_INFO_wAttributes);\n-    CONSOLE_SCREEN_BUFFER_INFO_srWindow = env->GetFieldID(CONSOLE_SCREEN_BUFFER_INFO_Class, \"srWindow\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$SMALL_RECT;\");\n-    CHECK_NULL(CONSOLE_SCREEN_BUFFER_INFO_srWindow);\n-    CONSOLE_SCREEN_BUFFER_INFO_dwMaximumWindowSize = env->GetFieldID(CONSOLE_SCREEN_BUFFER_INFO_Class, \"dwMaximumWindowSize\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$COORD;\");\n-    CHECK_NULL(CONSOLE_SCREEN_BUFFER_INFO_dwMaximumWindowSize);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.COORD\n-    COORD_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$COORD\"));\n-    CHECK_NULL(COORD_Class);\n-    COORD_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(COORD_Constructor);\n-    COORD_X = env->GetFieldID(COORD_Class, \"X\", \"S\");\n-    CHECK_NULL(COORD_X);\n-    COORD_Y = env->GetFieldID(COORD_Class, \"Y\", \"S\");\n-    CHECK_NULL(COORD_Y);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.INPUT_RECORD\n-    INPUT_RECORD_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$INPUT_RECORD\"));\n-    CHECK_NULL(INPUT_RECORD_Class);\n-    INPUT_RECORD_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(INPUT_RECORD_Constructor);\n-    INPUT_RECORD_EventType = env->GetFieldID(INPUT_RECORD_Class, \"EventType\", \"S\");\n-    CHECK_NULL(INPUT_RECORD_EventType);\n-    INPUT_RECORD_Event = env->GetFieldID(INPUT_RECORD_Class, \"Event\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$INPUT_RECORD$EventUnion;\");\n-    CHECK_NULL(INPUT_RECORD_Event);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.INPUT_RECORD.EventUnion\n-    EventUnion_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$INPUT_RECORD$EventUnion\"));\n-    CHECK_NULL(EventUnion_Class);\n-    EventUnion_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(EventUnion_Constructor);\n-    EventUnion_KeyEvent = env->GetFieldID(EventUnion_Class, \"KeyEvent\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$KEY_EVENT_RECORD;\");\n-    CHECK_NULL(EventUnion_KeyEvent);\n-    EventUnion_MouseEvent = env->GetFieldID(EventUnion_Class, \"MouseEvent\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$MOUSE_EVENT_RECORD;\");\n-    CHECK_NULL(EventUnion_MouseEvent);\n-    EventUnion_WindowBufferSizeEvent = env->GetFieldID(EventUnion_Class, \"WindowBufferSizeEvent\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$WINDOW_BUFFER_SIZE_RECORD;\");\n-    CHECK_NULL(EventUnion_WindowBufferSizeEvent);\n-    EventUnion_MenuEvent = env->GetFieldID(EventUnion_Class, \"MenuEvent\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$MENU_EVENT_RECORD;\");\n-    CHECK_NULL(EventUnion_MenuEvent);\n-    EventUnion_FocusEvent = env->GetFieldID(EventUnion_Class, \"FocusEvent\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$FOCUS_EVENT_RECORD;\");\n-    CHECK_NULL(EventUnion_FocusEvent);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.KEY_EVENT_RECORD\n-    KEY_EVENT_RECORD_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$KEY_EVENT_RECORD\"));\n-    CHECK_NULL(KEY_EVENT_RECORD_Class);\n-    KEY_EVENT_RECORD_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(KEY_EVENT_RECORD_Constructor);\n-    KEY_EVENT_RECORD_bKeyDown = env->GetFieldID(KEY_EVENT_RECORD_Class, \"bKeyDown\", \"Z\");\n-    CHECK_NULL(KEY_EVENT_RECORD_bKeyDown);\n-    KEY_EVENT_RECORD_wRepeatCount = env->GetFieldID(KEY_EVENT_RECORD_Class, \"wRepeatCount\", \"S\");\n-    CHECK_NULL(KEY_EVENT_RECORD_wRepeatCount);\n-    KEY_EVENT_RECORD_wVirtualKeyCode = env->GetFieldID(KEY_EVENT_RECORD_Class, \"wVirtualKeyCode\", \"S\");\n-    CHECK_NULL(KEY_EVENT_RECORD_wVirtualKeyCode);\n-    KEY_EVENT_RECORD_wVirtualScanCode = env->GetFieldID(KEY_EVENT_RECORD_Class, \"wVirtualScanCode\", \"S\");\n-    CHECK_NULL(KEY_EVENT_RECORD_wVirtualScanCode);\n-    KEY_EVENT_RECORD_uChar = env->GetFieldID(KEY_EVENT_RECORD_Class, \"uChar\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$UnionChar;\");\n-    CHECK_NULL(KEY_EVENT_RECORD_uChar);\n-    KEY_EVENT_RECORD_dwControlKeyState = env->GetFieldID(KEY_EVENT_RECORD_Class, \"dwControlKeyState\", \"I\");\n-    CHECK_NULL(KEY_EVENT_RECORD_dwControlKeyState);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.MOUSE_EVENT_RECORD\n-    MOUSE_EVENT_RECORD_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$MOUSE_EVENT_RECORD\"));\n-    CHECK_NULL(MOUSE_EVENT_RECORD_Class);\n-    MOUSE_EVENT_RECORD_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(MOUSE_EVENT_RECORD_Constructor);\n-    MOUSE_EVENT_RECORD_dwMousePosition = env->GetFieldID(MOUSE_EVENT_RECORD_Class, \"dwMousePosition\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$COORD;\");\n-    CHECK_NULL(MOUSE_EVENT_RECORD_dwMousePosition);\n-    MOUSE_EVENT_RECORD_dwButtonState = env->GetFieldID(MOUSE_EVENT_RECORD_Class, \"dwButtonState\", \"I\");\n-    CHECK_NULL(MOUSE_EVENT_RECORD_dwButtonState);\n-    MOUSE_EVENT_RECORD_dwControlKeyState = env->GetFieldID(MOUSE_EVENT_RECORD_Class, \"dwControlKeyState\", \"I\");\n-    CHECK_NULL(MOUSE_EVENT_RECORD_dwControlKeyState);\n-    MOUSE_EVENT_RECORD_dwEventFlags = env->GetFieldID(MOUSE_EVENT_RECORD_Class, \"dwEventFlags\", \"I\");\n-    CHECK_NULL(MOUSE_EVENT_RECORD_dwEventFlags);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.WINDOW_BUFFER_SIZE_RECORD\n-    WINDOW_BUFFER_SIZE_RECORD_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$WINDOW_BUFFER_SIZE_RECORD\"));\n-    CHECK_NULL(WINDOW_BUFFER_SIZE_RECORD_Class);\n-    WINDOW_BUFFER_SIZE_RECORD_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(WINDOW_BUFFER_SIZE_RECORD_Constructor);\n-    WINDOW_BUFFER_SIZE_RECORD_dwSize = env->GetFieldID(WINDOW_BUFFER_SIZE_RECORD_Class, \"dwSize\", \"Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$COORD;\");\n-    CHECK_NULL(WINDOW_BUFFER_SIZE_RECORD_dwSize);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.MENU_EVENT_RECORD\n-    MENU_EVENT_RECORD_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$MENU_EVENT_RECORD\"));\n-    CHECK_NULL(MENU_EVENT_RECORD_Class);\n-    MENU_EVENT_RECORD_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(MENU_EVENT_RECORD_Constructor);\n-    MENU_EVENT_RECORD_dwCommandId = env->GetFieldID(MENU_EVENT_RECORD_Class, \"dwCommandId\", \"I\");\n-    CHECK_NULL(MENU_EVENT_RECORD_dwCommandId);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.FOCUS_EVENT_RECORD\n-    FOCUS_EVENT_RECORD_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$FOCUS_EVENT_RECORD\"));\n-    CHECK_NULL(FOCUS_EVENT_RECORD_Class);\n-    FOCUS_EVENT_RECORD_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(FOCUS_EVENT_RECORD_Constructor);\n-    FOCUS_EVENT_RECORD_bSetFocus = env->GetFieldID(FOCUS_EVENT_RECORD_Class, \"bSetFocus\", \"Z\");\n-    CHECK_NULL(FOCUS_EVENT_RECORD_bSetFocus);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.SMALL_RECT\n-    SMALL_RECT_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$SMALL_RECT\"));\n-    CHECK_NULL(SMALL_RECT_Class);\n-    SMALL_RECT_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(SMALL_RECT_Constructor);\n-    SMALL_RECT_Left = env->GetFieldID(SMALL_RECT_Class, \"Left\", \"S\");\n-    CHECK_NULL(SMALL_RECT_Left);\n-    SMALL_RECT_Top = env->GetFieldID(SMALL_RECT_Class, \"Top\", \"S\");\n-    CHECK_NULL(SMALL_RECT_Top);\n-    SMALL_RECT_Right = env->GetFieldID(SMALL_RECT_Class, \"Right\", \"S\");\n-    CHECK_NULL(SMALL_RECT_Right);\n-    SMALL_RECT_Bottom = env->GetFieldID(SMALL_RECT_Class, \"Bottom\", \"S\");\n-    CHECK_NULL(SMALL_RECT_Bottom);\n-\n-    \/\/jdk.internal.org.jline.terminal.impl.jna.win.Kernel32.UnionChar\n-    UnionChar_Class = (jclass) env->NewGlobalRef(env->FindClass(\"jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32$UnionChar\"));\n-    CHECK_NULL(UnionChar_Class);\n-    UnionChar_Constructor = env->GetMethodID(cls, \"<init>\", \"()V\");\n-    CHECK_NULL(UnionChar_Constructor);\n-    UnionChar_UnicodeChar = env->GetFieldID(UnionChar_Class, \"UnicodeChar\", \"C\");\n-    CHECK_NULL(UnionChar_UnicodeChar);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    WaitForSingleObject\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;I)I\n- *\/\n-JNIEXPORT jint JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_WaitForSingleObject\n-  (JNIEnv *env, jobject kernel, jobject in_hHandle, jint in_dwMilliseconds) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hHandle, pointerValue));\n-    return WaitForSingleObject(h, in_dwMilliseconds);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    GetStdHandle\n- * Signature: (I)Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;\n- *\/\n-JNIEXPORT jobject JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_GetStdHandle\n-  (JNIEnv *env, jobject, jint nStdHandle) {\n-    return env->NewObject(pointerClass,\n-                          pointerConstructor,\n-                          nStdHandle);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    GetConsoleOutputCP\n- * Signature: ()I\n- *\/\n-JNIEXPORT jint JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_GetConsoleOutputCP\n-  (JNIEnv *, jobject) {\n-    return GetConsoleOutputCP();\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    FillConsoleOutputCharacter\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;CILjdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32\/COORD;Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/IntByReference;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_FillConsoleOutputCharacter\n-  (JNIEnv *env, jobject kernel, jobject in_hConsoleOutput, jchar in_cCharacter, jint in_nLength, jobject in_dwWriteCoord, jobject out_lpNumberOfCharsWritten) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hConsoleOutput, pointerValue));\n-    DWORD written;\n-    COORD coord;\n-    coord.X = (SHORT) env->GetLongField(in_dwWriteCoord, COORD_X);\n-    coord.Y = (SHORT) env->GetLongField(in_dwWriteCoord, COORD_Y);\n-    if (!FillConsoleOutputCharacter(h, (CHAR) in_cCharacter, in_nLength, coord, &written)) {\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return ;\n-    }\n-    env->SetIntField(out_lpNumberOfCharsWritten, intByReferenceValue, written);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    FillConsoleOutputAttribute\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;SILjdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32\/COORD;Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/IntByReference;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_FillConsoleOutputAttribute\n-  (JNIEnv *env, jobject kernel, jobject in_hConsoleOutput, jshort in_wAttribute, jint in_nLength, jobject in_dwWriteCoord, jobject out_lpNumberOfAttrsWritten) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hConsoleOutput, pointerValue));\n-    DWORD written;\n-    COORD coord;\n-    coord.X = (SHORT) env->GetLongField(in_dwWriteCoord, COORD_X);\n-    coord.Y = (SHORT) env->GetLongField(in_dwWriteCoord, COORD_Y);\n-    if (!FillConsoleOutputAttribute(h, in_wAttribute, in_nLength, coord, &written)) {\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return ;\n-    }\n-    env->SetIntField(out_lpNumberOfAttrsWritten, intByReferenceValue, written);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    GetConsoleMode\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/IntByReference;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_GetConsoleMode\n-  (JNIEnv *env, jobject, jobject in_hConsoleOutput, jobject out_lpMode) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hConsoleOutput, pointerValue));\n-    DWORD mode;\n-    if (!GetConsoleMode(h, &mode)) {\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return ;\n-    }\n-    env->SetIntField(out_lpMode, intByReferenceValue, mode);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    GetConsoleScreenBufferInfo\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32\/CONSOLE_SCREEN_BUFFER_INFO;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_GetConsoleScreenBufferInfo\n-  (JNIEnv *env, jobject, jobject in_hConsoleOutput, jobject\/*CONSOLE_SCREEN_BUFFER_INFO*\/ out_lpConsoleScreenBufferInfo) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hConsoleOutput, pointerValue));\n-    CONSOLE_SCREEN_BUFFER_INFO buffer;\n-    if (!GetConsoleScreenBufferInfo(h, &buffer)) {\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return ;\n-    }\n-\n-    jobject dwSize = env->NewObject(COORD_Class,\n-                                    COORD_Constructor);\n-    env->SetIntField(dwSize, COORD_X, buffer.dwSize.X);\n-    env->SetIntField(dwSize, COORD_Y, buffer.dwSize.Y);\n-    env->SetObjectField(out_lpConsoleScreenBufferInfo, CONSOLE_SCREEN_BUFFER_INFO_dwSize, dwSize);\n-\n-    jobject dwCursorPosition = env->NewObject(COORD_Class,\n-                                              COORD_Constructor);\n-    env->SetIntField(dwCursorPosition, COORD_X, buffer.dwCursorPosition.X);\n-    env->SetIntField(dwCursorPosition, COORD_Y, buffer.dwCursorPosition.Y);\n-    env->SetObjectField(out_lpConsoleScreenBufferInfo, CONSOLE_SCREEN_BUFFER_INFO_dwCursorPosition, dwCursorPosition);\n-\n-    env->SetIntField(out_lpConsoleScreenBufferInfo, CONSOLE_SCREEN_BUFFER_INFO_wAttributes, buffer.wAttributes);\n-\n-    jobject srWindow = env->NewObject(SMALL_RECT_Class,\n-                                      SMALL_RECT_Constructor);\n-    env->SetIntField(srWindow, SMALL_RECT_Left, buffer.srWindow.Left);\n-    env->SetIntField(srWindow, SMALL_RECT_Top, buffer.srWindow.Top);\n-    env->SetIntField(srWindow, SMALL_RECT_Right, buffer.srWindow.Right);\n-    env->SetIntField(srWindow, SMALL_RECT_Bottom, buffer.srWindow.Bottom);\n-    env->SetObjectField(out_lpConsoleScreenBufferInfo, CONSOLE_SCREEN_BUFFER_INFO_srWindow, srWindow);\n-\n-    jobject dwMaximumWindowSize = env->NewObject(COORD_Class,\n-                                                 COORD_Constructor);\n-    env->SetIntField(dwMaximumWindowSize, COORD_X, buffer.dwMaximumWindowSize.X);\n-    env->SetIntField(dwMaximumWindowSize, COORD_Y, buffer.dwMaximumWindowSize.Y);\n-    env->SetObjectField(out_lpConsoleScreenBufferInfo, CONSOLE_SCREEN_BUFFER_INFO_dwMaximumWindowSize, dwMaximumWindowSize);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    ReadConsoleInput\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;[Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32\/INPUT_RECORD;ILjdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/IntByReference;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_ReadConsoleInput\n-  (JNIEnv *env, jobject kernel, jobject in_hConsoleOutput, jobjectArray\/*INPUT_RECORD[]*\/ out_lpBuffer, jint in_nLength, jobject out_lpNumberOfEventsRead) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hConsoleOutput, pointerValue));\n-    INPUT_RECORD *buffer = new INPUT_RECORD[in_nLength];\n-    DWORD numberOfEventsRead;\n-    if (!ReadConsoleInputW(h, buffer, in_nLength, &numberOfEventsRead)) {\n-        delete[] buffer;\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return ;\n-    }\n-    for (unsigned int i = 0; i < numberOfEventsRead; i++) {\n-        jobject record = env->NewObject(INPUT_RECORD_Class,\n-                                        INPUT_RECORD_Constructor);\n-        env->SetShortField(record, INPUT_RECORD_EventType, buffer[i].EventType);\n-        switch (buffer[i].EventType) {\n-            case KEY_EVENT: {\n-                jobject keyEvent = env->NewObject(KEY_EVENT_RECORD_Class,\n-                                                  KEY_EVENT_RECORD_Constructor);\n-                env->SetBooleanField(keyEvent, KEY_EVENT_RECORD_bKeyDown, buffer[i].Event.KeyEvent.bKeyDown);\n-                env->SetShortField(keyEvent, KEY_EVENT_RECORD_wRepeatCount, buffer[i].Event.KeyEvent.wRepeatCount);\n-                env->SetShortField(keyEvent, KEY_EVENT_RECORD_wVirtualKeyCode, buffer[i].Event.KeyEvent.wVirtualKeyCode);\n-                env->SetShortField(keyEvent, KEY_EVENT_RECORD_wVirtualScanCode, buffer[i].Event.KeyEvent.wVirtualScanCode);\n-\n-                jobject unionChar = env->NewObject(UnionChar_Class,\n-                                                   UnionChar_Constructor);\n-\n-                env->SetIntField(unionChar, UnionChar_UnicodeChar, buffer[i].Event.KeyEvent.uChar.UnicodeChar);\n-\n-                env->SetObjectField(keyEvent, KEY_EVENT_RECORD_uChar, unionChar);\n-\n-                env->SetIntField(keyEvent, KEY_EVENT_RECORD_dwControlKeyState, buffer[i].Event.KeyEvent.dwControlKeyState);\n-\n-                jobject event = env->NewObject(EventUnion_Class,\n-                                               EventUnion_Constructor);\n-\n-                env->SetObjectField(event, EventUnion_KeyEvent, keyEvent);\n-                env->SetObjectField(record, INPUT_RECORD_Event, event);\n-                break;\n-            }\n-            case MOUSE_EVENT: {\n-                jobject mouseEvent = env->NewObject(MOUSE_EVENT_RECORD_Class,\n-                                                    MOUSE_EVENT_RECORD_Constructor);\n-\n-                jobject dwMousePosition = env->NewObject(COORD_Class,\n-                                                         COORD_Constructor);\n-                env->SetIntField(dwMousePosition, COORD_X, buffer[i].Event.MouseEvent.dwMousePosition.X);\n-                env->SetIntField(dwMousePosition, COORD_Y, buffer[i].Event.MouseEvent.dwMousePosition.Y);\n-                env->SetObjectField(mouseEvent, MOUSE_EVENT_RECORD_dwMousePosition, dwMousePosition);\n-                env->SetIntField(mouseEvent, MOUSE_EVENT_RECORD_dwButtonState, buffer[i].Event.MouseEvent.dwButtonState);\n-                env->SetIntField(mouseEvent, MOUSE_EVENT_RECORD_dwControlKeyState, buffer[i].Event.MouseEvent.dwControlKeyState);\n-                env->SetIntField(mouseEvent, MOUSE_EVENT_RECORD_dwEventFlags, buffer[i].Event.MouseEvent.dwEventFlags);\n-\n-                jobject event = env->NewObject(EventUnion_Class,\n-                                               EventUnion_Constructor);\n-\n-                env->SetObjectField(event, EventUnion_MouseEvent, mouseEvent);\n-                env->SetObjectField(record, INPUT_RECORD_Event, event);\n-                break;\n-            }\n-            case WINDOW_BUFFER_SIZE_EVENT: {\n-                jobject windowBufferSize = env->NewObject(WINDOW_BUFFER_SIZE_RECORD_Class,\n-                                                          WINDOW_BUFFER_SIZE_RECORD_Constructor);\n-\n-                jobject dwSize = env->NewObject(COORD_Class,\n-                                                COORD_Constructor);\n-                env->SetIntField(dwSize, COORD_X, buffer[i].Event.WindowBufferSizeEvent.dwSize.X);\n-                env->SetIntField(dwSize, COORD_Y, buffer[i].Event.WindowBufferSizeEvent.dwSize.Y);\n-                env->SetObjectField(windowBufferSize, WINDOW_BUFFER_SIZE_RECORD_dwSize, dwSize);\n-\n-                jobject event = env->NewObject(EventUnion_Class,\n-                                               EventUnion_Constructor);\n-\n-                env->SetObjectField(event, EventUnion_WindowBufferSizeEvent, windowBufferSize);\n-                env->SetObjectField(record, INPUT_RECORD_Event, event);\n-                break;\n-            }\n-            case MENU_EVENT: {\n-                jobject menuEvent = env->NewObject(MENU_EVENT_RECORD_Class,\n-                                                          MENU_EVENT_RECORD_Constructor);\n-\n-                env->SetBooleanField(menuEvent, MENU_EVENT_RECORD_dwCommandId, buffer[i].Event.MenuEvent.dwCommandId);\n-\n-                jobject event = env->NewObject(EventUnion_Class,\n-                                               EventUnion_Constructor);\n-\n-                env->SetObjectField(event, EventUnion_MenuEvent, menuEvent);\n-                env->SetObjectField(record, INPUT_RECORD_Event, event);\n-                break;\n-            }\n-            case FOCUS_EVENT: {\n-                jobject focusEvent = env->NewObject(FOCUS_EVENT_RECORD_Class,\n-                                                    FOCUS_EVENT_RECORD_Constructor);\n-\n-                env->SetIntField(focusEvent, FOCUS_EVENT_RECORD_bSetFocus, buffer[i].Event.FocusEvent.bSetFocus);\n-\n-                jobject event = env->NewObject(EventUnion_Class,\n-                                               EventUnion_Constructor);\n-\n-                env->SetObjectField(event, EventUnion_FocusEvent, focusEvent);\n-                env->SetObjectField(record, INPUT_RECORD_Event, event);\n-                break;\n-            }\n-        }\n-        env->SetObjectArrayElement(out_lpBuffer, i, record);\n-    }\n-    env->SetIntField(out_lpNumberOfEventsRead, intByReferenceValue, numberOfEventsRead);\n-    delete[] buffer;\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    SetConsoleCursorPosition\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32\/COORD;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_SetConsoleCursorPosition\n-  (JNIEnv *env, jobject kernel, jobject in_hConsoleOutput, jobject in_dwCursorPosition) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hConsoleOutput, pointerValue));\n-    COORD coord;\n-    coord.X = (SHORT) env->GetLongField(in_dwCursorPosition, COORD_X);\n-    coord.Y = (SHORT) env->GetLongField(in_dwCursorPosition, COORD_Y);\n-    if (!SetConsoleCursorPosition(h, coord)) {\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return;\n-    }\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    SetConsoleMode\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;I)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_SetConsoleMode\n-  (JNIEnv *env, jobject kernel, jobject in_hConsoleOutput, jint in_dwMode) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hConsoleOutput, pointerValue));\n-    if (!SetConsoleMode(h, in_dwMode)) {\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return ;\n-    }\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    SetConsoleTextAttribute\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;S)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_SetConsoleTextAttribute\n-  (JNIEnv *env, jobject kernel, jobject in_hConsoleOutput, jshort in_wAttributes) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hConsoleOutput, pointerValue));\n-    if (!SetConsoleTextAttribute(h, in_wAttributes)) {\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return ;\n-    }\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    SetConsoleTitle\n- * Signature: (Ljava\/lang\/String;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_SetConsoleTitle\n-  (JNIEnv *env, jobject, jstring in_lpConsoleTitle) {\n-    const char *chars = env->GetStringUTFChars(in_lpConsoleTitle, NULL);\n-    if (!SetConsoleTitle(chars)) {\n-        env->ReleaseStringUTFChars(in_lpConsoleTitle, chars);\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return ;\n-    }\n-    env->ReleaseStringUTFChars(in_lpConsoleTitle, chars);\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    WriteConsoleW\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;[CILjdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/IntByReference;Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_WriteConsoleW\n-  (JNIEnv *env, jobject kernel, jobject in_hConsoleOutput, jcharArray in_lpBuffer, jint in_nNumberOfCharsToWrite, jobject out_lpNumberOfCharsWritten, jobject) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hConsoleOutput, pointerValue));\n-    jchar *chars = new jchar[in_nNumberOfCharsToWrite];\n-    env->GetCharArrayRegion(in_lpBuffer, 0, in_nNumberOfCharsToWrite, chars);\n-    DWORD written;\n-    if (!WriteConsoleW(h, chars, in_nNumberOfCharsToWrite, &written, NULL)) {\n-        delete[] chars;\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return ;\n-    }\n-\n-    env->SetIntField(out_lpNumberOfCharsWritten, intByReferenceValue, written);\n-    delete[] chars;\n-}\n-\n-\/*\n- * Class:     jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl\n- * Method:    ScrollConsoleScreenBuffer\n- * Signature: (Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Pointer;Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32\/SMALL_RECT;Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32\/SMALL_RECT;Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32\/COORD;Ljdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32\/CHAR_INFO;)V\n- *\/\n-JNIEXPORT void JNICALL Java_jdk_internal_org_jline_terminal_impl_jna_win_Kernel32Impl_ScrollConsoleScreenBuffer\n-  (JNIEnv *env, jobject kernel, jobject in_hConsoleOutput, jobject in_lpScrollRectangle, jobject in_lpClipRectangle, jobject in_dwDestinationOrigin, jobject in_lpFill) {\n-    HANDLE h = GetStdHandle((jint) env->GetLongField(in_hConsoleOutput, pointerValue));\n-\n-    SMALL_RECT scrollRectangle;\n-    scrollRectangle.Left = (SHORT) env->GetLongField(in_lpScrollRectangle, SMALL_RECT_Left);\n-    scrollRectangle.Top = (SHORT) env->GetLongField(in_lpScrollRectangle, SMALL_RECT_Top);\n-    scrollRectangle.Right = (SHORT) env->GetLongField(in_lpScrollRectangle, SMALL_RECT_Right);\n-    scrollRectangle.Bottom = (SHORT) env->GetLongField(in_lpScrollRectangle, SMALL_RECT_Bottom);\n-\n-    SMALL_RECT clipRectangle;\n-    clipRectangle.Left = (SHORT) env->GetLongField(in_lpClipRectangle, SMALL_RECT_Left);\n-    clipRectangle.Top = (SHORT) env->GetLongField(in_lpClipRectangle, SMALL_RECT_Top);\n-    clipRectangle.Right = (SHORT) env->GetLongField(in_lpClipRectangle, SMALL_RECT_Right);\n-    clipRectangle.Bottom = (SHORT) env->GetLongField(in_lpClipRectangle, SMALL_RECT_Bottom);\n-\n-    COORD destinationOrigin;\n-    destinationOrigin.X = (SHORT) env->GetLongField(in_dwDestinationOrigin, COORD_X);\n-    destinationOrigin.Y = (SHORT) env->GetLongField(in_dwDestinationOrigin, COORD_Y);\n-\n-    CHAR_INFO charInfo;\n-    charInfo.Char.UnicodeChar = env->GetCharField(env->GetObjectField(in_lpFill, CHAR_INFO_uChar), UnionChar_UnicodeChar);\n-    charInfo.Attributes = env->GetShortField(in_lpFill, CHAR_INFO_Attributes);\n-\n-    if (!ScrollConsoleScreenBuffer(h, &scrollRectangle, &clipRectangle, destinationOrigin, &charInfo)) {\n-        DWORD error = GetLastError();\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     (jlong) error);\n-        env->Throw((jthrowable) exc);\n-        return ;\n-    }\n-}\n","filename":"src\/jdk.internal.le\/windows\/native\/lible\/Kernel32.cpp","additions":0,"deletions":710,"binary":false,"changes":710,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @since 9\n","filename":"src\/jdk.jartool\/share\/classes\/jdk\/security\/jarsigner\/package-info.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -189,1 +189,2 @@\n-Reads \\f[V]jar\\f[R] options and file names from a text file.\n+Reads \\f[V]jar\\f[R] options and file names from a text file as if they\n+were supplied on the command line\n@@ -333,3 +334,3 @@\n-To shorten or simplify the \\f[V]jar\\f[R] command, you can specify\n-arguments in a separate text file and pass it to the \\f[V]jar\\f[R]\n-command with the at sign (\\f[V]\\[at]\\f[R]) as a prefix.\n+To shorten or simplify the \\f[V]jar\\f[R] command, you can provide an arg\n+file that lists the files to include in the JAR file and pass it to the\n+\\f[V]jar\\f[R] command with the at sign (\\f[V]\\[at]\\f[R]) as a prefix.\n@@ -340,0 +341,3 @@\n+.PP\n+If one or more entries in the arg file cannot be found then the jar\n+command fails without creating the JAR file.\n","filename":"src\/jdk.jartool\/share\/man\/jar.1","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -111,2 +111,2 @@\n-Within a source file, you may use suppress any warnings generated by\n-these options by using\n+Within a source file, you may suppress any warnings generated by these\n+options by using\n@@ -923,0 +923,5 @@\n+\\f[V]--no-fonts\\f[R]\n+Prevents inclusion of font files in the generated documentation.\n+This can be useful if the documentation uses a custom stylesheet which\n+does not use the default fonts.\n+.TP\n","filename":"src\/jdk.javadoc\/share\/man\/javadoc.1","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -371,10 +371,14 @@\n-            switch (ta.wildcardIndicator()) {\n-                case DEFAULT -> print(sb, ta.boundType().get());\n-                case UNBOUNDED -> sb.append('?');\n-                case EXTENDS -> {\n-                    sb.append(\"? extends \");\n-                    print(sb, ta.boundType().get());\n-                }\n-                case SUPER -> {\n-                    sb.append(\"? super \");\n-                    print(sb, ta.boundType().get());\n+            switch (ta) {\n+                case Signature.TypeArg.Unbounded _ -> sb.append('?');\n+                case Signature.TypeArg.Bounded bta -> {\n+                    switch (bta.wildcardIndicator()) {\n+                        case NONE -> print(sb, bta.boundType());\n+                        case EXTENDS -> {\n+                            sb.append(\"? extends \");\n+                            print(sb, bta.boundType());\n+                        }\n+                        case SUPER -> {\n+                            sb.append(\"? super \");\n+                            print(sb, bta.boundType());\n+                        }\n+                    }\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/ClassWriter.java","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    private static final List<String> UNCATEGORIZED = List.of(\"Uncategorized\");\n+    private static final String[] UNCATEGORIZED = { \"Uncategorized\" };\n@@ -238,5 +238,2 @@\n-        Category c = platformEventType.getAnnotation(Category.class);\n-        if (c == null) {\n-            return UNCATEGORIZED;\n-        }\n-        return List.of(c.value());\n+        String[] categories = platformEventType.getAnnotationValue(Category.class, UNCATEGORIZED);\n+        return List.of(categories);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventType.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,5 +75,1 @@\n-        Label label = getAnnotation(Label.class);\n-        if (label == null) {\n-            return null;\n-        }\n-        return label.value();\n+        return getAnnotationValue(Label.class, null);\n@@ -83,5 +79,1 @@\n-        Description description = getAnnotation(Description.class);\n-        if (description == null) {\n-            return null;\n-        }\n-        return description.value();\n+        return getAnnotationValue(Description.class, null);\n@@ -103,1 +95,14 @@\n-    private AnnotationElement getAnnotationElement(Class<? extends Annotation> clazz) {\n+    \/**\n+     * Convenience method that returns the annotation value, or a default value\n+     * if the type lacks the annotation.\n+     *\/\n+    @SuppressWarnings(\"unchecked\")\n+    public <T> T getAnnotationValue(Class<? extends java.lang.annotation.Annotation> clazz, T defaultValue) {\n+        AnnotationElement ae = getAnnotationElement(clazz);\n+        if (ae == null) {\n+            return defaultValue;\n+        }\n+        return (T) ae.getValues().get(0);\n+    }\n+\n+    AnnotationElement getAnnotationElement(Class<? extends Annotation> clazz) {\n@@ -126,2 +131,2 @@\n-            Unsigned unsigned = getAnnotation(Unsigned.class);\n-            unsignedFlag = (byte) (unsigned == null ? 0 :1);\n+            AnnotationElement ae = getAnnotationElement(Unsigned.class);\n+            unsignedFlag = (byte) (ae == null ? 0 :1);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/AnnotationConstruct.java","additions":19,"deletions":14,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -293,1 +293,0 @@\n-        Enabled enabled = type.getAnnotation(Enabled.class);\n@@ -297,4 +296,2 @@\n-        String def = type.isJVM() ? \"false\" : \"true\";\n-        if (enabled != null) {\n-            def = Boolean.toString(enabled.value());\n-        }\n+        Boolean defaultValue = Boolean.valueOf(!type.isJVM());\n+        String def = type.getAnnotationValue(Enabled.class, defaultValue).toString();\n@@ -306,5 +303,1 @@\n-        Threshold threshold = type.getAnnotation(Threshold.class);\n-        String def = \"0 ns\";\n-        if (threshold != null) {\n-            def = threshold.value();\n-        }\n+        String def = type.getAnnotationValue(Threshold.class, \"0 ns\");\n@@ -316,5 +309,1 @@\n-        StackTrace stackTrace = type.getAnnotation(StackTrace.class);\n-        String def = \"true\";\n-        if (stackTrace != null) {\n-            def = Boolean.toString(stackTrace.value());\n-        }\n+        String def = type.getAnnotationValue(StackTrace.class, Boolean.TRUE).toString();\n@@ -326,5 +315,1 @@\n-        Cutoff cutoff = type.getAnnotation(Cutoff.class);\n-        String def = Cutoff.INFINITY;\n-        if (cutoff != null) {\n-            def = cutoff.value();\n-        }\n+        String def = type.getAnnotationValue(Cutoff.class, Cutoff.INFINITY);\n@@ -336,5 +321,1 @@\n-        Throttle throttle = type.getAnnotation(Throttle.class);\n-        String def = Throttle.DEFAULT;\n-        if (throttle != null) {\n-            def = throttle.value();\n-        }\n+        String def = type.getAnnotationValue(Throttle.class, Throttle.DEFAULT);\n@@ -346,3 +327,2 @@\n-        Level level = type.getAnnotation(Level.class);\n-        String[] values = level.value();\n-        String def = values[0];\n+        String[] levels = type.getAnnotationValue(Level.class, new String[0]);\n+        String def = levels[0]; \/\/ Level value always exists\n@@ -350,1 +330,1 @@\n-        return new Control(new LevelSetting(type, values), def);\n+        return new Control(new LevelSetting(type, levels), def);\n@@ -354,5 +334,1 @@\n-        Period period = type.getAnnotation(Period.class);\n-        String def = \"everyChunk\";\n-        if (period != null) {\n-            def = period.value();\n-        }\n+        String def = type.getAnnotationValue(Period.class, \"everyChunk\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventControl.java","additions":11,"deletions":35,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -473,1 +473,1 @@\n-                    catchAllHandler.throwInstruction();\n+                    catchAllHandler.athrow();\n@@ -565,1 +565,1 @@\n-        blockCodeBuilder.constantInstruction(Opcode.LDC2_W, eventTypeId);\n+        blockCodeBuilder.loadConstant(Opcode.LDC2_W, eventTypeId);\n@@ -575,1 +575,1 @@\n-        blockCodeBuilder.loadInstruction(tk, slotIndex);\n+        blockCodeBuilder.loadLocal(tk, slotIndex);\n@@ -586,1 +586,1 @@\n-            blockCodeBuilder.loadInstruction(tk, slotIndex);\n+            blockCodeBuilder.loadLocal(tk, slotIndex);\n@@ -612,1 +612,1 @@\n-            blockCodeBuilder.loadInstruction(tk, slotIndex);\n+            blockCodeBuilder.loadLocal(tk, slotIndex);\n@@ -679,1 +679,1 @@\n-        blockCodeBuilder.constantInstruction(Opcode.LDC2_W, eventTypeId);\n+        blockCodeBuilder.loadConstant(Opcode.LDC2_W, eventTypeId);\n@@ -741,1 +741,1 @@\n-                codeBuilder.branchInstruction(Opcode.IFNULL, nullLabel);\n+                codeBuilder.if_null(nullLabel);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventInstrumentation.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -76,4 +76,4 @@\n-                pEventType.setHasCutoff(eventType.getAnnotation(Cutoff.class) != null);\n-                pEventType.setHasThrottle(eventType.getAnnotation(Throttle.class) != null);\n-                pEventType.setHasLevel(eventType.getAnnotation(Level.class) != null);\n-                pEventType.setHasPeriod(eventType.getAnnotation(Period.class) != null);\n+                pEventType.setHasCutoff(type.hasAnnotation(Cutoff.class));\n+                pEventType.setHasThrottle(type.hasAnnotation(Throttle.class));\n+                pEventType.setHasLevel(type.hasAnnotation(Level.class));\n+                pEventType.setHasPeriod(type.hasAnnotation(Period.class));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataRepository.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -290,1 +290,1 @@\n-        try (var ds = doPrivilegedIOWithReturn(() -> Files.newDirectoryStream(JFC_DIRECTORY.toPath(), \"*.jfc\"))) {\n+        try (var ds = doPrivilegedIOWithReturn(() -> Files.newDirectoryStream(JFC_DIRECTORY.toPath()))) {\n@@ -293,1 +293,2 @@\n-                if (!SecuritySupport.isDirectory(s)) {\n+                String text = s.toString();\n+                if (text.endsWith(\".jfc\") && !SecuritySupport.isDirectory(s)) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/SecuritySupport.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -267,0 +267,4 @@\n+    public <T> T getAnnotationValue(Class<? extends java.lang.annotation.Annotation> clazz, T defaultValue) {\n+       return annos.getAnnotationValue(clazz, defaultValue);\n+    }\n+\n@@ -362,0 +366,4 @@\n+\n+    public boolean hasAnnotation(Class<? extends java.lang.annotation.Annotation> clazz) {\n+        return annos.getAnnotationElement(clazz) != null;\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Type.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    public abstract String[] printHelp();\n+    public abstract String[] getHelp();\n@@ -236,1 +236,1 @@\n-        for (String line : printHelp()) {\n+        for (String line : getHelp()) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/AbstractDCmd.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -142,1 +142,1 @@\n-    public String[] printHelp() {\n+    public String[] getHelp() {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdCheck.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -251,1 +251,1 @@\n-    public String[] printHelp() {\n+    public String[] getHelp() {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdConfigure.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -197,1 +197,1 @@\n-    public String[] printHelp() {\n+    public String[] getHelp() {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdDump.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-    public String[] printHelp() {\n+    public String[] getHelp() {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdQuery.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -321,1 +321,1 @@\n-    public String[] printStartupHelp() {\n+    public String[] getStartupHelp() {\n@@ -324,0 +324,1 @@\n+            \"$SOURCE_NO_ARGUMENTS\", \"-XX:StartFlightRecording\",\n@@ -334,1 +335,1 @@\n-    public String[] printHelp() {\n+    public String[] getHelp() {\n@@ -337,0 +338,1 @@\n+           \"$SOURCE_NO_ARGUMENTS\", \"$ jcmd <pid> JFR.start\",\n@@ -443,1 +445,1 @@\n-                $SOURCE\n+                $SOURCE_NO_ARGUMENTS\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdStart.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-    public String[] printHelp() {\n+    public String[] getHelp() {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdStop.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-    public String[] printHelp() {\n+    public String[] getHelp() {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdView.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -671,1 +671,1 @@\n-                    cob -> cob.constantInstruction(hasSplitPackages ? 1 : 0)\n+                    cob -> cob.loadConstant(hasSplitPackages ? 1 : 0)\n@@ -689,1 +689,1 @@\n-                    cob -> cob.constantInstruction(hasIncubatorModules ? 1 : 0)\n+                    cob -> cob.loadConstant(hasIncubatorModules ? 1 : 0)\n@@ -703,1 +703,1 @@\n-                            cob.constantInstruction(moduleInfos.size())\n+                            cob.loadConstant(moduleInfos.size())\n@@ -767,1 +767,1 @@\n-                        cob.constantInstruction(moduleInfos.size())\n+                        cob.loadConstant(moduleInfos.size())\n@@ -773,1 +773,1 @@\n-                           .constantInstruction(moduleInfos.size())\n+                           .loadConstant(moduleInfos.size())\n@@ -800,1 +800,1 @@\n-                                       .constantInstruction(i - dedupVarStart)\n+                                       .loadConstant(i - dedupVarStart)\n@@ -848,1 +848,1 @@\n-                        cob.constantInstruction(moduleInfos.size())\n+                        cob.loadConstant(moduleInfos.size())\n@@ -871,1 +871,1 @@\n-                                   .constantInstruction(index);\n+                                   .loadConstant(index);\n@@ -876,1 +876,1 @@\n-                                   .constantInstruction(minfo.target().targetPlatform())\n+                                   .loadConstant(minfo.target().targetPlatform())\n@@ -899,1 +899,1 @@\n-                        cob.constantInstruction(moduleInfos.size())\n+                        cob.loadConstant(moduleInfos.size())\n@@ -926,1 +926,1 @@\n-                        cob.constantInstruction(moduleInfos.size())\n+                        cob.loadConstant(moduleInfos.size())\n@@ -934,1 +934,1 @@\n-                                   .constantInstruction(index)\n+                                   .loadConstant(index)\n@@ -937,1 +937,1 @@\n-                                   .constantInstruction(minfo.moduleResolution().value())\n+                                   .loadConstant(minfo.moduleResolution().value())\n@@ -1003,1 +1003,1 @@\n-                        cob.constantInstruction(map.size())\n+                        cob.loadConstant(map.size())\n@@ -1012,2 +1012,2 @@\n-                               .constantInstruction(index)\n-                               .constantInstruction(name);\n+                               .loadConstant(index)\n+                               .loadConstant(name);\n@@ -1049,1 +1049,1 @@\n-                cob.constantInstruction(size)\n+                cob.loadConstant(size)\n@@ -1054,2 +1054,2 @@\n-                       .constantInstruction(i)\n-                       .constantInstruction(element)\n+                       .loadConstant(i)\n+                       .loadConstant(element)\n@@ -1065,1 +1065,1 @@\n-                    cob.constantInstruction(element);\n+                    cob.loadConstant(element);\n@@ -1169,1 +1169,1 @@\n-                   .constantInstruction(md.name())\n+                   .loadConstant(md.name())\n@@ -1191,1 +1191,1 @@\n-                   .constantInstruction(value ? 1 : 0)\n+                   .loadConstant(value ? 1 : 0)\n@@ -1203,1 +1203,1 @@\n-                   .constantInstruction(index)\n+                   .loadConstant(index)\n@@ -1205,1 +1205,1 @@\n-                   .constantInstruction(md.hashCode())\n+                   .loadConstant(md.hashCode())\n@@ -1220,1 +1220,1 @@\n-                   .constantInstruction(requires.size())\n+                   .loadConstant(requires.size())\n@@ -1230,1 +1230,1 @@\n-                       .constantInstruction(arrayIndex++);\n+                       .loadConstant(arrayIndex++);\n@@ -1249,1 +1249,1 @@\n-                   .constantInstruction(name);\n+                   .loadConstant(name);\n@@ -1251,1 +1251,1 @@\n-                    cob.constantInstruction(compiledVersion)\n+                    cob.loadConstant(compiledVersion)\n@@ -1270,1 +1270,1 @@\n-                   .constantInstruction(exports.size())\n+                   .loadConstant(exports.size())\n@@ -1275,1 +1275,1 @@\n-                       .constantInstruction(arrayIndex++);\n+                       .loadConstant(arrayIndex++);\n@@ -1305,1 +1305,1 @@\n-                       .constantInstruction(pn)\n+                       .loadConstant(pn)\n@@ -1312,1 +1312,1 @@\n-                       .constantInstruction(pn)\n+                       .loadConstant(pn)\n@@ -1327,1 +1327,1 @@\n-                   .constantInstruction(opens.size())\n+                   .loadConstant(opens.size())\n@@ -1332,1 +1332,1 @@\n-                       .constantInstruction(arrayIndex++);\n+                       .loadConstant(arrayIndex++);\n@@ -1362,1 +1362,1 @@\n-                       .constantInstruction(pn)\n+                       .loadConstant(pn)\n@@ -1369,1 +1369,1 @@\n-                       .constantInstruction(pn)\n+                       .loadConstant(pn)\n@@ -1397,1 +1397,1 @@\n-                   .constantInstruction(provides.size())\n+                   .loadConstant(provides.size())\n@@ -1402,1 +1402,1 @@\n-                       .constantInstruction(arrayIndex++);\n+                       .loadConstant(arrayIndex++);\n@@ -1422,2 +1422,2 @@\n-                cob.constantInstruction(service)\n-                   .constantInstruction(providers.size())\n+                cob.loadConstant(service)\n+                   .loadConstant(providers.size())\n@@ -1428,2 +1428,2 @@\n-                       .constantInstruction(arrayIndex++)\n-                       .constantInstruction(provider)\n+                       .loadConstant(arrayIndex++)\n+                       .loadConstant(provider)\n@@ -1459,1 +1459,1 @@\n-                   .constantInstruction(cn)\n+                   .loadConstant(cn)\n@@ -1471,1 +1471,1 @@\n-                   .constantInstruction(v.toString())\n+                   .loadConstant(v.toString())\n@@ -1480,1 +1480,1 @@\n-                   .constantInstruction(value)\n+                   .loadConstant(value)\n@@ -1534,2 +1534,2 @@\n-                   .constantInstruction(recordedHashes.algorithm())\n-                   .constantInstruction(((4 * recordedHashes.names().size()) \/ 3) + 1)\n+                   .loadConstant(recordedHashes.algorithm())\n+                   .loadConstant(((4 * recordedHashes.names().size()) \/ 3) + 1)\n@@ -1550,1 +1550,1 @@\n-                   .constantInstruction(index)\n+                   .loadConstant(index)\n@@ -1563,2 +1563,2 @@\n-                   .constantInstruction(name)\n-                   .constantInstruction(hash.length)\n+                   .loadConstant(name)\n+                   .loadConstant(hash.length)\n@@ -1568,2 +1568,2 @@\n-                       .constantInstruction(i)\n-                       .constantInstruction((int)hash[i])\n+                       .loadConstant(i)\n+                       .loadConstant((int)hash[i])\n@@ -1732,1 +1732,1 @@\n-                cob.constantInstruction((ConstantDesc)element);\n+                cob.loadConstant((ConstantDesc)element);\n@@ -1775,1 +1775,1 @@\n-                    cob.constantInstruction(elements.size())\n+                    cob.loadConstant(elements.size())\n@@ -1780,1 +1780,1 @@\n-                           .constantInstruction(arrayIndex);\n+                           .loadConstant(arrayIndex);\n@@ -1879,1 +1879,1 @@\n-                                      cob.constantInstruction(map.size());\n+                                      cob.loadConstant(map.size());\n@@ -1885,2 +1885,2 @@\n-                                             .constantInstruction(index)\n-                                             .constantInstruction(entry.getKey())\n+                                             .loadConstant(index)\n+                                             .loadConstant(entry.getKey())\n@@ -1900,1 +1900,1 @@\n-                                      cob.constantInstruction(map.size())\n+                                      cob.loadConstant(map.size())\n@@ -1906,2 +1906,2 @@\n-                                             .constantInstruction(index)\n-                                             .constantInstruction(entry.getValue().replace('\/', '.'))\n+                                             .loadConstant(index)\n+                                             .loadConstant(entry.getValue().replace('\/', '.'))\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin.java","additions":61,"deletions":61,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-                                        cob.constantInstruction(value);\n+                                        cob.loadConstant(value);\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/VersionPropsPlugin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1010,1 +1010,1 @@\n-            return in.readLine(prompt, mask);\n+            return in.readLine(prompt.replace(\"%\", \"%%\"), mask);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/ConsoleIOContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -341,0 +341,4 @@\n+        boolean hasOption(OptionKind kind) {\n+            return optMap.containsKey(kind);\n+        }\n+\n@@ -473,1 +477,1 @@\n-            if (options.has(argEnablePreview)) {\n+            if (previewEnabled(options)) {\n@@ -493,0 +497,4 @@\n+        boolean previewEnabled(OptionSet options) {\n+            return options.has(argEnablePreview);\n+        }\n+\n@@ -630,1 +638,2 @@\n-                initialStartup = Startup.unpack(packedStartup, new InitMessageHandler());\n+                boolean preview = previewEnabled(options);\n+                initialStartup = Startup.unpack(packedStartup, preview, new InitMessageHandler());\n@@ -2288,1 +2297,2 @@\n-            startup = Startup.defaultStartup(this);\n+            boolean preview = options.hasOption(OptionKind.ENABLE_PREVIEW);\n+            startup = Startup.defaultStartup(preview, this);\n@@ -2305,1 +2315,2 @@\n-            Startup retainedStart = Startup.unpack(retained, this);\n+            boolean preview = options.hasOption(OptionKind.ENABLE_PREVIEW);\n+            Startup retainedStart = Startup.unpack(retained, preview, this);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,0 +121,1 @@\n+    private static final String PREVIEW_DEFAULT_STARTUP_NAME = \"PREVIEW_DEFAULT\";\n@@ -123,1 +124,4 @@\n-    private static Startup defaultStartup = null;\n+    private static Startup[] defaultStartup = new Startup[] {\n+        null, \/\/standard startup\n+        null  \/\/preview  startup\n+    };\n@@ -169,1 +173,2 @@\n-            if (sue.isBuiltIn && sue.name.equals(DEFAULT_STARTUP_NAME)) {\n+            if (sue.isBuiltIn && (sue.name.equals(DEFAULT_STARTUP_NAME) ||\n+                                  sue.name.equals(PREVIEW_DEFAULT_STARTUP_NAME))) {\n@@ -220,1 +225,1 @@\n-    static Startup unpack(String storedForm, MessageHandler mh) {\n+    static Startup unpack(String storedForm, boolean preview, MessageHandler mh) {\n@@ -258,1 +263,1 @@\n-        return defaultStartup(mh);\n+        return defaultStartup(preview, mh);\n@@ -327,3 +332,5 @@\n-    static Startup defaultStartup(MessageHandler mh) {\n-        if (defaultStartup != null) {\n-            return defaultStartup;\n+    static Startup defaultStartup(boolean preview, MessageHandler mh) {\n+        int idx = preview ? 1 : 0;\n+\n+        if (defaultStartup[idx] != null) {\n+            return defaultStartup[idx];\n@@ -331,0 +338,2 @@\n+        String resourceName = preview ? PREVIEW_DEFAULT_STARTUP_NAME\n+                                      : DEFAULT_STARTUP_NAME;\n@@ -332,3 +341,3 @@\n-            String content = readResource(DEFAULT_STARTUP_NAME);\n-            return defaultStartup = new Startup(\n-                    new StartupEntry(true, DEFAULT_STARTUP_NAME, content));\n+            String content = readResource(resourceName);\n+            return defaultStartup[idx] = new Startup(\n+                    new StartupEntry(true, resourceName, content));\n@@ -336,1 +345,1 @@\n-            mh.errormsg(\"jshell.err.file.not.accessible\", \"jshell\", DEFAULT_STARTUP_NAME, e.getMessage());\n+            mh.errormsg(\"jshell.err.file.not.accessible\", \"jshell\", resourceName, e.getMessage());\n@@ -338,1 +347,1 @@\n-            mh.errormsg(\"jshell.err.file.not.found\", \"jshell\", DEFAULT_STARTUP_NAME);\n+            mh.errormsg(\"jshell.err.file.not.found\", \"jshell\", resourceName);\n@@ -340,1 +349,1 @@\n-            mh.errormsg(\"jshell.err.file.exception\", \"jshell\", DEFAULT_STARTUP_NAME, e);\n+            mh.errormsg(\"jshell.err.file.exception\", \"jshell\", resourceName, e);\n@@ -342,1 +351,1 @@\n-        return defaultStartup = noStartup();\n+        return defaultStartup[idx] = noStartup();\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/Startup.java","additions":24,"deletions":15,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,0 +86,1 @@\n+import static jdk.jshell.Snippet.SubKind.MODULE_IMPORT_SUBKIND;\n@@ -99,1 +100,1 @@\n-    private static final Pattern IMPORT_PATTERN = Pattern.compile(\"import\\\\p{javaWhitespace}+(?<static>static\\\\p{javaWhitespace}+)?(?<fullname>[\\\\p{L}\\\\p{N}_\\\\$\\\\.]+\\\\.(?<name>[\\\\p{L}\\\\p{N}_\\\\$]+|\\\\*))\");\n+    private static final Pattern IMPORT_PATTERN = Pattern.compile(\"import\\\\p{javaWhitespace}+(?<module>module\\\\p{javaWhitespace}+)?(?<static>static\\\\p{javaWhitespace}+)?(?<fullname>[\\\\p{L}\\\\p{N}_\\\\$\\\\.]+\\\\.(?<name>[\\\\p{L}\\\\p{N}_\\\\$]+|\\\\*))\");\n@@ -247,0 +248,1 @@\n+        boolean isModule;\n@@ -249,0 +251,1 @@\n+            isModule = mat.group(\"module\") != null;\n@@ -250,1 +253,0 @@\n-            name = mat.group(\"name\");\n@@ -252,0 +254,5 @@\n+            if (isModule) {\n+                name = fullname;\n+            } else {\n+                name = mat.group(\"name\");\n+            }\n@@ -254,0 +261,1 @@\n+            isModule = compileSource.contains(\" module \");\n@@ -262,3 +270,8 @@\n-        SubKind snippetKind = isStar\n-                ? (isStatic ? STATIC_IMPORT_ON_DEMAND_SUBKIND : TYPE_IMPORT_ON_DEMAND_SUBKIND)\n-                : (isStatic ? SINGLE_STATIC_IMPORT_SUBKIND : SINGLE_TYPE_IMPORT_SUBKIND);\n+        SubKind snippetKind;\n+        if (isModule) {\n+            snippetKind = MODULE_IMPORT_SUBKIND;\n+        } else if (isStar) {\n+            snippetKind = isStatic ? STATIC_IMPORT_ON_DEMAND_SUBKIND : TYPE_IMPORT_ON_DEMAND_SUBKIND;\n+        } else {\n+            snippetKind = isStatic ? SINGLE_STATIC_IMPORT_SUBKIND : SINGLE_TYPE_IMPORT_SUBKIND;\n+        }\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/Eval.java","additions":19,"deletions":6,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import jdk.internal.javac.PreviewFeature;\n@@ -217,0 +218,9 @@\n+        \/**\n+         * Import Module Declaration.\n+         * An import declaration of a module.\n+         * @jls 7.5.5 Import Module Declarations\n+         * @since 23\n+         *\/\n+        @PreviewFeature(feature=PreviewFeature.Feature.MODULE_IMPORTS, reflective=true)\n+        MODULE_IMPORT_SUBKIND(Kind.IMPORT),\n+\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/Snippet.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+import module java.base;\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/tool\/resources\/PREVIEW_DEFAULT.jsh","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -1,63 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import jdk.internal.util.random.RandomSupport;\n-\n-\/**\n- * Defines implementations of the\n- * {@linkplain java.util.random.RandomGenerator RandomGenerator Interface}.\n- *\n- * @provides jdk.random.L128X1024MixRandom\n- * @provides jdk.random.L128X128MixRandom\n- * @provides jdk.random.L128X256MixRandom\n- * @provides jdk.random.L32X64MixRandom\n- * @provides jdk.random.L64X1024MixRandom\n- * @provides jdk.random.L64X128MixRandom\n- * @provides jdk.random.L64X128StarStarRandom\n- * @provides jdk.random.L64X256MixRandom\n- * @provides jdk.random.Xoroshiro128PlusPlus\n- * @provides jdk.random.Xoshiro256PlusPlus\n- *\n- * @uses java.util.random.RandomGenerator\n- *\n- * @moduleGraph\n- * @since 16\n- *\/\n-module jdk.random {\n-    exports jdk.random to\n-            java.base;\n-\n-    provides java.util.random.RandomGenerator with\n-        jdk.random.L32X64MixRandom,\n-        jdk.random.L64X128MixRandom,\n-        jdk.random.L64X128StarStarRandom,\n-        jdk.random.L64X256MixRandom,\n-        jdk.random.L64X1024MixRandom,\n-        jdk.random.L128X128MixRandom,\n-        jdk.random.L128X256MixRandom,\n-        jdk.random.L128X1024MixRandom,\n-        jdk.random.Xoroshiro128PlusPlus,\n-        jdk.random.Xoshiro256PlusPlus;\n-}\n","filename":"src\/jdk.random\/share\/classes\/module-info.java","additions":0,"deletions":63,"binary":false,"changes":63,"status":"deleted"},{"patch":"@@ -44,4 +44,1 @@\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-import java.nio.file.StandardOpenOption;\n+import java.nio.file.*;\n@@ -51,0 +48,3 @@\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipOutputStream;\n+import java.util.zip.ZipInputStream;\n@@ -54,0 +54,1 @@\n+import javax.swing.filechooser.FileNameExtensionFilter;\n@@ -69,0 +70,3 @@\n+import java.nio.channels.Channels;\n+import java.nio.channels.ReadableByteChannel;\n+\n@@ -79,11 +83,1 @@\n-    private static final FileFilter xmlFileFilter = new FileFilter() {\n-        @Override\n-        public boolean accept(File f) {\n-            return f.getName().toLowerCase().endsWith(\".xml\") || f.isDirectory();\n-        }\n-\n-        @Override\n-        public String getDescription() {\n-            return \"Graph files (*.xml)\";\n-        }\n-    };\n+    private static final FileFilter graphFileFilter = new FileNameExtensionFilter(\"Graph files (*.xml, *.igv)\", \"xml\", \"igv\");\n@@ -164,2 +158,20 @@\n-        try (Writer writer = new OutputStreamWriter(new FileOutputStream(path))) {\n-            Printer.exportGraphDocument(writer, doc, saveContexts);\n+        if (path.endsWith(\".igv\")) {\n+            File zipFile = new File(path);\n+            String fileName = zipFile.getName();\n+            try (FileOutputStream fos = new FileOutputStream(zipFile);\n+                 ZipOutputStream zos = new ZipOutputStream(fos);\n+                 Writer writer = new OutputStreamWriter(zos)) {\n+\n+                \/\/ Replace the '.igv' extension with '.xml's\n+                String zipEntryName = fileName.substring(0, fileName.length() - 4) + \".xml\";\n+                ZipEntry zipEntry = new ZipEntry(zipEntryName);\n+                zos.putNextEntry(zipEntry);\n+\n+                Printer.exportGraphDocument(writer, doc, saveContexts);\n+\n+                zos.closeEntry();\n+            }\n+        } else {\n+            try (Writer writer = new OutputStreamWriter(new FileOutputStream(path))) {\n+                Printer.exportGraphDocument(writer, doc, saveContexts);\n+            }\n@@ -361,1 +373,1 @@\n-        fc.setFileFilter(xmlFileFilter);\n+        fc.setFileFilter(graphFileFilter);\n@@ -406,1 +418,14 @@\n-        JFileChooser fc = new JFileChooser();\n+        JFileChooser fc = new JFileChooser() {\n+            @Override\n+            public void approveSelection() {\n+                File selectedFile = getSelectedFile();\n+                if (selectedFile != null) {\n+                    String fileName = selectedFile.getName().toLowerCase();\n+                    if (!fileName.endsWith(\".xml\") && !fileName.endsWith(\".igv\")) {\n+                        JOptionPane.showMessageDialog(this, \"Please select a graph file with .xml or .igv extension.\", \"Invalid File\", JOptionPane.ERROR_MESSAGE);\n+                        return;\n+                    }\n+                }\n+                super.approveSelection();\n+            }\n+        };\n@@ -408,1 +433,1 @@\n-        fc.setFileFilter(xmlFileFilter);\n+        fc.setFileFilter(graphFileFilter);\n@@ -435,1 +460,1 @@\n-        fc.setFileFilter(xmlFileFilter);\n+        fc.setFileFilter(graphFileFilter);\n@@ -485,2 +510,2 @@\n-     * Loads a graph document from the given file path, updating progress via a ProgressHandle.\n-     * Parse the XML file, add the parsed document to the workspace, and load associated contexts if specified.\n+     * Loads a graph document from the specified path, either as an XML file or from a ZIP archive.\n+     * If loading the context is requested, it loads the context along with the document.\n@@ -493,8 +518,11 @@\n-        final FileChannel channel;\n-        final long start;\n-        try {\n-            channel = FileChannel.open(file.toPath(), StandardOpenOption.READ);\n-            start = channel.size();\n-        } catch (Exception ex) {\n-            Exceptions.printStackTrace(ex);\n-            return;\n+        if (file.getName().endsWith(\".xml\")) {\n+            try (FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.READ)) {\n+                loadFile(channel, file, loadContext);\n+            }\n+        } else if (file.getName().endsWith(\".igv\")) {\n+            try (ZipInputStream zis = new ZipInputStream(new FileInputStream(file))) {\n+                ZipEntry entry = zis.getNextEntry();\n+                if (entry != null && entry.getName().endsWith(\".xml\")) {\n+                    loadFile(Channels.newChannel(zis), file, loadContext);\n+                }\n+            }\n@@ -502,0 +530,1 @@\n+    }\n@@ -503,0 +532,4 @@\n+    \/**\n+     * Loads an XML or ZIP document from the provided channel, while monitoring the progress of the operation.\n+     *\/\n+    private void loadFile(ReadableByteChannel channel,  File file, boolean loadContext) throws IOException {\n@@ -506,7 +539,10 @@\n-        ParseMonitor monitor = new ParseMonitor() {\n-            @Override\n-            public void updateProgress() {\n-                try {\n-                    int prog = (int) (WORK_UNITS * (double) channel.position() \/ (double) start);\n-                    handle.progress(prog);\n-                } catch (IOException ignored) {\n+        ParseMonitor monitor;\n+        if (channel instanceof FileChannel fileChannel) {\n+            final long start = fileChannel.size();\n+            monitor = new ParseMonitor() {\n+                @Override\n+                public void updateProgress() {\n+                    try {\n+                        int prog = (int) (WORK_UNITS * (double) fileChannel.position() \/ (double) start);\n+                        handle.progress(prog);\n+                    } catch (IOException ignored) {}\n@@ -514,1 +550,0 @@\n-            }\n@@ -516,6 +551,21 @@\n-            @Override\n-            public void setState(String state) {\n-                updateProgress();\n-                handle.progress(state);\n-            }\n-        };\n+                @Override\n+                public void setState(String state) {\n+                    updateProgress();\n+                    handle.progress(state);\n+                }\n+            };\n+        } else {\n+            monitor = new ParseMonitor() {\n+                @Override\n+                public void updateProgress() {\n+                    handle.progress(\"Processing...\");\n+                }\n+\n+                @Override\n+                public void setState(String state) {\n+                    updateProgress();\n+                    handle.progress(state);\n+                }\n+            };\n+        }\n+\n@@ -523,12 +573,10 @@\n-            if (file.getName().endsWith(\".xml\")) {\n-                ArrayList<GraphContext> contexts = new ArrayList<>();\n-                final Parser parser = new Parser(channel, monitor, document, loadContext ? contexts::add : null);\n-                parser.parse();\n-                SwingUtilities.invokeLater(() -> {\n-                    for (Node child : manager.getRootContext().getChildren().getNodes(true)) {\n-                        \/\/ Nodes are lazily created. By expanding and collapsing they are all initialized\n-                        ((BeanTreeView) this.treeView).expandNode(child);\n-                        ((BeanTreeView) this.treeView).collapseNode(child);\n-                    }\n-                    requestActive();\n-                });\n+            ArrayList<GraphContext> contexts = new ArrayList<>();\n+            final Parser parser = new Parser(channel, monitor, document, loadContext ? contexts::add : null);\n+            parser.parse();\n+            SwingUtilities.invokeLater(() -> {\n+                for (Node child : manager.getRootContext().getChildren().getNodes(true)) {\n+                    \/\/ Nodes are lazily created. By expanding and collapsing they are all initialized\n+                    ((BeanTreeView) this.treeView).expandNode(child);\n+                    ((BeanTreeView) this.treeView).collapseNode(child);\n+                }\n+                requestActive();\n@@ -538,1 +586,1 @@\n-            }\n+            });\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":106,"deletions":58,"binary":false,"changes":164,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+import java.util.Objects;\n+\n@@ -52,2 +54,5 @@\n-    public boolean equals(Object o) {\n-        if (!(o instanceof InputNode)) {\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null || getClass() != obj.getClass()) {\n@@ -56,2 +61,3 @@\n-        InputNode n = (InputNode) o;\n-        return n.id == id;\n+        InputNode other = (InputNode) obj;\n+        return id == other.id &&\n+                Objects.equals(getProperties(), other.getProperties());\n@@ -62,1 +68,1 @@\n-        return id * 13;\n+        return Objects.hash(id, getProperties());\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputNode.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -106,4 +106,9 @@\n-        }\n-\n-        for (InputNode n : graph.getNodes()) {\n-            if (!difference || !equal.contains(n)) {\n+            for (InputNode n : graph.getNodes()) {\n+                if (!equal.contains(n)) {\n+                    writer.startTag(Parser.NODE_ELEMENT, new Properties(Parser.NODE_ID_PROPERTY, Integer.toString(n.getId())));\n+                    writer.writeProperties(n.getProperties());\n+                    writer.endTag(); \/\/ Parser.NODE_ELEMENT\n+                }\n+            }\n+        } else {\n+            for (InputNode n : graph.getNodes()) {\n@@ -230,0 +235,4 @@\n+            b.append(\" \");\n+            b.append(code.getOperands());\n+            b.append(\" \");\n+            b.append(code.getComment());\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/Printer.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,322 @@\n+\/*\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"jvm.h\"\n+#include \"memory\/allocation.inline.hpp\"\n+#include \"memory\/resourceArea.hpp\"\n+#include \"runtime\/os.hpp\"\n+#include \"utilities\/istream.hpp\"\n+#include \"unittest.hpp\"\n+\n+template<typename BlockClass>\n+class BlockInputStream : public inputStream {\n+  BlockClass _input;\n+ public:\n+  template<typename... Arg>\n+  BlockInputStream(Arg... arg)\n+    : _input(arg...) {\n+    set_input(&_input);\n+  }\n+};\n+\n+#define EXPECT_MEMEQ(s1, s2, len) \\\n+  EXPECT_PRED_FORMAT3(CmpHelperMEMEQ, s1, s2, len)\n+\/\/ cf. ::testing::internal::CmpHelperSTREQ\n+\n+testing::AssertionResult CmpHelperMEMEQ(const char* s1_expression,\n+                                        const char* s2_expression,\n+                                        const char* len_expression,\n+                                        const char* s1, const char* s2,\n+                                        size_t len) {\n+  if (s1 == nullptr || s2 == nullptr) {\n+    return testing::internal::CmpHelperEQ(s1_expression, s2_expression,\n+                                          s1, s2);\n+  }\n+  int c = ::memcmp(s1, s2, len);\n+  if (c == 0) {\n+    return testing::AssertionSuccess();\n+  }\n+  ::std::string str1, str2;\n+  for (auto which = 0; which <= 1; which++) {\n+    auto  s   = which ? s1   : s2;\n+    auto &str = which ? str1 : str2;\n+    std::stringstream buf;\n+    buf << \"{\";\n+    for (size_t i = 0; i < len; i++) {\n+      char c = s[i];\n+      switch (c) {\n+      case '\\0':  buf << \"\\\\0\"; break;\n+      case '\\n':  buf << \"\\\\n\"; break;\n+      case '\\\\':  buf << \"\\\\\\\\\"; break;\n+      default:    buf << c; break;\n+      }\n+    }\n+    buf << \"}[\" << len_expression << \"=\" << len << \"]\";\n+    str = buf.str();\n+  }\n+  return testing::internal::CmpHelperSTREQ(s1_expression, s2_expression,\n+                                           str1.c_str(), str2.c_str());\n+}\n+\n+static int firstdiff(char* b1, char* b2, int blen) {\n+  for (int i = 0; i < blen; i++) {\n+    if (b1[i] != b2[i])  return i;\n+  }\n+  return -1;\n+}\n+\n+static char* get_temp_file(bool VERBOSE, const char* filename) {\n+  const char* tmp_dir = os::get_temp_directory();\n+  const char* file_sep = os::file_separator();\n+  size_t temp_file_len = strlen(tmp_dir) + strlen(file_sep) + strlen(filename) + 28;\n+  char* temp_file = NEW_C_HEAP_ARRAY(char, temp_file_len, mtInternal);\n+  int ret = jio_snprintf(temp_file, temp_file_len, \"%s%spid%d.%s\",\n+                         tmp_dir, file_sep,\n+                         os::current_process_id(), filename);\n+  if (VERBOSE)  tty->print_cr(\"temp_file = %s\", temp_file);\n+  return temp_file;\n+}\n+\n+static const char* get_temp_file(bool VERBOSE) {\n+  static const char* temp_file = get_temp_file(VERBOSE, \"test_istream\");\n+  return temp_file;\n+}\n+\n+#define EIGHTY 80\n+#define LC0(x)     ('\/' + (((unsigned)(x)+1) % EIGHTY))\n+#define LC(line,col)  LC0((col) * (line))\n+\n+#define COLS 30\n+\n+static int cases, total, zeroes;\n+#ifdef ASSERT\n+#define istream_coverage_mode(mode, a,b,c) \\\n+  inputStream::coverage_mode(mode, a,b,c)\n+#else\n+#define istream_coverage_mode(mode, a,b,c)\n+#endif\n+\n+\/\/ Fill in a test pattern of ascii characters.\n+\/\/ Each line is ncols long, plus a line termination of lelen (1 or 2).\n+\/\/ Each character is a fixed, static function of the line and column.\n+\/\/ This enables test logic to predict exactly what will be read in each line.\n+static void fill_pattern(bool VERBOSE,\n+                         char* pat, int patlen, int ncols, int lelen,\n+                         int& full_lines, int& partial_line,\n+                         const char* &line_end,\n+                         const char* &partial_line_end) {\n+  full_lines = partial_line = 0;\n+  for (int i = 0; i < patlen; i++) {\n+    int line = (i \/ (ncols+lelen)) + 1;  \/\/ 1-based line number\n+    int col  = (i % (ncols+lelen)) + 1;  \/\/ 1-based column number\n+    if (col <= ncols) {\n+      pat[i] = LC(line, col);\n+      partial_line = 1;\n+    } else if (col < ncols+lelen) {\n+      pat[i] = i == patlen - 1 ? '!' : '%';\n+      partial_line = 1;\n+    } else {\n+      assert(col == ncols+lelen, \"\");\n+      pat[i] = '!';\n+      full_lines++;\n+      partial_line = 0;\n+    }\n+  }\n+  pat[patlen] = '\\0';\n+  if (VERBOSE)  tty->print_cr(\"PATTERN=%d+%d[%s]\",\n+                              full_lines, partial_line, pat);\n+  for (int i = 0; i < patlen; i++) {\n+    assert(pat[i] != '%' || (i+1 < patlen && pat[i+1] == '!'), \"\");\n+    if (pat[i] == '!')  pat[i] = '\\n';\n+    if (pat[i] == '%')  pat[i] = '\\r';\n+  }\n+  assert(pat[patlen-1] != '\\r', \"\");\n+\n+  line_end = (lelen == 2 ? \"\\r\\n\" : \"\\n\");\n+  int partial_line_bytes = patlen - (full_lines * (ncols + lelen));\n+  assert(partial_line_bytes < ncols + lelen, \"\");\n+  partial_line_end = (partial_line_bytes == ncols + 1) ? \"\\n\" : \"\";\n+}\n+\n+static const int MAX_PATLEN = COLS * (COLS-1);\n+\n+static void istream_test_driver(const bool VERBOSE,\n+                                const int patlen,\n+                                const int ncols,\n+                                const int lelen,\n+                                const bool TEST_SET_POSITION,\n+                                const bool TEST_PUSH_BACK,\n+                                const bool TEST_EXPAND_REDUCE) {\n+  DEBUG_ONLY( istream_coverage_mode(VERBOSE ? 2 : 1, cases, total, zeroes) );\n+  const char* temp_file = get_temp_file(VERBOSE);\n+  unlink(temp_file);\n+  char pat[MAX_PATLEN+1];\n+  int full_lines = 0, partial_line = 0;\n+  const char* line_end = \"\\n\";\n+  const char* partial_line_end = \"\";\n+  fill_pattern(VERBOSE, pat, patlen, ncols, lelen,\n+               full_lines, partial_line,\n+               line_end, partial_line_end);\n+\n+  char pat2[sizeof(pat)];  \/\/ copy of pat to help detect scribbling\n+  memcpy(pat2, pat, sizeof(pat));\n+  \/\/ Make three kinds of stream and test them all.\n+  MemoryInput _min(pat2, patlen);\n+  inputStream sin(&_min);\n+  if (VERBOSE) {\n+    tty->print(\"at %llx \", (unsigned long long)(intptr_t)&sin);\n+    sin.dump(\"sin\");\n+  }\n+  {\n+    fileStream tfs(temp_file);\n+    guarantee(tfs.is_open(), \"cannot open temp file\");\n+    tfs.write(pat, patlen);\n+  }\n+  BlockInputStream<FileInput> fin(temp_file);\n+  if (VERBOSE) {\n+    tty->print(\"at %llx \", (unsigned long long)(intptr_t)&fin);\n+    fin.dump(\"fin\");\n+  }\n+  BlockInputStream<MemoryInput> min(&pat2[0], patlen);\n+  if (VERBOSE) {\n+    tty->print(\"at %llx \", (unsigned long long)(intptr_t)&min);\n+    sin.dump(\"min\");\n+  }\n+  inputStream* ins[] = { &sin, &fin, &min };\n+  const char* in_names[] = { \"sin\", \"fin\", \"min\" };\n+  const char* test_mode = (TEST_SET_POSITION\n+                           ? (!TEST_PUSH_BACK ? \"(seek)\" : \"(seek\/push)\")\n+                           : TEST_EXPAND_REDUCE\n+                           ? (!TEST_PUSH_BACK ? \"(exp\/red)\" : \"(exp\/red\/push)\")\n+                           : (!TEST_PUSH_BACK ? \"(plain)\" : \"(push)\"));\n+  for (int which = 0; which < 3; which++) {\n+    inputStream& in = *ins[which];\n+    const char* in_name = in_names[which];\n+    int lineno;\n+    char* lp = (char*)\"--\";\n+#define LPEQ                                                    \\\n+    in_name << test_mode                                        \\\n+            << \" ncols=\" << ncols << \" lelen=\" << lelen         \\\n+            << \" full=\" << full_lines << \" lineno=\" << lineno   \\\n+            << \" [\" << lp << \"]\" << (in.dump(\"expect\"), \"\")\n+    if (VERBOSE)\n+      tty->print_cr(\"testing %s%s patlen=%d ncols=%d full_lines=%d partial_line=%d\",\n+                    in_name, test_mode,\n+                    patlen, ncols, full_lines, partial_line);\n+    int pos_to_set = 0, line_to_set = 1;  \/\/ for TEST_SET_POSITION only\n+    for (int phase = 0; phase <= (TEST_SET_POSITION ? 1 : 0); phase++) {\n+      lineno = 1;\n+      for (; lineno <= full_lines + partial_line; lineno++) {\n+        EXPECT_EQ(-1, firstdiff(pat, pat2, patlen + 1));\n+        if (VERBOSE)  in.dump(\"!done?\");\n+        bool done = in.done();\n+        EXPECT_TRUE(!done)  <<LPEQ;\n+        if (done)  break;\n+        lp = in.current_line();\n+        const char* expect_endl =\n+          (lineno <= full_lines) ? line_end : partial_line_end;\n+\n+        bool verify_lp = true;\n+        if (verify_lp) {\n+          int actual_lineno = (int) in.lineno();\n+          if (VERBOSE)  in.dump(\"CL    \");\n+          EXPECT_EQ(actual_lineno, lineno)  <<LPEQ;\n+          int len = (int) in.current_line_length();\n+          EXPECT_EQ(len, (int) strlen(lp))  <<LPEQ;\n+          int expect_len = ncols;\n+          if (lineno > full_lines)\n+            expect_len = MIN2(ncols, patlen % (ncols+lelen));\n+          EXPECT_EQ(len, expect_len)  <<LPEQ;\n+          for (int j = 0; j < len; j++) {\n+            int lc = LC(lineno, j+1);   \/\/ 1-based column\n+            EXPECT_EQ(lc, lp[j])  <<LPEQ;\n+          }\n+          if (len != expect_len || len != (int)strlen(lp)) {\n+            return;  \/\/ no error cascades please\n+          }\n+        }\n+        if (VERBOSE)  in.dump(\"next  \");\n+        in.next();\n+      }\n+\n+      for (int done_test = 0; done_test <= 3; done_test++) {\n+        if (done_test == 2)  in.set_done();\n+        lp = in.current_line();  \/\/ should be empty line\n+        if (VERBOSE)  in.dump(\"done!!\");\n+        EXPECT_TRUE(lp != nullptr);\n+        EXPECT_TRUE(in.done())  <<LPEQ;\n+        if (!in.done())  break;\n+        EXPECT_EQ((int)in.current_line_length(), 0)   <<LPEQ;\n+        EXPECT_EQ(strlen(lp), in.current_line_length())  <<LPEQ;\n+        bool extra_next = in.next();\n+        EXPECT_TRUE(!extra_next)  <<LPEQ;\n+      }\n+\n+      \/\/ no memory side effects\n+      EXPECT_EQ(-1, firstdiff(pat, pat2, patlen + 1));\n+    }\n+  }\n+  unlink(temp_file);\n+}\n+\n+static void istream_test_driver(const bool VERBOSE,\n+                                const bool TEST_SET_POSITION,\n+                                const bool TEST_PUSH_BACK,\n+                                const bool TEST_EXPAND_REDUCE) {\n+  ResourceMark rm;\n+  int patlen = MAX_PATLEN;\n+  const bool SHORT_TEST = false;\n+  const int SHORT_NCOLS = 1, SHORT_PATLEN = 37;\n+  if (SHORT_TEST)  patlen = SHORT_PATLEN;\n+  for (int ncols = 0; ncols <= patlen; ncols++) {\n+    if (SHORT_TEST) {\n+      if (ncols < SHORT_NCOLS)  ncols = SHORT_NCOLS;\n+      if (ncols > SHORT_NCOLS)  break;\n+    } else if (ncols > COLS && ncols < patlen - COLS) {\n+      ncols += ncols \/ 7;\n+      if (ncols > patlen - COLS)  ncols = (patlen - COLS);\n+    }\n+    for (int lelen = 1; lelen <= 2; lelen++) {  \/\/ try both kinds of newline\n+      istream_test_driver(VERBOSE,\n+                          patlen, ncols, lelen,\n+                          TEST_SET_POSITION, TEST_PUSH_BACK, TEST_EXPAND_REDUCE);\n+    }\n+  }\n+}\n+\n+TEST_VM(istream, basic) {\n+  const bool VERBOSE = false;\n+  istream_test_driver(VERBOSE, false, false, false);\n+}\n+\n+TEST_VM(istream, coverage) {\n+  const bool VERBOSE = false;\n+#ifdef ASSERT\n+  istream_coverage_mode(0, cases, total, zeroes);\n+  if (cases == 0)  return;\n+  if (VERBOSE || zeroes != 0)\n+    istream_coverage_mode(-1, cases, total, zeroes);\n+  EXPECT_EQ(zeroes, 0) << \"zeroes: \" << zeroes << \"\/\" << cases;\n+#endif \/\/ASSERT\n+}\n","filename":"test\/hotspot\/gtest\/utilities\/test_istream.cpp","additions":322,"deletions":0,"binary":false,"changes":322,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,4 +30,0 @@\n-serviceability\/dcmd\/thread\/PrintConcurrentLocksTest.java 8308033 generic-all\n-serviceability\/dcmd\/thread\/PrintTest.java 8308033 generic-all\n-serviceability\/dcmd\/thread\/ThreadDumpToFileTest.java 8308033 generic-all\n-serviceability\/tmtools\/jstack\/DaemonThreadTest.java 8308033 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList-Virtual.txt","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -119,1 +119,0 @@\n-vmTestbase\/nsk\/monitoring\/MemoryPoolMBean\/isCollectionUsageThresholdExceeded\/isexceeded002\/TestDescription.java 8298302 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList-generational-zgc.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-vmTestbase\/nsk\/monitoring\/MemoryPoolMBean\/isCollectionUsageThresholdExceeded\/isexceeded002\/TestDescription.java 8298302 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList-zgc.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-serviceability\/dcmd\/gc\/RunFinalizationTest.java 8227120 linux-all,windows-x64,aix-ppc64\n+serviceability\/dcmd\/gc\/RunFinalizationTest.java 8227120 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,0 +60,7 @@\n+hotspot_runtime_non_cds_mode = \\\n+  runtime \\\n+  -runtime\/cds\/CheckSharingWithDefaultArchive.java \\\n+  -runtime\/cds\/appcds\/dynamicArchive\/DynamicSharedSymbols.java \\\n+  -runtime\/cds\/appcds\/dynamicArchive\/TestAutoCreateSharedArchive.java \\\n+  -runtime\/cds\/appcds\/jcmd\n+\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.arraycopy;\n+import java.util.Random;\n+\n+\/**\n+ * @test\n+ * @bug 8310159\n+ * @summary Test large arrayCopy.\n+ *\n+ * @run main\/timeout=600 compiler.arraycopy.TestArrayCopyDisjointLarge\n+ *\n+ *\/\n+\n+public class TestArrayCopyDisjointLarge {\n+\n+    public static final int ARRLEN = 4194304;\n+    public static int fromPos, toPos;\n+    public static byte[] fromByteArr, toByteArr;\n+\n+    public static void setup() {\n+        fromPos = 0;\n+        toPos = 0;\n+\n+        fromByteArr = new byte[ARRLEN];\n+        toByteArr = new byte[ARRLEN];\n+        for (int i = 0 ; i < ARRLEN ; i++) {\n+            fromByteArr[i] = (byte)i;\n+        }\n+    }\n+\n+    public static void validate(String msg, byte[] toByteArr, int length, int fromPos, int toPos) {\n+        for(int i = 0 ; i < length; i++) {\n+            if (fromByteArr[i + fromPos] != toByteArr[i + toPos]) {\n+                System.out.println(msg + \"[\" + toByteArr.getClass() + \"] Result mismtach at i = \" + i\n+                                + \" expected = \" + fromByteArr[i + fromPos]\n+                                + \" actual   = \" + toByteArr[i + toPos]\n+                                + \" fromPos = \" + fromPos\n+                                + \" toPos = \" + toPos);\n+                throw new Error(\"Fail\");\n+            }\n+        }\n+    }\n+\n+    public static void testByte(int length, int fromPos, int toPos) {\n+        System.arraycopy(fromByteArr, fromPos, toByteArr, toPos, length);\n+        validate(\" Test ByteArr \", toByteArr, length, fromPos, toPos);\n+    }\n+\n+    public static void main(String [] args) {\n+        int base_size = 2621440;\n+        Random r = new Random(1024);\n+        int [] lengths = {base_size - 1, base_size, base_size + 1, base_size + 63, base_size + 64,\n+                                base_size + 65, base_size + 255, base_size + 256, base_size + 257,\n+                                base_size + r.nextInt(2048)};\n+        setup();\n+\n+        for (int i = 0 ; i < 20 ; i++ ) {\n+            testByte(lengths[i % lengths.length], 0, 0);\n+            testByte(lengths[i % lengths.length], 0, 9);\n+            testByte(lengths[i % lengths.length], 9, 0);\n+            testByte(lengths[i % lengths.length], 9, 9);\n+            testByte(lengths[i % lengths.length], r.nextInt(2048) , r.nextInt(2048));\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyDisjointLarge.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key stress randomness\n+ * @bug 8329258\n+ * @summary Test correct execution of the tail call at the end of the arraycopy stub.\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -Xbatch -XX:-TieredCompilation\n+ *                   -XX:+StressGCM -XX:+StressLCM\n+ *                   -XX:CompileCommand=quiet -XX:CompileCommand=compileonly,*::test\n+ *                   compiler.arraycopy.TestTailCallInArrayCopyStub\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -Xbatch -XX:-TieredCompilation\n+ *                   -XX:+StressGCM -XX:+StressLCM -XX:StressSeed=75451718\n+ *                   -XX:CompileCommand=quiet -XX:CompileCommand=compileonly,*::test\n+ *                   compiler.arraycopy.TestTailCallInArrayCopyStub\n+ *\/\n+\n+package compiler.arraycopy;\n+\n+public class TestTailCallInArrayCopyStub {\n+\n+    public static void test(byte[] src, byte[] dst) {\n+        try {\n+            System.arraycopy(src, -1, dst, 0, src.length);\n+        } catch (Exception e) {\n+            \/\/ Expected\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        byte[] array = new byte[5];\n+        for (int i = 0; i < 10_000; ++i) {\n+            test(array, array);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestTailCallInArrayCopyStub.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,133 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8302850\n+ * @summary Tests that an array clone call that has been compiled with C1\n+ *          handles null values correctly.\n+ * @run main\/othervm -XX:-UseOnStackReplacement -XX:-BackgroundCompilation -XX:TieredStopAtLevel=1\n+ *                   -XX:CompileOnly=compiler.c1.TestNullArrayClone::testClone* -XX:+UnlockExperimentalVMOptions\n+ *                   compiler.c1.TestNullArrayClone\n+ *\/\n+package compiler.c1;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+public class TestNullArrayClone {\n+    static final int ITER = 2000; \/\/ ~ Tier3CompileThreshold\n+    static final int ARRAY_SIZE = 999;\n+\n+    public static void main(String[] args) {\n+        testInts();\n+        testLongs();\n+        testBytes();\n+    }\n+\n+    private static void testInts() {\n+        final int[] arr = new int[ARRAY_SIZE];\n+        for (int i = 0; i < arr.length; i++) {\n+            arr[i] = ThreadLocalRandom.current().nextInt();\n+        }\n+\n+        for (int i = 0; i < ITER; i++) {\n+            int[] result = testClonePrimitiveInt(arr);\n+            if (result.length != arr.length) {\n+                throw new RuntimeException(\"Unexpected clone length: source array length \" + arr.length + \" != clone array length \" + result.length);\n+            }\n+            for (int j = 0; j < arr.length; j++) {\n+                if (result[j] != arr[j]) {\n+                    throw new RuntimeException(\"Unexpected result: \" + result[j] + \" != \" + j);\n+                }\n+            }\n+        }\n+\n+        try {\n+            testClonePrimitiveInt(null);\n+            throw new RuntimeException(\"Expected NullPointerException to be thrown\");\n+        } catch (NullPointerException e) {\n+        }\n+    }\n+\n+    private static void testLongs() {\n+        final long[] arr = new long[ARRAY_SIZE];\n+        for (int i = 0; i < arr.length; i++) {\n+            arr[i] = ThreadLocalRandom.current().nextLong();\n+        }\n+\n+        for (int i = 0; i < ITER; i++) {\n+            long[] result = testClonePrimitiveLong(arr);\n+            if (result.length != arr.length) {\n+                throw new RuntimeException(\"Unexpected clone length: source array length \" + arr.length + \" != clone array length \" + result.length);\n+            }\n+            for (int j = 0; j < arr.length; j++) {\n+                if (result[j] != arr[j]) {\n+                    throw new RuntimeException(\"Unexpected result: \" + result[j] + \" != \" + j);\n+                }\n+            }\n+        }\n+\n+        try {\n+            testClonePrimitiveLong(null);\n+            throw new RuntimeException(\"Expected NullPointerException to be thrown\");\n+        } catch (NullPointerException e) {\n+        }\n+    }\n+\n+    private static void testBytes() {\n+        final byte[] arr = new byte[ARRAY_SIZE];\n+        for (int i = 0; i < arr.length; i++) {\n+            arr[i] = (byte) ThreadLocalRandom.current().nextInt();\n+        }\n+\n+        for (int i = 0; i < ITER; i++) {\n+            byte[] result = testClonePrimitiveBytes(arr);\n+            if (result.length != arr.length) {\n+                throw new RuntimeException(\"Unexpected clone length: source array length \" + arr.length + \" != clone array length \" + result.length);\n+            }\n+            for (int j = 0; j < arr.length; j++) {\n+                if (result[j] != arr[j]) {\n+                    throw new RuntimeException(\"Unexpected result: \" + result[j] + \" != \" + j);\n+                }\n+            }\n+        }\n+\n+        try {\n+            testClonePrimitiveBytes(null);\n+            throw new RuntimeException(\"Expected NullPointerException to be thrown\");\n+        } catch (NullPointerException e) {\n+        }\n+    }\n+\n+    static int[] testClonePrimitiveInt(int[] ints) {\n+        return ints.clone();\n+    }\n+\n+    static long[] testClonePrimitiveLong(long[] longs) {\n+        return longs.clone();\n+    }\n+\n+    static byte[] testClonePrimitiveBytes(byte[] bytes) {\n+        return bytes.clone();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestNullArrayClone.java","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"},{"patch":"@@ -30,1 +30,2 @@\n- * @run main\/othervm -Xbatch -XX:CompileCommand=option,*::*,bool,Vectorize,true -XX:+PrintOpto -XX:+TraceLoopOpts compiler.c2.TestFindNode\n+ * @run main\/othervm -Xbatch -XX:CompileCommand=option,*::*,bool,Vectorize,true -XX:CompileCommand=memlimit,compiler.c2.TestFindNode::*,0\n+ *                   -XX:+PrintOpto -XX:+TraceLoopOpts compiler.c2.TestFindNode\n@@ -34,0 +35,2 @@\n+\/\/ Note; we disable the implicit memory limit of 1G in debug JVMs until JDK-8331283 is fixed\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestFindNode.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.c2;\n+\n+\/*\n+ * @test\n+ * @bug 8318446 8331085\n+ * @summary Test merge stores, when \"adr_type() == nullptr\" because of TOP somewhere in the address.\n+ * @run main\/othervm -XX:CompileCommand=compileonly,compiler.c2.TestMergeStoresNullAdrType::test\n+ *                   -XX:-TieredCompilation -Xcomp\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:+StressCCP\n+ *                   -XX:RepeatCompilation=1000\n+ *                   compiler.c2.TestMergeStoresNullAdrType\n+ * @run main compiler.c2.TestMergeStoresNullAdrType\n+ *\/\n+\n+public class TestMergeStoresNullAdrType {\n+    static int arr[] = new int[100];\n+\n+    static void test() {\n+        boolean b = false;\n+        for (int k = 269; k > 10; --k) {\n+            b = b;\n+            int j = 6;\n+            while ((j -= 3) > 0) {\n+                if (b) {\n+                } else {\n+                    arr[j] >>= 2;\n+                }\n+            }\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        test();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestMergeStoresNullAdrType.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8330795\n+ * @summary Check that Reduce Allocation Merges doesn't crash when CompressedClassPointers\n+ *          is disabled and there is an access to Klass \"field\" through the phi.\n+ * @requires vm.bits == 64 & vm.flagless & vm.compiler2.enabled & vm.opt.final.EliminateAllocations\n+ * @run main\/othervm -XX:CompileCommand=dontinline,*TestReduceAllocationAndLoadKlass*::test\n+ *                   -XX:CompileCommand=compileonly,*TestReduceAllocationAndLoadKlass*::test\n+ *                   -XX:CompileCommand=compileonly,*Shape*::*init*\n+ *                   -XX:CompileCommand=compileonly,*Point*::*init*\n+ *                   -XX:CompileCommand=exclude,*TestReduceAllocationAndLoadKlass*::dummy\n+ *                   -XX:-TieredCompilation\n+ *                   -XX:-UseCompressedClassPointers\n+ *                   -Xbatch\n+ *                   -Xcomp\n+ *                   -server\n+ *                   compiler.c2.TestReduceAllocationAndLoadKlass\n+ *\/\n+\n+package compiler.c2;\n+\n+public class TestReduceAllocationAndLoadKlass {\n+    public static void main(String[] args) {\n+        Point p = new Point();\n+        Line q = new Line();\n+\n+        test(true);\n+        test(false);\n+    }\n+\n+    static Class test(boolean cond) {\n+        Object p = cond ? dummy() : new Line();\n+        return p.getClass();\n+    }\n+\n+    static Point dummy() { return new Point(); }\n+\n+    static class Shape { }\n+    static class Point extends Shape { }\n+    static class Line extends Shape { }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestReduceAllocationAndLoadKlass.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8330247\n+ * @summary Check that Reduce Allocation Merges doesn't try to reduce non-exact allocations.\n+ * @library \/test\/lib \/\n+ * @modules java.base\/jdk.internal.misc\n+ * @requires vm.debug & vm.flagless & vm.compiler2.enabled & vm.opt.final.EliminateAllocations\n+ * @run main\/othervm -XX:CompileCommand=compileonly,*TestReduceAllocationAndNonExactAllocate*::test\n+ *                   -XX:CompileCommand=compileonly,*::allocateInstance\n+ *                   -XX:CompileCommand=dontinline,*TestReduceAllocationAndNonExactAllocate*::*\n+ *                   -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:+TraceReduceAllocationMerges\n+ *                   -XX:-TieredCompilation\n+ *                   -Xbatch\n+ *                   -Xcomp\n+ *                   -server\n+ *                   compiler.c2.TestReduceAllocationAndNonExactAllocate\n+ *\/\n+\n+package compiler.c2;\n+\n+import jdk.internal.misc.Unsafe;\n+\n+public class TestReduceAllocationAndNonExactAllocate {\n+    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n+\n+    public static void main(String[] args) {\n+        try {\n+            if (test(20, Integer.class) != 2032) {\n+                throw new RuntimeException(\"Expected the value to be 2032.\");\n+            }\n+        }\n+        catch (InstantiationException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public static int test(int val, Class<?> c) throws InstantiationException {\n+        Object p = null;\n+\n+        if (val == 20) {\n+            p = UNSAFE.allocateInstance(c);\n+        }\n+\n+        dummy();\n+        return p != null ? 2032 : 3242;\n+    }\n+\n+    static int dummy() { return 42; }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestReduceAllocationAndNonExactAllocate.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestUninitializedKlassField.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-    @IR(failOn = {IRNode.COUNTTRAILINGZEROS_VL})\n+    @IR(failOn = {IRNode.COUNT_TRAILING_ZEROS_VL})\n@@ -128,1 +128,1 @@\n-    @IR(failOn = {IRNode.COUNTLEADINGZEROS_VL})\n+    @IR(failOn = {IRNode.COUNT_LEADING_ZEROS_VL})\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestDisableAutoVectOpcodes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @requires vm.debug == true & vm.bits == 64 & vm.compiler2.enabled & vm.opt.final.UseCompressedOops & vm.opt.final.EliminateAllocations\n+ * @requires vm.debug == true & vm.flagless & vm.bits == 64 & vm.compiler2.enabled & vm.opt.final.EliminateAllocations\n@@ -42,9 +42,38 @@\n-        TestFramework.runWithFlags(\"-XX:+UnlockDiagnosticVMOptions\",\n-                                   \"-XX:+ReduceAllocationMerges\",\n-                                   \"-XX:+TraceReduceAllocationMerges\",\n-                                   \"-XX:+DeoptimizeALot\",\n-                                   \"-XX:CompileCommand=inline,*::charAt*\",\n-                                   \"-XX:CompileCommand=inline,*PicturePositions::*\",\n-                                   \"-XX:CompileCommand=inline,*Point::*\",\n-                                   \"-XX:CompileCommand=inline,*Nested::*\",\n-                                   \"-XX:CompileCommand=exclude,*::dummy*\");\n+        TestFramework framework = new TestFramework();\n+\n+        Scenario scenario0 = new Scenario(0, \"-XX:+UnlockDiagnosticVMOptions\",\n+                                             \"-XX:+ReduceAllocationMerges\",\n+                                             \"-XX:+TraceReduceAllocationMerges\",\n+                                             \"-XX:+DeoptimizeALot\",\n+                                             \"-XX:+UseCompressedOops\",\n+                                             \"-XX:+UseCompressedClassPointers\",\n+                                             \"-XX:CompileCommand=inline,*::charAt*\",\n+                                             \"-XX:CompileCommand=inline,*PicturePositions::*\",\n+                                             \"-XX:CompileCommand=inline,*Point::*\",\n+                                             \"-XX:CompileCommand=inline,*Nested::*\",\n+                                             \"-XX:CompileCommand=exclude,*::dummy*\");\n+\n+        Scenario scenario1 = new Scenario(1, \"-XX:+UnlockDiagnosticVMOptions\",\n+                                             \"-XX:+ReduceAllocationMerges\",\n+                                             \"-XX:+TraceReduceAllocationMerges\",\n+                                             \"-XX:+DeoptimizeALot\",\n+                                             \"-XX:+UseCompressedOops\",\n+                                             \"-XX:-UseCompressedClassPointers\",\n+                                             \"-XX:CompileCommand=inline,*::charAt*\",\n+                                             \"-XX:CompileCommand=inline,*PicturePositions::*\",\n+                                             \"-XX:CompileCommand=inline,*Point::*\",\n+                                             \"-XX:CompileCommand=inline,*Nested::*\",\n+                                             \"-XX:CompileCommand=exclude,*::dummy*\");\n+\n+        Scenario scenario2 = new Scenario(2, \"-XX:+UnlockDiagnosticVMOptions\",\n+                                             \"-XX:+ReduceAllocationMerges\",\n+                                             \"-XX:+TraceReduceAllocationMerges\",\n+                                             \"-XX:+DeoptimizeALot\",\n+                                             \"-XX:-UseCompressedOops\",\n+                                             \"-XX:CompileCommand=inline,*::charAt*\",\n+                                             \"-XX:CompileCommand=inline,*PicturePositions::*\",\n+                                             \"-XX:CompileCommand=inline,*Point::*\",\n+                                             \"-XX:CompileCommand=inline,*Nested::*\",\n+                                             \"-XX:CompileCommand=exclude,*::dummy*\");\n+\n+        framework.addScenarios(scenario0, scenario1, scenario2).start();\n@@ -97,1 +126,2 @@\n-                 \"testLoadNarrowKlass_C2\",\n+                 \"testLoadKlassFromCast_C2\",\n+                 \"testLoadKlassFromPhi_C2\",\n@@ -153,1 +183,2 @@\n-        Asserts.assertEQ(testLoadNarrowKlass_Interp(cond1),                         testLoadNarrowKlass_C2(cond1));\n+        Asserts.assertEQ(testLoadKlassFromCast_Interp(cond1),                       testLoadKlassFromCast_C2(cond1));\n+        Asserts.assertEQ(testLoadKlassFromPhi_Interp(cond1),                        testLoadKlassFromPhi_C2(cond1));\n@@ -774,1 +805,2 @@\n-    @IR(counts = { IRNode.ALLOC, \"2\" } )\n+    @IR(counts = { IRNode.ALLOC, \"2\" }, applyIf = {\"UseCompressedOops\", \"true\"} )\n+    @IR(failOn = { IRNode.ALLOC }, applyIf = {\"UseCompressedOops\", \"false\"} )\n@@ -776,2 +808,2 @@\n-    \/\/ be removed because the Phi merging them will have a DecodeN user - which\n-    \/\/ currently isn't supported.\n+    \/\/ be removed, if CompressedOops is enabled, because the Phi merging them will\n+    \/\/ have a DecodeN user - which currently isn't supported.\n@@ -1261,1 +1293,1 @@\n-    Class testLoadNarrowKlass(boolean cond1) {\n+    Class testLoadKlassFromCast(boolean cond1) {\n@@ -1273,3 +1305,2 @@\n-    \/\/ The allocation won't be reduced because we don't support NarrowKlass\n-    \/\/ loads under CastPPs.\n-    Class testLoadNarrowKlass_C2(boolean cond1) { return testLoadNarrowKlass(cond1); }\n+    \/\/ The allocation won't be reduced because we don't support [Narrow]Klass loads\n+    Class testLoadKlassFromCast_C2(boolean cond1) { return testLoadKlassFromCast(cond1); }\n@@ -1278,1 +1309,22 @@\n-    Class testLoadNarrowKlass_Interp(boolean cond1) { return testLoadNarrowKlass(cond1); }\n+    Class testLoadKlassFromCast_Interp(boolean cond1) { return testLoadKlassFromCast(cond1); }\n+\n+    \/\/ -------------------------------------------------------------------------\n+\n+    @ForceInline\n+    Class testLoadKlassFromPhi(boolean cond1) {\n+        Shape p = new Square(20);\n+\n+        if (cond1) {\n+            p = new Circle(10);\n+        }\n+\n+        return p.getClass();\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.ALLOC, \"2\" })\n+    \/\/ The allocation won't be reduced because we don't support [Narrow]Klass loads\n+    Class testLoadKlassFromPhi_C2(boolean cond1) { return testLoadKlassFromPhi(cond1); }\n+\n+    @DontCompile\n+    Class testLoadKlassFromPhi_Interp(boolean cond1) { return testLoadKlassFromPhi(cond1); }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/scalarReplacement\/AllocationMergesTests.java","additions":72,"deletions":20,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/TestConvertImplicitNullCheck.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8331033\n+ * @summary EA fails with \"EA unexpected CallLeaf unsafe_setmemory\" after JDK-8329331\n+ * @requires vm.compMode != \"Xint\"\n+ *\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation  Test8331033\n+ *\n+ *\/\n+import java.lang.foreign.*;\n+\n+class MyClass {\n+  public int field1;\n+  public int field2;\n+  public int field3;\n+  public int field4;\n+\n+  public MyClass(int field1, int field2, int field3, int field4) {\n+    this.field1 = field1;\n+    this.field2 = field2;\n+    this.field3 = field3;\n+    this.field4 = field4;\n+  }\n+}\n+\n+public class Test8331033 {\n+\n+  public static int micro1(int ctr) {\n+    \/\/ non-escaping object, EA sweepable, values are forwarded to users, additional\n+    \/\/ bookeeping (SafepointScalarObjectNode) for eliminated objects at SafePoints\n+    \/\/ With -XX:-Inline, constructor will not be inlined and hence AllocateNode are\n+    \/\/ considered escapable.\n+    MyClass obj = new MyClass(10, 20, 30, 40);\n+    return obj.field1 * ctr + obj.field2 + obj.field3 + obj.field4;\n+  }\n+\n+  public static int micro2(int ctr) {\n+    \/\/ small known length arrays of size less than\n+    \/\/ -XX:+EliminateAllocationArraySizeLimit are eliminatable if non-escaping.\n+    int[] arr = new int[5];\n+    arr[0] = 10;\n+    arr[1] = 10;\n+    arr[2] = 10;\n+    arr[3] = 10;\n+    arr[4] = 10;\n+    \/\/ value forwarding will forward constants to expressions.\n+    return ctr * arr[0] + arr[1] + arr[2] + arr[3] + arr[4];\n+  }\n+\n+  public static int micro3(int ctr) {\n+    int[] arr = new int[8];\n+    MemorySegment ms = MemorySegment.ofArray(arr);\n+    ms.fill((byte) 10);\n+    return ctr * ms.get(ValueLayout.JAVA_INT, 12) +\n+        ms.get(ValueLayout.JAVA_INT, 16) +\n+        ms.get(ValueLayout.JAVA_INT, 20) +\n+        ms.get(ValueLayout.JAVA_INT, 24);\n+  }\n+\n+  public static void main(String[] args) {\n+    {\n+      int res = 0;\n+      for (int i = 0; i < 100000; i++) {\n+        res += micro1(i);\n+      }\n+      System.out.println(\"[res] \" + res);\n+    }\n+    {\n+      int res = 0;\n+      for (int i = 0; i < 100000; i++) {\n+        res += micro2(i);\n+      }\n+      System.out.println(\"[res] \" + res);\n+    }\n+    {\n+      int res = 0;\n+      for (int i = 0; i < 100000; i++) {\n+        res += micro3(i);\n+      }\n+      System.out.println(\"[res] \" + res);\n+    }\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/escapeAnalysis\/Test8331033.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -1,108 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8136421\n- * @requires vm.jvmci\n- * @library \/test\/lib \/\n- * @library ..\/common\/patches\n- * @modules java.base\/jdk.internal.misc\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          java.base\/jdk.internal.org.objectweb.asm.tree\n- *          jdk.internal.vm.ci\/jdk.vm.ci.hotspot\n- *          jdk.internal.vm.ci\/jdk.vm.ci.code\n- *          jdk.internal.vm.ci\/jdk.vm.ci.code.site\n- *          jdk.internal.vm.ci\/jdk.vm.ci.meta\n- *          jdk.internal.vm.ci\/jdk.vm.ci.runtime\n- *\n- * @build jdk.internal.vm.ci\/jdk.vm.ci.hotspot.CompilerToVMHelper\n- *        jdk.test.whitebox.WhiteBox jdk.test.whitebox.parser.DiagnosticCommand\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n- *                                jdk.test.whitebox.parser.DiagnosticCommand\n- * @run junit\/othervm -Xbootclasspath\/a:.\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n- *                   -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI\n- *                   compiler.jvmci.compilerToVM.InvalidateInstalledCodeTest\n- *\/\n-\n-package compiler.jvmci.compilerToVM;\n-\n-import compiler.jvmci.common.CodeInstallerTest;\n-import compiler.jvmci.common.CTVMUtilities;\n-import jdk.test.lib.Asserts;\n-import jdk.test.lib.Utils;\n-import jdk.vm.ci.code.InstalledCode;\n-import jdk.vm.ci.code.site.Site;\n-import jdk.vm.ci.code.site.DataPatch;\n-import jdk.vm.ci.hotspot.CompilerToVMHelper;\n-import jdk.vm.ci.hotspot.HotSpotJVMCIRuntime;\n-import jdk.vm.ci.hotspot.HotSpotResolvedJavaMethod;\n-import jdk.vm.ci.hotspot.HotSpotCompiledCode.Comment;\n-import jdk.vm.ci.hotspot.HotSpotNmethod;\n-import jdk.vm.ci.meta.Assumptions.Assumption;\n-\n-import java.util.List;\n-import org.junit.Test;\n-\n-public class InvalidateInstalledCodeTest extends CodeInstallerTest {\n-\n-    @Test\n-    public void testInvalidation() {\n-        List<CompileCodeTestCase> testCases\n-                = CompileCodeTestCase.generate(\/* bci = *\/ 0);\n-        testCases.addAll(CompileCodeTestCase.generate(\/* bci = *\/ -1));\n-        testCases.forEach(t -> check(t));\n-        checkNull();\n-    }\n-\n-    private void checkNull() {\n-        Utils.runAndCheckException(\n-                () -> CompilerToVMHelper.invalidateHotSpotNmethod(null, true),\n-                NullPointerException.class);\n-    }\n-\n-    private void check(CompileCodeTestCase testCase) {\n-        HotSpotResolvedJavaMethod javaMethod = CTVMUtilities.getResolvedMethod(testCase.executable);\n-        HotSpotNmethod nmethod = (HotSpotNmethod) installEmptyCode(new Site[0], new Assumption[0],\n-                new Comment[0], 8, new DataPatch[0], null);\n-\n-        Asserts.assertTrue(nmethod.isValid(), testCase + \" : code is invalid even before invalidation\");\n-\n-        Asserts.assertTrue(nmethod.isValid(), testCase + \" : code is not valid, i = \" + nmethod);\n-        Asserts.assertTrue(nmethod.isAlive(), testCase + \" : code is not alive, i = \" + nmethod);\n-        Asserts.assertNotEquals(nmethod.getStart(), 0L);\n-\n-        \/\/ Make nmethod non-entrant but still alive\n-        CompilerToVMHelper.invalidateHotSpotNmethod(nmethod, false);\n-        Asserts.assertFalse(nmethod.isValid(), testCase + \" : code is valid, i = \" + nmethod);\n-        Asserts.assertTrue(nmethod.isAlive(), testCase + \" : code is not alive, i = \" + nmethod);\n-        Asserts.assertEquals(nmethod.getStart(), 0L);\n-\n-        \/\/ Deoptimize the nmethod and cut the link to it from the HotSpotNmethod\n-        CompilerToVMHelper.invalidateHotSpotNmethod(nmethod, true);\n-        Asserts.assertFalse(nmethod.isValid(), testCase + \" : code is valid, i = \" + nmethod);\n-        Asserts.assertFalse(nmethod.isAlive(), testCase + \" : code is alive, i = \" + nmethod);\n-        Asserts.assertEquals(nmethod.getStart(), 0L);\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/InvalidateInstalledCodeTest.java","additions":0,"deletions":108,"binary":false,"changes":108,"status":"deleted"},{"patch":"@@ -1,2 +0,0 @@\n-compiler.jvmci.events.JvmciNotifyInstallEventTest\n-compiler.jvmci.common.JVMCIHelpers\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/events\/JvmciNotifyInstallEventTest.config","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -1,179 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8136421\n- * @requires vm.jvmci & !vm.graal.enabled & vm.compMode == \"Xmixed\"\n- * @library \/ \/test\/lib\n- * @library ..\/common\/patches\n- * @modules java.base\/jdk.internal.misc\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          java.base\/jdk.internal.org.objectweb.asm.tree\n- *          jdk.internal.vm.ci\/jdk.vm.ci.hotspot\n- *          jdk.internal.vm.ci\/jdk.vm.ci.code\n- *          jdk.internal.vm.ci\/jdk.vm.ci.code.site\n- *          jdk.internal.vm.ci\/jdk.vm.ci.meta\n- *          jdk.internal.vm.ci\/jdk.vm.ci.runtime\n- *          jdk.internal.vm.ci\/jdk.vm.ci.services\n- *\n- * @build jdk.internal.vm.ci\/jdk.vm.ci.hotspot.CompilerToVMHelper\n- * @build compiler.jvmci.common.JVMCIHelpers\n- * @run driver jdk.test.lib.FileInstaller .\/JvmciNotifyInstallEventTest.config\n- *     .\/META-INF\/services\/jdk.vm.ci.services.JVMCIServiceLocator\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller\n- *      compiler.jvmci.common.JVMCIHelpers$EmptyHotspotCompiler\n- *      compiler.jvmci.common.JVMCIHelpers$EmptyCompilerFactory\n- *      compiler.jvmci.common.JVMCIHelpers$EmptyCompilationRequestResult\n- *      compiler.jvmci.common.JVMCIHelpers$EmptyVMEventListener\n- * @run main\/othervm -XX:+UnlockExperimentalVMOptions\n- *     -Djvmci.Compiler=EmptyCompiler -Xbootclasspath\/a:.\n- *     -XX:+UseJVMCICompiler -XX:-BootstrapJVMCI\n- *     -XX:-UseJVMCINativeLibrary -XX:JVMCITraceLevel=1\n- *     -Dtest.jvmci.forceRuntimeStubAllocFail=test_stub_that_fails_to_be_allocated\n- *     compiler.jvmci.events.JvmciNotifyInstallEventTest\n- * @run main\/othervm -XX:+UnlockExperimentalVMOptions\n- *     -Djvmci.Compiler=EmptyCompiler -Xbootclasspath\/a:.\n- *     -XX:+UseJVMCICompiler -XX:-BootstrapJVMCI -XX:JVMCINMethodSizeLimit=0\n- *     -XX:-UseJVMCINativeLibrary\n- *     compiler.jvmci.events.JvmciNotifyInstallEventTest\n- *\/\n-\n-package compiler.jvmci.events;\n-\n-import compiler.jvmci.common.CTVMUtilities;\n-import compiler.jvmci.common.testcases.SimpleClass;\n-import jdk.test.lib.Asserts;\n-import jdk.test.lib.Platform;\n-import jdk.test.lib.Utils;\n-import jdk.vm.ci.services.JVMCIServiceLocator;\n-import jdk.vm.ci.code.BailoutException;\n-import jdk.vm.ci.code.CompiledCode;\n-import jdk.vm.ci.code.InstalledCode;\n-import jdk.vm.ci.code.site.DataPatch;\n-import jdk.vm.ci.code.site.Site;\n-import jdk.vm.ci.hotspot.HotSpotCodeCacheProvider;\n-import jdk.vm.ci.hotspot.HotSpotCompiledCode;\n-import jdk.vm.ci.hotspot.HotSpotCompiledCode.Comment;\n-import jdk.vm.ci.hotspot.HotSpotCompiledNmethod;\n-import jdk.vm.ci.hotspot.HotSpotJVMCIRuntime;\n-import jdk.vm.ci.hotspot.HotSpotResolvedJavaMethod;\n-import jdk.vm.ci.hotspot.HotSpotVMEventListener;\n-import jdk.vm.ci.meta.Assumptions.Assumption;\n-import jdk.vm.ci.meta.ResolvedJavaMethod;\n-\n-import java.lang.reflect.Method;\n-\n-public class JvmciNotifyInstallEventTest extends JVMCIServiceLocator implements HotSpotVMEventListener {\n-    private static final String METHOD_NAME = \"testMethod\";\n-    private static volatile int gotInstallNotification = 0;\n-\n-    public static void main(String args[]) {\n-        new JvmciNotifyInstallEventTest().runTest();\n-    }\n-\n-    @Override\n-    public <S> S getProvider(Class<S> service) {\n-        if (service == HotSpotVMEventListener.class) {\n-            return service.cast(this);\n-        }\n-        return null;\n-    }\n-\n-    private void runTest() {\n-        if (gotInstallNotification != 0) {\n-            throw new Error(\"Got install notification before test actions\");\n-        }\n-        HotSpotCodeCacheProvider codeCache;\n-        try {\n-            codeCache = (HotSpotCodeCacheProvider) HotSpotJVMCIRuntime.runtime()\n-                    .getHostJVMCIBackend().getCodeCache();\n-        } catch (InternalError ie) {\n-            \/\/ passed\n-            return;\n-        }\n-        Method testMethod;\n-        try {\n-            testMethod = SimpleClass.class.getDeclaredMethod(METHOD_NAME);\n-        } catch (NoSuchMethodException e) {\n-            throw new Error(\"TEST BUG: Can't find \" + METHOD_NAME, e);\n-        }\n-        HotSpotResolvedJavaMethod method = CTVMUtilities\n-                .getResolvedMethod(SimpleClass.class, testMethod);\n-        int dataSectionAlignment = 8; \/\/ CodeBuffer::SECT_CONSTS code section alignment\n-        HotSpotCompiledCode compiledCode = new HotSpotCompiledNmethod(METHOD_NAME,\n-                new byte[0], 0, new Site[0], new Assumption[0],\n-                new ResolvedJavaMethod[]{method}, new Comment[0], new byte[0],\n-                dataSectionAlignment, new DataPatch[0], false, 0, null,\n-                method, 0, 1, 0L, false);\n-        codeCache.installCode(method, compiledCode, \/* installedCode = *\/ null,\n-                \/* speculationLog = *\/ null, \/* isDefault = *\/ false);\n-        Asserts.assertEQ(gotInstallNotification, 1,\n-                \"Got unexpected event count after 1st install attempt\");\n-        \/\/ since \"empty\" compilation result is ok, a second attempt should be ok\n-        codeCache.installCode(method, compiledCode, \/* installedCode = *\/ null,\n-                \/* speculationLog = *\/ null, \/* isDefault = *\/ false);\n-        Asserts.assertEQ(gotInstallNotification, 2,\n-                \"Got unexpected event count after 2nd install attempt\");\n-        \/\/ and an incorrect cases\n-        Utils.runAndCheckException(() -> {\n-            codeCache.installCode(method, null, null, null, true);\n-        }, NullPointerException.class);\n-        Asserts.assertEQ(gotInstallNotification, 2,\n-                \"Got unexpected event count after 3rd install attempt\");\n-        Utils.runAndCheckException(() -> {\n-            codeCache.installCode(null, null, null, null, true);\n-        }, NullPointerException.class);\n-        Asserts.assertEQ(gotInstallNotification, 2,\n-                \"Got unexpected event count after 4th install attempt\");\n-\n-        String stubToFail = System.getProperty(\"test.jvmci.forceRuntimeStubAllocFail\");\n-        if (Platform.isDebugBuild() && stubToFail != null) {\n-            HotSpotCompiledCode stub = new HotSpotCompiledCode(stubToFail,\n-                    \/* targetCode *\/ new byte[0],\n-                    \/* targetCodeSize *\/ 0,\n-                    \/* sites *\/ new Site[0],\n-                    \/* assumptions *\/ new Assumption[0],\n-                    \/* methods *\/ new ResolvedJavaMethod[0],\n-                    \/* comments *\/ new Comment[0],\n-                    \/* dataSection *\/ new byte[0],\n-                    dataSectionAlignment,\n-                    \/* dataSectionPatches *\/ new DataPatch[0],\n-                    \/* isImmutablePIC *\/ false,\n-                    \/* totalFrameSize *\/ 0,\n-                    \/* deoptRescueSlot *\/ null);\n-            try {\n-                codeCache.installCode(null, stub, null, null, true);\n-                throw new AssertionError(\"Didn't get expected \" + BailoutException.class.getName());\n-            } catch (BailoutException e) {\n-                Asserts.assertEQ(e.getMessage(), \"Error installing \" + stubToFail + \": code cache is full\");\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public void notifyInstall(HotSpotCodeCacheProvider hotSpotCodeCacheProvider,\n-            InstalledCode installedCode, CompiledCode compiledCode) {\n-        gotInstallNotification++;\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/events\/JvmciNotifyInstallEventTest.java","additions":0,"deletions":179,"binary":false,"changes":179,"status":"deleted"},{"patch":"@@ -38,0 +38,1 @@\n+import jdk.vm.ci.hotspot.HotSpotNmethod;\n@@ -98,1 +99,1 @@\n-    protected void test(TestCompiler compiler, Method method, Object... args) {\n+    protected HotSpotNmethod test(TestCompiler compiler, Method method, Object... args) {\n@@ -118,0 +119,1 @@\n+            return (HotSpotNmethod) installed;\n@@ -119,2 +121,1 @@\n-            e.printStackTrace();\n-            Assert.fail(e.toString());\n+            throw new AssertionError(e);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/CodeInstallationTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @requires vm.jvmci & !vm.graal.enabled & vm.compMode == \"Xmixed\"\n+ * @library \/ \/test\/lib\n+ * @modules jdk.internal.vm.ci\/jdk.vm.ci.hotspot\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.code\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.code.site\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.meta\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.runtime\n+ *\n+ * @run main\/othervm -XX:+UnlockExperimentalVMOptions\n+ *     -Xbootclasspath\/a:.\n+ *     -XX:+EnableJVMCI -XX:JVMCITraceLevel=1\n+ *     -Dtest.jvmci.forceRuntimeStubAllocFail=test_stub_that_fails_to_be_allocated\n+ *     jdk.vm.ci.code.test.RuntimeStubAllocFailTest\n+ *\/\n+\n+package jdk.vm.ci.code.test;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.Platform;\n+import jdk.vm.ci.code.BailoutException;\n+import jdk.vm.ci.code.site.DataPatch;\n+import jdk.vm.ci.code.site.Site;\n+import jdk.vm.ci.hotspot.HotSpotCodeCacheProvider;\n+import jdk.vm.ci.hotspot.HotSpotCompiledCode;\n+import jdk.vm.ci.hotspot.HotSpotCompiledCode.Comment;\n+import jdk.vm.ci.meta.Assumptions.Assumption;\n+import jdk.vm.ci.meta.ResolvedJavaMethod;\n+import jdk.vm.ci.runtime.JVMCI;\n+import jdk.vm.ci.runtime.JVMCIRuntime;\n+import jdk.vm.ci.runtime.JVMCIBackend;\n+\n+public class RuntimeStubAllocFailTest {\n+\n+    public static void main(String args[]) {\n+        JVMCIBackend backend = JVMCI.getRuntime().getHostJVMCIBackend();\n+        HotSpotCodeCacheProvider codeCache = (HotSpotCodeCacheProvider) backend.getCodeCache();\n+        int dataSectionAlignment = 8; \/\/ CodeBuffer::SECT_CONSTS code section alignment\n+        String stubToFail = System.getProperty(\"test.jvmci.forceRuntimeStubAllocFail\");\n+        if (Platform.isDebugBuild() && stubToFail != null) {\n+            HotSpotCompiledCode stub = new HotSpotCompiledCode(stubToFail,\n+                    \/* targetCode *\/ new byte[0],\n+                    \/* targetCodeSize *\/ 0,\n+                    \/* sites *\/ new Site[0],\n+                    \/* assumptions *\/ new Assumption[0],\n+                    \/* methods *\/ new ResolvedJavaMethod[0],\n+                    \/* comments *\/ new Comment[0],\n+                    \/* dataSection *\/ new byte[0],\n+                    dataSectionAlignment,\n+                    \/* dataSectionPatches *\/ new DataPatch[0],\n+                    \/* isImmutablePIC *\/ false,\n+                    \/* totalFrameSize *\/ 0,\n+                    \/* deoptRescueSlot *\/ null);\n+            try {\n+                codeCache.installCode(null, stub, null, null, true);\n+                throw new AssertionError(\"Didn't get expected \" + BailoutException.class.getName());\n+            } catch (BailoutException e) {\n+                Asserts.assertEQ(e.getMessage(), \"Error installing \" + stubToFail + \": code cache is full\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/RuntimeStubAllocFailTest.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -28,1 +28,1 @@\n- * @library \/\n+ * @library \/test\/lib \/\n@@ -42,0 +42,1 @@\n+import jdk.test.lib.Asserts;\n@@ -44,0 +45,1 @@\n+import jdk.vm.ci.hotspot.HotSpotNmethod;\n@@ -64,1 +66,18 @@\n-        test(SimpleCodeInstallationTest::compileAdd, getMethod(\"add\", int.class, int.class), 5, 7);\n+        HotSpotNmethod nmethod = test(SimpleCodeInstallationTest::compileAdd, getMethod(\"add\", int.class, int.class), 5, 7);\n+\n+        \/\/ Test code invalidation\n+        Asserts.assertTrue(nmethod.isValid(), \"code is not valid, i = \" + nmethod);\n+        Asserts.assertTrue(nmethod.isAlive(), \"code is not alive, i = \" + nmethod);\n+        Asserts.assertNotEquals(nmethod.getStart(), 0L);\n+\n+        \/\/ Make nmethod non-entrant but still alive\n+        nmethod.invalidate(false);\n+        Asserts.assertFalse(nmethod.isValid(), \"code is valid, i = \" + nmethod);\n+        Asserts.assertTrue(nmethod.isAlive(), \"code is not alive, i = \" + nmethod);\n+        Asserts.assertEquals(nmethod.getStart(), 0L);\n+\n+        \/\/ Deoptimize the nmethod and cut the link to it from the HotSpotNmethod\n+        nmethod.invalidate(true);\n+        Asserts.assertFalse(nmethod.isValid(), \"code is valid, i = \" + nmethod);\n+        Asserts.assertFalse(nmethod.isAlive(), \"code is alive, i = \" + nmethod);\n+        Asserts.assertEquals(nmethod.getStart(), 0L);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/SimpleCodeInstallationTest.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -246,0 +246,21 @@\n+    public class Bookmark implements AutoCloseable {\n+        private final int registerMark = nextRegister;\n+        private final int codePos = code.position();\n+        private final int dataPos = data.position();\n+\n+        @Override\n+        public void close() {\n+            nextRegister = registerMark;\n+            code.data.position(codePos);\n+            data.data.position(dataPos);\n+        }\n+    }\n+\n+    \/**\n+     * Enters a scope in which the current register, code and data emitting state\n+     * is restored upon leaving the scope.\n+     *\/\n+    public Bookmark bookmark() {\n+        return new Bookmark();\n+    }\n+\n@@ -299,0 +320,12 @@\n+    \/**\n+     * Emits the 32 bit constant `c` into the data section.\n+     *\/\n+    public DataSectionReference emitDataItem(int c) {\n+        DataSectionReference ref = new DataSectionReference();\n+        ref.setOffset(data.position());\n+\n+        recordDataPatchInCode(ref);\n+        data.emitInt(c);\n+        return ref;\n+    }\n+\n@@ -324,0 +357,44 @@\n+    \/**\n+     * @param n Number of bits that should be set to 1. Must be between 0 and 32 (inclusive).\n+     * @return A number with n bits set to 1.\n+     *\/\n+    public static int getNbitNumberInt(int n) {\n+        assert n >= 0 && n <= 32 : \"0 <= n <= 32; instead: \" + n;\n+        if (n < 32) {\n+            return (1 << n) - 1;\n+        } else {\n+            return 0xFFFFFFFF;\n+        }\n+    }\n+\n+    public static boolean isSignedNbit(int n, int value) {\n+        assert n > 0 && n < 32 : n;\n+        int min = -(1 << (n - 1));\n+        int max = (1 << (n - 1)) - 1;\n+        return value >= min && value <= max;\n+    }\n+\n+    public static boolean isUnsignedNbit(int n, int value) {\n+        assert n > 0 && n < 32 : n;\n+        return 32 - Integer.numberOfLeadingZeros(value) <= n;\n+    }\n+\n+    \/**\n+     * Determines if `x` is in the range of signed byte values.\n+     *\/\n+    public static boolean isByte(int x) {\n+        return (byte) x == x;\n+    }\n+\n+    \/**\n+     * Determines if `l` is in the range of signed int values.\n+     *\/\n+    public static boolean isInt(long l) {\n+        return (int) l == l;\n+    }\n+\n+    public static void check(boolean condition, String errorMessage, Object... args) {\n+        if (!condition) {\n+            throw new AssertionError(errorMessage.formatted(args));\n+        }\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/TestAssembler.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+        nmethodEntryBarrierConcurrentPatch = initNmethodEntryBarrierConcurrentPatch(arch);\n@@ -50,0 +51,2 @@\n+    public final int MARKID_FRAME_COMPLETE = getConstant(\"CodeInstaller::FRAME_COMPLETE\", Integer.class);\n+    public final int MARKID_ENTRY_BARRIER_PATCH = getConstant(\"CodeInstaller::ENTRY_BARRIER_PATCH\", Integer.class);\n@@ -56,0 +59,25 @@\n+\n+    private Boolean initNmethodEntryBarrierConcurrentPatch(Architecture arch) {\n+        Boolean patchConcurrent = null;\n+        if (arch instanceof AArch64 && nmethodEntryBarrier != 0) {\n+            Integer patchingType = getFieldValue(\"CompilerToVM::Data::BarrierSetAssembler_nmethod_patching_type\", Integer.class, \"int\");\n+            if (patchingType != null) {\n+                \/\/ There currently only 2 variants in use that differ only by the presence of a\n+                \/\/ dmb instruction\n+                int stw = getConstant(\"NMethodPatchingType::stw_instruction_and_data_patch\", Integer.class);\n+                int conc = getConstant(\"NMethodPatchingType::conc_data_patch\", Integer.class);\n+                if (patchingType == stw) {\n+                    patchConcurrent = false;\n+                } else if (patchingType == conc) {\n+                    patchConcurrent = true;\n+                } else {\n+                    throw new IllegalArgumentException(\"unsupported barrier sequence \" + patchingType);\n+                }\n+            }\n+        }\n+        return patchConcurrent;\n+    }\n+\n+    public final int threadDisarmedOffset = getFieldValue(\"CompilerToVM::Data::thread_disarmed_guard_value_offset\", Integer.class, \"int\");\n+    public final long nmethodEntryBarrier = getFieldValue(\"CompilerToVM::Data::nmethod_entry_barrier\", Long.class, \"address\");\n+    public final Boolean nmethodEntryBarrierConcurrentPatch;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/TestHotSpotVMConfig.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+    private static final Register scratchRegister2 = AArch64.rscratch2;\n@@ -51,0 +52,60 @@\n+    \/**\n+     * Condition Flags for branches. See C1.2.4\n+     *\/\n+    public enum ConditionFlag {\n+        \/\/ Integer | Floating-point meanings\n+        \/** Equal | Equal. *\/\n+        EQ(0x0),\n+\n+        \/** Not Equal | Not equal or unordered. *\/\n+        NE(0x1),\n+\n+        \/** Unsigned Higher or Same | Greater than, equal or unordered. *\/\n+        HS(0x2),\n+\n+        \/** Unsigned lower | less than. *\/\n+        LO(0x3),\n+\n+        \/** Minus (negative) | less than. *\/\n+        MI(0x4),\n+\n+        \/** Plus (positive or zero) | greater than, equal or unordered. *\/\n+        PL(0x5),\n+\n+        \/** Overflow set | unordered. *\/\n+        VS(0x6),\n+\n+        \/** Overflow clear | ordered. *\/\n+        VC(0x7),\n+\n+        \/** Unsigned higher | greater than or unordered. *\/\n+        HI(0x8),\n+\n+        \/** Unsigned lower or same | less than or equal. *\/\n+        LS(0x9),\n+\n+        \/** Signed greater than or equal | greater than or equal. *\/\n+        GE(0xA),\n+\n+        \/** Signed less than | less than or unordered. *\/\n+        LT(0xB),\n+\n+        \/** Signed greater than | greater than. *\/\n+        GT(0xC),\n+\n+        \/** Signed less than or equal | less than, equal or unordered. *\/\n+        LE(0xD),\n+\n+        \/** Always | always. *\/\n+        AL(0xE),\n+\n+        \/** Always | always (identical to AL, just to have valid 0b1111 encoding). *\/\n+        NV(0xF);\n+\n+        public final int encoding;\n+\n+        ConditionFlag(int encoding) {\n+            this.encoding = encoding;\n+        }\n+    }\n+\n@@ -218,0 +279,16 @@\n+    \/**\n+     * C6.2.25 Branch conditionally.\n+     *\n+     * @param condition may not be null.\n+     * @param imm21 Signed 21-bit offset, has to be 4-byte aligned.\n+     *\/\n+    protected void emitBranch(ConditionFlag condition, int imm21) {\n+        \/\/ B.cond\n+        check(isSignedNbit(21, imm21) && (imm21 & 0b11) == 0,\n+              \"0x%x must be a 21-bit signed number and 4-byte aligned\", imm21);\n+        int imm19 = (imm21 & getNbitNumberInt(21)) >> 2;\n+        code.emitInt(f(0b001010100, 31, 24)\n+                     | f(imm19, 23, 4)\n+                     | f(condition.encoding, 3, 0));\n+    }\n+\n@@ -264,0 +341,2 @@\n+        emitNMethodEntryBarrier();\n+\n@@ -267,0 +346,14 @@\n+    private void emitNMethodEntryBarrier() {\n+        recordMark(config.MARKID_ENTRY_BARRIER_PATCH);\n+        DataSectionReference ref = emitDataItem(0);\n+        emitLoadPointer(scratchRegister, AArch64Kind.DWORD, ref);\n+        if (config.nmethodEntryBarrierConcurrentPatch) {\n+            code.emitInt(0xd50339bf); \/\/ dmb ishld\n+        }\n+        Register thread = AArch64.r28;\n+        emitLoadPointer(scratchRegister2, AArch64Kind.DWORD, thread, config.threadDisarmedOffset);\n+        code.emitInt(0x6b09011f);             \/\/ cmp w8, w9\n+        emitBranch(ConditionFlag.EQ, 8);      \/\/ jump over slow path, runtime call\n+        emitCall(config.nmethodEntryBarrier);\n+    }\n+\n@@ -364,2 +457,5 @@\n-        Register ret = newRegister();\n-        emitLoadRegister(ret, AArch64Kind.QWORD, b, offset);\n+        return emitLoadPointer(newRegister(), AArch64Kind.QWORD, b, offset);\n+    }\n+\n+    public Register emitLoadPointer(Register ret, AArch64Kind kind, Register b, int offset) {\n+        emitLoadRegister(ret, kind, b, offset);\n@@ -380,0 +476,4 @@\n+        return emitLoadPointer(newRegister(), AArch64Kind.QWORD, ref);\n+    }\n+\n+    public Register emitLoadPointer(Register ret, AArch64Kind kind, DataSectionReference ref) {\n@@ -382,2 +482,1 @@\n-        Register ret = newRegister();\n-        emitLoadRegister(ret, AArch64Kind.QWORD, 0xdead);\n+        emitLoadRegister(ret, kind, 0xdead);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/aarch64\/AArch64TestAssembler.java","additions":103,"deletions":4,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -52,0 +52,34 @@\n+    \/**\n+     * The x86 condition codes used for conditional jumps\/moves.\n+     *\/\n+    public enum ConditionFlag {\n+        Zero(0x4, \"|zero|\"),\n+        NotZero(0x5, \"|nzero|\"),\n+        Equal(0x4, \"=\"),\n+        NotEqual(0x5, \"!=\"),\n+        Less(0xc, \"<\"),\n+        LessEqual(0xe, \"<=\"),\n+        Greater(0xf, \">\"),\n+        GreaterEqual(0xd, \">=\"),\n+        Below(0x2, \"|<|\"),\n+        BelowEqual(0x6, \"|<=|\"),\n+        Above(0x7, \"|>|\"),\n+        AboveEqual(0x3, \"|>=|\"),\n+        Overflow(0x0, \"|of|\"),\n+        NoOverflow(0x1, \"|nof|\"),\n+        CarrySet(0x2, \"|carry|\"),\n+        CarryClear(0x3, \"|ncarry|\"),\n+        Negative(0x8, \"|neg|\"),\n+        Positive(0x9, \"|pos|\"),\n+        Parity(0xa, \"|par|\"),\n+        NoParity(0xb, \"|npar|\");\n+\n+        public final int value;\n+        public final String operator;\n+\n+        ConditionFlag(int value, String operator) {\n+            this.value = value;\n+            this.operator = operator;\n+        }\n+    }\n+\n@@ -66,0 +100,56 @@\n+    \/**\n+     * Emit the expected patchable code sequence for the nmethod entry barrier. The int sized\n+     * payload must be naturally aligned so it can be patched atomically.\n+     *\/\n+    private void emitNMethodEntryCompare(int displacement) {\n+        \/\/ cmp dword ptr [r15 + <displacement>], 0x00000000\n+        \/\/ 41 81 7f <db> 00 00 00 00\n+        code.emitByte(0x41);\n+        code.emitByte(0x81);\n+        code.emitByte(0x7f);\n+        check(isByte(displacement), \"expected byte sized displacement: 0x%x\", displacement);\n+        code.emitByte(displacement & 0xff);\n+        check(code.position() % 4 == 0, \"must be aligned\");\n+        code.emitInt(0);\n+    }\n+\n+    \/**\n+     * Emits a long (i.e. 6 byte) format conditional branch.\n+     *\n+     * @param offset the offset of the branch target wrt the start of the branch instruction\n+     *\/\n+    private void emitBranch(ConditionFlag condition, int offset) {\n+        final int longSize = 6;\n+        int disp32 = offset - longSize;\n+\n+        \/\/ 0000 1111 1000 tttn #32-bit disp\n+        check(isInt(disp32), \"must be 32bit disp: %d\", disp32);\n+        code.emitByte(0x0F);\n+        code.emitByte(0x80 | condition.value);\n+        code.emitInt(disp32);\n+    }\n+\n+    public void emitAlign(int modulus) {\n+        while (code.position() % modulus != 0) {\n+            code.emitByte(0x90);\n+        }\n+    }\n+\n+    private void emitNMethodEntryBarrier() {\n+        \/\/ The following code sequence must be emitted in exactly this fashion as HotSpot\n+        \/\/ will check that the barrier is the expected code sequence.\n+        emitAlign(4);\n+        recordMark(config.MARKID_FRAME_COMPLETE);\n+        recordMark(config.MARKID_ENTRY_BARRIER_PATCH);\n+        emitNMethodEntryCompare(config.threadDisarmedOffset);\n+        int branchOffset;\n+        try (Bookmark bm = bookmark()) {\n+            int pos = code.position();\n+            emitBranch(ConditionFlag.Equal, 0);\n+            emitCall(config.nmethodEntryBarrier);\n+            branchOffset = code.position() - pos;\n+        }\n+        emitBranch(ConditionFlag.Equal, branchOffset);\n+        emitCall(config.nmethodEntryBarrier);\n+    }\n+\n@@ -74,0 +164,1 @@\n+        emitNMethodEntryBarrier();\n@@ -417,1 +508,1 @@\n-        Register target = emitLoadLong(addr);\n+        Register target = emitLoadLong(AMD64.rax, addr);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/amd64\/AMD64TestAssembler.java","additions":92,"deletions":1,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -1167,1 +1167,1 @@\n-    public static final String COUNTTRAILINGZEROS_VL = VECTOR_PREFIX + \"COUNTTRAILINGZEROS_VL\" + POSTFIX;\n+    public static final String COUNT_TRAILING_ZEROS_VL = VECTOR_PREFIX + \"COUNT_TRAILING_ZEROS_VL\" + POSTFIX;\n@@ -1169,1 +1169,1 @@\n-        vectorNode(COUNTTRAILINGZEROS_VL, \"CountTrailingZerosV\", TYPE_LONG);\n+        vectorNode(COUNT_TRAILING_ZEROS_VL, \"CountTrailingZerosV\", TYPE_LONG);\n@@ -1172,1 +1172,1 @@\n-    public static final String COUNTLEADINGZEROS_VL = VECTOR_PREFIX + \"COUNTLEADINGZEROS_VL\" + POSTFIX;\n+    public static final String COUNT_TRAILING_ZEROS_VI = VECTOR_PREFIX + \"COUNT_TRAILING_ZEROS_VI\" + POSTFIX;\n@@ -1174,1 +1174,11 @@\n-        vectorNode(COUNTLEADINGZEROS_VL, \"CountLeadingZerosV\", TYPE_LONG);\n+        vectorNode(COUNT_TRAILING_ZEROS_VI, \"CountTrailingZerosV\", TYPE_INT);\n+    }\n+\n+    public static final String COUNT_LEADING_ZEROS_VL = VECTOR_PREFIX + \"COUNT_LEADING_ZEROS_VL\" + POSTFIX;\n+    static {\n+        vectorNode(COUNT_LEADING_ZEROS_VL, \"CountLeadingZerosV\", TYPE_LONG);\n+    }\n+\n+    public static final String COUNT_LEADING_ZEROS_VI = VECTOR_PREFIX + \"COUNT_LEADING_ZEROS_VI\" + POSTFIX;\n+    static {\n+        vectorNode(COUNT_LEADING_ZEROS_VI, \"CountLeadingZerosV\", TYPE_INT);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -105,1 +105,3 @@\n-        \"sve\"\n+        \"sve\",\n+        \/\/ Riscv64\n+        \"zvbb\"\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/IREncodingPrinter.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+ *                               -XX:CompileCommand=memlimit,compiler.loopopts.TestDeepGraphVerifyIterativeGVN::*,0\n@@ -36,0 +37,2 @@\n+\/\/ Note; we disable the implicit memory limit of 1G in debug JVMs until JDK-8331295 is fixed\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestDeepGraphVerifyIterativeGVN.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPartialPeelingAtSingleInputRegion.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,0 +147,5 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"zvbb\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\",\"UsePopCountInstruction\", \"true\"},\n+        counts = {IRNode.ADD_REDUCTION_VI, \">= 1\",\n+                  IRNode.POPCOUNT_VL, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestGeneralizedReductions.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,0 +59,1 @@\n+import jdk.test.lib.Platform;\n@@ -61,0 +63,1 @@\n+import java.io.File;\n@@ -66,0 +69,1 @@\n+    \/\/ Method we don't specify; default memlimit should apply\n@@ -67,0 +71,1 @@\n+    \/\/ Method we explicitly limit to 4K limit\n@@ -68,0 +73,2 @@\n+    \/\/ Method for which we explicitly disable a limit on the command line.\n+    final static String METHOD3 = \"method3\";\n@@ -79,7 +86,0 @@\n-        test(METHOD1, METHOD2);\n-        test(METHOD2, METHOD1);\n-    }\n-\n-    private static void test(String include, String exclude) throws Exception {\n-\n-        \/\/ A method that is known to cost compilers a bit of memory to compile\n@@ -91,0 +91,1 @@\n+        options.add(\"-XX:-CreateCoredumpOnCrash\");\n@@ -92,8 +93,9 @@\n-        \/\/ We pass a very small size to guarantee the crash\n-        options.add(\"-XX:CompileCommand=MemStat,\" + getTestMethod(include) + \",print\");\n-        if (test_crash) {\n-            options.add(\"-XX:CompileCommand=MemLimit,\" + getTestMethod(include) + \",4k~crash\");\n-            options.add(\"-XX:-CreateCoredumpOnCrash\");\n-        } else {\n-            options.add(\"-XX:CompileCommand=MemLimit,\" + getTestMethod(include) + \",4k\");\n-        }\n+\n+        \/\/ We want a final report\n+        options.add(\"-XX:CompileCommand=MemStat,*.*,print\");\n+\n+        \/\/ We limit method 2 to a very small limit that is guaranteed to trigger\n+        options.add(\"-XX:CompileCommand=MemLimit,\" + getTestMethod(METHOD2) + \",4k\" + (test_crash ? \"~crash\" : \"\"));\n+\n+        \/\/ We disable any limit set on method 3\n+        options.add(\"-XX:CompileCommand=MemLimit,\" + getTestMethod(METHOD3) + \",0\");\n@@ -112,7 +114,3 @@\n-        String expectedNameIncl = getTestMethod(include)\n-                .replace('.', '\/')\n-                .replace(\"$\", \"\\\\$\");\n-        String expectedNameExcl = getTestMethod(exclude)\n-                .replace('.', '\/')\n-                .replace(\"$\", \"\\\\$\");\n-\n+        String method1regex = testMethodNameForRegex(getTestMethod(METHOD1));\n+        String method2regex = testMethodNameForRegex(getTestMethod(METHOD2));\n+        String method3regex = testMethodNameForRegex(getTestMethod(METHOD3));\n@@ -124,2 +122,21 @@\n-            oa.shouldMatch(\"# *fatal error: \" + ct + \" *\" + expectedNameIncl + \".*: Hit MemLimit .*limit: 4096.*\");\n-            oa.shouldNotMatch(\".*\" + expectedNameExcl + \".*\");\n+\n+            \/\/ method 2 should have hit its tiny limit\n+            oa.shouldMatch(\"# *fatal error: \" + ct + \" *\" + method2regex + \".*: Hit MemLimit .*limit: 4096.*\");\n+\n+            \/\/ none of the other ones should have hit a limit\n+            oa.shouldNotMatch(method1regex + \".*Hit MemLimit\");\n+            oa.shouldNotMatch(method3regex + \".*Hit MemLimit\");\n+\n+            \/\/ Make sure we get a non-zero-sized replay file (JDK-8331314)\n+            oa.shouldContain(\"# Compiler replay data is saved as:\");\n+            String replayfile = oa.firstMatch(\"# (\\\\S+replay_pid\\\\d+\\\\.log)\", 1);\n+            if (replayfile == null) {\n+                throw new RuntimeException(\"Found no replay file in output\");\n+            }\n+            File f = new File(replayfile);\n+            if (!f.exists()) {\n+                throw new RuntimeException(\"Replayfile \" + replayfile + \" not found\");\n+            }\n+            if (f.length() == 0) {\n+                throw new RuntimeException(\"Replayfile \" + replayfile + \" has size 0\");\n+            }\n@@ -127,4 +144,11 @@\n-            \/\/ Should see trace output when methods are compiled\n-            oa.shouldHaveExitValue(0)\n-                    .shouldMatch(\".*\" + expectedNameIncl + \".*\")\n-                    .shouldNotMatch(\".*\" + expectedNameExcl + \".*\");\n+            oa.shouldHaveExitValue(0);\n+\n+            \/\/ In debug builds we have an inbuilt MemLimit. It is very high, so we don't expect it to fire in this test.\n+            \/\/ But it will still show up in the final report.\n+            String implicitMemoryLimit = Platform.isDebugBuild() ? \"1024M\" : \"-\";\n+\n+            \/\/ With C2, we print number of nodes, with C1 we don't\n+            String numberNodesRegex = c2 ? \"\\\\d+\" : \"-\";\n+\n+            \/\/ method 2 should have hit its tiny limit\n+            oa.shouldMatch(ct + \" \" + method2regex + \".*: Hit MemLimit \\\\(limit: 4096 now: \\\\d+\\\\)\");\n@@ -132,2 +156,3 @@\n-            \/\/ Expect this log line\n-            oa.shouldMatch(\".*\" + expectedNameIncl + \".*Hit MemLimit.*\");\n+            \/\/ neither of the other ones should have hit a limit\n+            oa.shouldNotMatch(method1regex + \".*Hit MemLimit\");\n+            oa.shouldNotMatch(method3regex + \".*Hit MemLimit\");\n@@ -135,2 +160,15 @@\n-            \/\/ Expect final output to contain \"oom\"\n-            oa.shouldMatch(\".*oom.*\" + expectedNameIncl + \".*\");\n+            \/\/ Final report:\n+            \/\/ Method 1 should show up as \"ok\" and with the default limit, e.g.\n+            \/\/ total     NA        RA        result  #nodes  limit   time    type  #rc thread              method\n+            \/\/ 32728     0         32728     ok     -       1024M   0.045   c1    1   0x000000011b019c10  compiler\/print\/CompileCommandMemLimit$TestMain::method1(()J)\n+            oa.shouldMatch(\"\\\\d+ +\\\\d+ +\\\\d+ +ok +\" + numberNodesRegex + \" +\" + implicitMemoryLimit + \" +.* +\" + method1regex);\n+\n+            \/\/ Method 2 should show up as \"oom\" and with its tiny limit, e.g.\n+            \/\/ total     NA        RA        result  #nodes  limit   time    type  #rc thread              method\n+            \/\/ 32728     0         32728     oom     -       4096B   0.045   c1    1   0x000000011b019c10  compiler\/print\/CompileCommandMemLimit$TestMain::method1(()J)\n+            oa.shouldMatch(\"\\\\d+ +\\\\d+ +\\\\d+ +oom +\" + numberNodesRegex + \" +4096B +.* +\" + method2regex);\n+\n+            \/\/ Method 3 should show up as \"ok\", and with no limit, even in debug builds, e.g.\n+            \/\/ total     NA        RA        result  #nodes  limit   time    type  #rc thread              method\n+            \/\/ 32728     0         32728     ok     -       -        0.045   c1    1   0x000000011b019c10  compiler\/print\/CompileCommandMemLimit$TestMain::method1(()J)\n+            oa.shouldMatch(\"\\\\d+ +\\\\d+ +\\\\d+ +ok +\" + numberNodesRegex + \" +- +.* +\" + method3regex);\n@@ -149,0 +187,5 @@\n+    private static String testMethodNameForRegex(String m) {\n+        return m.replace('.', '\/')\n+                .replace(\"$\", \"\\\\$\");\n+    }\n+\n@@ -153,0 +196,1 @@\n+            method3();\n@@ -159,0 +203,1 @@\n+        static void method3() {}\n","filename":"test\/hotspot\/jtreg\/compiler\/print\/CompileCommandMemLimit.java","additions":78,"deletions":33,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +35,1 @@\n+import jdk.test.lib.Platform;\n@@ -71,3 +73,4 @@\n-        oa.shouldHaveExitValue(0)\n-          .shouldMatch(\".*\" + expectedNameIncl + \".*\")\n-          .shouldNotMatch(\".*\" + expectedNameExcl + \".*\");\n+        oa.shouldHaveExitValue(0).\n+                shouldMatch(\"Arena usage.*\" + expectedNameIncl + \".*\").\n+                shouldNotMatch(\"Arena usage.*\" + expectedNameExcl + \".*\");\n+\n@@ -77,5 +80,13 @@\n-        \/\/ total     NA        RA        result  #nodes  time    type  #rc thread              method\n-        \/\/ 211488    66440     77624     ok      13      0.057   c2    2   0x00007fb49428db70  compiler\/print\/CompileCommandPrintMemStat$TestMain::method1(()V)\n-        oa.shouldMatch(\"total.*method\");\n-        oa.shouldMatch(\"\\\\d+ +\\\\d+ +\\\\d+ +\\\\S+ +\\\\d+.*\" + expectedNameIncl + \".*\");\n-        oa.shouldNotMatch(\"\\\\d+ +\\\\d+ +\\\\d+ +\\\\S+ +\\\\d+.*\" + expectedNameExcl + \".*\");\n+        \/\/ total     NA        RA        result  #nodes  limit   time    type  #rc thread              method\n+        \/\/ 2149912   0         1986272   ok      -       -       0.101   c1    1   0x000000015180a600  jdk\/internal\/org\/objectweb\/asm\/Frame::execute((IILjdk\/internal\/org\/objectweb\/asm\/Symbol;Ljdk\/internal\/org\/objectweb\/asm\/SymbolTable;)V)        oa.shouldMatch(\"total.*method\");\n+        \/\/ or\n+        \/\/ 537784    98184     208536    ok      267     -       0.096   c2    1   0x0000000153019c00  jdk\/internal\/classfile\/impl\/BufWriterImpl::writeU1((I)V) 4521912   0         1986272   ok      -       -       0.101   c1    1   0x000000015180a600  jdk\/internal\/org\/objectweb\/asm\/Frame::execute((IILjdk\/internal\/org\/objectweb\/asm\/Symbol;Ljdk\/internal\/org\/objectweb\/asm\/SymbolTable;)V)        oa.shouldMatch(\"total.*method\");\n+        oa.shouldMatch(\"\\\\d+ +\\\\d+ +\\\\d+ +ok +(\\\\d+|-) +.*\" + expectedNameIncl + \".*\");\n+\n+        \/\/ In debug builds, we have a default memory limit enabled. That implies MemStat. Therefore we\n+        \/\/ expect to see all methods, not just the one we specified on the command line.\n+        if (Platform.isDebugBuild()) {\n+            oa.shouldMatch(\"\\\\d+ +\\\\d+ +\\\\d+ +ok +(\\\\d+|-) +.*\" + expectedNameExcl + \".*\");\n+        } else {\n+            oa.shouldNotMatch(\".*\" + expectedNameExcl + \".*\");\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/print\/CompileCommandPrintMemStat.java","additions":20,"deletions":9,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8322726\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.org.objectweb.asm\n+ *\n+ * @compile TestMHUnloaded.java TestMHUnloadedHelper.java\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller compiler.runtime.unloaded.TestMHUnloadedHelper\n+ * @run main\/othervm -Xbootclasspath\/a:.\n+ *                   -Xbatch -XX:-TieredCompilation -XX:CompileCommand=exclude,*::test\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:+PrintInlining\n+ *                      compiler.runtime.unloaded.TestMHUnloaded\n+ *\/\n+\n+package compiler.runtime.unloaded;\n+\n+import java.lang.invoke.MethodHandles;\n+\n+public class TestMHUnloaded {\n+    public static void main(String[] args) {\n+        TestMHUnloadedHelper.test(MethodHandles.lookup()); \/\/ launch test in bootstrap loader context\n+        TestMHUnloadedHelper.testConstant(MethodHandles.lookup()); \/\/ launch test in bootstrap loader context\n+        System.out.println(\"TEST PASSED\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/runtime\/unloaded\/TestMHUnloaded.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,103 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.runtime.unloaded;\n+\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+import java.util.function.BiPredicate;\n+import jdk.internal.org.objectweb.asm.ClassWriter;\n+\n+import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+\n+\/\/ Operates in bootstrap loader context.\n+public class TestMHUnloadedHelper {\n+    private static final MethodType METHOD_TYPE = MethodType.methodType(BiPredicate.class,\n+                                                                        BiPredicate.class, BiPredicate.class);\n+\n+    static byte[] generateClassFile(Class<?> caller) {\n+        var cw = new ClassWriter(ClassWriter.COMPUTE_MAXS);\n+        String name = caller.getName().replace('.', '\/');\n+        cw.visit(V19, ACC_PUBLIC | ACC_SUPER, name, null, \"java\/lang\/Object\", null);\n+        {\n+            var mv = cw.visitMethod(ACC_PUBLIC | ACC_STATIC, \"test\", METHOD_TYPE.toMethodDescriptorString(), null, null);\n+            mv.visitCode();\n+            mv.visitIntInsn(ALOAD, 1);\n+            mv.visitInsn(ARETURN);\n+            mv.visitMaxs(0, 0);\n+        }\n+        return cw.toByteArray();\n+    }\n+\n+    public static MethodHandle generateTest(MethodHandles.Lookup caller) {\n+        \/\/ Loaded in the caller context.\n+        byte[] classBytes = generateClassFile(caller.lookupClass());\n+        try {\n+            MethodHandles.Lookup lookup = caller.defineHiddenClass(classBytes, true);\n+            MethodHandle test = lookup.findStatic(lookup.lookupClass(), \"test\", METHOD_TYPE);\n+            test = MethodHandles.permuteArguments(test, test.type(), 1, 0); \/\/ mix arguments\n+            return test;\n+        } catch (Throwable e) {\n+            throw new AssertionError(e);\n+        }\n+    }\n+\n+    static BiPredicate[] ps = new BiPredicate[] { (a, b) -> false,\n+                                                  (a, b) -> true };\n+\n+    public static void test(MethodHandles.Lookup caller) {\n+        MethodHandle test = generateTest(caller);\n+\n+        for (int i = 0; i < 20_000; i++) {\n+            try {\n+                BiPredicate pr = (BiPredicate)test.invokeExact(ps[1], ps[0]);\n+                if (pr != ps[1]) {\n+                    throw new AssertionError(\"mismatch\");\n+                }\n+            } catch (Throwable e) {\n+                throw new AssertionError(e);\n+            }\n+        }\n+    }\n+\n+    public static void testConstant(MethodHandles.Lookup caller) {\n+        MethodHandle test = generateTest(caller);\n+\n+        \/\/ testMH() { return test(ps2, ps1); } where test(a, b) { return b; }.\n+        test = test.bindTo(ps[1]).bindTo(ps[0]); \/\/ make argument concrete types visible to the JIT-compiler\n+\n+        for (int i = 0; i < 20_000; i++) {\n+            try {\n+                BiPredicate pr = (BiPredicate)test.invokeExact();\n+                if (pr != ps[1]) {\n+                    throw new AssertionError(\"mismatch\");\n+                }\n+            } catch (Throwable e) {\n+                throw new AssertionError(e);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/runtime\/unloaded\/TestMHUnloadedHelper.java","additions":103,"deletions":0,"binary":false,"changes":103,"status":"added"},{"patch":"@@ -45,1 +45,2 @@\n- * @requires (os.simpleArch == \"x64\" & vm.cpu.features ~= \".*avx2.*\") | os.arch == \"aarch64\"\n+ * @requires (os.simpleArch == \"x64\" & vm.cpu.features ~= \".*avx2.*\") | os.arch == \"aarch64\" |\n+ *           (os.arch == \"riscv64\" & vm.cpu.features ~= \".*zvbb.*\")\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorReverseBytesTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,2 @@\n-*           (os.simpleArch == \"aarch64\" & vm.cpu.features ~= \".*sve.*\")\n+*           (os.simpleArch == \"aarch64\" & vm.cpu.features ~= \".*sve.*\") |\n+*           (os.simpleArch == \"riscv64\" & vm.cpu.features ~= \".*zvbb.*\")\n@@ -42,2 +43,4 @@\n-    private long[] input;\n-    private int[] output;\n+    private long[] inputLong;\n+    private int[] outputLong;\n+    private int[] inputInt;\n+    private int[] outputInt;\n@@ -52,2 +55,4 @@\n-        input = new long[LEN];\n-        output = new int[LEN];\n+        inputLong = new long[LEN];\n+        outputLong = new int[LEN];\n+        inputInt = new int[LEN];\n+        outputInt = new int[LEN];\n@@ -56,1 +61,2 @@\n-            input[i] = rng.nextLong();\n+            inputLong[i] = rng.nextLong();\n+            inputInt[i] = rng.nextInt();\n@@ -61,2 +67,2 @@\n-    @IR(counts = {IRNode.COUNTTRAILINGZEROS_VL, \"> 0\"})\n-    public void vectorizeNumberOfTrailingZeros() {\n+    @IR(counts = {IRNode.COUNT_TRAILING_ZEROS_VL, \"> 0\"})\n+    public void vectorizeNumberOfTrailingZerosLong() {\n@@ -64,1 +70,1 @@\n-            output[i] = Long.numberOfTrailingZeros(input[i]);\n+            outputLong[i] = Long.numberOfTrailingZeros(inputLong[i]);\n@@ -69,2 +75,2 @@\n-    @IR(counts = {IRNode.COUNTLEADINGZEROS_VL, \"> 0\"})\n-    public void vectorizeNumberOfLeadingZeros() {\n+    @IR(counts = {IRNode.COUNT_LEADING_ZEROS_VL, \"> 0\"})\n+    public void vectorizeNumberOfLeadingZerosLong() {\n@@ -72,1 +78,1 @@\n-            output[i] = Long.numberOfLeadingZeros(input[i]);\n+            outputLong[i] = Long.numberOfLeadingZeros(inputLong[i]);\n@@ -76,3 +82,3 @@\n-    @Run(test = {\"vectorizeNumberOfTrailingZeros\", \"vectorizeNumberOfLeadingZeros\"})\n-    public void checkResult() {\n-        vectorizeNumberOfTrailingZeros();\n+    @Run(test = {\"vectorizeNumberOfTrailingZerosLong\", \"vectorizeNumberOfLeadingZerosLong\"})\n+    public void checkResultLong() {\n+        vectorizeNumberOfTrailingZerosLong();\n@@ -80,1 +86,1 @@\n-            Asserts.assertEquals(output[i], Long.numberOfTrailingZeros(input[i]));\n+            Asserts.assertEquals(outputLong[i], Long.numberOfTrailingZeros(inputLong[i]));\n@@ -82,1 +88,1 @@\n-        vectorizeNumberOfLeadingZeros();\n+        vectorizeNumberOfLeadingZerosLong();\n@@ -84,1 +90,30 @@\n-            Asserts.assertEquals(output[i], Long.numberOfLeadingZeros(input[i]));\n+            Asserts.assertEquals(outputLong[i], Long.numberOfLeadingZeros(inputLong[i]));\n+        }\n+    }\n+\n+\n+    @Test\n+    @IR(counts = {IRNode.COUNT_TRAILING_ZEROS_VI, \"> 0\"})\n+    public void vectorizeNumberOfTrailingZerosInt() {\n+        for (int i = 0; i < LEN; ++i) {\n+            outputInt[i] = Integer.numberOfTrailingZeros(inputInt[i]);\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.COUNT_LEADING_ZEROS_VI, \"> 0\"})\n+    public void vectorizeNumberOfLeadingZerosInt() {\n+        for (int i = 0; i < LEN; ++i) {\n+            outputInt[i] = Integer.numberOfLeadingZeros(inputInt[i]);\n+        }\n+    }\n+\n+    @Run(test = {\"vectorizeNumberOfTrailingZerosInt\", \"vectorizeNumberOfLeadingZerosInt\"})\n+    public void checkResultInt() {\n+        vectorizeNumberOfTrailingZerosInt();\n+        for (int i = 0; i < LEN; ++i) {\n+            Asserts.assertEquals(outputInt[i], Integer.numberOfTrailingZeros(inputInt[i]));\n+        }\n+        vectorizeNumberOfLeadingZerosInt();\n+        for (int i = 0; i < LEN; ++i) {\n+            Asserts.assertEquals(outputInt[i], Integer.numberOfLeadingZeros(inputInt[i]));\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestNumberOfContinuousZeros.java","additions":53,"deletions":18,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,1 @@\n+        int err = 0;\n@@ -48,1 +49,1 @@\n-        test.checkResult();\n+        err += test.checkResult();\n@@ -54,1 +55,4 @@\n-        test.checkResult();\n+        err += test.checkResult();\n+        if (err > 0) {\n+            throw new RuntimeException(\"Error!\");\n+        }\n@@ -71,1 +75,2 @@\n-    public void checkResult() {\n+    public int checkResult() {\n+        int err = 0;\n@@ -75,1 +80,3 @@\n-                throw new RuntimeException(\"Invalid result: output[\" + i + \"] = \" + output[i] + \" != \" + expected);\n+                err++;\n+                System.err.println(\"Invalid result: output[\" + i + \"] = \" + output[i] + \" != \" + expected +\n+                                   \", input[\" + i + \"] == \" + Integer.toBinaryString(input[i]));\n@@ -78,0 +85,1 @@\n+        return err;\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestPopCountVector.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,2 @@\n-*           os.simpleArch == \"aarch64\"\n+*           os.simpleArch == \"aarch64\" |\n+*           (os.arch == \"riscv64\" & vm.cpu.features ~= \".*zvbb.*\")\n@@ -35,0 +36,1 @@\n+\n@@ -65,1 +67,3 @@\n-        checkResult();\n+        if (checkResult() > 0) {\n+            throw new RuntimeException(\"Error!\");\n+        }\n@@ -68,1 +72,2 @@\n-    public void checkResult() {\n+    public int checkResult() {\n+        int err = 0;\n@@ -72,1 +77,3 @@\n-                throw new RuntimeException(\"Invalid result: output[\" + i + \"] = \" + output[i] + \" != \" + expected);\n+                err++;\n+                System.err.println(\"Invalid result: output[\" + i + \"] = \" + output[i] + \" != \" + expected +\n+                                   \", input[\" + i + \"] == \" + Long.toBinaryString(input[i]));\n@@ -75,0 +82,1 @@\n+        return err;\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestPopCountVectorLong.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n- * @requires (os.simpleArch == \"x64\" & vm.cpu.features ~= \".*avx2.*\") | os.simpleArch == \"AArch64\"\n+ * @requires (os.simpleArch == \"x64\" & vm.cpu.features ~= \".*avx2.*\") | os.simpleArch == \"AArch64\" |\n+ *           (os.simpleArch == \"riscv64\" & vm.cpu.features ~= \".*zvbb.*\")\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestReverseBytes.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -230,0 +230,3 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"zvbb\", \"true\"},\n+        counts = {IRNode.REVERSE_BYTES_VS, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicCharOpTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -253,0 +253,3 @@\n+    @IR(applyIfPlatform = {\"riscv64\", \"true\"},\n+        applyIfCPUFeature = {\"zvbb\", \"true\"},\n+        counts = {IRNode.REVERSE_BYTES_VS, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicShortOpTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @key cgroups\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestContainerInfo.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -74,7 +74,7 @@\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize }, values, -1, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=\" + smallValue }, values, smallValue, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=\" + largeValue }, values, largeValue, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=0\" }, values, -1, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:InitialHeapSize=\" + smallValue }, values, -1, smallValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:InitialHeapSize=\" + largeValue }, values, -1, largeValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:InitialHeapSize=0\" }, values, -1, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize }, -1, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=\" + smallValue }, smallValue, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=\" + largeValue }, largeValue, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=0\" }, -1, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:InitialHeapSize=\" + smallValue }, -1, smallValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:InitialHeapSize=\" + largeValue }, -1, largeValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:InitialHeapSize=0\" }, -1, -1);\n@@ -82,3 +82,3 @@\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=\" + smallValue, \"-XX:InitialHeapSize=\" + smallValue }, values, smallValue, smallValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=\" + smallValue, \"-XX:InitialHeapSize=\" + largeValue }, values, smallValue, largeValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=\" + largeValue, \"-XX:InitialHeapSize=\" + largeValue }, values, largeValue, largeValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=\" + smallValue, \"-XX:InitialHeapSize=\" + smallValue }, smallValue, smallValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=\" + smallValue, \"-XX:InitialHeapSize=\" + largeValue }, smallValue, largeValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-XX:MinHeapSize=\" + largeValue, \"-XX:InitialHeapSize=\" + largeValue }, largeValue, largeValue);\n@@ -87,10 +87,10 @@\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\" }, values, -1, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=\" + smallValue }, values, smallValue, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=\" + largeValue }, values, largeValue, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=0\" }, values, -1, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:InitialHeapSize=\" + smallValue }, values, -1, smallValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:InitialHeapSize=\" + largeValue }, values, -1, largeValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:InitialHeapSize=0\" }, values, -1, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=\" + smallValue, \"-XX:InitialHeapSize=\" + smallValue }, values, smallValue, smallValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=\" + smallValue, \"-XX:InitialHeapSize=\" + largeValue }, values, smallValue, largeValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=\" + largeValue, \"-XX:InitialHeapSize=\" + largeValue }, values, largeValue, largeValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\" }, -1, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=\" + smallValue }, smallValue, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=\" + largeValue }, largeValue, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=0\" }, -1, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:InitialHeapSize=\" + smallValue }, -1, smallValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:InitialHeapSize=\" + largeValue }, -1, largeValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:InitialHeapSize=0\" }, -1, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=\" + smallValue, \"-XX:InitialHeapSize=\" + smallValue }, smallValue, smallValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=\" + smallValue, \"-XX:InitialHeapSize=\" + largeValue }, smallValue, largeValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms0\", \"-XX:MinHeapSize=\" + largeValue, \"-XX:InitialHeapSize=\" + largeValue }, largeValue, largeValue);\n@@ -99,6 +99,6 @@\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue }, values, -1, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue, \"-XX:MinHeapSize=\" + smallValue }, values, smallValue, smallValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue, \"-XX:MinHeapSize=0\" }, values, -1, smallValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue, \"-XX:InitialHeapSize=\" + smallValue }, values, smallValue, smallValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue, \"-XX:InitialHeapSize=\" + largeValue }, values, smallValue, largeValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue, \"-XX:InitialHeapSize=0\" }, values, smallValue, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue }, -1, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue, \"-XX:MinHeapSize=\" + smallValue }, smallValue, smallValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue, \"-XX:MinHeapSize=0\" }, -1, smallValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue, \"-XX:InitialHeapSize=\" + smallValue }, smallValue, smallValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue, \"-XX:InitialHeapSize=\" + largeValue }, smallValue, largeValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + smallValue, \"-XX:InitialHeapSize=0\" }, smallValue, -1);\n@@ -107,3 +107,3 @@\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + largeValue }, values, largeValue, largeValue);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + largeValue, \"-XX:InitialHeapSize=0\" }, values, largeValue, -1);\n-    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + largeValue, \"-XX:MinHeapSize=0\" }, values, -1, largeValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + largeValue }, largeValue, largeValue);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + largeValue, \"-XX:InitialHeapSize=0\" }, largeValue, -1);\n+    checkErgonomics(new String[] { gcflag, \"-Xmx\" + maxHeapSize, \"-Xms\" + largeValue, \"-XX:MinHeapSize=0\" }, -1, largeValue);\n@@ -247,1 +247,1 @@\n-  public static void checkErgonomics(String[] args, long[] newoldsize,\n+  public static void checkErgonomics(String[] args,\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxHeapSizeTools.java","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package gc.arguments;\n+\n+\/*\n+ * @test TestParallelGCErgo\n+ * @bug 8272364\n+ * @requires vm.gc.Parallel\n+ * @summary Verify ParallelGC minimum young and old ergonomics are setup correctly\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @library \/\n+ * @run driver gc.arguments.TestParallelGCErgo\n+ *\/\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.Platform;\n+\n+public class TestParallelGCErgo {\n+    private static final long HEAPWORD_SIZE = Platform.is64bit() ? 8 : 4;\n+    \/\/ Must be a power of 2\n+    private static final long GEN_ALIGNMENT = 64 * 1024 * HEAPWORD_SIZE;\n+\n+    private static final long MINIMUM_HEAP_SIZE = 256 * 1024 * 1024; \/\/ 256M\n+    private static final long EXPECTED_MIN_YOUNG = alignDown(MINIMUM_HEAP_SIZE \/ 3, GEN_ALIGNMENT);\n+    private static final long EXPECTED_MIN_OLD = MINIMUM_HEAP_SIZE - EXPECTED_MIN_YOUNG;  \/\/ heap size = young size + old size\n+\n+    \/\/ s has to be a power of 2\n+    private static long alignDown(long s, long align) {\n+        return s & (~(align-1));\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        ArrayList<String> flagList = new ArrayList<String>();\n+        flagList.add(\"-XX:+UseParallelGC\");\n+        flagList.add(\"-Xms256m\");\n+        flagList.add(\"-Xmx1g\");\n+        flagList.add(\"-Xlog:gc+heap=trace\");\n+        flagList.add(\"-version\");\n+\n+        OutputAnalyzer output = GCArguments.executeTestJava(flagList);\n+        output.shouldHaveExitValue(0);\n+\n+        String stdout = output.getStdout();\n+        long minimumHeap = getFlagValue(\"Minimum heap\", stdout);\n+        if (minimumHeap != MINIMUM_HEAP_SIZE) {\n+            throw new RuntimeException(\"Wrong value for minimum heap. Expected \" + MINIMUM_HEAP_SIZE + \" but got \" + minimumHeap);\n+        }\n+\n+        long minimumYoung = getFlagValue(\"Minimum young\", stdout);\n+        if (minimumYoung != EXPECTED_MIN_YOUNG) {\n+            throw new RuntimeException(\"Wrong value for minimum young. Expected \" + EXPECTED_MIN_YOUNG + \" but got \" + minimumYoung);\n+        }\n+\n+        long minimumOld = getFlagValue(\"Minimum old\", stdout);\n+        if (minimumOld != EXPECTED_MIN_OLD) {\n+            throw new RuntimeException(\"Wrong value for minimum old. Expected \" + EXPECTED_MIN_OLD + \" but got \" + minimumOld);\n+        }\n+    }\n+\n+    private static long getFlagValue(String flag, String where) {\n+        Matcher m = Pattern.compile(flag + \" \\\\d+\").matcher(where);\n+        if (!m.find()) {\n+            throw new RuntimeException(\"Could not find value for flag \" + flag + \" in output string\");\n+        }\n+        String match = m.group();\n+        return Long.parseLong(match.substring(match.lastIndexOf(\" \") + 1, match.length()));\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelGCErgo.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package gc.x;\n+\n+\/*\n+ * @test TestDeprecated\n+ * @requires vm.gc.ZSinglegen\n+ * @summary Test ZGenerational Deprecated\n+ * @library \/test\/lib\n+ * @run driver gc.x.TestDeprecated\n+ *\/\n+\n+import java.util.LinkedList;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class TestDeprecated {\n+    static class Test {\n+        public static void main(String[] args) throws Exception {}\n+    }\n+    public static void main(String[] args) throws Exception {\n+        ProcessTools.executeLimitedTestJava(\"-XX:+UseZGC\",\n+                                            \"-XX:-ZGenerational\",\n+                                            \"-Xlog:gc+init\",\n+                                            Test.class.getName())\n+                    .shouldContain(\"Option ZGenerational was deprecated\")\n+                    .shouldContain(\"Using deprecated non-generational mode\")\n+                    .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/x\/TestDeprecated.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package gc.z;\n+\n+\/*\n+ * @test TestDefault\n+ * @requires vm.gc.ZGenerational\n+ * @summary Test that ZGC Generational Mode is Default\n+ * @library \/test\/lib\n+ * @run driver gc.z.TestDefault\n+ *\/\n+\n+import java.util.LinkedList;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class TestDefault {\n+    static class Test {\n+        public static void main(String[] args) throws Exception {}\n+    }\n+    public static void main(String[] args) throws Exception {\n+        ProcessTools.executeLimitedTestJava(\"-XX:+UseZGC\",\n+                                            \"-Xlog:gc+init\",\n+                                            Test.class.getName())\n+                    .shouldNotContain(\"Option ZGenerational was deprecated\")\n+                    .shouldNotContain(\"Using deprecated non-generational mode\")\n+                    .shouldContain(\"GC Workers for Old Generation\")\n+                    .shouldContain(\"GC Workers for Young Generation\")\n+                    .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestDefault.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -64,0 +64,1 @@\n+            {\"ZGenerational\", \"false\"},\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMDeprecatedOptions.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-        runAndCheck(new Flags(\"-Xcomp\", \"-XX:CICrashAt=1\", \"--version\"));\n+        runAndCheck(new Flags(\"-Xcomp\", \"-XX:+CICountNative\", \"-XX:CICrashAt=1\", \"--version\"));\n@@ -115,1 +115,0 @@\n-        \/\/ Use -XX:-TieredCompilation as C1 is currently not aborting the VM (JDK-8264899).\n@@ -117,1 +116,1 @@\n-        runAndCheck(new Flags(\"-XX:-TieredCompilation\", \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:AbortVMOnException=MyException\",\n+        runAndCheck(new Flags(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:AbortVMOnException=MyException\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestDwarf.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Red Hat Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test the NMT scale parameter\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run main\/othervm -XX:NativeMemoryTracking=summary JcmdSummaryStatistics\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.JDKToolFinder;\n+\n+public class JcmdSummaryStatistics {\n+\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb = new ProcessBuilder();\n+        OutputAnalyzer output;\n+        \/\/ Grab my own PID\n+        String pid = Long.toString(jdk.test.lib.process.ProcessTools.getProcessId());\n+\n+        \/\/ Run 'jcmd <pid> VM.native_memory statistics=true'\n+        pb.command(new String[] { JDKToolFinder.getJDKTool(\"jcmd\"), pid, \"VM.native_memory\", \"statistics=true\"});\n+        output = new OutputAnalyzer(pb.start());\n+\n+        output.shouldContainMultiLinePattern(\n+                \"Native Memory Tracking Statistics:\",\n+                \"State: summary\",\n+                \"Preinit state:\",\n+                \"entries:\",\n+                \"pre-init mallocs:\",\n+                \"MallocLimit:\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/JcmdSummaryStatistics.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @bug 8216184\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LongClassListPath.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,6 @@\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.FileWriter;\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.cds.CDSTestUtils;\n+\n@@ -97,1 +103,1 @@\n-            \"TESTCASE A6: extraneous spaces, tab characters and trailing new line characters\",\n+            \"TESTCASE A6: extraneous spaces, tab characters, trailing new line characters, and trailing comment line\",\n@@ -104,1 +110,2 @@\n-                \"CustomLoadee2 id: 5 super: 1 interfaces: 3 4 source: \" + customJarPath      \/\/ preceding spaces\n+                \"CustomLoadee2 id: 5 super: 1 interfaces: 3 4 source: \" + customJarPath,      \/\/ preceding spaces\n+                \"#last line is a comment\"\n@@ -107,5 +114,6 @@\n-        int _max_allowed_line = 4096; \/\/ Must match ClassListParser::_max_allowed_line in C code.\n-        int _line_buf_extra = 10;     \/\/ Must match ClassListParser::_line_buf_extra in C code.\n-        StringBuffer sbuf = new StringBuffer();\n-        for (int i=0; i<_max_allowed_line+1; i++) {\n-          sbuf.append(\"x\");\n+        \/\/ Tests for corner cases in the C++ class LineReader, or invalid UTF8. These can't\n+        \/\/ be tested with dumpShouldPass\/dumpShouldFail as we need to prepare a special class\n+        \/\/ list file.\n+        StringBuilder sb = new StringBuilder();\n+        for (int i = 0; i < 6500; i++) {\n+            sb.append(\"X123456789\");\n@@ -114,6 +122,12 @@\n-        dumpShouldFail(\n-            \"TESTCASE A7: bad input - line too long\",\n-            appJar, classlist(\n-                sbuf.toString()\n-            ),\n-            \"input line too long (must be no longer than \" + _max_allowed_line + \" chars\");\n+        {\n+            System.out.println(\"TESTCASE A7.1: Long line (65000 chars)\");\n+            String longName = sb.toString(); \/\/ 65000 chars long\n+            String classList = \"LongLine.classlist\";\n+            try (FileWriter fw = new FileWriter(classList)) {\n+                fw.write(longName + \"\\n\");\n+            }\n+            CDSOptions opts = (new CDSOptions())\n+                .addPrefix(\"-XX:ExtraSharedClassListFile=\" + classList, \"-Xlog:cds\");\n+            CDSTestUtils.createArchiveAndCheck(opts)\n+                .shouldContain(\"Preload Warning: Cannot find \" + longName);\n+        }\n@@ -121,2 +135,13 @@\n-        for (int i=0; i<_line_buf_extra + 1000; i++) {\n-          sbuf.append(\"X\");\n+        {\n+            System.out.println(\"TESTCASE A7.2: Name Length > Symbol::max_length()\");\n+            String tooLongName = sb.toString() + sb.toString();\n+            String classList = \"TooLongLine.classlist\";\n+            try (FileWriter fw = new FileWriter(classList)) {\n+                fw.write(\"java\/lang\/Object\\n\");\n+                fw.write(tooLongName + \"\\n\");\n+            }\n+            CDSOptions opts = (new CDSOptions())\n+                .addPrefix(\"-XX:ExtraSharedClassListFile=\" + classList, \"-Xlog:cds\");\n+            CDSTestUtils.createArchive(opts)\n+                .shouldContain(classList + \":2 class name too long\") \/\/ test line number as well.\n+                .shouldHaveExitValue(1);\n@@ -125,6 +150,24 @@\n-        dumpShouldFail(\n-            \"TESTCASE A8: bad input - line too long: try to overflow C buffer\",\n-            appJar, classlist(\n-                sbuf.toString()\n-            ),\n-            \"input line too long (must be no longer than \" + _max_allowed_line + \" chars\");\n+        {\n+            System.out.println(\"TESTCASE A7.3: File doesn't end with newline\");\n+            String classList = \"NoTrailingNewLine.classlist\";\n+            try (FileWriter fw = new FileWriter(classList)) {\n+                fw.write(\"No\/Such\/ClassABCD\");\n+            }\n+            CDSOptions opts = (new CDSOptions())\n+                .addPrefix(\"-XX:ExtraSharedClassListFile=\" + classList, \"-Xlog:cds\");\n+            CDSTestUtils.createArchiveAndCheck(opts)\n+                .shouldContain(\"Preload Warning: Cannot find No\/Such\/ClassABCD\");\n+        }\n+        {\n+            System.out.println(\"TESTCASE A7.4: invalid UTF8 character\");\n+            String classList = \"BadUTF8.classlist\";\n+            try (FileOutputStream fos = new FileOutputStream(classList)) {\n+                byte chars[] = new byte[] { (byte)0xa0, (byte)0xa1, '\\n'};\n+                fos.write(chars);\n+            }\n+            CDSOptions opts = (new CDSOptions())\n+                .addPrefix(\"-XX:ExtraSharedClassListFile=\" + classList, \"-Xlog:cds\");\n+            CDSTestUtils.createArchive(opts)\n+                .shouldContain(classList + \":1 class name is not valid UTF8\") \/\/ test line number as well.\n+                .shouldHaveExitValue(1);\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/ClassListFormatA.java","additions":65,"deletions":22,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,3 @@\n+\/**\n+ * This is launched from TestLambdaInvokers.\n+ *\/\n@@ -47,0 +50,4 @@\n+\n+        mh = MethodHandles.dropArguments(MethodHandles.zero(Object.class), 0, Object.class, int.class);\n+        MethodHandle inv = MethodHandles.invoker(mh.type());\n+        invoke(inv, mh, args, 3);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/CDSLambdaInvoker.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @bug 8280767\n+ * @bug 8280767 8327499\n@@ -62,0 +62,1 @@\n+             \"-Djava.lang.invoke.MethodHandle.TRACE_RESOLVE=true\",\n@@ -72,0 +73,4 @@\n+\n+                 \/\/ java.lang.invoke.Invokers$Holder has invoker(Object,Object,Object,int)Object available\n+                 \/\/ from the archives\n+                 output.shouldContain(\"[LF_RESOLVE] java.lang.invoke.Invokers$Holder invoker L3I_L (success)\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/TestLambdaInvokers.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-                    .returnInstruction(TypeKind.BooleanType)\n+                    .return_(TypeKind.BooleanType)\n@@ -338,1 +338,1 @@\n-                    .returnInstruction(TypeKind.BooleanType);\n+                    .return_(TypeKind.BooleanType);\n@@ -411,1 +411,1 @@\n-                    .returnInstruction(TypeKind.BooleanType)\n+                    .return_(TypeKind.BooleanType)\n@@ -414,1 +414,1 @@\n-                    .returnInstruction(TypeKind.BooleanType);\n+                    .return_(TypeKind.BooleanType);\n@@ -494,1 +494,1 @@\n-                    .returnInstruction(TypeKind.BooleanType)\n+                    .return_(TypeKind.BooleanType)\n@@ -497,1 +497,1 @@\n-                    .returnInstruction(TypeKind.BooleanType);\n+                    .return_(TypeKind.BooleanType);\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypesTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import org.testng.SkipException;\n@@ -174,0 +175,3 @@\n+        if (Thread.currentThread().isVirtual()) {\n+            throw new SkipException(\"skipping test since current thread is virtual thread\");\n+        }\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/thread\/PrintTest.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+            setDaemon(false);\n","filename":"test\/hotspot\/jtreg\/serviceability\/tmtools\/jstack\/DaemonThreadTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,3 +36,0 @@\n-sun\/tools\/jcmd\/JcmdOutputEncodingTest.java 8308033 generic-all\n-sun\/tools\/jstack\/BasicJStackTest.java 8308033 generic-all\n-\n","filename":"test\/jdk\/ProblemList-Virtual.txt","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8144100\n+ * @summary checking token sent by client should be done in case-insensitive manner\n+ * @run main BasicAuthToken\n+ *\/\n+\n+import java.io.BufferedReader;\n+import java.io.BufferedWriter;\n+import java.io.InputStreamReader;\n+import java.io.OutputStreamWriter;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.Socket;\n+import java.util.Base64;\n+import com.sun.net.httpserver.Authenticator;\n+import com.sun.net.httpserver.BasicAuthenticator;\n+import com.sun.net.httpserver.HttpServer;\n+\n+public class BasicAuthToken {\n+    private static final String CRLF = \"\\r\\n\";\n+    private static final String someContext = \"\/test\";\n+\n+    public static void main(String[] args) throws Exception {\n+        HttpServer server = server();\n+        try {\n+            client(server.getAddress().getPort());\n+        } finally {\n+            server.stop(0);\n+        }\n+    }\n+\n+    static HttpServer server() throws Exception {\n+        String realm = \"someRealm\";\n+        ServerAuthenticator authenticator = new ServerAuthenticator(realm);\n+        HttpServer server = HttpServer.create(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0), 0);\n+        server.createContext(someContext, exchange -> {\n+            if (authenticator.authenticate(exchange) instanceof Authenticator.Failure) {\n+                exchange.sendResponseHeaders(401, -1);\n+                exchange.close();\n+                return;\n+            }\n+            exchange.sendResponseHeaders(200, -1);\n+            exchange.close();\n+        }).setAuthenticator(authenticator);\n+        server.start();\n+        return server;\n+    }\n+\n+    static void client(int port) throws Exception {\n+        try (Socket socket = new Socket(InetAddress.getLoopbackAddress(), port)) {\n+            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));\n+            BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n+            String credentials = \"username:password\";\n+            String encodedCredentials = Base64.getEncoder().encodeToString(credentials.getBytes());\n+            writer.write(\"GET \" + someContext + \" HTTP\/1.1\" + CRLF);\n+            writer.write(\"Host: localhost:\" + port + CRLF);\n+            writer.write(\"User-Agent: Java\/\" + System.getProperty(\"java.version\") + CRLF);\n+            writer.write(\"Authorization: BAsIc \" + encodedCredentials + CRLF);\n+            writer.write(CRLF);\n+            writer.flush();\n+\n+            System.err.println(\"Server response\");\n+            String statusLine = reader.readLine();\n+            System.err.println(statusLine);\n+\n+            if (!statusLine.startsWith(\"HTTP\/1.1 200\")) {\n+                throw new RuntimeException(\"unexpected status line: \" + statusLine);\n+            }\n+            if (!ServerAuthenticator.wasChecked()) {\n+                throw new RuntimeException(\"Authenticator wasn't invoked\");\n+            }\n+        }\n+    }\n+\n+\n+    static class ServerAuthenticator extends BasicAuthenticator {\n+        private static volatile boolean invoked = false;\n+\n+        ServerAuthenticator(String realm) {\n+            super(realm);\n+        }\n+\n+        public static boolean wasChecked() {\n+            return invoked;\n+        }\n+\n+        @Override\n+        public boolean checkCredentials(String username, String password) {\n+            String validUsername = \"username\", validPassword = \"password\";\n+            invoked = true;\n+            return username.equals(validUsername) && password.equals(validPassword);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/BasicAuthToken.java","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"},{"patch":"@@ -53,0 +53,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -71,0 +72,1 @@\n+ * @modules java.base\/jdk.internal.util\n@@ -77,0 +79,1 @@\n+    private static final boolean IS_WINDOWS = OperatingSystem.isWindows();\n@@ -223,1 +226,1 @@\n-                        Throwable cause = ioe;\n+                        Throwable cause = ioe.getCause();\n@@ -225,1 +228,3 @@\n-                            \/\/ either of SocketException or SSLHandshakeException are OK\n+                            \/\/ either of SocketException or SSLHandshakeException are OK.\n+                            \/\/ additionally on Windows we accept even IOException\n+                            \/\/ (caused by WSAECONNABORTED)\n@@ -238,0 +243,6 @@\n+                            } else if (IS_WINDOWS && cause instanceof IOException winIOE) {\n+                                \/\/ on Windows we sometimes receive this exception, which is\n+                                \/\/ acceptable\n+                                System.out.println(\"(windows) received the expected exception: \"\n+                                        + winIOE);\n+                                break;\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/HttpsParametersClientAuthTest.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,145 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 6968351\n+ * @summary  tcp no delay not required for small payloads\n+ * @requires vm.compMode != \"Xcomp\"\n+ * @library \/test\/lib\n+ * @run main\/othervm\/timeout=5 -Dsun.net.httpserver.nodelay=false  TcpNoDelayNotRequired\n+ *\/\n+\n+import com.sun.net.httpserver.Headers;\n+import com.sun.net.httpserver.HttpContext;\n+import com.sun.net.httpserver.HttpExchange;\n+import com.sun.net.httpserver.HttpHandler;\n+import com.sun.net.httpserver.HttpServer;\n+\n+import com.sun.net.httpserver.HttpsConfigurator;\n+import com.sun.net.httpserver.HttpsServer;\n+import jdk.test.lib.net.SimpleSSLContext;\n+import jdk.test.lib.net.URIBuilder;\n+\n+import javax.net.ssl.SSLContext;\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.http.HttpClient;\n+import java.net.http.HttpRequest;\n+import java.net.http.HttpResponse;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import java.util.logging.SimpleFormatter;\n+import java.util.logging.StreamHandler;\n+\n+public class TcpNoDelayNotRequired {\n+\n+    public static final Logger LOGGER = Logger.getLogger(\"sun.net.www.protocol.http\");\n+\n+    public static void main (String[] args) throws Exception {\n+\n+        java.util.logging.Handler outHandler = new StreamHandler(System.out,\n+                new SimpleFormatter());\n+        outHandler.setLevel(Level.FINEST);\n+        LOGGER.setLevel(Level.FINEST);\n+        LOGGER.addHandler(outHandler);\n+\n+        InetAddress loopback = InetAddress.getLoopbackAddress();\n+        InetSocketAddress addr = new InetSocketAddress (loopback, 0);\n+\n+        SSLContext sslContext = new SimpleSSLContext().get();\n+\n+        HttpServer httpServer = HttpServer.create (addr, 0);\n+        testHttpServer(\"http\",httpServer,sslContext);\n+\n+        HttpsServer httpsServer = HttpsServer.create (addr, 0);\n+        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n+\n+        testHttpServer(\"https\",httpsServer,sslContext);\n+    }\n+\n+    private static void testHttpServer(String scheme,HttpServer server,SSLContext sslContext) throws Exception {\n+        HttpContext ctx = server.createContext (\"\/test\", new Handler());\n+        HttpContext ctx2 = server.createContext (\"\/chunked\", new ChunkedHandler());\n+        ExecutorService executor = Executors.newCachedThreadPool();\n+        server.setExecutor (executor);\n+        server.start ();\n+        try {\n+            try (HttpClient client = HttpClient.newBuilder().sslContext(sslContext).build()) {\n+                long start = System.currentTimeMillis();\n+                for (int i = 0; i < 1000; i++) {\n+                    var uri = URIBuilder.newBuilder().scheme(scheme).loopback().port(server.getAddress().getPort()).path(\"\/test\").build();\n+                    var response = client.send(HttpRequest.newBuilder(uri).build(), HttpResponse.BodyHandlers.ofString());\n+                    if (!response.body().equals(\"hello\"))\n+                        throw new IllegalStateException(\"incorrect body \" + response.body());\n+                }\n+                for (int i = 0; i < 1000; i++) {\n+                    var uri = URIBuilder.newBuilder().scheme(scheme).loopback().port(server.getAddress().getPort()).path(\"\/chunked\").build();\n+                    var response = client.send(HttpRequest.newBuilder(uri).build(), HttpResponse.BodyHandlers.ofString());\n+                    if (!response.body().equals(\"hello\"))\n+                        throw new IllegalStateException(\"incorrect body \" + response.body());\n+                }\n+                long time = System.currentTimeMillis() - start;\n+                System.out.println(\"time \" + time);\n+            }\n+        } finally {\n+            server.stop(0);\n+        }\n+        executor.shutdown();\n+    }\n+\n+    static class Handler implements HttpHandler {\n+        public void handle (HttpExchange t)\n+                throws IOException\n+        {\n+            Headers rmap = t.getResponseHeaders();\n+            try (var is = t.getRequestBody()) {\n+                is.readAllBytes();\n+            }\n+            rmap.add(\"content-type\",\"text\/plain\");\n+            t.sendResponseHeaders(200,5);\n+            try (var os = t.getResponseBody()) {\n+                os.write(\"hello\".getBytes(StandardCharsets.ISO_8859_1));\n+            }\n+        }\n+    }\n+    static class ChunkedHandler implements HttpHandler {\n+        public void handle (HttpExchange t)\n+                throws IOException\n+        {\n+            Headers rmap = t.getResponseHeaders();\n+            try (var is = t.getRequestBody()) {\n+                is.readAllBytes();\n+            }\n+            rmap.add(\"content-type\",\"text\/plain\");\n+            t.sendResponseHeaders(200,0);\n+            try (var os = t.getResponseBody()) {\n+                os.write(\"hello\".getBytes(StandardCharsets.ISO_8859_1));\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/TcpNoDelayNotRequired.java","additions":145,"deletions":0,"binary":false,"changes":145,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,0 +79,2 @@\n+    static final String EXPECTED_LAST_MODIFIED_OF_FAVICON = \"Mon, 23 May 1995 11:11:11 GMT\";\n+\n@@ -145,0 +147,59 @@\n+    @Test\n+    public void testFavIconGET() throws Exception {\n+        var root = Files.createDirectory(TEST_DIR.resolve(\"testFavIconGET\"));\n+\n+        var server = SimpleFileServer.createFileServer(LOOPBACK_ADDR, root, OutputLevel.VERBOSE);\n+        server.start();\n+        try {\n+            \/\/ expect built-in icon\n+            var client = HttpClient.newBuilder().proxy(NO_PROXY).build();\n+            var request = HttpRequest.newBuilder(uri(server, \"favicon.ico\")).build();\n+            var response = client.send(request, BodyHandlers.ofString());\n+            assertEquals(response.statusCode(), 200);\n+            assertEquals(response.headers().firstValue(\"content-type\").get(), \"image\/x-icon\");\n+            assertEquals(response.headers().firstValue(\"last-modified\").get(), EXPECTED_LAST_MODIFIED_OF_FAVICON);\n+\n+            \/\/ expect custom (and broken) icon\n+            var file = Files.writeString(root.resolve(\"favicon.ico\"), \"broken icon\", CREATE);\n+            try {\n+                var lastModified = getLastModified(file);\n+                var expectedLength = Long.toString(Files.size(file));\n+                response = client.send(request, BodyHandlers.ofString());\n+                assertEquals(response.statusCode(), 200);\n+                assertEquals(response.headers().firstValue(\"content-type\").get(), \"application\/octet-stream\");\n+                assertEquals(response.headers().firstValue(\"content-length\").get(), expectedLength);\n+                assertEquals(response.headers().firstValue(\"last-modified\").get(), lastModified);\n+            } finally {\n+                Files.delete(file);\n+            }\n+\n+            \/\/ expect built-in icon\n+            response = client.send(request, BodyHandlers.ofString());\n+            assertEquals(response.statusCode(), 200);\n+            assertEquals(response.headers().firstValue(\"content-type\").get(), \"image\/x-icon\");\n+            assertEquals(response.headers().firstValue(\"last-modified\").get(), EXPECTED_LAST_MODIFIED_OF_FAVICON);\n+        } finally {\n+            server.stop(0);\n+        }\n+    }\n+\n+    @Test\n+    public void testFavIconHEAD() throws Exception {\n+        var root = Files.createDirectory(TEST_DIR.resolve(\"testFavIconHEAD\"));\n+\n+        var server = SimpleFileServer.createFileServer(LOOPBACK_ADDR, root, OutputLevel.VERBOSE);\n+        server.start();\n+        try {\n+            var client = HttpClient.newBuilder().proxy(NO_PROXY).build();\n+            var request = HttpRequest.newBuilder(uri(server, \"favicon.ico\"))\n+                    .method(\"HEAD\", BodyPublishers.noBody()).build();\n+            var response = client.send(request, BodyHandlers.ofString());\n+            assertEquals(response.statusCode(), 200);\n+            assertEquals(response.headers().firstValue(\"content-type\").get(), \"image\/x-icon\");\n+            assertEquals(response.headers().firstValue(\"last-modified\").get(), EXPECTED_LAST_MODIFIED_OF_FAVICON);\n+            assertEquals(response.body(), \"\");\n+        } finally {\n+            server.stop(0);\n+        }\n+    }\n+\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/SimpleFileServerTest.java","additions":62,"deletions":1,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run testng\/othervm\/timeout=180 -Dsun.net.httpserver.nodelay=true StressDirListings\n+ * @run testng\/othervm\/timeout=180 StressDirListings\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/StressDirListings.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Predicate;\n+\n+import jdk.internal.util.OperatingSystem;\n+import jdk.test.lib.net.IPSupport;\n+import jdk.test.lib.process.ProcessTools;\n+import jtreg.SkippedException;\n+\n+\/*\n+ * @test\n+ * @bug 8332020\n+ * @summary verifies that when jwebserver is launched with a IPv6 bind address\n+ *          then the URL printed contains the correct host literal\n+ * @modules jdk.httpserver java.base\/jdk.internal.util\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.IPSupport\n+ * @run driver IPv6BoundHost\n+ *\/\n+public class IPv6BoundHost {\n+\n+    private static final Path JDK_BIN_DIR = Path.of(System.getProperty(\"java.home\")).resolve(\"bin\");\n+    private static final Path JWEBSERVER_BINARY = OperatingSystem.isWindows()\n+            ? JDK_BIN_DIR.resolve(\"jwebserver.exe\") : JDK_BIN_DIR.resolve(\"jwebserver\");\n+\n+    public static void main(final String[] args) throws Exception {\n+        IPSupport.printPlatformSupport(System.err); \/\/ for debug purposes\n+        if (!IPSupport.hasIPv6()) {\n+            throw new SkippedException(\"Skipping test - IPv6 is not supported\");\n+        }\n+        final String output = launchJwebserverAndExit(List.of(\"-b\", \"::1\", \"-p\", \"0\"));\n+        if (output.contains(\"URL http:\/\/[::1]:\")\n+                || output.contains(\"URL http:\/\/[0:0:0:0:0:0:0:1]:\")) {\n+            \/\/ found expected content\n+            System.out.println(\"found expected URL in jwebserver output\");\n+        } else {\n+            throw new AssertionError(\"missing IPv6 address in jwebserver process output\");\n+        }\n+    }\n+\n+    private static String launchJwebserverAndExit(final List<String> args) throws Exception {\n+        final Predicate<String> waitForLine = (s) -> s.startsWith(\"URL http:\/\/\");\n+        final StringBuilder sb = new StringBuilder();  \/\/ stdout & stderr\n+        final List<String> cmd = new ArrayList<>();\n+        cmd.add(JWEBSERVER_BINARY.toString());\n+        cmd.addAll(args);\n+        \/\/ start the process and await the waitForLine before returning\n+        final Process p = ProcessTools.startProcess(\"8332020-test\", new ProcessBuilder(cmd),\n+                line -> sb.append(line).append(\"\\n\"),\n+                waitForLine,\n+                30,  \/\/ suitably high default timeout, not expected to timeout\n+                TimeUnit.SECONDS);\n+        System.out.println(sb.toString()); \/\/ print the process' stdout\/stderr\n+        \/\/ the process has started and it is confirmed that the process output has the line\n+        \/\/ we were waiting for. now kill the process.\n+        p.destroy();\n+        final int exitCode = p.waitFor();\n+        if (!isNormalExitCode(exitCode)) {\n+            throw new AssertionError(\"jwebserver exited with unexpected exit code: \" + exitCode);\n+        }\n+        return sb.toString();\n+    }\n+\n+    private static boolean isNormalExitCode(final int exitCode) {\n+        final int SIGTERM = 15;\n+        if (OperatingSystem.isWindows()) {\n+            return exitCode == 1; \/\/ we expect exit code == 1 on Windows for Process.destroy()\n+        } else {\n+            \/\/ signal terminated exit code on Unix is 128 + signal value\n+            return exitCode == (128 + SIGTERM);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/jwebserver\/IPv6BoundHost.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,2 @@\n- * @library ..\/..\/regtesthelpers\n- * @build   Util\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build   Util jdk.test.lib.Platform\n@@ -44,2 +44,14 @@\n-import java.awt.*;\n-import java.awt.event.*;\n+import java.awt.AWTEvent;\n+import java.awt.AWTException;\n+import java.awt.Button;\n+import java.awt.Component;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.event.AWTEventListener;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.WindowEvent;\n@@ -49,1 +61,5 @@\n-import javax.swing.*;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+import jdk.test.lib.Platform;\n@@ -75,1 +91,1 @@\n-    public static void main(String[] args) {\n+    public static void main(String[] args) throws Exception {\n@@ -84,0 +100,1 @@\n+            robot.setAutoDelay(50);\n@@ -93,1 +110,1 @@\n-        f0.setBounds(0, 100, 400, 200);\n+        f0.setBounds(100, 100, 400, 200);\n@@ -96,1 +113,1 @@\n-        f1.setBounds(0, 400, 400, 200);\n+        f1.setBounds(100, 400, 400, 200);\n@@ -99,1 +116,1 @@\n-        f2.setBounds(0, 400, 400, 200);\n+        f2.setBounds(100, 400, 400, 200);\n@@ -118,0 +135,1 @@\n+        robot.delay(500);\n@@ -155,1 +173,1 @@\n-    public static void test(Component compToClick) {\n+    public static void test(Component compToClick) throws Exception {\n@@ -159,1 +177,0 @@\n-        robot.delay(50);\n@@ -161,1 +178,1 @@\n-        robot.delay(50);\n+        robot.waitForIdle();\n@@ -164,1 +181,0 @@\n-        robot.delay(50);\n@@ -166,1 +182,1 @@\n-        robot.delay(50);\n+        robot.waitForIdle();\n@@ -169,1 +185,0 @@\n-        robot.delay(50);\n@@ -171,0 +186,1 @@\n+        robot.waitForIdle();\n@@ -172,1 +188,0 @@\n-        robot.delay(50);\n@@ -175,2 +190,6 @@\n-        robot.delay(50);\n-        Util.clickOnTitle(f0, robot);\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(f0::toFront);\n+\n+        if (!Platform.isOnWayland()) {\n+            Util.clickOnTitle(f0, robot);\n+        }\n","filename":"test\/jdk\/java\/awt\/Focus\/6981400\/Test1.java","additions":38,"deletions":19,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,2 @@\n-  @library   ..\/..\/regtesthelpers\n-  @build     Util\n+  @library \/java\/awt\/regtesthelpers \/test\/lib\n+  @build   Util jdk.test.lib.Platform\n@@ -34,2 +34,16 @@\n-import java.awt.*;\n-import java.awt.event.*;\n+import java.awt.AWTEvent;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.KeyboardFocusManager;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.Window;\n+import java.awt.event.AWTEventListener;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.WindowEvent;\n+\n+import jdk.test.lib.Platform;\n@@ -47,1 +61,1 @@\n-    public static void main(String[] args) {\n+    public static void main(String[] args) throws Exception {\n@@ -71,1 +85,1 @@\n-    public void start() {\n+    public void start() throws Exception {\n@@ -102,1 +116,6 @@\n-        Util.clickOnTitle(owner, robot);\n+        EventQueue.invokeAndWait(owner::toFront);\n+\n+        if (!Platform.isOnWayland()) {\n+            Util.clickOnTitle(owner, robot);\n+        }\n+\n@@ -120,0 +139,1 @@\n+        robot.delay(500);\n@@ -122,1 +142,1 @@\n-    void clickOnCheckFocus(Component c) {\n+    void clickOnCheckFocus(Component c) throws Exception {\n@@ -124,1 +144,4 @@\n-            Util.clickOnTitle((Frame)c, robot);\n+            EventQueue.invokeAndWait(() -> ((Frame) c).toFront());\n+            if (!Platform.isOnWayland()) {\n+                Util.clickOnTitle((Frame) c, robot);\n+            }\n","filename":"test\/jdk\/java\/awt\/Focus\/ActualFocusedWindowTest\/ActualFocusedWindowBlockingTest.java","additions":33,"deletions":10,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,2 @@\n-  test\n+  @test\n+  @key headful\n@@ -28,2 +29,1 @@\n-  @key headful\n-  @run main AutomaticAppletTest\n+  @run main ModalDialogInFocusEventTest\n@@ -71,0 +71,2 @@\n+    static boolean isOnWayland;\n+\n@@ -212,12 +214,15 @@\n-        System.out.println(\"click on title of \" + frame.getName());\n-        int[] point = new int[2];\n-        EventQueue.invokeAndWait(() -> {\n-            Point location = frame.getLocationOnScreen();\n-            Insets insets = frame.getInsets();\n-            int width = frame.getWidth();\n-            point[0] = location.x + width \/ 2;\n-            point[1] = location.y + insets.top \/ 2;\n-        });\n-        robot.mouseMove(point[0], point[1]);\n-        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        EventQueue.invokeAndWait(frame::toFront);\n+        if (!isOnWayland) {\n+            System.out.println(\"click on title of \" + frame.getName());\n+            int[] point = new int[2];\n+            EventQueue.invokeAndWait(() -> {\n+                Point location = frame.getLocationOnScreen();\n+                Insets insets = frame.getInsets();\n+                int width = frame.getWidth();\n+                point[0] = location.x + width \/ 2;\n+                point[1] = location.y + insets.top \/ 2;\n+            });\n+            robot.mouseMove(point[0], point[1]);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        }\n@@ -347,0 +352,1 @@\n+        isOnWayland = System.getenv(\"WAYLAND_DISPLAY\") != null;\n","filename":"test\/jdk\/java\/awt\/Focus\/ModalDialogInFocusEventTest.java","additions":22,"deletions":16,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -24,9 +24,0 @@\n-\/*\n- * FrameStateTest.java\n- *\n- * summary: Checks that when setState(Frame.ICONIFIED) is called before\n- *      setVisible(true) the Frame is shown in the proper iconified state.\n- *      The problem was that it did not honor the initial iconic state, but\n- *      instead was shown in the NORMAL state.\n- *\/\n-\n@@ -55,3 +46,3 @@\n- *       was set to. The bug was that if setState(Frame.ICONIFIED) was\n- *       called before setVisible(true) the Frame would be shown in NORMAL\n- *       state instead of ICONIFIED.\n+ *          was set to. The bug was that if setState(Frame.ICONIFIED) was\n+ *          called before setVisible(true) the Frame would be shown in NORMAL\n+ *          state instead of ICONIFIED.\n@@ -71,2 +62,1 @@\n-        <\/p><hr\/><p>\n-\n+        <\/p><hr\/>\n@@ -74,1 +64,1 @@\n-        <\/p><p>\n+        <p>\n@@ -77,1 +67,1 @@\n-                <li><i>{Normal, Non-resizalbe}<\/i><\/li>\n+                <li><i>{Normal, Non-resizable}<\/i><\/li>\n@@ -80,1 +70,1 @@\n-                <li><i>{Iconified, Non-resizalbe}<\/i><\/li>\n+                <li><i>{Iconified, Non-resizable}<\/i><\/li>\n@@ -84,3 +74,2 @@\n-        After the Frame (Frame State Test (Window2)) comes\n-        up make sure the proper behavior occurred<br>\n-        (Frame shown in proper state).<br>\n+        After the Frame (Frame State Test (Window2)) comes up make sure the\n+        proper behavior occurred (Frame shown in proper state).<br>\n@@ -88,1 +77,0 @@\n-\n@@ -91,3 +79,10 @@\n-        Do the above steps for all the different Frame state combinations available.<br>\n-        If you observe the proper behavior the test has passed, Press the Pass button.<br>\n-        Otherwise the test has failed, Press the Fail button.\n+        Do the above steps for all the different Frame state combinations\n+        available.<br>\n+        For \"Hide, Iconify and Show\" case, the frame is hidden then iconified\n+        hence Window2 is not seen on-screen when shown as the frame is still\n+        in the ICONIFIED state. Window2 is visible on-screen when it is restored\n+        to NORMAL state as observed with \"Hide, Iconify, Show and Restore\" case.\n+        <br><br>\n+\n+        If you observe the proper behavior for all the combinations,\n+        press PASS else FAIL.<br>\n@@ -109,3 +104,3 @@\n-    Checkbox cbIconState = new Checkbox(\"Frame state ICONIFIED\", cbgState, true);\n-    Checkbox cbNormState = new Checkbox(\"Frame state NORMAL\", cbgState, false);\n-    Checkbox cbNonResize = new Checkbox(\"Frame non-resizable\", cbgResize, false);\n+    Checkbox cbIconState = new Checkbox(\"Frame State ICONIFIED\", cbgState, true);\n+    Checkbox cbNormState = new Checkbox(\"Frame State NORMAL\", cbgState, false);\n+    Checkbox cbNonResize = new Checkbox(\"Frame Non-Resizable\", cbgResize, false);\n@@ -119,1 +114,1 @@\n-                .title(\"GetBoundsResizeTest Instructions\")\n+                .title(\"Frame State and Size Test Instructions\")\n@@ -122,1 +117,1 @@\n-                .rows(25)\n+                .rows(27)\n@@ -124,1 +119,1 @@\n-                .logArea(10)\n+                .logArea(6)\n@@ -152,1 +147,1 @@\n-            icontst =new CreateFrame(cbIconState.getState(), cbResize.getState());\n+            icontst = new CreateFrame(cbIconState.getState(), cbResize.getState());\n@@ -169,1 +164,1 @@\n-            setTitle(\"Frame State Test (Window 2)\");\n+            setTitle(\"Test Window (Window 2)\");\n@@ -178,7 +173,7 @@\n-            add(b1 = new Button(\"resizable\"));\n-            add(b2 = new Button(\"resize\"));\n-            add(b3 = new Button(\"iconify\"));\n-            add(b4 = new Button(\"iconify and restore\"));\n-            add(b5 = new Button(\"hide and show\"));\n-            add(b6 = new Button(\"hide, iconify and show\"));\n-            add(b7 = new Button(\"hide, iconify, show, and restore\"));\n+            add(b1 = new Button(\"Resizable\"));\n+            add(b2 = new Button(\"Resize\"));\n+            add(b3 = new Button(\"Iconify\"));\n+            add(b4 = new Button(\"Iconify and Restore\"));\n+            add(b5 = new Button(\"Hide and Show\"));\n+            add(b6 = new Button(\"Hide, Iconify and Show\"));\n+            add(b7 = new Button(\"Hide, Iconify, Show and Restore\"));\n@@ -194,1 +189,1 @@\n-            setBounds(100, 2, 200, 200);\n+            setBounds(100, 2, 300, 200);\n@@ -197,1 +192,0 @@\n-            pack();\n@@ -323,1 +317,1 @@\n-                .log(\"[State=%d] %s %s\".formatted(getState(), name, message));\n+                .log(\"[Current State = %d] %s %s\".formatted(getState(), name, message));\n@@ -327,1 +321,1 @@\n-            PassFailJFrame.log(\"[State=\" + getState() + \"]\");\n+            PassFailJFrame.log(\"[Current State = \" + getState() + \"]\");\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameStateTest\/FrameStateTest.java","additions":37,"deletions":43,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,3 +24,23 @@\n-\n-import java.awt.*;\n-import java.awt.event.*;\n+import java.awt.Button;\n+import java.awt.Checkbox;\n+import java.awt.Choice;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.List;\n+import java.awt.Panel;\n+import java.awt.Robot;\n+import java.awt.Scrollbar;\n+import java.awt.TextArea;\n+import java.awt.TextField;\n+import java.awt.event.HierarchyBoundsListener;\n+import java.awt.event.HierarchyEvent;\n+import java.awt.event.InputEvent;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n@@ -29,1 +49,2 @@\n-import java.io.*;\n+\n+import jdk.test.lib.Platform;\n@@ -40,1 +61,2 @@\n- * @build FrameBorderCounter\n+ * @library \/test\/lib\n+ * @build FrameBorderCounter jdk.test.lib.Platform\n@@ -140,1 +162,1 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -142,1 +164,1 @@\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -180,15 +202,0 @@\n-        int x = (int) frame.getLocationOnScreen().x;\n-        int y = (int) frame.getLocationOnScreen().y;\n-        int w = frame.getSize().width;\n-        int h = frame.getSize().height;\n-\n-        robot.mouseMove(x + w + BORDER_SHIFT, y + h \/ 2);\n-        robot.delay(delay);\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        robot.delay(delay);\n-        for (int i = 0; i < 20; i++) {\n-            robot.mouseMove(x + w + i + BORDER_SHIFT, y + h \/ 2);\n-            robot.delay(50);\n-        }\n-        robot.delay(delay);\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n@@ -196,5 +203,28 @@\n-        if (! resizeTriggered) {\n-            synchronized (resizeLock) {\n-                try {\n-                    resizeLock.wait(delay * 10);\n-                } catch (Exception e) {\n+        int x;\n+        int y;\n+        int w;\n+        int h;\n+\n+        if (!Platform.isOnWayland()) {\n+            x = frame.getLocationOnScreen().x;\n+            y = frame.getLocationOnScreen().y;\n+            w = frame.getSize().width;\n+            h = frame.getSize().height;\n+\n+            robot.mouseMove(x + w + BORDER_SHIFT, y + h \/ 2);\n+            robot.delay(delay);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(delay);\n+            for (int i = 0; i < 20; i++) {\n+                robot.mouseMove(x + w + i + BORDER_SHIFT, y + h \/ 2);\n+                robot.delay(50);\n+            }\n+            robot.delay(delay);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            if (!resizeTriggered) {\n+                synchronized (resizeLock) {\n+                    try {\n+                        resizeLock.wait(delay * 10);\n+                    } catch (Exception e) {\n+                    }\n@@ -203,1 +233,0 @@\n-        }\n@@ -205,5 +234,10 @@\n-        for (int i = 0; i < components.length; i++) {\n-            if (! ancestorResized[i]) {\n-                System.err.println(\"FAIL: Frame resized using mouse action. \" +\n-                                   \"Ancestor resized event did not occur for \" +\n-                                   components[i].getClass());\n+            for (int i = 0; i < components.length; i++) {\n+                if (!ancestorResized[i]) {\n+                    System.err.println(\"FAIL: Frame resized using mouse action. \" +\n+                            \"Ancestor resized event did not occur for \" +\n+                            components[i].getClass());\n+                    passed = false;\n+                }\n+            }\n+            if (moveCount > 0) {\n+                System.err.println(\"FAIL: Ancestor moved event occurred when Frame resized using mouse\");\n@@ -212,4 +246,2 @@\n-        }\n-        if (moveCount > 0) {\n-            System.err.println(\"FAIL: Ancestor moved event occured when Frame resized using mouse\");\n-            passed = false;\n+\n+            resetValues();\n@@ -218,1 +250,0 @@\n-        resetValues();\n@@ -253,14 +284,0 @@\n-        x = (int) frame.getLocationOnScreen().x;\n-        y = (int) frame.getLocationOnScreen().y;\n-        w = frame.getSize().width;\n-        h = frame.getSize().height;\n-\n-        \/\/Click on the dummy frame so that the test frame loses focus. This is to workaround\n-        \/\/a bug in Linux AS.\n-        robot.mouseMove((int) dummy.getLocationOnScreen().x + dummy.getSize().width \/ 2,\n-                        (int) dummy.getLocationOnScreen().y + dummy.getSize().height \/ 2);\n-        robot.delay(delay);\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        robot.delay(delay);\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-        robot.delay(delay);\n@@ -268,16 +285,33 @@\n-        robot.mouseMove(x + w \/ 2, y + 10);\n-        robot.delay(delay);\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        robot.delay(delay);\n-        for (int i = 1; i <= 20; i++) {\n-            robot.mouseMove(x + w \/ 2 + i, y + 10);\n-            robot.delay(50);\n-        }\n-        robot.delay(delay);\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-\n-        if (! moveTriggered) {\n-            synchronized (moveLock) {\n-                try {\n-                    moveLock.wait(delay * 10);\n-                } catch (Exception e) {\n+        if (!Platform.isOnWayland()) {\n+            x = frame.getLocationOnScreen().x;\n+            y = frame.getLocationOnScreen().y;\n+            w = frame.getSize().width;\n+            h = frame.getSize().height;\n+\n+            \/\/Click on the dummy frame so that the test frame loses focus. This is to workaround\n+            \/\/a bug in Linux AS.\n+            robot.mouseMove((int) dummy.getLocationOnScreen().x + dummy.getSize().width \/ 2,\n+                            (int) dummy.getLocationOnScreen().y + dummy.getSize().height \/ 2);\n+            robot.delay(delay);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(delay);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(delay);\n+\n+            robot.mouseMove(x + w \/ 2, y + 10);\n+            robot.delay(delay);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(delay);\n+            for (int i = 1; i <= 20; i++) {\n+                robot.mouseMove(x + w \/ 2 + i, y + 10);\n+                robot.delay(50);\n+            }\n+            robot.delay(delay);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            if (! moveTriggered) {\n+                synchronized (moveLock) {\n+                    try {\n+                        moveLock.wait(delay * 10);\n+                    } catch (Exception e) {\n+                    }\n@@ -286,1 +320,0 @@\n-        }\n@@ -288,4 +321,9 @@\n-        for (int i = 0; i < components.length; i++) {\n-            if (! ancestorMoved[i]) {\n-                System.err.println(\"FAIL: Frame moved using mouse action. \" +\n-                                   \"Ancestor moved event did not occur for \" + components[i].getClass());\n+            for (int i = 0; i < components.length; i++) {\n+                if (! ancestorMoved[i]) {\n+                    System.err.println(\"FAIL: Frame moved using mouse action. \" +\n+                                       \"Ancestor moved event did not occur for \" + components[i].getClass());\n+                    passed = false;\n+                }\n+            }\n+            if (resizeCount > 0) {\n+                System.err.println(\"FAIL: Ancestor resized event occured when Frame moved using mouse\");\n@@ -295,4 +333,0 @@\n-        if (resizeCount > 0) {\n-            System.err.println(\"FAIL: Ancestor resized event occured when Frame moved using mouse\");\n-            passed = false;\n-        }\n@@ -453,1 +487,1 @@\n-    public static void main(String args[]) throws InterruptedException {\n+    public static void main(String[] args) throws InterruptedException {\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/HierarchyBoundsListenerMixingTest.java","additions":113,"deletions":79,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/jdk\/java\/awt\/font\/GlyphVector\/LayoutCompatTest.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,5 +32,1 @@\n-import java.lang.foreign.AddressLayout;\n-import java.lang.foreign.Arena;\n-import java.lang.foreign.MemoryLayout;\n-import java.lang.foreign.MemorySegment;\n-import java.lang.foreign.ValueLayout;\n+import java.lang.foreign.*;\n@@ -53,2 +49,4 @@\n-    public void testAccessModes(MemorySegment segment, ValueLayout layout, AccessMode mode) throws Throwable {\n-        VarHandle varHandle = layout.varHandle();\n+    public void testAccessModes(MemorySegment segment, MemoryLayout layout, AccessMode mode) throws Throwable {\n+        VarHandle varHandle = layout instanceof ValueLayout ?\n+                layout.varHandle() :\n+                layout.varHandle(MemoryLayout.PathElement.groupElement(0));\n@@ -56,1 +54,1 @@\n-        boolean compatible = AccessModeKind.supportedModes(layout).contains(AccessModeKind.of(mode));\n+        boolean compatible = AccessModeKind.supportedModes(accessLayout(layout)).contains(AccessModeKind.of(mode));\n@@ -64,1 +62,2 @@\n-            assertTrue(compatible);\n+            assertTrue(compatible ||\n+                    (layout instanceof GroupLayout && segment.maxByteAlignment() < layout.byteAlignment()));\n@@ -68,0 +67,8 @@\n+    static ValueLayout accessLayout(MemoryLayout layout) {\n+        return switch (layout) {\n+            case ValueLayout vl -> vl;\n+            case GroupLayout gl -> accessLayout(gl.memberLayouts().get(0));\n+            default -> throw new IllegalStateException();\n+        };\n+    }\n+\n@@ -148,0 +155,1 @@\n+                layouts.add(MemoryLayout.structLayout(layout.withByteAlignment(align)));\n","filename":"test\/jdk\/java\/foreign\/TestAccessModes.java","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8331681\n+ * @summary Verify the java.base's console provider handles the prompt correctly.\n+ * @library \/test\/lib\n+ * @run main\/othervm --limit-modules java.base ConsolePromptTest\n+ * @run main\/othervm -Djdk.console=java.base ConsolePromptTest\n+ *\/\n+\n+import java.lang.reflect.Method;\n+import java.util.Objects;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class ConsolePromptTest {\n+\n+    public static void main(String... args) throws Throwable {\n+        for (Method m : ConsolePromptTest.class.getDeclaredMethods()) {\n+            if (m.getName().startsWith(\"test\")) {\n+                m.invoke(new ConsolePromptTest());\n+            }\n+        }\n+    }\n+\n+    void testCorrectOutputReadLine() throws Exception {\n+        doRunConsoleTest(\"testCorrectOutputReadLine\", \"inp\", \"%s\");\n+    }\n+\n+    void testCorrectOutputReadPassword() throws Exception {\n+        doRunConsoleTest(\"testCorrectOutputReadPassword\", \"inp\", \"%s\");\n+    }\n+\n+    void doRunConsoleTest(String testName,\n+                          String input,\n+                          String expectedOut) throws Exception {\n+        ProcessBuilder builder =\n+                ProcessTools.createTestJavaProcessBuilder(ConsoleTest.class.getName(),\n+                                                          testName);\n+        OutputAnalyzer output = ProcessTools.executeProcess(builder, input);\n+\n+        output.waitFor();\n+\n+        if (output.getExitValue() != 0) {\n+            throw new AssertionError(\"Unexpected return value: \" + output.getExitValue() +\n+                                     \", actualOut: \" + output.getStdout() +\n+                                     \", actualErr: \" + output.getStderr());\n+        }\n+\n+        String actualOut = output.getStdout();\n+\n+        if (!Objects.equals(expectedOut, actualOut)) {\n+            throw new AssertionError(\"Unexpected stdout content. \" +\n+                                     \"Expected: '\" + expectedOut + \"'\" +\n+                                     \", got: '\" + actualOut + \"'\");\n+        }\n+\n+        String expectedErr = \"\";\n+        String actualErr = output.getStderr();\n+\n+        if (!Objects.equals(expectedErr, actualErr)) {\n+            throw new AssertionError(\"Unexpected stderr content. \" +\n+                                     \"Expected: '\" + expectedErr + \"'\" +\n+                                     \", got: '\" + actualErr + \"'\");\n+        }\n+    }\n+\n+    public static class ConsoleTest {\n+        public static void main(String... args) {\n+            switch (args[0]) {\n+                case \"testCorrectOutputReadLine\" ->\n+                    System.console().readLine(\"%%s\");\n+                case \"testCorrectOutputReadPassword\" ->\n+                    System.console().readPassword(\"%%s\");\n+                default -> throw new UnsupportedOperationException(args[0]);\n+            }\n+\n+            System.exit(0);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/Console\/ConsolePromptTest.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -248,1 +248,1 @@\n-                cob.constantInstruction(name + \" should not be invoked\");\n+                cob.loadConstant(name + \" should not be invoked\");\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/ProhibitedMethods.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -273,1 +273,1 @@\n-                    cob.constantInstruction(osf.getName());\n+                    cob.loadConstant(osf.getName());\n@@ -275,1 +275,1 @@\n-                        cob.constantInstruction(DynamicConstantDesc.ofNamed(\n+                        cob.loadConstant(DynamicConstantDesc.ofNamed(\n@@ -279,1 +279,1 @@\n-                        cob.constantInstruction(osf.getType().describeConstable().orElseThrow());\n+                        cob.loadConstant(osf.getType().describeConstable().orElseThrow());\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/SerialPersistentFieldsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/JspawnhelperWarnings.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,2 +86,2 @@\n-                                            h.constantInstruction(name);\n-                                            h.constantInstruction(transformId);\n+                                            h.loadConstant(name);\n+                                            h.loadConstant(transformId);\n","filename":"test\/jdk\/java\/lang\/instrument\/NativeMethodPrefixAgent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-                                           cb.constantInstruction(fixedIndex);\n+                                           cb.loadConstant(fixedIndex);\n","filename":"test\/jdk\/java\/lang\/instrument\/RetransformAgent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-                                    cb.loadInstruction(kind, ptr);\n+                                    cb.loadLocal(kind, ptr);\n@@ -129,1 +129,1 @@\n-                                cb.invokeInstruction(isStatic ? Opcode.INVOKESTATIC : Opcode.INVOKESPECIAL,\n+                                cb.invoke(isStatic ? Opcode.INVOKESTATIC : Opcode.INVOKESPECIAL,\n@@ -131,1 +131,1 @@\n-                                cb.returnInstruction(TypeKind.from(mt.returnType()));\n+                                cb.return_(TypeKind.from(mt.returnType()));\n","filename":"test\/jdk\/java\/lang\/instrument\/asmlib\/Instrumentor.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-                cob.constantInstruction(CD_Comparator);\n+                cob.loadConstant(CD_Comparator);\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleProxies\/WrapperHiddenClassTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -393,2 +393,2 @@\n-                    cob.constantInstruction(DynamicConstantDesc.ofNamed(BSM_CLASS_DATA, DEFAULT_NAME, returnDesc));\n-                    cob.returnInstruction(TypeKind.from(returnType));\n+                    cob.loadConstant(DynamicConstantDesc.ofNamed(BSM_CLASS_DATA, DEFAULT_NAME, returnDesc));\n+                    cob.return_(TypeKind.from(returnType));\n@@ -408,2 +408,2 @@\n-                    cob.constantInstruction(DynamicConstantDesc.ofNamed(BSM_CLASS_DATA_AT, DEFAULT_NAME, returnDesc, index));\n-                    cob.returnInstruction(TypeKind.from(returnType));\n+                    cob.loadConstant(DynamicConstantDesc.ofNamed(BSM_CLASS_DATA_AT, DEFAULT_NAME, returnDesc, index));\n+                    cob.return_(TypeKind.from(returnType));\n@@ -420,2 +420,2 @@\n-                    cob.constantInstruction(dynamic);\n-                    cob.returnInstruction(TypeKind.from(returnType));\n+                    cob.loadConstant(dynamic);\n+                    cob.return_(TypeKind.from(returnType));\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandles\/classData\/ClassDataTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-                                            codeBuilder.loadInstruction(TypeKind.from(type.parameterType(i)), i);\n+                                            codeBuilder.loadLocal(TypeKind.from(type.parameterType(i)), i);\n@@ -78,1 +78,1 @@\n-                                        codeBuilder.returnInstruction(TypeKind.from(type.returnType()));\n+                                        codeBuilder.return_(TypeKind.from(type.returnType()));\n@@ -120,1 +120,1 @@\n-                                    .returnInstruction(TypeKind.fromDescriptor(type))));\n+                                    .return_(TypeKind.fromDescriptor(type))));\n","filename":"test\/jdk\/java\/lang\/invoke\/common\/test\/java\/lang\/invoke\/lib\/InstructionHelper.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-\/\/                                                    .instanceof_(ConstantDescs.CD_MethodType)\n+\/\/                                                    .instanceOf(ConstantDescs.CD_MethodType)\n","filename":"test\/jdk\/java\/lang\/invoke\/condy\/CondyNestedTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-                cob.constantInstruction(MethodHandleDesc.ofMethod(SPECIAL, CD_T1, METHOD_NAME, MTD_int));\n+                cob.loadConstant(MethodHandleDesc.ofMethod(SPECIAL, CD_T1, METHOD_NAME, MTD_int));\n","filename":"test\/jdk\/java\/lang\/invoke\/lookup\/SpecialStatic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-                        cob.constantInstruction(EXPECTED);\n+                        cob.loadConstant(EXPECTED);\n","filename":"test\/jdk\/java\/lang\/reflect\/Method\/invoke\/TestPrivateInterfaceMethodReflect.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -358,1 +358,1 @@\n-            exchange.sendResponseHeaders(407, 0);\n+            exchange.sendResponseHeaders(407, -1);\n","filename":"test\/jdk\/java\/net\/Authenticator\/B4769350.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/jdk\/java\/net\/httpclient\/RedirectTimeoutTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ExpectContinueResetTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @summary Block devices should not report size=0 on Linux\n- * @run main\/manual BlockDeviceSize\n+ * @summary FileChannel.size() should be equal to RandomAccessFile.size() and > 0 for block devs on Linux\n+ * @library \/test\/lib\n@@ -33,1 +33,0 @@\n-import java.nio.file.Paths;\n@@ -37,0 +36,2 @@\n+import java.util.List;\n+\n@@ -39,0 +40,1 @@\n+import jtreg.SkippedException;\n@@ -41,2 +43,1 @@\n-    private static final String BLK_FNAME = \"\/dev\/sda1\";\n-    private static final Path BLK_PATH = Paths.get(BLK_FNAME);\n+    private static final List<String> BLK_FNAMES = List.of(\"\/dev\/sda1\", \"\/dev\/nvme0n1\", \"\/dev\/xvda1\") ;\n@@ -45,2 +46,15 @@\n-        try (FileChannel ch = FileChannel.open(BLK_PATH, READ);\n-             RandomAccessFile file = new RandomAccessFile(BLK_FNAME, \"r\")) {\n+        for (String blkFname: BLK_FNAMES) {\n+            Path blkPath = Path.of(blkFname);\n+            try (FileChannel ch = FileChannel.open(blkPath, READ);\n+                 RandomAccessFile file = new RandomAccessFile(blkFname, \"r\")) {\n+\n+                long size1 = ch.size();\n+                long size2 = file.length();\n+                if (size1 != size2) {\n+                    throw new RuntimeException(\"size differs when retrieved\" +\n+                            \" in different ways: \" + size1 + \" != \" + size2);\n+                }\n+                if (size1 <= 0) {\n+                    throw new RuntimeException(\"size() for a block device size returns zero or a negative value\");\n+                }\n+                System.out.println(\"OK\");\n@@ -48,5 +62,6 @@\n-            long size1 = ch.size();\n-            long size2 = file.length();\n-            if (size1 != size2) {\n-                throw new RuntimeException(\"size differs when retrieved\" +\n-                        \" in different ways: \" + size1 + \" != \" + size2);\n+            } catch (NoSuchFileException nsfe) {\n+                System.err.println(\"File \" + blkFname + \" not found.\" +\n+                        \" Skipping test\");\n+            } catch (AccessDeniedException ade) {\n+                throw new SkippedException(\"Access to \" + blkFname + \" is denied.\"\n+                        + \" Run test as root.\", ade);\n@@ -54,1 +69,0 @@\n-            System.out.println(\"OK\");\n@@ -56,6 +70,0 @@\n-        } catch (NoSuchFileException nsfe) {\n-            System.err.println(\"File \" + BLK_FNAME + \" not found.\" +\n-                    \" Skipping test\");\n-        } catch (AccessDeniedException ade) {\n-            throw new RuntimeException(\"Access to \" + BLK_FNAME + \" is denied.\"\n-                    + \" Run test as root.\", ade);\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/BlockDeviceSize.java","additions":28,"deletions":20,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8330077\n+ * @summary Tests WatchService behavior with more entries in a watched directory\n+ *     than the default event limit\n+ * @library ..\n+ * @run main\/othervm LotsOfEntries 600 fail\n+ * @run main\/othervm -Djdk.nio.file.WatchService.maxEventsPerPoll=invalid LotsOfEntries 600 fail\n+ * @run main\/othervm -Djdk.nio.file.WatchService.maxEventsPerPoll=-5 LotsOfEntries 5 fail\n+ * @run main\/othervm -Djdk.nio.file.WatchService.maxEventsPerPoll=5 LotsOfEntries 5 pass\n+ * @run main\/othervm -Djdk.nio.file.WatchService.maxEventsPerPoll=5 LotsOfEntries 6 fail\n+ * @run main\/othervm -Djdk.nio.file.WatchService.maxEventsPerPoll=700 LotsOfEntries 600 pass\n+ * @run main\/othervm -Djdk.nio.file.WatchService.maxEventsPerPoll=3000000000 LotsOfEntries 600 pass\n+ *\/\n+\n+import java.nio.file.*;\n+import static java.nio.file.StandardWatchEventKinds.*;\n+import java.util.*;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.Collectors;\n+\n+public class LotsOfEntries {\n+\n+    static void testCreateLotsOfEntries(Path dir, int numEvents, boolean fail) throws Exception {\n+        try (WatchService watcher = FileSystems.getDefault().newWatchService()) {\n+            System.out.format(\"register %s for events\\n\", dir);\n+            WatchKey key = dir.register(watcher, ENTRY_CREATE);\n+\n+            System.out.format(\"create %d entries\\n\", numEvents);\n+            Set<Path> entries = new HashSet<>();\n+            for (int i = 0; i < numEvents; i++) {\n+                Path entry = dir.resolve(\"entry\" + i);\n+                entries.add(entry);\n+                Files.createFile(entry);\n+            }\n+\n+            \/\/ Wait for all events to be signalled - the timeout is long to\n+            \/\/ allow for polling implementations. Since we specifically want to\n+            \/\/ test the maximum number of events buffered for a single\n+            \/\/ WatchKey#pollEvents call, we need to poll on the WatchService\n+            \/\/ repeatedly until all (not just some) events have been signalled.\n+            System.out.println(\"poll watcher...\");\n+            WatchKey signalledKey;\n+            do {\n+              signalledKey = watcher.poll(10, TimeUnit.SECONDS);\n+              if (signalledKey != null && signalledKey != key) {\n+                throw new RuntimeException(\"Unexpected key returned from poll\");\n+              }\n+            } while (signalledKey != null);\n+\n+            if (fail) {\n+                System.out.println(\"poll expecting overflow...\");\n+                var events = key.pollEvents();\n+                if (events.size() != 1) {\n+                    throw new RuntimeException(\n+                        \"Expected overflow event, got: \" + toString(events));\n+                }\n+                if (!events.getFirst().kind().equals(OVERFLOW)) {\n+                    throw new RuntimeException(\n+                        \"Expected overflow event, got: \" + toString(events));\n+                }\n+            } else {\n+                System.out.println(\"poll not expecting overflow...\");\n+                List<WatchEvent<?>> events = key.pollEvents();\n+                Set<Path> contexts = events.stream()\n+                    .map(WatchEvent::context)\n+                    .map(Path.class::cast)\n+                    .map(entry -> dir.resolve(entry))\n+                    .collect(Collectors.toSet());\n+                if (!entries.equals(contexts)) {\n+                    throw new RuntimeException(\n+                        \"Expected events on: \" + entries + \", got: \" + toString(events));\n+                }\n+            }\n+        }\n+    }\n+\n+    static String toString(List<WatchEvent<?>> events) {\n+        return events.stream()\n+            .map(LotsOfEntries::toString)\n+            .collect(Collectors.joining(\", \"));\n+    }\n+\n+    static String toString(WatchEvent event) {\n+        return String.format(\"%s(%d): %s\", event.kind(), event.count(), event.context());\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        Path dir = TestUtil.createTemporaryDirectory();\n+        int numEvents = Integer.parseInt(args[0]);\n+        boolean fail = args[1].equals(\"fail\");\n+        try {\n+            testCreateLotsOfEntries(dir, numEvents, fail);\n+        } finally {\n+            TestUtil.removeAll(dir);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/file\/WatchService\/LotsOfEntries.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,4 @@\n-import java.nio.ByteBuffer;\n-import java.util.Arrays;\n+import org.junit.jupiter.api.Test;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n@@ -28,1 +30,4 @@\n-\/**\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+\/*\n@@ -30,6 +35,6 @@\n- * @bug 8210583 8217969 8218265\n- * @summary Tests Base64.Encoder.encode and Base64.Decoder.decode\n- *          with the large size of input array\/buffer\n- * @requires (sun.arch.data.model == \"64\" & os.maxMemory >= 10g)\n- * @run main\/othervm -Xms6g -Xmx8g TestEncodingDecodingLength\n- *\n+ * @bug 8210583 8217969 8218265 8295153\n+ * @summary White-box test that effectively checks Base64.Encoder.encode and\n+ *          Base64.Decoder.decode behavior with large, (Integer.MAX_VALUE) sized\n+ *          input array\/buffer. Tests the private methods \"encodedOutLength\" and\n+ *          \"decodedOutLength\".\n+ * @run junit\/othervm --add-opens java.base\/java.util=ALL-UNNAMED TestEncodingDecodingLength\n@@ -38,0 +43,2 @@\n+\/\/ We perform a white-box test due to the heavy memory usage that testing\n+\/\/ the public API would require which has shown to cause intermittent issues\n@@ -40,4 +47,4 @@\n-    public static void main(String[] args) {\n-        int size = Integer.MAX_VALUE - 8;\n-        byte[] inputBytes = new byte[size];\n-        byte[] outputBytes = new byte[size];\n+    \/\/ A value large enough to test the desired memory conditions in encode and decode\n+    private static final int LARGE_MEM_SIZE = Integer.MAX_VALUE - 8;\n+    private static final Base64.Decoder DECODER = Base64.getDecoder();\n+    private static final Base64.Encoder ENCODER = Base64.getEncoder();\n@@ -45,14 +52,11 @@\n-        \/\/ Check encoder with large array length\n-        Base64.Encoder encoder = Base64.getEncoder();\n-        checkOOM(\"encode(byte[])\", () -> encoder.encode(inputBytes));\n-        checkIAE(\"encode(byte[] byte[])\", () -> encoder.encode(inputBytes, outputBytes));\n-        checkOOM(\"encodeToString(byte[])\", () -> encoder.encodeToString(inputBytes));\n-        checkOOM(\"encode(ByteBuffer)\", () -> encoder.encode(ByteBuffer.wrap(inputBytes)));\n-\n-        \/\/ Check decoder with large array length,\n-        \/\/ should not throw any exception\n-        Arrays.fill(inputBytes, (byte) 86);\n-        Base64.Decoder decoder = Base64.getDecoder();\n-        decoder.decode(inputBytes);\n-        decoder.decode(inputBytes, outputBytes);\n-        decoder.decode(ByteBuffer.wrap(inputBytes));\n+    \/\/ Effectively tests that encode(byte[] src, byte[] dst) throws an\n+    \/\/ IllegalArgumentException with array sized near Integer.MAX_VALUE. All the\n+    \/\/ encode() methods call encodedOutLength(), which is where the OOME is expected\n+    @Test\n+    public void largeEncodeIAETest() throws IllegalAccessException,\n+            InvocationTargetException, NoSuchMethodException {\n+        Method m = getMethod(ENCODER,\n+                \"encodedOutLength\", int.class, boolean.class);\n+        \/\/ When throwOOME param is false, encodedOutLength should return -1 in\n+        \/\/ this situation, which encode() uses to throw IAE\n+        assertEquals(-1, m.invoke(ENCODER, LARGE_MEM_SIZE, false));\n@@ -61,1 +65,6 @@\n-    private static final void checkOOM(String methodName, Runnable r) {\n+    \/\/ Effectively tests that the overloaded encode() and encodeToString() methods\n+    \/\/ throw OutOfMemoryError with array\/buffer sized near Integer.MAX_VALUE\n+    @Test\n+    public void largeEncodeOOMETest() throws IllegalAccessException, NoSuchMethodException {\n+        Method m = getMethod(ENCODER,\n+                \"encodedOutLength\", int.class, boolean.class);\n@@ -63,3 +72,7 @@\n-            r.run();\n-            throw new RuntimeException(\"OutOfMemoryError should have been thrown by: \" + methodName);\n-        } catch (OutOfMemoryError er) {}\n+            m.invoke(ENCODER, LARGE_MEM_SIZE, true);\n+        } catch (InvocationTargetException ex) {\n+            Throwable rootEx = ex.getCause();\n+            assertEquals(OutOfMemoryError.class, rootEx.getClass(),\n+                    \"OOME should be thrown with Integer.MAX_VALUE input\");\n+            assertEquals(\"Encoded size is too large\", rootEx.getMessage());\n+        }\n@@ -68,1 +81,9 @@\n-    private static final void checkIAE(String methodName, Runnable r) {\n+    \/\/ Effectively tests that the overloaded decode() methods do not throw\n+    \/\/ OOME nor NASE with array\/buffer sized near Integer.MAX_VALUE All the decode\n+    \/\/ methods call decodedOutLength(), which is where the previously thrown\n+    \/\/ OOME or NASE would occur at.\n+    @Test\n+    public void largeDecodeTest() throws IllegalAccessException, NoSuchMethodException {\n+        Method m = getMethod(DECODER,\n+                \"decodedOutLength\", byte[].class, int.class, int.class);\n+        byte[] src = {1};\n@@ -70,3 +91,15 @@\n-            r.run();\n-            throw new RuntimeException(\"IllegalArgumentException should have been thrown by: \" + methodName);\n-        } catch (IllegalArgumentException iae) {}\n+            \/*\n+             decodedOutLength() takes the src array, position, and limit as params.\n+             The src array will be indexed at limit-1 to search for padding.\n+             To avoid passing an array with Integer.MAX_VALUE memory allocated, we\n+             set position param to be -size. Since the initial length\n+             is calculated as limit - position. This mocks the potential overflow\n+             calculation and still allows the array to be indexed without an AIOBE.\n+            *\/\n+            m.invoke(DECODER, src, -LARGE_MEM_SIZE + 1, 1);\n+        } catch (InvocationTargetException ex) {\n+            \/\/ 8210583 - decode no longer throws NASE\n+            \/\/ 8217969 - decode no longer throws OOME\n+            fail(\"Decode threw an unexpected exception with \" +\n+                    \"Integer.MAX_VALUE sized input: \" + ex.getCause());\n+        }\n@@ -74,1 +107,0 @@\n-}\n@@ -76,0 +108,8 @@\n+    \/\/ Utility to get the private visibility method\n+    private static Method getMethod(Object obj, String methodName, Class<?>... params)\n+            throws NoSuchMethodException {\n+        Method m = obj.getClass().getDeclaredMethod(methodName, params);\n+        m.setAccessible(true);\n+        return m;\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/Base64\/TestEncodingDecodingLength.java","additions":77,"deletions":37,"binary":false,"changes":114,"status":"modified"},{"patch":"@@ -0,0 +1,129 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8331646\n+ * @summary confirm that Calendar.add() works correctly with leap year calculations\n+ * @run junit CalendarLeapYearAddTest\n+ *\/\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.Locale;\n+import java.util.stream.Stream;\n+\n+import static java.util.Calendar.APRIL;\n+import static java.util.Calendar.DATE;\n+import static java.util.Calendar.DAY_OF_MONTH;\n+import static java.util.Calendar.DAY_OF_WEEK;\n+import static java.util.Calendar.DAY_OF_WEEK_IN_MONTH;\n+import static java.util.Calendar.DAY_OF_YEAR;\n+import static java.util.Calendar.FEBRUARY;\n+import static java.util.Calendar.LONG;\n+import static java.util.Calendar.MARCH;\n+import static java.util.Calendar.MONTH;\n+import static java.util.Calendar.WEEK_OF_YEAR;\n+import static java.util.Calendar.YEAR;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class CalendarLeapYearAddTest {\n+\n+    \/**\n+     * 8331646 Calendar add for leap year\n+     *\/\n+    @ParameterizedTest\n+    @MethodSource(\"calendarAddSource\")\n+    public void testAddLeapYear(String testName, int calendarDate, int calendarMonth, int calendarYear,\n+                                int value, int calendarField, int expectedDate, int expectedMonth,\n+                                int expectedYear) {\n+        Calendar calendar = new GregorianCalendar(calendarYear, calendarMonth, calendarDate);\n+        calendar.add(calendarField, value);\n+        assertEquals(expectedDate, calendar.get(DATE), testName\n+                + \" Expected \" + expectedDate + \" of \" + expectedMonth + expectedYear + \" but got \" + calendar.getTime());\n+        assertEquals(expectedMonth, calendar.get(MONTH), testName\n+                + \" Expected \" + expectedMonth + \" but got \" + calendar.getDisplayName(MONTH, LONG, Locale.getDefault()));\n+    }\n+\n+    \/**\n+     * 8331646 Calendar month and year add\/subtract for leap\/non-leap year\n+     *\/\n+    @Test\n+    public void testMonthYearAddSubtractNonLeapYear() {\n+        Calendar calendar = new GregorianCalendar(2024, FEBRUARY, 29);\n+        calendar.add(MONTH, 1);\n+        calendar.add(YEAR, -1);\n+        calendar.add(MONTH, -1);\n+        \/* When month added date jumps to 29th of March 2024, after year subtracted date jumps to 29th of March 2023\n+           after month subtracted date jumps to 28th of Feb 2023 as non leap year\n+         *\/\n+        assertEquals(28, calendar.get(DATE),\n+                \"testMonthYearAddSubtractNonLeapYear Expected 28th of February 2024 but got \" + calendar.getTime());\n+        assertEquals(FEBRUARY, calendar.get(MONTH),\n+                \" testMonthYearAddSubtractNonLeapYear Expected February but got \" + calendar.getDisplayName(MONTH, LONG, Locale.getDefault()));\n+    }\n+\n+    \/**\n+     * 8331646 Calendar add\/subtract for leap year\n+     *\/\n+    @ParameterizedTest\n+    @MethodSource(\"calendarAddSubtractSource\")\n+    public void testAddSubtractLeapYear(String testName, int calendarDate, int calendarMonth, int calendarYear,\n+                                        int firstValue, int secondValue, int calendarField, int expectedDate,\n+                                        int expectedMonth, int expectedYear) {\n+        Calendar calendar = new GregorianCalendar(calendarYear, calendarMonth, calendarDate);\n+        calendar.add(calendarField, firstValue);\n+        calendar.add(calendarField, secondValue);\n+        assertEquals(expectedDate, calendar.get(DATE), testName\n+                + \" Expected \" + expectedDate + \" of \" + expectedMonth + expectedYear + \" but got \" + calendar.getTime());\n+        assertEquals(expectedMonth, calendar.get(MONTH), testName\n+                + \" Expected \" + expectedMonth + \" but got \" + calendar.getDisplayName(MONTH, LONG, Locale.getDefault()));\n+    }\n+\n+    private static Stream<Arguments> calendarAddSubtractSource() {\n+        return Stream.of(\n+                Arguments.of(\"testMonthAddSubtractLeapYearReversed\", 31, MARCH, 2024, -1, 1, MONTH, 29, MARCH, 2024),\n+                Arguments.of(\"testMonthAddSubtractLeapYear\", 29, FEBRUARY, 2024, 1, -1, MONTH, 29, FEBRUARY, 2024),\n+                Arguments.of(\"testYearAddSubtractLeapYear\", 29, FEBRUARY, 2024, 1, -1, YEAR, 28, FEBRUARY, 2024),\n+                Arguments.of(\"testDayOfYearAddSubtractLeapYear\", 29, FEBRUARY, 2024, 365, -365, DAY_OF_YEAR, 29, FEBRUARY, 2024),\n+                Arguments.of(\"testDateAddSubtractLeapYear\", 29, FEBRUARY, 2024, 365, -365, DATE, 29, FEBRUARY, 2024),\n+                Arguments.of(\"testWeekOfYearAddSubtractLeapYear\", 29, FEBRUARY, 2024, 52, -52, WEEK_OF_YEAR, 29, FEBRUARY, 2024),\n+                Arguments.of(\"testDayOfMonthAddSubtractLeapYear\", 29, FEBRUARY, 2024, 31, -31, DAY_OF_MONTH, 29, FEBRUARY, 2024),\n+                Arguments.of(\"testDayOfWeekInMonthAddSubtractLeapYear\", 29, FEBRUARY, 2024, 6, -6, DAY_OF_WEEK_IN_MONTH, 29, FEBRUARY, 2024),\n+                Arguments.of(\"testDayOfWeekAddSubtractLeapYear\", 29, FEBRUARY, 2024, 6, -6, DAY_OF_WEEK, 29, FEBRUARY, 2024)\n+        );\n+    }\n+\n+    private static Stream<Arguments> calendarAddSource() {\n+        return Stream.of(\n+                Arguments.of(\"testMonthAddLeapYear\", 29, FEBRUARY, 2024, 1, MONTH, 29, MARCH, 2024),\n+                Arguments.of(\"testOneMonthSubtractLeapYear\", 31, MARCH, 2024, -1, MONTH, 29, FEBRUARY, 2024),\n+                Arguments.of(\"testTwoMonthSubtractLeapYear\", 30, APRIL, 2024, -2, MONTH, 29, FEBRUARY, 2024)\n+        );\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarLeapYearAddTest.java","additions":129,"deletions":0,"binary":false,"changes":129,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -608,0 +608,21 @@\n+    @Test\n+    public void testCharacteristicsForSortedUnorderedStreamSpliterators() {\n+        assertValidCombinationOfSortedAndOrdered(\n+            DoubleStream.of(3d,2d,4d,1d,5d).sorted().unordered().spliterator()\n+        );\n+        assertValidCombinationOfSortedAndOrdered(\n+            IntStream.of(3,2,4,1,5).sorted().unordered().spliterator()\n+        );\n+        assertValidCombinationOfSortedAndOrdered(\n+            LongStream.of(3L,2L,4L,1L,5L).sorted().unordered().spliterator()\n+        );\n+        assertValidCombinationOfSortedAndOrdered(\n+            Stream.of(3,2,4,1,5).sorted().unordered().spliterator()\n+        );\n+    }\n+\n+    void assertValidCombinationOfSortedAndOrdered(Spliterator<?> s) {\n+        if (s.hasCharacteristics(Spliterator.SORTED))\n+            Assert.assertTrue(s.hasCharacteristics(Spliterator.ORDERED));\n+    }\n+\n","filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/StreamSpliteratorTest.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -276,1 +276,1 @@\n-                        ? new InetSocketAddress(\"localhost\", serverPort)\n+                        ? new InetSocketAddress(InetAddress.getLoopbackAddress(), serverPort)\n","filename":"test\/jdk\/javax\/net\/ssl\/templates\/SSLSocketTemplate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.net.InetAddress;\n@@ -337,1 +338,1 @@\n-                sock.connect(new InetSocketAddress(\"localhost\", serverPort));\n+                sock.connect(new InetSocketAddress(InetAddress.getLoopbackAddress(), serverPort));\n","filename":"test\/jdk\/javax\/net\/ssl\/templates\/TLSBase.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,144 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.ByteArrayInputStream;\n+\n+import javax.sound.midi.MidiSystem;\n+import javax.sound.midi.Sequence;\n+import javax.sound.midi.Track;\n+\n+\/**\n+ * @test\n+ * @bug 8319598\n+ * @summary SMFParser bug with running status, interrupted by Meta or SysEx messages\n+ *\/\n+public class SMFInterruptedRunningStatus {\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        byte[][] files = new byte[][] {SMF_1, SMF_2, SMF_3};\n+        for (int i = 0; i < files.length; i++) {\n+            Sequence seq = MidiSystem.getSequence(\n+                    new ByteArrayInputStream(files[i]));\n+            testSequence(seq, i + 1);\n+        }\n+\n+        \/\/ no exception thrown, all files have been parsed correctly\n+        System.out.println(\"Test passed\");\n+    }\n+\n+    private static void testSequence(Sequence seq, int fileNumber) {\n+\n+        \/\/ check number of tracks and number of events\n+        Track[] tracks = seq.getTracks();\n+        if (1 != tracks.length) {\n+            throw new RuntimeException(\"file number \"\n+                    + fileNumber + \" fails (incorrect number of tracks: \"\n+                    + tracks.length + \")\");\n+        }\n+        Track track = tracks[0];\n+        if (7 != track.size()) {\n+            throw new RuntimeException(\"file number \" + fileNumber\n+                    + \" fails (incorrect number of events: \"\n+                    + track.size() + \")\");\n+        }\n+\n+        \/\/ check status byte of each message\n+        int[] expectedStatusBytes = new int[] {\n+                0x90, 0xFF, 0x90, 0x90, 0x90, 0xFF, 0xFF};\n+        for (int i = 0; i < expectedStatusBytes.length; i++) {\n+            int expected = expectedStatusBytes[i];\n+            if (expected != track.get(i).getMessage().getStatus()) {\n+                throw new RuntimeException(\"file number \" + fileNumber\n+                        + \" fails (wrong status byte in event \" + i + \")\");\n+            }\n+        }\n+    }\n+\n+    \/\/ MIDI file without running status - should work equally before\n+    \/\/ and after the bugfix\n+    private static final byte[] SMF_1 = {\n+        0x4D, 0x54, 0x68, 0x64, 0x00, 0x00, 0x00, 0x06,  \/\/ file header (start)\n+        0x00, 0x01, 0x00, 0x01, 0x00, (byte) 0x80,       \/\/ file header (end)\n+        0x4D, 0x54, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x24,  \/\/ track header\n+        0x00,                                            \/\/ delta time\n+        (byte) 0x90, 0x3C, 0x7F,                         \/\/ Note-ON (C)\n+        0x40,                                            \/\/ delta time\n+        (byte) 0xFF, 0x01, 0x04, 0x54, 0x65, 0x73, 0x74, \/\/ META (text)\n+        0x20,                                            \/\/ delta time\n+        (byte) 0x90, 0x3C, 0x00,                         \/\/ Note-OFF (C)\n+        0x20,                                            \/\/ delta time\n+        (byte) 0x90, 0x3E, 0x7F,                         \/\/ Note-ON (D)\n+        0x60,                                            \/\/ delta time\n+        (byte) 0x90, 0x3E, 0x00,                         \/\/ Note-OFF (D)\n+        0x20,                                            \/\/ delta time\n+        (byte) 0xFF, 0x01, 0x04, 0x54, 0x65, 0x73, 0x74, \/\/ META (text)\n+        0x00,                                            \/\/ delta time\n+        (byte) 0xFF, 0x2F, 0x00                          \/\/ META (end of track)\n+    };\n+\n+    \/\/ MIDI file with running status, interrupted by a META message\n+    \/\/ - failed before the bugfix\n+    private static final byte[] SMF_2 = {\n+        0x4D, 0x54, 0x68, 0x64, 0x00, 0x00, 0x00, 0x06,  \/\/ file header (start)\n+        0x00, 0x01, 0x00, 0x01, 0x00, (byte) 0x80,       \/\/ file header (end)\n+        0x4D, 0x54, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x21,  \/\/ track header\n+        0x00,                                            \/\/ delta time\n+        (byte) 0x90, 0x3C, 0x7F,                         \/\/ Note-ON (C)\n+        0x40,                                            \/\/ delta time\n+        (byte) 0xFF, 0x01, 0x04, 0x54, 0x65, 0x73, 0x74, \/\/ META (interruptor)\n+        0x20,                                            \/\/ delta time\n+        0x3C, 0x00,                                      \/\/ Note-OFF (C) - running status\n+        0x20,                                            \/\/ delta time\n+        0x3E, 0x7F,                                      \/\/ Note-ON (D) - running status\n+        0x60,                                            \/\/ delta time\n+        0x3E, 0x00,                                      \/\/ Note-OFF (D) - running status\n+        0x20,                                            \/\/ delta time\n+        (byte) 0xFF, 0x01, 0x04, 0x54, 0x65, 0x73, 0x74, \/\/ META (text)\n+        0x00,                                            \/\/ delta time\n+        (byte) 0xFF, 0x2F, 0x00                          \/\/ META (end of track)\n+    };\n+\n+    \/\/ MIDI file with running status, interrupted by a META message\n+    \/\/ - succeeded before the bugfix but with wrong interpretation of the data\n+    private static final byte[] SMF_3 = {\n+        0x4D, 0x54, 0x68, 0x64, 0x00, 0x00, 0x00, 0x06,  \/\/ file header (start)\n+        0x00, 0x01, 0x00, 0x01, 0x00, (byte) 0x80,       \/\/ file header (end)\n+        0x4D, 0x54, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x21,  \/\/ track header\n+        0x00,                                            \/\/ delta time\n+        (byte) 0x90, 0x3C, 0x7F,                         \/\/ Note-ON (C)\n+        0x40,                                            \/\/ delta time\n+        (byte) 0xFF, 0x01, 0x04, 0x54, 0x65, 0x73, 0x74, \/\/ META (interruptor)\n+        0x20,                                            \/\/ delta time\n+        0x3C, 0x00,                                      \/\/ Note-OFF (C) - running status\n+        0x0D,                                            \/\/ delta time\n+        0x3E, 0x7F,                                      \/\/ Note-ON (D) - running status\n+        0x60,                                            \/\/ delta time\n+        0x3E, 0x00,                                      \/\/ Note-OFF (D) - running status\n+        0x20,                                            \/\/ delta time\n+        (byte) 0xFF, 0x01, 0x04, 0x54, 0x65, 0x73, 0x74, \/\/ META (text)\n+        0x00,                                            \/\/ delta time\n+        (byte) 0xFF, 0x2F, 0x00                          \/\/ META (end of track)\n+    };\n+}\n+\n","filename":"test\/jdk\/javax\/sound\/midi\/File\/SMFInterruptedRunningStatus.java","additions":144,"deletions":0,"binary":false,"changes":144,"status":"added"},{"patch":"@@ -56,2 +56,2 @@\n-                .rows(12)\n-                .columns(42)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(48)\n@@ -68,1 +68,0 @@\n-\n@@ -70,3 +69,5 @@\n-        frame.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n-        frame.setLocale(Locale.ENGLISH);\n-        frame.setLayout(new BorderLayout());\n+\n+        frame.getContentPane().setComponentOrientation(\n+                               ComponentOrientation.RIGHT_TO_LEFT);\n+        frame.getContentPane().setLocale(Locale.ENGLISH);\n+        frame.getContentPane().setLayout(new BorderLayout());\n","filename":"test\/jdk\/javax\/swing\/JFrame\/bug4419914.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,248 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.GridLayout;\n+import javax.swing.AbstractAction;\n+import javax.swing.AbstractButton;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTabbedPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+\/*\n+ * @test\n+ * @bug 4690946 8226990 6462396\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @requires (os.family == \"windows\" | os.family == \"linux\")\n+ * @summary Test JTabbedPane's contentarea, tab area and tab color\n+ *          for different LAFs when opacity is enabled or disabled.\n+ * @run main\/manual TestJTabbedPaneOpaqueColor\n+ *\/\n+\n+public class TestJTabbedPaneOpaqueColor {\n+    private static JFrame frame;\n+    private static JTabbedPane tabPane;\n+    private static final String INSTRUCTIONS = \"\"\"\n+            The background color of panel which contains the tabbed pane is green.\n+            The background color of the tabbed pane is red.\n+            The TabbedPane is not opaque initially.\n+            For 'Content Opaque' and 'Tabs Opaque' to have effect, tab pane opacity should\n+            be set to false i.e. Opaque checkbox should be unchecked.\n+            NOTE: For Nimbus LAF, tabs color are specific to nimbus style.\n+\n+            Check the default behaviour of the tabbed pane:\n+              - the area behind tabs is transparent (it must be green).\n+              - the tabs area is opaque (it must be red, except the selected tab which must be gray).\n+              - the content area is opaque (it must be gray).\n+\n+            Test Case 1 - Test TabPane Opacity:\n+            NOTE: For Nimbus LAF, tabs color are always gray in color.\n+\n+            Verify the following with 'opaque' option:\n+            when checked:\n+              - the area behind tabs is opaque (it must be red).\n+              - the tabs area is opaque (it must be red, except the selected tab which must be gray).\n+              - the content area is opaque (it must be gray).\n+            when unchecked:\n+              - the area behind tabs is transparent (it must be green).\n+              - the tabs area is opaque (it must be red, except the selected tab which must be gray).\n+              - the content area is opaque (it must be gray).\n+\n+            Check this behaviour by clicking on present L&F button and tab layout.\n+\n+            Test Case 2 - Test Content pane opacity:\n+            To test Content pane opacity, make sure \"Opaque checkbox\" is UNCHECKED.\n+\n+            Verify the following with 'content opaque' option:\n+            when checked:\n+              - the content area should be opaque (it must be gray).\n+            when unchecked:\n+              - the content area should be transparent (it must be green).\n+\n+            Check this behaviour by clicking on present L&F button and tab layout.\n+\n+            Test Case 3 - Test Tabs opacity:\n+            To test Tabs opacity, make sure \"Opaque checkbox\" is UNCHECKED.\n+            NOTE: For Nimbus LAF, tabs color are specific to nimbus style.\n+                  All tabs are gray in color if tabs opaque is checked.\n+\n+            Verify the following with 'tabs opaque' option:\n+            when checked:\n+              - the tabs are opaque (it must be red, except the selected tab which must be gray).\n+            when unchecked:\n+              - the tabs are transparent (it must be green).\n+\n+            Check this behaviour by clicking on present L&F button and tab layout.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+            .title(\"JTabbedPane Tab and Content Area Color Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .testTimeOut(10)\n+            .rows(25)\n+            .columns(60)\n+            .testUI(TestJTabbedPaneOpaqueColor::createAndShowUI)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    private static JFrame createAndShowUI() {\n+        int NUM_TABS = 15;\n+        frame = new JFrame(\"Test JTabbedPane Opaque Color\");\n+        JTabbedPane tabPane = new JTabbedPane();\n+        tabPane.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\n+        tabPane.setTabPlacement(JTabbedPane.TOP);\n+        PassFailJFrame.positionTestWindow(\n+                frame, PassFailJFrame.Position.HORIZONTAL);\n+        for (int i = 0; i < NUM_TABS; ++i) {\n+            tabPane.addTab(\"Tab \" + i , new JLabel(\"Content Area\"));\n+        }\n+        JPanel panel = new JPanel(new BorderLayout());\n+        panel.add(tabPane, BorderLayout.CENTER);\n+        panel.setBackground(Color.green);\n+        tabPane.setBackground(Color.red);\n+\n+        UIManager.LookAndFeelInfo[] laf = UIManager.getInstalledLookAndFeels();\n+        JPanel lafButtonPanel = new JPanel(new GridLayout(1, 3));\n+        for (int i = 0; i < laf.length; ++i) {\n+            if (laf[i].getName().contains(\"Motif\")\n+                || laf[i].getName().contains(\"Windows\")) {\n+                continue;\n+            }\n+            JButton button = new JButton(laf[i].getName());\n+            button.setText(laf[i].getName());\n+            button.addActionListener(new MyAction());\n+            lafButtonPanel.add(button);\n+        }\n+\n+        JButton scrollButton = new JButton(new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                tabPane.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\n+            }\n+        });\n+        scrollButton.setText(\"SCROLL layout\");\n+\n+        JPanel layoutButtonPanel = new JPanel(new GridLayout(1, 2));\n+        JButton wrapButton = new JButton(new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                tabPane.setTabLayoutPolicy(JTabbedPane.WRAP_TAB_LAYOUT);\n+            }\n+        });\n+        wrapButton.setText(\"WRAP layout\");\n+\n+        layoutButtonPanel.add(scrollButton);\n+        layoutButtonPanel.add(wrapButton);\n+\n+        JCheckBox contentOpaqueChkBox = new JCheckBox(new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                if (((AbstractButton)e.getSource()).isSelected()) {\n+                    UIManager.put(\"TabbedPane.contentOpaque\", Boolean.TRUE);\n+                } else {\n+                    UIManager.put(\"TabbedPane.contentOpaque\", Boolean.FALSE);\n+                }\n+                tabPane.repaint();\n+                SwingUtilities.updateComponentTreeUI(frame);\n+            }\n+        });\n+        contentOpaqueChkBox.setText(\"Content Opaque\");\n+        contentOpaqueChkBox.setSelected(true);\n+        contentOpaqueChkBox.setEnabled(true);\n+\n+        JCheckBox tabOpaqueChkBox = new JCheckBox(new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                if (((AbstractButton)e.getSource()).isSelected()) {\n+                    UIManager.put(\"TabbedPane.tabsOpaque\", Boolean.TRUE);\n+                } else {\n+                    UIManager.put(\"TabbedPane.tabsOpaque\", Boolean.FALSE);\n+                }\n+                tabPane.repaint();\n+                SwingUtilities.updateComponentTreeUI(frame);\n+            }\n+        });\n+        tabOpaqueChkBox.setText(\"Tabs Opaque\");\n+        tabOpaqueChkBox.setSelected(true);\n+        tabOpaqueChkBox.setEnabled(true);\n+\n+        JCheckBox tabPaneOpaqueChkBox = new JCheckBox(new AbstractAction() {\n+            public void actionPerformed(ActionEvent e) {\n+                tabPane.setOpaque(((AbstractButton)e.getSource()).isSelected());\n+                contentOpaqueChkBox.setEnabled(!((AbstractButton)e.getSource()).isSelected());\n+                tabOpaqueChkBox.setEnabled(!((AbstractButton)e.getSource()).isSelected());\n+                tabPane.repaint();\n+                SwingUtilities.updateComponentTreeUI(frame);\n+            }\n+        });\n+        tabPaneOpaqueChkBox.setText(\"Opaque\");\n+\n+        JPanel checkBoxPanel = new JPanel();\n+        checkBoxPanel.add(tabPaneOpaqueChkBox);\n+        checkBoxPanel.add(contentOpaqueChkBox);\n+        checkBoxPanel.add(tabOpaqueChkBox);\n+\n+        JPanel nestedPanels = new JPanel(new GridLayout(2, 1));\n+        nestedPanels.add(lafButtonPanel);\n+        nestedPanels.add(layoutButtonPanel);\n+        panel.add(checkBoxPanel, BorderLayout.NORTH);\n+        panel.add(nestedPanels, BorderLayout.SOUTH);\n+        frame.add(panel);\n+        frame.setSize(500, 500);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+        return frame;\n+    }\n+\n+    public static class MyAction implements ActionListener {\n+        public void actionPerformed(ActionEvent ae) {\n+            String lafClassName = null;\n+            UIManager.LookAndFeelInfo lafs[] = UIManager.getInstalledLookAndFeels();\n+            for (int i = 0; i < lafs.length; i++) {\n+                if (ae.getActionCommand().equals(lafs[i].getName())) {\n+                    lafClassName = lafs[i].getClassName();\n+                    break;\n+                }\n+            }\n+            try {\n+                UIManager.setLookAndFeel(lafClassName);\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+                createAndShowUI();\n+            } catch (UnsupportedLookAndFeelException ignored) {\n+                System.out.println(\"Unsupported LAF: \" + lafClassName);\n+            } catch (ClassNotFoundException | InstantiationException\n+                     | IllegalAccessException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/TestJTabbedPaneOpaqueColor.java","additions":248,"deletions":0,"binary":false,"changes":248,"status":"added"},{"patch":"@@ -33,1 +33,0 @@\n-import javax.swing.SwingUtilities;\n@@ -37,1 +36,0 @@\n-import javax.swing.table.TableCellRenderer;\n@@ -52,46 +50,1 @@\n-    static JFrame frame;\n-    public static PassFailJFrame passFailJFrame;\n-\n-    static void initTest() throws Exception {\n-        final String INSTRUCTIONS = \"\"\"\n-                Instructions to Test:\n-                1. Refer the below keyboard navigation specs\n-                 (referenced from bug report 4112270).\n-                2. Check all combinations of navigational keys in all four modes\n-                  shift and control verifying each change to the selection against\n-                  the spec. If it does, press \"pass\", otherwise press \"fail\".\n-\n-                  Navigate In - Tab, shift-tab, control-tab, shift-control-tab\n-                  Return\/shift-return - move focus one cell down\/up.\n-                  Tab\/shift-tab - move focus one cell right\/left.\n-                  Up\/down arrow - deselect current selection; move focus one cell up\/down\n-                  Left\/right arrow - deselect current selection; move focus one cell\n-                                             left\/right\n-                  PageUp\/PageDown - deselect current selection; scroll up\/down one\n-                                    JViewport view; first visible cell in current\n-                                    column gets focus\n-                  Control-PageUp\/PageDown - deselect current selection; scroll\n-                                            left\/right one JViewport view; first\n-                                            visible cell in current row gets\n-                                            focus\n-                  Home\/end - deselect current selection; move focus and view to\n-                                     first\/last cell in current row\n-                  Control-home\/end - deselect current selection; move focus and view to\n-                                             upper-left\/lower-right cell in table\n-                  F2 - Allows editing in a cell containing information without\n-                               overwriting the information\n-                  Esc - Resets the cell content back to the state it was in before\n-                                editing started\n-                  Ctrl+A, Ctrl+\/ = Select all\n-                  Ctrl+\\\\ = De-select all\n-                  Shift-up\/down arrow - extend selection up\/down one row\n-                  Shift-left\/right arrow - extend selection left\/right one column\n-                  Control-shift up\/down arrow - extend selection to top\/bottom of column\n-                  Shift-home\/end - extend selection to left\/right end of row\n-                  Control-shift-home\/end - extend selection to beginning\/end of data\n-                  Shift-PageUp\/PageDown - extend selection up\/down one view and scroll\n-                                          table\n-                  Control-shift-PageUp\/PageDown - extend selection left\/right one view\n-                                                          and scroll table\n-                \"\"\";\n-\n+    static JFrame initTest() {\n@@ -124,6 +77,1 @@\n-        frame = new JFrame(\"JTable Keyboard Navigation Test\");\n-        passFailJFrame = new PassFailJFrame(\"Test Instructions\",\n-                INSTRUCTIONS, 5L, 15, 50);\n-\n-        PassFailJFrame.addTestWindow(frame);\n-        PassFailJFrame.positionTestWindow(frame, PassFailJFrame.Position.VERTICAL);\n+        JFrame frame = new JFrame(\"JTable Keyboard Navigation Test\");\n@@ -154,3 +102,3 @@\n-        TableCellRenderer headerRenderer = colorColumn.getHeaderRenderer();\n-        if (headerRenderer instanceof DefaultTableCellRenderer)\n-            ((DefaultTableCellRenderer) headerRenderer).setToolTipText(\"Hi Mom!\");\n+        if (colorColumn.getHeaderRenderer() instanceof DefaultTableCellRenderer headerRenderer) {\n+            headerRenderer.setToolTipText(\"Hi Mom!\");\n+        }\n@@ -166,1 +114,1 @@\n-                int cellValue = (value instanceof Number) ? ((Number) value).intValue() : 0;\n+                int cellValue = (value instanceof Number number) ? number.intValue() : 0;\n@@ -175,0 +123,1 @@\n+        tableView.setColumnSelectionAllowed(true);\n@@ -181,1 +130,1 @@\n-        frame.setVisible(true);\n+        return frame;\n@@ -227,8 +176,123 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            try {\n-                initTest();\n-            } catch (Exception e) {\n-                throw new RuntimeException(e);\n-            }\n-        });\n-        passFailJFrame.awaitAndCheck();\n+        String INSTRUCTIONS = \"\"\"\n+                Instructions to Test:\n+                1. Refer the below keyboard navigation specs\n+                 (referenced from bug report 4112270).\n+                2. Check all combinations of navigational keys mentioned below\n+                 and verifying each key combinations against the spec defined.\n+                 If it does, press \"pass\", otherwise press \"fail\".\n+\n+                \"\"\";\n+\n+        INSTRUCTIONS += getOSSpecificInstructions();\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .rows(30)\n+                .columns(50)\n+                .testUI(KeyBoardNavigation::initTest)\n+                .testTimeOut(10)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static String getOSSpecificInstructions() {\n+        final String WINDOWS_SPECIFIC = \"\"\"\n+                Tab, Shift-Tab - Navigate In.\n+                Return\/Shift-Return - Move focus one cell down\/up.\n+                Tab\/Shift-Tab -  Move focus one cell right\/left.\n+                Up\/Down Arrow - Deselect current selection; move focus one\n+                                cell up\/down\n+                Left\/Right Arrow - Deselect current selection; move focus\n+                                   one cell left\/right\n+                PageUp\/PageDown - Deselect current selection; scroll up\/down\n+                                  one JViewport view; first visible cell in\n+                                  current column gets focus\n+                Control-PageUp\/PageDown - Deselect current selection;\n+                                          move focus and view to\n+                                          first\/last cell in current row\n+                Home\/End - Deselect current selection; move focus and view to\n+                           first\/last cell in current row\n+                Control-Home\/End - Deselect current selection;\n+                                   scroll up\/down one  JViewport view;\n+                                   first\/last visible row of the table\n+                F2 - Allows editing in a cell containing information without\n+                     overwriting the information\n+                Esc -  Resets the cell content back to the state it was in\n+                       before editing started\n+                Ctrl+A, Ctrl+\/ - Select All\n+                Ctrl+\\\\ - Deselect all\n+                Shift-Up\/Down Arrow -  Extend selection up\/down one row\n+                Shift-Left\/Right Arrow - Extend selection left\/right one\n+                                         column\n+                Control-shift Up\/Down Arrow -  Extend selection to top\/bottom\n+                                                of column\n+                Shift-Home\/End -  Extend selection to left\/right end of row\n+                Control-Shift-Home\/End  - Extend selection to beginning\/end\n+                                          of data\n+                Shift-PageUp\/PageDown - Extend selection up\/down one view\n+                                        and scroll table\n+                Control-Shift-PageUp\/PageDown - Extend selection left\/right\n+                                                end of row\n+                \"\"\";\n+\n+        final String LINUX_SPECIFIC = \"\"\"\n+                Tab, Shift-Tab - Navigate In.\n+                Return\/Shift-Return - Move focus one cell down\/up.\n+                Tab\/Shift-Tab -  Move focus one cell right\/left.\n+                Up\/Down Arrow - Deselect current selection;\n+                                move focus one cell up\/down\n+                Left\/Right Arrow - Deselect current selection;\n+                                   move focus one cell left\/right\n+                PageUp\/PageDown - Deselect current selection;\n+                                  scroll up\/down one  JViewport view;\n+                                  first visible cell in current column gets focus\n+                Home\/End - Deselect current selection; move focus and view to\n+                                     first\/last cell in current row\n+                F2 - Allows editing in a cell containing information without\n+                     overwriting the information\n+                Esc -  Resets the cell content back to the state it was in\n+                       before editing started\n+                Ctrl+A, Ctrl+\/ - Select All\n+                Ctrl+\\\\ - Deselect all\n+                Shift-Up\/Down Arrow -  Extend selection up\/down one row\n+                Shift-Left\/Right Arrow - Extend selection left\/right one column\n+                Control-Shift Up\/Down Arrow -  Extend selection to top\/bottom of\n+                                               column\n+                Shift-Home\/End -  Extend selection to left\/right end of row\n+                Shift-PageUp\/PageDown - Extend selection up\/down one view and\n+                                        scroll  table\n+                \"\"\";\n+\n+        final String MAC_SPECIFIC = \"\"\"\n+                Tab, Shift-Tab - Navigate In.\n+                Return\/Shift-Return - Move focus one cell down\/up.\n+                Tab\/Shift-Tab -  Move focus one cell right\/left.\n+                Up\/Down Arrow - Deselect current selection; move focus one cell\n+                                up\/down\n+                Left\/Right Arrow - Deselect current selection;\n+                                   move focus one cell left\/right\n+                FN+Up Arrow\/FN+Down Arrow - Deselect current selection;\n+                                   scroll up\/down one JViewport view;\n+                                   first visible cell in current column gets focus\n+                Control-FN+Up Arrow\/FN+Down Arrow - Deselect current selection;\n+                                                    move focus and view to\n+                                                    first\/last cell in current row\n+                F2 - Allows editing in a cell containing information without\n+                     overwriting the information\n+                Esc -  Resets the cell content back to the state it was in\n+                       before editing started\n+                Ctrl+A, Ctrl+\/ - Select All\n+                Ctrl+\\\\ - Deselect all\n+                Shift-Up\/Down Arrow -  Extend selection up\/down one row\n+                Shift-Left\/Right Arrow - Extend selection left\/right one column\n+                FN-Shift Up\/Down Arrow -  Extend selection to top\/bottom of column\n+                Shift-PageUp\/PageDown - Extend selection up\/down one view and scroll\n+                                        table\n+                                \"\"\";\n+        String osName = System.getProperty(\"os.name\").toLowerCase();\n+        if (osName.startsWith(\"mac\")) {\n+            return MAC_SPECIFIC;\n+        } else if (osName.startsWith(\"win\")) {\n+            return WINDOWS_SPECIFIC;\n+        } else {\n+            return LINUX_SPECIFIC;\n+        }\n","filename":"test\/jdk\/javax\/swing\/JTable\/KeyBoardNavigation.java","additions":131,"deletions":67,"binary":false,"changes":198,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+ * @requires os.family == \"windows\"\n@@ -166,1 +167,1 @@\n-            if (count > 0) {\n+            if (count > loaderCount.size() \/ 2) {\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicDirectoryModel\/LoaderThreadCount.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-                    codeB.constantInstruction(i.opcode(), val);\n+                    codeB.loadConstant(i.opcode(), val);\n","filename":"test\/jdk\/jdk\/classfile\/AdaptCodeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-                                    codeB.constantInstruction(Opcode.LDC, cde.constantValue());\n+                                    codeB.ldc(cde.constantValue());\n","filename":"test\/jdk\/jdk\/classfile\/BSMTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-                              xb.returnInstruction(TypeKind.VoidType);\n+                              xb.return_();\n@@ -86,1 +86,1 @@\n-                              xb.nopInstruction();\n+                              xb.nop();\n@@ -90,1 +90,1 @@\n-                                  xxb.nopInstruction();\n+                                  xxb.nop();\n@@ -92,1 +92,1 @@\n-                              xb.returnInstruction(TypeKind.VoidType);\n+                              xb.return_();\n@@ -109,1 +109,1 @@\n-                                                    .ifThen(xxb -> xxb.iconst_1().returnInstruction(TypeKind.IntType))\n+                                                    .ifThen(xxb -> xxb.iconst_1().ireturn())\n@@ -111,1 +111,1 @@\n-                                                    .returnInstruction(TypeKind.IntType)));\n+                                                    .ireturn()));\n@@ -128,2 +128,2 @@\n-                                                    .ifThenElse(xxb -> xxb.iconst_1().returnInstruction(TypeKind.IntType),\n-                                                                xxb -> xxb.iconst_2().returnInstruction(TypeKind.IntType))));\n+                                                    .ifThenElse(xxb -> xxb.iconst_1().ireturn(),\n+                                                                xxb -> xxb.iconst_2().ireturn())));\n","filename":"test\/jdk\/jdk\/classfile\/BuilderBlockTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -69,2 +69,2 @@\n-                tb.constantInstruction(Opcode.LDC, \"IndexOutOfBoundsException\");\n-                tb.returnInstruction(TypeKind.ReferenceType);\n+                tb.ldc(\"IndexOutOfBoundsException\");\n+                tb.areturn();\n@@ -74,2 +74,2 @@\n-                tb.constantInstruction(Opcode.LDC, \"any\");\n-                tb.returnInstruction(TypeKind.ReferenceType);\n+                tb.ldc(\"any\");\n+                tb.areturn();\n@@ -94,1 +94,1 @@\n-                tb.constantInstruction(Opcode.LDC, \"IndexOutOfBoundsException\");\n+                tb.ldc(\"IndexOutOfBoundsException\");\n@@ -99,1 +99,1 @@\n-                tb.constantInstruction(Opcode.LDC, \"any\");\n+                tb.ldc(\"any\");\n@@ -135,2 +135,2 @@\n-                tb.constantInstruction(Opcode.LDC, \"IndexOutOfBoundsException\");\n-                tb.returnInstruction(TypeKind.ReferenceType);\n+                tb.ldc(\"IndexOutOfBoundsException\");\n+                tb.areturn();\n@@ -156,2 +156,2 @@\n-                tb.constantInstruction(Opcode.LDC, \"any\");\n-                tb.returnInstruction(TypeKind.ReferenceType);\n+                tb.ldc(\"any\");\n+                tb.areturn();\n@@ -190,1 +190,1 @@\n-                            xb.constantInstruction(\"S\");\n+                            xb.loadConstant(\"S\");\n@@ -201,2 +201,2 @@\n-                                        tb.constantInstruction(Opcode.LDC, \"any\");\n-                                        tb.returnInstruction(TypeKind.ReferenceType);\n+                                        tb.ldc(\"any\");\n+                                        tb.areturn();\n@@ -208,1 +208,1 @@\n-                            xb.returnInstruction(TypeKind.ReferenceType);\n+                            xb.areturn();\n@@ -221,1 +221,1 @@\n-                            xb.constantInstruction(\"S\");\n+                            xb.loadConstant(\"S\");\n@@ -228,1 +228,1 @@\n-                                tb.constantInstruction(0);\n+                                tb.loadConstant(0);\n@@ -243,1 +243,1 @@\n-                                    tb.constantInstruction(Math.PI);\n+                                    tb.loadConstant(Math.PI);\n@@ -253,1 +253,1 @@\n-                                    tb.constantInstruction(\"REF\");\n+                                    tb.loadConstant(\"REF\");\n@@ -263,1 +263,1 @@\n-                            xb.returnInstruction(TypeKind.ReferenceType);\n+                            xb.areturn();\n@@ -284,1 +284,1 @@\n-                            xb.constantInstruction(\"S\");\n+                            xb.loadConstant(\"S\");\n@@ -289,1 +289,1 @@\n-                                tb.constantInstruction(0);\n+                                tb.loadConstant(0);\n@@ -298,1 +298,1 @@\n-                            xb.returnInstruction(TypeKind.ReferenceType);\n+                            xb.areturn();\n","filename":"test\/jdk\/jdk\/classfile\/BuilderTryCatchTest.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-                            bb.constantInstruction(\"Hello\")\n+                            bb.loadConstant(\"Hello\")\n@@ -55,1 +55,1 @@\n-                            bb.constantInstruction(\"World\")\n+                            bb.loadConstant(\"World\")\n","filename":"test\/jdk\/jdk\/classfile\/DiscontinuedInstructionsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,3 +52,3 @@\n-                      .withCode(codeb -> codeb.loadInstruction(TypeKind.ReferenceType, 0)\n-                                              .invokeInstruction(INVOKESPECIAL, CD_Object, \"<init>\", MTD_VOID, false)\n-                                              .returnInstruction(VoidType)\n+                      .withCode(codeb -> codeb.aload(0)\n+                                              .invokespecial(CD_Object, \"<init>\", MTD_VOID, false)\n+                                              .return_()\n@@ -65,5 +65,5 @@\n-                                  c0.constantInstruction(LDC, \"string0\")\n-                                    .constantInstruction(LDC, \"string131\")\n-                                    .constantInstruction(LDC, \"string50\")\n-                                    .constantInstruction(-0.0f)\n-                                    .constantInstruction(-0.0d)\n+                                  c0.loadConstant(LDC, \"string0\")\n+                                    .loadConstant(LDC, \"string131\")\n+                                    .loadConstant(LDC, \"string50\")\n+                                    .loadConstant(-0.0f)\n+                                    .loadConstant(-0.0d)\n@@ -71,3 +71,3 @@\n-                                    .constantInstruction(0.0f)\n-                                    .constantInstruction(0.0d)\n-                                    .returnInstruction(VoidType);\n+                                    .loadConstant(0.0f)\n+                                    .loadConstant(0.0d)\n+                                    .return_();\n","filename":"test\/jdk\/jdk\/classfile\/LDCTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8320360 8330684\n+ * @bug 8320360 8330684 8331320 8331655\n@@ -30,0 +30,2 @@\n+import java.lang.classfile.Attributes;\n+import java.lang.classfile.BufWriter;\n@@ -34,0 +36,2 @@\n+import java.lang.classfile.Opcode;\n+import java.lang.classfile.attribute.CodeAttribute;\n@@ -35,0 +39,2 @@\n+import java.lang.classfile.constantpool.IntegerEntry;\n+import jdk.internal.classfile.impl.DirectMethodBuilder;\n@@ -36,0 +42,1 @@\n+import jdk.internal.classfile.impl.UnboundAttribute;\n@@ -102,0 +109,55 @@\n+\n+    @Test\n+    void testInvalidUtf8Entry() {\n+        var cp = ClassFile.of().parse(new byte[]{(byte)0xCA, (byte)0xFE, (byte)0xBA, (byte)0xBE,\n+            0, 0, 0, 0, 0, 3, ClassFile.TAG_INTEGER, 0, 0, 0, 0, ClassFile.TAG_NAMEANDTYPE, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}).constantPool();\n+        assertTrue(cp.entryByIndex(1) instanceof IntegerEntry); \/\/parse valid int entry first\n+        assertThrows(ConstantPoolException.class, () -> cp.entryByIndex(2));\n+    }\n+\n+    @Test\n+    void testInvalidLookupSwitch() {\n+        assertThrows(IllegalArgumentException.class, () ->\n+                ClassFile.of().parse(ClassFile.of().build(ClassDesc.of(\"LookupSwitchClass\"), cb -> cb.withMethod(\n+                \"lookupSwitchMethod\", MethodTypeDesc.of(ConstantDescs.CD_void), 0, mb ->\n+                        ((DirectMethodBuilder)mb).writeAttribute(new UnboundAttribute.AdHocAttribute<CodeAttribute>(Attributes.CODE) {\n+                                @Override\n+                                public void writeBody(BufWriter b) {\n+                                    b.writeU2(-1);\/\/max stack\n+                                    b.writeU2(-1);\/\/max locals\n+                                    b.writeInt(16);\n+                                    b.writeU1(Opcode.NOP.bytecode());\n+                                    b.writeU1(Opcode.NOP.bytecode());\n+                                    b.writeU1(Opcode.NOP.bytecode());\n+                                    b.writeU1(Opcode.NOP.bytecode());\n+                                    b.writeU1(Opcode.LOOKUPSWITCH.bytecode());\n+                                    b.writeU1(0); \/\/padding\n+                                    b.writeU2(0); \/\/padding\n+                                    b.writeInt(0); \/\/default\n+                                    b.writeInt(-2); \/\/npairs to jump back and cause OOME if not checked\n+                                    b.writeU2(0);\/\/exception handlers\n+                                    b.writeU2(0);\/\/attributes\n+                                }})))).methods().get(0).code().get().elementList());\n+    }\n+\n+    @Test\n+    void testInvalidTableSwitch() {\n+        assertThrows(IllegalArgumentException.class, () ->\n+                ClassFile.of().parse(ClassFile.of().build(ClassDesc.of(\"TableSwitchClass\"), cb -> cb.withMethod(\n+                \"tableSwitchMethod\", MethodTypeDesc.of(ConstantDescs.CD_void), 0, mb ->\n+                        ((DirectMethodBuilder)mb).writeAttribute(new UnboundAttribute.AdHocAttribute<CodeAttribute>(Attributes.CODE) {\n+                                @Override\n+                                public void writeBody(BufWriter b) {\n+                                    b.writeU2(-1);\/\/max stack\n+                                    b.writeU2(-1);\/\/max locals\n+                                    b.writeInt(16);\n+                                    b.writeU1(Opcode.TABLESWITCH.bytecode());\n+                                    b.writeU1(0); \/\/padding\n+                                    b.writeU2(0); \/\/padding\n+                                    b.writeInt(0); \/\/default\n+                                    b.writeInt(0); \/\/low\n+                                    b.writeInt(-5); \/\/high to jump back and cause OOME if not checked\n+                                    b.writeU2(0);\/\/exception handlers\n+                                    b.writeU2(0);\/\/attributes\n+                                }})))).methods().get(0).code().get().elementList());\n+    }\n","filename":"test\/jdk\/jdk\/classfile\/LimitsTest.java","additions":63,"deletions":1,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -83,9 +83,9 @@\n-                              xb.invokeDynamicInstruction(indy);\n-                              xb.storeInstruction(TypeKind.ReferenceType, 1);\n-                              xb.loadInstruction(TypeKind.ReferenceType, 1);\n-                              xb.loadInstruction(TypeKind.IntType, 0);\n-                              xb.invokeInstruction(Opcode.INVOKEINTERFACE, ClassDesc.of(\"java.util.function.IntUnaryOperator\"),\n-                                                   \"applyAsInt\", MethodTypeDesc.ofDescriptor(\"(I)I\"), true);\n-                              xb.storeInstruction(TypeKind.IntType, 2);\n-                              xb.loadInstruction(TypeKind.IntType, 2);\n-                              xb.returnInstruction(TypeKind.IntType);\n+                              xb.invokedynamic(indy);\n+                              xb.astore(1);\n+                              xb.aload(1);\n+                              xb.iload(0);\n+                              xb.invokeinterface(ClassDesc.of(\"java.util.function.IntUnaryOperator\"),\n+                                                   \"applyAsInt\", MethodTypeDesc.ofDescriptor(\"(I)I\"));\n+                              xb.istore(2);\n+                              xb.iload(2);\n+                              xb.ireturn();\n","filename":"test\/jdk\/jdk\/classfile\/LowAdaptTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -125,3 +125,3 @@\n-                      .withCode(codeb -> codeb.loadInstruction(TypeKind.ReferenceType, 0)\n-                                              .invokeInstruction(INVOKESPECIAL, CD_Object, \"<init>\", MTD_VOID, false)\n-                                              .returnInstruction(VoidType)\n+                      .withCode(codeb -> codeb.aload(0)\n+                                              .invokespecial(CD_Object, \"<init>\", MTD_VOID, false)\n+                                              .return_()\n@@ -149,2 +149,2 @@\n-                                    .constantInstruction(ICONST_1, 1)         \/\/ 0\n-                                    .storeInstruction(TypeKind.IntType, 1)          \/\/ 1\n+                                    .iconst_1()         \/\/ 0\n+                                    .istore(1)          \/\/ 1\n@@ -152,2 +152,2 @@\n-                                    .constantInstruction(ICONST_1, 1)         \/\/ 2\n-                                    .storeInstruction(TypeKind.IntType, 2)          \/\/ 3\n+                                    .iconst_1()         \/\/ 2\n+                                    .istore(2)          \/\/ 3\n@@ -155,9 +155,9 @@\n-                                    .loadInstruction(TypeKind.IntType, 2)           \/\/ 4\n-                                    .constantInstruction(BIPUSH, 10)         \/\/ 5\n-                                    .branchInstruction(IF_ICMPGE, loopEnd) \/\/ 6\n-                                    .loadInstruction(TypeKind.IntType, 1)           \/\/ 7\n-                                    .loadInstruction(TypeKind.IntType, 2)           \/\/ 8\n-                                    .operatorInstruction(IMUL)             \/\/ 9\n-                                    .storeInstruction(TypeKind.IntType, 1)          \/\/ 10\n-                                    .incrementInstruction(2, 1)    \/\/ 11\n-                                    .branchInstruction(GOTO, loopTop)     \/\/ 12\n+                                    .iload(2)           \/\/ 4\n+                                    .bipush(10)         \/\/ 5\n+                                    .if_icmpge(loopEnd) \/\/ 6\n+                                    .iload(1)           \/\/ 7\n+                                    .iload(2)           \/\/ 8\n+                                    .imul()             \/\/ 9\n+                                    .istore(1)          \/\/ 10\n+                                    .iinc(2, 1)    \/\/ 11\n+                                    .goto_(loopTop)     \/\/ 12\n@@ -165,3 +165,3 @@\n-                                    .fieldInstruction(GETSTATIC, CD_System, \"out\", CD_PrintStream)   \/\/ 13\n-                                    .loadInstruction(TypeKind.IntType, 1)\n-                                    .invokeInstruction(INVOKEVIRTUAL, CD_PrintStream, \"println\", MTD_INT_VOID, false)  \/\/ 15\n+                                    .getstatic(CD_System, \"out\", CD_PrintStream)   \/\/ 13\n+                                    .iload(1)\n+                                    .invokevirtual(CD_PrintStream, \"println\", MTD_INT_VOID)  \/\/ 15\n@@ -169,1 +169,1 @@\n-                                    .returnInstruction(VoidType)\n+                                    .return_()\n@@ -239,3 +239,3 @@\n-                      .withCode(codeb -> codeb.loadInstruction(TypeKind.ReferenceType, 0)\n-                                              .invokeInstruction(INVOKESPECIAL, CD_Object, \"<init>\", MTD_VOID, false)\n-                                              .returnInstruction(VoidType)\n+                      .withCode(codeb -> codeb.aload(0)\n+                                              .invokespecial(CD_Object, \"<init>\", MTD_VOID, false)\n+                                              .return_()\n@@ -266,4 +266,4 @@\n-                                        .newObjectInstruction(ClassDesc.of(\"java.util.ArrayList\"))\n-                                        .stackInstruction(DUP)\n-                                        .invokeInstruction(INVOKESPECIAL, CD_ArrayList, \"<init>\", MTD_VOID, false)\n-                                        .storeInstruction(TypeKind.ReferenceType, 2)\n+                                        .new_(ClassDesc.of(\"java.util.ArrayList\"))\n+                                        .dup()\n+                                        .invokespecial(CD_ArrayList, \"<init>\", MTD_VOID, false)\n+                                        .astore(2)\n@@ -272,2 +272,2 @@\n-                                        .loadInstruction(TypeKind.ReferenceType, 1)\n-                                        .returnInstruction(TypeKind.ReferenceType)\n+                                        .aload(1)\n+                                        .areturn()\n","filename":"test\/jdk\/jdk\/classfile\/LvtTest.java","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -71,3 +71,3 @@\n-                                  .withCode(codeb -> codeb.loadInstruction(TypeKind.ReferenceType, 0)\n-                                                          .invokeInstruction(INVOKESPECIAL, CD_Object, \"<init>\", MTD_VOID, false)\n-                                                          .returnInstruction(TypeKind.VoidType)\n+                                  .withCode(codeb -> codeb.aload(0)\n+                                                          .invokespecial(CD_Object, \"<init>\", MTD_VOID, false)\n+                                                          .return_()\n@@ -83,4 +83,4 @@\n-                                                c0.constantInstruction(ICONST_1, 1)         \/\/ 0\n-                                                  .storeInstruction(TypeKind.IntType, fac)        \/\/ 1\n-                                                  .constantInstruction(ICONST_1, 1)         \/\/ 2\n-                                                  .storeInstruction(TypeKind.IntType, i)          \/\/ 3\n+                                                c0.iconst_1()         \/\/ 0\n+                                                  .istore(fac)        \/\/ 1\n+                                                  .iconst_1()         \/\/ 2\n+                                                  .istore(i)          \/\/ 3\n@@ -88,9 +88,9 @@\n-                                                  .loadInstruction(TypeKind.IntType, i)           \/\/ 4\n-                                                  .constantInstruction(BIPUSH, 10)         \/\/ 5\n-                                                  .branchInstruction(IF_ICMPGE, loopEnd) \/\/ 6\n-                                                  .loadInstruction(TypeKind.IntType, fac)         \/\/ 7\n-                                                  .loadInstruction(TypeKind.IntType, i)           \/\/ 8\n-                                                  .operatorInstruction(IMUL)             \/\/ 9\n-                                                  .storeInstruction(TypeKind.IntType, fac)        \/\/ 10\n-                                                  .incrementInstruction(i, 1)    \/\/ 11\n-                                                  .branchInstruction(GOTO, loopTop)     \/\/ 12\n+                                                  .iload(i)           \/\/ 4\n+                                                  .bipush(10)         \/\/ 5\n+                                                  .if_icmpge(loopEnd) \/\/ 6\n+                                                  .iload(fac)         \/\/ 7\n+                                                  .iload(i)           \/\/ 8\n+                                                  .imul()             \/\/ 9\n+                                                  .istore(fac)        \/\/ 10\n+                                                  .iinc(i, 1)         \/\/ 11\n+                                                  .goto_(loopTop)     \/\/ 12\n@@ -98,4 +98,4 @@\n-                                                  .fieldInstruction(GETSTATIC, CD_System, \"out\", CD_PrintStream)   \/\/ 13\n-                                                  .loadInstruction(TypeKind.IntType, fac)\n-                                                  .invokeInstruction(INVOKEVIRTUAL, CD_PrintStream, \"println\", MTD_INT_VOID, false)  \/\/ 15\n-                                                  .returnInstruction(TypeKind.VoidType);\n+                                                  .getstatic(CD_System, \"out\", CD_PrintStream)   \/\/ 13\n+                                                  .iload(fac)\n+                                                  .invokevirtual(CD_PrintStream, \"println\", MTD_INT_VOID)  \/\/ 15\n+                                                  .return_();\n","filename":"test\/jdk\/jdk\/classfile\/OneToOneTest.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-                                              codeb -> codeb.constantInstruction(opcode, (ConstantDesc) constant))));\n+                                              codeb -> codeb.loadConstant(opcode, (ConstantDesc) constant))));\n@@ -127,1 +127,1 @@\n-                                codeb -> codeb.constantInstruction(opcode, (ConstantDesc)constant))));\n+                                codeb -> codeb.loadConstant(opcode, (ConstantDesc)constant))));\n","filename":"test\/jdk\/jdk\/classfile\/OpcodesValidationTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/jdk\/jdk\/classfile\/OptionsTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-                cob.constantInstruction(CD_int);\n+                cob.loadConstant(CD_int);\n","filename":"test\/jdk\/jdk\/classfile\/PrimitiveClassConstantTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-                                    cob.branchInstruction(sample.jumpCode, target);\n+                                    cob.branch(sample.jumpCode, target);\n@@ -216,1 +216,1 @@\n-                                        cob.nopInstruction();\n+                                        cob.nop();\n@@ -231,1 +231,1 @@\n-                                        cob.nopInstruction();\n+                                        cob.nop();\n@@ -236,1 +236,1 @@\n-                                    cob.branchInstruction(sample.jumpCode, target);\n+                                    cob.branch(sample.jumpCode, target);\n@@ -247,1 +247,1 @@\n-                                            cob.nopInstruction();\n+                                            cob.nop();\n","filename":"test\/jdk\/jdk\/classfile\/ShortJumpsFixTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -186,3 +186,4 @@\n-        var innerSig = (ClassTypeSig) sig.superclassSignature() \/\/ ArrayList\n-                .typeArgs().getFirst() \/\/ Outer<String>.Inner<Long>\n-                .boundType().orElseThrow(); \/\/ assert it's exact bound\n+        var arrayListSig = sig.superclassSignature(); \/\/ ArrayList\n+        var arrayListTypeArg = (TypeArg.Bounded) arrayListSig.typeArgs().getFirst(); \/\/ Outer<String>.Inner<Long>\n+        assertEquals(TypeArg.Bounded.WildcardIndicator.NONE, arrayListTypeArg.wildcardIndicator());\n+        var innerSig = (ClassTypeSig) arrayListTypeArg.boundType();\n","filename":"test\/jdk\/jdk\/classfile\/SignaturesTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -289,1 +289,1 @@\n-                                           cb.constantInstruction(0.0d);\n+                                           cb.loadConstant(0.0d);\n@@ -292,1 +292,1 @@\n-                                           cb.constantInstruction(0);\n+                                           cb.loadConstant(0);\n@@ -307,1 +307,1 @@\n-                                           cb.constantInstruction(0.0f);\n+                                           cb.loadConstant(0.0f);\n@@ -310,1 +310,1 @@\n-                                           cb.constantInstruction(0);\n+                                           cb.loadConstant(0);\n","filename":"test\/jdk\/jdk\/classfile\/StackMapsTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-                            thb.constantInstruction(ClassDesc.of(\"Phee\"));\n+                            thb.loadConstant(ClassDesc.of(\"Phee\"));\n@@ -94,1 +94,1 @@\n-                    stcb.constantInstruction(ClassDesc.of(\"Phee\")); \/\/stack instruction on unknown stack cause tracking lost\n+                    stcb.loadConstant(ClassDesc.of(\"Phee\")); \/\/stack instruction on unknown stack cause tracking lost\n","filename":"test\/jdk\/jdk\/classfile\/StackTrackerTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,3 +61,3 @@\n-                            .withCode(codeb -> codeb.loadInstruction(TypeKind.ReferenceType, 0)\n-                                    .invokeInstruction(INVOKESPECIAL, CD_Object, \"<init>\", MTD_VOID, false)\n-                                    .returnInstruction(VoidType)\n+                            .withCode(codeb -> codeb.aload(0)\n+                                    .invokespecial(CD_Object, \"<init>\", MTD_VOID, false)\n+                                    .return_()\n","filename":"test\/jdk\/jdk\/classfile\/TempConstantPoolBuilderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-                b.constantInstruction(y);\n+                b.loadConstant(y);\n","filename":"test\/jdk\/jdk\/classfile\/TransformTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Testing TypeKind.\n+ * @bug 8331744\n+ * @run junit TypeKindTest\n+ *\/\n+import org.junit.jupiter.api.Test;\n+\n+import java.lang.classfile.TypeKind;\n+\n+import static org.junit.Assert.assertThrows;\n+\n+class TypeKindTest {\n+    @Test\n+    void testContracts() {\n+        assertThrows(NullPointerException.class, () -> TypeKind.from(null));\n+\n+        assertThrows(NullPointerException.class, () -> TypeKind.fromDescriptor(null));\n+        assertThrows(IllegalArgumentException.class, () -> TypeKind.fromDescriptor(\"\"));\n+        assertThrows(IllegalArgumentException.class, () -> TypeKind.fromDescriptor(\"int\"));\n+\n+        assertThrows(IllegalArgumentException.class, () -> TypeKind.fromNewarrayCode(-1));\n+        assertThrows(IllegalArgumentException.class, () -> TypeKind.fromNewarrayCode(21));\n+    }\n+}\n","filename":"test\/jdk\/jdk\/classfile\/TypeKindTest.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -199,2 +199,2 @@\n-                                                     mb -> mb.withCode(cb -> cb.constantInstruction(s)\n-                                                                               .returnInstruction(VoidType))));\n+                                                     mb -> mb.withCode(cb -> cb.loadConstant(s)\n+                                                                               .return_())));\n","filename":"test\/jdk\/jdk\/classfile\/Utf8EntryTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-                      .withCode(codeb -> codeb.loadInstruction(TypeKind.ReferenceType, 0)\n-                                              .invokeInstruction(INVOKESPECIAL, CD_Object, \"<init>\",\n+                      .withCode(codeb -> codeb.aload(0)\n+                                              .invokespecial(CD_Object, \"<init>\",\n@@ -60,1 +60,1 @@\n-                                              .returnInstruction(VoidType)\n+                                              .return_()\n@@ -69,4 +69,4 @@\n-                                          .constantInstruction(ICONST_1, 1)         \/\/ 0\n-                                          .storeInstruction(TypeKind.IntType, 1)          \/\/ 1\n-                                          .constantInstruction(ICONST_1, 1)         \/\/ 2\n-                                          .storeInstruction(TypeKind.IntType, 2)          \/\/ 3\n+                                          .iconst_1()         \/\/ 0\n+                                          .istore(1)          \/\/ 1\n+                                          .iconst_1()         \/\/ 2\n+                                          .istore(2)          \/\/ 3\n@@ -74,9 +74,9 @@\n-                                          .loadInstruction(TypeKind.IntType, 2)           \/\/ 4\n-                                          .constantInstruction(BIPUSH, 10)         \/\/ 5\n-                                          .branchInstruction(IF_ICMPGE, loopEnd) \/\/ 6\n-                                          .loadInstruction(TypeKind.IntType, 1)           \/\/ 7\n-                                          .loadInstruction(TypeKind.IntType, 2)           \/\/ 8\n-                                          .operatorInstruction(IMUL)             \/\/ 9\n-                                          .storeInstruction(TypeKind.IntType, 1)          \/\/ 10\n-                                          .incrementInstruction(2, 1)    \/\/ 11\n-                                          .branchInstruction(GOTO, loopTop)     \/\/ 12\n+                                          .iload(2)           \/\/ 4\n+                                          .bipush(10)         \/\/ 5\n+                                          .if_icmpge(loopEnd) \/\/ 6\n+                                          .iload(1)           \/\/ 7\n+                                          .iload(2)           \/\/ 8\n+                                          .imul()             \/\/ 9\n+                                          .istore(1)          \/\/ 10\n+                                          .iinc(2, 1)    \/\/ 11\n+                                          .goto_(loopTop)     \/\/ 12\n@@ -84,4 +84,4 @@\n-                                          .fieldInstruction(GETSTATIC, TestConstants.CD_System, \"out\", TestConstants.CD_PrintStream)   \/\/ 13\n-                                          .loadInstruction(TypeKind.IntType, 1)\n-                                          .invokeInstruction(INVOKEVIRTUAL, TestConstants.CD_PrintStream, \"println\", TestConstants.MTD_INT_VOID, false)  \/\/ 15\n-                                          .returnInstruction(VoidType);\n+                                          .getstatic(TestConstants.CD_System, \"out\", TestConstants.CD_PrintStream)   \/\/ 13\n+                                          .iload(1)\n+                                          .invokevirtual(TestConstants.CD_PrintStream, \"println\", TestConstants.MTD_INT_VOID)  \/\/ 15\n+                                          .return_();\n@@ -99,3 +99,3 @@\n-                      .withCode(codeb -> codeb.loadInstruction(ReferenceType, 0)\n-                                              .invokeInstruction(INVOKESPECIAL, CD_Object, \"<init>\", MTD_VOID, false)\n-                                              .returnInstruction(VoidType)\n+                      .withCode(codeb -> codeb.aload(0)\n+                                              .invokespecial(CD_Object, \"<init>\", MTD_VOID, false)\n+                                              .return_()\n@@ -110,4 +110,4 @@\n-                                          .constantInstruction(ICONST_1, 1)        \/\/ 0\n-                                          .storeInstruction(IntType, 1)          \/\/ 1\n-                                          .constantInstruction(ICONST_1, 1)        \/\/ 2\n-                                          .storeInstruction(IntType, 2)          \/\/ 3\n+                                          .iconst_1()        \/\/ 0\n+                                          .istore(1)          \/\/ 1\n+                                          .iconst_1()        \/\/ 2\n+                                          .istore(2)          \/\/ 3\n@@ -115,9 +115,9 @@\n-                                          .loadInstruction(IntType, 2)           \/\/ 4\n-                                          .constantInstruction(BIPUSH, 10)         \/\/ 5\n-                                          .branchInstruction(IF_ICMPGE, loopEnd) \/\/ 6\n-                                          .loadInstruction(IntType, 1)           \/\/ 7\n-                                          .loadInstruction(IntType, 2)           \/\/ 8\n-                                          .operatorInstruction(IMUL)             \/\/ 9\n-                                          .storeInstruction(IntType, 1)          \/\/ 10\n-                                          .incrementInstruction(2, 1)    \/\/ 11\n-                                          .branchInstruction(GOTO, loopTop)     \/\/ 12\n+                                          .iload(2)           \/\/ 4\n+                                          .bipush(10)         \/\/ 5\n+                                          .if_icmpge(loopEnd) \/\/ 6\n+                                          .iload(1)           \/\/ 7\n+                                          .iload(2)           \/\/ 8\n+                                          .imul()             \/\/ 9\n+                                          .istore(1)          \/\/ 10\n+                                          .iinc(2, 1)    \/\/ 11\n+                                          .goto_(loopTop)     \/\/ 12\n@@ -125,4 +125,4 @@\n-                                          .fieldInstruction(GETSTATIC, TestConstants.CD_System, \"out\", TestConstants.CD_PrintStream)   \/\/ 13\n-                                          .loadInstruction(IntType, 1)\n-                                          .invokeInstruction(INVOKEVIRTUAL, TestConstants.CD_PrintStream, \"println\", TestConstants.MTD_INT_VOID, false)  \/\/ 15\n-                                          .returnInstruction(VoidType);\n+                                          .getstatic(TestConstants.CD_System, \"out\", TestConstants.CD_PrintStream)   \/\/ 13\n+                                          .iload(1)\n+                                          .invokevirtual(TestConstants.CD_PrintStream, \"println\", TestConstants.MTD_INT_VOID)  \/\/ 15\n+                                          .return_();\n","filename":"test\/jdk\/jdk\/classfile\/WriteTest.java","additions":40,"deletions":40,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-                    codeB.nopInstruction();\n+                    codeB.nop();\n@@ -268,1 +268,1 @@\n-                    codeB.nopInstruction();\n+                    codeB.nop();\n@@ -280,1 +280,1 @@\n-                        if (ci.constantValue() instanceof Integer i) codeB.constantInstruction(i + 1);\n+                        if (ci.constantValue() instanceof Integer i) codeB.loadConstant(i + 1);\n","filename":"test\/jdk\/jdk\/classfile\/examples\/ExampleGallery.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-                cb.loadInstruction(im.typeKind(), im.slot());\n+                cb.loadLocal(im.typeKind(), im.slot());\n@@ -40,1 +40,1 @@\n-                cb.storeInstruction(im.typeKind(), im.slot());\n+                cb.storeLocal(im.typeKind(), im.slot());\n@@ -42,1 +42,1 @@\n-                cb.incrementInstruction(im.slot(), im.constant());\n+                cb.iinc(im.slot(), im.constant());\n@@ -44,1 +44,1 @@\n-                cb.branchInstruction(im.opcode(), im.target());\n+                cb.branch(im.opcode(), im.target());\n@@ -46,1 +46,1 @@\n-                cb.lookupSwitchInstruction(im.defaultTarget(), im.cases());\n+                cb.lookupswitch(im.defaultTarget(), im.cases());\n@@ -48,1 +48,1 @@\n-                cb.tableSwitchInstruction(im.lowValue(), im.highValue(), im.defaultTarget(), im.cases());\n+                cb.tableswitch(im.lowValue(), im.highValue(), im.defaultTarget(), im.cases());\n@@ -50,1 +50,1 @@\n-                cb.returnInstruction(im.typeKind());\n+                cb.return_(im.typeKind());\n@@ -52,1 +52,1 @@\n-                cb.throwInstruction();\n+                cb.athrow();\n@@ -54,1 +54,1 @@\n-                cb.fieldInstruction(im.opcode(), im.owner().asSymbol(), im.name().stringValue(), im.typeSymbol());\n+                cb.fieldAccess(im.opcode(), im.owner().asSymbol(), im.name().stringValue(), im.typeSymbol());\n@@ -56,1 +56,1 @@\n-                cb.invokeInstruction(im.opcode(), im.owner().asSymbol(), im.name().stringValue(), im.typeSymbol(), im.isInterface());\n+                cb.invoke(im.opcode(), im.owner().asSymbol(), im.name().stringValue(), im.typeSymbol(), im.isInterface());\n@@ -58,1 +58,1 @@\n-                cb.invokeDynamicInstruction(DynamicCallSiteDesc.of(im.bootstrapMethod(), im.name().stringValue(), MethodTypeDesc.ofDescriptor(im.type().stringValue()), im.bootstrapArgs().toArray(ConstantDesc[]::new)));\n+                cb.invokedynamic(DynamicCallSiteDesc.of(im.bootstrapMethod(), im.name().stringValue(), MethodTypeDesc.ofDescriptor(im.type().stringValue()), im.bootstrapArgs().toArray(ConstantDesc[]::new)));\n@@ -60,1 +60,1 @@\n-                cb.newObjectInstruction(im.className().asSymbol());\n+                cb.new_(im.className().asSymbol());\n@@ -62,1 +62,1 @@\n-                cb.newPrimitiveArrayInstruction(im.typeKind());\n+                cb.newarray(im.typeKind());\n@@ -64,1 +64,1 @@\n-                cb.newReferenceArrayInstruction(im.componentType());\n+                cb.anewarray(im.componentType());\n@@ -66,1 +66,1 @@\n-                cb.newMultidimensionalArrayInstruction(im.dimensions(), im.arrayType());\n+                cb.multianewarray(im.arrayType(), im.dimensions());\n@@ -68,1 +68,1 @@\n-                cb.typeCheckInstruction(im.opcode(), im.type().asSymbol());\n+                cb.with(TypeCheckInstruction.of(im.opcode(), im.type().asSymbol()));\n@@ -70,1 +70,1 @@\n-                cb.arrayLoadInstruction(im.typeKind());\n+                cb.arrayLoad(im.typeKind());\n@@ -72,1 +72,1 @@\n-                cb.arrayStoreInstruction(im.typeKind());\n+                cb.arrayStore(im.typeKind());\n@@ -74,1 +74,1 @@\n-                cb.stackInstruction(im.opcode());\n+                cb.with(StackInstruction.of(im.opcode()));\n@@ -76,1 +76,1 @@\n-                cb.convertInstruction(im.fromType(), im.toType());\n+                cb.conversion(im.fromType(), im.toType());\n@@ -78,1 +78,1 @@\n-                cb.operatorInstruction(im.opcode());\n+                cb.with(OperatorInstruction.of(im.opcode()));\n@@ -80,1 +80,1 @@\n-                cb.constantInstruction(im.opcode(), im.constantValue());\n+                cb.loadConstant(im.opcode(), im.constantValue());\n@@ -82,1 +82,1 @@\n-                cb.monitorInstruction(im.opcode());\n+                cb.with(MonitorInstruction.of(im.opcode()));\n@@ -84,1 +84,1 @@\n-                cb.nopInstruction();\n+                cb.nop();\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/InstructionModelToCodeBuilder.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-                        else cob.constantInstruction(null);\n+                        else cob.loadConstant(null);\n@@ -286,1 +286,1 @@\n-                            else cob.constantInstruction(iVal);\n+                            else cob.loadConstant(iVal);\n@@ -291,1 +291,1 @@\n-                            else cob.constantInstruction(lVal);\n+                            else cob.loadConstant(lVal);\n@@ -297,1 +297,1 @@\n-                            else cob.constantInstruction(fVal);\n+                            else cob.loadConstant(fVal);\n@@ -302,1 +302,1 @@\n-                            else cob.constantInstruction(dVal);\n+                            else cob.loadConstant(dVal);\n@@ -304,1 +304,1 @@\n-                        default -> cob.constantInstruction(i.constantValue());\n+                        default -> cob.loadConstant(i.constantValue());\n@@ -553,1 +553,1 @@\n-                            case INSTANCEOF -> cob.instanceof_(i.type().asSymbol());\n+                            case INSTANCEOF -> cob.instanceOf(i.type().asSymbol());\n@@ -559,1 +559,1 @@\n-                            case INSTANCEOF -> cob.instanceof_(i.type());\n+                            case INSTANCEOF -> cob.instanceOf(i.type());\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/RebuildingTransformation.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -220,1 +220,1 @@\n-                                xb.nopInstruction();\n+                                xb.nop();\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/Transforms.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n- * @modules jdk.internal.le\/jdk.internal.org.jline.terminal\n+ * @modules jdk.internal.le\/jdk.internal.org.jline\n+ *          jdk.internal.le\/jdk.internal.org.jline.terminal\n@@ -30,0 +31,1 @@\n+ *          jdk.internal.le\/jdk.internal.org.jline.terminal.spi\n@@ -42,0 +44,1 @@\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n@@ -59,1 +62,4 @@\n-        var t = new AbstractWindowsTerminal(out, \"test\", \"vt100\", null, false, SignalHandler.SIG_DFL, isWrapper) {\n+        var t = new AbstractWindowsTerminal<String>(null, SystemStream.Output, out,\n+                                                    \"test\", \"vt100\", null, false,\n+                                                    SignalHandler.SIG_DFL, \"\", 0,\n+                                                    \"\", 0, isWrapper) {\n@@ -61,1 +67,1 @@\n-            protected int getConsoleMode() {\n+            protected int getConsoleMode(String console) {\n@@ -66,1 +72,1 @@\n-            protected void setConsoleMode(int mode) {\n+            protected void setConsoleMode(String console, int mode) {\n","filename":"test\/jdk\/jdk\/internal\/jline\/AbstractWindowsTerminalTest.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8331535\n+ * @summary Verify the jdk.internal.le's console provider works properly.\n+ * @modules jdk.internal.le\n+ * @library \/test\/lib\n+ * @run main\/othervm -Djdk.console=jdk.internal.le JLineConsoleProviderTest\n+ *\/\n+\n+import java.lang.reflect.Method;\n+import java.util.Objects;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class JLineConsoleProviderTest {\n+\n+    public static void main(String... args) throws Throwable {\n+        for (Method m : JLineConsoleProviderTest.class.getDeclaredMethods()) {\n+            if (m.getName().startsWith(\"test\")) {\n+                m.invoke(new JLineConsoleProviderTest());\n+            }\n+        }\n+    }\n+\n+    void testCorrectOutputReadLine() throws Exception {\n+        doRunConsoleTest(\"testCorrectOutputReadLine\", \"inp\", \"%s\");\n+    }\n+\n+    void testCorrectOutputReadPassword() throws Exception {\n+        doRunConsoleTest(\"testCorrectOutputReadPassword\", \"inp\", \"%s\");\n+    }\n+\n+    void doRunConsoleTest(String testName,\n+                          String input,\n+                          String expectedOut) throws Exception {\n+        ProcessBuilder builder =\n+                ProcessTools.createTestJavaProcessBuilder(ConsoleTest.class.getName(),\n+                                                          testName);\n+        OutputAnalyzer output = ProcessTools.executeProcess(builder, input);\n+\n+        output.waitFor();\n+\n+        if (output.getExitValue() != 0) {\n+            throw new AssertionError(\"Unexpected return value: \" + output.getExitValue() +\n+                                     \", actualOut: \" + output.getStdout() +\n+                                     \", actualErr: \" + output.getStderr());\n+        }\n+\n+        String actualOut = output.getStdout();\n+\n+        if (!Objects.equals(expectedOut, actualOut)) {\n+            throw new AssertionError(\"Unexpected stdout content. \" +\n+                                     \"Expected: '\" + expectedOut + \"'\" +\n+                                     \", got: '\" + actualOut + \"'\");\n+        }\n+\n+        String expectedErr = \"\";\n+        String actualErr = output.getStderr();\n+\n+        if (!Objects.equals(expectedErr, actualErr)) {\n+            throw new AssertionError(\"Unexpected stderr content. \" +\n+                                     \"Expected: '\" + expectedErr + \"'\" +\n+                                     \", got: '\" + actualErr + \"'\");\n+        }\n+    }\n+\n+    public static class ConsoleTest {\n+        public static void main(String... args) {\n+            switch (args[0]) {\n+                case \"testCorrectOutputReadLine\" ->\n+                    System.console().readLine(\"%%s\");\n+                case \"testCorrectOutputReadPassword\" ->\n+                    System.console().readPassword(\"%%s\");\n+                default -> throw new UnsupportedOperationException(args[0]);\n+            }\n+\n+            System.exit(0);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/internal\/jline\/JLineConsoleProviderTest.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -30,0 +30,1 @@\n+ *          jdk.internal.le\/jdk.internal.org.jline.terminal.spi\n@@ -39,0 +40,1 @@\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n@@ -61,2 +63,5 @@\n-        new AbstractWindowsTerminal(new StringWriter(), \"\", \"windows\", Charset.forName(\"UTF-8\"),\n-                                    true, SignalHandler.SIG_DFL, in -> in) {\n+        new AbstractWindowsTerminal<String>(null, SystemStream.Output,\n+                                            new StringWriter(), \"\", \"windows\",\n+                                            Charset.forName(\"UTF-8\"), true,\n+                                            SignalHandler.SIG_DFL, \"\", 0,\n+                                            \"\", 0, in -> in) {\n@@ -64,1 +69,1 @@\n-            protected int getConsoleMode() {\n+            protected int getConsoleMode(String console) {\n@@ -68,1 +73,1 @@\n-            protected void setConsoleMode(int mode) {\n+            protected void setConsoleMode(String console, int mode) {\n","filename":"test\/jdk\/jdk\/internal\/jline\/KeyConversionTest.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,181 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8330998\n+ * @summary Verify that even if the stdout is redirected java.io.Console will\n+ *          use it for writing.\n+ * @modules jdk.internal.le\n+ * @library \/test\/lib\n+ * @run main RedirectedStdOut runRedirectAllTest\n+ * @run main\/othervm --enable-native-access=ALL-UNNAMED RedirectedStdOut runRedirectOutOnly\n+ *\/\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.lang.foreign.Arena;\n+import java.lang.foreign.FunctionDescriptor;\n+import java.lang.foreign.Linker;\n+import java.lang.foreign.MemorySegment;\n+import java.lang.foreign.SymbolLookup;\n+import java.lang.foreign.ValueLayout;\n+import java.lang.invoke.MethodHandle;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class RedirectedStdOut {\n+    private static final String OUTPUT = \"Hello!\";\n+\n+    public static void main(String... args) throws Throwable {\n+        RedirectedStdOut.class.getDeclaredMethod(args[0])\n+                              .invoke(new RedirectedStdOut());\n+    }\n+\n+    \/\/verify the case where neither stdin\/out\/err is attached to a terminal,\n+    \/\/this test is weaker, but more reliable:\n+    void runRedirectAllTest() throws Exception {\n+        ProcessBuilder builder =\n+                ProcessTools.createTestJavaProcessBuilder(ConsoleTest.class.getName());\n+        OutputAnalyzer output = ProcessTools.executeProcess(builder);\n+\n+        output.waitFor();\n+\n+        if (output.getExitValue() != 0) {\n+            throw new AssertionError(\"Unexpected return value: \" + output.getExitValue() +\n+                                     \", actualOut: \" + output.getStdout() +\n+                                     \", actualErr: \" + output.getStderr());\n+        }\n+\n+        String expectedOut = OUTPUT;\n+        String actualOut = output.getStdout();\n+\n+        if (!Objects.equals(expectedOut, actualOut)) {\n+            throw new AssertionError(\"Unexpected stdout content. \" +\n+                                     \"Expected: '\" + expectedOut + \"'\" +\n+                                     \", got: '\" + actualOut + \"'\");\n+        }\n+\n+        String expectedErr = \"\";\n+        String actualErr = output.getStderr();\n+\n+        if (!Objects.equals(expectedErr, actualErr)) {\n+            throw new AssertionError(\"Unexpected stderr content. \" +\n+                                     \"Expected: '\" + expectedErr + \"'\" +\n+                                     \", got: '\" + actualErr + \"'\");\n+        }\n+    }\n+\n+    \/\/verify the case where stdin is attached to a terminal,\n+    \/\/this test allocates pty, and it might be skipped, if the appropriate\n+    \/\/native functions cannot be found\n+    \/\/it also leaves the VM in a broken state (with a pty attached), and so\n+    \/\/should run in a separate VM instance\n+    void runRedirectOutOnly() throws Throwable {\n+        Path stdout = Path.of(\".\", \"stdout.txt\").toAbsolutePath();\n+\n+        Files.deleteIfExists(stdout);\n+\n+        Linker linker = Linker.nativeLinker();\n+        SymbolLookup stdlib = linker.defaultLookup();\n+        MemorySegment parent = Arena.global().allocate(ValueLayout.ADDRESS);\n+        MemorySegment child = Arena.global().allocate(ValueLayout.ADDRESS);\n+        Optional<MemorySegment> openptyAddress = stdlib.find(\"openpty\");\n+\n+        if (openptyAddress.isEmpty()) {\n+            System.out.println(\"Cannot lookup openpty.\");\n+            \/\/does not have forkpty, ignore\n+            return ;\n+        }\n+\n+        Optional<MemorySegment> loginttyAddress = stdlib.find(\"login_tty\");\n+\n+        if (loginttyAddress.isEmpty()) {\n+            System.out.println(\"Cannot lookup login_tty.\");\n+            \/\/does not have forkpty, ignore\n+            return ;\n+        }\n+\n+        FunctionDescriptor openttyDescriptor =\n+                FunctionDescriptor.of(ValueLayout.JAVA_INT,\n+                                      ValueLayout.ADDRESS,\n+                                      ValueLayout.ADDRESS,\n+                                      ValueLayout.ADDRESS,\n+                                      ValueLayout.ADDRESS,\n+                                      ValueLayout.ADDRESS);\n+        MethodHandle forkpty = linker.downcallHandle(openptyAddress.get(),\n+                                                     openttyDescriptor);\n+        int res = (int) forkpty.invoke(parent,\n+                                       child,\n+                                       MemorySegment.NULL,\n+                                       MemorySegment.NULL,\n+                                       MemorySegment.NULL);\n+\n+        if (res != 0) {\n+            throw new AssertionError();\n+        }\n+\n+        \/\/set the current VM's in\/out to the terminal:\n+        FunctionDescriptor loginttyDescriptor =\n+                FunctionDescriptor.of(ValueLayout.JAVA_INT,\n+                                      ValueLayout.JAVA_INT);\n+        MethodHandle logintty = linker.downcallHandle(loginttyAddress.get(),\n+                                                      loginttyDescriptor);\n+        logintty.invoke(child.get(ValueLayout.JAVA_INT, 0));\n+\n+        \/\/createTestJavaProcessBuilder logs to (current process') System.out, but\n+        \/\/that may not work since the redirect. Setting System.out to a scratch value:\n+        System.setOut(new PrintStream(new ByteArrayOutputStream()));\n+\n+        ProcessBuilder builder =\n+            ProcessTools.createTestJavaProcessBuilder(ConsoleTest.class.getName());\n+\n+        builder.inheritIO();\n+        builder.redirectOutput(stdout.toFile());\n+\n+        OutputAnalyzer output = ProcessTools.executeProcess(builder);\n+\n+        output.waitFor();\n+\n+        String expectedOut = OUTPUT;\n+        String actualOut = Files.readString(stdout);\n+\n+        if (!Objects.equals(expectedOut, actualOut)) {\n+            throw new AssertionError(\"Unexpected stdout content. \" +\n+                                     \"Expected: '\" + expectedOut + \"'\" +\n+                                     \", got: '\" + actualOut + \"'\");\n+        }\n+    }\n+\n+    public static class ConsoleTest {\n+        public static void main(String... args) {\n+            System.console().printf(OUTPUT);\n+            System.exit(0);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/internal\/jline\/RedirectedStdOut.java","additions":181,"deletions":0,"binary":false,"changes":181,"status":"added"},{"patch":"@@ -27,0 +27,1 @@\n+import java.time.Instant;\n@@ -29,1 +30,1 @@\n-import java.util.concurrent.atomic.AtomicLong;\n+import java.util.Collections;\n@@ -109,2 +110,2 @@\n-        AtomicLong outerCount = new AtomicLong();\n-        AtomicLong innerCount = new AtomicLong();\n+        List<String> outerStream = Collections.synchronizedList(new ArrayList<>());\n+        List<String> innerStream = Collections.synchronizedList(new ArrayList<>());\n@@ -112,1 +113,1 @@\n-            outer.onEvent(e -> outerCount.incrementAndGet());\n+            outer.onEvent(e -> outerStream.add(eventToText(e)));\n@@ -122,1 +123,1 @@\n-                inner.onEvent(e -> innerCount.incrementAndGet());\n+                inner.onEvent(e -> innerStream.add(eventToText(e)));\n@@ -141,1 +142,1 @@\n-                System.out.println(\"RecordingStream outer:\");\n+                System.out.println(\"Outer dump:\");\n@@ -143,2 +144,4 @@\n-                System.out.println(dumpOuter);\n-                System.out.println(\"RecordingStream inner:\");\n+                for (RecordedEvent e : dumpOuter) {\n+                    System.out.println(eventToText(e));\n+                }\n+                System.out.println(\"Inner dump:\");\n@@ -146,3 +149,12 @@\n-                System.out.println(dumpInner);\n-                System.out.println(\"Outer count: \" + outerCount);\n-                System.out.println(\"Inner count: \" + innerCount);\n+                for (RecordedEvent e : dumpInner) {\n+                    System.out.println(eventToText(e));\n+                }\n+                System.out.println();\n+                System.out.println(\"Outer stream:\");\n+                for (String s : outerStream) {\n+                    System.out.println(s);\n+                }\n+                System.out.println(\"Inner stream:\");\n+                for (String s : innerStream) {\n+                    System.out.println(s);\n+                }\n@@ -152,1 +164,1 @@\n-                if (outerCount.get() != 3) {\n+                if (outerStream.size() != 3) {\n@@ -158,1 +170,1 @@\n-                if (innerCount.get() != 1) {\n+                if (innerStream.size() != 1) {\n@@ -165,0 +177,8 @@\n+    private static String eventToText(RecordedEvent event) {\n+        Instant timestamp = event.getEndTime();\n+        long s = timestamp.getEpochSecond();\n+        int n = timestamp.getNano();\n+        String id = event.getString(\"id\");\n+        return id + \": n=\" + n + \" s=\" + s + \" t=\" + timestamp;\n+    }\n+\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/recordingstream\/TestStop.java","additions":33,"deletions":13,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import jdk.internal.org.objectweb.asm.*;\n@@ -38,0 +37,6 @@\n+import java.lang.classfile.ClassModel;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.Instruction;\n+import java.lang.classfile.instruction.InvokeInstruction;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -43,0 +48,1 @@\n+import java.util.stream.Stream;\n@@ -44,1 +50,5 @@\n-\/**\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.CD_void;\n+import static java.lang.constant.ConstantDescs.INIT_NAME;\n+\n+\/*\n@@ -53,2 +63,2 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          jdk.jfr\n+ * @modules jdk.jfr\n+ * @enablePreview\n@@ -67,1 +77,1 @@\n-    private static final String TEST_CASE_CLASS_NAME = TestCase.class.getName().replace('.', '\/');\n+    private static final ClassDesc CD_TestCase = TestCase.class.describeConstable().orElseThrow();\n@@ -103,2 +113,2 @@\n-            if (caller.className.equals(TEST_CASE_CLASS_NAME) && (callee.className.equals(TEST_CASE_CLASS_NAME)\n-                    || (callee.className.equals(\"java\/lang\/Object\") && callee.methodName.equals(\"<init>\")))) {\n+            if (caller.className.equals(CD_TestCase) && (callee.className.equals(CD_TestCase)\n+                    || (callee.className.equals(CD_Object) && callee.methodName.equals(INIT_NAME)))) {\n@@ -135,1 +145,1 @@\n-        String internalClassName = method.getType().getName().replace('.', '\/');\n+        ClassDesc classDesc = ClassDesc.of(method.getType().getName());\n@@ -137,2 +147,2 @@\n-        String methodDescriptor = method.getValue(\"descriptor\");\n-        return new MethodDesc(internalClassName, methodName, methodDescriptor);\n+        MethodTypeDesc methodDescriptor = MethodTypeDesc.ofDescriptor(method.getValue(\"descriptor\"));\n+        return new MethodDesc(classDesc, methodName, methodDescriptor);\n@@ -142,1 +152,1 @@\n-        String internalClassName = ciMethod.getValue(\"type\");\n+        ClassDesc classDesc = ClassDesc.ofInternalName(ciMethod.getValue(\"type\"));\n@@ -144,2 +154,2 @@\n-        String methodDescriptor = ciMethod.getValue(\"descriptor\");\n-        return new MethodDesc(internalClassName, methodName, methodDescriptor);\n+        MethodTypeDesc methodDescriptor = MethodTypeDesc.ofDescriptor(ciMethod.getValue(\"descriptor\"));\n+        return new MethodDesc(classDesc, methodName, methodDescriptor);\n@@ -249,1 +259,1 @@\n-    public final String className;\n+    public final ClassDesc className;\n@@ -251,5 +261,1 @@\n-    public final String descriptor;\n-\n-    public MethodDesc(Class<?> aClass, String methodName, String descriptor) {\n-        this(aClass.getName().replace('.', '\/'), methodName, descriptor);\n-    }\n+    public final MethodTypeDesc descriptor;\n@@ -257,1 +263,1 @@\n-    public MethodDesc(String className, String methodName, String descriptor) {\n+    public MethodDesc(ClassDesc className, String methodName, MethodTypeDesc descriptor) {\n@@ -261,1 +267,1 @@\n-        this.className = className.replace('.', '\/');\n+        this.className = className;\n@@ -267,2 +273,2 @@\n-        Class<?> aClass = executable.getDeclaringClass();\n-        className = Type.getInternalName(aClass).replace('.', '\/');\n+        className = executable.getDeclaringClass().describeConstable().orElseThrow();\n+        ClassDesc retType;\n@@ -270,4 +276,1 @@\n-        if (executable instanceof Constructor<?>) {\n-            methodName = \"<init>\";\n-            descriptor = Type.getConstructorDescriptor((Constructor<?>) executable);\n-        } else {\n+        if (executable instanceof Method method) {\n@@ -275,1 +278,4 @@\n-            descriptor = Type.getMethodDescriptor((Method) executable);\n+            retType = method.getReturnType().describeConstable().orElseThrow();\n+        } else {\n+            methodName = INIT_NAME;\n+            retType = CD_void;\n@@ -278,0 +284,2 @@\n+        descriptor = MethodTypeDesc.of(retType, Stream.of(executable.getParameterTypes())\n+                .map(c -> c.describeConstable().orElseThrow()).toArray(ClassDesc[]::new));\n@@ -364,2 +372,1 @@\n-        ClassWriter cw;\n-        ClassReader cr;\n+        ClassModel clm;\n@@ -367,1 +374,6 @@\n-            cr = new ClassReader(aClass.getName());\n+            var stream = ClassLoader.getSystemResourceAsStream(aClass.getName()\n+                    .replace('.', '\/') + \".class\");\n+            if (stream == null) {\n+                throw new IOException(\"Cannot find class file for \" + aClass.getName());\n+            }\n+            clm = ClassFile.of().parse(stream.readAllBytes());\n@@ -371,10 +383,0 @@\n-        cw = new ClassWriter(cr, 0);\n-        ClassVisitor cv = new ClassVisitor(Opcodes.ASM7, cw) {\n-            @Override\n-            public MethodVisitor visitMethod(int access, String name, String desc, String descriptor, String[] exceptions) {\n-                System.out.println(\"Method: \" +name);\n-                MethodVisitor mv = super.visitMethod(access, name, desc, descriptor, exceptions);\n-                return new CallTracer(aClass, name, desc, mv, calls);\n-            }\n-        };\n-        cr.accept(cv, 0);\n@@ -382,0 +384,23 @@\n+        clm.methods().forEach(mm -> {\n+            System.out.println(\"Method: \" + mm.methodName().stringValue());\n+            mm.code().ifPresent(com -> {\n+                MethodDesc caller = new MethodDesc(\n+                        clm.thisClass().asSymbol(),\n+                        mm.methodName().stringValue(),\n+                        mm.methodTypeSymbol()\n+                );\n+                int offset = 0;\n+                for (var ce : com.elements()) {\n+                    if (ce instanceof Instruction ins) {\n+                        if (ins instanceof InvokeInstruction inv) {\n+                            calls.add(new Call(caller, new MethodDesc(\n+                                    inv.owner().asSymbol(),\n+                                    inv.name().stringValue(),\n+                                    inv.typeSymbol()\n+                            ), offset));\n+                        }\n+                        offset += ins.sizeInBytes();\n+                    }\n+                }\n+            });\n+        });\n@@ -384,19 +409,0 @@\n-\n-    private static class CallTracer extends MethodVisitor {\n-        private final MethodDesc caller;\n-        private Collection<Call> calls;\n-\n-        public CallTracer(Class<?> aClass, String name, String desc, MethodVisitor mv, Collection<Call> calls) {\n-            super(Opcodes.ASM7, mv);\n-            caller = new MethodDesc(aClass.getName(), name, desc);\n-            this.calls = calls;\n-        }\n-\n-        @Override\n-        public void visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf) {\n-            Label label = new Label();\n-            visitLabel(label);\n-            super.visitMethodInsn(opcode, owner, name, desc, itf);\n-            calls.add(new Call(caller, new MethodDesc(owner, name, desc), label.getOffset()));\n-        }\n-    }\n","filename":"test\/jdk\/jdk\/jfr\/event\/compiler\/TestCompilerInlining.java","additions":67,"deletions":61,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,8 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.CodeBuilder;\n+import java.lang.classfile.CodeElement;\n+import java.lang.classfile.CodeTransform;\n+import java.lang.classfile.MethodModel;\n+import java.lang.classfile.MethodTransform;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -34,0 +42,2 @@\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n@@ -35,6 +45,0 @@\n-import jdk.internal.org.objectweb.asm.ClassReader;\n-import jdk.internal.org.objectweb.asm.ClassVisitor;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.Type;\n@@ -44,0 +48,3 @@\n+import static java.lang.constant.ConstantDescs.CD_String;\n+import static java.lang.constant.ConstantDescs.CD_void;\n+\n@@ -51,2 +58,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          java.instrument\n+ * @modules java.instrument\n@@ -55,0 +61,2 @@\n+ * @enablePreview\n+ * @comment update --enable-preview in launchTest() too\n@@ -93,1 +101,1 @@\n-    private static final String[] instrMethodKeys = {\n+    private static final Set<MethodKey> instrMethodKeys = Stream.of(\n@@ -119,11 +127,5 @@\n-        \"sun\/nio\/ch\/FileChannelImpl::write::(Ljava\/nio\/ByteBuffer;)I\",\n-    };\n-\n-    private static String getInstrMethodKey(String className, String methodName, String signature) {\n-        \/\/ This key is used to identify a class and method. It is sent to callback(key)\n-        return className + \"::\" + methodName + \"::\" + signature;\n-    }\n-\n-    private static String getClassFromMethodKey(String methodKey) {\n-        return methodKey.split(\"::\")[0];\n-    }\n+        \"sun\/nio\/ch\/FileChannelImpl::write::(Ljava\/nio\/ByteBuffer;)I\"\n+    ).map(s -> {\n+        String[] a = s.split(\"::\");\n+        return new MethodKey(a[0], a[1], a[2]);\n+    }).collect(Collectors.toUnmodifiableSet());\n@@ -132,1 +134,1 @@\n-    private static Set<String> instrClassesTarget = null;\n+    private static Set<ClassDesc> instrClassesTarget = null;\n@@ -135,1 +137,1 @@\n-    private static Set<String> instrClassesDone = null;\n+    private static Set<ClassDesc> instrClassesDone = null;\n@@ -139,5 +141,4 @@\n-        instrClassesTarget = new HashSet<String>();\n-        instrClassesDone = new HashSet<String>();\n-        for (String s : instrMethodKeys) {\n-            String className = getClassFromMethodKey(s);\n-            instrClassesTarget.add(className);\n+        instrClassesTarget = new HashSet<>();\n+        instrClassesDone = new HashSet<>();\n+        for (MethodKey key : instrMethodKeys) {\n+            instrClassesTarget.add(key.owner());\n@@ -167,3 +168,4 @@\n-            Set<Class<?>> classes = new HashSet<Class<?>>();\n-            for (String className : instrClassesTarget) {\n-                Class<?> clazz = Class.forName(className.replaceAll(\"\/\", \".\"));\n+            Set<Class<?>> classes = new HashSet<>();\n+            for (ClassDesc className : instrClassesTarget) {\n+                var desc = className.descriptorString();\n+                Class<?> clazz = Class.forName(desc.substring(1, desc.length() - 1).replace('\/', '.'));\n@@ -200,2 +202,2 @@\n-                for (String key : instrMethodKeys) {\n-                    boolean gotCallback = callbackKeys.contains(key);\n+                for (MethodKey key : instrMethodKeys) {\n+                    boolean gotCallback = callbackKeys.contains(key.toString());\n@@ -203,1 +205,1 @@\n-                    String msg = String.format(\"key:%s, expects:%b\", key, expectsCallback);\n+                    String msg = String.format(\"status:%s, key:%s, expects:%b\", status, key, expectsCallback);\n@@ -217,1 +219,1 @@\n-        private static boolean isClassInstrumented(TransformStatus status, String key) throws Throwable {\n+        private static boolean isClassInstrumented(TransformStatus status, MethodKey key) throws Throwable {\n@@ -224,1 +226,1 @@\n-                String className = getClassFromMethodKey(key);\n+                var className = key.owner();\n@@ -282,1 +284,1 @@\n-            \"--add-exports\", \"java.base\/jdk.internal.org.objectweb.asm=ALL-UNNAMED\",\n+            \"--enable-preview\",\n@@ -308,1 +310,2 @@\n-        if (!instrClassesTarget.contains(className)) {\n+        ClassDesc target = ClassDesc.ofInternalName(className);\n+        if (!instrClassesTarget.contains(target)) {\n@@ -315,23 +318,17 @@\n-        ClassReader reader = new ClassReader(bytes);\n-        ClassWriter writer = new ClassWriter(\n-                reader, ClassWriter.COMPUTE_MAXS | ClassWriter.COMPUTE_FRAMES);\n-        CallbackClassVisitor classVisitor = new CallbackClassVisitor(writer);\n-        reader.accept(classVisitor, 0);\n-        instrClassesDone.add(className);\n-        return writer.toByteArray();\n-    }\n-\n-    private static class CallbackClassVisitor extends ClassVisitor {\n-        private String className;\n-\n-        public CallbackClassVisitor(ClassVisitor cv) {\n-            super(Opcodes.ASM7, cv);\n-        }\n-\n-        @Override\n-        public void visit(\n-                int version, int access, String name, String signature,\n-                String superName, String[] interfaces) {\n-            cv.visit(version, access, name, signature, superName, interfaces);\n-            className = name;\n-        }\n+        instrClassesDone.add(target);\n+        var cf = ClassFile.of();\n+        return cf.transform(cf.parse(bytes), (clb, ce) -> {\n+            MethodKey key;\n+            if (ce instanceof MethodModel mm && instrMethodKeys.contains(key = new MethodKey(\n+                    target, mm.methodName().stringValue(), mm.methodTypeSymbol()))) {\n+                clb.transformMethod(mm, MethodTransform.transformingCode(new CodeTransform() {\n+                    private static final MethodTypeDesc MTD_callback = MethodTypeDesc.of(CD_void, CD_String);\n+                    private static final ClassDesc CD_InstrumentationCallback = InstrumentationCallback.class\n+                            .describeConstable().orElseThrow();\n+\n+                    @Override\n+                    public void atStart(CodeBuilder cb) {\n+                        cb.loadConstant(key.toString());\n+                        cb.invokestatic(CD_InstrumentationCallback, \"callback\", MTD_callback);\n+                        log(\"instrumented \" + key);\n+                    }\n@@ -339,9 +336,7 @@\n-        @Override\n-        public MethodVisitor visitMethod(\n-                int access, String methodName, String desc, String signature, String[] exceptions) {\n-            String methodKey = getInstrMethodKey(className, methodName, desc);\n-            boolean isInstrumentedMethod = Arrays.asList(instrMethodKeys).contains(methodKey);\n-            MethodVisitor mv = cv.visitMethod(access, methodName, desc, signature, exceptions);\n-            if (isInstrumentedMethod && mv != null) {\n-                mv = new CallbackMethodVisitor(mv, methodKey);\n-                log(\"instrumented \" + methodKey);\n+                    @Override\n+                    public void accept(CodeBuilder cb, CodeElement ce) {\n+                        cb.with(ce);\n+                    }\n+                }));\n+            } else {\n+                clb.with(ce);\n@@ -349,2 +344,1 @@\n-            return mv;\n-        }\n+        });\n@@ -353,6 +347,3 @@\n-    public static class CallbackMethodVisitor extends MethodVisitor {\n-        private String logMessage;\n-\n-        public CallbackMethodVisitor(MethodVisitor mv, String logMessage) {\n-            super(Opcodes.ASM7, mv);\n-            this.logMessage = logMessage;\n+    public record MethodKey(ClassDesc owner, String name, MethodTypeDesc desc) {\n+        public MethodKey(String className, String methodName, String signature) {\n+            this(ClassDesc.ofInternalName(className), methodName, MethodTypeDesc.ofDescriptor(signature));\n@@ -362,6 +353,3 @@\n-        public void visitCode() {\n-            mv.visitCode();\n-            String methodDescr = Type.getMethodDescriptor(Type.VOID_TYPE, Type.getType(String.class));\n-            String className = InstrumentationCallback.class.getName().replace('.', '\/');\n-            mv.visitLdcInsn(logMessage);\n-            mv.visitMethodInsn(Opcodes.INVOKESTATIC, className, \"callback\", methodDescr);\n+        public String toString() {\n+            var ownerDesc = owner.descriptorString();\n+            return ownerDesc.substring(1, ownerDesc.length() - 1) + \"::\" + name + \"::\" + desc.descriptorString();\n@@ -370,1 +358,0 @@\n-\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/TestInstrumentation.java","additions":72,"deletions":85,"binary":false,"changes":157,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,7 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.CodeBuilder;\n+import java.lang.classfile.CodeElement;\n+import java.lang.classfile.CodeTransform;\n+import java.lang.classfile.MethodModel;\n+import java.lang.classfile.MethodTransform;\n+import java.lang.constant.ClassDesc;\n@@ -32,7 +39,0 @@\n-import jdk.internal.org.objectweb.asm.ClassReader;\n-import jdk.internal.org.objectweb.asm.ClassVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.Type;\n-\n@@ -44,0 +44,3 @@\n+import static java.lang.constant.ConstantDescs.INIT_NAME;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n+\n@@ -51,2 +54,2 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          jdk.jartool\/sun.tools.jar\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @enablePreview\n@@ -102,0 +105,3 @@\n+        private static final ClassDesc CD_InstrumentationEventCallback = InstrumentationEventCallback.class\n+                .describeConstable().orElseThrow();\n+\n@@ -112,7 +118,19 @@\n-                ClassReader reader = new ClassReader(bytes);\n-                ClassWriter writer = new ClassWriter(reader, ClassWriter.COMPUTE_MAXS | ClassWriter.COMPUTE_FRAMES);\n-                CallbackClassVisitor classVisitor = new CallbackClassVisitor(writer);\n-\n-                \/\/ visit the reader's class by the classVisitor\n-                reader.accept(classVisitor, 0);\n-                result = writer.toByteArray();\n+                var cf = ClassFile.of();\n+                result = cf.transform(cf.parse(bytes), (clb, ce) -> {\n+                    if (ce instanceof MethodModel mm && mm.methodName().equalsString(INIT_NAME)) {\n+                        clb.transformMethod(mm, MethodTransform.transformingCode(new CodeTransform() {\n+                            @Override\n+                            public void atStart(CodeBuilder cb) {\n+                                cb.invokestatic(CD_InstrumentationEventCallback, \"callback\", MTD_void);\n+                                log(\"instrumented <init> in class \" + className);\n+                            }\n+\n+                            @Override\n+                            public void accept(CodeBuilder cb, CodeElement ce) {\n+                                cb.accept(ce);\n+                            }\n+                        }));\n+                    } else {\n+                        clb.with(ce);\n+                    }\n+                });\n@@ -126,44 +144,0 @@\n-\n-        private static class CallbackClassVisitor extends ClassVisitor {\n-            private String className;\n-\n-            public CallbackClassVisitor(ClassVisitor cv) {\n-                super(Opcodes.ASM7, cv);\n-            }\n-\n-            @Override\n-            public void visit(int version, int access, String name, String signature,\n-                              String superName, String[] interfaces) {\n-                \/\/ visit the header of the class - called per class header visit\n-                cv.visit(version, access, name, signature, superName, interfaces);\n-                className = name;\n-            }\n-\n-            @Override\n-            public MethodVisitor visitMethod(\n-                                             int access, String methodName, String desc,\n-                                             String signature, String[] exceptions) {\n-                \/\/ called for each method in a class\n-                boolean isInstrumentedMethod = methodName.contains(\"<init>\");\n-                MethodVisitor mv = cv.visitMethod(access, methodName, desc, signature, exceptions);\n-                if (isInstrumentedMethod) {\n-                    mv = new CallbackMethodVisitor(mv);\n-                    log(\"instrumented <init> in class \" + className);\n-                }\n-                return mv;\n-            }\n-        }\n-\n-        public static class CallbackMethodVisitor extends MethodVisitor {\n-            public CallbackMethodVisitor(MethodVisitor mv) {\n-                super(Opcodes.ASM7, mv);\n-            }\n-\n-            @Override\n-            public void visitCode() {\n-                mv.visitCode();\n-                String methodDescr = Type.getMethodDescriptor(Type.VOID_TYPE, Type.VOID_TYPE);\n-                String className = InstrumentationEventCallback.class.getName().replace('.', '\/');\n-                mv.visitMethodInsn(Opcodes.INVOKESTATIC, className, \"callback\", \"()V\", false);\n-            }\n-        }\n","filename":"test\/jdk\/jdk\/jfr\/javaagent\/TestEventInstrumentation.java","additions":35,"deletions":61,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,0 @@\n- *    java.base\/jdk.internal.org.objectweb.asm\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestLargeJavaEvent512k.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,0 @@\n- *    java.base\/jdk.internal.org.objectweb.asm\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestLargeJavaEvent64k.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-                b.invokeInstruction(opcode, i.owner().asSymbol(),\n+                b.invoke(opcode, i.owner().asSymbol(),\n","filename":"test\/jdk\/jdk\/lambda\/separate\/ClassToInterfaceConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -247,0 +247,1 @@\n+            t.getResponseBody().close();\n","filename":"test\/jdk\/sun\/net\/www\/http\/KeepAliveCache\/B8293562.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.security.*;\n+\n+\/**\n+ * @test\n+ * @bug 8328864\n+ * @summary Test that ProviderList.getService checks configs when\n+ * ProviderList.getProvider fails for preferred providers.\n+ * @run main\/othervm\n+ *  -Djava.security.properties=${test.src}\/app-security.properties NullPreferredList\n+ *\/\n+\n+public class NullPreferredList {\n+\n+    public static void main(final String[] args) throws Exception {\n+        final KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n+        System.out.println(\"Got keystore \" + ks);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/jca\/NullPreferredList.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+jdk.security.provider.preferred=KeyStore.PKCS12:NonExistingProvider\n","filename":"test\/jdk\/sun\/security\/jca\/app-security.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8228969 8244087 8255266 8302182\n+ * @bug 8228969 8244087 8255266 8302182 8331864\n","filename":"test\/jdk\/sun\/security\/util\/RegisteredDomain\/ParseNames.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -164,0 +164,11 @@\n+# newGTLDs\n+\n+# This is not a GTLD\n+www.site.unknown        www.site.unknown    null\n+\n+# GTLD added in 1cbd6e7\n+www.site.wed            wed                 site.wed\n+\n+# GTLD removed in 1cbd6e7\n+www.site.oldnavy        www.site.oldnavy    null\n+\n","filename":"test\/jdk\/sun\/security\/util\/RegisteredDomain\/tests.dat","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n@@ -34,1 +36,1 @@\n- * @bug 8222491 8273187\n+ * @bug 8222491 8273187 8308033\n@@ -55,1 +57,13 @@\n-        launcher.addToolArg(\"Thread.print\");\n+        boolean isVirtualThread = Thread.currentThread().isVirtual();\n+        Path threadDumpFile = null;\n+        if (isVirtualThread) {\n+            \/\/ \"jcmd Thread.print\" will not print thread dumps of virtual threads.\n+            \/\/ So we use \"Thread.dump_to_file\" command instead and dump the thread\n+            \/\/ stacktraces in a file\n+            threadDumpFile = Files.createTempFile(Path.of(\".\"), \"jcmd\", \".tdump\").toAbsolutePath();\n+            launcher.addToolArg(\"Thread.dump_to_file\");\n+            launcher.addToolArg(\"-overwrite\");\n+            launcher.addToolArg(threadDumpFile.toString());\n+        } else {\n+            launcher.addToolArg(\"Thread.print\");\n+        }\n@@ -61,1 +75,20 @@\n-        output.shouldContain(marker);\n+        if (isVirtualThread) {\n+            \/\/ verify the file containing the thread dump has the expected text\n+            try (var br = Files.newBufferedReader(threadDumpFile, cs)) {\n+                String line = null;\n+                boolean found = false;\n+                while ((line = br.readLine()) != null) {\n+                    if (line.contains(marker)) {\n+                        found = true;\n+                        break;\n+                    }\n+                }\n+                if (!found) {\n+                    output.reportDiagnosticSummary();\n+                    throw new RuntimeException(\"'\" + marker + \"' missing in thread dump in file \"\n+                            + threadDumpFile);\n+                }\n+            }\n+        } else {\n+            output.shouldContain(marker);\n+        }\n","filename":"test\/jdk\/sun\/tools\/jcmd\/JcmdOutputEncodingTest.java","additions":37,"deletions":4,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+import jtreg.SkippedException;\n+\n@@ -35,1 +37,1 @@\n- * @bug 8273187\n+ * @bug 8273187 8308033\n@@ -45,0 +47,7 @@\n+        if (Thread.currentThread().isVirtual()) {\n+            \/\/ This test runs jstack against the current process and then asserts the\n+            \/\/ presence of current thread in the stacktraces. We skip this test\n+            \/\/ when the current thread is a virtual thread since \"jstack\" command doesn't\n+            \/\/ print the stacktraces of virtual threads.\n+            throw new SkippedException(\"skipping test since current thread is a virtual thread\");\n+        }\n","filename":"test\/jdk\/sun\/tools\/jstack\/BasicJStackTest.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8329691\n+ * @modules java.base\/sun.util.locale.provider\n+ *          java.base\/sun.util.cldr\n+ * @summary Tests CLDR's `nonlikelyScript` attribute is correctly implemented\n+ *      with the CLDRLocaleProviderAdapter\n+ * @run junit NonLikelyScriptTest\n+ *\/\n+\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.stream.Stream;\n+\n+import sun.util.cldr.CLDRLocaleProviderAdapter;\n+import sun.util.locale.provider.LocaleProviderAdapter;\n+\n+import org.junit.jupiter.api.Test;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+public class NonLikelyScriptTest {\n+    private static final CLDRLocaleProviderAdapter CLDR_LOCALE_PROVIDER_ADAPTER\n+        = (CLDRLocaleProviderAdapter) LocaleProviderAdapter.forType(LocaleProviderAdapter.Type.CLDR);\n+    private static final Locale AZ_ARAB = Locale.forLanguageTag(\"az-Arab\");\n+    private static final Locale AZ_CYRL = Locale.forLanguageTag(\"az-Cyrl\");\n+    private static final Locale AZ_LATN = Locale.forLanguageTag(\"az-Latn\");\n+    private static final Locale AZ_XXXX = Locale.forLanguageTag(\"az-Xxxx\");\n+    private static final Locale RU_LATN = Locale.forLanguageTag(\"ru-Latn\");\n+    private static final Locale RU_CYRL = Locale.forLanguageTag(\"ru-Cyrl\");\n+    private static final Locale RU_XXXX = Locale.forLanguageTag(\"ru-Xxxx\");\n+    private static final Locale EN_LATN = Locale.forLanguageTag(\"en-Latn\");\n+    private static final Locale EN_DSRT = Locale.forLanguageTag(\"en-Dsrt\");\n+    private static final Locale EN_XXXX = Locale.forLanguageTag(\"en-Xxxx\");\n+    private static final Locale ZH_HANT_MO = Locale.forLanguageTag(\"zh-Hant-MO\");\n+    private static final Locale ZH_HANS_SG = Locale.forLanguageTag(\"zh-Hans-SG\");\n+    private static final Locale ZH_HANS = Locale.forLanguageTag(\"zh-Hans\");\n+    private static final Locale ZH_HANT = Locale.forLanguageTag(\"zh-Hant\");\n+    private static final Locale ZH_XXXX = Locale.forLanguageTag(\"zh-Xxxx\");\n+\n+    private static Stream<Arguments> parentLocales() {\n+\n+        return Stream.of(\n+            \/\/ likely script\n+            Arguments.of(AZ_LATN, List.of(AZ_LATN, Locale.of(\"az\"), Locale.ROOT)),\n+            Arguments.of(RU_CYRL, List.of(RU_CYRL, Locale.of(\"ru\"), Locale.ROOT)),\n+            Arguments.of(EN_LATN, List.of(EN_LATN, Locale.ENGLISH, Locale.ROOT)),\n+            Arguments.of(ZH_HANS, List.of(ZH_HANS, Locale.CHINA, Locale.CHINESE, Locale.ROOT)),\n+            Arguments.of(Locale.CHINA, List.of(Locale.forLanguageTag(\"zh-Hans-CN\"), ZH_HANS, Locale.CHINA, Locale.CHINESE, Locale.ROOT)),\n+            Arguments.of(ZH_HANS_SG, List.of(ZH_HANS_SG, ZH_HANS, Locale.forLanguageTag(\"zh-SG\"), Locale.CHINESE, Locale.ROOT)),\n+\n+            \/\/ non-likely script, explicit (as of CLDR 45)\n+            Arguments.of(AZ_ARAB, List.of(AZ_ARAB, Locale.ROOT)),\n+            Arguments.of(AZ_CYRL, List.of(AZ_CYRL, Locale.ROOT)),\n+            Arguments.of(EN_DSRT, List.of(EN_DSRT, Locale.ROOT)),\n+            Arguments.of(ZH_HANT, List.of(ZH_HANT, Locale.ROOT)),\n+            Arguments.of(Locale.TAIWAN, List.of(Locale.forLanguageTag(\"zh-Hant-TW\"), ZH_HANT, Locale.ROOT)),\n+            Arguments.of(ZH_HANT_MO, List.of(ZH_HANT_MO, Locale.forLanguageTag(\"zh-Hant-HK\"), ZH_HANT, Locale.ROOT)),\n+\n+            \/\/ non-likely script, implicit\n+            Arguments.of(AZ_XXXX, List.of(AZ_XXXX, Locale.ROOT)),\n+            Arguments.of(RU_LATN, List.of(RU_LATN, Locale.ROOT)),\n+            Arguments.of(RU_XXXX, List.of(RU_XXXX, Locale.ROOT)),\n+            Arguments.of(EN_XXXX, List.of(EN_XXXX, Locale.ROOT)),\n+            Arguments.of(ZH_XXXX, List.of(ZH_XXXX, Locale.ROOT))\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"parentLocales\")\n+    public void checkParentLocales(Locale locale, List<Locale> expected) {\n+        var actual = CLDR_LOCALE_PROVIDER_ADAPTER.getCandidateLocales(\"\", locale);\n+        assertEquals(expected, actual);\n+    }\n+}\n","filename":"test\/jdk\/sun\/util\/locale\/provider\/NonLikelyScriptTest.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,2 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.MethodTypeDesc;\n@@ -32,0 +34,1 @@\n+import org.testng.Assert;\n@@ -40,1 +43,4 @@\n- \/*\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.CD_int;\n+\n+\/*\n@@ -42,1 +48,1 @@\n- * @bug 8252919\n+ * @bug 8252919 8327499\n@@ -125,0 +131,41 @@\n+    @Test\n+    public static void testInvokers() throws IOException {\n+        var fileString = \"[LF_RESOLVE] java.lang.invoke.Invokers$Holder invoker L3I_L (fail)\";\n+        Path invokersTrace = Files.createTempFile(\"invokers\", \"trace\");\n+        Files.writeString(invokersTrace, fileString, Charset.defaultCharset());\n+        Result result = JImageGenerator.getJLinkTask()\n+                .modulePath(helper.defaultModulePath())\n+                .output(helper.createNewImageDir(\"jli-invokers\"))\n+                .option(\"--generate-jli-classes=@\" + invokersTrace.toString())\n+                .addMods(\"java.base\")\n+                .call();\n+\n+        var image = result.assertSuccess();\n+        var targetMtd = MethodTypeDesc.of(CD_Object, CD_Object, CD_Object, CD_Object, CD_int);\n+\n+        validateHolderClasses(image);\n+        JImageValidator.validate(image.resolve(\"lib\").resolve(\"modules\"),\n+                List.of(), List.of(), bytes -> {\n+                    var cf = ClassFile.of().parse(bytes);\n+                    if (!cf.thisClass().name().equalsString(\"java\/lang\/invoke\/Invokers$Holder\")) {\n+                        return;\n+                    }\n+\n+                    boolean found = false;\n+                    for (var m : cf.methods()) {\n+                        \/\/ LambdaForm.Kind\n+                        if (m.methodName().equalsString(\"invoker\") && m.methodTypeSymbol().equals(targetMtd)) {\n+                            found = true;\n+                            break;\n+                        }\n+                    }\n+                    if (!found) {\n+                        var methodsInfo = cf.methods().stream()\n+                                .map(m -> m.methodName() + m.methodTypeSymbol().displayDescriptor())\n+                                .collect(Collectors.joining(\"\\n\"));\n+\n+                        Assert.fail(\"Missing invoker L3I_L in java.lang.invoke.Invokers$Holder, found:\\n\" + methodsInfo);\n+                    }\n+                });\n+    }\n+\n","filename":"test\/jdk\/tools\/jlink\/plugins\/GenerateJLIClassesPluginTest.java","additions":50,"deletions":3,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import java.util.function.Consumer;\n@@ -175,0 +176,5 @@\n+        validate(jimage, expectedLocations, unexpectedPaths, _ -> {});\n+    }\n+\n+    public static void validate(Path jimage, List<String> expectedLocations,\n+            List<String> unexpectedPaths, Consumer<byte[]> classChecker) throws IOException {\n@@ -198,0 +204,1 @@\n+                    classChecker.accept(r);\n@@ -225,1 +232,1 @@\n-    public static void readClass(byte[] clazz) throws IOException{\n+    public static void readClass(byte[] clazz) throws IOException {\n","filename":"test\/jdk\/tools\/lib\/tests\/JImageValidator.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    List<String> MISSING_IN_MAN_PAGE = List.of(\"--no-fonts\");\n+    List<String> MISSING_IN_MAN_PAGE = List.of();\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/CheckManPageOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8331535\n+ * @summary Test the JShell tool Console handling\n+ * @modules jdk.internal.le\/jdk.internal.org.jline.reader\n+ *          jdk.jshell\/jdk.internal.jshell.tool:+open\n+ * @build ConsoleToolTest ReplToolTesting\n+ * @run testng ConsoleToolTest\n+ *\/\n+\n+\n+import org.testng.annotations.Test;\n+\n+public class ConsoleToolTest extends ReplToolTesting {\n+\n+    @Test\n+    public void testOutput() {\n+        test(\n+             a -> {assertCommandWithOutputAndTerminal(a,\n+                                                      \"System.console().readLine(\\\"%%s\\\");\\ninput\", \/\/newline automatically appended\n+                                                      \"$1 ==> \\\"input\\\"\",\n+                                                      \"\"\"\n+                                                      \\u0005System.console().readLine(\\\"%%s\\\");\n+                                                      %sinput\n+                                                      \"\"\");},\n+             a -> {assertCommandWithOutputAndTerminal(a,\n+                                                      \"System.console().readPassword(\\\"%%s\\\");\\ninput!\", \/\/newline automatically appended\n+                                                      \"$2 ==> char[6] { 'i', 'n', 'p', 'u', 't', '!' }\",\n+                                                      \"\"\"\n+                                                      \\u0005System.console().readPassword(\\\"%%s\\\");\n+                                                      %s\n+                                                      \"\"\");}\n+            );\n+    }\n+\n+    void assertCommandWithOutputAndTerminal(boolean a, String command, String out, String terminalOut) {\n+        assertCommand(a, command, out, null, null, null, null, terminalOut);\n+    }\n+\n+}\n","filename":"test\/langtools\/jdk\/jshell\/ConsoleToolTest.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -29,1 +29,1 @@\n- *          jdk.internal.le\/jdk.internal.org.jline.terminal.impl\n+ *          jdk.internal.le\/jdk.internal.org.jline.terminal.impl.exec\n@@ -38,1 +38,2 @@\n-import jdk.internal.org.jline.terminal.impl.ExecPty;\n+import jdk.internal.org.jline.terminal.impl.exec.ExecPty;\n+import jdk.internal.org.jline.terminal.spi.SystemStream;\n@@ -42,2 +43,2 @@\n-    public ExecPtyGetFlagsToSetTest(String name, TerminalProvider.Stream stream) {\n-        super(name, stream);\n+    public ExecPtyGetFlagsToSetTest(TerminalProvider provider, SystemStream stream, String name) {\n+        super(provider, stream, name);\n@@ -53,1 +54,1 @@\n-            new ExecPtyGetFlagsToSetTest(\"stty\", TerminalProvider.Stream.Output);\n+            new ExecPtyGetFlagsToSetTest(null, SystemStream.Output, \"stty\");\n","filename":"test\/langtools\/jdk\/jshell\/ExecPtyGetFlagsToSetTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.lang.reflect.Method;\n@@ -38,0 +39,1 @@\n+import java.util.function.Consumer;\n@@ -40,0 +42,1 @@\n+import jdk.jshell.JShell;\n@@ -46,0 +49,1 @@\n+import static jdk.jshell.Snippet.SubKind.MODULE_IMPORT_SUBKIND;\n@@ -171,0 +175,16 @@\n+\n+    public void testImportModule() {\n+        assertImportKeyMatch(\"import module java.base;\", \"java.base\", MODULE_IMPORT_SUBKIND, added(VALID));\n+        assertEval(\"MethodHandle m;\");\n+    }\n+\n+    @org.testng.annotations.BeforeMethod\n+    public void setUp(Method m) {\n+        switch (m.getName()) {\n+            case \"testImportModule\" ->\n+                super.setUp(bc -> bc.compilerOptions(\"--source\", System.getProperty(\"java.specification.version\"), \"--enable-preview\").remoteVMOptions(\"--enable-preview\"));\n+            default ->\n+                super.setUp(bc -> {});\n+        }\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/ImportTest.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -271,0 +271,1 @@\n+            case MODULE_IMPORT_SUBKIND:\n","filename":"test\/langtools\/jdk\/jshell\/KullaTesting.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -224,0 +224,6 @@\n+    public String getTerminalOutput() {\n+        String s = normalizeLineEndings(\"\\r\\n\", console.data.toString());\n+        console.data.reset();\n+        return s;\n+    }\n+\n@@ -479,0 +485,1 @@\n+\n@@ -535,0 +542,5 @@\n+        assertCommand(after, cmd, out, err, userinput, print, usererr, null);\n+    }\n+\n+    public void assertCommand(boolean after, String cmd, String out, String err,\n+            String userinput, String print, String usererr, String terminalOut) {\n@@ -549,0 +561,1 @@\n+            assertOutput(getTerminalOutput(), terminalOut, \"terminal output: \" + cmd);\n@@ -568,1 +581,5 @@\n-        return ANSI_CODE_PATTERN.matcher(text.replace(System.getProperty(\"line.separator\"), \"\\n\")).replaceAll(\"\");\n+        return normalizeLineEndings(System.getProperty(\"line.separator\"), text);\n+    }\n+\n+    private String normalizeLineEndings(String lineSeparator, String text) {\n+        return ANSI_CODE_PATTERN.matcher(text.replace(lineSeparator, \"\\n\")).replaceAll(\"\");\n@@ -849,0 +866,1 @@\n+        private final ByteArrayOutputStream data = new ByteArrayOutputStream();\n@@ -864,1 +882,2 @@\n-            } \/\/ For now, anything else is thrown away\n+            }\n+            data.write(b);\n","filename":"test\/langtools\/jdk\/jshell\/ReplToolTesting.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,0 +129,7 @@\n+    protected void startCheckUserOutput(Consumer<String> checkUserOutput,\n+            String... args) {\n+        runShell(args);\n+        check(userout, checkUserOutput, \"userout\");\n+        check(usererr, null, \"usererr\");\n+    }\n+\n@@ -361,0 +368,11 @@\n+    public void testPreviewEnabled() {\n+        String fn = writeToFile(\"System.out.println(\\\"prefix\\\");\\n\" +\n+                \"System.out.println(MethodHandle.class.getName());\\n\" +\n+                \"System.out.println(\\\"suffix\\\");\\n\" +\n+                \"\/exit\\n\");\n+        startCheckUserOutput(s -> assertEquals(s, \"prefix\\nsuffix\\n\"),\n+                             fn);\n+        startCheckUserOutput(s -> assertEquals(s, \"prefix\\njava.lang.invoke.MethodHandle\\nsuffix\\n\"),\n+                             \"--enable-preview\", fn);\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/StartOptionTest.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import java.util.function.Consumer;\n@@ -61,0 +62,7 @@\n+    @Override\n+    protected void startCheckUserOutput(Consumer<String> checkUserOutput, String... args) {\n+        runShell(args);\n+        check(cmdout, checkUserOutput, \"userout\");\n+        check(usererr, null, \"usererr\");\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/ToolProviderTest.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,744 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8328481 8332236\n+ * @summary Check behavior of module imports.\n+ * @library \/tools\/lib\n+ * @modules java.logging\n+ *          java.sql\n+ *          jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/com.sun.tools.javac.util\n+ * @build toolbox.ToolBox toolbox.JavacTask\n+ * @run main ImportModule\n+*\/\n+\n+import com.sun.source.tree.Tree;\n+import com.sun.source.util.TaskEvent;\n+import com.sun.source.util.TaskEvent.Kind;\n+import com.sun.source.util.TaskListener;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import toolbox.TestRunner;\n+import toolbox.JavacTask;\n+import toolbox.JavaTask;\n+import toolbox.Task;\n+import toolbox.ToolBox;\n+\n+public class ImportModule extends TestRunner {\n+\n+    private static final String SOURCE_VERSION = System.getProperty(\"java.specification.version\");\n+    private ToolBox tb;\n+\n+    public static void main(String... args) throws Exception {\n+        new ImportModule().runTests();\n+    }\n+\n+    ImportModule() {\n+        super(System.err);\n+        tb = new ToolBox();\n+    }\n+\n+    public void runTests() throws Exception {\n+        runTests(m -> new Object[] { Paths.get(m.getName()) });\n+    }\n+\n+    @Test\n+    public void testImportJavaBase(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module java.base;\n+                          public class Test {\n+                              public static void main(String... args) {\n+                                  List<String> l = new ArrayList<>();\n+                                  System.out.println(l.getClass().getName());\n+                              }\n+                          }\n+                          \"\"\");\n+\n+        Files.createDirectories(classes);\n+\n+        {\/\/with --release:\n+            new JavacTask(tb)\n+                .options(\"--enable-preview\", \"--release\", SOURCE_VERSION)\n+                .outdir(classes)\n+                .files(tb.findJavaFiles(src))\n+                .run(Task.Expect.SUCCESS)\n+                .writeAll();\n+\n+            var out = new JavaTask(tb)\n+                    .classpath(classes.toString())\n+                    .className(\"test.Test\")\n+                    .vmOptions(\"--enable-preview\")\n+                    .run()\n+                    .writeAll()\n+                    .getOutputLines(Task.OutputKind.STDOUT);\n+\n+            var expectedOut = List.of(\"java.util.ArrayList\");\n+\n+            if (!Objects.equals(expectedOut, out)) {\n+                throw new AssertionError(\"Incorrect Output, expected: \" + expectedOut +\n+                                          \", actual: \" + out);\n+\n+            }\n+        }\n+\n+        {\/\/with --source:\n+            new JavacTask(tb)\n+                .options(\"--enable-preview\", \"--source\", SOURCE_VERSION)\n+                .outdir(classes)\n+                .files(tb.findJavaFiles(src))\n+                .run(Task.Expect.SUCCESS)\n+                .writeAll();\n+\n+            var out = new JavaTask(tb)\n+                    .classpath(classes.toString())\n+                    .className(\"test.Test\")\n+                    .vmOptions(\"--enable-preview\")\n+                    .run()\n+                    .writeAll()\n+                    .getOutputLines(Task.OutputKind.STDOUT);\n+\n+            var expectedOut = List.of(\"java.util.ArrayList\");\n+\n+            if (!Objects.equals(expectedOut, out)) {\n+                throw new AssertionError(\"Incorrect Output, expected: \" + expectedOut +\n+                                          \", actual: \" + out);\n+\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void testVerifySourceLevelCheck(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module java.base;\n+                          public class Test {\n+                          }\n+                          \"\"\");\n+\n+        Files.createDirectories(classes);\n+\n+        List<String> actualErrors;\n+        List<String> expectedErrors;\n+\n+        actualErrors =\n+                new JavacTask(tb)\n+                    .options(\"--release\", \"21\", \"-XDrawDiagnostics\")\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.FAIL)\n+                    .writeAll()\n+                    .getOutputLines(Task.OutputKind.DIRECT);\n+\n+        expectedErrors = List.of(\n+                \"Test.java:2:8: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.module.imports)\",\n+                \"1 error\"\n+        );\n+\n+        if (!Objects.equals(expectedErrors, actualErrors)) {\n+            throw new AssertionError(\"Incorrect Output, expected: \" + expectedErrors +\n+                                      \", actual: \" + out);\n+\n+        }\n+        actualErrors =\n+                new JavacTask(tb)\n+                    .options(\"-XDrawDiagnostics\")\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.FAIL)\n+                    .writeAll()\n+                    .getOutputLines(Task.OutputKind.DIRECT);\n+\n+        expectedErrors = List.of(\n+                \"Test.java:2:8: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.module.imports)\",\n+                \"1 error\"\n+        );\n+\n+        if (!Objects.equals(expectedErrors, actualErrors)) {\n+            throw new AssertionError(\"Incorrect Output, expected: \" + expectedErrors +\n+                                      \", actual: \" + out);\n+\n+        }\n+    }\n+\n+    @Test\n+    public void testConflicts(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module java.logging;\n+                          import java.lang.System.*;\n+                          public class Test {\n+                              Logger l;\n+                          }\n+                          \"\"\");\n+\n+        Files.createDirectories(classes);\n+\n+        List<String> actualErrors;\n+        List<String> expectedErrors;\n+\n+        actualErrors =\n+                new JavacTask(tb)\n+                    .options(\"--enable-preview\", \"--release\", SOURCE_VERSION,\n+                             \"-XDrawDiagnostics\")\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.FAIL)\n+                    .writeAll()\n+                    .getOutputLines(Task.OutputKind.DIRECT);\n+\n+        expectedErrors = List.of(\n+                \"Test.java:5:5: compiler.err.ref.ambiguous: Logger, kindname.interface, java.lang.System.Logger, java.lang.System, kindname.class, java.util.logging.Logger, java.util.logging\",\n+                \"- compiler.note.preview.filename: Test.java, DEFAULT\",\n+                \"- compiler.note.preview.recompile\",\n+                \"1 error\"\n+        );\n+\n+        if (!Objects.equals(expectedErrors, actualErrors)) {\n+            throw new AssertionError(\"Incorrect Output, expected: \" + expectedErrors +\n+                                      \", actual: \" + out);\n+\n+        }\n+\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module java.logging;\n+                          import java.lang.System.*;\n+                          import java.lang.System.Logger;\n+                          public class Test {\n+                              Logger l;\n+                          }\n+                          \"\"\");\n+\n+        new JavacTask(tb)\n+            .options(\"--enable-preview\", \"--release\", SOURCE_VERSION)\n+            .outdir(classes)\n+            .files(tb.findJavaFiles(src))\n+            .run()\n+            .writeAll();\n+\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module java.logging;\n+                          import java.lang.System.*;\n+                          import java.util.logging.Logger;\n+                          public class Test {\n+                              Logger l;\n+                          }\n+                          \"\"\");\n+\n+        new JavacTask(tb)\n+            .options(\"--enable-preview\", \"--release\", SOURCE_VERSION)\n+            .outdir(classes)\n+            .files(tb.findJavaFiles(src))\n+            .run()\n+            .writeAll();\n+\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module java.logging;\n+                          import java.lang.System.*;\n+                          public class Test {\n+                          }\n+                          \"\"\");\n+\n+        new JavacTask(tb)\n+            .options(\"--enable-preview\", \"--release\", SOURCE_VERSION)\n+            .outdir(classes)\n+            .files(tb.findJavaFiles(src))\n+            .run()\n+            .writeAll();\n+\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module java.base;\n+                          import module java.sql;\n+                          public class Test {\n+                              Date d;\n+                          }\n+                          \"\"\");\n+\n+        actualErrors =\n+                new JavacTask(tb)\n+                    .options(\"--enable-preview\", \"--release\", SOURCE_VERSION,\n+                             \"-XDrawDiagnostics\")\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.FAIL)\n+                    .writeAll()\n+                    .getOutputLines(Task.OutputKind.DIRECT);\n+\n+        expectedErrors = List.of(\n+                \"Test.java:5:5: compiler.err.ref.ambiguous: Date, kindname.class, java.sql.Date, java.sql, kindname.class, java.util.Date, java.util\",\n+                \"- compiler.note.preview.filename: Test.java, DEFAULT\",\n+                \"- compiler.note.preview.recompile\",\n+                \"1 error\"\n+        );\n+\n+        if (!Objects.equals(expectedErrors, actualErrors)) {\n+            throw new AssertionError(\"Incorrect Output, expected: \" + expectedErrors +\n+                                      \", actual: \" + out);\n+\n+        }\n+\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module java.base;\n+                          import module java.sql;\n+                          import java.util.Date;\n+                          public class Test {\n+                              Date d;\n+                          }\n+                          \"\"\");\n+\n+        new JavacTask(tb)\n+            .options(\"--enable-preview\", \"--release\", SOURCE_VERSION)\n+            .outdir(classes)\n+            .files(tb.findJavaFiles(src))\n+            .run()\n+            .writeAll();\n+    }\n+\n+    @Test\n+    public void testNoQualifiedExports(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+\n+        Path lib = current.resolve(\"lib\");\n+        Path libSrc = lib.resolve(\"src\");\n+        Path libClasses = lib.resolve(\"classes\");\n+        tb.writeJavaFiles(libSrc,\n+                          \"\"\"\n+                          module lib {\n+                              exports api;\n+                              exports impl to use;\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package api;\n+                          public class Api {\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package impl;\n+                          public class Impl {\n+                          }\n+                          \"\"\");\n+\n+        Files.createDirectories(libClasses);\n+\n+        new JavacTask(tb)\n+            .outdir(libClasses)\n+            .files(tb.findJavaFiles(libSrc))\n+            .run()\n+            .writeAll();\n+\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module lib;\n+                          public class Test {\n+                              public static void main(String... args) {\n+                                  Api a;\n+                                  Impl i;\n+                              }\n+                          }\n+                          \"\"\");\n+\n+        Files.createDirectories(classes);\n+\n+        List<String> actualErrors;\n+        List<String> expectedErrors;\n+\n+        actualErrors =\n+                new JavacTask(tb)\n+                    .options(\"--enable-preview\", \"--release\", SOURCE_VERSION,\n+                             \"-p\", libClasses.toString(),\n+                             \"--add-modules\", \"lib\",\n+                             \"-XDrawDiagnostics\")\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.FAIL)\n+                    .writeAll()\n+                    .getOutputLines(Task.OutputKind.DIRECT);\n+\n+        expectedErrors = List.of(\n+                \"Test.java:6:9: compiler.err.cant.resolve.location: kindname.class, Impl, , , (compiler.misc.location: kindname.class, test.Test, null)\",\n+                \"- compiler.note.preview.filename: Test.java, DEFAULT\",\n+                \"- compiler.note.preview.recompile\",\n+                \"1 error\"\n+        );\n+\n+        if (!Objects.equals(expectedErrors, actualErrors)) {\n+            throw new AssertionError(\"Incorrect Output, expected: \" + expectedErrors +\n+                                      \", actual: \" + out);\n+\n+        }\n+\n+        actualErrors =\n+                new JavacTask(tb)\n+                    .options(\"--enable-preview\", \"--release\", SOURCE_VERSION,\n+                             \"-p\", libClasses.toString(),\n+                             \"-XDdev\",\n+                             \"-XDrawDiagnostics\")\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.FAIL)\n+                    .writeAll()\n+                    .getOutputLines(Task.OutputKind.DIRECT);\n+\n+        expectedErrors = List.of(\n+                \"Test.java:2:1: compiler.err.import.module.does.not.read.unnamed: lib\",\n+                \"Test.java:6:9: compiler.err.cant.resolve.location: kindname.class, Impl, , , (compiler.misc.location: kindname.class, test.Test, null)\",\n+                \"- compiler.note.preview.filename: Test.java, DEFAULT\",\n+                \"- compiler.note.preview.recompile\",\n+                \"2 errors\"\n+        );\n+\n+        if (!Objects.equals(expectedErrors, actualErrors)) {\n+            throw new AssertionError(\"Incorrect Output, expected: \" + expectedErrors +\n+                                      \", actual: \" + out);\n+\n+        }\n+\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          module test.module {\n+                          }\n+                          \"\"\");\n+\n+        actualErrors =\n+                new JavacTask(tb)\n+                    .options(\"--enable-preview\", \"--release\", SOURCE_VERSION,\n+                             \"-p\", libClasses.toString(),\n+                             \"-XDdev\",\n+                             \"-XDrawDiagnostics\")\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.FAIL)\n+                    .writeAll()\n+                    .getOutputLines(Task.OutputKind.DIRECT);\n+\n+        expectedErrors = List.of(\n+                \"Test.java:2:1: compiler.err.import.module.does.not.read: test.module, lib\",\n+                \"Test.java:6:9: compiler.err.cant.resolve.location: kindname.class, Impl, , , (compiler.misc.location: kindname.class, test.Test, null)\",\n+                \"- compiler.note.preview.filename: Test.java, DEFAULT\",\n+                \"- compiler.note.preview.recompile\",\n+                \"2 errors\"\n+        );\n+\n+        if (!Objects.equals(expectedErrors, actualErrors)) {\n+            throw new AssertionError(\"Incorrect Output, expected: \" + expectedErrors +\n+                                      \", actual: \" + out);\n+\n+        }\n+    }\n+\n+    @Test\n+    public void testTransitiveDependencies(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path lib = current.resolve(\"lib\");\n+        Path libSrc = lib.resolve(\"src\");\n+        Path libM1 = libSrc.resolve(\"m1\");\n+        tb.writeJavaFiles(libM1,\n+                          \"\"\"\n+                          module m1 {\n+                              requires transitive m2;\n+                              exports api1;\n+                              exports api2 to test;\n+                              exports api3 to m3;\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package api1;\n+                          public class Api1 {\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package api2;\n+                          public class Api2 {\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package api3;\n+                          public class Api3 {\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package impl1;\n+                          public class Impl1 {\n+                          }\n+                          \"\"\");\n+\n+        Path libM2 = libSrc.resolve(\"m2\");\n+        tb.writeJavaFiles(libM2,\n+                          \"\"\"\n+                          module m2 {\n+                              exports api4;\n+                              exports api5 to test;\n+                              exports api6 to m3;\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package api4;\n+                          public class Api4 {\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package api5;\n+                          public class Api5 {\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package api6;\n+                          public class Api6 {\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package impl2;\n+                          public class Impl2 {\n+                          }\n+                          \"\"\");\n+\n+        Path libClasses = lib.resolve(\"classes\");\n+        Files.createDirectories(libClasses);\n+\n+        new JavacTask(tb)\n+            .options(\"--enable-preview\", \"--release\", SOURCE_VERSION,\n+                     \"--module-source-path\", libSrc.toString(),\n+                     \"-XDrawDiagnostics\")\n+            .outdir(libClasses)\n+            .files(tb.findJavaFiles(libSrc))\n+            .run()\n+            .writeAll();\n+\n+        Path src = current.resolve(\"src\");\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          module test {\n+                              requires m1;\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package test;\n+                          import module m1;\n+                          public class Test1 {\n+                              Api1 a1;\n+                              Api2 a2;\n+                              Api3 a3;\n+                              Impl1 i1;\n+                              Api4 a4;\n+                              Api5 a5;\n+                              Api6 a6;\n+                              Impl2 i2;\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package test;\n+                          import module m2;\n+                          public class Test2 {\n+                              Api1 a1;\n+                              Api2 a2;\n+                              Api3 a3;\n+                              Impl1 i1;\n+                              Api4 a4;\n+                              Api5 a5;\n+                              Api6 a6;\n+                              Impl2 i2;\n+                          }\n+                          \"\"\");\n+\n+        Path classes = current.resolve(\"classes\");\n+        Files.createDirectories(classes);\n+\n+        List<String> actualErrors;\n+        List<String> expectedErrors;\n+\n+        actualErrors =\n+                new JavacTask(tb)\n+                    .options(\"--enable-preview\", \"--release\", SOURCE_VERSION,\n+                             \"--module-path\", libClasses.toString(),\n+                             \"-XDrawDiagnostics\")\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .run(Task.Expect.FAIL)\n+                    .writeAll()\n+                    .getOutputLines(Task.OutputKind.DIRECT);\n+\n+        expectedErrors = List.of(\n+                \"Test1.java:6:5: compiler.err.cant.resolve.location: kindname.class, Api3, , , (compiler.misc.location: kindname.class, test.Test1, null)\",\n+                \"Test1.java:7:5: compiler.err.cant.resolve.location: kindname.class, Impl1, , , (compiler.misc.location: kindname.class, test.Test1, null)\",\n+                \"Test1.java:10:5: compiler.err.cant.resolve.location: kindname.class, Api6, , , (compiler.misc.location: kindname.class, test.Test1, null)\",\n+                \"Test1.java:11:5: compiler.err.cant.resolve.location: kindname.class, Impl2, , , (compiler.misc.location: kindname.class, test.Test1, null)\",\n+                \"Test2.java:4:5: compiler.err.cant.resolve.location: kindname.class, Api1, , , (compiler.misc.location: kindname.class, test.Test2, null)\",\n+                \"Test2.java:5:5: compiler.err.cant.resolve.location: kindname.class, Api2, , , (compiler.misc.location: kindname.class, test.Test2, null)\",\n+                \"Test2.java:6:5: compiler.err.cant.resolve.location: kindname.class, Api3, , , (compiler.misc.location: kindname.class, test.Test2, null)\",\n+                \"Test2.java:7:5: compiler.err.cant.resolve.location: kindname.class, Impl1, , , (compiler.misc.location: kindname.class, test.Test2, null)\",\n+                \"Test2.java:10:5: compiler.err.cant.resolve.location: kindname.class, Api6, , , (compiler.misc.location: kindname.class, test.Test2, null)\",\n+                \"Test2.java:11:5: compiler.err.cant.resolve.location: kindname.class, Impl2, , , (compiler.misc.location: kindname.class, test.Test2, null)\",\n+                \"- compiler.note.preview.plural: DEFAULT\",\n+                \"- compiler.note.preview.recompile\",\n+                \"10 errors\"\n+        );\n+\n+        if (!Objects.equals(expectedErrors, actualErrors)) {\n+            throw new AssertionError(\"Incorrect Output, expected: \" + expectedErrors +\n+                                      \", actual: \" + out);\n+\n+        }\n+    }\n+\n+    @Test\n+    public void testModel(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module java.base;\n+                          public class Test {\n+                          }\n+                          \"\"\");\n+\n+        Files.createDirectories(classes);\n+        List<String> kinds = new ArrayList<>();\n+\n+        new JavacTask(tb)\n+            .options(\"--enable-preview\", \"--release\", SOURCE_VERSION)\n+            .outdir(classes)\n+            .callback(task -> {\n+                task.addTaskListener(new TaskListener() {\n+                    @Override\n+                    public void finished(TaskEvent e) {\n+                        if (e.getKind() == Kind.ANALYZE) {\n+                            for (Tree t : e.getCompilationUnit().getTypeDecls()) {\n+                                kinds.add(t.getKind().name());\n+                            }\n+                        }\n+                    }\n+                });\n+            })\n+            .files(tb.findJavaFiles(src))\n+            .run(Task.Expect.SUCCESS)\n+            .writeAll();\n+\n+        List<String> expectedKinds = List.of(\n+            \"CLASS\"\n+        );\n+\n+        if (!Objects.equals(expectedKinds, kinds)) {\n+            throw new AssertionError(\"Incorrect Output, expected: \" + expectedKinds +\n+                                      \", actual: \" + kinds);\n+\n+        }\n+    }\n+\n+    @Test\n+    public void testModelDisambiguation(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module.*;\n+                          import module.ModuleClass;\n+                          import module.module.*;\n+                          import module.module.ModuleModuleClass;\n+                          public class Test {\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package module;\n+                          public class ModuleClass{\n+                          }\n+                          \"\"\",\n+                          \"\"\"\n+                          package module.module;\n+                          public class ModuleModuleClass {\n+                          }\n+                          \"\"\");\n+\n+        Files.createDirectories(classes);\n+        List<String> kinds = new ArrayList<>();\n+\n+        new JavacTask(tb)\n+            .options(\"--enable-preview\", \"--release\", SOURCE_VERSION)\n+            .outdir(classes)\n+            .files(tb.findJavaFiles(src))\n+            .run(Task.Expect.SUCCESS)\n+            .writeAll();\n+    }\n+\n+    @Test\n+    public void testImplicitlyDeclaredClass(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeFile(src.resolve(\"Test.java\"),\n+                     \"\"\"\n+                     import module java.base;\n+                     void main() {\n+                     }\n+                     \"\"\");\n+\n+        Files.createDirectories(classes);\n+\n+        new JavacTask(tb)\n+            .options(\"--enable-preview\", \"--release\", SOURCE_VERSION)\n+            .outdir(classes)\n+            .files(tb.findJavaFiles(src))\n+            .run(Task.Expect.SUCCESS)\n+            .writeAll();\n+    }\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/ImportModule.java","additions":744,"deletions":0,"binary":false,"changes":744,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ \/\/ key: compiler.misc.feature.module.imports\n+ \/\/ key: compiler.warn.preview.feature.use.plural\n+ \/\/ options: --release ${jdk.version} --enable-preview -Xlint:preview\n+\n+import module java.base;\n+\n+public class ImportModule {\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImportModule.java","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.import.module.does.not.read\n+\/\/ key: compiler.note.preview.filename\n+\/\/ key: compiler.note.preview.recompile\n+\/\/ options: --release ${jdk.version} --enable-preview\n+module m {}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImportModuleDoesNotRead\/module-info.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,26 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import module java.compiler;\n+\n+public class Test {}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImportModuleDoesNotRead\/test\/Test.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.import.module.does.not.read.unnamed\n+\/\/ key: compiler.note.preview.filename\n+\/\/ key: compiler.note.preview.recompile\n+\/\/ options: --release ${jdk.version} --enable-preview --limit-modules java.base\n+\n+import module java.compiler;\n+\n+public class ImportModuleDoesNotReadUnnamed {\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImportModuleDoesNotReadUnnamed.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ \/\/ key: compiler.err.import.module.not.found\n+ \/\/ key: compiler.note.preview.filename\n+ \/\/ key: compiler.note.preview.recompile\n+ \/\/ options: --release ${jdk.version} --enable-preview\n+\n+import module unknown;\n+\n+public class ImportModuleNotFound {\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImportModuleNotFound.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/langtools\/tools\/javac\/launcher\/BasicSourceLauncherTests.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/langtools\/tools\/javac\/launcher\/ModuleSourceLauncherTests.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/langtools\/tools\/javac\/launcher\/MultiFileSourceLauncherTests.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/langtools\/tools\/javac\/launcher\/ProgramDescriptorTests.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/langtools\/tools\/javac\/launcher\/Run.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/langtools\/tools\/javac\/launcher\/src\/p\/q\/CLTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8304487\n+ * @bug 8304487 8327683 8330387\n@@ -45,0 +45,1 @@\n+        assertEquals(true,  wideningReferenceConversionUnboxing3());\n@@ -117,0 +118,5 @@\n+    public static boolean wideningReferenceConversionUnboxing3() {\n+        R_generic<Integer> i = new R_generic<Integer>(0x1000000);\n+        return i instanceof R_generic(float _);\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfPatternOpWithRecordPatterns.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8304487 8325257\n+ * @bug 8304487 8325257 8327683 8330387\n@@ -47,0 +47,1 @@\n+        assertEquals(true,  wideningReferenceConversionUnboxing3(0x1000000));\n@@ -124,0 +125,4 @@\n+    public static <T extends Integer> boolean wideningReferenceConversionUnboxing3(T i) {\n+        return i instanceof float ff;\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfPatternOpWithTopLevelPatterns.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8304487 8325257\n+ * @bug 8304487 8325257 8327683 8330387\n@@ -47,0 +47,1 @@\n+        assertEquals(true,  wideningReferenceConversionUnboxing3(0x1000000));\n@@ -124,0 +125,4 @@\n+    public static <T extends Integer> boolean wideningReferenceConversionUnboxing3(T i) {\n+        return i instanceof float;\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfTypeComparisonOp.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -264,0 +264,4 @@\n+\n+    public static <T extends Integer> boolean wideningReferenceConversionUnboxingAndNarrowingPrimitive(T i) {\n+        return i instanceof byte b;  \/\/ not allowed as a conversion\n+    }\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchErrors.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+PrimitivePatternsSwitchErrors.java:266:16: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: T, byte)\n@@ -46,1 +47,1 @@\n-43 errors\n\\ No newline at end of file\n+44 errors\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchErrors.out","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,157 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/**\n+ * @test\n+ * @bug 8326404\n+ * @summary Assertion error when trying to compile switch with fallthrough with pattern\n+ * @compile T8326404.java\n+ * @run main T8326404\n+ *\/\n+public class T8326404 {\n+    private static final record R<T>(T a) {}\n+\n+    public static void main(String[] args) {\n+        assertEquals(4, run1(\"\"));\n+        assertEquals(3, run1(new R(\"\")));\n+        assertEquals(2, run1(new R(42)));\n+\n+        assertEquals(2, run1_break1(\"\"));\n+        assertEquals(1, run1_break1(new R(\"\")));\n+        assertEquals(2, run1_break1(new R(42)));\n+\n+        assertEquals(3, run2(\"\"));\n+        assertEquals(4, run2(new R(\"\")));\n+        assertEquals(2, run2(new R(42)));\n+\n+        assertEquals(1, run2_break1(\"\"));\n+        assertEquals(2, run2_break1(new R(\"\")));\n+        assertEquals(2, run2_break1(new R(42)));\n+\n+        assertEquals(2, run3(\"\"));\n+        assertEquals(4, run3(new R(\"\")));\n+        assertEquals(3, run3(new R(42)));\n+\n+        assertEquals(2, run3_break1(\"\"));\n+        assertEquals(2, run3_break1(new R(\"\")));\n+        assertEquals(1, run3_break1(new R(42)));\n+    }\n+\n+    private static int run1(Object o) {\n+        int i = 0;\n+        switch (o) {\n+            case String _:\n+                i++;\n+            case R(String _):\n+                i++;\n+            case R(Integer _):\n+                i++;\n+            default:\n+                i++;\n+        }\n+        return i;\n+    }\n+\n+    private static int run1_break1(Object o) {\n+        int i = 0;\n+        switch (o) {\n+            case String s:\n+                i++;\n+            case R(String _):\n+                i++;\n+                break;\n+            case R(Integer _):\n+                i++;\n+            default:\n+                i++;\n+        }\n+        return i;\n+    }\n+\n+    private static int run2(Object o) {\n+        int i = 0;\n+        switch (o) {\n+            case R(String _):\n+                i++;\n+            case String _:\n+                i++;\n+            case R(Integer _):\n+                i++;\n+            default:\n+                i++;\n+        }\n+        return i;\n+    }\n+\n+    private static int run2_break1(Object o) {\n+        int i = 0;\n+        switch (o) {\n+            case R(String _):\n+                i++;\n+            case String _:\n+                i++;\n+                break;\n+            case R(Integer _):\n+                i++;\n+            default:\n+                i++;\n+        }\n+        return i;\n+    }\n+\n+    private static int run3(Object o) {\n+        int i = 0;\n+        switch (o) {\n+            case R(String _):\n+                i++;\n+            case R(Integer _):\n+                i++;\n+            case String _:\n+                i++;\n+            default:\n+                i++;\n+        }\n+        return i;\n+    }\n+\n+    private static int run3_break1(Object o) {\n+        int i = 0;\n+        switch (o) {\n+            case R(String _):\n+                i++;\n+            case R(Integer _):\n+                i++;\n+                break;\n+            case String _:\n+                i++;\n+            default:\n+                i++;\n+        }\n+        return i;\n+    }\n+\n+    static void assertEquals(int expected, int actual) {\n+        if (expected != actual) {\n+            throw new AssertionError(\"Expected: \" + expected + \", but got: \" + actual);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8326404.java","additions":157,"deletions":0,"binary":false,"changes":157,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8331027\n+ * @summary Verify classfile inside ct.sym\n+ * @enablePreview\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/com.sun.tools.javac.platform\n+ *          jdk.compiler\/com.sun.tools.javac.util:+open\n+ * @build toolbox.ToolBox VerifyCTSymClassFiles\n+ * @run main VerifyCTSymClassFiles\n+ *\/\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.attribute.ModuleMainClassAttribute;\n+import java.net.URISyntaxException;\n+import java.nio.file.FileSystem;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+public class VerifyCTSymClassFiles {\n+\n+    public static void main(String... args) throws IOException, URISyntaxException {\n+        VerifyCTSymClassFiles t = new VerifyCTSymClassFiles();\n+\n+        t.checkClassFiles();\n+    }\n+\n+    void checkClassFiles() throws IOException {\n+        Path ctSym = Paths.get(System.getProperty(\"java.home\"), \"lib\", \"ct.sym\");\n+\n+        if (!Files.exists(ctSym)) {\n+            \/\/no ct.sym, nothing to check:\n+            return ;\n+        }\n+        try (FileSystem fs = FileSystems.newFileSystem(ctSym)) {\n+            Files.walk(fs.getRootDirectories().iterator().next())\n+                 .filter(p -> Files.isRegularFile(p))\n+                 .forEach(p -> checkClassFile(p));\n+        }\n+    }\n+\n+    void checkClassFile(Path p) {\n+        if (!\"module-info.sig\".equals(p.getFileName().toString())) {\n+            return ;\n+        }\n+        try {\n+            ClassFile.of().parse(p).attributes().forEach(attr -> {\n+                if (attr instanceof ModuleMainClassAttribute mmca) {\n+                    mmca.mainClass();\n+                }\n+            });\n+        } catch (IOException ex) {\n+            throw new UncheckedIOException(ex);\n+        }\n+    }\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/platform\/VerifyCTSymClassFiles.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8072480 8277106\n+ * @bug 8072480 8277106 8331027\n@@ -28,0 +28,1 @@\n+ * @enablePreview\n@@ -104,0 +105,3 @@\n+                                              \"--enable-preview\",\n+                                              \"--source\",\n+                                              \"\" + System.getProperty(\"java.specification.version\"),\n","filename":"test\/langtools\/tools\/javac\/platform\/createsymbols\/CreateSymbolsTest.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,0 +29,5 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.ClassModel;\n+import java.lang.classfile.attribute.ModuleAttribute;\n+import java.lang.classfile.attribute.ModulePackagesAttribute;\n+import java.lang.constant.PackageDesc;\n@@ -61,8 +66,5 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.Attributes;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ClassWriter;\n-import com.sun.tools.classfile.ConstantPool;\n-import com.sun.tools.classfile.ConstantPool.CPInfo;\n-import com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8_info;\n-import com.sun.tools.classfile.ModulePackages_attribute;\n+import java.io.UncheckedIOException;\n+import java.lang.classfile.attribute.ModuleMainClassAttribute;\n+import java.lang.constant.ClassDesc;\n+import java.util.Objects;\n+import java.util.function.Consumer;\n@@ -984,0 +986,5 @@\n+        return prepareVersionedCTSym(code7, code8, _ -> {});\n+    }\n+\n+    Path prepareVersionedCTSym(String[] code7, String[] code8,\n+                               Consumer<Path> adjustClassFiles) throws Exception {\n@@ -989,1 +996,1 @@\n-        compileAndPack(output, ver7Jar, code7);\n+        compileAndPack(output, ver7Jar, adjustClassFiles, code7);\n@@ -991,1 +998,1 @@\n-        compileAndPack(output, ver8Jar, code8);\n+        compileAndPack(output, ver8Jar, adjustClassFiles, code8);\n@@ -1051,0 +1058,100 @@\n+    @Test\n+    void testModuleMainClass() throws Exception {\n+        ClassFile cf = ClassFile.of();\n+        ToolBox tb = new ToolBox();\n+        String testClasses = System.getProperty(\"test.classes\");\n+        Path output = Paths.get(testClasses, \"test-data\" + i++);\n+        deleteRecursively(output);\n+        Files.createDirectories(output);\n+        Path ver9Jar = output.resolve(\"9.jar\");\n+        compileAndPack(output,\n+                       ver9Jar,\n+                       classesDir -> {\n+                           try {\n+                               Path moduleInfo = classesDir.resolve(\"module-info.class\");\n+                               byte[] newClassData =\n+                                       cf.transform(cf.parse(moduleInfo),\n+                                                    (builder, element) -> {\n+                                                        builder.with(element);\n+                                                        if (element instanceof ModuleAttribute) {\n+                                                            builder.with(ModuleMainClassAttribute.of(ClassDesc.of(\"main.Main\")));\n+                                                        }\n+                                                    });\n+                               try (OutputStream out = Files.newOutputStream(moduleInfo)) {\n+                                   out.write(newClassData);\n+                               }\n+                           } catch (IOException ex) {\n+                               throw new UncheckedIOException(ex);\n+                           }\n+                       },\n+                       \"\"\"\n+                       module m {\n+                       }\n+                       \"\"\",\n+                       \"\"\"\n+                       package main;\n+                       public class Main {}\n+                       \"\"\");\n+\n+\n+        Path ctSym = output.resolve(\"ct.sym\");\n+\n+        deleteRecursively(ctSym);\n+\n+        CreateSymbols.ALLOW_NON_EXISTING_CLASSES = true;\n+        CreateSymbols.EXTENSION = \".class\";\n+\n+        List<VersionDescription> versions =\n+                Arrays.asList(new VersionDescription(ver9Jar.toAbsolutePath().toString(), \"9\", null));\n+\n+        ExcludeIncludeList acceptAll = new ExcludeIncludeList(null, null) {\n+            @Override public boolean accepts(String className, boolean includePrivateClasses) {\n+                return true;\n+            }\n+        };\n+        new CreateSymbols().createBaseLine(versions, acceptAll, ctSym, new String[0]);\n+        Path symbolsDesc = ctSym.resolve(\"symbols\");\n+        Path modules = ctSym.resolve(\"modules\");\n+        Path modulesList = ctSym.resolve(\"modules-list\");\n+\n+        Files.createDirectories(modules);\n+        try (Writer w = Files.newBufferedWriter(modulesList)) {}\n+\n+        Path classesZip = output.resolve(\"classes.zip\");\n+        Path classesDir = output.resolve(\"classes\");\n+\n+        new CreateSymbols().createSymbols(null, symbolsDesc.toAbsolutePath().toString(), classesZip.toAbsolutePath().toString(), 0, \"9\", \"\", modules.toString(), modulesList.toString());\n+\n+        try (JarFile jf = new JarFile(classesZip.toFile())) {\n+            Enumeration<JarEntry> en = jf.entries();\n+\n+            while (en.hasMoreElements()) {\n+                JarEntry je = en.nextElement();\n+                if (je.isDirectory()) continue;\n+                Path target = classesDir.resolve(je.getName());\n+                Files.createDirectories(target.getParent());\n+                Files.copy(jf.getInputStream(je), target);\n+            }\n+        }\n+\n+        Path moduleInfo = classesDir.resolve(\"9\")\n+                                    .resolve(\"m\")\n+                                    .resolve(\"module-info.class\");\n+\n+        cf.parse(moduleInfo)\n+          .attributes()\n+          .stream()\n+          .filter(attr -> attr instanceof ModuleMainClassAttribute)\n+          .forEach(attr -> {\n+              String expectedMain = \"Lmain\/Main;\";\n+              String mainClass =\n+                      ((ModuleMainClassAttribute) attr).mainClass()\n+                                                       .asSymbol()\n+                                                       .descriptorString();\n+              if (!Objects.equals(expectedMain, mainClass)) {\n+                  throw new AssertionError(\"Expected \" + expectedMain + \" as a main class, \" +\n+                                           \"but got: \" + mainClass);\n+              }\n+          });\n+    }\n+\n@@ -1052,0 +1159,5 @@\n+        compileAndPack(output, outputFile, _ -> {}, code);\n+    }\n+\n+    void compileAndPack(Path output, Path outputFile,\n+                        Consumer<Path> adjustClassFiles, String... code) throws Exception {\n@@ -1068,17 +1180,10 @@\n-            ClassFile cf = ClassFile.read(moduleInfo);\n-            List<CPInfo> cp = new ArrayList<>();\n-            cp.add(null);\n-            cf.constant_pool.entries().forEach(cp::add);\n-            Map<String, Attribute> attrs = new HashMap<>(cf.attributes.map);\n-            int[] encodedPackages = new int[packages.size()];\n-            int i = 0;\n-            for (String p : packages) {\n-                int nameIndex = cp.size();\n-                cp.add(new CONSTANT_Utf8_info(p));\n-                encodedPackages[i++] = cp.size();\n-                cp.add(new ConstantPool.CONSTANT_Package_info(null, nameIndex));\n-            }\n-            int attrName = cp.size();\n-            cp.add(new CONSTANT_Utf8_info(Attribute.ModulePackages));\n-            attrs.put(Attribute.ModulePackages, new ModulePackages_attribute(attrName, encodedPackages));\n-            ClassFile newFile = new ClassFile(cf.magic, cf.minor_version, cf.major_version, new ConstantPool(cp.toArray(new CPInfo[0])), cf.access_flags, cf.this_class, cf.super_class, cf.interfaces, cf.fields, cf.methods, new Attributes(attrs));\n+            ClassFile cf = ClassFile.of();\n+            ClassModel cm = cf.parse(moduleInfo);\n+            byte[] newData = cf.transform(cm, (builder, element) -> {\n+                builder.with(element);\n+                if (element instanceof ModuleAttribute) {\n+                    builder.with(ModulePackagesAttribute.ofNames(packages.stream()\n+                                                                         .map(pack -> PackageDesc.of(pack))\n+                                                                         .toList()));\n+                }\n+            });\n@@ -1086,1 +1191,1 @@\n-                new ClassWriter().write(newFile, out);\n+                out.write(newData);\n@@ -1089,0 +1194,1 @@\n+        adjustClassFiles.accept(scratch);\n","filename":"test\/langtools\/tools\/javac\/platform\/createsymbols\/CreateSymbolsTestImpl.java","additions":134,"deletions":28,"binary":false,"changes":162,"status":"modified"},{"patch":"@@ -0,0 +1,137 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8328481\n+ * @summary Verify the Trees model for module imports\n+ * @library \/tools\/lib\n+ * @modules java.logging\n+ *          java.sql\n+ *          jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/com.sun.tools.javac.util\n+ * @build toolbox.ToolBox toolbox.JavacTask\n+ * @run main Imports\n+*\/\n+\n+import com.sun.source.tree.ImportTree;\n+import com.sun.source.util.TaskEvent;\n+import com.sun.source.util.TaskEvent.Kind;\n+import com.sun.source.util.TaskListener;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import toolbox.TestRunner;\n+import toolbox.JavacTask;\n+import toolbox.Task;\n+import toolbox.ToolBox;\n+\n+public class Imports extends TestRunner {\n+\n+    private static final String SOURCE_VERSION = System.getProperty(\"java.specification.version\");\n+    private ToolBox tb;\n+\n+    public static void main(String... args) throws Exception {\n+        new Imports().runTests();\n+    }\n+\n+    Imports() {\n+        super(System.err);\n+        tb = new ToolBox();\n+    }\n+\n+    public void runTests() throws Exception {\n+        runTests(m -> new Object[] { Paths.get(m.getName()) });\n+    }\n+\n+    @Test\n+    public void testModuleImport(Path base) throws Exception {\n+        Path current = base.resolve(\".\");\n+        Path src = current.resolve(\"src\");\n+        Path classes = current.resolve(\"classes\");\n+        tb.writeJavaFiles(src,\n+                          \"\"\"\n+                          package test;\n+                          import module java.base;\n+                          public class Test {\n+                          }\n+                          \"\"\");\n+\n+        Files.createDirectories(classes);\n+\n+        AtomicInteger seenImports = new AtomicInteger(-1);\n+\n+        new JavacTask(tb)\n+            .options(\"--enable-preview\", \"--release\", SOURCE_VERSION)\n+            .outdir(classes)\n+            .files(tb.findJavaFiles(src))\n+            .callback(task -> {\n+                task.addTaskListener(new TaskListener() {\n+                    @Override\n+                    public void finished(TaskEvent e) {\n+                        if (e.getKind() != Kind.PARSE) {\n+                            return ;\n+                        }\n+\n+                        var imports = e.getCompilationUnit().getImports();\n+\n+                        seenImports.set(imports.size());\n+\n+                        if (imports.size() != 1) {\n+                            throw new AssertionError(\"Exception 1 import, \" +\n+                                                     \"but got: \" + imports.size());\n+                        }\n+\n+                        ImportTree it = imports.get(0);\n+\n+                        if (!it.isModule()) {\n+                            throw new AssertionError(\"Expected module import, but got ordinary one.\");\n+                        }\n+\n+                        if (!\"java.base\".equals(it.getQualifiedIdentifier().toString())) {\n+                            throw new AssertionError(\"Expected module import for java.base, \" +\n+                                                     \"but got: \" + it.getQualifiedIdentifier());\n+                        }\n+\n+                        String expectedImportToString = \"import module java.base;\\n\";\n+                        String actualImportToString = it.toString()\n+                                                        .replaceAll(\"\\\\R\", \"\\n\");\n+\n+                        if (!expectedImportToString.equals(actualImportToString)) {\n+                            throw new AssertionError(\"Expected '\" + expectedImportToString + \"', \" +\n+                                                     \"but got: '\" + it + \"'\");\n+                        }\n+                    }\n+                });\n+            })\n+            .run(Task.Expect.SUCCESS);\n+\n+        if (seenImports.get() == (-1)) {\n+            throw new AssertionError(\"Did not verify any imports!\");\n+        }\n+    }\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/tree\/Imports.java","additions":137,"deletions":0,"binary":false,"changes":137,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -315,15 +315,8 @@\n-            switch (type.wildcardIndicator()) {\n-                case UNBOUNDED -> {\n-                    return \"W{?}\";\n-                }\n-                case EXTENDS -> {\n-                    return \"W{e,\" + print(type.boundType().get()) + \"}\";\n-                }\n-                case SUPER -> {\n-                    return \"W{s,\" + print(type.boundType().get()) + \"}\";\n-                }\n-                default -> {\n-                    if (type.boundType().isPresent()) return print(type.boundType().get());\n-                    else throw new AssertionError();\n-                }\n-            }\n+            return switch (type) {\n+                case Signature.TypeArg.Unbounded _ -> \"W{?}\";\n+                case Signature.TypeArg.Bounded b -> switch (b.wildcardIndicator()) {\n+                    case EXTENDS -> \"W{e,\" + print(b.boundType()) + \"}\";\n+                    case SUPER -> \"W{s,\" + print(b.boundType()) + \"}\";\n+                    case NONE -> print(b.boundType());\n+                };\n+            };\n","filename":"test\/langtools\/tools\/javap\/classfile\/6888367\/T6888367.java","additions":9,"deletions":16,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -95,0 +95,1 @@\n+                                \"java.base\/jdk.internal.javac\",\n","filename":"test\/langtools\/tools\/jdeps\/listdeps\/ListModuleDeps.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -750,0 +750,2 @@\n+        private final static Pattern importModulePattern =\n+                Pattern.compile(\"import\\\\s+module\\\\s+(((?:\\\\w+\\\\.)*)\\\\w+);\");\n@@ -764,9 +766,4 @@\n-            StringBuilder sb = new StringBuilder();\n-            Matcher matcher = commentPattern.matcher(source);\n-            int start = 0;\n-            while (matcher.find()) {\n-                sb.append(source, start, matcher.start());\n-                start = matcher.end();\n-            }\n-            sb.append(source.substring(start));\n-            source = sb.toString();\n+            source = removeMatchingSpans(source, commentPattern);\n+            source = removeMatchingSpans(source, importModulePattern);\n+\n+            Matcher matcher;\n@@ -798,0 +795,14 @@\n+\n+        static String removeMatchingSpans(String source, Pattern toRemove) {\n+            StringBuilder sb = new StringBuilder();\n+            Matcher matcher = toRemove.matcher(source);\n+            int start = 0;\n+\n+            while (matcher.find()) {\n+                sb.append(source, start, matcher.start());\n+                start = matcher.end();\n+            }\n+\n+            sb.append(source.substring(start));\n+            return sb.toString();\n+        }\n","filename":"test\/langtools\/tools\/lib\/toolbox\/ToolBox.java","additions":20,"deletions":9,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-                \"isHardenedOSX\", \"hasOSXPlistEntries\", \"isOracleLinux7\");\n+                \"isHardenedOSX\", \"hasOSXPlistEntries\", \"isOracleLinux7\", \"isOnWayland\");\n","filename":"test\/lib-test\/jdk\/test\/lib\/TestMutuallyExclusivePlatformPredicates.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -476,0 +476,9 @@\n+\n+    \/**\n+     * Checks if the current system is running on Wayland display server on Linux.\n+     *\n+     * @return {@code true} if the system is running on Wayland display server\n+     *\/\n+    public static boolean isOnWayland() {\n+        return System.getenv(\"WAYLAND_DISPLAY\") != null;\n+    }\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.java.lang.classfile;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.lang.classfile.TypeKind;\n+import java.lang.constant.ClassDesc;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Random;\n+import java.util.concurrent.TimeUnit;\n+\n+\/**\n+ * Performance of conversion from type descriptor objects to type kind.\n+ *\/\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Warmup(iterations = 3, time = 2)\n+@Measurement(iterations = 6, time = 1)\n+@Fork(jvmArgsAppend = \"--enable-preview\", value = 1)\n+@State(Scope.Thread)\n+public class TypeKindBench {\n+\n+    public enum ClassType {\n+        PRIMITIVE, REFERENCE, MIXED;\n+    }\n+\n+    @Param\n+    ClassType type;\n+    Class<?>[] classes;\n+    ClassDesc[] classDescs;\n+\n+    @Setup\n+    public void setup() {\n+        var references = List.of(Character.class, String.class, Integer.class,\n+                Long.class, Object.class, int[].class, TypeKindBench.class,\n+                Byte[].class, boolean[][].class);\n+        var primitives = List.of(int.class, long.class, void.class, double.class,\n+                float.class, boolean.class, char.class, short.class, byte.class);\n+        final List<Class<?>> candidates = switch (type) {\n+            case REFERENCE -> references;\n+            case PRIMITIVE -> primitives;\n+            case MIXED -> {\n+                var list = new ArrayList<Class<?>>(references.size() + primitives.size());\n+                list.addAll(references);\n+                list.addAll(primitives);\n+                yield list;\n+            }\n+        };\n+\n+        \/\/ Use fixed seed to ensure results are comparable across\n+        \/\/ different JVMs\n+        classes = new Random(0xbf5fe40dd887d9e2L)\n+                .ints(100, 0, candidates.size())\n+                .mapToObj(candidates::get)\n+                .toArray(Class<?>[]::new);\n+        classDescs = Arrays.stream(classes)\n+                .map(cl -> cl.describeConstable().orElseThrow())\n+                .toArray(ClassDesc[]::new);\n+    }\n+\n+    @Benchmark\n+    public void fromClasses(Blackhole bh) {\n+        for (var clz : classes) {\n+            bh.consume(TypeKind.from(clz));\n+        }\n+    }\n+\n+    @Benchmark\n+    public void fromClassDescs(Blackhole bh) {\n+        for (var clz : classDescs) {\n+            bh.consume(TypeKind.from(clz));\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/classfile\/TypeKindBench.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.lang.foreign.MemoryLayout;\n@@ -40,0 +41,2 @@\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.VarHandle;\n@@ -60,0 +63,7 @@\n+    static final VarHandle VH_SEQ_INT = bindToZeroOffset(MemoryLayout.sequenceLayout(ELEM_SIZE, JAVA_INT).varHandle(PathElement.sequenceElement()));\n+    static final VarHandle VH_SEQ_INT_UNALIGNED = bindToZeroOffset(MemoryLayout.sequenceLayout(ELEM_SIZE, JAVA_INT.withByteAlignment(1)).varHandle(PathElement.sequenceElement()));\n+\n+    static VarHandle bindToZeroOffset(VarHandle varHandle) {\n+        return MethodHandles.insertCoordinates(varHandle, 1, 0L);\n+    }\n+\n@@ -135,0 +145,18 @@\n+    @Benchmark\n+    public int segment_loop_nested() {\n+        int sum = 0;\n+        for (int i = 0; i < ELEM_SIZE; i++) {\n+            sum += (int) VH_SEQ_INT.get(segment, (long) i);\n+        }\n+        return sum;\n+    }\n+\n+    @Benchmark\n+    public int segment_loop_nested_unaligned() {\n+        int sum = 0;\n+        for (int i = 0; i < ELEM_SIZE; i++) {\n+            sum += (int) VH_SEQ_INT_UNALIGNED.get(segment, (long) i);\n+        }\n+        return sum;\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstant.java","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libToJavaString.c","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-                    cob.constantInstruction(100L);\n+                    cob.loadConstant(100L);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/LazyStaticColdStart.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,9 +136,0 @@\n-    \/** Invokes the toString method of BigDecimal with various different values. *\/\n-    @Benchmark\n-    @OperationsPerInvocation(TEST_SIZE)\n-    public void testToString(Blackhole bh) {\n-        for (BigDecimal s : bigDecimals) {\n-            bh.consume(s.toString());\n-        }\n-    }\n-\n@@ -197,1 +188,1 @@\n-    \/** Invokes the compareTo method of BigDecimal with various different values. *\/\n+    \/** Test divide with huge\/small numbers *\/\n@@ -199,5 +190,6 @@\n-    @OperationsPerInvocation(TEST_SIZE - 1)\n-    public void testCompareTo(Blackhole bh) {\n-        BigDecimal c = bigDecimals[0];\n-        for (BigDecimal s : bigDecimals) {\n-            bh.consume(c.compareTo(s));\n+    @OperationsPerInvocation(TEST_SIZE * TEST_SIZE)\n+    public void testHugeSmallDivide(Blackhole bh) {\n+        for (BigDecimal s : hugeArray) {\n+            for (BigDecimal t : smallArray) {\n+                bh.consume(s.divide(t, RoundingMode.DOWN));\n+            }\n@@ -207,1 +199,1 @@\n-    \/** Test BigDecimal.toString() with huge numbers larger than MAX_LONG *\/\n+    \/** Test divide with large\/small numbers *\/\n@@ -209,4 +201,6 @@\n-    @OperationsPerInvocation(TEST_SIZE)\n-    public void testHugeToString(Blackhole bh) {\n-        for (BigDecimal s : hugeArray) {\n-            bh.consume(s.toString());\n+    @OperationsPerInvocation(TEST_SIZE * TEST_SIZE)\n+    public void testLargeSmallDivide(Blackhole bh) {\n+        for (BigDecimal s : largeArray) {\n+            for (BigDecimal t : smallArray) {\n+                bh.consume(s.divide(t, RoundingMode.DOWN));\n+            }\n@@ -216,1 +210,1 @@\n-    \/** Test BigDecimal.toString() with large numbers less than MAX_LONG but larger than MAX_INT *\/\n+    \/** Test divide with huge\/large numbers *\/\n@@ -218,4 +212,6 @@\n-    @OperationsPerInvocation(TEST_SIZE)\n-    public void testLargeToString(Blackhole bh) {\n-        for (BigDecimal s : largeArray) {\n-            bh.consume(s.toString());\n+    @OperationsPerInvocation(TEST_SIZE * TEST_SIZE)\n+    public void testHugeLargeDivide(Blackhole bh) {\n+        for (BigDecimal s : hugeArray) {\n+            for (BigDecimal t : largeArray) {\n+                bh.consume(s.divide(t, RoundingMode.DOWN));\n+            }\n@@ -225,1 +221,1 @@\n-    \/** Test BigDecimal.toString() with small numbers less than MAX_INT *\/\n+    \/** Invokes the compareTo method of BigDecimal with various different values. *\/\n@@ -227,4 +223,5 @@\n-    @OperationsPerInvocation(TEST_SIZE)\n-    public void testSmallToString(Blackhole bh) {\n-        for (BigDecimal s : smallArray) {\n-            bh.consume(s.toString());\n+    @OperationsPerInvocation(TEST_SIZE - 1)\n+    public void testCompareTo(Blackhole bh) {\n+        BigDecimal c = bigDecimals[0];\n+        for (BigDecimal s : bigDecimals) {\n+            bh.consume(c.compareTo(s));\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigDecimals.java","additions":28,"deletions":31,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,0 +135,33 @@\n+    \/** Test divide with huge\/small numbers *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TESTSIZE * TESTSIZE)\n+    public void testHugeSmallDivide(Blackhole bh) {\n+        for (BigInteger s : hugeArray) {\n+            for (BigInteger t : smallArray) {\n+                bh.consume(s.divide(t));\n+            }\n+        }\n+    }\n+\n+    \/** Test divide with large\/small numbers *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TESTSIZE * TESTSIZE)\n+    public void testLargeSmallDivide(Blackhole bh) {\n+        for (BigInteger s : largeArray) {\n+            for (BigInteger t : smallArray) {\n+                bh.consume(s.divide(t));\n+            }\n+        }\n+    }\n+\n+    \/** Test divide with huge\/large numbers *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TESTSIZE * TESTSIZE)\n+    public void testHugeLargeDivide(Blackhole bh) {\n+        for (BigInteger s : hugeArray) {\n+            for (BigInteger t : largeArray) {\n+                bh.consume(s.divide(t));\n+            }\n+        }\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegers.java","additions":34,"deletions":1,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-                    cob.fieldInstruction(i.opcode(), i.owner().asSymbol(), i.name().stringValue(), i.typeSymbol());\n+                    cob.fieldAccess(i.opcode(), i.owner().asSymbol(), i.name().stringValue(), i.typeSymbol());\n@@ -98,1 +98,1 @@\n-                    cob.invokeInstruction(i.opcode(), i.owner().asSymbol(), i.name().stringValue(), i.typeSymbol(), i.isInterface());\n+                    cob.invoke(i.opcode(), i.owner().asSymbol(), i.name().stringValue(), i.typeSymbol(), i.isInterface());\n@@ -106,1 +106,1 @@\n-                    cob.typeCheckInstruction(i.opcode(), i.type().asSymbol());\n+                    cob.with(TypeCheckInstruction.of(i.opcode(), i.type().asSymbol()));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/RebuildMethodBodies.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-                                xb.nopInstruction();\n+                                xb.nop();\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/Transforms.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,3 +144,3 @@\n-                      .withCode(codeb -> codeb.loadInstruction(TypeKind.ReferenceType, 0)\n-                                              .invokeInstruction(INVOKESPECIAL, CD_Object, INIT_NAME, MTD_void, false)\n-                                              .returnInstruction(VoidType)\n+                      .withCode(codeb -> codeb.loadLocal(TypeKind.ReferenceType, 0)\n+                                              .invoke(INVOKESPECIAL, CD_Object, INIT_NAME, MTD_void, false)\n+                                              .return_(VoidType)\n@@ -157,4 +157,4 @@\n-                                  c0.constantInstruction(ICONST_1, 1)         \/\/ 0\n-                                    .storeInstruction(IntType, vFac)        \/\/ 1\n-                                    .constantInstruction(ICONST_1, 1)         \/\/ 2\n-                                    .storeInstruction(IntType, vI)          \/\/ 3\n+                                  c0.iconst_1()         \/\/ 0\n+                                    .istore(vFac)       \/\/ 1\n+                                    .iconst_1()         \/\/ 2\n+                                    .istore(vI)         \/\/ 3\n@@ -162,9 +162,9 @@\n-                                    .loadInstruction(IntType, vI)           \/\/ 4\n-                                    .constantInstruction(BIPUSH, 10)         \/\/ 5\n-                                    .branchInstruction(IF_ICMPGE, loopEnd) \/\/ 6\n-                                    .loadInstruction(IntType, vFac)         \/\/ 7\n-                                    .loadInstruction(IntType, vI)           \/\/ 8\n-                                    .operatorInstruction(IMUL)             \/\/ 9\n-                                    .storeInstruction(IntType, vFac)        \/\/ 10\n-                                    .incrementInstruction(vI, 1)    \/\/ 11\n-                                    .branchInstruction(GOTO, loopTop)     \/\/ 12\n+                                    .iload(vI)          \/\/ 4\n+                                    .bipush(10)         \/\/ 5\n+                                    .if_icmpge(loopEnd) \/\/ 6\n+                                    .iload(vFac)        \/\/ 7\n+                                    .iload(vI)          \/\/ 8\n+                                    .imul()             \/\/ 9\n+                                    .istore(vFac)       \/\/ 10\n+                                    .iinc(vI, 1)        \/\/ 11\n+                                    .goto_(loopTop)     \/\/ 12\n@@ -172,4 +172,4 @@\n-                                    .fieldInstruction(GETSTATIC, CD_System, \"out\", CD_PrintStream)   \/\/ 13\n-                                    .loadInstruction(IntType, vFac)\n-                                    .invokeInstruction(INVOKEVIRTUAL, CD_PrintStream, \"println\", MTD_void_int, false)  \/\/ 15\n-                                    .returnInstruction(VoidType);\n+                                    .getstatic(CD_System, \"out\", CD_PrintStream) \/\/ 13\n+                                    .iload(vFac)\n+                                    .invokevirtual(CD_PrintStream, \"println\", MTD_void_int) \/\/ 15\n+                                    .return_();\n@@ -192,3 +192,3 @@\n-                          mb -> mb.withCode(codeb -> codeb.loadInstruction(ReferenceType, 0)\n-                                                          .invokeInstruction(INVOKESPECIAL, CD_Object, INIT_NAME, MTD_void, false)\n-                                                          .returnInstruction(VoidType)\n+                          mb -> mb.withCode(codeb -> codeb.loadLocal(ReferenceType, 0)\n+                                                          .invokespecial(CD_Object, INIT_NAME, MTD_void, false)\n+                                                          .return_()\n@@ -205,4 +205,4 @@\n-                                  c0.constantInstruction(ICONST_1, 1)        \/\/ 0\n-                                    .storeInstruction(IntType, 1)          \/\/ 1\n-                                    .constantInstruction(ICONST_1, 1)        \/\/ 2\n-                                    .storeInstruction(IntType, 2)          \/\/ 3\n+                                  c0.iconst_1()         \/\/ 0\n+                                    .istore(1)          \/\/ 1\n+                                    .iconst_1()         \/\/ 2\n+                                    .istore(2)          \/\/ 3\n@@ -210,9 +210,9 @@\n-                                    .loadInstruction(IntType, 2)           \/\/ 4\n-                                    .constantInstruction(BIPUSH, 10)         \/\/ 5\n-                                    .branchInstruction(IF_ICMPGE, loopEnd) \/\/ 6\n-                                    .loadInstruction(IntType, 1)           \/\/ 7\n-                                    .loadInstruction(IntType, 2)           \/\/ 8\n-                                    .operatorInstruction(IMUL)             \/\/ 9\n-                                    .storeInstruction(IntType, 1)          \/\/ 10\n-                                    .incrementInstruction(2, 1)    \/\/ 11\n-                                    .branchInstruction(GOTO, loopTop)     \/\/ 12\n+                                    .iload(2)           \/\/ 4\n+                                    .bipush(10)         \/\/ 5\n+                                    .if_icmpge(loopEnd) \/\/ 6\n+                                    .iload(1)           \/\/ 7\n+                                    .iload(2)           \/\/ 8\n+                                    .imul()             \/\/ 9\n+                                    .istore(1)          \/\/ 10\n+                                    .iinc(2, 1)         \/\/ 11\n+                                    .goto_(loopTop)     \/\/ 12\n@@ -220,4 +220,4 @@\n-                                    .fieldInstruction(GETSTATIC, CD_System, \"out\", CD_PrintStream)   \/\/ 13\n-                                    .loadInstruction(IntType, 1)\n-                                    .invokeInstruction(INVOKEVIRTUAL, CD_PrintStream, \"println\", MTD_void_int, false)  \/\/ 15\n-                                    .returnInstruction(VoidType);\n+                                    .getstatic(CD_System, \"out\", CD_PrintStream)  \/\/ 13\n+                                    .iload(1)\n+                                    .invokevirtual(CD_PrintStream, \"println\", MTD_void_int)  \/\/ 15\n+                                    .return_();\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/Write.java","additions":40,"deletions":40,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/MergeStores.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}