{"files":[{"patch":"@@ -1029,0 +1029,1 @@\n+        if (!Signature::has_envelope(sig)) continue;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -114,0 +114,3 @@\n+\n+    \/\/ Test a class with a primitive descriptor in its LoadableDescriptors attribute:\n+    runTest(\"PrimitiveInLoadableDescriptors\", null, null);\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/ValueClassValidation.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1147,1 +1147,112 @@\n-} \/\/ end class SynchMethodInAbstractValue\n\\ No newline at end of file\n+} \/\/ end class SynchMethodInAbstractValue\n+\n+\/\/ Class to test invalid entries in LoadableDescriptors Attributes\n+\/\/ Class generated from this source:\n+\/\/ public class PrimitiveInLoadableDescriptors {\n+\/\/ int i;\n+\/\/ void foo(Integer i) { }\n+\/\/ }\n+\n+class PrimitiveInLoadableDescriptors {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"PrimitiveInLoadableDescriptors\"; \/\/ #8\n+    Utf8 \"i\"; \/\/ #9\n+    Utf8 \"I\"; \/\/ #10\n+    Utf8 \"Code\"; \/\/ #11\n+    Utf8 \"LineNumberTable\"; \/\/ #12\n+    Utf8 \"foo\"; \/\/ #13\n+    Utf8 \"(Ljava\/lang\/Integer;)V\"; \/\/ #14\n+    Utf8 \"SourceFile\"; \/\/ #15\n+    Utf8 \"PrimitiveInLoadableDescriptors.java\"; \/\/ #16\n+    Utf8 \"LoadableDescriptors\"; \/\/ #17\n+    Utf8 \"I\"; \/\/ #18                            \/\/ Modified from \"Ljava\/lang\/Integer;\" to \"I\"\n+  } \/\/ Constant Pool\n+\n+  0x0021; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+    {  \/\/ field\n+      0x0000; \/\/ access\n+      #9; \/\/ name_index\n+      #10; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#11) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#12) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method\n+      0x0000; \/\/ access\n+      #13; \/\/ name_index\n+      #14; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#11) { \/\/ Code\n+          0; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[]{\n+            0xB1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#12) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  3;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#15) { \/\/ SourceFile\n+      #16;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#17) { \/\/ LoadableDescriptors\n+      0x00010012;\n+    } \/\/ end LoadableDescriptors\n+  } \/\/ Attributes\n+} \/\/ end class PrimitiveInLoadableDescriptors\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/cfpValueClassValidation.jcod","additions":112,"deletions":1,"binary":false,"changes":113,"status":"modified"}]}