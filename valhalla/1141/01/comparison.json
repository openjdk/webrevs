{"files":[{"patch":"@@ -228,1 +228,4 @@\n-  return JVM_ACC_ABSTRACT | JVM_ACC_FINAL | JVM_ACC_PUBLIC;\n+  int identity_flag = (Arguments::enable_preview()) ? JVM_ACC_IDENTITY : 0;\n+\n+  return JVM_ACC_ABSTRACT | JVM_ACC_FINAL | JVM_ACC_PUBLIC\n+                    | identity_flag;\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -437,0 +437,1 @@\n+  \/\/ With the addition of ACC_IDENTITY\n@@ -439,0 +440,2 @@\n+  int identity_flag = (Arguments::enable_preview()) ? JVM_ACC_IDENTITY : 0;\n+\n@@ -440,1 +443,1 @@\n-                        | (JVM_ACC_ABSTRACT | JVM_ACC_FINAL);\n+                        | (identity_flag | JVM_ACC_ABSTRACT | JVM_ACC_FINAL);\n","filename":"src\/hotspot\/share\/oops\/flatArrayKlass.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -385,0 +385,1 @@\n+  \/\/ With the addition of ACC_IDENTITY\n@@ -392,0 +393,2 @@\n+  int identity_flag = (Arguments::enable_preview()) ? JVM_ACC_IDENTITY : 0;\n+\n@@ -393,1 +396,1 @@\n-                        | (JVM_ACC_ABSTRACT | JVM_ACC_FINAL);\n+                        | (identity_flag | JVM_ACC_ABSTRACT | JVM_ACC_FINAL);\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1480,0 +1480,1 @@\n+     * <li> its {@code identity} modifier is always true\n@@ -1517,0 +1518,1 @@\n+    * <li> its {@code identity} modifier is always true\n@@ -1540,0 +1542,3 @@\n+        if (isArray() && PreviewFeatures.isEnabled()) {\n+            accessFlags |= Modifier.IDENTITY;\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-                    return (cffv.compareTo(ClassFileFormatVersion.RELEASE_22) >= 0\n+                    return (cffv.compareTo(ClassFileFormatVersion.latest()) >= 0\n@@ -384,1 +384,1 @@\n-                    return (cffv.compareTo(ClassFileFormatVersion.RELEASE_22) >= 0\n+                    return (cffv.compareTo(ClassFileFormatVersion.latest()) >= 0\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n- * included. In particular the {@code default} method modifier (JLS\n- * {@jls 9.4.3}) and the {@code sealed} and {@code non-sealed} class\n+ * included. In particular, the {@code default} method modifier (JLS\n+ * {@jls 9.4.3}) and the {@code value}, {@code sealed} and {@code non-sealed} class\n@@ -234,1 +234,1 @@\n-     *    public final synchronized strictfp\n+     *    public final synchronized\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8266670 8291734 8296743\n+ * @bug 8266670 8291734 8296743 8294866\n@@ -174,1 +174,1 @@\n-\/\/            expected.add(AccessFlag.IDENTITY);  \/\/ NYI Pending: JDK-8294866\n+            expected.add(AccessFlag.IDENTITY);\n","filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/ClassAccessFlagPreviewTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}