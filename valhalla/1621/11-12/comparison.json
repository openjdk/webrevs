{"files":[{"patch":"@@ -72,1 +72,1 @@\n-            int locationsSize, int stringsSize) {\n+                       int locationsSize, int stringsSize) {\n@@ -78,3 +78,2 @@\n-                int flags, int resourceCount,\n-                int tableLength, int locationsSize, int stringsSize)\n-    {\n+                       int flags, int resourceCount,\n+                       int tableLength, int locationsSize, int stringsSize) {\n@@ -92,1 +91,1 @@\n-       return HEADER_SLOTS * 4;\n+        return HEADER_SLOTS * 4;\n@@ -100,1 +99,1 @@\n-                \"jimage header not the correct size: \" + buffer.capacity());\n+                    \"jimage header not the correct size: \" + buffer.capacity());\n@@ -114,1 +113,1 @@\n-            resourceCount, tableLength, locationsSize, stringsSize);\n+                resourceCount, tableLength, locationsSize, stringsSize);\n@@ -176,4 +175,4 @@\n-               getRedirectSize() +\n-               getOffsetsSize() +\n-               getLocationsSize() +\n-               getStringsSize();\n+                getRedirectSize() +\n+                getOffsetsSize() +\n+                getLocationsSize() +\n+                getStringsSize();\n@@ -188,1 +187,1 @@\n-               getRedirectSize();\n+                getRedirectSize();\n@@ -193,1 +192,1 @@\n-               getOffsetsSize();\n+                getOffsetsSize();\n@@ -198,1 +197,1 @@\n-               getLocationsSize();\n+                getLocationsSize();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jimage\/ImageHeader.java","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-                    \"Invalid jimage attribute kind: \" + kind);\n+                        \"Invalid jimage attribute kind: \" + kind);\n@@ -253,1 +253,1 @@\n-                    stream.put((int)(value >> (i << 3)));\n+                    stream.put((int) (value >> (i << 3)));\n@@ -261,1 +261,1 @@\n-     }\n+    }\n@@ -276,1 +276,1 @@\n-        int moduleOffset = (int)attributes[ATTRIBUTE_MODULE];\n+        int moduleOffset = (int) attributes[ATTRIBUTE_MODULE];\n@@ -347,1 +347,1 @@\n-            ImageStrings strings) {\n+                          ImageStrings strings) {\n@@ -359,1 +359,1 @@\n-            int moduleOffset, int parentOffset, int baseOffset, int extOffset, ImageStrings strings) {\n+                                      int moduleOffset, int parentOffset, int baseOffset, int extOffset, ImageStrings strings) {\n@@ -399,1 +399,1 @@\n-                \"Invalid jimage attribute kind: \" + kind);\n+                    \"Invalid jimage attribute kind: \" + kind);\n@@ -407,1 +407,1 @@\n-                \"Invalid jimage attribute kind: \" + kind);\n+                    \"Invalid jimage attribute kind: \" + kind);\n@@ -409,1 +409,1 @@\n-        return getStrings().get((int)attributes[kind]);\n+        return getStrings().get((int) attributes[kind]);\n@@ -417,1 +417,1 @@\n-        return (int)getAttribute(ATTRIBUTE_MODULE);\n+        return (int) getAttribute(ATTRIBUTE_MODULE);\n@@ -425,1 +425,1 @@\n-        return (int)getAttribute(ATTRIBUTE_BASE);\n+        return (int) getAttribute(ATTRIBUTE_BASE);\n@@ -433,1 +433,1 @@\n-        return (int)getAttribute(ATTRIBUTE_PARENT);\n+        return (int) getAttribute(ATTRIBUTE_PARENT);\n@@ -441,1 +441,1 @@\n-        return (int)getAttribute(ATTRIBUTE_EXTENSION);\n+        return (int) getAttribute(ATTRIBUTE_EXTENSION);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jimage\/ImageLocation.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -681,1 +681,8 @@\n-        \/** Returns the list of child preview nodes to be merged into the given directory. *\/\n+        \/**\n+         * Returns the list of child preview nodes to be merged into the given directory.\n+         *\n+         * <p>Because this is only called once per-directory (since the result is cached\n+         * indefinitely) we can remove any entries we find from the cache. If ever the\n+         * node cache allowed entries to expire, this would have to be changed so that\n+         * directories could be completed more than once.\n+         *\/\n@@ -684,1 +691,1 @@\n-                Directory mergeDir = previewDirectoriesToMerge.get(dir.getName());\n+                Directory mergeDir = previewDirectoriesToMerge.remove(dir.getName());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jimage\/ImageReader.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+\n@@ -177,1 +178,1 @@\n-                    new HashSet<String>(Arrays.asList(\"basic\", \"jrt\")));\n+            new HashSet<String>(Arrays.asList(\"basic\", \"jrt\")));\n@@ -208,2 +209,2 @@\n-                throw new UnsupportedOperationException(\"Syntax '\" + syntax\n-                        + \"' not recognized\");\n+            throw new UnsupportedOperationException(\"Syntax '\" + syntax\n+                    + \"' not recognized\");\n@@ -301,1 +302,1 @@\n-                    \"option class: \" + option.getClass());\n+                        \"option class: \" + option.getClass());\n@@ -305,1 +306,1 @@\n-            options.contains(StandardOpenOption.APPEND)) {\n+                options.contains(StandardOpenOption.APPEND)) {\n@@ -346,2 +347,2 @@\n-            Set<? extends OpenOption> options,\n-            FileAttribute<?>... attrs)\n+                                     Set<? extends OpenOption> options,\n+                                     FileAttribute<?>... attrs)\n@@ -357,2 +358,2 @@\n-            Set<? extends OpenOption> options,\n-            FileAttribute<?>... attrs)\n+                                             Set<? extends OpenOption> options,\n+                                             FileAttribute<?>... attrs)\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jrtfs\/JrtFileSystem.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-        @SuppressWarnings({ \"removal\", \"suppression\" })\n+        @SuppressWarnings({\"removal\", \"suppression\"})\n@@ -110,1 +110,1 @@\n-            return newFileSystem((String)env.get(\"java.home\"), uri, env);\n+            return newFileSystem((String) env.get(\"java.home\"), uri, env);\n@@ -136,1 +136,1 @@\n-        Map<String,?> newEnv = new HashMap<>(env);\n+        Map<String, ?> newEnv = new HashMap<>(env);\n@@ -141,1 +141,1 @@\n-            @SuppressWarnings({ \"deprecation\", \"suppression\" })\n+            @SuppressWarnings({\"deprecation\", \"suppression\"})\n@@ -143,1 +143,1 @@\n-            return ((FileSystemProvider)tmp).newFileSystem(uri, newEnv);\n+            return ((FileSystemProvider) tmp).newFileSystem(uri, newEnv);\n@@ -157,2 +157,1 @@\n-                throws ClassNotFoundException\n-        {\n+                throws ClassNotFoundException {\n@@ -174,1 +173,1 @@\n-    @SuppressWarnings({ \"removal\", \"suppression\" })\n+    @SuppressWarnings({\"removal\", \"suppression\"})\n@@ -183,1 +182,1 @@\n-        final URL[] urls = new URL[] { url };\n+        final URL[] urls = new URL[]{url};\n@@ -281,1 +280,1 @@\n-            getFileAttributeView(Path path, Class<V> type, LinkOption... options) {\n+    getFileAttributeView(Path path, Class<V> type, LinkOption... options) {\n@@ -308,3 +307,3 @@\n-            Set<? extends OpenOption> options,\n-            ExecutorService exec,\n-            FileAttribute<?>... attrs)\n+                                                              Set<? extends OpenOption> options,\n+                                                              ExecutorService exec,\n+                                                              FileAttribute<?>... attrs)\n@@ -317,2 +316,2 @@\n-            Set<? extends OpenOption> options,\n-            FileAttribute<?>... attrs)\n+                                              Set<? extends OpenOption> options,\n+                                              FileAttribute<?>... attrs)\n@@ -331,2 +330,2 @@\n-            Set<? extends OpenOption> options,\n-            FileAttribute<?>... attrs)\n+                                      Set<? extends OpenOption> options,\n+                                      FileAttribute<?>... attrs)\n@@ -352,1 +351,1 @@\n-            readAttributes(Path path, Class<A> type, LinkOption... options)\n+    readAttributes(Path path, Class<A> type, LinkOption... options)\n@@ -362,1 +361,1 @@\n-            readAttributes(Path path, String attribute, LinkOption... options)\n+    readAttributes(Path path, String attribute, LinkOption... options)\n@@ -369,1 +368,1 @@\n-            Object value, LinkOption... options)\n+                             Object value, LinkOption... options)\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jrtfs\/JrtFileSystemProvider.java","additions":19,"deletions":20,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-@SuppressWarnings({ \"removal\", \"suppression\"} )\n+@SuppressWarnings({\"removal\", \"suppression\"})\n@@ -104,6 +104,6 @@\n-            new PrivilegedAction<Boolean>() {\n-                @Override\n-                public Boolean run() {\n-                    return Files.isRegularFile(moduleImageFile);\n-                }\n-            });\n+                new PrivilegedAction<Boolean>() {\n+                    @Override\n+                    public Boolean run() {\n+                        return Files.isRegularFile(moduleImageFile);\n+                    }\n+                });\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jrtfs\/SystemImage.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-    private SystemModuleFinders() { }\n+    private SystemModuleFinders() {}\n@@ -151,1 +151,1 @@\n-            = (Map.Entry<String, ModuleReference>[])new Map.Entry[moduleCount];\n+                = (Map.Entry<String, ModuleReference>[]) new Map.Entry[moduleCount];\n@@ -159,4 +159,4 @@\n-                                                     targets[i],\n-                                                     recordedHashes[i],\n-                                                     hashSupplier,\n-                                                     moduleResolutions[i]);\n+                    targets[i],\n+                    recordedHashes[i],\n+                    hashSupplier,\n+                    moduleResolutions[i]);\n@@ -239,4 +239,4 @@\n-                                                     attrs.target(),\n-                                                     attrs.recordedHashes(),\n-                                                     hashSupplier,\n-                                                     attrs.moduleResolution());\n+                    attrs.target(),\n+                    attrs.recordedHashes(),\n+                    hashSupplier,\n+                    attrs.moduleResolution());\n@@ -334,7 +334,7 @@\n-                                                       uri,\n-                                                       readerSupplier,\n-                                                       null,\n-                                                       target,\n-                                                       recordedHashes,\n-                                                       hasher,\n-                                                       mres);\n+                uri,\n+                readerSupplier,\n+                null,\n+                target,\n+                recordedHashes,\n+                hasher,\n+                mres);\n@@ -518,1 +518,1 @@\n-            for (;;) {\n+            for (; ; ) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/SystemModuleFinders.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-        return len > Integer.MAX_VALUE ? -1 : (int)len;\n+        return len > Integer.MAX_VALUE ? -1 : (int) len;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/jrt\/JavaRuntimeURLConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/ImageStringsWriter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    @DataProvider(name=\"classes\")\n+    @DataProvider(name = \"classes\")\n@@ -64,1 +64,1 @@\n-        return new Object[][] {\n+        return new Object[][]{\n@@ -82,1 +82,1 @@\n-    @Test(dataProvider=\"classes\")\n+    @Test(dataProvider = \"classes\")\n@@ -107,2 +107,2 @@\n-                    + moduleName\n-                    + \", or class: \" + className);\n+                            + moduleName\n+                            + \", or class: \" + className);\n@@ -234,1 +234,1 @@\n-            System.arraycopy(nativeNames,0, combined, names.length, nativeNames.length);\n+            System.arraycopy(nativeNames, 0, combined, names.length, nativeNames.length);\n@@ -358,1 +358,1 @@\n-        Class<?>[] testclass = { JImageReadTest.class};\n+        Class<?>[] testclass = {JImageReadTest.class};\n","filename":"test\/jdk\/jdk\/internal\/jimage\/JImageReadTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}