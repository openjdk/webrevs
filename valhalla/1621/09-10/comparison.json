{"files":[{"patch":"@@ -120,1 +120,1 @@\n-        return ((flags & FLAGS_PKG_HAS_RESOURCES) != 0);\n+        return (flags & FLAGS_PKG_HAS_RESOURCES) != 0;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jimage\/ModuleReference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n-import static jdk.internal.jimage.ModuleReference.forEmptyPackage;\n-import static jdk.internal.jimage.ModuleReference.forPackage;\n+import static jdk.internal.jimage.ModuleReference.forEmptyPackageIn;\n+import static jdk.internal.jimage.ModuleReference.forPackageIn;\n@@ -60,1 +60,1 @@\n-        ModuleReference ref = forEmptyPackage(\"module\", isPreview);\n+        ModuleReference ref = forEmptyPackageIn(\"module\", isPreview);\n@@ -63,1 +63,1 @@\n-        assertFalse(ref.hasContent());\n+        assertFalse(ref.hasResources());\n@@ -71,1 +71,1 @@\n-        ModuleReference ref = forPackage(\"module\", isPreview);\n+        ModuleReference ref = forPackageIn(\"module\", isPreview);\n@@ -74,1 +74,1 @@\n-        assertTrue(ref.hasContent());\n+        assertTrue(ref.hasResources());\n@@ -82,2 +82,2 @@\n-        ModuleReference emptyRef = forEmptyPackage(\"module\", true);\n-        ModuleReference resourceRef = forPackage(\"module\", isPreview);\n+        ModuleReference emptyRef = forEmptyPackageIn(\"module\", true);\n+        ModuleReference resourceRef = forPackageIn(\"module\", isPreview);\n@@ -87,1 +87,1 @@\n-        assertTrue(merged.hasContent());\n+        assertTrue(merged.hasResources());\n@@ -95,4 +95,4 @@\n-                forEmptyPackage(\"alpha\", true),\n-                forEmptyPackage(\"beta\", false).merge(forEmptyPackage(\"beta\", true)),\n-                forPackage(\"gamma\", false),\n-                forEmptyPackage(\"zeta\", false));\n+                forEmptyPackageIn(\"alpha\", true),\n+                forEmptyPackageIn(\"beta\", false).merge(forEmptyPackageIn(\"beta\", true)),\n+                forPackageIn(\"gamma\", false),\n+                forEmptyPackageIn(\"zeta\", false));\n@@ -122,2 +122,2 @@\n-                forPackage(\"first\", false),\n-                forEmptyPackage(\"alpha\", false));\n+                forPackageIn(\"first\", false),\n+                forEmptyPackageIn(\"alpha\", false));\n@@ -132,1 +132,1 @@\n-    public void writeBuffer_multipleContent() {\n+    public void writeBuffer_multiplePackagesWithResources() {\n@@ -135,2 +135,2 @@\n-                forPackage(\"alpha\", false),\n-                forPackage(\"beta\", false));\n+                forPackageIn(\"alpha\", false),\n+                forPackageIn(\"beta\", false));\n@@ -141,1 +141,1 @@\n-        assertTrue(err.getMessage().contains(\"content\"));\n+        assertTrue(err.getMessage().contains(\"resources\"));\n@@ -148,2 +148,2 @@\n-                forEmptyPackage(\"alpha\", false),\n-                forEmptyPackage(\"beta\", true));\n+                forEmptyPackageIn(\"alpha\", false),\n+                forEmptyPackageIn(\"beta\", true));\n@@ -161,2 +161,2 @@\n-                forEmptyPackage(\"duplicate\", true),\n-                forEmptyPackage(\"duplicate\", false));\n+                forEmptyPackageIn(\"duplicate\", true),\n+                forEmptyPackageIn(\"duplicate\", false));\n@@ -208,4 +208,4 @@\n-                forEmptyPackage(\"normal.beta\", false),\n-                forPackage(\"preview.beta\", true),\n-                forEmptyPackage(\"preview.alpha\", true),\n-                forEmptyPackage(\"normal.alpha\", false));\n+                forEmptyPackageIn(\"normal.beta\", false),\n+                forPackageIn(\"preview.beta\", true),\n+                forEmptyPackageIn(\"preview.alpha\", true),\n+                forEmptyPackageIn(\"normal.alpha\", false));\n","filename":"test\/jdk\/jdk\/internal\/jimage\/ModuleReferenceTest.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"}]}