{"files":[{"patch":"@@ -463,1 +463,1 @@\n-        ExtendedVarFlags                  = (long) VarFlags | STRICT,\n+        ValueFieldFlags                   = (long) VarFlags | STRICT | FINAL,\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1265,1 +1265,1 @@\n-                mask = !isInstanceFieldOfValueClass ? VarFlags : ExtendedVarFlags;\n+                mask = !isInstanceFieldOfValueClass ? VarFlags : ValueFieldFlags;\n@@ -1374,2 +1374,1 @@\n-        }\n-        else if ((sym.kind == TYP ||\n+        } else if ((sym.kind == TYP ||\n@@ -1398,1 +1397,2 @@\n-                 checkDisjoint(pos, flags,\n+                 \/\/ we are using `implicit` here as instance fields of value classes are implicitly final\n+                 checkDisjoint(pos, flags | implicit,\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -513,0 +513,8 @@\n+            ),\n+            new TestData(\n+                    \"compiler.err.illegal.combination.of.modifiers\", \/\/ --enable-preview -source\"\n+                    \"\"\"\n+                    value class V {\n+                        volatile int f = 1;\n+                    }\n+                    \"\"\"\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}