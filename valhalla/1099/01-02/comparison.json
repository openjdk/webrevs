{"files":[{"patch":"@@ -4387,4 +4387,4 @@\n-        \/\/ C2 should recognize that even though we do not know whether the underlying inline type of the abstract field\n-        \/\/ abstractValueClassSingleSubclass will be flat or not, we only have a unique concrete sub class which\n-        \/\/ is known to be flat or not at compile time. This unique sub class optimization was missing, resulting in a\n-        \/\/ missing InlineTypeNode assertion failure.\n+        \/\/ C2 should recognize that even though we do not know the exact layout of the underlying inline type of the\n+        \/\/ abstract field abstractValueClassSingleSubclass (i.e. cannot scalarize), we only have a unique concrete sub\n+        \/\/ class from which we know at compile time whether it can be scalarized or not. This unique sub class\n+        \/\/ optimization was missing, resulting in a missing InlineTypeNode assertion failure.\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestLWorld.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}