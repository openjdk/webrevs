{"files":[{"patch":"@@ -369,0 +369,3 @@\n+                   } else if (cffv.compareTo(ClassFileFormatVersion.RELEASE_2) >= 0 &&\n+                              cffv.compareTo(ClassFileFormatVersion.RELEASE_16) <= 0) {\n+                       return Location.SET_METHOD;\n@@ -370,4 +373,1 @@\n-                       return (cffv.compareTo(ClassFileFormatVersion.RELEASE_2) >= 0 &&\n-                               cffv.compareTo(ClassFileFormatVersion.RELEASE_16) <= 0) ?\n-                               Location.SET_METHOD :\n-                               Location.EMPTY_SET;\n+                       return Location.EMPTY_SET;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -381,1 +381,1 @@\n-     * The {@code int} value representing the {@code strict}\n+     * The {@code int} value representing the {@code strictfp}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4095,1 +4095,0 @@\n-        ClassSymbol classSym;\n@@ -4098,1 +4097,0 @@\n-            classSym = classDef.sym;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/ValueClassSuperInitGood.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}