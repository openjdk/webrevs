{"files":[{"patch":"@@ -65,1 +65,1 @@\n-\/** This phase will add local variable proxies to value classes constructors.\n+\/** This phase adds local variable proxies to value classes constructors.\n@@ -92,1 +92,0 @@\n-\n@@ -94,2 +93,1 @@\n-    private JCClassDecl currentClassTree = null;\n-    private MethodSymbol currentMethodSym = null;\n+    private java.util.List<JCVariableDecl> strictInstanceFields;\n@@ -125,2 +123,0 @@\n-    java.util.List<JCVariableDecl> strictInstanceFields;\n-\n@@ -130,2 +126,0 @@\n-        JCClassDecl prevCurrentClassTree = currentClassTree;\n-        MethodSymbol prevMethodSym = currentMethodSym;\n@@ -135,2 +129,0 @@\n-            currentClassTree = tree;\n-            currentMethodSym = null;\n@@ -155,1 +147,1 @@\n-                            java.util.List<JCVariableDecl> strictInstanceFieldsAssignedTo = new ArrayList<>();\n+                            java.util.List<JCVariableDecl> multiAssignedStrictFields = new ArrayList<>();\n@@ -159,1 +151,1 @@\n-                                \/\/ is good as is\n+                                \/\/ is good as it is\n@@ -164,0 +156,1 @@\n+                                            break;\n@@ -167,1 +160,1 @@\n-                                        strictInstanceFieldsAssignedTo.add(keep);\n+                                        multiAssignedStrictFields.add(keep);\n@@ -171,2 +164,2 @@\n-                            if (!strictInstanceFieldsAssignedTo.isEmpty()) {\n-                                addLocalProxiesFor(md, strictInstanceFieldsAssignedTo);\n+                            if (!multiAssignedStrictFields.isEmpty()) {\n+                                addLocalProxiesFor(md, multiAssignedStrictFields);\n@@ -180,2 +173,0 @@\n-            currentClassTree = prevCurrentClassTree;\n-            currentMethodSym = prevMethodSym;\n@@ -186,8 +177,1 @@\n-    \/**\n-     * this map will hold the assignments from proxy locals back to fields that should be done\n-     * after the code for the super invocation arguments and just before the super invocation\n-     * this information should be consumed by Gen\n-     *\/\n-    \/\/ public Map<JCMethodDecl, JCBlock> assigmentsBeforeSuperMap = new HashMap<>();\n-\n-    void addLocalProxiesFor(JCMethodDecl constructor, java.util.List<JCVariableDecl> strictInstanceFieldsAssignedTo) {\n+    void addLocalProxiesFor(JCMethodDecl constructor, java.util.List<JCVariableDecl> multiAssignedStrictFields) {\n@@ -197,1 +181,1 @@\n-        for (JCVariableDecl fieldDecl : strictInstanceFieldsAssignedTo) {\n+        for (JCVariableDecl fieldDecl : multiAssignedStrictFields) {\n@@ -289,4 +273,3 @@\n-    \/\/ the idea of this class is to find if there are assignments to fields that are not in the same\n-    \/\/ nesting level as the super invocation, those are the ones for which we need a new local variable\n-    \/\/ it is not clear if we will allow free assignment to final fields, in that case we could need to add\n-    \/\/ proxy locals regardless of the nesting level\n+    \/* the idea of this scanner is to find how many assignments to strict fields occur inside a constructor's\n+     * body\n+     *\/\n@@ -294,2 +277,0 @@\n-        \/\/ Match this scan stack: 1=JCMethodDecl, 2=JCExpressionStatement, 3=JCMethodInvocation\n-        private int scanDepth = 0;              \/\/ current scan recursion depth in method body\n@@ -302,3 +283,3 @@\n-                Integer noOfAssigments = strictFieldsAssignedTo.get(lhsSym);\n-                if (noOfAssigments == null) {\n-                    noOfAssigments = 0;\n+                Integer noOfAssignments = strictFieldsAssignedTo.get(lhsSym);\n+                if (noOfAssignments == null) {\n+                    noOfAssignments = 0;\n@@ -306,2 +287,2 @@\n-                noOfAssigments++;\n-                strictFieldsAssignedTo.put(vs, noOfAssigments);\n+                noOfAssignments++;\n+                strictFieldsAssignedTo.put(vs, noOfAssignments);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LocalProxyVarsGen.java","additions":18,"deletions":37,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -2057,6 +2057,0 @@\n-                \/*\n-                if (localProxyVarsGen.assigmentsBeforeSuperMap.get(env.enclMethod) != null) {\n-                    JCBlock assigmentsBeforeSuper = localProxyVarsGen.assigmentsBeforeSuperMap.get(env.enclMethod);\n-                    code.markDead();\n-                    genStat(assigmentsBeforeSuper, env);\n-                }*\/\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}