{"files":[{"patch":"@@ -209,1 +209,1 @@\n-    IDENTITY(Modifier.IDENTITY, true,\n+    IDENTITY(Modifier.IDENTITY, false,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -432,1 +432,1 @@\n-        LocalClassFlags                   = FINAL | ABSTRACT | STRICTFP | ENUM | SYNTHETIC | ACC_IDENTITY,\n+        LocalClassFlags                   = FINAL | ABSTRACT | STRICTFP | ENUM | SYNTHETIC | IDENTITY_TYPE,\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3163,2 +3163,1 @@\n-        if ((flags & ACC_IDENTITY) != 0) {\n-            flags &= ~ACC_IDENTITY;\n+        if ((flags & ACC_IDENTITY) != 0 || (majorVersion <= V66.major && (flags & INTERFACE) == 0)) {\n@@ -3166,1 +3165,1 @@\n-        } else if ((flags & INTERFACE) == 0 && allowValueClasses) {\n+        } else if ((flags & INTERFACE) == 0 && allowValueClasses && majorVersion > V66.major) {\n@@ -3169,0 +3168,1 @@\n+        flags &= ~ACC_IDENTITY; \/\/ ACC_IDENTITY and SYNCHRONIZED bits overloaded\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1604,0 +1604,1 @@\n+            long originalFlags = c.flags();\n@@ -1607,0 +1608,1 @@\n+            flags |= (originalFlags & IDENTITY_TYPE) != 0 ? ACC_IDENTITY : flags;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,0 @@\n-tools\/javap\/TestSuperclass.java                                                 8323790    generic-all\n","filename":"test\/langtools\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @ignore\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckThisLeak.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-                  \"identity #CK Test#GK #EK { }\\n\"\n+                  \"#CK Test#GK #EK { }\\n\"\n","filename":"test\/langtools\/tools\/javap\/TestSuperclass.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}