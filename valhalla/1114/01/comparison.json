{"files":[{"patch":"@@ -4731,0 +4731,2 @@\n+  const bool valid_value_class = is_identity || is_interface ||\n+                                 (supports_inline_types() && (!is_identity && (is_abstract || is_final)));\n@@ -4735,1 +4737,2 @@\n-      (!is_interface && major_gte_1_5 && is_annotation)) {\n+      (!is_interface && major_gte_1_5 && is_annotation) ||\n+      (!valid_value_class)) {\n@@ -4738,0 +4741,3 @@\n+    if (!valid_value_class) {\n+      class_note = \" (a value class must be final or else abstract)\";\n+    }\n@@ -4842,0 +4848,7 @@\n+  const char* error_msg = \"\";\n+\n+  \/\/ There is some overlap in the checks that apply, for example interface fields\n+  \/\/ must be static, static fields can't be strict, and therefore interfaces can't\n+  \/\/ have strict fields. So we don't have to check every possible invalid combination\n+  \/\/ individually as long as all are covered. Once we have found an illegal combination\n+  \/\/ we can stop checking.\n@@ -4846,0 +4859,1 @@\n+      error_msg = \"field cannot be strict and static\";\n@@ -4847,1 +4861,1 @@\n-    if (is_strict && !is_final) {\n+    else if (is_strict && !is_final) {\n@@ -4849,0 +4863,1 @@\n+      error_msg = \"strict field must be final\";\n@@ -4852,11 +4867,13 @@\n-  if (is_interface) {\n-    if (!is_public || !is_static || !is_final || is_private ||\n-        is_protected || is_volatile || is_transient ||\n-        (major_gte_1_5 && is_enum)) {\n-      is_illegal = true;\n-    }\n-  } else { \/\/ not interface\n-    if (has_illegal_visibility(flags) || (is_final && is_volatile)) {\n-      is_illegal = true;\n-    } else {\n-      if (!is_identity_class && !is_abstract && !is_static && !is_final) {\n+  if (!is_illegal) {\n+    if (is_interface) {\n+      if (!is_public || !is_static || !is_final || is_private ||\n+          is_protected || is_volatile || is_transient ||\n+          (major_gte_1_5 && is_enum)) {\n+        is_illegal = true;\n+        error_msg = \"interface fields must be public, static and final, and may be synthetic\";\n+      }\n+    } else { \/\/ not interface\n+      if (has_illegal_visibility(flags)) {\n+        is_illegal = true;\n+        error_msg = \"invalid visibility flags for class field\";\n+      } else if (is_final && is_volatile) {\n@@ -4864,0 +4881,1 @@\n+        error_msg = \"fields cannot be final and volatile\";\n@@ -4866,1 +4884,0 @@\n-          \/* non-static value class fields must be be strict *\/\n@@ -4868,0 +4885,1 @@\n+          error_msg = \"value class fields must be either strict or static\";\n@@ -4878,2 +4896,2 @@\n-      \"Illegal field modifiers in class %s: 0x%X\",\n-      _class_name->as_C_string(), flags);\n+      \"Illegal field modifiers (%s) in class %s: 0x%X\",\n+      error_msg, _class_name->as_C_string(), flags);\n@@ -6372,0 +6390,5 @@\n+    if (_super_klass->is_final()) {\n+      classfile_icce_error(\"class %s cannot inherit from final class %s\", _super_klass, THREAD);\n+      return;\n+    }\n+\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":39,"deletions":16,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -782,1 +782,1 @@\n-  int alignment = 1;\n+  int alignment = -1;\n","filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,294 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ This is an abstract class that cannot be a super class for value classes\n-\/\/ because ACC_IDENTITY is set in its class access flags.\n-\/\/ It's based on the following source:\n-\/*\n-public abstract class NonPVSuper {\n-\n-    static int x = 3;\n-\n-    public static void meth() {\n-        System.out.println(\"hi\");\n-    }\n-}\n-*\/\n-class NonPVSuper {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [33] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1     at 0x0A\n-    class #4; \/\/ #2     at 0x0F\n-    NameAndType #5 #6; \/\/ #3     at 0x12\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x17\n-    Utf8 \"<init>\"; \/\/ #5     at 0x2A\n-    Utf8 \"()V\"; \/\/ #6     at 0x33\n-    Field #8 #9; \/\/ #7     at 0x39\n-    class #10; \/\/ #8     at 0x3E\n-    NameAndType #11 #12; \/\/ #9     at 0x41\n-    Utf8 \"java\/lang\/System\"; \/\/ #10     at 0x46\n-    Utf8 \"out\"; \/\/ #11     at 0x59\n-    Utf8 \"Ljava\/io\/PrintStream;\"; \/\/ #12     at 0x5F\n-    String #14; \/\/ #13     at 0x77\n-    Utf8 \"hi\"; \/\/ #14     at 0x7A\n-    Method #16 #17; \/\/ #15     at 0x7F\n-    class #18; \/\/ #16     at 0x84\n-    NameAndType #19 #20; \/\/ #17     at 0x87\n-    Utf8 \"java\/io\/PrintStream\"; \/\/ #18     at 0x8C\n-    Utf8 \"println\"; \/\/ #19     at 0xA2\n-    Utf8 \"(Ljava\/lang\/String;)V\"; \/\/ #20     at 0xAC\n-    Field #22 #23; \/\/ #21     at 0xC4\n-    class #24; \/\/ #22     at 0xC9\n-    NameAndType #25 #26; \/\/ #23     at 0xCC\n-    Utf8 \"NonPVSuper\"; \/\/ #24     at 0xD1\n-    Utf8 \"x\"; \/\/ #25     at 0xDE\n-    Utf8 \"I\"; \/\/ #26     at 0xE2\n-    Utf8 \"Code\"; \/\/ #27     at 0xE6\n-    Utf8 \"LineNumberTable\"; \/\/ #28     at 0xED\n-    Utf8 \"meth\"; \/\/ #29     at 0xFF\n-    Utf8 \"<clinit>\"; \/\/ #30     at 0x0106\n-    Utf8 \"SourceFile\"; \/\/ #31     at 0x0111\n-    Utf8 \"NonPVSuper.java\"; \/\/ #32     at 0x011E\n-  } \/\/ Constant Pool\n-\n-  0x0421; \/\/ access [ ACC_PUBLIC ACC_IDENTITY ACC_ABSTRACT ]\n-  #22;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ Fields\n-    {  \/\/ field at 0x013A\n-      0x0008; \/\/ access\n-      #25; \/\/ name_index       : x\n-      #26; \/\/ descriptor_index : I\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [3] { \/\/ Methods\n-    {  \/\/ method at 0x0144\n-      0x0001; \/\/ access\n-      #5; \/\/ name_index       : <init>\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#27, 29) { \/\/ Code at 0x014C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB70001B1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#28, 6) { \/\/ LineNumberTable at 0x0163\n-              [1] { \/\/ line_number_table\n-                0  2; \/\/  at 0x016F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0x016F\n-      0x0009; \/\/ access\n-      #29; \/\/ name_index       : meth\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#27, 37) { \/\/ Code at 0x0177\n-          2; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[9]{\n-            0xB20007120DB6000F;\n-            0xB1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#28, 10) { \/\/ LineNumberTable at 0x0192\n-              [2] { \/\/ line_number_table\n-                0  7; \/\/  at 0x019E\n-                8  8; \/\/  at 0x01A2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0x01A2\n-      0x0008; \/\/ access\n-      #30; \/\/ name_index       : <clinit>\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#27, 29) { \/\/ Code at 0x01AA\n-          1; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[5]{\n-            0x06B30015B1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#28, 6) { \/\/ LineNumberTable at 0x01C1\n-              [1] { \/\/ line_number_table\n-                0  4; \/\/  at 0x01CD\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [1] { \/\/ Attributes\n-    Attr(#31, 2) { \/\/ SourceFile at 0x01CF\n-      #32;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class NonPVSuper\n-\n-\n-\/\/ Dot is a value class that tries to inherit from a super class (NonPVSuper)\n-\/\/ that has access flag ACC_IDENTITY set.\n-\/\/ Dot is based on the following source:\n-\/*\n-public value final class Dot extends NonPVSuper {\n-    int x = 3;\n-\n-    public int getX() {\n-        return x;\n-    }\n-}\n-*\/\n-class Dot {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [18] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"Dot\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x13\n-    NameAndType #5 #6; \/\/ #4     at 0x18\n-    Utf8 \"x\"; \/\/ #5     at 0x1D\n-    Utf8 \"I\"; \/\/ #6     at 0x21\n-    class #8; \/\/ #7     at 0x25\n-    Utf8 \"NonPVSuper\"; \/\/ #8     at 0x28\n-    Utf8 \"getX\"; \/\/ #9     at 0x35\n-    Utf8 \"()I\"; \/\/ #10     at 0x3C\n-    Utf8 \"Code\"; \/\/ #11     at 0x42\n-    Utf8 \"LineNumberTable\"; \/\/ #12     at 0x49\n-    Utf8 \"<vnew>\"; \/\/ #13     at 0x5B\n-    Utf8 \"()LDot;\"; \/\/ #14     at 0x64\n-    Utf8 \"SourceFile\"; \/\/ #15     at 0x6E\n-    Utf8 \"Dot.java\"; \/\/ #16     at 0x7B\n-    Utf8 \"Preload\"; \/\/ #17     at 0x86\n-  } \/\/ Constant Pool\n-\n-  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #7;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ Fields\n-    {  \/\/ field at 0x9A\n-      0x0010; \/\/ access\n-      #5; \/\/ name_index       : x\n-      #6; \/\/ descriptor_index : I\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [2] { \/\/ Methods\n-    {  \/\/ method at 0xA4\n-      0x0001; \/\/ access\n-      #9; \/\/ name_index       : getX\n-      #10; \/\/ descriptor_index : ()I\n-      [1] { \/\/ Attributes\n-        Attr(#11, 29) { \/\/ Code at 0xAC\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 6) { \/\/ LineNumberTable at 0xC3\n-              [1] { \/\/ line_number_table\n-                0  5; \/\/  at 0xCF\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0xCF\n-      0x0009; \/\/ access\n-      #13; \/\/ name_index       : <vnew>\n-      #14; \/\/ descriptor_index : ()LDot;\n-      [1] { \/\/ Attributes\n-        Attr(#11, 41) { \/\/ Code at 0xD7\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014B062A5FCC;\n-            0x00034B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 10) { \/\/ LineNumberTable at 0xF6\n-              [2] { \/\/ line_number_table\n-                0  1; \/\/  at 0x0102\n-                4  2; \/\/  at 0x0106\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [2] { \/\/ Attributes\n-    Attr(#15, 2) { \/\/ SourceFile at 0x0108\n-      #16;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#17, 4) { \/\/ Preload at 0x0110\n-      0x00010001;\n-    } \/\/ end Preload\n-  } \/\/ Attributes\n-} \/\/ end class Dot\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/ACCICCETests.jcod","additions":0,"deletions":294,"binary":false,"changes":294,"status":"deleted"},{"patch":"@@ -1,51 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/*\n- * @ignore Fix JDK-8328412\n- * @test ACC_ICCETest\n- * @bug 8281279\n- * @summary test that a value class cannot sub-class an identity class\n- * @enablePreview\n- * @compile ACCICCETests.jcod\n- * @run main\/othervm ACC_ICCETest\n- *\/\n-\n-public class ACC_ICCETest {\n-\n-    public static void runTest(String test_name, String message) throws Exception {\n-        System.out.println(\"Testing: \" + test_name);\n-        try {\n-            Class newClass = Class.forName(test_name);\n-        } catch (java.lang.IncompatibleClassChangeError e) {\n-            if (!e.getMessage().contains(message)) {\n-                throw new RuntimeException( \"Wrong IncompatibleClassChangeError: \" + e.getMessage());\n-            }\n-        }\n-    }\n-\n-    public static void main(String[] args) throws Exception {\n-        runTest(\"Dot\", \"Value type Dot has an identity type as supertype\");\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/ACC_ICCETest.java","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -1,99 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\/*\n- * @ignore Fix JDK-8328416\n- * @test\n- * @summary test that the right exceptions get thrown for bad inline type\n- *          class files.\n- * @enablePreview\n- * @compile cfpTests.jcod\n- * @run main\/othervm -Xverify:remote BadInlineTypes\n- *\/\n-\n-public class BadInlineTypes {\n-\n-    public static void runTest(String test_name, String message) throws Exception {\n-        System.out.println(\"Testing: \" + test_name);\n-        try {\n-            Class newClass = Class.forName(test_name);\n-        } catch (java.lang.ClassFormatError e) {\n-            if (!e.getMessage().contains(message)) {\n-                throw new RuntimeException( \"Wrong ClassFormatError: \" + e.getMessage());\n-            }\n-        }\n-    }\n-\n-    public static void main(String[] args) throws Exception {\n-\n-        \/\/ Test that ACC_PRIMITIVE with ACC_ABSTRACT is illegal.\n-        runTest(\"ValueAbstract\", \"Illegal class modifiers in class ValueAbstract\");\n-\n-        \/\/ Test that ACC_PRIMITIVE with ACC_ENUM is illegal.\n-        runTest(\"ValueEnum\", \"Illegal class modifiers in class ValueEnum\");\n-\n-        \/\/ Test that inline type fields must be final.\n-        runTest(\"ValueFieldNotFinal\", \"Illegal field modifiers in class ValueFieldNotFinal\");\n-\n-        \/\/ Test that ACC_PRIMITIVE with ACC_INTERFACE is illegal.\n-        runTest(\"ValueInterface\", \"Illegal class modifiers in class ValueInterface\");\n-\n-        \/\/ Test that inline type instance methods cannot be synchronized.\n-        runTest(\"ValueMethodSynch\",\n-                \"Method getInt in class ValueMethodSynch (not an identity class) has illegal modifiers: 0x20\");\n-\n-        \/\/ Test that a class with an old class file version cannot contain a Q signature.\n-        runTest(\"OldClassWithQSig\",\n-                \"Field \\\"this\\\" in class OldClassWithQSig has illegal signature \\\"QOldClassWithQSig;\\\"\");\n-\n-        \/\/ Test that a class with an old class file version cannot contain an array Q signature.\n-        runTest(\"OldClassWithQArraySig\",\n-                \"Field \\\"ia\\\" in class OldClassWithQArraySig has illegal signature \\\"[Qjava\/lang\/Integer;\\\"\");\n-\n-        \/\/ Test that ClassCircularityError gets detected for instance fields.\n-        System.out.println(\"Testing ClassCircularityError for instance fields\");\n-        try {\n-            Class newClass = Class.forName(\"Circ\");\n-            throw new RuntimeException( \"java.lang.ClassCircularityError exception not thrown!\");\n-        } catch (java.lang.ClassCircularityError e) {\n-             if (!e.getMessage().contains(\"Circ\")) {\n-                 throw new RuntimeException( \"Wrong ClassCircularityError: \" + e.getMessage());\n-             }\n-         }\n-\n-        \/\/ Test that ClassCircularityError isn't detected for static fields.\n-        System.out.println(\"Testing ClassCircularityError for static fields\");\n-        try {\n-            Class newClass = Class.forName(\"CircStaticB\");\n-        } catch (java.lang.ClassCircularityError e) {\n-             throw new RuntimeException( \"java.lang.ClassCircularityError exception thrown!\");\n-         }\n-\n-        runTest(\"ValueCloneable\", \"Inline Types do not support Cloneable\");\n-\n-        runTest(\"SuperIsZero\", \"Invalid superclass index 0 in class file SuperIsZero\");\n-\n-        runTest(\"QInOldClass\",\n-                \"Class name contains illegal Q-signature in descriptor in class file QInOldClass\");\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/BadInlineTypes.java","additions":0,"deletions":99,"binary":false,"changes":99,"status":"deleted"},{"patch":"@@ -39,0 +39,1 @@\n+      boolean gotException = false;\n@@ -42,0 +43,1 @@\n+          gotException = true;\n@@ -46,0 +48,3 @@\n+      if (!gotException) {\n+        throw new RuntimeException(\"Missing ClassFormatError in test \" + test_name);\n+      }\n@@ -51,1 +56,1 @@\n-    runTest(\"FinalAndVolatile\", \"Illegal field modifiers in class FinalAndVolatile\");\n+    runTest(\"FinalAndVolatile\", \"Illegal field modifiers (fields cannot be final and volatile) in class FinalAndVolatile: 0x850\");\n@@ -54,1 +59,1 @@\n-    runTest(\"StrictAndStatic\", \"Illegal field modifiers in class StrictAndStatic\");\n+    runTest(\"StrictAndStatic\", \"Illegal field modifiers (field cannot be strict and static) in class StrictAndStatic: 0x808\");\n@@ -57,1 +62,7 @@\n-    runTest(\"StrictNotFinal\", \"Illegal field modifiers in class StrictNotFinal\");\n+    runTest(\"StrictNotFinal\", \"Illegal field modifiers (strict field must be final) in class StrictNotFinal: 0x800\");\n+\n+    \/\/ Test that a concrete value class cannot have field without ACC_STATIC or ACC_STRICT\n+    runTest(\"NotStaticNotStrict\", \"Illegal field modifiers (value class fields must be either strict or static) in class NotStaticNotStrict: 0x10\");\n+\n+    \/\/ Test that an abstract value class cannot have field without ACC_STATIC or ACC_STRICT\n+    runTest(\"NotStaticNotStrictInAbstract\", \"Illegal field modifiers (value class fields must be either strict or static) in class NotStaticNotStrictInAbstract: 0x10\");\n@@ -59,2 +70,0 @@\n-    \/\/ Test that a value class cannot have field without ACC_STATIC or ACC_STRICT\n-    runTest(\"NotStaticNotStrict\", \"Illegal field modifiers in class NotStaticNotStrict\");\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/IllegalFieldModifiers.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,115 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\/*\n+ * @test\n+ * @summary test validation of value classes\n+ * @enablePreview\n+ * @compile cfpValueClassValidation.jcod\n+ * @run main\/othervm -Xverify:remote ValueClassValidation\n+ *\/\n+\n+import javax.management.RuntimeErrorException;\n+\n+public class ValueClassValidation {\n+  public static void runTest(String test_name, String cfe_message, String icce_message) throws Exception {\n+    System.out.println(\"Testing: \" + test_name);\n+    boolean gotException = false;\n+    try {\n+        Class newClass = Class.forName(test_name);\n+    } catch (java.lang.ClassFormatError e) {\n+      gotException = true;\n+      if (cfe_message != null) {\n+        if (!e.getMessage().contains(cfe_message)) {\n+            throw new RuntimeException( \"Wrong ClassFormatError: \" + e.getMessage());\n+        }\n+      } else {\n+        throw new RuntimeException( \"Unexpected ClassFormatError: \" + e.getMessage());\n+      }\n+    } catch (java.lang.IncompatibleClassChangeError e) {\n+      gotException = true;\n+      if (icce_message != null) {\n+        if (!e.getMessage().contains(icce_message)) {\n+            throw new RuntimeException( \"Wrong IncompatibleClassChangeError: \" + e.getMessage());\n+        }\n+      } else {\n+        throw new RuntimeException( \"Unexpected IncompatibleClassChangeError: \" + e.getMessage());\n+      }\n+    }\n+    if (!gotException) {\n+      if (cfe_message != null) {\n+        throw new RuntimeException(\"Missing ClassFormatError in test\" + test_name);\n+      } else if (icce_message != null) {\n+        throw new RuntimeException(\"Missing IncompatibleClassChangeError in test\" + test_name);\n+      }\n+    }\n+  }\n+\n+  public static void main(String[] args) throws Exception {\n+\n+    \/\/ Test none of ACC_ABSTRACT, ACC_FINAL or ACC_IDENTITY is illegal.\n+    runTest(\"InvalidClassFlags\", \"Illegal class modifiers in class InvalidClassFlags\", null);\n+\n+    \/\/ Test ACC_ABSTRACT without ACC_IDENTITY is legal\n+    runTest(\"AbstractValue\", null, null);\n+\n+    \/\/ Test ACC_FINAL without ACC_IDENTITY is legal\n+    runTest(\"FinalValue\", null, null);\n+\n+    \/\/ Test a concrete value class extending an abstract identity class\n+    runTest(\"ValueClass\", null, \"Value type ValueClass has an identity type as supertype\");\n+\n+    \/\/ Test a concrete identity class without ACC_IDENTITY but with an older class file version, extending an abstract identity class\n+    \/\/ (Test that the VM fixes missing ACC_IDENTITY in old class files)\n+    runTest(\"IdentityClass\", null, null);\n+\n+    \/\/ Test a concrete value class extending a concrete (i.e. final) value class\n+    runTest(\"ValueClass2\", null, \"class ValueClass2 cannot inherit from final class FinalValue\");\n+\n+    \/\/ Test an abstract value class extending an abstract identity class\n+    runTest(\"AbstractValueClass2\", null, \"Value type AbstractValueClass2 has an identity type as supertype\");\n+\n+    \/\/ Test an abstract identity class without ACC_IDENTITY but with an older class file version, extending an abstract identity class\n+    \/\/ (Test that the VM fixes missing ACC_IDENTITY in old class files)\n+    runTest(\"AbstractIdentityClass2\", null, null);\n+\n+    \/\/ Test an abstract value class extending a concrete (i.e. final) value class\n+    runTest(\"AbstractValueClass3\", null, \"class AbstractValueClass3 cannot inherit from final class FinalValue\");\n+\n+    \/\/Test a concrete class without ACC_IDENTITY but with an older class file version, declaring a field without ACC_STATIC nor ACC_STRICT\n+    \/\/ (Test that the VM fixes missing ACC_IDENTITY in old class files)\n+    runTest(\"NotStaticNotStrictInOldClass\", null, null);\n+\n+    \/\/ Test a concrete value class with a static synchronized method\n+    runTest(\"StaticSynchMethod\", null, null);\n+\n+    \/\/ Test a concrete value class with a non-static synchronized method\n+    runTest(\"SynchMethod\", \"Method m in class SynchMethod (not an identity class) has illegal modifiers: 0x21\", null);\n+\n+    \/\/ Test an abstract value class with a static synchronized method\n+    runTest(\"StaticSynchMethodInAbstractValue\", null, null);\n+\n+    \/\/ Test an abstract value class with a non-static synchronized method\n+    runTest(\"SynchMethodInAbstractValue\", \"Method m in class SynchMethodInAbstractValue (not an identity class) has illegal modifiers: 0x21\", null);\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/ValueClassValidation.java","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"},{"patch":"@@ -1,2696 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ This file contains multiple illegal inline type classes that should cause\n-\/\/ ClassFormatError exceptions when attempted to be loaded.\n-\/\/\n-\/\/ Many of these test were originally generated from this Java file and then\n-\/\/ modified to cause ClassFormatError or ClassCircularityError exceptions.  The\n-\/\/ '(bad)' comments in most of the tests show where the modifications were made.\n-\/\/\n-\/\/ final inline class Value {\n-\/\/     static final Value VT = makeValue(0x01234567);\n-\/\/     final int int_v;\n-\/\/     Value() {\n-\/\/         int_v = 1;\n-\/\/     }\n-\/\/     static Value makeValue(int x) {\n-\/\/         Value v = Value.default;\n-\/\/         v = __WithField(v.int_v, x);\n-\/\/         return v;\n-\/\/     }\n-\/\/ }\n-\n-\n-\/\/ Test that class modifiers cannot have both ACC_PRIMITIVE and ACC_ABSTRACT set.\n-\/\/\n-class ValueAbstract {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [28] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #7 #23; \/\/ #1     at 0x0A\n-    Field #3 #24; \/\/ #2     at 0x0F\n-    class #9; \/\/ #3     at 0x14\n-    int 0x01234567; \/\/ #4     at 0x17\n-    Method #3 #25; \/\/ #5     at 0x1C\n-    Field #3 #26; \/\/ #6     at 0x21\n-    class #27; \/\/ #7     at 0x26\n-    Utf8 \"VT\"; \/\/ #8     at 0x29\n-    Utf8 \"ValueAbstract\"; \/\/ #9     at 0x2E\n-    Utf8 \"ValueTypes\"; \/\/ #10     at 0x36\n-    Utf8 \"LValueAbstract;\"; \/\/ #11     at 0x43\n-    Utf8 \"int_v\"; \/\/ #12     at 0x4D\n-    Utf8 \"I\"; \/\/ #13     at 0x55\n-    Utf8 \"<init>\"; \/\/ #14     at 0x59\n-    Utf8 \"()V\"; \/\/ #15     at 0x62\n-    Utf8 \"Code\"; \/\/ #16     at 0x68\n-    Utf8 \"LineNumberTable\"; \/\/ #17     at 0x6F\n-    Utf8 \"makeValueAbstract\"; \/\/ #18     at 0x81\n-    Utf8 \"(I)LValueAbstract;\"; \/\/ #19     at 0x8D\n-    Utf8 \"<clinit>\"; \/\/ #20     at 0x9A\n-    Utf8 \"SourceFile\"; \/\/ #21     at 0xA5\n-    Utf8 \"ValueAbstract.java\"; \/\/ #22     at 0xB2\n-    NameAndType #14 #15; \/\/ #23     at 0xBF\n-    NameAndType #12 #13; \/\/ #24     at 0xC4\n-    NameAndType #18 #19; \/\/ #25     at 0xC9\n-    NameAndType #8 #11; \/\/ #26     at 0xCE\n-    Utf8 \"java\/lang\/Object\"; \/\/ #27     at 0xD3\n-  } \/\/ Constant Pool\n-\n-  0x0C30; \/\/ access [  ACC_PRIMITIVE ACC_ABSTRACT(bad) ACC_SUPER ACC_FINAL ]\n-  #3;\/\/ this_cpx\n-  #7;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0xF0\n-      0x0118; \/\/ access\n-      #8; \/\/ name_cpx\n-      #11; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0xF8\n-      0x0010; \/\/ access\n-      #12; \/\/ name_cpx\n-      #13; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [3] { \/\/ methods\n-    { \/\/ Member at 0x0102\n-      0x0000; \/\/ access\n-      #14; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#16, 42) { \/\/ Code at 0x010A\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[10]{\n-            0x2AB700012A04B500;\n-            0x02B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#17, 14) { \/\/ LineNumberTable at 0x0126\n-              [3] { \/\/ LineNumberTable\n-                0  4; \/\/  at 0x0132\n-                4  5; \/\/  at 0x0136\n-                9  6; \/\/  at 0x013A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x013A\n-      0x0008; \/\/ access\n-      #18; \/\/ name_cpx\n-      #19; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#16, 44) { \/\/ Code at 0x0142\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[12]{\n-            0xCB00034C2B1ACC00;\n-            0x024C2BB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#17, 14) { \/\/ LineNumberTable at 0x0160\n-              [3] { \/\/ LineNumberTable\n-                0  8; \/\/  at 0x016C\n-                4  9; \/\/  at 0x0170\n-                10  10; \/\/  at 0x0174\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0174\n-      0x0008; \/\/ access\n-      #20; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#16, 33) { \/\/ Code at 0x017C\n-          1; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[9]{\n-            0x1204B80005B30006;\n-            0xB1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#17, 6) { \/\/ LineNumberTable at 0x0197\n-              [1] { \/\/ LineNumberTable\n-                0  2; \/\/  at 0x01A3\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [2] { \/\/ Attributes\n-    Attr(#21, 2) { \/\/ SourceFile at 0x01A5\n-      #22;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#10, 4) { \/\/ ValueTypes at 0x01AD\n-      0x00010003;\n-    } \/\/ end ValueTypes\n-  } \/\/ Attributes\n-} \/\/ end class ValueAbstract\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-\/\/ Test that class modifiers cannot have both ACC_PRIMITIVE and ACC_ENUM set.\n-\/\/\n-class ValueEnum {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [28] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #7 #23; \/\/ #1     at 0x0A\n-    Field #3 #24; \/\/ #2     at 0x0F\n-    class #9; \/\/ #3     at 0x14\n-    int 0x01234567; \/\/ #4     at 0x17\n-    Method #3 #25; \/\/ #5     at 0x1C\n-    Field #3 #26; \/\/ #6     at 0x21\n-    class #27; \/\/ #7     at 0x26\n-    Utf8 \"VT\"; \/\/ #8     at 0x29\n-    Utf8 \"ValueEnum\"; \/\/ #9     at 0x2E\n-    Utf8 \"ValueTypes\"; \/\/ #10     at 0x36\n-    Utf8 \"LValueEnum;\"; \/\/ #11     at 0x43\n-    Utf8 \"int_v\"; \/\/ #12     at 0x4D\n-    Utf8 \"I\"; \/\/ #13     at 0x55\n-    Utf8 \"<init>\"; \/\/ #14     at 0x59\n-    Utf8 \"()V\"; \/\/ #15     at 0x62\n-    Utf8 \"Code\"; \/\/ #16     at 0x68\n-    Utf8 \"LineNumberTable\"; \/\/ #17     at 0x6F\n-    Utf8 \"makeValueEnum\"; \/\/ #18     at 0x81\n-    Utf8 \"(I)LValueEnum;\"; \/\/ #19     at 0x8D\n-    Utf8 \"<clinit>\"; \/\/ #20     at 0x9A\n-    Utf8 \"SourceFile\"; \/\/ #21     at 0xA5\n-    Utf8 \"ValueEnum.java\"; \/\/ #22     at 0xB2\n-    NameAndType #14 #15; \/\/ #23     at 0xBF\n-    NameAndType #12 #13; \/\/ #24     at 0xC4\n-    NameAndType #18 #19; \/\/ #25     at 0xC9\n-    NameAndType #8 #11; \/\/ #26     at 0xCE\n-    Utf8 \"java\/lang\/Object\"; \/\/ #27     at 0xD3\n-  } \/\/ Constant Pool\n-\n-  0x04850; \/\/ access [  ACC_VALUE ACC_PRIMITIVE ACC_ENUM(bad) ACC_FINAL ]\n-  #3;\/\/ this_cpx\n-  #7;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0xF0\n-      0x0118; \/\/ access\n-      #8; \/\/ name_cpx\n-      #11; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0xF8\n-      0x0010; \/\/ access\n-      #12; \/\/ name_cpx\n-      #13; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [3] { \/\/ methods\n-    { \/\/ Member at 0x0102\n-      0x0000; \/\/ access\n-      #14; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#16, 42) { \/\/ Code at 0x010A\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[10]{\n-            0x2AB700012A04B500;\n-            0x02B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#17, 14) { \/\/ LineNumberTable at 0x0126\n-              [3] { \/\/ LineNumberTable\n-                0  4; \/\/  at 0x0132\n-                4  5; \/\/  at 0x0136\n-                9  6; \/\/  at 0x013A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x013A\n-      0x0008; \/\/ access\n-      #18; \/\/ name_cpx\n-      #19; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#16, 44) { \/\/ Code at 0x0142\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[12]{\n-            0xCB00034C2B1ACC00;\n-            0x024C2BB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#17, 14) { \/\/ LineNumberTable at 0x0160\n-              [3] { \/\/ LineNumberTable\n-                0  8; \/\/  at 0x016C\n-                4  9; \/\/  at 0x0170\n-                10  10; \/\/  at 0x0174\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0174\n-      0x0008; \/\/ access\n-      #20; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#16, 33) { \/\/ Code at 0x017C\n-          1; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[9]{\n-            0x1204B80005B30006;\n-            0xB1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#17, 6) { \/\/ LineNumberTable at 0x0197\n-              [1] { \/\/ LineNumberTable\n-                0  2; \/\/  at 0x01A3\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [2] { \/\/ Attributes\n-    Attr(#21, 2) { \/\/ SourceFile at 0x01A5\n-      #22;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#10, 4) { \/\/ ValueTypes at 0x01AD\n-      0x00010003;\n-    } \/\/ end ValueTypes\n-  } \/\/ Attributes\n-} \/\/ end class ValueEnum\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-\/\/ Test that inline type fields must be final.\n-\/\/\n-class ValueFieldNotFinal {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [28] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #7 #23; \/\/ #1     at 0x0A\n-    Field #3 #24; \/\/ #2     at 0x0F\n-    class #9; \/\/ #3     at 0x14\n-    int 0x01234567; \/\/ #4     at 0x17\n-    Method #3 #25; \/\/ #5     at 0x1C\n-    Field #3 #26; \/\/ #6     at 0x21\n-    class #27; \/\/ #7     at 0x26\n-    Utf8 \"VT\"; \/\/ #8     at 0x29\n-    Utf8 \"ValueFieldNotFinal\"; \/\/ #9     at 0x2E\n-    Utf8 \"ValueTypes\"; \/\/ #10     at 0x36\n-    Utf8 \"LValueFieldNotFinal;\"; \/\/ #11     at 0x43\n-    Utf8 \"int_v\"; \/\/ #12     at 0x4D\n-    Utf8 \"I\"; \/\/ #13     at 0x55\n-    Utf8 \"<init>\"; \/\/ #14     at 0x59\n-    Utf8 \"()V\"; \/\/ #15     at 0x62\n-    Utf8 \"Code\"; \/\/ #16     at 0x68\n-    Utf8 \"LineNumberTable\"; \/\/ #17     at 0x6F\n-    Utf8 \"makeValueFieldNotFinal\"; \/\/ #18     at 0x81\n-    Utf8 \"(I)LValueFieldNotFinal;\"; \/\/ #19     at 0x8D\n-    Utf8 \"<clinit>\"; \/\/ #20     at 0x9A\n-    Utf8 \"SourceFile\"; \/\/ #21     at 0xA5\n-    Utf8 \"ValueFieldNotFinal.java\"; \/\/ #22     at 0xB2\n-    NameAndType #14 #15; \/\/ #23     at 0xBF\n-    NameAndType #12 #13; \/\/ #24     at 0xC4\n-    NameAndType #18 #19; \/\/ #25     at 0xC9\n-    NameAndType #8 #11; \/\/ #26     at 0xCE\n-    Utf8 \"java\/lang\/Object\"; \/\/ #27     at 0xD3\n-  } \/\/ Constant Pool\n-\n-  0x0850; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_FINAL ]\n-  #3;\/\/ this_cpx\n-  #7;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0xF0\n-      0x0118; \/\/ access\n-      #8; \/\/ name_cpx\n-      #11; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0xF8\n-      0x0000; \/\/ access [ Field not ACC_FINAL(bad) ]\n-      #12; \/\/ name_cpx\n-      #13; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [3] { \/\/ methods\n-    { \/\/ Member at 0x0102\n-      0x0000; \/\/ access\n-      #14; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#16, 42) { \/\/ Code at 0x010A\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[10]{\n-            0x2AB700012A04B500;\n-            0x02B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#17, 14) { \/\/ LineNumberTable at 0x0126\n-              [3] { \/\/ LineNumberTable\n-                0  4; \/\/  at 0x0132\n-                4  5; \/\/  at 0x0136\n-                9  6; \/\/  at 0x013A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x013A\n-      0x0008; \/\/ access\n-      #18; \/\/ name_cpx\n-      #19; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#16, 44) { \/\/ Code at 0x0142\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[12]{\n-            0xCB00034C2B1ACC00;\n-            0x024C2BB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#17, 14) { \/\/ LineNumberTable at 0x0160\n-              [3] { \/\/ LineNumberTable\n-                0  8; \/\/  at 0x016C\n-                4  9; \/\/  at 0x0170\n-                10  10; \/\/  at 0x0174\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0174\n-      0x0008; \/\/ access\n-      #20; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#16, 33) { \/\/ Code at 0x017C\n-          1; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[9]{\n-            0x1204B80005B30006;\n-            0xB1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#17, 6) { \/\/ LineNumberTable at 0x0197\n-              [1] { \/\/ LineNumberTable\n-                0  2; \/\/  at 0x01A3\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [2] { \/\/ Attributes\n-    Attr(#21, 2) { \/\/ SourceFile at 0x01A5\n-      #22;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#10, 4) { \/\/ ValueTypes at 0x01AD\n-      0x00010003;\n-    } \/\/ end ValueTypes\n-  } \/\/ Attributes\n-} \/\/ end class ValueFieldNotFinal\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-\/\/ Test that class modifiers cannot have both ACC_PRIMITIVE and ACC_INTERFACE set.\n-\/\/\n-class ValueInterface {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [27] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #7 #21; \/\/ #1     at 0x0A\n-    Field #3 #22; \/\/ #2     at 0x0F\n-    class #23; \/\/ #3     at 0x14\n-    int 0x01234567; \/\/ #4     at 0x17\n-    Method #3 #24; \/\/ #5     at 0x1C\n-    Field #3 #25; \/\/ #6     at 0x21\n-    class #26; \/\/ #7     at 0x26\n-    Utf8 \"VT\"; \/\/ #8     at 0x29\n-    Utf8 \"LValueInterface;\"; \/\/ #9     at 0x2E\n-    Utf8 \"int_v\"; \/\/ #10     at 0x3C\n-    Utf8 \"I\"; \/\/ #11     at 0x44\n-    Utf8 \"<init>\"; \/\/ #12     at 0x48\n-    Utf8 \"()V\"; \/\/ #13     at 0x51\n-    Utf8 \"Code\"; \/\/ #14     at 0x57\n-    Utf8 \"LineNumberTable\"; \/\/ #15     at 0x5E\n-    Utf8 \"makeValueInterface\"; \/\/ #16     at 0x70\n-    Utf8 \"(I)LValueInterface;\"; \/\/ #17     at 0x80\n-    Utf8 \"<clinit>\"; \/\/ #18     at 0x91\n-    Utf8 \"SourceFile\"; \/\/ #19     at 0x9C\n-    Utf8 \"ValueInterface.java\"; \/\/ #20     at 0xA9\n-    NameAndType #12 #13; \/\/ #21     at 0xBA\n-    NameAndType #10 #11; \/\/ #22     at 0xBF\n-    Utf8 \"ValueInterface\"; \/\/ #23     at 0xC4\n-    NameAndType #16 #17; \/\/ #24     at 0xD0\n-    NameAndType #8 #9; \/\/ #25     at 0xD5\n-    Utf8 \"java\/lang\/Object\"; \/\/ #26     at 0xDA\n-  } \/\/ Constant Pool\n-\n-  0x0A30; \/\/ access [ ACC_PRIMITIVE ACC_INTERFACE(bad) ACC_SUPER ACC_FINAL ]\n-  #3;\/\/ this_cpx\n-  #7;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0xF7\n-      0x0018; \/\/ access\n-      #8; \/\/ name_cpx\n-      #9; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0xFF\n-      0x0010; \/\/ access\n-      #10; \/\/ name_cpx\n-      #11; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [1] { \/\/ methods\n-    { \/\/ Member at 0x0141\n-      0x0008; \/\/ access\n-      #16; \/\/ name_cpx\n-      #17; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#14, 44) { \/\/ Code at 0x0149\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[12]{\n-            0xCB00034C2B1ACC00;\n-            0x024C2BB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#15, 14) { \/\/ LineNumberTable at 0x0167\n-              [3] { \/\/ LineNumberTable\n-                0  8; \/\/  at 0x0173\n-                4  9; \/\/  at 0x0177\n-                10  10; \/\/  at 0x017B\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [1] { \/\/ Attributes\n-    Attr(#19, 2) { \/\/ SourceFile at 0x01AC\n-      #20;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class ValueInterface\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-\/\/ Test that inline type instance methods cannot be synchronized.\n-\/\/\n-\/\/ final inline class ValueMethodSynch {\n-\/\/     final int int_v;\n-\/\/\n-\/\/     ValueMethodSynch() { int_v = 1; }\n-\/\/\n-\/\/     int getInt(int x) { return x; }\n-\/\/ }\n-\n-class ValueMethodSynch {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [46] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #23; \/\/ #1     at 0x0A\n-    Field #1 #24; \/\/ #2     at 0x0D\n-    InvokeDynamic 0s #27; \/\/ #3     at 0x12\n-    InvokeDynamic 0s #28; \/\/ #4     at 0x17\n-    InvokeDynamic 0s #29; \/\/ #5     at 0x1C\n-    class #30; \/\/ #6     at 0x21\n-    Utf8 \"int_v\"; \/\/ #7     at 0x24\n-    Utf8 \"I\"; \/\/ #8     at 0x2C\n-    Utf8 \"getInt\"; \/\/ #9     at 0x30\n-    Utf8 \"(I)I\"; \/\/ #10     at 0x39\n-    Utf8 \"Code\"; \/\/ #11     at 0x40\n-    Utf8 \"LineNumberTable\"; \/\/ #12     at 0x47\n-    Utf8 \"hashCode\"; \/\/ #13     at 0x59\n-    Utf8 \"()I\"; \/\/ #14     at 0x64\n-    Utf8 \"equals\"; \/\/ #15     at 0x6A\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #16     at 0x73\n-    Utf8 \"toString\"; \/\/ #17     at 0x8B\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #18     at 0x96\n-    Utf8 \"<init>\"; \/\/ #19     at 0xAD\n-    Utf8 \"()QValueMethodSynch;\"; \/\/ #20     at 0xB6\n-    Utf8 \"SourceFile\"; \/\/ #21     at 0xCD\n-    Utf8 \"ValueMethodSynch.java\"; \/\/ #22     at 0xDA\n-    Utf8 \"ValueMethodSynch\"; \/\/ #23     at 0xF2\n-    NameAndType #7 #8; \/\/ #24     at 0x0105\n-    Utf8 \"BootstrapMethods\"; \/\/ #25     at 0x010A\n-    MethodHandle 6b #31; \/\/ #26     at 0x011D\n-    NameAndType #13 #32; \/\/ #27     at 0x0121\n-    NameAndType #15 #33; \/\/ #28     at 0x0126\n-    NameAndType #17 #34; \/\/ #29     at 0x012B\n-    Utf8 \"java\/lang\/Object\"; \/\/ #30     at 0x0130\n-    Method #35 #36; \/\/ #31     at 0x0143\n-    Utf8 \"(QValueMethodSynch;)I\"; \/\/ #32     at 0x0148\n-    Utf8 \"(QValueMethodSynch;Ljava\/lang\/Object;)Z\"; \/\/ #33     at 0x0160\n-    Utf8 \"(QValueMethodSynch;)Ljava\/lang\/String;\"; \/\/ #34     at 0x018A\n-    class #37; \/\/ #35     at 0x01B3\n-    NameAndType #38 #42; \/\/ #36     at 0x01B6\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #37     at 0x01BB\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #38     at 0x01E4\n-    class #44; \/\/ #39     at 0x01FA\n-    Utf8 \"Lookup\"; \/\/ #40     at 0x01FD\n-    Utf8 \"InnerClasses\"; \/\/ #41     at 0x0206\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #42     at 0x0215\n-    class #45; \/\/ #43     at 0x028B\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #44     at 0x028E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #45     at 0x02B6\n-  } \/\/ Constant Pool\n-\n-  0x0850; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #6;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ fields\n-    { \/\/ Member at 0x02E1\n-      0x0010; \/\/ access\n-      #7; \/\/ name_cpx\n-      #8; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [5] { \/\/ methods\n-    { \/\/ Member at 0x02EB\n-      0x0020; \/\/ access [ ACC_SYNCHRONIZED(bad) ]\n-      #9; \/\/ name_cpx\n-      #10; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#11, 26) { \/\/ Code at 0x02F3\n-          1; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[2]{\n-            0x1BAC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 6) { \/\/ LineNumberTable at 0x0307\n-              [1] { \/\/ LineNumberTable\n-                0  9; \/\/  at 0x0313\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0313\n-      0x0011; \/\/ access\n-      #13; \/\/ name_cpx\n-      #14; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#11, 31) { \/\/ Code at 0x031B\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00030000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 6) { \/\/ LineNumberTable at 0x0334\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0340\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0340\n-      0x0011; \/\/ access\n-      #15; \/\/ name_cpx\n-      #16; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#11, 32) { \/\/ Code at 0x0348\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA00040000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 6) { \/\/ LineNumberTable at 0x0362\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x036E\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036E\n-      0x0011; \/\/ access\n-      #17; \/\/ name_cpx\n-      #18; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#11, 31) { \/\/ Code at 0x0376\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00050000B0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 6) { \/\/ LineNumberTable at 0x038F\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x039B\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x039B\n-      0x0008; \/\/ access\n-      #19; \/\/ name_cpx\n-      #20; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#11, 45) { \/\/ Code at 0x03A3\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014B042A5FCC;\n-            0x00024B2AB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 14) { \/\/ LineNumberTable at 0x03C2\n-              [3] { \/\/ LineNumberTable\n-                0  4; \/\/  at 0x03CE\n-                4  5; \/\/  at 0x03D2\n-                11  6; \/\/  at 0x03D6\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#21, 2) { \/\/ SourceFile at 0x03D8\n-      #22;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#41, 10) { \/\/ InnerClasses at 0x03E0\n-      [1] { \/\/ InnerClasses\n-        #39 #43 #40 25; \/\/  at 0x03F0\n-      }\n-    } \/\/ end InnerClasses\n-    ;\n-    Attr(#25, 6) { \/\/ BootstrapMethods at 0x03F0\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #26; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-  } \/\/ Attributes\n-} \/\/ end class ValueMethodSynch\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-\/\/ Inline types Circ and Circ2 have fields of each other's type.  This should\n-\/\/ cause a ClassCircularityError exception when one of them is being loaded.\n-\/\/\n-\/\/ The inline types are based on these two Java classes:\n-\/\/\n-\/\/ final inline class Circ {\n-\/\/     static final Circ VT = makeCirc(0x01234567);\n-\/\/     final int int_v;\n-\/\/     final Circ2 v2;\n-\/\/     Circ() {\n-\/\/         int_v = 1;\n-\/\/         v2 = Circ2.default;\n-\/\/     }\n-\/\/     static Circ makeCirc(int x) {\n-\/\/         Circ v = Circ.default;\n-\/\/         v = __WithField(v.int_v, x);\n-\/\/         return v;\n-\/\/     }\n-\/\/ }\n-\/\/----------------------------------------------------------------\n-\/\/ final inline class Circ2 {\n-\/\/     static final Circ2 VT = makeCirc2('\\u0123');\n-\/\/     final char char_v;\n-\/\/     final Circ vv;\n-\/\/     Circ2() {\n-\/\/         char_v = 'z';\n-\/\/         vv = Circ.default;\n-\/\/     }\n-\/\/     static Circ2 makeCirc2(char c) {\n-\/\/         Circ2 v = Circ2.default;\n-\/\/         v = __WithField(v.char_v, c);\n-\/\/         return v;\n-\/\/     }\n-\/\/ }\n-\n-class Circ {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [61] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #34; \/\/ #1     at 0x0A\n-    Field #1 #35; \/\/ #2     at 0x0D\n-    class #36; \/\/ #3     at 0x12\n-    Field #1 #37; \/\/ #4     at 0x15\n-    InvokeDynamic 0s #40; \/\/ #5     at 0x1A\n-    InvokeDynamic 0s #41; \/\/ #6     at 0x1F\n-    InvokeDynamic 0s #42; \/\/ #7     at 0x24\n-    int 0x01234567; \/\/ #8     at 0x29\n-    Method #1 #43; \/\/ #9     at 0x2E\n-    Field #1 #44; \/\/ #10     at 0x33\n-    class #45; \/\/ #11     at 0x38\n-    Utf8 \"VT\"; \/\/ #12     at 0x3B\n-    Utf8 \"QCirc;\"; \/\/ #13     at 0x40\n-    Utf8 \"int_v\"; \/\/ #14     at 0x49\n-    Utf8 \"I\"; \/\/ #15     at 0x51\n-    Utf8 \"v2\"; \/\/ #16     at 0x55\n-    Utf8 \"QCirc2;\"; \/\/ #17     at 0x5A\n-    Utf8 \"makeCirc\"; \/\/ #18     at 0x65\n-    Utf8 \"(I)QCirc;\"; \/\/ #19     at 0x6F\n-    Utf8 \"Code\"; \/\/ #20     at 0x7B\n-    Utf8 \"LineNumberTable\"; \/\/ #21     at 0x82\n-    Utf8 \"hashCode\"; \/\/ #22     at 0x94\n-    Utf8 \"()I\"; \/\/ #23     at 0x9F\n-    Utf8 \"equals\"; \/\/ #24     at 0xA5\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #25     at 0xAE\n-    Utf8 \"toString\"; \/\/ #26     at 0xC6\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #27     at 0xD1\n-    Utf8 \"<clinit>\"; \/\/ #28     at 0xE8\n-    Utf8 \"()V\"; \/\/ #29     at 0xF3\n-    Utf8 \"<vnew>\"; \/\/ #30     at 0xF9\n-    Utf8 \"()QCirc;\"; \/\/ #31     at 0x0102\n-    Utf8 \"SourceFile\"; \/\/ #32     at 0x010D\n-    Utf8 \"Circ.java\"; \/\/ #33     at 0x011A\n-    Utf8 \"Circ\"; \/\/ #34     at 0x0126\n-    NameAndType #14 #15; \/\/ #35     at 0x012D\n-    Utf8 \"Circ2\"; \/\/ #36     at 0x0132\n-    NameAndType #16 #17; \/\/ #37     at 0x013A\n-    Utf8 \"BootstrapMethods\"; \/\/ #38     at 0x013F\n-    MethodHandle 6b #46; \/\/ #39     at 0x0152\n-    NameAndType #22 #47; \/\/ #40     at 0x0156\n-    NameAndType #24 #48; \/\/ #41     at 0x015B\n-    NameAndType #26 #49; \/\/ #42     at 0x0160\n-    NameAndType #18 #19; \/\/ #43     at 0x0165\n-    NameAndType #12 #13; \/\/ #44     at 0x016A\n-    Utf8 \"java\/lang\/Object\"; \/\/ #45     at 0x016F\n-    Method #50 #51; \/\/ #46     at 0x0182\n-    Utf8 \"(QCirc;)I\"; \/\/ #47     at 0x0187\n-    Utf8 \"(QCirc;Ljava\/lang\/Object;)Z\"; \/\/ #48     at 0x0193\n-    Utf8 \"(QCirc;)Ljava\/lang\/String;\"; \/\/ #49     at 0x01B1\n-    class #52; \/\/ #50     at 0x01CE\n-    NameAndType #53 #57; \/\/ #51     at 0x01D1\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #52     at 0x01D6\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #53     at 0x01FF\n-    class #59; \/\/ #54     at 0x0215\n-    Utf8 \"Lookup\"; \/\/ #55     at 0x0218\n-    Utf8 \"InnerClasses\"; \/\/ #56     at 0x0221\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #57     at 0x0230\n-    class #60; \/\/ #58     at 0x02A6\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #59     at 0x02A9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #60     at 0x02D1\n-  } \/\/ Constant Pool\n-\n-  0x0850; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #11;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [3] { \/\/ fields\n-    { \/\/ Member at 0x02FC\n-      0x0018; \/\/ access\n-      #12; \/\/ name_cpx\n-      #13; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0304\n-      0x0010; \/\/ access\n-      #14; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030C\n-      0x0010; \/\/ access\n-      #16; \/\/ name_cpx\n-      #17; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0316\n-      0x0008; \/\/ access\n-      #18; \/\/ name_cpx\n-      #19; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 45) { \/\/ Code at 0x031E\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014C1A2B5FCC;\n-            0x00024C2BB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 14) { \/\/ LineNumberTable at 0x033D\n-              [3] { \/\/ LineNumberTable\n-                0  12; \/\/  at 0x0349\n-                4  13; \/\/  at 0x034D\n-                11  14; \/\/  at 0x0351\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0351\n-      0x0011; \/\/ access\n-      #22; \/\/ name_cpx\n-      #23; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 31) { \/\/ Code at 0x0359\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00050000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 6) { \/\/ LineNumberTable at 0x0372\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x037E\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x037E\n-      0x0011; \/\/ access\n-      #24; \/\/ name_cpx\n-      #25; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 32) { \/\/ Code at 0x0386\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA00060000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 6) { \/\/ LineNumberTable at 0x03A0\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03AC\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03AC\n-      0x0011; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 31) { \/\/ Code at 0x03B4\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00070000B0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 6) { \/\/ LineNumberTable at 0x03CD\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03D9\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03D9\n-      0x0008; \/\/ access\n-      #28; \/\/ name_cpx\n-      #29; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 33) { \/\/ Code at 0x03E1\n-          1; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[9]{\n-            0x1208B80009B3000A;\n-            0xB1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 6) { \/\/ LineNumberTable at 0x03FC\n-              [1] { \/\/ LineNumberTable\n-                0  2; \/\/  at 0x0408\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0408\n-      0x0008; \/\/ access\n-      #30; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 58) { \/\/ Code at 0x0410\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[22]{\n-            0xCB00014B042A5FCC;\n-            0x00024BCB00032A5F;\n-            0xCC00044B2AB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 18) { \/\/ LineNumberTable at 0x0438\n-              [4] { \/\/ LineNumberTable\n-                0  6; \/\/  at 0x0444\n-                4  7; \/\/  at 0x0448\n-                11  8; \/\/  at 0x044C\n-                20  9; \/\/  at 0x0450\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#32, 2) { \/\/ SourceFile at 0x0452\n-      #33;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#56, 10) { \/\/ InnerClasses at 0x045A\n-      [1] { \/\/ InnerClasses\n-        #54 #58 #55 25; \/\/  at 0x046A\n-      }\n-    } \/\/ end InnerClasses\n-    ;\n-    Attr(#38, 6) { \/\/ BootstrapMethods at 0x046A\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #39; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-  } \/\/ Attributes\n-} \/\/ end class Circ\n-\n-class Circ2 {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [60] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #33; \/\/ #1     at 0x0A\n-    Field #1 #34; \/\/ #2     at 0x0D\n-    class #35; \/\/ #3     at 0x12\n-    Field #1 #36; \/\/ #4     at 0x15\n-    InvokeDynamic 0s #39; \/\/ #5     at 0x1A\n-    InvokeDynamic 0s #40; \/\/ #6     at 0x1F\n-    InvokeDynamic 0s #41; \/\/ #7     at 0x24\n-    Method #1 #42; \/\/ #8     at 0x29\n-    Field #1 #43; \/\/ #9     at 0x2E\n-    class #44; \/\/ #10     at 0x33\n-    Utf8 \"VT\"; \/\/ #11     at 0x36\n-    Utf8 \"QCirc2;\"; \/\/ #12     at 0x3B\n-    Utf8 \"char_v\"; \/\/ #13     at 0x45\n-    Utf8 \"C\"; \/\/ #14     at 0x4E\n-    Utf8 \"vv\"; \/\/ #15     at 0x52\n-    Utf8 \"QCirc;\"; \/\/ #16     at 0x57\n-    Utf8 \"makeCirc2\"; \/\/ #17     at 0x60\n-    Utf8 \"(C)QCirc2;\"; \/\/ #18     at 0x6C\n-    Utf8 \"Code\"; \/\/ #19     at 0x79\n-    Utf8 \"LineNumberTable\"; \/\/ #20     at 0x80\n-    Utf8 \"hashCode\"; \/\/ #21     at 0x92\n-    Utf8 \"()I\"; \/\/ #22     at 0x9D\n-    Utf8 \"equals\"; \/\/ #23     at 0xA3\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #24     at 0xAC\n-    Utf8 \"toString\"; \/\/ #25     at 0xC4\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #26     at 0xCF\n-    Utf8 \"<clinit>\"; \/\/ #27     at 0xE6\n-    Utf8 \"()V\"; \/\/ #28     at 0xF1\n-    Utf8 \"<vnew>\"; \/\/ #29     at 0xF7\n-    Utf8 \"()QCirc2;\"; \/\/ #30     at 0x0100\n-    Utf8 \"SourceFile\"; \/\/ #31     at 0x010C\n-    Utf8 \"Circ2.java\"; \/\/ #32     at 0x0119\n-    Utf8 \"Circ2\"; \/\/ #33     at 0x0126\n-    NameAndType #13 #14; \/\/ #34     at 0x012E\n-    Utf8 \"Circ\"; \/\/ #35     at 0x0133\n-    NameAndType #15 #16; \/\/ #36     at 0x013A\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x013F\n-    MethodHandle 6b #45; \/\/ #38     at 0x0152\n-    NameAndType #21 #46; \/\/ #39     at 0x0156\n-    NameAndType #23 #47; \/\/ #40     at 0x015B\n-    NameAndType #25 #48; \/\/ #41     at 0x0160\n-    NameAndType #17 #18; \/\/ #42     at 0x0165\n-    NameAndType #11 #12; \/\/ #43     at 0x016A\n-    Utf8 \"java\/lang\/Object\"; \/\/ #44     at 0x016F\n-    Method #49 #50; \/\/ #45     at 0x0182\n-    Utf8 \"(QCirc2;)I\"; \/\/ #46     at 0x0187\n-    Utf8 \"(QCirc2;Ljava\/lang\/Object;)Z\"; \/\/ #47     at 0x0194\n-    Utf8 \"(QCirc2;)Ljava\/lang\/String;\"; \/\/ #48     at 0x01B3\n-    class #51; \/\/ #49     at 0x01D1\n-    NameAndType #52 #56; \/\/ #50     at 0x01D4\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #51     at 0x01D9\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #52     at 0x0202\n-    class #58; \/\/ #53     at 0x0218\n-    Utf8 \"Lookup\"; \/\/ #54     at 0x021B\n-    Utf8 \"InnerClasses\"; \/\/ #55     at 0x0224\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #56     at 0x0233\n-    class #59; \/\/ #57     at 0x02A9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #58     at 0x02AC\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #59     at 0x02D4\n-  } \/\/ Constant Pool\n-\n-  0x0850; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #10;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [3] { \/\/ fields\n-    { \/\/ Member at 0x02FF\n-      0x0018; \/\/ access\n-      #11; \/\/ name_cpx\n-      #12; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0307\n-      0x0010; \/\/ access\n-      #13; \/\/ name_cpx\n-      #14; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030F\n-      0x0010; \/\/ access\n-      #15; \/\/ name_cpx\n-      #16; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0319\n-      0x0008; \/\/ access\n-      #17; \/\/ name_cpx\n-      #18; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#19, 45) { \/\/ Code at 0x0321\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014C1A2B5FCC;\n-            0x00024C2BB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#20, 14) { \/\/ LineNumberTable at 0x0340\n-              [3] { \/\/ LineNumberTable\n-                0  12; \/\/  at 0x034C\n-                4  13; \/\/  at 0x0350\n-                11  14; \/\/  at 0x0354\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0354\n-      0x0011; \/\/ access\n-      #21; \/\/ name_cpx\n-      #22; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#19, 31) { \/\/ Code at 0x035C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00050000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#20, 6) { \/\/ LineNumberTable at 0x0375\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0381\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0381\n-      0x0011; \/\/ access\n-      #23; \/\/ name_cpx\n-      #24; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#19, 32) { \/\/ Code at 0x0389\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA00060000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#20, 6) { \/\/ LineNumberTable at 0x03A3\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03AF\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03AF\n-      0x0011; \/\/ access\n-      #25; \/\/ name_cpx\n-      #26; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#19, 31) { \/\/ Code at 0x03B7\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00070000B0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#20, 6) { \/\/ LineNumberTable at 0x03D0\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03DC\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03DC\n-      0x0008; \/\/ access\n-      #27; \/\/ name_cpx\n-      #28; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#19, 34) { \/\/ Code at 0x03E4\n-          1; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[10]{\n-            0x110123B80008B300;\n-            0x09B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#20, 6) { \/\/ LineNumberTable at 0x0400\n-              [1] { \/\/ LineNumberTable\n-                0  2; \/\/  at 0x040C\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x040C\n-      0x0008; \/\/ access\n-      #29; \/\/ name_cpx\n-      #30; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#19, 59) { \/\/ Code at 0x0414\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[23]{\n-            0xCB00014B107A2A5F;\n-            0xCC00024BCB00032A;\n-            0x5FCC00044B2AB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#20, 18) { \/\/ LineNumberTable at 0x043D\n-              [4] { \/\/ LineNumberTable\n-                0  6; \/\/  at 0x0449\n-                4  7; \/\/  at 0x044D\n-                12  8; \/\/  at 0x0451\n-                21  9; \/\/  at 0x0455\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#31, 2) { \/\/ SourceFile at 0x0457\n-      #32;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#55, 10) { \/\/ InnerClasses at 0x045F\n-      [1] { \/\/ InnerClasses\n-        #53 #57 #54 25; \/\/  at 0x046F\n-      }\n-    } \/\/ end InnerClasses\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x046F\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-  } \/\/ Attributes\n-} \/\/ end class Circ2\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-\/\/ Inline types CircStaticA and CircStaticB have static fields of each other's\n-\/\/ type.  This should cause a ClassCircularityError exception when one of them\n-\/\/ is being loaded.\n-\/\/\n-\/\/ The inline types are based on these two Java classes:\n-\/\/\n-\/\/ final inline class CircStaticA {\n-\/\/     static final CircStaticA VT = makeCircStaticA(0x01234567);\n-\/\/     final int int_v;\n-\/\/     static final CircStaticB v2 = CircStaticB.default;\n-\/\/     CircStaticA() {\n-\/\/         int_v = 1;\n-\/\/     }\n-\/\/     static CircStaticA makeCircStaticA(int x) {\n-\/\/         CircStaticA v = CircStaticA.default;\n-\/\/         v = __WithField(v.int_v, x);\n-\/\/         return v;\n-\/\/     }\n-\/\/ }\n-\/\/----------------------------------------------------------------\n-\/\/ final inline class CircStaticB {\n-\/\/     static final CircStaticB VT = makeCircStaticB(0x01234567);\n-\/\/     final int int_v;\n-\/\/     static final CircStaticA v2 = CircStaticA.default;\n-\/\/     CircStaticB() {\n-\/\/         int_v = 1;\n-\/\/     }\n-\/\/     static CircStaticB makeCircStaticB(int x) {\n-\/\/         CircStaticB v = CircStaticB.default;\n-\/\/         v = __WithField(v.int_v, x);\n-\/\/         return v;\n-\/\/     }\n-\/\/ }\n-\n-class CircStaticA {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [61] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #34; \/\/ #1     at 0x0A\n-    Field #1 #35; \/\/ #2     at 0x0D\n-    InvokeDynamic 0s #38; \/\/ #3     at 0x12\n-    InvokeDynamic 0s #39; \/\/ #4     at 0x17\n-    InvokeDynamic 0s #40; \/\/ #5     at 0x1C\n-    int 0x01234567; \/\/ #6     at 0x21\n-    Method #1 #41; \/\/ #7     at 0x26\n-    Field #1 #42; \/\/ #8     at 0x2B\n-    class #43; \/\/ #9     at 0x30\n-    Field #1 #44; \/\/ #10     at 0x33\n-    class #45; \/\/ #11     at 0x38\n-    Utf8 \"VT\"; \/\/ #12     at 0x3B\n-    Utf8 \"QCircStaticA;\"; \/\/ #13     at 0x40\n-    Utf8 \"int_v\"; \/\/ #14     at 0x50\n-    Utf8 \"I\"; \/\/ #15     at 0x58\n-    Utf8 \"v2\"; \/\/ #16     at 0x5C\n-    Utf8 \"QCircStaticB;\"; \/\/ #17     at 0x61\n-    Utf8 \"makeCircStaticA\"; \/\/ #18     at 0x71\n-    Utf8 \"(I)QCircStaticA;\"; \/\/ #19     at 0x83\n-    Utf8 \"Code\"; \/\/ #20     at 0x96\n-    Utf8 \"LineNumberTable\"; \/\/ #21     at 0x9D\n-    Utf8 \"hashCode\"; \/\/ #22     at 0xAF\n-    Utf8 \"()I\"; \/\/ #23     at 0xBA\n-    Utf8 \"equals\"; \/\/ #24     at 0xC0\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #25     at 0xC9\n-    Utf8 \"toString\"; \/\/ #26     at 0xE1\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #27     at 0xEC\n-    Utf8 \"<clinit>\"; \/\/ #28     at 0x0103\n-    Utf8 \"()V\"; \/\/ #29     at 0x010E\n-    Utf8 \"<vnew>\"; \/\/ #30     at 0x0114\n-    Utf8 \"()QCircStaticA;\"; \/\/ #31     at 0x011D\n-    Utf8 \"SourceFile\"; \/\/ #32     at 0x012F\n-    Utf8 \"CircStaticA.java\"; \/\/ #33     at 0x013C\n-    Utf8 \"CircStaticA\"; \/\/ #34     at 0x014F\n-    NameAndType #14 #15; \/\/ #35     at 0x015D\n-    Utf8 \"BootstrapMethods\"; \/\/ #36     at 0x0162\n-    MethodHandle 6b #46; \/\/ #37     at 0x0175\n-    NameAndType #22 #47; \/\/ #38     at 0x0179\n-    NameAndType #24 #48; \/\/ #39     at 0x017E\n-    NameAndType #26 #49; \/\/ #40     at 0x0183\n-    NameAndType #18 #19; \/\/ #41     at 0x0188\n-    NameAndType #12 #13; \/\/ #42     at 0x018D\n-    Utf8 \"CircStaticB\"; \/\/ #43     at 0x0192\n-    NameAndType #16 #17; \/\/ #44     at 0x01A0\n-    Utf8 \"java\/lang\/Object\"; \/\/ #45     at 0x01A5\n-    Method #50 #51; \/\/ #46     at 0x01B8\n-    Utf8 \"(QCircStaticA;)I\"; \/\/ #47     at 0x01BD\n-    Utf8 \"(QCircStaticA;Ljava\/lang\/Object;)Z\"; \/\/ #48     at 0x01D0\n-    Utf8 \"(QCircStaticA;)Ljava\/lang\/String;\"; \/\/ #49     at 0x01F5\n-    class #52; \/\/ #50     at 0x0219\n-    NameAndType #53 #57; \/\/ #51     at 0x021C\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #52     at 0x0221\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #53     at 0x024A\n-    class #59; \/\/ #54     at 0x0260\n-    Utf8 \"Lookup\"; \/\/ #55     at 0x0263\n-    Utf8 \"InnerClasses\"; \/\/ #56     at 0x026C\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #57     at 0x027B\n-    class #60; \/\/ #58     at 0x02F1\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #59     at 0x02F4\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #60     at 0x031C\n-  } \/\/ Constant Pool\n-\n-  0x0850; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #11;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [3] { \/\/ fields\n-    { \/\/ Member at 0x0347\n-      0x0018; \/\/ access\n-      #12; \/\/ name_cpx\n-      #13; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x034F\n-      0x0010; \/\/ access\n-      #14; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0357\n-      0x0018; \/\/ access\n-      #16; \/\/ name_cpx\n-      #17; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0361\n-      0x0008; \/\/ access\n-      #18; \/\/ name_cpx\n-      #19; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 45) { \/\/ Code at 0x0369\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014C1A2B5FCC;\n-            0x00024C2BB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 14) { \/\/ LineNumberTable at 0x0388\n-              [3] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x0394\n-                4  12; \/\/  at 0x0398\n-                11  13; \/\/  at 0x039C\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x039C\n-      0x0011; \/\/ access\n-      #22; \/\/ name_cpx\n-      #23; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 31) { \/\/ Code at 0x03A4\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00030000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 6) { \/\/ LineNumberTable at 0x03BD\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C9\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C9\n-      0x0011; \/\/ access\n-      #24; \/\/ name_cpx\n-      #25; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 32) { \/\/ Code at 0x03D1\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA00040000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 6) { \/\/ LineNumberTable at 0x03EB\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F7\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F7\n-      0x0011; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 31) { \/\/ Code at 0x03FF\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00050000B0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 6) { \/\/ LineNumberTable at 0x0418\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0424\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0424\n-      0x0008; \/\/ access\n-      #28; \/\/ name_cpx\n-      #29; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 43) { \/\/ Code at 0x042C\n-          1; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[15]{\n-            0x1206B80007B30008;\n-            0xCB0009B3000AB1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 10) { \/\/ LineNumberTable at 0x044D\n-              [2] { \/\/ LineNumberTable\n-                0  2; \/\/  at 0x0459\n-                8  4; \/\/  at 0x045D\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x045D\n-      0x0008; \/\/ access\n-      #30; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 45) { \/\/ Code at 0x0465\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014B042A5FCC;\n-            0x00024B2AB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 14) { \/\/ LineNumberTable at 0x0484\n-              [3] { \/\/ LineNumberTable\n-                0  6; \/\/  at 0x0490\n-                4  7; \/\/  at 0x0494\n-                11  8; \/\/  at 0x0498\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#32, 2) { \/\/ SourceFile at 0x049A\n-      #33;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#56, 10) { \/\/ InnerClasses at 0x04A2\n-      [1] { \/\/ InnerClasses\n-        #54 #58 #55 25; \/\/  at 0x04B2\n-      }\n-    } \/\/ end InnerClasses\n-    ;\n-    Attr(#36, 6) { \/\/ BootstrapMethods at 0x04B2\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #37; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-  } \/\/ Attributes\n-} \/\/ end class CircStaticA\n-\n-class CircStaticB {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [61] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #34; \/\/ #1     at 0x0A\n-    Field #1 #35; \/\/ #2     at 0x0D\n-    InvokeDynamic 0s #38; \/\/ #3     at 0x12\n-    InvokeDynamic 0s #39; \/\/ #4     at 0x17\n-    InvokeDynamic 0s #40; \/\/ #5     at 0x1C\n-    int 0x01234567; \/\/ #6     at 0x21\n-    Method #1 #41; \/\/ #7     at 0x26\n-    Field #1 #42; \/\/ #8     at 0x2B\n-    class #43; \/\/ #9     at 0x30\n-    Field #1 #44; \/\/ #10     at 0x33\n-    class #45; \/\/ #11     at 0x38\n-    Utf8 \"VT\"; \/\/ #12     at 0x3B\n-    Utf8 \"QCircStaticB;\"; \/\/ #13     at 0x40\n-    Utf8 \"int_v\"; \/\/ #14     at 0x50\n-    Utf8 \"I\"; \/\/ #15     at 0x58\n-    Utf8 \"v2\"; \/\/ #16     at 0x5C\n-    Utf8 \"QCircStaticA;\"; \/\/ #17     at 0x61\n-    Utf8 \"makeCircStaticB\"; \/\/ #18     at 0x71\n-    Utf8 \"(I)QCircStaticB;\"; \/\/ #19     at 0x83\n-    Utf8 \"Code\"; \/\/ #20     at 0x96\n-    Utf8 \"LineNumberTable\"; \/\/ #21     at 0x9D\n-    Utf8 \"hashCode\"; \/\/ #22     at 0xAF\n-    Utf8 \"()I\"; \/\/ #23     at 0xBA\n-    Utf8 \"equals\"; \/\/ #24     at 0xC0\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #25     at 0xC9\n-    Utf8 \"toString\"; \/\/ #26     at 0xE1\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #27     at 0xEC\n-    Utf8 \"<clinit>\"; \/\/ #28     at 0x0103\n-    Utf8 \"()V\"; \/\/ #29     at 0x010E\n-    Utf8 \"<vnew>\"; \/\/ #30     at 0x0114\n-    Utf8 \"()QCircStaticB;\"; \/\/ #31     at 0x011D\n-    Utf8 \"SourceFile\"; \/\/ #32     at 0x012F\n-    Utf8 \"CircStaticB.java\"; \/\/ #33     at 0x013C\n-    Utf8 \"CircStaticB\"; \/\/ #34     at 0x014F\n-    NameAndType #14 #15; \/\/ #35     at 0x015D\n-    Utf8 \"BootstrapMethods\"; \/\/ #36     at 0x0162\n-    MethodHandle 6b #46; \/\/ #37     at 0x0175\n-    NameAndType #22 #47; \/\/ #38     at 0x0179\n-    NameAndType #24 #48; \/\/ #39     at 0x017E\n-    NameAndType #26 #49; \/\/ #40     at 0x0183\n-    NameAndType #18 #19; \/\/ #41     at 0x0188\n-    NameAndType #12 #13; \/\/ #42     at 0x018D\n-    Utf8 \"CircStaticA\"; \/\/ #43     at 0x0192\n-    NameAndType #16 #17; \/\/ #44     at 0x01A0\n-    Utf8 \"java\/lang\/Object\"; \/\/ #45     at 0x01A5\n-    Method #50 #51; \/\/ #46     at 0x01B8\n-    Utf8 \"(QCircStaticB;)I\"; \/\/ #47     at 0x01BD\n-    Utf8 \"(QCircStaticB;Ljava\/lang\/Object;)Z\"; \/\/ #48     at 0x01D0\n-    Utf8 \"(QCircStaticB;)Ljava\/lang\/String;\"; \/\/ #49     at 0x01F5\n-    class #52; \/\/ #50     at 0x0219\n-    NameAndType #53 #57; \/\/ #51     at 0x021C\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #52     at 0x0221\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #53     at 0x024A\n-    class #59; \/\/ #54     at 0x0260\n-    Utf8 \"Lookup\"; \/\/ #55     at 0x0263\n-    Utf8 \"InnerClasses\"; \/\/ #56     at 0x026C\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #57     at 0x027B\n-    class #60; \/\/ #58     at 0x02F1\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #59     at 0x02F4\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #60     at 0x031C\n-  } \/\/ Constant Pool\n-\n-  0x0850; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #11;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [3] { \/\/ fields\n-    { \/\/ Member at 0x0347\n-      0x0018; \/\/ access\n-      #12; \/\/ name_cpx\n-      #13; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x034F\n-      0x0010; \/\/ access\n-      #14; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0357\n-      0x0018; \/\/ access\n-      #16; \/\/ name_cpx\n-      #17; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0361\n-      0x0008; \/\/ access\n-      #18; \/\/ name_cpx\n-      #19; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 45) { \/\/ Code at 0x0369\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014C1A2B5FCC;\n-            0x00024C2BB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 14) { \/\/ LineNumberTable at 0x0388\n-              [3] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x0394\n-                4  12; \/\/  at 0x0398\n-                11  13; \/\/  at 0x039C\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x039C\n-      0x0011; \/\/ access\n-      #22; \/\/ name_cpx\n-      #23; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 31) { \/\/ Code at 0x03A4\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00030000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 6) { \/\/ LineNumberTable at 0x03BD\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C9\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C9\n-      0x0011; \/\/ access\n-      #24; \/\/ name_cpx\n-      #25; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 32) { \/\/ Code at 0x03D1\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA00040000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 6) { \/\/ LineNumberTable at 0x03EB\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F7\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F7\n-      0x0011; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 31) { \/\/ Code at 0x03FF\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00050000B0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 6) { \/\/ LineNumberTable at 0x0418\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0424\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0424\n-      0x0008; \/\/ access\n-      #28; \/\/ name_cpx\n-      #29; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 43) { \/\/ Code at 0x042C\n-          1; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[15]{\n-            0x1206B80007B30008;\n-            0xCB0009B3000AB1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 10) { \/\/ LineNumberTable at 0x044D\n-              [2] { \/\/ LineNumberTable\n-                0  2; \/\/  at 0x0459\n-                8  4; \/\/  at 0x045D\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x045D\n-      0x0008; \/\/ access\n-      #30; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#20, 45) { \/\/ Code at 0x0465\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014B042A5FCC;\n-            0x00024B2AB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#21, 14) { \/\/ LineNumberTable at 0x0484\n-              [3] { \/\/ LineNumberTable\n-                0  6; \/\/  at 0x0490\n-                4  7; \/\/  at 0x0494\n-                11  8; \/\/  at 0x0498\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#32, 2) { \/\/ SourceFile at 0x049A\n-      #33;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#56, 10) { \/\/ InnerClasses at 0x04A2\n-      [1] { \/\/ InnerClasses\n-        #54 #58 #55 25; \/\/  at 0x04B2\n-      }\n-    } \/\/ end InnerClasses\n-    ;\n-    Attr(#36, 6) { \/\/ BootstrapMethods at 0x04B2\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #37; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-  } \/\/ Attributes\n-} \/\/ end class CircStaticB\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-\/\/ Test that an inline type cannot be Cloneable.\n-\/\/\n-\/\/ final inline class ValueCloneable implements Cloneable {\n-\/\/    final int field;\n-\/\/    private ValueCloneable() { field = 0; }\n-\/\/}\n-\n-class ValueCloneable {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [46] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #22; \/\/ #1     at 0x0A\n-    Field #1 #23; \/\/ #2     at 0x0D\n-    InvokeDynamic 0s #26; \/\/ #3     at 0x12\n-    InvokeDynamic 0s #27; \/\/ #4     at 0x17\n-    InvokeDynamic 0s #28; \/\/ #5     at 0x1C\n-    class #29; \/\/ #6     at 0x21\n-    class #30; \/\/ #7     at 0x24\n-    Utf8 \"field\"; \/\/ #8     at 0x27\n-    Utf8 \"I\"; \/\/ #9     at 0x2F\n-    Utf8 \"hashCode\"; \/\/ #10     at 0x33\n-    Utf8 \"()I\"; \/\/ #11     at 0x3E\n-    Utf8 \"Code\"; \/\/ #12     at 0x44\n-    Utf8 \"LineNumberTable\"; \/\/ #13     at 0x4B\n-    Utf8 \"equals\"; \/\/ #14     at 0x5D\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #15     at 0x66\n-    Utf8 \"toString\"; \/\/ #16     at 0x7E\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #17     at 0x89\n-    Utf8 \"<vnew>\"; \/\/ #18     at 0xA0\n-    Utf8 \"()QValueCloneable;\"; \/\/ #19     at 0xA9\n-    Utf8 \"SourceFile\"; \/\/ #20     at 0xBE\n-    Utf8 \"ValueCloneable.java\"; \/\/ #21     at 0xCB\n-    Utf8 \"ValueCloneable\"; \/\/ #22     at 0xE1\n-    NameAndType #8 #9; \/\/ #23     at 0xF2\n-    Utf8 \"BootstrapMethods\"; \/\/ #24     at 0xF7\n-    MethodHandle 6b #31; \/\/ #25     at 0x010A\n-    NameAndType #10 #32; \/\/ #26     at 0x010E\n-    NameAndType #14 #33; \/\/ #27     at 0x0113\n-    NameAndType #16 #34; \/\/ #28     at 0x0118\n-    Utf8 \"java\/lang\/Object\"; \/\/ #29     at 0x011D\n-    Utf8 \"java\/lang\/Cloneable\"; \/\/ #30     at 0x0130\n-    Method #35 #36; \/\/ #31     at 0x0146\n-    Utf8 \"(QValueCloneable;)I\"; \/\/ #32     at 0x014B\n-    Utf8 \"(QValueCloneable;Ljava\/lang\/Object;)Z\"; \/\/ #33     at 0x0161\n-    Utf8 \"(QValueCloneable;)Ljava\/lang\/String;\"; \/\/ #34     at 0x0189\n-    class #37; \/\/ #35     at 0x01B0\n-    NameAndType #38 #42; \/\/ #36     at 0x01B3\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #37     at 0x01B8\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #38     at 0x01E1\n-    class #44; \/\/ #39     at 0x01F7\n-    Utf8 \"Lookup\"; \/\/ #40     at 0x01FA\n-    Utf8 \"InnerClasses\"; \/\/ #41     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #42     at 0x0212\n-    class #45; \/\/ #43     at 0x0288\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #44     at 0x028B\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #45     at 0x02B3\n-  } \/\/ Constant Pool\n-\n-  0x0850; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #6;\/\/ super_cpx\n-\n-  [1] { \/\/ Interfaces\n-    #7;\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ fields\n-    { \/\/ Member at 0x02E0\n-      0x0010; \/\/ access\n-      #8; \/\/ name_cpx\n-      #9; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [4] { \/\/ methods\n-    { \/\/ Member at 0x02EA\n-      0x0011; \/\/ access\n-      #10; \/\/ name_cpx\n-      #11; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#12, 31) { \/\/ Code at 0x02F2\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00030000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#13, 6) { \/\/ LineNumberTable at 0x030B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0317\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0317\n-      0x0011; \/\/ access\n-      #14; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#12, 32) { \/\/ Code at 0x031F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA00040000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#13, 6) { \/\/ LineNumberTable at 0x0339\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0345\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0345\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #17; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#12, 31) { \/\/ Code at 0x034D\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00050000B0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#13, 6) { \/\/ LineNumberTable at 0x0366\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0372\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0372\n-      0x0008; \/\/ access\n-      #18; \/\/ name_cpx\n-      #19; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#12, 37) { \/\/ Code at 0x037A\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014B032A5FCC;\n-            0x00024B2AB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#13, 6) { \/\/ LineNumberTable at 0x0399\n-              [1] { \/\/ LineNumberTable\n-                0  3; \/\/  at 0x03A5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#20, 2) { \/\/ SourceFile at 0x03A7\n-      #21;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#41, 10) { \/\/ InnerClasses at 0x03AF\n-      [1] { \/\/ InnerClasses\n-        #39 #43 #40 25; \/\/  at 0x03BF\n-      }\n-    } \/\/ end InnerClasses\n-    ;\n-    Attr(#24, 6) { \/\/ BootstrapMethods at 0x03BF\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #25; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-  } \/\/ Attributes\n-} \/\/ end class ValueCloneable\n-\n-\n-\/\/ Test that a class with an old class file version cannot contain a Q signature.\n-class OldClassWithQSig {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  52; \/\/ version\n-  [29] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Utf8 \"OldClassWithQSig\"; \/\/ #1     at 0x0A\n-    class #1; \/\/ #2     at 0x1A\n-    Utf8 \"java\/lang\/Object\"; \/\/ #3     at 0x1D\n-    class #3; \/\/ #4     at 0x30\n-    Utf8 \"inlineclasses.scala\"; \/\/ #5     at 0x33\n-    Utf8 \"Lscala\/reflect\/ScalaSignature;\"; \/\/ #6     at 0x49\n-    Utf8 \"bytes\"; \/\/ #7     at 0x6A\n-    Utf8 \"i1QB\\t!AAC\\bI\\t\\tQ!!Q\\nEAQ!YQ\\\"T=J]2Lg.Z\\\"mCN(\\\"q*W;z}\\r1C\\n!\\tQQ\\\"D\\fa!B:dC2\\fB\\b\\f\\te.*fM\\t.F!\\tQ!#\\tJ;%Aj]&$h\\b3AA!)qba#\"; \/\/ #8     at 0x72\n-    Utf8 \"i\"; \/\/ #9     at 0x0128\n-    Utf8 \"I\"; \/\/ #10     at 0x012C\n-    Utf8 \"()I\"; \/\/ #11     at 0x0130\n-    NameAndType #9 #10; \/\/ #12     at 0x0136\n-    Field #2 #12; \/\/ #13     at 0x013B\n-    Utf8 \"this\"; \/\/ #14     at 0x0140\n-    Utf8 \"QOldClassWithQSig;\"; \/\/ #15     at 0x0147\n-    Utf8 \"<init>\"; \/\/ #16     at 0x0159\n-    Utf8 \"(I)V\"; \/\/ #17     at 0x0162\n-    Utf8 \"()V\"; \/\/ #18     at 0x0169\n-    NameAndType #16 #18; \/\/ #19     at 0x016F\n-    Method #4 #19; \/\/ #20     at 0x0174\n-    Utf8 \"Code\"; \/\/ #21     at 0x0179\n-    Utf8 \"LineNumberTable\"; \/\/ #22     at 0x0180\n-    Utf8 \"LocalVariableTable\"; \/\/ #23     at 0x0192\n-    Utf8 \"MethodParameters\"; \/\/ #24     at 0x01A7\n-    Utf8 \"SourceFile\"; \/\/ #25     at 0x01BA\n-    Utf8 \"RuntimeVisibleAnnotations\"; \/\/ #26     at 0x01C7\n-    Utf8 \"ScalaInlineInfo\"; \/\/ #27     at 0x01E3\n-    Utf8 \"ScalaSig\"; \/\/ #28     at 0x01F5\n-  } \/\/ Constant Pool\n-\n-  0x0121; \/\/ access [ ACC_PUBLIC ACC_SUPER ]\n-  #2;\/\/ this_cpx\n-  #4;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ Fields\n-    {  \/\/ field at 0x020A\n-      0x0012; \/\/ access\n-      #9; \/\/ name_index       : i\n-      #10; \/\/ descriptor_index : I\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [2] { \/\/ Methods\n-    {  \/\/ method at 0x0214\n-      0x0001; \/\/ access\n-      #9; \/\/ name_index       : i\n-      #11; \/\/ descriptor_index : ()I\n-      [1] { \/\/ Attributes\n-        Attr(#21, 47) { \/\/ Code at 0x021C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB4000DAC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [2] { \/\/ Attributes\n-            Attr(#22, 6) { \/\/ LineNumberTable at 0x0233\n-              [1] { \/\/ line_number_table\n-                0  1; \/\/  at 0x023F\n-              }\n-            } \/\/ end LineNumberTable\n-            ;\n-            Attr(#23, 12) { \/\/ LocalVariableTable at 0x023F\n-              [1] { \/\/ LocalVariableTable\n-                0 5 14 15 0; \/\/  at 0x0251\n-              }\n-            } \/\/ end LocalVariableTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0x0251\n-      0x0001; \/\/ access\n-      #16; \/\/ name_index       : <init>\n-      #17; \/\/ descriptor_index : (I)V\n-      [2] { \/\/ Attributes\n-        Attr(#21, 70) { \/\/ Code at 0x0259\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[10]{\n-            0x2A1BB5000D2AB700;\n-            0x14B1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [2] { \/\/ Attributes\n-            Attr(#22, 14) { \/\/ LineNumberTable at 0x0275\n-              [3] { \/\/ line_number_table\n-                0  1; \/\/  at 0x0281\n-                5  3; \/\/  at 0x0285\n-                9  1; \/\/  at 0x0289\n-              }\n-            } \/\/ end LineNumberTable\n-            ;\n-            Attr(#23, 22) { \/\/ LocalVariableTable at 0x0289\n-              [2] { \/\/ LocalVariableTable\n-                0 10 14 15 0; \/\/  at 0x029B\n-                0 10 9 10 1; \/\/  at 0x02A5\n-              }\n-            } \/\/ end LocalVariableTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-        ;\n-        Attr(#24, 5) { \/\/ MethodParameters at 0x02A5\n-          [1]b { \/\/ MethodParameters\n-            #9  0x0010; \/\/  at 0x02B0\n-          }\n-        } \/\/ end MethodParameters\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [4] { \/\/ Attributes\n-    Attr(#25, 2) { \/\/ SourceFile at 0x02B2\n-      #5;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#26, 11) { \/\/ RuntimeVisibleAnnotations at 0x02BA\n-      [1] { \/\/ annotations\n-        {  \/\/  annotation\n-          #6;\n-          [1] { \/\/ element_value_pairs\n-            {  \/\/  element value pair\n-              #7;\n-              {  \/\/  element_value\n-                's';\n-                #8;\n-              }  \/\/  element_value\n-            }  \/\/  element value pair\n-          }  \/\/  element_value_pairs\n-        }  \/\/  annotation\n-      }\n-    } \/\/ end RuntimeVisibleAnnotations\n-    ;\n-    Attr(#27, 14) { \/\/ ScalaInlineInfo at 0x02CB\n-      0x0100000200100011;\n-      0x000009000B00;\n-    } \/\/ end ScalaInlineInfo\n-    ;\n-    Attr(#28, 3) { \/\/ ScalaSig at 0x02DF\n-      0x050200;\n-    } \/\/ end ScalaSig\n-  } \/\/ Attributes\n-} \/\/ end class OldClassWithQSig\n-\n-\n-\/\/ Test that a class with an old class file version cannot contain an array Q signature.\n-class OldClassWithQArraySig {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  52; \/\/ version\n-  [20] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1     at 0x0A\n-    class #4; \/\/ #2     at 0x0F\n-    NameAndType #5 #6; \/\/ #3     at 0x12\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x17\n-    Utf8 \"<init>\"; \/\/ #5     at 0x2A\n-    Utf8 \"()V\"; \/\/ #6     at 0x33\n-    class #8; \/\/ #7     at 0x39\n-    Utf8 \"java\/lang\/Integer\"; \/\/ #8     at 0x3C\n-    Field #10 #11; \/\/ #9     at 0x50\n-    class #12; \/\/ #10     at 0x55\n-    NameAndType #13 #14; \/\/ #11     at 0x58\n-    Utf8 \"OldClassWithQArraySig\"; \/\/ #12     at 0x5D\n-    Utf8 \"ia\"; \/\/ #13     at 0x65\n-    Utf8 \"[Qjava\/lang\/Integer;\"; \/\/ #14     at 0x6A\n-    Utf8 \"Code\"; \/\/ #15     at 0x81\n-    Utf8 \"LineNumberTable\"; \/\/ #16     at 0x88\n-    Utf8 \"runIt\"; \/\/ #17     at 0x9A\n-    Utf8 \"SourceFile\"; \/\/ #18     at 0xA2\n-    Utf8 \"OldClassWithQArraySig.java\"; \/\/ #19     at 0xAF\n-  } \/\/ Constant Pool\n-\n-  0x0021; \/\/ access [ ACC_PUBLIC ACC_SUPER ]\n-  #10;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ Fields\n-    {  \/\/ field at 0xC6\n-      0x0000; \/\/ access\n-      #13; \/\/ name_index       : ia\n-      #14; \/\/ descriptor_index : [Qjava\/lang\/Integer;\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [2] { \/\/ Methods\n-    {  \/\/ method at 0xD0\n-      0x0001; \/\/ access\n-      #5; \/\/ name_index       : <init>\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#15, 29) { \/\/ Code at 0xD8\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB70001B1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#16, 6) { \/\/ LineNumberTable at 0xEF\n-              [1] { \/\/ line_number_table\n-                0  1; \/\/  at 0xFB\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0xFB\n-      0x0001; \/\/ access\n-      #17; \/\/ name_index       : runIt\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#15, 37) { \/\/ Code at 0x0103\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[9]{\n-            0x2A05BD0007B50009;\n-            0xB1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#16, 10) { \/\/ LineNumberTable at 0x011E\n-              [2] { \/\/ line_number_table\n-                0  6; \/\/  at 0x012A\n-                8  7; \/\/  at 0x012E\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [1] { \/\/ Attributes\n-    Attr(#18, 2) { \/\/ SourceFile at 0x0130\n-      #19;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class OldClassWithQArraySig\n-\n-\n-\/\/ This class has a super_cpx of zero.  This should cause a ClassFormatError\n-\/\/ exception when this class is loaded.\n-class SuperIsZero {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [15] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"SuperIsZero\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x1A\n-    NameAndType #5 #6; \/\/ #4     at 0x1F\n-    Utf8 \"x\"; \/\/ #5     at 0x24\n-    Utf8 \"I\"; \/\/ #6     at 0x28\n-    class #8; \/\/ #7     at 0x2C\n-    Utf8 \"java\/lang\/Object\"; \/\/ #8     at 0x2F\n-    Utf8 \"<init>\"; \/\/ #9     at 0x42\n-    Utf8 \"()QSuperIsZero;\"; \/\/ #10     at 0x4B\n-    Utf8 \"Code\"; \/\/ #11     at 0x5C\n-    Utf8 \"LineNumberTable\"; \/\/ #12     at 0x63\n-    Utf8 \"SourceFile\"; \/\/ #13     at 0x75\n-    Utf8 \"SuperIsZero.java\"; \/\/ #14     at 0x82\n-  } \/\/ Constant Pool\n-\n-  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #0;\/\/ super_cpx \/\/ !!! changed 7 to 0\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ Fields\n-    {  \/\/ field at 0x9E\n-      0x0010; \/\/ access\n-      #5; \/\/ name_index       : x\n-      #6; \/\/ descriptor_index : I\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [1] { \/\/ Methods\n-    {  \/\/ method at 0xA8\n-      0x0009; \/\/ access\n-      #9; \/\/ name_index       : <init>\n-      #10; \/\/ descriptor_index : ()QSuperIsZero;\n-      [1] { \/\/ Attributes\n-        Attr(#11, 45) { \/\/ Code at 0xB0\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014B082A5FCC;\n-            0x00034B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 14) { \/\/ LineNumberTable at 0xCF\n-              [3] { \/\/ line_number_table\n-                0  4; \/\/  at 0xDB\n-                4  5; \/\/  at 0xDF\n-                11  6; \/\/  at 0xE3\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [1] { \/\/ Attributes\n-    Attr(#13, 2) { \/\/ SourceFile at 0xE5\n-      #14;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class SuperIsZero\n-\n-\n-\/\/ This class file tests that a ClassFormatError exception is thrown for an old\n-\/\/ class file (version 49) containing a Q signature.  This file is based on the\n-\/\/ following Java code, except the signature for method callDot() was changed\n-\/\/ to \"(QDot;)V\";.\n-\/*\n-public class QInOldClass {\n-\n-    public static void callDot(Dot d) {\n-        System.out.println(\"Hi Dot\");\n-    }\n-\n-}\n-*\/\n-class QInOldClass {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  49; \/\/ version\n-  [32] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1     at 0x0A\n-    class #4; \/\/ #2     at 0x0F\n-    NameAndType #5 #6; \/\/ #3     at 0x12\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x17\n-    Utf8 \"<init>\"; \/\/ #5     at 0x2A\n-    Utf8 \"()V\"; \/\/ #6     at 0x33\n-    Field #8 #9; \/\/ #7     at 0x39\n-    class #10; \/\/ #8     at 0x3E\n-    NameAndType #11 #12; \/\/ #9     at 0x41\n-    Utf8 \"java\/lang\/System\"; \/\/ #10     at 0x46\n-    Utf8 \"out\"; \/\/ #11     at 0x59\n-    Utf8 \"Ljava\/io\/PrintStream;\"; \/\/ #12     at 0x5F\n-    String #14; \/\/ #13     at 0x77\n-    Utf8 \"Hi Dot\"; \/\/ #14     at 0x7A\n-    Method #16 #17; \/\/ #15     at 0x83\n-    class #18; \/\/ #16     at 0x88\n-    NameAndType #19 #20; \/\/ #17     at 0x8B\n-    Utf8 \"java\/io\/PrintStream\"; \/\/ #18     at 0x90\n-    Utf8 \"println\"; \/\/ #19     at 0xA6\n-    Utf8 \"(Ljava\/lang\/String;)V\"; \/\/ #20     at 0xB0\n-    class #22; \/\/ #21     at 0xC8\n-    Utf8 \"QInOldClass\"; \/\/ #22     at 0xCB\n-    Utf8 \"Code\"; \/\/ #23     at 0xD6\n-    Utf8 \"LineNumberTable\"; \/\/ #24     at 0xDD\n-    Utf8 \"callDot\"; \/\/ #25     at 0xEF\n-    Utf8 \"(QDot;)V\"; \/\/ #26     at 0xF9\n-    Utf8 \"SourceFile\"; \/\/ #27     at 0x0104\n-    Utf8 \"QInOldClass.java\"; \/\/ #28     at 0x0111\n-    Utf8 \"Preload\"; \/\/ #29     at 0x0121\n-    class #31; \/\/ #30     at 0x012B\n-    Utf8 \"Dot\"; \/\/ #31     at 0x012E\n-  } \/\/ Constant Pool\n-\n-  0x0021; \/\/ access [ ACC_PUBLIC ACC_SUPER ]\n-  #21;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [0] { \/\/ Fields\n-  } \/\/ Fields\n-\n-  [2] { \/\/ Methods\n-    {  \/\/ method at 0x0140\n-      0x0001; \/\/ access\n-      #5; \/\/ name_index       : <init>\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#23, 29) { \/\/ Code at 0x0148\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB70001B1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#24, 6) { \/\/ LineNumberTable at 0x015F\n-              [1] { \/\/ line_number_table\n-                0  2; \/\/  at 0x016B\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0x016B\n-      0x0009; \/\/ access\n-      #25; \/\/ name_index       : callDot\n-      #26; \/\/ descriptor_index : (LDot;)V\n-      [1] { \/\/ Attributes\n-        Attr(#23, 37) { \/\/ Code at 0x0173\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[9]{\n-            0xB20007120DB6000F;\n-            0xB1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#24, 10) { \/\/ LineNumberTable at 0x018E\n-              [2] { \/\/ line_number_table\n-                0  5; \/\/  at 0x019A\n-                8  6; \/\/  at 0x019E\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [2] { \/\/ Attributes\n-    Attr(#27, 2) { \/\/ SourceFile at 0x01A0\n-      #28;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#29, 4) { \/\/ Preload at 0x01A8\n-      0x0001001E;\n-    } \/\/ end Preload\n-  } \/\/ Attributes\n-} \/\/ end class QInOldClass\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/cfpTests.jcod","additions":0,"deletions":2696,"binary":false,"changes":2696,"status":"deleted"},{"patch":"@@ -0,0 +1,1147 @@\n+\/*\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/\/ Simple class generated from the following source:\n+\/\/ public class SimpleClass { }\n+\/\/ The jcod version has been altered to create a class without any of ACC_IDENTITY, ACC_ABSTRACT or ACC_FINAL flags,\n+\/\/ which is illegal according to JVMS 4.1.\n+\n+class InvalidClassFlags {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"InvalidClassFlags\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"SourceFile\"; \/\/ #11\n+    Utf8 \"InvalidClassFlags.java\"; \/\/ #12\n+  } \/\/ Constant Pool\n+\n+  0x0001; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#11) { \/\/ SourceFile\n+      #12;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class InvalidClassFlags\n+\n+\/\/ Valid class with access flags ACC_PUBLIC, ACC_ABSTRACT and no ACC_IDENTITY\n+class AbstractValue {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"AbstractValue\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"SourceFile\"; \/\/ #11\n+    Utf8 \"AbstractValue.java\"; \/\/ #12\n+  } \/\/ Constant Pool\n+\n+  0x0401; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#11) { \/\/ SourceFile\n+      #12;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class AbstractValue\n+\n+\/\/ Valid class with access flags ACC_PUBLIC, ACC_FINAL and no ACC_IDENTITY\n+class FinalValue {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"FinalValue\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"SourceFile\"; \/\/ #11\n+    Utf8 \"FinalValue.java\"; \/\/ #12\n+  } \/\/ Constant Pool\n+\n+  0x0011; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#11) { \/\/ SourceFile\n+      #12;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class FinalValue\n+\n+\/\/ Abstract class with ACC_IDENTITY flag added to its access flags\n+class AbstractClass {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"AbstractClass\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"SourceFile\"; \/\/ #11\n+    Utf8 \"AbstractClass.java\"; \/\/ #12\n+  } \/\/ Constant Pool\n+\n+  0x0421; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#11) { \/\/ SourceFile\n+      #12;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class AbstractClass\n+\n+\/\/ Value class extending the abstract (with identity) class define above\n+class ValueClass {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"AbstractClass\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"ValueClass\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"SourceFile\"; \/\/ #11\n+    Utf8 \"ValueClass.java\"; \/\/ #12\n+  } \/\/ Constant Pool\n+\n+  0x0011; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#11) { \/\/ SourceFile\n+      #12;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class ValueClass\n+\n+\/\/ Concrete identity class from old class file without ACC_IDENTITY extending the abstract (with identity) class define above\n+class IdentityClass {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"AbstractClass\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"IdentityClass\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"SourceFile\"; \/\/ #11\n+    Utf8 \"IdentityClass.java\"; \/\/ #12\n+  } \/\/ Constant Pool\n+\n+  0x0011; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#11) { \/\/ SourceFile\n+      #12;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class ValueClass\n+\n+\/\/ Concrete value class extending a final value class\n+class ValueClass2 {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"FinalValue\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"ValueClass2\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"SourceFile\"; \/\/ #11\n+    Utf8 \"ValueClass2.java\"; \/\/ #12\n+  } \/\/ Constant Pool\n+\n+  0x0011; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#11) { \/\/ SourceFile\n+      #12;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class ValueClass2\n+\n+\/\/ Abstract value class extending an abstract (with identity) class\n+class AbstractValueClass2 {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"AbstractClass\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"AbstractValueClass2\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"SourceFile\"; \/\/ #11\n+    Utf8 \"AbstractValueClass2.java\"; \/\/ #12\n+  } \/\/ Constant Pool\n+\n+  0x0401; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#11) { \/\/ SourceFile\n+      #12;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class AbstractValueClass2\n+\n+\/\/ Abstract identity class from older class file without ACC_IDENTITY, extending an abstract (with identity) class\n+class AbstractIdentityClass2 {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"AbstractClass\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"AbstractIdentityClass2\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"SourceFile\"; \/\/ #11\n+    Utf8 \"AbstractIdentityClass2.java\"; \/\/ #12\n+  } \/\/ Constant Pool\n+\n+  0x0401; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#11) { \/\/ SourceFile\n+      #12;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class AbstractValueClass2\n+\n+\/\/ Abstract value class extending a final value class\n+class AbstractValueClass3 {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"FinalValue\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"AbstractValueClass3\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"SourceFile\"; \/\/ #11\n+    Utf8 \"AbstractValueClass3.java\"; \/\/ #12\n+  } \/\/ Constant Pool\n+\n+  0x0401; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#11) { \/\/ SourceFile\n+      #12;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class AbstractValueClass3\n+\n+\/\/ A concrete class without ACC_IDENTITY but with an older class file version, declaring a field without ACC_STATIC nor ACC_STRICT\n+\/\/\n+class NotStaticNotStrictInOldClass {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Field #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"NotStaticNotStrictInOldClass\"; \/\/ #4\n+    Utf8 \"i\"; \/\/ #5\n+    Utf8 \"I\"; \/\/ #6\n+    Method #8 #9; \/\/ #7\n+    class #10; \/\/ #8\n+    NameAndType #11 #12; \/\/ #9\n+    Utf8 \"java\/lang\/Object\"; \/\/ #10\n+    Utf8 \"<init>\"; \/\/ #11\n+    Utf8 \"()V\"; \/\/ #12\n+    Field #2 #14; \/\/ #13\n+    NameAndType #15 #6; \/\/ #14\n+    Utf8 \"si\"; \/\/ #15\n+    Utf8 \"ConstantValue\"; \/\/ #16\n+    int 0x00000000; \/\/ #17\n+    Utf8 \"Code\"; \/\/ #18\n+    Utf8 \"LineNumberTable\"; \/\/ #19\n+    Utf8 \"<clinit>\"; \/\/ #20\n+    Utf8 \"SourceFile\"; \/\/ #21\n+    Utf8 \"NotStaticNotStrictInOldClass.java\"; \/\/ #22\n+  } \/\/ Constant Pool\n+\n+  0x0011; \/\/ access\n+  #2;\/\/ this_cpx\n+  #8;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+    {  \/\/ field\n+      0x0008; \/\/ access\n+      #15; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ field\n+      0x0010; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#16) { \/\/ ConstantValue\n+          #17;\n+        } \/\/ end ConstantValue\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #11; \/\/ name_index\n+      #12; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#18) { \/\/ Code\n+          2; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2A03B500012AB700;\n+            0x07B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#19) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  3;\n+                5  1;\n+                9  3;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method\n+      0x0008; \/\/ access\n+      #20; \/\/ name_index\n+      #12; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#18) { \/\/ Code\n+          1; \/\/ max_stack\n+          0; \/\/ max_locals\n+          Bytes[]{\n+            0x03B3000DB1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#19) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  2;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#21) { \/\/ SourceFile\n+      #22;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class NotStaticNotStrictInOldClass\n+\n+\/\/ Valid concrete value class with a synchronized static method\n+class StaticSynchMethod {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"StaticSynchMethod\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"m\"; \/\/ #11\n+    Utf8 \"()I\"; \/\/ #12\n+    Utf8 \"SourceFile\"; \/\/ #13\n+    Utf8 \"StaticSynchMethod.java\"; \/\/ #14\n+  } \/\/ Constant Pool\n+\n+  0x0011; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method\n+      0x0029; \/\/ access\n+      #11; \/\/ name_index\n+      #12; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          0; \/\/ max_locals\n+          Bytes[]{\n+            0x102AAC;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  2;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#13) { \/\/ SourceFile\n+      #14;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class StaticSynchMethod\n+\n+\/\/ Invalid concrete value class with synchronized non-static method\n+class SynchMethod {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"SynchMethod\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"m\"; \/\/ #11\n+    Utf8 \"()I\"; \/\/ #12\n+    Utf8 \"SourceFile\"; \/\/ #13\n+    Utf8 \"SynchMethod.java\"; \/\/ #14\n+  } \/\/ Constant Pool\n+\n+  0x0011; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method\n+      0x0021; \/\/ access               \/\/ Modified to make it synchronized\n+      #11; \/\/ name_index\n+      #12; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x102AAC;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  2;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#13) { \/\/ SourceFile\n+      #14;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class SynchMethod\n+\n+\/\/ Valid abstract value class with synchronized static method\n+class StaticSynchMethodInAbstractValue {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"StaticSynchMethodInAbstractValue\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"m\"; \/\/ #11\n+    Utf8 \"()I\"; \/\/ #12\n+    Utf8 \"SourceFile\"; \/\/ #13\n+    Utf8 \"StaticSynchMethodInAbstractValue.java\"; \/\/ #14\n+  } \/\/ Constant Pool\n+\n+  0x0401; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method\n+      0x0029; \/\/ access\n+      #11; \/\/ name_index\n+      #12; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          0; \/\/ max_locals\n+          Bytes[]{\n+            0x102AAC;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  2;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#13) { \/\/ SourceFile\n+      #14;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class StaticSynchMethodInAbstractValue\n+\n+\/\/ Invalid abstract value class with a synchronized non-static method\n+class SynchMethodInAbstractValue {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"SynchMethodInAbstractValue\"; \/\/ #8\n+    Utf8 \"Code\"; \/\/ #9\n+    Utf8 \"LineNumberTable\"; \/\/ #10\n+    Utf8 \"m\"; \/\/ #11\n+    Utf8 \"()I\"; \/\/ #12\n+    Utf8 \"SourceFile\"; \/\/ #13\n+    Utf8 \"SynchMethodInAbstractValue.java\"; \/\/ #14\n+  } \/\/ Constant Pool\n+\n+  0x0401; \/\/ access\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method\n+      0x0021; \/\/ access                \/\/ modified to make it synchronized\n+      #11; \/\/ name_index\n+      #12; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#9) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x102AAC;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#10) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  2;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#13) { \/\/ SourceFile\n+      #14;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class SynchMethodInAbstractValue\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/cfpValueClassValidation.jcod","additions":1147,"deletions":0,"binary":false,"changes":1147,"status":"added"},{"patch":"@@ -328,1 +328,1 @@\n-      0x0810; \/\/ access\n+      0x0800; \/\/ access\n@@ -399,1 +399,1 @@\n-\/\/ A value class declaring a field without ACC_STATIC nor ACC_STRICT\n+\/\/ A concrete value class declaring a field without ACC_STATIC nor ACC_STRICT\n@@ -517,1 +517,121 @@\n-} \/\/ end class NotStaticNotStrict\n\\ No newline at end of file\n+} \/\/ end class NotStaticNotStrict\n+\n+\/\/ An abstract value class declaring a field without ACC_STATIC nor ACC_STRICT\n+\/\/\n+class NotStaticNotStrictInAbstract {\n+  0xCAFEBABE;\n+  65535; \/\/ minor version\n+  67; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Field #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"NotStaticNotStrictInAbstract\"; \/\/ #4\n+    Utf8 \"i\"; \/\/ #5\n+    Utf8 \"I\"; \/\/ #6\n+    Method #8 #9; \/\/ #7\n+    class #10; \/\/ #8\n+    NameAndType #11 #12; \/\/ #9\n+    Utf8 \"java\/lang\/Object\"; \/\/ #10\n+    Utf8 \"<init>\"; \/\/ #11\n+    Utf8 \"()V\"; \/\/ #12\n+    Field #2 #14; \/\/ #13\n+    NameAndType #15 #6; \/\/ #14\n+    Utf8 \"si\"; \/\/ #15\n+    Utf8 \"ConstantValue\"; \/\/ #16\n+    int 0x00000000; \/\/ #17\n+    Utf8 \"Code\"; \/\/ #18\n+    Utf8 \"LineNumberTable\"; \/\/ #19\n+    Utf8 \"<clinit>\"; \/\/ #20\n+    Utf8 \"SourceFile\"; \/\/ #21\n+    Utf8 \"NotStaticNotStrictInAbstract.java\"; \/\/ #22\n+  } \/\/ Constant Pool\n+\n+  0x0401; \/\/ access\n+  #2;\/\/ this_cpx\n+  #8;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+    {  \/\/ field\n+      0x0008; \/\/ access\n+      #15; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ field\n+      0x0010; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#16) { \/\/ ConstantValue\n+          #17;\n+        } \/\/ end ConstantValue\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #11; \/\/ name_index\n+      #12; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#18) { \/\/ Code\n+          2; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2A03B500012AB700;\n+            0x07B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#19) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  3;\n+                5  1;\n+                9  3;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method\n+      0x0008; \/\/ access\n+      #20; \/\/ name_index\n+      #12; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#18) { \/\/ Code\n+          1; \/\/ max_stack\n+          0; \/\/ max_locals\n+          Bytes[]{\n+            0x03B3000DB1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#19) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  2;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#21) { \/\/ SourceFile\n+      #22;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class NotStaticNotStrictInAbstract\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/fieldModifiersTest.jcod","additions":123,"deletions":3,"binary":false,"changes":126,"status":"modified"}]}