{"files":[{"patch":"@@ -3064,1 +3064,2 @@\n-    u2 recognized_modifiers = RECOGNIZED_INNER_CLASS_MODIFIERS;\n+    \/\/ Access flags\n+    u2 flags;\n@@ -3067,1 +3068,3 @@\n-      recognized_modifiers |= JVM_ACC_MODULE;\n+      flags = cfs->get_u2_fast() & (RECOGNIZED_INNER_CLASS_MODIFIERS | JVM_ACC_MODULE);\n+    } else {\n+      flags = cfs->get_u2_fast() & RECOGNIZED_INNER_CLASS_MODIFIERS;\n@@ -3070,3 +3073,0 @@\n-    \/\/ Access flags\n-    u2 flags = cfs->get_u2_fast() & recognized_modifiers;\n-\n@@ -3086,2 +3086,1 @@\n-    const char* name = inner_name_index == 0 ? \"unnamed\" : cp->symbol_at(inner_name_index)->as_utf8();\n-    verify_legal_class_modifiers(flags, name, false, CHECK_0);\n+    verify_legal_class_modifiers(flags, CHECK_0);\n@@ -4425,1 +4424,1 @@\n-void ClassFileParser::verify_legal_class_modifiers(jint flags, const char* name, bool is_Object, TRAPS) const {\n+void ClassFileParser::verify_legal_class_modifiers(jint flags, TRAPS) const {\n@@ -4427,1 +4426,0 @@\n-  const bool is_inner_class = name != nullptr;\n@@ -4462,18 +4460,7 @@\n-    if (name == nullptr) { \/\/ Not an inner class\n-      Exceptions::fthrow(\n-        THREAD_AND_LOCATION,\n-        vmSymbols::java_lang_ClassFormatError(),\n-        \"Illegal class modifiers in class %s%s: 0x%X\",\n-        _class_name->as_C_string(), class_note, flags\n-      );\n-      return;\n-    } else {\n-      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n-      Exceptions::fthrow(\n-        THREAD_AND_LOCATION,\n-        vmSymbols::java_lang_ClassFormatError(),\n-        \"Illegal class modifiers in declaration of inner class %s%s of class %s: 0x%X\",\n-        name, class_note, _class_name->as_C_string(), flags\n-      );\n-      return;\n-    }\n+    Exceptions::fthrow(\n+      THREAD_AND_LOCATION,\n+      vmSymbols::java_lang_ClassFormatError(),\n+      \"Illegal class modifiers in class %s%s: 0x%X\",\n+      _class_name->as_C_string(), class_note, flags\n+    );\n+    return;\n@@ -5787,1 +5774,2 @@\n-  u2 recognized_modifiers = JVM_RECOGNIZED_CLASS_MODIFIERS;\n+  \/\/ Access flags\n+  u2 flags;\n@@ -5790,1 +5778,3 @@\n-    recognized_modifiers |= JVM_ACC_MODULE;\n+    flags = stream->get_u2_fast() & (JVM_RECOGNIZED_CLASS_MODIFIERS | JVM_ACC_MODULE);\n+  } else {\n+    flags = stream->get_u2_fast() & JVM_RECOGNIZED_CLASS_MODIFIERS;\n@@ -5793,3 +5783,0 @@\n-  \/\/ Access flags\n-  u2 flags = stream->get_u2_fast() & recognized_modifiers;\n-\n@@ -5810,0 +5797,11 @@\n+  verify_legal_class_modifiers(flags, CHECK);\n+\n+  short bad_constant = class_bad_constant_seen();\n+  if (bad_constant != 0) {\n+    \/\/ Do not throw CFE until after the access_flags are checked because if\n+    \/\/ ACC_MODULE is set in the access flags, then NCDFE must be thrown, not CFE.\n+    classfile_parse_error(\"Unknown constant tag %u in class file %s\", bad_constant, THREAD);\n+    return;\n+  }\n+\n+  _access_flags.set_flags(flags);\n@@ -5822,14 +5820,0 @@\n-  bool is_java_lang_Object = class_name_in_cp == vmSymbols::java_lang_Object();\n-\n-  verify_legal_class_modifiers(flags, nullptr, is_java_lang_Object, CHECK);\n-\n-  _access_flags.set_flags(flags);\n-\n-  short bad_constant = class_bad_constant_seen();\n-  if (bad_constant != 0) {\n-    \/\/ Do not throw CFE until after the access_flags are checked because if\n-    \/\/ ACC_MODULE is set in the access flags, then NCDFE must be thrown, not CFE.\n-    classfile_parse_error(\"Unknown constant tag %u in class file %s\", bad_constant, THREAD);\n-    return;\n-  }\n-\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":30,"deletions":46,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -466,1 +466,1 @@\n-  void verify_legal_class_modifiers(jint flags, const char* name, bool is_Object, TRAPS) const;\n+  void verify_legal_class_modifiers(jint flags, TRAPS) const;\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -133,1 +133,0 @@\n-runtime\/AccModule\/ConstModule.java 8294051 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}