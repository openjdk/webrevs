{"files":[{"patch":"@@ -3392,1 +3392,1 @@\n-\/\/ Atomic flat accesses on non-escape objects can be optimized to non-atomic accesses\n+\/\/ Atomic flat accesses on non-escaping objects can be optimized to non-atomic accesses\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-\/\/ from the loaded payload. In special cases, such as when the object from which this load read\n+\/\/ from the loaded payload. In special cases, such as when the object from which this load reads\n@@ -179,1 +179,1 @@\n-\/\/ payload value cannot be directly propagated if it contains oops. This effect, in turns, allows\n+\/\/ payload value cannot be directly propagated if it contains oops. This effect, in turn, allows\n@@ -216,1 +216,1 @@\n-\/\/ LoadFlatNode, this node is expanded to storing a payload creating from the field values of the\n+\/\/ LoadFlatNode, this node is expanded to storing a payload created from the field values of the\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}