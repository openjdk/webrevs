{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import static java.lang.Float16.*;\n@@ -60,1 +61,1 @@\n-        Float16 res = Float16.valueOf((short)0);\n+        Float16 res = shortBitsToFloat16((short)0);\n@@ -62,2 +63,2 @@\n-            res = Float16.sum(res, Float16.valueOf(src[i]));\n-            dst[i] = res.float16ToRawShortBits();\n+            res = Float16.sum(res, shortBitsToFloat16(src[i]));\n+            dst[i] = float16ToRawShortBits(res);\n@@ -70,6 +71,6 @@\n-        Float16 hf0 = Float16.valueOf((short)0);\n-        Float16 hf1 = Float16.valueOf((short)15360);\n-        Float16 hf2 = Float16.valueOf((short)16384);\n-        Float16 hf3 = Float16.valueOf((short)16896);\n-        Float16 hf4 = Float16.valueOf((short)17408);\n-        res = Float16.sum(Float16.sum(Float16.sum(Float16.sum(hf0, hf1), hf2), hf3), hf4).float16ToRawShortBits();\n+        Float16 hf0 = shortBitsToFloat16((short)0);\n+        Float16 hf1 = shortBitsToFloat16((short)15360);\n+        Float16 hf2 = shortBitsToFloat16((short)16384);\n+        Float16 hf3 = shortBitsToFloat16((short)16896);\n+        Float16 hf4 = shortBitsToFloat16((short)17408);\n+        res = float16ToRawShortBits(Float16.sum(Float16.sum(Float16.sum(Float16.sum(hf0, hf1), hf2), hf3), hf4));\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/float16\/TestFP16ScalarAdd.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-\n+import static java.lang.Float16.*;\n@@ -53,1 +53,1 @@\n-            input[i] = Float16.valueOf(Float.floatToFloat16(rng.nextFloat()));\n+            input[i] = shortBitsToFloat16(Float.floatToFloat16(rng.nextFloat()));\n@@ -70,2 +70,4 @@\n-            if (output[i].float16ToRawShortBits() != expected.float16ToRawShortBits()) {\n-                throw new RuntimeException(\"Invalid result: output[\" + i + \"] = \" + output[i].float16ToRawShortBits() + \" != \" + expected.float16ToRawShortBits());\n+            if (float16ToRawShortBits(output[i]) != float16ToRawShortBits(expected)) {\n+                throw new RuntimeException(\"Invalid result: output[\" + i + \"] = \" +\n+                                           float16ToRawShortBits(output[i]) + \" != \" +\n+                                           float16ToRawShortBits(expected));\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestFloat16VectorSum.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}