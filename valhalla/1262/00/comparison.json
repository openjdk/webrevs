{"files":[{"patch":"@@ -330,1 +330,0 @@\n-                !env.info.instanceInitializerBlock && \/\/ it is OK instance initializer blocks will go after super() anyways\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4116,1 +4116,1 @@\n-    cannot reference {0} after supertype constructor has been called\n+    cannot assign to {0} after supertype constructor has been called\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- *      8329345\n+ *      8329345 8341061\n@@ -744,1 +744,5 @@\n-        record Data(String src, boolean isRecord) {}\n+        record Data(String src, boolean isRecord) {\n+            Data(String src) {\n+                this(src, false);\n+            }\n+        }\n@@ -751,1 +755,1 @@\n-                    \"\"\", false),\n+                    \"\"\"),\n@@ -760,1 +764,1 @@\n-                    \"\"\", false),\n+                    \"\"\"),\n@@ -770,1 +774,1 @@\n-                    \"\"\", false),\n+                    \"\"\"),\n@@ -780,1 +784,1 @@\n-                    \"\"\", false),\n+                    \"\"\"),\n@@ -812,1 +816,1 @@\n-                    int j;\n+                    int j = 0;\n@@ -814,1 +818,1 @@\n-                        j = 200;\n+                        System.out.println(j);\n@@ -818,1 +822,1 @@\n-        String expectedCodeSequence = \"aload_0,bipush,putfield,aload_0,invokespecial,aload_0,sipush,putfield,return,\";\n+        String expectedCodeSequence = \"aload_0,bipush,putfield,aload_0,iconst_0,putfield,aload_0,invokespecial,getstatic,iconst_0,invokevirtual,return,\";\n@@ -829,1 +833,1 @@\n-                    Assert.check(expectedCodeSequence.equals(foundCodeSequence));\n+                    Assert.check(expectedCodeSequence.equals(foundCodeSequence), \"found \" + foundCodeSequence);\n@@ -877,0 +881,10 @@\n+        assertFail(\"compiler.err.cant.ref.after.ctor.called\",\n+                \"\"\"\n+                value class Test {\n+                    int f;\n+                    {\n+                        f = 1;\n+                    }\n+                }\n+                \"\"\"\n+        );\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java","additions":24,"deletions":10,"binary":false,"changes":34,"status":"modified"}]}