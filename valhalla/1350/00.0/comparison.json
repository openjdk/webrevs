{"files":[{"patch":"@@ -4,1 +4,1 @@\n-version=24\n+version=25\n","filename":".jcheck\/conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-DEFAULT_VERSION_FEATURE=24\n+DEFAULT_VERSION_FEATURE=25\n@@ -36,2 +36,2 @@\n-DEFAULT_VERSION_DATE=2025-03-18\n-DEFAULT_VERSION_CLASSFILE_MAJOR=68  # \"`$EXPR $DEFAULT_VERSION_FEATURE + 44`\"\n+DEFAULT_VERSION_DATE=2025-09-16\n+DEFAULT_VERSION_CLASSFILE_MAJOR=69  # \"`$EXPR $DEFAULT_VERSION_FEATURE + 44`\"\n@@ -40,2 +40,2 @@\n-DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"23 24\"\n-DEFAULT_JDK_SOURCE_TARGET_VERSION=24\n+DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"23 24 25\"\n+DEFAULT_JDK_SOURCE_TARGET_VERSION=25\n","filename":"make\/conf\/version-numbers.conf","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-#define CONSTANT_CLASS_DESCRIPTORS        68\n+#define CONSTANT_CLASS_DESCRIPTORS        69\n@@ -162,0 +162,2 @@\n+#define JAVA_25_VERSION                   69\n+\n@@ -4139,3 +4141,3 @@\n-  \/\/ Inline types are only supported by class file version 68.65535 and later\n-  return _major_version > JAVA_24_VERSION ||\n-         (_major_version == JAVA_24_VERSION && _minor_version == JAVA_PREVIEW_MINOR_VERSION);\n+  \/\/ Inline types are only supported by class file version 69.65535 and later\n+  return _major_version > JAVA_25_VERSION ||\n+         (_major_version == JAVA_25_VERSION && _minor_version == JAVA_PREVIEW_MINOR_VERSION);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -64,2 +64,1 @@\n-                                           G1EvacFailureRegions* evac_failure_regions,\n-                                           PartialArrayStateAllocator* pas_allocator)\n+                                           G1EvacFailureRegions* evac_failure_regions)\n@@ -84,1 +83,1 @@\n-    _partial_array_state_allocator(pas_allocator),\n+    _partial_array_state_allocator(g1h->partial_array_state_manager()),\n@@ -257,1 +256,1 @@\n-  _partial_array_state_allocator->release(_worker_id, state);\n+  _partial_array_state_allocator.release(state);\n@@ -280,5 +279,4 @@\n-      _partial_array_state_allocator->allocate(_worker_id,\n-                                               from_obj, to_obj,\n-                                               step._index,\n-                                               array_length,\n-                                               step._ncreate);\n+      _partial_array_state_allocator.allocate(from_obj, to_obj,\n+                                              step._index,\n+                                              array_length,\n+                                              step._ncreate);\n@@ -605,2 +603,1 @@\n-                               _evac_failure_regions,\n-                               &_partial_array_state_allocator);\n+                               _evac_failure_regions);\n@@ -736,2 +733,1 @@\n-    _evac_failure_regions(evac_failure_regions),\n-    _partial_array_state_allocator(num_workers)\n+    _evac_failure_regions(evac_failure_regions)\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-PartialArrayStateAllocator*    PSPromotionManager::_partial_array_state_allocator = nullptr;\n+PartialArrayStateManager*      PSPromotionManager::_partial_array_state_manager = nullptr;\n@@ -65,0 +65,4 @@\n+  assert(_partial_array_state_manager == nullptr, \"Attempt to initialize twice\");\n+  _partial_array_state_manager\n+    = new PartialArrayStateManager(promotion_manager_num);\n+\n@@ -70,5 +74,1 @@\n-  assert(_partial_array_state_allocator == nullptr, \"Attempt to initialize twice\");\n-  _partial_array_state_allocator\n-    = new PartialArrayStateAllocator(ParallelGCThreads);\n-\n-  _stack_array_depth = new PSScannerTasksQueueSet(ParallelGCThreads);\n+  _stack_array_depth = new PSScannerTasksQueueSet(promotion_manager_num);\n@@ -79,1 +79,0 @@\n-    _manager_array[i]._partial_array_state_allocator_index = i;\n@@ -191,1 +190,2 @@\n-  : _partial_array_stepper(ParallelGCThreads, ParGCArrayScanChunk)\n+  : _partial_array_state_allocator(_partial_array_state_manager),\n+    _partial_array_stepper(ParallelGCThreads, ParGCArrayScanChunk)\n@@ -202,3 +202,0 @@\n-  \/\/ Initialize to a bad value; fixed by initialize().\n-  _partial_array_state_allocator_index = UINT_MAX;\n-\n@@ -321,1 +318,1 @@\n-  _partial_array_state_allocator->release(_partial_array_state_allocator_index, state);\n+  _partial_array_state_allocator.release(state);\n@@ -335,5 +332,4 @@\n-      _partial_array_state_allocator->allocate(_partial_array_state_allocator_index,\n-                                               old_obj, new_obj,\n-                                               step._index,\n-                                               array_length,\n-                                               step._ncreate);\n+      _partial_array_state_allocator.allocate(old_obj, new_obj,\n+                                              step._index,\n+                                              array_length,\n+                                              step._ncreate);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.cpp","additions":13,"deletions":17,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -647,0 +647,6 @@\n+    \/**\n+     * The class major version of JAVA_25.\n+     * @since 25\n+     *\/\n+    int JAVA_25_VERSION = 69;\n+\n@@ -658,1 +664,1 @@\n-        return JAVA_24_VERSION;\n+        return JAVA_25_VERSION;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/ClassFile.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -317,0 +317,1 @@\n+    int V25 = 0 << 16 | 69;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/Opcodes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -151,0 +151,5 @@\n+\n+    \/**\n+      * 25, tbd\n+      *\/\n+    JDK25(\"25\"),\n@@ -216,0 +221,1 @@\n+        case JDK25  -> Target.JDK1_25;\n@@ -368,0 +374,1 @@\n+        case JDK25  -> RELEASE_25;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -110,0 +110,3 @@\n+\n+    \/** JDK 25. *\/\n+    JDK1_25(\"25\", 69, 0),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Target.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -231,1 +231,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -378,1 +378,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -474,1 +474,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -590,1 +590,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/GetfieldChains.jcod","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -149,1 +149,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -267,1 +267,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -385,1 +385,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -530,1 +530,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -678,1 +678,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -826,1 +826,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -944,1 +944,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -986,1 +986,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1080,1 +1080,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1122,1 +1122,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1167,1 +1167,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1264,1 +1264,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1364,1 +1364,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1458,1 +1458,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1552,1 +1552,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1649,1 +1649,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1746,1 +1746,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1840,1 +1840,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1934,1 +1934,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -2031,1 +2031,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -2645,1 +2645,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -2739,1 +2739,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -2833,1 +2833,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -2875,1 +2875,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -2920,1 +2920,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -3017,1 +3017,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -3117,1 +3117,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -3214,1 +3214,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -3256,1 +3256,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -3382,1 +3382,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -3486,1 +3486,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -3590,1 +3590,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -3650,1 +3650,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestMismatchHandling.jcod","additions":34,"deletions":34,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * @compile --source 24 FlatArraysTest.java\n+ * @compile --source 25 FlatArraysTest.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/FlatArraysTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * @compile --source 24 Ifacmp.java\n+ * @compile --source 25 Ifacmp.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/Ifacmp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @compile --source 24 InlineTypeArray.java Point.java Long8Inline.java Person.java\n+ * @compile --source 25 InlineTypeArray.java Point.java Long8Inline.java Person.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypeArray.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ValuePreloadClient1.jcod","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -97,1 +97,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -161,1 +161,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -225,1 +225,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -289,1 +289,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -353,1 +353,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -417,1 +417,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -481,1 +481,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -545,1 +545,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -609,1 +609,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -674,1 +674,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -793,1 +793,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -883,1 +883,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -973,1 +973,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1063,1 +1063,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1159,1 +1159,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/cfpValueClassValidation.jcod","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -163,1 +163,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -284,1 +284,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -404,1 +404,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -524,1 +524,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/fieldModifiersTest.jcod","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-public abstract class StrictBase version 68:65535 {\n+public abstract class StrictBase version 69:65535 {\n@@ -62,1 +62,1 @@\n-public final class PostInitStrict version 68:65535 {\n+public final class PostInitStrict version 69:65535 {\n@@ -77,1 +77,1 @@\n-public final class BadStrictSubPreInit extends StrictBase version 68:65535 {\n+public final class BadStrictSubPreInit extends StrictBase version 69:65535 {\n@@ -91,1 +91,1 @@\n-public final class BadStrictSubPostInit extends StrictBase version 68:65535 {\n+public final class BadStrictSubPostInit extends StrictBase version 69:65535 {\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/strictFields.jasm","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -265,1 +265,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -366,1 +366,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -457,1 +457,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -547,1 +547,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -739,1 +739,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -830,1 +830,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1054,1 +1054,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n@@ -1236,1 +1236,1 @@\n-  68; \/\/ version\n+  69; \/\/ version\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/verifierTests.jcod","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-    @SupportedSourceVersion(RELEASE_24)\n+    @SupportedSourceVersion(RELEASE_25)\n@@ -129,1 +129,1 @@\n-    @SupportedSourceVersion(RELEASE_24)\n+    @SupportedSourceVersion(RELEASE_25)\n@@ -140,1 +140,1 @@\n-    @SupportedSourceVersion(RELEASE_24)\n+    @SupportedSourceVersion(RELEASE_25)\n@@ -151,1 +151,1 @@\n-    @SupportedSourceVersion(RELEASE_24)\n+    @SupportedSourceVersion(RELEASE_25)\n@@ -173,1 +173,1 @@\n-    @SupportedSourceVersion(RELEASE_24)\n+    @SupportedSourceVersion(RELEASE_25)\n@@ -193,1 +193,1 @@\n-    @SupportedSourceVersion(RELEASE_24)\n+    @SupportedSourceVersion(RELEASE_25)\n@@ -215,1 +215,1 @@\n-    @SupportedSourceVersion(RELEASE_24)\n+    @SupportedSourceVersion(RELEASE_25)\n@@ -237,1 +237,1 @@\n-    @SupportedSourceVersion(RELEASE_24)\n+    @SupportedSourceVersion(RELEASE_25)\n@@ -259,1 +259,1 @@\n-    @SupportedSourceVersion(RELEASE_24)\n+    @SupportedSourceVersion(RELEASE_25)\n","filename":"test\/langtools\/tools\/javac\/lib\/JavacTestingAbstractProcessor.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}