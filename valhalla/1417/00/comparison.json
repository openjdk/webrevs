{"files":[{"patch":"@@ -582,1 +582,1 @@\n-  if (val_bt == T_INT || val_bt == T_OBJECT) {\n+  if (val_bt == T_INT || val_bt == T_OBJECT || val_bt == T_ARRAY) {\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -175,0 +175,12 @@\n+    @ImplicitlyConstructible\n+    @LooselyConsistentValue\n+    static value class IntAndArrayOop {\n+        int i;\n+        MyClass[] array;\n+\n+        public IntAndArrayOop(int i, MyClass[] array) {\n+            this.i = i;\n+            this.array = array;\n+        }\n+    }\n+\n@@ -694,0 +706,5 @@\n+        IntAndArrayOop[] nullFreeArray6 = (IntAndArrayOop[])ValueClass.newNullRestrictedArray(IntAndArrayOop.class, 3);\n+        IntAndArrayOop[] nullFreeAtomicArray6 = (IntAndArrayOop[])ValueClass.newNullRestrictedAtomicArray(IntAndArrayOop.class, 3);\n+        IntAndArrayOop[] nullableArray6 = new IntAndArrayOop[3];\n+        IntAndArrayOop[] nullableAtomicArray6 = (IntAndArrayOop[])ValueClass.newNullableAtomicArray(IntAndArrayOop.class, 3);\n+\n@@ -873,0 +890,22 @@\n+            IntAndArrayOop val6 = new IntAndArrayOop(i, new MyClass[1]);\n+            nullFreeArray6[1] = val6;\n+            nullFreeArray6[2] = nullFreeArray6[1];\n+            nullFreeAtomicArray6[1] = val6;\n+            nullFreeAtomicArray6[2] = nullFreeAtomicArray6[1];\n+            nullableArray6[1] = val6;\n+            nullableArray6[2] = nullableArray6[1];\n+            nullableAtomicArray6[1] = val6;\n+            nullableAtomicArray6[2] = nullableAtomicArray6[1];\n+            Asserts.assertEQ(nullFreeArray6[0], new IntAndArrayOop(0, null));\n+            Asserts.assertEQ(nullFreeAtomicArray6[0], new IntAndArrayOop(0, null));\n+            Asserts.assertEQ(nullableArray6[0], null);\n+            Asserts.assertEQ(nullableAtomicArray6[0], null);\n+            Asserts.assertEQ(nullFreeArray6[1], val6);\n+            Asserts.assertEQ(nullFreeAtomicArray6[1], val6);\n+            Asserts.assertEQ(nullableArray6[1], val6);\n+            Asserts.assertEQ(nullableAtomicArray6[1], val6);\n+            Asserts.assertEQ(nullFreeArray6[2], val6);\n+            Asserts.assertEQ(nullFreeAtomicArray6[2], val6);\n+            Asserts.assertEQ(nullableArray6[2], val6);\n+            Asserts.assertEQ(nullableAtomicArray6[2], val6);\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestArrayNullMarkers.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"modified"}]}