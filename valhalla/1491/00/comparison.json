{"files":[{"patch":"@@ -74,1 +74,1 @@\n-  vt->set_req(IsInit, is_init_node);\n+  vt->set_req(NullMarker, is_init_node);\n@@ -144,1 +144,1 @@\n-      set_req(IsInit, gvn->transform(phi));\n+      set_req(NullMarker, gvn->transform(phi));\n@@ -519,1 +519,1 @@\n-    set_req(IsInit, value);\n+    set_req(NullMarker, value);\n@@ -1207,1 +1207,1 @@\n-      vt->set_req(IsInit, nm_value);\n+      vt->set_req(NullMarker, nm_value);\n@@ -1456,1 +1456,1 @@\n-      set_req(IsInit, is_init);\n+      set_req(NullMarker, is_init);\n@@ -1494,1 +1494,1 @@\n-        vt->set_req(IsInit, is_init);\n+        vt->set_req(NullMarker, is_init);\n@@ -1546,1 +1546,1 @@\n-    set_req(IsInit, is_init);\n+    set_req(NullMarker, is_init);\n@@ -1645,1 +1645,1 @@\n-  const Type* tinit = phase->type(in(IsInit));\n+  const Type* tinit = phase->type(in(NullMarker));\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -51,1 +51,4 @@\n-         IsInit,     \/\/ Needs to be checked for nullptr before using the field values.\n+         NullMarker, \/\/ Needs to be checked for nullptr before using the field values.\n+                     \/\/ 0 => InlineType is null\n+                     \/\/ 1 => InlineType is non-null\n+                     \/\/ Can be dynamic value, not necessarily statically known\n@@ -108,2 +111,2 @@\n-  Node* get_is_init() const { return in(IsInit); }\n-  void  set_is_init(PhaseGVN& gvn, Node* init) { set_req_X(IsInit, init, &gvn); }\n+  Node* get_is_init() const { return in(NullMarker); }\n+  void  set_is_init(PhaseGVN& gvn, Node* init) { set_req_X(NullMarker, init, &gvn); }\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}