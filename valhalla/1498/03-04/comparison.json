{"files":[{"patch":"@@ -6178,1 +6178,1 @@\n-        Klass* klass = SystemDictionary::resolve_with_circularity_detection_or_fail(_class_name, s,\n+        InstanceKlass* klass = SystemDictionary::resolve_with_circularity_detection_or_fail(_class_name, s,\n@@ -6190,16 +6190,1 @@\n-        if (klass->access_flags().is_identity_class()) {\n-          assert(klass->is_instance_klass(), \"Sanity check\");\n-          ResourceMark rm(THREAD);\n-          THROW_MSG(vmSymbols::java_lang_IncompatibleClassChangeError(),\n-                    err_msg(\"Class %s expects class %s to be a value class, but it is an identity class\",\n-                    _class_name->as_C_string(),\n-                    InstanceKlass::cast(klass)->external_name()));\n-        }\n-        if (klass->is_abstract()) {\n-          assert(klass->is_instance_klass(), \"Sanity check\");\n-          ResourceMark rm(THREAD);\n-          THROW_MSG(vmSymbols::java_lang_IncompatibleClassChangeError(),\n-                    err_msg(\"Class %s expects class %s to be concrete value type, but it is an abstract class\",\n-                    _class_name->as_C_string(),\n-                    InstanceKlass::cast(klass)->external_name()));\n-        }\n+        klass->check_null_free_field(_class_name, CHECK);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":2,"deletions":17,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1102,1 +1102,1 @@\n-                                k->name()->as_C_string());\n+                                name->as_C_string());\n@@ -1110,1 +1110,1 @@\n-  real_k->check_null_free_field(ik, CHECK_false);\n+  real_k->check_null_free_field(ik->name(), CHECK_false);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3594,1 +3594,1 @@\n-void InstanceKlass::check_null_free_field(InstanceKlass* ik, TRAPS) {\n+void InstanceKlass::check_null_free_field(Symbol* container_klass_name, TRAPS) {\n@@ -3600,1 +3600,1 @@\n-              ik->name()->as_C_string(),\n+              container_klass_name->as_C_string(),\n@@ -3609,1 +3609,1 @@\n-              ik->name()->as_C_string(),\n+              container_klass_name->as_C_string(),\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -596,1 +596,1 @@\n-  void check_null_free_field(InstanceKlass* ik, TRAPS);\n+  void check_null_free_field(Symbol* container_klass_name, TRAPS);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}