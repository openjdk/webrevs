{"files":[{"patch":"@@ -6175,2 +6175,2 @@\n-        log_info(class, preload)(\"Preloading class %s during loading of class %s. \\\n-                                  Cause: a null-free non-static field is declared with this type\",\n+        log_info(class, preload)(\"Preloading class %s during loading of class %s. \"\n+                                  \"Cause: a null-free non-static field is declared with this type\",\n@@ -6179,3 +6179,3 @@\n-                                                                                    Handle(THREAD,\n-                                                                                    _loader_data->class_loader()),\n-                                                                                    false, THREAD);\n+                                                                                            Handle(THREAD,\n+                                                                                            _loader_data->class_loader()),\n+                                                                                            false, THREAD);\n@@ -6183,2 +6183,2 @@\n-          log_warning(class, preload)(\"Preloading of class %s during loading of class %s \\\n-                                      (cause: null-free non-static field) failed: %s\",\n+          log_warning(class, preload)(\"Preloading of class %s during loading of class %s \"\n+                                      \"(cause: null-free non-static field) failed: %s\",\n@@ -6190,1 +6190,1 @@\n-        InstanceKlass::can_be_annotated_with_NullRestricted(klass, _class_name, CHECK);\n+        InstanceKlass::check_can_be_annotated_with_NullRestricted(klass, _class_name, CHECK);\n@@ -6193,2 +6193,2 @@\n-        log_info(class, preload)(\"Preloading of class %s during loading of class %s \\\n-                                 (cause: null-free non-static field) succeeded\",\n+        log_info(class, preload)(\"Preloading of class %s during loading of class %s \"\n+                                 \"(cause: null-free non-static field) succeeded\",\n@@ -6201,2 +6201,2 @@\n-          log_info(class, preload)(\"Preloading class %s during loading of class %s. \\\n-                                   Cause: field type in LoadableDescriptors attribute\",\n+          log_info(class, preload)(\"Preloading class %s during loading of class %s. \"\n+                                   \"Cause: field type in LoadableDescriptors attribute\",\n@@ -6211,2 +6211,2 @@\n-              log_info(class, preload)(\"Preloading of class %s during loading of class %s \\\n-                                       (cause: field type in LoadableDescriptors attribute) succeeded\",\n+              log_info(class, preload)(\"Preloading of class %s during loading of class %s \"\n+                                       \"(cause: field type in LoadableDescriptors attribute) succeeded\",\n@@ -6216,2 +6216,2 @@\n-              log_warning(class, preload)(\"Preloading class %s during loading of class %s \\\n-                                          (cause: field type in LoadableDescriptors attribute) but loaded class is not a value class\",\n+              log_warning(class, preload)(\"Preloading class %s during loading of class %s \"\n+                                          \"(cause: field type in LoadableDescriptors attribute) but loaded class is not a value class\",\n@@ -6221,2 +6221,2 @@\n-            log_warning(class, preload)(\"Preloading of class %s during loading of class %s \\\n-                                        (cause: field type in LoadableDescriptors attribute) failed : %s\",\n+            log_warning(class, preload)(\"Preloading of class %s during loading of class %s \"\n+                                        \"(cause: field type in LoadableDescriptors attribute) failed : %s\",\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -1082,2 +1082,2 @@\n-  log_info(class, preload)(\"Preloading class %s during loading of shared class %s. \\\n-                           Cause: a null-free non-static field is declared with this type\",\n+  log_info(class, preload)(\"Preloading class %s during loading of shared class %s. \"\n+                           \"Cause: a null-free non-static field is declared with this type\",\n@@ -1088,2 +1088,2 @@\n-    log_warning(class, preload)(\"Preloading of class %s during loading of class %s \\\n-                                (cause: null-free non-static field) failed: %s\",\n+    log_warning(class, preload)(\"Preloading of class %s during loading of class %s \"\n+                                \"(cause: null-free non-static field) failed: %s\",\n@@ -1098,3 +1098,3 @@\n-    log_warning(class, preload)(\"Preloading of class %s during loading of shared class %s \\\n-                                (cause: null-free non-static field) failed : \\\n-                                app substituted a different version of %s\",\n+    log_warning(class, preload)(\"Preloading of class %s during loading of shared class %s \"\n+                                \"(cause: null-free non-static field) failed : \"\n+                                \"app substituted a different version of %s\",\n@@ -1105,2 +1105,2 @@\n-  log_info(class, preload)(\"Preloading of class %s during loading of shared class %s \\\n-                           (cause: null-free non-static field) succeeded\",\n+  log_info(class, preload)(\"Preloading of class %s during loading of shared class %s \"\n+                           \"(cause: null-free non-static field) succeeded\",\n@@ -1110,1 +1110,1 @@\n-  InstanceKlass::can_be_annotated_with_NullRestricted(real_k, ik->name(), CHECK_false);\n+  InstanceKlass::check_can_be_annotated_with_NullRestricted(real_k, ik->name(), CHECK_false);\n@@ -1120,2 +1120,2 @@\n-    log_info(class, preload)(\"Preloading class %s during loading of shared class %s. \\\n-                             Cause: field type in LoadableDescriptors attribute\",\n+    log_info(class, preload)(\"Preloading class %s during loading of shared class %s. \"\n+                             \"Cause: field type in LoadableDescriptors attribute\",\n@@ -1132,3 +1132,3 @@\n-      log_warning(class, preload)(\"Preloading of class %s during loading of shared class %s \\\n-                                  (cause: field type in LoadableDescriptors attribute) failed : \\\n-                                  app substituted a different version of %s\",\n+      log_warning(class, preload)(\"Preloading of class %s during loading of shared class %s \"\n+                                  \"(cause: field type in LoadableDescriptors attribute) failed : \"\n+                                  \"app substituted a different version of %s\",\n@@ -1139,2 +1139,2 @@\n-      log_info(class, preload)(\"Preloading of class %s during loading of shared class %s \\\n-                               (cause: field type in LoadableDescriptors attribute) succeeded\",\n+      log_info(class, preload)(\"Preloading of class %s during loading of shared class %s \"\n+                               \"(cause: field type in LoadableDescriptors attribute) succeeded\",\n@@ -1178,0 +1178,1 @@\n+        \/\/ A false return means that the class didn't load for other reasons than an exception.\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -3594,1 +3594,1 @@\n-void InstanceKlass::can_be_annotated_with_NullRestricted(InstanceKlass* type, Symbol* container_klass_name, TRAPS) {\n+void InstanceKlass::check_can_be_annotated_with_NullRestricted(InstanceKlass* type, Symbol* container_klass_name, TRAPS) {\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -596,1 +596,1 @@\n-  static void can_be_annotated_with_NullRestricted(InstanceKlass* type, Symbol* container_klass_name, TRAPS);\n+  static void check_can_be_annotated_with_NullRestricted(InstanceKlass* type, Symbol* container_klass_name, TRAPS);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}