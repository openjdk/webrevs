{"files":[{"patch":"@@ -124,1 +124,1 @@\n-InlineTypeNode* InlineTypeNode::merge_with(PhaseGVN* gvn, const InlineTypeNode* other, int pnum, bool transform) {\n+InlineTypeNode* InlineTypeNode::merge_with(PhaseGVN* gvn, const InlineTypeNode* other, int phi_index, bool transform) {\n@@ -129,1 +129,1 @@\n-  phi->set_req(pnum, other->get_oop());\n+  phi->set_req(phi_index, other->get_oop());\n@@ -136,1 +136,1 @@\n-  phi->set_req(pnum, other->get_is_buffered());\n+  phi->set_req(phi_index, other->get_is_buffered());\n@@ -145,1 +145,1 @@\n-    phi->set_req(pnum, other->get_null_marker());\n+    phi->set_req(phi_index, other->get_null_marker());\n@@ -161,1 +161,6 @@\n-      val1->as_InlineType()->merge_with(gvn, val2->as_InlineType(), pnum, transform);\n+      if (val2->is_top()) {\n+        \/\/ The path where 'other' is used is dying. Therefore, we do not need to process the merge with 'other' further.\n+        \/\/ The phi inputs of 'this' at 'phi_index' will eventually be removed.\n+        break;\n+      }\n+      val1->as_InlineType()->merge_with(gvn, val2->as_InlineType(), phi_index, transform);\n@@ -164,1 +169,1 @@\n-      val1->set_req(pnum, val2);\n+      val1->set_req(phi_index, val2);\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-  InlineTypeNode* merge_with(PhaseGVN* gvn, const InlineTypeNode* other, int pnum, bool transform);\n+  InlineTypeNode* merge_with(PhaseGVN* gvn, const InlineTypeNode* other, int phi_index, bool transform);\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}