{"files":[{"patch":"@@ -1,4 +0,0 @@\n-abstract class AbstractClassWithBothModifiers {\n-\n-}\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/AbstractClassWithBothModifiers.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-abstract class AbstractClassWithFieldExtendingValueClass extends IdentityAbstract {\n-    int i;\n-}\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/AbstractClassWithFieldExtendingValueClass.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-abstract class AbstractClassWithFieldWithNoIdentityModifier {\n-    int i;\n-}\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/AbstractClassWithFieldImplementingValueInterface.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/AbstractClassWithFieldWithNoIdentityModifier.java","additions":0,"deletions":0,"binary":false,"changes":0,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-abstract class AbstractClassWithBothModifiers {\n-\n-}\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/AbstractClassWithSynchMethodWithNoIdentityModifier.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -1,28 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ Abstract class with an instance field, this must generate an identity class\n-abstract class AbstractWithField {\n-    int i;\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/AbstractWithField.java","additions":0,"deletions":28,"binary":false,"changes":28,"status":"deleted"},{"patch":"@@ -1,28 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ abstract class with a synchronized method, must generate an identity class\n-abstract class AbstractWithSynchMethod {\n-    synchronized void synchMethod() { }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/AbstractWithSynchMethod.java","additions":0,"deletions":28,"binary":false,"changes":28,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-abstract class AbstractClassWithSynchMethodWithNoIdentityModifier {\n-    synhronized void foo() { }\n-}\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/AbstractWithSynchMethodWithNoIdentityModifier.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -1,832 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n- class ValueClassExtendingIdentityClass {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1\n-    Utf8 \"ValueClassExtendingIdentityClass\"; \/\/ #2\n-    class #4; \/\/ #3\n-    Utf8 \"IdentityAbstract\"; \/\/ #4\n-    Utf8 \"<vnew>\"; \/\/ #5\n-    Utf8 \"()LValueClassExtendingIdentityClass;\"; \/\/ #6\n-    Utf8 \"Code\"; \/\/ #7\n-    Utf8 \"LineNumberTable\"; \/\/ #8\n-    Utf8 \"SourceFile\"; \/\/ #9\n-    Utf8 \"ValueClassExtendingIdentityClass.java\"; \/\/ #10\n-  } \/\/ Constant Pool\n-\n-  0x0050; \/\/ access\n-  #1;\/\/ this_cpx\n-  #3;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0008; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#7) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0xCB00014B2AB0;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#8) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#9) { \/\/ SourceFile\n-      #10;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class ValueClassExtendingIdentityClass\n-\n-class ValueClassExtendingAbstractClassWithField {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1\n-    Utf8 \"ValueClassExtendingAbstractClassWithField\"; \/\/ #2\n-    class #4; \/\/ #3\n-    Utf8 \"AbstractWithField\"; \/\/ #4\n-    Utf8 \"<vnew>\"; \/\/ #5\n-    Utf8 \"()LValueClassExtendingAbstractClassWithField;\"; \/\/ #6\n-    Utf8 \"Code\"; \/\/ #7\n-    Utf8 \"LineNumberTable\"; \/\/ #8\n-    Utf8 \"SourceFile\"; \/\/ #9\n-    Utf8 \"ValueClassExtendingAbstractClassWithField.java\"; \/\/ #10\n-  } \/\/ Constant Pool\n-\n-  0x0050; \/\/ access\n-  #1;\/\/ this_cpx\n-  #3;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0008; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#7) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0xCB00014B2AB0;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#8) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#9) { \/\/ SourceFile\n-      #10;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class ValueClassExtendingAbstractClassWithField\n-\n-class ValueClassExtendingAbstractClassWithSynchMethod {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1\n-    Utf8 \"ValueClassExtendingAbstractClassWithSynchMethod\"; \/\/ #2\n-    class #4; \/\/ #3\n-    Utf8 \"AbstractWithSynchMethod\"; \/\/ #4\n-    Utf8 \"<vnew>\"; \/\/ #5\n-    Utf8 \"()LValueClassExtendingAbstractClassWithSynchMethod;\"; \/\/ #6\n-    Utf8 \"Code\"; \/\/ #7\n-    Utf8 \"LineNumberTable\"; \/\/ #8\n-    Utf8 \"SourceFile\"; \/\/ #9\n-    Utf8 \"ValueClassExtendingAbstractClassWithSynchMethod.java\"; \/\/ #10\n-  } \/\/ Constant Pool\n-\n-  0x0050; \/\/ access\n-  #1;\/\/ this_cpx\n-  #3;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0008; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#7) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0xCB00014B2AB0;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#8) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#9) { \/\/ SourceFile\n-      #10;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class ValueClassExtendingAbstractClassWithSynchMethod\n-\n-class ValueClassImplementingIdentityInterface {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1\n-    Utf8 \"ValueClassImplementingIdentityInterface\"; \/\/ #2\n-    class #4; \/\/ #3\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4\n-    class #6; \/\/ #5\n-    Utf8 \"IdentityInterface\"; \/\/ #6\n-    Utf8 \"<vnew>\"; \/\/ #7\n-    Utf8 \"()LValueClassImplementingIdentityInterface;\"; \/\/ #8\n-    Utf8 \"Code\"; \/\/ #9\n-    Utf8 \"LineNumberTable\"; \/\/ #10\n-    Utf8 \"SourceFile\"; \/\/ #11\n-    Utf8 \"ValueClassImplementingIdentityInterface.java\"; \/\/ #12\n-  } \/\/ Constant Pool\n-\n-  0x0050; \/\/ access\n-  #1;\/\/ this_cpx\n-  #3;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-    #5;\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0008; \/\/ access\n-      #7; \/\/ name_index\n-      #8; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#9) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0xCB00014B2AB0;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#10) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#11) { \/\/ SourceFile\n-      #12;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class ValueClassImplementingIdentityInterface\n-\n-class IdentityClassExtendingValueClass {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1\n-    class #4; \/\/ #2\n-    NameAndType #5 #6; \/\/ #3\n-    Utf8 \"ValueAbstract\"; \/\/ #4\n-    Utf8 \"<init>\"; \/\/ #5\n-    Utf8 \"()V\"; \/\/ #6\n-    class #8; \/\/ #7\n-    Utf8 \"IdentityClassExtendingValueClass\"; \/\/ #8\n-    Utf8 \"Code\"; \/\/ #9\n-    Utf8 \"LineNumberTable\"; \/\/ #10\n-    Utf8 \"SourceFile\"; \/\/ #11\n-    Utf8 \"IdentityClassExtendingValueClass.java\"; \/\/ #12\n-  } \/\/ Constant Pool\n-\n-  0x0020; \/\/ access\n-  #7;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0000; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#9) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0x2AB70001B1;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#10) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#11) { \/\/ SourceFile\n-      #12;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class IdentityClassExtendingValueClass\n-\n-class IdentityClassImplementingValueInterface {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1\n-    class #4; \/\/ #2\n-    NameAndType #5 #6; \/\/ #3\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4\n-    Utf8 \"<init>\"; \/\/ #5\n-    Utf8 \"()V\"; \/\/ #6\n-    class #8; \/\/ #7\n-    Utf8 \"IdentityClassImplementingValueInterface\"; \/\/ #8\n-    class #10; \/\/ #9\n-    Utf8 \"ValueInterface\"; \/\/ #10\n-    Utf8 \"Code\"; \/\/ #11\n-    Utf8 \"LineNumberTable\"; \/\/ #12\n-    Utf8 \"SourceFile\"; \/\/ #13\n-    Utf8 \"IdentityClassImplementingValueInterface.java\"; \/\/ #14\n-  } \/\/ Constant Pool\n-\n-  0x0020; \/\/ access\n-  #7;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-    #9;\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0000; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#11) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0x2AB70001B1;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#12) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#13) { \/\/ SourceFile\n-      #14;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class IdentityClassImplementingValueInterface\n-\n-class AbstractClassWithFieldExtendingValueClass {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1\n-    class #4; \/\/ #2\n-    NameAndType #5 #6; \/\/ #3\n-    Utf8 \"ValueAbstract\"; \/\/ #4\n-    Utf8 \"<init>\"; \/\/ #5\n-    Utf8 \"()V\"; \/\/ #6\n-    class #8; \/\/ #7\n-    Utf8 \"AbstractClassWithFieldExtendingValueClass\"; \/\/ #8\n-    Utf8 \"i\"; \/\/ #9\n-    Utf8 \"I\"; \/\/ #10\n-    Utf8 \"Code\"; \/\/ #11\n-    Utf8 \"LineNumberTable\"; \/\/ #12\n-    Utf8 \"SourceFile\"; \/\/ #13\n-    Utf8 \"AbstractClassWithFieldExtendingValueClass.java\"; \/\/ #14\n-  } \/\/ Constant Pool\n-\n-  0x0420; \/\/ access\n-  #7;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-    {  \/\/ field\n-      0x0000; \/\/ access\n-      #9; \/\/ name_index\n-      #10; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0000; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#11) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0x2AB70001B1;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#12) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#13) { \/\/ SourceFile\n-      #14;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class AbstractClassWithFieldExtendingValueClass\n-\n-class AbstractClassWithFieldImplementingValueInterface {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1\n-    class #4; \/\/ #2\n-    NameAndType #5 #6; \/\/ #3\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4\n-    Utf8 \"<init>\"; \/\/ #5\n-    Utf8 \"()V\"; \/\/ #6\n-    class #8; \/\/ #7\n-    Utf8 \"AbstractClassWithFieldImplementingValueInterface\"; \/\/ #8\n-    class #10; \/\/ #9\n-    Utf8 \"ValueInterface\"; \/\/ #10\n-    Utf8 \"i\"; \/\/ #11\n-    Utf8 \"I\"; \/\/ #12\n-    Utf8 \"Code\"; \/\/ #13\n-    Utf8 \"LineNumberTable\"; \/\/ #14\n-    Utf8 \"SourceFile\"; \/\/ #15\n-    Utf8 \"AbstractClassWithFieldImplementingValueInterface.java\"; \/\/ #16\n-  } \/\/ Constant Pool\n-\n-  0x0420; \/\/ access\n-  #7;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-    #9;\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-    {  \/\/ field\n-      0x0000; \/\/ access\n-      #11; \/\/ name_index\n-      #12; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0000; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#13) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0x2AB70001B1;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#14) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#15) { \/\/ SourceFile\n-      #16;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class AbstractClassWithFieldImplementingValueInterface\n-\n-class AbstractClassWithFieldWithNoIdentityModifier {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1\n-    class #4; \/\/ #2\n-    NameAndType #5 #6; \/\/ #3\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4\n-    Utf8 \"<init>\"; \/\/ #5\n-    Utf8 \"()V\"; \/\/ #6\n-    class #8; \/\/ #7\n-    Utf8 \"AbstractClassWithFieldWithNoIdentityModifier\"; \/\/ #8\n-    Utf8 \"i\"; \/\/ #9\n-    Utf8 \"I\"; \/\/ #10\n-    Utf8 \"Code\"; \/\/ #11\n-    Utf8 \"LineNumberTable\"; \/\/ #12\n-    Utf8 \"SourceFile\"; \/\/ #13\n-    Utf8 \"AbstractClassWithFieldWithNoIdentityModifier.java\"; \/\/ #14\n-  } \/\/ Constant Pool\n-\n-  0x0400; \/\/ access\n-  #7;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-    {  \/\/ field\n-      0x0000; \/\/ access\n-      #9; \/\/ name_index\n-      #10; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0000; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#11) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0x2AB70001B1;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#12) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#13) { \/\/ SourceFile\n-      #14;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class AbstractClassWithFieldWithNoIdentityModifier\n-\n-class AbstractClassWithSynchMethodWithNoIdentityModifier {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1\n-    class #4; \/\/ #2\n-    NameAndType #5 #6; \/\/ #3\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4\n-    Utf8 \"<init>\"; \/\/ #5\n-    Utf8 \"()V\"; \/\/ #6\n-    class #8; \/\/ #7\n-    Utf8 \"AbstractClassWithSynchMethodWithNoIdentityModifier\"; \/\/ #8\n-    Utf8 \"Code\"; \/\/ #9\n-    Utf8 \"LineNumberTable\"; \/\/ #10\n-    Utf8 \"foo\"; \/\/ #11\n-    Utf8 \"SourceFile\"; \/\/ #12\n-    Utf8 \"AbstractClassWithSynchMethodWithNoIdentityModifier.java\"; \/\/ #13\n-  } \/\/ Constant Pool\n-\n-  0x0400; \/\/ access\n-  #7;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0000; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#9) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0x2AB70001B1;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#10) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method\n-      0x0020; \/\/ access\n-      #11; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#9) { \/\/ Code\n-          0; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0xB1;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#10) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  2;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#12) { \/\/ SourceFile\n-      #13;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class AbstractClassWithSynchMethodWithNoIdentityModifier\n-\n-class AbstractClassWithBothModifiers {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1\n-    class #4; \/\/ #2\n-    NameAndType #5 #6; \/\/ #3\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4\n-    Utf8 \"<init>\"; \/\/ #5\n-    Utf8 \"()V\"; \/\/ #6\n-    class #8; \/\/ #7\n-    Utf8 \"AbstractClassWithBothModifiers\"; \/\/ #8\n-    Utf8 \"Code\"; \/\/ #9\n-    Utf8 \"LineNumberTable\"; \/\/ #10\n-    Utf8 \"SourceFile\"; \/\/ #11\n-    Utf8 \"AbstractClassWithBothModifiers.java\"; \/\/ #12\n-  } \/\/ Constant Pool\n-\n-  0x0460; \/\/ access\n-  #7;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0000; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#9) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0x2AB70001B1;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#10) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#11) { \/\/ SourceFile\n-      #12;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class AbstractClassWithBothModifiers\n-\n-class ConcreteClassWithNoModifiers {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1\n-    class #4; \/\/ #2\n-    NameAndType #5 #6; \/\/ #3\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4\n-    Utf8 \"<init>\"; \/\/ #5\n-    Utf8 \"()V\"; \/\/ #6\n-    class #8; \/\/ #7\n-    Utf8 \"ConcreteClassWithNoModifiers\"; \/\/ #8\n-    Utf8 \"Code\"; \/\/ #9\n-    Utf8 \"LineNumberTable\"; \/\/ #10\n-    Utf8 \"SourceFile\"; \/\/ #11\n-    Utf8 \"ConcreteClassWithNoModifiers.java\"; \/\/ #12\n-  } \/\/ Constant Pool\n-\n-  0x0000; \/\/ access\n-  #7;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [] { \/\/ Fields\n-  } \/\/ Fields\n-\n-  [] { \/\/ Methods\n-    {  \/\/ method\n-      0x0000; \/\/ access\n-      #5; \/\/ name_index\n-      #6; \/\/ descriptor_index\n-      [] { \/\/ Attributes\n-        Attr(#9) { \/\/ Code\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[]{\n-            0x2AB70001B1;\n-          }\n-          [] { \/\/ Traps\n-          } \/\/ end Traps\n-          [] { \/\/ Attributes\n-            Attr(#10) { \/\/ LineNumberTable\n-              [] { \/\/ line_number_table\n-                0  1;\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [] { \/\/ Attributes\n-    Attr(#11) { \/\/ SourceFile\n-      #12;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class ConcreteClassWithNoModifiers\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/ClassesWithInvalidModifiers.jcod","additions":0,"deletions":832,"binary":false,"changes":832,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-class ConcreteClassWithNoModifiers {\n-\n-}\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/ConcreteClassWithNoModifiers.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-abstract identity class IdentityAbstract { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/IdentityAbstract.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"},{"patch":"@@ -1,2 +0,0 @@\n-identity class IdentityClassExtendingValueClass extends IdentityAbstract { }\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/IdentityClassExtendingValueClass.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-abstract identity class IdentityClassImplementingValueInterface implements IdentityInterface {\n-    int i;\n-}\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/IdentityClassImplementingValueInterface.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-identity interface IdentityInterface { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/IdentityInterface.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-abstract class NeutralAbstract { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/NeutralAbstract.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-interface NeutralInterface { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/NeutralInterface.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"},{"patch":"@@ -1,126 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/*\n- * @ignore Fix JDK-8328417\n- * @test\n- * @summary test that the JVM correctly accepts or rejects classes based on their\n- *          ACC_VALUE\/ACC_IDENTITY modifiers\n- * @library \/test\/lib\n- * @enablePreview\n- * @compile NeutralInterface.java ValueInterface.java IdentityInterface.java\n- * @compile NeutralAbstract.java ValueAbstract.java IdentityAbstract.java AbstractWithField.java AbstractWithSynchMethod.java\n- * @compile ClassesWithInvalidModifiers.jcod\n- * @run main\/othervm -verify TestClassModifiers\n- *\/\n-\n-import jdk.test.lib.Asserts;\n-\n- public class TestClassModifiers {\n-  static value class VC0 {}\n-  static value class VC1 implements NeutralInterface { }\n-  static value class VC2 implements ValueInterface { }\n-  static value class VC3 extends NeutralAbstract { }\n-  static value class VC4 extends ValueAbstract { }\n-  static value class VC5 extends NeutralAbstract implements NeutralInterface { }\n-  static value class VC6 extends NeutralAbstract implements ValueInterface { }\n-  static value class VC7 extends ValueAbstract implements NeutralInterface { }\n-  static value class VC8 extends ValueAbstract implements ValueInterface { }\n-\n-  static identity class IC0 { }\n-  static identity class IC1 implements NeutralInterface { }\n-  static identity class IC2 implements IdentityInterface { }\n-  static identity class IC3 extends NeutralAbstract { }\n-  static identity class IC4 extends IdentityAbstract { }\n-  static identity class IC5 extends AbstractWithField { }\n-  static identity class IC6 extends AbstractWithSynchMethod { }\n-  static identity class IC7 extends NeutralAbstract implements NeutralInterface { }\n-  static identity class IC8 extends NeutralAbstract implements IdentityInterface { }\n-  static identity class IC9 extends IdentityAbstract implements NeutralInterface { }\n-  static identity class IC10 extends IdentityAbstract implements IdentityInterface { }\n-\n-\n-  static abstract class AC0 extends AbstractWithField implements NeutralInterface { }\n-  static abstract class AC1 extends AbstractWithField implements IdentityInterface { }\n-  static abstract class AC2 extends AbstractWithSynchMethod implements NeutralInterface { }\n-  static abstract class AC3 extends AbstractWithSynchMethod implements IdentityInterface { }\n-\n-  static String[] validClasses = {\"VC0\", \"VC1\", \"VC2\", \"VC3\", \"VC4\", \"VC5\", \"VC6\", \"VC7\", \"VC8\",\n-                                  \"IC0\", \"IC1\", \"IC2\", \"IC3\", \"IC4\", \"IC5\", \"IC6\", \"IC7\", \"IC8\", \"IC9\", \"IC10\",\n-                                  \"AC0\", \"AC1\", \"AC2\", \"AC3\"};\n-\n-  static String[] invalidClassesWithICCE = {\"ValueClassExtendingIdentityClass\", \"ValueClassExtendingAbstractClassWithField\",\n-                                    \"ValueClassExtendingAbstractClassWithSynchMethod\", \"ValueClassImplementingIdentityInterface\",\n-                                    \"IdentityClassExtendingValueClass\", \"IdentityClassImplementingValueInterface\",\n-                                    \"AbstractClassWithFieldExtendingValueClass\", \"AbstractClassWithFieldImplementingValueInterface\"};\n-  static String[] invalidClassesWithCFE = {\"AbstractClassWithFieldWithNoIdentityModifier\", \"AbstractClassWithSynchMethodWithNoIdentityModifier\",\n-                                           \"AbstractClassWithBothModifiers\", \"ConcreteClassWithNoModifiers\"};\n-\n-  public static void main(String[] args) throws Exception {\n-    \/\/ testing valid cases first\n-    try {\n-      for (String name : validClasses) {\n-        System.out.println(\"Trying to load \"+name);\n-        Class c = Class.forName(\"TestClassModifiers$\"+name);\n-      }\n-    } catch(Throwable t) {\n-      t.printStackTrace();\n-      throw t;\n-    }\n-\n-    \/\/ Testing invalid cases\n-    for (String name: invalidClassesWithICCE) {\n-      boolean icce = false;\n-      boolean otherException = false;\n-      Throwable exception = null;\n-      try {\n-        System.out.println(\"Trying to load \"+name);\n-        Class c = Class.forName(name);\n-      } catch (IncompatibleClassChangeError e) {\n-        icce = true;\n-      } catch (Throwable t) {\n-        otherException = true;\n-        exception = t;\n-      }\n-      Asserts.assertFalse(otherException, \"Unexpected exception \"+exception);\n-      Asserts.assertTrue(icce, \"IncompatibleClassChangeError not thrown\");\n-    }\n-    for (String name: invalidClassesWithCFE) {\n-      boolean cfe = false;\n-      boolean otherException = false;\n-      Throwable exception = null;\n-      try {\n-        System.out.println(\"Trying to load \"+name);\n-        Class c = Class.forName(name);\n-      } catch (ClassFormatError e) {\n-        cfe = true;\n-      } catch (Throwable t) {\n-        otherException = true;\n-        exception = t;\n-      }\n-      Asserts.assertFalse(otherException, \"Unexpected exception \"+exception);\n-      Asserts.assertTrue(cfe, \"ClassFormatError not thrown\");\n-    }\n-  }\n- }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/TestClassModifiers.java","additions":0,"deletions":126,"binary":false,"changes":126,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-public abstract value class ValueAbstract { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/ValueAbstract.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"},{"patch":"@@ -1,1 +0,0 @@\n-value class ValueClassExtendingIdentityClass extends ValueAbstract { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/ValueClassExtendingIdentityClass.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"},{"patch":"@@ -1,1 +0,0 @@\n-value class ValueClassExtendingIdentityClass implements ValueAbstract { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/ValueClassImplementingIdentityInterface","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"},{"patch":"@@ -1,1 +0,0 @@\n-value class ValueClassImplementingIdentityInterface implements ValueInterface { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/ValueClassImplementingIdentityInterface.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-value interface ValueInterface { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/ValueInterface.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"},{"patch":"@@ -1,27 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-public abstract class CtorHasArgs {\n-    CtorHasArgs(String x) { }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/CtorHasArgs.java","additions":0,"deletions":27,"binary":false,"changes":27,"status":"deleted"},{"patch":"@@ -1,29 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-public abstract class CtorIsNotEmpty {\n-    CtorIsNotEmpty() {\n-        System.out.println(\"CtorIsNotEmpty\");\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/CtorIsNotEmpty.java","additions":0,"deletions":29,"binary":false,"changes":29,"status":"deleted"},{"patch":"@@ -1,27 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-public abstract class HasNonStaticFields {\n-    String hi;\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/HasNonStaticFields.java","additions":0,"deletions":27,"binary":false,"changes":27,"status":"deleted"},{"patch":"@@ -1,27 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-public abstract class HasSynchMethod {\n-    public synchronized void helloSynch() { }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/HasSynchMethod.java","additions":0,"deletions":27,"binary":false,"changes":27,"status":"deleted"},{"patch":"@@ -1,2637 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\/\/ The test cases in this .jcod file are based on this .java file:\n-\/\/ public primitive final class Point extends AbstractClass {\n-\/\/     final int x;\n-\/\/     final int y;\n-\/\/\n-\/\/     private Point() {\n-\/\/         x = 0;\n-\/\/         y = 0;\n-\/\/     }\n-\/\/\n-\/\/     public int getX() { return x; }\n-\/\/     public int getY() { return y; }\n-\/\/ }\n-\n-\/\/ Primitive class with a super class that is not abstract.\n-class PrimitiveSuperNotAbstract {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [51] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"PrimitiveSuperNotAbstract\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x20\n-    NameAndType #5 #6; \/\/ #4     at 0x25\n-    Utf8 \"x\"; \/\/ #5     at 0x2A\n-    Utf8 \"I\"; \/\/ #6     at 0x2E\n-    Field #1 #8; \/\/ #7     at 0x32\n-    NameAndType #9 #6; \/\/ #8     at 0x37\n-    Utf8 \"y\"; \/\/ #9     at 0x3C\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n-    NameAndType #12 #13; \/\/ #11     at 0x45\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n-    Utf8 \"(QPrimitiveSuperNotAbstract;)I\"; \/\/ #13     at 0x55\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n-    NameAndType #16 #17; \/\/ #15     at 0x72\n-    Utf8 \"equals\"; \/\/ #16     at 0x77\n-    Utf8 \"(QPrimitiveSuperNotAbstract;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n-    NameAndType #20 #21; \/\/ #19     at 0xAF\n-    Utf8 \"toString\"; \/\/ #20     at 0xB4\n-    Utf8 \"(QPrimitiveSuperNotAbstract;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n-    class #23; \/\/ #22     at 0xE8\n-    Utf8 \"NotAbstract\"; \/\/ #23     at 0xEB\n-    class #25; \/\/ #24     at 0xF9\n-    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n-    Utf8 \"getX\"; \/\/ #26     at 0x0115\n-    Utf8 \"()I\"; \/\/ #27     at 0x011C\n-    Utf8 \"Code\"; \/\/ #28     at 0x0122\n-    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n-    Utf8 \"getY\"; \/\/ #30     at 0x013B\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n-    Utf8 \"<vnew>\"; \/\/ #33     at 0x0171\n-    Utf8 \"()QPrimitiveSuperNotAbstract;\"; \/\/ #34     at 0x017A\n-    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n-    Utf8 \"PrimitiveSuperNotAbstract.java\"; \/\/ #36     at 0x019E\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n-    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n-    Method #40 #41; \/\/ #39     at 0x01CD\n-    class #42; \/\/ #40     at 0x01D2\n-    NameAndType #43 #44; \/\/ #41     at 0x01D5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n-    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n-    class #47; \/\/ #46     at 0x029E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n-    class #49; \/\/ #48     at 0x02C9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n-    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n-  } \/\/ Constant Pool\n-\n-  0x0851; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #22;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0302\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030A\n-      0x0010; \/\/ access\n-      #9; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0314\n-      0x0001; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x031C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x033F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x033F\n-      0x0001; \/\/ access\n-      #30; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x0347\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40007AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x036A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036A\n-      0x0011; \/\/ access\n-      #12; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x0372\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0397\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0397\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 32) { \/\/ Code at 0x039F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA000E0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C5\n-      0x0011; \/\/ access\n-      #20; \/\/ name_cpx\n-      #32; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x03CD\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00120000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F2\n-      0x000A; \/\/ access\n-      #33; \/\/ name_cpx\n-      #34; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 56) { \/\/ Code at 0x03FA\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x042C\n-                4  6; \/\/  at 0x0430\n-                11  7; \/\/  at 0x0434\n-                18  8; \/\/  at 0x0438\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n-      #36;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n-      [1] { \/\/ InnerClasses\n-        #46 #48 #50 25; \/\/  at 0x045E\n-      }\n-    } \/\/ end InnerClasses\n-  } \/\/ Attributes\n-} \/\/ end class PrimitiveSuperNotAbstract\n-\n-\n-\n-\/\/ Primitive class with a super class that has instance fields.\n-class PrimitiveSuperHasNonStaticFields {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [51] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"PrimitiveSuperHasNonStaticFields\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x20\n-    NameAndType #5 #6; \/\/ #4     at 0x25\n-    Utf8 \"x\"; \/\/ #5     at 0x2A\n-    Utf8 \"I\"; \/\/ #6     at 0x2E\n-    Field #1 #8; \/\/ #7     at 0x32\n-    NameAndType #9 #6; \/\/ #8     at 0x37\n-    Utf8 \"y\"; \/\/ #9     at 0x3C\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n-    NameAndType #12 #13; \/\/ #11     at 0x45\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n-    Utf8 \"(QPrimitiveSuperHasNonStaticFields;)I\"; \/\/ #13     at 0x55\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n-    NameAndType #16 #17; \/\/ #15     at 0x72\n-    Utf8 \"equals\"; \/\/ #16     at 0x77\n-    Utf8 \"(QPrimitiveSuperHasNonStaticFields;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n-    NameAndType #20 #21; \/\/ #19     at 0xAF\n-    Utf8 \"toString\"; \/\/ #20     at 0xB4\n-    Utf8 \"(QPrimitiveSuperHasNonStaticFields;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n-    class #23; \/\/ #22     at 0xE8\n-    Utf8 \"HasNonStaticFields\"; \/\/ #23     at 0xEB\n-    class #25; \/\/ #24     at 0xF9\n-    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n-    Utf8 \"getX\"; \/\/ #26     at 0x0115\n-    Utf8 \"()I\"; \/\/ #27     at 0x011C\n-    Utf8 \"Code\"; \/\/ #28     at 0x0122\n-    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n-    Utf8 \"getY\"; \/\/ #30     at 0x013B\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n-    Utf8 \"<vnew>\"; \/\/ #33     at 0x0171\n-    Utf8 \"()QPrimitiveSuperHasNonStaticFields;\"; \/\/ #34     at 0x017A\n-    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n-    Utf8 \"PrimitiveSuperHasNonStaticFields.java\"; \/\/ #36     at 0x019E\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n-    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n-    Method #40 #41; \/\/ #39     at 0x01CD\n-    class #42; \/\/ #40     at 0x01D2\n-    NameAndType #43 #44; \/\/ #41     at 0x01D5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n-    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n-    class #47; \/\/ #46     at 0x029E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n-    class #49; \/\/ #48     at 0x02C9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n-    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n-  } \/\/ Constant Pool\n-\n-  0x0851; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #22;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0302\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030A\n-      0x0010; \/\/ access\n-      #9; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0314\n-      0x0001; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x031C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x033F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x033F\n-      0x0001; \/\/ access\n-      #30; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x0347\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40007AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x036A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036A\n-      0x0011; \/\/ access\n-      #12; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x0372\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0397\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0397\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 32) { \/\/ Code at 0x039F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA000E0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C5\n-      0x0011; \/\/ access\n-      #20; \/\/ name_cpx\n-      #32; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x03CD\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00120000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F2\n-      0x000A; \/\/ access\n-      #33; \/\/ name_cpx\n-      #34; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 56) { \/\/ Code at 0x03FA\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x042C\n-                4  6; \/\/  at 0x0430\n-                11  7; \/\/  at 0x0434\n-                18  8; \/\/  at 0x0438\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n-      #36;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n-      [1] { \/\/ InnerClasses\n-        #46 #48 #50 25; \/\/  at 0x045E\n-      }\n-    } \/\/ end InnerClasses\n-  } \/\/ Attributes\n-} \/\/ end class PrimitiveSuperHasNonStaticFields\n-\n-\n-\n-\/\/ primitive value class with a super class whose super class has a syncronized instance method.\n-class PrimitiveSuperHasSynchMethod {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [51] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"PrimitiveSuperHasSynchMethod\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x20\n-    NameAndType #5 #6; \/\/ #4     at 0x25\n-    Utf8 \"x\"; \/\/ #5     at 0x2A\n-    Utf8 \"I\"; \/\/ #6     at 0x2E\n-    Field #1 #8; \/\/ #7     at 0x32\n-    NameAndType #9 #6; \/\/ #8     at 0x37\n-    Utf8 \"y\"; \/\/ #9     at 0x3C\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n-    NameAndType #12 #13; \/\/ #11     at 0x45\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n-    Utf8 \"(QPrimitiveSuperHasSynchMethod;)I\"; \/\/ #13     at 0x55\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n-    NameAndType #16 #17; \/\/ #15     at 0x72\n-    Utf8 \"equals\"; \/\/ #16     at 0x77\n-    Utf8 \"(QPrimitiveSuperHasSynchMethod;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n-    NameAndType #20 #21; \/\/ #19     at 0xAF\n-    Utf8 \"toString\"; \/\/ #20     at 0xB4\n-    Utf8 \"(QPrimitiveSuperHasSynchMethod;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n-    class #23; \/\/ #22     at 0xE8\n-    Utf8 \"ValidSuper\"; \/\/ #23     at 0xEB\n-    class #25; \/\/ #24     at 0xF9\n-    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n-    Utf8 \"getX\"; \/\/ #26     at 0x0115\n-    Utf8 \"()I\"; \/\/ #27     at 0x011C\n-    Utf8 \"Code\"; \/\/ #28     at 0x0122\n-    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n-    Utf8 \"getY\"; \/\/ #30     at 0x013B\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n-    Utf8 \"<vnew>\"; \/\/ #33     at 0x0171\n-    Utf8 \"()QPrimitiveSuperHasSynchMethod;\"; \/\/ #34     at 0x017A\n-    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n-    Utf8 \"PrimitiveSuperHasSynchMethod.java\"; \/\/ #36     at 0x019E\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n-    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n-    Method #40 #41; \/\/ #39     at 0x01CD\n-    class #42; \/\/ #40     at 0x01D2\n-    NameAndType #43 #44; \/\/ #41     at 0x01D5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n-    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n-    class #47; \/\/ #46     at 0x029E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n-    class #49; \/\/ #48     at 0x02C9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n-    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n-  } \/\/ Constant Pool\n-\n-  0x0851; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #22;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0302\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030A\n-      0x0010; \/\/ access\n-      #9; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0314\n-      0x0001; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x031C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x033F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x033F\n-      0x0001; \/\/ access\n-      #30; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x0347\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40007AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x036A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036A\n-      0x0011; \/\/ access\n-      #12; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x0372\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0397\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0397\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 32) { \/\/ Code at 0x039F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA000E0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C5\n-      0x0011; \/\/ access\n-      #20; \/\/ name_cpx\n-      #32; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x03CD\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00120000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F2\n-      0x000A; \/\/ access\n-      #33; \/\/ name_cpx\n-      #34; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 56) { \/\/ Code at 0x03FA\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x042C\n-                4  6; \/\/  at 0x0430\n-                11  7; \/\/  at 0x0434\n-                18  8; \/\/  at 0x0438\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n-      #36;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n-      [1] { \/\/ InnerClasses\n-        #46 #48 #50 25; \/\/  at 0x045E\n-      }\n-    } \/\/ end InnerClasses\n-  } \/\/ Attributes\n-} \/\/ end class PrimitiveSuperHasSynchMethod\n-\n-\n-\/\/ primitive value class with a super class containing a constructor that has arguments.\n-class PrimitiveSuperCtorHasArgs {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [51] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"PrimitiveSuperCtorHasArgs\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x20\n-    NameAndType #5 #6; \/\/ #4     at 0x25\n-    Utf8 \"x\"; \/\/ #5     at 0x2A\n-    Utf8 \"I\"; \/\/ #6     at 0x2E\n-    Field #1 #8; \/\/ #7     at 0x32\n-    NameAndType #9 #6; \/\/ #8     at 0x37\n-    Utf8 \"y\"; \/\/ #9     at 0x3C\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n-    NameAndType #12 #13; \/\/ #11     at 0x45\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n-    Utf8 \"(QPrimitiveSuperCtorHasArgs;)I\"; \/\/ #13     at 0x55\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n-    NameAndType #16 #17; \/\/ #15     at 0x72\n-    Utf8 \"equals\"; \/\/ #16     at 0x77\n-    Utf8 \"(QPrimitiveSuperCtorHasArgs;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n-    NameAndType #20 #21; \/\/ #19     at 0xAF\n-    Utf8 \"toString\"; \/\/ #20     at 0xB4\n-    Utf8 \"(QPrimitiveSuperCtorHasArgs;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n-    class #23; \/\/ #22     at 0xE8\n-    Utf8 \"CtorHasArgs\"; \/\/ #23     at 0xEB\n-    class #25; \/\/ #24     at 0xF9\n-    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n-    Utf8 \"getX\"; \/\/ #26     at 0x0115\n-    Utf8 \"()I\"; \/\/ #27     at 0x011C\n-    Utf8 \"Code\"; \/\/ #28     at 0x0122\n-    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n-    Utf8 \"getY\"; \/\/ #30     at 0x013B\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n-    Utf8 \"<vnew>\"; \/\/ #33     at 0x0171\n-    Utf8 \"()QPrimitiveSuperCtorHasArgs;\"; \/\/ #34     at 0x017A\n-    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n-    Utf8 \"PrimitiveSuperCtorHasArgs.java\"; \/\/ #36     at 0x019E\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n-    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n-    Method #40 #41; \/\/ #39     at 0x01CD\n-    class #42; \/\/ #40     at 0x01D2\n-    NameAndType #43 #44; \/\/ #41     at 0x01D5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n-    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n-    class #47; \/\/ #46     at 0x029E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n-    class #49; \/\/ #48     at 0x02C9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n-    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n-  } \/\/ Constant Pool\n-\n-  0x0851; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #22;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0302\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030A\n-      0x0010; \/\/ access\n-      #9; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0314\n-      0x0001; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x031C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x033F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x033F\n-      0x0001; \/\/ access\n-      #30; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x0347\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40007AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x036A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036A\n-      0x0011; \/\/ access\n-      #12; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x0372\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0397\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0397\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 32) { \/\/ Code at 0x039F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA000E0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C5\n-      0x0011; \/\/ access\n-      #20; \/\/ name_cpx\n-      #32; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x03CD\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00120000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F2\n-      0x000A; \/\/ access\n-      #33; \/\/ name_cpx\n-      #34; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 56) { \/\/ Code at 0x03FA\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x042C\n-                4  6; \/\/  at 0x0430\n-                11  7; \/\/  at 0x0434\n-                18  8; \/\/  at 0x0438\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n-      #36;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n-      [1] { \/\/ InnerClasses\n-        #46 #48 #50 25; \/\/  at 0x045E\n-      }\n-    } \/\/ end InnerClasses\n-  } \/\/ Attributes\n-} \/\/ end class PrimitiveSuperCtorHasArgs\n-\n-\n-\n-\/\/ primitive value class with a super class containing a constructor that has a non-empty\n-\/\/ method body.\n-class PrimitiveSuperCtorIsNotEmpty {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [51] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"PrimitiveSuperCtorIsNotEmpty\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x20\n-    NameAndType #5 #6; \/\/ #4     at 0x25\n-    Utf8 \"x\"; \/\/ #5     at 0x2A\n-    Utf8 \"I\"; \/\/ #6     at 0x2E\n-    Field #1 #8; \/\/ #7     at 0x32\n-    NameAndType #9 #6; \/\/ #8     at 0x37\n-    Utf8 \"y\"; \/\/ #9     at 0x3C\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n-    NameAndType #12 #13; \/\/ #11     at 0x45\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n-    Utf8 \"(QPrimitiveSuperCtorIsNotEmpty;)I\"; \/\/ #13     at 0x55\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n-    NameAndType #16 #17; \/\/ #15     at 0x72\n-    Utf8 \"equals\"; \/\/ #16     at 0x77\n-    Utf8 \"(QPrimitiveSuperCtorIsNotEmpty;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n-    NameAndType #20 #21; \/\/ #19     at 0xAF\n-    Utf8 \"toString\"; \/\/ #20     at 0xB4\n-    Utf8 \"(QPrimitiveSuperCtorIsNotEmpty;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n-    class #23; \/\/ #22     at 0xE8\n-    Utf8 \"CtorIsNotEmpty\"; \/\/ #23     at 0xEB\n-    class #25; \/\/ #24     at 0xF9\n-    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n-    Utf8 \"getX\"; \/\/ #26     at 0x0115\n-    Utf8 \"()I\"; \/\/ #27     at 0x011C\n-    Utf8 \"Code\"; \/\/ #28     at 0x0122\n-    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n-    Utf8 \"getY\"; \/\/ #30     at 0x013B\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n-    Utf8 \"<vnew>\"; \/\/ #33     at 0x0171\n-    Utf8 \"()QPrimitiveSuperCtorIsNotEmpty;\"; \/\/ #34     at 0x017A\n-    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n-    Utf8 \"PrimitiveSuperCtorIsNotEmpty.java\"; \/\/ #36     at 0x019E\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n-    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n-    Method #40 #41; \/\/ #39     at 0x01CD\n-    class #42; \/\/ #40     at 0x01D2\n-    NameAndType #43 #44; \/\/ #41     at 0x01D5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n-    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n-    class #47; \/\/ #46     at 0x029E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n-    class #49; \/\/ #48     at 0x02C9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n-    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n-  } \/\/ Constant Pool\n-\n-  0x0851; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #22;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0302\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030A\n-      0x0010; \/\/ access\n-      #9; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0314\n-      0x0001; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x031C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x033F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x033F\n-      0x0001; \/\/ access\n-      #30; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x0347\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40007AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x036A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036A\n-      0x0011; \/\/ access\n-      #12; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x0372\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0397\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0397\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 32) { \/\/ Code at 0x039F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA000E0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C5\n-      0x0011; \/\/ access\n-      #20; \/\/ name_cpx\n-      #32; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x03CD\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00120000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F2\n-      0x000A; \/\/ access\n-      #33; \/\/ name_cpx\n-      #34; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 56) { \/\/ Code at 0x03FA\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x042C\n-                4  6; \/\/  at 0x0430\n-                11  7; \/\/  at 0x0434\n-                18  8; \/\/  at 0x0438\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n-      #36;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n-      [1] { \/\/ InnerClasses\n-        #46 #48 #50 25; \/\/  at 0x045E\n-      }\n-    } \/\/ end InnerClasses\n-  } \/\/ Attributes\n-} \/\/ end class PrimitiveSuperCtorIsNotEmpty\n-\n-\/\/ Again for value objects...\n-\n-\/\/ Value class with a super class that is not abstract.\n-class ValueSuperNotAbstract {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [51] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"ValueSuperNotAbstract\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x20\n-    NameAndType #5 #6; \/\/ #4     at 0x25\n-    Utf8 \"x\"; \/\/ #5     at 0x2A\n-    Utf8 \"I\"; \/\/ #6     at 0x2E\n-    Field #1 #8; \/\/ #7     at 0x32\n-    NameAndType #9 #6; \/\/ #8     at 0x37\n-    Utf8 \"y\"; \/\/ #9     at 0x3C\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n-    NameAndType #12 #13; \/\/ #11     at 0x45\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n-    Utf8 \"(LValueSuperNotAbstract;)I\"; \/\/ #13     at 0x55\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n-    NameAndType #16 #17; \/\/ #15     at 0x72\n-    Utf8 \"equals\"; \/\/ #16     at 0x77\n-    Utf8 \"(LValueSuperNotAbstract;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n-    NameAndType #20 #21; \/\/ #19     at 0xAF\n-    Utf8 \"toString\"; \/\/ #20     at 0xB4\n-    Utf8 \"(LValueSuperNotAbstract;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n-    class #23; \/\/ #22     at 0xE8\n-    Utf8 \"NotAbstract\"; \/\/ #23     at 0xEB\n-    class #25; \/\/ #24     at 0xF9\n-    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n-    Utf8 \"getX\"; \/\/ #26     at 0x0115\n-    Utf8 \"()I\"; \/\/ #27     at 0x011C\n-    Utf8 \"Code\"; \/\/ #28     at 0x0122\n-    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n-    Utf8 \"getY\"; \/\/ #30     at 0x013B\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n-    Utf8 \"<vnew>\"; \/\/ #33     at 0x0171\n-    Utf8 \"()LValueSuperNotAbstract;\"; \/\/ #34     at 0x017A\n-    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n-    Utf8 \"ValueSuperNotAbstract.java\"; \/\/ #36     at 0x019E\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n-    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n-    Method #40 #41; \/\/ #39     at 0x01CD\n-    class #42; \/\/ #40     at 0x01D2\n-    NameAndType #43 #44; \/\/ #41     at 0x01D5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n-    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n-    class #47; \/\/ #46     at 0x029E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n-    class #49; \/\/ #48     at 0x02C9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n-    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n-  } \/\/ Constant Pool\n-\n-  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #22;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0302\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030A\n-      0x0010; \/\/ access\n-      #9; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0314\n-      0x0001; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x031C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x033F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x033F\n-      0x0001; \/\/ access\n-      #30; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x0347\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40007AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x036A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036A\n-      0x0011; \/\/ access\n-      #12; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x0372\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0397\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0397\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 32) { \/\/ Code at 0x039F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA000E0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C5\n-      0x0011; \/\/ access\n-      #20; \/\/ name_cpx\n-      #32; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x03CD\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00120000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F2\n-      0x000A; \/\/ access\n-      #33; \/\/ name_cpx\n-      #34; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 56) { \/\/ Code at 0x03FA\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x042C\n-                4  6; \/\/  at 0x0430\n-                11  7; \/\/  at 0x0434\n-                18  8; \/\/  at 0x0438\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n-      #36;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n-      [1] { \/\/ InnerClasses\n-        #46 #48 #50 25; \/\/  at 0x045E\n-      }\n-    } \/\/ end InnerClasses\n-  } \/\/ Attributes\n-} \/\/ end class ValueSuperNotAbstract\n-\n-\n-\n-\/\/ Value class with a super class that has instance fields.\n-class ValueSuperHasNonStaticFields {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [51] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"ValueSuperHasNonStaticFields\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x20\n-    NameAndType #5 #6; \/\/ #4     at 0x25\n-    Utf8 \"x\"; \/\/ #5     at 0x2A\n-    Utf8 \"I\"; \/\/ #6     at 0x2E\n-    Field #1 #8; \/\/ #7     at 0x32\n-    NameAndType #9 #6; \/\/ #8     at 0x37\n-    Utf8 \"y\"; \/\/ #9     at 0x3C\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n-    NameAndType #12 #13; \/\/ #11     at 0x45\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n-    Utf8 \"(LValueSuperHasNonStaticFields;)I\"; \/\/ #13     at 0x55\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n-    NameAndType #16 #17; \/\/ #15     at 0x72\n-    Utf8 \"equals\"; \/\/ #16     at 0x77\n-    Utf8 \"(LValueSuperHasNonStaticFields;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n-    NameAndType #20 #21; \/\/ #19     at 0xAF\n-    Utf8 \"toString\"; \/\/ #20     at 0xB4\n-    Utf8 \"(LValueSuperHasNonStaticFields;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n-    class #23; \/\/ #22     at 0xE8\n-    Utf8 \"HasNonStaticFields\"; \/\/ #23     at 0xEB\n-    class #25; \/\/ #24     at 0xF9\n-    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n-    Utf8 \"getX\"; \/\/ #26     at 0x0115\n-    Utf8 \"()I\"; \/\/ #27     at 0x011C\n-    Utf8 \"Code\"; \/\/ #28     at 0x0122\n-    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n-    Utf8 \"getY\"; \/\/ #30     at 0x013B\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n-    Utf8 \"<vnew>\"; \/\/ #33     at 0x0171\n-    Utf8 \"()LValueSuperHasNonStaticFields;\"; \/\/ #34     at 0x017A\n-    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n-    Utf8 \"ValueSuperHasNonStaticFields.java\"; \/\/ #36     at 0x019E\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n-    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n-    Method #40 #41; \/\/ #39     at 0x01CD\n-    class #42; \/\/ #40     at 0x01D2\n-    NameAndType #43 #44; \/\/ #41     at 0x01D5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n-    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n-    class #47; \/\/ #46     at 0x029E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n-    class #49; \/\/ #48     at 0x02C9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n-    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n-  } \/\/ Constant Pool\n-\n-  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #22;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0302\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030A\n-      0x0010; \/\/ access\n-      #9; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0314\n-      0x0001; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x031C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x033F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x033F\n-      0x0001; \/\/ access\n-      #30; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x0347\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40007AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x036A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036A\n-      0x0011; \/\/ access\n-      #12; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x0372\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0397\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0397\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 32) { \/\/ Code at 0x039F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA000E0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C5\n-      0x0011; \/\/ access\n-      #20; \/\/ name_cpx\n-      #32; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x03CD\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00120000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F2\n-      0x000A; \/\/ access\n-      #33; \/\/ name_cpx\n-      #34; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 56) { \/\/ Code at 0x03FA\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x042C\n-                4  6; \/\/  at 0x0430\n-                11  7; \/\/  at 0x0434\n-                18  8; \/\/  at 0x0438\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n-      #36;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n-      [1] { \/\/ InnerClasses\n-        #46 #48 #50 25; \/\/  at 0x045E\n-      }\n-    } \/\/ end InnerClasses\n-  } \/\/ Attributes\n-} \/\/ end class ValueSuperHasNonStaticFields\n-\n-\n-\n-\/\/ primitive value class with a super class whose super class has a syncronized instance method.\n-class ValueSuperHasSynchMethod {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [51] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"ValueSuperHasSynchMethod\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x20\n-    NameAndType #5 #6; \/\/ #4     at 0x25\n-    Utf8 \"x\"; \/\/ #5     at 0x2A\n-    Utf8 \"I\"; \/\/ #6     at 0x2E\n-    Field #1 #8; \/\/ #7     at 0x32\n-    NameAndType #9 #6; \/\/ #8     at 0x37\n-    Utf8 \"y\"; \/\/ #9     at 0x3C\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n-    NameAndType #12 #13; \/\/ #11     at 0x45\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n-    Utf8 \"(LValueSuperHasSynchMethod;)I\"; \/\/ #13     at 0x55\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n-    NameAndType #16 #17; \/\/ #15     at 0x72\n-    Utf8 \"equals\"; \/\/ #16     at 0x77\n-    Utf8 \"(LValueSuperHasSynchMethod;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n-    NameAndType #20 #21; \/\/ #19     at 0xAF\n-    Utf8 \"toString\"; \/\/ #20     at 0xB4\n-    Utf8 \"(LValueSuperHasSynchMethod;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n-    class #23; \/\/ #22     at 0xE8\n-    Utf8 \"ValidSuper\"; \/\/ #23     at 0xEB\n-    class #25; \/\/ #24     at 0xF9\n-    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n-    Utf8 \"getX\"; \/\/ #26     at 0x0115\n-    Utf8 \"()I\"; \/\/ #27     at 0x011C\n-    Utf8 \"Code\"; \/\/ #28     at 0x0122\n-    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n-    Utf8 \"getY\"; \/\/ #30     at 0x013B\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n-    Utf8 \"<vnew>\"; \/\/ #33     at 0x0171\n-    Utf8 \"()LValueSuperHasSynchMethod;\"; \/\/ #34     at 0x017A\n-    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n-    Utf8 \"ValueSuperHasSynchMethod.java\"; \/\/ #36     at 0x019E\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n-    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n-    Method #40 #41; \/\/ #39     at 0x01CD\n-    class #42; \/\/ #40     at 0x01D2\n-    NameAndType #43 #44; \/\/ #41     at 0x01D5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n-    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n-    class #47; \/\/ #46     at 0x029E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n-    class #49; \/\/ #48     at 0x02C9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n-    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n-  } \/\/ Constant Pool\n-\n-  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #22;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0302\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030A\n-      0x0010; \/\/ access\n-      #9; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0314\n-      0x0001; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x031C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x033F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x033F\n-      0x0001; \/\/ access\n-      #30; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x0347\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40007AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x036A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036A\n-      0x0011; \/\/ access\n-      #12; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x0372\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0397\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0397\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 32) { \/\/ Code at 0x039F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA000E0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C5\n-      0x0011; \/\/ access\n-      #20; \/\/ name_cpx\n-      #32; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x03CD\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00120000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F2\n-      0x000A; \/\/ access\n-      #33; \/\/ name_cpx\n-      #34; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 56) { \/\/ Code at 0x03FA\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x042C\n-                4  6; \/\/  at 0x0430\n-                11  7; \/\/  at 0x0434\n-                18  8; \/\/  at 0x0438\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n-      #36;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n-      [1] { \/\/ InnerClasses\n-        #46 #48 #50 25; \/\/  at 0x045E\n-      }\n-    } \/\/ end InnerClasses\n-  } \/\/ Attributes\n-} \/\/ end class ValueSuperHasSynchMethod\n-\n-\n-\/\/ primitive value class with a super class containing a constructor that has arguments.\n-class ValueSuperCtorHasArgs {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [51] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"ValueSuperCtorHasArgs\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x20\n-    NameAndType #5 #6; \/\/ #4     at 0x25\n-    Utf8 \"x\"; \/\/ #5     at 0x2A\n-    Utf8 \"I\"; \/\/ #6     at 0x2E\n-    Field #1 #8; \/\/ #7     at 0x32\n-    NameAndType #9 #6; \/\/ #8     at 0x37\n-    Utf8 \"y\"; \/\/ #9     at 0x3C\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n-    NameAndType #12 #13; \/\/ #11     at 0x45\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n-    Utf8 \"(LValueSuperCtorHasArgs;)I\"; \/\/ #13     at 0x55\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n-    NameAndType #16 #17; \/\/ #15     at 0x72\n-    Utf8 \"equals\"; \/\/ #16     at 0x77\n-    Utf8 \"(LValueSuperCtorHasArgs;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n-    NameAndType #20 #21; \/\/ #19     at 0xAF\n-    Utf8 \"toString\"; \/\/ #20     at 0xB4\n-    Utf8 \"(LValueSuperCtorHasArgs;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n-    class #23; \/\/ #22     at 0xE8\n-    Utf8 \"CtorHasArgs\"; \/\/ #23     at 0xEB\n-    class #25; \/\/ #24     at 0xF9\n-    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n-    Utf8 \"getX\"; \/\/ #26     at 0x0115\n-    Utf8 \"()I\"; \/\/ #27     at 0x011C\n-    Utf8 \"Code\"; \/\/ #28     at 0x0122\n-    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n-    Utf8 \"getY\"; \/\/ #30     at 0x013B\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n-    Utf8 \"<vnew>\"; \/\/ #33     at 0x0171\n-    Utf8 \"()LValueSuperCtorHasArgs;\"; \/\/ #34     at 0x017A\n-    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n-    Utf8 \"ValueSuperCtorHasArgs.java\"; \/\/ #36     at 0x019E\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n-    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n-    Method #40 #41; \/\/ #39     at 0x01CD\n-    class #42; \/\/ #40     at 0x01D2\n-    NameAndType #43 #44; \/\/ #41     at 0x01D5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n-    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n-    class #47; \/\/ #46     at 0x029E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n-    class #49; \/\/ #48     at 0x02C9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n-    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n-  } \/\/ Constant Pool\n-\n-  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #22;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0302\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030A\n-      0x0010; \/\/ access\n-      #9; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0314\n-      0x0001; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x031C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x033F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x033F\n-      0x0001; \/\/ access\n-      #30; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x0347\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40007AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x036A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036A\n-      0x0011; \/\/ access\n-      #12; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x0372\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0397\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0397\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 32) { \/\/ Code at 0x039F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA000E0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C5\n-      0x0011; \/\/ access\n-      #20; \/\/ name_cpx\n-      #32; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x03CD\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00120000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F2\n-      0x000A; \/\/ access\n-      #33; \/\/ name_cpx\n-      #34; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 56) { \/\/ Code at 0x03FA\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x042C\n-                4  6; \/\/  at 0x0430\n-                11  7; \/\/  at 0x0434\n-                18  8; \/\/  at 0x0438\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n-      #36;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n-      [1] { \/\/ InnerClasses\n-        #46 #48 #50 25; \/\/  at 0x045E\n-      }\n-    } \/\/ end InnerClasses\n-  } \/\/ Attributes\n-} \/\/ end class ValueSuperCtorHasArgs\n-\n-\n-\n-\/\/ primitive value class with a super class containing a constructor that has a non-empty\n-\/\/ method body.\n-class ValueSuperCtorIsNotEmpty {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  67; \/\/ version\n-  [51] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #2; \/\/ #1     at 0x0A\n-    Utf8 \"ValueSuperCtorIsNotEmpty\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x20\n-    NameAndType #5 #6; \/\/ #4     at 0x25\n-    Utf8 \"x\"; \/\/ #5     at 0x2A\n-    Utf8 \"I\"; \/\/ #6     at 0x2E\n-    Field #1 #8; \/\/ #7     at 0x32\n-    NameAndType #9 #6; \/\/ #8     at 0x37\n-    Utf8 \"y\"; \/\/ #9     at 0x3C\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n-    NameAndType #12 #13; \/\/ #11     at 0x45\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n-    Utf8 \"(LValueSuperCtorIsNotEmpty;)I\"; \/\/ #13     at 0x55\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n-    NameAndType #16 #17; \/\/ #15     at 0x72\n-    Utf8 \"equals\"; \/\/ #16     at 0x77\n-    Utf8 \"(LValueSuperCtorIsNotEmpty;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n-    NameAndType #20 #21; \/\/ #19     at 0xAF\n-    Utf8 \"toString\"; \/\/ #20     at 0xB4\n-    Utf8 \"(LValueSuperCtorIsNotEmpty;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n-    class #23; \/\/ #22     at 0xE8\n-    Utf8 \"CtorIsNotEmpty\"; \/\/ #23     at 0xEB\n-    class #25; \/\/ #24     at 0xF9\n-    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n-    Utf8 \"getX\"; \/\/ #26     at 0x0115\n-    Utf8 \"()I\"; \/\/ #27     at 0x011C\n-    Utf8 \"Code\"; \/\/ #28     at 0x0122\n-    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n-    Utf8 \"getY\"; \/\/ #30     at 0x013B\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n-    Utf8 \"<vnew>\"; \/\/ #33     at 0x0171\n-    Utf8 \"()LValueSuperCtorIsNotEmpty;\"; \/\/ #34     at 0x017A\n-    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n-    Utf8 \"ValueSuperCtorIsNotEmpty.java\"; \/\/ #36     at 0x019E\n-    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n-    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n-    Method #40 #41; \/\/ #39     at 0x01CD\n-    class #42; \/\/ #40     at 0x01D2\n-    NameAndType #43 #44; \/\/ #41     at 0x01D5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n-    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n-    class #47; \/\/ #46     at 0x029E\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n-    class #49; \/\/ #48     at 0x02C9\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n-    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n-  } \/\/ Constant Pool\n-\n-  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #22;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0302\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x030A\n-      0x0010; \/\/ access\n-      #9; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [6] { \/\/ methods\n-    { \/\/ Member at 0x0314\n-      0x0001; \/\/ access\n-      #26; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x031C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x033F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x033F\n-      0x0001; \/\/ access\n-      #30; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 29) { \/\/ Code at 0x0347\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40007AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x036A\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x036A\n-      0x0011; \/\/ access\n-      #12; \/\/ name_cpx\n-      #27; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x0372\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0397\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0397\n-      0x0011; \/\/ access\n-      #16; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 32) { \/\/ Code at 0x039F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA000E0000AC;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03C5\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03C5\n-      0x0011; \/\/ access\n-      #20; \/\/ name_cpx\n-      #32; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 31) { \/\/ Code at 0x03CD\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00120000B0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x03F2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03F2\n-      0x000A; \/\/ access\n-      #33; \/\/ name_cpx\n-      #34; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#28, 56) { \/\/ Code at 0x03FA\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00034B032A5FCC00;\n-            0x074B2AB0;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x042C\n-                4  6; \/\/  at 0x0430\n-                11  7; \/\/  at 0x0434\n-                18  8; \/\/  at 0x0438\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n-      #36;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #38; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-    ;\n-    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n-      [1] { \/\/ InnerClasses\n-        #46 #48 #50 25; \/\/  at 0x045E\n-      }\n-    } \/\/ end InnerClasses\n-  } \/\/ Attributes\n-} \/\/ end class ValueSuperCtorIsNotEmpty\n-\n-\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/InlineClassWithBadSupers.jcod","additions":0,"deletions":2637,"binary":false,"changes":2637,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-public class NotAbstract { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/NotAbstract.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"},{"patch":"@@ -1,97 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\/*\n- * @ignore Fix JDK-8328419\n- * @test\n- * @bug 8243204\n- * @summary test that the JVM detects illegal super classes for value object\n- *           and primitive value types.\n- * @enablePreview\n- * @compile NotAbstract.java HasNonStaticFields.java CtorHasArgs.java CtorIsNotEmpty.java\n- * @compile HasSynchMethod.java ValidSuper.java\n- * @compile InlineClassWithBadSupers.jcod\n- * @run main\/othervm -verify TestSuperClasses\n- *\/\n-\n-public class TestSuperClasses {\n-\n-    public static void runTestIncompatibleClassChangeError(String test_name, String message) throws Exception {\n-        System.out.println(\"Testing: \" + test_name);\n-        try {\n-            Class newClass = Class.forName(test_name);\n-            throw new RuntimeException(\"Expected IncompatibleClassChangeError exception not thrown\");\n-        } catch (java.lang.IncompatibleClassChangeError e) {\n-            if (!e.getMessage().contains(message)) {\n-                throw new RuntimeException(\"Wrong IncompatibleClassChangeError: \" + e.getMessage());\n-            }\n-        }\n-    }\n-\n-    public static void main(String[] args) throws Exception {\n-\n-        \/\/ Value Objects...\n-\n-        \/\/ Test that the super class of an value type must be java.lang.Object or an abstract class.\n-        runTestIncompatibleClassChangeError(\"ValueSuperNotAbstract\",\n-            \"Value type ValueSuperNotAbstract has an identity type as supertype\");\n-\n-        \/\/ Test that the super class of an value type cannot have instance fields.\n-        runTestIncompatibleClassChangeError(\"ValueSuperHasNonStaticFields\",\n-            \"Value type ValueSuperHasNonStaticFields has an identity type as supertype\");\n-\n-        \/\/ Test that the super class of an value type cannot contain a synchronized instance method.\n-        runTestIncompatibleClassChangeError(\"ValueSuperHasSynchMethod\",\n-            \"Value type ValueSuperHasSynchMethod has an identity type as supertype\");\n-\n-        \/\/ Test that the constructor in a super class of an value type must have a signature of \"()V\".\n-        runTestIncompatibleClassChangeError(\"ValueSuperCtorHasArgs\",\n-            \"Value type ValueSuperCtorHasArgs has an identity type as supertype\");\n-\n-        \/\/ Test that the constructor in a super class of an value type must be empty.\n-        runTestIncompatibleClassChangeError(\"ValueSuperCtorIsNotEmpty\",\n-            \"Value type ValueSuperCtorIsNotEmpty has an identity type as supertype\");\n-\n-        \/\/ Primitive values...\n-\n-        \/\/ Test that the super class of an primitive value type must be java.lang.Object or an abstract class.\n-        runTestIncompatibleClassChangeError(\"PrimitiveSuperNotAbstract\",\n-            \"Value type PrimitiveSuperNotAbstract has an identity type as supertype\");\n-\n-        \/\/ Test that the super class of an primitive value type cannot have instance fields.\n-        runTestIncompatibleClassChangeError(\"PrimitiveSuperHasNonStaticFields\",\n-            \"Value type PrimitiveSuperHasNonStaticFields has an identity type as supertype\");\n-\n-        \/\/ Test that the super class of an primitive value type cannot contain a synchronized instance method.\n-        runTestIncompatibleClassChangeError(\"PrimitiveSuperHasSynchMethod\",\n-            \"Value type PrimitiveSuperHasSynchMethod has an identity type as supertype\");\n-\n-        \/\/ Test that the constructor in a super class of an primitive value type must have a signature of \"()V\".\n-        runTestIncompatibleClassChangeError(\"PrimitiveSuperCtorHasArgs\",\n-            \"Value type PrimitiveSuperCtorHasArgs has an identity type as supertype\");\n-\n-        \/\/ Test that the constructor in a super class of an primitive value type must be empty.\n-        runTestIncompatibleClassChangeError(\"PrimitiveSuperCtorIsNotEmpty\",\n-            \"Value type PrimitiveSuperCtorIsNotEmpty has an identity type as supertype\");\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/TestSuperClasses.java","additions":0,"deletions":97,"binary":false,"changes":97,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ This abstract class is a valid super class for an inline type, but its\n-\/\/ super class, HasSynchMethod, is not because it contains a synchronized\n-\/\/ instance method.\n-public abstract class ValidSuper extends HasSynchMethod {\n-    public static String hi;\n-    public static synchronized void helloWorld() { }\n-    public void hi(int a) {\n-        System.out.println(\"hi\");\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/ValidSuper.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"}]}