{"files":[{"patch":"@@ -1506,1 +1506,1 @@\n-  for (int i = 0; i < _constants.length(); i++) {\n+  for (int i = 0; i < _constants.length() && !in_conditional_code(); i++) {\n@@ -1973,2 +1973,1 @@\n-    access_store_at(decorators, x->elt_type(), array, index.result(), value.result(),\n-                    nullptr, null_check_info);\n+    access_store_at(decorators, x->elt_type(), array, index.result(), value.result(), nullptr, null_check_info);\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -388,1 +388,1 @@\n-\n+        static final MyValueEmpty DEFAULT = new MyValueEmpty();\n@@ -391,1 +391,0 @@\n-    @ImplicitlyConstructible\n@@ -788,0 +787,1 @@\n+        IntAndArrayOop[] nullFreeArray6 = (IntAndArrayOop[])ValueClass.newNullRestrictedNonAtomicArray(IntAndArrayOop.class, 3, IntAndArrayOop.DEFAULT);\n@@ -792,2 +792,2 @@\n-        MyValueEmpty[] nullFreeArrayEmpty = (MyValueEmpty[])ValueClass.newNullRestrictedArray(MyValueEmpty.class, 3);\n-        MyValueEmpty[] nullFreeAtomicArrayEmpty = (MyValueEmpty[])ValueClass.newNullRestrictedAtomicArray(MyValueEmpty.class, 3);\n+        MyValueEmpty[] nullFreeArrayEmpty = (MyValueEmpty[])ValueClass.newNullRestrictedNonAtomicArray(MyValueEmpty.class, 3, MyValueEmpty.DEFAULT);\n+        MyValueEmpty[] nullFreeAtomicArrayEmpty = (MyValueEmpty[])ValueClass.newNullRestrictedAtomicArray(MyValueEmpty.class, 3, MyValueEmpty.DEFAULT);\n@@ -977,0 +977,2 @@\n+            nullFreeArray6[1] = val6;\n+            nullFreeArray6[2] = nullFreeArray6[1];\n@@ -983,0 +985,1 @@\n+            Asserts.assertEQ(nullFreeArray6[0], new IntAndArrayOop(0, null));\n@@ -986,0 +989,1 @@\n+            Asserts.assertEQ(nullFreeArray6[1], val6);\n@@ -989,0 +993,1 @@\n+            Asserts.assertEQ(nullFreeArray6[2], val6);\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestArrayNullMarkers.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -372,0 +372,1 @@\n+    @Strict\n@@ -374,0 +375,1 @@\n+    @Strict\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestFieldNullMarkers.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}