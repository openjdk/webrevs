{"files":[{"patch":"@@ -170,1 +170,1 @@\n-    if (!out->is_Call() || out->req() <= TypeFunc::Parms) {\n+    if (!out->is_CallJava() || out->req() <= TypeFunc::Parms) {\n@@ -260,1 +260,5 @@\n-  if (phase->is_IterGVN() && load != nullptr && load->is_Load() && !load->as_Load()->is_mismatched_access()) {\n+\n+  \/\/ After macro expansion, an allocation may become a call, changing the memory input to the\n+  \/\/ memory output of that call would be illegal. As a result, disallow this transformation after\n+  \/\/ macro expansion.\n+  if (phase->is_IterGVN() && phase->C->allow_macro_nodes() && load != nullptr && load->is_Load() && !load->as_Load()->is_mismatched_access()) {\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}