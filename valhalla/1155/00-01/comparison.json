{"files":[{"patch":"@@ -450,0 +450,53 @@\n+            ),\n+            new TestData(\n+                    \"compiler.err.type.found.req\", \/\/ --enable-preview -source\"\n+                    \"\"\"\n+                    import java.time.*;\n+                    class V {\n+                        final Duration val = Duration.ZERO;\n+                        void test() {\n+                            synchronized (val) { \/\/ warn\n+                            }\n+                        }\n+                    }\n+                    \"\"\",\n+                    false \/\/ cant do local as there is an import statement\n+            ),\n+            new TestData(\n+                    \"compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\", \/\/ empty options\n+                    \"\"\"\n+                    class V {\n+                        final Integer val = Integer.valueOf(42);\n+                        void test() {\n+                            synchronized (val) { \/\/ warn\n+                            }\n+                        }\n+                    }\n+                    \"\"\",\n+                    new String[] {}\n+            ),\n+            new TestData(\n+                    \"compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\", \/\/ --source\n+                    \"\"\"\n+                    class V {\n+                        final Integer val = Integer.valueOf(42);\n+                        void test() {\n+                            synchronized (val) { \/\/ warn\n+                            }\n+                        }\n+                    }\n+                    \"\"\",\n+                    new String[] {\"--source\", Integer.toString(Runtime.version().feature())}\n+            ),\n+            new TestData(\n+                    \"compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\", \/\/ --source\n+                    \"\"\"\n+                    class V {\n+                        final Integer val = Integer.valueOf(42);\n+                        void test() {\n+                            synchronized (val) { \/\/ warn\n+                            }\n+                        }\n+                    }\n+                    \"\"\",\n+                    new String[] {\"--source\", Integer.toString(Runtime.version().feature())}\n@@ -456,46 +509,0 @@\n-        testHelper(\n-                List.of(\n-                        new TestData(\n-                                \"compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\", \/\/ empty options\n-                                \"\"\"\n-                                class V {\n-                                    final Integer val = Integer.valueOf(42);\n-                                    void test() {\n-                                        synchronized (val) { \/\/ warn\n-                                        }\n-                                    }\n-                                }\n-                                \"\"\",\n-                                new String[] {}\n-                        ),\n-                        new TestData(\n-                                \"compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\", \/\/ --source\n-                                \"\"\"\n-                                class V {\n-                                    final Integer val = Integer.valueOf(42);\n-                                    void test() {\n-                                        synchronized (val) { \/\/ warn\n-                                        }\n-                                    }\n-                                }\n-                                \"\"\",\n-                                new String[] {\"--source\", Integer.toString(Runtime.version().feature())}\n-                        ),\n-                        new TestData(\n-                                \"compiler.err.type.found.req\", \/\/ --enable-preview --source\n-                                \"\"\"\n-                                class V {\n-                                    final Integer val = Integer.valueOf(42);\n-                                    void test() {\n-                                        synchronized (val) { \/\/ warn\n-                                        }\n-                                    }\n-                                }\n-                                \"\"\",\n-                                new String[] {\"--enable-preview\", \"--source\", Integer.toString(Runtime.version().feature())}\n-                        )\n-                        \/* we should add tests for --release and --release --enable-preview once the stubs used for the latest\n-                         * release have been updated, right now they are the same as those for 22\n-                         *\/\n-                )\n-        );\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java","additions":53,"deletions":46,"binary":false,"changes":99,"status":"modified"}]}