{"files":[{"patch":"@@ -134,0 +134,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/Duration.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -210,0 +210,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/Instant.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -140,0 +140,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDate.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -136,0 +136,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDateTime.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -126,0 +126,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalTime.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -128,0 +128,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/MonthDay.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -129,0 +129,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/OffsetDateTime.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -119,0 +119,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/OffsetTime.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -134,0 +134,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/Period.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -136,0 +136,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/Year.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -132,0 +132,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/YearMonth.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -165,0 +165,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/ZonedDateTime.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -143,0 +143,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ChronoLocalDateImpl.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -120,0 +120,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/HijrahDate.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -127,0 +127,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/JapaneseDate.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -107,0 +107,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/MinguoDate.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -107,0 +107,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ThaiBuddhistDate.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/util\/OptionalDouble.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/util\/OptionalInt.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+@jdk.internal.MigratedValueClass\n","filename":"src\/java.base\/share\/classes\/java\/util\/OptionalLong.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3177,1 +3177,1 @@\n-        if (((flags & ACC_IDENTITY) != 0 && !isMigratedValueClass(flags)) || (majorVersion < V66.major && (flags & INTERFACE) == 0)) {\n+        if (((flags & ACC_IDENTITY) != 0 && !isMigratedValueClass(flags)) || (majorVersion < V67.major && (flags & INTERFACE) == 0)) {\n@@ -3189,2 +3189,2 @@\n-            if (previewClassFile && majorVersion >= V66.major && (flags & INTERFACE) == 0 ||\n-                    majorVersion >= V66.major && isMigratedValueClass(flags)) {\n+            if (previewClassFile && majorVersion >= V67.major && (flags & INTERFACE) == 0 ||\n+                    majorVersion >= V67.major && isMigratedValueClass(flags)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -450,0 +450,53 @@\n+            ),\n+            new TestData(\n+                    \"compiler.err.type.found.req\", \/\/ --enable-preview -source\"\n+                    \"\"\"\n+                    import java.time.*;\n+                    class V {\n+                        final Duration val = Duration.ZERO;\n+                        void test() {\n+                            synchronized (val) { \/\/ warn\n+                            }\n+                        }\n+                    }\n+                    \"\"\",\n+                    false \/\/ cant do local as there is an import statement\n+            ),\n+            new TestData(\n+                    \"compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\", \/\/ empty options\n+                    \"\"\"\n+                    class V {\n+                        final Integer val = Integer.valueOf(42);\n+                        void test() {\n+                            synchronized (val) { \/\/ warn\n+                            }\n+                        }\n+                    }\n+                    \"\"\",\n+                    new String[] {}\n+            ),\n+            new TestData(\n+                    \"compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\", \/\/ --source\n+                    \"\"\"\n+                    class V {\n+                        final Integer val = Integer.valueOf(42);\n+                        void test() {\n+                            synchronized (val) { \/\/ warn\n+                            }\n+                        }\n+                    }\n+                    \"\"\",\n+                    new String[] {\"--source\", Integer.toString(Runtime.version().feature())}\n+            ),\n+            new TestData(\n+                    \"compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\", \/\/ --source\n+                    \"\"\"\n+                    class V {\n+                        final Integer val = Integer.valueOf(42);\n+                        void test() {\n+                            synchronized (val) { \/\/ warn\n+                            }\n+                        }\n+                    }\n+                    \"\"\",\n+                    new String[] {\"--source\", Integer.toString(Runtime.version().feature())}\n@@ -456,46 +509,0 @@\n-        testHelper(\n-                List.of(\n-                        new TestData(\n-                                \"compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\", \/\/ empty options\n-                                \"\"\"\n-                                class V {\n-                                    final Integer val = Integer.valueOf(42);\n-                                    void test() {\n-                                        synchronized (val) { \/\/ warn\n-                                        }\n-                                    }\n-                                }\n-                                \"\"\",\n-                                new String[] {}\n-                        ),\n-                        new TestData(\n-                                \"compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class\", \/\/ --source\n-                                \"\"\"\n-                                class V {\n-                                    final Integer val = Integer.valueOf(42);\n-                                    void test() {\n-                                        synchronized (val) { \/\/ warn\n-                                        }\n-                                    }\n-                                }\n-                                \"\"\",\n-                                new String[] {\"--source\", Integer.toString(Runtime.version().feature())}\n-                        ),\n-                        new TestData(\n-                                \"compiler.err.type.found.req\", \/\/ --enable-preview --source\n-                                \"\"\"\n-                                class V {\n-                                    final Integer val = Integer.valueOf(42);\n-                                    void test() {\n-                                        synchronized (val) { \/\/ warn\n-                                        }\n-                                    }\n-                                }\n-                                \"\"\",\n-                                new String[] {\"--enable-preview\", \"--source\", Integer.toString(Runtime.version().feature())}\n-                        )\n-                        \/* we should add tests for --release and --release --enable-preview once the stubs used for the latest\n-                         * release have been updated, right now they are the same as those for 22\n-                         *\/\n-                )\n-        );\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java","additions":53,"deletions":46,"binary":false,"changes":99,"status":"modified"}]}