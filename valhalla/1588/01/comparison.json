{"files":[{"patch":"@@ -75,0 +75,1 @@\n+    \/\/ Valhalla: inline types\/arrays can't be monitored\n@@ -86,0 +87,1 @@\n+    \/\/ Valhalla: inline types can not possess an object monitor\n@@ -91,0 +93,6 @@\n+      if (is_inline_type()) {\n+        st->print(\" inline_type\");\n+        if (is_larval_state()) {\n+          st->print(\"=larval\");\n+        }\n+      }\n@@ -96,0 +104,12 @@\n+#ifdef _LP64 \/\/ 64 bit encodings have array information\n+      \/\/ flat or null-free do not imply each other\n+      bool flat = is_flat_array();\n+      bool null_free = is_null_free_array();\n+      if (flat && !null_free) {\n+        st->print(\" flat_array\");\n+      } else if (!flat && null_free) {\n+        st->print(\" null_free_array\");\n+      } else if (flat && null_free) {\n+        st->print(\" flat_null_free_array\");\n+      }\n+#endif\n","filename":"src\/hotspot\/share\/oops\/markWord.cpp","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -43,1 +43,2 @@\n-static void assert_test_pattern(Handle object, const char* pattern) {\n+template<typename Printable>\n+static void assert_test_pattern(Printable object, const char* pattern) {\n@@ -49,1 +50,2 @@\n-static void assert_mark_word_print_pattern(Handle object, const char* pattern) {\n+template<typename Printable>\n+static void assert_mark_word_print_pattern(Printable object, const char* pattern) {\n@@ -174,0 +176,1 @@\n+  assert_test_pattern(&mark, \" inline_type\");\n@@ -185,0 +188,2 @@\n+  assert_test_pattern(&larval, \" inline_type=larval\");\n+\n@@ -217,0 +222,2 @@\n+\n+  assert_test_pattern(&mark, \" flat_null_free_array\");\n@@ -234,0 +241,2 @@\n+\n+  assert_test_pattern(&mark, \" flat_array\");\n@@ -256,0 +265,2 @@\n+\n+  assert_test_pattern(&mark, \" null_free_array\");\n","filename":"test\/hotspot\/gtest\/oops\/test_markWord.cpp","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"}]}