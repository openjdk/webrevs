{"files":[{"patch":"@@ -183,2 +183,1 @@\n-public final\n-class Character implements java.io.Serializable, Comparable<Character>, Constable {\n+public final class Character implements java.io.Serializable, Comparable<Character>, Constable {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Character.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -55,1 +55,0 @@\n-import jdk.internal.misc.ValhallaFeatures;\n@@ -374,1 +373,1 @@\n-            clb.withFlags((ValhallaFeatures.isEnabled() ? ACC_IDENTITY : 0) | ACC_FINAL | ACC_SYNTHETIC);\n+            clb.withFlags(ACC_IDENTITY | ACC_FINAL | ACC_SYNTHETIC);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleProxies.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import jdk.internal.misc.ValhallaFeatures;\n-\n@@ -190,1 +188,1 @@\n-     * For class file versions up to Valhalla or if Valhalla is not enabled,\n+     * For class file versions up to but not including Valhalla,\n@@ -194,2 +192,1 @@\n-    SUPER(0x0000_0020, false,\n-            ValhallaFeatures.isEnabled() ? Location.EMPTY_SET : Location.SET_CLASS,\n+    SUPER(0x0000_0020, false, Location.EMPTY_SET,\n@@ -199,2 +196,2 @@\n-                return (cffv.compareTo(ClassFileFormatVersion.RELEASE_21) >= 0 &&\n-                        ValhallaFeatures.isEnabled()) ? Location.EMPTY_SET : Location.SET_CLASS;}\n+                return (cffv.compareTo(ClassFileFormatVersion.RELEASE_22) >= 0)\n+                        ? Location.EMPTY_SET : Location.SET_CLASS;}\n@@ -210,1 +207,1 @@\n-            ValhallaFeatures.isEnabled() ? Location.SET_CLASS_INNER_CLASS : Location.EMPTY_SET,\n+            Location.SET_CLASS_INNER_CLASS,\n@@ -214,2 +211,2 @@\n-                    return (cffv.compareTo(ClassFileFormatVersion.RELEASE_21) >= 0 &&\n-                            ValhallaFeatures.isEnabled()) ? Location.SET_CLASS_INNER_CLASS : Location.EMPTY_SET;}\n+                    return (cffv.compareTo(ClassFileFormatVersion.RELEASE_22) >= 0)\n+                            ? Location.SET_CLASS_INNER_CLASS : Location.EMPTY_SET;}\n@@ -355,1 +352,1 @@\n-    STRICT(0x0000_0800, true, !ValhallaFeatures.isEnabled() ? Location.EMPTY_SET : Location.SET_FIELD,\n+    STRICT(Modifier.STRICT, true, Location.EMPTY_SET,\n@@ -359,9 +356,4 @@\n-                   if (ValhallaFeatures.isEnabled() && cffv.compareTo(ClassFileFormatVersion.RELEASE_22) >= 0) {\n-                       return Location.SET_FIELD;\n-                   } else if (cffv.compareTo(ClassFileFormatVersion.RELEASE_2) >= 0 &&\n-                              cffv.compareTo(ClassFileFormatVersion.RELEASE_16) <= 0) {\n-                       return Location.SET_METHOD;\n-                   } else {\n-                       return Location.EMPTY_SET;\n-                   }\n-               }\n+                   return (cffv.compareTo(ClassFileFormatVersion.RELEASE_2)  >= 0 &&\n+                           cffv.compareTo(ClassFileFormatVersion.RELEASE_16) <= 0) ?\n+                       Location.SET_METHOD:\n+                       Location.EMPTY_SET;}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":12,"deletions":20,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import jdk.internal.misc.ValhallaFeatures;\n@@ -114,1 +113,1 @@\n-        builder.withFlags(AccessFlag.FINAL, AccessFlag.PUBLIC, ValhallaFeatures.isEnabled() ? AccessFlag.IDENTITY : AccessFlag.SUPER);\n+        builder.withFlags(AccessFlag.FINAL, AccessFlag.PUBLIC, AccessFlag.IDENTITY);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventClassBuilder.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import jdk.internal.misc.ValhallaFeatures;\n+import jdk.internal.misc.PreviewFeatures;\n@@ -93,1 +93,1 @@\n-            clb.withFlags((ValhallaFeatures.isEnabled() ? ACC_IDENTITY : 0) | ACC_FINAL | ACC_SYNTHETIC);\n+            clb.withFlags((PreviewFeatures.isEnabled() ? ACC_IDENTITY : 0) | ACC_FINAL | ACC_SYNTHETIC);\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleProxies\/WrapperHiddenClassTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-                               ClassFileFormatVersion.RELEASE_21),\n+                               ClassFileFormatVersion.RELEASE_22),\n@@ -273,2 +273,1 @@\n-                        (cffv.compareTo(ClassFileFormatVersion.RELEASE_22) >= 0)\n-                                ? Set.of(Location.FIELD) : Set.of();\n+                Set.of();\n","filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/VersionedLocationsTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import jdk.internal.misc.ValhallaFeatures;\n@@ -34,1 +33,0 @@\n-import java.util.List;\n@@ -67,0 +65,10 @@\n+                Byte.class,\n+                Short.class,\n+                Integer.class,\n+                Long.class,\n+                Float.class,\n+                Double.class,\n+                Boolean.class,\n+                Character.class,\n+                Number.class,\n+                Record.class,\n@@ -83,1 +91,0 @@\n-                Record.class,\n@@ -89,1 +96,1 @@\n-     * Verify that the class is a value class if --enable-preview true\n+     * Verify that the class is a value class if --enable-preview is true\n@@ -95,4 +102,2 @@\n-        System.out.printf(\"isPreview: %s, Valhalla.isEnabled: %s%n\",\n-                PreviewFeatures.isEnabled(), ValhallaFeatures.isEnabled());\n-        assertEquals(PreviewFeatures.isEnabled() && ValhallaFeatures.isEnabled(),\n-                clazz.isValue(), clazz.getName());\n+        System.out.printf(\"isPreview: %s%n\", PreviewFeatures.isEnabled());\n+        assertEquals(PreviewFeatures.isEnabled(), clazz.isValue(), clazz.getName());\n","filename":"test\/jdk\/valhalla\/valuetypes\/UseValueClassTest.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"}]}