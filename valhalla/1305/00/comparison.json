{"files":[{"patch":"@@ -1333,0 +1333,4 @@\n+            if ((flags & (VALUE_CLASS | SEALED | ABSTRACT)) == (VALUE_CLASS | SEALED) ||\n+                (flags & (VALUE_CLASS | NON_SEALED | ABSTRACT)) == (VALUE_CLASS | NON_SEALED)) {\n+                log.error(pos, Errors.NonAbstractValueClassCantBeSealedOrNonSealed);\n+            }\n@@ -1418,3 +1422,0 @@\n-                && checkDisjoint(pos, flags,\n-                                VALUE_CLASS,\n-                                NON_SEALED)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -4138,0 +4138,3 @@\n+compiler.err.non.abstract.value.class.cant.be.sealed.or.non.sealed=\\\n+    ''sealed'' or ''non-sealed'' modifiers are only applicable to abstract value classes\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.non.abstract.value.class.cant.be.sealed.or.non.sealed\n+\/\/ key: compiler.note.preview.filename\n+\/\/ key: compiler.note.preview.recompile\n+\/\/ options: --enable-preview -source ${jdk.version}\n+\n+sealed value class NonAbstractValueClassCantBeSealed {}\n+\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/NonAbstractValueClassCantBeSealed.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -563,1 +563,1 @@\n-                    \"compiler.err.illegal.combination.of.modifiers\",\n+                    \"compiler.err.non.abstract.value.class.cant.be.sealed.or.non.sealed\",\n@@ -571,1 +571,1 @@\n-                    \"compiler.err.illegal.combination.of.modifiers\",\n+                    \"compiler.err.non.abstract.value.class.cant.be.sealed.or.non.sealed\",\n@@ -574,1 +574,28 @@\n-                    non-sealed value class VC extends SI {}\n+                    \"\"\",\n+                    false\n+            ),\n+            new TestData(\n+                    \"\"\"\n+                    sealed abstract value class SI {}\n+                    value class V extends SI {}\n+                    \"\"\",\n+                    false\n+            ),\n+            new TestData(\n+                    \"\"\"\n+                    sealed abstract value class SI permits V {}\n+                    value class V extends SI {}\n+                    \"\"\",\n+                    false\n+            ),\n+            new TestData(\n+                    \"\"\"\n+                    sealed interface I {}\n+                    non-sealed abstract value class V implements I {}\n+                    \"\"\",\n+                    false\n+            ),\n+            new TestData(\n+                    \"\"\"\n+                    sealed interface I permits V {}\n+                    non-sealed abstract value class V implements I {}\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java","additions":30,"deletions":3,"binary":false,"changes":33,"status":"modified"}]}