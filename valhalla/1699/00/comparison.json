{"files":[{"patch":"@@ -7938,4 +7938,3 @@\n-  if (EnableValhalla) {\n-    \/\/ Mask inline_type bit such that we go to the slow path if object is an inline type\n-    andr(mark, mark, ~((int) markWord::inline_type_bit_in_place));\n-  }\n+  \/\/ Mask inline_type bit such that we go to the slow path if object is an inline type\n+  andr(mark, mark, ~((int) markWord::inline_type_bit_in_place));\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -10417,4 +10417,3 @@\n-  if (EnableValhalla) {\n-    \/\/ Mask inline_type bit such that we go to the slow path if object is an inline type\n-    andptr(reg_rax, ~((int) markWord::inline_type_bit_in_place));\n-  }\n+  \/\/ Mask inline_type bit such that we go to the slow path if object is an inline type\n+  andptr(reg_rax, ~((int) markWord::inline_type_bit_in_place));\n+\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -318,1 +318,1 @@\n-  if (EnableValhalla && (obj)->mark().is_inline_type()) {  \\\n+  if ((obj)->mark().is_inline_type()) {  \\\n@@ -325,1 +325,1 @@\n-  if (EnableValhalla && (obj)->mark().is_inline_type()) {  \\\n+  if ((obj)->mark().is_inline_type()) {  \\\n@@ -357,1 +357,1 @@\n-  assert(!EnableValhalla || !obj->klass()->is_inline_klass(), \"monitor op on inline type\");\n+  assert(!obj->klass()->is_inline_klass(), \"monitor op on inline type\");\n@@ -449,1 +449,1 @@\n-  assert(!EnableValhalla || !obj->klass()->is_inline_klass(), \"JITed code should never have locked an instance of a value class\");\n+  assert(!obj->klass()->is_inline_klass(), \"JITed code should never have locked an instance of a value class\");\n@@ -466,1 +466,1 @@\n-  if (EnableValhalla && obj->klass()->is_inline_klass()) {\n+  if (obj->klass()->is_inline_klass()) {\n@@ -686,4 +686,3 @@\n-  if (EnableValhalla && obj->klass()->is_inline_klass()) {\n-    \/\/ VM should be calling bootstrap method\n-    ShouldNotReachHere();\n-  }\n+  \/\/ VM should be calling bootstrap method\n+  assert(!obj->klass()->is_inline_klass(), \"should not reach here\");\n+\n@@ -791,1 +790,1 @@\n-  if (EnableValhalla && h_obj->mark().is_inline_type()) {\n+  if (h_obj->mark().is_inline_type()) {\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"}]}