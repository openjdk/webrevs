[{"commit":{"message":"Correct indentation\/space usage in makefiles."},"files":[{"filename":"make\/CompileJavaModules.gmk"}],"sha":"02453b1ce098bc8bb29eb3a7088c95dc6f6e727e"},{"commit":{"message":"Restore disabling CDS if java.base is patched."},"files":[{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"},{"filename":"src\/hotspot\/share\/runtime\/arguments.hpp"}],"sha":"8ed839880676d3474b19efc833731fc1923b6b96"},{"commit":{"message":"Replaced patch_mod_javabase with a check for an empty list of --patch-modules.\nOther review comment cleanup."},"files":[{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"},{"filename":"src\/hotspot\/share\/runtime\/arguments.hpp"}],"sha":"f7eb632f418791361ba4866daa5606e66be8d97f"},{"commit":{"message":"Modify hotspot test for duplicate modules to check error message from the launcher\ninstead of ExceptionInInitilizer."},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleDupModule.java"}],"sha":"15b8caf0cc1e1339279ed660f00a28cb0548f7d9"},{"commit":{"message":"Merge branch 'lworld' into try-double-build"},"files":[],"sha":"9fc43ba8e5608efe755ad60d0e6d0960f094d6cb"},{"commit":{"message":"Cleanup make files generation of value classes\nCleanup memory allocation in arguments to use the heap (not stack)\nAdd test for duplication of --patch-module other than java.base"},"files":[{"filename":"make\/CompileJavaModules.gmk"},{"filename":"make\/modules\/java.base\/gensrc\/GensrcValueClasses.gmk"},{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"},{"filename":"src\/hotspot\/share\/runtime\/arguments.hpp"},{"filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestSyncOnValueBasedClassEvent.java"},{"filename":"test\/jdk\/tools\/launcher\/modules\/patch\/basic\/PatchTestWarningError.java"},{"filename":"test\/jdk\/valhalla\/valuetypes\/UseValueClassTest.java"}],"sha":"c2033ba499953506b2993f5edae7f004366633d5"},{"commit":{"message":"Remove incomplete test ValueClassDepsTest.java.\nRemove \"super()\" from java.time classes (not needed and also not allowed for value classes)"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/time\/Duration.java"},{"filename":"src\/java.base\/share\/classes\/java\/time\/Instant.java"},{"filename":"src\/java.base\/share\/classes\/java\/time\/ZoneOffset.java"},{"filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java"},{"filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeParseContext.java"},{"filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimePrintContext.java"},{"filename":"src\/java.base\/share\/classes\/java\/time\/zone\/ZoneRules.java"}],"sha":"9c1ec78966ce1dd53e314118b9a8e7723308f56d"},{"commit":{"message":"Merge branch 'lworld' into try-double-build"},"files":[{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"}],"sha":"d962ced659d4a108d38978fc863a11d2aabe27ba"},{"commit":{"message":"Refactor to smaller methods and some cleanup."},"files":[{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"},{"filename":"src\/hotspot\/share\/runtime\/arguments.hpp"}],"sha":"5d49127d06650e576fe9bd11b61f543c97fe4fea"},{"commit":{"message":"Modify command line argument handling to support both --patch-module\nand --enable-preview together.\nOnly a single --patch-module for a given module is legal.\nThe --patch-module options are accumulated in a list, rejecting duplicates.\n\nIf the --enable-preview is present, jar files for each module\nwith value classes are appended to the path for the respective module.\nFinally, a property is defined for each module that communicates\nthe module and path to ModuleBootstrap."},"files":[{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"},{"filename":"src\/hotspot\/share\/runtime\/arguments.hpp"}],"sha":"ff65703a4371194bfa7ebcd3908dede43a2573a2"},{"commit":{"message":"Update build to generate selected value classes from corresponding core classes\nedited to remove super() and change \"class\" to \"value class\".\nSee Modules.gmk for the list of classes.\nAdd test for 16 classes in java.util and java.time to check they are\nvalue classes when --enable-preview and otherwise identity classes."},"files":[{"filename":"make\/CompileJavaModules.gmk"},{"filename":"make\/common\/Modules.gmk"},{"filename":"make\/modules\/java.base\/Gensrc.gmk"},{"filename":"make\/modules\/java.base\/gensrc\/GensrcValueClasses.gmk"},{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"}],"sha":"b69e7df28bf2d25f002fcae537a1445ef383ba30"},{"commit":{"message":"Added test that Valhalla classes modified to be value classes are\nvalue classes when --enable-preview"},"files":[{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"},{"filename":"test\/jdk\/valhalla\/valuetypes\/UseValueClassTest.java"}],"sha":"dd7197c272146825f441d2dd67e7b6d145156a9d"},{"commit":{"message":"When --enable-preview, scan the $HOME\/lib\/valueclasses\/ directory\nfor per module jar files with names like <module>-valueclasses.jar..\nFor each jar add the equivalent of --patch-module <module>=<jar>."},"files":[{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"}],"sha":"01dbcb6ed162c9812338c0c7f91adbf2485d3243"},{"commit":{"message":"Reimplemented build of value class overlay classes.\nOverride classes reside in <module>\/valueclasses\/classes\nThey are compiled separately after the regular module build.\nOnly the class files compiled from <module>\/valueclasses\/.. are inserted into a jar file\nThe jar file is placed in lib\/valueclasses\/<module>-valueclasses.jar\nThe jar is included in the module's jmod\n\nThe Hotspot arguments.cpp is hard coded to patch the java.base module\nwhen the --enable-preview option is selected."},"files":[{"filename":"make\/CompileJavaModules.gmk"},{"filename":"make\/common\/Modules.gmk"},{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"}],"sha":"50719291061a658845583fbfcb2be2a9d6865ac4"},{"commit":{"message":"WIP: Make double-build\nMake copies of classes to be made value classes in src\/java.base\/valhalla\/classes\nModify Main.gmk to trigger Valhalla builds of classes\nModify Modules.gmk to conditionally override java.base classes with Valhalla\/classes\nModify hotspot arguments.cpp to force --patch-module with overriddden classes if --enable-preview"},"files":[{"filename":"make\/common\/Modules.gmk"},{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"},{"filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/BadACCValue.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testClassModifiers\/AbstractClassWithFieldWithNoIdentityModifier.java"},{"filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestSyncOnValueBasedClassEvent.java"}],"sha":"c419c9845a32df925058e7f5d08a65dfee81d645"}]