{"files":[{"patch":"@@ -1589,3 +1589,3 @@\n-void InterpreterMacroAssembler::profile_array(Register mdp,\n-                                              Register array,\n-                                              Register tmp) {\n+template <class ArrayData> void InterpreterMacroAssembler::profile_array_type(Register mdp,\n+                                                                              Register array,\n+                                                                              Register tmp) {\n@@ -1599,1 +1599,1 @@\n-    profile_obj_type(tmp, Address(mdp, in_bytes(ArrayLoadStoreData::array_offset())));\n+    profile_obj_type(tmp, Address(mdp, in_bytes(ArrayData::array_offset())));\n@@ -1604,1 +1604,1 @@\n-    set_mdp_flag_at(mdp, ArrayLoadStoreData::flat_array_byte_constant());\n+    set_mdp_flag_at(mdp, ArrayData::flat_array_byte_constant());\n@@ -1611,1 +1611,1 @@\n-    set_mdp_flag_at(mdp, ArrayLoadStoreData::null_free_array_byte_constant());\n+    set_mdp_flag_at(mdp, ArrayData::null_free_array_byte_constant());\n@@ -1619,3 +1619,38 @@\n-void InterpreterMacroAssembler::profile_element(Register mdp,\n-                                                Register element,\n-                                                Register tmp) {\n+template void InterpreterMacroAssembler::profile_array_type<ArrayLoadData>(Register mdp,\n+                                                                           Register array,\n+                                                                           Register tmp);\n+template void InterpreterMacroAssembler::profile_array_type<ArrayStoreData>(Register mdp,\n+                                                                            Register array,\n+                                                                            Register tmp);\n+\n+void InterpreterMacroAssembler::profile_multiple_element_types(Register mdp, Register element, Register tmp, const Register tmp2) {\n+  if (ProfileInterpreter) {\n+    Label profile_continue;\n+\n+    \/\/ If no method data exists, go to profile_continue.\n+    test_method_data_pointer(mdp, profile_continue);\n+\n+    Label done, update;\n+    cbnz(element, update);\n+    set_mdp_flag_at(mdp, BitData::null_seen_byte_constant());\n+    b(done);\n+\n+    bind(update);\n+    load_klass(tmp, element);\n+\n+    \/\/ Record the object type.\n+    record_klass_in_profile(tmp, mdp, tmp2);\n+\n+    bind(done);\n+\n+    \/\/ The method data pointer needs to be updated.\n+    update_mdp_by_constant(mdp, in_bytes(ArrayStoreData::array_store_data_size()));\n+\n+    bind(profile_continue);\n+  }\n+}\n+\n+\n+void InterpreterMacroAssembler::profile_element_type(Register mdp,\n+                                                     Register element,\n+                                                     Register tmp) {\n@@ -1629,1 +1664,1 @@\n-    profile_obj_type(tmp, Address(mdp, in_bytes(ArrayLoadStoreData::element_offset())));\n+    profile_obj_type(tmp, Address(mdp, in_bytes(ArrayLoadData::element_offset())));\n@@ -1632,1 +1667,1 @@\n-    update_mdp_by_constant(mdp, in_bytes(ArrayLoadStoreData::array_load_store_data_size()));\n+    update_mdp_by_constant(mdp, in_bytes(ArrayLoadData::array_load_data_size()));\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":46,"deletions":11,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -321,2 +321,3 @@\n-  void profile_array(Register mdp, Register array, Register tmp);\n-  void profile_element(Register mdp, Register element, Register tmp);\n+  template <class ArrayData> void profile_array_type(Register mdp, Register array, Register tmp);\n+  void profile_multiple_element_types(Register mdp, Register element, Register tmp, Register tmp2);\n+  void profile_element_type(Register mdp, Register element, Register tmp);\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -820,1 +820,1 @@\n-  __ profile_array(r2, r0, r4);\n+  __ profile_array_type<ArrayLoadData>(r2, r0, r4);\n@@ -836,1 +836,1 @@\n-  __ profile_element(r2, r0, r4);\n+  __ profile_element_type(r2, r0, r4);\n@@ -1132,2 +1132,2 @@\n-  __ profile_array(r4, r3, r5);\n-  __ profile_element(r4, r0, r5);\n+  __ profile_array_type<ArrayStoreData>(r4, r3, r5);\n+  __ profile_multiple_element_types(r4, r0, r5, r6);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1846,1 +1846,1 @@\n-    record_klass_in_profile(receiver, mdp, reg2, true);\n+    record_klass_in_profile(receiver, mdp, reg2);\n@@ -1866,4 +1866,3 @@\n-void InterpreterMacroAssembler::record_klass_in_profile_helper(\n-                                        Register receiver, Register mdp,\n-                                        Register reg2, int start_row,\n-                                        Label& done, bool is_virtual_call) {\n+void InterpreterMacroAssembler::record_klass_in_profile_helper(Register receiver, Register mdp,\n+                                                               Register reg2, int start_row,\n+                                                               Label& done) {\n@@ -1973,3 +1972,1 @@\n-void InterpreterMacroAssembler::record_klass_in_profile(Register receiver,\n-                                                        Register mdp, Register reg2,\n-                                                        bool is_virtual_call) {\n+void InterpreterMacroAssembler::record_klass_in_profile(Register receiver, Register mdp, Register reg2) {\n@@ -1979,1 +1976,1 @@\n-  record_klass_in_profile_helper(receiver, mdp, reg2, 0, done, is_virtual_call);\n+  record_klass_in_profile_helper(receiver, mdp, reg2, 0, done);\n@@ -2056,1 +2053,1 @@\n-      record_klass_in_profile(klass, mdp, reg2, false);\n+      record_klass_in_profile(klass, mdp, reg2);\n@@ -2118,3 +2115,3 @@\n-void InterpreterMacroAssembler::profile_array(Register mdp,\n-                                              Register array,\n-                                              Register tmp) {\n+template <class ArrayData> void InterpreterMacroAssembler::profile_array_type(Register mdp,\n+                                                                              Register array,\n+                                                                              Register tmp) {\n@@ -2128,1 +2125,1 @@\n-    profile_obj_type(tmp, Address(mdp, in_bytes(ArrayLoadStoreData::array_offset())));\n+    profile_obj_type(tmp, Address(mdp, in_bytes(ArrayData::array_offset())));\n@@ -2133,1 +2130,1 @@\n-    set_mdp_flag_at(mdp, ArrayLoadStoreData::flat_array_byte_constant());\n+    set_mdp_flag_at(mdp, ArrayData::flat_array_byte_constant());\n@@ -2140,1 +2137,1 @@\n-    set_mdp_flag_at(mdp, ArrayLoadStoreData::null_free_array_byte_constant());\n+    set_mdp_flag_at(mdp, ArrayData::null_free_array_byte_constant());\n@@ -2148,3 +2145,39 @@\n-void InterpreterMacroAssembler::profile_element(Register mdp,\n-                                                Register element,\n-                                                Register tmp) {\n+template void InterpreterMacroAssembler::profile_array_type<ArrayLoadData>(Register mdp,\n+                                                                           Register array,\n+                                                                           Register tmp);\n+template void InterpreterMacroAssembler::profile_array_type<ArrayStoreData>(Register mdp,\n+                                                                            Register array,\n+                                                                            Register tmp);\n+\n+\n+void InterpreterMacroAssembler::profile_multiple_element_types(Register mdp, Register element, Register tmp, const Register tmp2) {\n+  if (ProfileInterpreter) {\n+    Label profile_continue;\n+\n+    \/\/ If no method data exists, go to profile_continue.\n+    test_method_data_pointer(mdp, profile_continue);\n+\n+    Label done, update;\n+    testptr(element, element);\n+    jccb(Assembler::notZero, update);\n+    set_mdp_flag_at(mdp, BitData::null_seen_byte_constant());\n+    jmp(done);\n+\n+    bind(update);\n+    load_klass(tmp, element, rscratch1);\n+\n+    \/\/ Record the object type.\n+    record_klass_in_profile(tmp, mdp, tmp2);\n+\n+    bind(done);\n+\n+    \/\/ The method data pointer needs to be updated.\n+    update_mdp_by_constant(mdp, in_bytes(ArrayStoreData::array_store_data_size()));\n+\n+    bind(profile_continue);\n+  }\n+}\n+\n+void InterpreterMacroAssembler::profile_element_type(Register mdp,\n+                                                     Register element,\n+                                                     Register tmp) {\n@@ -2158,1 +2191,1 @@\n-    profile_obj_type(tmp, Address(mdp, in_bytes(ArrayLoadStoreData::element_offset())));\n+    profile_obj_type(tmp, Address(mdp, in_bytes(ArrayLoadData::element_offset())));\n@@ -2161,1 +2194,1 @@\n-    update_mdp_by_constant(mdp, in_bytes(ArrayLoadStoreData::array_load_store_data_size()));\n+    update_mdp_by_constant(mdp, in_bytes(ArrayLoadData::array_load_data_size()));\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":54,"deletions":21,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -277,5 +277,2 @@\n-  void record_klass_in_profile(Register receiver, Register mdp,\n-                               Register reg2, bool is_virtual_call);\n-  void record_klass_in_profile_helper(Register receiver, Register mdp,\n-                                      Register reg2, int start_row,\n-                                      Label& done, bool is_virtual_call);\n+  void record_klass_in_profile(Register receiver, Register mdp, Register reg2);\n+  void record_klass_in_profile_helper(Register receiver, Register mdp, Register reg2, int start_row, Label &done);\n@@ -306,2 +303,4 @@\n-  void profile_array(Register mdp, Register array, Register tmp);\n-  void profile_element(Register mdp, Register element, Register tmp);\n+  template <class ArrayData> void profile_array_type(Register mdp, Register array, Register tmp);\n+\n+  void profile_multiple_element_types(Register mdp, Register element, Register tmp, const Register tmp2);\n+  void profile_element_type(Register mdp, Register element, Register tmp);\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.hpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -839,1 +839,1 @@\n-  __ profile_array(rbx, array, rcx);\n+  __ profile_array_type<ArrayLoadData>(rbx, array, rcx);\n@@ -861,1 +861,1 @@\n-  __ profile_element(rbx, rax, rcx);\n+  __ profile_element_type(rbx, rax, rcx);\n@@ -1160,2 +1160,2 @@\n-  __ profile_array(rdi, rdx, rbx);\n-  __ profile_element(rdi, rax, rbx);\n+  __ profile_array_type<ArrayStoreData>(rdi, rdx, rbx);\n+  __ profile_multiple_element_types(rdi, rax, rbx, rcx);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1946,3 +1946,8 @@\n-      ciMethodData* md = nullptr;\n-      ciArrayLoadStoreData* load_store = nullptr;\n-      profile_array_type(x, md, load_store);\n+      int bci = x->profiled_bci();\n+      ciMethodData* md = x->profiled_method()->method_data();\n+      assert(md != nullptr, \"Sanity\");\n+      ciProfileData* data = md->bci_to_data(bci);\n+      assert(data != nullptr && data->is_ArrayStoreData(), \"incorrect profiling entry\");\n+      ciArrayStoreData* store_data = (ciArrayStoreData*)data;\n+      profile_array_type(x, md, store_data);\n+      assert(store_data->is_ArrayStoreData(), \"incorrect profiling entry\");\n@@ -1950,1 +1955,1 @@\n-        profile_null_free_array(array, md, load_store);\n+        profile_null_free_array(array, md, store_data);\n@@ -1952,1 +1957,0 @@\n-      profile_element_type(x->value(), md, load_store);\n@@ -1958,1 +1962,1 @@\n-    array_store_check(value.result(), array.result(), store_check_info, nullptr, -1);\n+    array_store_check(value.result(), array.result(), store_check_info, x->profiled_method(), x->profiled_bci());\n@@ -2343,1 +2347,1 @@\n-  ciArrayLoadStoreData* load_store = nullptr;\n+  ciArrayLoadData* load_data = nullptr;\n@@ -2350,1 +2354,7 @@\n-      profile_array_type(x, md, load_store);\n+      int bci = x->profiled_bci();\n+      md = x->profiled_method()->method_data();\n+      assert(md != nullptr, \"Sanity\");\n+      ciProfileData* data = md->bci_to_data(bci);\n+      assert(data != nullptr && data->is_ArrayLoadData(), \"incorrect profiling entry\");\n+      load_data = (ciArrayLoadData*)data;\n+      profile_array_type(x, md, load_data);\n@@ -2386,1 +2396,1 @@\n-      profile_null_free_array(array, md, load_store);\n+      profile_null_free_array(array, md, load_data);\n@@ -2412,1 +2422,1 @@\n-    profile_element_type(element, md, load_store);\n+    profile_element_type(element, md, load_data);\n@@ -3028,1 +3038,1 @@\n-void LIRGenerator::profile_null_free_array(LIRItem array, ciMethodData* md, ciArrayLoadStoreData* load_store) {\n+template <class ArrayData> void LIRGenerator::profile_null_free_array(LIRItem array, ciMethodData* md, ArrayData* load_store) {\n@@ -3034,1 +3044,1 @@\n-  profile_flags(md, load_store, ArrayLoadStoreData::null_free_array_byte_constant(), lir_cond_equal);\n+  profile_flags(md, load_store, ArrayStoreData::null_free_array_byte_constant(), lir_cond_equal);\n@@ -3037,1 +3047,1 @@\n-void LIRGenerator::profile_array_type(AccessIndexed* x, ciMethodData*& md, ciArrayLoadStoreData*& load_store) {\n+template <class ArrayData> void LIRGenerator::profile_array_type(AccessIndexed* x, ciMethodData*& md, ArrayData*& load_store) {\n@@ -3039,6 +3049,0 @@\n-  int bci = x->profiled_bci();\n-  md = x->profiled_method()->method_data();\n-  assert(md != nullptr, \"Sanity\");\n-  ciProfileData* data = md->bci_to_data(bci);\n-  assert(data != nullptr && data->is_ArrayLoadStoreData(), \"incorrect profiling entry\");\n-  load_store = (ciArrayLoadStoreData*)data;\n@@ -3046,1 +3050,1 @@\n-  profile_type(md, md->byte_offset_of_slot(load_store, ArrayLoadStoreData::array_offset()), 0,\n+  profile_type(md, md->byte_offset_of_slot(load_store, ArrayData::array_offset()), 0,\n@@ -3050,1 +3054,1 @@\n-void LIRGenerator::profile_element_type(Value element, ciMethodData* md, ciArrayLoadStoreData* load_store) {\n+void LIRGenerator::profile_element_type(Value element, ciMethodData* md, ciArrayLoadData* load_data) {\n@@ -3052,1 +3056,1 @@\n-  assert(md != nullptr && load_store != nullptr, \"should have been initialized\");\n+  assert(md != nullptr && load_data != nullptr, \"should have been initialized\");\n@@ -3054,2 +3058,2 @@\n-  profile_type(md, md->byte_offset_of_slot(load_store, ArrayLoadStoreData::element_offset()), 0,\n-               load_store->element()->type(), element, mdp, false, nullptr, nullptr);\n+  profile_type(md, md->byte_offset_of_slot(load_data, ArrayLoadData::element_offset()), 0,\n+               load_data->element()->type(), element, mdp, false, nullptr, nullptr);\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":28,"deletions":24,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -498,3 +498,3 @@\n-  void profile_null_free_array(LIRItem array, ciMethodData* md, ciArrayLoadStoreData* load_store);\n-  void profile_array_type(AccessIndexed* x, ciMethodData*& md, ciArrayLoadStoreData*& load_store);\n-  void profile_element_type(Value element, ciMethodData* md, ciArrayLoadStoreData* load_store);\n+  template <class ArrayData> void profile_null_free_array(LIRItem array, ciMethodData* md, ArrayData* load_store);\n+  template <class ArrayData> void profile_array_type(AccessIndexed* x, ciMethodData*& md, ArrayData*& load_store);\n+  void profile_element_type(Value element, ciMethodData* md, ciArrayLoadData* load_store);\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -470,1 +470,1 @@\n-static void profile_flat_array(JavaThread* current) {\n+static void profile_flat_array(JavaThread* current, bool load) {\n@@ -483,3 +483,11 @@\n-    assert(data != nullptr && data->is_ArrayLoadStoreData(), \"incorrect profiling entry\");\n-    ArrayLoadStoreData* load_store = (ArrayLoadStoreData*)data;\n-    load_store->set_flat_array();\n+    assert(data != nullptr, \"incorrect profiling entry\");\n+    if (data->is_ArrayLoadData()) {\n+      assert(load, \"should be an array load\");\n+      ArrayLoadData* load_data = (ArrayLoadData*) data;\n+      load_data->set_flat_array();\n+    } else {\n+      assert(data->is_ArrayStoreData(), \"\");\n+      assert(!load, \"should be an array store\");\n+      ArrayStoreData* store_data = (ArrayStoreData*) data;\n+      store_data->set_flat_array();\n+    }\n@@ -491,1 +499,1 @@\n-  profile_flat_array(current);\n+  profile_flat_array(current, true);\n@@ -503,1 +511,1 @@\n-    profile_flat_array(current);\n+    profile_flat_array(current, false);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -666,8 +666,29 @@\n-    if (data != nullptr && data->is_ArrayLoadStoreData()) {\n-      ciArrayLoadStoreData* array_access = (ciArrayLoadStoreData*)data->as_ArrayLoadStoreData();\n-      array_type = array_access->array()->valid_type();\n-      element_type = array_access->element()->valid_type();\n-      element_ptr = array_access->element()->ptr_kind();\n-      flat_array = array_access->flat_array();\n-      null_free_array = array_access->null_free_array();\n-      return true;\n+    if (data != nullptr) {\n+      if (data->is_ArrayLoadData()) {\n+        ciArrayLoadData* array_access = (ciArrayLoadData*) data->as_ArrayLoadData();\n+        array_type = array_access->array()->valid_type();\n+        element_type = array_access->element()->valid_type();\n+        element_ptr = array_access->element()->ptr_kind();\n+        flat_array = array_access->flat_array();\n+        null_free_array = array_access->null_free_array();\n+        return true;\n+      } else if (data->is_ArrayStoreData()) {\n+        ciArrayStoreData* array_access = (ciArrayStoreData*) data->as_ArrayStoreData();\n+        array_type = array_access->array()->valid_type();\n+        flat_array = array_access->flat_array();\n+        null_free_array = array_access->null_free_array();\n+        ciCallProfile call_profile = call_profile_at_bci(bci);\n+        if (call_profile.morphism() == 1) {\n+          element_type = call_profile.receiver(0);\n+        } else {\n+          element_type = nullptr;\n+        }\n+        if (!array_access->null_seen()) {\n+          element_ptr = ProfileNeverNull;\n+        } else if (call_profile.count() == 0) {\n+          element_ptr = ProfileAlwaysNull;\n+        } else {\n+          element_ptr = ProfileMaybeNull;\n+        }\n+        return true;\n+      }\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":29,"deletions":8,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -359,2 +359,4 @@\n-  case DataLayout::array_load_store_data_tag:\n-    return new ciArrayLoadStoreData(data_layout);\n+  case DataLayout::array_store_data_tag:\n+    return new ciArrayStoreData(data_layout);\n+  case DataLayout::array_load_data_tag:\n+    return new ciArrayLoadData(data_layout);\n@@ -758,6 +760,11 @@\n-      } else if (pdata->is_ArrayLoadStoreData()) {\n-        ciArrayLoadStoreData* array_load_store_data = (ciArrayLoadStoreData*)pdata;\n-        dump_replay_data_type_helper(out, round, count, array_load_store_data, ciArrayLoadStoreData::array_offset(),\n-                                     array_load_store_data->array()->valid_type());\n-        dump_replay_data_type_helper(out, round, count, array_load_store_data, ciArrayLoadStoreData::element_offset(),\n-                                     array_load_store_data->element()->valid_type());\n+      } else if (pdata->is_ArrayStoreData()) {\n+        ciArrayStoreData* array_store_data = (ciArrayStoreData*)pdata;\n+        dump_replay_data_type_helper(out, round, count, array_store_data, ciArrayStoreData::array_offset(),\n+                                     array_store_data->array()->valid_type());\n+        dump_replay_data_receiver_type_helper<ciArrayStoreData>(out, round, count, array_store_data);\n+      } else if (pdata->is_ArrayLoadData()) {\n+        ciArrayLoadData* array_load_data = (ciArrayLoadData*)pdata;\n+        dump_replay_data_type_helper(out, round, count, array_load_data, ciArrayLoadData::array_offset(),\n+                                     array_load_data->array()->valid_type());\n+        dump_replay_data_type_helper(out, round, count, array_load_data, ciArrayLoadData::element_offset(),\n+                                     array_load_data->element()->valid_type());\n@@ -927,1 +934,11 @@\n-void ciArrayLoadStoreData::print_data_on(outputStream* st, const char* extra) const {\n+void ciArrayStoreData::print_data_on(outputStream* st, const char* extra) const {\n+  print_shared(st, \"ciArrayLoadStoreData\", extra);\n+  tab(st, true);\n+  st->print(\"array\");\n+  array()->print_data_on(st);\n+  tab(st, true);\n+  st->print(\"element\");\n+  print_receiver_data_on(st);\n+}\n+\n+void ciArrayLoadData::print_data_on(outputStream* st, const char* extra) const {\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.cpp","additions":26,"deletions":9,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -365,1 +365,4 @@\n-class ciArrayLoadStoreData : public ArrayLoadStoreData {\n+class ciArrayStoreData : public ArrayStoreData {\n+  \/\/ Fake multiple inheritance...  It's a ciReceiverTypeData also.\n+  ciReceiverTypeData* rtd_super() const { return (ciReceiverTypeData*) this; }\n+\n@@ -367,1 +370,1 @@\n-  ciArrayLoadStoreData(DataLayout* layout) : ArrayLoadStoreData(layout) {}\n+  ciArrayStoreData(DataLayout* layout) : ArrayStoreData(layout) {}\n@@ -369,2 +372,1 @@\n-  ciSingleTypeEntry* array() const { return (ciSingleTypeEntry*)ArrayLoadStoreData::array(); }\n-  ciSingleTypeEntry* element() const { return (ciSingleTypeEntry*)ArrayLoadStoreData::element(); }\n+  ciSingleTypeEntry* array() const { return (ciSingleTypeEntry*)ArrayStoreData::array(); }\n@@ -373,2 +375,2 @@\n-    array()->translate_type_data_from(data->as_ArrayLoadStoreData()->array());\n-    element()->translate_type_data_from(data->as_ArrayLoadStoreData()->element());\n+    array()->translate_type_data_from(data->as_ArrayStoreData()->array());\n+    rtd_super()->translate_receiver_data_from(data);\n@@ -377,0 +379,3 @@\n+  ciKlass* receiver(uint row) {\n+    return rtd_super()->receiver(row);\n+  }\n@@ -382,0 +387,18 @@\n+class ciArrayLoadData : public ArrayLoadData {\n+public:\n+  ciArrayLoadData(DataLayout* layout) : ArrayLoadData(layout) {}\n+\n+  ciSingleTypeEntry* array() const { return (ciSingleTypeEntry*)ArrayLoadData::array(); }\n+  ciSingleTypeEntry* element() const { return (ciSingleTypeEntry*)ArrayLoadData::element(); }\n+\n+  virtual void translate_from(const ProfileData* data) {\n+    array()->translate_type_data_from(data->as_ArrayLoadData()->array());\n+    element()->translate_type_data_from(data->as_ArrayLoadData()->element());\n+  }\n+\n+#ifndef PRODUCT\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n+#endif\n+};\n+\n+\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.hpp","additions":29,"deletions":6,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -640,1 +640,2 @@\n-  declare_constant(DataLayout::array_load_store_data_tag)                 \\\n+  declare_constant(DataLayout::array_store_data_tag)                      \\\n+  declare_constant(DataLayout::array_load_data_tag)                       \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -655,2 +655,17 @@\n-void ArrayLoadStoreData::print_data_on(outputStream* st, const char* extra) const {\n-  print_shared(st, \"ArrayLoadStore\", extra);\n+void ArrayStoreData::print_data_on(outputStream* st, const char* extra) const {\n+  print_shared(st, \"ArrayStore\", extra);\n+  st->cr();\n+  tab(st, true);\n+  st->print(\"array\");\n+  _array.print_data_on(st);\n+  tab(st, true);\n+  st->print(\"element\");\n+  if (null_seen()) {\n+    st->print(\" (null seen)\");\n+  }\n+  tab(st);\n+  print_receiver_data_on(st);\n+}\n+\n+void ArrayLoadData::print_data_on(outputStream* st, const char* extra) const {\n+  print_shared(st, \"ArrayLoad\", extra);\n@@ -703,0 +718,1 @@\n+    return ArrayLoadData::static_cell_count();\n@@ -704,1 +720,1 @@\n-    return ArrayLoadStoreData::static_cell_count();\n+    return ArrayStoreData::static_cell_count();\n@@ -1031,0 +1047,3 @@\n+    cell_count = ArrayLoadData::static_cell_count();\n+    tag = DataLayout::array_load_data_tag;\n+    break;\n@@ -1032,2 +1051,2 @@\n-    cell_count = ArrayLoadStoreData::static_cell_count();\n-    tag = DataLayout::array_load_store_data_tag;\n+    cell_count = ArrayStoreData::static_cell_count();\n+    tag = DataLayout::array_store_data_tag;\n@@ -1183,2 +1202,4 @@\n-  case DataLayout::array_load_store_data_tag:\n-    return ((new ArrayLoadStoreData(this))->cell_count());\n+  case DataLayout::array_store_data_tag:\n+    return ((new ArrayStoreData(this))->cell_count());\n+  case DataLayout::array_load_data_tag:\n+    return ((new ArrayLoadData(this))->cell_count());\n@@ -1221,2 +1242,4 @@\n-  case DataLayout::array_load_store_data_tag:\n-    return new ArrayLoadStoreData(this);\n+  case DataLayout::array_store_data_tag:\n+    return new ArrayStoreData(this);\n+  case DataLayout::array_load_data_tag:\n+    return new ArrayLoadData(this);\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":32,"deletions":9,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -133,1 +133,2 @@\n-    array_load_store_data_tag,\n+    array_store_data_tag,\n+    array_load_data_tag,\n@@ -266,0 +267,1 @@\n+class         ArrayStoreData;\n@@ -276,1 +278,1 @@\n-class   ArrayLoadStoreData;\n+class   ArrayLoadData;\n@@ -405,1 +407,2 @@\n-  virtual bool is_ArrayLoadStoreData() const { return false; }\n+  virtual bool is_ArrayStoreData() const { return false; }\n+  virtual bool is_ArrayLoadData() const { return false; }\n@@ -465,3 +468,7 @@\n-  ArrayLoadStoreData* as_ArrayLoadStoreData() const {\n-    assert(is_ArrayLoadStoreData(), \"wrong type\");\n-    return is_ArrayLoadStoreData() ? (ArrayLoadStoreData*)this : nullptr;\n+  ArrayStoreData* as_ArrayStoreData() const {\n+    assert(is_ArrayStoreData(), \"wrong type\");\n+    return is_ArrayStoreData() ? (ArrayStoreData*)this : nullptr;\n+  }\n+  ArrayLoadData* as_ArrayLoadData() const {\n+    assert(is_ArrayLoadData(), \"wrong type\");\n+    return is_ArrayLoadData() ? (ArrayLoadData*)this : nullptr;\n@@ -508,1 +515,1 @@\n-      null_seen_flag              = DataLayout::first_flag + 0\n+      null_seen_flag              = DataLayout::first_flag + 0,\n@@ -511,1 +518,1 @@\n-    , exception_seen_flag         = null_seen_flag + 1\n+      exception_seen_flag         = null_seen_flag + 1,\n@@ -513,0 +520,1 @@\n+      last_bit_data_flag\n@@ -533,1 +541,1 @@\n-  bool null_seen()     { return flag_at(null_seen_flag); }\n+  bool null_seen() const  { return flag_at(null_seen_flag); }\n@@ -1119,1 +1127,2 @@\n-           layout->tag() == DataLayout::virtual_call_type_data_tag, \"wrong type\");\n+           layout->tag() == DataLayout::virtual_call_type_data_tag ||\n+           layout->tag() == DataLayout::array_store_data_tag, \"wrong type\");\n@@ -1840,1 +1849,63 @@\n-class ArrayLoadStoreData : public ProfileData {\n+class ArrayStoreData : public ReceiverTypeData {\n+private:\n+  enum {\n+    flat_array_flag = BitData::last_bit_data_flag,\n+    null_free_array_flag = flat_array_flag + 1,\n+  };\n+\n+  SingleTypeEntry _array;\n+\n+public:\n+  ArrayStoreData(DataLayout* layout) :\n+    ReceiverTypeData(layout),\n+    _array(ReceiverTypeData::static_cell_count()) {\n+    assert(layout->tag() == DataLayout::array_store_data_tag, \"wrong type\");\n+    _array.set_profile_data(this);\n+  }\n+\n+  const SingleTypeEntry* array() const {\n+    return &_array;\n+  }\n+\n+  virtual bool is_ArrayStoreData() const { return true; }\n+\n+  static int static_cell_count() {\n+    return ReceiverTypeData::static_cell_count() + SingleTypeEntry::static_cell_count();\n+  }\n+\n+  virtual int cell_count() const {\n+    return static_cell_count();\n+  }\n+\n+  void set_flat_array() { set_flag_at(flat_array_flag); }\n+  bool flat_array() const { return flag_at(flat_array_flag); }\n+\n+  void set_null_free_array() { set_flag_at(null_free_array_flag); }\n+  bool null_free_array() const { return flag_at(null_free_array_flag); }\n+\n+  \/\/ Code generation support\n+  static int flat_array_byte_constant() {\n+    return flag_number_to_constant(flat_array_flag);\n+  }\n+\n+  static int null_free_array_byte_constant() {\n+    return flag_number_to_constant(null_free_array_flag);\n+  }\n+\n+  static ByteSize array_offset() {\n+    return cell_offset(ReceiverTypeData::static_cell_count());\n+  }\n+\n+  virtual void clean_weak_klass_links(bool always_clean) {\n+    ReceiverTypeData::clean_weak_klass_links(always_clean);\n+    _array.clean_weak_klass_links(always_clean);\n+  }\n+\n+  static ByteSize array_store_data_size() {\n+    return cell_offset(static_cell_count());\n+  }\n+\n+  virtual void print_data_on(outputStream* st, const char* extra = nullptr) const;\n+};\n+\n+class ArrayLoadData : public ProfileData {\n@@ -1851,1 +1922,1 @@\n-  ArrayLoadStoreData(DataLayout* layout) :\n+  ArrayLoadData(DataLayout* layout) :\n@@ -1855,1 +1926,1 @@\n-    assert(layout->tag() == DataLayout::array_load_store_data_tag, \"wrong type\");\n+    assert(layout->tag() == DataLayout::array_load_data_tag, \"wrong type\");\n@@ -1868,1 +1939,1 @@\n-  virtual bool is_ArrayLoadStoreData() const { return true; }\n+  virtual bool is_ArrayLoadData() const { return true; }\n@@ -1906,1 +1977,1 @@\n-  static ByteSize array_load_store_data_size() {\n+  static ByteSize array_load_data_size() {\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":86,"deletions":15,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -3147,3 +3147,0 @@\n-    if (java_bc() == Bytecodes::_aastore) {\n-      return ((ciArrayLoadStoreData*)data->as_ArrayLoadStoreData())->element()->ptr_kind() == ProfileNeverNull;\n-    }\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -108,1 +108,2 @@\n-            new UnknownProfileData(this, config.dataLayoutArrayLoadStoreDataTag),\n+            new UnknownProfileData(this, config.dataLayoutArrayStoreDataTag),\n+            new UnknownProfileData(this, config.dataLayoutArrayLoadDataTag),\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotMethodData.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -305,1 +305,2 @@\n-    final int dataLayoutArrayLoadStoreDataTag = getConstant(\"DataLayout::array_load_store_data_tag\", Integer.class);\n+    final int dataLayoutArrayLoadDataTag = getConstant(\"DataLayout::array_load_data_tag\", Integer.class);\n+    final int dataLayoutArrayStoreDataTag = getConstant(\"DataLayout::array_store_data_tag\", Integer.class);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotVMConfig.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -76,2 +76,0 @@\n-compiler\/c2\/irTests\/ProfileAtTypeCheck.java 8320296 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}