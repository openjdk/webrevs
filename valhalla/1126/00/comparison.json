{"files":[{"patch":"@@ -206,1 +206,1 @@\n-     * source modifier {@link Modifier#IDENTITY identity}, with a mask\n+     * modifier {@link Modifier#IDENTITY identity}, with a mask\n@@ -371,0 +371,24 @@\n+    \/**\n+     * The access flag {@code ACC_STRICT}, with a mask\n+     * value of <code>{@value \"0x%04x\" Modifier#STRICT}<\/code>.\n+     * @jvms 4.5 Fields\n+     *\n+     * @since Valhalla\n+     *\/\n+    @PreviewFeature(feature = PreviewFeature.Feature.VALUE_OBJECTS, reflective=true)\n+    STRICT_FIELD(Modifier.STRICT, false,\n+            PreviewFeatures.isEnabled() ? Location.SET_FIELD : Location.EMPTY_SET,\n+            new Function<ClassFileFormatVersion, Set<Location>>() {\n+                @Override\n+                public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                    return (cffv.compareTo(ClassFileFormatVersion.RELEASE_22) >= 0\n+                            && PreviewFeatures.isEnabled())\n+                            ? Location.SET_FIELD : Location.EMPTY_SET;\n+                }\n+            }) {\n+        @Override\n+        public String toString() {\n+            return \"STRICT\";\n+        }\n+    },\n+\n@@ -705,1 +729,1 @@\n-                                       TRANSIENT, SYNTHETIC, ENUM, STRICT)),\n+                                       TRANSIENT, SYNTHETIC, ENUM, STRICT_FIELD)),\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -393,1 +393,1 @@\n-     * @see AccessFlag#STRICT\n+     * @see AccessFlag#STRICT and AccessFlag#STRICT_FIELD\n@@ -466,1 +466,1 @@\n-        Modifier.VOLATILE;\n+        Modifier.VOLATILE       | Modifier.STRICT;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -426,1 +426,1 @@\n-                    flags.flags().stream().map(fl -> \"ACC_\" + fl.name()).toList(),\n+                    flags.flags().stream().map(fl -> \"ACC_\" + fl.toString()).toList(),\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/ClassWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @enablePreview\n","filename":"test\/langtools\/tools\/javac\/patterns\/BreakAndLoops.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}