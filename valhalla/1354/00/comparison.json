{"files":[{"patch":"@@ -3072,3 +3072,6 @@\n-  {\n-    jint result = (jint) mirror->identity_hash();\n-    *hash_code_ptr = result;\n+  if (mirror->is_inline_type()) {\n+    \/\/ For inline types, use the klass as a hash code.\n+    \/\/ TBD to improve this (see also JvmtiTagMapKey::get_hash for similar case).\n+    *hash_code_ptr = (jint)((int64_t)mirror->klass() >> 3);\n+  } else {\n+    *hash_code_ptr = (jint)mirror->identity_hash();\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8348743\n+ * @summary Tests ValueGetObjectHashCodeTest functionality for value objects.\n+ * @requires vm.jvmti\n+ * @modules java.base\/jdk.internal.vm.annotation\n+ * @enablePreview\n+ * @run main\/othervm\/native -agentlib:ValueGetObjectHashCodeTest\n+ *                          -XX:+PrintInlineLayout\n+ *                          ValueGetObjectHashCodeTest\n+ *\/\n+\n+import jdk.internal.vm.annotation.ImplicitlyConstructible;\n+import jdk.internal.vm.annotation.NullRestricted;\n+\n+public class ValueGetObjectHashCodeTest {\n+\n+    @ImplicitlyConstructible\n+    private static value class ValueClass {\n+        public int f1;\n+        public ValueClass(int v1) { f1 = v1; }\n+        public String toString() {\n+            return \"value(\" + String.valueOf(f1) + \")\";\n+        }\n+    }\n+\n+    @ImplicitlyConstructible\n+    private static value class ValueHolder {\n+        public ValueClass f1;\n+        @NullRestricted\n+        public ValueClass f2;\n+\n+        public ValueHolder(int v1, int v2) {\n+            f1 = new ValueClass(v1);\n+            f2 = new ValueClass(v2);\n+        }\n+        public String toString() {\n+            return \"holder{\" + f1 + \", \" + f2 + \"}\";\n+        }\n+    }\n+\n+    private static native int getHash0(Object object);\n+\n+    private static int getHash(Object object) {\n+        int hash = getHash0(object);\n+        System.out.println(\"hash (\" + object + \"): \" + hash);\n+        return hash;\n+    }\n+\n+    public static void main(String[] args) {\n+        System.loadLibrary(\"ValueGetObjectHashCodeTest\");\n+        ValueClass v1 = new ValueClass(8);\n+        ValueHolder h1 = new ValueHolder(8, 8);\n+\n+        \/\/ expect the same hash code for equal value objects\n+        int hash1 = getHash(v1);\n+        int hash2 = getHash(h1.f1);\n+        int hash3 = getHash(h1.f2);\n+\n+        if (hash1 != hash2 || hash2 != hash3) {\n+            throw new RuntimeException(\"Hash should be equal\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/valhalla\/GetObjectHashCode\/ValueGetObjectHashCodeTest.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <jvmti.h>\n+#include <cstdlib>\n+#include <cstring>\n+\n+namespace {\n+jvmtiEnv *jvmti = nullptr;\n+\n+void checkJvmti(int code, const char* message) {\n+  if (code != JVMTI_ERROR_NONE) {\n+    printf(\"Error %s: %d\\n\", message, code);\n+    abort();\n+  }\n+}\n+\n+}\n+\n+extern \"C\" JNIEXPORT jint JNICALL Java_ValueGetObjectHashCodeTest_getHash0(JNIEnv* jni_env, jclass clazz, jobject object) {\n+  jint hash = 0;\n+  jvmtiError err = jvmti->GetObjectHashCode(object, &hash);\n+  checkJvmti(err, \"GetObjectHashCode failed\");\n+  return hash;\n+}\n+\n+extern \"C\" JNIEXPORT jint JNICALL Agent_OnLoad(JavaVM *vm, char *options, void *reserved) {\n+  if (vm->GetEnv(reinterpret_cast<void **>(&jvmti), JVMTI_VERSION) != JNI_OK || !jvmti) {\n+    printf(\"Could not initialize JVMTI\\n\");\n+    abort();\n+  }\n+  return JVMTI_ERROR_NONE;\n+}\n+\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/valhalla\/GetObjectHashCode\/libValueGetObjectHashCodeTest.cpp","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"}]}