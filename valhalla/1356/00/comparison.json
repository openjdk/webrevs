{"files":[{"patch":"@@ -1382,1 +1382,1 @@\n-    if (top_dest->is_flat()) {\n+    if (top_dest != nullptr && top_dest->is_flat()) {\n@@ -1455,8 +1455,7 @@\n-    Node* mem = generate_arraycopy(ac, nullptr, &ctrl, merge_mem, &io,\n-                                   TypeRawPtr::BOTTOM, T_CONFLICT,\n-                                   src, src_offset, dest, dest_offset, length,\n-                                   nullptr,\n-                                   \/\/ If a  negative length guard was generated for the ArrayCopyNode,\n-                                   \/\/ the length of the array can never be negative.\n-                                   false, ac->has_negative_length_guard());\n-    return;\n+    generate_arraycopy(ac, nullptr, &ctrl, merge_mem, &io,\n+                       TypeRawPtr::BOTTOM, T_CONFLICT,\n+                       src, src_offset, dest, dest_offset, length,\n+                       nullptr,\n+                       \/\/ If a  negative length guard was generated for the ArrayCopyNode,\n+                       \/\/ the length of the array can never be negative.\n+                       false, ac->has_negative_length_guard());\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -46,0 +46,4 @@\n+ * @run main\/othervm -Xbatch -XX:-UseTypeProfile -XX:-ReduceInitialCardMarks\n+ *                   -XX:CompileCommand=compileonly,compiler.arraycopy.TestObjectArrayClone::testClone*\n+ *                   -XX:CompileCommand=compileonly,jdk.internal.reflect.GeneratedMethodAccessor*::invoke\n+ *                   compiler.arraycopy.TestObjectArrayClone\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestObjectArrayClone.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}