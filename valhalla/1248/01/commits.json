[{"commit":{"message":"Merge branch 'lworld' into 8340409-simple-value-deserialize"},"files":[],"sha":"df2b4ef8eeb9e70e6425b764426fb59798707e32"},{"commit":{"message":"Merge branch 'lworld' into 8340409-simple-value-deserialize"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Float.java"}],"sha":"b0aa17fd33fa8aaee4dc3ad608a39af4fdb3e766"},{"commit":{"message":"8340409: [lworld] Simple serialization and deserialization of core migrated classes\n\nSerialization and deerialization of value classes.\nFor java.base value classes being migrated from identity classes:\n  - Must be annotated with jdk.internal.MigratedValueClass (in tests too)\n  - Must have a constructor or static factory method:\n    - annotated with jdk.internal.value.DeserializeConstrucctor\n    - constructor parameters must match order and types of serializable fields of the class\n  - Value class must not have superclass with fields; only Object or abstract w\/o fields\n  - Uses same technique as for Records to extract and concat values from stream to invoke constructor\n  - Migrated value classes are serialized using the same format\/fields as the identity class\n\nNon-migrated value classes throw InvalidClassException\n\nAlong the way, refactored code to break out different modes of deserialization:\nfull custom deserialization with custom data, default deserialization only,\nexternalizable, no local class, record, and then added mode to deserialize a value class.\n\nUpdates to value class tests and added a combo test to check many combinations\nof value and identity classes with different parameters."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/InvalidClassException.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamClass.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamField.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Boolean.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Byte.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Character.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Float.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Number.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Short.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/value\/DeserializeConstructor.java"},{"filename":"test\/jdk\/java\/io\/Serializable\/valueObjects\/SerializeAllValueClasses.java"},{"filename":"test\/jdk\/java\/io\/Serializable\/valueObjects\/SerializedObjectCombo.java"},{"filename":"test\/jdk\/java\/io\/Serializable\/valueObjects\/SimpleValueGraphs.java"},{"filename":"test\/jdk\/java\/io\/Serializable\/valueObjects\/ValueSerialization.java"},{"filename":"test\/jdk\/java\/io\/Serializable\/valueObjects\/ValueSerializationTest.java"}],"sha":"0efb9cc0d106fefa6d77239dea10e67fa0b69d7a"}]