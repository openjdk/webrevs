{"files":[{"patch":"@@ -6221,1 +6221,1 @@\n-            } else {\n+          } else {\n@@ -6232,1 +6232,3 @@\n-          \/\/ Just poking the system dictionary to see if the class has already be loaded\n+          \/\/ Just poking the system dictionary to see if the class has already be loaded. Looking for migrated classes\n+          \/\/ used when --enable-preview when jdk isn't compiled with --enable-preview so doesn't include LoadableDescriptors.\n+          \/\/ This is temporary.\n@@ -6237,0 +6239,3 @@\n+            log_info(class, preload)(\"Preloading of class %s during loading of class %s \"\n+                                     \"(cause: field type not in LoadableDescriptors attribute) succeeded\",\n+                                     name->as_C_string(), _class_name->as_C_string());\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -64,1 +64,4 @@\n-        checkFor(pb, \"[info][class,preload] Preloading of class java\/time\/LocalDate during loading of shared class java\/time\/LocalDateTime (cause: field type in LoadableDescriptors attribute) succeeded\");\n+        \/\/ Class java\/time\/LocalDate is already preloaded, so the LoadableDescriptor attribute does not trigger it\n+        \/\/ to be loaded from the shared archive.\n+        \/\/ checkFor(pb, \"[info][class,preload] Preloading of class java\/time\/LocalDate during loading of shared class java\/time\/LocalDateTime (cause: field type in LoadableDescriptors attribute) succeeded\");\n+        checkFor(pb, \"[info][class,preload] Preloading of class java\/time\/LocalDateTime during linking of class PreloadShared (cause: LoadableDescriptors attribute) succeeded\");\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ValuePreloadTest.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import java.time.Duration;\n@@ -64,1 +63,1 @@\n-    private static final String CLASS_TO_BREAK = \"java.time.Duration\";\n+    private static final String CLASS_TO_BREAK = \"java.util.Date\";\n@@ -94,1 +93,1 @@\n-                var classTransform = ClassTransform.transformingMethods(mm -> mm.methodName().stringValue().equals(\"getSeconds\"), methodTransform);\n+                var classTransform = ClassTransform.transformingMethods(mm -> mm.methodName().stringValue().equals(\"parse\"), methodTransform);\n@@ -167,1 +166,2 @@\n-                System.out.println(\"1 hour is \" + Duration.ofHours(1).getSeconds() + \" seconds\");\n+                Class<?> cls = Class.forName(CLASS_TO_BREAK);\n+                System.out.println(\"class loaded\" + cls);\n","filename":"test\/hotspot\/jtreg\/runtime\/verifier\/CFLH\/TestVerify.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}