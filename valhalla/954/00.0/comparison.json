{"files":[{"patch":"@@ -368,1 +368,3 @@\n-  *((intptr_t**)addr_at(interpreter_frame_extended_sp_offset)) = sp;\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized extended_sp\n+  ptr_at_put(interpreter_frame_extended_sp_offset, (sp - fp()));\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -89,0 +89,1 @@\n+    lea(rscratch1, Address(rfp, rscratch1, Address::lsl(LogBytesPerWord)));\n@@ -101,0 +102,1 @@\n+    lea(rscratch1, Address(rfp, rscratch1, Address::lsl(LogBytesPerWord)));\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -822,1 +822,2 @@\n-  __ mov(rscratch1, sp);\n+  __ sub(rscratch1, sp, rfp);\n+  __ asr(rscratch1, rscratch1, Interpreter::logStackElementSize);\n@@ -890,0 +891,2 @@\n+    __ sub(rscratch2, rscratch1, rfp);\n+    __ asr(rscratch2, rscratch2, Interpreter::logStackElementSize);\n@@ -891,1 +894,1 @@\n-    __ stp(r10, rscratch1, Address(sp, 4 * wordSize));\n+    __ stp(r10, rscratch2, Address(sp, 4 * wordSize));\n@@ -898,1 +901,3 @@\n-    __ stp(r10, rscratch1, Address(sp, 4 * wordSize));\n+    __ sub(rscratch2, rscratch1, rfp);\n+    __ asr(rscratch2, rscratch2, Interpreter::logStackElementSize);\n+    __ stp(r10, rscratch2, Address(sp, 4 * wordSize));\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -4197,1 +4197,2 @@\n-    __ mov(rscratch1, sp);\n+    __ sub(rscratch1, sp, rfp);\n+    __ asr(rscratch1, rscratch1, Interpreter::logStackElementSize);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2228,1 +2228,1 @@\n-    __ jcc (acond, skip);\n+    __ jccb(acond, skip);\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -368,1 +368,1 @@\n-                 int vector_len, KRegister ktmp, Register rscratch = noreg);\n+                 int vector_len, KRegister ktmp, XMMRegister ones);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1257,2 +1257,12 @@\n-    Flag_intel_jcc_erratum = Node::_last_flag << 1,\n-    _last_flag             = Flag_intel_jcc_erratum\n+    Flag_intel_jcc_erratum    = Node::_last_flag << 1,\n+    Flag_sets_carry_flag      = Node::_last_flag << 2,\n+    Flag_sets_parity_flag     = Node::_last_flag << 3,\n+    Flag_sets_zero_flag       = Node::_last_flag << 4,\n+    Flag_sets_overflow_flag   = Node::_last_flag << 5,\n+    Flag_sets_sign_flag       = Node::_last_flag << 6,\n+    Flag_clears_carry_flag    = Node::_last_flag << 7,\n+    Flag_clears_parity_flag   = Node::_last_flag << 8,\n+    Flag_clears_zero_flag     = Node::_last_flag << 9,\n+    Flag_clears_overflow_flag = Node::_last_flag << 10,\n+    Flag_clears_sign_flag     = Node::_last_flag << 11,\n+    _last_flag                = Flag_clears_sign_flag\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -7686,1 +7686,1 @@\n-\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -7698,0 +7698,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -7710,0 +7711,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -7723,0 +7725,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -7736,0 +7739,2 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n+\n@@ -7856,0 +7861,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -7868,0 +7874,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -7880,0 +7887,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -7893,0 +7901,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -7906,0 +7915,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -8026,0 +8036,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -8038,0 +8049,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -8591,0 +8603,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -8603,0 +8616,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -8616,0 +8630,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -8629,0 +8644,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -8641,0 +8657,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -8654,0 +8671,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_carry_flag, PD::Flag_sets_parity_flag);\n@@ -8680,0 +8698,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag);\n@@ -8692,0 +8711,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag);\n@@ -8704,0 +8724,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag);\n@@ -8716,0 +8737,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag);\n@@ -8728,0 +8750,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag);\n@@ -8740,0 +8763,1 @@\n+  flag(PD::Flag_sets_overflow_flag, PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag);\n@@ -9221,0 +9245,1 @@\n+\n@@ -9875,0 +9900,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -9951,0 +9977,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -9964,0 +9991,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -9978,0 +10006,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -9991,0 +10020,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10005,0 +10035,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10019,0 +10050,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10033,0 +10065,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10046,0 +10079,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10059,0 +10093,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10074,0 +10109,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_clears_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10089,0 +10125,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_clears_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10104,0 +10141,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10119,0 +10157,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10136,0 +10175,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10149,0 +10189,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10162,0 +10203,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10176,0 +10218,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10189,0 +10232,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10203,0 +10247,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10218,0 +10263,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10242,0 +10288,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10255,0 +10302,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10269,0 +10317,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10282,0 +10331,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10296,0 +10346,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10314,0 +10365,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10353,0 +10405,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10366,0 +10419,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10380,0 +10434,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10394,0 +10449,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10425,0 +10481,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10439,0 +10496,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10452,0 +10510,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10465,0 +10524,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10480,0 +10540,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_clears_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10495,0 +10556,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_clears_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10510,0 +10572,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10525,0 +10588,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_clears_overflow_flag);\n@@ -10542,0 +10606,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10554,0 +10619,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10568,0 +10634,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10581,0 +10648,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10595,0 +10663,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10609,0 +10678,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10641,0 +10711,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10665,0 +10736,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10678,0 +10750,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10692,0 +10765,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -10706,0 +10780,1 @@\n+  flag(PD::Flag_sets_sign_flag, PD::Flag_sets_zero_flag, PD::Flag_sets_parity_flag, PD::Flag_clears_overflow_flag, PD::Flag_clears_carry_flag);\n@@ -14128,0 +14203,18 @@\n+\/\/ These peephole rules matches instructions which set flags and are followed by a testI\/L_reg\n+\/\/ The test instruction is redudanent in case the downstream instuctions (like JCC or CMOV) only use flags that are already set by the previous instruction\n+\n+\/\/int variant\n+peephole\n+%{\n+  peepmatch (testI_reg);\n+  peepprocedure (test_may_remove);\n+%}\n+\n+\/\/long variant\n+peephole\n+%{\n+  peepmatch (testL_reg);\n+  peepprocedure (test_may_remove);\n+%}\n+\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":94,"deletions":1,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+      _flag                 = nullptr;\n@@ -89,0 +90,1 @@\n+      _flag                  = instr->_flag;\n@@ -1897,0 +1899,28 @@\n+\/\/---------------------------------Flag----------------------------------------\n+Flag::Flag(const char *name) : _name(name), _next(nullptr) {\n+  _ftype = Form::FLG;\n+}\n+\n+Flag::~Flag() {\n+}\n+\n+void Flag::append_flag(Flag *next_flag) {\n+  if( _next == nullptr ) {\n+    _next = next_flag;\n+  } else {\n+    _next->append_flag( next_flag );\n+  }\n+}\n+\n+Flag* Flag::next() {\n+  return _next;\n+}\n+\n+void Flag::dump() {\n+  output(stderr);\n+}\n+\n+void Flag::output(FILE *fp) {          \/\/ Write info to output files\n+  fprintf(fp,\"Flag: %s\\n\", (_name?_name:\"\"));\n+}\n+\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1333,2 +1333,6 @@\n-      \/\/ Reserve at any address, but leave it up to the platform to choose a good one.\n-      total_space_rs = Metaspace::reserve_address_space_for_compressed_classes(total_range_size);\n+      \/\/ We did not manage to reserve at the preferred address, or were instructed to relocate. In that\n+      \/\/ case we reserve whereever possible, but the start address needs to be encodable as narrow Klass\n+      \/\/ encoding base since the archived heap objects contain nKlass IDs precalculated toward the start\n+      \/\/ of the shared Metaspace. That prevents us from using zero-based encoding and therefore we won't\n+      \/\/ try allocating in low-address regions.\n+      total_space_rs = Metaspace::reserve_address_space_for_compressed_classes(total_range_size, false \/* try_in_low_address_ranges *\/);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2206,1 +2206,8 @@\n-      failure_reason = compile_state.failure_reason();\n+      if (env.init_error() != JNI_OK) {\n+        failure_reason = os::strdup(err_msg(\"Error attaching to libjvmci (err: %d)\", env.init_error()), mtJVMCI);\n+        bool reason_on_C_heap = true;\n+        \/\/ In case of JNI_ENOMEM, there's a good chance a subsequent attempt to create libjvmci or attach to it\n+        \/\/ might succeed. Other errors most likely indicate a non-recoverable error in the JVMCI runtime.\n+        bool retryable = env.init_error() == JNI_ENOMEM;\n+        compile_state.set_failure(retryable, failure_reason, reason_on_C_heap);\n+      }\n@@ -2665,2 +2672,2 @@\n-  uint nmethods_size = CompileBroker::_sum_nmethod_code_size;\n-  uint nmethods_code_size = CompileBroker::_sum_nmethod_size;\n+  uint nmethods_code_size = CompileBroker::_sum_nmethod_code_size;\n+  uint nmethods_size = CompileBroker::_sum_nmethod_size;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -182,2 +182,1 @@\n-  uint queue_size;\n-  queue_size = claimed_stack_depth()->max_elems();\n+  uint queue_size = claimed_stack_depth()->max_elems();\n@@ -189,2 +188,1 @@\n-    _target_stack_size = (uint) MIN2((uint) GCDrainStackTargetSize,\n-                                     (uint) (queue_size \/ 4));\n+    _target_stack_size = MIN2(GCDrainStackTargetSize, (queue_size \/ 4));\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -737,1 +737,1 @@\n-              if (!wq.member(u) && !u->as_Proj()->is_uncommon_trap_proj(Deoptimization::Reason_none)) {\n+              if (!wq.member(u) && !u->as_Proj()->is_uncommon_trap_proj()) {\n@@ -746,1 +746,1 @@\n-        if (c->as_Proj()->is_uncommon_trap_if_pattern(Deoptimization::Reason_none) != nullptr) {\n+        if (c->as_Proj()->is_uncommon_trap_if_pattern() != nullptr) {\n@@ -1140,1 +1140,1 @@\n-            u->in(0)->as_Proj()->is_uncommon_trap_if_pattern(Deoptimization::Reason_none) &&\n+            u->in(0)->as_Proj()->is_uncommon_trap_if_pattern() &&\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-  JNI_JVMCIENV(JVMCI::compilation_tick(thread), env);\n+  JVMCIENV_FROM_JNI(JVMCI::compilation_tick(thread), env);\n@@ -2439,6 +2439,3 @@\n-    bool jni_enomem_is_fatal = false;\n-    JVMCIEnv __peer_jvmci_env__(thread, false, jni_enomem_is_fatal, __FILE__, __LINE__);\n-    JVMCIEnv* peerEnv = &__peer_jvmci_env__;\n-    if (peerEnv->has_jni_enomem()) {\n-      JVMCI_THROW_MSG_0(OutOfMemoryError, \"JNI_ENOMEM creating or attaching to libjvmci\");\n-    }\n+    PEER_JVMCIENV_FROM_THREAD(THREAD, false);\n+    PEER_JVMCIENV->check_init(JVMCI_CHECK_NULL);\n+\n@@ -2447,2 +2444,2 @@\n-    if (peerEnv->has_pending_exception()) {\n-      peerEnv->describe_pending_exception(tty);\n+    if (PEER_JVMCIENV->has_pending_exception()) {\n+      PEER_JVMCIENV->describe_pending_exception(tty);\n@@ -2607,6 +2604,2 @@\n-      bool jni_enomem_is_fatal = false;\n-      JVMCIEnv __peer_jvmci_env__(thread, false, jni_enomem_is_fatal, __FILE__, __LINE__);\n-      JVMCIEnv* peerJVMCIEnv = &__peer_jvmci_env__;\n-      if (peerJVMCIEnv->has_jni_enomem()) {\n-        JVMCI_THROW_MSG_0(OutOfMemoryError, \"JNI_ENOMEM creating or attaching to libjvmci\");\n-      }\n+      PEER_JVMCIENV_FROM_THREAD(THREAD, false);\n+      PEER_JVMCIENV->check_init(JVMCI_CHECK_0);\n@@ -2615,3 +2608,3 @@\n-      JVMCIObject receiver = runtime->get_HotSpotJVMCIRuntime(peerJVMCIEnv);\n-      if (peerJVMCIEnv->has_pending_exception()) {\n-        peerJVMCIEnv->describe_pending_exception(tty);\n+      JVMCIObject receiver = runtime->get_HotSpotJVMCIRuntime(PEER_JVMCIENV);\n+      if (PEER_JVMCIENV->has_pending_exception()) {\n+        PEER_JVMCIENV->describe_pending_exception(tty);\n@@ -2707,7 +2700,2 @@\n-  bool jni_enomem_is_fatal = false;\n-  JVMCIEnv __peer_jvmci_env__(thread, !JVMCIENV->is_hotspot(), jni_enomem_is_fatal, __FILE__, __LINE__);\n-  JVMCIEnv* peerEnv = &__peer_jvmci_env__;\n-  JVMCIEnv* thisEnv = JVMCIENV;\n-  if (peerEnv->has_jni_enomem()) {\n-      JVMCI_THROW_MSG_0(OutOfMemoryError, \"JNI_ENOMEM creating or attaching to libjvmci\");\n-  }\n+  PEER_JVMCIENV_FROM_THREAD(THREAD, !JVMCIENV->is_hotspot());\n+  PEER_JVMCIENV->check_init(JVMCI_CHECK_0);\n@@ -2715,0 +2703,1 @@\n+  JVMCIEnv* thisEnv = JVMCIENV;\n@@ -2719,1 +2708,1 @@\n-    result = peerEnv->get_jvmci_method(method, JVMCI_CHECK_0);\n+    result = PEER_JVMCIENV->get_jvmci_method(method, JVMCI_CHECK_0);\n@@ -2724,1 +2713,1 @@\n-    result = peerEnv->get_jvmci_type(klass_handle, JVMCI_CHECK_0);\n+    result = PEER_JVMCIENV->get_jvmci_type(klass_handle, JVMCI_CHECK_0);\n@@ -2727,1 +2716,1 @@\n-    result = peerEnv->get_jvmci_primitive_type(type);\n+    result = PEER_JVMCIENV->get_jvmci_primitive_type(type);\n@@ -2731,1 +2720,1 @@\n-    result = peerEnv->get_object_constant(constant());\n+    result = PEER_JVMCIENV->get_object_constant(constant());\n@@ -2733,1 +2722,1 @@\n-    if (peerEnv->is_hotspot()) {\n+    if (PEER_JVMCIENV->is_hotspot()) {\n@@ -2756,1 +2745,1 @@\n-      result = peerEnv->new_HotSpotNmethod(mh, cstring, isDefault, compileIdSnapshot, JVMCI_CHECK_0);\n+      result = PEER_JVMCIENV->new_HotSpotNmethod(mh, cstring, isDefault, compileIdSnapshot, JVMCI_CHECK_0);\n@@ -2764,1 +2753,1 @@\n-        peerEnv->initialize_installed_code(result, nm, JVMCI_CHECK_0);\n+        PEER_JVMCIENV->initialize_installed_code(result, nm, JVMCI_CHECK_0);\n@@ -2766,1 +2755,1 @@\n-        if (peerEnv->is_hotspot()) {\n+        if (PEER_JVMCIENV->is_hotspot()) {\n@@ -2784,1 +2773,1 @@\n-    peerEnv->call_HotSpotJVMCIRuntime_postTranslation(result, JVMCI_CHECK_0);\n+    PEER_JVMCIENV->call_HotSpotJVMCIRuntime_postTranslation(result, JVMCI_CHECK_0);\n@@ -2787,1 +2776,1 @@\n-  if (peerEnv->transfer_pending_exception(thread, thisEnv)) {\n+  if (PEER_JVMCIENV->transfer_pending_exception(thread, thisEnv)) {\n@@ -2790,1 +2779,1 @@\n-  return (jlong) peerEnv->make_global(result).as_jobject();\n+  return (jlong) PEER_JVMCIENV->make_global(result).as_jobject();\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":25,"deletions":36,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -368,1 +368,1 @@\n-          \"4=all details printed. \"                                         \\\n+          \"5=all details printed. \"                                         \\\n@@ -371,1 +371,1 @@\n-          range(-1, 4)                                                      \\\n+          range(-1, 5)                                                      \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -451,1 +451,1 @@\n-Node* PhiNode::try_clean_mem_phi(PhaseGVN *phase) {\n+void RegionNode::try_clean_mem_phis(PhaseIterGVN* igvn) {\n@@ -468,20 +468,12 @@\n-  \/\/ code below replaces the Phi with the MergeMem so that the Region\n-  \/\/ is simplified.\n-\n-  if (type() == Type::MEMORY && is_diamond_phi(true)) {\n-    MergeMemNode* m = nullptr;\n-    assert(req() == 3, \"same as region\");\n-    Node* r = in(0);\n-    for (uint i = 1; i < 3; ++i) {\n-      Node *mem = in(i);\n-      if (mem && mem->is_MergeMem() && r->in(i)->outcnt() == 1) {\n-        \/\/ Nothing is control-dependent on path #i except the region itself.\n-        m = mem->as_MergeMem();\n-        uint j = 3 - i;\n-        Node* other = in(j);\n-        if (other && other == m->base_memory()) {\n-          \/\/ m is a successor memory to other, and is not pinned inside the diamond, so push it out.\n-          \/\/ This will allow the diamond to collapse completely.\n-          return m;\n-        }\n-      }\n+  \/\/ code in PhiNode::try_clean_memory_phi() replaces the Phi with the\n+  \/\/ MergeMem in order to remove the Region if its last phi dies.\n+\n+  if (!is_diamond()) {\n+    return;\n+  }\n+\n+  for (DUIterator_Fast imax, i = fast_outs(imax); i < imax; i++) {\n+    Node* phi = fast_out(i);\n+    if (phi->is_Phi() && phi->as_Phi()->try_clean_memory_phi(igvn)) {\n+      --i;\n+      --imax;\n@@ -490,1 +482,39 @@\n-  return nullptr;\n+}\n+\n+\/\/ Does this region merge a simple diamond formed by a proper IfNode?\n+\/\/\n+\/\/              Cmp\n+\/\/              \/\n+\/\/     ctrl   Bool\n+\/\/       \\    \/\n+\/\/       IfNode\n+\/\/      \/      \\\n+\/\/  IfFalse   IfTrue\n+\/\/      \\      \/\n+\/\/       Region\n+bool RegionNode::is_diamond() const {\n+  if (req() != 3) {\n+    return false;\n+  }\n+\n+  Node* left_path = in(1);\n+  Node* right_path = in(2);\n+  if (left_path == nullptr || right_path == nullptr) {\n+    return false;\n+  }\n+  Node* diamond_if = left_path->in(0);\n+  if (diamond_if == nullptr || !diamond_if->is_If() || diamond_if != right_path->in(0)) {\n+    \/\/ Not an IfNode merging a diamond or TOP.\n+    return false;\n+  }\n+\n+  \/\/ Check for a proper bool\/cmp\n+  const Node* bol = diamond_if->in(1);\n+  if (!bol->is_Bool()) {\n+    return false;\n+  }\n+  const Node* cmp = bol->in(1);\n+  if (!cmp->is_Cmp()) {\n+    return false;\n+  }\n+  return true;\n@@ -504,0 +534,1 @@\n+    try_clean_mem_phis(phase->is_IterGVN());\n@@ -505,10 +536,0 @@\n-    if (has_phis) {\n-      PhiNode* phi = has_unique_phi();\n-      if (phi != nullptr) {\n-        Node* m = phi->try_clean_mem_phi(phase);\n-        if (m != nullptr) {\n-          phase->is_IterGVN()->replace_node(phi, m);\n-          has_phis = false;\n-        }\n-      }\n-    }\n@@ -1346,2 +1367,0 @@\n-\n-\/\/------------------------------is_diamond_phi---------------------------------\n@@ -1350,28 +1369,9 @@\n-\/\/ If check_control_only is true, do not inspect the If node at the\n-\/\/ top, and return -1 (not an edge number) on success.\n-int PhiNode::is_diamond_phi(bool check_control_only) const {\n-  \/\/ Check for a 2-path merge\n-  Node *region = in(0);\n-  if( !region ) return 0;\n-  if( region->req() != 3 ) return 0;\n-  if(         req() != 3 ) return 0;\n-  \/\/ Check that both paths come from the same If\n-  Node *ifp1 = region->in(1);\n-  Node *ifp2 = region->in(2);\n-  if( !ifp1 || !ifp2 ) return 0;\n-  Node *iff = ifp1->in(0);\n-  if( !iff || !iff->is_If() ) return 0;\n-  if( iff != ifp2->in(0) ) return 0;\n-  if (check_control_only)  return -1;\n-  \/\/ Check for a proper bool\/cmp\n-  const Node *b = iff->in(1);\n-  if( !b->is_Bool() ) return 0;\n-  const Node *cmp = b->in(1);\n-  if( !cmp->is_Cmp() ) return 0;\n-\n-  \/\/ Check for branching opposite expected\n-  if( ifp2->Opcode() == Op_IfTrue ) {\n-    assert( ifp1->Opcode() == Op_IfFalse, \"\" );\n-    return 2;\n-  } else {\n-    assert( ifp1->Opcode() == Op_IfTrue, \"\" );\n+int PhiNode::is_diamond_phi() const {\n+  Node* region = in(0);\n+  assert(region != nullptr && region->is_Region(), \"phi must have region\");\n+  if (!region->as_Region()->is_diamond()) {\n+    return 0;\n+  }\n+\n+  if (region->in(1)->is_IfTrue()) {\n+    assert(region->in(2)->is_IfFalse(), \"bad If\");\n@@ -1379,0 +1379,4 @@\n+  } else {\n+    \/\/ Flipped projections.\n+    assert(region->in(2)->is_IfTrue(), \"bad If\");\n+    return 2;\n@@ -1382,0 +1386,36 @@\n+\/\/ Do the following transformation if we find the corresponding graph shape, remove the involved memory phi and return\n+\/\/ true. Otherwise, return false if the transformation cannot be applied.\n+\/\/\n+\/\/           If                                     If\n+\/\/          \/  \\                                   \/  \\\n+\/\/    IfFalse  IfTrue  \/- Some Node          IfFalse  IfTrue\n+\/\/          \\  \/      \/    \/                       \\  \/        Some Node\n+\/\/         Region    \/ \/-MergeMem     ===>        Region          |\n+\/\/          \/   \\---Phi                             |          MergeMem\n+\/\/ [other phis]      \\                        [other phis]        |\n+\/\/                   use                                         use\n+bool PhiNode::try_clean_memory_phi(PhaseIterGVN* igvn) {\n+  if (_type != Type::MEMORY) {\n+    return false;\n+  }\n+  assert(is_diamond_phi() > 0, \"sanity\");\n+  assert(req() == 3, \"same as region\");\n+  const Node* region = in(0);\n+  for (uint i = 1; i < 3; i++) {\n+    Node* phi_input = in(i);\n+    if (phi_input != nullptr && phi_input->is_MergeMem() && region->in(i)->outcnt() == 1) {\n+      \/\/ Nothing is control-dependent on path #i except the region itself.\n+      MergeMemNode* merge_mem = phi_input->as_MergeMem();\n+      uint j = 3 - i;\n+      Node* other_phi_input = in(j);\n+      if (other_phi_input != nullptr && other_phi_input == merge_mem->base_memory()) {\n+        \/\/ merge_mem is a successor memory to other_phi_input, and is not pinned inside the diamond, so push it out.\n+        \/\/ This will allow the diamond to collapse completely if there are no other phis left.\n+        igvn->replace_node(this, merge_mem);\n+        return true;\n+      }\n+    }\n+  }\n+  return false;\n+}\n+\n@@ -1446,8 +1486,0 @@\n-  if (phase->is_IterGVN()) {\n-    Node* m = try_clean_mem_phi(phase);\n-    if (m != nullptr) {\n-      return m;\n-    }\n-  }\n-\n-\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":102,"deletions":70,"binary":false,"changes":172,"status":"modified"},{"patch":"@@ -135,0 +135,2 @@\n+  bool is_diamond() const;\n+  void try_clean_mem_phis(PhaseIterGVN* phase);\n@@ -235,1 +237,2 @@\n-  int  is_diamond_phi(bool check_control_only = false) const;\n+  int is_diamond_phi() const;\n+  bool try_clean_memory_phi(PhaseIterGVN* igvn);\n@@ -253,1 +256,0 @@\n-  Node* try_clean_mem_phi(PhaseGVN *phase);\n@@ -468,0 +470,1 @@\n+  bool _useless; \/\/ If the associated loop dies, this parse predicate becomes useless and can be cleaned up by Value().\n@@ -469,1 +472,1 @@\n-  ParsePredicateNode(Node* control, Node* bol, Deoptimization::DeoptReason deopt_reason);\n+  ParsePredicateNode(Node* control, Deoptimization::DeoptReason deopt_reason, PhaseGVN* gvn);\n@@ -477,0 +480,12 @@\n+  bool is_useless() const {\n+    return _useless;\n+  }\n+\n+  void mark_useless() {\n+    _useless = true;\n+  }\n+\n+  void mark_useful() {\n+    _useless = false;\n+  }\n+\n@@ -479,0 +494,5 @@\n+  Node* Ideal(PhaseGVN* phase, bool can_reshape) {\n+    return nullptr; \/\/ Don't optimize\n+  }\n+\n+  const Type* Value(PhaseGVN* phase) const;\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -364,1 +364,2 @@\n-void Compile::remove_useless_nodes(GrowableArray<Node*>& node_list, Unique_Node_List& useful) {\n+template<typename N, ENABLE_IF_SDEFN(std::is_base_of<Node, N>::value)>\n+void Compile::remove_useless_nodes(GrowableArray<N*>& node_list, Unique_Node_List& useful) {\n@@ -366,2 +367,2 @@\n-    Node* n = node_list.at(i);\n-    if (!useful.member(n)) {\n+    N* node = node_list.at(i);\n+    if (!useful.member(node)) {\n@@ -393,0 +394,3 @@\n+  if (dead->is_ParsePredicate()) {\n+    remove_parse_predicate(dead->as_ParsePredicate());\n+  }\n@@ -446,1 +450,1 @@\n-  remove_useless_nodes(_parse_predicate_opaqs, useful); \/\/ remove useless Parse Predicate opaque nodes\n+  remove_useless_nodes(_parse_predicates,   useful); \/\/ remove useless Parse Predicate nodes\n@@ -648,1 +652,1 @@\n-                  _parse_predicate_opaqs (comp_arena(), 8, 0, nullptr),\n+                  _parse_predicates  (comp_arena(), 8, 0, nullptr),\n@@ -1880,3 +1884,3 @@\n-\/\/ Remove the opaque nodes that protect the Parse Predicates so that all unused\n-\/\/ checks and uncommon_traps will be eliminated from the ideal graph.\n-void Compile::cleanup_parse_predicates(PhaseIterGVN& igvn) const {\n+\/\/ Mark all ParsePredicateNodes as useless. They will later be removed from the graph in IGVN together with their\n+\/\/ uncommon traps if no Runtime Predicates were created from the Parse Predicates.\n+void Compile::mark_parse_predicate_nodes_useless(PhaseIterGVN& igvn) {\n@@ -1886,4 +1890,4 @@\n-  for (int i = parse_predicate_count(); i > 0; i--) {\n-    Node* n = parse_predicate_opaque1_node(i - 1);\n-    assert(n->Opcode() == Op_Opaque1, \"must be\");\n-    igvn.replace_node(n, n->in(1));\n+  for (int i = 0; i < parse_predicate_count(); i++) {\n+    ParsePredicateNode* parse_predicate = _parse_predicates.at(i);\n+    parse_predicate->mark_useless();\n+    igvn._worklist.push(parse_predicate);\n@@ -1891,1 +1895,1 @@\n-  assert(parse_predicate_count() == 0, \"should be clean!\");\n+  _parse_predicates.clear();\n@@ -1924,0 +1928,1 @@\n+    assert(C->parse_predicate_count() == 0, \"all parse predicates should have been removed now\");\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":18,"deletions":13,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -73,0 +73,1 @@\n+class ParsePredicateNode;\n@@ -366,1 +367,1 @@\n-  GrowableArray<Node*>  _parse_predicate_opaqs; \/\/ List of Opaque1 nodes for the Parse Predicates.\n+  GrowableArray<ParsePredicateNode*> _parse_predicates; \/\/ List of Parse Predicates.\n@@ -725,1 +726,1 @@\n-  int           parse_predicate_count()   const { return _parse_predicate_opaqs.length(); }\n+  int           parse_predicate_count()   const { return _parse_predicates.length(); }\n@@ -731,1 +732,1 @@\n-  Node*         parse_predicate_opaque1_node(int idx) const { return _parse_predicate_opaqs.at(idx); }\n+  ParsePredicateNode* parse_predicate(int idx) const { return _parse_predicates.at(idx); }\n@@ -750,4 +751,0 @@\n-    \/\/ remove from _parse_predicate_opaqs list also if it is there\n-    if (parse_predicate_count() > 0) {\n-      _parse_predicate_opaqs.remove_if_existing(n);\n-    }\n@@ -763,4 +760,10 @@\n-  void add_parse_predicate_opaq(Node* n) {\n-    assert(!_parse_predicate_opaqs.contains(n), \"duplicate entry in Parse Predicate opaque1 list\");\n-    assert(_macro_nodes.contains(n), \"should have already been in macro list\");\n-    _parse_predicate_opaqs.append(n);\n+\n+  void add_parse_predicate(ParsePredicateNode* n) {\n+    assert(!_parse_predicates.contains(n), \"duplicate entry in Parse Predicate list\");\n+    _parse_predicates.append(n);\n+  }\n+\n+  void remove_parse_predicate(ParsePredicateNode* n) {\n+    if (parse_predicate_count() > 0) {\n+      _parse_predicates.remove_if_existing(n);\n+    }\n@@ -768,0 +771,1 @@\n+\n@@ -773,0 +777,1 @@\n+\n@@ -804,6 +809,1 @@\n-  \/\/ Remove the opaque nodes that protect the Parse Predicates so that the unused checks and\n-  \/\/ uncommon traps will be eliminated from the graph.\n-  void cleanup_parse_predicates(PhaseIterGVN &igvn) const;\n-  bool is_predicate_opaq(Node* n) const {\n-    return _parse_predicate_opaqs.contains(n);\n-  }\n+  void mark_parse_predicate_nodes_useless(PhaseIterGVN& igvn);\n@@ -1050,1 +1050,2 @@\n-  void remove_useless_nodes       (GrowableArray<Node*>&        node_list, Unique_Node_List &useful);\n+  template<typename N, ENABLE_IF(std::is_base_of<Node, N>::value)>\n+  void remove_useless_nodes(GrowableArray<N*>& node_list, Unique_Node_List& useful);\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -4438,5 +4438,1 @@\n-  Node* cont = _gvn.intcon(1);\n-  Node* opaq = _gvn.transform(new Opaque1Node(C, cont));\n-  C->add_parse_predicate_opaq(opaq);\n-  Node* bol = _gvn.transform(new Conv2BNode(opaq));\n-  ParsePredicateNode* parse_predicate = new ParsePredicateNode(control(), bol, reason);\n+  ParsePredicateNode* parse_predicate = new ParsePredicateNode(control(), reason, &_gvn);\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -803,1 +803,1 @@\n-    call = proj_out(i)->is_uncommon_trap_proj(Deoptimization::Reason_none);\n+    call = proj_out(i)->is_uncommon_trap_proj();\n@@ -814,1 +814,1 @@\n-  CallStaticJavaNode* dom_unc = otherproj->is_uncommon_trap_proj(Deoptimization::Reason_none);\n+  CallStaticJavaNode* dom_unc = otherproj->is_uncommon_trap_proj();\n@@ -1079,2 +1079,2 @@\n-  CallStaticJavaNode* unc = success->is_uncommon_trap_proj(Deoptimization::Reason_none);\n-  CallStaticJavaNode* dom_unc = otherproj->is_uncommon_trap_proj(Deoptimization::Reason_none);\n+  CallStaticJavaNode* unc = success->is_uncommon_trap_proj();\n+  CallStaticJavaNode* dom_unc = otherproj->is_uncommon_trap_proj();\n@@ -1261,1 +1261,1 @@\n-  CallStaticJavaNode* unc = proj->is_uncommon_trap_if_pattern(Deoptimization::Reason_none);\n+  CallStaticJavaNode* unc = proj->is_uncommon_trap_if_pattern();\n@@ -1266,2 +1266,2 @@\n-      CallStaticJavaNode* unc = proj->is_uncommon_trap_if_pattern(Deoptimization::Reason_none);\n-      CallStaticJavaNode* dom_unc = proj->in(0)->in(0)->as_Proj()->is_uncommon_trap_if_pattern(Deoptimization::Reason_none);\n+      CallStaticJavaNode* unc = proj->is_uncommon_trap_if_pattern();\n+      CallStaticJavaNode* dom_unc = proj->in(0)->in(0)->as_Proj()->is_uncommon_trap_if_pattern();\n@@ -1298,1 +1298,1 @@\n-  CallStaticJavaNode* dom_unc = dom_proj->is_uncommon_trap_if_pattern(Deoptimization::Reason_none);\n+  CallStaticJavaNode* dom_unc = dom_proj->is_uncommon_trap_if_pattern();\n@@ -1300,1 +1300,1 @@\n-  CallStaticJavaNode* unc = proj->is_uncommon_trap_if_pattern(Deoptimization::Reason_none);\n+  CallStaticJavaNode* unc = proj->is_uncommon_trap_if_pattern();\n@@ -1995,3 +1995,4 @@\n-ParsePredicateNode::ParsePredicateNode(Node* control, Node* bol, Deoptimization::DeoptReason deopt_reason)\n-    : IfNode(control, bol, PROB_MAX, COUNT_UNKNOWN),\n-      _deopt_reason(deopt_reason) {\n+ParsePredicateNode::ParsePredicateNode(Node* control, Deoptimization::DeoptReason deopt_reason, PhaseGVN* gvn)\n+    : IfNode(control, gvn->intcon(1), PROB_MAX, COUNT_UNKNOWN),\n+      _deopt_reason(deopt_reason),\n+      _useless(false) {\n@@ -1999,1 +2000,2 @@\n-  assert(bol->Opcode() == Op_Conv2B && bol->in(1) != nullptr && bol->in(1)->is_Opaque1(), \"wrong boolean input\");\n+  gvn->C->add_parse_predicate(this);\n+  gvn->C->record_for_post_loop_opts_igvn(this);\n@@ -2019,0 +2021,12 @@\n+\/\/ Fold this node away once it becomes useless or at latest in post loop opts IGVN.\n+const Type* ParsePredicateNode::Value(PhaseGVN* phase) const {\n+  if (phase->type(in(0)) == Type::TOP) {\n+    return Type::TOP;\n+  }\n+  if (_useless || phase->C->post_loop_opts_phase()) {\n+    return TypeTuple::IFTRUE;\n+  } else {\n+    return bottom_type();\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":27,"deletions":13,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -652,0 +652,1 @@\n+  bool can_apply_loop_predication();\n@@ -1336,2 +1337,3 @@\n-  IfProjNode* create_new_if_for_predicate(IfProjNode* cont_proj, Node* new_entry, Deoptimization::DeoptReason reason,\n-                                          int opcode, bool rewire_uncommon_proj_phi_inputs = false);\n+  IfProjNode* create_new_if_for_predicate(ParsePredicateSuccessProj* parse_predicate_proj, Node* new_entry,\n+                                          Deoptimization::DeoptReason reason, int opcode,\n+                                          bool rewire_uncommon_proj_phi_inputs = false);\n@@ -1368,1 +1370,2 @@\n-  IfProjNode* add_template_assertion_predicate(IfNode* iff, IdealLoopTree* loop, IfProjNode* if_proj, IfProjNode* predicate_proj,\n+  IfProjNode* add_template_assertion_predicate(IfNode* iff, IdealLoopTree* loop, IfProjNode* if_proj,\n+                                               ParsePredicateSuccessProj* parse_predicate_proj,\n@@ -1375,1 +1378,12 @@\n-  void collect_potentially_useful_predicates(IdealLoopTree *loop, Unique_Node_List &predicate_opaque1);\n+\n+  void eliminate_useless_parse_predicates();\n+  void mark_all_parse_predicates_useless() const;\n+  void mark_loop_associated_parse_predicates_useful();\n+  static void mark_useful_parse_predicates_for_loop(IdealLoopTree* loop);\n+  void add_useless_parse_predicates_to_igvn_worklist();\n+\n+  void eliminate_useless_template_assertion_predicates();\n+  void collect_useful_template_assertion_predicates(Unique_Node_List& useful_predicates);\n+  static void collect_useful_template_assertion_predicates_for_loop(IdealLoopTree* loop, Unique_Node_List& useful_predicates);\n+  void eliminate_useless_template_assertion_predicates(Unique_Node_List& useful_predicates);\n+\n@@ -1629,1 +1643,1 @@\n-  IfProjNode* clone_parse_predicate_to_unswitched_loop(ParsePredicateSuccessProj* predicate_proj, Node* new_entry,\n+  IfProjNode* clone_parse_predicate_to_unswitched_loop(ParsePredicateSuccessProj* parse_predicate_proj, Node* new_entry,\n@@ -1633,1 +1647,2 @@\n-                                                     IfProjNode* iffast_pred, IfProjNode* ifslow_pred);\n+                                                     ParsePredicateSuccessProj* fast_loop_parse_predicate_proj,\n+                                                     ParsePredicateSuccessProj* slow_loop_parse_predicate_proj);\n@@ -1636,1 +1651,1 @@\n-                                                             IfProjNode* output_proj);\n+                                                             ParsePredicateSuccessProj* parse_predicate_proj);\n@@ -1731,0 +1746,2 @@\n+\n+  void update_addp_chain_base(Node* x, Node* old_base, Node* new_base);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":24,"deletions":7,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1853,3 +1853,4 @@\n-          \/\/ Chain of AddP: (AddP base (AddP base )) must keep the same base after sinking so:\n-          \/\/ 1- We don't add a CastPP here when the first one is sunk so if the second one is not, their bases remain\n-          \/\/ the same.\n+          \/\/ Chain of AddP nodes: (AddP base (AddP base (AddP base )))\n+          \/\/ All AddP nodes must keep the same base after sinking so:\n+          \/\/ 1- We don't add a CastPP here until the last one of the chain is sunk: if part of the chain is not sunk,\n+          \/\/ their bases remain the same.\n@@ -1880,2 +1881,2 @@\n-                \/\/ Chain of AddP:\n-                \/\/ 2- A CastPP of the base is only added now that both AddP nodes are sunk\n+                \/\/ Chain of AddP nodes:\n+                \/\/ 2- A CastPP of the base is only added now that all AddP nodes are sunk\n@@ -1883,7 +1884,1 @@\n-                  for (DUIterator_Fast imax, i = x->fast_outs(imax); i < imax; i++) {\n-                    Node* u = x->fast_out(i);\n-                    if (u->is_AddP() && u->in(AddPNode::Base) == n->in(AddPNode::Base)) {\n-                      _igvn.replace_input_of(u, AddPNode::Base, cast);\n-                      assert(u->find_out_with(Op_AddP) == nullptr, \"more than 2 chained AddP nodes?\");\n-                    }\n-                  }\n+                  update_addp_chain_base(x, n->in(AddPNode::Base), cast);\n@@ -1904,0 +1899,16 @@\n+void PhaseIdealLoop::update_addp_chain_base(Node* x, Node* old_base, Node* new_base) {\n+  ResourceMark rm;\n+  Node_List wq;\n+  wq.push(x);\n+  while (wq.size() != 0) {\n+    Node* n = wq.pop();\n+    for (DUIterator_Fast imax, i = n->fast_outs(imax); i < imax; i++) {\n+      Node* u = n->fast_out(i);\n+      if (u->is_AddP() && u->in(AddPNode::Base) == old_base) {\n+        _igvn.replace_input_of(u, AddPNode::Base, new_base);\n+        wq.push(u);\n+      }\n+    }\n+  }\n+}\n+\n@@ -2252,1 +2263,1 @@\n-      if (use->is_If() || use->is_CMove() || C->is_predicate_opaq(use) || use->Opcode() == Op_Opaque4 ||\n+      if (use->is_If() || use->is_CMove() || use->Opcode() == Op_Opaque4 ||\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":24,"deletions":13,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -555,1 +555,1 @@\n-      if (sfpt_ctl->is_Proj() && sfpt_ctl->as_Proj()->is_uncommon_trap_proj(Deoptimization::Reason_none)) {\n+      if (sfpt_ctl->is_Proj() && sfpt_ctl->as_Proj()->is_uncommon_trap_proj()) {\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -187,3 +187,3 @@\n-CallStaticJavaNode* ProjNode::is_uncommon_trap_proj(Deoptimization::DeoptReason reason) {\n-  int path_limit = 10;\n-  Node* out = this;\n+CallStaticJavaNode* ProjNode::is_uncommon_trap_proj(Deoptimization::DeoptReason reason) const {\n+  const int path_limit = 10;\n+  const Node* out = this;\n@@ -216,15 +216,6 @@\n-\/\/ null otherwise\n-\/\/ \"must_reason_predicate\" means the uct reason must be Reason_predicate\n-CallStaticJavaNode* ProjNode::is_uncommon_trap_if_pattern(Deoptimization::DeoptReason reason) {\n-  Node *in0 = in(0);\n-  if (!in0->is_If()) return nullptr;\n-  \/\/ Variation of a dead If node.\n-  if (in0->outcnt() < 2)  return nullptr;\n-  IfNode* iff = in0->as_If();\n-\n-  \/\/ we need \"If(Conv2B(Opaque1(...)))\" pattern for reason_predicate\n-  if (reason != Deoptimization::Reason_none) {\n-    if (iff->in(1)->Opcode() != Op_Conv2B ||\n-       iff->in(1)->in(1)->Opcode() != Op_Opaque1) {\n-      return nullptr;\n-    }\n+\/\/ or null otherwise.\n+CallStaticJavaNode* ProjNode::is_uncommon_trap_if_pattern(Deoptimization::DeoptReason reason) const {\n+  Node* iff = in(0);\n+  if (!iff->is_If() || iff->outcnt() < 2) {\n+    \/\/ Not a projection of an If or variation of a dead If node.\n+    return nullptr;\n@@ -232,9 +223,1 @@\n-\n-  ProjNode* other_proj = iff->proj_out(1-_con);\n-  CallStaticJavaNode* call = other_proj->is_uncommon_trap_proj(reason);\n-  if (call != nullptr) {\n-    assert(reason == Deoptimization::Reason_none ||\n-           Compile::current()->is_predicate_opaq(iff->in(1)->in(1)), \"should be on the list\");\n-    return call;\n-  }\n-  return nullptr;\n+  return other_if_proj()->is_uncommon_trap_proj(reason);\n","filename":"src\/hotspot\/share\/opto\/multnode.cpp","additions":10,"deletions":27,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-  CallStaticJavaNode* is_uncommon_trap_proj(Deoptimization::DeoptReason reason);\n+  CallStaticJavaNode* is_uncommon_trap_proj(Deoptimization::DeoptReason reason = Deoptimization::Reason_none) const;\n@@ -102,1 +102,1 @@\n-  CallStaticJavaNode* is_uncommon_trap_if_pattern(Deoptimization::DeoptReason reason);\n+  CallStaticJavaNode* is_uncommon_trap_if_pattern(Deoptimization::DeoptReason reason = Deoptimization::Reason_none) const;\n","filename":"src\/hotspot\/share\/opto\/multnode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -512,0 +512,4 @@\n+  if (n->is_ParsePredicate()) {\n+    C->add_parse_predicate(n->as_ParsePredicate());\n+  }\n+\n@@ -616,0 +620,3 @@\n+  if (is_ParsePredicate()) {\n+    compile->remove_parse_predicate(as_ParsePredicate());\n+  }\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -272,1 +272,1 @@\n-  C->print_method(CompilerPhaseType::PHASE_MACH_ANALYSIS, 4);\n+  C->print_method(CompilerPhaseType::PHASE_MACH_ANALYSIS, 3);\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3540,1 +3540,1 @@\n-    printer->print_method(buffer, 4);\n+    printer->print_method(buffer, 5);\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -894,0 +894,4 @@\n+  const Type* newtype = type_or_null(n);\n+  if (nn != n || oldtype != newtype) {\n+    C->print_method(PHASE_AFTER_ITER_GVN_STEP, 4, n);\n+  }\n@@ -896,1 +900,0 @@\n-    const Type* newtype = type_or_null(n);\n@@ -1024,0 +1027,1 @@\n+  C->print_method(PHASE_BEFORE_ITER_GVN, 3);\n@@ -1033,0 +1037,1 @@\n+      C->print_method(PHASE_AFTER_ITER_GVN, 3);\n@@ -1039,0 +1044,1 @@\n+      C->print_method(PHASE_AFTER_ITER_GVN, 3);\n@@ -1053,0 +1059,1 @@\n+  C->print_method(PHASE_AFTER_ITER_GVN, 3);\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+  flags(BEFORE_ITER_GVN,              \"Before Iter GVN\") \\\n@@ -34,0 +35,2 @@\n+  flags(AFTER_ITER_GVN_STEP,          \"After Iter GVN Step\") \\\n+  flags(AFTER_ITER_GVN,               \"After Iter GVN\") \\\n","filename":"src\/hotspot\/share\/opto\/phasetype.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1659,0 +1659,1 @@\n+      !is_cloop_increment(cmp1) &&\n@@ -1665,0 +1666,1 @@\n+               !is_cloop_increment(cmp2) &&\n@@ -1675,0 +1677,1 @@\n+      !is_cloop_increment(cmp1) &&\n@@ -1681,0 +1684,1 @@\n+               !is_cloop_increment(cmp2) &&\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1012,1 +1012,1 @@\n-  if (!JvmtiExport::can_support_virtual_threads()) {\n+  if (get_capabilities()->can_support_virtual_threads == 0) {\n@@ -1130,1 +1130,1 @@\n-  if (!JvmtiExport::can_support_virtual_threads()) {\n+  if (get_capabilities()->can_support_virtual_threads == 0) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -433,0 +433,4 @@\n+  product(uint64_t, AbortVMOnSafepointTimeoutDelay, 0, DIAGNOSTIC,          \\\n+          \"Delay in milliseconds for option AbortVMOnSafepointTimeout\")     \\\n+          range(0, max_jlong)                                               \\\n+                                                                            \\\n@@ -1440,0 +1444,3 @@\n+  develop(bool, RandomizeClassSpaceLocation, true,                          \\\n+          \"Randomize location of class space.\")                             \\\n+                                                                            \\\n@@ -2023,1 +2030,1 @@\n-  product(int, LockingMode, LM_LEGACY, EXPERIMENTAL,                        \\\n+  product(int, LockingMode, LM_LEGACY,                                      \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -812,1 +812,1 @@\n-  if (AbortVMOnSafepointTimeout) {\n+  if (AbortVMOnSafepointTimeout && (os::elapsedTime() * MILLIUNITS > AbortVMOnSafepointTimeoutDelay)) {\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1062,1 +1062,1 @@\n-const size_t TASKQUEUE_SIZE = (NOT_LP64(1<<14) LP64_ONLY(1<<17));\n+const uint TASKQUEUE_SIZE = (NOT_LP64(1<<14) LP64_ONLY(1<<17));\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,0 +72,1 @@\n+import jdk.internal.logger.LoggerFinderLoader.TemporaryLoggerFinder;\n@@ -1770,1 +1771,2 @@\n-            if (service == null) {\n+            LoggerFinder finder = service;\n+            if (finder == null) {\n@@ -1773,1 +1775,1 @@\n-                service = AccessController.doPrivileged(pa, null,\n+                finder = AccessController.doPrivileged(pa, null,\n@@ -1775,0 +1777,2 @@\n+                if (finder instanceof TemporaryLoggerFinder) return finder;\n+                service = finder;\n@@ -1776,1 +1780,1 @@\n-            return service;\n+            return finder;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -99,0 +99,3 @@\n+        \/**\n+         * {@return the function mapping attribute names to attribute mappers}\n+         *\/\n@@ -119,0 +122,3 @@\n+        \/**\n+         * {@return the class hierarchy resolver}\n+         *\/\n@@ -132,0 +138,2 @@\n+\n+        \/** Preserves the original constant pool when transforming classfile *\/\n@@ -133,0 +141,2 @@\n+\n+        \/** Creates a new constant pool when transforming classfile *\/\n@@ -142,0 +152,2 @@\n+\n+        \/** Patch unreachable code *\/\n@@ -143,0 +155,2 @@\n+\n+        \/** Keep the unreachable code *\/\n@@ -156,0 +170,2 @@\n+\n+        \/** Fail on unresolved labels *\/\n@@ -157,0 +173,2 @@\n+\n+        \/** Filter unresolved labels *\/\n@@ -168,0 +186,2 @@\n+\n+        \/** Process debug elements *\/\n@@ -169,0 +189,2 @@\n+\n+        \/** Drop debug elements *\/\n@@ -179,0 +201,2 @@\n+\n+        \/** Process line numbers *\/\n@@ -180,0 +204,2 @@\n+\n+        \/** Drop line numbers *\/\n@@ -190,0 +216,2 @@\n+\n+        \/** Automatically convert short jumps to long when necessary *\/\n@@ -191,0 +219,2 @@\n+\n+        \/** Fail if short jump overflows *\/\n@@ -202,0 +232,2 @@\n+\n+        \/** Generate stack maps when required *\/\n@@ -203,0 +235,2 @@\n+\n+        \/** Always generate stack maps *\/\n@@ -204,0 +238,2 @@\n+\n+        \/** Drop stack maps from code *\/\n@@ -213,0 +249,2 @@\n+\n+        \/** Process unknown attributes *\/\n@@ -214,0 +252,2 @@\n+\n+        \/** Drop unknown attributes *\/\n@@ -228,0 +268,1 @@\n+     * @throws java.io.IOException\n@@ -263,0 +304,1 @@\n+     * @throws java.io.IOException\n@@ -278,0 +320,1 @@\n+     * @throws java.io.IOException\n@@ -314,0 +357,1 @@\n+     * @throws java.io.IOException\n@@ -325,0 +369,1 @@\n+     * @throws java.io.IOException\n@@ -346,1 +391,1 @@\n-     * @param model class model to transform\n+     * @param model the class model to transform\n@@ -354,0 +399,12 @@\n+    \/**\n+     * Transform one classfile into a new classfile with the aid of a\n+     * {@link ClassTransform}.  The transform will receive each element of\n+     * this class, as well as a {@link ClassBuilder} for building the new class.\n+     * The transform is free to preserve, remove, or replace elements as it\n+     * sees fit.\n+     *\n+     * @param model the class model to transform\n+     * @param newClassName new class name\n+     * @param transform the transform\n+     * @return the bytes of the new class\n+     *\/\n@@ -358,0 +415,19 @@\n+    \/**\n+     * Transform one classfile into a new classfile with the aid of a\n+     * {@link ClassTransform}.  The transform will receive each element of\n+     * this class, as well as a {@link ClassBuilder} for building the new class.\n+     * The transform is free to preserve, remove, or replace elements as it\n+     * sees fit.\n+     *\n+     * @implNote\n+     * This method behaves as if:\n+     * {@snippet lang=java :\n+     *     this.build(newClassName, ConstantPoolBuilder.of(model),\n+     *                     b -> b.transform(model, transform));\n+     * }\n+     *\n+     * @param model the class model to transform\n+     * @param newClassName new class name\n+     * @param transform the transform\n+     * @return the bytes of the new class\n+     *\/\n@@ -360,0 +436,1 @@\n+    \/** 0xCAFEBABE *\/\n@@ -362,0 +439,1 @@\n+    \/** 0 *\/\n@@ -363,0 +441,2 @@\n+\n+    \/** 1 *\/\n@@ -364,0 +444,2 @@\n+\n+    \/** 2 *\/\n@@ -365,0 +447,2 @@\n+\n+    \/** 3 *\/\n@@ -366,0 +450,2 @@\n+\n+    \/** 4 *\/\n@@ -367,0 +453,2 @@\n+\n+    \/** 5 *\/\n@@ -368,0 +456,2 @@\n+\n+    \/** 6 *\/\n@@ -369,0 +459,2 @@\n+\n+    \/** 7 *\/\n@@ -370,0 +462,2 @@\n+\n+    \/** 8 *\/\n@@ -371,0 +465,2 @@\n+\n+    \/** 9 *\/\n@@ -372,0 +468,2 @@\n+\n+    \/** 10 *\/\n@@ -373,0 +471,2 @@\n+\n+    \/** 11 *\/\n@@ -374,0 +474,2 @@\n+\n+    \/** 12 *\/\n@@ -375,0 +477,2 @@\n+\n+    \/** 13 *\/\n@@ -376,0 +480,2 @@\n+\n+    \/** 14 *\/\n@@ -377,0 +483,2 @@\n+\n+    \/** 15 *\/\n@@ -378,0 +486,2 @@\n+\n+    \/** 16 *\/\n@@ -379,0 +489,2 @@\n+\n+    \/** 17 *\/\n@@ -380,0 +492,2 @@\n+\n+    \/** 18 *\/\n@@ -381,0 +495,2 @@\n+\n+    \/** 19 *\/\n@@ -382,0 +498,2 @@\n+\n+    \/** 20 *\/\n@@ -383,0 +501,2 @@\n+\n+    \/** 21 *\/\n@@ -384,0 +504,2 @@\n+\n+    \/** 22 *\/\n@@ -385,0 +507,2 @@\n+\n+    \/** 23 *\/\n@@ -386,0 +510,2 @@\n+\n+    \/** 24 *\/\n@@ -387,0 +513,2 @@\n+\n+    \/** 25 *\/\n@@ -388,0 +516,2 @@\n+\n+    \/** 26 *\/\n@@ -389,0 +519,2 @@\n+\n+    \/** 27 *\/\n@@ -390,0 +522,2 @@\n+\n+    \/** 28 *\/\n@@ -391,0 +525,2 @@\n+\n+    \/** 29 *\/\n@@ -392,0 +528,2 @@\n+\n+    \/** 30 *\/\n@@ -393,0 +531,2 @@\n+\n+    \/** 31 *\/\n@@ -394,0 +534,2 @@\n+\n+    \/** 32 *\/\n@@ -395,0 +537,2 @@\n+\n+    \/** 33 *\/\n@@ -396,0 +540,2 @@\n+\n+    \/** 34 *\/\n@@ -397,0 +543,2 @@\n+\n+    \/** 35 *\/\n@@ -398,0 +546,2 @@\n+\n+    \/** 36 *\/\n@@ -399,0 +549,2 @@\n+\n+    \/** 37 *\/\n@@ -400,0 +552,2 @@\n+\n+    \/** 38 *\/\n@@ -401,0 +555,2 @@\n+\n+    \/** 39 *\/\n@@ -402,0 +558,2 @@\n+\n+    \/** 40 *\/\n@@ -403,0 +561,2 @@\n+\n+    \/** 41 *\/\n@@ -404,0 +564,2 @@\n+\n+    \/** 42 *\/\n@@ -405,0 +567,2 @@\n+\n+    \/** 43 *\/\n@@ -406,0 +570,2 @@\n+\n+    \/** 44 *\/\n@@ -407,0 +573,2 @@\n+\n+    \/** 45 *\/\n@@ -408,0 +576,2 @@\n+\n+    \/** 46 *\/\n@@ -409,0 +579,2 @@\n+\n+    \/** 47 *\/\n@@ -410,0 +582,2 @@\n+\n+    \/** 48 *\/\n@@ -411,0 +585,2 @@\n+\n+    \/** 49 *\/\n@@ -412,0 +588,2 @@\n+\n+    \/** 50 *\/\n@@ -413,0 +591,2 @@\n+\n+    \/** 51 *\/\n@@ -414,0 +594,2 @@\n+\n+    \/** 52 *\/\n@@ -415,0 +597,2 @@\n+\n+    \/** 53 *\/\n@@ -416,0 +600,2 @@\n+\n+    \/** 54 *\/\n@@ -417,0 +603,2 @@\n+\n+    \/** 55 *\/\n@@ -418,0 +606,2 @@\n+\n+    \/** 56 *\/\n@@ -419,0 +609,2 @@\n+\n+    \/** 57 *\/\n@@ -420,0 +612,2 @@\n+\n+    \/** 58 *\/\n@@ -421,0 +615,2 @@\n+\n+    \/** 59 *\/\n@@ -422,0 +618,2 @@\n+\n+    \/** 60 *\/\n@@ -423,0 +621,2 @@\n+\n+    \/** 61 *\/\n@@ -424,0 +624,2 @@\n+\n+    \/** 62 *\/\n@@ -425,0 +627,2 @@\n+\n+    \/** 63 *\/\n@@ -426,0 +630,2 @@\n+\n+    \/** 64 *\/\n@@ -427,0 +633,2 @@\n+\n+    \/** 65 *\/\n@@ -428,0 +636,2 @@\n+\n+    \/** 66 *\/\n@@ -429,0 +639,2 @@\n+\n+    \/** 67 *\/\n@@ -430,0 +642,2 @@\n+\n+    \/** 68 *\/\n@@ -431,0 +645,2 @@\n+\n+    \/** 69 *\/\n@@ -432,0 +648,2 @@\n+\n+    \/** 70 *\/\n@@ -433,0 +651,2 @@\n+\n+    \/** 71 *\/\n@@ -434,0 +654,2 @@\n+\n+    \/** 72 *\/\n@@ -435,0 +657,2 @@\n+\n+    \/** 73 *\/\n@@ -436,0 +660,2 @@\n+\n+    \/** 74 *\/\n@@ -437,0 +663,2 @@\n+\n+    \/** 75 *\/\n@@ -438,0 +666,2 @@\n+\n+    \/** 76 *\/\n@@ -439,0 +669,2 @@\n+\n+    \/** 77 *\/\n@@ -440,0 +672,2 @@\n+\n+    \/** 78 *\/\n@@ -441,0 +675,2 @@\n+\n+    \/** 79 *\/\n@@ -442,0 +678,2 @@\n+\n+    \/** 80 *\/\n@@ -443,0 +681,2 @@\n+\n+    \/** 81 *\/\n@@ -444,0 +684,2 @@\n+\n+    \/** 82 *\/\n@@ -445,0 +687,2 @@\n+\n+    \/** 83 *\/\n@@ -446,0 +690,2 @@\n+\n+    \/** 84 *\/\n@@ -447,0 +693,2 @@\n+\n+    \/** 85 *\/\n@@ -448,0 +696,2 @@\n+\n+    \/** 86 *\/\n@@ -449,0 +699,2 @@\n+\n+    \/** 87 *\/\n@@ -450,0 +702,2 @@\n+\n+    \/** 88 *\/\n@@ -451,0 +705,2 @@\n+\n+    \/** 89 *\/\n@@ -452,0 +708,2 @@\n+\n+    \/** 90 *\/\n@@ -453,0 +711,2 @@\n+\n+    \/** 91 *\/\n@@ -454,0 +714,2 @@\n+\n+    \/** 92 *\/\n@@ -455,0 +717,2 @@\n+\n+    \/** 93 *\/\n@@ -456,0 +720,2 @@\n+\n+    \/** 94 *\/\n@@ -457,0 +723,2 @@\n+\n+    \/** 95 *\/\n@@ -458,0 +726,2 @@\n+\n+    \/** 96 *\/\n@@ -459,0 +729,2 @@\n+\n+    \/** 97 *\/\n@@ -460,0 +732,2 @@\n+\n+    \/** 98 *\/\n@@ -461,0 +735,2 @@\n+\n+    \/** 99 *\/\n@@ -462,0 +738,2 @@\n+\n+    \/** 100 *\/\n@@ -463,0 +741,2 @@\n+\n+    \/** 101 *\/\n@@ -464,0 +744,2 @@\n+\n+    \/** 102 *\/\n@@ -465,0 +747,2 @@\n+\n+    \/** 103 *\/\n@@ -466,0 +750,2 @@\n+\n+    \/** 104 *\/\n@@ -467,0 +753,2 @@\n+\n+    \/** 105 *\/\n@@ -468,0 +756,2 @@\n+\n+    \/** 106 *\/\n@@ -469,0 +759,2 @@\n+\n+    \/** 107 *\/\n@@ -470,0 +762,2 @@\n+\n+    \/** 108 *\/\n@@ -471,0 +765,2 @@\n+\n+    \/** 109 *\/\n@@ -472,0 +768,2 @@\n+\n+    \/** 110 *\/\n@@ -473,0 +771,2 @@\n+\n+    \/** 111 *\/\n@@ -474,0 +774,2 @@\n+\n+    \/** 112 *\/\n@@ -475,0 +777,2 @@\n+\n+    \/** 113 *\/\n@@ -476,0 +780,2 @@\n+\n+    \/** 114 *\/\n@@ -477,0 +783,2 @@\n+\n+    \/** 115 *\/\n@@ -478,0 +786,2 @@\n+\n+    \/** 116 *\/\n@@ -479,0 +789,2 @@\n+\n+    \/** 117 *\/\n@@ -480,0 +792,2 @@\n+\n+    \/** 118 *\/\n@@ -481,0 +795,2 @@\n+\n+    \/** 119 *\/\n@@ -482,0 +798,2 @@\n+\n+    \/** 120 *\/\n@@ -483,0 +801,2 @@\n+\n+    \/** 121 *\/\n@@ -484,0 +804,2 @@\n+\n+    \/** 122 *\/\n@@ -485,0 +807,2 @@\n+\n+    \/** 123 *\/\n@@ -486,0 +810,2 @@\n+\n+    \/** 124 *\/\n@@ -487,0 +813,2 @@\n+\n+    \/** 125 *\/\n@@ -488,0 +816,2 @@\n+\n+    \/** 126 *\/\n@@ -489,0 +819,2 @@\n+\n+    \/** 127 *\/\n@@ -490,0 +822,2 @@\n+\n+    \/** 128 *\/\n@@ -491,0 +825,2 @@\n+\n+    \/** 129 *\/\n@@ -492,0 +828,2 @@\n+\n+    \/** 130 *\/\n@@ -493,0 +831,2 @@\n+\n+    \/** 131 *\/\n@@ -494,0 +834,2 @@\n+\n+    \/** 132 *\/\n@@ -495,0 +837,2 @@\n+\n+    \/** 133 *\/\n@@ -496,0 +840,2 @@\n+\n+    \/** 134 *\/\n@@ -497,0 +843,2 @@\n+\n+    \/** 135 *\/\n@@ -498,0 +846,2 @@\n+\n+    \/** 136 *\/\n@@ -499,0 +849,2 @@\n+\n+    \/** 137 *\/\n@@ -500,0 +852,2 @@\n+\n+    \/** 138 *\/\n@@ -501,0 +855,2 @@\n+\n+    \/** 139 *\/\n@@ -502,0 +858,2 @@\n+\n+    \/** 140 *\/\n@@ -503,0 +861,2 @@\n+\n+    \/** 141 *\/\n@@ -504,0 +864,2 @@\n+\n+    \/** 142 *\/\n@@ -505,0 +867,2 @@\n+\n+    \/** 143 *\/\n@@ -506,0 +870,2 @@\n+\n+    \/** 144 *\/\n@@ -507,0 +873,2 @@\n+\n+    \/** 145 *\/\n@@ -508,0 +876,2 @@\n+\n+    \/** 146 *\/\n@@ -509,0 +879,2 @@\n+\n+    \/** 147 *\/\n@@ -510,0 +882,2 @@\n+\n+    \/** 148 *\/\n@@ -511,0 +885,2 @@\n+\n+    \/** 149 *\/\n@@ -512,0 +888,2 @@\n+\n+    \/** 150 *\/\n@@ -513,0 +891,2 @@\n+\n+    \/** 151 *\/\n@@ -514,0 +894,2 @@\n+\n+    \/** 152 *\/\n@@ -515,0 +897,2 @@\n+\n+    \/** 153 *\/\n@@ -516,0 +900,2 @@\n+\n+    \/** 154 *\/\n@@ -517,0 +903,2 @@\n+\n+    \/** 155 *\/\n@@ -518,0 +906,2 @@\n+\n+    \/** 156 *\/\n@@ -519,0 +909,2 @@\n+\n+    \/** 157 *\/\n@@ -520,0 +912,2 @@\n+\n+    \/** 158 *\/\n@@ -521,0 +915,2 @@\n+\n+    \/** 159 *\/\n@@ -522,0 +918,2 @@\n+\n+    \/** 160 *\/\n@@ -523,0 +921,2 @@\n+\n+    \/** 161 *\/\n@@ -524,0 +924,2 @@\n+\n+    \/** 162 *\/\n@@ -525,0 +927,2 @@\n+\n+    \/** 163 *\/\n@@ -526,0 +930,2 @@\n+\n+    \/** 164 *\/\n@@ -527,0 +933,2 @@\n+\n+    \/** 165 *\/\n@@ -528,0 +936,2 @@\n+\n+    \/** 166 *\/\n@@ -529,0 +939,2 @@\n+\n+    \/** 167 *\/\n@@ -530,0 +942,2 @@\n+\n+    \/** 168 *\/\n@@ -531,0 +945,2 @@\n+\n+    \/** 169 *\/\n@@ -532,0 +948,2 @@\n+\n+    \/** 170 *\/\n@@ -533,0 +951,2 @@\n+\n+    \/** 171 *\/\n@@ -534,0 +954,2 @@\n+\n+    \/** 172 *\/\n@@ -535,0 +957,2 @@\n+\n+    \/** 173 *\/\n@@ -536,0 +960,2 @@\n+\n+    \/** 174 *\/\n@@ -537,0 +963,2 @@\n+\n+    \/** 175 *\/\n@@ -538,0 +966,2 @@\n+\n+    \/** 176 *\/\n@@ -539,0 +969,2 @@\n+\n+    \/** 177 *\/\n@@ -540,0 +972,2 @@\n+\n+    \/** 178 *\/\n@@ -541,0 +975,2 @@\n+\n+    \/** 179 *\/\n@@ -542,0 +978,2 @@\n+\n+    \/** 180 *\/\n@@ -543,0 +981,2 @@\n+\n+    \/** 181 *\/\n@@ -544,0 +984,2 @@\n+\n+    \/** 182 *\/\n@@ -545,0 +987,2 @@\n+\n+    \/** 183 *\/\n@@ -546,0 +990,2 @@\n+\n+    \/** 184 *\/\n@@ -547,0 +993,2 @@\n+\n+    \/** 185 *\/\n@@ -548,0 +996,2 @@\n+\n+    \/** 186 *\/\n@@ -549,0 +999,2 @@\n+\n+    \/** 187 *\/\n@@ -550,0 +1002,2 @@\n+\n+    \/** 188 *\/\n@@ -551,0 +1005,2 @@\n+\n+    \/** 189 *\/\n@@ -552,0 +1008,2 @@\n+\n+    \/** 190 *\/\n@@ -553,0 +1011,2 @@\n+\n+    \/** 191 *\/\n@@ -554,0 +1014,2 @@\n+\n+    \/** 192 *\/\n@@ -555,0 +1017,2 @@\n+\n+    \/** 193 *\/\n@@ -556,0 +1020,2 @@\n+\n+    \/** 194 *\/\n@@ -557,0 +1023,2 @@\n+\n+    \/** 195 *\/\n@@ -558,0 +1026,2 @@\n+\n+    \/** 196 *\/\n@@ -559,0 +1029,2 @@\n+\n+    \/** 197 *\/\n@@ -560,0 +1032,2 @@\n+\n+    \/** 198 *\/\n@@ -561,0 +1035,2 @@\n+\n+    \/** 199 *\/\n@@ -562,0 +1038,2 @@\n+\n+    \/** 200 *\/\n@@ -563,0 +1041,2 @@\n+\n+    \/** 201 *\/\n@@ -565,0 +1045,1 @@\n+    \/** 0x0001 *\/\n@@ -566,0 +1047,2 @@\n+\n+    \/** 0x0004 *\/\n@@ -567,0 +1050,2 @@\n+\n+    \/** 0x0002 *\/\n@@ -568,0 +1053,2 @@\n+\n+    \/** 0x0200 *\/\n@@ -569,0 +1056,2 @@\n+\n+    \/** 0x4000 *\/\n@@ -570,0 +1059,2 @@\n+\n+    \/** 0x2000 *\/\n@@ -571,0 +1062,2 @@\n+\n+    \/** 0x0020 *\/\n@@ -573,0 +1066,2 @@\n+\n+    \/** 0x0400 *\/\n@@ -574,0 +1069,2 @@\n+\n+    \/** 0x0040 *\/\n@@ -575,0 +1072,2 @@\n+\n+    \/** 0x0080 *\/\n@@ -576,0 +1075,2 @@\n+\n+    \/** 0x1000 *\/\n@@ -577,0 +1078,2 @@\n+\n+    \/** 0x0008 *\/\n@@ -578,0 +1081,2 @@\n+\n+    \/** 0x0010 *\/\n@@ -579,0 +1084,2 @@\n+\n+    \/** 0x0020 *\/\n@@ -580,0 +1087,2 @@\n+\n+    \/** 0x0040 *\/\n@@ -581,0 +1090,2 @@\n+\n+    \/** 0x0080 *\/\n@@ -582,0 +1093,2 @@\n+\n+    \/** 0x0100 *\/\n@@ -583,0 +1096,2 @@\n+\n+    \/** 0x0800 *\/\n@@ -584,0 +1099,2 @@\n+\n+    \/** 0x8000 *\/\n@@ -585,0 +1102,2 @@\n+\n+    \/** 0x20 *\/\n@@ -586,0 +1105,2 @@\n+\n+    \/** 0x8000 *\/\n@@ -587,0 +1108,2 @@\n+\n+    \/** 0x20 *\/\n@@ -588,0 +1111,2 @@\n+\n+    \/** 0x40 *\/\n@@ -590,0 +1115,1 @@\n+    \/** 0x0001 *\/\n@@ -591,0 +1117,2 @@\n+\n+    \/** 0x0002 *\/\n@@ -592,0 +1120,2 @@\n+\n+    \/** 0x0004 *\/\n@@ -593,0 +1123,2 @@\n+\n+    \/** 0x0008 *\/\n@@ -594,0 +1126,2 @@\n+\n+    \/** 0x0010 *\/\n@@ -595,0 +1129,2 @@\n+\n+    \/** 0x0020 *\/\n@@ -596,0 +1132,2 @@\n+\n+    \/** 0x0040 *\/\n@@ -597,0 +1135,2 @@\n+\n+    \/** 0x0080 *\/\n@@ -598,0 +1138,2 @@\n+\n+    \/** 0x0100 *\/\n@@ -600,0 +1142,1 @@\n+    \/** 7 *\/\n@@ -601,0 +1144,2 @@\n+\n+    \/** 17 *\/\n@@ -602,0 +1147,2 @@\n+\n+    \/** 6 *\/\n@@ -603,0 +1150,2 @@\n+\n+    \/** 9 *\/\n@@ -604,0 +1153,2 @@\n+\n+    \/** 4 *\/\n@@ -605,0 +1156,2 @@\n+\n+    \/** 3 *\/\n@@ -606,0 +1159,2 @@\n+\n+    \/** 11 *\/\n@@ -607,0 +1162,2 @@\n+\n+    \/** 18 *\/\n@@ -608,0 +1165,2 @@\n+\n+    \/** 5 *\/\n@@ -609,0 +1168,2 @@\n+\n+    \/** 15 *\/\n@@ -610,0 +1171,2 @@\n+\n+    \/** 10 *\/\n@@ -611,0 +1174,2 @@\n+\n+    \/** 16 *\/\n@@ -612,0 +1177,2 @@\n+\n+    \/** 19 *\/\n@@ -613,0 +1180,2 @@\n+\n+    \/** 12 *\/\n@@ -614,0 +1183,2 @@\n+\n+    \/** 20 *\/\n@@ -615,0 +1186,2 @@\n+\n+    \/** 8 *\/\n@@ -616,0 +1189,2 @@\n+\n+    \/** 2 *\/\n@@ -617,0 +1192,2 @@\n+\n+    \/** 1 *\/\n@@ -620,0 +1197,2 @@\n+\n+    \/** 'B' *\/\n@@ -621,0 +1200,2 @@\n+\n+    \/** 'C' *\/\n@@ -622,0 +1203,2 @@\n+\n+    \/** 'D' *\/\n@@ -623,0 +1206,2 @@\n+\n+    \/** 'F' *\/\n@@ -624,0 +1209,2 @@\n+\n+    \/** 'I' *\/\n@@ -625,0 +1212,2 @@\n+\n+    \/** 'J' *\/\n@@ -626,0 +1215,2 @@\n+\n+    \/** 'S' *\/\n@@ -627,0 +1218,2 @@\n+\n+    \/** 'Z' *\/\n@@ -628,0 +1221,2 @@\n+\n+    \/** 's' *\/\n@@ -629,0 +1224,2 @@\n+\n+    \/** 'e' *\/\n@@ -630,0 +1227,2 @@\n+\n+    \/** 'c' *\/\n@@ -631,0 +1230,2 @@\n+\n+    \/** '@' *\/\n@@ -632,0 +1233,2 @@\n+\n+    \/** '[' *\/\n@@ -635,0 +1238,2 @@\n+\n+    \/** 0x00 *\/\n@@ -636,0 +1241,2 @@\n+\n+    \/** 0x01 *\/\n@@ -637,0 +1244,2 @@\n+\n+    \/** 0x10 *\/\n@@ -638,0 +1247,2 @@\n+\n+    \/** 0x11 *\/\n@@ -639,0 +1250,2 @@\n+\n+    \/** 0x12 *\/\n@@ -640,0 +1253,2 @@\n+\n+    \/** 0x13 *\/\n@@ -641,0 +1256,2 @@\n+\n+    \/** 0x14 *\/\n@@ -642,0 +1259,2 @@\n+\n+    \/** 0x15 *\/\n@@ -643,0 +1262,2 @@\n+\n+    \/** 0x16 *\/\n@@ -644,0 +1265,2 @@\n+\n+    \/** 0x17 *\/\n@@ -645,0 +1268,2 @@\n+\n+    \/** 0x40 *\/\n@@ -646,0 +1271,2 @@\n+\n+    \/** 0x41 *\/\n@@ -647,0 +1274,2 @@\n+\n+    \/** 0x42 *\/\n@@ -648,0 +1277,2 @@\n+\n+    \/** 0x43 *\/\n@@ -649,0 +1280,2 @@\n+\n+    \/** 0x44 *\/\n@@ -650,0 +1283,2 @@\n+\n+    \/** 0x45 *\/\n@@ -651,0 +1286,2 @@\n+\n+    \/** 0x46 *\/\n@@ -652,0 +1289,2 @@\n+\n+    \/** 0x47 *\/\n@@ -653,0 +1292,2 @@\n+\n+    \/** 0x48 *\/\n@@ -654,0 +1295,2 @@\n+\n+    \/** 0x49 *\/\n@@ -655,0 +1298,2 @@\n+\n+    \/** 0x4A *\/\n@@ -656,0 +1301,2 @@\n+\n+    \/** 0x4B *\/\n@@ -659,0 +1306,2 @@\n+\n+    \/** 0 *\/\n@@ -660,0 +1309,2 @@\n+\n+    \/** 1 *\/\n@@ -661,0 +1312,2 @@\n+\n+    \/** 2 *\/\n@@ -662,0 +1315,2 @@\n+\n+    \/** 3 *\/\n@@ -663,0 +1318,2 @@\n+\n+    \/** 4 *\/\n@@ -664,0 +1321,2 @@\n+\n+    \/** 5 *\/\n@@ -665,0 +1324,2 @@\n+\n+    \/** 6 *\/\n@@ -666,0 +1327,2 @@\n+\n+    \/** 7 *\/\n@@ -667,0 +1330,2 @@\n+\n+    \/** 8 *\/\n@@ -669,0 +1334,1 @@\n+    \/** ACC_PUBLIC *\/\n@@ -671,0 +1337,1 @@\n+    \/** 45 *\/\n@@ -672,0 +1339,2 @@\n+\n+    \/** 46 *\/\n@@ -673,0 +1342,2 @@\n+\n+    \/** 47 *\/\n@@ -674,0 +1345,2 @@\n+\n+    \/** 48 *\/\n@@ -675,0 +1348,2 @@\n+\n+    \/** 49 *\/\n@@ -676,0 +1351,2 @@\n+\n+    \/** 50 *\/\n@@ -677,0 +1354,2 @@\n+\n+    \/** 51 *\/\n@@ -678,0 +1357,2 @@\n+\n+    \/** 52 *\/\n@@ -679,0 +1360,2 @@\n+\n+    \/** 53 *\/\n@@ -680,0 +1363,2 @@\n+\n+    \/** 54 *\/\n@@ -681,0 +1366,2 @@\n+\n+    \/** 55 *\/\n@@ -682,0 +1369,2 @@\n+\n+    \/** 56 *\/\n@@ -683,0 +1372,2 @@\n+\n+    \/** 57 *\/\n@@ -684,0 +1375,2 @@\n+\n+    \/** 58 *\/\n@@ -685,0 +1378,2 @@\n+\n+    \/** 59 *\/\n@@ -686,0 +1381,2 @@\n+\n+    \/** 60 *\/\n@@ -687,0 +1384,2 @@\n+\n+    \/** 61 *\/\n@@ -688,0 +1387,2 @@\n+\n+    \/** 62 *\/\n@@ -689,0 +1390,2 @@\n+\n+    \/** 63 *\/\n@@ -690,0 +1393,2 @@\n+\n+    \/** 64 *\/\n@@ -691,0 +1396,2 @@\n+\n+    \/** 65 *\/\n@@ -692,0 +1399,2 @@\n+\n+    \/** 66 *\/\n@@ -701,0 +1410,3 @@\n+    \/**\n+     * {@return the latest major Java version}\n+     *\/\n@@ -705,0 +1417,3 @@\n+    \/**\n+     * {@return the latest minor Java version}\n+     *\/\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/Classfile.java","additions":716,"deletions":1,"binary":false,"changes":717,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1178,0 +1178,4 @@\n+    public void printMessage(Diagnostic.Kind kind, CharSequence msg) {\n+        printMessage(kind, msg, (JCDiagnostic.DiagnosticPosition) null, null);\n+    }\n+\n@@ -1184,1 +1188,1 @@\n-        newSource = root.getSourceFile();\n+        newSource = root == null ? null : root.getSourceFile();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/api\/JavacTrees.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2206,0 +2206,2 @@\n+        \/\/don't include unnamed variables:\n+        if (var.sym.name == var.sym.name.table.names.empty) return ;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Code.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -918,2 +918,0 @@\n-        if (processors != null && processors.iterator().hasNext())\n-            explicitAnnotationProcessingRequested = true;\n@@ -1146,0 +1144,3 @@\n+        if (processors != null && processors.iterator().hasNext())\n+            explicitAnnotationProcessingRequested = true;\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -4021,1 +4021,1 @@\n-        while (token.kind != EOF) {\n+        OUTER: while (token.kind != EOF) {\n@@ -4036,0 +4036,2 @@\n+                if (token.kind == EOF)\n+                    break OUTER;\n@@ -4102,1 +4104,1 @@\n-                } else if (token.kind != EOF) {\n+                } else {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2127,0 +2127,10 @@\n+    public static final String X86_TESTI_REG = PREFIX + \"X86_TESTI_REG\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(X86_TESTI_REG, \"testI_reg\");\n+    }\n+\n+    public static final String X86_TESTL_REG = PREFIX + \"X86_TESTL_REG\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(X86_TESTL_REG, \"testL_reg\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -95,0 +95,1 @@\n+            out.shouldContain(\"BootstrapMethods:\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbDumpclass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -546,0 +546,2 @@\n+java\/nio\/channels\/DatagramChannel\/AfterDisconnect.java          8308807 aix-ppc64\n+\n@@ -550,1 +552,1 @@\n-jdk\/nio\/zipfs\/TestLocOffsetFromZip64EF.java                     8301183 linux-all\n+java\/nio\/file\/Path\/ToRealPath.java                              8315273 windows-all\n@@ -552,1 +554,1 @@\n-java\/nio\/channels\/DatagramChannel\/AfterDisconnect.java          8308807 aix-ppc64\n+jdk\/nio\/zipfs\/TestLocOffsetFromZip64EF.java                     8301183 linux-all\n@@ -583,2 +585,0 @@\n-sun\/security\/pkcs11\/sslecc\/ClientJSSEServerJSSE.java            8161536 generic-all\n-\n@@ -729,3 +729,3 @@\n-sun\/tools\/jstatd\/TestJstatdDefaults.java                        8081569,8226420 windows-all\n-sun\/tools\/jstatd\/TestJstatdRmiPort.java                         8226420,8251259,8293577 generic-all\n-sun\/tools\/jstatd\/TestJstatdServer.java                          8081569,8226420 windows-all\n+sun\/tools\/jstatd\/TestJstatdDefaults.java                        8081569 windows-all\n+sun\/tools\/jstatd\/TestJstatdRmiPort.java                         8251259,8293577 generic-all\n+sun\/tools\/jstatd\/TestJstatdServer.java                          8081569 windows-all\n","filename":"test\/jdk\/ProblemList.txt","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}