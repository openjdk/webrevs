{"files":[{"patch":"@@ -26,1 +26,1 @@\n- * @summary Test that IsIdentityClass and modifiers return true for flattened arrays.\n+ * @summary Test that IsIdentityClass and modifiers return true for arrays that can be flattened.\n@@ -31,2 +31,1 @@\n- * @run junit\/othervm --enable-preview -XX:-UseArrayFlattening -XX:-UseNullableValueFlattening IsIdentityClassTest\n- * @run junit\/othervm --enable-preview -XX:+UseArrayFlattening -XX:+UseNullableValueFlattening IsIdentityClassTest\n+ * @run junit\/othervm --enable-preview IsIdentityClassTest\n@@ -37,2 +36,0 @@\n-import java.lang.management.ManagementFactory;\n-import java.lang.management.RuntimeMXBean;\n@@ -41,1 +38,0 @@\n-import java.util.List;\n@@ -52,5 +48,1 @@\n-        if (PreviewFeatures.isEnabled()) {\n-            assertFalse(condition, msg);\n-        } else {\n-            assertTrue(condition, msg);\n-        }\n+        assertEquals(!PreviewFeatures.isEnabled(), condition, msg);\n@@ -61,11 +53,0 @@\n-        RuntimeMXBean runtimeMxBean = ManagementFactory.getRuntimeMXBean();\n-        List<String> arguments = runtimeMxBean.getInputArguments();\n-        boolean UseArrayFlattening = !arguments.contains(\"-XX:-UseArrayFlattening\");\n-        System.out.println(\"UseArrayFlattening: \" + UseArrayFlattening);\n-\n-        Integer[] array0 = new Integer[200];\n-        if (UseArrayFlattening) {\n-            \/\/ NYI assertTrue(ValueClass.isFlatArray(array0));\n-        } else {\n-            assertFalse(ValueClass.isFlatArray(array0));\n-        }\n","filename":"test\/jdk\/valhalla\/valuetypes\/IsIdentityClassTest.java","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"}]}