{"files":[{"patch":"@@ -1324,3 +1324,2 @@\n-                boolean isNonNullableInstanceFieldOfNonValueClass =\n-                        (!sym.owner.type.isValueClass() && (flags & STATIC) == 0) && types.isNonNullable(sym.type);\n-                mask = isInstanceFieldOfValueClass || isNonNullableInstanceFieldOfNonValueClass ? ExtendedVarFlags : VarFlags;\n+                boolean isNonNullableFieldOfNonValueClass = !sym.owner.type.isValueClass() && types.isNonNullable(sym.type);\n+                mask = isInstanceFieldOfValueClass || isNonNullableFieldOfNonValueClass ? ExtendedVarFlags : VarFlags;\n@@ -1329,1 +1328,1 @@\n-                } else if (isNonNullableInstanceFieldOfNonValueClass) {\n+                } else if (isNonNullableFieldOfNonValueClass) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @bug 8339357 8340027\n@@ -878,0 +879,8 @@\n+                        new DiagAndCode(\n+                                \"\"\"\n+                                class Test {\n+                                    Object! o;\n+                                }\n+                                \"\"\",\n+                                Result.Error,\n+                                \"compiler.err.non.nullable.should.be.initialized\"),\n@@ -906,0 +915,28 @@\n+                                \"\"),\n+                        \/\/ static fields\n+                        new DiagAndCode(\n+                                \"\"\"\n+                                class Test {\n+                                    static Object! o;\n+                                }\n+                                \"\"\",\n+                                Result.Error,\n+                                \"compiler.err.non.nullable.should.be.initialized\"),\n+                        new DiagAndCode(\n+                                \"\"\"\n+                                class Test {\n+                                    static Object! o = new Object();\n+                                }\n+                                \"\"\",\n+                                Result.Clean,\n+                                \"\"),\n+                        new DiagAndCode(\n+                                \"\"\"\n+                                class Test {\n+                                    static Object! o;\n+                                    static {\n+                                        o = new Object();\n+                                    }\n+                                }\n+                                \"\"\",\n+                                Result.Clean,\n@@ -915,0 +952,5 @@\n+                \"\"\",\n+                \"\"\"\n+                class Test {\n+                    static Object! o = new Object();\n+                }\n@@ -924,0 +966,3 @@\n+                    } else {\n+                        Set<String> fieldFlags = field.access_flags.getFieldFlags();\n+                        Assert.check(fieldFlags.size() == 2 && fieldFlags.contains(\"ACC_STRICT\") && fieldFlags.contains(\"ACC_STATIC\"));\n","filename":"test\/langtools\/tools\/javac\/nullability\/NullabilityCompilationTests.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"modified"}]}