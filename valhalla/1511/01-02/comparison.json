{"files":[{"patch":"@@ -3840,1 +3840,1 @@\n-        Symbol* name = (*sig)._symbol;\n+        Symbol* name = (*sig)._name;\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -209,3 +209,2 @@\n-protected:\n-  virtual FieldStreamType& current_stream () = 0;\n-  virtual const FieldStreamType& current_stream () const = 0;\n+  virtual FieldStreamType& current_stream() = 0;\n+  virtual const FieldStreamType& current_stream() const = 0;\n@@ -277,1 +276,1 @@\n-class HierarchicalFieldStream : public HierarchicalFieldStreamBase<FieldStreamType>  {\n+class HierarchicalFieldStream final : public HierarchicalFieldStreamBase<FieldStreamType>  {\n@@ -315,1 +314,0 @@\n- protected:\n@@ -320,1 +318,1 @@\n-  HierarchicalFieldStream(InstanceKlass* klass) :\n+  explicit HierarchicalFieldStream(InstanceKlass* klass) :\n@@ -342,1 +340,1 @@\n-class TopDownHierarchicalNonStaticFieldStreamBase : public HierarchicalFieldStreamBase<JavaFieldStream> {\n+class TopDownHierarchicalNonStaticFieldStreamBase final : public HierarchicalFieldStreamBase<JavaFieldStream> {\n@@ -377,1 +375,0 @@\n- protected:\n","filename":"src\/hotspot\/share\/oops\/fieldStreams.hpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -451,1 +451,1 @@\n-          tty->print(\"  %s: %s+%d\", entry._symbol->as_C_string(), type2name(entry._bt), entry._offset);\n+          tty->print(\"  %s: %s+%d\", entry._name->as_C_string(), type2name(entry._bt), entry._offset);\n","filename":"src\/hotspot\/share\/oops\/inlineKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -683,2 +683,2 @@\n-void SigEntry::add_entry(GrowableArray<SigEntry>* sig, BasicType bt, Symbol* symbol, int offset) {\n-  sig->append(SigEntry(bt, offset, symbol, false));\n+void SigEntry::add_entry(GrowableArray<SigEntry>* sig, BasicType bt, Symbol* name, int offset) {\n+  sig->append(SigEntry(bt, offset, name, false));\n@@ -686,1 +686,1 @@\n-    sig->append(SigEntry(T_VOID, offset, symbol, false)); \/\/ Longs and doubles take two stack slots\n+    sig->append(SigEntry(T_VOID, offset, name, false)); \/\/ Longs and doubles take two stack slots\n@@ -689,2 +689,2 @@\n-void SigEntry::add_null_marker(GrowableArray<SigEntry>* sig, Symbol* symbol, int offset) {\n-  sig->append(SigEntry(T_BOOLEAN, offset, symbol, true));\n+void SigEntry::add_null_marker(GrowableArray<SigEntry>* sig, Symbol* name, int offset) {\n+  sig->append(SigEntry(T_BOOLEAN, offset, name, true));\n","filename":"src\/hotspot\/share\/runtime\/signature.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -582,1 +582,1 @@\n-  Symbol* _symbol;    \/\/ Symbol for printing\n+  Symbol* _name;    \/\/ Symbol for printing\n@@ -586,1 +586,1 @@\n-    : _bt(T_ILLEGAL), _offset(-1), _symbol(nullptr) {}\n+    : _bt(T_ILLEGAL), _offset(-1), _name(nullptr) {}\n@@ -588,2 +588,2 @@\n-  SigEntry(BasicType bt, int offset, Symbol* symbol, bool null_marker)\n-    : _bt(bt), _offset(offset), _symbol(symbol), _null_marker(null_marker) {}\n+  SigEntry(BasicType bt, int offset, Symbol* name, bool null_marker)\n+    : _bt(bt), _offset(offset), _name(name), _null_marker(null_marker) {}\n@@ -591,2 +591,2 @@\n-  static void add_entry(GrowableArray<SigEntry>* sig, BasicType bt, Symbol* symbol = nullptr, int offset = -1);\n-  static void add_null_marker(GrowableArray<SigEntry>* sig, Symbol* symbol, int offset);\n+  static void add_entry(GrowableArray<SigEntry>* sig, BasicType bt, Symbol* name = nullptr, int offset = -1);\n+  static void add_null_marker(GrowableArray<SigEntry>* sig, Symbol* name, int offset);\n","filename":"src\/hotspot\/share\/runtime\/signature.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}