{"files":[{"patch":"@@ -3877,1 +3877,0 @@\n-  Label is_not_value;\n@@ -3894,8 +3893,0 @@\n-  __ ldrb(rscratch1, Address(r4, InstanceKlass::kind_offset()));\n-  __ cmp(rscratch1, (u1)Klass::InlineKlassKind);\n-  __ br(Assembler::NE, is_not_value);\n-\n-  __ call_VM(noreg, CAST_FROM_FN_PTR(address, InterpreterRuntime::throw_InstantiationError));\n-\n-  __ bind(is_not_value);\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+        testUnresolvedAndResolvedNew();\n@@ -94,0 +95,15 @@\n+\n+    static value class MyPoint {\n+         int x,y;\n+         MyPoint(int x, int y) {\n+             this.x = x;\n+             this.y = y;\n+         }\n+     }\n+\n+    \/\/ Two instantiations of the same class to exercise both the unresolved and resolved paths\n+    \/\/ in bytecode 'new' implementation\n+    void testUnresolvedAndResolvedNew(){\n+         MyPoint p1 = new MyPoint(10, 20);\n+         MyPoint p2 = new MyPoint(20, 20);\n+     }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypeCreation.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}