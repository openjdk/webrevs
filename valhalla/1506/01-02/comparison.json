{"files":[{"patch":"@@ -38,0 +38,2 @@\n+import static java.lang.classfile.ClassFile.PREVIEW_MINOR_VERSION;\n+import static java.lang.classfile.ClassFile.latestMajorVersion;\n@@ -198,1 +200,6 @@\n-        var strictInstanceFields = WritableField.filterStrictInstanceFields(constantPool, fields, fieldsCount);\n+        WritableField.UnsetField[] strictInstanceFields;\n+        if (minorVersion == PREVIEW_MINOR_VERSION && majorVersion >= Util.VALUE_OBJECTS_MAJOR) {\n+            strictInstanceFields = WritableField.filterStrictInstanceFields(constantPool, fields, fieldsCount);\n+        } else {\n+            strictInstanceFields = WritableField.UnsetField.EMPTY_ARRAY;\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectClassBuilder.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -124,0 +124,2 @@\n+        if (clazz.minorVersion() != PREVIEW_MINOR_VERSION || clazz.majorVersion() < Util.VALUE_OBJECTS_MAJOR)\n+            return List.of();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapDecoder.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,0 +65,2 @@\n+    public static final int VALUE_OBJECTS_MAJOR = ClassFile.latestMajorVersion();\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/Util.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+import jdk.internal.classfile.impl.Util;\n@@ -118,0 +119,1 @@\n+    static final int VALUE_TYPES_MAJOR_VERSION = Util.VALUE_OBJECTS_MAJOR;\n@@ -257,1 +259,2 @@\n-        return ver >= 67 && klass.clm.minorVersion() == ClassFile.PREVIEW_MINOR_VERSION;\n+        return ver > VALUE_TYPES_MAJOR_VERSION ||\n+                (ver == VALUE_TYPES_MAJOR_VERSION && klass.clm.minorVersion() == ClassFile.PREVIEW_MINOR_VERSION);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/VerifierImpl.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -90,0 +90,36 @@\n+    @Test\n+    void noEarlyFrameInOldTest() {\n+        var className = \"Test\";\n+        var classDesc = ClassDesc.of(className);\n+        var classBytes = ClassFile.of().build(classDesc, clb -> clb\n+                .withVersion(JAVA_26_VERSION, 0)\n+                .withFlags(ACC_PUBLIC | ACC_SUPER)\n+                .withField(\"fs\", CD_int, ACC_STRICT) \/\/ spurious meaningless flags in 70.0\n+                .withField(\"fsf\", CD_int, ACC_STRICT | ACC_FINAL)\n+                .withMethodBody(INIT_NAME, MTD_void, 0, cob -> cob\n+                        .aload(0)\n+                        .iconst_5()\n+                        .putfield(classDesc, \"fs\", CD_int)\n+                        .aload(0)\n+                        .iconst_0()\n+                        .ifThenElse(thb -> thb\n+                                .iconst_3()\n+                                .putfield(classDesc, \"fsf\", CD_int), elb -> elb\n+                                .iconst_2()\n+                                .putfield(classDesc, \"fsf\", CD_int))\n+                        .aload(0)\n+                        .invokespecial(CD_Object, INIT_NAME, MTD_void)\n+                        .return_()));\n+        runtimeVerify(className, classBytes);\n+        var classModel = ClassFile.of().parse(classBytes);\n+        var ctorModel = classModel.methods().getFirst();\n+        var stackMaps = ctorModel.code().orElseThrow().findAttribute(Attributes.stackMapTable()).orElseThrow();\n+        assertEquals(2, stackMaps.entries().size(), \"if -> else, then -> end\");\n+        var elseFrame = stackMaps.entries().get(0);\n+        assertNotEquals(246, elseFrame.frameType(), \"if -> else\");\n+        assertEquals(List.of(), elseFrame.unsetFields());\n+        var mergedFrame = stackMaps.entries().get(1);\n+        assertNotEquals(246, mergedFrame.frameType(), \"then -> merge\");\n+        assertEquals(List.of(), mergedFrame.unsetFields());\n+    }\n+\n","filename":"test\/jdk\/jdk\/classfile\/StrictStackMapsTest.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"}]}