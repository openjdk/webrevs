{"files":[{"patch":"@@ -178,0 +178,1 @@\n+        allowFlexibleConstructors = Feature.FLEXIBLE_CONSTRUCTORS.allowedInSource(source);\n@@ -209,0 +210,4 @@\n+    \/** Are flexible constructors allowed\n+     *\/\n+    private final boolean allowFlexibleConstructors;\n+\n@@ -1315,1 +1320,1 @@\n-                    log.error(tree, Errors.CantRefBeforeCtorCalled(sym));\n+                    reportError(tree, sym);\n@@ -1320,0 +1325,5 @@\n+        private void reportError(JCTree tree, Symbol sym) {\n+            preview.checkSourceLevel(tree, Feature.FLEXIBLE_CONSTRUCTORS);\n+            log.error(tree, Errors.CantRefBeforeCtorCalled(sym));\n+        }\n+\n@@ -1331,1 +1341,1 @@\n-                            log.error(tree.meth, Errors.CantRefBeforeCtorCalled(msym));\n+                            reportError(tree.meth, msym);\n@@ -1334,1 +1344,1 @@\n-                        log.error(tree.meth, Errors.CantRefBeforeCtorCalled(msym));\n+                        reportError(tree.meth, msym);\n@@ -1341,1 +1351,1 @@\n-                        log.error(tree.meth, Errors.CantRefBeforeCtorCalled(msym));\n+                        reportError(tree.meth, msym);\n@@ -1369,1 +1379,1 @@\n-                log.error(tree, Errors.CantRefBeforeCtorCalled(t.getEnclosingType().tsym));\n+                reportError(tree, t.getEnclosingType().tsym);\n@@ -1406,1 +1416,1 @@\n-                            log.error(tree, Errors.CantRefBeforeCtorCalled(sym));\n+                            reportError(tree, sym);\n@@ -1422,1 +1432,1 @@\n-                                log.error(tree, Errors.CantRefBeforeCtorCalled(sym));\n+                                reportError(tree, sym);\n@@ -1430,1 +1440,1 @@\n-                                    log.error(tree, Errors.CantRefBeforeCtorCalled(sym));\n+                                    reportError(tree, sym);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -12,1 +12,2 @@\n-        this(r = () -> System.out.println(\"hello\"));\n+        r = () -> System.out.println(\"hello\");\n+        this(r);\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/EarlyAssignmentNoPreview1.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-EarlyAssignmentNoPreview1.java:12:14: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n+EarlyAssignmentNoPreview1.java:13:13: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/EarlyAssignmentNoPreview1.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,2 @@\n-        this(this.r = () -> System.out.println(\"hello\"));\n+        this.r = () -> System.out.println(\"hello\");\n+        this(this.r);\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/EarlyAssignmentNoPreview2.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-EarlyAssignmentNoPreview2.java:12:14: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n+EarlyAssignmentNoPreview2.java:13:13: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/EarlyAssignmentNoPreview2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,2 @@\n-        this(EarlyAssignmentNoPreview3.this.r = () -> System.out.println(\"hello\"));\n+        EarlyAssignmentNoPreview3.this.r = () -> System.out.println(\"hello\");\n+        this(EarlyAssignmentNoPreview3.this.r);\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/EarlyAssignmentNoPreview3.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-EarlyAssignmentNoPreview3.java:12:39: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n+EarlyAssignmentNoPreview3.java:13:13: compiler.err.feature.not.supported.in.source: (compiler.misc.feature.flexible.constructors), 24, 25\n","filename":"test\/langtools\/tools\/javac\/SuperInit\/EarlyAssignmentNoPreview3.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}