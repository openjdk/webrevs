{"files":[{"patch":"@@ -43,2 +43,0 @@\n-\/** this test was already failing no relation with the added -XDenablePrimitiveClasses option *\/\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestJNICalls.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @compile -XDenablePrimitiveClasses TestNativeClone.java\n+ * @compile TestNativeClone.java\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestNativeClone.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @compile -XDenablePrimitiveClasses TestUnloadedReturnTypes.java\n+ * @compile TestUnloadedReturnTypes.java\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestUnloadedReturnTypes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @compile -XDenablePrimitiveClasses TestWithSpeculativeTypes.java\n+ * @compile TestWithSpeculativeTypes.java\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestWithSpeculativeTypes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @compile -XDenablePrimitiveClasses test-classes\/HelloInlineClassApp.java\n+ * @compile test-classes\/HelloInlineClassApp.java\n@@ -37,1 +37,0 @@\n-\/\/@compile -XDenablePrimitiveClasses HelloInlineClassApp HelloInlineClassTest.java\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/HelloInlineClassTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @compile -XDenablePrimitiveClasses test-classes\/RewriteBytecodesInline.java test-classes\/Util.java test-classes\/Point.java test-classes\/WithInlinedField.java RewriteBytecodesInlineTest.java\n+ * @compile test-classes\/RewriteBytecodesInline.java test-classes\/Util.java test-classes\/Point.java test-classes\/WithInlinedField.java RewriteBytecodesInlineTest.java\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/RewriteBytecodesInlineTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @compile -XDenablePrimitiveClasses ..\/test-classes\/HelloInlineClassApp.java ..\/test-classes\/HelloRelocation.java\n+ * @compile ..\/test-classes\/HelloInlineClassApp.java ..\/test-classes\/HelloRelocation.java\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/DynamicArchiveRelocationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @compile -XDenablePrimitiveClasses ..\/test-classes\/HelloInlineClassApp.java\n+ * @compile ..\/test-classes\/HelloInlineClassApp.java\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/HelloDynamicInlineClass.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @compile -XDenablePrimitiveClasses VDefaultTest.java CheckcastTest.java\n+ * @compile VDefaultTest.java CheckcastTest.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/CheckcastTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @compile -XDenablePrimitiveClasses MultiANewArrayTypeCheck.jcod MultiANewArrayTest.java Element0.java Element1.java\n+ * @compile MultiANewArrayTypeCheck.jcod MultiANewArrayTest.java Element0.java Element1.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/MultiANewArrayTest\/MultiANewArrayTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @compile -XDenablePrimitiveClasses Point.java TestBytecodeLib.java\n+ * @compile Point.java TestBytecodeLib.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/TestBytecodeLib.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @compile -XDenablePrimitiveClasses TestFieldTypeMismatch.java\n+ * @compile TestFieldTypeMismatch.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/TestFieldTypeMismatch.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,2 +33,2 @@\n- * @compile -XDenablePrimitiveClasses Point.java\n- * @compile -XDallowFlattenabilityModifiers -XDenablePrimitiveClasses VDefaultTest.java\n+ * @compile Point.java\n+ * @compile -XDallowFlattenabilityModifiers VDefaultTest.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/VDefaultTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @compile -XDenablePrimitiveClasses ValueTearing.java\n+ * @compile ValueTearing.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ValueTearing.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @compile -XDenablePrimitiveClasses WithFieldAccessorTest.java\n+ * @compile WithFieldAccessorTest.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/WithFieldAccessorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @compile -XDenablePrimitiveClasses Point.java WithFieldTest.java\n+ * @compile Point.java WithFieldTest.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/WithFieldTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @compile -XDenablePrimitiveClasses VTAssignability.java\n+ * @compile VTAssignability.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/VTAssignability.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @compile -XDenablePrimitiveClasses withfieldTests.jcod RunWithfieldTests.java\n+ * @compile withfieldTests.jcod RunWithfieldTests.java\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/withfieldTests\/RunWithfieldTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @compile -XDenablePrimitiveClasses FieldAccessModify.java\n+ * @compile FieldAccessModify.java\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/Valhalla\/FieldAccessModify\/FieldAccessModify.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @compile -XDenablePrimitiveClasses HeapDump.java\n+ * @compile HeapDump.java\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/Valhalla\/HeapDump\/HeapDump.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @compile -XDenablePrimitiveClasses ValueSerialization.java\n+ * @compile ValueSerialization.java\n","filename":"test\/jdk\/java\/io\/Serializable\/valueObjects\/ValueSerialization.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @compile -XDenablePrimitiveClasses GenericStringTest.java\n+ * @compile GenericStringTest.java\n","filename":"test\/jdk\/java\/lang\/Class\/GenericStringTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,2 +37,0 @@\n- * @compile -XDenablePrimitiveClasses TestApisWithProjections.java\n- * @run main TestApisWithProjections\n","filename":"test\/langtools\/tools\/javac\/api\/TestApisWithProjections.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=CheckThisLeak.out -XDrawDiagnostics -XDdev -XDenablePrimitiveClasses CheckThisLeak.java\n+ * @compile\/fail\/ref=CheckThisLeak.out -XDrawDiagnostics -XDdev CheckThisLeak.java\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckThisLeak.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    private static String[] DEFAULT_OPTIONS = {\"-XDenablePrimitiveClasses\"};\n+    private static String[] DEFAULT_OPTIONS = {};\n@@ -454,1 +454,1 @@\n-            String[] testOptions = {\"-Xlint:all\", \"-XDenablePrimitiveClasses\"};\n+            String[] testOptions = {\"-Xlint:all\"};\n@@ -663,1 +663,1 @@\n-            String[] testOptions = {\"-Xlint:all\", \"-XDenablePrimitiveClasses\"};\n+            String[] testOptions = {\"-Xlint:all\"};\n@@ -1184,1 +1184,1 @@\n-            String[] testOptions = {\"--add-exports\", \"java.base\/jdk.internal.value=ALL-UNNAMED\", \"-XDenablePrimitiveClasses\"};\n+            String[] testOptions = {\"--add-exports\", \"java.base\/jdk.internal.value=ALL-UNNAMED\"};\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/PrimitiveClassesCompilationTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @compile -XDenablePrimitiveClasses SideEffectTest.java\n+ * @compile SideEffectTest.java\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SideEffectTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @compile -XDenablePrimitiveClasses ConstructorRefTest.java\n+ * @compile ConstructorRefTest.java\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ConstructorRefTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=DualNonDuplicateErrors.out -XDrawDiagnostics -XDenablePrimitiveClasses DualNonDuplicateErrors.java\n+ * @compile\/fail\/ref=DualNonDuplicateErrors.out -XDrawDiagnostics DualNonDuplicateErrors.java\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/DualNonDuplicateErrors.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n- * @compile -XDenablePrimitiveClasses PermitsValueTest.java\n- * @run main PermitsValueTest\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/PermitsValueTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}