{"files":[{"patch":"@@ -97,1 +97,1 @@\n-\t\t\t\t--add-exports java.base\/jdk.internal.value=ALL-UNNAMED \\\n+        --add-exports java.base\/jdk.internal.value=ALL-UNNAMED \\\n","filename":"make\/test\/BuildMicrobenchmark.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -441,1 +441,1 @@\n-  objArrayOop obj = oopFactory::new_objArray(elem_klass, length, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+  objArrayOop obj = oopFactory::new_objArray(elem_klass, length, CHECK);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -311,1 +311,1 @@\n-        vmClasses::ProtectionDomain_klass(), size, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+        vmClasses::ProtectionDomain_klass(), size, CHECK);\n@@ -323,1 +323,1 @@\n-        vmClasses::URL_klass(), size, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+        vmClasses::URL_klass(), size, CHECK);\n@@ -335,1 +335,1 @@\n-        vmClasses::Jar_Manifest_klass(), size, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+        vmClasses::Jar_Manifest_klass(), size, CHECK);\n","filename":"src\/hotspot\/share\/cds\/cdsProtectionDomain.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1140,1 +1140,1 @@\n-  objArrayOop array = oopFactory::new_objArray(vmClasses::String_klass(), args.length(), ArrayKlass::ArrayProperties::DEFAULT, CHECK_0);\n+  objArrayOop array = oopFactory::new_objArray(vmClasses::String_klass(), args.length(), CHECK_0);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1138,1 +1138,1 @@\n-            value = oopFactory::new_objArray(kelem, length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_(true));\n+            value = oopFactory::new_objArray(kelem, length, CHECK_(true));\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -929,1 +929,1 @@\n-                                           loaded_class_pkgs->length(), ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+                                           loaded_class_pkgs->length(), CHECK_NULL);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-  objArrayOop pn = oopFactory::new_objArray(vmClasses::String_klass(), len, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop pn = oopFactory::new_objArray(vmClasses::String_klass(), len, CHECK_NULL);\n@@ -115,1 +115,1 @@\n-  objArrayOop cn = oopFactory::new_objArray(vmClasses::String_klass(), len, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop cn = oopFactory::new_objArray(vmClasses::String_klass(), len, CHECK_NULL);\n","filename":"src\/hotspot\/share\/classfile\/javaAssertions.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1137,1 +1137,1 @@\n-    if (k->is_refArray_klass() || k->is_flatArray_klass()) {\n+    if (k->is_refined_objArray_klass()) {\n@@ -1246,1 +1246,1 @@\n-    \/\/ Mirror is either an ObjArrayKlass or one of its refined array klasses\n+    \/\/ Mirror should be restored for an ObjArrayKlass or one of its refined array klasses\n@@ -1485,1 +1485,1 @@\n-  assert(!klass->is_refArray_klass() && !klass->is_flatArray_klass(), \"should not be ref or flat array klass\");\n+  assert(!klass->is_refined_objArray_klass(), \"should not be ref or flat array klass\");\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -962,1 +962,1 @@\n-    objArrayOop array = oopFactory::new_objArray(vmClasses::Object_klass(), total, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+    objArrayOop array = oopFactory::new_objArray(vmClasses::Object_klass(), total, CHECK);\n@@ -979,1 +979,1 @@\n-    objArrayOop primary = oopFactory::new_objArray(vmClasses::Object_klass(), primary_array_length, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+    objArrayOop primary = oopFactory::new_objArray(vmClasses::Object_klass(), primary_array_length, CHECK);\n@@ -993,1 +993,1 @@\n-      objArrayOop secondary = oopFactory::new_objArray(vmClasses::Object_klass(), len, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+      objArrayOop secondary = oopFactory::new_objArray(vmClasses::Object_klass(), len, CHECK);\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -190,1 +190,1 @@\n-    objArrayOop args_oop = oopFactory::new_objArray(vmClasses::Object_klass(), _argc, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+    objArrayOop args_oop = oopFactory::new_objArray(vmClasses::Object_klass(), _argc, CHECK);\n","filename":"src\/hotspot\/share\/interpreter\/bootstrapInfo.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -296,1 +296,1 @@\n-  arrayOop obj = oopFactory::new_objArray(klass, size, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+  arrayOop obj = oopFactory::new_objArray(klass, size, CHECK);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -267,1 +267,1 @@\n-  objArrayOop name_array = oopFactory::new_objArray(vmClasses::String_klass(), method_count, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop name_array = oopFactory::new_objArray(vmClasses::String_klass(), method_count, CHECK_NULL);\n@@ -271,1 +271,1 @@\n-  objArrayOop signature_array = oopFactory::new_objArray(vmClasses::String_klass(), method_count, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop signature_array = oopFactory::new_objArray(vmClasses::String_klass(), method_count, CHECK_NULL);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrUpcalls.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3017,1 +3017,1 @@\n-  objArrayOop filter_oop = oopFactory::new_objArray(vmClasses::Class_klass(), filter_length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop filter_oop = oopFactory::new_objArray(vmClasses::Class_klass(), filter_length, CHECK_NULL);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1466,1 +1466,1 @@\n-    objArrayOop result = oopFactory::new_objArray(Universe::byteArrayKlass(), length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_(JVMCIObject()));\n+    objArrayOop result = oopFactory::new_objArray(Universe::byteArrayKlass(), length, CHECK_(JVMCIObject()));\n@@ -1894,1 +1894,1 @@\n-      objArrayOop array = oopFactory::new_objArray(HotSpotJVMCI::className::klass(), length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_(JVMCIObject())); \\\n+      objArrayOop array = oopFactory::new_objArray(HotSpotJVMCI::className::klass(), length, CHECK_(JVMCIObject())); \\\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-    obj = oopFactory::new_objArray(elem_klass, length, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+    obj = oopFactory::new_objArray(elem_klass, length, CHECK);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,0 +123,4 @@\n+objArrayOop oopFactory::new_objArray(Klass* klass, int length, TRAPS) {\n+  return  new_objArray(klass, length, ArrayKlass::ArrayProperties::DEFAULT, THREAD);\n+}\n+\n@@ -140,2 +144,1 @@\n-  \/\/ TODO FIXME check if this method should take an array properties argument (probably should)\n-  objArrayOop obj = new_objArray(klass, length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_(objArrayHandle()));\n+  objArrayOop obj = new_objArray(klass, length, CHECK_(objArrayHandle()));\n","filename":"src\/hotspot\/share\/memory\/oopFactory.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+  static objArrayOop     new_objArray(Klass* klass, int length, TRAPS);\n","filename":"src\/hotspot\/share\/memory\/oopFactory.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+#include \"oops\/refArrayKlass.hpp\"\n@@ -525,1 +526,1 @@\n-    objArrayOop    naked_array = oopFactory::new_objArray(vmClasses::Object_klass(), size, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+    objArrayOop    naked_array = oopFactory::new_objArray(vmClasses::Object_klass(), size, CHECK);\n@@ -778,1 +779,1 @@\n-  objArrayOop oa = oopFactory::new_objArray(ik, _oom_count, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+  objArrayOop oa = oopFactory::new_objArray(ik, _oom_count, CHECK);\n@@ -812,1 +813,1 @@\n-  objArrayOop instance = oopFactory::new_objArray(ik, len, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+  objArrayOop instance = oopFactory::new_objArray(ik, len, CHECK);\n@@ -1111,1 +1112,1 @@\n-  objArrayOop the_empty_class_array = oopFactory::new_objArray(vmClasses::Class_klass(), 0, ArrayKlass::ArrayProperties::DEFAULT, CHECK_false);\n+  objArrayOop the_empty_class_array = oopFactory::new_objArray(vmClasses::Class_klass(), 0, CHECK_false);\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#include \"oops\/refArrayKlass.hpp\"\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -173,2 +173,1 @@\n-      ObjArrayKlass* ak = nullptr;\n-      ak = RefArrayKlass::allocate_objArray_klass(class_loader_data(), dim + 1, this, CHECK_NULL);\n+      ObjArrayKlass* ak = RefArrayKlass::allocate_objArray_klass(class_loader_data(), dim + 1, this, CHECK_NULL);\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -196,1 +196,0 @@\n-  \/\/ return resolved_references()->replace_if_null(index, new_result);\n@@ -228,1 +227,1 @@\n-    objArrayOop stom = oopFactory::new_objArray(vmClasses::Object_klass(), map_length, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+    objArrayOop stom = oopFactory::new_objArray(vmClasses::Object_klass(), map_length, CHECK);\n@@ -235,1 +234,1 @@\n-      objArrayOop scratch_references = oopFactory::new_objArray(vmClasses::Object_klass(), map_length, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+      objArrayOop scratch_references = oopFactory::new_objArray(vmClasses::Object_klass(), map_length, CHECK);\n@@ -419,1 +418,1 @@\n-        objArrayOop stom = oopFactory::new_objArray(vmClasses::Object_klass(), map_length, ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+        objArrayOop stom = oopFactory::new_objArray(vmClasses::Object_klass(), map_length, CHECK);\n@@ -428,1 +427,1 @@\n-    objArrayOop scratch_references = oopFactory::new_objArray(vmClasses::Object_klass(), resolved_references()->length(), ArrayKlass::ArrayProperties::DEFAULT, CHECK);\n+    objArrayOop scratch_references = oopFactory::new_objArray(vmClasses::Object_klass(), resolved_references()->length(), CHECK);\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -975,1 +975,1 @@\n-    objArrayOop m_oop = oopFactory::new_objArray(vmClasses::Class_klass(), length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_(objArrayHandle()));\n+    objArrayOop m_oop = oopFactory::new_objArray(vmClasses::Class_klass(), length, CHECK_(objArrayHandle()));\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,2 +121,0 @@\n-  } else if (element_klass->is_flatArray_klass()) {\n-    bk = FlatArrayKlass::cast(element_klass)->element_klass();  \/\/ flat array case should be merge with refArray case once reparented\n@@ -159,1 +157,1 @@\n-  \/\/ to avoid creation of arrays too big to be handled by the VM\n+  \/\/ to avoid creation of arrays too big to be handled by the VM. See JDK-8233189\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,0 +78,1 @@\n+    assert(k->is_refArray_klass(), \"cast to RefArrayKlass\");\n","filename":"src\/hotspot\/share\/oops\/refArrayKlass.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2357,1 +2357,1 @@\n-  objArrayOop result = oopFactory::new_objArray(ek, length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop result = oopFactory::new_objArray(ek, length, CHECK_NULL);\n@@ -2400,1 +2400,0 @@\n-    \/\/ TODO FIXME Temporary hack, to be removed when FlatArrayKlass is made a sub-class of ObjArrayKlass\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -334,1 +334,1 @@\n-  objArrayOop r = oopFactory::new_objArray(ik, (count + fixedCount) * 2, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop r = oopFactory::new_objArray(ik, (count + fixedCount) * 2, CHECK_NULL);\n@@ -1335,1 +1335,1 @@\n-    objArrayOop r = oopFactory::new_objArray(vmClasses::Class_klass(), 0, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+    objArrayOop r = oopFactory::new_objArray(vmClasses::Class_klass(), 0, CHECK_NULL);\n@@ -1351,1 +1351,1 @@\n-  objArrayOop r = oopFactory::new_objArray(vmClasses::Class_klass(), size, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop r = oopFactory::new_objArray(vmClasses::Class_klass(), size, CHECK_NULL);\n@@ -1434,1 +1434,1 @@\n-    oop result = oopFactory::new_objArray(vmClasses::Class_klass(), 0, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+    oop result = oopFactory::new_objArray(vmClasses::Class_klass(), 0, CHECK_NULL);\n@@ -1443,1 +1443,1 @@\n-    oop result = oopFactory::new_objArray(vmClasses::Class_klass(), 0, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+    oop result = oopFactory::new_objArray(vmClasses::Class_klass(), 0, CHECK_NULL);\n@@ -1452,1 +1452,1 @@\n-  objArrayOop r = oopFactory::new_objArray(vmClasses::Class_klass(), length\/4, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop r = oopFactory::new_objArray(vmClasses::Class_klass(), length\/4, CHECK_NULL);\n@@ -1482,1 +1482,1 @@\n-    objArrayOop res = oopFactory::new_objArray(vmClasses::Class_klass(), members, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+    objArrayOop res = oopFactory::new_objArray(vmClasses::Class_klass(), members, CHECK_NULL);\n@@ -1710,1 +1710,1 @@\n-    objArrayOop result_oop = oopFactory::new_objArray(vmClasses::reflect_Parameter_klass(), num_params, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+    objArrayOop result_oop = oopFactory::new_objArray(vmClasses::reflect_Parameter_klass(), num_params, CHECK_NULL);\n@@ -1739,1 +1739,1 @@\n-    oop res = oopFactory::new_objArray(vmClasses::reflect_Field_klass(), 0, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+    oop res = oopFactory::new_objArray(vmClasses::reflect_Field_klass(), 0, CHECK_NULL);\n@@ -1761,1 +1761,1 @@\n-  objArrayOop r = oopFactory::new_objArray(vmClasses::reflect_Field_klass(), num_fields, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop r = oopFactory::new_objArray(vmClasses::reflect_Field_klass(), num_fields, CHECK_NULL);\n@@ -1811,1 +1811,1 @@\n-      oopFactory::new_objArray(vmClasses::RecordComponent_klass(), length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+      oopFactory::new_objArray(vmClasses::RecordComponent_klass(), length, CHECK_NULL);\n@@ -1840,1 +1840,1 @@\n-    oop res = oopFactory::new_objArray(klass, 0, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+    oop res = oopFactory::new_objArray(klass, 0, CHECK_NULL);\n@@ -1878,1 +1878,1 @@\n-  objArrayOop r = oopFactory::new_objArray(klass, num_methods, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop r = oopFactory::new_objArray(klass, num_methods, CHECK_NULL);\n@@ -1979,1 +1979,1 @@\n-                                             length + 1, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+                                             length + 1, CHECK_NULL);\n@@ -2023,1 +2023,1 @@\n-                                                  count + 1, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+                                                  count + 1, CHECK_NULL);\n@@ -2057,1 +2057,1 @@\n-                                             length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+                                             length, CHECK_NULL);\n@@ -2086,1 +2086,1 @@\n-                                                count, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+                                                count, CHECK_NULL);\n@@ -2263,1 +2263,1 @@\n-  objArrayOop  dest_o = oopFactory::new_objArray(vmClasses::String_klass(), 3, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop  dest_o = oopFactory::new_objArray(vmClasses::String_klass(), 3, CHECK_NULL);\n@@ -2312,1 +2312,1 @@\n-  objArrayOop dest_o = oopFactory::new_objArray(vmClasses::String_klass(), 2, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop dest_o = oopFactory::new_objArray(vmClasses::String_klass(), 2, CHECK_NULL);\n@@ -3740,1 +3740,1 @@\n-  objArrayOop r = oopFactory::new_objArray(vmClasses::Thread_klass(), num_threads, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop r = oopFactory::new_objArray(vmClasses::Thread_klass(), num_threads, CHECK_NULL);\n@@ -3834,1 +3834,1 @@\n-  objArrayOop dest_o = oopFactory::new_objArray(vmClasses::Object_klass(), 3, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop dest_o = oopFactory::new_objArray(vmClasses::Object_klass(), 3, CHECK_NULL);\n@@ -3869,1 +3869,1 @@\n-  objArrayOop r = oopFactory::new_objArray(ik, num_args + num_flags, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop r = oopFactory::new_objArray(ik, num_args + num_flags, CHECK_NULL);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -298,1 +298,1 @@\n-                                                   length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_(empty));\n+                                                   length, CHECK_(empty));\n@@ -322,1 +322,1 @@\n-                                                   length, ArrayKlass::ArrayProperties::DEFAULT, CHECK_(objArrayHandle()));\n+                                                   length, CHECK_(objArrayHandle()));\n","filename":"src\/hotspot\/share\/prims\/stackwalk.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-  objArrayOop returnvalue_array = oopFactory::new_objArray(k, parser.num_arguments() * 2, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop returnvalue_array = oopFactory::new_objArray(k, parser.num_arguments() * 2, CHECK_NULL);\n","filename":"src\/hotspot\/share\/prims\/wbtestmethods\/parserTests.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -357,1 +357,1 @@\n-    return oopFactory::new_objArray(k, length, ArrayKlass::ArrayProperties::DEFAULT, THREAD);\n+    return oopFactory::new_objArray(k, length, THREAD);\n@@ -728,1 +728,1 @@\n-    m = oopFactory::new_objArray(vmClasses::Class_klass(), parameter_count, ArrayKlass::ArrayProperties::DEFAULT, CHECK_(objArrayHandle()));\n+    m = oopFactory::new_objArray(vmClasses::Class_klass(), parameter_count, CHECK_(objArrayHandle()));\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-  objArrayOop bu = oopFactory::new_objArray(mu_klass, MemoryService::num_memory_pools(), ArrayKlass::ArrayProperties::DEFAULT, CHECK_NH);\n+  objArrayOop bu = oopFactory::new_objArray(mu_klass, MemoryService::num_memory_pools(), CHECK_NH);\n@@ -113,1 +113,1 @@\n-  objArrayOop au = oopFactory::new_objArray(mu_klass, MemoryService::num_memory_pools(), ArrayKlass::ArrayProperties::DEFAULT, CHECK_NH);\n+  objArrayOop au = oopFactory::new_objArray(mu_klass, MemoryService::num_memory_pools(), CHECK_NH);\n@@ -135,1 +135,1 @@\n-  objArrayOop extra_args_array = oopFactory::new_objArray(vmClasses::Integer_klass(), 1, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NH);\n+  objArrayOop extra_args_array = oopFactory::new_objArray(vmClasses::Integer_klass(), 1, CHECK_NH);\n","filename":"src\/hotspot\/share\/services\/gcNotifier.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -519,1 +519,1 @@\n-  objArrayOop r = oopFactory::new_objArray(ik, num_memory_pools, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop r = oopFactory::new_objArray(ik, num_memory_pools, CHECK_NULL);\n@@ -563,1 +563,1 @@\n-  objArrayOop r = oopFactory::new_objArray(ik, num_mgrs, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop r = oopFactory::new_objArray(ik, num_mgrs, CHECK_NULL);\n@@ -1213,1 +1213,1 @@\n-  objArrayOop r = oopFactory::new_objArray(ik, num_snapshots, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+  objArrayOop r = oopFactory::new_objArray(ik, num_snapshots, CHECK_NULL);\n@@ -1245,1 +1245,1 @@\n-      objArrayOop array = oopFactory::new_objArray(vmClasses::Object_klass(), num_locked_monitors, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+      objArrayOop array = oopFactory::new_objArray(vmClasses::Object_klass(), num_locked_monitors, CHECK_NULL);\n@@ -1287,1 +1287,1 @@\n-      objArrayOop array = oopFactory::new_objArray(vmClasses::Object_klass(), num_locked_synchronizers, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+      objArrayOop array = oopFactory::new_objArray(vmClasses::Object_klass(), num_locked_synchronizers, CHECK_NULL);\n@@ -1428,1 +1428,1 @@\n-                                           nFlags, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+                                           nFlags, CHECK_NULL);\n@@ -1447,1 +1447,1 @@\n-    objArrayOop res = oopFactory::new_objArray(vmClasses::String_klass(), num_entries, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+    objArrayOop res = oopFactory::new_objArray(vmClasses::String_klass(), num_entries, CHECK_NULL);\n@@ -1754,1 +1754,1 @@\n-  objArrayOop r = oopFactory::new_objArray(vmClasses::Thread_klass(), num_threads, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NH);\n+  objArrayOop r = oopFactory::new_objArray(vmClasses::Thread_klass(), num_threads, CHECK_NH);\n@@ -1963,1 +1963,1 @@\n-          dcmd_list->length(), ArrayKlass::ArrayProperties::DEFAULT, CHECK_NULL);\n+          dcmd_list->length(), CHECK_NULL);\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -347,1 +347,1 @@\n-  objArrayOop r = oopFactory::new_objArray(ik, num_threads, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NH);\n+  objArrayOop r = oopFactory::new_objArray(ik, num_threads, CHECK_NH);\n@@ -752,1 +752,1 @@\n-  objArrayOop ste = oopFactory::new_objArray(ik, _depth, ArrayKlass::ArrayProperties::DEFAULT, CHECK_NH);\n+  objArrayOop ste = oopFactory::new_objArray(ik, _depth, CHECK_NH);\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}