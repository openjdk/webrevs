{"files":[{"patch":"@@ -49,2 +49,2 @@\n-RefArrayKlass *RefArrayKlass::allocate_klass(ClassLoaderData *loader_data, int n,\n-                                       Klass *k, Symbol *name, ArrayKlass::ArrayProperties props,\n+RefArrayKlass *RefArrayKlass::allocate_klass(ClassLoaderData* loader_data, int n,\n+                                       Klass* k, Symbol *name, ArrayKlass::ArrayProperties props,\n@@ -60,2 +60,2 @@\n-RefArrayKlass* RefArrayKlass::allocate_refArray_klass(ClassLoaderData *loader_data, int n,\n-                                       Klass *element_klass, ArrayKlass::ArrayProperties props,\n+RefArrayKlass* RefArrayKlass::allocate_refArray_klass(ClassLoaderData* loader_data, int n,\n+                                       Klass* element_klass, ArrayKlass::ArrayProperties props,\n@@ -67,1 +67,1 @@\n-  Klass *super_klass = nullptr;\n+  Klass* super_klass = nullptr;\n@@ -71,1 +71,1 @@\n-    Klass *element_super = element_klass->super();\n+    Klass* element_super = element_klass->super();\n@@ -76,1 +76,1 @@\n-  Symbol *name = ArrayKlass::create_element_klass_array_name(element_klass, CHECK_NULL);\n+  Symbol* name = ArrayKlass::create_element_klass_array_name(element_klass, CHECK_NULL);\n@@ -79,1 +79,1 @@\n-  RefArrayKlass *oak = RefArrayKlass::allocate_klass(loader_data, n, element_klass,\n+  RefArrayKlass* oak = RefArrayKlass::allocate_klass(loader_data, n, element_klass,\n@@ -82,1 +82,1 @@\n-  ModuleEntry *module = oak->module();\n+  ModuleEntry* module = oak->module();\n@@ -99,1 +99,1 @@\n-RefArrayKlass::RefArrayKlass(int n, Klass *element_klass, Symbol *name,\n+RefArrayKlass::RefArrayKlass(int n, Klass* element_klass, Symbol* name,\n@@ -106,1 +106,1 @@\n-  Klass *bk;\n+  Klass* bk;\n@@ -109,2 +109,0 @@\n-  } else if (element_klass->is_flatArray_klass()) {\n-    bk = FlatArrayKlass::cast(element_klass)->element_klass();\n@@ -294,2 +292,1 @@\n-  bottom_klass()->initialize(\n-      THREAD); \/\/ dispatches to either InstanceKlass or TypeArrayKlass\n+  bottom_klass()->initialize(THREAD); \/\/ dispatches to either InstanceKlass or TypeArrayKlass\n@@ -304,1 +301,1 @@\n-void RefArrayKlass::print_on(outputStream *st) const {\n+void RefArrayKlass::print_on(outputStream* st) const {\n@@ -313,1 +310,1 @@\n-void RefArrayKlass::print_value_on(outputStream *st) const {\n+void RefArrayKlass::print_value_on(outputStream* st) const {\n@@ -322,1 +319,1 @@\n-void RefArrayKlass::oop_print_on(oop obj, outputStream *st) {\n+void RefArrayKlass::oop_print_on(oop obj, outputStream* st) {\n@@ -345,1 +342,1 @@\n-void RefArrayKlass::oop_print_value_on(oop obj, outputStream *st) {\n+void RefArrayKlass::oop_print_value_on(oop obj, outputStream* st) {\n@@ -360,1 +357,1 @@\n-void RefArrayKlass::verify_on(outputStream *st) {\n+void RefArrayKlass::verify_on(outputStream* st) {\n@@ -370,1 +367,1 @@\n-void RefArrayKlass::oop_verify_on(oop obj, outputStream *st) {\n+void RefArrayKlass::oop_verify_on(oop obj, outputStream* st) {\n","filename":"src\/hotspot\/share\/oops\/refArrayKlass.cpp","additions":18,"deletions":21,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-  RefArrayKlass(int n, Klass *element_klass, Symbol *name, ArrayKlass::ArrayProperties props);\n-  static RefArrayKlass* allocate_klass(ClassLoaderData *loader_data, int n, Klass *k, Symbol *name,\n+  RefArrayKlass(int n, Klass* element_klass, Symbol* name, ArrayKlass::ArrayProperties props);\n+  static RefArrayKlass* allocate_klass(ClassLoaderData* loader_data, int n, Klass* k, Symbol* name,\n@@ -58,2 +58,2 @@\n-  static RefArrayKlass *allocate_refArray_klass(ClassLoaderData *loader_data,\n-                                                int n, Klass *element_klass,\n+  static RefArrayKlass* allocate_refArray_klass(ClassLoaderData* loader_data,\n+                                                int n, Klass* element_klass,\n@@ -67,1 +67,1 @@\n-  virtual void metaspace_pointers_do(MetaspaceClosure *iter);\n+  virtual void metaspace_pointers_do(MetaspaceClosure* iter);\n@@ -77,1 +77,1 @@\n-  static RefArrayKlass *cast(Klass *k) {\n+  static RefArrayKlass *cast(Klass* k) {\n@@ -82,1 +82,1 @@\n-  static const RefArrayKlass *cast(const Klass *k) {\n+  static const RefArrayKlass *cast(const Klass* k) {\n@@ -100,1 +100,1 @@\n-  inline void oop_oop_iterate(oop obj, OopClosureType *closure);\n+  inline void oop_oop_iterate(oop obj, OopClosureType* closure);\n@@ -104,1 +104,1 @@\n-  inline void oop_oop_iterate_reverse(oop obj, OopClosureType *closure);\n+  inline void oop_oop_iterate_reverse(oop obj, OopClosureType* closure);\n@@ -108,1 +108,1 @@\n-  inline void oop_oop_iterate_bounded(oop obj, OopClosureType *closure, MemRegion mr);\n+  inline void oop_oop_iterate_bounded(oop obj, OopClosureType* closure, MemRegion mr);\n@@ -112,1 +112,1 @@\n-  inline void oop_oop_iterate_range(refArrayOop a, OopClosureType *closure, int start, int end);\n+  inline void oop_oop_iterate_range(refArrayOop a, OopClosureType* closure, int start, int end);\n@@ -117,1 +117,1 @@\n-  inline void oop_oop_iterate_elements(refArrayOop a, OopClosureType *closure);\n+  inline void oop_oop_iterate_elements(refArrayOop a, OopClosureType* closure);\n@@ -122,1 +122,1 @@\n-  inline void oop_oop_iterate_elements_bounded(refArrayOop a, OopClosureType *closure, void *low, void *high);\n+  inline void oop_oop_iterate_elements_bounded(refArrayOop a, OopClosureType* closure, void* low, void* high);\n@@ -126,2 +126,2 @@\n-  void print_on(outputStream *st) const;\n-  void print_value_on(outputStream *st) const;\n+  void print_on(outputStream* st) const;\n+  void print_value_on(outputStream* st) const;\n@@ -129,1 +129,1 @@\n-  void oop_print_value_on(oop obj, outputStream *st);\n+  void oop_print_value_on(oop obj, outputStream* st);\n@@ -131,1 +131,1 @@\n-  void oop_print_on(oop obj, outputStream *st);\n+  void oop_print_on(oop obj, outputStream* st);\n@@ -135,1 +135,1 @@\n-  void verify_on(outputStream *st);\n+  void verify_on(outputStream* st);\n@@ -137,1 +137,1 @@\n-  void oop_verify_on(oop obj, outputStream *st);\n+  void oop_verify_on(oop obj, outputStream* st);\n","filename":"src\/hotspot\/share\/oops\/refArrayKlass.hpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"}]}