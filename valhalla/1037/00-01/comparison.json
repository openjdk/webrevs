{"files":[{"patch":"@@ -2495,0 +2495,4 @@\n+      \/\/ --enable-preview enables Valhalla, EnableValhalla VM option will eventually be removed before integration\n+      if (FLAG_SET_CMDLINE(EnableValhalla, true) != JVMFlag::SUCCESS) {\n+        return JNI_EINVAL;\n+      }\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/AbstractValueClassTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+ * @enablePreview\n@@ -41,1 +42,1 @@\n- * @run main\/othervm -XX:+EnableValhalla AnnotationsTests\n+ * @run main\/othervm AnnotationsTests\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/AnnotationsTests.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @enablePreview\n@@ -36,1 +37,1 @@\n- * @run main\/othervm -XX:+EnableValhalla runtime.valhalla.inlinetypes.CircularityTest\n+ * @run main\/othervm runtime.valhalla.inlinetypes.CircularityTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/CircularityTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @enablePreview\n@@ -38,1 +39,1 @@\n- * @run main\/othervm -XX:+EnableValhalla runtime.valhalla.inlinetypes.ClassInitializationFailuresTest\n+ * @run main\/othervm runtime.valhalla.inlinetypes.ClassInitializationFailuresTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ClassInitializationFailuresTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+ * @enablePreview\n@@ -39,1 +40,1 @@\n- * @run main\/othervm -XX:+EnableValhalla runtime.valhalla.inlinetypes.ClassPrintLayoutDcmd\n+ * @run main\/othervm runtime.valhalla.inlinetypes.ClassPrintLayoutDcmd\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ClassPrintLayoutDcmd.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+ * @enablePreview\n@@ -42,1 +43,1 @@\n- * @run main\/othervm -XX:+EnableValhalla -XX:InlineFieldMaxFlatSize=128 runtime.valhalla.inlinetypes.EmptyInlineTest\n+ * @run main\/othervm -XX:InlineFieldMaxFlatSize=128 runtime.valhalla.inlinetypes.EmptyInlineTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/EmptyInlineTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @enablePreview\n@@ -37,2 +38,2 @@\n- * @run main\/othervm -XX:+EnableValhalla -XX:InlineFieldMaxFlatSize=64 runtime.valhalla.inlinetypes.FlattenableSemanticTest\n- * @run main\/othervm -XX:+EnableValhalla -XX:+UnlockDiagnosticVMOptions -XX:ForceNonTearable=* runtime.valhalla.inlinetypes.FlattenableSemanticTest\n+ * @run main\/othervm -XX:InlineFieldMaxFlatSize=64 runtime.valhalla.inlinetypes.FlattenableSemanticTest\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:ForceNonTearable=* runtime.valhalla.inlinetypes.FlattenableSemanticTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/FlattenableSemanticTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n- * @run main\/othervm -XX:+EnableValhalla HiddenInlineClassTest\n+ * @enablePreview\n+ * @run main\/othervm HiddenInlineClassTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/HiddenInlineClassTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,4 +36,3 @@\n- * @compile --source 22 --enable-preview Ifacmp.java\n- * @run main\/othervm --enable-preview\n- *                   -XX:+EnableValhalla -Xms16m -Xmx16m -XX:+UseSerialGC\n- *                   runtime.valhalla.inlinetypes.Ifacmp\n+ * @enablePreview\n+ * @compile --source 22 Ifacmp.java\n+ * @run main\/othervm -Xms16m -Xmx16m -XX:+UseSerialGC runtime.valhalla.inlinetypes.Ifacmp\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/Ifacmp.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+ * @enablePreview\n@@ -56,2 +57,1 @@\n- * @run main\/othervm -XX:+EnableValhalla --enable-preview\n- *                   -XX:+UseSerialGC -Xmx128m -XX:InlineFieldMaxFlatSize=128\n+ * @run main\/othervm -XX:+UseSerialGC -Xmx128m -XX:InlineFieldMaxFlatSize=128\n@@ -71,0 +71,1 @@\n+ * @enablePreview\n@@ -74,2 +75,1 @@\n- * @run main\/othervm -XX:+EnableValhalla --enable-preview\n- *                   -XX:+UseG1GC -Xmx128m -XX:InlineFieldMaxFlatSize=128\n+ * @run main\/othervm -XX:+UseG1GC -Xmx128m -XX:InlineFieldMaxFlatSize=128\n@@ -89,0 +89,1 @@\n+ * @enablePreview\n@@ -92,2 +93,1 @@\n- * @run main\/othervm -XX:+EnableValhalla --enable-preview\n- *                   -XX:+UseParallelGC -Xmx128m -XX:InlineFieldMaxFlatSize=128\n+ * @run main\/othervm -XX:+UseParallelGC -Xmx128m -XX:InlineFieldMaxFlatSize=128\n@@ -107,0 +107,1 @@\n+ * @enablePreview\n@@ -110,2 +111,1 @@\n- * @run main\/othervm -XX:+EnableValhalla --enable-preview\n- *                   -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Xmx128m\n+ * @run main\/othervm -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Xmx128m\n@@ -126,0 +126,1 @@\n+ * @enablePreview\n@@ -129,2 +130,1 @@\n- * @run main\/othervm -XX:+EnableValhalla --enable-preview\n- *                   -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -XX:+ZGenerational -Xmx128m\n+ * @run main\/othervm -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -XX:+ZGenerational -Xmx128m\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineOops.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -44,4 +44,5 @@\n- * @compile --source 22 --enable-preview InlineTypeArray.java Point.java Long8Inline.java Person.java\n- * @run main\/othervm -XX:+EnableValhalla -XX:FlatArrayElementMaxSize=-1 --enable-preview runtime.valhalla.inlinetypes.InlineTypeArray\n- * @run main\/othervm -XX:+EnableValhalla -XX:FlatArrayElementMaxSize=0 --enable-preview runtime.valhalla.inlinetypes.InlineTypeArray\n- * @run main\/othervm -XX:+EnableValhalla -XX:+UnlockDiagnosticVMOptions --enable-preview -XX:ForceNonTearable=* runtime.valhalla.inlinetypes.InlineTypeArray\n+ * @enablePreview\n+ * @compile --source 22 InlineTypeArray.java Point.java Long8Inline.java Person.java\n+ * @run main\/othervm -XX:FlatArrayElementMaxSize=-1 runtime.valhalla.inlinetypes.InlineTypeArray\n+ * @run main\/othervm -XX:FlatArrayElementMaxSize=0 runtime.valhalla.inlinetypes.InlineTypeArray\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:ForceNonTearable=* runtime.valhalla.inlinetypes.InlineTypeArray\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypeArray.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @enablePreview\n@@ -36,1 +37,1 @@\n- * @run main\/othervm -XX:+EnableValhalla runtime.valhalla.inlinetypes.InlineTypeCreation\n+ * @run main\/othervm runtime.valhalla.inlinetypes.InlineTypeCreation\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypeCreation.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+ * @enablePreview\n@@ -45,2 +46,1 @@\n- * @run main\/othervm -XX:+EnableValhalla\n- *                   -XX:FlatArrayElementMaxSize=-1 -XX:+UseCompressedOops\n+ * @run main\/othervm -XX:FlatArrayElementMaxSize=-1 -XX:+UseCompressedOops\n@@ -49,2 +49,1 @@\n- * @run main\/othervm -XX:+EnableValhalla\n- *                   -XX:FlatArrayElementMaxSize=-1 -XX:-UseCompressedOops\n+ * @run main\/othervm -XX:FlatArrayElementMaxSize=-1 -XX:-UseCompressedOops\n@@ -53,2 +52,1 @@\n- * @run main\/othervm -XX:+EnableValhalla\n- *                   -XX:FlatArrayElementMaxSize=-1\n+ * @run main\/othervm -XX:FlatArrayElementMaxSize=-1\n@@ -57,2 +55,1 @@\n- * @run main\/othervm -XX:+EnableValhalla\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:FlatArrayElementMaxSize=-1\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:FlatArrayElementMaxSize=-1\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypeDensity.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @enablePreview\n@@ -34,1 +35,1 @@\n- * @run main\/othervm -XX:+EnableValhalla runtime.valhalla.inlinetypes.InlineTypeGetField\n+ * @run main\/othervm runtime.valhalla.inlinetypes.InlineTypeGetField\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypeGetField.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+ * @enablePreview\n@@ -63,2 +64,1 @@\n- * @run main\/othervm -XX:+EnableValhalla --enable-preview\n- *                   -Xmx128m -XX:+ExplicitGCInvokesConcurrent\n+ * @run main\/othervm -Xmx128m -XX:+ExplicitGCInvokesConcurrent\n@@ -67,2 +67,1 @@\n- * @run main\/othervm -XX:+EnableValhalla --enable-preview\n- *                   -Xmx128m -XX:+ExplicitGCInvokesConcurrent\n+ * @run main\/othervm -Xmx128m -XX:+ExplicitGCInvokesConcurrent\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypesTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n- * @run main\/othervm\/native -XX:+EnableValhalla runtime.valhalla.inlinetypes.InlineWithJni\n+ * @enablePreview\n+ * @run main\/othervm\/native runtime.valhalla.inlinetypes.InlineWithJni\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineWithJni.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,1 +41,2 @@\n- * @run main\/othervm -XX:+EnableValhalla NullRestrictedArrayTest\n+ * @enablePreview\n+ * @run main\/othervm NullRestrictedArrayTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/NullRestrictedArrayTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @enablePreview\n@@ -36,3 +37,3 @@\n- * @run main\/othervm -XX:+EnableValhalla -XX:+UseCompressedClassPointers --enable-preview runtime.valhalla.inlinetypes.ObjectMethods\n- * @run main\/othervm -XX:+EnableValhalla -XX:-UseCompressedClassPointers --enable-preview runtime.valhalla.inlinetypes.ObjectMethods\n- * @run main\/othervm -XX:+EnableValhalla -noverify --enable-preview runtime.valhalla.inlinetypes.ObjectMethods noverify\n+ * @run main\/othervm -XX:+UseCompressedClassPointers runtime.valhalla.inlinetypes.ObjectMethods\n+ * @run main\/othervm -XX:-UseCompressedClassPointers runtime.valhalla.inlinetypes.ObjectMethods\n+ * @run main\/othervm -noverify runtime.valhalla.inlinetypes.ObjectMethods noverify\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ObjectMethods.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @enablePreview\n@@ -37,1 +38,1 @@\n- * @run main\/othervm -XX:+EnableValhalla runtime.valhalla.inlinetypes.QuickeningTest\n+ * @run main\/othervm runtime.valhalla.inlinetypes.QuickeningTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/QuickeningTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @enablePreview\n@@ -36,1 +37,1 @@\n- * @run main\/othervm -XX:+EnableValhalla runtime.valhalla.inlinetypes.StaticFieldsTest\n+ * @run main\/othervm runtime.valhalla.inlinetypes.StaticFieldsTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/StaticFieldsTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * @enablePreview\n@@ -37,1 +38,1 @@\n- * @run main\/othervm -XX:+EnableValhalla runtime.valhalla.inlinetypes.Test8186715\n+ * @run main\/othervm runtime.valhalla.inlinetypes.Test8186715\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/Test8186715.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n@@ -29,1 +30,1 @@\n- * @run main\/othervm -XX:+EnableValhalla  -Xmx128m -XX:InlineFieldMaxFlatSize=32\n+ * @run main\/othervm -Xmx128m -XX:InlineFieldMaxFlatSize=32\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/TestFieldNullability.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @enablePreview\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/TestFieldTypeMismatch.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @enablePreview\n@@ -35,1 +36,1 @@\n- * @run main\/othervm -XX:+EnableValhalla runtime.valhalla.inlinetypes.TestInheritedInlineTypeFields\n+ * @run main\/othervm runtime.valhalla.inlinetypes.TestInheritedInlineTypeFields\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/TestInheritedInlineTypeFields.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @enablePreview\n@@ -38,1 +39,1 @@\n- * @run main\/othervm\/native -XX:+EnableValhalla TestJNIIsSameObject\n+ * @run main\/othervm\/native TestJNIIsSameObject\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/TestJNIIsSameObject.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @enablePreview\n@@ -34,1 +35,1 @@\n- * @run main\/othervm -XX:+EnableValhalla -XX:InlineFieldMaxFlatSize=64 runtime.valhalla.inlinetypes.UninitializedInlineFieldsTest\n+ * @run main\/othervm -XX:InlineFieldMaxFlatSize=64 runtime.valhalla.inlinetypes.UninitializedInlineFieldsTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/UninitializedInlineFieldsTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @enablePreview\n@@ -35,1 +36,1 @@\n- * @run main\/othervm -XX:+EnableValhalla  -XX:FlatArrayElementMaxSize=-1 -XX:InlineFieldMaxFlatSize=-1 runtime.valhalla.inlinetypes.UnsafeTest\n+ * @run main\/othervm -XX:FlatArrayElementMaxSize=-1 -XX:InlineFieldMaxFlatSize=-1 runtime.valhalla.inlinetypes.UnsafeTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/UnsafeTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @enablePreview\n@@ -42,1 +43,1 @@\n-        Collections.addAll(argsList, \"-XX:+EnableValhalla\");\n+        Collections.addAll(argsList, \"--enable-preview\");\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ValuePreloadTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+ * @enablePreview\n@@ -41,1 +42,1 @@\n- * @run main\/othervm -XX:+EnableValhalla runtime.valhalla.inlinetypes.VarArgsArray\n+ * @run main\/othervm runtime.valhalla.inlinetypes.VarArgsArray\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/VarArgsArray.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @enablePreview\n@@ -33,1 +34,1 @@\n- * @run main\/othervm -XX:+EnableValhalla -XX:InlineFieldMaxFlatSize=128 runtime.valhalla.inlinetypes.VolatileTest\n+ * @run main\/othervm -XX:InlineFieldMaxFlatSize=128 runtime.valhalla.inlinetypes.VolatileTest\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/VolatileTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @enablePreview\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/VTMonitor.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}