{"files":[{"patch":"@@ -1475,3 +1475,5 @@\n-  Node* uin = unique_input(phase, false);\n-  if (uin != nullptr) {\n-    return uin;\n+  {\n+    Node* uin = unique_input(phase, false);\n+    if (uin != nullptr) {\n+      return uin;\n+    }\n@@ -1479,3 +1481,5 @@\n-  uin = unique_input_recursive(phase);\n-  if (uin != nullptr) {\n-    return uin;\n+  {\n+    Node* uin = unique_constant_input_recursive(phase);\n+    if (uin != nullptr) {\n+      return uin;\n+    }\n@@ -1583,1 +1587,1 @@\n-Node* PhiNode::unique_input_recursive(PhaseGVN* phase) {\n+Node* PhiNode::unique_constant_input_recursive(PhaseGVN* phase) {\n@@ -1605,0 +1609,3 @@\n+          if (!phi_in->is_Con()) {\n+            return nullptr;\n+          }\n@@ -2085,1 +2092,1 @@\n-  InlineTypeNode* vt = InlineTypeNode::make_null(*phase, inline_klass, \/* transform = *\/ false)->clone_with_phis(phase, in(0), nullptr, !_type->maybe_null());\n+  InlineTypeNode* vt = InlineTypeNode::make_null(*phase, inline_klass, \/* transform = *\/ false)->clone_with_phis(phase, in(0), nullptr, !_type->maybe_null(), true);\n@@ -2121,0 +2128,3 @@\n+      if (n->is_top()) {\n+        break;\n+      }\n@@ -2123,1 +2133,4 @@\n-    vt->merge_with(phase, n->as_InlineType(), i, transform);\n+    assert(n->is_top() || n->is_InlineType(), \"Only InlineType or top at this point.\");\n+    if (n->is_InlineType()) {\n+      vt->merge_with(phase, n->as_InlineType(), i, transform);\n+    } \/\/ else nothing to do: phis above vt created by clone_with_phis are initialized to top already.\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":22,"deletions":9,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-  Node* unique_input_recursive(PhaseGVN* phase);\n+  Node* unique_constant_input_recursive(PhaseGVN* phase);\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,2 @@\n-InlineTypeNode* InlineTypeNode::clone_with_phis(PhaseGVN* gvn, Node* region, SafePointNode* map, bool is_non_null) {\n+\/\/ top_for_other_inputs: input of phis above the returned InlineTypeNode are initialized to top.\n+InlineTypeNode* InlineTypeNode::clone_with_phis(PhaseGVN* gvn, Node* region, SafePointNode* map, bool is_non_null, bool phi_input_are_top) {\n@@ -51,0 +52,2 @@\n+  Node* const top = gvn->C->top();\n+\n@@ -52,1 +55,6 @@\n-  PhiNode* oop = PhiNode::make(region, vt->get_oop(), t);\n+  PhiNode* oop;\n+  if (phi_input_are_top) {\n+    oop = PhiNode::make(region, top, t);\n+  } else {\n+    oop = PhiNode::make(region, vt->get_oop(), t);\n+  }\n@@ -59,1 +67,6 @@\n-  Node* is_buffered_node = PhiNode::make(region, vt->get_is_buffered(), t);\n+  Node* is_buffered_node;\n+  if (phi_input_are_top) {\n+    is_buffered_node = PhiNode::make(region, top, t);\n+  } else {\n+    is_buffered_node = PhiNode::make(region, vt->get_is_buffered(), t);\n+  }\n@@ -70,1 +83,5 @@\n-    null_marker_node = PhiNode::make(region, vt->get_null_marker(), t);\n+    if (phi_input_are_top) {\n+      null_marker_node = PhiNode::make(region, top, t);\n+    } else {\n+      null_marker_node = PhiNode::make(region, vt->get_null_marker(), t);\n+    }\n@@ -89,1 +106,5 @@\n-      value = PhiNode::make(region, value, t);\n+      if (phi_input_are_top) {\n+        value = PhiNode::make(region, top, t);\n+      } else {\n+        value = PhiNode::make(region, value, t);\n+      }\n@@ -210,1 +231,1 @@\n-  if (!recursive || !field_is_flat(index)) {\n+  if (!recursive || !field_is_flat(index) || value->is_top()) {\n@@ -1639,0 +1660,3 @@\n+  if (toop == Type::TOP) {\n+    return Type::TOP;\n+  }\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-  InlineTypeNode* clone_with_phis(PhaseGVN* gvn, Node* region, SafePointNode* map = nullptr, bool is_non_null = false);\n+  InlineTypeNode* clone_with_phis(PhaseGVN* gvn, Node* region, SafePointNode* map = nullptr, bool is_non_null = false, bool phi_input_are_top = false);\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}