{"files":[{"patch":"@@ -1475,5 +1475,3 @@\n-  {\n-    Node* uin = unique_input(phase, false);\n-    if (uin != nullptr) {\n-      return uin;\n-    }\n+  Node* uin = unique_input(phase, false);\n+  if (uin != nullptr) {\n+    return uin;\n@@ -1481,5 +1479,3 @@\n-  {\n-    Node* uin = unique_constant_input_recursive(phase);\n-    if (uin != nullptr) {\n-      return uin;\n-    }\n+  uin = unique_constant_input_recursive(phase);\n+  if (uin != nullptr) {\n+    return uin;\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-\/\/ top_for_other_inputs: input of phis above the returned InlineTypeNode are initialized to top.\n-InlineTypeNode* InlineTypeNode::clone_with_phis(PhaseGVN* gvn, Node* region, SafePointNode* map, bool is_non_null, bool phi_input_are_top) {\n+\/\/ init_with_top: input of phis above the returned InlineTypeNode are initialized to top.\n+InlineTypeNode* InlineTypeNode::clone_with_phis(PhaseGVN* gvn, Node* region, SafePointNode* map, bool is_non_null, bool init_with_top) {\n@@ -55,6 +55,1 @@\n-  PhiNode* oop;\n-  if (phi_input_are_top) {\n-    oop = PhiNode::make(region, top, t);\n-  } else {\n-    oop = PhiNode::make(region, vt->get_oop(), t);\n-  }\n+  PhiNode* oop = PhiNode::make(region, init_with_top ? top : vt->get_oop(), t);\n@@ -67,6 +62,1 @@\n-  Node* is_buffered_node;\n-  if (phi_input_are_top) {\n-    is_buffered_node = PhiNode::make(region, top, t);\n-  } else {\n-    is_buffered_node = PhiNode::make(region, vt->get_is_buffered(), t);\n-  }\n+  Node* is_buffered_node = PhiNode::make(region, init_with_top ? top : vt->get_is_buffered(), t);;\n@@ -83,5 +73,1 @@\n-    if (phi_input_are_top) {\n-      null_marker_node = PhiNode::make(region, top, t);\n-    } else {\n-      null_marker_node = PhiNode::make(region, vt->get_null_marker(), t);\n-    }\n+    null_marker_node = PhiNode::make(region, init_with_top ? top : vt->get_null_marker(), t);\n@@ -106,5 +92,1 @@\n-      if (phi_input_are_top) {\n-        value = PhiNode::make(region, top, t);\n-      } else {\n-        value = PhiNode::make(region, value, t);\n-      }\n+      value = PhiNode::make(region, init_with_top ? top : value, t);\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":6,"deletions":24,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-  InlineTypeNode* clone_with_phis(PhaseGVN* gvn, Node* region, SafePointNode* map = nullptr, bool is_non_null = false, bool phi_input_are_top = false);\n+  InlineTypeNode* clone_with_phis(PhaseGVN* gvn, Node* region, SafePointNode* map = nullptr, bool is_non_null = false, bool init_with_top = false);\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}