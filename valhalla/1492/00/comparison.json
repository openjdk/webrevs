{"files":[{"patch":"@@ -1108,0 +1108,1 @@\n+        log_info(class, preload)(\"Preloading class %s during loading of shared class %s. Cause: field type in LoadableDescriptors attribute\", name->as_C_string(), ik->name()->as_C_string());\n@@ -1113,0 +1114,2 @@\n+          log_warning(class, preload)(\"Preloading of class %s during loading of shared class %s (cause: field type in LoadableDescriptors attribute) failed : %s\",\n+                                      name->as_C_string(), ik->name()->as_C_string(), PENDING_EXCEPTION->klass()->name()->as_C_string());\n@@ -1114,0 +1117,3 @@\n+        } else if (real_k != nullptr) {\n+            log_info(class, preload)(\"Preloading of class %s during loading of shared class %s (cause: field type in LoadableDescriptors attribute) succeeded\",\n+                                     name->as_C_string(), ik->name()->as_C_string());\n@@ -1117,1 +1123,3 @@\n-        if (name != ik->name() && ik->is_class_in_loadable_descriptors_attribute(name)) {\n+        if (name != ik->name() && ik->is_class_in_loadable_descriptors_attribute(sig)) {\n+          log_info(class, preload)(\"Preloading class %s during loading of shared class %s. Cause: field type in LoadableDescriptors attribute\",\n+                                   name->as_C_string(), ik->name()->as_C_string());\n@@ -1126,0 +1134,2 @@\n+            log_warning(class, preload)(\"Preloading of class %s during loading of shared class %s (cause: field type in LoadableDescriptors attribute) failed : %s\",\n+                                        name->as_C_string(), ik->name()->as_C_string(), PENDING_EXCEPTION->klass()->name()->as_C_string());\n@@ -1127,0 +1137,3 @@\n+          } else if (real_k != nullptr) {\n+            log_info(class, preload)(\"Preloading of class %s during loading of shared class %s (cause: field type in LoadableDescriptors attribute) succeeded\",\n+                                     name->as_C_string(), ik->name()->as_C_string());\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.time.LocalDateTime;\n+\n+public class PreloadShared {\n+    public static LocalDateTime test() {\n+        return null;\n+    }\n+\n+    public static void main(String[] args) {\n+        test();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/PreloadShared.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -29,1 +29,1 @@\n- * @compile ValuePreloadClient0.java PreloadValue0.java ValuePreloadClient1.jcod\n+ * @compile ValuePreloadClient0.java PreloadValue0.java ValuePreloadClient1.jcod PreloadShared.java\n@@ -62,0 +62,3 @@\n+\n+        pb = exec(\"-Xlog:class+preload\", \"PreloadShared\");\n+        checkFor(pb, \"[info][class,preload] Preloading of class java\/time\/LocalDate during loading of shared class java\/time\/LocalDateTime (cause: field type in LoadableDescriptors attribute) succeeded\");\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ValuePreloadTest.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}