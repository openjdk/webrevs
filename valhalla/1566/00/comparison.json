{"files":[{"patch":"@@ -1651,1 +1651,1 @@\n-            VerificationType::reference_check(), CHECK_VERIFY(this));\n+            object_type(), CHECK_VERIFY(this));\n@@ -1656,1 +1656,1 @@\n-            VerificationType::reference_check(), CHECK_VERIFY(this));\n+            object_type(), CHECK_VERIFY(this));\n","filename":"src\/hotspot\/share\/classfile\/verifier.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+class UninitThisAcmp version 69:0\n+{\n+  public Method \"<init>\":\"()V\"\n+    stack 2  locals 2\n+  {\n+         new               class java\/lang\/Object;\n+         dup;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+         astore_1;\n+         aload_0;\n+         aload_1;\n+         if_acmpne         L14;\n+         nop;\n+  L14:   stack_frame_type  append;\n+           locals_map      class java\/lang\/Object;\n+         aload_0;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+         return;\n+  }\n+} \/\/ end Class UninitThisAcmp\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/UninitThisAcmp.jasm","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+class UninitThisIfNull version 69:0\n+{\n+  public Method \"<init>\":\"()V\"\n+    stack 2  locals 2\n+  {\n+         new               class java\/lang\/Object;\n+         dup;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+         astore_1;\n+         aload_0;\n+         ifnonnull         L14;\n+         nop;\n+  L14:   stack_frame_type  append;\n+           locals_map      class java\/lang\/Object;\n+         aload_0;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+         return;\n+  }\n+} \/\/ end Class UninitThisIfNull\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/UninitThisIfNull.jasm","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+class UninitializedAcmp version 69:0\n+{\n+  Method       \"<init>\":\"()V\"\n+    stack 5  locals 1\n+  {\n+         aload_0;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+         aload_0;\n+   L1:   new               class java\/lang\/Object;\n+         dup;\n+         dup;\n+         dup;\n+         if_acmpne         L18;\n+         nop;\n+  L18:   stack_frame_type  full;\n+           locals_map      class UninitializedAcmp;\n+           stack_map       class UninitializedAcmp, at L1, at L1;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+         return;\n+  }\n+} \/\/ end Class UninitializedAcmp\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/UninitializedAcmp.jasm","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+class UninitializedIfNull version 69:0\n+{\n+  Method       \"<init>\":\"()V\"\n+    stack 3  locals 1\n+  {\n+         aload_0;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+   L1:   new               class java\/lang\/Object;\n+         dup;\n+         dup;\n+         ifnonnull         L18;\n+         nop;\n+  L18:   stack_frame_type  full;\n+           locals_map      class UninitializedIfNull;\n+           stack_map       at L1, at L1;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+         return;\n+  }\n+} \/\/ end Class UninitializedIfNull\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/UninitializedIfNull.jasm","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8366743\n+ * @summary Test spec rules for uninitialized\n+ * @compile UninitThisAcmp.jasm UninitThisIfNull.jasm\n+ *          UninitializedIfNull.jasm UninitializedAcmp.jasm\n+ * @run main\/othervm -Xlog:verification UninitializedThisVerificationTest\n+ *\/\n+\n+public class UninitializedThisVerificationTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        String[] testNames = { \"UninitThisAcmp\", \"UninitThisIfNull\", \"UninitializedIfNull\", \"UninitializedAcmp\" };\n+        int fails = 0;\n+        for (String test : testNames) {\n+            System.out.println(\"Testing \" + test);\n+            try {\n+                Class c = Class.forName(test);\n+                System.out.println(\"Failed\");\n+                fails++;\n+            } catch (java.lang.VerifyError e) {\n+                System.out.println(\"Passed\");\n+            }\n+        }\n+\n+        if (fails > 0) {\n+            throw new RuntimeException(\"Failed: Expected VerifyError in \" + fails + \" tests\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/UninitializedThisVerificationTest.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"}]}