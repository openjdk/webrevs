{"files":[{"patch":"@@ -1055,2 +1055,1 @@\n-                        current_frame.pop_stack(\n-                            VerificationType.reference_check);\n+                        current_frame.pop_stack(object_type());\n@@ -1060,2 +1059,1 @@\n-                        current_frame.pop_stack(\n-                            VerificationType.reference_check);\n+                        current_frame.pop_stack(object_type());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/VerifierImpl.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.lang.invoke.MethodHandles;\n@@ -43,0 +44,1 @@\n+import java.util.Arrays;\n@@ -58,0 +60,3 @@\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n@@ -416,0 +421,65 @@\n+\n+    enum ComparisonInstruction {\n+        IF_ACMPEQ(Opcode.IF_ACMPEQ, 2),\n+        IF_ACMPNE(Opcode.IF_ACMPNE, 2),\n+        IFNONNULL(Opcode.IFNONNULL, 1),\n+        IFNULL(Opcode.IFNULL, 1);\n+        final Opcode opcode;\n+        final int argCount;\n+        ComparisonInstruction(Opcode opcode, int argCount) {\n+            this.opcode = opcode;\n+            this.argCount = argCount;\n+        }\n+    }\n+\n+    enum UninitializeKind {\n+        UNINITIALIZED, UNINITIALIZED_THIS\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"uninitializedInBytecodeClasses\")\n+    public void testUninitializedInComparisons(ComparisonInstruction inst, UninitializeKind kind) throws Throwable {\n+        var bytes = ClassFile.of(ClassFile.StackMapsOption.DROP_STACK_MAPS).build(ClassDesc.of(\"Test\"), clb -> clb\n+                .withMethodBody(INIT_NAME, MTD_void, 0, cob -> {\n+                    StackMapFrameInfo.VerificationTypeInfo uninitializeInfo;\n+                    if (kind == UninitializeKind.UNINITIALIZED) {\n+                        uninitializeInfo = StackMapFrameInfo.UninitializedVerificationTypeInfo.of(cob.newBoundLabel());\n+                        cob.new_(CD_Object);\n+                    } else {\n+                        uninitializeInfo = StackMapFrameInfo.SimpleVerificationTypeInfo.UNINITIALIZED_THIS;\n+                        cob.aload(0);\n+                    }\n+\n+                    \/\/ Stack: uninitializeInfo\n+                    for (int i = 0; i < inst.argCount; i++) {\n+                        cob.dup();\n+                    }\n+                    var dest = cob.newLabel();\n+                    cob.branch(inst.opcode, dest)\n+                       .nop()\n+                       .labelBinding(dest)\n+                       .with(StackMapTableAttribute.of(List.of(StackMapFrameInfo.of(dest,\n+                               List.of(StackMapFrameInfo.SimpleVerificationTypeInfo.UNINITIALIZED_THIS),\n+                               List.of(uninitializeInfo)))))\n+                       .invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                    if (kind == UninitializeKind.UNINITIALIZED) {\n+                        \/\/ still need to call super constructor\n+                        cob.aload(0)\n+                           .invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                    }\n+                    cob.return_();\n+                }));\n+        var errors = ClassFile.of().verify(bytes);\n+        assertNotEquals(List.of(), errors, () -> errors + \" : \" + ClassFile.of().parse(bytes).toDebugString());\n+        var lookup = MethodHandles.lookup();\n+        assertThrows(VerifyError.class, () -> lookup.defineHiddenClass(bytes, true)); \/\/ force JVM verification\n+    }\n+\n+    public static Stream<Arguments> uninitializedInBytecodeClasses() {\n+        return Arrays.stream(ComparisonInstruction.values())\n+                .mapMulti((inst, sink) -> {\n+                    for (var kind : UninitializeKind.values()) {\n+                        sink.accept(Arguments.of(inst, kind));\n+                    }\n+                });\n+    }\n","filename":"test\/jdk\/jdk\/classfile\/VerifierSelfTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"modified"}]}