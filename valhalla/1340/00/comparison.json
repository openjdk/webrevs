{"files":[{"patch":"@@ -59,1 +59,1 @@\n-  ifeq ($$($1_Type), Value)\n+  ifeq ($$($1_Type), FlatValue)\n@@ -66,1 +66,1 @@\n-        else ifeq ($$($1_Type), Value)\n+        else ifeq ($$($1_Type), FlatValue)\n@@ -275,1 +275,1 @@\n-VARHANDLES_TYPES := Boolean Byte Short Char Int Long Float Double Reference Value\n+VARHANDLES_TYPES := Boolean Byte Short Char Int Long Float Double Reference FlatValue\n","filename":"make\/modules\/java.base\/gensrc\/GensrcVarHandles.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4139,0 +4139,1 @@\n+int java_lang_invoke_MemberName::_high_flags_offset;\n@@ -4167,0 +4168,1 @@\n+  macro(_high_flags_offset, k, vmSymbols::highFlags_name(), int_signature,    false); \\\n@@ -4440,0 +4442,9 @@\n+int java_lang_invoke_MemberName::high_flags(oop mname) {\n+  assert(is_instance(mname), \"wrong type\");\n+  return mname->int_field(_high_flags_offset);\n+}\n+\n+void java_lang_invoke_MemberName::set_high_flags(oop mname, int flags) {\n+  assert(is_instance(mname), \"wrong type\");\n+  mname->int_field_put(_high_flags_offset, flags);\n+}\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1279,0 +1279,1 @@\n+  \/\/    private int        highFlags;   \/\/ higher bits, only stores field layout for now\n@@ -1285,0 +1286,1 @@\n+  static int _high_flags_offset;\n@@ -1305,0 +1307,3 @@\n+  static int            high_flags(oop mname);\n+  static void       set_high_flags(oop mname, int flags);\n+\n@@ -1333,0 +1338,1 @@\n+    MN_HIGH_LAYOUT_MASK      = 0x00000007,\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -470,0 +470,1 @@\n+  template(highFlags_name,                            \"highFlags\")                                \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -144,0 +144,1 @@\n+  HIGH_LAYOUT_MASK      = java_lang_invoke_MemberName::MN_HIGH_LAYOUT_MASK,\n@@ -363,0 +364,1 @@\n+  int high_flags = fd.layout_kind() & HIGH_LAYOUT_MASK;\n@@ -370,0 +372,1 @@\n+  java_lang_invoke_MemberName::set_high_flags(mname_oop, high_flags);\n@@ -1012,0 +1015,1 @@\n+    template(java_lang_invoke_MemberName,MN_HIGH_LAYOUT_MASK) \\\n","filename":"src\/hotspot\/share\/prims\/methodHandles.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+  LayoutKind layout_kind()        const    { return _fieldinfo.layout_kind(); }\n","filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2250,1 +2250,1 @@\n-                                    ? UNSAFE.getValue(obj, readKeys[i], f.getType())\n+                                    ? UNSAFE.getFlatValue(obj, readKeys[i], UNSAFE.fieldLayout(f), f.getType())\n@@ -2303,1 +2303,1 @@\n-                                UNSAFE.putValue(obj, key, f.getType(), val);\n+                                UNSAFE.putFlatValue(obj, key, UNSAFE.fieldLayout(f), f.getType(), val);\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamClass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,0 +78,1 @@\n+    private int      highFlags;   \/\/ higher bits, only stores field layout for now\n@@ -447,0 +448,3 @@\n+    \/** VM-internal layout code for this field {@link jdk.internal.misc.Unsafe#fieldLayout(Field)} *\/\n+    public int getLayout() { return highFlags & MN_HIGH_LAYOUT_MASK; }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MemberName.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -123,1 +123,2 @@\n-            MN_REFERENCE_KIND_MASK   = 0x3C000000 >> MN_REFERENCE_KIND_SHIFT;\n+            MN_REFERENCE_KIND_MASK   = 0x3C000000 >> MN_REFERENCE_KIND_SHIFT,\n+            MN_HIGH_LAYOUT_MASK      = 0x00000007;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleNatives.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -510,3 +510,3 @@\n-             VarHandleValues.Array,\n-             VarHandleValues.FieldInstanceReadOnly,\n-             VarHandleValues.FieldStaticReadOnly {\n+             VarHandleFlatValues.Array,\n+             VarHandleFlatValues.FieldInstanceReadOnly,\n+             VarHandleFlatValues.FieldStaticReadOnly {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandle.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+                    int layout = f.getLayout();\n@@ -54,2 +55,2 @@\n-                        ? new VarHandleValues.FieldInstanceReadOnly(refc, foffset, type, f.getCheckedFieldType())\n-                        : new VarHandleValues.FieldInstanceReadWrite(refc, foffset, type, f.getCheckedFieldType()));\n+                        ? new VarHandleFlatValues.FieldInstanceReadOnly(refc, foffset, type, f.getCheckedFieldType(), layout)\n+                        : new VarHandleFlatValues.FieldInstanceReadWrite(refc, foffset, type, f.getCheckedFieldType(), layout));\n@@ -121,3 +122,5 @@\n-                return maybeAdapt(f.isFinal() && !isWriteAllowedOnFinalFields\n-                        ? new VarHandleValues.FieldStaticReadOnly(decl, base, foffset, type, f.getCheckedFieldType())\n-                        : new VarHandleValues.FieldStaticReadWrite(decl, base, foffset, type, f.getCheckedFieldType()));\n+                assert false : (\"static field is flat in \" + decl + \".\" + f.getName());\n+                int layout = f.getLayout();\n+                return f.isFinal() && !isWriteAllowedOnFinalFields\n+                        ? new VarHandleFlatValues.FieldStaticReadOnly(decl, base, foffset, type, f.getCheckedFieldType(), layout)\n+                        : new VarHandleFlatValues.FieldStaticReadWrite(decl, base, foffset, type, f.getCheckedFieldType(), layout);\n@@ -216,3 +219,8 @@\n-            return maybeAdapt(UNSAFE.isFlatArray(arrayClass)\n-                ? new VarHandleValues.Array(aoffset, ashift, arrayClass)\n-                : new VarHandleReferences.Array(aoffset, ashift, arrayClass));\n+            VarHandle vh;\n+            if (UNSAFE.isFlatArray(arrayClass)) {\n+                int layout = UNSAFE.arrayLayout(arrayClass);\n+                vh = new VarHandleFlatValues.Array(aoffset, ashift, arrayClass, layout);\n+            } else {\n+                vh = new VarHandleReferences.Array(aoffset, ashift, arrayClass);\n+            }\n+            return maybeAdapt(vh);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -52,0 +52,3 @@\n+#if[Value]\n+        final int layout; \/\/ Unsafe.fieldLayout\n+#end[Value]\n@@ -53,2 +56,2 @@\n-        FieldInstanceReadOnly(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}) {\n-            this(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, FieldInstanceReadOnly.FORM, false);\n+        FieldInstanceReadOnly(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout}) {\n+            this(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, FieldInstanceReadOnly.FORM, false);\n@@ -57,1 +60,1 @@\n-        protected FieldInstanceReadOnly(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType},\n+        protected FieldInstanceReadOnly(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout},\n@@ -66,0 +69,3 @@\n+#if[Value]\n+            this.layout = layout;\n+#end[Value]\n@@ -72,1 +78,1 @@\n-                : new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, vform, true);\n+                : new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, vform, true);\n@@ -79,1 +85,1 @@\n-                : new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, vform, false);\n+                : new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, vform, false);\n@@ -104,2 +110,2 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.fieldType});\n-#if[Object]\n+                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+#if[Reference]\n@@ -109,1 +115,1 @@\n-#end[Object]\n+#end[Reference]\n@@ -117,2 +123,2 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.fieldType});\n-#if[Object]\n+                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+#if[Reference]\n@@ -122,1 +128,1 @@\n-#end[Object]\n+#end[Reference]\n@@ -130,2 +136,2 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.fieldType});\n-#if[Object]\n+                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+#if[Reference]\n@@ -135,1 +141,1 @@\n-#end[Object]\n+#end[Reference]\n@@ -143,2 +149,2 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.fieldType});\n-#if[Object]\n+                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+#if[Reference]\n@@ -148,1 +154,1 @@\n-#end[Object]\n+#end[Reference]\n@@ -156,2 +162,2 @@\n-        FieldInstanceReadWrite(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}) {\n-            this(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, false);\n+        FieldInstanceReadWrite(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout}) {\n+            this(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, false);\n@@ -160,1 +166,1 @@\n-        private FieldInstanceReadWrite(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType},\n+        private FieldInstanceReadWrite(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout},\n@@ -162,1 +168,1 @@\n-            super(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, FieldInstanceReadWrite.FORM, exact);\n+            super(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, FieldInstanceReadWrite.FORM, exact);\n@@ -169,1 +175,1 @@\n-                : new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, true);\n+                : new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, true);\n@@ -176,1 +182,1 @@\n-                : new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, false);\n+                : new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, false);\n@@ -190,1 +196,1 @@\n-                             handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                             handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -198,1 +204,1 @@\n-                                     handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                     handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -206,1 +212,1 @@\n-                                   handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                   handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -214,1 +220,1 @@\n-                                    handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                    handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -223,1 +229,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -232,1 +238,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -241,1 +247,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -250,1 +256,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -259,1 +265,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -268,1 +274,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -277,1 +283,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -286,1 +292,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -295,1 +301,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -303,1 +309,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -311,1 +317,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -429,0 +435,3 @@\n+#if[Value]\n+        final int layout;\n+#end[Value]\n@@ -430,2 +439,2 @@\n-        FieldStaticReadOnly(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}) {\n-            this(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, FieldStaticReadOnly.FORM, false);\n+        FieldStaticReadOnly(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout}) {\n+            this(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, FieldStaticReadOnly.FORM, false);\n@@ -434,1 +443,1 @@\n-        protected FieldStaticReadOnly(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType},\n+        protected FieldStaticReadOnly(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout},\n@@ -444,0 +453,3 @@\n+#if[Value]\n+            this.layout = layout;\n+#end[Value]\n@@ -450,1 +462,1 @@\n-                : new FieldStaticReadOnly(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, vform, true);\n+                : new FieldStaticReadOnly(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, vform, true);\n@@ -457,1 +469,1 @@\n-                : new FieldStaticReadOnly(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, vform, false);\n+                : new FieldStaticReadOnly(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, vform, false);\n@@ -484,2 +496,2 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.fieldType});\n-#if[Object]\n+                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+#if[Reference]\n@@ -489,1 +501,1 @@\n-#end[Object]\n+#end[Reference]\n@@ -497,2 +509,2 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.fieldType});\n-#if[Object]\n+                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+#if[Reference]\n@@ -502,1 +514,1 @@\n-#end[Object]\n+#end[Reference]\n@@ -510,2 +522,2 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.fieldType});\n-#if[Object]\n+                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+#if[Reference]\n@@ -515,1 +527,1 @@\n-#end[Object]\n+#end[Reference]\n@@ -523,2 +535,2 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.fieldType});\n-#if[Object]\n+                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+#if[Reference]\n@@ -528,1 +540,1 @@\n-#end[Object]\n+#end[Reference]\n@@ -537,2 +549,2 @@\n-        FieldStaticReadWrite(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}) {\n-            this(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, false);\n+        FieldStaticReadWrite(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout}) {\n+            this(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, false);\n@@ -541,1 +553,1 @@\n-        private FieldStaticReadWrite(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType},\n+        private FieldStaticReadWrite(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout},\n@@ -543,1 +555,1 @@\n-            super(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, FieldStaticReadWrite.FORM, exact);\n+            super(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, FieldStaticReadWrite.FORM, exact);\n@@ -550,1 +562,1 @@\n-                : new FieldStaticReadWrite(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, true);\n+                : new FieldStaticReadWrite(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, true);\n@@ -557,1 +569,1 @@\n-                : new FieldStaticReadWrite(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}, false);\n+                : new FieldStaticReadWrite(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, false);\n@@ -571,1 +583,1 @@\n-                             handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                             handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -579,1 +591,1 @@\n-                                     handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                     handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -587,1 +599,1 @@\n-                                   handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                   handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -595,1 +607,1 @@\n-                                    handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                    handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -604,1 +616,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -614,1 +626,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -623,1 +635,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -632,1 +644,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -641,1 +653,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -650,1 +662,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -659,1 +671,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -668,1 +680,1 @@\n-                                               handle.fieldOffset{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -677,1 +689,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -685,1 +697,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -693,1 +705,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.fieldType},\n+                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n@@ -808,0 +820,3 @@\n+#if[Value]\n+        final int layout;\n+#end[Value]\n@@ -809,2 +824,2 @@\n-        Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}) {\n-            this(abase, ashift{#if[Object]?, arrayType}, false);\n+        Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}{#if[Value]?, int layout}) {\n+            this(abase, ashift{#if[Object]?, arrayType}{#if[Value]?, layout}, false);\n@@ -813,1 +828,1 @@\n-        private Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}, boolean exact) {\n+        private Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}{#if[Value]?, int layout}, boolean exact) {\n@@ -821,0 +836,3 @@\n+#if[Value]\n+            this.layout = layout;\n+#end[Value]\n@@ -827,1 +845,1 @@\n-                : new Array(abase, ashift{#if[Object]?, arrayType}, true);\n+                : new Array(abase, ashift{#if[Object]?, arrayType}{#if[Value]?, layout}, true);\n@@ -834,1 +852,1 @@\n-                : new Array(abase, ashift{#if[Object]?, arrayType}, false);\n+                : new Array(abase, ashift{#if[Object]?, arrayType}{#if[Value]?, layout}, false);\n@@ -896,1 +914,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -916,1 +934,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -921,1 +939,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.componentType});\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType});\n@@ -936,1 +954,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -942,1 +960,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n@@ -958,1 +976,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -963,1 +981,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.componentType});\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType});\n@@ -978,1 +996,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -984,1 +1002,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n@@ -1000,1 +1018,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1005,1 +1023,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.componentType});\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType});\n@@ -1020,1 +1038,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1026,1 +1044,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n@@ -1043,1 +1061,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1048,1 +1066,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1065,1 +1083,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1070,1 +1088,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1087,1 +1105,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1092,1 +1110,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1109,1 +1127,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1114,1 +1132,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1131,1 +1149,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1136,1 +1154,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1153,1 +1171,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1158,1 +1176,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1175,1 +1193,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1180,1 +1198,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1197,1 +1215,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1202,1 +1220,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1219,1 +1237,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1224,1 +1242,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n@@ -1240,1 +1258,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1245,1 +1263,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n@@ -1261,1 +1279,1 @@\n-                VarHandle vh = VarHandleValues.flatArrayVarHandle(arrayType);\n+                VarHandle vh = VarHandleFlatValues.flatArrayVarHandle(arrayType);\n@@ -1266,1 +1284,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n@@ -1391,1 +1409,2 @@\n-            return new Array(aoffset, ashift, arrayClass);\n+            int layout = UNSAFE.arrayLayout(arrayClass);\n+            return new Array(aoffset, ashift, arrayClass, layout);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandle.java.template","additions":136,"deletions":117,"binary":false,"changes":253,"status":"modified"},{"patch":"@@ -1659,1 +1659,2 @@\n-    public final <V> boolean compareAndSetValue(Object o, long offset,\n+    public final <V> boolean compareAndSetFlatValue(Object o, long offset,\n+                                                int layout,\n@@ -1664,1 +1665,1 @@\n-            Object witness = getValue(o, offset, valueType);\n+            Object witness = getFlatValue(o, offset, layout, valueType);\n@@ -1666,1 +1667,1 @@\n-                putValue(o, offset, valueType, x);\n+                putFlatValue(o, offset, layout, valueType, x);\n@@ -1698,1 +1699,2 @@\n-    public final <V> Object compareAndExchangeValue(Object o, long offset,\n+    public final <V> Object compareAndExchangeFlatValue(Object o, long offset,\n+                                                    int layout,\n@@ -1703,1 +1705,1 @@\n-            Object witness = getValue(o, offset, valueType);\n+            Object witness = getFlatValue(o, offset, layout, valueType);\n@@ -1705,1 +1707,1 @@\n-                putValue(o, offset, valueType, x);\n+                putFlatValue(o, offset, layout, valueType, x);\n@@ -1726,1 +1728,2 @@\n-    public final <V> Object compareAndExchangeValueAcquire(Object o, long offset,\n+    public final <V> Object compareAndExchangeFlatValueAcquire(Object o, long offset,\n+                                                           int layout,\n@@ -1730,1 +1733,1 @@\n-        return compareAndExchangeValue(o, offset, valueType, expected, x);\n+        return compareAndExchangeFlatValue(o, offset, layout, valueType, expected, x);\n@@ -1748,1 +1751,2 @@\n-    public final <V> Object compareAndExchangeValueRelease(Object o, long offset,\n+    public final <V> Object compareAndExchangeFlatValueRelease(Object o, long offset,\n+                                                           int layout,\n@@ -1752,1 +1756,1 @@\n-        return compareAndExchangeValue(o, offset, valueType, expected, x);\n+        return compareAndExchangeFlatValue(o, offset, layout, valueType, expected, x);\n@@ -1774,1 +1778,2 @@\n-    public final <V> boolean weakCompareAndSetValuePlain(Object o, long offset,\n+    public final <V> boolean weakCompareAndSetFlatValuePlain(Object o, long offset,\n+                                                         int layout,\n@@ -1778,1 +1783,1 @@\n-        return compareAndSetValue(o, offset, valueType, expected, x);\n+        return compareAndSetFlatValue(o, offset, layout, valueType, expected, x);\n@@ -1800,1 +1805,2 @@\n-    public final <V> boolean weakCompareAndSetValueAcquire(Object o, long offset,\n+    public final <V> boolean weakCompareAndSetFlatValueAcquire(Object o, long offset,\n+                                                           int layout,\n@@ -1804,1 +1810,1 @@\n-        return compareAndSetValue(o, offset, valueType, expected, x);\n+        return compareAndSetFlatValue(o, offset, layout, valueType, expected, x);\n@@ -1826,1 +1832,2 @@\n-    public final <V> boolean weakCompareAndSetValueRelease(Object o, long offset,\n+    public final <V> boolean weakCompareAndSetFlatValueRelease(Object o, long offset,\n+                                                           int layout,\n@@ -1830,1 +1837,1 @@\n-        return compareAndSetValue(o, offset, valueType, expected, x);\n+        return compareAndSetFlatValue(o, offset, layout, valueType, expected, x);\n@@ -1852,1 +1859,2 @@\n-    public final <V> boolean weakCompareAndSetValue(Object o, long offset,\n+    public final <V> boolean weakCompareAndSetFlatValue(Object o, long offset,\n+                                                    int layout,\n@@ -1856,1 +1864,1 @@\n-        return compareAndSetValue(o, offset, valueType, expected, x);\n+        return compareAndSetFlatValue(o, offset, layout, valueType, expected, x);\n@@ -2481,1 +2489,1 @@\n-    public final <V> Object getValueVolatile(Object base, long offset, Class<?> valueType) {\n+    public final <V> Object getFlatValueVolatile(Object base, long offset, int layout, Class<?> valueType) {\n@@ -2483,1 +2491,1 @@\n-            return getValue(base, offset, valueType);\n+            return getFlatValue(base, offset, layout, valueType);\n@@ -2494,1 +2502,1 @@\n-    public final <V> void putValueVolatile(Object o, long offset, Class<?> valueType, V x) {\n+    public final <V> void putFlatValueVolatile(Object o, long offset, int layout, Class<?> valueType, V x) {\n@@ -2496,1 +2504,1 @@\n-            putValue(o, offset, valueType, x);\n+            putFlatValue(o, offset, layout, valueType, x);\n@@ -2572,2 +2580,2 @@\n-    public final <V> Object getValueAcquire(Object base, long offset, Class<?> valueType) {\n-        return getValueVolatile(base, offset, valueType);\n+    public final <V> Object getFlatValueAcquire(Object base, long offset, int layout, Class<?> valueType) {\n+        return getFlatValueVolatile(base, offset, layout, valueType);\n@@ -2640,2 +2648,2 @@\n-    public final <V> void putValueRelease(Object o, long offset, Class<?> valueType, V x) {\n-        putValueVolatile(o, offset, valueType, x);\n+    public final <V> void putFlatValueRelease(Object o, long offset, int layout, Class<?> valueType, V x) {\n+        putFlatValueVolatile(o, offset, layout, valueType, x);\n@@ -2700,2 +2708,2 @@\n-    public final <V> Object getValueOpaque(Object base, long offset, Class<?> valueType) {\n-        return getValueVolatile(base, offset, valueType);\n+    public final <V> Object getFlatValueOpaque(Object base, long offset, int layout, Class<?> valueType) {\n+        return getFlatValueVolatile(base, offset, layout, valueType);\n@@ -2758,2 +2766,2 @@\n-    public final <V> void putValueOpaque(Object o, long offset, Class<?> valueType, V x) {\n-        putValueVolatile(o, offset, valueType, x);\n+    public final <V> void putFlatValueOpaque(Object o, long offset, int layout, Class<?> valueType, V x) {\n+        putFlatValueVolatile(o, offset, layout, valueType, x);\n@@ -3197,1 +3205,1 @@\n-    public final <V> Object getAndSetValue(Object o, long offset, Class<?> valueType, V newValue) {\n+    public final <V> Object getAndSetFlatValue(Object o, long offset, int layout, Class<?> valueType, V newValue) {\n@@ -3199,2 +3207,2 @@\n-            Object oldValue = getValue(o, offset, valueType);\n-            putValue(o, offset, valueType, newValue);\n+            Object oldValue = getFlatValue(o, offset, layout, valueType);\n+            putFlatValue(o, offset, layout, valueType, newValue);\n@@ -3215,2 +3223,2 @@\n-    public final <V> Object getAndSetValueRelease(Object o, long offset, Class<?> valueType, V newValue) {\n-        return getAndSetValue(o, offset, valueType, newValue);\n+    public final <V> Object getAndSetFlatValueRelease(Object o, long offset, int layout, Class<?> valueType, V newValue) {\n+        return getAndSetFlatValue(o, offset, layout, valueType, newValue);\n@@ -3229,2 +3237,2 @@\n-    public final <V> Object getAndSetValueAcquire(Object o, long offset, Class<?> valueType, V newValue) {\n-        return getAndSetValue(o, offset, valueType, newValue);\n+    public final <V> Object getAndSetFlatValueAcquire(Object o, long offset, int layout, Class<?> valueType, V newValue) {\n+        return getAndSetFlatValue(o, offset, layout, valueType, newValue);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Unsafe.java","additions":45,"deletions":37,"binary":false,"changes":82,"status":"modified"}]}