{"files":[{"patch":"@@ -60,1 +60,1 @@\n-    $1_ARGS += -KValue\n+    $1_ARGS += -KFlatValue\n","filename":"make\/modules\/java.base\/gensrc\/GensrcVarHandles.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4196,1 +4196,0 @@\n-int java_lang_invoke_MemberName::_high_flags_offset;\n@@ -4225,1 +4224,0 @@\n-  macro(_high_flags_offset, k, vmSymbols::highFlags_name(), int_signature,    false); \\\n@@ -4499,10 +4497,0 @@\n-int java_lang_invoke_MemberName::high_flags(oop mname) {\n-  assert(is_instance(mname), \"wrong type\");\n-  return mname->int_field(_high_flags_offset);\n-}\n-\n-void java_lang_invoke_MemberName::set_high_flags(oop mname, int flags) {\n-  assert(is_instance(mname), \"wrong type\");\n-  mname->int_field_put(_high_flags_offset, flags);\n-}\n-\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1313,1 +1313,0 @@\n-  static int _high_flags_offset;\n@@ -1334,3 +1333,0 @@\n-  static int            high_flags(oop mname);\n-  static void       set_high_flags(oop mname, int flags);\n-\n@@ -1361,5 +1357,5 @@\n-    MN_FLAT_FIELD            = 0x00800000, \/\/ flat field\n-    MN_NULL_RESTRICTED_FIELD = 0x01000000, \/\/ null-restricted field\n-    MN_REFERENCE_KIND_SHIFT  = 26, \/\/ refKind\n-    MN_REFERENCE_KIND_MASK   = 0x3C000000 >> MN_REFERENCE_KIND_SHIFT,\n-    MN_HIGH_LAYOUT_MASK      = 0x00000007,\n+    MN_NULL_RESTRICTED_FIELD = 0x00800000, \/\/ null-restricted field\n+    MN_REFERENCE_KIND_SHIFT  = 24, \/\/ refKind\n+    MN_REFERENCE_KIND_MASK   = 0x0F000000 >> MN_REFERENCE_KIND_SHIFT, \/\/ 4 bits\n+    MN_LAYOUT_SHIFT          = 28, \/\/ field layout\n+    MN_LAYOUT_MASK           = 0x70000000 >> MN_LAYOUT_SHIFT, \/\/ 3 bits\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -139,2 +139,1 @@\n-  HIDDEN_MEMBER        = java_lang_invoke_MemberName::MN_HIDDEN_MEMBER,\n-  FLAT_FIELD            = java_lang_invoke_MemberName::MN_FLAT_FIELD,\n+  HIDDEN_MEMBER         = java_lang_invoke_MemberName::MN_HIDDEN_MEMBER,\n@@ -144,1 +143,2 @@\n-  HIGH_LAYOUT_MASK      = java_lang_invoke_MemberName::MN_HIGH_LAYOUT_MASK,\n+  LAYOUT_SHIFT          = java_lang_invoke_MemberName::MN_LAYOUT_SHIFT,\n+  LAYOUT_MASK           = java_lang_invoke_MemberName::MN_LAYOUT_MASK,\n@@ -361,1 +361,5 @@\n-  if (fd.is_flat()) flags |= FLAT_FIELD;\n+  if (fd.is_flat()) {\n+    int layout_kind = fd.layout_kind();\n+    assert((layout_kind & LAYOUT_MASK) == layout_kind, \"Layout information loss\");\n+    flags |= layout_kind << LAYOUT_SHIFT;\n+  }\n@@ -364,1 +368,0 @@\n-  int high_flags = fd.layout_kind() & HIGH_LAYOUT_MASK;\n@@ -372,1 +375,0 @@\n-  java_lang_invoke_MemberName::set_high_flags(mname_oop, high_flags);\n@@ -1012,1 +1014,0 @@\n-    template(java_lang_invoke_MemberName,MN_FLAT_FIELD) \\\n@@ -1015,1 +1016,2 @@\n-    template(java_lang_invoke_MemberName,MN_HIGH_LAYOUT_MASK) \\\n+    template(java_lang_invoke_MemberName,MN_LAYOUT_SHIFT) \\\n+    template(java_lang_invoke_MemberName,MN_LAYOUT_MASK) \\\n","filename":"src\/hotspot\/share\/prims\/methodHandles.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -118,1 +118,0 @@\n-                int layout = member.isFlat() ? member.getLayout() : 0;\n@@ -120,1 +119,1 @@\n-                return new Accessor(mtype, lform, member, true, (int)offset, layout);\n+                return new Accessor(mtype, lform, member, true, (int)offset);\n@@ -516,1 +515,1 @@\n-                         boolean crackable, int fieldOffset, int layout) {\n+                         boolean crackable, int fieldOffset) {\n@@ -520,1 +519,1 @@\n-            this.layout = layout;\n+            this.layout = member.getLayout();\n@@ -528,1 +527,1 @@\n-            return new Accessor(mt, lf, member, crackable, fieldOffset, layout);\n+            return new Accessor(mt, lf, member, crackable, fieldOffset);\n@@ -533,1 +532,1 @@\n-            return new Accessor(newType, form, member, false, fieldOffset, layout);\n+            return new Accessor(newType, form, member, false, fieldOffset);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/DirectMethodHandle.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -78,1 +78,0 @@\n-    private int      highFlags;   \/\/ higher bits, only stores field layout for now\n@@ -443,1 +442,1 @@\n-    public boolean isFlat() { return (flags & MN_FLAT_FIELD) == MN_FLAT_FIELD; }\n+    public boolean isFlat() { return getLayout() != 0; }\n@@ -449,2 +448,1 @@\n-     * VM-internal layout code for this field {@link jdk.internal.misc.Unsafe#fieldLayout(Field)}.\n-     * Only meaningful if the field {@link #isFlat()}, otherwise this may be garbage.\n+     * VM-internal layout code for this field, 0 if this field is not flat.\n@@ -452,1 +450,1 @@\n-    public int getLayout() { return highFlags & MN_HIGH_LAYOUT_MASK; }\n+    public int getLayout() { return (flags >>> MN_LAYOUT_SHIFT) & MN_LAYOUT_MASK; }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MemberName.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -122,5 +122,5 @@\n-            MN_FLAT_FIELD            = 0x00800000, \/\/ flat field\n-            MN_NULL_RESTRICTED       = 0x01000000, \/\/ null-restricted field\n-            MN_REFERENCE_KIND_SHIFT  = 26, \/\/ refKind\n-            MN_REFERENCE_KIND_MASK   = 0x3C000000 >> MN_REFERENCE_KIND_SHIFT,\n-            MN_HIGH_LAYOUT_MASK      = 0x00000007;\n+            MN_NULL_RESTRICTED       = 0x00800000, \/\/ null-restricted field\n+            MN_REFERENCE_KIND_SHIFT  = 24, \/\/ refKind\n+            MN_REFERENCE_KIND_MASK   = 0x0F000000 >>> MN_REFERENCE_KIND_SHIFT, \/\/ 4 bits\n+            MN_LAYOUT_SHIFT          = 28, \/\/ field layout\n+            MN_LAYOUT_MASK           = 0x70000000 >>> MN_LAYOUT_SHIFT;  \/\/ 3 bits\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleNatives.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-#if[Value]\n+#if[FlatValue]\n@@ -54,1 +54,1 @@\n-#end[Value]\n+#end[FlatValue]\n@@ -56,2 +56,2 @@\n-        FieldInstanceReadOnly(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout}) {\n-            this(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, FieldInstanceReadOnly.FORM, false);\n+        FieldInstanceReadOnly(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[FlatValue]?, int layout}) {\n+            this(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, FieldInstanceReadOnly.FORM, false);\n@@ -60,1 +60,1 @@\n-        protected FieldInstanceReadOnly(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout},\n+        protected FieldInstanceReadOnly(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[FlatValue]?, int layout},\n@@ -69,1 +69,1 @@\n-#if[Value]\n+#if[FlatValue]\n@@ -71,1 +71,1 @@\n-#end[Value]\n+#end[FlatValue]\n@@ -78,1 +78,1 @@\n-                : new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, vform, true);\n+                : new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, vform, true);\n@@ -85,1 +85,1 @@\n-                : new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, vform, false);\n+                : new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, vform, false);\n@@ -110,1 +110,1 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+                                 handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType});\n@@ -118,1 +118,1 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+                                 handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType});\n@@ -126,1 +126,1 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+                                 handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType});\n@@ -134,1 +134,1 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+                                 handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType});\n@@ -142,2 +142,2 @@\n-        FieldInstanceReadWrite(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout}) {\n-            this(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, false);\n+        FieldInstanceReadWrite(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[FlatValue]?, int layout}) {\n+            this(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, false);\n@@ -146,1 +146,1 @@\n-        private FieldInstanceReadWrite(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout},\n+        private FieldInstanceReadWrite(Class<?> receiverType, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[FlatValue]?, int layout},\n@@ -148,1 +148,1 @@\n-            super(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, FieldInstanceReadWrite.FORM, exact);\n+            super(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, FieldInstanceReadWrite.FORM, exact);\n@@ -155,1 +155,1 @@\n-                : new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, true);\n+                : new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, true);\n@@ -162,1 +162,1 @@\n-                : new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, false);\n+                : new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, false);\n@@ -176,1 +176,1 @@\n-                             handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                             handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -184,1 +184,1 @@\n-                                     handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                     handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -192,1 +192,1 @@\n-                                   handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                   handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -200,1 +200,1 @@\n-                                    handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                    handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -209,1 +209,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -218,1 +218,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -227,1 +227,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -236,1 +236,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -245,1 +245,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -254,1 +254,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -263,1 +263,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -272,1 +272,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -281,1 +281,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                          handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -289,1 +289,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                          handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -297,1 +297,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                          handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -415,1 +415,1 @@\n-#if[Value]\n+#if[FlatValue]\n@@ -417,1 +417,1 @@\n-#end[Value]\n+#end[FlatValue]\n@@ -419,2 +419,2 @@\n-        FieldStaticReadOnly(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout}) {\n-            this(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, FieldStaticReadOnly.FORM, false);\n+        FieldStaticReadOnly(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[FlatValue]?, int layout}) {\n+            this(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, FieldStaticReadOnly.FORM, false);\n@@ -423,1 +423,1 @@\n-        protected FieldStaticReadOnly(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout},\n+        protected FieldStaticReadOnly(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[FlatValue]?, int layout},\n@@ -433,1 +433,1 @@\n-#if[Value]\n+#if[FlatValue]\n@@ -435,1 +435,1 @@\n-#end[Value]\n+#end[FlatValue]\n@@ -442,1 +442,1 @@\n-                : new FieldStaticReadOnly(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, vform, true);\n+                : new FieldStaticReadOnly(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, vform, true);\n@@ -449,1 +449,1 @@\n-                : new FieldStaticReadOnly(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, vform, false);\n+                : new FieldStaticReadOnly(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, vform, false);\n@@ -476,1 +476,1 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+                                 handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType});\n@@ -484,1 +484,1 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+                                 handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType});\n@@ -492,1 +492,1 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+                                 handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType});\n@@ -500,1 +500,1 @@\n-                                 handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType});\n+                                 handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType});\n@@ -509,2 +509,2 @@\n-        FieldStaticReadWrite(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout}) {\n-            this(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, false);\n+        FieldStaticReadWrite(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[FlatValue]?, int layout}) {\n+            this(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, false);\n@@ -513,1 +513,1 @@\n-        private FieldStaticReadWrite(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[Value]?, int layout},\n+        private FieldStaticReadWrite(Class<?> declaringClass, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType, CheckedType checkedFieldType}{#if[FlatValue]?, int layout},\n@@ -515,1 +515,1 @@\n-            super(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, FieldStaticReadWrite.FORM, exact);\n+            super(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, FieldStaticReadWrite.FORM, exact);\n@@ -522,1 +522,1 @@\n-                : new FieldStaticReadWrite(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, true);\n+                : new FieldStaticReadWrite(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, true);\n@@ -529,1 +529,1 @@\n-                : new FieldStaticReadWrite(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[Value]?, layout}, false);\n+                : new FieldStaticReadWrite(declaringClass, base, fieldOffset{#if[Object]?, fieldType, checkedFieldType}{#if[FlatValue]?, layout}, false);\n@@ -543,1 +543,1 @@\n-                             handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                             handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -551,1 +551,1 @@\n-                                     handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                     handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -559,1 +559,1 @@\n-                                   handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                   handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -567,1 +567,1 @@\n-                                    handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                    handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -576,1 +576,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -586,1 +586,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -595,1 +595,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -604,1 +604,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -613,1 +613,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -622,1 +622,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -631,1 +631,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -640,1 +640,1 @@\n-                                               handle.fieldOffset{#if[Value]?, handle.layout}{#if[Object]?, handle.fieldType},\n+                                               handle.fieldOffset{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.fieldType},\n@@ -649,1 +649,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                          handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -657,1 +657,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                          handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -665,1 +665,1 @@\n-                                          handle.fieldOffset{#if[Value]?, handle.layout, handle.fieldType},\n+                                          handle.fieldOffset{#if[FlatValue]?, handle.layout, handle.fieldType},\n@@ -780,1 +780,1 @@\n-#if[Value]\n+#if[FlatValue]\n@@ -782,1 +782,1 @@\n-#end[Value]\n+#end[FlatValue]\n@@ -784,2 +784,2 @@\n-        Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}{#if[Value]?, int layout}) {\n-            this(abase, ashift{#if[Object]?, arrayType}{#if[Value]?, layout}, false);\n+        Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}{#if[FlatValue]?, int layout}) {\n+            this(abase, ashift{#if[Object]?, arrayType}{#if[FlatValue]?, layout}, false);\n@@ -788,1 +788,1 @@\n-        private Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}{#if[Value]?, int layout}, boolean exact) {\n+        private Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}{#if[FlatValue]?, int layout}, boolean exact) {\n@@ -796,1 +796,1 @@\n-#if[Value]\n+#if[FlatValue]\n@@ -798,1 +798,1 @@\n-#end[Value]\n+#end[FlatValue]\n@@ -805,1 +805,1 @@\n-                : new Array(abase, ashift{#if[Object]?, arrayType}{#if[Value]?, layout}, true);\n+                : new Array(abase, ashift{#if[Object]?, arrayType}{#if[FlatValue]?, layout}, true);\n@@ -812,1 +812,1 @@\n-                : new Array(abase, ashift{#if[Object]?, arrayType}{#if[Value]?, layout}, false);\n+                : new Array(abase, ashift{#if[Object]?, arrayType}{#if[FlatValue]?, layout}, false);\n@@ -834,1 +834,1 @@\n-                return {#if[Value]?ValueClass.componentCheckedType(oarray):handle.componentType}.cast(value);\n+                return {#if[FlatValue]?ValueClass.componentCheckedType(oarray):handle.componentType}.cast(value);\n@@ -899,1 +899,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType});\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout, handle.componentType});\n@@ -920,1 +920,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout, handle.componentType},\n@@ -941,1 +941,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType});\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout, handle.componentType});\n@@ -962,1 +962,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout, handle.componentType},\n@@ -983,1 +983,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType});\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout, handle.componentType});\n@@ -1004,1 +1004,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout, handle.componentType},\n@@ -1026,1 +1026,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1048,1 +1048,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1070,1 +1070,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1092,1 +1092,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1114,1 +1114,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1136,1 +1136,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1158,1 +1158,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1180,1 +1180,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout}{#if[Object]?, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout}{#if[Object]?, handle.componentType},\n@@ -1202,1 +1202,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout, handle.componentType},\n@@ -1223,1 +1223,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout, handle.componentType},\n@@ -1244,1 +1244,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[Value]?, handle.layout, handle.componentType},\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase{#if[FlatValue]?, handle.layout, handle.componentType},\n@@ -1362,1 +1362,1 @@\n-#if[Value]\n+#if[FlatValue]\n@@ -1376,1 +1376,1 @@\n-#end[Value]\n+#end[FlatValue]\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandle.java.template","additions":97,"deletions":97,"binary":false,"changes":194,"status":"modified"},{"patch":"@@ -227,0 +227,2 @@\n+    public static final int NON_FLAT_LAYOUT = 0;\n+\n@@ -231,0 +233,2 @@\n+     *\n+     * A layout of 0 indicates this array is not flat.\n@@ -242,1 +246,1 @@\n-    \/** Reports the kind of layout used for a given field in the storage\n+    \/* Reports the kind of layout used for a given field in the storage\n@@ -245,2 +249,3 @@\n-     * used for performance reasons.  This value may be garbage if this field\n-     * is not {@link #isFlatField}.\n+     * used for performance reasons.\n+     *\n+     * A layout of 0 indicates this field is not flat.\n@@ -252,1 +257,1 @@\n-            return fieldLayout0(f);\n+        return fieldLayout0(f);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Unsafe.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -59,0 +59,2 @@\n+compiler\/valhalla\/inlinetypes\/TestIntrinsics.java 8349110 generic-all\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -381,3 +381,2 @@\n-            var flattened = U.isFlatField(v1Field);\n-            V1_FLATTENED = flattened;\n-            V1_LAYOUT = flattened ? U.fieldLayout(v1Field) : -1;\n+            V1_FLATTENED = U.isFlatField(v1Field);\n+            V1_LAYOUT = U.fieldLayout(v1Field);\n@@ -595,3 +594,2 @@\n-            var flattened = U.isFlatField(test31_vt_Field);\n-            TEST31_VT_FLATTENED = flattened;\n-            TEST31_VT_LAYOUT = flattened ? U.fieldLayout(test31_vt_Field) : 0;\n+            TEST31_VT_FLATTENED = U.isFlatField(test31_vt_Field);\n+            TEST31_VT_LAYOUT = U.fieldLayout(test31_vt_Field);\n@@ -649,3 +647,2 @@\n-            var flattened = U.isFlatArray(TEST33_ARRAY.getClass());\n-            TEST33_FLATTENED_ARRAY = flattened;\n-            TEST33_LAYOUT = flattened ? U.arrayLayout(TEST33_ARRAY.getClass()) : 0;\n+            TEST33_FLATTENED_ARRAY = U.isFlatArray(TEST33_ARRAY.getClass());\n+            TEST33_LAYOUT = U.arrayLayout(TEST33_ARRAY.getClass());\n@@ -1624,2 +1621,1 @@\n-        var flat = U.isFlatField(field);\n-        Asserts.assertEQ(test80(v, flat, flat ? U.fieldLayout(field) : 0, U.objectFieldOffset(field)), v.v);\n+        Asserts.assertEQ(test80(v, U.isFlatField(field), U.fieldLayout(field), U.objectFieldOffset(field)), v.v);\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestIntrinsics.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"}]}