{"files":[{"patch":"@@ -48,1 +48,1 @@\n-class FieldWatchpointsTarg {\n+value class FieldWatchpointsTarg {\n@@ -63,0 +63,2 @@\n+    \/\/ flattened field\n+    Value instanceField = new Value(2);\n@@ -66,3 +68,6 @@\n-        Value obj = new Value(2); \/\/ modify\n-        System.out.println(\"obj value = \" + obj.v); \/\/ access\n-        System.out.println(\"staticField value = \" + staticField.v); \/\/ access\n+        \/\/ modify FieldWatchpointsTarg.instanceField and FieldWatchpointsTarg.instanceField.v\n+        FieldWatchpointsTarg targ = new FieldWatchpointsTarg();\n+        \/\/ access FieldWatchpointsTarg.instanceField and FieldWatchpointsTarg.instanceField.v\n+        System.out.println(\"obj value = \" + targ.instanceField.v);\n+        \/\/ access FieldWatchpointsTarg.staticField and FieldWatchpointsTarg.staticField.v\n+        System.out.println(\"staticField value = \" + staticField.v);\n@@ -114,0 +119,1 @@\n+            Field instanceValueField = testClass.fieldByName(\"instanceField\");\n@@ -120,1 +126,1 @@\n-            testCases.add(new TestCase(\"modify\", 1, request)); \/\/ obj ctor\n+            testCases.add(new TestCase(\"modify\", 1, request)); \/\/ instanceField ctor\n@@ -123,1 +129,7 @@\n-            testCases.add(new TestCase(\"access\", 2, request)); \/\/ staticField, obj\n+            testCases.add(new TestCase(\"access\", 2, request)); \/\/ staticField, instanceField\n+\n+            request = eventRequestManager().createModificationWatchpointRequest(instanceValueField);\n+            testCases.add(new TestCase(\"modify flat\", 1, request)); \/\/ instanceField ctor\n+\n+            request = eventRequestManager().createAccessWatchpointRequest(instanceValueField);\n+            testCases.add(new TestCase(\"access flat\", 1, request)); \/\/ println(targ.instanceField.v)\n","filename":"test\/jdk\/com\/sun\/jdi\/valhalla\/FieldWatchpointsTest.java","additions":18,"deletions":6,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -145,8 +145,9 @@\n-        for (ArrayReference arr1: arrays) {\n-            for (ArrayReference arr2: arrays) {\n-                if (!arraysEquals(arr1, arr2)) {\n-                    System.out.println(\"Arrays are different (1):\"\n-                                     + \"\\n    - \" + arrayToString(arr1)\n-                                     + \"\\n    - \" + arrayToString(arr2));\n-                    throw new RuntimeException(\"Arrays are different\");\n-                }\n+        \/\/ Compare 1st and 2nd, 2nd and 3rd, etc.\n+        for (int i = 1; i < arrays.size(); i++) { \/\/ start from 1\n+            ArrayReference arr1 = arrays.get(i - 1);\n+            ArrayReference arr2 = arrays.get(i);\n+            if (!arraysEquals(arr1, arr2)) {\n+                System.out.println(\"Arrays are different (\" + (i - 1) + \" and \" + i + \"):\"\n+                                 + \"\\n    - \" + arrayToString(arr1)\n+                                 + \"\\n    - \" + arrayToString(arr2));\n+                throw new RuntimeException(\"Arrays are different\");\n","filename":"test\/jdk\/com\/sun\/jdi\/valhalla\/ValueArrayReferenceTest.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -101,2 +101,0 @@\n-            Field valueField = valueClass.fieldByName(\"staticField\");\n-            ObjectReference value2 = (ObjectReference)valueClass.getValue(valueField);\n@@ -107,1 +105,0 @@\n-            ObjectReference newValue2 = valueClass.newInstance(mainThread, valueCtor, List.of(vm().mirrorOf(11)), 0);\n@@ -110,1 +107,0 @@\n-            newValue2.disableCollection();\n@@ -113,1 +109,0 @@\n-            valueClass.setValue(valueField, newValue2);\n@@ -116,1 +111,0 @@\n-            ObjectReference updatedValue2 = (ObjectReference)valueClass.getValue(valueField);\n@@ -120,2 +114,0 @@\n-            assertEqual(updatedValue2, newValue2);\n-            assertNotEqual(value2, newValue2);\n@@ -125,1 +117,0 @@\n-            newValue2.enableCollection();\n","filename":"test\/jdk\/com\/sun\/jdi\/valhalla\/ValueClassTypeTest.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}