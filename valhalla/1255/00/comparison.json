{"files":[{"patch":"@@ -1466,1 +1466,0 @@\n-    case Op_AbsHF:\n@@ -1473,1 +1472,0 @@\n-    case Op_NegHF:\n@@ -1746,1 +1744,0 @@\n-    case Op_AbsVHF:\n@@ -1753,1 +1750,0 @@\n-    case Op_NegVHF:\n@@ -10193,26 +10189,0 @@\n-instruct scalar_abs_fp16(regF dst, regF src, rRegI rtmp, vec xtmp)\n-%{\n-  match(Set dst (AbsHF src));\n-  effect(TEMP rtmp, TEMP xtmp);\n-  format %{ \"eabssh $dst, $src !\\t using $rtmp and $xtmp as TEMP\" %}\n-  ins_encode %{\n-    __ movl($rtmp$$Register, 0x7FFF);\n-    __ vmovw($xtmp$$XMMRegister, $rtmp$$Register);\n-    __ vpand($dst$$XMMRegister, $src$$XMMRegister, $xtmp$$XMMRegister, Assembler::AVX_128bit);\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n-instruct scalar_neg_fp16(regF dst, regF src, rRegI rtmp, vec xtmp)\n-%{\n-  match(Set dst (NegHF src));\n-  effect(TEMP rtmp, TEMP xtmp);\n-  format %{ \"enegsh $dst, $src !\\t using $rtmp and $xtmp as TEMP\" %}\n-  ins_encode %{\n-    __ movl($rtmp$$Register, 0x8000);\n-    __ vmovw($xtmp$$XMMRegister, $rtmp$$Register);\n-    __ vpxor($dst$$XMMRegister, $src$$XMMRegister, $xtmp$$XMMRegister, Assembler::AVX_128bit);\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n@@ -10288,30 +10258,0 @@\n-instruct vector_neg_fp16_reg(vec dst, vec src, rRegI rtmp, vec xtmp)\n-%{\n-  match(Set dst (NegVHF src));\n-  effect(TEMP rtmp, TEMP xtmp);\n-  format %{ \"evnegph_reg $dst, $src !\\t using $rtmp and $xtmp as TEMP\" %}\n-  ins_cost(150);\n-  ins_encode %{\n-    int vlen_enc = vector_length_encoding(this);\n-    __ movl($rtmp$$Register, 0x80008000);\n-    __ vpbroadcast(T_FLOAT, $xtmp$$XMMRegister, $rtmp$$Register, vlen_enc);\n-    __ vpxor($dst$$XMMRegister, $src$$XMMRegister, $xtmp$$XMMRegister, vlen_enc);\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n-instruct vector_neg_fp16_mem(vec dst, memory src, rRegI rtmp, vec xtmp)\n-%{\n-  match(Set dst (NegVHF src));\n-  effect(TEMP rtmp, TEMP xtmp);\n-  format %{ \"evnegph_reg $dst, $src !\\t using $rtmp and $xtmp as TEMP\" %}\n-  ins_cost(150);\n-  ins_encode %{\n-    int vlen_enc = vector_length_encoding(this);\n-    __ movl($rtmp$$Register, 0x80008000);\n-    __ vpbroadcast(T_FLOAT, $xtmp$$XMMRegister, $rtmp$$Register, vlen_enc);\n-    __ vpxor($dst$$XMMRegister, $xtmp$$XMMRegister, $src$$Address, vlen_enc);\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":0,"deletions":60,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -87,2 +87,2 @@\n-        short actual = Float16.float16ToRawShortBits(actual_value(oper, input));\n-        short expected = Float16.float16ToRawShortBits(expected_value(oper, input));\n+        Float16 actual = actual_value(oper, input);\n+        Float16 expected = expected_value(oper, input);\n","filename":"test\/jdk\/java\/lang\/Float16\/FP16ScalarOperations.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}