{"files":[{"patch":"@@ -1302,0 +1302,1 @@\n+      replace_in_map(value, null());\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary Test casting of value objects to an unloaded type.\n+ * @enablePreview\n+ * @library \/test\/lib\n+ * @run main\/othervm -Xbatch -XX:CompileCommand=dontinline,TestUnloadedCastType::test*\n+ *                   TestUnloadedCastType\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+\n+public class TestUnloadedCastType {\n+\n+    static value class MyValue {\n+        int x = 0;\n+    }\n+\n+    static class Unloaded { }\n+\n+    public static Object test(MyValue val) {\n+        Object obj = val;\n+        return (Unloaded)obj;\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 50_000; ++i) {\n+            Asserts.assertEQ(test(null), null);\n+        }\n+        try {\n+            test(new MyValue());\n+            throw new RuntimeException(\"No ClassCastException thrown\");\n+        } catch (ClassCastException e) {\n+            \/\/ Expected\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestUnloadedCastType.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}