{"files":[{"patch":"@@ -2286,0 +2286,15 @@\n+        public Type implicitReceiverType() {\n+            ClassSymbol enclosingClass = enclClass();\n+            if (enclosingClass == null) {\n+                return null;\n+            }\n+            Type enclosingType = enclosingClass.type;\n+            if (isConstructor()) {\n+                return enclosingType.getEnclosingType();\n+            }\n+            if (!isStatic()) {\n+                return enclosingType;\n+            }\n+            return null;\n+        }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -174,0 +174,5 @@\n+    \/** The queue of classes that should have typeEnter completer installed after\n+     *  all the classes are discovered.\n+     *\/\n+    List<ClassSymbol> pendingCompleter = null;\n+\n@@ -524,2 +529,6 @@\n-        \/\/ install further completer for this type.\n-        c.completer = typeEnter;\n+        \/\/ schedule installation of further completer for this type.\n+        if (pendingCompleter != null) {\n+            pendingCompleter = pendingCompleter.prepend(c);\n+        } else {\n+            c.completer = typeEnter;\n+        }\n@@ -605,2 +614,12 @@\n-            \/\/ enter all classes, and construct uncompleted list\n-            classEnter(trees, null);\n+            List<ClassSymbol> prevPendingCompleter = pendingCompleter;\n+            try {\n+                pendingCompleter = List.nil();\n+                \/\/ enter all classes, and construct uncompleted list\n+                classEnter(trees, null);\n+                \/\/ install further completer for classes recognized by the above task:\n+                for (ClassSymbol sym : pendingCompleter) {\n+                    sym.completer = typeEnter;\n+                }\n+            } finally {\n+                pendingCompleter = prevPendingCompleter;\n+            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Enter.java","additions":23,"deletions":4,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2347,2 +2347,7 @@\n-            if (mt.recvtype != null) {\n-                mt.recvtype = addTypeAnnotations(mt.recvtype, TargetType.METHOD_RECEIVER);\n+\n+            Type recvtype = mt.recvtype != null ? mt.recvtype : s.implicitReceiverType();\n+            if (recvtype != null) {\n+                Type annotated = addTypeAnnotations(recvtype, TargetType.METHOD_RECEIVER);\n+                if (annotated != recvtype) {\n+                    mt.recvtype = annotated;\n+                }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}