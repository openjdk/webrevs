{"files":[{"patch":"@@ -3958,1 +3958,1 @@\n-                classfile_parse_error(\"Multiple Preload attributes in class file %s\", CHECK);\n+                classfile_parse_error(\"Multiple LoadableDescriptors attributes in class file %s\", CHECK);\n@@ -6529,1 +6529,1 @@\n-        \/\/ Preloading classes for nullable fields that are listed in the Preload attribute\n+        \/\/ Preloading classes for nullable fields that are listed in the LoadableDescriptors attribute\n@@ -6548,1 +6548,1 @@\n-          \/\/ Loads triggered by the preload attribute are speculative, failures must not impact loading of current class\n+          \/\/ Loads triggered by the LoadableDescriptors attribute are speculative, failures must not impact loading of current class\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -360,1 +360,1 @@\n-                                                    const u1* const preload_attribute_start,\n+                                                    const u1* const loadable_descriptors_attribute_start,\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1024,1 +1024,1 @@\n-    \/\/ Aggressively preloading all classes from the Preload attribute\n+    \/\/ Aggressively preloading all classes from the LoadableDescriptors attribute\n@@ -3955,1 +3955,1 @@\n-  st->print(BULLET\"preload classes:     \"); loadable_descriptors()->print_value_on(st); st->cr();\n+  st->print(BULLET\"loadable descriptors:     \"); loadable_descriptors()->print_value_on(st); st->cr();\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1939,2 +1939,2 @@\n-  \/\/ rewrite constant pool references in the Preload attribute:\n-  if (!rewrite_cp_refs_in_preload_attribute(scratch_class)) {\n+  \/\/ rewrite constant pool references in the LoadableDescriptors attribute:\n+  if (!rewrite_cp_refs_in_loadable_descriptors_attribute(scratch_class)) {\n@@ -2093,2 +2093,2 @@\n-\/\/ Rewrite constant pool references in the Preload attribute.\n-bool VM_RedefineClasses::rewrite_cp_refs_in_preload_attribute(\n+\/\/ Rewrite constant pool references in the LoadableDescriptors attribute.\n+bool VM_RedefineClasses::rewrite_cp_refs_in_loadable_descriptors_attribute(\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -474,1 +474,1 @@\n-  bool rewrite_cp_refs_in_preload_attribute(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_loadable_descriptors_attribute(InstanceKlass* scratch_class);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}