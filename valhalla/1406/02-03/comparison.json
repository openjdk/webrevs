{"files":[{"patch":"@@ -3529,0 +3529,1 @@\n+\n@@ -3530,0 +3531,11 @@\n+      if (t->is_inlinetypeptr() && !t->maybe_null() && kptr == improved_klass_ptr_type) {\n+        \/\/ Special case: larval inline objects must not be scalarized. They are also generally not\n+        \/\/ allowed to participate in most operations except as an argument to Unsafe::putXXX or\n+        \/\/ Unsafe::finishPrivateBuffer. This allows us to aggressively scalarize value objects in\n+        \/\/ all other places. This special case comes from the limitation of the Java language,\n+        \/\/ Unsafe::makePrivateBuffer returns an Object that is checkcast-ed to the concrete value\n+        \/\/ type. We must do this first because C->static_subtype_check may do nothing when\n+        \/\/ StressReflectiveCode is set.\n+        return obj;\n+      }\n+\n@@ -3540,0 +3552,1 @@\n+        assert(stopped() || !toop->is_inlinetypeptr() || obj->is_InlineType(), \"should have been scalarized\");\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}