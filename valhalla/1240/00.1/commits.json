[{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"250fb25c4c47faf77007c08655aed055a0c25d88"},{"commit":{"message":"8339357: [lw5] make non-nullable instance fields strict"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"9daec2e662cca0d8fcb583481726e0a762aff5ff"},{"commit":{"message":"8339339: [lw5] javac should issue an error if a null-restricted field is left uninitialized, fix override related warnings"},"files":[],"sha":"b82fd23fb0b22c1267ca9a19548eb27f43e8115b"},{"commit":{"message":"8338910: [lw5] enhance the Signature attribute to represent nullability"},"files":[],"sha":"77864c7350202ca9f6ce25bc7a0d3ac848535f21"},{"commit":{"message":"Improve support for nullable types and arrays"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"4999dfe1c5679ff80e6d7fddabcb5d53bc3fd937"},{"commit":{"message":"8339087: [lw5] remove parametric types related warnings"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"42b60282344a9c48ce00318753239c4e12f9fa2a"},{"commit":{"message":"Add option to disable parametric nullness by default"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"7b6967a2c8decba3a7c0cd3e5c85646da9b6de12"},{"commit":{"message":"Add inference support for nullable types"},"files":[],"sha":"831c9fc009316758a0724a4a7702ff32932c3ed2"},{"commit":{"message":"Add simple test for nullability warnings"},"files":[],"sha":"43e5a7e08b7a8f7b96c216f99ec8545c147560b7"},{"commit":{"message":"8338874: [lw5] add nullable types\n\nCo-authored-by: Maurizio Cimadamore <mcimadamore@openjdk.org>"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"dbf4f49a57e30e0daa14541adc6a66ea51860182"},{"commit":{"message":"8338766: [lw5] remove option enableNullRestrictedTypes and make null-restricted types a preview feature"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"0b42d33c7528e18497ca1bf9ddbf70948eaf24af"},{"commit":{"message":"API classes supporting RuntimeTypes and ArrayCreation bootstraps"},"files":[],"sha":"2b309816c4f0777a4417b5a8dbdf65c043a79028"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"1e16bb7026a7fc9cbbe5720cfcf4c5015588f9cc"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"05b87e1bba8131c1172c68e2cc096aa1f056e076"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"eed7682284c895f9df1f0f348452aa309d16a999"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"f47a9e263ecc887114b6641c2b5490e45835ed4d"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"d187943908c3b053553a05d51e8aa5ddcf05c373"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"1e7c83989effa9922fadde7de80dd56465b65620"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"c3423535dea4b17f17e0f83751a3693ee9856514"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"f3b3c788b3208e9431bf504ea55d2c5e4c828b9d"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"cbeea29da0ea549239e81ad21c25915fdf82f29e"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"11ad37d58b872397292b8a29455c54091935e6dc"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"7e70c26d5dd73b083b8253316665d9b16027d15e"},{"commit":{"message":"8318117: [lw5] create a switch for null-restricted types"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"8a098a888adfd8146340a651349014b8c82a8a2e"},{"commit":{"message":"8316628: [lw5] remove vnew, aconst_init, and withfield"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"ec05d3777b5ffcf3f55943952484c74a6b54046b"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"dc715159feda32945d5c2351ede9c6be04a64d6f"},{"commit":{"message":"8316561: [lw5] class file attribute NullRestricted shouldn't be generated for arrays"},"files":[],"sha":"152b0aaa6e85f514da5e5890a45efc020f825174"},{"commit":{"message":"8316325: [lw5] sync javac with the current JVMS, particularly assertions on new class attributes"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"}],"sha":"7d4965a8f35fc9a5fdf9514933afffd7e0763125"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"d0c4b3ea542f68a5482a1972bce452a8ade11dda"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"35e102441815b924130c70c1ff8e353f66ccc4f1"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"333479928aa3b98b48a355835807e4f4fcbf90e4"},{"commit":{"message":"8314913: [lw5] null restrictions can only be applied to value classes"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"96b0eba3f0ecd62d9eaac69fd3b98b91a996b23d"},{"commit":{"message":"8314899: [lw5] rename j.l.NonAtomic to j.l.LooselyConsistentValue"},"files":[],"sha":"48e680c62f84121a49adb187e1cf7f6af41e917c"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"1a46d1ca7c78f358e2a0fcd2d7acc104010c7cac"},{"commit":{"message":"8314181: [lw5] the check for illegal circularity should only be done if value classes are available"},"files":[],"sha":"0f340086014338993a45ec166c88a3a3a09404dd"},{"commit":{"message":"8314165: [lw5] check for illegal circularity at class loading time"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"}],"sha":"ad0951021553c5df042c4ffdea710fb8c9f82643"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"3fdef5ef74c702e951f2b00f3700a01a2010bcc5"},{"commit":{"message":"[lw5] regression test cleanup, relocation"},"files":[],"sha":"05f62bbd302407de1189c3d2893180690237eed6"},{"commit":{"message":"[lw5] fixing bugs on experimental code to generate Q-descriptors, plus code refactoring"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"}],"sha":"0390afd950ba796af97bcf81756aba5b349b3580"},{"commit":{"message":"[lw5] experiment: reusing primitive class tests to generate Q descriptors"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"300a88e1a5d7576e1f587141a9285c93cf3a72d8"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"e24e94c36b3547eb76082cbbc4bfb800ee75b69a"},{"commit":{"message":"experiment: generate Q descriptors for lw5 code"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"}],"sha":"97b5c8461544379d74858ef8845ba3e8327fa848"},{"commit":{"message":"8313080: [lw5] javac parser is not accepting some array types with nullness markers"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"916fbb618a3a271b70a8ad95124d78492bced02d"},{"commit":{"message":"8310905: [lw5] addressing review comments on null restricted types\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"a716bc8584988d9d91aff1d3c4a4d6f2b930c7d6"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"28a1d44fbfcc22256cef20ec5fcf06eb4c7e4e0f"},{"commit":{"message":"8310840: [lw5] add several regression tests"},"files":[],"sha":"5b9697dd790642df1626f4d94b6f108bff0ca75d"},{"commit":{"message":"8310839: [lw5] implicit constructors must be public and declared in a value class"},"files":[],"sha":"c71797c8e457269e7c408340d98da09c6ea97b86"},{"commit":{"message":"8310832: [lw5] reflective creation of arrays of non-nullable types"},"files":[],"sha":"51b49102f17abf415d94935b99b4aa674559b83f"},{"commit":{"message":"8310819: [lw5] loading NonAtomic can produce completion errors"},"files":[],"sha":"df0cfa1e657eb4620c90cdeb44ecc5baef256565"},{"commit":{"message":"8310812: [lw5] addressing pending issues now that non-nullable types are available"},"files":[],"sha":"ea56651c2121e632373cbdeda3b6cc0ef2ffcc5f"},{"commit":{"message":"8310686: [lw5] check that only value classes with implicit constructor can implement NonAtomic"},"files":[],"sha":"4449b02e794068408dedecf1364292a9d19f2e54"},{"commit":{"message":"8310685: [lw5] adding support for null restricted types"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"5438b74f7def714577bea9b4fba2fc5a108d4464"},{"commit":{"message":"8310684: [lw5] adding missing ImplicitCreation and NullRestricted visitors in regression tests"},"files":[],"sha":"e9f496a6709dd8f10a93895fd1cfe35f1f5f6aa5"},{"commit":{"message":"8310679: [lw5] test refactoring, repurposing primitive classes tests"},"files":[],"sha":"024c99e00934decc4e29040fb47b64d9181d8f1c"},{"commit":{"message":"8310678: [lw5] add implicit constructors"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"7030f9f69426c87e935ecb8fd9528b62a18651a8"},{"commit":{"message":"8310664: remove compiler support for primitive classes"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"9496505d6ebe3e7780fe6a3f300c9298c6cffa59"}]