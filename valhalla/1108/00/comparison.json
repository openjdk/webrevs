{"files":[{"patch":"@@ -275,1 +275,1 @@\n-  if (_throw_imse_stub != nullptr) {\n+  if (_throw_ie_stub != nullptr) {\n@@ -282,1 +282,1 @@\n-    __ br(Assembler::EQ, *_throw_imse_stub->entry());\n+    __ br(Assembler::EQ, *_throw_ie_stub->entry());\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_CodeStubs_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -331,1 +331,1 @@\n-  CodeStub* throw_imse_stub =\n+  CodeStub* throw_ie_stub =\n@@ -333,1 +333,1 @@\n-      new SimpleExceptionStub(Runtime1::throw_illegal_monitor_state_exception_id, LIR_OprFact::illegalOpr, state_for(x)) :\n+      new SimpleExceptionStub(Runtime1::throw_identity_exception_id, LIR_OprFact::illegalOpr, state_for(x)) :\n@@ -340,1 +340,1 @@\n-                x->monitor_no(), info_for_exception, info, throw_imse_stub);\n+                x->monitor_no(), info_for_exception, info, throw_ie_stub);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRGenerator_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -934,0 +934,6 @@\n+    case throw_identity_exception_id:\n+      { StubFrame f(sasm, \"throw_identity_exception\", dont_gc_arguments);\n+        oop_maps = generate_exception_throw(sasm, CAST_FROM_FN_PTR(address, throw_identity_exception), false);\n+      }\n+      break;\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4240,1 +4240,1 @@\n-                    InterpreterRuntime::throw_illegal_monitor_state_exception));\n+                    InterpreterRuntime::throw_identity_exception));\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -328,1 +328,1 @@\n-  if (_throw_imse_stub != nullptr) {\n+  if (_throw_ie_stub != nullptr) {\n@@ -335,1 +335,1 @@\n-    __ jcc(Assembler::equal, *_throw_imse_stub->entry());\n+    __ jcc(Assembler::equal, *_throw_ie_stub->entry());\n","filename":"src\/hotspot\/cpu\/x86\/c1_CodeStubs_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -340,2 +340,2 @@\n-  CodeStub* throw_imse_stub = x->maybe_inlinetype() ?\n-      new SimpleExceptionStub(Runtime1::throw_illegal_monitor_state_exception_id,\n+  CodeStub* throw_ie_stub = x->maybe_inlinetype() ?\n+      new SimpleExceptionStub(Runtime1::throw_identity_exception_id,\n@@ -349,1 +349,1 @@\n-                x->monitor_no(), info_for_exception, info, throw_imse_stub);\n+                x->monitor_no(), info_for_exception, info, throw_ie_stub);\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRGenerator_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1353,0 +1353,6 @@\n+    case throw_identity_exception_id:\n+      { StubFrame f(sasm, \"throw_identity_exception\", dont_gc_arguments);\n+        oop_maps = generate_exception_throw(sasm, CAST_FROM_FN_PTR(address, throw_identity_exception), false);\n+      }\n+      break;\n+\n","filename":"src\/hotspot\/cpu\/x86\/c1_Runtime1_x86.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4710,1 +4710,1 @@\n-                    InterpreterRuntime::throw_illegal_monitor_state_exception));\n+                    InterpreterRuntime::throw_identity_exception));\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -427,1 +427,1 @@\n-  CodeStub* _throw_imse_stub;\n+  CodeStub* _throw_ie_stub;\n@@ -432,1 +432,1 @@\n-                   CodeStub* throw_imse_stub = nullptr, LIR_Opr scratch_reg = LIR_OprFact::illegalOpr)\n+                   CodeStub* throw_ie_stub = nullptr, LIR_Opr scratch_reg = LIR_OprFact::illegalOpr)\n@@ -436,2 +436,2 @@\n-    _throw_imse_stub = throw_imse_stub;\n-    if (_throw_imse_stub != nullptr) {\n+    _throw_ie_stub = throw_ie_stub;\n+    if (_throw_ie_stub != nullptr) {\n","filename":"src\/hotspot\/share\/c1\/c1_CodeStubs.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -841,1 +841,1 @@\n-      do_stub(opLock->_throw_imse_stub);\n+      do_stub(opLock->_throw_ie_stub);\n@@ -1209,2 +1209,2 @@\n-  if (throw_imse_stub()) {\n-    masm->append_code_stub(throw_imse_stub());\n+  if (throw_ie_stub()) {\n+    masm->append_code_stub(throw_ie_stub());\n@@ -1564,1 +1564,1 @@\n-void LIR_List::lock_object(LIR_Opr hdr, LIR_Opr obj, LIR_Opr lock, LIR_Opr scratch, CodeStub* stub, CodeEmitInfo* info, CodeStub* throw_imse_stub) {\n+void LIR_List::lock_object(LIR_Opr hdr, LIR_Opr obj, LIR_Opr lock, LIR_Opr scratch, CodeStub* stub, CodeEmitInfo* info, CodeStub* throw_ie_stub) {\n@@ -1573,1 +1573,1 @@\n-                    throw_imse_stub));\n+                    throw_ie_stub));\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1985,1 +1985,1 @@\n-  CodeStub* _throw_imse_stub;\n+  CodeStub* _throw_ie_stub;\n@@ -1987,1 +1987,1 @@\n-  LIR_OpLock(LIR_Code code, LIR_Opr hdr, LIR_Opr obj, LIR_Opr lock, LIR_Opr scratch, CodeStub* stub, CodeEmitInfo* info, CodeStub* throw_imse_stub=nullptr)\n+  LIR_OpLock(LIR_Code code, LIR_Opr hdr, LIR_Opr obj, LIR_Opr lock, LIR_Opr scratch, CodeStub* stub, CodeEmitInfo* info, CodeStub* throw_ie_stub=nullptr)\n@@ -1994,1 +1994,1 @@\n-    , _throw_imse_stub(throw_imse_stub)                    {}\n+    , _throw_ie_stub(throw_ie_stub)                    {}\n@@ -2001,1 +2001,1 @@\n-  CodeStub* throw_imse_stub() const              { return _throw_imse_stub; }\n+  CodeStub* throw_ie_stub() const                { return _throw_ie_stub; }\n@@ -2491,1 +2491,1 @@\n-  void lock_object(LIR_Opr hdr, LIR_Opr obj, LIR_Opr lock, LIR_Opr scratch, CodeStub* stub, CodeEmitInfo* info, CodeStub* throw_imse_stub=nullptr);\n+  void lock_object(LIR_Opr hdr, LIR_Opr obj, LIR_Opr lock, LIR_Opr scratch, CodeStub* stub, CodeEmitInfo* info, CodeStub* throw_ie_stub=nullptr);\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -628,1 +628,1 @@\n-                                 CodeEmitInfo* info_for_exception, CodeEmitInfo* info, CodeStub* throw_imse_stub) {\n+                                 CodeEmitInfo* info_for_exception, CodeEmitInfo* info, CodeStub* throw_ie_stub) {\n@@ -631,1 +631,1 @@\n-  CodeStub* slow_path = new MonitorEnterStub(object, lock, info, throw_imse_stub, scratch);\n+  CodeStub* slow_path = new MonitorEnterStub(object, lock, info, throw_ie_stub, scratch);\n@@ -634,1 +634,1 @@\n-  __ lock_object(hdr, object, lock, scratch, slow_path, info_for_exception, throw_imse_stub);\n+  __ lock_object(hdr, object, lock, scratch, slow_path, info_for_exception, throw_ie_stub);\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -381,1 +381,1 @@\n-  void monitor_enter (LIR_Opr object, LIR_Opr lock, LIR_Opr hdr, LIR_Opr scratch, int monitor_no, CodeEmitInfo* info_for_exception, CodeEmitInfo* info, CodeStub* throw_imse_stub);\n+  void monitor_enter (LIR_Opr object, LIR_Opr lock, LIR_Opr hdr, LIR_Opr scratch, int monitor_no, CodeEmitInfo* info_for_exception, CodeEmitInfo* info, CodeStub* throw_ie_stub);\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,0 +145,1 @@\n+uint Runtime1::_throw_identity_exception_count = 0;\n@@ -888,0 +889,6 @@\n+JRT_ENTRY(void, Runtime1::throw_identity_exception(JavaThread* current))\n+  NOT_PRODUCT(_throw_identity_exception_count++;)\n+  ResourceMark rm(current);\n+  SharedRuntime::throw_and_post_jvmti_exception(current, vmSymbols::java_lang_IdentityException());\n+JRT_END\n+\n@@ -1712,0 +1719,1 @@\n+  tty->print_cr(\" _throw_identity_exception_count:               %u:\", _throw_identity_exception_count);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+  stub(throw_identity_exception)     \\\n@@ -128,0 +129,1 @@\n+  static uint _throw_identity_exception_count;\n@@ -176,0 +178,1 @@\n+  static void throw_identity_exception(JavaThread* current);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -223,0 +223,1 @@\n+  template(java_lang_IdentityException,               \"java\/lang\/IdentityException\")              \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -960,1 +960,0 @@\n-\n@@ -965,1 +964,0 @@\n-\n@@ -980,0 +978,3 @@\n+JRT_ENTRY(void, InterpreterRuntime::throw_identity_exception(JavaThread* current))\n+  THROW(vmSymbols::java_lang_IdentityException());\n+JRT_END\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -122,0 +122,1 @@\n+  static void    throw_identity_exception(JavaThread* current);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -400,0 +400,1 @@\n+  initialize_class(vmSymbols::java_lang_IdentityException(), CHECK);\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1164,1 +1164,1 @@\n-        } catch (IllegalMonitorStateException e) {\n+        } catch (IdentityException e) {\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestIntrinsics.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1740,1 +1740,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -1763,1 +1763,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -1787,1 +1787,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -1809,1 +1809,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -1828,1 +1828,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -1834,1 +1834,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -1839,1 +1839,1 @@\n-    \/\/ Test catching the IllegalMonitorStateException in compiled code\n+    \/\/ Test catching the IdentityException in compiled code\n@@ -1847,1 +1847,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -1864,1 +1864,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -1886,1 +1886,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -3779,1 +3779,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -3804,1 +3804,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -3832,1 +3832,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -3854,1 +3854,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n@@ -3877,1 +3877,1 @@\n-        } catch (IllegalMonitorStateException ex) {\n+        } catch (IdentityException ex) {\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestLWorld.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-        boolean sawImse = false;\n+        boolean sawIe = false;\n@@ -118,1 +118,1 @@\n-                throw new IllegalStateException(\"Unreachable code, reached\");\n+                throw new IdentityException(\"Unreachable code, reached\");\n@@ -120,2 +120,2 @@\n-        } catch (IllegalMonitorStateException imse) {\n-            sawImse = true;\n+        } catch (IdentityException ie) {\n+            sawIe = true;\n@@ -123,1 +123,1 @@\n-        if (!sawImse) {\n+        if (!sawIe) {\n@@ -132,1 +132,1 @@\n-        boolean sawImse = false;\n+        boolean sawIe = false;\n@@ -146,1 +146,1 @@\n-                sawImse = true;\n+                sawIe = true;\n@@ -151,1 +151,1 @@\n-        if (!sawImse) {\n+        if (!sawIe) {\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ObjectMethods.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        } catch (java.lang.IllegalMonitorStateException e) {\n+        } catch (java.lang.IdentityException e) {\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/VTMonitor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        } catch (IllegalMonitorStateException e) {\n+        } catch (IdentityException e) {\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/IllegalMonitorStateExceptionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}