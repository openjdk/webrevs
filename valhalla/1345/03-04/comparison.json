{"files":[{"patch":"@@ -1108,1 +1108,1 @@\n-    if (UseNonUseAtomicValueFlattening && !AlwaysAtomicAccesses && (!_must_be_atomic || _is_naturally_atomic)) {\n+    if (UseNonAtomicValueFlattening && !AlwaysAtomicAccesses && (!_must_be_atomic || _is_naturally_atomic)) {\n","filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -814,1 +814,1 @@\n-  product(bool, UseNonUseAtomicValueFlattening, true,                       \\\n+  product(bool, UseNonAtomicValueFlattening, true,                          \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -193,1 +193,1 @@\n-        Collections.addAll(argsList, useNonAtomicFlat ? \"-XX:+UseNonUseAtomicValueFlattening\" : \"-XX:-UseNonUseAtomicValueFlattening\");\n+        Collections.addAll(argsList, useNonAtomicFlat ? \"-XX:+UseNonAtomicValueFlattening\" : \"-XX:-UseNonAtomicValueFlattening\");\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/field_layout\/TestLayoutFlags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}