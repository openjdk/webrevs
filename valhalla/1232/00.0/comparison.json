{"files":[{"patch":"@@ -393,2 +393,2 @@\n-    common.boot_jdk_version = \"21\";\n-    common.boot_jdk_build_number = \"35\";\n+    common.boot_jdk_version = \"22\";\n+    common.boot_jdk_build_number = \"36\";\n","filename":"make\/conf\/jib-profiles.js","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"21 22 23\"\n+DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"22 23\"\n","filename":"make\/conf\/version-numbers.conf","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -217,1 +217,0 @@\n-      genMarkSweep.cpp \\\n","filename":"make\/hotspot\/lib\/JvmFeatures.gmk","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -86,1 +86,0 @@\n-                   notproduct,                                          \\\n","filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,0 @@\n-                   notproduct,                                              \\\n","filename":"src\/hotspot\/cpu\/ppc\/globals_ppc.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,0 @@\n-                   notproduct,                                              \\\n","filename":"src\/hotspot\/cpu\/x86\/globals_x86.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,0 @@\n-                   notproduct,                                              \\\n","filename":"src\/hotspot\/cpu\/zero\/globals_zero.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-                 notproduct,                                                \\\n@@ -43,1 +42,1 @@\n-  notproduct(bool, PrintC1Statistics, false,                                \\\n+  develop(bool, PrintC1Statistics, false,                                   \\\n@@ -46,1 +45,1 @@\n-  notproduct(bool, PrintInitialBlockList, false,                            \\\n+  develop(bool, PrintInitialBlockList, false,                               \\\n@@ -49,1 +48,1 @@\n-  notproduct(bool, PrintCFG, false,                                         \\\n+  develop(bool, PrintCFG, false,                                            \\\n@@ -52,1 +51,1 @@\n-  notproduct(bool, PrintCFG0, false,                                        \\\n+  develop(bool, PrintCFG0, false,                                           \\\n@@ -55,1 +54,1 @@\n-  notproduct(bool, PrintCFG1, false,                                        \\\n+  develop(bool, PrintCFG1, false,                                           \\\n@@ -58,1 +57,1 @@\n-  notproduct(bool, PrintCFG2, false,                                        \\\n+  develop(bool, PrintCFG2, false,                                           \\\n@@ -61,1 +60,1 @@\n-  notproduct(bool, PrintIRDuringConstruction, false,                        \\\n+  develop(bool, PrintIRDuringConstruction, false,                           \\\n@@ -64,1 +63,1 @@\n-  notproduct(bool, PrintPhiFunctions, false,                                \\\n+  develop(bool, PrintPhiFunctions, false,                                   \\\n@@ -67,1 +66,1 @@\n-  notproduct(bool, PrintIR, false,                                          \\\n+  develop(bool, PrintIR, false,                                             \\\n@@ -70,1 +69,1 @@\n-  notproduct(bool, PrintIR0, false,                                         \\\n+  develop(bool, PrintIR0, false,                                            \\\n@@ -73,1 +72,1 @@\n-  notproduct(bool, PrintIR1, false,                                         \\\n+  develop(bool, PrintIR1, false,                                            \\\n@@ -76,1 +75,1 @@\n-  notproduct(bool, PrintIR2, false,                                         \\\n+  develop(bool, PrintIR2, false,                                            \\\n@@ -79,1 +78,1 @@\n-  notproduct(bool, PrintSimpleStubs, false,                                 \\\n+  develop(bool, PrintSimpleStubs, false,                                    \\\n@@ -191,1 +190,1 @@\n-  notproduct(bool, PrintIRWithLIR, false,                                   \\\n+  develop(bool, PrintIRWithLIR, false,                                      \\\n@@ -194,1 +193,1 @@\n-  notproduct(bool, PrintLIRWithAssembly, false,                             \\\n+  develop(bool, PrintLIRWithAssembly, false,                                \\\n","filename":"src\/hotspot\/share\/c1\/c1_globals.hpp","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-    check_unsupported_dumping_properties();\n+    check_unsupported_dumping_module_options();\n@@ -251,1 +251,1 @@\n-void CDSConfig::check_system_property(const char* key, const char* value) {\n+void CDSConfig::check_internal_module_property(const char* key, const char* value) {\n@@ -256,7 +256,0 @@\n-  if (strcmp(key, \"jdk.module.showModuleResolution\") == 0 ||\n-      strcmp(key, \"jdk.module.validation\") == 0 ||\n-      strcmp(key, \"java.system.class.loader\") == 0) {\n-    stop_dumping_full_module_graph();\n-    stop_using_full_module_graph();\n-    log_info(cds)(\"full module graph: disabled due to incompatible property: %s=%s\", key, value);\n-  }\n@@ -265,8 +258,15 @@\n-static const char* unsupported_properties[] = {\n-  \"jdk.module.limitmods\",\n-  \"jdk.module.upgrade.path\",\n-};\n-static const char* unsupported_options[] = {\n-  \"--limit-modules\",\n-  \"--upgrade-module-path\",\n-};\n+void CDSConfig::check_incompatible_property(const char* key, const char* value) {\n+  static const char* incompatible_properties[] = {\n+    \"java.system.class.loader\",\n+    \"jdk.module.showModuleResolution\",\n+    \"jdk.module.validation\"\n+  };\n+\n+  for (const char* property : incompatible_properties) {\n+    if (strcmp(key, property) == 0) {\n+      stop_dumping_full_module_graph();\n+      stop_using_full_module_graph();\n+      log_info(cds)(\"full module graph: disabled due to incompatible property: %s=%s\", key, value);\n+      break;\n+    }\n+  }\n@@ -274,4 +274,19 @@\n-void CDSConfig::check_unsupported_dumping_properties() {\n-  assert(is_dumping_archive(), \"this function is only used with CDS dump time\");\n-  assert(ARRAY_SIZE(unsupported_properties) == ARRAY_SIZE(unsupported_options), \"must be\");\n-  \/\/ If a vm option is found in the unsupported_options array, vm will exit with an error message.\n+}\n+\n+\/\/ Returns any JVM command-line option, such as \"--patch-module\", that's not supported by CDS.\n+static const char* find_any_unsupported_module_option() {\n+  \/\/ Note that arguments.cpp has translated the command-line options into properties. If we find an\n+  \/\/ unsupported property, translate it back to its command-line option for better error reporting.\n+\n+  \/\/ The following properties are checked by Arguments::is_internal_module_property() and cannot be\n+  \/\/ directly specified in the command-line.\n+  static const char* unsupported_module_properties[] = {\n+    \"jdk.module.limitmods\",\n+    \"jdk.module.upgrade.path\"\n+  };\n+  static const char* unsupported_module_options[] = {\n+    \"--limit-modules\",\n+    \"--upgrade-module-path\"\n+  };\n+\n+  assert(ARRAY_SIZE(unsupported_module_properties) == ARRAY_SIZE(unsupported_module_options), \"must be\");\n@@ -280,4 +295,3 @@\n-    for (uint i = 0; i < ARRAY_SIZE(unsupported_properties); i++) {\n-      if (strcmp(sp->key(), unsupported_properties[i]) == 0) {\n-        vm_exit_during_initialization(\n-          \"Cannot use the following option when dumping the shared archive\", unsupported_options[i]);\n+    for (uint i = 0; i < ARRAY_SIZE(unsupported_module_properties); i++) {\n+      if (strcmp(sp->key(), unsupported_module_properties[i]) == 0) {\n+        return unsupported_module_options[i];\n@@ -289,0 +303,10 @@\n+  return nullptr; \/\/ not found\n+}\n+\n+void CDSConfig::check_unsupported_dumping_module_options() {\n+  assert(is_dumping_archive(), \"this function is only used with CDS dump time\");\n+  const char* option = find_any_unsupported_module_option();\n+  if (option != nullptr) {\n+    vm_exit_during_initialization(\"Cannot use the following option when dumping the shared archive\", option);\n+  }\n+\n@@ -294,1 +318,0 @@\n-\n@@ -301,1 +324,1 @@\n-bool CDSConfig::check_unsupported_cds_runtime_properties() {\n+bool CDSConfig::has_unsupported_runtime_module_options() {\n@@ -303,1 +326,0 @@\n-  assert(ARRAY_SIZE(unsupported_properties) == ARRAY_SIZE(unsupported_options), \"must be\");\n@@ -311,8 +333,6 @@\n-  for (uint i = 0; i < ARRAY_SIZE(unsupported_properties); i++) {\n-    if (Arguments::get_property(unsupported_properties[i]) != nullptr) {\n-      if (RequireSharedSpaces) {\n-        warning(\"CDS is disabled when the %s option is specified.\", unsupported_options[i]);\n-      } else {\n-        log_info(cds)(\"CDS is disabled when the %s option is specified.\", unsupported_options[i]);\n-      }\n-      return true;\n+  const char* option = find_any_unsupported_module_option();\n+  if (option != nullptr) {\n+    if (RequireSharedSpaces) {\n+      warning(\"CDS is disabled when the %s option is specified.\", option);\n+    } else {\n+      log_info(cds)(\"CDS is disabled when the %s option is specified.\", option);\n@@ -320,0 +340,1 @@\n+    return true;\n@@ -382,1 +403,1 @@\n-  if (UseSharedSpaces && check_unsupported_cds_runtime_properties()) {\n+  if (UseSharedSpaces && has_unsupported_runtime_module_options()) {\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":58,"deletions":37,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-  static bool check_unsupported_cds_runtime_properties();\n@@ -64,2 +63,4 @@\n-  static void check_system_property(const char* key, const char* value) NOT_CDS_RETURN;\n-  static void check_unsupported_dumping_properties() NOT_CDS_RETURN;\n+  static void check_internal_module_property(const char* key, const char* value) NOT_CDS_RETURN;\n+  static void check_incompatible_property(const char* key, const char* value) NOT_CDS_RETURN;\n+  static void check_unsupported_dumping_module_options() NOT_CDS_RETURN;\n+  static bool has_unsupported_runtime_module_options() NOT_CDS_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -435,0 +435,6 @@\n+int HeapShared::archive_exception_instance(oop exception) {\n+  bool success = archive_reachable_objects_from(1, _default_subgraph_info, exception);\n+  assert(success, \"sanity\");\n+  return append_root(exception);\n+}\n+\n@@ -594,0 +600,1 @@\n+  Universe::archive_exception_instances();\n@@ -1392,5 +1399,9 @@\n-    guarantee(subgraph_k->name()->equals(\"java\/lang\/Class\") ||\n-              subgraph_k->name()->equals(\"java\/lang\/String\") ||\n-              subgraph_k->name()->equals(\"[Ljava\/lang\/Object;\") ||\n-              subgraph_k->name()->equals(\"[C\") ||\n-              subgraph_k->name()->equals(\"[B\"),\n+    Symbol* name = ArchiveBuilder::current()->get_source_addr(subgraph_k->name());\n+    guarantee(name == vmSymbols::java_lang_Class() ||\n+              name == vmSymbols::java_lang_String() ||\n+              name == vmSymbols::java_lang_ArithmeticException() ||\n+              name == vmSymbols::java_lang_NullPointerException() ||\n+              name == vmSymbols::java_lang_VirtualMachineError() ||\n+              name == vmSymbols::object_array_signature() ||\n+              name == vmSymbols::byte_array_signature() ||\n+              name == vmSymbols::char_array_signature(),\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -656,1 +656,1 @@\n-  CDSConfig::check_unsupported_dumping_properties();\n+  CDSConfig::check_unsupported_dumping_module_options();\n@@ -1475,2 +1475,1 @@\n-\n-  CDS_JAVA_HEAP_ONLY(Universe::update_archived_basic_type_mirrors());\n+  Universe::load_archived_object_instances();\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1131,1 +1131,1 @@\n-      assert(!CDSConfig::is_dumping_dynamic_archive(), \"sanity\");\n+      assert(!CDSConfig::is_dumping_archive(), \"CDS doesn't support --patch-module during dumping\");\n@@ -1149,0 +1149,1 @@\n+      assert(!CDSConfig::is_dumping_archive(), \"CDS dumping doesn't support exploded build\");\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -775,1 +775,1 @@\n-  template(decodeAndThrowThrowable_signature,          \"(IJZ)V\")                                                  \\\n+  template(decodeAndThrowThrowable_signature,          \"(IJZZ)V\")                                                 \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1151,0 +1151,1 @@\n+    region_after_dense_prefix->set_partial_obj_addr(obj_beg);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -351,5 +351,0 @@\n-  \/\/ If a GC uses a stack watermark barrier, the stack processing is lazy, concurrent,\n-  \/\/ incremental and cooperative. In order for that to work well, mechanisms that stop\n-  \/\/ another thread might want to ensure its roots are in a sane state.\n-  virtual bool uses_stack_watermark_barrier() const { return false; }\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -319,0 +319,1 @@\n+  \/\/ ...and clear or zap just allocated TLAB, if needed.\n@@ -320,4 +321,1 @@\n-    \/\/ ..and clear it.\n-  } else {\n-    \/\/ ...and zap just allocated object.\n-#ifdef ASSERT\n+  } else if (ZapTLAB) {\n@@ -330,1 +328,0 @@\n-#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -235,3 +235,6 @@\n-      const char* disable_msg = err_msg(\"JVMCI compiler disabled \"\n-      \"after %d of %d upcalls had errors (Last error: \\\"%s\\\"). \"\n-      \"Use -Xlog:jit+compilation for more detail.\", err, total, error);\n+      \/\/ Using stringStream instead of err_msg to avoid truncation\n+      stringStream st;\n+      st.print(\"JVMCI compiler disabled \"\n+               \"after %d of %d upcalls had errors (Last error: \\\"%s\\\"). \"\n+               \"Use -Xlog:jit+compilation for more detail.\", err, total, error);\n+      const char* disable_msg = st.freeze();\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompiler.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -90,0 +90,25 @@\n+\/\/ A helper class for caching a Method* when the user of the cache\n+\/\/ only cares about the latest version of the Method*. This cache safely\n+\/\/ interacts with the RedefineClasses API.\n+class LatestMethodCache {\n+  \/\/ We save the InstanceKlass* and the idnum of Method* in order to get\n+  \/\/ the current Method*.\n+  InstanceKlass*        _klass;\n+  int                   _method_idnum;\n+\n+ public:\n+  LatestMethodCache()   { _klass = nullptr; _method_idnum = -1; }\n+\n+  void init(JavaThread* current, InstanceKlass* ik, const char* method,\n+            Symbol* signature, bool is_static);\n+  Method* get_method();\n+};\n+\n+static LatestMethodCache _finalizer_register_cache;         \/\/ Finalizer.register()\n+static LatestMethodCache _loader_addClass_cache;            \/\/ ClassLoader.addClass()\n+static LatestMethodCache _throw_illegal_access_error_cache; \/\/ Unsafe.throwIllegalAccessError()\n+static LatestMethodCache _throw_no_such_method_error_cache; \/\/ Unsafe.throwNoSuchMethodError()\n+static LatestMethodCache _do_stack_walk_cache;              \/\/ AbstractStackWalker.doStackWalk()\n+static LatestMethodCache _is_substitutable_cache;           \/\/ ValueObjectMethods.isSubstitutable()\n+static LatestMethodCache _value_object_hash_code_cache;     \/\/ ValueObjectMethods.valueObjectHashCode()\n+\n@@ -129,4 +154,0 @@\n-OopHandle Universe::_null_ptr_exception_instance;\n-OopHandle Universe::_arithmetic_exception_instance;\n-OopHandle Universe::_virtual_machine_error_instance;\n-\n@@ -136,7 +157,0 @@\n-LatestMethodCache* Universe::_finalizer_register_cache = nullptr;\n-LatestMethodCache* Universe::_loader_addClass_cache    = nullptr;\n-LatestMethodCache* Universe::_throw_illegal_access_error_cache = nullptr;\n-LatestMethodCache* Universe::_throw_no_such_method_error_cache = nullptr;\n-LatestMethodCache* Universe::_do_stack_walk_cache     = nullptr;\n-LatestMethodCache* Universe::_is_substitutable_cache  = nullptr;\n-LatestMethodCache* Universe::_value_object_hash_code_cache = nullptr;\n@@ -173,0 +187,46 @@\n+\/\/ These are the exceptions that are always created and are guatanteed to exist.\n+\/\/ If possible, they can be stored as CDS archived objects to speed up AOT code.\n+class BuiltinException {\n+  OopHandle _instance;\n+  CDS_JAVA_HEAP_ONLY(int _archived_root_index;)\n+\n+public:\n+  BuiltinException() : _instance() {\n+    CDS_JAVA_HEAP_ONLY(_archived_root_index = 0);\n+  }\n+\n+  void init_if_empty(Symbol* symbol, TRAPS) {\n+    if (_instance.is_empty()) {\n+      Klass* k = SystemDictionary::resolve_or_fail(symbol, true, CHECK);\n+      oop obj = InstanceKlass::cast(k)->allocate_instance(CHECK);\n+      _instance = OopHandle(Universe::vm_global(), obj);\n+    }\n+  }\n+\n+  oop instance() {\n+    return _instance.resolve();\n+  }\n+\n+#if INCLUDE_CDS_JAVA_HEAP\n+  void store_in_cds() {\n+    _archived_root_index = HeapShared::archive_exception_instance(instance());\n+  }\n+\n+  void load_from_cds() {\n+    if (_archived_root_index >= 0) {\n+      oop obj = HeapShared::get_root(_archived_root_index);\n+      assert(obj != nullptr, \"must be\");\n+      _instance = OopHandle(Universe::vm_global(), obj);\n+    }\n+  }\n+\n+  void serialize(SerializeClosure *f) {\n+    f->do_int(&_archived_root_index);\n+  }\n+#endif\n+};\n+\n+static BuiltinException _null_ptr_exception;\n+static BuiltinException _arithmetic_exception;\n+static BuiltinException _virtual_machine_error;\n+\n@@ -186,3 +246,3 @@\n-oop Universe::null_ptr_exception_instance()       { return _null_ptr_exception_instance.resolve(); }\n-oop Universe::arithmetic_exception_instance()     { return _arithmetic_exception_instance.resolve(); }\n-oop Universe::virtual_machine_error_instance()    { return _virtual_machine_error_instance.resolve(); }\n+oop Universe::null_ptr_exception_instance()       { return _null_ptr_exception.instance(); }\n+oop Universe::arithmetic_exception_instance()     { return _arithmetic_exception.instance(); }\n+oop Universe::virtual_machine_error_instance()    { return _virtual_machine_error.instance(); }\n@@ -219,4 +279,0 @@\n-void LatestMethodCache::metaspace_pointers_do(MetaspaceClosure* it) {\n-  it->push(&_klass);\n-}\n-\n@@ -236,8 +292,0 @@\n-\n-  _finalizer_register_cache->metaspace_pointers_do(it);\n-  _loader_addClass_cache->metaspace_pointers_do(it);\n-  _throw_illegal_access_error_cache->metaspace_pointers_do(it);\n-  _throw_no_such_method_error_cache->metaspace_pointers_do(it);\n-  _do_stack_walk_cache->metaspace_pointers_do(it);\n-  _is_substitutable_cache->metaspace_pointers_do(it);\n-  _value_object_hash_code_cache->metaspace_pointers_do(it);\n@@ -253,1 +301,7 @@\n-void Universe::update_archived_basic_type_mirrors() {\n+void Universe::archive_exception_instances() {\n+  _null_ptr_exception.store_in_cds();\n+  _arithmetic_exception.store_in_cds();\n+  _virtual_machine_error.store_in_cds();\n+}\n+\n+void Universe::load_archived_object_instances() {\n@@ -263,0 +317,4 @@\n+\n+    _null_ptr_exception.load_from_cds();\n+    _arithmetic_exception.load_from_cds();\n+    _virtual_machine_error.load_from_cds();\n@@ -274,1 +332,1 @@\n-    \/\/ updated later in Universe::update_archived_basic_type_mirrors().\n+    \/\/ updated later in Universe::load_archived_object_instances().\n@@ -276,0 +334,3 @@\n+  _null_ptr_exception.serialize(f);\n+  _arithmetic_exception.serialize(f);\n+  _virtual_machine_error.serialize(f);\n@@ -290,7 +351,0 @@\n-  _finalizer_register_cache->serialize(f);\n-  _loader_addClass_cache->serialize(f);\n-  _throw_illegal_access_error_cache->serialize(f);\n-  _throw_no_such_method_error_cache->serialize(f);\n-  _do_stack_walk_cache->serialize(f);\n-  _is_substitutable_cache->serialize(f);\n-  _value_object_hash_code_cache->serialize(f);\n@@ -819,10 +873,0 @@\n-  \/\/ We have a heap so create the Method* caches before\n-  \/\/ Metaspace::initialize_shared_spaces() tries to populate them.\n-  Universe::_finalizer_register_cache = new LatestMethodCache();\n-  Universe::_loader_addClass_cache    = new LatestMethodCache();\n-  Universe::_throw_illegal_access_error_cache = new LatestMethodCache();\n-  Universe::_throw_no_such_method_error_cache = new LatestMethodCache();\n-  Universe::_do_stack_walk_cache = new LatestMethodCache();\n-  Universe::_is_substitutable_cache = new LatestMethodCache();\n-  Universe::_value_object_hash_code_cache = new LatestMethodCache();\n-\n@@ -935,5 +979,2 @@\n-static void initialize_known_method(LatestMethodCache* method_cache,\n-                                    InstanceKlass* ik,\n-                                    const char* method,\n-                                    Symbol* signature,\n-                                    bool is_static, TRAPS)\n+void LatestMethodCache::init(JavaThread* current, InstanceKlass* ik,\n+                             const char* method, Symbol* signature, bool is_static)\n@@ -944,1 +985,1 @@\n-  if (!ik->link_class_or_fail(THREAD) ||\n+  if (!ik->link_class_or_fail(current) ||\n@@ -947,1 +988,1 @@\n-    ResourceMark rm(THREAD);\n+    ResourceMark rm(current);\n@@ -953,1 +994,4 @@\n-  method_cache->init(ik, m);\n+\n+  _klass = ik;\n+  _method_idnum = m->method_idnum();\n+  assert(_method_idnum >= 0, \"sanity check\");\n@@ -956,1 +1000,19 @@\n-void Universe::initialize_known_methods(TRAPS) {\n+Method* LatestMethodCache::get_method() {\n+  if (_klass == nullptr) {\n+    return nullptr;\n+  } else {\n+    Method* m = _klass->method_with_idnum(_method_idnum);\n+    assert(m != nullptr, \"sanity check\");\n+    return m;\n+  }\n+}\n+\n+Method* Universe::finalizer_register_method()     { return _finalizer_register_cache.get_method(); }\n+Method* Universe::loader_addClass_method()        { return _loader_addClass_cache.get_method(); }\n+Method* Universe::throw_illegal_access_error()    { return _throw_illegal_access_error_cache.get_method(); }\n+Method* Universe::throw_no_such_method_error()    { return _throw_no_such_method_error_cache.get_method(); }\n+Method* Universe::do_stack_walk_method()          { return _do_stack_walk_cache.get_method(); }\n+Method* Universe::is_substitutable_method()       { return _is_substitutable_cache.get_method(); }\n+Method* Universe::value_object_hash_code_method() { return _value_object_hash_code_cache.get_method(); }\n+\n+void Universe::initialize_known_methods(JavaThread* current) {\n@@ -958,1 +1020,1 @@\n-  initialize_known_method(_finalizer_register_cache,\n+  _finalizer_register_cache.init(current,\n@@ -961,1 +1023,1 @@\n-                          vmSymbols::object_void_signature(), true, CHECK);\n+                          vmSymbols::object_void_signature(), true);\n@@ -963,1 +1025,1 @@\n-  initialize_known_method(_throw_illegal_access_error_cache,\n+  _throw_illegal_access_error_cache.init(current,\n@@ -966,1 +1028,1 @@\n-                          vmSymbols::void_method_signature(), true, CHECK);\n+                          vmSymbols::void_method_signature(), true);\n@@ -968,1 +1030,1 @@\n-  initialize_known_method(_throw_no_such_method_error_cache,\n+  _throw_no_such_method_error_cache.init(current,\n@@ -971,1 +1033,1 @@\n-                          vmSymbols::void_method_signature(), true, CHECK);\n+                          vmSymbols::void_method_signature(), true);\n@@ -974,1 +1036,1 @@\n-  initialize_known_method(_loader_addClass_cache,\n+  _loader_addClass_cache.init(current,\n@@ -977,1 +1039,1 @@\n-                          vmSymbols::class_void_signature(), false, CHECK);\n+                          vmSymbols::class_void_signature(), false);\n@@ -980,1 +1042,1 @@\n-  initialize_known_method(_do_stack_walk_cache,\n+  _do_stack_walk_cache.init(current,\n@@ -983,1 +1045,1 @@\n-                          vmSymbols::doStackWalk_signature(), false, CHECK);\n+                          vmSymbols::doStackWalk_signature(), false);\n@@ -986,2 +1048,2 @@\n-  ResourceMark rm;\n-  initialize_known_method(_is_substitutable_cache,\n+  ResourceMark rm(current);\n+  _is_substitutable_cache.init(current,\n@@ -990,2 +1052,2 @@\n-                          vmSymbols::object_object_boolean_signature(), true, CHECK);\n-  initialize_known_method(_value_object_hash_code_cache,\n+                          vmSymbols::object_object_boolean_signature(), true);\n+  _value_object_hash_code_cache.init(current,\n@@ -994,1 +1056,1 @@\n-                          vmSymbols::object_int_signature(), true, CHECK);\n+                          vmSymbols::object_int_signature(), true);\n@@ -1032,11 +1094,4 @@\n-  \/\/ Setup preallocated NullPointerException\n-  \/\/ (this is currently used for a cheap & dirty solution in compiler exception handling)\n-  Klass* k = SystemDictionary::resolve_or_fail(vmSymbols::java_lang_NullPointerException(), true, CHECK_false);\n-  instance = InstanceKlass::cast(k)->allocate_instance(CHECK_false);\n-  Universe::_null_ptr_exception_instance = OopHandle(Universe::vm_global(), instance);\n-\n-  \/\/ Setup preallocated ArithmeticException\n-  \/\/ (this is currently used for a cheap & dirty solution in compiler exception handling)\n-  k = SystemDictionary::resolve_or_fail(vmSymbols::java_lang_ArithmeticException(), true, CHECK_false);\n-  instance = InstanceKlass::cast(k)->allocate_instance(CHECK_false);\n-  Universe::_arithmetic_exception_instance = OopHandle(Universe::vm_global(), instance);\n+  \/\/ Setup preallocated NullPointerException\/ArithmeticException\n+  \/\/ (used for a cheap & dirty solution in compiler exception handling)\n+  _null_ptr_exception.init_if_empty(vmSymbols::java_lang_NullPointerException(), CHECK_false);\n+  _arithmetic_exception.init_if_empty(vmSymbols::java_lang_ArithmeticException(), CHECK_false);\n@@ -1045,1 +1100,1 @@\n-  k = vmClasses::VirtualMachineError_klass();\n+  Klass* k = vmClasses::VirtualMachineError_klass();\n@@ -1051,2 +1106,1 @@\n-  instance = InstanceKlass::cast(k)->allocate_instance(CHECK_false);\n-  Universe::_virtual_machine_error_instance = OopHandle(Universe::vm_global(), instance);\n+  _virtual_machine_error.init_if_empty(vmSymbols::java_lang_VirtualMachineError(), CHECK_false);\n@@ -1062,1 +1116,1 @@\n-  Universe::initialize_known_methods(CHECK_false);\n+  Universe::initialize_known_methods(THREAD);\n@@ -1277,29 +1331,0 @@\n-\n-void LatestMethodCache::init(Klass* k, Method* m) {\n-  if (!UseSharedSpaces) {\n-    _klass = k;\n-  }\n-#ifndef PRODUCT\n-  else {\n-    \/\/ sharing initialization should have already set up _klass\n-    assert(_klass != nullptr, \"just checking\");\n-  }\n-#endif\n-\n-  _method_idnum = m->method_idnum();\n-  assert(_method_idnum >= 0, \"sanity check\");\n-}\n-\n-\n-Method* LatestMethodCache::get_method() {\n-  if (klass() == nullptr) return nullptr;\n-  InstanceKlass* ik = InstanceKlass::cast(klass());\n-  Method* m = ik->method_with_idnum(method_idnum());\n-  assert(m != nullptr, \"sanity check\");\n-  return m;\n-}\n-\n-void LatestMethodCache::serialize(SerializeClosure* f) {\n-  f->do_ptr(&_klass);\n-}\n-\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":138,"deletions":113,"binary":false,"changes":251,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,27 +48,0 @@\n-\/\/ A helper class for caching a Method* when the user of the cache\n-\/\/ only cares about the latest version of the Method*.  This cache safely\n-\/\/ interacts with the RedefineClasses API.\n-\n-class LatestMethodCache : public CHeapObj<mtClass> {\n-  \/\/ We save the Klass* and the idnum of Method* in order to get\n-  \/\/ the current cached Method*.\n- private:\n-  Klass*                _klass;\n-  int                   _method_idnum;\n-\n- public:\n-  LatestMethodCache()   { _klass = nullptr; _method_idnum = -1; }\n-  ~LatestMethodCache()  { _klass = nullptr; _method_idnum = -1; }\n-\n-  void   init(Klass* k, Method* m);\n-  Klass* klass() const           { return _klass; }\n-  int    method_idnum() const    { return _method_idnum; }\n-\n-  Method* get_method();\n-\n-  \/\/ CDS support.  Replace the klass in this with the archive version\n-  \/\/ could use this for Enhanced Class Redefinition also.\n-  void serialize(SerializeClosure* f);\n-  void metaspace_pointers_do(MetaspaceClosure* it);\n-};\n-\n@@ -118,8 +91,0 @@\n-  static LatestMethodCache* _finalizer_register_cache; \/\/ static method for registering finalizable objects\n-  static LatestMethodCache* _loader_addClass_cache;    \/\/ method for registering loaded classes in class loader vector\n-  static LatestMethodCache* _throw_illegal_access_error_cache; \/\/ Unsafe.throwIllegalAccessError() method\n-  static LatestMethodCache* _throw_no_such_method_error_cache; \/\/ Unsafe.throwNoSuchMethodError() method\n-  static LatestMethodCache* _do_stack_walk_cache;      \/\/ method for stack walker callback\n-  static LatestMethodCache* _is_substitutable_cache;   \/\/ ValueObjectMethods.isSubstitutable() method\n-  static LatestMethodCache* _value_object_hash_code_cache;  \/\/ ValueObjectMethods.valueObjectHashCode() method\n-\n@@ -144,4 +109,0 @@\n-  static OopHandle    _null_ptr_exception_instance;   \/\/ preallocated exception object\n-  static OopHandle    _arithmetic_exception_instance; \/\/ preallocated exception object\n-  static OopHandle    _virtual_machine_error_instance; \/\/ preallocated exception object\n-\n@@ -250,0 +211,1 @@\n+  static void load_archived_object_instances() NOT_CDS_JAVA_HEAP_RETURN;\n@@ -252,1 +214,1 @@\n-  static void update_archived_basic_type_mirrors();\n+  static void archive_exception_instances();\n@@ -272,6 +234,5 @@\n-  static Method*      finalizer_register_method()     { return _finalizer_register_cache->get_method(); }\n-  static Method*      loader_addClass_method()        { return _loader_addClass_cache->get_method(); }\n-\n-  static Method*      throw_illegal_access_error()    { return _throw_illegal_access_error_cache->get_method(); }\n-  static Method*      throw_no_such_method_error()    { return _throw_no_such_method_error_cache->get_method(); }\n-  static Method*      do_stack_walk_method()          { return _do_stack_walk_cache->get_method(); }\n+  static Method*      finalizer_register_method();\n+  static Method*      loader_addClass_method();\n+  static Method*      throw_illegal_access_error();\n+  static Method*      throw_no_such_method_error();\n+  static Method*      do_stack_walk_method();\n@@ -280,2 +241,2 @@\n-  static Method*      is_substitutable_method()       { return _is_substitutable_cache->get_method(); }\n-  static Method*      value_object_hash_code_method() { return _value_object_hash_code_cache->get_method(); }\n+  static Method*      is_substitutable_method();\n+  static Method*      value_object_hash_code_method();\n@@ -287,1 +248,1 @@\n-  static void initialize_known_methods(TRAPS);\n+  static void initialize_known_methods(JavaThread* current);\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":11,"deletions":50,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-                 notproduct,                                                \\\n@@ -107,1 +106,1 @@\n-  notproduct(intx, IndexSetWatch, 0,                                        \\\n+  develop(intx, IndexSetWatch, 0,                                           \\\n@@ -122,1 +121,1 @@\n-  notproduct(bool, PrintIdeal, false,                                       \\\n+  develop(bool, PrintIdeal, false,                                          \\\n@@ -125,1 +124,1 @@\n-  notproduct(bool, PrintOpto, false,                                        \\\n+  develop(bool, PrintOpto, false,                                           \\\n@@ -128,1 +127,1 @@\n-  notproduct(bool, PrintOptoInlining, false,                                \\\n+  develop(bool, PrintOptoInlining, false,                                   \\\n@@ -131,1 +130,1 @@\n-  notproduct(bool, VerifyIdealNodeCount, false,                             \\\n+  develop(bool, VerifyIdealNodeCount, false,                                \\\n@@ -134,1 +133,1 @@\n-  notproduct(bool, PrintIdealNodeCount, false,                              \\\n+  develop(bool, PrintIdealNodeCount, false,                                 \\\n@@ -143,1 +142,1 @@\n-  notproduct(bool, OptoBreakpointOSR, false,                                \\\n+  develop(bool, OptoBreakpointOSR, false,                                   \\\n@@ -146,1 +145,1 @@\n-  notproduct(uint64_t, BreakAtNode, 0,                                      \\\n+  develop(uint64_t, BreakAtNode, 0,                                         \\\n@@ -149,1 +148,1 @@\n-  notproduct(bool, OptoBreakpointC2R, false,                                \\\n+  develop(bool, OptoBreakpointC2R, false,                                   \\\n@@ -152,1 +151,1 @@\n-  notproduct(bool, OptoNoExecute, false,                                    \\\n+  develop(bool, OptoNoExecute, false,                                       \\\n@@ -155,1 +154,1 @@\n-  notproduct(bool, PrintOptoStatistics, false,                              \\\n+  develop(bool, PrintOptoStatistics, false,                                 \\\n@@ -164,1 +163,1 @@\n-  notproduct(bool, PrintFrameConverterAssembly, false,                      \\\n+  develop(bool, PrintFrameConverterAssembly, false,                         \\\n@@ -167,1 +166,1 @@\n-  notproduct(bool, PrintParseStatistics, false,                             \\\n+  develop(bool, PrintParseStatistics, false,                                \\\n@@ -170,1 +169,1 @@\n-  notproduct(bool, PrintOptoPeephole, false,                                \\\n+  develop(bool, PrintOptoPeephole, false,                                   \\\n@@ -195,1 +194,1 @@\n-  notproduct(bool, TraceSuperWordLoopUnrollAnalysis, false,                 \\\n+  develop(bool, TraceSuperWordLoopUnrollAnalysis, false,                    \\\n@@ -224,1 +223,1 @@\n-  notproduct(bool, TraceProfileTripCount, false,                            \\\n+  develop(bool, TraceProfileTripCount, false,                               \\\n@@ -281,1 +280,1 @@\n-  notproduct(bool, VerifyGraphEdges , false,                                \\\n+  develop(bool, VerifyGraphEdges , false,                                   \\\n@@ -284,1 +283,1 @@\n-  notproduct(bool, VerifyDUIterators, true,                                 \\\n+  develop(bool, VerifyDUIterators, true,                                    \\\n@@ -287,1 +286,1 @@\n-  notproduct(bool, VerifyHashTableKeys, true,                               \\\n+  develop(bool, VerifyHashTableKeys, true,                                  \\\n@@ -290,1 +289,1 @@\n-  notproduct(bool, VerifyRegisterAllocator , false,                         \\\n+  develop(bool, VerifyRegisterAllocator , false,                            \\\n@@ -305,1 +304,1 @@\n-  notproduct(bool, TraceOptoPipelining, false,                              \\\n+  develop(bool, TraceOptoPipelining, false,                                 \\\n@@ -308,1 +307,1 @@\n-  notproduct(bool, TraceOptoOutput, false,                                  \\\n+  develop(bool, TraceOptoOutput, false,                                     \\\n@@ -324,1 +323,1 @@\n-  notproduct(bool, TracePartialPeeling, false,                              \\\n+  develop(bool, TracePartialPeeling, false,                                 \\\n@@ -336,1 +335,1 @@\n-  notproduct(bool, TraceLoopUnswitching, false,                             \\\n+  develop(bool, TraceLoopUnswitching, false,                                \\\n@@ -351,1 +350,1 @@\n-  notproduct(bool, TraceSuperWord, false,                                   \\\n+  develop(bool, TraceSuperWord, false,                                      \\\n@@ -354,1 +353,1 @@\n-  notproduct(bool, TraceNewVectors, false,                                  \\\n+  develop(bool, TraceNewVectors, false,                                     \\\n@@ -364,1 +363,1 @@\n-  notproduct(bool, PrintIdealGraph, false,                                  \\\n+  develop(bool, PrintIdealGraph, false,                                     \\\n@@ -368,1 +367,1 @@\n-  notproduct(intx, PrintIdealGraphLevel, 0,                                 \\\n+  develop(intx, PrintIdealGraphLevel, 0,                                    \\\n@@ -377,1 +376,1 @@\n-  notproduct(intx, PrintIdealGraphPort, 4444,                               \\\n+  develop(intx, PrintIdealGraphPort, 4444,                                  \\\n@@ -381,1 +380,1 @@\n-  notproduct(ccstr, PrintIdealGraphAddress, \"127.0.0.1\",                    \\\n+  develop(ccstr, PrintIdealGraphAddress, \"127.0.0.1\",                       \\\n@@ -384,1 +383,1 @@\n-  notproduct(ccstr, PrintIdealGraphFile, nullptr,                           \\\n+  develop(ccstr, PrintIdealGraphFile, nullptr,                              \\\n@@ -452,1 +451,1 @@\n-  notproduct(bool, PrintLockStatistics, false,                              \\\n+  develop(bool, PrintLockStatistics, false,                                 \\\n@@ -458,1 +457,1 @@\n-  notproduct(bool, PrintEliminateLocks, false,                              \\\n+  develop(bool, PrintEliminateLocks, false,                                 \\\n@@ -477,1 +476,1 @@\n-  notproduct(bool, TraceReduceAllocationMerges, false,                      \\\n+  develop(bool, TraceReduceAllocationMerges, false,                         \\\n@@ -493,1 +492,1 @@\n-  notproduct(bool, PrintEscapeAnalysis, false,                              \\\n+  develop(bool, PrintEscapeAnalysis, false,                                 \\\n@@ -499,1 +498,1 @@\n-  notproduct(bool, PrintEliminateAllocations, false,                        \\\n+  develop(bool, PrintEliminateAllocations, false,                           \\\n@@ -513,1 +512,1 @@\n-  notproduct(bool, PrintOptimizePtrCompare, false,                          \\\n+  develop(bool, PrintOptimizePtrCompare, false,                             \\\n@@ -516,1 +515,1 @@\n-  notproduct(bool, VerifyConnectionGraph , true,                            \\\n+  develop(bool, VerifyConnectionGraph , true,                               \\\n@@ -522,1 +521,1 @@\n-  notproduct(bool, PrintOptimizeStringConcat, false,                        \\\n+  develop(bool, PrintOptimizeStringConcat, false,                           \\\n@@ -583,1 +582,1 @@\n-  notproduct(bool, TracePhaseCCP, false,                                    \\\n+  develop(bool, TracePhaseCCP, false,                                       \\\n@@ -617,1 +616,1 @@\n-  notproduct(bool, VerifyLoopOptimizations, false,                          \\\n+  develop(bool, VerifyLoopOptimizations, false,                             \\\n@@ -633,1 +632,1 @@\n-  notproduct(bool, TraceCISCSpill, false,                                   \\\n+  develop(bool, TraceCISCSpill, false,                                      \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":42,"deletions":43,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -2860,0 +2860,1 @@\n+    \/\/\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4593,1 +4593,1 @@\n-    \/\/ Bail out if length is negative.\n+    \/\/ Bail out if length is negative (i.e., if start > end).\n@@ -4637,0 +4637,4 @@\n+    \/\/ Bail out if start is larger than the original length\n+    Node* orig_tail = _gvn.transform(new SubINode(orig_length, start));\n+    generate_negative_guard(orig_tail, bailout, &orig_tail);\n+\n@@ -4646,2 +4650,1 @@\n-      \/\/ The answer is MinI(orig_length - start, length).\n-      Node* orig_tail = _gvn.transform(new SubINode(orig_length, start));\n+      \/\/ The answer is MinI(orig_tail, length).\n@@ -4695,1 +4698,1 @@\n-        ArrayCopyNode* ac = ArrayCopyNode::make(this, true, original, start, newcopy, intcon(0), moved, true, false,\n+        ArrayCopyNode* ac = ArrayCopyNode::make(this, true, original, start, newcopy, intcon(0), moved, true, true,\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"opto\/predicates.hpp\"\n@@ -1671,1 +1672,1 @@\n-  IfProjNode* clone_assertion_predicate_for_unswitched_loops(Node* iff, IfProjNode* predicate,\n+  IfProjNode* clone_assertion_predicate_for_unswitched_loops(IfNode* template_assertion_predicate, IfProjNode* predicate,\n@@ -1685,0 +1686,6 @@\n+  Node* clone_and_register(Node* n, Node* ctrl) {\n+    n = n->clone();\n+    register_new_node(n, ctrl);\n+    return n;\n+  }\n+\n@@ -1920,0 +1927,2 @@\n+  void clone_data_nodes_and_transform_opaque_loop_nodes(const TransformStrategyForOpaqueLoopNodes& transform_strategy,\n+                                                        Node* new_ctrl);\n@@ -1921,0 +1930,1 @@\n+  void transform_opaque_node(const TransformStrategyForOpaqueLoopNodes& transform_strategy, Node* node);\n@@ -1931,0 +1941,13 @@\n+\n+  \/\/ Create a copy of the data nodes provided to the constructor by doing the following:\n+  \/\/ Clone all non-OpaqueLoop* nodes and rewire them to create an identical subgraph copy. For the OpaqueLoop* nodes,\n+  \/\/ apply the provided transformation strategy and include the transformed node into the subgraph copy to get a complete\n+  \/\/ \"cloned-and-transformed\" graph copy. For all newly cloned nodes (which could also be new OpaqueLoop* nodes), set\n+  \/\/ `new_ctrl` as ctrl.\n+  const OrigToNewHashtable& clone_with_opaque_loop_transform_strategy(\n+      const TransformStrategyForOpaqueLoopNodes& transform_strategy,\n+      Node* new_ctrl) {\n+    clone_data_nodes_and_transform_opaque_loop_nodes(transform_strategy, new_ctrl);\n+    rewire_clones_to_cloned_inputs();\n+    return _orig_to_new;\n+  }\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -4685,1 +4685,1 @@\n-\/\/ Clone the given node and set it up properly. Set `new_ctrl` as ctrl.\n+\/\/ Clone the given node and set it up properly. Set 'new_ctrl' as ctrl.\n@@ -4706,0 +4706,27 @@\n+\n+\/\/ Clone all non-OpaqueLoop* nodes and apply the provided transformation strategy for OpaqueLoop* nodes.\n+\/\/ Set 'new_ctrl' as ctrl for all cloned non-OpaqueLoop* nodes.\n+void DataNodeGraph::clone_data_nodes_and_transform_opaque_loop_nodes(\n+    const TransformStrategyForOpaqueLoopNodes& transform_strategy,\n+    Node* new_ctrl) {\n+  for (uint i = 0; i < _data_nodes.size(); i++) {\n+    Node* data_node = _data_nodes[i];\n+    if (data_node->is_Opaque1()) {\n+      transform_opaque_node(transform_strategy, data_node);\n+    } else {\n+      clone(data_node, new_ctrl);\n+    }\n+  }\n+}\n+\n+void DataNodeGraph::transform_opaque_node(const TransformStrategyForOpaqueLoopNodes& transform_strategy, Node* node) {\n+  Node* transformed_node;\n+  if (node->is_OpaqueLoopInit()) {\n+    transformed_node = transform_strategy.transform_opaque_init(node->as_OpaqueLoopInit());\n+  } else {\n+    assert(node->is_OpaqueLoopStride(), \"must be OpaqueLoopStrideNode\");\n+    transformed_node = transform_strategy.transform_opaque_stride(node->as_OpaqueLoopStride());\n+  }\n+  \/\/ Add an orig->new mapping to correctly update the inputs of the copied graph in rewire_clones_to_cloned_inputs().\n+  _orig_to_new.put(node, transformed_node);\n+}\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1404,1 +1404,2 @@\n-                       true, !ac->is_copyofrange());\n+                       true, ac->has_negative_length_guard());\n+\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -140,0 +140,3 @@\n+class OpaqueLoopInitNode;\n+class OpaqueLoopStrideNode;\n+class Opaque4Node;\n@@ -798,3 +801,6 @@\n-    DEFINE_CLASS_ID(Move,     Node, 17)\n-    DEFINE_CLASS_ID(LShift,   Node, 18)\n-    DEFINE_CLASS_ID(Neg,      Node, 19)\n+      DEFINE_CLASS_ID(OpaqueLoopInit, Opaque1, 0)\n+      DEFINE_CLASS_ID(OpaqueLoopStride, Opaque1, 1)\n+    DEFINE_CLASS_ID(Opaque4,  Node, 17)\n+    DEFINE_CLASS_ID(Move,     Node, 18)\n+    DEFINE_CLASS_ID(LShift,   Node, 19)\n+    DEFINE_CLASS_ID(Neg,      Node, 20)\n@@ -971,0 +977,3 @@\n+  DEFINE_CLASS_QUERY(Opaque4)\n+  DEFINE_CLASS_QUERY(OpaqueLoopInit)\n+  DEFINE_CLASS_QUERY(OpaqueLoopStride)\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"opto\/predicates.hpp\"\n@@ -105,2 +106,3 @@\n-        Node* bol = create_bool_from_template_assertion_predicate(m, nullptr, nullptr, m->in(0));\n-        _igvn.replace_input_of(m, 1, bol);\n+        TemplateAssertionPredicateExpression template_assertion_predicate_expression(m->in(1)->as_Opaque4());\n+        Opaque4Node* cloned_opaque4_node = template_assertion_predicate_expression.clone(m->in(0), this);\n+        _igvn.replace_input_of(m, 1, cloned_opaque4_node);\n","filename":"src\/hotspot\/share\/opto\/split_if.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -6929,3 +6929,1 @@\n-  int dummy;\n-  bool this_top_or_bottom = (this_one->base_element_type(dummy) == Type::TOP || this_one->base_element_type(dummy) == Type::BOTTOM);\n-  if (!this_one->is_loaded() || !other->is_loaded() || this_top_or_bottom) {\n+  if (!this_one->is_loaded() || !other->is_loaded()) {\n@@ -6937,0 +6935,7 @@\n+\n+  int dummy;\n+  bool this_top_or_bottom = (this_one->base_element_type(dummy) == Type::TOP || this_one->base_element_type(dummy) == Type::BOTTOM);\n+  if (this_top_or_bottom) {\n+    return true;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-      write_annotations_attribute(\"RuntimeVisibleAnnotations\", anno);\n+      write_annotations_attribute(\"RuntimeVisibleAnnotations\", \"RuntimeInvisibleAnnotations\", anno);\n@@ -126,1 +126,1 @@\n-      write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", type_anno);\n+      write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", \"RuntimeInvisibleTypeAnnotations\", type_anno);\n@@ -384,0 +384,14 @@\n+void JvmtiClassFileReconstituter::write_annotations_attribute(const char* attr_name,\n+                                                              const char* fallback_attr_name,\n+                                                              AnnotationArray* annos) {\n+  TempNewSymbol sym = SymbolTable::probe(attr_name, (int)strlen(attr_name));\n+  if (sym != nullptr) {\n+    if (symbol_to_cpool_index(sym) != 0) {\n+      write_annotations_attribute(attr_name, annos);\n+      return;\n+    }\n+  }\n+  \/\/ use fallback name\n+  write_annotations_attribute(fallback_attr_name, annos);\n+}\n+\n@@ -543,1 +557,1 @@\n-      write_annotations_attribute(\"RuntimeVisibleAnnotations\", component->annotations());\n+      write_annotations_attribute(\"RuntimeVisibleAnnotations\", \"RuntimeInvisibleAnnotations\", component->annotations());\n@@ -546,1 +560,1 @@\n-      write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", component->type_annotations());\n+      write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", \"RuntimeInvisibleTypeAnnotations\", component->type_annotations());\n@@ -785,1 +799,1 @@\n-    write_annotations_attribute(\"RuntimeVisibleAnnotations\", anno);\n+    write_annotations_attribute(\"RuntimeVisibleAnnotations\", \"RuntimeInvisibleAnnotations\", anno);\n@@ -788,1 +802,1 @@\n-    write_annotations_attribute(\"RuntimeVisibleParameterAnnotations\", param_anno);\n+    write_annotations_attribute(\"RuntimeVisibleParameterAnnotations\", \"RuntimeInvisibleParameterAnnotations\", param_anno);\n@@ -791,1 +805,1 @@\n-    write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", type_anno);\n+    write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", \"RuntimeInvisibleTypeAnnotations\", type_anno);\n@@ -854,1 +868,1 @@\n-    write_annotations_attribute(\"RuntimeVisibleAnnotations\", anno);\n+    write_annotations_attribute(\"RuntimeVisibleAnnotations\", \"RuntimeInvisibleAnnotations\", anno);\n@@ -857,1 +871,1 @@\n-    write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", type_anno);\n+    write_annotations_attribute(\"RuntimeVisibleTypeAnnotations\", \"RuntimeInvisibleTypeAnnotations\", type_anno);\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.cpp","additions":23,"deletions":9,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -120,0 +120,7 @@\n+  \/\/ With PreserveAllAnnotations option \"runtime invisible\" annotations\n+  \/\/ (RuntimeInvisibleAnnotations\/RuntimeInvisibleTypeAnnotations\/RuntimeInvisibleParameterAnnotations)\n+  \/\/ are considered \"runtime visible\" and ClassFileReconstituter writes them as\n+  \/\/ RuntimeVisibleAnnotations\/RuntimeVisibleTypeAnnotations\/RuntimeVisibleParameterAnnotations.\n+  \/\/ This helper method is for the corner case when \"runtime visible\" attribute name is not presents\n+  \/\/ in the class constant pool and the annotations are written with fallback \"runtime invisible\" name.\n+  void write_annotations_attribute(const char* attr_name, const char* fallback_attr_name, AnnotationArray* annos);\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1136,2 +1136,1 @@\n-      bool mismatched = ((msg_type == JVMFlag::NOTPRODUCT_FLAG_BUT_PRODUCT_BUILD) ||\n-                         (msg_type == JVMFlag::DEVELOPER_FLAG_BUT_PRODUCT_BUILD));\n+      bool mismatched = msg_type == JVMFlag::DEVELOPER_FLAG_BUT_PRODUCT_BUILD;\n@@ -1265,1 +1264,3 @@\n-  CDSConfig::check_system_property(key, value);\n+  if (internal == ExternalProperty) {\n+    CDSConfig::check_incompatible_property(key, value);\n+  }\n@@ -1913,0 +1914,1 @@\n+  CDSConfig::check_internal_module_property(prop_name, prop_value);\n@@ -1932,0 +1934,1 @@\n+  CDSConfig::check_internal_module_property(prop_base_name, prop_value);\n@@ -3505,2 +3508,1 @@\n-#ifndef PRODUCT\n-  \/\/ UseDebuggerErgo is notproduct\n+#ifdef ASSERT\n@@ -3510,2 +3512,0 @@\n-#endif\n-#ifndef PRODUCT\n@@ -3518,1 +3518,0 @@\n-#endif\n@@ -3527,0 +3526,1 @@\n+#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-\/\/ notproduct flags are settable \/ visible only during development and are not declared in the PRODUCT version\n@@ -121,1 +120,0 @@\n-                           notproduct,                                      \\\n@@ -145,1 +143,0 @@\n-                           notproduct,                                      \\\n@@ -158,1 +155,0 @@\n-                      notproduct,                                           \\\n@@ -162,1 +158,1 @@\n-  notproduct(bool, CheckCompressedOops, true,                               \\\n+  develop(bool, CheckCompressedOops, true,                                  \\\n@@ -285,1 +281,1 @@\n-  notproduct(bool, TraceCodeBlobStacks, false,                              \\\n+  develop(bool, TraceCodeBlobStacks, false,                                 \\\n@@ -288,1 +284,1 @@\n-  notproduct(bool, PrintRewrites, false,                                    \\\n+  develop(bool, PrintRewrites, false,                                       \\\n@@ -387,1 +383,1 @@\n-  notproduct(ccstrlist, DeoptimizeOnlyAt, \"\",                               \\\n+  develop(ccstrlist, DeoptimizeOnlyAt, \"\",                                  \\\n@@ -393,1 +389,1 @@\n-  notproduct(bool, ZombieALot, false,                                       \\\n+  develop(bool, ZombieALot, false,                                          \\\n@@ -396,1 +392,1 @@\n-  notproduct(bool, WalkStackALot, false,                                    \\\n+  develop(bool, WalkStackALot, false,                                       \\\n@@ -422,1 +418,1 @@\n-  notproduct(bool, VerifyLastFrame, false,                                  \\\n+  develop(bool, VerifyLastFrame, false,                                     \\\n@@ -465,1 +461,1 @@\n-  notproduct(bool, VerifyCodeCache, false,                                  \\\n+  develop(bool, VerifyCodeCache, false,                                     \\\n@@ -471,1 +467,1 @@\n-  notproduct(bool, ZapVMHandleArea, trueInDebug,                            \\\n+  develop(bool, ZapVMHandleArea, trueInDebug,                               \\\n@@ -474,1 +470,1 @@\n-  notproduct(bool, ZapStackSegments, trueInDebug,                           \\\n+  develop(bool, ZapStackSegments, trueInDebug,                              \\\n@@ -486,0 +482,3 @@\n+  develop(bool, ZapTLAB, trueInDebug,                                       \\\n+          \"Zap allocated TLABs\")                                            \\\n+                                                                            \\\n@@ -618,1 +617,1 @@\n-  notproduct(bool, PrintNMethodStatistics, false,                           \\\n+  develop(bool, PrintNMethodStatistics, false,                              \\\n@@ -695,1 +694,1 @@\n-  notproduct(bool, PrintSystemDictionaryAtExit, false,                      \\\n+  develop(bool, PrintSystemDictionaryAtExit, false,                         \\\n@@ -698,1 +697,1 @@\n-  notproduct(bool, PrintClassLoaderDataGraphAtExit, false,                  \\\n+  develop(bool, PrintClassLoaderDataGraphAtExit, false,                     \\\n@@ -818,1 +817,1 @@\n-  notproduct(bool, PrintFlatArrayLayout, false,                             \\\n+  product(bool, PrintFlatArrayLayout, false, DIAGNOSTIC,                    \\\n@@ -897,1 +896,1 @@\n-  notproduct(bool, TraceInvocationCounterOverflow, false,                   \\\n+  develop(bool, TraceInvocationCounterOverflow, false,                      \\\n@@ -1041,1 +1040,1 @@\n-  notproduct(bool, PrintFlagsWithComments, false,                           \\\n+  develop(bool, PrintFlagsWithComments, false,                              \\\n@@ -1091,1 +1090,1 @@\n-  notproduct(bool, PrintSymbolTableSizeHistogram, false,                    \\\n+  develop(bool, PrintSymbolTableSizeHistogram, false,                       \\\n@@ -1117,1 +1116,1 @@\n-  notproduct(bool, TraceLivenessQuery, false,                               \\\n+  develop(bool, TraceLivenessQuery, false,                                  \\\n@@ -1120,1 +1119,1 @@\n-  notproduct(bool, CollectIndexSetStatistics, false,                        \\\n+  develop(bool, CollectIndexSetStatistics, false,                           \\\n@@ -1150,1 +1149,1 @@\n-  notproduct(bool, ICMissHistogram, false,                                  \\\n+  develop(bool, ICMissHistogram, false,                                     \\\n@@ -1176,1 +1175,1 @@\n-  notproduct(bool, TraceOnStackReplacement, false,                          \\\n+  develop(bool, TraceOnStackReplacement, false,                             \\\n@@ -1234,1 +1233,1 @@\n-  notproduct(bool, CrashGCForDumpingJavaThread, false,                      \\\n+  develop(bool, CrashGCForDumpingJavaThread, false,                         \\\n@@ -1330,1 +1329,1 @@\n-  notproduct(int, MaxElementPrintSize, 256,                                 \\\n+  develop(int, MaxElementPrintSize, 256,                                    \\\n@@ -1333,1 +1332,1 @@\n-  notproduct(intx, MaxSubklassPrintSize, 4,                                 \\\n+  develop(intx, MaxSubklassPrintSize, 4,                                    \\\n@@ -1347,1 +1346,1 @@\n-  notproduct(intx, DeoptimizeALotInterval,     5,                           \\\n+  develop(intx, DeoptimizeALotInterval,     5,                              \\\n@@ -1350,1 +1349,1 @@\n-  notproduct(intx, ZombieALotInterval,     5,                               \\\n+  develop(intx, ZombieALotInterval,     5,                                  \\\n@@ -1583,1 +1582,1 @@\n-  notproduct(bool, ExitOnFullCodeCache, false,                              \\\n+  develop(bool, ExitOnFullCodeCache, false,                                 \\\n@@ -1732,1 +1731,1 @@\n-  notproduct(bool, UseDebuggerErgo, false,                                  \\\n+  develop(bool, UseDebuggerErgo, false,                                     \\\n@@ -1736,1 +1735,1 @@\n-  notproduct(bool, UseDebuggerErgo1, false,                                 \\\n+  develop(bool, UseDebuggerErgo1, false,                                    \\\n@@ -1740,1 +1739,1 @@\n-  notproduct(bool, UseDebuggerErgo2, false,                                 \\\n+  develop(bool, UseDebuggerErgo2, false,                                    \\\n@@ -1743,1 +1742,1 @@\n-  notproduct(bool, EnableJVMTIStackDepthAsserts, true,                      \\\n+  develop(bool, EnableJVMTIStackDepthAsserts, true,                         \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":34,"deletions":35,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -433,1 +433,0 @@\n-  _Stalled(0),\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -162,2 +162,0 @@\n-  volatile intptr_t _Stalled;\n-\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -514,1 +514,0 @@\n-  bool _do_lazy_roots;\n@@ -535,3 +534,1 @@\n-    _subtasks(SafepointSynchronize::SAFEPOINT_CLEANUP_NUM_TASKS),\n-    _do_lazy_roots(!VMThread::vm_operation()->skip_thread_oop_barriers() &&\n-                   Universe::heap()->uses_stack_watermark_barrier()) {}\n+    _subtasks(SafepointSynchronize::SAFEPOINT_CLEANUP_NUM_TASKS) {}\n@@ -542,4 +539,0 @@\n-    if (_do_lazy_roots) {\n-      workers++;\n-    }\n-\n@@ -550,14 +543,0 @@\n-    if (_subtasks.try_claim_task(SafepointSynchronize::SAFEPOINT_CLEANUP_LAZY_ROOT_PROCESSING)) {\n-      if (_do_lazy_roots) {\n-        Tracer t(\"lazy partial thread root processing\");\n-        class LazyRootClosure : public ThreadClosure {\n-        public:\n-          void do_thread(Thread* thread) {\n-            StackWatermarkSet::start_processing(JavaThread::cast(thread), StackWatermarkKind::gc);\n-          }\n-        };\n-        LazyRootClosure cl;\n-        Threads::java_threads_do(&cl);\n-      }\n-    }\n-\n@@ -592,6 +571,0 @@\n-\n-  if (log_is_enabled(Debug, monitorinflation)) {\n-    \/\/ The VMThread calls do_final_audit_and_print_stats() which calls\n-    \/\/ audit_and_print_stats() at the Info level at VM exit time.\n-    ObjectSynchronizer::audit_and_print_stats(false \/* on_exit *\/);\n-  }\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":1,"deletions":28,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -3167,1 +3167,1 @@\n-        DirectiveSet* directive = DirectivesStack::getDefaultDirective(CompileBroker::compiler(CompLevel_simple));\n+        DirectiveSet* directive = DirectivesStack::getMatchingDirective(method, CompileBroker::compiler(CompLevel_simple));\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2001,3 +2001,2 @@\n-    \/\/ The other audit_and_print_stats() call is done at the Debug\n-    \/\/ level at a safepoint in SafepointSynchronize::do_cleanup_tasks.\n-    audit_and_print_stats(true \/* on_exit *\/);\n+    LogStreamHandle(Info, monitorinflation) ls;\n+    audit_and_print_stats(&ls, true \/* on_exit *\/);\n@@ -2007,5 +2006,3 @@\n-\/\/ This function can be called at a safepoint or it can be called when\n-\/\/ we are trying to exit the VM. When we are trying to exit the VM, the\n-\/\/ list walker functions can run in parallel with the other list\n-\/\/ operations so spin-locking is used for safety.\n-\/\/\n+\/\/ This function can be called by the MonitorDeflationThread or it can be called when\n+\/\/ we are trying to exit the VM. The list walker functions can run in parallel with\n+\/\/ the other list operations.\n@@ -2013,3 +2010,1 @@\n-\/\/ aid; pass 'true' for the 'on_exit' parameter to have in-use monitor\n-\/\/ details logged at the Info level and 'false' for the 'on_exit'\n-\/\/ parameter to have in-use monitor details logged at the Trace level.\n+\/\/ aid.\n@@ -2017,16 +2012,1 @@\n-void ObjectSynchronizer::audit_and_print_stats(bool on_exit) {\n-  assert(on_exit || SafepointSynchronize::is_at_safepoint(), \"invariant\");\n-\n-  LogStreamHandle(Debug, monitorinflation) lsh_debug;\n-  LogStreamHandle(Info, monitorinflation) lsh_info;\n-  LogStreamHandle(Trace, monitorinflation) lsh_trace;\n-  LogStream* ls = nullptr;\n-  if (log_is_enabled(Trace, monitorinflation)) {\n-    ls = &lsh_trace;\n-  } else if (log_is_enabled(Debug, monitorinflation)) {\n-    ls = &lsh_debug;\n-  } else if (log_is_enabled(Info, monitorinflation)) {\n-    ls = &lsh_info;\n-  }\n-  assert(ls != nullptr, \"sanity check\");\n-\n+void ObjectSynchronizer::audit_and_print_stats(outputStream* ls, bool on_exit) {\n@@ -2044,6 +2024,8 @@\n-  if ((on_exit && log_is_enabled(Info, monitorinflation)) ||\n-      (!on_exit && log_is_enabled(Trace, monitorinflation))) {\n-    \/\/ When exiting this log output is at the Info level. When called\n-    \/\/ at a safepoint, this log output is at the Trace level since\n-    \/\/ there can be a lot of it.\n-    log_in_use_monitor_details(ls, !on_exit \/* log_all *\/);\n+  \/\/ When exiting, only log the interesting entries at the Info level.\n+  \/\/ When called at intervals by the MonitorDeflationThread, log output\n+  \/\/ at the Trace level since there can be a lot of it.\n+  if (!on_exit && log_is_enabled(Trace, monitorinflation)) {\n+    LogStreamHandle(Trace, monitorinflation) ls_tr;\n+    log_in_use_monitor_details(&ls_tr, true \/* log_all *\/);\n+  } else if (on_exit) {\n+    log_in_use_monitor_details(ls, false \/* log_all *\/);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":15,"deletions":33,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-  GrowableArrayView<E>(E* data, int capacity, int initial_len) :\n+  GrowableArrayView(E* data, int capacity, int initial_len) :\n@@ -129,1 +129,1 @@\n-  bool operator==(const GrowableArrayView<E>& rhs) const {\n+  bool operator==(const GrowableArrayView& rhs) const {\n@@ -140,1 +140,1 @@\n-  bool operator!=(const GrowableArrayView<E>& rhs) const {\n+  bool operator!=(const GrowableArrayView& rhs) const {\n@@ -357,1 +357,1 @@\n-  GrowableArrayFromArray<E>(E* data, int len) :\n+  GrowableArrayFromArray(E* data, int len) :\n@@ -498,1 +498,1 @@\n-  void swap(GrowableArrayWithAllocator<E, Derived>* other) {\n+  void swap(GrowableArrayWithAllocator* other) {\n@@ -700,2 +700,2 @@\n-class GrowableArray : public GrowableArrayWithAllocator<E, GrowableArray<E> > {\n-  friend class GrowableArrayWithAllocator<E, GrowableArray<E> >;\n+class GrowableArray : public GrowableArrayWithAllocator<E, GrowableArray<E>> {\n+  friend class GrowableArrayWithAllocator<E, GrowableArray>;\n@@ -749,1 +749,1 @@\n-      GrowableArrayWithAllocator<E, GrowableArray<E> >(\n+      GrowableArrayWithAllocator<E, GrowableArray>(\n@@ -757,1 +757,1 @@\n-      GrowableArrayWithAllocator<E, GrowableArray<E> >(\n+      GrowableArrayWithAllocator<E, GrowableArray>(\n@@ -765,1 +765,1 @@\n-      GrowableArrayWithAllocator<E, GrowableArray<E> >(\n+      GrowableArrayWithAllocator<E, GrowableArray>(\n@@ -773,1 +773,1 @@\n-      GrowableArrayWithAllocator<E, GrowableArray<E> >(\n+      GrowableArrayWithAllocator<E, GrowableArray>(\n@@ -781,1 +781,1 @@\n-      GrowableArrayWithAllocator<E, GrowableArray<E> >(\n+      GrowableArrayWithAllocator<E, GrowableArray>(\n@@ -865,2 +865,2 @@\n-  GrowableArrayIterator<E>& operator++() { ++_position; return *this; }\n-  E operator*()                          { return _array->at(_position); }\n+  GrowableArrayIterator& operator++() { ++_position; return *this; }\n+  E operator*()                       { return _array->at(_position); }\n@@ -868,1 +868,1 @@\n-  bool operator==(const GrowableArrayIterator<E>& rhs)  {\n+  bool operator==(const GrowableArrayIterator& rhs)  {\n@@ -873,1 +873,1 @@\n-  bool operator!=(const GrowableArrayIterator<E>& rhs)  {\n+  bool operator!=(const GrowableArrayIterator& rhs)  {\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -819,4 +819,0 @@\n-     * <p> To interpret localized string representations of a\n-     * floating-point value, use subclasses of {@link\n-     * java.text.NumberFormat}.\n-     *\n@@ -893,0 +889,10 @@\n+     * @apiNote To interpret localized string representations of a\n+     * floating-point value, or string representations that have\n+     * non-ASCII digits, use {@link java.text.NumberFormat}. For\n+     * example,\n+     * {@snippet lang=\"java\" :\n+     *     NumberFormat.getInstance(l).parse(s).doubleValue();\n+     * }\n+     * where {@code l} is the desired locale, or\n+     * {@link java.util.Locale#ROOT} if locale insensitive.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -493,4 +493,0 @@\n-     * <p>To interpret localized string representations of a\n-     * floating-point value, use subclasses of {@link\n-     * java.text.NumberFormat}.\n-     *\n@@ -520,0 +516,10 @@\n+     * @apiNote To interpret localized string representations of a\n+     * floating-point value, or string representations that have\n+     * non-ASCII digits, use {@link java.text.NumberFormat}. For\n+     * example,\n+     * {@snippet lang=\"java\" :\n+     *     NumberFormat.getInstance(l).parse(s).floatValue();\n+     * }\n+     * where {@code l} is the desired locale, or\n+     * {@link java.util.Locale#ROOT} if locale insensitive.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Float.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2004,1 +2004,2 @@\n-            long flags = flags();\n+            \/\/ just in case the method is restricted but that is not a modifier\n+            long flags = flags() & ~RESTRICTED;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -341,7 +341,0 @@\n-\n-    \/** The current `this' symbol.\n-     *  @param env    The current environment.\n-     *\/\n-    Symbol thisSym(DiagnosticPosition pos, Env<AttrContext> env) {\n-        return rs.resolveSelf(pos, env, env.enclClass.sym, names._this);\n-    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -127,0 +127,1 @@\n+containers\/docker\/TestJFREvents.java 8327723 linux-x64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -186,0 +186,1 @@\n+java\/awt\/FullScreen\/BufferStrategyExceptionTest\/BufferStrategyExceptionTest.java 8246558 windows-all\n@@ -645,0 +646,1 @@\n+javax\/sound\/sampled\/Clip\/ClipFlushCrash.java 8308395 linux-x64\n","filename":"test\/jdk\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}