{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-        try (Stream<Method> stream = callerSensitiveMethods(Object.class.getModule())) {\n+        try (Stream<Method> stream = callerSensitiveMethods(Object.class.getModule()).stream()) {\n@@ -104,1 +104,1 @@\n-        try (Stream<Method> stream = callerSensitiveMethods(Object.class.getModule())) {\n+        try (Stream<Method> stream = callerSensitiveMethods(Object.class.getModule()).stream()) {\n@@ -399,1 +399,1 @@\n-     * Returns a stream of all caller sensitive methods on public classes in packages\n+     * Returns a List of all caller sensitive methods on public classes in packages\n@@ -401,0 +401,1 @@\n+     * Returns a List instead of a stream so the ModuleReader can be closed before returning.\n@@ -402,1 +403,1 @@\n-    static Stream<Method> callerSensitiveMethods(Module module) {\n+    static List<Method> callerSensitiveMethods(Module module) {\n@@ -422,1 +423,1 @@\n-                    .flatMap(List::stream);\n+                    .flatMap(List::stream).toList();\n","filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/CallerSensitiveAccess.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}