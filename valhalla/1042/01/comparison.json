{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 8196830 8235351 8257874\n+ * @bug 8196830 8235351 8257874 8327639\n@@ -53,0 +53,1 @@\n+import org.testng.annotations.BeforeClass;\n@@ -59,0 +60,7 @@\n+    \/\/ Cache the list of Caller Sensitive Methods\n+    private static List<Method> CALLER_SENSITIVE_METHODS;\n+\n+    @BeforeClass\n+    private void setupCallerSensitiveMethods() {\n+        CALLER_SENSITIVE_METHODS = callerSensitiveMethods(Object.class.getModule());\n+    }\n@@ -65,4 +73,3 @@\n-        try (Stream<Method> stream = callerSensitiveMethods(Object.class.getModule())) {\n-            return stream.map(m -> new Object[]{m, shortDescription(m)})\n-                    .toArray(Object[][]::new);\n-        }\n+        return CALLER_SENSITIVE_METHODS.stream()\n+                .map(m -> new Object[]{m, shortDescription(m)})\n+                .toArray(Object[][]::new);\n@@ -104,2 +111,1 @@\n-        try (Stream<Method> stream = callerSensitiveMethods(Object.class.getModule())) {\n-            return stream\n+        return CALLER_SENSITIVE_METHODS.stream()\n@@ -110,1 +116,0 @@\n-        }\n@@ -399,1 +404,1 @@\n-     * Returns a stream of all caller sensitive methods on public classes in packages\n+     * Returns a List of all caller sensitive methods on public classes in packages\n@@ -401,0 +406,1 @@\n+     * Returns a List instead of a stream so the ModuleReader can be closed before returning.\n@@ -402,1 +408,1 @@\n-    static Stream<Method> callerSensitiveMethods(Module module) {\n+    static List<Method> callerSensitiveMethods(Module module) {\n@@ -422,1 +428,1 @@\n-                    .flatMap(List::stream);\n+                    .flatMap(List::stream).toList();\n","filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/CallerSensitiveAccess.java","additions":18,"deletions":12,"binary":false,"changes":30,"status":"modified"}]}