{"files":[{"patch":"@@ -6252,7 +6252,0 @@\n-void Assembler::btl(Register dst, int imm8) {\n-  int encode = prefix_and_encode(dst->encoding());\n-  emit_int16(0x0F, (unsigned char)0xBA);\n-  emit_int8(modrm_encoding(0x3, rsp->encoding() \/* \/4 *\/ , encode));\n-  emit_int8(imm8);\n-}\n-\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1733,2 +1733,0 @@\n-  void btl(Register dst, int imm8);\n-\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3005,2 +3005,2 @@\n-  btl(temp_reg, ResolvedFieldEntry::is_null_free_inline_type_shift);\n-  jcc(Assembler::carrySet, is_null_free_inline_type);\n+  testl(temp_reg, 1 << ResolvedFieldEntry::is_null_free_inline_type_shift);\n+  jcc(Assembler::notEqual, is_null_free_inline_type);\n@@ -3011,2 +3011,2 @@\n-  btl(temp_reg, ResolvedFieldEntry::is_null_free_inline_type_shift);\n-  jcc(Assembler::carryClear, not_null_free_inline_type);\n+  testl(temp_reg, 1 << ResolvedFieldEntry::is_null_free_inline_type_shift);\n+  jcc(Assembler::equal, not_null_free_inline_type);\n@@ -3017,2 +3017,2 @@\n-  btl(temp_reg, ResolvedFieldEntry::is_flat_shift);\n-  jcc(Assembler::carrySet, is_flat);\n+  testl(temp_reg, 1 << ResolvedFieldEntry::is_flat_shift);\n+  jcc(Assembler::notEqual, is_flat);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}