{"files":[{"patch":"@@ -1063,25 +1063,0 @@\n-    \/\/ TODO 8239003 Re-enable\n-    \/*\n-    \/\/ Same as test39 but Unsafe.putInt to buffer is not intrinsified\/compiled\n-    @DontCompile\n-    public void test54_callee(Object v) { \/\/ Use Object here to make sure the argument is not scalarized (otherwise larval information is lost)\n-        U.putInt(v, X_OFFSET, rI);\n-    }\n-\n-    @Test\n-    public MyValue1 test54(MyValue1 v) {\n-        v = U.makePrivateBuffer(v);\n-        test54_callee(v);\n-        v = U.finishPrivateBuffer(v);\n-        return v;\n-    }\n-\n-    @Run(test = \"test54\")\n-    @Warmup(10000) \/\/ Fill up the TLAB to trigger slow path allocation\n-    public void test54_verifier() {\n-        MyValue1 v = MyValue1.createWithFieldsInline(rI, rL);\n-        MyValue1 res = test54(v.setX(v, 0));\n-        Asserts.assertEQ(res.hash(), v.hash());\n-    }\n-    *\/\n-\n@@ -1588,2 +1563,0 @@\n-    \/\/ TODO 8284443 Fix this in GraphKit::gen_checkcast\n-    \/*\n@@ -1606,1 +1579,0 @@\n-    *\/\n@@ -1697,2 +1669,0 @@\n-    \/*\n-    TODO: 8335256: Properly handle merging of value object oops\n@@ -1700,1 +1670,1 @@\n-    @IR(failOn = {CALL_UNSAFE, ALLOC})\n+    @IR(failOn = {CALL_UNSAFE})\n@@ -1717,1 +1687,0 @@\n-    *\/\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestIntrinsics.java","additions":1,"deletions":32,"binary":false,"changes":33,"status":"modified"}]}