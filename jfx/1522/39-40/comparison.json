{"files":[{"patch":"@@ -43,2 +43,3 @@\n- *                 the start value, and {@code t = 1} produces the end value. This interpolation type\n- *                 is usually applicable for numeric components.<\/td>\n+ *                 the start value, {@code t = 1} produces the end value, and {@code 0 < t < 1} produces\n+ *                 {@code (1 - t) * start + t * end}. This interpolation type is usually applicable for\n+ *                 numeric components.<\/td>\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/Interpolatable.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -103,1 +103,0 @@\n-     * @param propertyName the name of the targeted CSS property or sub-property\n@@ -107,0 +106,17 @@\n+    @Deprecated(forRemoval = true)\n+    public TransitionEvent(EventType<? extends Event> eventType,\n+                           StyleableProperty<?> property,\n+                           Duration elapsedTime) {\n+        this(eventType, property, property.getCssMetaData().getProperty(), elapsedTime);\n+    }\n+\n+    \/**\n+     * Creates a new instance of the {@code TransitionEvent} class.\n+     *\n+     * @param eventType the event type\n+     * @param property the {@code StyleableProperty} that is targeted by the transition\n+     * @param propertyName the name of the targeted CSS property or sub-property\n+     * @param elapsedTime the time that has elapsed since the transition has entered its active period\n+     * @throws NullPointerException if any of the arguments is {@code null}\n+     * @since 24\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/TransitionEvent.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-     * @interpolationType see {@link BackgroundFill}\n+     * @interpolationType see {@link Paint}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/BackgroundFill.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,9 +50,0 @@\n- * <p>\n- * {@code BorderStroke} supports interpolation between the following heterogeneous paint combinations:\n- * <ul>\n- *     <li>{@link Color} ↔ {@link LinearGradient}\n- *     <li>{@link Color} ↔ {@link RadialGradient}\n- * <\/ul>\n- * Heterogeneous paint interpolation converts the {@code Color} to a visually identical gradient paint,\n- * and then performs a gradient paint interpolation. If heterogeneous paints cannot be interpolated as\n- * described, the paints are interpolated <a href=\"..\/..\/animation\/Interpolatable.html#discrete\">as discrete<\/a>.\n@@ -89,1 +80,1 @@\n-     * @interpolationType see {@link BorderStroke}\n+     * @interpolationType see {@link Paint}\n@@ -103,1 +94,1 @@\n-     * @interpolationType see {@link BorderStroke}\n+     * @interpolationType see {@link Paint}\n@@ -114,1 +105,1 @@\n-     * @interpolationType see {@link BorderStroke}\n+     * @interpolationType see {@link Paint}\n@@ -125,1 +116,1 @@\n-     * @interpolationType see {@link BorderStroke}\n+     * @interpolationType see {@link Paint}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/BorderStroke.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -142,0 +142,1 @@\n+     * @interpolationType <a href=\"..\/..\/animation\/Interpolatable.html#discrete\">discrete<\/a>\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/paint\/ImagePattern.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}