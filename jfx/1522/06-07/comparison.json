{"files":[{"patch":"@@ -237,15 +237,14 @@\n-\n-        T item1 = null, item2 = null, item3 = null, item4 = null, item5 = null, item6 = null, item7 = null;\n-        T item0 = firstList.get(0).interpolate(secondList.get(0), t);\n-        boolean same = item0 == firstList.get(0);\n-\n-        if (listSize > 1) {\n-            item1 = firstList.get(1).interpolate(secondList.get(1), t);\n-            same &= item1 == firstList.get(1);\n-\n-            if (listSize > 2) {\n-                item2 = firstList.get(2).interpolate(secondList.get(2), t);\n-                same &= item2 == firstList.get(2);\n-\n-                if (listSize > 3) {\n-                    item3 = firstList.get(3).interpolate(secondList.get(3), t);\n+        \n+        T item0 = null, item1 = null, item2 = null, item3 = null, item4 = null, item5 = null, item6 = null, item7 = null;\n+        boolean same = true;\n+\n+        switch (listSize) { \/\/ fall-through intended\n+            case 8: item7 = firstList.get(7).interpolate(secondList.get(7), t);\n+                    same &= item7 == firstList.get(7);\n+            case 7: item6 = firstList.get(6).interpolate(secondList.get(6), t);\n+                    same &= item6 == firstList.get(6);\n+            case 6: item5 = firstList.get(5).interpolate(secondList.get(5), t);\n+                    same &= item5 == firstList.get(5);\n+            case 5: item4 = firstList.get(4).interpolate(secondList.get(4), t);\n+                    same &= item4 == firstList.get(4);\n+            case 4: item3 = firstList.get(3).interpolate(secondList.get(3), t);\n@@ -253,22 +252,6 @@\n-\n-                    if (listSize > 4) {\n-                        item4 = firstList.get(4).interpolate(secondList.get(4), t);\n-                        same &= item4 == firstList.get(4);\n-\n-                        if (listSize > 5) {\n-                            item5 = firstList.get(5).interpolate(secondList.get(5), t);\n-                            same &= item5 == firstList.get(5);\n-\n-                            if (listSize > 6) {\n-                                item6 = firstList.get(6).interpolate(secondList.get(6), t);\n-                                same &= item6 == firstList.get(6);\n-\n-                                if (listSize > 7) {\n-                                    item7 = firstList.get(7).interpolate(secondList.get(7), t);\n-                                    same &= item7 == firstList.get(7);\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n+            case 3: item2 = firstList.get(2).interpolate(secondList.get(2), t);\n+                    same &= item2 == firstList.get(2);\n+            case 2: item1 = firstList.get(1).interpolate(secondList.get(1), t);\n+                    same &= item1 == firstList.get(1);\n+            case 1: item0 = firstList.get(0).interpolate(secondList.get(0), t);\n+                    same &= item0 == firstList.get(0);\n@@ -283,10 +266,0 @@\n-        newArray[0] = item0;\n-\n-        if (listSize > 1) {\n-            newArray[1] = item1;\n-\n-            if (listSize > 2) {\n-                newArray[2] = item2;\n-\n-                if (listSize > 3) {\n-                    newArray[3] = item3;\n@@ -294,17 +267,9 @@\n-                    if (listSize > 4) {\n-                        newArray[4] = item4;\n-\n-                        if (listSize > 5) {\n-                            newArray[5] = item5;\n-\n-                            if (listSize > 6) {\n-                                newArray[6] = item6;\n-\n-                                if (listSize > 7) {\n-                                    newArray[7] = item7;\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n+        switch (listSize) { \/\/ fall-through intended\n+            case 8: newArray[7] = item7;\n+            case 7: newArray[6] = item6;\n+            case 6: newArray[5] = item5;\n+            case 5: newArray[4] = item4;\n+            case 4: newArray[3] = item3;\n+            case 3: newArray[2] = item2;\n+            case 2: newArray[1] = item1;\n+            case 1: newArray[0] = item0;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/util\/Utils.java","additions":29,"deletions":64,"binary":false,"changes":93,"status":"modified"}]}