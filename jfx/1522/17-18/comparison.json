{"files":[{"patch":"@@ -134,1 +134,2 @@\n-            set(progress < 1 ? startValue + (int)((endValue - startValue) * progress) : endValue);\n+            \/\/ Integers are interpolated in real number space and rounded to the nearest integer.\n+            set(progress < 1 ? (int)Math.round(startValue + (endValue - startValue) * progress) : endValue);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleableIntegerProperty.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -136,1 +136,2 @@\n-            set(progress < 1 ? startValue + (long)((endValue - startValue) * progress) : endValue);\n+            \/\/ Longs are interpolated in real number space and rounded to the nearest long.\n+            set(progress < 1 ? Math.round(startValue + (endValue - startValue) * progress) : endValue);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleableLongProperty.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -122,0 +122,2 @@\n+    static final Duration ONE_SECOND = Duration.seconds(1);\n+\n@@ -125,7 +127,7 @@\n-                new TransitionDefinition(\"-fx-boolean-property\", Duration.ONE, Duration.ZERO, Interpolator.LINEAR),\n-                new TransitionDefinition(\"-fx-double-property\", Duration.ONE, Duration.ZERO, Interpolator.LINEAR),\n-                new TransitionDefinition(\"-fx-float-property\", Duration.ONE, Duration.ZERO, Interpolator.LINEAR),\n-                new TransitionDefinition(\"-fx-integer-property\", Duration.ONE, Duration.ZERO, Interpolator.LINEAR),\n-                new TransitionDefinition(\"-fx-long-property\", Duration.ONE, Duration.ZERO, Interpolator.LINEAR),\n-                new TransitionDefinition(\"-fx-interpolatable-property\", Duration.ONE, Duration.ZERO, Interpolator.LINEAR),\n-                new TransitionDefinition(\"-fx-component-transitionable-property\", Duration.ONE, Duration.ZERO, Interpolator.LINEAR)\n+                new TransitionDefinition(\"-fx-boolean-property\", ONE_SECOND, Duration.ZERO, Interpolator.LINEAR),\n+                new TransitionDefinition(\"-fx-double-property\", ONE_SECOND, Duration.ZERO, Interpolator.LINEAR),\n+                new TransitionDefinition(\"-fx-float-property\", ONE_SECOND, Duration.ZERO, Interpolator.LINEAR),\n+                new TransitionDefinition(\"-fx-integer-property\", ONE_SECOND, Duration.ZERO, Interpolator.LINEAR),\n+                new TransitionDefinition(\"-fx-long-property\", ONE_SECOND, Duration.ZERO, Interpolator.LINEAR),\n+                new TransitionDefinition(\"-fx-interpolatable-property\", ONE_SECOND, Duration.ZERO, Interpolator.LINEAR),\n+                new TransitionDefinition(\"-fx-component-transitionable-property\", ONE_SECOND, Duration.ZERO, Interpolator.LINEAR)\n@@ -174,0 +176,5 @@\n+    void setAnimationTime(long time) {\n+        toolkit.setCurrentTime(time);\n+        toolkit.handleAnimation();\n+    }\n+\n@@ -251,1 +258,1 @@\n-        toolkit.setCurrentTime(0);\n+        setAnimationTime(0);\n@@ -263,2 +270,1 @@\n-        toolkit.setCurrentTime(500);\n-        toolkit.handleAnimation();\n+        setAnimationTime(500);\n@@ -275,0 +281,46 @@\n+\n+    @Test\n+    void testIntegersAreInterpolatedInRealNumberSpace() {\n+        ((Group)scene.getRoot()).getChildren().setAll(testBean);\n+        var property = new SimpleStyleableIntegerProperty(integerPropertyMetadata, testBean, null);\n+\n+        \/\/ Setting a value for the first time doesn't start a transition.\n+        setAnimationTime(0);\n+        property.applyStyle(StyleOrigin.USER, 0);\n+\n+        \/\/ Start the transition and sample the outputs.\n+        property.applyStyle(StyleOrigin.USER, 2);\n+        setAnimationTime(249);\n+        assertEquals(0, property.get());\n+        setAnimationTime(250);\n+        assertEquals(1, property.get());\n+        setAnimationTime(500);\n+        assertEquals(1, property.get());\n+        setAnimationTime(749);\n+        assertEquals(1, property.get());\n+        setAnimationTime(750);\n+        assertEquals(2, property.get());\n+    }\n+\n+    @Test\n+    void testLongsAreInterpolatedInRealNumberSpace() {\n+        ((Group)scene.getRoot()).getChildren().setAll(testBean);\n+        var property = new SimpleStyleableLongProperty(longPropertyMetadata, testBean, null);\n+\n+        \/\/ Setting a value for the first time doesn't start a transition.\n+        setAnimationTime(0);\n+        property.applyStyle(StyleOrigin.USER, 0);\n+\n+        \/\/ Start the transition and sample the outputs.\n+        property.applyStyle(StyleOrigin.USER, 2);\n+        setAnimationTime(249);\n+        assertEquals(0, property.get());\n+        setAnimationTime(250);\n+        assertEquals(1, property.get());\n+        setAnimationTime(500);\n+        assertEquals(1, property.get());\n+        setAnimationTime(749);\n+        assertEquals(1, property.get());\n+        setAnimationTime(750);\n+        assertEquals(2, property.get());\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StyleableProperty_transition_Test.java","additions":62,"deletions":10,"binary":false,"changes":72,"status":"modified"}]}