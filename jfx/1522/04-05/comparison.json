{"files":[{"patch":"@@ -77,1 +77,0 @@\n-        int index = 0;\n@@ -88,2 +87,1 @@\n-                    newValues[index++] = value;\n-                    ++numNonNullValues;\n+                    newValues[numNonNullValues++] = value;\n@@ -95,2 +93,1 @@\n-                    newValues[index++] = value;\n-                    ++numNonNullValues;\n+                    newValues[numNonNullValues++] = value;\n@@ -120,1 +117,1 @@\n-        for (int i = 0, j = 0; i < elements.length; ++i) {\n+        for (int i = 0; i < elements.length; ++i) {\n@@ -122,2 +119,1 @@\n-                newValues[j++] = elements[i];\n-                ++numNonNullValues;\n+                newValues[numNonNullValues++] = elements[i];\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/UnmodifiableArrayList.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-     * @since 23\n+     * @since 24\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/geometry\/Insets.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -9105,3 +9105,3 @@\n-        \/\/ Make a copy of the list, because completing the timers causes them to be removed\n-        \/\/ from the list, which would result in a ConcurrentModificationException.\n-        for (TransitionTimer timer : Map.copyOf(transitionTimers).values()) {\n+        \/\/ Make a copy of the timers, because completing the timers causes them to be removed\n+        \/\/ from the map, which would result in a ConcurrentModificationException.\n+        for (TransitionTimer timer : List.copyOf(transitionTimers.values())) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}