{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -606,3 +606,0 @@\n-        if (t2 == null) {\n-            t2 = Params.DEFAULT_CARET_BLINK_PERIOD;\n-        }\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/com\/sun\/jfx\/incubator\/scene\/control\/richtext\/VFlow.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -388,1 +388,1 @@\n-     * Determines the caret blink period.  A {@code null} value will be interpreted as 1000 ms.\n+     * Determines the caret blink period.  This property cannot be set to {@code null}.\n@@ -394,1 +394,1 @@\n-     * @defaultValue null\n+     * @defaultValue 1000 ms\n@@ -402,2 +402,14 @@\n-                null\n-            );\n+                Params.DEFAULT_CARET_BLINK_PERIOD\n+            ) {\n+                private Duration old;\n+\n+                @Override\n+                public void invalidated() {\n+                    final Duration v = get();\n+                    if (v == null) {\n+                        set(old);\n+                        throw new NullPointerException(\"cannot set caretBlinkPeriodProperty to null\");\n+                    }\n+                    old = v;\n+                }\n+            };\n@@ -413,1 +425,1 @@\n-        return caretBlinkPeriod == null ? null : caretBlinkPeriod.get();\n+        return caretBlinkPeriod == null ? Params.DEFAULT_CARET_BLINK_PERIOD : caretBlinkPeriod.get();\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/jfx\/incubator\/scene\/control\/richtext\/RichTextArea.java","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"}]}