{"files":[{"patch":"@@ -214,3 +214,24 @@\n-            \/\/ find category index in case data contains duplicate categories\n-            int i = series.getData().size() != categoryAxis.getCategories().size() ? series.getItemIndex(item) :\n-                    itemIndex;\n+            int seriesCount = getDataSize();\n+            int categoryCount = categoryAxis.getCategories().size();\n+\n+            int categoryIndex;\n+            if (seriesCount == 1 && itemIndex == categoryCount) {\n+                \/\/ shortcut if there is only one series and data contains no duplicates\n+                categoryIndex = categoryCount;\n+            } else {\n+                \/\/ There may be data items with duplicate categories. Find category insertion index on the axis\n+                \/\/ by looking at the concatenation of the data of all series, skipping duplicate categories.\n+                categoryIndex = 0;\n+                var uniqueCategories = new HashSet<String>();\n+                for (Map<String, Data<X,Y>> catMap : seriesCategoryMap.values()) {\n+                    for (String cat : catMap.keySet()) {\n+                        if (cat == category) {\n+                            break;\n+                        }\n+                        if (uniqueCategories.add(cat)) {\n+                            categoryIndex++;\n+                        }\n+                    }\n+                }\n+            }\n+\n@@ -218,1 +239,1 @@\n-            categoryAxis.getCategories().add(i, category);\n+            categoryAxis.getCategories().add(categoryIndex, category);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/BarChart.java","additions":25,"deletions":4,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+import java.util.List;\n+\n@@ -182,0 +184,13 @@\n+    @Test\n+    public void testAddingNonEmptySeries() {\n+        startApp();\n+        ObservableList<XYChart.Data<String, Number>> list = FXCollections.observableArrayList();\n+        list.add(new XYChart.Data<>(\"1\", 1));\n+        list.add(new XYChart.Data<>(\"2\", 2));\n+        list.add(new XYChart.Data<>(\"3\", 3));\n+        BarChart<String, Number> bc = new BarChart<>(new CategoryAxis(), new NumberAxis());\n+        bc.getData().add(new Series<>());\n+        bc.getData().getFirst().setData(list);\n+        assertEquals(3, XYChartShim.Series_getDataSize(bc.getData().getFirst()));\n+    }\n+\n@@ -194,0 +209,33 @@\n+\n+    @Test\n+    public void testAddingMultipleSeriesWithDuplicateCategories() {\n+        startApp();\n+        var series1 = new Series<String, Number>();\n+        var series2 = new Series<String, Number>();\n+        BarChart<String, Number> bc = new BarChart<>(new CategoryAxis(), new NumberAxis());\n+        bc.getData().add(series1);\n+        bc.getData().add(series2);\n+\n+        series1.getData().addAll(List.of(\n+            new XYChart.Data<>(\"1\", 1),\n+            new XYChart.Data<>(\"1\", 2), \/\/ duplicate category\n+            new XYChart.Data<>(\"2\", 3)\n+        ));\n+\n+        series2.getData().addAll(List.of(\n+            new XYChart.Data<>(\"3\", 4),\n+            new XYChart.Data<>(\"2\", 5), \/\/ duplicate category with series1\n+            new XYChart.Data<>(\"4\", 6)\n+        ));\n+\n+        assertEquals(2, XYChartShim.Series_getDataSize(series1));\n+        assertEquals(3, XYChartShim.Series_getDataSize(series2));\n+        assertEquals(5, XYChartShim.getPlotChildren(bc).size());\n+\n+        var categories = ((CategoryAxis)bc.getXAxis()).getCategories();\n+        assertEquals(4, categories.size());\n+        assertEquals(\"1\", categories.get(0));\n+        assertEquals(\"2\", categories.get(1));\n+        assertEquals(\"3\", categories.get(2));\n+        assertEquals(\"4\", categories.get(3));\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/chart\/BarChartTest.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"modified"}]}