{"files":[{"patch":"@@ -51,1 +51,0 @@\n-\n@@ -261,2 +260,0 @@\n-    gdk_window_set_startup_id(gdk_window, NULL);\n-\n@@ -943,1 +940,1 @@\n-        if (event->new_window_state == GDK_WINDOW_STATE_FOCUSED) return;\n+        if (event->changed_mask == GDK_WINDOW_STATE_FOCUSED) return;\n@@ -949,2 +946,1 @@\n-        \/\/ Only state mask\n-        if (event->new_window_state == GDK_WINDOW_STATE_ABOVE) return;\n+        if (event->changed_mask == GDK_WINDOW_STATE_ABOVE) return;\n@@ -974,1 +970,1 @@\n-    if (event->new_window_state == GDK_WINDOW_STATE_ICONIFIED) return;\n+    if (event->changed_mask == GDK_WINDOW_STATE_ICONIFIED) return;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#define USER_PTR_TO_CTX(value) ((WindowContext *) value)\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -58,2 +58,2 @@\n-    private static final int WIDTH = 300;\n-    private static final int HEIGHT = 300;\n+    private static final int WIDTH = 200;\n+    private static final int HEIGHT = 200;\n@@ -299,35 +299,1 @@\n-\n-    \/\/ See JDK8220272\n-    @Test\n-    void testWindowShowOrder() {\n-        CountDownLatch shownLatch = new CountDownLatch(1);\n-        Util.runAndWait(() -> {\n-            stage0 = createStage(StageStyle.DECORATED, COLOR0, null, null, -1, -1);\n-            stage1 = createStage(StageStyle.DECORATED, COLOR1, stage0, null, -1, -1);\n-            stage2 = createStage(StageStyle.DECORATED, COLOR2, stage0, null, -1, -1);\n-            stage3 = createStage(StageStyle.DECORATED, COLOR3, stage2, Modality.WINDOW_MODAL, -1, -1);\n-\n-            stage0.setTitle(\"First Stage\");\n-            stage1.setTitle(\"Second Stage\");\n-            stage2.setTitle(\"Third Stage\");\n-            stage3.setTitle(\"Last Stage\");\n-\n-            stage0.setOnShown(e -> Platform.runLater(shownLatch::countDown));\n-            stage0.show();\n-        });\n-\n-        Util.sleep(WAIT_TIME);\n-        Util.await(shownLatch);\n-\n-        Util.doTimeLine(WAIT_TIME,\n-                () -> {\n-                    stage1.show();\n-                    stage2.show();\n-                    stage3.show();\n-                },\n-                () -> {\n-                    assertTrue(stage3.isFocused());\n-                    assertColorEquals(COLOR3, stage3);\n-                });\n-    }\n-}\n+   }\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/stage\/StageOwnershipTest.java","additions":3,"deletions":37,"binary":false,"changes":40,"status":"modified"}]}