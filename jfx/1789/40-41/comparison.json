{"files":[{"patch":"@@ -1312,6 +1312,0 @@\n-        if (owner) {\n-            \/\/ Report back that it's not fullscreen\n-            notify_fullscreen(false);\n-            return;\n-        }\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-        Util.doTimeLine(WAIT_TIME,\n+        Util.doTimeLine(LONG_WAIT_TIME,\n@@ -299,74 +299,0 @@\n-\n-    private static Stream<Arguments> getFullScreenOnChildTestParameters() {\n-        return Stream.of(StageStyle.DECORATED, StageStyle.UNDECORATED, StageStyle.EXTENDED)\n-                .flatMap(stageStyle -> Stream.of(Modality.NONE, Modality.WINDOW_MODAL)\n-                        .map(modality -> Arguments.of(stageStyle, modality)));\n-    }\n-\n-\n-    @ParameterizedTest(name = PARAMETERIZED_TEST_DISPLAY)\n-    @MethodSource(\"getFullScreenOnChildTestParameters\")\n-    void fullScreenOnChildAfterShowShouldNotBeAllowed(StageStyle style, Modality modality) {\n-        CountDownLatch stage0Latch = new CountDownLatch(1);\n-        Util.runAndWait(() -> {\n-                    stage0 = createStage(style, COLOR0, null, null, 0, 0);\n-                    stage0.setWidth(WIDTH * 3);\n-                    stage0.setHeight(HEIGHT * 3);\n-\n-                    stage0.setOnShown(e -> Platform.runLater(stage0Latch::countDown));\n-                    stage0.show();\n-                });\n-        Util.await(stage0Latch);\n-        Util.sleep(WAIT_TIME);\n-\n-        CountDownLatch stage1Latch = new CountDownLatch(1);\n-        Util.runAndWait(() -> {\n-            stage1 = createStage(style, COLOR1, stage0, modality, 0, 0);\n-            stage1.setOnShown(e -> Platform.runLater(stage1Latch::countDown));\n-            stage1.show();\n-        });\n-\n-        Util.await(stage1Latch);\n-        Util.sleep(WAIT_TIME);\n-\n-        Util.doTimeLine(LONG_WAIT_TIME,\n-                () -> stage1.setFullScreen(true),\n-                () -> {\n-                    assertFalse(stage1.isFullScreen());\n-                    Color color = getColor(WIDTH * 2, HEIGHT * 2);\n-                    assertColorEquals(COLOR0, color, TOLERANCE);\n-                });\n-    }\n-\n-    @ParameterizedTest(name = PARAMETERIZED_TEST_DISPLAY)\n-    @MethodSource(\"getFullScreenOnChildTestParameters\")\n-    void fullScreenOnChildBeforeShowShouldNotBeAllowed(StageStyle style, Modality modality) {\n-        CountDownLatch stage0Latch = new CountDownLatch(1);\n-        Util.runAndWait(() -> {\n-                    stage0 = createStage(style, COLOR0, null, null, 0, 0);\n-                    stage0.setWidth(WIDTH * 3);\n-                    stage0.setHeight(HEIGHT * 3);\n-\n-                    stage0.setOnShown(e -> Platform.runLater(stage0Latch::countDown));\n-                    stage0.show();\n-                });\n-        Util.await(stage0Latch);\n-        Util.sleep(WAIT_TIME);\n-\n-        CountDownLatch stage1Latch = new CountDownLatch(1);\n-        Util.runAndWait(() -> {\n-            stage1 = createStage(style, COLOR1, stage0, modality, 0, 0);\n-            stage1.setFullScreen(true);\n-            stage1.setOnShown(e -> Platform.runLater(stage1Latch::countDown));\n-            stage1.show();\n-        });\n-\n-        Util.await(stage1Latch);\n-        Util.sleep(LONG_WAIT_TIME);\n-\n-        Util.runAndWait(() -> {\n-            assertFalse(stage1.isFullScreen());\n-            Color color = getColor(WIDTH * 2, HEIGHT * 2);\n-            assertColorEquals(COLOR0, color, TOLERANCE);\n-        });\n-    }\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/stage\/StageOwnershipTest.java","additions":1,"deletions":75,"binary":false,"changes":76,"status":"modified"}]}