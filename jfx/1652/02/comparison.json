{"files":[{"patch":"@@ -542,2 +542,1 @@\n-        supported by each Node type are given in the tables within this reference. Note that JavaFX does not currently\n-        support structural pseudo&#8209;classes.\n+        supported by each Node type are given in the tables within this reference.\n@@ -872,1 +871,1 @@\n-    <li>The structural pseudo&#8209;classes are not supported. <\/li>\n+    <li>Only the \":root\" structural pseudo&#8209;class is supported.<\/li>\n@@ -1532,1 +1531,1 @@\n-    <p class=\"example\">.root { abc: #f00 }<br>\n+    <p class=\"example\">:root { abc: #f00 }<br>\n@@ -1828,1 +1827,1 @@\n-    <p class=\"styleclass\">Style class: .root.popup<\/p>\n+    <p class=\"styleclass\">Style class: :root.popup<\/p>\n@@ -1830,1 +1829,1 @@\n-        Scene's root gets the .root style-class by default. If the Scene is the root scene of a PopupWindow, then the\n+        Scene's root gets the :root pseudo-class by default. If the Scene is the root scene of a PopupWindow, then the\n@@ -1832,1 +1831,1 @@\n-        the CSS rule <code>.root.popup { \/* declarations *\/ }<\/code>\n+        the CSS rule <code>:root.popup { \/* declarations *\/ }<\/code>\n@@ -2065,0 +2064,19 @@\n+    <h4>Pseudo-classes<\/h4>\n+    <table class=\"csspropertytable\">\n+        <caption>Available CSS Pseudo-classes<\/caption>\n+        <thead>\n+        <tr>\n+            <th class=\"propertyname\" scope=\"col\">CSS Pseudo-class<\/th>\n+            <th scope=\"col\">Comments<\/th>\n+        <\/tr>\n+        <\/thead>\n+        <tbody>\n+        <tr>\n+            <th class=\"propertyname\" scope=\"row\">root<\/th>\n+            <td>applies when the <code>Parent<\/code> is the root node of a <code>Scene<\/code> or <code>SubScene<\/code><\/td>\n+        <\/tr>\n+        <tr>\n+            <td colspan=\"2\" class=\"parents\" scope=\"row\">Also has all pseudo&#8209;classes of <a href=\"#node\">Node<\/a><\/td>\n+        <\/tr>\n+        <\/tbody>\n+    <\/table>\n@@ -4297,1 +4315,1 @@\n-    style-class .root.popup<\/p>\n+    style-class :root.popup<\/p>\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/doc-files\/cssref.html","additions":26,"deletions":8,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -73,0 +73,1 @@\n+import javafx.css.PseudoClass;\n@@ -1186,1 +1187,3 @@\n-     *\n+     * <p>\n+     * The {@code :root} pseudo-class matches the root node.\n+     * <p>\n@@ -1204,1 +1207,0 @@\n-\n@@ -1238,0 +1240,1 @@\n+                        oldRoot.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"root\"), false);\n@@ -1241,0 +1244,1 @@\n+                    _value.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"root\"), true);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Scene.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import javafx.css.PseudoClass;\n@@ -259,1 +260,3 @@\n-     *\n+     * <p>\n+     * The {@code :root} pseudo-class matches the root node.\n+     * <p>\n@@ -320,0 +323,1 @@\n+                        oldRoot.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"root\"), false);\n@@ -323,0 +327,1 @@\n+                    _value.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"root\"), true);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/SubScene.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -65,0 +66,1 @@\n+import javafx.scene.layout.Background;\n@@ -76,4 +78,1 @@\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNull;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.fail;\n+import static org.junit.jupiter.api.Assertions.*;\n@@ -781,0 +780,17 @@\n+    @Test\n+    public void testRootPseudoClassSelectsRootNode() {\n+        var root = new StackPane();\n+\n+        root.getStylesheets().add(\"data:base64,\" + Base64.getEncoder().encodeToString(\"\"\"\n+            :root {\n+                -fx-background-color: red;\n+            }\n+            \"\"\".getBytes(StandardCharsets.UTF_8)));\n+\n+        assertNotEquals(Background.fill(Color.RED), root.getBackground());\n+\n+        Scene scene = new Scene(root);\n+        scene.getRoot().applyCss();\n+\n+        assertEquals(Background.fill(Color.RED), root.getBackground());\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StylesheetTest.java","additions":20,"deletions":4,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import javafx.css.PseudoClass;\n@@ -240,0 +241,12 @@\n+    @Test\n+    public void testRootPseudoClassIsSetOnRootNode() {\n+        var root = PseudoClass.getPseudoClass(\"root\");\n+        Scene scene = new Scene(new Group());\n+        Group g = new Group();\n+        assertFalse(g.getPseudoClassStates().contains(root));\n+        scene.setRoot(g);\n+        assertTrue(g.getPseudoClassStates().contains(root));\n+        scene.setRoot(new Group());\n+        assertFalse(g.getPseudoClassStates().contains(root));\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/SceneTest.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import javafx.css.PseudoClass;\n@@ -152,0 +153,12 @@\n+    @Test\n+    public void testRootPseudoClassIsSetOnRootNode() {\n+        var root = PseudoClass.getPseudoClass(\"root\");\n+        SubScene scene = new SubScene(new Group(), 10, 10);\n+        Group g = new Group();\n+        assertFalse(g.getPseudoClassStates().contains(root));\n+        scene.setRoot(g);\n+        assertTrue(g.getPseudoClassStates().contains(root));\n+        scene.setRoot(new Group());\n+        assertFalse(g.getPseudoClassStates().contains(root));\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/SubSceneTest.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}