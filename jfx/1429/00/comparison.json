{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -371,2 +371,2 @@\n-                    if (devPixelScale >= 1.5f) {\n-                        \/\/ Use Mac Retina conventions for >= 1.5f\n+                    \/\/ Use Mac Retina conventions for >= 1.5f (rounded to the next integer scale)\n+                    for (int imageScale = Math.round(devPixelScale); imageScale >= 2; --imageScale) {\n@@ -374,3 +374,4 @@\n-                            String name2x = ImageTools.getScaledImageName(input);\n-                            theStream = ImageTools.createInputStream(name2x);\n-                            imgPixelScale = 2.0f;\n+                            String scaledName = ImageTools.getScaledImageName(input, imageScale);\n+                            theStream = ImageTools.createInputStream(scaledName);\n+                            imgPixelScale = imageScale;\n+                            break;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/ImageStorage.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -454,1 +454,1 @@\n-    public static String getScaledImageName(String path) {\n+    public static String getScaledImageName(String path, int scaleFactor) {\n@@ -466,1 +466,3 @@\n-        result.append(\"@2x\");\n+        result.append(\"@\");\n+        result.append(scaleFactor);\n+        result.append(\"x\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/common\/ImageTools.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,3 +36,3 @@\n-import static org.junit.Assert.*;\n-import org.junit.ComparisonFailure;\n-import org.junit.Test;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.ValueSource;\n@@ -49,0 +49,2 @@\n+import static org.junit.jupiter.api.Assertions.*;\n+\n@@ -60,2 +62,3 @@\n-    @Test\n-    public void testImageNames() {\n+    @ParameterizedTest\n+    @ValueSource(ints = {2, 3, 4})\n+    public void testImageNames(int scale) {\n@@ -63,10 +66,10 @@\n-            { \"image\", \"image@2x\" },\n-            { \"image.ext\", \"image@2x.ext\" },\n-            { \"dir\/image\", \"dir\/image@2x\" },\n-            { \"\/dir.ext\/image.ext\", \"\/dir.ext\/image@2x.ext\" },\n-            { \"file:image\", \"file:image@2x\" },\n-            { \"file:image.ext\", \"file:image@2x.ext\" },\n-            { \"http:\/\/test.com\/image\", \"http:\/\/test.com\/image@2x\" },\n-            { \"http:\/\/test.com\/dir.ext\/image\", \"http:\/\/test.com\/dir.ext\/image@2x\" },\n-            { \"http:\/\/test.com\/image.ext\", \"http:\/\/test.com\/image@2x.ext\" },\n-            { \"http:\/\/test.com\/dir.ext\/image.ext\", \"http:\/\/test.com\/dir.ext\/image@2x.ext\" },\n+            { \"image\", \"image@\" + scale + \"x\" },\n+            { \"image.ext\", \"image@\" + scale + \"x.ext\" },\n+            { \"dir\/image\", \"dir\/image@\" + scale + \"x\" },\n+            { \"\/dir.ext\/image.ext\", \"\/dir.ext\/image@\" + scale + \"x.ext\" },\n+            { \"file:image\", \"file:image@\" + scale + \"x\" },\n+            { \"file:image.ext\", \"file:image@\" + scale + \"x.ext\" },\n+            { \"http:\/\/test.com\/image\", \"http:\/\/test.com\/image@\" + scale + \"x\" },\n+            { \"http:\/\/test.com\/dir.ext\/image\", \"http:\/\/test.com\/dir.ext\/image@\" + scale + \"x\" },\n+            { \"http:\/\/test.com\/image.ext\", \"http:\/\/test.com\/image@\" + scale + \"x.ext\" },\n+            { \"http:\/\/test.com\/dir.ext\/image.ext\", \"http:\/\/test.com\/dir.ext\/image@\" + scale + \"x.ext\" },\n@@ -75,1 +78,1 @@\n-            String name2x = ImageTools.getScaledImageName(names[0]);\n+            String name2x = ImageTools.getScaledImageName(names[0], scale);\n@@ -77,1 +80,1 @@\n-            throw new ComparisonFailure(\"Scaled image names don't match\", names[1], name2x);\n+            fail(\"Scaled image names don't match: expected = \" + names[1] + \", actual = \" + name2x);\n@@ -81,0 +84,12 @@\n+    @ParameterizedTest\n+    @ValueSource(floats = {1, 1.4f, 1.5f, 2.1f, 3.5f, 4f, 5f})\n+    void testScaledImageIsLoaded(float pixelScale) throws IOException {\n+        String url = getResourcePath(\"checker.png\");\n+        ImageFrame[] frames = ImageStorage.getInstance().loadAll(url, null, -1, -1, true, pixelScale, false);\n+        assertEquals(1, frames.length);\n+\n+        \/\/ We don't have test images for pixel scales > 4, so we expect to get 4x for higher pixel scales.\n+        float expectedScale = pixelScale < 4f ? Math.round(pixelScale) : 4f;\n+        assertEquals(expectedScale, frames[0].getPixelScale(), 0.001f);\n+    }\n+\n@@ -95,2 +110,2 @@\n-    @Test(expected = ImageStorageException.class)\n-    public void testCorruptFirstFrame() throws ImageStorageException  {\n+    @Test\n+    public void testCorruptFirstFrame() {\n@@ -98,1 +113,2 @@\n-        new ImageStorage().loadAll(path, null, 0, 0, false, 1.0f, false);\n+        assertThrows(ImageStorageException.class, () ->\n+            new ImageStorage().loadAll(path, null, 0, 0, false, 1.0f, false));\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/iio\/ImageStorageTest.java","additions":37,"deletions":21,"binary":false,"changes":58,"status":"modified"},{"filename":"modules\/javafx.graphics\/src\/test\/resources\/test\/com\/sun\/javafx\/iio\/checker@3x.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/test\/resources\/test\/com\/sun\/javafx\/iio\/checker@4x.png","binary":true,"status":"added"}]}