{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -375,0 +375,1 @@\n+    \/\/ This list needs to be kept in sync with PlatformSupport.cpp in the Glass toolkit for Windows.\n@@ -378,3 +379,3 @@\n-            \"Windows.UIColor.ForegroundColor\", \"foregroundColor\",\n-            \"Windows.UIColor.BackgroundColor\", \"backgroundColor\",\n-            \"Windows.UIColor.AccentColor\", \"accentColor\"\n+            \"Windows.UIColor.Foreground\", \"foregroundColor\",\n+            \"Windows.UIColor.Background\", \"backgroundColor\",\n+            \"Windows.UIColor.Accent\", \"accentColor\"\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinApplication.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -132,0 +132,2 @@\n+\n+    \/\/ Property names need to be kept in sync with WinApplication.java:\n@@ -143,0 +145,1 @@\n+    \/\/ Property names need to be kept in sync with WinApplication.java:\n@@ -181,0 +184,1 @@\n+        \/\/ Property names need to be kept in sync with WinApplication.java:\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/win\/PlatformSupport.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,13 @@\n+        var backgroundColorLabel = new Label();\n+        var foregroundColorLabel = new Label();\n+        var accentColorLabel = new Label();\n+        var colorSchemeLabel = new Label();\n+\n+        Runnable updateColorProperties = () -> {\n+            var preferences = Platform.getPreferences();\n+            backgroundColorLabel.setText(preferences.getBackgroundColor().toString());\n+            foregroundColorLabel.setText(preferences.getForegroundColor().toString());\n+            accentColorLabel.setText(preferences.getAccentColor().toString());\n+            colorSchemeLabel.setText(preferences.getColorScheme().toString());\n+        };\n+\n@@ -75,1 +88,7 @@\n-            new Label(\"3. Click \\\"Pass\\\" if the changes were correctly reported, otherwise click \\\"Fail\\\".\"),\n+            new VBox(\n+                new Label(\"3. Check whether the following computed properties reflect the reported preferences:\"),\n+                new HBox(new BoldLabel(\"    backgroundColor: \"), backgroundColorLabel),\n+                new HBox(new BoldLabel(\"    foregroundColor: \"), foregroundColorLabel),\n+                new HBox(new BoldLabel(\"    accentColor: \"), accentColorLabel),\n+                new HBox(new BoldLabel(\"    colorScheme: \"), colorSchemeLabel)),\n+            new Label(\"4. Click \\\"Pass\\\" if the changes were correctly reported, otherwise click \\\"Fail\\\".\"),\n@@ -86,0 +105,1 @@\n+        updateColorProperties.run();\n@@ -89,0 +109,1 @@\n+            updateColorProperties.run();\n@@ -129,0 +150,7 @@\n+\n+    private static class BoldLabel extends Label {\n+        BoldLabel(String text) {\n+            super(text);\n+            setStyle(\"-fx-font-weight: bold\");\n+        }\n+    }\n","filename":"tests\/manual\/events\/PlatformPreferencesChangedTest.java","additions":30,"deletions":2,"binary":false,"changes":32,"status":"modified"}]}