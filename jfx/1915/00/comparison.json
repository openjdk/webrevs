{"files":[{"patch":"@@ -4334,9 +4334,2 @@\n-            while (expectedRBraces > 0) {\n-                if (!consumeRBrace(lexer)) {\n-                    return;\n-                }\n-\n-                if (mediaRule != null) {\n-                    mediaRule = mediaRule.getParent();\n-                }\n-\n+            while (expectedRBraces > 0 && currentToken != null && currentToken.getType() == CssLexer.RBRACE) {\n+                mediaRule = mediaRule.getParent();\n@@ -4370,19 +4363,0 @@\n-    private boolean consumeRBrace(CssLexer lexer) {\n-        if (currentToken == null || currentToken.getType() != CssLexer.RBRACE) {\n-            int line = currentToken != null ? currentToken.getLine() : -1;\n-            int pos = currentToken != null ? currentToken.getOffset() : -1;\n-            String msg = String.format(\"Expected RBRACE at [%d,%d]\", line, pos);\n-            ParseError error = createError(msg);\n-            if (LOGGER.isLoggable(Level.WARNING)) {\n-                LOGGER.warning(error.toString());\n-            }\n-\n-            reportError(error);\n-            currentToken = null;\n-            return false;\n-        }\n-\n-        currentToken = lexer.nextToken();\n-        return true;\n-    }\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":2,"deletions":28,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.util.Set;\n@@ -97,0 +98,54 @@\n+    @Test\n+    void parseMediaQueryWithMultipleRules() {\n+        Stylesheet stylesheet = new CssParser().parse(\"\"\"\n+            @media (prefers-color-scheme: light) {\n+                .foo1 { bar: baz; }\n+                .foo2 { bar: baz; }\n+            }\n+            \"\"\");\n+\n+        assertEquals(2, stylesheet.getRules().size());\n+        var rule1 = stylesheet.getRules().getFirst();\n+        var rule2 = stylesheet.getRules().getLast();\n+        assertEquals(Set.of(\"foo1\"), rule1.getSelectors().getFirst().getStyleClassNames());\n+        assertEquals(Set.of(\"foo2\"), rule2.getSelectors().getFirst().getStyleClassNames());\n+\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n+        assertEquals(1, mediaRule.getQueries().size());\n+        assertEquals(\n+            new FunctionExpression<>(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT),\n+            mediaRule.getQueries().getFirst());\n+    }\n+\n+    @Test\n+    void parseNestedMediaQueryWithMultipleRules() {\n+        Stylesheet stylesheet = new CssParser().parse(\"\"\"\n+            @media (prefers-reduced-motion: reduce) {\n+                .foo1 { bar: baz; }\n+                .foo2 { bar: baz; }\n+                @media (prefers-color-scheme: light) {\n+                    .foo3 { bar: baz; }\n+                    .foo4 { bar: baz; }\n+                }\n+            }\n+            \"\"\");\n+\n+        assertEquals(4, stylesheet.getRules().size());\n+\n+        var rule1 = stylesheet.getRules().get(0);\n+        assertEquals(Set.of(\"foo1\"), rule1.getSelectors().getFirst().getStyleClassNames());\n+        assertNull(RuleHelper.getMediaRule(rule1).getParent());\n+\n+        var rule2 = stylesheet.getRules().get(1);\n+        assertEquals(Set.of(\"foo2\"), rule2.getSelectors().getFirst().getStyleClassNames());\n+        assertNull(RuleHelper.getMediaRule(rule2).getParent());\n+\n+        var rule3 = stylesheet.getRules().get(2);\n+        assertEquals(Set.of(\"foo3\"), rule3.getSelectors().getFirst().getStyleClassNames());\n+        assertNull(RuleHelper.getMediaRule(rule3).getParent().getParent());\n+\n+        var rule4 = stylesheet.getRules().get(3);\n+        assertEquals(Set.of(\"foo4\"), rule4.getSelectors().getFirst().getStyleClassNames());\n+        assertNull(RuleHelper.getMediaRule(rule4).getParent().getParent());\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssParser_mediaQuery_Test.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"}]}