{"files":[{"patch":"@@ -4332,0 +4332,1 @@\n+            Token lastToken = currentToken;\n@@ -4336,0 +4337,1 @@\n+                lastToken = currentToken;\n@@ -4339,0 +4341,12 @@\n+\n+            if (expectedRBraces > 0 && currentToken != null && currentToken.getType() == Token.EOF) {\n+                String msg = String.format(\"Expected RBRACE at [%d,%d]\", lastToken.getLine(), lastToken.getOffset() + 1);\n+                ParseError error = createError(msg);\n+                if (LOGGER.isLoggable(Level.WARNING)) {\n+                    LOGGER.warning(error.toString());\n+                }\n+\n+                reportError(error);\n+                currentToken = null;\n+                return;\n+            }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -428,0 +428,17 @@\n+\n+    @Test\n+    void missingClosingCurlyBraceEmitsParserError() {\n+        CssParser.errorsProperty().clear();\n+\n+        var stylesheet = new CssParser().parse(\"\"\"\n+            @media (prefers-color-scheme: dark) {\n+                .foo { bar: baz; }\n+            \"\"\");\n+\n+        assertTrue(CssParser.errorsProperty().getFirst().getMessage().startsWith(\"Expected RBRACE\"));\n+        assertEquals(1, stylesheet.getRules().size());\n+        assertEquals(Set.of(\"foo\"), stylesheet.getRules().getFirst().getSelectors().getFirst().getStyleClassNames());\n+        assertEquals(\n+            List.of(new FunctionExpression<>(\"prefers-color-scheme\", \"dark\", _ -> null, ColorScheme.DARK)),\n+            RuleHelper.getMediaRule(stylesheet.getRules().getFirst()).getQueries());\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssParser_mediaQuery_Test.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}