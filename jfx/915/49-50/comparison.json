{"files":[{"patch":"@@ -496,1 +496,0 @@\n-                    ctx->process_map();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassApplication.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -294,0 +294,1 @@\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassWindow.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-        if (!event->in || isEnabled()) {\n+        if (isEnabled()) {\n@@ -155,1 +155,1 @@\n-        } else {\n+        } else if (is_visible()) {\n@@ -746,1 +746,0 @@\n-            map_received(false),\n@@ -858,11 +857,0 @@\n-                \/\/ set bounds again to correct window size\n-                \/\/ accounting decorations\n-                int w = geometry_get_window_width(&geometry);\n-                int h = geometry_get_window_height(&geometry);\n-                int cw = geometry_get_content_width(&geometry);\n-                int ch = geometry_get_content_height(&geometry);\n-\n-                int x = geometry.x;\n-                int y = geometry.y;\n-\n-\n@@ -870,1 +858,1 @@\n-                    x -= geometry.gravity_x * (float) (left + right);\n+                    geometry.x -= geometry.gravity_x * (float) (left + right);\n@@ -874,1 +862,1 @@\n-                    y -= geometry.gravity_y * (float) (top + bottom);\n+                    geometry.y -= geometry.gravity_y * (float) (top + bottom);\n@@ -876,2 +864,0 @@\n-\n-                set_bounds(x, y, true, true, w, h, cw, ch, 0, 0);\n@@ -976,4 +962,0 @@\n-    if (!map_received) {\n-        return;\n-    }\n-\n@@ -1080,0 +1062,15 @@\n+\n+    \/\/ Note: this correction happens here because calling when extents are\n+    \/\/ received messes with internal user time and causes out-of-order focus event\n+    \/\/ and set_focus_on_map (default true) won't work correctly\n+    if (frame_extents_received) {\n+        \/\/ set bounds again to correct window size\n+        \/\/ accounting decorations\n+        int w = geometry_get_window_width(&geometry);\n+        int h = geometry_get_window_height(&geometry);\n+        int cw = geometry_get_content_width(&geometry);\n+        int ch = geometry_get_content_height(&geometry);\n+\n+        set_bounds(geometry.x, geometry.y, true, true, w, h, cw, ch, 0, 0);\n+    }\n+\n@@ -1085,0 +1082,2 @@\n+\n+    request_focus();\n@@ -1140,8 +1139,0 @@\n-void WindowContextTop::process_map() {\n-    map_received = true;\n-\n-    if (!is_iconified) {\n-        request_focus();\n-    }\n-}\n-\n@@ -1201,3 +1192,1 @@\n-    if (is_visible()) {\n-        gtk_window_present(GTK_WINDOW(gtk_widget));\n-    }\n+    gtk_window_present(GTK_WINDOW(gtk_widget));\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":22,"deletions":33,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -135,1 +135,0 @@\n-    virtual void process_map() = 0;\n@@ -232,1 +231,0 @@\n-    void process_map() {}\n@@ -271,1 +269,0 @@\n-    bool map_received;\n@@ -282,1 +279,0 @@\n-    void process_map();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}