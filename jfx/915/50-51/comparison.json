{"files":[{"patch":"@@ -496,0 +496,1 @@\n+                    ctx->process_map();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassApplication.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -294,1 +294,0 @@\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassWindow.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-        if (isEnabled()) {\n+        if (!event->in || isEnabled()) {\n@@ -155,1 +155,1 @@\n-        } else if (is_visible()) {\n+        } else {\n@@ -746,0 +746,1 @@\n+            map_received(false),\n@@ -857,0 +858,11 @@\n+                \/\/ set bounds again to correct window size\n+                \/\/ accounting decorations\n+                int w = geometry_get_window_width(&geometry);\n+                int h = geometry_get_window_height(&geometry);\n+                int cw = geometry_get_content_width(&geometry);\n+                int ch = geometry_get_content_height(&geometry);\n+\n+                int x = geometry.x;\n+                int y = geometry.y;\n+\n+\n@@ -858,1 +870,1 @@\n-                    geometry.x -= geometry.gravity_x * (float) (left + right);\n+                    x -= geometry.gravity_x * (float) (left + right);\n@@ -862,1 +874,1 @@\n-                    geometry.y -= geometry.gravity_y * (float) (top + bottom);\n+                    y -= geometry.gravity_y * (float) (top + bottom);\n@@ -864,0 +876,2 @@\n+\n+                set_bounds(x, y, true, true, w, h, cw, ch, 0, 0);\n@@ -962,0 +976,4 @@\n+    if (!map_received) {\n+        return;\n+    }\n+\n@@ -1062,15 +1080,0 @@\n-\n-    \/\/ Note: this correction happens here because calling when extents are\n-    \/\/ received messes with internal user time and causes out-of-order focus event\n-    \/\/ and set_focus_on_map (default true) won't work correctly\n-    if (frame_extents_received) {\n-        \/\/ set bounds again to correct window size\n-        \/\/ accounting decorations\n-        int w = geometry_get_window_width(&geometry);\n-        int h = geometry_get_window_height(&geometry);\n-        int cw = geometry_get_content_width(&geometry);\n-        int ch = geometry_get_content_height(&geometry);\n-\n-        set_bounds(geometry.x, geometry.y, true, true, w, h, cw, ch, 0, 0);\n-    }\n-\n@@ -1082,2 +1085,0 @@\n-\n-    request_focus();\n@@ -1139,0 +1140,8 @@\n+void WindowContextTop::process_map() {\n+    map_received = true;\n+\n+    if (!is_iconified) {\n+        request_focus();\n+    }\n+}\n+\n@@ -1192,1 +1201,3 @@\n-    gtk_window_present(GTK_WINDOW(gtk_widget));\n+    if (is_visible()) {\n+        gtk_window_present(GTK_WINDOW(gtk_widget));\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":33,"deletions":22,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -135,0 +135,1 @@\n+    virtual void process_map() = 0;\n@@ -231,0 +232,1 @@\n+    void process_map() {}\n@@ -269,0 +271,1 @@\n+    bool map_received;\n@@ -279,0 +282,1 @@\n+    void process_map();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}