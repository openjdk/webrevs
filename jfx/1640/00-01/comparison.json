{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.tk.Toolkit;\n@@ -48,0 +49,1 @@\n+import test.util.memory.JMemoryBuddy;\n@@ -232,1 +234,1 @@\n-     * Tests that re-setting the same columns does not cause memory leaks.\n+     * Tests that re-setting the same columns does not cause excessive listener registrations.\n@@ -236,1 +238,1 @@\n-    void testReSettingColumnsDoesNotLeakMemory() {\n+    void testReSettingColumnsDoesNotCauseExcessiveListeners() {\n@@ -260,1 +262,1 @@\n-     * Tests that toggling the column visibility does not cause memory leaks.\n+     * Tests that toggling the column visibility does not cause excessive listener registrations.\n@@ -264,1 +266,1 @@\n-    void testTogglingColumnVisibilityDoesNotLeakMemory() {\n+    void testTogglingColumnVisibilityDoesNotCauseExcessiveListeners() {\n@@ -291,0 +293,52 @@\n+    \/**\n+     * Tests that re-setting the same columns does not cause memory leaks.\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8341687\">JDK-8341687<\/a>.\n+     *\/\n+    @Test\n+    void testReSettingColumnsDoesNotCauseMemoryLeaks() {\n+        JMemoryBuddy.memoryTest((mem) -> {\n+            mem.assertCollectable(tableHeaderRow);\n+\n+            \/\/ Trigger the menu once so that it will start listening to column changes.\n+            MouseEventFirer mouseEventFirer = new MouseEventFirer(cornerRegion);\n+            mouseEventFirer.fireMousePressed();\n+\n+            cornerRegion = null;\n+            tableHeaderRow = null;\n+\n+            tableView.getColumns().setAll(FXCollections.observableArrayList(tableView.getColumns()));\n+            tableView.getColumns().setAll(FXCollections.observableArrayList(tableView.getColumns()));\n+\n+            tableView.setSkin(new TableViewSkin<>(tableView));\n+            Toolkit.getToolkit().firePulse();\n+        });\n+    }\n+\n+    \/**\n+     * Tests that toggling the column visibility does not cause memory leaks.\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8341687\">JDK-8341687<\/a>.\n+     *\/\n+    @Test\n+    void testTogglingColumnVisibilityDoesNotCauseMemoryLeaks() {\n+        JMemoryBuddy.memoryTest((mem) -> {\n+            mem.assertCollectable(tableHeaderRow);\n+\n+            \/\/ Trigger the menu once so that it will start listening to column changes.\n+            MouseEventFirer mouseEventFirer = new MouseEventFirer(cornerRegion);\n+            mouseEventFirer.fireMousePressed();\n+\n+            cornerRegion = null;\n+            tableHeaderRow = null;\n+\n+            for (TableColumn<String, ?> column : tableView.getColumns()) {\n+                column.setVisible(false);\n+                column.setVisible(true);\n+                column.setVisible(false);\n+                column.setVisible(true);\n+            }\n+\n+            tableView.setSkin(new TableViewSkin<>(tableView));\n+            Toolkit.getToolkit().firePulse();\n+        });\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TableViewTableHeaderRowTest.java","additions":58,"deletions":4,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.tk.Toolkit;\n@@ -48,0 +49,1 @@\n+import test.util.memory.JMemoryBuddy;\n@@ -233,1 +235,1 @@\n-     * Tests that re-setting the same columns does not cause memory leaks.\n+     * Tests that re-setting the same columns does not cause excessive listener registrations.\n@@ -237,1 +239,1 @@\n-    void testReSettingColumnsDoesNotLeakMemory() {\n+    void testReSettingColumnsDoesNotCauseExcessiveListeners() {\n@@ -261,1 +263,1 @@\n-     * Tests that toggling the column visibility does not cause memory leaks.\n+     * Tests that toggling the column visibility does not cause excessive listener registrations.\n@@ -265,1 +267,1 @@\n-    void testTogglingColumnVisibilityDoesNotLeakMemory() {\n+    void testTogglingColumnVisibilityDoesNotCauseExcessiveListeners() {\n@@ -292,0 +294,52 @@\n+    \/**\n+     * Tests that re-setting the same columns does not cause memory leaks.\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8341687\">JDK-8341687<\/a>.\n+     *\/\n+    @Test\n+    void testReSettingColumnsDoesNotCauseMemoryLeaks() {\n+        JMemoryBuddy.memoryTest((mem) -> {\n+            mem.assertCollectable(tableHeaderRow);\n+\n+            \/\/ Trigger the menu once so that it will start listening to column changes.\n+            MouseEventFirer mouseEventFirer = new MouseEventFirer(cornerRegion);\n+            mouseEventFirer.fireMousePressed();\n+\n+            cornerRegion = null;\n+            tableHeaderRow = null;\n+\n+            treeTableView.getColumns().setAll(FXCollections.observableArrayList(treeTableView.getColumns()));\n+            treeTableView.getColumns().setAll(FXCollections.observableArrayList(treeTableView.getColumns()));\n+\n+            treeTableView.setSkin(new TreeTableViewSkin<>(treeTableView));\n+            Toolkit.getToolkit().firePulse();\n+        });\n+    }\n+\n+    \/**\n+     * Tests that toggling the column visibility does not cause memory leaks.\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8341687\">JDK-8341687<\/a>.\n+     *\/\n+    @Test\n+    void testTogglingColumnVisibilityDoesNotCauseMemoryLeaks() {\n+        JMemoryBuddy.memoryTest((mem) -> {\n+            mem.assertCollectable(tableHeaderRow);\n+\n+            \/\/ Trigger the menu once so that it will start listening to column changes.\n+            MouseEventFirer mouseEventFirer = new MouseEventFirer(cornerRegion);\n+            mouseEventFirer.fireMousePressed();\n+\n+            cornerRegion = null;\n+            tableHeaderRow = null;\n+\n+            for (TreeTableColumn<String, ?> column : treeTableView.getColumns()) {\n+                column.setVisible(false);\n+                column.setVisible(true);\n+                column.setVisible(false);\n+                column.setVisible(true);\n+            }\n+\n+            treeTableView.setSkin(new TreeTableViewSkin<>(treeTableView));\n+            Toolkit.getToolkit().firePulse();\n+        });\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TreeTableViewTableHeaderRowTest.java","additions":58,"deletions":4,"binary":false,"changes":62,"status":"modified"}]}