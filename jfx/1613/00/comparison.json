{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,4 @@\n+        \/* The thread must be a member of a thread group\n+         * which will not get GCed before VM exit.\n+         * Make its parent the top-level thread group.\n+         *\/\n@@ -55,23 +59,8 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction() {\n-                @Override\n-                public Object run() {\n-                    \/* The thread must be a member of a thread group\n-                     * which will not get GCed before VM exit.\n-                     * Make its parent the top-level thread group.\n-                     *\/\n-                    ThreadGroup tg = Thread.currentThread().getThreadGroup();\n-                    for (ThreadGroup tgn = tg;\n-                         tgn != null;\n-                         tg = tgn, tgn = tg.getParent());\n-                    Thread t =\n-                        new Thread(tg, disposerInstance, \"SwingNode Disposer\");\n-                    t.setContextClassLoader(null);\n-                    t.setDaemon(true);\n-                    t.setPriority(Thread.MAX_PRIORITY);\n-                    t.start();\n-                    return null;\n-                }\n-            }\n-        );\n+        for (ThreadGroup tgn = tg;\n+             tgn != null;\n+             tg = tgn, tgn = tg.getParent());\n+        Thread t = new Thread(tg, disposerInstance, \"SwingNode Disposer\");\n+        t.setContextClassLoader(null);\n+        t.setDaemon(true);\n+        t.setPriority(Thread.MAX_PRIORITY);\n+        t.start();\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/Disposer.java","additions":13,"deletions":24,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -45,1 +43,1 @@\n-    public static boolean fxAppThreadIsDispatchThread;\n+    public static boolean fxAppThreadIsDispatchThread = \"true\".equals(System.getProperty(\"javafx.embed.singleThread\"));\n@@ -48,13 +46,0 @@\n-    static {\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-            @Override\n-            public Object run() {\n-                fxAppThreadIsDispatchThread =\n-                        \"true\".equals(System.getProperty(\"javafx.embed.singleThread\"));\n-                return null;\n-            }\n-        });\n-\n-    }\n-\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/FXDnD.java","additions":2,"deletions":17,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -41,1 +39,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -43,2 +40,1 @@\n-        return AccessController.doPrivileged(\n-                (PrivilegedAction<EventQueue>) () -> java.awt.Toolkit.getDefaultToolkit().getSystemEventQueue());\n+        return java.awt.Toolkit.getDefaultToolkit().getSystemEventQueue();\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/SwingFXUtilsImpl.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,2 +60,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -240,4 +238,1 @@\n-        @SuppressWarnings(\"removal\")\n-        EventQueue eventQueue = AccessController.doPrivileged(\n-                                (PrivilegedAction<EventQueue>) java.awt.Toolkit\n-                                .getDefaultToolkit()::getSystemEventQueue);\n+        EventQueue eventQueue = java.awt.Toolkit.getDefaultToolkit().getSystemEventQueue();\n@@ -324,4 +319,1 @@\n-            @SuppressWarnings(\"removal\")\n-            EventQueue eventQueue = AccessController.doPrivileged(\n-                    (PrivilegedAction<EventQueue>) java.awt.Toolkit\n-                            .getDefaultToolkit()::getSystemEventQueue);\n+            EventQueue eventQueue = java.awt.Toolkit.getDefaultToolkit().getSystemEventQueue();\n@@ -952,1 +944,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -959,5 +950,2 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            JFXPanel.this.getToolkit().addAWTEventListener(ungrabListener,\n-                                               jfxPanelIOP.getMask());\n-            return null;\n-        });\n+        getToolkit().addAWTEventListener(ungrabListener, jfxPanelIOP.getMask());\n+\n@@ -987,1 +975,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1001,4 +988,1 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            JFXPanel.this.getToolkit().removeAWTEventListener(ungrabListener);\n-            return null;\n-        });\n+        getToolkit().removeAWTEventListener(ungrabListener);\n","filename":"modules\/javafx.swing\/src\/main\/java\/javafx\/embed\/swing\/JFXPanel.java","additions":5,"deletions":21,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,2 +58,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -120,1 +118,1 @@\n-    private static boolean isThreadMerged;\n+    private static boolean isThreadMerged = Boolean.valueOf(System.getProperty(\"javafx.embed.singleThread\"));\n@@ -123,11 +121,0 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-            @Override\n-            public Object run() {\n-                isThreadMerged = Boolean.valueOf(\n-                        System.getProperty(\"javafx.embed.singleThread\"));\n-                return null;\n-            }\n-        });\n-\n-\n@@ -569,2 +556,1 @@\n-                AccessController.doPrivileged(new PostEventAction(\n-                    swNodeIOP.createUngrabEvent(lwFrame)));\n+                postAWTEvent(swNodeIOP.createUngrabEvent(lwFrame));\n@@ -833,11 +819,3 @@\n-    private class PostEventAction implements PrivilegedAction<Void> {\n-        private AWTEvent event;\n-        PostEventAction(AWTEvent event) {\n-            this.event = event;\n-        }\n-        @Override\n-        public Void run() {\n-            EventQueue eq = Toolkit.getDefaultToolkit().getSystemEventQueue();\n-            eq.postEvent(event);\n-            return null;\n-        }\n+    private static void postAWTEvent(AWTEvent event) {\n+        EventQueue eq = Toolkit.getDefaultToolkit().getSystemEventQueue();\n+        eq.postEvent(event);\n@@ -893,2 +871,1 @@\n-            @SuppressWarnings(\"removal\")\n-            var dummy = AccessController.doPrivileged(new PostEventAction(mouseEvent));\n+            postAWTEvent(mouseEvent);\n@@ -935,2 +912,1 @@\n-            @SuppressWarnings(\"removal\")\n-            var dummy = AccessController.doPrivileged(new PostEventAction(mouseWheelEvent));\n+            postAWTEvent(mouseWheelEvent);\n@@ -981,2 +957,1 @@\n-            @SuppressWarnings(\"removal\")\n-            var dummy = AccessController.doPrivileged(new PostEventAction(keyEvent));\n+            postAWTEvent(keyEvent);\n@@ -986,2 +961,0 @@\n-\n-\n","filename":"modules\/javafx.swing\/src\/main\/java\/javafx\/embed\/swing\/SwingNode.java","additions":9,"deletions":36,"binary":false,"changes":45,"status":"modified"}]}