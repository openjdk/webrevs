{"files":[{"patch":"@@ -132,1 +132,1 @@\n-    public void setPosition(double y, double height) {\n+    void setPosition(double y, double height) {\n@@ -137,0 +137,12 @@\n+    \/**\n+     * Valid only when cell is obtained from the arrangement.\n+     * @return y coordinate relative to origin\n+     *\/\n+    public double getY() {\n+        return y;\n+    }\n+\n+    \/**\n+     * Valid only when cell is obtained from the arrangement.\n+     * @return y the cell height\n+     *\/\n@@ -149,4 +161,0 @@\n-    public double getY() {\n-        return y;\n-    }\n-\n@@ -398,3 +406,1 @@\n-            if (insideY(py)) {\n-                return ri.midPointY(0) + dy;\n-            }\n+            return ri.midPointY(0) + dy;\n@@ -407,4 +413,2 @@\n-            if (insideY(py)) {\n-                int ix = ri.getSegmentCount() - 1;\n-                return ri.midPointY(ix) + dy;\n-            }\n+            int ix = ri.getSegmentCount() - 1;\n+            return ri.midPointY(ix) + dy;\n@@ -412,5 +416,0 @@\n-        return Double.NaN;\n-    }\n-\n-    private boolean insideY(double y) {\n-        return (y < height) && (y >= 0.0);\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/com\/sun\/jfx\/incubator\/scene\/control\/richtext\/TextCell.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -769,7 +769,1 @@\n-        TextCell cell = cellCache.get(modelIndex);\n-        if (cell == null) {\n-            RichParagraph rp = control.getModel().getParagraph(modelIndex);\n-            cell = createTextCell(modelIndex, rp);\n-            cellCache.add(cell.getIndex(), cell);\n-        }\n-        return cell;\n+        return arrangement().getCell(modelIndex);\n@@ -1186,8 +1180,0 @@\n-        if (Double.isNaN(py)) {\n-            if (down) {\n-                return skin.getSkinnable().getDocumentEnd();\n-            } else {\n-                return TextPos.ZERO;\n-            }\n-        }\n-\n@@ -1307,0 +1293,23 @@\n+    \/\/ must be called only from layoutCells\n+    \/\/ adds the cell region to vflow content\n+    \/\/ performs the cell layout\n+    \/\/ adds cell to arrangement\n+    private TextCell prepareCell(int modelIndex, double maxWidth) {\n+        TextCell cell = cellCache.get(modelIndex);\n+        if (cell == null) {\n+            RichParagraph rp = control.getModel().getParagraph(modelIndex);\n+            cell = createTextCell(modelIndex, rp);\n+            cellCache.add(cell.getIndex(), cell);\n+        }\n+\n+        \/\/ TODO skip computation if layout width is the same\n+        Region r = cell.getContent();\n+        content.getChildren().add(cell);\n+        cell.setMaxWidth(maxWidth);\n+        cell.setMaxHeight(USE_COMPUTED_SIZE);\n+        cell.applyCss();\n+        cell.layout();\n+        arrangement.addCell(cell);\n+        return cell;\n+    }\n+\n@@ -1366,12 +1375,3 @@\n-            TextCell cell = getCell(i);\n-            \/\/ TODO skip computation if layout width is the same\n-            Region r = cell.getContent();\n-            content.getChildren().add(cell);\n-            cell.setMaxWidth(maxWidth);\n-            cell.setMaxHeight(USE_COMPUTED_SIZE);\n-            cell.applyCss();\n-            cell.layout();\n-\n-            arrangement.addCell(cell);\n-\n-            double h = cell.prefHeight(forWidth) + getLineSpacing(r);\n+            TextCell cell = prepareCell(i, maxWidth);\n+\n+            double h = cell.prefHeight(forWidth) + getLineSpacing(cell.getContent());\n@@ -1491,10 +1491,1 @@\n-            TextCell cell = getCell(i);\n-            \/\/ TODO maybe skip computation if layout width is the same\n-            Region r = cell.getContent();\n-            content.getChildren().add(cell);\n-            cell.setMaxWidth(maxWidth);\n-            cell.setMaxHeight(USE_COMPUTED_SIZE);\n-\n-            cell.applyCss();\n-\n-            arrangement.addCell(cell);\n+            TextCell cell = prepareCell(i, maxWidth);\n@@ -1502,1 +1493,1 @@\n-            double h = cell.prefHeight(forWidth) + getLineSpacing(r);\n+            double h = cell.prefHeight(forWidth) + getLineSpacing(cell.getContent());\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/com\/sun\/jfx\/incubator\/scene\/control\/richtext\/VFlow.java","additions":29,"deletions":38,"binary":false,"changes":67,"status":"modified"}]}