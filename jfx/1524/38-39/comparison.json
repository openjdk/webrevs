{"files":[{"patch":"@@ -0,0 +1,147 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates.\n+ * All rights reserved. Use is subject to license terms.\n+ *\n+ * This file is available and licensed under the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ *  - Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *  - Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and\/or other materials provided with the distribution.\n+ *  - Neither the name of Oracle Corporation nor the names of its\n+ *    contributors may be used to endorse or promote products derived\n+ *    from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+ * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+\n+package com.oracle.demo.richtext.common;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.scene.Node;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Separator;\n+import javafx.scene.control.TitledPane;\n+import javafx.scene.layout.GridPane;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import com.oracle.demo.richtext.util.FX;\n+\n+\/**\n+ * Option Pane - a vertical option sheet.\n+ *\/\n+public class OptionPane extends VBox {\n+\n+    public OptionPane() {\n+        FX.name(this, \"OptionPane\");\n+        FX.style(this, \"option-pane\");\n+        setFillWidth(true);\n+    }\n+\n+    public void label(String text) {\n+        lastSection().add(new Label(text));\n+    }\n+\n+    public void option(Node n) {\n+        lastSection().add(n);\n+    }\n+\n+    public void option(String text, Node n) {\n+        lastSection().add(new Label(text), n);\n+    }\n+\n+    public void add(Node n) {\n+        lastSection().add(n);\n+    }\n+\n+    public void separator() {\n+        lastSection().add(new Separator(Orientation.HORIZONTAL));\n+    }\n+\n+    public void section(String name) {\n+        section(name, new OptionGridPane());\n+    }\n+\n+    private List<TitledPane> getPanes() {\n+        return getChildren().\n+            stream().\n+            filter((n) -> n instanceof TitledPane).\n+            map((n) -> (TitledPane)n).\n+            collect(Collectors.toList());\n+    }\n+\n+    public void section(String name, OptionGridPane content) {\n+        TitledPane t = new TitledPane(name, content);\n+        getChildren().add(t);\n+    }\n+\n+    private OptionGridPane lastSection() {\n+        List<TitledPane> panes = getPanes();\n+        if (panes.size() == 0) {\n+            section(\"Properties\");\n+        }\n+        panes = getPanes();\n+        TitledPane t = panes.get(panes.size() - 1);\n+        return (OptionGridPane)t.getContent();\n+    }\n+\n+    private static class OptionGridPane extends GridPane {\n+        private int row;\n+        private static final Insets MARGIN = new Insets(1, 4, 0, 4);\n+        private static final Insets PADDING = new Insets(0, 0, 2, 0);\n+\n+        public OptionGridPane() {\n+            setPadding(PADDING);\n+            setMaxWidth(Double.MAX_VALUE);\n+        }\n+\n+        public void label(String text) {\n+            add(new Label(text));\n+        }\n+\n+        public void option(Node n) {\n+            add(n);\n+        }\n+\n+        public void add(Node n) {\n+            add(n, 0, row, 2, 1);\n+            setMargin(n, MARGIN);\n+            setFillHeight(n, Boolean.TRUE);\n+            setFillWidth(n, Boolean.TRUE);\n+            row++;\n+        }\n+\n+        public void add(Node left, Node right) {\n+            add(left, 0, row);\n+            setMargin(left, MARGIN);\n+            setFillHeight(left, Boolean.TRUE);\n+            setFillWidth(left, Boolean.TRUE);\n+            setHgrow(left, Priority.ALWAYS);\n+\n+            add(right, 1, row);\n+            setMargin(right, MARGIN);\n+            setFillHeight(right, Boolean.TRUE);\n+            setFillWidth(right, Boolean.TRUE);\n+\n+            row++;\n+        }\n+    }\n+}\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/common\/OptionPane.java","additions":147,"deletions":0,"binary":false,"changes":147,"status":"added"},{"patch":"@@ -44,0 +44,1 @@\n+import com.oracle.demo.richtext.editor.settings.EndKey;\n@@ -47,0 +48,1 @@\n+import jfx.incubator.scene.control.richtext.TextPos;\n@@ -54,1 +56,1 @@\n-    public final RichTextArea control;\n+    public final RichTextArea editor;\n@@ -64,1 +66,1 @@\n-        control = new RichTextArea();\n+        editor = new RichTextArea();\n@@ -66,1 +68,1 @@\n-        control.getInputMap().register(KeyBinding.shortcut(KeyCode.W), () -> {\n+        editor.getInputMap().register(KeyBinding.shortcut(KeyCode.W), () -> {\n@@ -70,2 +72,2 @@\n-        actions = new Actions(control);\n-        control.setContextMenu(createContextMenu());\n+        actions = new Actions(editor);\n+        editor.setContextMenu(createContextMenu());\n@@ -121,1 +123,1 @@\n-            control.requestFocus();\n+            editor.requestFocus();\n@@ -125,1 +127,1 @@\n-        setCenter(control);\n+        setCenter(editor);\n@@ -130,0 +132,2 @@\n+\n+        Settings.endKey.subscribe(this::setEndKey);\n@@ -188,0 +192,39 @@\n+\n+    void setEndKey(EndKey v) {\n+        switch(v) {\n+        case END_OF_LINE:\n+            editor.getInputMap().restoreDefaultFunction(RichTextArea.Tags.MOVE_TO_LINE_END);\n+            break;\n+        case END_OF_TEXT:\n+            editor.getInputMap().registerFunction(RichTextArea.Tags.MOVE_TO_LINE_END, this::moveToEndOfText);\n+            break;\n+        }\n+    }\n+\n+    \/\/ this is an illustration.  we could publish the MOVE_TO_END_OF_TEXT_ON_LINE function tag\n+    void moveToEndOfText() {\n+        TextPos p = editor.getCaretPosition();\n+        if (p != null) {\n+            editor.executeDefault(RichTextArea.Tags.MOVE_TO_LINE_END);\n+            TextPos p2 = editor.getCaretPosition();\n+            if (p2 != null) {\n+                String text = editor.getPlainText(p2.index());\n+                int ix = findLastText(text, p2.charIndex());\n+                if (ix > p.charIndex()) {\n+                    editor.select(TextPos.ofLeading(p2.index(), ix));\n+                }\n+            }\n+        }\n+    }\n+\n+    private static int findLastText(String text, int start) {\n+        int i = start - 1;\n+        while (i >= 0) {\n+            char c = text.charAt(i);\n+            if (!Character.isWhitespace(c)) {\n+                return i + 1;\n+            }\n+            --i;\n+        }\n+        return i;\n+    }\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/RichEditorDemoPane.java","additions":50,"deletions":7,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        pane.control.caretPositionProperty().addListener((x) -> {\n+        pane.editor.caretPositionProperty().addListener((x) -> {\n@@ -131,0 +131,4 @@\n+        \/\/ view\n+        FX.menu(m, \"Tools\");\n+        FX.item(m, \"Settings\", this::openSettings);\n+\n@@ -133,1 +137,2 @@\n-        \/\/ TODO about\n+        FX.item(m, \"About\"); \/\/ TODO\n+\n@@ -138,2 +143,2 @@\n-        RichTextArea t = pane.control;\n-        TextPos p = t.getCaretPosition();\n+        RichTextArea ed = pane.editor;\n+        TextPos p = ed.getCaretPosition();\n@@ -166,0 +171,4 @@\n+\n+    void openSettings() {\n+        new SettingsWindow(this).show();\n+    }\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/RichEditorDemoWindow.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates.\n+ * All rights reserved. Use is subject to license terms.\n+ *\n+ * This file is available and licensed under the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ *  - Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *  - Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and\/or other materials provided with the distribution.\n+ *  - Neither the name of Oracle Corporation nor the names of its\n+ *    contributors may be used to endorse or promote products derived\n+ *    from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+ * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+\n+package com.oracle.demo.richtext.editor;\n+\n+import javafx.beans.property.SimpleObjectProperty;\n+import com.oracle.demo.richtext.editor.settings.EndKey;\n+\n+\/**\n+ * Application Settings.\n+ *\n+ * NOTE: these settings are not persisted across launches due to limitations of FxSettings in this project.\n+ *\/\n+public final class Settings {\n+    public static final SimpleObjectProperty<EndKey> endKey = new SimpleObjectProperty<>(EndKey.END_OF_TEXT);\n+}\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/Settings.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates.\n+ * All rights reserved. Use is subject to license terms.\n+ *\n+ * This file is available and licensed under the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ *  - Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *  - Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and\/or other materials provided with the distribution.\n+ *  - Neither the name of Oracle Corporation nor the names of its\n+ *    contributors may be used to endorse or promote products derived\n+ *    from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+ * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+ * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+\n+package com.oracle.demo.richtext.editor;\n+\n+import javafx.beans.property.Property;\n+import javafx.scene.Node;\n+import javafx.scene.Scene;\n+import javafx.scene.control.ComboBox;\n+import javafx.stage.Stage;\n+import javafx.stage.Window;\n+import javafx.util.StringConverter;\n+import com.oracle.demo.richtext.common.OptionPane;\n+import com.oracle.demo.richtext.editor.settings.EndKey;\n+import com.oracle.demo.richtext.util.HasDisplayText;\n+\n+\/**\n+ * Rich Editor Demo Settings window.\n+ *\n+ * @author Andy Goryachev\n+ *\/\n+public class SettingsWindow extends Stage {\n+\n+    private final OptionPane op;\n+\n+    public SettingsWindow(Window parent) {\n+\n+        initOwner(parent);\n+\n+        op = new OptionPane();\n+        op.section(\"Navigation\");\n+        op.option(\"End:\", enumOption(EndKey.class, Settings.endKey));\n+\/\/        op.option(\"Home:\", new ComboBox());\n+\/\/        op.option(\"Next Word:\", new ComboBox());\n+\/\/        op.option(\"Previous Word:\", new ComboBox());\n+\n+        Scene scene = new Scene(op);\n+\n+        setScene(scene);\n+        setWidth(700);\n+        setHeight(500);\n+        setTitle(\"Settings\");\n+        centerOnScreen();\n+    }\n+\n+    private static <E extends Enum> Node enumOption(Class<E> type, Property<E> p) {\n+        ComboBox<E> b = new ComboBox<>();\n+        b.setConverter(new StringConverter<E>() {\n+            @Override\n+            public String toString(E v) {\n+                if(v == null) {\n+                    return null;\n+                } else if(v instanceof HasDisplayText t) {\n+                    return t.toDisplayString();\n+                }\n+                return v.toString();\n+            }\n+\n+            @Override\n+            public E fromString(String s) {\n+                \/\/ not supported\n+                return null;\n+            }\n+        });\n+        E[] values = type.getEnumConstants();\n+        for (E v : values) {\n+            b.getItems().add(v);\n+        }\n+        b.getSelectionModel().select(p.getValue());\n+        p.bind(b.getSelectionModel().selectedItemProperty());\n+        return b;\n+    }\n+}\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/SettingsWindow.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.oracle.demo.richtext.editor.settings;\n+\n+import com.oracle.demo.richtext.util.HasDisplayText;\n+\n+\/**\n+ * END key behavior setting.\n+ *\/\n+public enum EndKey implements HasDisplayText {\n+    END_OF_LINE,\n+    END_OF_TEXT;\n+\n+    @Override\n+    public String toDisplayString() {\n+        switch (this) {\n+        case END_OF_LINE:\n+            return \"End of Line\";\n+        case END_OF_TEXT:\n+            return \"End of Text\";\n+        default:\n+            return \"?\" + this;\n+        }\n+    }\n+}\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/settings\/EndKey.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -26,2 +26,5 @@\n-.tooltip {\n-    -fx-show-delay: 30ms;\n+package com.oracle.demo.richtext.util;\n+\n+@FunctionalInterface\n+public interface HasDisplayText {\n+    public String toDisplayString();\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/util\/HasDisplayText.java","additions":5,"deletions":2,"binary":false,"changes":7,"previous_filename":"tests\/system\/src\/test\/resources\/test\/robot\/javafx\/scene\/tooltip.css","status":"copied"}]}