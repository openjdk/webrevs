{"files":[{"patch":"@@ -47,0 +47,3 @@\n+import javafx.scene.control.ButtonBar.ButtonData;\n+import javafx.scene.control.ButtonType;\n+import javafx.scene.control.Dialog;\n@@ -306,1 +309,1 @@\n-    void saveAs() {\n+    boolean saveAs() {\n@@ -309,0 +312,2 @@\n+            \/\/ TODO ask to overwrite if file exists\n+            file.set(f);\n@@ -311,0 +316,1 @@\n+                return true;\n@@ -315,0 +321,1 @@\n+        return false;\n@@ -335,11 +342,0 @@\n-    \/**\n-     * @return true if the user chose to Cancel\n-     *\/\n-    private boolean askToSave() {\n-        if (isModified()) {\n-            saveAs();\n-            return true;\n-        }\n-        return false;\n-    }\n-\n@@ -493,4 +489,2 @@\n-        if (isModified()) {\n-            if (askToSave()) {\n-                return;\n-            }\n+        if (askToSave()) {\n+            return;\n@@ -500,0 +494,30 @@\n+    \n+    enum UserChoiceToSave {\n+        DISCARD_CHANGES,\n+        RETURN_TO_EDITING,\n+        SAVE\n+    }\n+\n+    private UserChoiceToSave askSaveChanges() {\n+        Dialog<UserChoiceToSave> d = new Dialog<>();\n+        d.initOwner(FX.getParentWindow(control));\n+        d.setTitle(\"Save Changes?\");\n+        d.setContentText(\"Do you want to save changes?\");\n+\n+        ButtonType bSave = new ButtonType(\"Save\", ButtonData.YES);\n+        d.getDialogPane().getButtonTypes().add(bSave);\n+        ButtonType bReturn = new ButtonType(\"Return to Editing\", ButtonData.CANCEL_CLOSE);\n+        d.getDialogPane().getButtonTypes().add(bReturn);\n+        ButtonType bDiscard = new ButtonType(\"Discard Changes\", ButtonData.NO);\n+        d.getDialogPane().getButtonTypes().add(bDiscard);\n+        d.showAndWait();\n+\n+        Object v = d.getResult();\n+        if (v == bSave) {\n+            return UserChoiceToSave.SAVE;\n+        } else if (v == bDiscard) {\n+            return UserChoiceToSave.DISCARD_CHANGES;\n+        } else {\n+            return UserChoiceToSave.RETURN_TO_EDITING;\n+        }\n+    }\n@@ -502,2 +526,2 @@\n-     * returns true if the user hits cancel and does not want to quit\n-     * @return true if user chose to cancel\n+     * Checks whether the document has been modified and if so, asks to Save, Discard or Cancel.\n+     * @return true if the user chose to Cancel\n@@ -505,1 +529,1 @@\n-    public boolean checkSaveOnHide() {\n+    public boolean askToSave() {\n@@ -507,1 +531,7 @@\n-            if (askToSave()) {\n+            switch(askSaveChanges()) {\n+            case DISCARD_CHANGES:\n+                return false;\n+            case SAVE:\n+                return saveAs();\n+            case RETURN_TO_EDITING:\n+            default:\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/Actions.java","additions":50,"deletions":20,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-            if (pane.actions.checkSaveOnHide()) {\n+            if (pane.actions.askToSave()) {\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/RichEditorDemoWindow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import javafx.util.StringConverter;\n@@ -44,1 +43,1 @@\n-import com.oracle.demo.richtext.util.HasDisplayText;\n+import com.oracle.demo.richtext.util.FX;\n@@ -77,17 +76,1 @@\n-        b.setConverter(new StringConverter<E>() {\n-            @Override\n-            public String toString(E v) {\n-                if(v == null) {\n-                    return null;\n-                } else if(v instanceof HasDisplayText t) {\n-                    return t.toDisplayString();\n-                }\n-                return v.toString();\n-            }\n-\n-            @Override\n-            public E fromString(String s) {\n-                \/\/ not supported\n-                return null;\n-            }\n-        });\n+        b.setConverter(FX.converter());\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/SettingsWindow.java","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+import javafx.util.StringConverter;\n@@ -72,0 +73,2 @@\n+    private static StringConverter<Object> converter;\n+\n@@ -451,0 +454,23 @@\n+\n+    public static <T> StringConverter<T> converter() {\n+        if (converter == null) {\n+            converter = new StringConverter<>() {\n+                @Override\n+                public String toString(Object v) {\n+                    if (v == null) {\n+                        return null;\n+                    } else if (v instanceof HasDisplayText t) {\n+                        return t.toDisplayString();\n+                    }\n+                    return v.toString();\n+                }\n+\n+                @Override\n+                public Object fromString(String s) {\n+                    \/\/ not supported\n+                    return null;\n+                }\n+            };\n+        }\n+        return (StringConverter<T>)converter;\n+    }\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/util\/FX.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"}]}