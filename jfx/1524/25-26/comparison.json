{"files":[{"patch":"@@ -115,0 +115,12 @@\n+    \/**\n+     * Maps a function to the specified function tag.\n+     * <p>\n+     * This method allows for conditional consumption of the {@code KeyEvents}.\n+     *\n+     * @param tag the function tag\n+     * @param function the function\n+     *\/\n+    protected final void registerFunction(FunctionTag tag, FunctionHandler function) {\n+        getSkinInputMap().registerFunction(tag, function);\n+    }\n+\n@@ -150,0 +162,15 @@\n+    \/**\n+     * This convenience method maps the function tag to the specified function, and at the same time\n+     * maps the specified key binding to that function tag.\n+     * <p>\n+     * This method allows for conditional consumption of the {@code KeyEvents}.\n+     *\n+     * @param tag the function tag\n+     * @param k the key binding\n+     * @param func the function\n+     *\/\n+    protected final void register(FunctionTag tag, KeyBinding k, FunctionHandler func) {\n+        getSkinInputMap().registerFunction(tag, func);\n+        getSkinInputMap().registerKey(k, tag);\n+    }\n+\n@@ -264,1 +291,1 @@\n-    protected final void traverseUp() {\n+    public final void traverseUp() {\n@@ -272,1 +299,1 @@\n-    protected final void traverseDown() {\n+    public final void traverseDown() {\n@@ -280,1 +307,1 @@\n-    protected final void traverseLeft() {\n+    public final void traverseLeft() {\n@@ -288,1 +315,1 @@\n-    protected final void traverseRight() {\n+    public final void traverseRight() {\n@@ -296,1 +323,1 @@\n-    protected final void traverseNext() {\n+    public final void traverseNext() {\n@@ -304,1 +331,1 @@\n-    protected final void traversePrevious() {\n+    public final void traversePrevious() {\n","filename":"modules\/jfx.incubator.input\/src\/main\/java\/jfx\/incubator\/scene\/control\/input\/BehaviorBase.java","additions":33,"deletions":6,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -339,1 +339,1 @@\n-    public void insertTab() {\n+    public boolean insertTab() {\n@@ -342,2 +342,1 @@\n-        } else {\n-            traverseNext();\n+            return true;\n@@ -345,0 +344,1 @@\n+        return false;\n@@ -1126,1 +1126,1 @@\n-        copy(false);\n+        copyWithCut(false);\n@@ -1131,1 +1131,1 @@\n-            copy(true);\n+            copyWithCut(true);\n@@ -1144,1 +1144,1 @@\n-    public void paste(DataFormat f) {\n+    public void pasteWithFormat(DataFormat f) {\n@@ -1154,1 +1154,1 @@\n-        paste(DataFormat.PLAIN_TEXT);\n+        pasteWithFormat(DataFormat.PLAIN_TEXT);\n@@ -1202,1 +1202,1 @@\n-    protected void copy(boolean cut) {\n+    protected void copyWithCut(boolean cut) {\n@@ -1241,1 +1241,1 @@\n-    public void copy(DataFormat f) {\n+    public void copyWithFormat(DataFormat f) {\n@@ -1272,1 +1272,1 @@\n-        moveCaret(false, this::previousWord);\n+        moveCaret(false, this::toPreviousWord);\n@@ -1277,1 +1277,1 @@\n-        leftWord(false);\n+        toLeftWord(false);\n@@ -1282,1 +1282,1 @@\n-        rightWord(false);\n+        toRightWord(false);\n@@ -1298,1 +1298,1 @@\n-        moveCaret(false, this::nextWordEnd);\n+        moveCaret(false, this::toWordEnd);\n@@ -1307,1 +1307,1 @@\n-        moveCaret(true, this::previousWord);\n+        moveCaret(true, this::toPreviousWord);\n@@ -1324,1 +1324,1 @@\n-        moveCaret(true, this::nextWordEnd);\n+        moveCaret(true, this::toWordEnd);\n@@ -1334,1 +1334,1 @@\n-        leftWord(true);\n+        toLeftWord(true);\n@@ -1344,1 +1344,1 @@\n-        rightWord(true);\n+        toRightWord(true);\n@@ -1347,1 +1347,1 @@\n-    protected void leftWord(boolean extendSelection) {\n+    protected void toLeftWord(boolean extendSelection) {\n@@ -1352,1 +1352,1 @@\n-                moveCaret(extendSelection, this::nextWordEnd);\n+                moveCaret(extendSelection, this::toWordEnd);\n@@ -1355,1 +1355,1 @@\n-            moveCaret(extendSelection, this::previousWord);\n+            moveCaret(extendSelection, this::toPreviousWord);\n@@ -1359,1 +1359,1 @@\n-    protected void rightWord(boolean extendSelection) {\n+    protected void toRightWord(boolean extendSelection) {\n@@ -1361,1 +1361,1 @@\n-            moveCaret(extendSelection, this::previousWord);\n+            moveCaret(extendSelection, this::toPreviousWord);\n@@ -1366,1 +1366,1 @@\n-                moveCaret(extendSelection, this::nextWordEnd);\n+                moveCaret(extendSelection, this::toWordEnd);\n@@ -1371,1 +1371,1 @@\n-    protected TextPos previousWord(RichTextArea control, TextPos pos) {\n+    protected TextPos toPreviousWord(RichTextArea control, TextPos pos) {\n@@ -1460,1 +1460,1 @@\n-    protected TextPos nextWordEnd(RichTextArea control, TextPos pos) {\n+    protected TextPos toWordEnd(RichTextArea control, TextPos pos) {\n@@ -1573,1 +1573,1 @@\n-        deleteIgnoreSelection(this::nextWordEnd);\n+        deleteIgnoreSelection(this::toWordEnd);\n@@ -1577,1 +1577,1 @@\n-        deleteIgnoreSelection(this::previousWord);\n+        deleteIgnoreSelection(this::toPreviousWord);\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/com\/sun\/jfx\/incubator\/scene\/control\/richtext\/RichTextAreaBehavior.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -241,1 +241,1 @@\n-        behavior.copy(format);\n+        behavior.copyWithFormat(format);\n@@ -252,1 +252,1 @@\n-        behavior.paste(format);\n+        behavior.pasteWithFormat(format);\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/jfx\/incubator\/scene\/control\/richtext\/skin\/RichTextAreaSkin.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}