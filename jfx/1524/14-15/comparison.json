{"files":[{"patch":"@@ -1125,1 +1125,1 @@\n-     * This method does nothing if the model is null.\n+     * This method does nothing if the model is {@code null}.\n@@ -1138,1 +1138,1 @@\n-     * This method does nothing when the caret position is {@code null}.\n+     * This method does nothing if the model or the caret position is {@code null}.\n@@ -1165,2 +1165,2 @@\n-     * The default implementation may throw an {@code UnsupportedOperationException}\n-     * if the control is not editable.  When this happens, the copying to clipboard will succeed.\n+     * The default implementation will attempt to copy the information first, then delete the selected text.\n+     * Any failures, such as the control being not editable, or out of memory condition, will be silently ignored. \n@@ -1170,1 +1170,0 @@\n-     * @throws UnsupportedOperationException if the control is not editable\n@@ -1172,0 +1171,2 @@\n+    \/\/ TODO javafx does not support the 'beep' functionality.  perhaps we should create a Tag.ERROR\n+    \/\/ for the application to provide audiovisual error feedback?\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/jfx\/incubator\/scene\/control\/richtext\/RichTextArea.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -80,2 +80,10 @@\n- * There are three ways of styling: using inline {@link StyleAttributeMap attributes}, relying on\n- * style names in the application style sheet, or using direct styles.\n+ * There are two ways of adding styles to the model:\n+ * <ul>\n+ * <li>Using the style names in the stylesheet or inline styles (example: {@code \"-fx-font-size:200%;\"}), or\n+ * <li>Using attributes defined in {@link StyleAttributeMap}, such as bold typeface, italic, and so on.\n+ *     In this case, the resulting paragraph appearance is decoupled from the stylesheet and will look the same\n+ *     regardless of the active stylesheet.\n+ * <\/ul>\n+ * The latter method is intended for applications where an editable control is needed, such as general purpose\n+ * rich text editor, the former is designed for view-only informational controls that must follow the application\n+ * theme and therefore are coupled to the stylesheet.\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/jfx\/incubator\/scene\/control\/richtext\/model\/StyledTextModel.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"}]}