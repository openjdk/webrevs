{"files":[{"patch":"@@ -216,1 +216,1 @@\n-            start = new TextPos(ix, 0);\n+            start = TextPos.ofLeading(ix, 0);\n@@ -234,1 +234,1 @@\n-            start = new TextPos(ix, 0);\n+            start = TextPos.ofLeading(ix, 0);\n@@ -416,1 +416,1 @@\n-            start = new TextPos(ix, 0);\n+            start = TextPos.ofLeading(ix, 0);\n@@ -439,1 +439,1 @@\n-            start = new TextPos(ix, 0);\n+            start = TextPos.ofLeading(ix, 0);\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/Actions.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -729,1 +729,1 @@\n-                start = new TextPos(ix, 0);\n+                start = TextPos.ofLeading(ix, 0);\n@@ -754,1 +754,1 @@\n-                start = new TextPos(ix, 0);\n+                start = TextPos.ofLeading(ix, 0);\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/notebook\/Actions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-                        TextPos p = new TextPos(ix, 0);\n+                        TextPos p = TextPos.ofLeading(ix, 0);\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/notebook\/DemoScriptEngine.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-                p = new TextPos(ix, off);\n+                p = TextPos.ofLeading(ix, off);\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/com\/sun\/jfx\/incubator\/scene\/control\/richtext\/Markers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-    public static final double PREF_HEIGHT = 100;\n+    public static final double PREF_HEIGHT = 176; \/\/ matches TextArea\n@@ -105,1 +105,1 @@\n-    public static final double PREF_WIDTH = 200;\n+    public static final double PREF_WIDTH = 176; \/\/ matches TextArea\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/com\/sun\/jfx\/incubator\/scene\/control\/richtext\/Params.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-        start = new TextPos(ix0, 0);\n+        start = TextPos.ofLeading(ix0, 0);\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/com\/sun\/jfx\/incubator\/scene\/control\/richtext\/RTAccessibilityHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -596,1 +596,1 @@\n-        TextPos p = new TextPos(ix, 0);\n+        TextPos p = TextPos.ofLeading(ix, 0);\n@@ -602,1 +602,1 @@\n-            p = new TextPos(ix, 0);\n+            p = TextPos.ofLeading(ix, 0);\n@@ -625,1 +625,1 @@\n-        return new TextPos(caret.index(), 0);\n+        return TextPos.ofLeading(caret.index(), 0);\n@@ -764,1 +764,1 @@\n-                    p = new TextPos(ix, 0);\n+                    p = TextPos.ofLeading(ix, 0);\n@@ -767,1 +767,1 @@\n-                    p = new TextPos(cell.getIndex(), cell.getTextLength());\n+                    p = TextPos.ofLeading(cell.getIndex(), cell.getTextLength());\n@@ -793,1 +793,1 @@\n-            return new TextPos(start.index(), ix);\n+            return TextPos.ofLeading(start.index(), ix);\n@@ -899,2 +899,2 @@\n-            TextPos p0 = new TextPos(index, off0);\n-            TextPos p1 = new TextPos(index, off1);\n+            TextPos p0 = TextPos.ofLeading(index, off0);\n+            TextPos p1 = TextPos.ofLeading(index, off1);\n@@ -914,1 +914,1 @@\n-            TextPos an = new TextPos(ix, 0);\n+            TextPos an = TextPos.ofLeading(ix, 0);\n@@ -939,1 +939,1 @@\n-                    start = new TextPos(ix - 1, off);\n+                    start = TextPos.ofLeading(ix - 1, off);\n@@ -945,1 +945,1 @@\n-                    start = new TextPos(ix, off);\n+                    start = TextPos.ofLeading(ix, off);\n@@ -987,2 +987,2 @@\n-                TextPos p0 = new TextPos(ix0, 0);\n-                TextPos p1 = clamp(new TextPos(ix1 + 1, 0));\n+                TextPos p0 = TextPos.ofLeading(ix0, 0);\n+                TextPos p1 = clamp(TextPos.ofLeading(ix1 + 1, 0));\n@@ -1405,1 +1405,1 @@\n-            return new TextPos(index, off);\n+            return TextPos.ofLeading(index, off);\n@@ -1430,1 +1430,1 @@\n-                return new TextPos(index, 0);\n+                return TextPos.ofLeading(index, 0);\n@@ -1440,1 +1440,1 @@\n-                return new TextPos(++index, 0);\n+                return TextPos.ofLeading(++index, 0);\n@@ -1445,1 +1445,1 @@\n-                return new TextPos(index, len);\n+                return TextPos.ofLeading(index, len);\n@@ -1450,1 +1450,1 @@\n-                        return new TextPos(index, next);\n+                        return TextPos.ofLeading(index, next);\n@@ -1483,1 +1483,1 @@\n-                return new TextPos(index, 0);\n+                return TextPos.ofLeading(index, 0);\n@@ -1497,1 +1497,1 @@\n-                    return new TextPos(index, len);\n+                    return TextPos.ofLeading(index, len);\n@@ -1501,1 +1501,1 @@\n-                    return new TextPos(index, next);\n+                    return TextPos.ofLeading(index, next);\n@@ -1509,1 +1509,1 @@\n-                        return new TextPos(index, next);\n+                        return TextPos.ofLeading(index, next);\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/com\/sun\/jfx\/incubator\/scene\/control\/richtext\/RichTextAreaBehavior.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -1135,1 +1135,1 @@\n-            return new TextPos(caretIndex, off);\n+            return TextPos.ofLeading(caretIndex, off);\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/com\/sun\/jfx\/incubator\/scene\/control\/richtext\/VFlow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+ *\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/jfx\/incubator\/scene\/control\/richtext\/CodeArea.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        return \"Marker{\" + getIndex() + \",\" + getOffset() + \"}\";\n+        return \"Marker{index=\" + getIndex() + \", offset=\" + getOffset() + \"}\";\n@@ -104,2 +104,2 @@\n-     * Returns the model paragraph index.\n-     * @return paragraph index\n+     * Returns the paragraph index.\n+     * @return the paragraph index\n@@ -112,2 +112,2 @@\n-     * Returns the insert offset within the paragraph.\n-     * @return offset value\n+     * Returns the text offset within the paragraph.\n+     * @return the offset value\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/jfx\/incubator\/scene\/control\/richtext\/Marker.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2243,1 +2243,1 @@\n-                    pos = new TextPos(pos.index(), ix);\n+                    pos = TextPos.ofLeading(pos.index(), ix);\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/jfx\/incubator\/scene\/control\/richtext\/RichTextArea.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-     * @return new instance {@code Node} \n+     * @return new instance {@code Node}\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/jfx\/incubator\/scene\/control\/richtext\/SideDecorator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-     * @param offset the offset in the text\n+     * @param offset the offset in the text which corresponds to the insertion position\n@@ -48,1 +48,1 @@\n-     * @param leading the bias relative to the character at charIndex\n+     * @param leading indicates whether the position is at the leading edge of the character at {@code charIndex}\n@@ -65,1 +65,1 @@\n-     * Creates a new text position.\n+     * Creates a new text position at the leading edge of the character at the specified text offset.\n@@ -70,2 +70,2 @@\n-    public TextPos(int index, int offset) {\n-        this(index, offset, offset, true);\n+    public static TextPos ofLeading(int index, int offset) {\n+        return new TextPos(index, offset, offset, true);\n@@ -75,1 +75,1 @@\n-     * Returns the model paragraph index.\n+     * Returns the paragraph index.\n@@ -153,4 +153,4 @@\n-            \"ix=\" + index +\n-            \", off=\" + offset +\n-            \", cix=\" + charIndex +\n-            (leading ? \", leading\" : \", trailing\") +\n+            \"index=\" + index +\n+            \", offset=\" + offset +\n+            \", charIndex=\" + charIndex +\n+            \", leading=\" + leading +\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/jfx\/incubator\/scene\/control\/richtext\/TextPos.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -553,1 +553,1 @@\n-            return new TextPos(ix, len);\n+            return TextPos.ofLeading(ix, len);\n@@ -560,1 +560,1 @@\n-                return new TextPos(ct - 1, len);\n+                return TextPos.ofLeading(ct - 1, len);\n@@ -591,1 +591,1 @@\n-            return new TextPos(index, off);\n+            return TextPos.ofLeading(index, off);\n@@ -704,1 +704,1 @@\n-        TextPos newEnd = new TextPos(index, offset);\n+        TextPos newEnd = TextPos.ofLeading(index, offset);\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/jfx\/incubator\/scene\/control\/richtext\/model\/StyledTextModel.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-        return new TextPos(index, offset);\n+        return TextPos.ofLeading(index, offset);\n","filename":"modules\/jfx.incubator.richtext\/src\/test\/java\/test\/jfx\/incubator\/scene\/control\/richtext\/model\/TestRichTextModel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-                m.replace(null, new TextPos(0, 2), new TextPos(0, 2), \"\\n\", false);\n+                m.replace(null, TextPos.ofLeading(0, 2), TextPos.ofLeading(0, 2), \"\\n\", false);\n@@ -88,1 +88,1 @@\n-                m.replace(null, new TextPos(0, 4), new TextPos(0, 4), \"\\n\", false);\n+                m.replace(null, TextPos.ofLeading(0, 4), TextPos.ofLeading(0, 4), \"\\n\", false);\n@@ -117,1 +117,1 @@\n-        return new TextPos(index, offset);\n+        return TextPos.ofLeading(index, offset);\n","filename":"modules\/jfx.incubator.richtext\/src\/test\/java\/test\/jfx\/incubator\/scene\/control\/richtext\/model\/TestRichTextModelAttributes.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}