{"files":[{"patch":"@@ -38,1 +38,2 @@\n-import java.util.Optional;\n+import java.util.Locale;\n+import javafx.application.Platform;\n@@ -46,4 +47,0 @@\n-import javafx.scene.control.Alert;\n-import javafx.scene.control.Alert.AlertType;\n-import javafx.scene.control.ButtonBar.ButtonData;\n-import javafx.scene.control.ButtonType;\n@@ -59,1 +56,0 @@\n-import com.oracle.demo.richtext.util.SavePane;\n@@ -86,0 +82,1 @@\n+    public final FxAction saveAs = new FxAction(this::saveAs);\n@@ -248,1 +245,1 @@\n-    private void newDocument() {\n+    void newDocument() {\n@@ -256,1 +253,1 @@\n-    private void open() {\n+    void open() {\n@@ -263,1 +260,6 @@\n-        \/\/ TODO add extensions\n+        ch.getExtensionFilters().addAll(\n+            filterAll(),\n+            filterRich(),\n+            filterRtf()\n+        );\n+\n@@ -268,1 +270,2 @@\n-                readFile(f, RichTextFormatHandler.DATA_FORMAT);\n+                DataFormat fmt = guessFormat(f);\n+                readFile(f, fmt);\n@@ -275,2 +278,1 @@\n-    \/\/ FIX this is too simplistic, need save() and save as...\n-    private void save() {\n+    void save() {\n@@ -279,6 +281,2 @@\n-            FileChooser ch = new FileChooser();\n-            ch.setTitle(\"Save File\");\n-            \/\/ TODO add extensions\n-            Window w = FX.getParentWindow(control);\n-            f = ch.showSaveDialog(w);\n-            if (f == null) {\n+            f = chooseFileForSave();\n+            if (f != null) {\n@@ -288,0 +286,1 @@\n+\n@@ -289,1 +288,1 @@\n-            writeFile(f, RichTextFormatHandler.DATA_FORMAT);\n+            writeFile(f);\n@@ -295,1 +294,32 @@\n-    \/\/ returns true if the user chose to Cancel\n+    void saveAs() {\n+        File f = chooseFileForSave();\n+        if (f != null) {\n+            try {\n+                writeFile(f);\n+            } catch(Exception e) {\n+                new ExceptionDialog(control, e).open();\n+            }\n+        }\n+    }\n+\n+    private File chooseFileForSave() {\n+        File f = getFile();\n+        FileChooser ch = new FileChooser();\n+        if (f != null) {\n+            ch.setInitialDirectory(f.getParentFile());\n+            ch.setInitialFileName(f.getName());\n+        }\n+        ch.setTitle(\"Save File\");\n+        ch.getExtensionFilters().addAll(\n+            filterRich(),\n+            filterRtf(),\n+            filterTxt()\n+            \/\/filterAll()\n+        );\n+        Window w = FX.getParentWindow(control);\n+        return ch.showSaveDialog(w);\n+    }\n+\n+    \/**\n+     * @return true if the user chose to Cancel\n+     *\/\n@@ -298,42 +328,2 @@\n-            \/\/ alert: has been modified. do you want to save?\n-            Alert alert = new Alert(AlertType.CONFIRMATION);\n-            alert.initOwner(FX.getParentWindow(control));\n-            alert.setTitle(\"Document is Modified\");\n-            alert.setHeaderText(\"Do you want to save this document?\");\n-            ButtonType delete = new ButtonType(\"Delete\");\n-            ButtonType cancel = new ButtonType(\"Cancel\", ButtonData.CANCEL_CLOSE);\n-            ButtonType save = new ButtonType(\"Save\", ButtonData.APPLY);\n-            alert.getButtonTypes().setAll(\n-                delete,\n-                cancel,\n-                save\n-            );\n-\n-            File f = getFile();\n-            SavePane sp = new SavePane();\n-            sp.setFile(f);\n-            alert.getDialogPane().setContent(sp);\n-            Optional<ButtonType> result = alert.showAndWait();\n-            if (result.isPresent()) {\n-                ButtonType t = result.get();\n-                if (t == delete) {\n-                    return false;\n-                } else if (t == cancel) {\n-                    return true;\n-                } else {\n-                    \/\/ save using info in the panel\n-                    f = sp.getFile();\n-                    DataFormat fmt = sp.getFileFormat();\n-                    \/\/ FIX\n-                    fmt = RichTextFormatHandler.DATA_FORMAT;\n-\n-                    try {\n-                        writeFile(f, fmt);\n-                    } catch (Exception e) {\n-                        new ExceptionDialog(control, e).open();\n-                        return true;\n-                    }\n-                }\n-            } else {\n-                return true;\n-            }\n+            saveAs();\n+            return true;\n@@ -353,1 +343,2 @@\n-    private void writeFile(File f, DataFormat fmt) throws Exception {\n+    private void writeFile(File f) throws Exception {\n+        DataFormat fmt = guessFormat(f);\n@@ -361,1 +352,1 @@\n-    public void copy() {\n+    void copy() {\n@@ -365,1 +356,1 @@\n-    public void cut() {\n+    void cut() {\n@@ -369,1 +360,1 @@\n-    public void paste() {\n+    void paste() {\n@@ -373,1 +364,1 @@\n-    public void pasteUnformatted() {\n+    void pasteUnformatted() {\n@@ -377,1 +368,1 @@\n-    public void selectAll() {\n+    void selectAll() {\n@@ -381,1 +372,1 @@\n-    public void redo() {\n+    void redo() {\n@@ -385,1 +376,1 @@\n-    public void undo() {\n+    void undo() {\n@@ -389,1 +380,1 @@\n-    public void bold() {\n+    void bold() {\n@@ -393,1 +384,1 @@\n-    public void italic() {\n+    void italic() {\n@@ -397,1 +388,1 @@\n-    public void strikeThrough() {\n+    void strikeThrough() {\n@@ -401,1 +392,1 @@\n-    public void underline() {\n+    void underline() {\n@@ -462,0 +453,35 @@\n+\n+    static FileChooser.ExtensionFilter filterAll() {\n+        return new FileChooser.ExtensionFilter(\"All Files\", \"*.*\");\n+    }\n+\n+    static FileChooser.ExtensionFilter filterRich() {\n+        return new FileChooser.ExtensionFilter(\"Rich Text Files\", \"*.rich\");\n+    }\n+\n+    static FileChooser.ExtensionFilter filterRtf() {\n+        return new FileChooser.ExtensionFilter(\"RTF Files\", \"*.rtf\");\n+    }\n+\n+    static FileChooser.ExtensionFilter filterTxt() {\n+        return new FileChooser.ExtensionFilter(\"Text Files\", \"*.txt\");\n+    }\n+\n+    private static DataFormat guessFormat(File f) {\n+        String name = f.getName().toLowerCase(Locale.ENGLISH);\n+        if (name.endsWith(\".rich\")) {\n+            return RichTextFormatHandler.DATA_FORMAT;\n+        } else if (name.endsWith(\".rtf\")) {\n+            return DataFormat.RTF;\n+        }\n+        return DataFormat.PLAIN_TEXT;\n+    }\n+\n+    public void quit() {\n+        if (isModified()) {\n+            if (askToSave()) {\n+                return;\n+            }\n+        }\n+        Platform.exit();\n+    }\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/Actions.java","additions":100,"deletions":74,"binary":false,"changes":174,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import javafx.scene.input.KeyCombination;\n@@ -70,2 +71,0 @@\n-        \/\/ TODO input map for the window: add shortcut-S for saving\n-\n@@ -94,1 +93,1 @@\n-        FX.item(m, \"New\", actions.newDocument);\n+        FX.item(m, \"New\", actions.newDocument).setAccelerator(KeyCombination.keyCombination(\"shortcut+N\"));\n@@ -97,3 +96,3 @@\n-        FX.item(m, \"Save...\", actions.save);\n-        \/\/ TODO print?\n-        FX.item(m, \"Quit\", () -> Platform.exit());\n+        FX.item(m, \"Save\", actions.save).setAccelerator(KeyCombination.keyCombination(\"shortcut+S\"));\n+        FX.item(m, \"Save As...\", actions.saveAs).setAccelerator(KeyCombination.keyCombination(\"shortcut+A\"));\n+        FX.item(m, \"Quit\", actions::quit);\n@@ -113,2 +112,2 @@\n-        FX.item(m, \"Bold\", actions.bold);\n-        FX.item(m, \"Italic\", actions.italic);\n+        FX.item(m, \"Bold\", actions.bold).setAccelerator(KeyCombination.keyCombination(\"shortcut+B\"));\n+        FX.item(m, \"Italic\", actions.italic).setAccelerator(KeyCombination.keyCombination(\"shortcut+I\"));\n@@ -116,1 +115,1 @@\n-        FX.item(m, \"Underline\", actions.underline);\n+        FX.item(m, \"Underline\", actions.underline).setAccelerator(KeyCombination.keyCombination(\"shortcut+U\"));\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/editor\/RichEditorDemoWindow.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1,156 +0,0 @@\n-\/*\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package com.oracle.demo.richtext.util;\n-\n-import java.io.File;\n-import java.util.ArrayList;\n-import javafx.application.Platform;\n-import javafx.geometry.HPos;\n-import javafx.geometry.Insets;\n-import javafx.scene.control.Button;\n-import javafx.scene.control.ComboBox;\n-import javafx.scene.control.Label;\n-import javafx.scene.control.TextField;\n-import javafx.scene.input.DataFormat;\n-import javafx.scene.layout.GridPane;\n-import javafx.scene.layout.Priority;\n-import javafx.stage.DirectoryChooser;\n-import javafx.stage.Window;\n-\n-\/**\n- * Part of the Save As dialog.\n- *\n- * @author Andy Goryachev\n- *\/\n-public class SavePane extends GridPane {\n-    private final TextField nameField;\n-    private final ComboBox<File> folderField;\n-    private final ComboBox<DataFormat> formatField;\n-\n-    public SavePane() {\n-        nameField = new TextField();\n-        setHgrow(nameField, Priority.ALWAYS);\n-        setFillWidth(nameField, Boolean.TRUE);\n-\n-        folderField = new ComboBox<>();\n-        setHgrow(folderField, Priority.ALWAYS);\n-        setFillWidth(folderField, Boolean.TRUE);\n-\n-        formatField = new ComboBox<>();\n-\n-        Button browse = new Button(\"Browse\");\n-        setFillWidth(browse, Boolean.TRUE);\n-        browse.setOnAction((ev) -> {\n-            browse();\n-        });\n-\n-        int r = 0;\n-        add(label(\"Save As:\"), 0, r);\n-        add(nameField, 1, r, 3, 1);\n-        r++;\n-        add(label(\"Where:\"), 0, r);\n-        add(folderField, 1, r);\n-        add(browse, 2, r);\n-        r++;\n-        add(label(\"File Format:\"), 0, r);\n-        add(formatField, 1, r, 2, 1);\n-\n-        setHgap(10);\n-        setVgap(5);\n-        setPadding(new Insets(10));\n-\n-        Platform.runLater(() -> {\n-            nameField.selectAll();\n-            nameField.requestFocus();\n-        });\n-    }\n-\n-    private static Label label(String text) {\n-        Label t = new Label(text);\n-        setHalignment(t, HPos.RIGHT);\n-        return t;\n-    }\n-\n-    public void setFile(File f) {\n-        if (f == null) {\n-            nameField.setText(\"Untitled.rich\");\n-            setDir(null);\n-        } else {\n-            nameField.setText(f.getName());\n-            setDir(f.getParentFile());\n-        }\n-    }\n-\n-    private void setDir(File dir) {\n-        if (dir == null) {\n-            dir = new File(System.getProperty(\"user.home\"));\n-        }\n-        ArrayList<File> fs = new ArrayList<>();\n-        File f = dir;\n-        do {\n-            fs.add(f);\n-            f = f.getParentFile();\n-        } while (f != null);\n-        folderField.getItems().setAll(fs);\n-        folderField.getSelectionModel().select(dir);\n-    }\n-\n-    public void setFormat(DataFormat f) {\n-        \/\/ TODO\n-    }\n-\n-    public File getFile() {\n-        File dir = getDir();\n-        \/\/ TODO extension based on data format\n-        return new File(dir, nameField.getText());\n-    }\n-\n-    public DataFormat getFileFormat() {\n-        return null; \/\/ FIX\n-    }\n-\n-    private File getDir() {\n-        return folderField.getSelectionModel().getSelectedItem();\n-    }\n-\n-    private void browse() {\n-        DirectoryChooser ch = new DirectoryChooser();\n-        ch.setTitle(\"Choose Folder\");\n-        ch.setInitialDirectory(getDir());\n-        Window w = FX.getParentWindow(this);\n-        File f = ch.showDialog(w);\n-        if (f != null) {\n-            setDir(f);\n-        }\n-    }\n-}\n","filename":"apps\/samples\/RichTextAreaDemo\/src\/com\/oracle\/demo\/richtext\/util\/SavePane.java","additions":0,"deletions":156,"binary":false,"changes":156,"status":"deleted"},{"patch":"@@ -5998,6 +5998,6 @@\n-\t                        dir = new File(TEST_SDK_PATH, \"sdk\/lib\/${project.ext.moduleName}.jar\")\n-\t                        themod = dir.toURI()\n-\t                        runJavaPolicyFile <<  \"grant codeBase \\\"${themod}\\\" {\\n\" +\n-\t                        \"    permission java.security.AllPermission;\\n\" +\n-\t                        \"};\\n\"\n-\t                    }\n+                            dir = new File(TEST_SDK_PATH, \"sdk\/lib\/${project.ext.moduleName}.jar\")\n+                            themod = dir.toURI()\n+                            runJavaPolicyFile <<  \"grant codeBase \\\"${themod}\\\" {\\n\" +\n+                            \"    permission java.security.AllPermission;\\n\" +\n+                            \"};\\n\"\n+                        }\n","filename":"build.gradle","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -442,1 +442,1 @@\n-        while ((c = in.read()) >= 0) {\n+        while ((c = rd.read()) >= 0) {\n","filename":"modules\/jfx.incubator.richtext\/src\/main\/java\/com\/sun\/jfx\/incubator\/scene\/control\/richtext\/util\/RichUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}