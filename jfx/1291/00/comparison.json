{"files":[{"patch":"@@ -772,1 +772,1 @@\n-        notifyAccessibleAttributeChanged(AccessibleAttribute.TEXT);\n+        notifyAccessibleAttributeChanged(AccessibleAttribute.VALUE_STRING);\n@@ -837,1 +837,1 @@\n-            case TEXT: {\n+            case VALUE_STRING: {\n@@ -848,0 +848,9 @@\n+\n+            case TEXT: {\n+                String accText = getAccessibleText();\n+                return (accText != null) ? accText : \"\";\n+            }\n+\n+            case EDITABLE:\n+                return isEditable();\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Spinner.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -366,6 +366,2 @@\n-                    if (getAttribute(ROLE) == AccessibleRole.SPINNER) {\n-                        UiaRaiseAutomationPropertyChangedEvent(peer, UIA_NamePropertyId, vo, vn);\n-                    } else {\n-                        \/* Combo and Text both implement IValueProvider *\/\n-                        UiaRaiseAutomationPropertyChangedEvent(peer, UIA_ValueValuePropertyId, vo, vn);\n-                    }\n+                    \/* Combo and Text both implement IValueProvider *\/\n+                    UiaRaiseAutomationPropertyChangedEvent(peer, UIA_ValueValuePropertyId, vo, vn);\n@@ -378,0 +374,12 @@\n+            case VALUE_STRING:\n+                String val = (String)getAttribute(VALUE_STRING);\n+                if (val != null) {\n+                    WinVariant vo = new WinVariant();\n+                    vo.vt = WinVariant.VT_BSTR;\n+                    vo.bstrVal = \"\";\n+                    WinVariant vn = new WinVariant();\n+                    vn.vt = WinVariant.VT_BSTR;\n+                    vn.bstrVal = val;\n+                    UiaRaiseAutomationPropertyChangedEvent(peer, UIA_ValueValuePropertyId, vo, vn);\n+                }\n+                break;\n@@ -689,0 +697,3 @@\n+            case SPINNER:\n+                impl = patternId == UIA_ValuePatternId;\n+                break;\n@@ -1322,0 +1333,1 @@\n+                case SPINNER:\n@@ -1370,0 +1382,8 @@\n+        AccessibleRole role = (AccessibleRole)getAttribute(ROLE);\n+        if (role != null) {\n+            switch (role) {\n+                case SPINNER:\n+                    return (String)getAttribute(VALUE_STRING);\n+                default:\n+            }\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinAccessible.java","additions":26,"deletions":6,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -777,0 +777,11 @@\n+    \/**\n+     * Returns the value as string for the node.\n+     * <ul>\n+     * <li>Used by: Spinner <\/li>\n+     * <li>Needs notify: yes <\/li>\n+     * <li>Return Type: {@link String} <\/li>\n+     * <li>Parameters: <\/li>\n+     * <\/ul>\n+     *\/\n+    VALUE_STRING(String.class),\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/AccessibleAttribute.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}