{"files":[{"patch":"@@ -224,0 +224,8 @@\n+    public static void nodeResolvedOrientationInvalidated(Node node) {\n+        nodeAccessor.nodeResolvedOrientationInvalidated(node);\n+    }\n+\n+    public static void setInheritOrientationFromScene(Node node, boolean value) {\n+        nodeAccessor.setInheritOrientationFromScene(node, value);\n+    }\n+\n@@ -386,0 +394,2 @@\n+        void nodeResolvedOrientationInvalidated(Node node);\n+        void setInheritOrientationFromScene(Node node, boolean value);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/NodeHelper.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import javafx.geometry.NodeOrientation;\n@@ -52,1 +53,3 @@\n-        this.subscription = scene.rootProperty().subscribe(this::onSceneRootChanged);\n+        this.subscription = Subscription.combine(\n+            scene.rootProperty().subscribe(this::onSceneRootChanged),\n+            scene.effectiveNodeOrientationProperty().subscribe(this::onEffectiveNodeOrientationInvalidated));\n@@ -98,0 +101,1 @@\n+            NodeHelper.setInheritOrientationFromScene(this.root, false);\n@@ -105,0 +109,1 @@\n+            NodeHelper.setInheritOrientationFromScene(root, true);\n@@ -145,0 +150,6 @@\n+\n+    private void onEffectiveNodeOrientationInvalidated(NodeOrientation unused) {\n+        if (root != null) {\n+            NodeHelper.nodeResolvedOrientationInvalidated(root);\n+        }\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/ViewSceneOverlay.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -527,0 +527,10 @@\n+            @Override\n+            public void nodeResolvedOrientationInvalidated(Node node) {\n+                node.nodeResolvedOrientationInvalidated();\n+            }\n+\n+            @Override\n+            public void setInheritOrientationFromScene(Node node, boolean value) {\n+                node.setInheritOrientationFromScene(value);\n+            }\n+\n@@ -1177,2 +1187,2 @@\n-        if (getParent() == null) {\n-            \/\/ if we are the root we need to handle scene change\n+\n+        if (getParent() == null || isInheritOrientationFromScene(resolvedNodeOrientation)) {\n@@ -6540,0 +6550,7 @@\n+    \/**\n+     * Indicates that the effective node orientation only depends on the explicit value set on this node\n+     * and on the scene (if the node orientation is inherited), but not on the parent. This flag must only\n+     * be set with {@link NodeHelper#setInheritOrientationFromScene(Node, boolean)} for scene overlays.\n+     *\/\n+    private static final byte INHERIT_ORIENTATION_FROM_SCENE = 4;\n+\n@@ -6638,0 +6655,4 @@\n+        if (isInheritOrientationFromScene(oldResolvedNodeOrientation)) {\n+            resolvedNodeOrientation |= INHERIT_ORIENTATION_FROM_SCENE;\n+        }\n+\n@@ -6658,0 +6679,4 @@\n+        if (isInheritOrientationFromScene(resolvedNodeOrientation)) {\n+            return null;\n+        }\n+\n@@ -6675,0 +6700,4 @@\n+        if (isInheritOrientationFromScene(resolvedNodeOrientation)) {\n+            return null;\n+        }\n+\n@@ -6768,0 +6797,12 @@\n+    private static boolean isInheritOrientationFromScene(byte resolvedNodeOrientation) {\n+        return (resolvedNodeOrientation & INHERIT_ORIENTATION_FROM_SCENE) != 0;\n+    }\n+\n+    private void setInheritOrientationFromScene(boolean value) {\n+        if (value) {\n+            resolvedNodeOrientation |= INHERIT_ORIENTATION_FROM_SCENE;\n+        } else {\n+            resolvedNodeOrientation &= ~INHERIT_ORIENTATION_FROM_SCENE;\n+        }\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":43,"deletions":2,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -92,1 +92,3 @@\n-        var unused = new Scene(overlay);\n+        var scene = new Scene(overlay);\n+        scene.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+\n@@ -94,1 +96,0 @@\n-        overlay.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n@@ -147,1 +148,3 @@\n-        var unused = new Scene(overlay);\n+        var scene = new Scene(overlay);\n+        scene.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+\n@@ -149,1 +152,0 @@\n-        overlay.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n@@ -200,1 +202,3 @@\n-        var unused = new Scene(overlay);\n+        var scene = new Scene(overlay);\n+        scene.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+\n@@ -202,1 +206,0 @@\n-        overlay.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n@@ -255,1 +258,3 @@\n-        var unused = new Scene(overlay);\n+        var scene = new Scene(overlay);\n+        scene.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+\n@@ -257,1 +262,0 @@\n-        overlay.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n@@ -310,1 +314,3 @@\n-        var unused = new Scene(overlay);\n+        var scene = new Scene(overlay);\n+        scene.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+\n@@ -312,1 +318,0 @@\n-        overlay.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n@@ -527,2 +532,3 @@\n-        assertEquals(x, node.getLayoutX());\n-        assertEquals(y, node.getLayoutY());\n+        var bounds = node.localToScene(node.getBoundsInLocal());\n+        assertEquals(x, bounds.getMinX());\n+        assertEquals(y, bounds.getMinY());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/glass\/ui\/HeaderButtonOverlayTest.java","additions":18,"deletions":12,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import com.sun.javafx.scene.NodeHelper;\n@@ -35,0 +36,1 @@\n+import org.junit.jupiter.api.Test;\n@@ -185,0 +187,17 @@\n+    @Test\n+    public void overlayOrientationIsInheritedOnlyFromSceneOrientation() {\n+        var node = new Group();\n+        node.setNodeOrientation(NodeOrientation.INHERIT);\n+        NodeHelper.setInheritOrientationFromScene(node, true);\n+        var parent = new Group(node);\n+        parent.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+        var scene = new Scene(parent);\n+        scene.setNodeOrientation(NodeOrientation.LEFT_TO_RIGHT);\n+\n+        NodeHelper.nodeResolvedOrientationInvalidated(node);\n+        assertEquals(NodeOrientation.LEFT_TO_RIGHT, node.getEffectiveNodeOrientation());\n+\n+        scene.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+        NodeHelper.nodeResolvedOrientationInvalidated(node);\n+        assertEquals(NodeOrientation.RIGHT_TO_LEFT, node.getEffectiveNodeOrientation());\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Node_effectiveOrientation_Test.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -140,0 +140,2 @@\n+            var nodeOrientation = NodeOrientation.valueOf(nodeOrientationComboBox.getValue());\n+\n@@ -141,5 +143,5 @@\n-                case \"simple\" -> createSimpleHeaderBarRoot(newStage, false);\n-                case \"simple \/ custom buttons\" -> createSimpleHeaderBarRoot(newStage, true);\n-                case \"split\" -> createSplitHeaderBarRoot(newStage, false);\n-                case \"split \/ custom buttons\" -> createSplitHeaderBarRoot(newStage, true);\n-                default -> new BorderPane(createWindowActions(newStage));\n+                case \"simple\" -> createSimpleHeaderBarRoot(newStage, nodeOrientation, false);\n+                case \"simple \/ custom buttons\" -> createSimpleHeaderBarRoot(newStage, nodeOrientation, true);\n+                case \"split\" -> createSplitHeaderBarRoot(newStage, nodeOrientation, false);\n+                case \"split \/ custom buttons\" -> createSplitHeaderBarRoot(newStage, nodeOrientation, true);\n+                default -> new BorderPane(createWindowActions(newStage, nodeOrientation));\n@@ -149,1 +151,1 @@\n-            scene.setNodeOrientation(NodeOrientation.valueOf(nodeOrientationComboBox.getValue()));\n+            scene.setNodeOrientation(nodeOrientation);\n@@ -169,1 +171,1 @@\n-    private Parent createSimpleHeaderBarRoot(Stage stage, boolean customWindowButtons) {\n+    private Parent createSimpleHeaderBarRoot(Stage stage, NodeOrientation nodeOrientation, boolean customWindowButtons) {\n@@ -237,1 +239,1 @@\n-        borderPane.setCenter(createWindowActions(stage));\n+        borderPane.setCenter(createWindowActions(stage, nodeOrientation));\n@@ -242,1 +244,1 @@\n-    private Parent createSplitHeaderBarRoot(Stage stage, boolean customWindowButtons) {\n+    private Parent createSplitHeaderBarRoot(Stage stage, NodeOrientation nodeOrientation, boolean customWindowButtons) {\n@@ -280,1 +282,1 @@\n-        left.setCenter(createWindowActions(stage));\n+        left.setCenter(createWindowActions(stage, nodeOrientation));\n@@ -307,1 +309,8 @@\n-    private Parent createWindowActions(Stage stage) {\n+    private Parent createWindowActions(Stage stage, NodeOrientation nodeOrientation) {\n+        var nodeOrientations = Arrays.stream(NodeOrientation.values()).map(Enum::name).toList();\n+        var nodeOrientationComboBox = new ComboBox<>(FXCollections.observableArrayList(nodeOrientations));\n+        nodeOrientationComboBox.getSelectionModel().select(nodeOrientation.ordinal());\n+        nodeOrientationComboBox.getSelectionModel().selectedItemProperty().addListener((_, _, orientation) -> {\n+            stage.getScene().setNodeOrientation(NodeOrientation.valueOf(orientation));\n+        });\n+\n@@ -320,1 +329,2 @@\n-        var root = new VBox(toggleFullScreenButton, toggleMaximizedButton, toggleIconifiedButton, closeButton);\n+        var root = new VBox(nodeOrientationComboBox, toggleFullScreenButton, toggleMaximizedButton,\n+                            toggleIconifiedButton, closeButton);\n","filename":"tests\/manual\/monkey\/src\/com\/oracle\/tools\/fx\/monkey\/tools\/StageTesterWindow.java","additions":22,"deletions":12,"binary":false,"changes":34,"status":"modified"}]}