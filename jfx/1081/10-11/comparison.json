{"files":[{"patch":"@@ -56,1 +56,1 @@\n-     * @throws NullPointerException when listener is {@code null}\n+     * @throws NullPointerException when any argument is {@code null}\n@@ -63,10 +63,4 @@\n-        Object data = getData(instance);\n-\n-        if (data == null) {\n-            setData(instance, listener);\n-        }\n-        else if (data instanceof ListenerList<?> list) {\n-            list.add(listener);\n-        }\n-        else {\n-            setData(instance, new ListenerList<>(data, listener));\n+        switch (getData(instance)) {\n+            case null -> setData(instance, listener);\n+            case ListenerList<?> list -> list.add(listener);\n+            case Object data -> setData(instance, new ListenerList<>(data, listener));\n@@ -81,1 +75,1 @@\n-     * @throws NullPointerException when listener is {@code null}\n+     * @throws NullPointerException when any argument is {@code null}\n@@ -88,10 +82,4 @@\n-        Object data = getData(instance);\n-\n-        if (data == null) {\n-            setData(instance, listener);\n-        }\n-        else if (data instanceof ListenerList<?> list) {\n-            list.add(listener);\n-        }\n-        else {\n-            setData(instance, new ListenerList<>(data, listener));\n+        switch (getData(instance)) {\n+            case null -> setData(instance, listener);\n+            case ListenerList<?> list -> list.add(listener);\n+            case Object data -> setData(instance, new ListenerList<>(data, listener));\n@@ -107,1 +95,1 @@\n-     * @throws NullPointerException when listener is {@code null}\n+     * @throws NullPointerException when any argument is {@code null}\n@@ -142,0 +130,1 @@\n+     * @throws NullPointerException when {@code instance} is {@code null}\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/ListenerManager.java","additions":12,"deletions":23,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-     * @param instance the instance it is located in, never {@code null}\n+     * @param instance the instance it is located in, cannot be {@code null}\n@@ -48,0 +48,1 @@\n+     * @throws NullPointerException when {@code instance} is {@code null}\n@@ -54,1 +55,1 @@\n-     * @param instance the instance it is located in, never {@code null}\n+     * @param instance the instance it is located in, cannot be {@code null}\n@@ -56,0 +57,1 @@\n+     * @throws NullPointerException when {@code instance} is {@code null}\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/ListenerManagerBase.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/OldValueCachingListenerList.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * than one listener, the field will hold a {@link OldValueCachingListenerList}. It\n+ * than one listener, the field will hold an {@link OldValueCachingListenerList}. It\n@@ -64,1 +64,1 @@\n-     * @throws NullPointerException when listener is {@code null}\n+     * @throws NullPointerException when any argument is {@code null}\n@@ -71,14 +71,5 @@\n-        Object data = getData(instance);\n-\n-        if (data == null) {\n-            setData(instance, listener);\n-        }\n-        else if (data instanceof OldValueCachingListenerList<?> list) {\n-            list.add(listener);\n-        }\n-        else if (data instanceof ChangeListenerWrapper) {\n-            @SuppressWarnings(\"unchecked\")\n-            ChangeListenerWrapper<T> wrapper = (ChangeListenerWrapper<T>) data;\n-            OldValueCachingListenerList<T> list = new OldValueCachingListenerList<>(wrapper.listener, listener);\n-\n-            list.putLatestValue(wrapper.latestValue);\n+        switch (getData(instance)) {\n+            case null -> setData(instance, listener);\n+            case OldValueCachingListenerList<?> list -> list.add(listener);\n+            case ChangeListenerWrapper<?> wrapper -> {\n+                OldValueCachingListenerList<Object> list = new OldValueCachingListenerList<>(wrapper.listener, listener);\n@@ -86,4 +77,4 @@\n-            setData(instance, list);\n-        }\n-        else {\n-            setData(instance, new OldValueCachingListenerList<>(data, listener));\n+                list.putLatestValue(wrapper.latestValue);\n+                setData(instance, list);\n+            }\n+            case Object data -> setData(instance, new OldValueCachingListenerList<>(data, listener));\n@@ -98,1 +89,1 @@\n-     * @throws NullPointerException when listener is {@code null}\n+     * @throws NullPointerException when any argument is {@code null}\n@@ -103,1 +94,5 @@\n-        Object data = getData(instance);\n+        switch (getData(instance)) {\n+            case null -> setData(instance, new ChangeListenerWrapper<>(listener, instance.getValue()));\n+            case OldValueCachingListenerList<?> genericList -> {\n+                @SuppressWarnings(\"unchecked\")\n+                OldValueCachingListenerList<T> list = (OldValueCachingListenerList<T>) genericList;\n@@ -105,6 +100,3 @@\n-        if (data == null) {\n-            setData(instance, new ChangeListenerWrapper<>(listener, instance.getValue()));\n-        }\n-        else if (data instanceof OldValueCachingListenerList) {\n-            @SuppressWarnings(\"unchecked\")\n-            OldValueCachingListenerList<T> list = (OldValueCachingListenerList<T>) data;\n+                if (!list.hasChangeListeners()) {\n+                    list.putLatestValue(instance.getValue());\n+                }\n@@ -112,2 +104,1 @@\n-            if (!list.hasChangeListeners()) {\n-                list.putLatestValue(instance.getValue());\n+                list.add(listener);\n@@ -115,0 +106,2 @@\n+            case ChangeListenerWrapper<?> wrapper -> {\n+                OldValueCachingListenerList<Object> list = new OldValueCachingListenerList<>(wrapper.listener, listener);\n@@ -116,8 +109,1 @@\n-            list.add(listener);\n-        }\n-        else if (data instanceof ChangeListenerWrapper) {\n-            @SuppressWarnings(\"unchecked\")\n-            ChangeListenerWrapper<T> wrapper = (ChangeListenerWrapper<T>) data;\n-            OldValueCachingListenerList<T> list = new OldValueCachingListenerList<>(wrapper.listener, listener);\n-\n-            list.putLatestValue(wrapper.latestValue);\n+                list.putLatestValue(wrapper.latestValue);\n@@ -125,4 +111,4 @@\n-            setData(instance, list);\n-        }\n-        else {\n-            OldValueCachingListenerList<T> list = new OldValueCachingListenerList<>(data, listener);\n+                setData(instance, list);\n+            }\n+            case Object data -> {\n+                OldValueCachingListenerList<T> list = new OldValueCachingListenerList<>(data, listener);\n@@ -130,1 +116,1 @@\n-            list.putLatestValue(instance.getValue());\n+                list.putLatestValue(instance.getValue());\n@@ -132,1 +118,2 @@\n-            setData(instance, list);\n+                setData(instance, list);\n+            }\n@@ -141,1 +128,1 @@\n-     * @throws NullPointerException when listener is {@code null}\n+     * @throws NullPointerException when any argument is {@code null}\n@@ -167,0 +154,1 @@\n+     * @throws NullPointerException when {@code instance} is {@code null}\n@@ -206,1 +194,2 @@\n-    static class ChangeListenerWrapper<T> implements ChangeListener<T> {\n+    private static class ChangeListenerWrapper<T> implements ChangeListener<T> {\n+\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/OldValueCachingListenerManager.java","additions":35,"deletions":46,"binary":false,"changes":81,"status":"modified"}]}