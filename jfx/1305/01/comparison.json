{"files":[{"patch":"@@ -599,2 +599,8 @@\n-\n-    GdkGrabStatus status = gdk_pointer_grab(gdkWindow, owner_events, (GdkEventMask)\n+    GdkGrabStatus status;\n+    if (!wrapped_gdk_seat_grab(gdkWindow,\n+            1 << 0 | 1 << 1 | 1 << 2 \/* GDK_SEAT_CAPABILITY_ALL_POINTING *\/,\n+            owner_events, cursor, NULL,\n+            NULL \/* GdkSeatGrabPrepareFunc *\/,\n+            NULL,\n+            &status)) {\n+        status = gdk_pointer_grab(gdkWindow, owner_events, (GdkEventMask)\n@@ -610,1 +616,1 @@\n-\n+    }\n@@ -615,2 +621,4 @@\n-glass_gdk_mouse_devices_ungrab() {\n-    gdk_pointer_ungrab(GDK_CURRENT_TIME);\n+glass_gdk_mouse_devices_ungrab(GdkWindow *gdkWindow) {\n+    if (!wrapped_gdk_seat_ungrab(gdkWindow)) {\n+        gdk_pointer_ungrab(GDK_CURRENT_TIME);\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_general.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -320,1 +320,1 @@\n-glass_gdk_mouse_devices_ungrab();\n+glass_gdk_mouse_devices_ungrab(GdkWindow *gdkWindow);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_general.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -613,1 +613,1 @@\n-    glass_gdk_mouse_devices_ungrab();\n+    glass_gdk_mouse_devices_ungrab(gdk_window);\n@@ -631,1 +631,1 @@\n-        glass_gdk_mouse_devices_ungrab();\n+        glass_gdk_mouse_devices_ungrab(gdk_window);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,0 +151,68 @@\n+static GdkSeat * (*_gdk_display_get_default_seat) (GdkDisplay *display);\n+\n+\/\/ Note added in libgdk 3.20 which is > our OEL 7.0 version of 3.8\n+GdkSeat * wrapped_gdk_display_get_default_seat (GdkDisplay *display)\n+{\n+    if (_gdk_display_get_default_seat == NULL) {\n+        _gdk_display_get_default_seat = dlsym(RTLD_DEFAULT, \"gdk_display_get_default_seat\");\n+        if (gtk_verbose && _gdk_display_get_default_seat) {\n+            fprintf(stderr, \"loaded gdk_display_get_default_seat\\n\"); fflush(stderr);\n+        }\n+    }\n+\n+    if (_gdk_display_get_default_seat != NULL) {\n+        return (*_gdk_display_get_default_seat)(display);\n+    }\n+\n+    return NULL;\n+}\n+\n+static GdkGrabStatus (*_gdk_seat_grab) (GdkSeat* seat, GdkWindow* window,\n+                            int capabilities \/* GdkSeatCapabilities capabilities *\/,\n+                            gboolean owner_events, GdkCursor* cursor, const GdkEvent* event,\n+                            void * prepare_func \/* GdkSeatGrabPrepareFunc prepare_func *\/,\n+                            gpointer prepare_func_data);\n+\n+\/\/ Note added in libgdk 3.20 which is > our OEL 7.0 version of 3.8\n+gboolean wrapped_gdk_seat_grab(GdkWindow* window,\n+                            int capabilities \/* GdkSeatCapabilities capabilities *\/,\n+                            gboolean owner_events, GdkCursor* cursor, const GdkEvent* event,\n+                            void * prepare_func \/* GdkSeatGrabPrepareFunc prepare_func *\/,\n+                            gpointer prepare_func_data,\n+                            GdkGrabStatus* status)\n+{\n+    if (_gdk_seat_grab == NULL) {\n+        _gdk_seat_grab = dlsym(RTLD_DEFAULT, \"gdk_seat_grab\");\n+        if (gtk_verbose && _gdk_seat_grab) {\n+            fprintf(stderr, \"loaded gdk_seat_grab\\n\"); fflush(stderr);\n+        }\n+    }\n+\n+    GdkSeat* seat = wrapped_gdk_display_get_default_seat(gdk_window_get_display(window));\n+    if (seat != NULL && _gdk_seat_grab != NULL) {\n+        *status = (*_gdk_seat_grab)(seat, window, capabilities,\n+                                 owner_events, cursor, event, prepare_func, prepare_func_data);\n+        return TRUE;\n+    }\n+    return FALSE;\n+}\n+\n+static void (*_gdk_seat_ungrab) (GdkSeat* seat);\n+\n+\/\/ Note added in libgdk 3.20 which is > our OEL 7.0 version of 3.8\n+gboolean wrapped_gdk_seat_ungrab(GdkWindow* window)\n+{\n+    if (_gdk_seat_ungrab == NULL) {\n+        _gdk_seat_ungrab = dlsym(RTLD_DEFAULT, \"gdk_seat_ungrab\");\n+        if (gtk_verbose && _gdk_seat_ungrab) {\n+            fprintf(stderr, \"loaded gdk_seat_ungrab\\n\"); fflush(stderr);\n+        }\n+    }\n+\n+    GdkSeat* seat = wrapped_gdk_display_get_default_seat(gdk_window_get_display(window));\n+    if (seat != NULL && _gdk_seat_ungrab != NULL) {\n+        (*_gdk_seat_ungrab)(seat);\n+        return TRUE;\n+    }\n+    return FALSE;\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/wrapped.c","additions":69,"deletions":1,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,9 @@\n+gboolean wrapped_gdk_seat_grab(GdkWindow* window,\n+                            int capabilities \/* GdkSeatCapabilities capabilities *\/,\n+                            gboolean owner_events, GdkCursor* cursor, const GdkEvent* event,\n+                            void * prepare_func \/* GdkSeatGrabPrepareFunc prepare_func *\/,\n+                            gpointer prepare_func_data,\n+                            GdkGrabStatus* status);\n+\n+gboolean wrapped_gdk_seat_ungrab(GdkWindow* window);\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/wrapped.h","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}