{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.util.ArrayList;\n@@ -40,1 +41,0 @@\n-import java.util.stream.Collectors;\n@@ -164,4 +164,0 @@\n-            \/\/ it may look like all we are doing here is collecting the removed elements (and\n-            \/\/ counting the added elements), but the call to 'peek' is also crucial - it is\n-            \/\/ ensuring that the selectedIndices bitset is correctly updated.\n-\n@@ -169,1 +165,3 @@\n-            final List<Integer> removed = c.getRemoved().stream()\n+\n+            final List<Integer> removed = new ArrayList<>(c.getRemovedSize());\n+            c.getRemoved().stream()\n@@ -173,3 +171,4 @@\n-                    .boxed()\n-                    .peek(sm.selectedIndices::clear)\n-                    .collect(Collectors.toList());\n+                    .forEach(row -> {\n+                        removed.add(row);\n+                        sm.selectedIndices.clear(row);\n+                    });\n@@ -177,1 +176,2 @@\n-            final int addedSize = (int)c.getAddedSubList().stream()\n+            final int[] addedSize = new int[1];\n+            c.getAddedSubList().stream()\n@@ -180,2 +180,5 @@\n-                    .peek(sm.selectedIndices::set)\n-                    .count();\n+                    .forEach(row -> {\n+                        addedSize[0]++;\n+                        sm.selectedIndices.set(row);\n+                    });\n+\n@@ -191,1 +194,1 @@\n-            final int to = from + addedSize;\n+            final int to = from + addedSize[0];\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ControlUtils.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -764,2 +764,3 @@\n-                List<Integer> sortedNewIndices =\n-                        IntStream.concat(IntStream.of(index), IntStream.of(indices))\n+\n+                List<Integer> sortedNewIndices = new ArrayList<>(indices.length + 1);\n+                IntStream.concat(IntStream.of(index), IntStream.of(indices))\n@@ -770,3 +771,5 @@\n-                        .boxed()\n-                        .peek(this::set) \/\/ we also set here, but it's atomic!\n-                        .collect(Collectors.toList());\n+                        .forEach(i -> {\n+                            sortedNewIndices.add(i);\n+                            set(i);\n+                        });\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/MultipleSelectionModelBase.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"}]}