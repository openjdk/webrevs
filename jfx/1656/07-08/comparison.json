{"files":[{"patch":"@@ -101,1 +101,1 @@\n-                    updatePreferences();\n+                    updatePreferences(PreferenceType::UI_SETTINGS);\n@@ -126,1 +126,1 @@\n-                    updatePreferences();\n+                    updatePreferences(PreferenceType::NETWORK_INFORMATION);\n@@ -142,1 +142,1 @@\n-jobject PlatformSupport::collectPreferences() const\n+jobject PlatformSupport::collectPreferences(PreferenceType preferenceType) const\n@@ -151,4 +151,16 @@\n-    querySystemParameters(prefs);\n-    querySystemColors(prefs);\n-    queryUISettings(prefs);\n-    queryNetworkInformation(prefs);\n+    if (preferenceType & PreferenceType::SYSTEM_COLORS) {\n+        querySystemColors(prefs);\n+    }\n+\n+    if (preferenceType & PreferenceType::SYSTEM_PARAMS) {\n+        querySystemParameters(prefs);\n+    }\n+\n+    if (preferenceType & PreferenceType::UI_SETTINGS) {\n+        queryUISettings(prefs);\n+    }\n+\n+    if (preferenceType & PreferenceType::NETWORK_INFORMATION) {\n+        queryNetworkInformation(prefs);\n+    }\n+\n@@ -158,1 +170,1 @@\n-bool PlatformSupport::updatePreferences() const\n+bool PlatformSupport::updatePreferences(PreferenceType preferenceType) const\n@@ -164,1 +176,1 @@\n-    jobject newPreferences = collectPreferences();\n+    jobject newPreferences = collectPreferences(preferenceType);\n@@ -194,1 +206,1 @@\n-            return updatePreferences();\n+            return updatePreferences(PreferenceType::SYSTEM_PARAMS);\n@@ -198,1 +210,1 @@\n-        return updatePreferences();\n+        return updatePreferences(PreferenceType::UI_SETTINGS);\n@@ -310,1 +322,1 @@\n-        const char* internetCostType;\n+        const char* internetCostType = NULL;\n@@ -315,2 +327,3 @@\n-        RO_CHECKED(\"IConnectionProfile::GetConnectionCost\",\n-                   connectionProfile->GetConnectionCost(&connectionCost));\n+        if (connectionProfile) {\n+            RO_CHECKED(\"IConnectionProfile::GetConnectionCost\",\n+                       connectionProfile->GetConnectionCost(&connectionCost));\n@@ -318,2 +331,2 @@\n-        RO_CHECKED(\"IConnectionCost::get_NetworkCostType\",\n-                   connectionCost->get_NetworkCostType(&networkCostType));\n+            RO_CHECKED(\"IConnectionCost::get_NetworkCostType\",\n+                       connectionCost->get_NetworkCostType(&networkCostType));\n@@ -321,5 +334,5 @@\n-        switch (networkCostType) {\n-            case NetworkCostType_Unrestricted: internetCostType = \"Unrestricted\"; break;\n-            case NetworkCostType_Variable: internetCostType = \"Variable\"; break;\n-            case NetworkCostType_Fixed: internetCostType = \"Fixed\"; break;\n-            default: internetCostType = \"Unknown\"; break;\n+            switch (networkCostType) {\n+                case NetworkCostType_Unrestricted: internetCostType = \"Unrestricted\"; break;\n+                case NetworkCostType_Variable: internetCostType = \"Variable\"; break;\n+                case NetworkCostType_Fixed: internetCostType = \"Fixed\"; break;\n+            }\n@@ -328,1 +341,2 @@\n-        putString(properties, \"Windows.NetworkInformation.InternetCostType\", internetCostType);\n+        putString(properties, \"Windows.NetworkInformation.InternetCostType\",\n+                  internetCostType != NULL ? internetCostType : \"Unknown\");\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/win\/PlatformSupport.cpp","additions":36,"deletions":22,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -42,0 +42,8 @@\n+    enum PreferenceType {\n+        SYSTEM_COLORS = 1,\n+        SYSTEM_PARAMS = 2,\n+        UI_SETTINGS = 4,\n+        NETWORK_INFORMATION = 8,\n+        ANY = SYSTEM_COLORS | SYSTEM_PARAMS | UI_SETTINGS | NETWORK_INFORMATION\n+    };\n+\n@@ -48,1 +56,1 @@\n-     * Collect all platform preferences and return them as a new java\/util\/Map.\n+     * Collect the specified platform preferences and return them as a new java\/util\/Map.\n@@ -50,1 +58,1 @@\n-    jobject collectPreferences() const;\n+    jobject collectPreferences(PreferenceType = ANY) const;\n@@ -53,2 +61,2 @@\n-     * Collect all platform preferences and notify the JavaFX application when a preference has changed.\n-     * The change notification includes all preferences, not only the changed preferences.\n+     * Collect the specified platform preferences and notify the JavaFX application when a preference has changed.\n+     * The change notification includes all specified preferences, not only the changed preferences.\n@@ -56,1 +64,1 @@\n-    bool updatePreferences() const;\n+    bool updatePreferences(PreferenceType = ANY) const;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/win\/PlatformSupport.h","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"}]}