{"files":[{"patch":"@@ -30,1 +30,0 @@\n-import com.sun.javafx.geom.RectBounds;\n@@ -32,0 +31,1 @@\n+import com.sun.javafx.scene.text.TextLine;\n@@ -37,2 +37,1 @@\n-    private final TLine[] lines;\n-    private final Rectangle2D bounds;\n+    private final TextLayout layout;\n@@ -40,3 +39,2 @@\n-    public PrismLayoutInfo(TLine[] lines, Rectangle2D bounds) {\n-        this.lines = lines;\n-        this.bounds = bounds;\n+    private PrismLayoutInfo(TextLayout layout) {\n+        this.layout = layout;\n@@ -46,10 +44,1 @@\n-        com.sun.javafx.scene.text.TextLine[] ls = layout.getLines();\n-        TLine[] lines = new TLine[ls.length];\n-        for (int i = 0; i < ls.length; i++) {\n-            com.sun.javafx.scene.text.TextLine ln = ls[i];\n-            lines[i] = TLine.of(ls[i]);\n-        }\n-\n-        BaseBounds b = layout.getBounds();\n-        Rectangle2D bounds = new Rectangle2D(b.getMinX(), b.getMinY(), b.getWidth(), b.getHeight());\n-        return new PrismLayoutInfo(lines, bounds);\n+        return new PrismLayoutInfo(layout);\n@@ -60,1 +49,1 @@\n-        return bounds;\n+        return toRectangle2D(layout.getBounds());\n@@ -65,1 +54,1 @@\n-        return lines.length;\n+        return layout.getLines().length;\n@@ -70,1 +59,1 @@\n-        return lines[ix].start;\n+        return line(ix).getStart();\n@@ -75,1 +64,2 @@\n-        return lines[ix].end;\n+        TextLine line = line(ix);\n+        return line.getStart() + line.getLength();\n@@ -80,1 +70,1 @@\n-        return lines[ix].bounds;\n+        return toRectangle2D(line(ix).getBounds());\n@@ -83,18 +73,2 @@\n-    @Override\n-    public String toString() {\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(\"PrismLayoutInfo{\");\n-        sb.append(\"lines=[\");\n-        boolean sep = false;\n-        for (TLine li : lines) {\n-            if (sep) {\n-                sb.append(\",\");\n-            } else {\n-                sep = true;\n-            }\n-            li.print(sb);\n-        }\n-        sb.append(\"]\");\n-        sb.append(\", bounds=\").append(bounds);\n-        sb.append(\"}\");\n-        return sb.toString();\n+    private TextLine line(int ix) {\n+        return layout.getLines()[ix];\n@@ -103,31 +77,2 @@\n-    \/**\n-     * Contains a snapshot of the mutable TextLine.\n-     *\/\n-    private static record TLine(\n-        int start,\n-        int end,\n-        Rectangle2D bounds) {\n-\n-        public static TLine of(com.sun.javafx.scene.text.TextLine t) {\n-            int start = t.getStart();\n-            int end = t.getStart() + t.getLength();\n-            RectBounds r = t.getBounds();\n-            Rectangle2D bounds = new Rectangle2D(r.getMinX(), r.getMinY(), r.getWidth(), r.getHeight());\n-\n-            return new TLine(\n-                start,\n-                end,\n-                bounds\n-            );\n-            \/\/ TODO also available:\n-            \/\/ public float getLeftSideBearing(); \/\/ what is that??\n-            \/\/ public float getRightSideBearing();\n-            \/\/ TODO we could also capture the text runs information if needed\n-        }\n-\n-        void print(StringBuilder sb) {\n-            sb.append(\"{start=\").append(start);\n-            sb.append(\", end=\").append(end);\n-            sb.append(\", bounds=\").append(bounds);\n-            sb.append(\"}\");\n-        }\n+    private static Rectangle2D toRectangle2D(BaseBounds b) {\n+        return new Rectangle2D(b.getMinX(), b.getMinY(), b.getWidth(), b.getHeight());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/PrismLayoutInfo.java","additions":15,"deletions":70,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * Represents an immutable snapshot of certain aspects of the text layout\n- * in a {@code Text} or {@code TextFlow} node,\n- * such as break up of the text into lines and their bounds.\n+ * Provides a think wrapper of the text layout used in a {@code Text} or a {@code TextFlow} node,\n+ * with the purpose of querying the details of the layout such as break up of the text into lines\n+ * and their bounds.\n@@ -34,1 +34,2 @@\n- * The layout snapshot is no longer valid after actions such as resizing of the container,\n+ * The information obtained via this object may change to reflect the underlying layout changes\n+ * as a result of actions such as resizing of the container,\n@@ -36,2 +37,4 @@\n- * For example updating the text or the font would invalidate the layout snapshot,\n- * but a change of color would not.\n+ * <p>\n+ * For example updating the text or the font might change the layout, but a change of color would not.\n+ * <p>\n+ * It is safe to cache this object.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/LayoutInfo.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2071,1 +2071,1 @@\n-     * Obtains the snapshot of the current text layout information.\n+     * Obtains the text layout information.\n@@ -2073,4 +2073,2 @@\n-     * The layout snapshot is no longer valid after actions such as resizing of the container,\n-     * or modification of certain properties.\n-     * Typically it means that the {@code LayoutInfo} object should not be cached and should be discarded\n-     * immediatley after use.\n+     * The object returned is a thin wrapper of the this node text layout, allowing for querying\n+     * the details of the layout.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/Text.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -693,1 +693,1 @@\n-     * Obtains the snapshot of the current text layout information.\n+     * Obtains the text layout information.\n@@ -695,4 +695,2 @@\n-     * The layout snapshot is no longer valid after actions such as resizing of the container,\n-     * or modification of certain properties.\n-     * Typically it means that the {@code LayoutInfo} object should not be cached and should be discarded\n-     * immediatley after use.\n+     * The object returned is a thin wrapper of the this node text layout, allowing for querying\n+     * the details of the layout.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/TextFlow.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}