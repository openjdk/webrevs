{"files":[{"patch":"@@ -40,1 +40,1 @@\n-     * Returns metrics information about the line as follow:\n+     * Returns metrics information about the line as follows:\n@@ -44,1 +44,1 @@\n-     * affect by any wrapping width but it will include any changes caused by\n+     * affected by any wrapping width but it will include any changes caused by\n@@ -76,1 +76,1 @@\n-     * Returns the line length in character.\n+     * Returns the line length in characters.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/text\/TextLine.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.javafx.text;\n+\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.text.LayoutInfo;\n+import com.sun.javafx.geom.BaseBounds;\n+import com.sun.javafx.scene.text.TextLayout;\n+import com.sun.javafx.scene.text.TextLine;\n+\n+\/**\n+ * Layout information as reported by PrismLayout.\n+ *\/\n+public final class PrismLayoutInfo extends LayoutInfo {\n+    private final TextLayout layout;\n+\n+    private PrismLayoutInfo(TextLayout layout) {\n+        this.layout = layout;\n+    }\n+\n+    public static LayoutInfo of(TextLayout layout) {\n+        return new PrismLayoutInfo(layout);\n+    }\n+\n+    @Override\n+    public Rectangle2D getBounds() {\n+        return toRectangle2D(layout.getBounds());\n+    }\n+\n+    @Override\n+    public int getTextLineCount() {\n+        return layout.getLines().length;\n+    }\n+\n+    @Override\n+    public int getTextLineStart(int ix) {\n+        return line(ix).getStart();\n+    }\n+\n+    @Override\n+    public int getTextLineEnd(int ix) {\n+        TextLine line = line(ix);\n+        return line.getStart() + line.getLength();\n+    }\n+\n+    @Override\n+    public Rectangle2D getLineBounds(int ix) {\n+        return toRectangle2D(line(ix).getBounds());\n+    }\n+\n+    private TextLine line(int ix) {\n+        return layout.getLines()[ix];\n+    }\n+\n+    private static Rectangle2D toRectangle2D(BaseBounds b) {\n+        return new Rectangle2D(b.getMinX(), b.getMinY(), b.getWidth(), b.getHeight());\n+    }\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/PrismLayoutInfo.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package javafx.scene.text;\n+\n+import javafx.geometry.Rectangle2D;\n+\n+\/**\n+ * Provides a think wrapper of the text layout used in a {@code Text} or a {@code TextFlow} node,\n+ * with the purpose of querying the details of the layout such as break up of the text into lines\n+ * and their bounds.\n+ * <p>\n+ * The information obtained via this object may change to reflect the underlying layout changes\n+ * as a result of actions such as resizing of the container,\n+ * or modification of certain properties.\n+ * <p>\n+ * For example updating the text or the font might change the layout, but a change of color would not.\n+ * <p>\n+ * It is safe to cache this object.\n+ *\n+ * @since 24\n+ *\/\n+public sealed abstract class LayoutInfo permits com.sun.javafx.text.PrismLayoutInfo {\n+    \/**\n+     * Constructor for subclasses to call.\n+     *\/\n+    protected LayoutInfo() {\n+    }\n+\n+    \/**\n+     * Returns the logical bounds of the layout:\n+     * <ul>\n+     * <li>{@code minX} is always zero\n+     * <li>{@code minY} is the ascent of the first line (negative)\n+     * <li>{@code width} the width of the widest line\n+     * <li>{@code height} the sum of all lines height\n+     * <\/ul>\n+     *\n+     * @return the layout bounds\n+     *\/\n+    public abstract Rectangle2D getBounds();\n+\n+    \/**\n+     * Returns the number of text lines in the layout.\n+     * @return the number of text lines\n+     *\/\n+    public abstract int getTextLineCount();\n+\n+    \/**\n+     * Returns the start offset for the line at index {@code index}.\n+     *\n+     * @param index the line index\n+     * @return the start offset\n+     *\/\n+    public abstract int getTextLineStart(int index);\n+\n+    \/**\n+     * Returns the end offset for the line at index {@code index}.\n+     *\n+     * @param index the line index\n+     * @return the end offset\n+     *\/\n+    public abstract int getTextLineEnd(int index);\n+\n+    \/**\n+     * Returns the information about the line:\n+     * <ul>\n+     * <li>\n+     * {@code minX} - the x origin of the line (relative to the layout).\n+     * The x origin is defined by TextAlignment of the text layout, always zero\n+     * for left-aligned text.\n+     * <li>\n+     * {@code minY} - the ascent of the line (negative).\n+     * The ascent of the line is the max ascent of all fonts in the line.\n+     * <li>\n+     * {@code width} - the width of the line.\n+     * The width for the line is sum of all the run widths in the line, it is not\n+     * affect by the wrapping width but it will include any changes caused by\n+     * justification.\n+     * <li>\n+     * {@code height} - the height of the line.\n+     * The height of the line is sum of the max ascent, max descent, and\n+     * max line gap of all the fonts in the line.\n+     * <\/ul>\n+     *\n+     * @param index the line index\n+     * @return the line bounds\n+     *\/\n+    public abstract Rectangle2D getLineBounds(int index);\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/LayoutInfo.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"},{"patch":"@@ -49,0 +49,1 @@\n+import com.sun.javafx.text.PrismLayoutInfo;\n@@ -2068,0 +2069,13 @@\n+\n+    \/**\n+     * Obtains the text layout information.\n+     * <p>\n+     * The object returned is a thin wrapper of the this node text layout, allowing for querying\n+     * the details of the layout.\n+     *\n+     * @return the layout information\n+     * @since 24\n+     *\/\n+    public final LayoutInfo getLayoutInfo() {\n+        return PrismLayoutInfo.of(getTextLayout());\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/Text.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import javafx.beans.property.IntegerProperty;\n@@ -33,0 +34,8 @@\n+import javafx.css.CssMetaData;\n+import javafx.css.Styleable;\n+import javafx.css.StyleableDoubleProperty;\n+import javafx.css.StyleableIntegerProperty;\n+import javafx.css.StyleableObjectProperty;\n+import javafx.css.StyleableProperty;\n+import javafx.css.converter.EnumConverter;\n+import javafx.css.converter.SizeConverter;\n@@ -43,5 +52,0 @@\n-import javafx.css.StyleableDoubleProperty;\n-import javafx.css.StyleableObjectProperty;\n-import javafx.css.CssMetaData;\n-import javafx.css.converter.EnumConverter;\n-import javafx.css.converter.SizeConverter;\n@@ -55,0 +59,1 @@\n+import com.sun.javafx.text.PrismLayoutInfo;\n@@ -56,4 +61,0 @@\n-import javafx.beans.property.IntegerProperty;\n-import javafx.css.Styleable;\n-import javafx.css.StyleableIntegerProperty;\n-import javafx.css.StyleableProperty;\n@@ -690,0 +691,13 @@\n+\n+    \/**\n+     * Obtains the text layout information.\n+     * <p>\n+     * The object returned is a thin wrapper of the this node text layout, allowing for querying\n+     * the details of the layout.\n+     *\n+     * @return the layout information\n+     * @since 24\n+     *\/\n+    public final LayoutInfo getLayoutInfo() {\n+        return PrismLayoutInfo.of(getTextLayout());\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/TextFlow.java","additions":23,"deletions":9,"binary":false,"changes":32,"status":"modified"}]}