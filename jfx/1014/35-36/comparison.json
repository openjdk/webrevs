{"files":[{"patch":"@@ -117,0 +117,1 @@\n+            CheckAndClearException(env);\n@@ -122,0 +123,1 @@\n+    CheckAndClearException(env);\n@@ -198,3 +200,11 @@\n-    env->CallObjectMethod(properties, javaIDs.Map.put,\n-        env->NewStringUTF(key),\n-        value != NULL ? env->NewStringUTF(value) : NULL);\n+    jobject prefKey = env->NewStringUTF(key);\n+    if (CheckAndClearException(env)) return;\n+\n+    jobject prefValue = NULL;\n+    if (value != NULL) {\n+        prefValue = env->NewStringUTF(value);\n+        if (CheckAndClearException(env)) return;\n+    }\n+\n+    env->CallObjectMethod(properties, javaIDs.Map.put, prefKey, prefValue);\n+    CheckAndClearException(env);\n@@ -205,3 +215,11 @@\n-    env->CallObjectMethod(properties, javaIDs.Map.put,\n-        env->NewStringUTF(key),\n-        value != NULL ? env->NewString((jchar*)value, wcslen(value)) : NULL);\n+    jobject prefKey = env->NewStringUTF(key);\n+    if (CheckAndClearException(env)) return;\n+\n+    jobject prefValue = NULL;\n+    if (value != NULL) {\n+        prefValue = env->NewString((jchar*)value, wcslen(value));\n+        if (CheckAndClearException(env)) return;\n+    }\n+\n+    env->CallObjectMethod(properties, javaIDs.Map.put, prefKey, prefValue);\n+    CheckAndClearException(env);\n@@ -212,4 +230,10 @@\n-    env->CallObjectMethod(properties, javaIDs.Map.put,\n-        env->NewStringUTF(key),\n-        value ? env->GetStaticObjectField(javaClasses.Boolean, javaIDs.Boolean.trueID) :\n-                env->GetStaticObjectField(javaClasses.Boolean, javaIDs.Boolean.falseID));\n+    jobject prefKey = env->NewStringUTF(key);\n+    if (CheckAndClearException(env)) return;\n+\n+    jobject prefValue = value ?\n+        env->GetStaticObjectField(javaClasses.Boolean, javaIDs.Boolean.trueID) :\n+        env->GetStaticObjectField(javaClasses.Boolean, javaIDs.Boolean.falseID);\n+    if (CheckAndClearException(env)) return;\n+\n+    env->CallObjectMethod(properties, javaIDs.Map.put, prefKey, prefValue);\n+    CheckAndClearException(env);\n@@ -220,5 +244,10 @@\n-    env->CallObjectMethod(properties, javaIDs.Map.put,\n-        env->NewStringUTF(colorName),\n-        env->CallStaticObjectMethod(\n-            javaClasses.Color, javaIDs.Color.rgb,\n-            GetRValue(colorValue), GetGValue(colorValue), GetBValue(colorValue), 1.0));\n+    jobject prefKey = env->NewStringUTF(colorName);\n+    if (CheckAndClearException(env)) return;\n+\n+    jobject prefValue = env->CallStaticObjectMethod(\n+        javaClasses.Color, javaIDs.Color.rgb,\n+        GetRValue(colorValue), GetGValue(colorValue), GetBValue(colorValue), 1.0);\n+    if (CheckAndClearException(env)) return;\n+\n+    env->CallObjectMethod(properties, javaIDs.Map.put, prefKey, prefValue);\n+    CheckAndClearException(env);\n@@ -229,5 +258,10 @@\n-    env->CallObjectMethod(properties, javaIDs.Map.put,\n-        env->NewStringUTF(colorName),\n-        env->CallStaticObjectMethod(\n-            javaClasses.Color, javaIDs.Color.rgb,\n-            colorValue.R, colorValue.G, colorValue.B, (double)colorValue.A \/ 255.0));\n+    jobject prefKey = env->NewStringUTF(colorName);\n+    if (CheckAndClearException(env)) return;\n+\n+    jobject prefValue = env->CallStaticObjectMethod(\n+        javaClasses.Color, javaIDs.Color.rgb,\n+        colorValue.R, colorValue.G, colorValue.B, (double)colorValue.A \/ 255.0);\n+    if (CheckAndClearException(env)) return;\n+\n+    env->CallObjectMethod(properties, javaIDs.Map.put, prefKey, prefValue);\n+    CheckAndClearException(env);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/win\/PlatformSupport.cpp","additions":54,"deletions":20,"binary":false,"changes":74,"status":"modified"}]}