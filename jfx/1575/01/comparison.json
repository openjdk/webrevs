{"files":[{"patch":"@@ -540,0 +540,5 @@\n+\/\/ Default timeout values to use in JUnit for tests and lifecycle methods\n+\/\/ that don't specify one\n+defineProperty(\"JUNIT_TEST_TIMEOUT\", \"120s\")\n+defineProperty(\"JUNIT_LIFECYCLE_TIMEOUT\", \"20s\")\n+\n@@ -2187,0 +2192,2 @@\n+        systemProperty 'junit.jupiter.execution.timeout.test.method.default', JUNIT_TEST_TIMEOUT\n+        systemProperty 'junit.jupiter.execution.timeout.lifecycle.method.default', JUNIT_LIFECYCLE_TIMEOUT\n","filename":"build.gradle","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -95,1 +95,2 @@\n-                    e.printStackTrace();\n+                    \/\/ fail(e);\n+                    throw new AssertionError(e);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/AlertTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -509,1 +509,2 @@\n-            ex.printStackTrace();\n+            \/\/ fail(ex);\n+            throw new AssertionError(ex);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListViewTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -215,1 +215,2 @@\n-               System.err.println(\"InterruptedException occurred during Thread.sleep()\");\n+                \/\/ fail(e);\n+                throw new AssertionError(e);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ProgressIndicatorTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -241,1 +241,2 @@\n-               System.err.println(\"InterruptedException occurred during Thread.sleep()\");\n+                \/\/ fail(e);\n+                throw new AssertionError(e);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/SelectionFocusModelMemoryTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -244,0 +244,2 @@\n+            \/\/ fail(ex);\n+            throw new AssertionError(ex);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ToggleButtonTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -131,1 +131,2 @@\n-               System.err.println(\"InterruptedException occurred during Thread.sleep()\");\n+                \/\/ fail(e);\n+                throw new AssertionError(e);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/ProgressBarSkinTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -200,0 +200,3 @@\n+            } catch (InterruptedException e) {\n+                \/\/ fail(e);\n+                throw new AssertionError(e);\n@@ -201,1 +204,0 @@\n-            catch (Exception e) {}\n@@ -249,0 +251,3 @@\n+            } catch (InterruptedException e) {\n+                \/\/ fail(e);\n+                throw new AssertionError(e);\n@@ -250,1 +255,0 @@\n-            catch (Exception e) {}\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/ScrollPaneSkinTest.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -206,1 +206,6 @@\n-        try { Thread.sleep(100); } catch (InterruptedException e) {}\n+        try {\n+            Thread.sleep(100);\n+        } catch (InterruptedException e) {\n+            \/\/ fail(e);\n+            throw new AssertionError(e);\n+        }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/util\/WeakReferenceQueueTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -118,1 +118,6 @@\n-        try { Thread.sleep(150); } catch (Exception e) {} \/\/ ensure the next date doesn't fit into the same millisecond\n+        try {\n+            Thread.sleep(150); \/\/ ensure the next date doesn't fit into the same millisecond\n+        } catch (InterruptedException e) {\n+            \/\/ fail(e);\n+            throw new AssertionError(e);\n+        }\n@@ -240,1 +245,6 @@\n-        try { Thread.sleep(150); } catch (Exception e) {} \/\/ ensure the next date doesn't fit into the same millisecond\n+        try {\n+            Thread.sleep(150); \/\/ ensure the next date doesn't fit into the same millisecond\n+        } catch (InterruptedException e) {\n+            \/\/ fail(e);\n+            throw new AssertionError(e);\n+        }\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/HistoryTest.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -66,1 +66,4 @@\n-        } catch (InterruptedException ex) {}\n+        } catch (InterruptedException ex) {\n+            \/\/ fail(ex);\n+            throw new AssertionError(ex);\n+        }\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/TestBase.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -235,1 +235,4 @@\n-                    } catch (InterruptedException e) { }\n+                    } catch (InterruptedException e) {\n+                        \/\/ fail(e);\n+                        throw new AssertionError(e);\n+                    }\n@@ -269,1 +272,2 @@\n-                        e.printStackTrace();\n+                        \/\/ fail(e);\n+                        throw new AssertionError(e);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/glass\/ui\/monocle\/LensUInput.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -42,1 +42,3 @@\n-            } catch (InterruptedException ex) {}\n+            } catch (InterruptedException ex) {\n+                \/\/ OK to not rethrow; the exit 1 signals an error\n+            }\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/application\/StaticStartupTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,4 @@\n-                } catch (InterruptedException ex) {}\n+                } catch (InterruptedException ex) {\n+                    \/\/ fail(ex);\n+                    throw new AssertionError(ex);\n+                }\n@@ -86,1 +89,4 @@\n-                } catch (InterruptedException ex) {}\n+                } catch (InterruptedException ex) {\n+                    \/\/ fail(ex);\n+                    throw new AssertionError(ex);\n+                }\n@@ -96,1 +102,4 @@\n-        } catch (InterruptedException ex) {}\n+        } catch (InterruptedException ex) {\n+            \/\/ fail(ex);\n+            throw new AssertionError(ex);\n+        }\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/image\/impl\/ImageRaceTest.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -97,0 +97,2 @@\n+            \/\/ fail(ex);\n+            throw new AssertionError(ex);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/RT36296Test.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -166,1 +166,2 @@\n-                        e.printStackTrace();\n+                        \/\/ fail(e);\n+                        throw new AssertionError(e);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/tk\/quantum\/SystemMenuBarTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -204,0 +204,2 @@\n+            \/\/ fail(ie);\n+            throw new AssertionError(ie);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/marlin\/QPathTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,0 +113,2 @@\n+            \/\/ fail(ie);\n+            throw new AssertionError(ie);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/marlin\/ScaleX0Test.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,2 @@\n-                e.printStackTrace();\n+                \/\/ fail(e);\n+                throw new AssertionError(e);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/embed\/swing\/JFXPanelEmbeddedWindowTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -88,1 +88,2 @@\n-                    e.printStackTrace();\n+                    \/\/ fail(e);\n+                    throw new AssertionError(e);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/embed\/swing\/SwingNodeContentMemoryLeakTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -110,0 +110,2 @@\n+                \/\/ fail(e);\n+                throw new AssertionError(e);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/text\/ArabicWrappingTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,2 @@\n-                    e.printStackTrace();\n+                    \/\/ fail(e);\n+                    throw new AssertionError(e);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/MonocleUInput.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -408,1 +408,2 @@\n-                e.printStackTrace();\n+                \/\/ fail(e);\n+                throw new AssertionError(e);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/TestApplication.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -78,1 +78,2 @@\n-                e.printStackTrace();\n+                \/\/ fail(e);\n+                throw new AssertionError(e);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/JFXPanelTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -105,0 +105,2 @@\n+            \/\/ fail(e);\n+            throw new AssertionError(e);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/RT23603Test.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,6 @@\n-            try { Thread.sleep(100); } catch(Exception e) {}\n+            try {\n+                Thread.sleep(100);\n+            } catch (InterruptedException e) {\n+                \/\/ fail(e);\n+                throw new AssertionError(e);\n+            }\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/RT32570Test.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -322,12 +322,0 @@\n-    \/**\n-     * Convenience alias for Thread.sleep() that does not throw an exception.\n-     * @param ms the timout in milliseconds\n-     *\/\n-    protected void sleep(int ms) {\n-        try {\n-            Thread.sleep(1);\n-        } catch (InterruptedException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/control\/behavior\/BehaviorRobotTestBase.java","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -95,0 +95,1 @@\n+                System.exit(ERROR_UNEXPECTED_EXCEPTION);\n","filename":"tests\/system\/src\/test\/java\/test\/sandbox\/app\/Util.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -86,1 +86,4 @@\n-        } catch (InterruptedException ex) {}\n+        } catch (InterruptedException ex) {\n+            \/\/ fail(ex);\n+            throw new AssertionError(ex);\n+        }\n","filename":"tests\/system\/src\/test\/java\/test\/util\/Util.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}