{"files":[{"patch":"@@ -540,0 +540,5 @@\n+\/\/ Default timeout values to use in JUnit for tests and lifecycle methods\n+\/\/ that don't specify one\n+defineProperty(\"JUNIT_TEST_TIMEOUT\", \"120s\")\n+defineProperty(\"JUNIT_LIFECYCLE_TIMEOUT\", \"20s\")\n+\n@@ -2187,0 +2192,2 @@\n+        systemProperty 'junit.jupiter.execution.timeout.test.method.default', JUNIT_TEST_TIMEOUT\n+        systemProperty 'junit.jupiter.execution.timeout.lifecycle.method.default', JUNIT_LIFECYCLE_TIMEOUT\n","filename":"build.gradle","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -97,1 +98,1 @@\n-                    e.printStackTrace();\n+                    fail(e);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/AlertTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-            ex.printStackTrace();\n+            fail(ex);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListViewTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -214,1 +215,1 @@\n-               System.err.println(\"InterruptedException occurred during Thread.sleep()\");\n+                fail(e);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ProgressIndicatorTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -245,1 +246,1 @@\n-               System.err.println(\"InterruptedException occurred during Thread.sleep()\");\n+                fail(e);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/SelectionFocusModelMemoryTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -249,0 +250,1 @@\n+            fail(ex);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ToggleButtonTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -128,1 +129,1 @@\n-               System.err.println(\"InterruptedException occurred during Thread.sleep()\");\n+                fail(e);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/ProgressBarSkinTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -195,0 +196,2 @@\n+            } catch (InterruptedException e) {\n+                fail(e);\n@@ -196,1 +199,0 @@\n-            catch (Exception e) {}\n@@ -244,0 +246,2 @@\n+            } catch (InterruptedException e) {\n+                fail(e);\n@@ -245,1 +249,0 @@\n-            catch (Exception e) {}\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/ScrollPaneSkinTest.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -206,1 +207,5 @@\n-        try { Thread.sleep(100); } catch (InterruptedException e) {}\n+        try {\n+            Thread.sleep(100);\n+        } catch (InterruptedException e) {\n+            fail(e);\n+        }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/util\/WeakReferenceQueueTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -118,1 +118,5 @@\n-        try { Thread.sleep(150); } catch (Exception e) {} \/\/ ensure the next date doesn't fit into the same millisecond\n+        try {\n+            Thread.sleep(150); \/\/ ensure the next date doesn't fit into the same millisecond\n+        } catch (InterruptedException e) {\n+            fail(e);\n+        }\n@@ -240,1 +244,5 @@\n-        try { Thread.sleep(150); } catch (Exception e) {} \/\/ ensure the next date doesn't fit into the same millisecond\n+        try {\n+            Thread.sleep(150); \/\/ ensure the next date doesn't fit into the same millisecond\n+        } catch (InterruptedException e) {\n+            fail(e);\n+        }\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/HistoryTest.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n@@ -66,1 +68,3 @@\n-        } catch (InterruptedException ex) {}\n+        } catch (InterruptedException ex) {\n+            fail(ex);\n+        }\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/TestBase.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n@@ -235,1 +237,3 @@\n-                    } catch (InterruptedException e) { }\n+                    } catch (InterruptedException e) {\n+                        fail(e);\n+                    }\n@@ -269,1 +273,1 @@\n-                        e.printStackTrace();\n+                        fail(e);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/glass\/ui\/monocle\/LensUInput.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -45,1 +45,3 @@\n-            } catch (InterruptedException ex) {}\n+            } catch (InterruptedException ex) {\n+                \/\/ OK to not rethrow; the exit 1 signals an error\n+            }\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/application\/StaticStartupTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,3 @@\n-                } catch (InterruptedException ex) {}\n+                } catch (InterruptedException ex) {\n+                    fail(ex);\n+                }\n@@ -86,1 +88,3 @@\n-                } catch (InterruptedException ex) {}\n+                } catch (InterruptedException ex) {\n+                    fail(ex);\n+                }\n@@ -96,1 +100,3 @@\n-        } catch (InterruptedException ex) {}\n+        } catch (InterruptedException ex) {\n+            fail(ex);\n+        }\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/image\/impl\/ImageRaceTest.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -96,0 +97,1 @@\n+            fail(ex);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/RT36296Test.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-                        e.printStackTrace();\n+                        fail(e);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/tk\/quantum\/SystemMenuBarTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -203,0 +204,1 @@\n+            fail(ie);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/marlin\/QPathTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,0 +116,1 @@\n+            fail(ie);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/marlin\/ScaleX0Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -83,1 +84,1 @@\n-                e.printStackTrace();\n+                fail(e);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/embed\/swing\/JFXPanelEmbeddedWindowTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -88,1 +89,1 @@\n-                    e.printStackTrace();\n+                    fail(e);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/embed\/swing\/SwingNodeContentMemoryLeakTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -111,0 +112,1 @@\n+                fail(e);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/text\/ArabicWrappingTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -100,1 +101,1 @@\n-                    e.printStackTrace();\n+                    fail(e);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/MonocleUInput.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -407,1 +408,1 @@\n-                e.printStackTrace();\n+                fail(e);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/TestApplication.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -76,1 +77,1 @@\n-                e.printStackTrace();\n+                fail(e);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/JFXPanelTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -100,0 +101,1 @@\n+            fail(e);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/RT23603Test.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -106,1 +107,5 @@\n-            try { Thread.sleep(100); } catch(Exception e) {}\n+            try {\n+                Thread.sleep(100);\n+            } catch (InterruptedException e) {\n+                fail(e);\n+            }\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/RT32570Test.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -322,12 +322,0 @@\n-    \/**\n-     * Convenience alias for Thread.sleep() that does not throw an exception.\n-     * @param ms the timout in milliseconds\n-     *\/\n-    protected void sleep(int ms) {\n-        try {\n-            Thread.sleep(1);\n-        } catch (InterruptedException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/control\/behavior\/BehaviorRobotTestBase.java","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -95,0 +95,1 @@\n+                System.exit(ERROR_UNEXPECTED_EXCEPTION);\n","filename":"tests\/system\/src\/test\/java\/test\/sandbox\/app\/Util.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -83,1 +83,3 @@\n-        } catch (InterruptedException ex) {}\n+        } catch (InterruptedException ex) {\n+            fail(ex);\n+        }\n","filename":"tests\/system\/src\/test\/java\/test\/util\/Util.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}