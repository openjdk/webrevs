{"files":[{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene;\n+\n+import javafx.application.ColorScheme;\n+import javafx.scene.Group;\n+import javafx.scene.Scene;\n+import javafx.scene.paint.Color;\n+import javafx.scene.shape.Rectangle;\n+import javafx.stage.Stage;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Base64;\n+import java.util.function.Consumer;\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class Scene_preferences_Test {\n+\n+    private Stage stage;\n+    private Scene scene;\n+    private Rectangle rect;\n+\n+    @BeforeEach\n+    void setup() {\n+        rect = new Rectangle();\n+        rect.setId(\"rect\");\n+        scene = new Scene(new Group(rect));\n+        stage = new Stage();\n+        stage.setScene(scene);\n+    }\n+\n+    @AfterEach\n+    void teardown() {\n+        stage.close();\n+    }\n+\n+    record TestRun(String mediaQuery,\n+                   Consumer<Scene.Preferences> state1,\n+                   Consumer<Scene.Preferences> state2) {}\n+\n+    static Stream<TestRun> changedScenePreferenceReappliesCSS_testRuns() {\n+        return Stream.of(\n+            new TestRun(\"prefers-color-scheme: dark\",\n+                        prefs -> prefs.setColorScheme(ColorScheme.LIGHT),\n+                        prefs -> prefs.setColorScheme(ColorScheme.DARK)),\n+            new TestRun(\"prefers-persistent-scrollbars\",\n+                    prefs -> prefs.setPersistentScrollBars(false),\n+                    prefs -> prefs.setPersistentScrollBars(true)),\n+            new TestRun(\"prefers-reduced-motion\",\n+                        prefs -> prefs.setReducedMotion(false),\n+                        prefs -> prefs.setReducedMotion(true)),\n+            new TestRun(\"prefers-reduced-transparency\",\n+                    prefs -> prefs.setReducedTransparency(false),\n+                    prefs -> prefs.setReducedTransparency(true)),\n+            new TestRun(\"prefers-reduced-data\",\n+                    prefs -> prefs.setReducedData(false),\n+                    prefs -> prefs.setReducedData(true))\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"changedScenePreferenceReappliesCSS_testRuns\")\n+    void changedScenePreferenceReappliesCSS(TestRun testRun) {\n+        scene.getStylesheets().add(\"data:base64,\" + Base64.getEncoder().encodeToString(\"\"\"\n+            #rect { -fx-fill: red; }\n+            @media (%s) {\n+                #rect { -fx-fill: green; }\n+            }\n+            \"\"\".formatted(testRun.mediaQuery).getBytes(StandardCharsets.UTF_8)));\n+\n+        testRun.state1.accept(scene.getPreferences());\n+        rect.applyCss();\n+        assertEquals(Color.RED, rect.getFill());\n+\n+        testRun.state2.accept(scene.getPreferences());\n+        rect.applyCss();\n+        assertEquals(Color.GREEN, rect.getFill());\n+    }\n+}\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Scene_preferences_Test.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"}]}