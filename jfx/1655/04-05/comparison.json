{"files":[{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.javafx.css;\n+\n+import com.sun.javafx.util.Utils;\n+import com.sun.javafx.css.media.MediaRule;\n+import javafx.css.Rule;\n+\n+public final class RuleHelper {\n+\n+    private RuleHelper() {}\n+\n+    static {\n+        Utils.forceInit(Rule.class);\n+    }\n+\n+    private static Accessor accessor;\n+\n+    public static void setAccessor(Accessor accessor) {\n+        RuleHelper.accessor = accessor;\n+    }\n+\n+    public static MediaRule getMediaRule(Rule rule) {\n+        return accessor.getMediaRule(rule);\n+    }\n+\n+    public interface Accessor {\n+        MediaRule getMediaRule(Rule rule);\n+    }\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/RuleHelper.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -28,1 +28,1 @@\n-import javafx.css.MediaRule;\n+import com.sun.javafx.css.media.MediaRule;\n@@ -281,1 +281,1 @@\n-        MediaRule mediaRule = rule != null ? rule.getMediaRule() : null;\n+        MediaRule mediaRule = rule != null ? RuleHelper.getMediaRule(rule) : null;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/SimpleSelector.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import javafx.css.MediaQuery;\n-import javafx.css.MediaQueryContext;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/MediaFeatures.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-package javafx.css;\n+package com.sun.javafx.css.media;\n@@ -39,2 +39,0 @@\n- *\n- * @since 25\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/MediaQuery.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/MediaQuery.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package javafx.css;\n+package com.sun.javafx.css.media;\n@@ -34,2 +34,0 @@\n- *\n- * @since 25\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/MediaQueryContext.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/MediaQueryContext.java","status":"renamed"},{"patch":"@@ -28,1 +28,0 @@\n-import javafx.css.MediaQuery;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/MediaQueryParser.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import javafx.css.MediaQuery;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/MediaQuerySerializer.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-package javafx.css;\n+package com.sun.javafx.css.media;\n@@ -28,1 +28,1 @@\n-import com.sun.javafx.css.media.MediaQuerySerializer;\n+import javafx.css.StyleConverter;\n@@ -38,2 +38,0 @@\n- *\n- * @since 25\n@@ -47,1 +45,1 @@\n-    MediaRule(List<MediaQuery> queries, MediaRule parent) {\n+    public MediaRule(List<MediaQuery> queries, MediaRule parent) {\n@@ -96,1 +94,1 @@\n-    void writeBinary(DataOutputStream stream, StyleConverter.StringStore stringStore) throws IOException {\n+    public void writeBinary(DataOutputStream stream, StyleConverter.StringStore stringStore) throws IOException {\n@@ -110,1 +108,1 @@\n-    static MediaRule readBinary(DataInputStream stream, String[] strings) throws IOException {\n+    public static MediaRule readBinary(DataInputStream stream, String[] strings) throws IOException {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/MediaRule.java","additions":5,"deletions":7,"binary":false,"changes":12,"previous_filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/MediaRule.java","status":"renamed"},{"patch":"@@ -28,2 +28,2 @@\n-import javafx.css.MediaQuery;\n-import javafx.css.MediaQueryContext;\n+import com.sun.javafx.css.media.MediaQuery;\n+import com.sun.javafx.css.media.MediaQueryContext;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/ConjunctionExpression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-import javafx.css.MediaQuery;\n-import javafx.css.MediaQueryContext;\n+import com.sun.javafx.css.media.MediaQuery;\n+import com.sun.javafx.css.media.MediaQueryContext;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/ConstantExpression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-import javafx.css.MediaQuery;\n-import javafx.css.MediaQueryContext;\n+import com.sun.javafx.css.media.MediaQuery;\n+import com.sun.javafx.css.media.MediaQueryContext;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/DisjunctionExpression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-import javafx.css.MediaQuery;\n-import javafx.css.MediaQueryContext;\n+import com.sun.javafx.css.media.MediaQuery;\n+import com.sun.javafx.css.media.MediaQueryContext;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/FunctionExpression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-import javafx.css.MediaQuery;\n-import javafx.css.MediaQueryContext;\n+import com.sun.javafx.css.media.MediaQuery;\n+import com.sun.javafx.css.media.MediaQueryContext;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/NegationExpression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import com.sun.javafx.css.media.MediaRule;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+import com.sun.javafx.css.RuleHelper;\n+import com.sun.javafx.css.media.MediaRule;\n@@ -51,0 +53,11 @@\n+    static {\n+        RuleHelper.setAccessor(new RuleHelper.Accessor() {\n+            @Override\n+            public MediaRule getMediaRule(Rule rule) {\n+                return rule.mediaRule;\n+            }\n+        });\n+    }\n+\n+    private final MediaRule mediaRule;\n+\n@@ -139,12 +152,0 @@\n-    private final MediaRule mediaRule;\n-\n-    \/**\n-     * Gets the {@code MediaRule} associated with this {@code Rule}.\n-     *\n-     * @return the {@code MediaRule} or {@code null}\n-     * @since 25\n-     *\/\n-    public MediaRule getMediaRule() {\n-        return mediaRule;\n-    }\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Rule.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import com.sun.javafx.css.RuleHelper;\n@@ -417,1 +418,1 @@\n-            importedRules.add(new Rule(rule.getMediaRule(), selectors, declarations));\n+            importedRules.add(new Rule(RuleHelper.getMediaRule(rule), selectors, declarations));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Stylesheet.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import com.sun.javafx.css.media.MediaQueryContext;\n@@ -76,1 +77,0 @@\n-import javafx.css.MediaQueryContext;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Scene.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-import javafx.css.MediaQuery;\n+import com.sun.javafx.css.media.MediaQuery;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/media\/MediaQuerySerializerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.css.RuleHelper;\n@@ -50,1 +51,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -67,1 +68,1 @@\n-        var innerMediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var innerMediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -90,1 +91,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -108,1 +109,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -128,1 +129,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -149,1 +150,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -169,1 +170,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -192,1 +193,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -205,1 +206,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -220,1 +221,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -235,1 +236,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -250,2 +251,2 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n-        assertEquals(0, mediaRule.getQueries().size());;\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n+        assertEquals(0, mediaRule.getQueries().size());\n@@ -262,2 +263,2 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n-        assertEquals(1, mediaRule.getQueries().size());;\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n+        assertEquals(1, mediaRule.getQueries().size());\n@@ -275,1 +276,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -288,1 +289,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n@@ -301,1 +302,1 @@\n-        var mediaRule = stylesheet.getRules().getFirst().getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().getFirst());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssParser_mediaQuery_Test.java","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.css.RuleHelper;\n@@ -811,1 +812,1 @@\n-        assertNull(stylesheet.getRules().get(0).getMediaRule());\n+        assertNull(RuleHelper.getMediaRule(stylesheet.getRules().get(0)));\n@@ -813,1 +814,1 @@\n-        var mediaRule = stylesheet.getRules().get(1).getMediaRule();\n+        var mediaRule = RuleHelper.getMediaRule(stylesheet.getRules().get(1));\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StylesheetTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}