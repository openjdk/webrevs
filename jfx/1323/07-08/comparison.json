{"files":[{"patch":"@@ -496,1 +496,1 @@\n-                    boolean isMultiRunText = false;\n+                    int runIdx = 0;\n@@ -498,2 +498,2 @@\n-                        if (r.getStart() != curRunStart && r.getTextSpan().getText().equals(text)) {\n-                            isMultiRunText = true;\n+                        if (r.getStart() == curRunStart) {\n+                            run = r;\n@@ -502,0 +502,1 @@\n+                        runIdx++;\n@@ -504,4 +505,7 @@\n-                    for (int i = 0; i < runs.length; i++) {\n-                        run = runs[i];\n-                        if (run.getStart() != curRunStart && run.getTextSpan().getText().equals(text) && x > run.getWidth()) {\n-                            x -= run.getWidth();\n+                    boolean textFound = false;\n+                    for (int i = 0; i <= runIdx; i++) {\n+                        TextRun r = runs[i];\n+                        if (r.getStart() != curRunStart && r.getTextSpan().getText().equals(text)\n+                                && x > r.getWidth() && textWidthPrevLine == 0) {\n+                            x -= r.getWidth();\n+                            textFound = true;\n@@ -510,10 +514,5 @@\n-                        if (run.getTextSpan() != null && run.getTextSpan().getText().equals(text)) {\n-                            if ((x > run.getWidth() && (!isMultiRunText || run.getStart() == curRunStart)) || textWidthPrevLine > 0) {\n-                                getBounds(run.getTextSpan(), textBounds);\n-                                x -= (runs[0].getLocation().x - textBounds.getMinX());\n-                            }\n-                            for (int j = runs.length - 1; j > i; j--) {\n-                                TextRun r = runs[j];\n-                                if (r.getStart() != curRunStart && r.getTextSpan().getText().equals(text) && !r.isLinebreak()) {\n-                                    ltrIndex += r.getLength();\n-                                }\n+                        if (r.getTextSpan() != null && r.getTextSpan().getText().equals(text)\n+                                && r.getStart() == curRunStart) {\n+                            if (x > r.getWidth() || textWidthPrevLine > 0) {\n+                                getBounds(r.getTextSpan(), textBounds);\n+                                x -= (run.getLocation().x - textBounds.getMinX());\n@@ -523,3 +522,12 @@\n-                        \/\/ This condition handles LTR Text nodes embedded in TextFlow in RTL mode.\n-                        if (!run.getTextSpan().getText().equals(text) && x > run.getWidth() && run.getStart() < curRunStart) {\n-                            x -= run.getWidth();\n+                        \/* This condition handles LTR Text nodes present between\n+                           a Text node containing both LTR and RTL text. *\/\n+                        if (!r.getTextSpan().getText().equals(text) && textFound\n+                                && x > r.getWidth() && r.getStart() < curRunStart) {\n+                            x -= r.getWidth();\n+                        }\n+                    }\n+                    for (int i = runs.length - 1; i > runIdx; i--) {\n+                        TextRun r = runs[i];\n+                        if (r.getStart() != curRunStart && r.getTextSpan().getText().equals(text)\n+                                && !r.isLinebreak() && run.getLevel() != r.getLevel()) {\n+                            ltrIndex += r.getLength();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/PrismTextLayout.java","additions":28,"deletions":20,"binary":false,"changes":48,"status":"modified"}]}