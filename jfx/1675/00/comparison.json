{"files":[{"patch":"@@ -137,2 +137,2 @@\n-                    if (toBeRemoved[pointer - 1] == offset + i) {\n-                        toBeRemoved[pointer - 1] = offset + i + 1;\n+                    if (toBeRemoved[pointer] == offset + i) {\n+                        toBeRemoved[pointer] = offset + i + 1;\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/collections\/VetoableListDecorator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -236,0 +236,12 @@\n+\n+        list.setAll(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\");\n+        calls.clear();\n+        list.removeAll(List.of(\"b\", \"c\", \"d\"));\n+        assertEquals(List.of(\"a\", \"e\", \"f\"), list);\n+        assertSingleCall(new String[0], new int[] {1, 4});\n+\n+        list.setAll(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\");\n+        calls.clear();\n+        list.removeAll(List.of(\"a\", \"b\", \"d\", \"e\", \"f\"));\n+        assertEquals(List.of(\"c\"), list);\n+        assertSingleCall(new String[0], new int[] {0, 2, 3, 6});\n@@ -242,0 +254,12 @@\n+\n+        list.setAll(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\");\n+        calls.clear();\n+        list.retainAll(List.of(\"a\", \"f\"));\n+        assertEquals(List.of(\"a\", \"f\"), list);\n+        assertSingleCall(new String[0], new int[] {1, 5});\n+\n+        list.setAll(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\");\n+        calls.clear();\n+        list.retainAll(List.of(\"c\"));\n+        assertEquals(List.of(\"c\"), list);\n+        assertSingleCall(new String[0], new int[] {0, 2, 3, 6});\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/collections\/VetoableObservableListTest.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"}]}