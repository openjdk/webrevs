{"files":[{"patch":"@@ -772,0 +772,3 @@\n+        if (inverseCache != null) {\n+            inverseCache.invalidate();\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/transform\/Rotate.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,116 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene.transform;\n+\n+import javafx.geometry.Point2D;\n+import javafx.scene.transform.Affine;\n+import javafx.scene.transform.Scale;\n+import javafx.scene.transform.Shear;\n+import javafx.scene.transform.Rotate;\n+import javafx.scene.transform.Transform;\n+import javafx.scene.transform.Translate;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+\n+public class TransformValidCacheAfterInverseTest {\n+    private static final double EPSILON = 1e-6;\n+\n+    private void checkTransform(Transform t) throws Exception {\n+        Point2D orig = new Point2D(1.3, 3.9);\n+\n+        Point2D p = t.transform(orig);\n+        Point2D pi = t.inverseTransform(p);\n+\n+        assertEquals(orig.getX(), pi.getX(), EPSILON);\n+        assertEquals(orig.getY(), pi.getY(), EPSILON);\n+    }\n+\n+    @Test\n+    public void testTransformInverseCache_Affine() throws Exception {\n+        Affine affine = new Affine();\n+\n+        affine.appendRotation(20);\n+        affine.appendScale(2.0, 1.3);\n+        checkTransform(affine);\n+\n+        affine.appendRotation(40);\n+        affine.appendScale(2.6, 3.2);\n+        checkTransform(affine);\n+    }\n+\n+    @Test\n+    public void testTransformInverseCache_Rotate() throws Exception {\n+        Rotate rotate = new Rotate();\n+\n+        rotate.setAngle(20);\n+        checkTransform(rotate);\n+\n+        rotate.setAngle(40);\n+        checkTransform(rotate);\n+    }\n+\n+    @Test\n+    public void testTransformInverseCache_Scale() throws Exception {\n+        Scale scale = new Scale();\n+\n+        scale.setX(2.0);\n+        scale.setY(3.3);\n+        checkTransform(scale);\n+\n+        scale.setX(5.0);\n+        scale.setY(6.8);\n+        checkTransform(scale);\n+    }\n+\n+    @Test\n+    public void testTransformInverseCache_Shear() throws Exception {\n+        Shear shear = new Shear();\n+\n+        shear.setX(2.0);\n+        shear.setY(5.3);\n+        checkTransform(shear);\n+\n+        shear.setX(1.2);\n+        shear.setY(4.3);\n+        checkTransform(shear);\n+    }\n+\n+    @Test\n+    public void testTransformInverseCache_Translate() throws Exception {\n+        Translate translate = new Translate();\n+\n+        translate.setX(1.4);\n+        translate.setY(3.5);\n+        checkTransform(translate);\n+\n+        translate.setX(0.3);\n+        translate.setY(20.1);\n+        checkTransform(translate);\n+    }\n+}\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/transform\/TransformValidCacheAfterInverseTest.java","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"}]}