{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import javafx.css.PseudoClass;\n@@ -43,0 +44,2 @@\n+    private static final PseudoClass MAXIMIZED_PSEUDO_CLASS = PseudoClass.getPseudoClass(\"maximized\");\n+\n@@ -55,7 +58,13 @@\n-        subscription = Subscription.combine(\n-            type == HeaderButtonType.MAXIMIZE\n-                ? stage.flatMap(Stage::resizableProperty).subscribe(this::onResizableChanged)\n-                : Subscription.EMPTY,\n-            stage.flatMap(Stage::fullScreenProperty).subscribe(this::onFullScreenChanged),\n-            () -> node.removeEventHandler(MouseEvent.MOUSE_RELEASED, this)\n-        );\n+        if (type == HeaderButtonType.MAXIMIZE) {\n+            subscription = Subscription.combine(\n+                stage.flatMap(Stage::resizableProperty).subscribe(this::onResizableChanged),\n+                stage.flatMap(Stage::fullScreenProperty).subscribe(this::onFullScreenChanged),\n+                stage.flatMap(Stage::maximizedProperty).subscribe(this::onMaximizedChanged),\n+                () -> node.removeEventHandler(MouseEvent.MOUSE_RELEASED, this)\n+            );\n+        } else {\n+            subscription = Subscription.combine(\n+                stage.flatMap(Stage::fullScreenProperty).subscribe(this::onFullScreenChanged),\n+                () -> node.removeEventHandler(MouseEvent.MOUSE_RELEASED, this)\n+            );\n+        }\n@@ -64,1 +73,4 @@\n-        node.setFocusTraversable(false);\n+\n+        if (!node.focusTraversableProperty().isBound()) {\n+            node.setFocusTraversable(false);\n+        }\n@@ -115,0 +127,4 @@\n+\n+    private void onMaximizedChanged(Boolean maximized) {\n+        node.pseudoClassStateChanged(MAXIMIZED_PSEUDO_CLASS, maximized == Boolean.TRUE);\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/HeaderButtonBehavior.java","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -56,0 +56,2 @@\n+     * <p>\n+     * If the window is maximized, the button will have the {@code maximized} pseudo-class.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/HeaderButtonType.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import javafx.css.PseudoClass;\n@@ -249,0 +250,1 @@\n+        var closeButton = new Button(\"Close\");\n@@ -251,1 +253,9 @@\n-        var closeButton = new Button(\"Close\");\n+\n+        maximizeButton.getPseudoClassStates().subscribe(() -> {\n+            if (maximizeButton.getPseudoClassStates().contains(PseudoClass.getPseudoClass(\"maximized\"))) {\n+                maximizeButton.setText(\"Restore\");\n+            } else {\n+                maximizeButton.setText(\"Maximize\");\n+            }\n+        });\n+\n","filename":"tests\/manual\/monkey\/src\/com\/oracle\/tools\/fx\/monkey\/tools\/StageTesterWindow.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}