{"files":[{"patch":"@@ -79,0 +79,2 @@\n+ * Usually, {@code HeaderBar} is placed in a root container like {@code BorderPane} to align it\n+ * with the top of the scene:\n@@ -80,4 +82,18 @@\n- *     var button = new Button(\"My button\");\n- *     HeaderBar.setAlignment(button, Pos.CENTER_LEFT);\n- *     HeaderBar.setMargin(button, new Insets(5));\n- *     myHeaderBar.setCenter(button);\n+ * public class MyApp extends Application {\n+ *     @Override\n+ *     public void start(Stage stage) {\n+ *         var button = new Button(\"My button\");\n+ *         HeaderBar.setAlignment(button, Pos.CENTER_LEFT);\n+ *         HeaderBar.setMargin(button, new Insets(5));\n+ *\n+ *         var headerBar = new HeaderBar();\n+ *         headerBar.setCenter(button);\n+ *\n+ *         var root = new BorderPane();\n+ *         root.setTop(headerBar);\n+ *\n+ *         stage.setScene(new Scene(root));\n+ *         stage.initStyle(StageStyle.EXTENDED);\n+ *         stage.show();\n+ *     }\n+ * }\n@@ -86,0 +102,6 @@\n+ * @apiNote An application should only add a single {@code HeaderBar} to the scene graph, and it should\n+ *          be located at the top of the scene. While it is technically possible to add multiple header\n+ *          bars to the scene graph, or place a header bar in another area of the scene, the resulting\n+ *          user experience is not what users typically expect from JavaFX applications and should\n+ *          therefore be avoided.\n+ *\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/HeaderBar.java","additions":26,"deletions":4,"binary":false,"changes":30,"status":"modified"}]}