{"files":[{"patch":"@@ -218,0 +218,22 @@\n+\n+    @Override\n+    protected void notifyMenu(int x, int y, int xAbs, int yAbs, boolean isKeyboardTrigger) {\n+        \/\/ If all of the following conditions are satisfied, we open a system menu at the specified coordinates:\n+        \/\/ 1. The application didn't consume the menu event.\n+        \/\/ 2. The window is an EXTENDED window.\n+        \/\/ 3. The menu event occurred on a draggable area.\n+        if (!handleMenuEvent(x, y, xAbs, yAbs, isKeyboardTrigger)) {\n+            var window = (GtkWindow)getWindow();\n+            if (!window.isExtendedWindow()) {\n+                return;\n+            }\n+\n+            double wx = x \/ window.getPlatformScaleX();\n+            double wy = y \/ window.getPlatformScaleY();\n+\n+            EventHandler eventHandler = getEventHandler();\n+            if (eventHandler != null && eventHandler.pickDragAreaNode(wx, wy) != null) {\n+                window.showSystemMenu(x, y);\n+            }\n+        }\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkView.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -127,0 +127,2 @@\n+    private native void _showSystemMenu(long ptr, int x, int y);\n+\n@@ -250,0 +252,10 @@\n+    \/**\n+     * Opens a system menu at the specified coordinates.\n+     *\n+     * @param x the X coordinate in physical pixels\n+     * @param y the Y coordinate in physical pixels\n+     *\/\n+    public void showSystemMenu(int x, int y) {\n+        _showSystemMenu(super.getRawHandle(), x, y);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkWindow.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -547,0 +547,15 @@\n+\/*\n+ * Class:     com_sun_glass_ui_gtk_GtkWindow\n+ * Method:    _showSystemMenu\n+ * Signature: (JII)V\n+ *\/\n+JNIEXPORT void JNICALL Java_com_sun_glass_ui_gtk_GtkWindow__1showSystemMenu\n+    (JNIEnv * env, jobject obj, jlong ptr, jint x, jint y)\n+{\n+    (void)env;\n+    (void)obj;\n+\n+    WindowContext* ctx = JLONG_TO_WINDOW_CTX(ptr);\n+    ctx->show_system_menu(x, y);\n+}\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassWindow.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1407,0 +1407,26 @@\n+void WindowContextTop::show_system_menu(int x, int y) {\n+    GdkDisplay* display = gdk_display_get_default();\n+    if (!display) {\n+        return;\n+    }\n+\n+    GdkSeat* seat = gdk_display_get_default_seat(display);\n+    GdkDevice* device = gdk_seat_get_pointer(seat);\n+    if (!device) {\n+        return;\n+    }\n+\n+    gint rx = 0, ry = 0;\n+    gdk_window_get_root_coords(gdk_window, x, y, &rx, &ry);\n+\n+    GdkEvent* event = (GdkEvent*)gdk_event_new(GDK_BUTTON_PRESS);\n+    GdkEventButton* buttonEvent = (GdkEventButton*)event;\n+    buttonEvent->x_root = rx;\n+    buttonEvent->y_root = ry;\n+    buttonEvent->window = g_object_ref(gdk_window);\n+    buttonEvent->device = g_object_ref(device);\n+\n+    gdk_window_show_window_menu(gdk_window, event);\n+    gdk_event_free(event);\n+}\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -108,0 +108,1 @@\n+    virtual void show_system_menu(int x, int y) = 0;\n@@ -323,0 +324,1 @@\n+    void show_system_menu(int x, int y);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}