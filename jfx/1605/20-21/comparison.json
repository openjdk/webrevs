{"files":[{"patch":"@@ -57,3 +57,4 @@\n- * {@code HeaderBar} honors the minimum, preferred, and maximum sizes of its children. If the child's\n- * resizable range prevents it from be resized to fit within its position, it will be vertically centered\n- * relative to the available space; this alignment can be customized with a layout constraint.\n+ * {@code HeaderBar} honors the minimum, preferred, and maximum sizes of its children. As a consequence,\n+ * its computed minimum width is sufficient to accommodate all of its children. If a child's resizable\n+ * range prevents it from be resized to fit within its position, it will be vertically centered relative\n+ * to the available space; this alignment can be customized with a layout constraint.\n@@ -262,1 +263,3 @@\n-        Node leading = getLeading(), center = getCenter(), trailing = getTrailing();\n+        Node leading = getLeading();\n+        Node center = getCenter();\n+        Node trailing = getTrailing();\n@@ -293,1 +296,3 @@\n-        Node leading = getLeading(), center = getCenter(), trailing = getTrailing();\n+        Node leading = getLeading();\n+        Node center = getCenter();\n+        Node trailing = getTrailing();\n@@ -314,1 +319,3 @@\n-        Node leading = getLeading(), center = getCenter(), trailing = getTrailing();\n+        Node leading = getLeading();\n+        Node center = getCenter();\n+        Node trailing = getTrailing();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/HeaderBar.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+    private static final Dimension2D EMPTY = new Dimension2D(0, 0);\n@@ -138,2 +139,2 @@\n-            leftSystemInset.set(new Dimension2D(0, 0));\n-            rightSystemInset.set(new Dimension2D(0, 0));\n+            leftSystemInset.set(EMPTY);\n+            rightSystemInset.set(EMPTY);\n@@ -146,1 +147,1 @@\n-            rightSystemInset.set(new Dimension2D(0, 0));\n+            rightSystemInset.set(EMPTY);\n@@ -148,1 +149,1 @@\n-            leftSystemInset.set(new Dimension2D(0, 0));\n+            leftSystemInset.set(EMPTY);\n@@ -151,2 +152,2 @@\n-            leftSystemInset.set(new Dimension2D(0, 0));\n-            rightSystemInset.set(new Dimension2D(0, 0));\n+            leftSystemInset.set(EMPTY);\n+            rightSystemInset.set(EMPTY);\n@@ -191,1 +192,1 @@\n-        new ReadOnlyObjectWrapper<>(this, \"rightInset\", new Dimension2D(0, 0)) {\n+        new ReadOnlyObjectWrapper<>(this, \"rightInset\", EMPTY) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/HeaderBarBase.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-import org.junit.jupiter.params.provider.ValueSource;\n+import org.junit.jupiter.params.provider.CsvSource;\n@@ -60,1 +60,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -71,2 +71,1 @@\n-    void alignmentOfLeadingChildOnly_resizable(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfLeadingChildOnly_resizable(Pos pos, double x, double y, double width, double height) {\n@@ -74,1 +73,1 @@\n-        HeaderBar.setAlignment(content, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(content, pos);\n@@ -80,6 +79,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            content);\n+        assertBounds(x, y, width, height, content);\n@@ -89,1 +83,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -100,2 +94,1 @@\n-    void alignmentOfLeadingChildOnly_notResizable(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfLeadingChildOnly_notResizable(Pos pos, double x, double y, double width, double height) {\n@@ -103,1 +96,1 @@\n-        HeaderBar.setAlignment(content, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(content, pos);\n@@ -109,6 +102,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            content);\n+        assertBounds(x, y, width, height, content);\n@@ -118,1 +106,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -129,2 +117,1 @@\n-    void alignmentOfTrailingChildOnly_resizable(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfTrailingChildOnly_resizable(Pos pos, double x, double y, double width, double height) {\n@@ -132,1 +119,1 @@\n-        HeaderBar.setAlignment(content, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(content, pos);\n@@ -138,6 +125,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            content);\n+        assertBounds(x, y, width, height, content);\n@@ -147,1 +129,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -158,2 +140,1 @@\n-    void alignmentOfTrailingChildOnly_notResizable(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfTrailingChildOnly_notResizable(Pos pos, double x, double y, double width, double height) {\n@@ -161,1 +142,1 @@\n-        HeaderBar.setAlignment(content, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(content, pos);\n@@ -167,6 +148,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            content);\n+        assertBounds(x, y, width, height, content);\n@@ -176,1 +152,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -187,2 +163,1 @@\n-    void alignmentOfCenterChildOnly_resizable(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfCenterChildOnly_resizable(Pos pos, double x, double y, double width, double height) {\n@@ -190,1 +165,1 @@\n-        HeaderBar.setAlignment(content, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(content, pos);\n@@ -196,6 +171,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            content);\n+        assertBounds(x, y, width, height, content);\n@@ -205,1 +175,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -216,2 +186,1 @@\n-    void alignmentOfCenterChildOnly_notResizable(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfCenterChildOnly_notResizable(Pos pos, double x, double y, double width, double height) {\n@@ -219,1 +188,1 @@\n-        HeaderBar.setAlignment(content, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(content, pos);\n@@ -225,6 +194,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            content);\n+        assertBounds(x, y, width, height, content);\n@@ -234,1 +198,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -245,2 +209,2 @@\n-    void alignmentOfCenterChild_resizable_withNonEmptyLeadingAndTrailingChild(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfCenterChild_resizable_withNonEmptyLeadingAndTrailingChild(\n+            Pos pos, double x, double y, double width, double height) {\n@@ -250,1 +214,1 @@\n-        HeaderBar.setAlignment(center, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(center, pos);\n@@ -258,6 +222,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            center);\n+        assertBounds(x, y, width, height, center);\n@@ -267,1 +226,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -278,2 +237,2 @@\n-    void alignmentOfCenterChild_notResizable_withNonEmptyLeadingAndTrailingChild(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfCenterChild_notResizable_withNonEmptyLeadingAndTrailingChild(\n+            Pos pos, double x, double y, double width, double height) {\n@@ -283,1 +242,1 @@\n-        HeaderBar.setAlignment(center, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(center, pos);\n@@ -291,6 +250,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            center);\n+        assertBounds(x, y, width, height, center);\n@@ -301,1 +255,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -312,2 +266,1 @@\n-    void alignmentOfCenterChild_withLeftSystemInset(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfCenterChild_withLeftSystemInset(Pos pos, double x, double y, double width, double height) {\n@@ -319,1 +272,1 @@\n-        HeaderBar.setAlignment(center, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(center, pos);\n@@ -327,6 +280,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            center);\n+        assertBounds(x, y, width, height, center);\n@@ -337,1 +285,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -348,2 +296,1 @@\n-    void alignmentOfCenterChild_withRightSystemInset(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfCenterChild_withRightSystemInset(Pos pos, double x, double y, double width, double height) {\n@@ -355,1 +302,1 @@\n-        HeaderBar.setAlignment(center, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(center, pos);\n@@ -363,6 +310,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            center);\n+        assertBounds(x, y, width, height, center);\n@@ -373,1 +315,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -378,2 +320,2 @@\n-    void alignmentOfCenterChild_withLeftSystemInset_andOffsetCausedByInsufficientHorizontalSpace(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfCenterChild_withLeftSystemInset_andOffsetCausedByInsufficientHorizontalSpace(\n+            Pos pos, double x, double y, double width, double height) {\n@@ -385,1 +327,1 @@\n-        HeaderBar.setAlignment(center, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(center, pos);\n@@ -393,6 +335,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            center);\n+        assertBounds(x, y, width, height, center);\n@@ -403,1 +340,1 @@\n-    @ValueSource(strings = {\n+    @CsvSource({\n@@ -408,2 +345,2 @@\n-    void alignmentOfCenterChild_withRightSystemInset_andOffsetCausedByInsufficientHorizontalSpace(String arg) {\n-        String[] args = arg.split(\",\");\n+    void alignmentOfCenterChild_withRightSystemInset_andOffsetCausedByInsufficientHorizontalSpace(\n+            Pos pos, double x, double y, double width, double height) {\n@@ -415,1 +352,1 @@\n-        HeaderBar.setAlignment(center, Pos.valueOf(args[0]));\n+        HeaderBar.setAlignment(center, pos);\n@@ -423,6 +360,1 @@\n-        assertBounds(\n-            Double.parseDouble(args[1]),\n-            Double.parseDouble(args[2]),\n-            Double.parseDouble(args[3]),\n-            Double.parseDouble(args[4]),\n-            center);\n+        assertBounds(x, y, width, height, center);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/HeaderBarTest.java","additions":53,"deletions":121,"binary":false,"changes":174,"status":"modified"}]}