{"files":[{"patch":"@@ -963,1 +963,6 @@\n-        boolean handled = !inFullscreen && nonClientHandler != null\n+        \/\/ Some implementations (like GTK) can fire synthesized events when they receive a mouse\n+        \/\/ button event on the resize border. These events, even though happening on non-client\n+        \/\/ regions, must not be processed by the non-client handler. For example, if a mouse click\n+        \/\/ happens on the resize border that straddles the window close button, we don't want the\n+        \/\/ close button to act on this click, because we just started a resize-drag operation.\n+        boolean handled = !isSynthesized && !inFullscreen && nonClientHandler != null\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/View.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -99,0 +99,2 @@\n+    private native boolean _setSystemMinimumSize(long ptr, int width, int height);\n+\n@@ -220,0 +222,8 @@\n+\n+            \/\/ Set the system-defined absolute minimum size to the size of the window buttons area,\n+            \/\/ regardless of whether the application has specified a smaller minimum size.\n+            windowControlsOverlay.metricsProperty().addListener((_, _, metrics) -> {\n+                int width = (int)(metrics.size().getWidth() * platformScaleX);\n+                int height = (int)(metrics.size().getHeight() * platformScaleY);\n+                _setSystemMinimumSize(super.getRawHandle(), width, height);\n+            });\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkWindow.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -381,0 +381,17 @@\n+\/*\n+ * Class:     com_sun_glass_ui_gtk_GtkWindow\n+ * Method:    _setSystemMinimumSize\n+ * Signature: (JII)Z\n+ *\/\n+JNIEXPORT jboolean JNICALL Java_com_sun_glass_ui_gtk_GtkWindow__1setSystemMinimumSize\n+  (JNIEnv * env, jobject obj, jlong ptr, jint w, jint h)\n+{\n+    (void)env;\n+    (void)obj;\n+\n+    WindowContext* ctx = JLONG_TO_WINDOW_CTX(ptr);\n+    if (w < 0 || h < 0) return JNI_FALSE;\n+    ctx->set_system_minimum_size(w, h);\n+    return JNI_TRUE;\n+}\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassWindow.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -265,1 +265,1 @@\n-void WindowContextBase::process_mouse_button(GdkEventButton* event) {\n+void WindowContextBase::process_mouse_button(GdkEventButton* event, bool synthesized) {\n@@ -335,1 +335,1 @@\n-                JNI_FALSE);\n+                synthesized);\n@@ -1071,4 +1071,5 @@\n-        int min_w = (resizable.minw == -1) ? 1\n-                      : resizable.minw - geometry.extents.left - geometry.extents.right;\n-        int min_h =  (resizable.minh == -1) ? 1\n-                      : resizable.minh - geometry.extents.top - geometry.extents.bottom;\n+        int w = std::max(resizable.sysminw, resizable.minw);\n+        int h = std::max(resizable.sysminh, resizable.minh);\n+\n+        int min_w = (w == -1) ? 1 : w - geometry.extents.left - geometry.extents.right;\n+        int min_h =  (h == -1) ? 1 : h - geometry.extents.top - geometry.extents.bottom;\n@@ -1250,0 +1251,6 @@\n+void WindowContextTop::set_system_minimum_size(int w, int h) {\n+    resizable.sysminw = w;\n+    resizable.sysminh = h;\n+    update_window_constraints();\n+}\n+\n@@ -1405,1 +1412,1 @@\n-void WindowContextTop::process_mouse_button(GdkEventButton* event) {\n+void WindowContextTop::process_mouse_button(GdkEventButton* event, bool synthesized) {\n@@ -1436,1 +1443,1 @@\n-            WindowContextBase::process_mouse_button(event);\n+            WindowContextBase::process_mouse_button(event, true);\n@@ -1438,1 +1445,1 @@\n-            WindowContextBase::process_mouse_button(event);\n+            WindowContextBase::process_mouse_button(event, true);\n@@ -1453,1 +1460,1 @@\n-            WindowContextBase::process_mouse_button(event);\n+            WindowContextBase::process_mouse_button(event, true);\n@@ -1455,1 +1462,1 @@\n-            WindowContextBase::process_mouse_button(event);\n+            WindowContextBase::process_mouse_button(event, true);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":18,"deletions":11,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -123,0 +123,1 @@\n+    virtual void set_system_minimum_size(int, int) = 0;\n@@ -142,1 +143,1 @@\n-    virtual void process_mouse_button(GdkEventButton*) = 0;\n+    virtual void process_mouse_button(GdkEventButton*, bool synthesized = false) = 0;\n@@ -243,1 +244,1 @@\n-    void process_mouse_button(GdkEventButton*);\n+    void process_mouse_button(GdkEventButton*, bool synthesized = false);\n@@ -273,1 +274,1 @@\n-                minw(-1), minh(-1), maxw(-1), maxh(-1) {}\n+                minw(-1), minh(-1), maxw(-1), maxh(-1), sysminw(-1), sysminh(-1) {}\n@@ -276,0 +277,1 @@\n+        int sysminw, sysminh; \/\/ size of window button area of EXTENDED windows\n@@ -294,1 +296,1 @@\n-    void process_mouse_button(GdkEventButton*);\n+    void process_mouse_button(GdkEventButton*, bool synthesized = false);\n@@ -308,0 +310,1 @@\n+    void set_system_minimum_size(int, int);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"}]}