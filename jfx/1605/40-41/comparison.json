{"files":[{"patch":"@@ -519,1 +519,1 @@\n-            throw new IllegalStateException(\"Cannot set chrome once stage has been set visible\");\n+            throw new IllegalStateException(\"Cannot set default header buttons once stage has been set visible\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/Stage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,171 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.oracle.tools.fx.monkey;\n+\n+import javafx.application.Platform;\n+import javafx.geometry.Insets;\n+import javafx.geometry.NodeOrientation;\n+import javafx.geometry.Pos;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.HeaderBar;\n+import javafx.scene.layout.HeaderButtonType;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.stage.Modality;\n+import javafx.stage.Stage;\n+import javafx.stage.StageStyle;\n+import javafx.stage.Window;\n+\n+public class ExtendedWindow extends Stage {\n+\n+    public static void showSimpleHeaderBar(StageStyle style, NodeOrientation orientation) {\n+        var stage = new ExtendedWindow();\n+\n+        var headerBar = new HeaderBar();\n+        headerBar.setBackground(Background.fill(Color.LIGHTSKYBLUE));\n+\n+        var resizable = new CheckBox(\"Resizable\");\n+        resizable.selectedProperty().bindBidirectional(stage.resizableProperty());\n+\n+        var fullScreen = new Button(\"Full-screen\");\n+        fullScreen.setOnAction(e -> stage.setFullScreen(!stage.isFullScreen()));\n+\n+        var content = new HBox(resizable, fullScreen);\n+        content.setSpacing(10);\n+        content.setAlignment(Pos.CENTER);\n+        headerBar.setCenter(content);\n+        HeaderBar.setAlignment(content, Pos.CENTER);\n+\n+        var root = new BorderPane();\n+        root.setTop(headerBar);\n+\n+        var scene = new Scene(root);\n+        scene.setNodeOrientation(orientation);\n+\n+        stage.initStyle(style);\n+        stage.setScene(scene);\n+        stage.setWidth(800);\n+        stage.setHeight(500);\n+        stage.show();\n+    }\n+\n+    public static void showSplitHeaderBar(StageStyle style, NodeOrientation orientation) {\n+        var stage = new ExtendedWindow();\n+\n+        var leftHeaderBar = new HeaderBar();\n+        leftHeaderBar.setBackground(Background.fill(Color.VIOLET));\n+        leftHeaderBar.setTrailingSystemPadding(false);\n+\n+        var rightHeaderBar = new HeaderBar();\n+        rightHeaderBar.setBackground(Background.fill(Color.LIGHTSKYBLUE));\n+        rightHeaderBar.setLeadingSystemPadding(false);\n+\n+        var resizable = new CheckBox(\"Resizable\");\n+        resizable.selectedProperty().bindBidirectional(stage.resizableProperty());\n+\n+        var fullScreen = new Button(\"Full-screen\");\n+        fullScreen.setOnAction(e -> stage.setFullScreen(!stage.isFullScreen()));\n+\n+        var content = new HBox(resizable, fullScreen);\n+        content.setSpacing(10);\n+        content.setAlignment(Pos.CENTER);\n+        rightHeaderBar.setCenter(content);\n+        HeaderBar.setAlignment(content, Pos.CENTER);\n+\n+        var left = new BorderPane();\n+        left.setTop(leftHeaderBar);\n+\n+        var right = new BorderPane();\n+        right.setTop(rightHeaderBar);\n+\n+        var root = new SplitPane(left, right);\n+\n+        var scene = new Scene(root);\n+        scene.setNodeOrientation(orientation);\n+\n+        stage.initStyle(style);\n+        stage.setScene(scene);\n+        stage.setWidth(800);\n+        stage.setHeight(500);\n+        stage.show();\n+    }\n+\n+    public static void showCustomHeaderButtons(StageStyle style, NodeOrientation orientation) {\n+        var stage = new ExtendedWindow();\n+\n+        var headerBar = new HeaderBar();\n+        headerBar.setBackground(Background.fill(Color.LIGHTSKYBLUE));\n+        headerBar.setMinHeight(40);\n+\n+        var resizable = new CheckBox(\"Resizable\");\n+        resizable.selectedProperty().bindBidirectional(stage.resizableProperty());\n+\n+        var fullScreen = new Button(\"Full-screen\");\n+        fullScreen.setOnAction(e -> stage.setFullScreen(!stage.isFullScreen()));\n+\n+        var minimize = new Button(\"Minimize\");\n+        minimize.setOnAction(e -> stage.setIconified(true));\n+        HeaderBar.setHeaderButtonType(minimize, HeaderButtonType.MINIMIZE);\n+\n+        var maximize = new Button(\"Maximize\/restore\");\n+        maximize.setOnAction(e -> stage.setMaximized(!stage.isMaximized()));\n+        HeaderBar.setHeaderButtonType(maximize, HeaderButtonType.MAXIMIZE);\n+\n+        var close = new Button(\"Close\");\n+        close.setOnAction(e -> stage.close());\n+        HeaderBar.setHeaderButtonType(close, HeaderButtonType.CLOSE);\n+\n+        var headerButtons = new HBox(minimize, maximize, close);\n+        headerButtons.setAlignment(Pos.CENTER);\n+        headerButtons.setSpacing(5);\n+        headerBar.setTrailing(headerButtons);\n+\n+        var content = new HBox(resizable, fullScreen);\n+        content.setSpacing(10);\n+        content.setAlignment(Pos.CENTER);\n+        headerBar.setCenter(content);\n+        HeaderBar.setAlignment(content, Pos.CENTER);\n+\n+        var root = new BorderPane();\n+        root.setTop(headerBar);\n+\n+        var scene = new Scene(root);\n+        scene.setNodeOrientation(orientation);\n+\n+        stage.initStyle(style);\n+        stage.initDefaultHeaderButtons(false);\n+        stage.setScene(scene);\n+        stage.setWidth(800);\n+        stage.setHeight(500);\n+        stage.show();\n+    }\n+}\n","filename":"tests\/manual\/monkey\/src\/com\/oracle\/tools\/fx\/monkey\/ExtendedWindow.java","additions":171,"deletions":0,"binary":false,"changes":171,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import javafx.scene.control.Menu;\n@@ -46,0 +47,1 @@\n+import javafx.stage.StageStyle;\n@@ -158,0 +160,27 @@\n+        var stageMenu = new Menu(\"Open Extended Window\");\n+        FX.item(stageMenu, \"Single HeaderBar, EXTENDED\",\n+                () -> ExtendedWindow.showSimpleHeaderBar(StageStyle.EXTENDED, NodeOrientation.INHERIT));\n+        FX.item(stageMenu, \"Single HeaderBar, EXTENDED, RIGHT__TO__LEFT\",\n+                () -> ExtendedWindow.showSimpleHeaderBar(StageStyle.EXTENDED, NodeOrientation.RIGHT_TO_LEFT));\n+        FX.item(stageMenu, \"Single HeaderBar, EXTENDED__UTILITY\",\n+                () -> ExtendedWindow.showSimpleHeaderBar(StageStyle.EXTENDED_UTILITY, NodeOrientation.INHERIT));\n+        FX.item(stageMenu, \"Single HeaderBar, EXTENDED__UTILITY, RIGHT__TO__LEFT\",\n+                () -> ExtendedWindow.showSimpleHeaderBar(StageStyle.EXTENDED_UTILITY, NodeOrientation.RIGHT_TO_LEFT));\n+        FX.item(stageMenu, \"Split HeaderBar, EXTENDED\",\n+                () -> ExtendedWindow.showSplitHeaderBar(StageStyle.EXTENDED, NodeOrientation.INHERIT));\n+        FX.item(stageMenu, \"Split HeaderBar, EXTENDED, RIGHT__TO__LEFT\",\n+                () -> ExtendedWindow.showSplitHeaderBar(StageStyle.EXTENDED, NodeOrientation.RIGHT_TO_LEFT));\n+        FX.item(stageMenu, \"Split HeaderBar, EXTENDED__UTILITY\",\n+                () -> ExtendedWindow.showSplitHeaderBar(StageStyle.EXTENDED_UTILITY, NodeOrientation.INHERIT));\n+        FX.item(stageMenu, \"Split HeaderBar, EXTENDED__UTILITY, RIGHT__TO__LEFT\",\n+                () -> ExtendedWindow.showSplitHeaderBar(StageStyle.EXTENDED_UTILITY, NodeOrientation.RIGHT_TO_LEFT));\n+        FX.item(stageMenu, \"HeaderBar with custom buttons, EXTENDED\",\n+                () -> ExtendedWindow.showCustomHeaderButtons(StageStyle.EXTENDED, NodeOrientation.INHERIT));\n+        FX.item(stageMenu, \"HeaderBar with custom buttons, EXTENDED, RIGHT__TO__LEFT\",\n+                () -> ExtendedWindow.showCustomHeaderButtons(StageStyle.EXTENDED, NodeOrientation.RIGHT_TO_LEFT));\n+        FX.item(stageMenu, \"HeaderBar with custom buttons, EXTENDED__UTILITY\",\n+                () -> ExtendedWindow.showCustomHeaderButtons(StageStyle.EXTENDED_UTILITY, NodeOrientation.INHERIT));\n+        FX.item(stageMenu, \"HeaderBar with custom buttons, EXTENDED__UTILITY, RIGHT__TO__LEFT\",\n+                () -> ExtendedWindow.showCustomHeaderButtons(StageStyle.EXTENDED_UTILITY, NodeOrientation.RIGHT_TO_LEFT));\n+        FX.item(m, stageMenu);\n+\n","filename":"tests\/manual\/monkey\/src\/com\/oracle\/tools\/fx\/monkey\/MainWindow.java","additions":30,"deletions":1,"binary":false,"changes":31,"status":"modified"}]}