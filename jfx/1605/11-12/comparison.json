{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import javafx.css.StyleableDoubleProperty;\n@@ -59,0 +60,3 @@\n+ * <p>\n+ * The default {@link #minHeightProperty() minHeight} of the {@code HeaderBar} is set to match the height\n+ * of the platform-specific default window buttons.\n@@ -160,5 +164,0 @@\n-    private static Insets getNodeMargin(Node child) {\n-        Insets margin = getMargin(child);\n-        return margin != null ? margin : Insets.EMPTY;\n-    }\n-\n@@ -169,0 +168,6 @@\n+        \/\/ Inflate the minHeight property. This is important so that we can track whether a stylesheet or\n+        \/\/ user code changes the property value before we set it to the height of the native title bar.\n+        minHeightProperty();\n+\n+        leftSystemInsetProperty().subscribe(this::updateDefaultMinHeight);\n+        rightSystemInsetProperty().subscribe(this::updateDefaultMinHeight);\n@@ -179,0 +184,1 @@\n+        this();\n@@ -484,0 +490,15 @@\n+    private Insets getNodeMargin(Node child) {\n+        Insets margin = getMargin(child);\n+        return margin != null ? margin : Insets.EMPTY;\n+    }\n+\n+    private void updateDefaultMinHeight() {\n+        var minHeight = (StyleableDoubleProperty)minHeightProperty();\n+\n+        \/\/ Only change the default minHeight if it was not set by a stylesheet or application code.\n+        if (minHeight.getStyleOrigin() == null) {\n+            double height = Math.max(getLeftSystemInset().getHeight(), getRightSystemInset().getHeight());\n+            ((StyleableDoubleProperty)minHeightProperty()).applyStyle(null, height);\n+        }\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/HeaderBar.java","additions":26,"deletions":5,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -83,2 +83,5 @@\n-     * draggable header bar. Applications need to provide their own header bar by placing the {@link HeaderBar}\n-     * control in the scene graph. Usually, this is combined with a {@link BorderPane} root container:\n+     * draggable header bar. Applications need to provide their own header bar by placing a single {@link HeaderBar}\n+     * control in the scene graph. The {@code HeaderBar} control should be positioned at the top of the window\n+     * and its width should extend the entire width of the window, as otherwise the layout of the default window\n+     * buttons and the header bar content might not be aligned. Usually, {@code HeaderBar} is combined with a\n+     * {@link BorderPane} root container:\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/StageStyle.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}