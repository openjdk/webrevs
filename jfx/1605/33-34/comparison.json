{"files":[{"patch":"@@ -750,0 +750,4 @@\n+    public boolean isUtilityWindow() {\n+        return (this.styleMask & Window.UTILITY) != 0;\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Window.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.javafx.binding.ObjectConstant;\n@@ -170,0 +171,1 @@\n+    private static final String UTILITY_STYLE_CLASS = \"utility\";\n@@ -216,0 +218,1 @@\n+    private final boolean utility;\n@@ -219,1 +222,3 @@\n-    public WindowControlsOverlay(ObservableValue<String> stylesheet) {\n+    public WindowControlsOverlay(ObservableValue<String> stylesheet, boolean utility) {\n+        this.utility = utility;\n+\n@@ -253,1 +258,9 @@\n-        getChildren().addAll(minimizeButton, maximizeButton, closeButton);\n+\n+        if (utility) {\n+            minimizeButton.managedProperty().bind(ObjectConstant.valueOf(false));\n+            maximizeButton.managedProperty().bind(ObjectConstant.valueOf(false));\n+            getChildren().add(closeButton);\n+            getStyleClass().add(UTILITY_STYLE_CLASS);\n+        } else {\n+            getChildren().addAll(minimizeButton, maximizeButton, closeButton);\n+        }\n@@ -273,3 +286,5 @@\n-        for (var button : orderedButtons) {\n-            if (button.isVisible() && button.getBoundsInParent().contains(x, y)) {\n-                return button.getButtonType();\n+        if (!utility) {\n+            for (var button : orderedButtons) {\n+                if (button.isVisible() && button.getBoundsInParent().contains(x, y)) {\n+                    return button.getButtonType();\n+                }\n@@ -277,0 +292,2 @@\n+        } else if (closeButton.isVisible() && closeButton.getBoundsInParent().contains(x, y)) {\n+            return ButtonType.CLOSE;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/WindowControlsOverlay.java","additions":22,"deletions":5,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-                PlatformThemeObserver.getInstance().stylesheetProperty());\n+                PlatformThemeObserver.getInstance().stylesheetProperty(), isUtilityWindow());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkWindow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -349,1 +349,3 @@\n-            windowControlsOverlay = new WindowControlsOverlay(StringConstant.valueOf(url.toExternalForm()));\n+            windowControlsOverlay = new WindowControlsOverlay(\n+                StringConstant.valueOf(url.toExternalForm()), isUtilityWindow());\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinWindow.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -147,0 +147,2 @@\n+                } else if (style == StageStyle.EXTENDED_UTILITY && !app.supportsExtendedWindows()) {\n+                    style = StageStyle.UTILITY;\n@@ -163,0 +165,3 @@\n+                    case EXTENDED_UTILITY:\n+                        windowMask |= Window.EXTENDED | Window.CLOSABLE | Window.UTILITY;\n+                        break;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/WindowStage.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import javafx.stage.StageStyle;\n+\n@@ -142,1 +144,1 @@\n-     *  Indicates that a system supports {@link javafx.stage.StageStyle#UNIFIED}\n+     *  Indicates that a system supports {@link StageStyle#UNIFIED}\n@@ -154,1 +156,1 @@\n-     * Indicates that a system supports {@link javafx.stage.StageStyle#EXTENDED}.\n+     * Indicates that a system supports {@link StageStyle#EXTENDED} and {@link StageStyle#EXTENDED_UTILITY}.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/application\/ConditionalFeature.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -118,1 +118,11 @@\n-    EXTENDED\n+    EXTENDED,\n+\n+    \/**\n+     * Defines a {@code Stage} style with the semantics of {@link #UTILITY} and the appearance of {@link #EXTENDED}.\n+     * <p>\n+     * This is a conditional feature, to check if it is supported see {@link Platform#isSupported(ConditionalFeature)}.\n+     * If the feature is not supported by the platform, this style downgrades to {@link StageStyle#UTILITY}.\n+     *\n+     * @since 24\n+     *\/\n+    EXTENDED_UTILITY\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/StageStyle.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -39,0 +39,4 @@\n+.window-button-container.utility > .close-button {\n+    -fx-pref-width: 29;\n+}\n+\n","filename":"modules\/javafx.graphics\/src\/main\/resources\/com\/sun\/glass\/ui\/win\/WindowDecoration.css","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -79,1 +79,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -104,1 +104,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -128,1 +128,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -155,1 +155,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -181,1 +181,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -198,0 +198,11 @@\n+    @Test\n+    void utilityDecorationIsOnlyCloseButton() {\n+        var overlay = new WindowControlsOverlay(getStylesheet(\"\"\"\n+                .window-button { -fx-pref-width: 20; -fx-pref-height: 10; }\n+            \"\"\"), true);\n+\n+        var children = overlay.getChildrenUnmodifiable();\n+        assertEquals(1, children.size());\n+        assertTrue(children.getFirst().getStyleClass().contains(\"close-button\"));\n+    }\n+\n@@ -206,1 +217,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -227,1 +238,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -253,1 +264,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -277,1 +288,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -300,1 +311,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n@@ -319,1 +330,1 @@\n-            \"\"\"));\n+            \"\"\"), false);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/glass\/ui\/WindowControlsOverlayTest.java","additions":23,"deletions":12,"binary":false,"changes":35,"status":"modified"}]}