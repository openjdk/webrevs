{"files":[{"patch":"@@ -382,0 +382,1 @@\n+                    IOException mainException = null;\n@@ -383,1 +384,18 @@\n-                        theStream = ImageTools.createInputStream(input);\n+                        try {\n+                            theStream = ImageTools.createInputStream(input);\n+                        } catch (IOException e) {\n+                            \/\/ hold on to this exception for a moment, in case below fallback fails too\n+                            mainException = e;\n+                        }\n+                    }\n+\n+                    if (theStream == null) {\n+                        try {\n+                            \/\/ last fallback, try to see if the file exists with @1x suffix\n+                            String scaled1xName = ImageTools.getScaledImageName(input, 1);\n+                            theStream = ImageTools.createInputStream(scaled1xName);\n+                        } catch (IOException e) {\n+                            \/\/ fallback failed, throw previous exception with this one as suppressed\n+                            mainException.addSuppressed(e);\n+                            throw mainException;\n+                        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/ImageStorage.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -62,0 +62,32 @@\n+    @Test\n+    public void testImageNameFallbackTo1X() throws ImageStorageException {\n+        \/\/ with \"checkers.png\" not available we should successfully load \"checkers@1x.png\" as a fallback\n+        String path = getResourcePath(\"checkers@1x.png\");\n+        path = path.replace(\"checkers@1x.png\", \"checkers.png\");\n+        assertNotNull(new ImageStorage().loadAll(path, null, 0, 0, true, 1.0f, true));\n+    }\n+\n+    @Test\n+    public void testImageLoadNoFallbackWith1xPresent() throws ImageStorageException {\n+        \/\/ lightblue.png is 40x40, but lightblue@1x.png is 50x50\n+        \/\/ we want to make sure we load the 40x40 version unless explicitly stated\n+        String path = getResourcePath(\"lightblue.png\");\n+        ImageStorage img = new ImageStorage();\n+        ImageFrame[] frames = img.loadAll(path, null, 0, 0, true, 1.0f, true);\n+        assertNotNull(frames);\n+        assertEquals(1, frames.length);\n+\n+        assertEquals(40, frames[0].getWidth());\n+        assertEquals(40, frames[0].getHeight());\n+\n+        \/\/ confidence check - load lightblue@1x.png and make sure it's different\n+        String path1x = getResourcePath(\"lightblue@1x.png\");\n+        ImageStorage img1x = new ImageStorage();\n+        ImageFrame[] frames1x = img1x.loadAll(path1x, null, 0, 0, true, 1.0f, true);\n+        assertNotNull(frames1x);\n+        assertEquals(1, frames1x.length);\n+\n+        assertEquals(50, frames1x[0].getWidth());\n+        assertEquals(50, frames1x[0].getHeight());\n+    }\n+\n@@ -63,1 +95,1 @@\n-    @ValueSource(ints = {2, 3, 4})\n+    @ValueSource(ints = {1, 2, 3, 4})\n@@ -77,0 +109,1 @@\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/iio\/ImageStorageTest.java","additions":34,"deletions":1,"binary":false,"changes":35,"status":"modified"},{"patch":"","filename":"modules\/javafx.graphics\/src\/test\/resources\/test\/com\/sun\/javafx\/iio\/checkers@1x.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"modules\/javafx.graphics\/src\/test\/resources\/test\/com\/sun\/javafx\/iio\/checker.png","status":"copied"},{"filename":"modules\/javafx.graphics\/src\/test\/resources\/test\/com\/sun\/javafx\/iio\/lightblue.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/test\/resources\/test\/com\/sun\/javafx\/iio\/lightblue@1x.png","binary":true,"status":"added"}]}