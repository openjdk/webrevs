{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024 Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+extern const char* eglGetErrorString(EGLint error);\n+\n@@ -59,1 +61,1 @@\n-        fprintf(stderr, \"Failed in eglCreateContext 0x%x\\n\", eglGetError());\n+        fprintf(stderr, \"Prism ES2 Error: Initialize - eglCreateContext failed [%s]\\n\", eglGetErrorString(eglGetError()));\n@@ -64,0 +66,1 @@\n+        fprintf(stderr, \"Prism ES2 Error: Initialize - eglMakeCurrent failed [%s]\\n\",  eglGetErrorString(eglGetError()));\n@@ -65,1 +68,0 @@\n-        fprintf(stderr, \"Failed in eglMakeCurrent\\n\");\n@@ -141,1 +143,1 @@\n-        fprintf(stderr, \"nInitialize: Failed in malloc\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: Initialize - Failed in malloc\\n\");\n@@ -252,1 +254,1 @@\n-            dlsym(RTLD_DEFAULT,\"glTexImage2DMultisample\");\n+            eglGetProcAddress(\"glTexImage2DMultisample\");\n@@ -254,1 +256,1 @@\n-            dlsym(RTLD_DEFAULT,\"glRenderbufferStorageMultisample\");\n+            eglGetProcAddress(\"glRenderbufferStorageMultisample\");\n@@ -256,1 +258,1 @@\n-            dlsym(RTLD_DEFAULT,\"glBlitFramebuffer\");\n+            eglGetProcAddress(\"glBlitFramebuffer\");\n@@ -258,1 +260,0 @@\n-    eglSwapInterval(eglDisplay, 0);\n@@ -267,1 +268,5 @@\n-    eglMakeCurrent(eglDisplay, EGL_NO_SURFACE, EGL_NO_SURFACE, EGL_NO_CONTEXT);\n+    if (!eglMakeCurrent(eglDisplay, EGL_NO_SURFACE, EGL_NO_SURFACE, EGL_NO_CONTEXT)) {\n+        fprintf(stderr, \"Prism ES2 Error: Initialize - eglMakeCurrent failed [%s]\\n\", eglGetErrorString(eglGetError()));\n+        eglDestroyContext(eglDisplay, eglContext);\n+        return 0;\n+    }\n@@ -301,1 +306,2 @@\n-        fprintf(stderr, \"Failed in eglMakeCurrent\");\n+        fprintf(stderr, \"Prism ES2 Error: MakeCurrent - eglMakeCurrent failed [%s]\\n\", eglGetErrorString(eglGetError()));\n+        return;\n@@ -305,0 +311,1 @@\n+    interval = (vSyncNeeded) ? 1 : 0;\n@@ -308,1 +315,0 @@\n-    interval = (vSyncNeeded) ? 1 : 0;\n@@ -310,1 +316,5 @@\n-    eglSwapInterval(ctxInfo->eglDisplay, interval);\n+\n+    if (dInfo->eglSurface != EGL_NO_SURFACE && !eglSwapInterval(ctxInfo->eglDisplay, interval)) {\n+        fprintf(stderr, \"Prism ES2 Error: MakeCurrent - eglSwapInterval failed [%s]\\n\", eglGetErrorString(eglGetError()));\n+        return;\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/linux\/egl\/LinuxGLContext.c","additions":22,"deletions":12,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+extern const char* eglGetErrorString(EGLint error);\n@@ -54,1 +55,1 @@\n-        fprintf(stderr, \"nCreateDrawable: Failed in malloc\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: CreateDrawable - Failed in malloc\\n\");\n@@ -61,0 +62,5 @@\n+    if (eglSurface == EGL_NO_SURFACE) {\n+        fprintf(stderr, \"Prism ES2 Error: CreateDrawable - Could not create EGL surface [%s]\\n\", eglGetErrorString(eglGetError()));\n+        return 0;\n+    }\n+\n@@ -90,1 +96,1 @@\n-        fprintf(stderr, \"nGetDummyDrawable: Failed in malloc\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: GetDummyDrawable - Failed in malloc\\n\");\n@@ -118,2 +124,1 @@\n-    eglSwapBuffers(eglGetCurrentDisplay(), dInfo->eglSurface);\n-    return JNI_TRUE;\n+    return eglSwapBuffers(eglGetCurrentDisplay(), dInfo->eglSurface);\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/linux\/egl\/LinuxGLDrawable.c","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+#define ERROR_CODE_TO_STR(value) case value: return #value;\n+\n@@ -98,0 +100,23 @@\n+const char* eglGetErrorString(EGLint error) {\n+    switch(error) {\n+        ERROR_CODE_TO_STR(EGL_SUCCESS)\n+        ERROR_CODE_TO_STR(EGL_NOT_INITIALIZED)\n+        ERROR_CODE_TO_STR(EGL_BAD_ACCESS)\n+        ERROR_CODE_TO_STR(EGL_BAD_ALLOC)\n+        ERROR_CODE_TO_STR(EGL_BAD_ATTRIBUTE)\n+        ERROR_CODE_TO_STR(EGL_BAD_CONTEXT)\n+        ERROR_CODE_TO_STR(EGL_BAD_CONFIG)\n+        ERROR_CODE_TO_STR(EGL_BAD_CURRENT_SURFACE)\n+        ERROR_CODE_TO_STR(EGL_BAD_DISPLAY)\n+        ERROR_CODE_TO_STR(EGL_BAD_SURFACE)\n+        ERROR_CODE_TO_STR(EGL_BAD_MATCH)\n+        ERROR_CODE_TO_STR(EGL_BAD_PARAMETER)\n+        ERROR_CODE_TO_STR(EGL_BAD_NATIVE_PIXMAP)\n+        ERROR_CODE_TO_STR(EGL_BAD_NATIVE_WINDOW)\n+        ERROR_CODE_TO_STR(EGL_CONTEXT_LOST)\n+        default:\n+            return \"UNKNOWN EGL ERROR\";\n+    }\n+}\n+\n+\n@@ -140,1 +165,1 @@\n-        fprintf(stderr, \"Prism ES2 Error - nInitialize: EGL_NO_DISPLAY\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: Initialize - EGL_NO_DISPLAY\\n\");\n@@ -145,1 +170,1 @@\n-        fprintf(stderr, \"Prism ES2 Error - nInitialize: cannot bind EGL_OPENGL_API.\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: Initialize - cannot bind EGL_OPENGL_API.\\n\");\n@@ -150,1 +175,1 @@\n-        fprintf(stderr, \"Prism ES2 Error - nInitialize: eglInitialize failed. Version: %d.%d\\n\",\n+        fprintf(stderr, \"Prism ES2 Error: Initialize - eglInitialize failed. Version: %d.%d\\n\",\n@@ -156,1 +181,1 @@\n-        fprintf(stderr, \"Prism ES2 Error - nInitialize: no EGL configuration available\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: Initialize - no EGL configuration available\\n\");\n@@ -161,1 +186,1 @@\n-        fprintf(stderr, \"Prism ES2 Error - nInitialize: eglChooseConfig failed\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: Initialize - eglChooseConfig failed\\n\");\n@@ -169,1 +194,1 @@\n-                \"Failed in eglMakeCurrent\");\n+                \"Prism ES2 Error: eglMakeCurrent failed\");\n@@ -197,1 +222,1 @@\n-        fprintf(stderr, \"Prism-ES2 Error : GL_VERSION (major.minor) = %d.%d\\n\",\n+        fprintf(stderr, \"Prism-ES2 Error: GL_VERSION (major.minor) = %d.%d\\n\",\n@@ -242,1 +267,1 @@\n-        fprintf(stderr, \"nInitialize: Failed in malloc\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: Initialize - Failed in malloc\\n\");\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/linux\/egl\/LinuxGLFactory.c","additions":33,"deletions":8,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-        fprintf(stderr, \"Failed in XOpenDisplay\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: XOpenDisplay failed\\n\");\n@@ -78,1 +78,1 @@\n-        fprintf(stderr, \"Prism ES2 Error - nCreatePixelFormat: no supported display found\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: CreatePixelFormat - no supported display found\\n\");\n@@ -83,1 +83,1 @@\n-        fprintf(stderr, \"Prism ES2 Error - nCreatePixelFormat: eglInitialize failed.\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: CreatePixelFormat - eglInitialize failed.\\n\");\n@@ -88,1 +88,1 @@\n-        fprintf(stderr, \"Prism ES2 Error - nCreatePixelFormat: cannot bind EGL_OPENGL_API.\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: CreatePixelFormat - cannot bind EGL_OPENGL_API.\\n\");\n@@ -93,1 +93,1 @@\n-        fprintf(stderr, \"Prism ES2 Error - nCreatePixelFormat: no EGL configuration available\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: CreatePixelFormat - no EGL configuration available\\n\");\n@@ -98,1 +98,1 @@\n-        fprintf(stderr, \"Prism ES2 Error - nCreatePixelFormat: eglChooseConfig failed\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: CreatePixelFormat - eglChooseConfig failed\\n\");\n@@ -109,1 +109,1 @@\n-        printAndReleaseResources(eglDisplay, NULL, NULL, \"Failed in XCreateWindow\");\n+        printAndReleaseResources(eglDisplay, NULL, NULL, \"Prism ES2 Error: XCreateWindow failed\");\n@@ -116,1 +116,1 @@\n-        fprintf(stderr, \"nCreatePixelFormat: Failed in malloc\\n\");\n+        fprintf(stderr, \"Prism ES2 Error: CreatePixelFormat - Failed in malloc\\n\");\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/linux\/egl\/LinuxGLPixelFormat.c","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}