{"files":[{"patch":"@@ -28,8 +28,4 @@\n-import com.sun.javafx.binding.BidirectionalBinding;\n-import javafx.beans.binding.Bindings;\n-import javafx.beans.property.*;\n-\n-import org.junit.jupiter.api.Test;\n-import org.junit.jupiter.params.ParameterizedTest;\n-import org.junit.jupiter.params.provider.MethodSource;\n-\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -38,0 +34,16 @@\n+import javafx.beans.binding.Bindings;\n+import javafx.beans.property.Property;\n+import javafx.beans.property.ReadOnlyBooleanWrapper;\n+import javafx.beans.property.ReadOnlyDoubleWrapper;\n+import javafx.beans.property.ReadOnlyFloatWrapper;\n+import javafx.beans.property.ReadOnlyIntegerWrapper;\n+import javafx.beans.property.ReadOnlyLongWrapper;\n+import javafx.beans.property.ReadOnlyObjectWrapper;\n+import javafx.beans.property.ReadOnlyStringWrapper;\n+import javafx.beans.property.SimpleBooleanProperty;\n+import javafx.beans.property.SimpleDoubleProperty;\n+import javafx.beans.property.SimpleFloatProperty;\n+import javafx.beans.property.SimpleIntegerProperty;\n+import javafx.beans.property.SimpleLongProperty;\n+import javafx.beans.property.SimpleObjectProperty;\n+import javafx.beans.property.SimpleStringProperty;\n@@ -39,2 +51,6 @@\n-\n-import static org.junit.jupiter.api.Assertions.*;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import com.sun.javafx.binding.BidirectionalBinding;\n+import test.javafx.util.OutputRedirect;\n@@ -72,0 +88,10 @@\n+    @BeforeEach\n+    public void beforeEach() {\n+        OutputRedirect.suppressStderr();\n+    }\n+\n+    @AfterEach\n+    public void afterEach() {\n+        OutputRedirect.checkAndRestoreStderr();\n+    }\n+\n@@ -308,0 +334,2 @@\n+\n+        OutputRedirect.checkAndRestoreStderr(RuntimeException.class);\n@@ -328,0 +356,2 @@\n+\n+        OutputRedirect.checkAndRestoreStderr(RuntimeException.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/binding\/BidirectionalBindingTest.java","additions":40,"deletions":10,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.com.sun.javafx.binding;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import com.sun.javafx.binding.Logging;\n+import com.sun.javafx.binding.Logging.ErrorLogger;\n+import com.sun.javafx.binding.Logging.ErrorLogger.ErrorLogRecord;\n+import com.sun.javafx.logging.PlatformLogger.Level;\n+\n+public class ErrorLoggingUtility {\n+\n+    private static ErrorLogger errorLogger = Logging.getLogger();\n+\n+    public static void reset() {\n+        Logging.setKeepException(true);\n+        errorLogger.setErrorLogRecord(null);\n+    }\n+\n+    public static boolean isEmpty() {\n+        return errorLogger.getErrorLogRecord() == null;\n+    }\n+\n+    \/**\n+     * Convenience method for check(Level.FINE, expectedException)\n+     *\/\n+    public static void checkFine(Class<?> expectedException) {\n+        check(Level.FINE, expectedException);\n+    }\n+\n+    \/**\n+     * Convenience method for check(Level.WARNING, expectedException)\n+     *\/\n+    public static void checkWarning(Class<?> expectedException) {\n+        check(Level.WARNING, expectedException);\n+    }\n+\n+    public static void check(Level expectedLevel, Class<?> expectedException) {\n+        assertTrue(Logging.getKeepException());\n+        ErrorLogRecord errorLogRecord = errorLogger.getErrorLogRecord();\n+        assertNotNull(errorLogRecord);\n+        assertEquals(expectedLevel, errorLogRecord.getLevel());\n+        assertTrue(expectedException.isAssignableFrom(errorLogRecord.getThrown().getClass()));\n+        reset();\n+    }\n+}\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/binding\/ErrorLoggingUtility.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -1,71 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package test.com.sun.javafx.binding;\n-\n-import static org.junit.jupiter.api.Assertions.*;\n-\n-import com.sun.javafx.logging.PlatformLogger.Level;\n-\n-import com.sun.javafx.binding.Logging;\n-import com.sun.javafx.binding.Logging.ErrorLogger.ErrorLogRecord;\n-import com.sun.javafx.binding.Logging.ErrorLogger;\n-\n-public class ErrorLoggingUtiltity {\n-\n-    private static ErrorLogger errorLogger = Logging.getLogger();\n-\n-    public static void reset() {\n-        Logging.setKeepException(true);\n-        errorLogger.setErrorLogRecord(null);\n-    }\n-\n-    public static boolean isEmpty() {\n-        return errorLogger.getErrorLogRecord() == null;\n-    }\n-\n-    \/**\n-     * Convenience method for check(Level.FINE, expectedException)\n-     *\/\n-    public static void checkFine(Class<?> expectedException) {\n-        check(Level.FINE, expectedException);\n-    }\n-\n-    \/**\n-     * Convenience method for check(Level.WARNING, expectedException)\n-     *\/\n-    public static void checkWarning(Class<?> expectedException) {\n-        check(Level.WARNING, expectedException);\n-    }\n-\n-    public static void check(Level expectedLevel, Class<?> expectedException) {\n-        assertTrue(Logging.getKeepException());\n-        ErrorLogRecord errorLogRecord = errorLogger.getErrorLogRecord();\n-        assertNotNull(errorLogRecord);\n-        assertEquals(expectedLevel, errorLogRecord.getLevel());\n-        assertTrue(expectedException.isAssignableFrom(errorLogRecord.getThrown().getClass()));\n-        reset();\n-    }\n-}\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/binding\/ErrorLoggingUtiltity.java","additions":0,"deletions":71,"binary":false,"changes":71,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -32,2 +31,1 @@\n-\n-\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -39,7 +37,0 @@\n-\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n-\n-import com.sun.javafx.binding.ExpressionHelper;\n-import com.sun.javafx.binding.ExpressionHelperShim;\n-\n@@ -55,0 +46,4 @@\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import com.sun.javafx.binding.ExpressionHelper;\n+import com.sun.javafx.binding.ExpressionHelperShim;\n@@ -59,0 +54,1 @@\n+import test.javafx.util.OutputRedirect;\n@@ -569,1 +565,7 @@\n-        ExpressionHelperShim.fireValueChangedEvent(helper);\n+\n+        OutputRedirect.suppressStderr();\n+        try {\n+            ExpressionHelperShim.fireValueChangedEvent(helper);\n+        } finally {\n+            OutputRedirect.checkAndRestoreStderr(RuntimeException.class);\n+        }\n@@ -579,1 +581,7 @@\n-        ExpressionHelperShim.fireValueChangedEvent(helper);\n+\n+        OutputRedirect.suppressStderr();\n+        try {\n+            ExpressionHelperShim.fireValueChangedEvent(helper);\n+        } finally {\n+            OutputRedirect.checkAndRestoreStderr(RuntimeException.class, RuntimeException.class);\n+        }\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/binding\/ExpressionHelperTest.java","additions":21,"deletions":13,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,5 @@\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -33,1 +38,0 @@\n-import test.javafx.beans.Person;\n@@ -42,1 +46,0 @@\n-import test.javafx.binding.Variable;\n@@ -44,1 +47,1 @@\n-import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.AfterEach;\n@@ -47,2 +50,3 @@\n-\n-import static org.junit.jupiter.api.Assertions.*;\n+import test.javafx.beans.Person;\n+import test.javafx.binding.Variable;\n+import test.javafx.util.OutputRedirect;\n@@ -104,6 +108,0 @@\n-    @BeforeAll\n-    public static void setUpClass() {\n-        System.err.println(\"SelectBindingTest : log messages are expected from these tests.\");\n-        ErrorLoggingUtiltity.reset();\n-    }\n-\n@@ -112,0 +110,3 @@\n+        OutputRedirect.suppressStderr();\n+        ErrorLoggingUtility.reset();\n+\n@@ -122,0 +123,5 @@\n+    @AfterEach\n+    public void afterEach() {\n+        OutputRedirect.checkAndRestoreStderr();\n+    }\n+\n@@ -133,1 +139,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -173,1 +179,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -201,1 +207,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -211,1 +217,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -214,1 +220,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -243,1 +249,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -253,1 +259,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -256,1 +262,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -285,1 +291,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -295,1 +301,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -298,1 +304,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -328,1 +334,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -338,1 +344,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -341,1 +347,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -368,1 +374,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -378,1 +384,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -381,1 +387,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -399,1 +405,2 @@\n-        ErrorLoggingUtiltity.checkWarning(NullPointerException.class);\n+        ErrorLoggingUtility.checkWarning(NullPointerException.class);\n+        OutputRedirect.checkAndRestoreStderr(NullPointerException.class);\n@@ -413,1 +420,1 @@\n-        ErrorLoggingUtiltity.checkWarning(NoSuchMethodException.class);\n+        ErrorLoggingUtility.checkWarning(NoSuchMethodException.class);\n@@ -447,1 +454,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -455,1 +462,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -460,1 +467,1 @@\n-        assertTrue(ErrorLoggingUtiltity.isEmpty());\n+        assertTrue(ErrorLoggingUtility.isEmpty());\n@@ -471,1 +478,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -479,1 +486,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -484,1 +491,1 @@\n-        assertTrue(ErrorLoggingUtiltity.isEmpty());\n+        assertTrue(ErrorLoggingUtility.isEmpty());\n@@ -489,1 +496,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -495,1 +502,1 @@\n-        assertTrue(ErrorLoggingUtiltity.isEmpty());\n+        assertTrue(ErrorLoggingUtility.isEmpty());\n@@ -500,1 +507,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -507,1 +514,1 @@\n-        assertTrue(ErrorLoggingUtiltity.isEmpty());\n+        assertTrue(ErrorLoggingUtility.isEmpty());\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/binding\/SelectBindingTest.java","additions":48,"deletions":41,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import test.com.sun.javafx.binding.ErrorLoggingUtiltity;\n@@ -38,1 +37,1 @@\n-\n+import test.com.sun.javafx.binding.ErrorLoggingUtility;\n@@ -52,1 +51,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -60,1 +59,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/beans\/property\/BooleanPropertyTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import test.com.sun.javafx.binding.ErrorLoggingUtiltity;\n@@ -38,1 +37,1 @@\n-\n+import test.com.sun.javafx.binding.ErrorLoggingUtility;\n@@ -53,1 +52,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -61,1 +60,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/beans\/property\/DoublePropertyTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import test.com.sun.javafx.binding.ErrorLoggingUtiltity;\n@@ -38,1 +37,1 @@\n-\n+import test.com.sun.javafx.binding.ErrorLoggingUtility;\n@@ -53,1 +52,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -61,1 +60,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/beans\/property\/FloatPropertyTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import test.com.sun.javafx.binding.ErrorLoggingUtiltity;\n@@ -38,1 +37,1 @@\n-\n+import test.com.sun.javafx.binding.ErrorLoggingUtility;\n@@ -52,1 +51,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -60,1 +59,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/beans\/property\/IntegerPropertyTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import test.com.sun.javafx.binding.ErrorLoggingUtiltity;\n@@ -38,1 +37,1 @@\n-\n+import test.com.sun.javafx.binding.ErrorLoggingUtility;\n@@ -52,1 +51,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -60,1 +59,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/beans\/property\/LongPropertyTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import test.com.sun.javafx.binding.ErrorLoggingUtiltity;\n@@ -41,1 +40,1 @@\n-\n+import test.com.sun.javafx.binding.ErrorLoggingUtility;\n@@ -61,1 +60,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -159,1 +158,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -161,1 +160,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -163,1 +162,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -169,1 +168,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -174,1 +173,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -176,1 +175,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -180,1 +179,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -182,1 +181,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -184,1 +183,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -190,1 +189,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -194,1 +193,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -196,1 +195,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -198,1 +197,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -224,1 +223,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -227,1 +226,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -232,1 +231,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -239,1 +238,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -244,1 +243,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -249,1 +248,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -254,1 +253,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -257,1 +256,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -262,1 +261,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -269,1 +268,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -274,1 +273,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -277,1 +276,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -312,1 +311,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -314,1 +313,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -316,1 +315,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -322,1 +321,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -327,1 +326,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -329,1 +328,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -333,1 +332,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -335,1 +334,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -337,1 +336,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -343,1 +342,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -347,1 +346,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -349,1 +348,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -351,1 +350,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -385,1 +384,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -388,1 +387,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -393,1 +392,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -400,1 +399,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -405,1 +404,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -410,1 +409,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -415,1 +414,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -418,1 +417,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -421,1 +420,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -426,1 +425,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -429,1 +428,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -434,1 +433,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -441,1 +440,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -446,1 +445,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -449,1 +448,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -485,1 +484,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -487,1 +486,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -489,1 +488,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -495,1 +494,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -500,1 +499,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -502,1 +501,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -506,1 +505,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -508,1 +507,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -510,1 +509,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -516,1 +515,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -520,1 +519,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -522,1 +521,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -524,1 +523,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -558,1 +557,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -561,1 +560,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -566,1 +565,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -573,1 +572,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -578,1 +577,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -583,1 +582,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -588,1 +587,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -591,1 +590,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -594,1 +593,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -599,1 +598,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -602,1 +601,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -607,1 +606,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -614,1 +613,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -619,1 +618,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -622,1 +621,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -658,1 +657,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -660,1 +659,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -662,1 +661,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -668,1 +667,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -673,1 +672,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -675,1 +674,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -679,1 +678,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -681,1 +680,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -683,1 +682,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -689,1 +688,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -693,1 +692,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -695,1 +694,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -697,1 +696,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -731,1 +730,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -734,1 +733,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -739,1 +738,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -746,1 +745,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -751,1 +750,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -756,1 +755,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -761,1 +760,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -764,1 +763,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -767,1 +766,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -772,1 +771,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -775,1 +774,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -780,1 +779,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -787,1 +786,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -792,1 +791,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -795,1 +794,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -831,1 +830,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -833,1 +832,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -835,1 +834,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -841,1 +840,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -846,1 +845,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -848,1 +847,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -852,1 +851,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -854,1 +853,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -856,1 +855,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -862,1 +861,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -866,1 +865,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -868,1 +867,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -870,1 +869,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -904,1 +903,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -907,1 +906,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -912,1 +911,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -919,1 +918,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -924,1 +923,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -929,1 +928,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -934,1 +933,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -937,1 +936,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -940,1 +939,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -945,1 +944,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -948,1 +947,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -953,1 +952,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -960,1 +959,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -965,1 +964,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -968,1 +967,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1004,1 +1003,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1006,1 +1005,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1008,1 +1007,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1014,1 +1013,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1019,1 +1018,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1021,1 +1020,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1025,1 +1024,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1027,1 +1026,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1029,1 +1028,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1035,1 +1034,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1039,1 +1038,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1041,1 +1040,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1043,1 +1042,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1077,1 +1076,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1080,1 +1079,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1085,1 +1084,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1092,1 +1091,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1097,1 +1096,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1102,1 +1101,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1107,1 +1106,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1110,1 +1109,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1113,1 +1112,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1118,1 +1117,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1121,1 +1120,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1126,1 +1125,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1133,1 +1132,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1138,1 +1137,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1141,1 +1140,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1177,1 +1176,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1179,1 +1178,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1181,1 +1180,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1187,1 +1186,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1192,1 +1191,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1194,1 +1193,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1198,1 +1197,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1200,1 +1199,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1202,1 +1201,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1208,1 +1207,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1212,1 +1211,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1214,1 +1213,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1216,1 +1215,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1250,1 +1249,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1253,1 +1252,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1258,1 +1257,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1265,1 +1264,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1270,1 +1269,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1275,1 +1274,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1280,1 +1279,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1283,1 +1282,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1288,1 +1287,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1295,1 +1294,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1300,1 +1299,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1303,1 +1302,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/binding\/BindingsArrayTest.java","additions":193,"deletions":194,"binary":false,"changes":387,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -42,4 +44,2 @@\n-import test.com.sun.javafx.binding.ErrorLoggingUtiltity;\n-\n-import org.junit.jupiter.api.BeforeAll;\n-import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n@@ -48,2 +48,2 @@\n-\n-import static org.junit.jupiter.api.Assertions.*;\n+import test.com.sun.javafx.binding.ErrorLoggingUtility;\n+import test.javafx.util.OutputRedirect;\n@@ -70,3 +70,9 @@\n-    @BeforeAll\n-    public static void setUpClass() {\n-        ErrorLoggingUtiltity.reset();\n+    @BeforeEach\n+    public void beforeEach() {\n+        OutputRedirect.suppressStderr();\n+        ErrorLoggingUtility.reset();\n+    }\n+\n+    @AfterEach\n+    public void afterEach() {\n+        OutputRedirect.checkAndRestoreStderr();\n@@ -111,1 +117,1 @@\n-        ErrorLoggingUtiltity.checkWarning(Exception.class);\n+        ErrorLoggingUtility.checkWarning(Exception.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/binding\/BindingsCreateBindingTest.java","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import test.com.sun.javafx.binding.ErrorLoggingUtiltity;\n@@ -39,1 +38,1 @@\n-\n+import test.com.sun.javafx.binding.ErrorLoggingUtility;\n@@ -59,1 +58,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -157,1 +156,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -159,1 +158,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -161,1 +160,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -167,1 +166,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -172,1 +171,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -174,1 +173,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -178,1 +177,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -180,1 +179,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -182,1 +181,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -188,1 +187,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -192,1 +191,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -194,1 +193,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -196,1 +195,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -222,1 +221,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -225,1 +224,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -230,1 +229,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -237,1 +236,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -242,1 +241,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -247,1 +246,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -252,1 +251,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -255,1 +254,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -260,1 +259,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -267,1 +266,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -272,1 +271,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -275,1 +274,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -310,1 +309,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -312,1 +311,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -314,1 +313,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -320,1 +319,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -325,1 +324,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -327,1 +326,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -331,1 +330,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -333,1 +332,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -335,1 +334,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -341,1 +340,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -345,1 +344,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -347,1 +346,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -349,1 +348,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -383,1 +382,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -386,1 +385,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -391,1 +390,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -398,1 +397,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -403,1 +402,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -408,1 +407,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -413,1 +412,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -416,1 +415,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -419,1 +418,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -424,1 +423,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -427,1 +426,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -432,1 +431,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -439,1 +438,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -444,1 +443,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -447,1 +446,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -483,1 +482,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -485,1 +484,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -487,1 +486,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -493,1 +492,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -498,1 +497,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -500,1 +499,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -504,1 +503,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -506,1 +505,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -508,1 +507,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -514,1 +513,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -518,1 +517,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -520,1 +519,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -522,1 +521,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -556,1 +555,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -559,1 +558,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -564,1 +563,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -571,1 +570,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -576,1 +575,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -581,1 +580,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -586,1 +585,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -589,1 +588,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -592,1 +591,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -597,1 +596,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -600,1 +599,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -605,1 +604,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -612,1 +611,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -617,1 +616,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -620,1 +619,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -656,1 +655,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -658,1 +657,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -660,1 +659,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -666,1 +665,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -671,1 +670,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -673,1 +672,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -677,1 +676,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -679,1 +678,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -681,1 +680,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -687,1 +686,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -691,1 +690,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -693,1 +692,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -695,1 +694,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -729,1 +728,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -732,1 +731,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -737,1 +736,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -744,1 +743,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -749,1 +748,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -754,1 +753,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -759,1 +758,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -762,1 +761,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -765,1 +764,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -770,1 +769,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -773,1 +772,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -778,1 +777,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -785,1 +784,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -790,1 +789,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -793,1 +792,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -829,1 +828,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -831,1 +830,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -833,1 +832,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -839,1 +838,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -844,1 +843,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -846,1 +845,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -850,1 +849,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -852,1 +851,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -854,1 +853,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -860,1 +859,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -864,1 +863,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -866,1 +865,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -868,1 +867,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -902,1 +901,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -905,1 +904,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -910,1 +909,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -917,1 +916,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -922,1 +921,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -927,1 +926,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -932,1 +931,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -935,1 +934,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -938,1 +937,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -943,1 +942,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -946,1 +945,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -951,1 +950,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -958,1 +957,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -963,1 +962,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -966,1 +965,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1002,1 +1001,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1004,1 +1003,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1006,1 +1005,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1012,1 +1011,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1017,1 +1016,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1019,1 +1018,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1023,1 +1022,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1025,1 +1024,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1027,1 +1026,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1033,1 +1032,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1037,1 +1036,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1039,1 +1038,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1041,1 +1040,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1075,1 +1074,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1078,1 +1077,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1083,1 +1082,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1090,1 +1089,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1095,1 +1094,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1100,1 +1099,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1105,1 +1104,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1108,1 +1107,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1111,1 +1110,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1116,1 +1115,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1119,1 +1118,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1124,1 +1123,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1131,1 +1130,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1136,1 +1135,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1139,1 +1138,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1175,1 +1174,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1177,1 +1176,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1179,1 +1178,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1185,1 +1184,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1190,1 +1189,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1192,1 +1191,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1196,1 +1195,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1198,1 +1197,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1200,1 +1199,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1206,1 +1205,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1210,1 +1209,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1212,1 +1211,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1214,1 +1213,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1248,1 +1247,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1251,1 +1250,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1256,1 +1255,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1263,1 +1262,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1268,1 +1267,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1273,1 +1272,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1278,1 +1277,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1281,1 +1280,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1286,1 +1285,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1293,1 +1292,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1298,1 +1297,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -1301,1 +1300,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/binding\/BindingsListTest.java","additions":193,"deletions":194,"binary":false,"changes":387,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import test.com.sun.javafx.binding.ErrorLoggingUtiltity;\n@@ -40,1 +39,1 @@\n-\n+import test.com.sun.javafx.binding.ErrorLoggingUtility;\n@@ -61,1 +60,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -288,1 +287,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -290,1 +289,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -292,1 +291,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -298,1 +297,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -303,1 +302,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -305,1 +304,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -309,1 +308,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -311,1 +310,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -313,1 +312,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -320,1 +319,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -324,1 +323,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -326,1 +325,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -328,1 +327,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -355,1 +354,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -358,1 +357,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -363,1 +362,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -370,1 +369,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -375,1 +374,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -380,1 +379,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -385,1 +384,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -388,1 +387,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -394,1 +393,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -401,1 +400,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -406,1 +405,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -409,1 +408,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -447,1 +446,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -449,1 +448,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -451,1 +450,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -457,1 +456,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -462,1 +461,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -464,1 +463,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -468,1 +467,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -470,1 +469,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -472,1 +471,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -479,1 +478,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -483,1 +482,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -485,1 +484,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -487,1 +486,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -514,1 +513,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -517,1 +516,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -522,1 +521,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -529,1 +528,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -534,1 +533,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -539,1 +538,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -544,1 +543,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -547,1 +546,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -553,1 +552,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -560,1 +559,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -565,1 +564,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -568,1 +567,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -606,1 +605,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -608,1 +607,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -610,1 +609,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -616,1 +615,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -621,1 +620,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -623,1 +622,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -627,1 +626,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -629,1 +628,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -631,1 +630,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -638,1 +637,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -642,1 +641,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -644,1 +643,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -646,1 +645,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -673,1 +672,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -676,1 +675,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -681,1 +680,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -688,1 +687,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -693,1 +692,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -698,1 +697,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -703,1 +702,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -706,1 +705,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -712,1 +711,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -719,1 +718,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -724,1 +723,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -727,1 +726,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -765,1 +764,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -767,1 +766,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -769,1 +768,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -775,1 +774,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -780,1 +779,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -782,1 +781,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -786,1 +785,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -788,1 +787,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -790,1 +789,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -797,1 +796,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -801,1 +800,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -803,1 +802,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -805,1 +804,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -832,1 +831,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -835,1 +834,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -840,1 +839,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -847,1 +846,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -852,1 +851,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -857,1 +856,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -862,1 +861,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -865,1 +864,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -871,1 +870,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -878,1 +877,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -883,1 +882,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -886,1 +885,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -924,1 +923,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -926,1 +925,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -928,1 +927,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -934,1 +933,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -939,1 +938,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -941,1 +940,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -945,1 +944,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -947,1 +946,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -949,1 +948,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -956,1 +955,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -960,1 +959,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -962,1 +961,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -964,1 +963,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -991,1 +990,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -994,1 +993,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -999,1 +998,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1006,1 +1005,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1011,1 +1010,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1016,1 +1015,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1021,1 +1020,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1024,1 +1023,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1030,1 +1029,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1037,1 +1036,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1042,1 +1041,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n@@ -1045,1 +1044,1 @@\n-        ErrorLoggingUtiltity.checkFine(NullPointerException.class);\n+        ErrorLoggingUtility.checkFine(NullPointerException.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/binding\/BindingsMapTest.java","additions":128,"deletions":129,"binary":false,"changes":257,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import test.com.sun.javafx.binding.ErrorLoggingUtiltity;\n@@ -42,1 +41,1 @@\n-\n+import test.com.sun.javafx.binding.ErrorLoggingUtility;\n@@ -67,1 +66,1 @@\n-        ErrorLoggingUtiltity.reset();\n+        ErrorLoggingUtility.reset();\n@@ -81,1 +80,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -83,1 +82,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -87,1 +86,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -92,1 +91,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -108,1 +107,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -110,1 +109,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -112,1 +111,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -114,1 +113,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -118,1 +117,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -120,1 +119,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -126,1 +125,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -128,1 +127,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -130,1 +129,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -135,1 +134,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -137,1 +136,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -139,1 +138,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n@@ -141,1 +140,1 @@\n-        ErrorLoggingUtiltity.checkFine(IndexOutOfBoundsException.class);\n+        ErrorLoggingUtility.checkFine(IndexOutOfBoundsException.class);\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/binding\/expression\/ListExpressionTest.java","additions":20,"deletions":21,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package test.javafx.util;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.OutputStream;\n+import java.io.PrintStream;\n+\n+\/**\n+ * PrintStream that accumulates output in memory.\n+ *\/\n+public class AccumulatingPrintStream extends PrintStream {\n+\n+    private final ByteArrayOutputStream out;\n+\n+    private AccumulatingPrintStream(ByteArrayOutputStream out) {\n+        super(out);\n+        this.out = out;\n+    }\n+\n+    public static AccumulatingPrintStream create() {\n+        ByteArrayOutputStream out = new ByteArrayOutputStream();\n+        return new AccumulatingPrintStream(out);\n+    }\n+\n+    public String getAccumulatedOutput() {\n+        byte[] b = out.toByteArray();\n+        return new String(b, charset());\n+    }\n+}\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/util\/AccumulatingPrintStream.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,234 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package test.javafx.util;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.fail;\n+import java.io.PrintStream;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import org.junit.jupiter.api.Test;\n+\n+\/\/\/ This facility is used in the tests to redirect stderr output to an in-memory buffer\n+\/\/\/ for two reasons:\n+\/\/\/ 1. to suppress unrelated output in the logs\n+\/\/\/ 2. to check for the presence of expected exceptions and patterns\n+\/\/\/\n+public class OutputRedirect {\n+    private static PrintStream stderr;\n+    private static AccumulatingPrintStream stderrCapture;\n+\n+    \/\/\/ Redirects the stderr to an internal buffer, for the purpose of avoiding polluting the test logs.\n+    \/\/\/ This method is typically placed inside of the `@BeforeEach` block.\n+    \/\/\/\n+    \/\/\/ Once the test is finished, the output can be checked for thrown exceptions using {@link #checkStderr(Class...)}.\n+    \/\/\/ or {@link #checkAndRestoreStderr(Class...)}.\n+    \/\/\/\n+    \/\/\/ The redirection needs to be undone by calling either {@link #restoreStderr()} or\n+    \/\/\/ {@link #checkAndRestoreStderr(Class...)} method.\n+    \/\/\/\n+    public static void suppressStderr() {\n+        if (stderrCapture == null) {\n+            stderr = System.err;\n+            stderrCapture = AccumulatingPrintStream.create();\n+            System.setErr(stderrCapture);\n+        }\n+    }\n+\n+    \/\/\/ Restores stderr redirection (typically done inside of a `@AfterEach` block).\n+    \/\/\/ It is safe to call this method multiple times.\n+    public static void restoreStderr() {\n+        if (stderr != null) {\n+            System.setErr(stderr);\n+            stderr = null;\n+            stderrCapture = null;\n+        }\n+    }\n+\n+    \/\/\/ Returns the captured output, if any, or `null`.\n+    \/\/\/ @return the captured output string, or `null`\n+    \/\/\/\n+    public static String getCapturedOutput() {\n+        if (stderrCapture != null) {\n+            return stderrCapture.getAccumulatedOutput();\n+        }\n+        return null;\n+    }\n+\n+    \/\/\/ Checks the accumulated stderr buffer for the expected exceptions and string patterns.\n+    \/\/\/\n+    \/\/\/ This method expects the arguments to contain either instances of `Class<? extends Throwable>`,\n+    \/\/\/ or `String` patterns.  For exceptions, multiple instances of the same type are allowed so both the type\n+    \/\/\/ and a number of exceptions can be verified.\n+    \/\/\/\n+    \/\/\/ For `String` patterns, the check is done via `String.contains()` on the entire captured output.\n+    \/\/\/\n+    \/\/\/ When mismatch occurs, the accumulated output is dumped to the actual stderr, and the test `fail()`s.\n+    \/\/\/\n+    \/\/\/ @param expected the expected exception classes (duplicates allowed), and\/or string patterns\n+    \/\/\/\n+    public static void checkStderr(Object ... expected) {\n+        if (stderrCapture != null) {\n+            boolean err = false;\n+            String text = stderrCapture.getAccumulatedOutput();\n+\n+            \/\/ exceptions\n+            Map<String, Integer> errors = findErrors(text);\n+            Map<String, Integer> exp = toMap(expected);\n+            if (!errors.equals(exp)) {\n+                stderr.println(\"Mismatch in thrown exceptions:\\n  expected=\" + exp + \"\\n  observed=\" + errors);\n+            }\n+\n+            \/\/ patterns\n+            for (Object x : expected) {\n+                if (x instanceof String s) {\n+                    if (!text.contains(s)) {\n+                        stderr.println(\"Expected pattern not found: \" + s);\n+                        err = true;\n+                    }\n+                }\n+            }\n+\n+            if (err) {\n+                stderr.println(text);\n+                \/\/ mismatch fails the test\n+                fail(\"Unexpected stderr output\");\n+            }\n+        }\n+    }\n+\n+    \/\/\/ Checks the accumulated stderr buffer for the expected exceptions and string patterns,\n+    \/\/\/ then restores the redirection.\n+    \/\/\/\n+    \/\/\/ This method is equivalent to calling {@link #checkStderr(Object...)} followed by\n+    \/\/\/ {@link #restoreStderr()}.\n+    \/\/\/\n+    \/\/\/ @param expected the expected exception classes (duplicates allowed), and\/or string patterns\n+    \/\/\/\n+    public static void checkAndRestoreStderr(Object ... expected) {\n+        try {\n+            checkStderr(expected);\n+        } finally {\n+            restoreStderr();\n+        }\n+    }\n+\n+    private static Map<String, Integer> toMap(Object... expected) {\n+        HashMap<String, Integer> m = new HashMap<>();\n+        for (Object x : expected) {\n+            if (x instanceof Class c) {\n+                if (Throwable.class.isAssignableFrom(c)) {\n+                    String name = c.getName();\n+                    Integer v = m.get(name);\n+                    if (v == null) {\n+                        m.put(name, Integer.valueOf(1));\n+                    } else {\n+                        m.put(name, Integer.valueOf(v + 1));\n+                    }\n+                } else {\n+                    throw new IllegalArgumentException(\"must specify either Class<? extends Throwable>: \" + c);\n+                }\n+            } else if(x instanceof String) {\n+                \/\/ ok\n+            } else {\n+                throw new IllegalArgumentException(\"must specify either Class<? extends Throwable> or String: \" + x);\n+            }\n+        }\n+        return m;\n+    }\n+\n+    private static Map<String, Integer> findErrors(String text) {\n+        HashMap<String, Integer> m = new HashMap<>();\n+        text.\n+            lines().\n+            map((s) -> findException(s)).\n+            forEach((c) -> {\n+                if (c != null) {\n+                    Integer v = m.get(c);\n+                    if (v == null) {\n+                        m.put(c, Integer.valueOf(1));\n+                    } else {\n+                        m.put(c, Integer.valueOf(v + 1));\n+                    }\n+                }\n+            });\n+        return m;\n+    }\n+\n+    private static final Pattern EXCEPTION_PATTERN = Pattern.compile(\n+        \"(?:\" +\n+            \/\/ catches lines starting with things like \"Exception in thread \"main\" java.lang.RuntimeException:\"\n+            \"^\" +\n+            \"(?:\" +\n+                \"Exception in thread\\s+\\\"[^\\\"]*\\\"\\\\s+\" +\n+                \"(\" + \/\/ capture group 1\n+                    \"(?:[a-zA-Z_][a-zA-Z0-9_]*\\\\.)*\" +\n+                    \"(?:\" +\n+                        \"(?:[A-Z][a-zA-Z0-9]*)*\" +\n+                        \"(?:Exception|Error)\" +\n+                    \")\" +\n+                \")\" +\n+            \")\" +\n+        \")\" +\n+        \"|\" +\n+        \"(?:\" +\n+            \/\/ \/\/ catches lines starting with things like \"java.lang.NullPointerException: Cannot invoke...\"\n+            \"^\" +\n+            \"(\" + \/\/ capture group 2\n+                \"(?:[a-zA-Z_][a-zA-Z0-9_]*\\\\.)*\" +\n+                \"(?:[A-Z][a-zA-Z0-9]*)*\" +\n+                \"(?:Exception|Error)\" +\n+            \")\" +\n+        \")\");\n+\n+    private static String findException(String text) {\n+        Matcher m = EXCEPTION_PATTERN.matcher(text);\n+        String name;\n+        if (m.find()) {\n+            name = m.group(1);\n+            if (name == null) {\n+                name = m.group(2);\n+            }\n+            return name;\n+        }\n+        return null;\n+    }\n+\n+    \/\/ should I leave this test here?  to test the test?\n+    @Test\n+    public void testFindException() {\n+        t(\"Exception in thread \\\"main\\\" java.lang.Error\", \"java.lang.Error\");\n+        t(\"Exception in thread \\\"main\\\" java.lang.RuntimeException: blah blah\", \"java.lang.RuntimeException\");\n+        t(\"java.lang.NullPointerException: Cannot invoke \\\"Object.toString(\", \"java.lang.NullPointerException\");\n+        t(\"    at javafx.base\/com.sun.javafx.binding.SelectBinding$AsString.computeValue(SelectBinding.java:392)\", null);\n+    }\n+\n+    private void t(String text, String expected) {\n+        String s = findException(text);\n+        assertEquals(expected, s);\n+    }\n+}\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/util\/OutputRedirect.java","additions":234,"deletions":0,"binary":false,"changes":234,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-package test.util;\n+package test.javafx.util;\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/util\/ReflectionUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"modules\/javafx.base\/src\/test\/java\/test\/util\/ReflectionUtils.java","status":"renamed"},{"patch":"@@ -35,1 +35,1 @@\n-\t\t\t<attribute name=\"add-exports\" value=\"javafx.base\/com.sun.javafx.collections=javafx.fxml\"\/>\n+\t\t\t<attribute name=\"add-exports\" value=\"javafx.base\/com.sun.javafx.collections=javafx.fxml:javafx.base\/test.javafx.util=javafx.fxml\"\/>\n","filename":"modules\/javafx.fxml\/.classpath","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -34,0 +36,1 @@\n+import test.javafx.util.OutputRedirect;\n@@ -35,3 +38,3 @@\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-\n+\/**\n+ * https:\/\/bugs.openjdk.org\/browse\/JDK-8119985\n+ *\/\n@@ -53,4 +56,5 @@\n-        System.err.println(\"Below warnings about - deprecated escape sequence - are expected from this test.\");\n-        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"rt_27529_2.fxml\"),\n-            ResourceBundle.getBundle(\"test\/javafx\/fxml\/rt_27529\"));\n-        fxmlLoader.load();\n+        OutputRedirect.suppressStderr();\n+        try {\n+            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"rt_27529_2.fxml\"),\n+                ResourceBundle.getBundle(\"test\/javafx\/fxml\/rt_27529\"));\n+            fxmlLoader.load();\n@@ -58,3 +62,14 @@\n-        Widget widget = (Widget)fxmlLoader.getNamespace().get(\"widget1\");\n-        assertEquals(Arrays.asList(new String[]{\"@a\", \"%b\", \"$c\", \"@c\", \"%d\", \"$e\"}), widget.getStyles());\n-        assertTrue(Arrays.equals(  new String[]{\"@a\", \"%b\", \"$c\", \"@c\", \"%d\", \"$e\"}, widget.getNames()));\n+            Widget widget = (Widget)fxmlLoader.getNamespace().get(\"widget1\");\n+            assertEquals(Arrays.asList(new String[]{\"@a\", \"%b\", \"$c\", \"@c\", \"%d\", \"$e\"}), widget.getStyles());\n+            assertTrue(Arrays.equals(  new String[]{\"@a\", \"%b\", \"$c\", \"@c\", \"%d\", \"$e\"}, widget.getNames()));\n+            OutputRedirect.checkStderr(\n+                \"@@ is a deprecated escape sequence. Please use \\\\@ instead.\",\n+                \"%% is a deprecated escape sequence. Please use \\\\% instead.\",\n+                \"$$ is a deprecated escape sequence. Please use \\\\$ instead.\",\n+                \"@@ is a deprecated escape sequence. Please use \\\\@ instead.\",\n+                \"%% is a deprecated escape sequence. Please use \\\\% instead.\",\n+                \"$$ is a deprecated escape sequence. Please use \\\\$ instead.\"\n+                );\n+        } finally {\n+            OutputRedirect.restoreStderr();\n+        }\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/RT_27529Test.java","additions":26,"deletions":11,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-\t\t\t<attribute name=\"add-exports\" value=\"javafx.base\/com.sun.javafx.property=javafx.graphics:javafx.base\/test.javafx.collections=javafx.graphics:javafx.base\/test.util.memory=javafx.graphics:javafx.base\/test.util=javafx.graphics\"\/>\n+\t\t\t<attribute name=\"add-exports\" value=\"javafx.base\/com.sun.javafx.property=javafx.graphics:javafx.base\/test.javafx.collections=javafx.graphics:javafx.base\/test.util.memory=javafx.graphics:javafx.base\/test.javafx.util=javafx.graphics\"\/>\n","filename":"modules\/javafx.graphics\/.classpath","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import test.javafx.util.ReflectionUtils;\n@@ -43,1 +44,0 @@\n-import test.util.ReflectionUtils;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/glass\/ui\/HeaderButtonOverlayTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-import static test.util.ReflectionUtils.*;\n+import static test.javafx.util.ReflectionUtils.*;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StyleableProperty_transition_Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,2 +49,1 @@\n-import test.util.ReflectionUtils;\n-\n+import test.javafx.util.ReflectionUtils;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/HeaderBarTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n-\t\t\t<attribute name=\"add-exports\" value=\"javafx.base\/com.sun.javafx=ALL-UNNAMED:javafx.base\/test.util.memory=ALL-UNNAMED\"\/>\n+\t\t\t<attribute name=\"add-exports\" value=\"javafx.base\/com.sun.javafx=ALL-UNNAMED:javafx.base\/test.util.memory=ALL-UNNAMED:javafx.base\/test.javafx.util=ALL-UNNAMED\"\/>\n","filename":"tests\/system\/src\/test\/.classpath","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+import test.javafx.util.OutputRedirect;\n@@ -161,2 +162,18 @@\n-    public void doTestIdleImplicit(final boolean implicit,\n-            final ThrowableType throwableType) {\n+    public void doTestIdleImplicit(boolean implicit, ThrowableType throwableType) {\n+        Object[] expected = switch(throwableType) {\n+        case ERROR ->\n+            new Object[] { InternalError.class };\n+        case EXCEPTION ->\n+            new Object[] { RuntimeException.class };\n+        case NONE ->\n+            new Object[0];\n+        };\n+        OutputRedirect.suppressStderr();\n+        try {\n+            doTestIdleImplicit2(implicit, throwableType);\n+        } finally {\n+            OutputRedirect.checkAndRestoreStderr(expected);\n+        }\n+    }\n+\n+    private void doTestIdleImplicit2(boolean implicit, ThrowableType throwableType) {\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/application\/ListenerTestCommon.java","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import test.javafx.util.OutputRedirect;\n@@ -72,1 +73,10 @@\n-    private void doTestCommon(final boolean implicitExit) {\n+    private void doTestCommon(boolean implicitExit) {\n+        OutputRedirect.suppressStderr();\n+        try {\n+            doTestCommon2(implicitExit);\n+        } finally {\n+            OutputRedirect.checkAndRestoreStderr(RuntimeException.class);\n+        }\n+    }\n+\n+    private void doTestCommon2(boolean implicitExit) {\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/application\/PlatformStartupCommon.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+import test.javafx.util.OutputRedirect;\n@@ -140,2 +141,1 @@\n-        doTestCommon(implicitExit, reEnableImplicitExit, stageShown,\n-                ThrowableType.NONE, appShouldExit);\n+        doTestCommon(implicitExit, reEnableImplicitExit, stageShown, ThrowableType.NONE, appShouldExit);\n@@ -145,0 +145,20 @@\n+        boolean reEnableImplicitExit, boolean stageShown,\n+        ThrowableType throwableType, boolean appShouldExit) {\n+\n+        Object[] expected = switch(throwableType) {\n+        case ERROR ->\n+            new Object[] { InternalError.class };\n+        case EXCEPTION ->\n+            new Object[] { RuntimeException.class };\n+        case NONE ->\n+            new Object[0];\n+        };\n+        OutputRedirect.suppressStderr();\n+        try {\n+            doTestCommon2(implicitExit, reEnableImplicitExit, stageShown, throwableType, appShouldExit);\n+        } finally {\n+            OutputRedirect.checkAndRestoreStderr(expected);\n+        }\n+    }\n+\n+    private void doTestCommon2(boolean implicitExit,\n@@ -146,1 +166,1 @@\n-            final ThrowableType throwableType, boolean appShouldExit) {\n+            ThrowableType throwableType, boolean appShouldExit) {\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/application\/SingleExitCommon.java","additions":24,"deletions":4,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,1 @@\n+import test.javafx.util.OutputRedirect;\n@@ -224,14 +225,20 @@\n-            \/\/ NOTE: cannot use a lambda expression for the following callback\n-            Callback<SnapshotResult, Void> cb = new Callback() {\n-                @Override public Object call(Object param) {\n-                    assertNotNull(param);\n-\n-                    latch.countDown();\n-                    \/\/ The following will cause a ClassCastException warning\n-                    \/\/ message to be printed.\n-                    return \"\";\n-                }\n-            };\n-\n-            tmpScene.snapshot(cb, null);\n-            Util.sleep(SLEEP_TIME);\n+            OutputRedirect.suppressStderr();\n+            try {\n+                \/\/ NOTE: cannot use a lambda expression for the following callback\n+                Callback<SnapshotResult, Void> cb = new Callback() {\n+                    @Override\n+                    public Object call(Object param) {\n+                        assertNotNull(param);\n+\n+                        latch.countDown();\n+                        \/\/ The following will cause a ClassCastException warning\n+                        \/\/ message to be printed.\n+                        return \"\";\n+                    }\n+                };\n+\n+                tmpScene.snapshot(cb, null);\n+                Util.sleep(SLEEP_TIME);\n+            } finally {\n+                OutputRedirect.checkAndRestoreStderr(ClassCastException.class);\n+            }\n@@ -239,1 +246,0 @@\n-            System.err.println(\"testBadSceneCallback1: a ClassCastException warning message is expected here\");\n@@ -262,5 +268,7 @@\n-            Callback cb = (Callback<String, Integer>) param -> {\n-                \/\/ Should not get here\n-                latch.countDown();\n-                throw new AssertionError(\"Should never get here\");\n-            };\n+            OutputRedirect.suppressStderr();\n+            try {\n+                Callback cb = (Callback<String, Integer>) param -> {\n+                    \/\/ Should not get here\n+                    latch.countDown();\n+                    throw new AssertionError(\"Should never get here\");\n+                };\n@@ -268,2 +276,5 @@\n-            tmpScene.snapshot(cb, null);\n-            Util.sleep(SLEEP_TIME);\n+                tmpScene.snapshot(cb, null);\n+                Util.sleep(SLEEP_TIME);\n+            } finally {\n+                OutputRedirect.checkAndRestoreStderr(ClassCastException.class);\n+            }\n@@ -271,1 +282,0 @@\n-            System.err.println(\"testBadSceneCallback2: a ClassCastException warning message is expected here\");\n@@ -346,14 +356,20 @@\n-            \/\/ NOTE: cannot use a lambda expression for the following callback\n-            Callback<SnapshotResult, Void> cb = new Callback() {\n-                @Override public Object call(Object param) {\n-                    assertNotNull(param);\n-\n-                    latch.countDown();\n-                    \/\/ The following will cause a ClassCastException warning\n-                    \/\/ message to be printed.\n-                    return \"\";\n-                }\n-            };\n-\n-            tmpNode.snapshot(cb, null, null);\n-            Util.sleep(SLEEP_TIME);\n+            OutputRedirect.suppressStderr();\n+            try {\n+                \/\/ NOTE: cannot use a lambda expression for the following callback\n+                Callback<SnapshotResult, Void> cb = new Callback() {\n+                    @Override\n+                    public Object call(Object param) {\n+                        assertNotNull(param);\n+\n+                        latch.countDown();\n+                        \/\/ The following will cause a ClassCastException warning\n+                        \/\/ message to be printed.\n+                        return \"\";\n+                    }\n+                };\n+\n+                tmpNode.snapshot(cb, null, null);\n+                Util.sleep(SLEEP_TIME);\n+            } finally {\n+                OutputRedirect.checkAndRestoreStderr(ClassCastException.class);\n+            }\n@@ -361,1 +377,0 @@\n-            System.err.println(\"testBadNodeCallback1: a ClassCastException warning message is expected here\");\n@@ -384,5 +399,7 @@\n-            Callback cb = (Callback<String, Integer>) param -> {\n-                \/\/ Should not get here\n-                latch.countDown();\n-                throw new AssertionError(\"Should never get here\");\n-            };\n+            OutputRedirect.suppressStderr();\n+            try {\n+                Callback cb = (Callback<String, Integer>) param -> {\n+                    \/\/ Should not get here\n+                    latch.countDown();\n+                    throw new AssertionError(\"Should never get here\");\n+                };\n@@ -390,2 +407,5 @@\n-            tmpNode.snapshot(cb, null, null);\n-            Util.sleep(SLEEP_TIME);\n+                tmpNode.snapshot(cb, null, null);\n+                Util.sleep(SLEEP_TIME);\n+            } finally {\n+                OutputRedirect.checkAndRestoreStderr(ClassCastException.class);\n+            }\n@@ -393,1 +413,0 @@\n-            System.err.println(\"testBadNodeCallback2: a ClassCastException warning message is expected here\");\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/Snapshot1Test.java","additions":66,"deletions":47,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import test.javafx.util.OutputRedirect;\n@@ -59,1 +60,10 @@\n-    private void doTestLaunchModule(String appModulePath, String testAppName) throws Exception {\n+    private void doTestLaunchModule(String appModulePath, String testAppName, Object ... expected) throws Exception {\n+        OutputRedirect.suppressStderr();\n+        try {\n+            doTestLaunchModule2(appModulePath, testAppName);\n+        } finally {\n+            OutputRedirect.checkAndRestoreStderr(expected);\n+        }\n+    }\n+\n+    private void doTestLaunchModule2(String appModulePath, String testAppName) throws Exception {\n","filename":"tests\/system\/src\/test\/java\/test\/launchertest\/ModuleLauncherTest.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}