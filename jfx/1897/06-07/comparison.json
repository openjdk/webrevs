{"files":[{"patch":"@@ -48,0 +48,1 @@\n+import org.junit.jupiter.api.BeforeAll;\n@@ -108,0 +109,5 @@\n+    @BeforeAll\n+    public void setUpClass() throws Exception {\n+        ErrorLoggingUtiltity.reset();\n+    }\n+\n@@ -111,1 +117,0 @@\n-        ErrorLoggingUtiltity.reset();\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/binding\/SelectBindingTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import org.junit.jupiter.api.BeforeAll;\n@@ -70,0 +71,5 @@\n+    @BeforeAll\n+    public static void setUpClass() {\n+        ErrorLoggingUtiltity.reset();\n+    }\n+\n@@ -73,1 +79,0 @@\n-        ErrorLoggingUtiltity.reset();\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/binding\/BindingsCreateBindingTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -72,10 +72,0 @@\n-    \/\/\/ Returns the captured output, if any, or `null`.\n-    \/\/\/ @return the captured output string, or `null`\n-    \/\/\/\n-    public static String getCapturedOutput() {\n-        if (stderrCapture != null) {\n-            return stderrCapture.getAccumulatedOutput();\n-        }\n-        return null;\n-    }\n-\n@@ -104,0 +94,1 @@\n+                err = true;\n@@ -153,1 +144,1 @@\n-                    throw new IllegalArgumentException(\"must specify either Class<? extends Throwable>: \" + c);\n+                    throw new IllegalArgumentException(\"must specify Class<? extends Throwable>: \" + c);\n@@ -182,0 +173,7 @@\n+    \/\/\/ This regex matches either of the two patterns which might appear in the output:\n+    \/\/\/\n+    \/\/\/ `Exception in thread \"main\" java.lang.RuntimeException:`\n+    \/\/\/\n+    \/\/\/ or\n+    \/\/\/\n+    \/\/\/ `java.lang.NullPointerException: ...`\n@@ -185,2 +183,2 @@\n-            \"^\" +\n-            \"(?:\" +\n+            \"^\" + \/\/ start of line\n+            \"(?:\" + \/\/ non-capturing group\n@@ -197,1 +195,1 @@\n-        \"|\" +\n+        \"|\" + \/\/ or\n@@ -199,1 +197,1 @@\n-            \/\/ \/\/ catches lines starting with things like \"java.lang.NullPointerException: Cannot invoke...\"\n+            \/\/ catches lines starting with things like \"java.lang.NullPointerException: Cannot invoke...\"\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/util\/OutputRedirect.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -141,1 +141,2 @@\n-        doTestCommon(implicitExit, reEnableImplicitExit, stageShown, ThrowableType.NONE, appShouldExit);\n+        doTestCommon(implicitExit, reEnableImplicitExit, stageShown,\n+                ThrowableType.NONE, appShouldExit);\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/application\/SingleExitCommon.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    private void doTestLaunchModule(String appModulePath, String testAppName, Object ... expected) throws Exception {\n+    private void doTestLaunchModule(String appModulePath, String testAppName) throws Exception {\n@@ -65,1 +65,1 @@\n-            OutputRedirect.checkAndRestoreStderr(expected);\n+            OutputRedirect.checkAndRestoreStderr();\n","filename":"tests\/system\/src\/test\/java\/test\/launchertest\/ModuleLauncherTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}