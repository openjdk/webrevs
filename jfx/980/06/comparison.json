{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -805,1 +805,6 @@\n-                promptNode.setLayoutX(newX);\n+                if (newX > 0) {\n+                    promptNode.setLayoutX(newX);\n+                } else {\n+                    \/\/ Align to left when prompt text length is more than text field width\n+                    promptNode.setLayoutX(caretWidth \/ 2);\n+                }\n@@ -808,4 +813,6 @@\n-            }\n-            \/\/ Update if there is space on the right\n-            if (newX + textNodeWidth <= textRight.get()) {\n-                textTranslateX.set(newX);\n+                \/\/ Update if there is space on the right\n+                if (newX + textNodeWidth <= textRight.get() - caretWidth \/ 2) {\n+                    textTranslateX.set(newX);\n+                } else if (newX < 0 && oldX > caretWidth \/ 2) {\n+                    textTranslateX.set(caretWidth \/ 2);\n+                }\n@@ -816,5 +823,0 @@\n-            newX = textRight.get() - textNodeWidth - caretWidth \/ 2;\n-            \/\/ Update if there is space on the right\n-            if (newX > oldX || newX > 0) {\n-                textTranslateX.set(newX);\n-            }\n@@ -822,2 +824,15 @@\n-                promptNode.setLayoutX(textRight.get() - promptNode.getLayoutBounds().getWidth() -\n-                                      caretWidth \/ 2);\n+                newX = textRight.get() - promptNode.getLayoutBounds().getWidth() - caretWidth \/ 2;\n+                if (newX > 0) {\n+                    promptNode.setLayoutX(newX);\n+                } else {\n+                    \/\/ Align to left when prompt text length is more than text field width\n+                    promptNode.setLayoutX(caretWidth \/ 2);\n+                }\n+            } else {\n+                newX = textRight.get() - textNodeWidth - caretWidth \/ 2;\n+                \/\/ Update if there is space on the right\n+                if (newX > oldX || newX > 0) {\n+                  textTranslateX.set(newX);\n+                } else if (newX < 0 && oldX > caretWidth \/ 2) {\n+                  textTranslateX.set(caretWidth \/ 2);\n+                }\n@@ -886,21 +901,1 @@\n-        switch (getHAlignment()) {\n-          case RIGHT:\n-            if (textBounds.getMaxX() > clipBounds.getMaxX()) {\n-                double delta = caretMaxXOld - caretBounds.getMaxX() - textTranslateX.get();\n-                if (textBounds.getMaxX() + delta < clipBounds.getMaxX()) {\n-                    if (textMaxXOld <= clipBounds.getMaxX()) {\n-                        delta = textMaxXOld - textBounds.getMaxX();\n-                    } else {\n-                        delta = clipBounds.getMaxX() - textBounds.getMaxX();\n-                    }\n-                }\n-                textTranslateX.set(textTranslateX.get() + delta);\n-            } else {\n-                updateTextPos();\n-            }\n-            break;\n-\n-          case LEFT:\n-          case CENTER:\n-          default:\n-            if (textBounds.getMinX() < clipBounds.getMinX() + caretWidth \/ 2 &&\n+        if (textBounds.getMinX() < clipBounds.getMinX() + caretWidth \/ 2 &&\n@@ -908,7 +903,6 @@\n-                double delta = caretMaxXOld - caretBounds.getMaxX() - textTranslateX.get();\n-                if (textBounds.getMaxX() + delta < clipBounds.getMaxX()) {\n-                    if (textMaxXOld <= clipBounds.getMaxX()) {\n-                        delta = textMaxXOld - textBounds.getMaxX();\n-                    } else {\n-                        delta = clipBounds.getMaxX() - textBounds.getMaxX();\n-                    }\n+            double delta = caretMaxXOld - caretBounds.getMaxX() - textTranslateX.get();\n+            if (textBounds.getMaxX() + delta < clipBounds.getMaxX()) {\n+                if (textMaxXOld <= clipBounds.getMaxX()) {\n+                    delta = textMaxXOld - textBounds.getMaxX();\n+                } else {\n+                    delta = clipBounds.getMaxX() - textBounds.getMaxX();\n@@ -916,1 +910,0 @@\n-                textTranslateX.set(textTranslateX.get() + delta);\n@@ -918,0 +911,1 @@\n+            textTranslateX.set(textTranslateX.get() + delta);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TextFieldSkin.java","additions":36,"deletions":42,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+import javafx.geometry.Pos;\n@@ -59,0 +60,2 @@\n+import javafx.scene.control.skin.TextFieldSkin;\n+import javafx.scene.control.skin.TextInputSkinShim;\n@@ -546,0 +549,63 @@\n+    \/**\n+     * test for JDK-8178368: Right and Center alignment of text field works incorrectly\n+     *\n+     * Here we test that text aligns as expected when text width is more than TextField width.\n+     * All three alignment types LEFT, RIGHT and CENTER are validated below.\n+     *\/\n+    @Test\n+    public void testTextFieldLeftAlignment() {\n+        initStage();\n+        txtField.setSkin(new TextFieldSkin(txtField));\n+        txtField.setText(\"A short text.\");\n+        txtField.setPrefColumnCount(20);\n+        txtField.setAlignment(Pos.BASELINE_LEFT);\n+\n+        root.getChildren().add(txtField);\n+        stage.show();\n+\n+        assertTrue(txtField.getWidth() > TextInputSkinShim.getTextNode(txtField).getLayoutBounds().getWidth());\n+        assertEquals(TextInputSkinShim.getTextTranslateX(txtField), 0, 0.0);\n+\n+        txtField.setText(\"This is a long text. this is  long text.\");\n+        assertTrue(txtField.getWidth() < TextInputSkinShim.getTextNode(txtField).getLayoutBounds().getWidth());\n+        assertEquals(0, TextInputSkinShim.getTextTranslateX(txtField), 0.0);\n+    }\n+\n+    @Test\n+    public void testTextFieldRightAlignment() {\n+        initStage();\n+        txtField.setSkin(new TextFieldSkin(txtField));\n+        txtField.setText(\"A short text.\");\n+        txtField.setPrefColumnCount(20);\n+        txtField.setAlignment(Pos.BASELINE_RIGHT);\n+\n+        root.getChildren().add(txtField);\n+        stage.show();\n+\n+        assertTrue(txtField.getWidth() > TextInputSkinShim.getTextNode(txtField).getLayoutBounds().getWidth());\n+        assertTrue(TextInputSkinShim.getTextTranslateX(txtField) > 0);\n+\n+        txtField.setText(\"This is a long text. this is  long text.\");\n+        assertTrue(txtField.getWidth() < TextInputSkinShim.getTextNode(txtField).getLayoutBounds().getWidth());\n+        assertEquals(0, TextInputSkinShim.getTextTranslateX(txtField), 0.0);\n+    }\n+\n+    @Test\n+    public void testTextFieldCenterAlignment() {\n+        initStage();\n+        txtField.setSkin(new TextFieldSkin(txtField));\n+        txtField.setText(\"A short text.\");\n+        txtField.setPrefColumnCount(20);\n+        txtField.setAlignment(Pos.BASELINE_CENTER);\n+\n+        root.getChildren().add(txtField);\n+        stage.show();\n+\n+        assertTrue(txtField.getWidth() > TextInputSkinShim.getTextNode(txtField).getLayoutBounds().getWidth());\n+        assertTrue(TextInputSkinShim.getTextTranslateX(txtField) > 0);\n+\n+        txtField.setText(\"This is a long text. this is  long text.\");\n+        assertTrue(txtField.getWidth() < TextInputSkinShim.getTextNode(txtField).getLayoutBounds().getWidth());\n+        assertEquals(0, TextInputSkinShim.getTextTranslateX(txtField), 0.0);\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TextFieldTest.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"modified"}]}