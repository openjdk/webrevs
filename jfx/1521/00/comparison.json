{"files":[{"patch":"@@ -808,0 +808,3 @@\n+                    resetIndex(cells);\n+                    resetIndex(pile);\n+\n@@ -1075,3 +1078,4 @@\n-            for (int i = 0, max = cells.size(); i < max; i++) {\n-                cells.get(i).updateIndex(-1);\n-            }\n+\n+            resetIndex(cells);\n+            resetIndex(pile);\n+\n@@ -1085,3 +1089,3 @@\n-            for (int i = 0, max = cells.size(); i < max; i++) {\n-                cells.get(i).updateIndex(-1);\n-            }\n+\n+            resetIndex(cells);\n+\n@@ -1348,0 +1352,12 @@\n+    \/**\n+     * Resets the index to -1 to all cells.\n+     * This is to properly clean them up and ensure that no listeners are called because they retain their old index.\n+     *\n+     * @param cells the cells\n+     *\/\n+    private void resetIndex(ArrayLinkedList<T> cells) {\n+        for (T cell : cells) {\n+            cell.updateIndex(-1);\n+        }\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/VirtualFlow.java","additions":22,"deletions":6,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+import javafx.scene.control.TitledPane;\n@@ -6268,0 +6269,39 @@\n+\n+    \/**\n+     * The expansion change of a TitledPane triggered an event where the underlying VirtualFlow\n+     * was adding cells to the pile and later cleaning them all up without resetting the index to -1.\n+     * This led to a bug where two cells received an edit event, although just one should (and is visible).\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8320232\">JDK-8320232<\/a>\n+     *\/\n+    @Test\n+    public void testTitledPaneExpansionShouldCleanupCellsInTableFlow() {\n+        AtomicInteger startEditCounter = new AtomicInteger();\n+\n+        final TableColumn<String, String> col = new TableColumn<>(\"C\");\n+        col.setCellValueFactory(value -> new SimpleStringProperty(value.getValue()));\n+        col.setCellFactory(eee -> new TableCell<>() {\n+            @Override\n+            public void startEdit() {\n+                startEditCounter.incrementAndGet();\n+                super.startEdit();\n+            }\n+        });\n+        table.getColumns().add(col);\n+\n+        table.setEditable(true);\n+        table.getItems().addAll(\"1\", \"2\", \"3\");\n+\n+        TitledPane root = new TitledPane(\"title\", table);\n+        root.setAnimated(false);\n+        stageLoader = new StageLoader(root);\n+\n+        root.setExpanded(false);\n+        Toolkit.getToolkit().firePulse();\n+\n+        root.setExpanded(true);\n+        Toolkit.getToolkit().firePulse();\n+\n+        table.edit(0, col);\n+\n+        assertEquals(1, startEditCounter.get());\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableViewTest.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -92,0 +92,1 @@\n+import javafx.scene.control.TitledPane;\n@@ -7447,1 +7448,1 @@\n-            TreeItem<String> parent = new TreeItem<String>(\"item - \" + i);\n+            TreeItem<String> parent = new TreeItem<>(\"item - \" + i);\n@@ -7482,0 +7483,44 @@\n+\n+    \/**\n+     * The expansion change of a TitledPane triggered an event where the underlying VirtualFlow\n+     * was adding cells to the pile and later cleaning them all up without resetting the index to -1.\n+     * This led to a bug where two cells received an edit event, although just one should (and is visible).\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8320232\">JDK-8320232<\/a>\n+     *\/\n+    @Test\n+    public void testTitledPaneExpansionShouldCleanupCellsInTableFlow() {\n+        AtomicInteger startEditCounter = new AtomicInteger();\n+\n+        final TreeTableColumn<String, String> col = new TreeTableColumn<>(\"C\");\n+        col.setCellValueFactory(value -> new SimpleStringProperty(value.getValue().getValue()));\n+        col.setCellFactory(eee -> new TreeTableCell<>() {\n+            @Override\n+            public void startEdit() {\n+                startEditCounter.incrementAndGet();\n+                super.startEdit();\n+            }\n+        });\n+        treeTableView.getColumns().add(col);\n+\n+        treeTableView.setEditable(true);\n+        treeTableView.setRoot(new TreeItem<>(\"Root\"));\n+        treeTableView.getRoot().setExpanded(true);\n+        for (int i = 0; i < 4; i++) {\n+            TreeItem<String> parent = new TreeItem<>(\"item - \" + i);\n+            treeTableView.getRoot().getChildren().add(parent);\n+        }\n+\n+        TitledPane root = new TitledPane(\"title\", treeTableView);\n+        root.setAnimated(false);\n+        stageLoader = new StageLoader(root);\n+\n+        root.setExpanded(false);\n+        Toolkit.getToolkit().firePulse();\n+\n+        root.setExpanded(true);\n+        Toolkit.getToolkit().firePulse();\n+\n+        treeTableView.edit(0, col);\n+\n+        assertEquals(1, startEditCounter.get());\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewTest.java","additions":46,"deletions":1,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.util.ArrayList;\n@@ -1331,0 +1332,75 @@\n+    @Test\n+    public void testVerticalChangeShouldResetIndex() {\n+        List<IndexedCell<?>> cells = new ArrayList<>();\n+\n+        flow = new VirtualFlowShim<>();\n+        flow.setVertical(true);\n+        flow.setCellFactory(p -> {\n+            CellStub cellStub = new CellStub(flow);\n+            cells.add(cellStub);\n+            return cellStub;\n+        });\n+        flow.setCellCount(100);\n+        flow.setViewportLength(100);\n+        flow.resize(100, 100);\n+        pulse();\n+\n+        flow.setVertical(false);\n+\n+        for (IndexedCell<?> cell : cells) {\n+            assertEquals(-1, cell.getIndex());\n+        }\n+    }\n+\n+    @Test\n+    public void testCellFactoryChangeShouldResetIndex() {\n+        List<IndexedCell<?>> cells = new ArrayList<>();\n+\n+        flow = new VirtualFlowShim<>();\n+        flow.setVertical(true);\n+        flow.setCellFactory(p -> {\n+            CellStub cellStub = new CellStub(flow);\n+            cells.add(cellStub);\n+            return cellStub;\n+        });\n+        flow.setCellCount(100);\n+        flow.setViewportLength(100);\n+        flow.resize(100, 100);\n+        pulse();\n+\n+        flow.setCellFactory(p -> new CellStub(flow));\n+\n+        pulse();\n+\n+        for (IndexedCell<?> cell : cells) {\n+            assertEquals(-1, cell.getIndex());\n+        }\n+    }\n+\n+    @Test\n+    public void testRecreateCellsChangeShouldResetIndex() {\n+        List<IndexedCell<?>> cells = new ArrayList<>();\n+\n+        flow = new VirtualFlowShim<>();\n+        flow.setVertical(true);\n+        flow.setCellFactory(p -> {\n+            CellStub cellStub = new CellStub(flow);\n+            cells.add(cellStub);\n+            return cellStub;\n+        });\n+        flow.setCellCount(100);\n+        flow.setViewportLength(100);\n+        flow.resize(100, 100);\n+        pulse();\n+\n+        flow.recreateCells();\n+\n+        List<IndexedCell<?>> currentCells = new ArrayList<>(cells);\n+\n+        pulse();\n+\n+        for (IndexedCell<?> cell : currentCells) {\n+            assertEquals(-1, cell.getIndex());\n+        }\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/VirtualFlowTest.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"modified"}]}