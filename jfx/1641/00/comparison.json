{"files":[{"patch":"@@ -1,37 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#import <Cocoa\/Cocoa.h>\n-#import <jni.h>\n-\n-@interface GlassFullscreenWindow : NSWindow\n-{\n-        NSPoint                                        point;\n-}\n-\n-- (id)initWithContentRect:(NSRect)contentRect withHostView:(NSView *)hostView withView:(NSView *)view withScreen:(NSScreen *)screen withPoint:(NSPoint)point;\n-- (NSPoint)point;\n-\n-@end\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassFullscreenWindow.h","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -1,87 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#import \"GlassFullscreenWindow.h\"\n-\n-#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n-\n-@implementation GlassFullscreenWindow : NSWindow\n-\n-- (id)initWithContentRect:(NSRect)contentRect withHostView:(NSView *)hostView withView:(NSView *)view withScreen:(NSScreen *)screen withPoint:(NSPoint)p\n-{\n-    self = [super initWithContentRect:contentRect styleMask:(NSBorderlessWindowMask|NSResizableWindowMask) backing:NSBackingStoreBuffered defer:NO screen:screen];\n-    if (self != nil)\n-    {\n-        self->point = p;\n-\n-        [self useOptimizedDrawing:NO];\n-        [self setContentView:hostView];\n-        [self setInitialFirstResponder:view];\n-        [self makeFirstResponder:view];\n-        [self setCollectionBehavior:NSWindowCollectionBehaviorFullScreenPrimary];\n-\n-        [self setBackgroundColor:[NSColor colorWithCalibratedRed:0.0f green:0.0f blue:0.0f alpha:0.0f]];\n-\n-        [hostView release];\n-    }\n-    return self;\n-}\n-\n-- (void)dealloc\n-{\n-    [super dealloc];\n-}\n-\n-- (BOOL)isReleasedWhenClosed\n-{\n-    return YES;\n-}\n-\n-- (BOOL)isOpaque\n-{\n-    return NO;\n-}\n-\n-- (BOOL)hasShadow\n-{\n-    return NO;\n-}\n-\n-- (BOOL)canBecomeMainWindow\n-{\n-    return YES;\n-}\n-\n-- (BOOL)canBecomeKeyWindow\n-{\n-    return YES;\n-}\n-\n-- (NSPoint)point\n-{\n-    return self->point;\n-}\n-\n-@end\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassFullscreenWindow.m","additions":0,"deletions":87,"binary":false,"changes":87,"status":"deleted"},{"patch":"@@ -30,1 +30,0 @@\n-#import \"GlassFullscreenWindow.h\"\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassView.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -470,4 +470,0 @@\n-    \/\/ Crash if the FS window is released while performing a key equivalent\n-    \/\/ Local copy of the id keeps the retain\/release calls balanced.\n-    id fsWindow = [self->_delegate->fullscreenWindow retain];\n-\n@@ -503,1 +499,0 @@\n-            [fsWindow release];\n@@ -509,1 +504,0 @@\n-    [fsWindow release];\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassView3D.m","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#import \"GlassFullscreenWindow.h\"\n@@ -72,2 +71,0 @@\n-    \/\/ not nil when we create a new FS window ourselves\n-    GlassFullscreenWindow   *fullscreenWindow;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassViewDelegate.h","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -198,3 +198,0 @@\n-    [self->fullscreenWindow release];\n-    self->fullscreenWindow = nil;\n-\n@@ -1285,34 +1282,0 @@\n-\n-        [self->fullscreenWindow toggleFullScreen:self->fullscreenWindow];\n-\n-        NSRect frame = [self->parentHost bounds];\n-        frame.origin = [self->fullscreenWindow point];\n-        [self->fullscreenWindow setFrame:frame display:YES animate:animate];\n-\n-        [self->fullscreenWindow disableFlushWindow];\n-        {\n-            [self->nsView retain];\n-            {\n-                [self->nsView removeFromSuperviewWithoutNeedingDisplay];\n-                [self->parentHost addSubview:self->nsView];\n-            }\n-            [self->nsView release];\n-\n-            [self->parentWindow setInitialFirstResponder:self->nsView];\n-            [self->parentWindow makeFirstResponder:self->nsView];\n-\n-            if ([[self->parentWindow delegate] isKindOfClass:[GlassWindow class]])\n-            {\n-                GlassWindow *window = (GlassWindow*)[self->parentWindow delegate];\n-                [window setFullscreenWindow: nil];\n-            }\n-        }\n-        [self->fullscreenWindow enableFlushWindow];\n-        [self->parentWindow enableFlushWindow];\n-\n-        [self->fullscreenWindow orderOut:nil];\n-        [self->fullscreenWindow close];\n-        self->fullscreenWindow = nil;\n-\n-        \/\/ It was retained upon entering the FS mode\n-        [self->nsView release];\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassViewDelegate.m","additions":0,"deletions":37,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-- (NSWindow*)_getCurrentWindow;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow+Java.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -163,5 +163,0 @@\n-- (NSWindow*)_getCurrentWindow\n-{\n-    return self->fullscreenWindow ? self->fullscreenWindow : self->nsWindow;\n-}\n-\n@@ -170,1 +165,1 @@\n-    NSWindow *window = [self _getCurrentWindow];\n+    NSWindow *window = self->nsWindow;\n@@ -210,1 +205,1 @@\n-    NSWindow *window = [self _getCurrentWindow];\n+    NSWindow *window = self->nsWindow;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow+Java.m","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -65,5 +65,0 @@\n-    if (self->fullscreenWindow)\n-    {\n-        return;\n-    }\n-\n@@ -89,5 +84,0 @@\n-    if (self->fullscreenWindow)\n-    {\n-        return;\n-    }\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow+Overrides.m","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-    NSWindow            *fullscreenWindow;\n@@ -71,2 +70,0 @@\n-- (void)setFullscreenWindow:(NSWindow *)fsWindow;\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow.h","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -294,29 +294,0 @@\n-- (void)setFullscreenWindow:(NSWindow*)fsWindow\n-{\n-    if (self->fullscreenWindow == fsWindow) {\n-        return;\n-    }\n-\n-    [self _ungrabFocus];\n-\n-    NSWindow *from, *to;\n-    from = self->fullscreenWindow ? self->fullscreenWindow : self->nsWindow;\n-    to = fsWindow ? fsWindow : self->nsWindow;\n-\n-    NSArray * children = [from childWindows];\n-    for (NSUInteger i=0; i<[children count]; i++)\n-    {\n-        NSWindow *child = (NSWindow*)[children objectAtIndex:i];\n-        if ([[child delegate] isKindOfClass: [GlassWindow class]]) {\n-            [from removeChildWindow: child];\n-            [to addChildWindow:child ordered:NSWindowAbove];\n-        }\n-    }\n-\n-    self->fullscreenWindow = fsWindow;\n-\n-    GET_MAIN_JENV;\n-    (*env)->CallVoidMethod(env, self->jWindow, jWindowNotifyDelegatePtr, ptr_to_jlong(fsWindow));\n-    GLASS_CHECK_EXCEPTION(env);\n-}\n-\n@@ -506,2 +477,0 @@\n-        window->fullscreenWindow = nil;\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow.m","additions":0,"deletions":31,"binary":false,"changes":31,"status":"modified"}]}