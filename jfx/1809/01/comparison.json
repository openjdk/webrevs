{"files":[{"patch":"@@ -446,7 +446,17 @@\n-                    for (int imageScale = Math.round(devPixelScale); imageScale >= 2; --imageScale) {\n-                        try {\n-                            String scaledName = ImageTools.getScaledImageName(input, imageScale);\n-                            theStream = ImageTools.createInputStream(scaledName);\n-                            imgPixelScale = imageScale;\n-                            break;\n-                        } catch (IOException ignored) {\n+                    \/\/ first, check if the scale is not already requested in the input\n+                    if (ImageTools.hasScaledName(input)) {\n+                        \/\/ scaled name exists, assume user explicitly wants it and attempt loading\n+                        \/\/ if we can't find the resource this should throw and cancel the load\n+                        theStream = ImageTools.createInputStream(input);\n+                    }\n+\n+                    if (theStream == null) {\n+                        \/\/ not the case, find the highest available scale\n+                        for (int imageScale = Math.round(devPixelScale); imageScale >= 2; --imageScale) {\n+                            try {\n+                                String scaledName = ImageTools.getScaledImageName(input, imageScale);\n+                                theStream = ImageTools.createInputStream(scaledName);\n+                                imgPixelScale = imageScale;\n+                                break;\n+                            } catch (IOException ignored) {\n+                            }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/ImageStorage.java","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+import java.util.regex.Pattern;\n+import java.util.regex.Matcher;\n@@ -50,0 +52,5 @@\n+    \/**\n+     * Regex pattern for hasScaledName\n+     *\/\n+    private static final Pattern SCALED_FILE_PATTERN = Pattern.compile(\".*@[1-9][0-9]?x(\\\\.[^\\\\.]+)?\");\n+\n@@ -149,0 +156,4 @@\n+    public static boolean hasScaledName(String path) {\n+        return SCALED_FILE_PATTERN.matcher(path).matches();\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/common\/ImageTools.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -94,0 +94,8 @@\n+    @Test\n+    public void testImageLoadRequestedScaleDoesNotExist() throws ImageStorageException {\n+        final String path2x = getResourcePath(\"lightblue@1x.png\").replace(\"lightblue@1x.png\", \"lightblue@2x.png\");\n+        assertThrows(ImageStorageException.class,\n+            () -> { new ImageStorage().loadAll(path2x, null, 0, 0, true, 1.0f, true); },\n+            \"Expected loadAll() to throw with requested scale resource not existing\");\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/iio\/ImageStorageTest.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,0 +130,24 @@\n+\n+    @Test\n+    public void testGetScaledImageName() {\n+        String nameWithoutPath = \"image.png\";\n+        String nameWithPath = \"\/home\/path\/test\/for\/testing\/image.png\";\n+        String expectedWithoutPath = \"image@3x.png\";\n+        String expectedWithPath = \"\/home\/path\/test\/for\/testing\/image@4x.png\";\n+\n+        assertEquals(expectedWithoutPath, ImageTools.getScaledImageName(nameWithoutPath, 3));\n+        assertEquals(expectedWithPath, ImageTools.getScaledImageName(nameWithPath, 4));\n+    }\n+\n+    @Test\n+    public void testHasScaledName() {\n+        assertTrue(ImageTools.hasScaledName(\"image@3x.png\"));\n+        assertTrue(ImageTools.hasScaledName(\"\/home\/path\/test\/for\/testing\/image@2x.png\"));\n+        assertTrue(ImageTools.hasScaledName(\"image@5x\"));\n+        assertFalse(ImageTools.hasScaledName(\"image.png\"));\n+        assertFalse(ImageTools.hasScaledName(\"\/home\/path\/test\/for\/testing\/image.png\"));\n+        assertFalse(ImageTools.hasScaledName(\"image\"));\n+        assertFalse(ImageTools.hasScaledName(\"image@somewhere\"));\n+        assertFalse(ImageTools.hasScaledName(\"image@3ish\"));\n+        assertFalse(ImageTools.hasScaledName(\"image@4ix\"));\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/iio\/common\/ImageToolsTest.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"}]}