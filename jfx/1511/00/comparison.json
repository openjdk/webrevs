{"files":[{"patch":"@@ -531,0 +531,9 @@\n+    private boolean shouldHandleEvent() {\n+        \/\/ Don't send any more events if the application has shutdown\n+        if (Application.GetApplication() == null) {\n+            return false;\n+        }\n+\n+        return this.eventHandler != null;\n+    }\n+\n@@ -534,1 +543,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -541,1 +550,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -550,1 +559,1 @@\n-        if (eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -558,1 +567,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -565,1 +574,1 @@\n-        if (eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -574,1 +583,1 @@\n-        if (eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -580,1 +589,1 @@\n-        if (eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -592,1 +601,1 @@\n-        if (eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -606,1 +615,1 @@\n-        if (eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -620,1 +629,1 @@\n-        if (eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -632,1 +641,1 @@\n-        if (eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -642,1 +651,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -662,1 +671,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -670,1 +679,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -676,1 +685,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -683,1 +692,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -692,1 +701,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -700,1 +709,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -707,1 +716,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -958,1 +967,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/View.java","additions":29,"deletions":20,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -398,1 +398,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -1254,0 +1254,9 @@\n+    private boolean shouldHandleEvent() {\n+        \/\/ Don't send any more events if the application has shutdown\n+        if (Application.GetApplication() == null) {\n+            return false;\n+        }\n+\n+        return this.eventHandler != null;\n+    }\n+\n@@ -1258,1 +1267,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n@@ -1389,1 +1398,1 @@\n-        if (this.eventHandler != null) {\n+        if (shouldHandleEvent()) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Window.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -96,2 +96,4 @@\n-    GET_MAIN_JENV;\n-    (*env)->CallVoidMethod(env, self->jWindow, jWindowNotifyFocus, com_sun_glass_events_WindowEvent_FOCUS_LOST);\n+    GET_MAIN_JENV_NOWARN;\n+    if (env != NULL) {\n+        (*env)->CallVoidMethod(env, self->jWindow, jWindowNotifyFocus, com_sun_glass_events_WindowEvent_FOCUS_LOST);\n+    }\n@@ -234,2 +236,4 @@\n-        GET_MAIN_JENV;\n-        (*env)->CallVoidMethod(env, jWindow, jWindowNotifyClose);\n+        GET_MAIN_JENV_NOWARN;\n+        if (env != NULL) {\n+            (*env)->CallVoidMethod(env, jWindow, jWindowNotifyClose);\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow+Overrides.m","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.stage;\n+\n+import java.util.concurrent.CountDownLatch;\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.scene.Scene;\n+import javafx.scene.layout.BorderPane;\n+import javafx.stage.Stage;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import test.util.Util;\n+\n+import static org.junit.jupiter.api.Assertions.assertSame;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+\/*\n+ * Test that we can shutdown the JavaFX runtime cleanly via Platform::exit\n+ * while in full screen mode.\n+ *\n+ * @bug 8335630 8299738\n+ *\/\n+public class FullScreenExitTest {\n+    private static Stage stage;\n+    private static Scene scene;\n+    private static BorderPane borderPane;\n+\n+    private static volatile Throwable exception;\n+\n+    private static CountDownLatch startupLatch = new CountDownLatch(1);\n+    private static CountDownLatch stopLatch = new CountDownLatch(1);\n+\n+    public static class TestApp extends Application {\n+        @Override\n+        public void start(Stage primaryStage) {\n+            Thread.currentThread().setUncaughtExceptionHandler((thr, ex) -> {\n+                System.err.println(\"Exception caught in thread: \" + thr);\n+                ex.printStackTrace();\n+                exception = ex;\n+            });\n+\n+            stage = primaryStage;\n+\n+            borderPane = new BorderPane();\n+\n+            scene = new Scene(borderPane, 400, 300);\n+            stage.setScene(scene);\n+            stage.setFullScreen(true);\n+            stage.setOnShown(e -> Platform.runLater(startupLatch::countDown));\n+            stage.show();\n+        }\n+\n+        @Override\n+        public void stop() {\n+            stopLatch.countDown();\n+        }\n+    }\n+\n+    @BeforeAll\n+    public static void initFX() throws Exception {\n+        Util.launch(startupLatch, TestApp.class);\n+        Util.runAndWait(() -> {\n+            assertTrue(stage.isShowing());\n+            assertTrue(stage.isFullScreen());\n+        });\n+    }\n+\n+    @Test\n+    public void exitWhileInFullScreenDoesNotCrash() {\n+        \/\/ Ensure that the window has had time to transition to full screen\n+        Util.sleep(3000);\n+\n+        \/\/ Shutdown the JavaFX runtime with full-screen stage showing\n+        Platform.exit();\n+\n+        \/\/ Wait until the application has been stopped and then sleep for\n+        \/\/ one second to verify that it will not crash nor throw an exception\n+        assertTrue(Util.await(stopLatch), \"Timeout waiting for Application::stop\");\n+        Util.sleep(1000);\n+\n+        assertSame(null, exception, \"Unexpected exception\");\n+    }\n+\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/stage\/FullScreenExitTest.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"}]}