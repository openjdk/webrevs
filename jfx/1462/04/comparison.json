{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -420,1 +420,1 @@\n-        scrollX = flow.getHbar().isVisible() ? -flow.getHbar().getValue() : 0.0F;\n+        scrollX = flow.getHbar().isVisible() ? snapPositionX(-flow.getHbar().getValue()) : 0.0F;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableHeaderRow.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,0 +120,1 @@\n+    private final Rectangle clipRect;\n@@ -333,2 +334,1 @@\n-        clipView = new ClippedContainer(this);\n-        clipView.setNode(sheet);\n+        clipView = new ClippedContainer(sheet);\n@@ -337,0 +337,8 @@\n+        \/\/ clipping\n+        clipRect = new Rectangle();\n+        clipRect.setSmooth(false);\n+        clipRect.widthProperty().bind(clipView.widthProperty());\n+        clipRect.heightProperty().bind(clipView.heightProperty());\n+\n+        clipView.setClip(clipRect);\n+\n@@ -342,1 +350,0 @@\n-\n@@ -606,1 +613,1 @@\n-            clipView.setClipY(isVertical() ? 0 : vbar.getValue());\n+            setContentY(isVertical() ? 0 : vbar.getValue());\n@@ -2410,1 +2417,1 @@\n-                clipView.setClipX(hbar.getValue());\n+                setContentX(hbar.getValue());\n@@ -2415,1 +2422,1 @@\n-                clipView.setClipX(0);\n+                setContentX(0);\n@@ -3208,0 +3215,12 @@\n+    private void setContentX(double x) {\n+        double snappedX = snapPositionX(x);\n+        clipView.setLayoutX(-snappedX);\n+        clipRect.setLayoutX(snappedX);\n+    }\n+\n+    private void setContentY(double y) {\n+        double snappedY = snapPositionY(y);\n+        clipView.setLayoutY(-snappedY);\n+        clipRect.setLayoutY(snappedY);\n+    }\n+\n@@ -3233,29 +3252,1 @@\n-        \/**\n-         * The Node which is embedded within this {@code ClipView}.\n-         *\/\n-        private Node node;\n-        public Node getNode() { return this.node; }\n-        public void setNode(Node n) {\n-            this.node = n;\n-\n-            getChildren().clear();\n-            getChildren().add(node);\n-        }\n-\n-        public void setClipX(double clipX) {\n-            setLayoutX(-clipX);\n-            clipRect.setLayoutX(clipX);\n-        }\n-\n-        public void setClipY(double clipY) {\n-            setLayoutY(-clipY);\n-            clipRect.setLayoutY(clipY);\n-        }\n-\n-        private final Rectangle clipRect;\n-\n-        public ClippedContainer(final VirtualFlow<?> flow) {\n-            if (flow == null) {\n-                throw new IllegalArgumentException(\"VirtualFlow can not be null\");\n-            }\n-\n+        public ClippedContainer(Node node) {\n@@ -3264,12 +3255,1 @@\n-            \/\/ clipping\n-            clipRect = new Rectangle();\n-            clipRect.setSmooth(false);\n-            setClip(clipRect);\n-            \/\/ --- clipping\n-\n-            super.widthProperty().addListener(valueModel -> {\n-                clipRect.setWidth(getWidth());\n-            });\n-            super.heightProperty().addListener(valueModel -> {\n-                clipRect.setHeight(getHeight());\n-            });\n+            getChildren().setAll(node);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/VirtualFlow.java","additions":27,"deletions":47,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import javafx.scene.layout.Region;\n@@ -87,1 +88,1 @@\n-    public ClippedContainer get_clipView() {\n+    public Region get_clipView() {\n","filename":"modules\/javafx.controls\/src\/shims\/java\/javafx\/scene\/control\/skin\/VirtualFlowShim.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,4 @@\n+    public Person(String fName) {\n+        this(fName, 0);\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/control\/test\/Person.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -102,0 +102,1 @@\n+import javafx.scene.control.skin.NestedTableColumnHeader;\n@@ -6332,0 +6333,23 @@\n+\n+    @Test\n+    public void testScrollingXIsSnapped() {\n+        TableColumn<Person, String> firstNameCol = new TableColumn<>(\"First Name\");\n+        firstNameCol.setCellValueFactory(new PropertyValueFactory<>(\"firstName\"));\n+\n+        TableView<Person> table = new TableView<>();\n+        table.setItems(FXCollections.observableArrayList(new Person(\"VeryLongStringVeryLongString\")));\n+        table.getColumns().add(firstNameCol);\n+\n+        stageLoader = new StageLoader(table);\n+\n+        Toolkit.getToolkit().firePulse();\n+\n+        NestedTableColumnHeader rootHeader = VirtualFlowTestUtils.getTableHeaderRow(table).getRootHeader();\n+        VirtualScrollBar scrollBar = VirtualFlowTestUtils.getVirtualFlowHorizontalScrollbar(table);\n+\n+        double newValue = 25.125476811;\n+        double snappedNewValue = table.snapPositionX(newValue);\n+        scrollBar.setValue(newValue);\n+\n+        assertEquals(-snappedNewValue, rootHeader.getLayoutX(), 0);\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableViewTest.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -95,0 +95,1 @@\n+import javafx.scene.control.skin.NestedTableColumnHeader;\n@@ -7539,0 +7540,23 @@\n+\n+    @Test\n+    public void testScrollingXIsSnapped() {\n+        TreeTableColumn<Person, String> firstNameCol = new TreeTableColumn<>(\"First Name\");\n+        firstNameCol.setCellValueFactory(new TreeItemPropertyValueFactory<>(\"firstName\"));\n+\n+        TreeTableView<Person> table = new TreeTableView<>();\n+        table.setRoot(new TreeItem<>(new Person(\"VeryLongStringVeryLongString\")));\n+        table.getColumns().add(firstNameCol);\n+\n+        stageLoader = new StageLoader(table);\n+\n+        Toolkit.getToolkit().firePulse();\n+\n+        NestedTableColumnHeader rootHeader = VirtualFlowTestUtils.getTableHeaderRow(table).getRootHeader();\n+        VirtualScrollBar scrollBar = VirtualFlowTestUtils.getVirtualFlowHorizontalScrollbar(table);\n+\n+        double newValue = 25.125476811;\n+        double snappedNewValue = table.snapPositionX(newValue);\n+        scrollBar.setValue(newValue);\n+\n+        assertEquals(-snappedNewValue, rootHeader.getLayoutX(), 0);\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewTest.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+import test.com.sun.javafx.scene.control.infrastructure.StageLoader;\n@@ -2056,0 +2057,38 @@\n+    @Test\n+    public void testScrollingXIsSnapped() {\n+        StageLoader loader = new StageLoader(flow);\n+        flow.resize(50, flow.getHeight());\n+\n+        pulse();\n+\n+        double newValue = 25.125476811;\n+        double snappedNewValue = flow.snapPositionX(newValue);\n+        flow.shim_getHbar().setValue(newValue);\n+\n+        double layoutX = flow.get_clipView().getLayoutX();\n+\n+        assertEquals(-snappedNewValue, layoutX, 0.0);\n+\n+        loader.dispose();\n+    }\n+\n+    @Test\n+    public void testScrollingYIsSnapped() {\n+        flow.setVertical(false);\n+\n+        StageLoader loader = new StageLoader(flow);\n+        flow.resize(50, flow.getHeight());\n+\n+        pulse();\n+\n+        double newValue = 25.125476811;\n+        double snappedNewValue = flow.snapPositionY(newValue);\n+        flow.shim_getVbar().setValue(newValue);\n+\n+        double layoutY = flow.get_clipView().getLayoutY();\n+\n+        assertEquals(-snappedNewValue, layoutY, 0.0);\n+\n+        loader.dispose();\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/VirtualFlowTest.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2179,12 +2179,2 @@\n-    private void renderRectClip(Graphics g, NGRectangle clipNode) {\n-        BaseBounds newClip = clipNode.getShape().getBounds();\n-        if (!clipNode.getTransform().isIdentity()) {\n-            newClip = clipNode.getTransform().transform(newClip, newClip);\n-        }\n-        final BaseTransform curXform = g.getTransformNoClone();\n-        final Rectangle curClip = g.getClipRectNoClone();\n-        newClip = curXform.transform(newClip, newClip);\n-        newClip.intersectWith(PrEffectHelper.getGraphicsClipNoClone(g));\n-        if (newClip.isEmpty() ||\n-            newClip.getWidth() == 0 ||\n-            newClip.getHeight() == 0) {\n+    private void renderRectClip(Graphics g, Rectangle clipRect) {\n+        if (clipRect.isEmpty()) {\n@@ -2193,0 +2183,1 @@\n+        final Rectangle curClip = g.getClipRectNoClone();\n@@ -2194,1 +2185,1 @@\n-        g.setClipRect(new Rectangle(newClip));\n+        g.setClipRect(clipRect);\n@@ -2213,0 +2204,5 @@\n+        \/\/ TODO: optimize this (RT-26936)\n+        \/\/ Extract clip bounds\n+        Rectangle clipRect = new Rectangle(clipBounds);\n+        clipRect.intersectWith(PrEffectHelper.getGraphicsClipNoClone(g));\n+\n@@ -2217,1 +2213,1 @@\n-                renderRectClip(g, rectNode);\n+                renderRectClip(g, clipRect);\n@@ -2222,5 +2218,0 @@\n-        \/\/ TODO: optimize this (RT-26936)\n-        \/\/ Extract clip bounds\n-        Rectangle clipRect = new Rectangle(clipBounds);\n-        clipRect.intersectWith(PrEffectHelper.getGraphicsClipNoClone(g));\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGNode.java","additions":10,"deletions":19,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import com.sun.javafx.geom.transform.Affine3D;\n@@ -32,0 +33,1 @@\n+import com.sun.javafx.geom.transform.Translate2D;\n@@ -41,0 +43,1 @@\n+import java.util.concurrent.atomic.AtomicReference;\n@@ -581,0 +584,29 @@\n+    @Test\n+    public void testClippingWithRectangularClipIsCorrectlyCalculated() {\n+        AtomicReference<Rectangle> rectRef = new AtomicReference<>();\n+\n+        n = new NGNodeMock() {\n+            @Override\n+            protected void renderContent(Graphics g) {\n+                super.renderContent(g);\n+\n+                rectRef.set(g.getClipRectNoClone());\n+            }\n+        };\n+\n+        TestGraphics graphics = new TestGraphics(146, 625);\n+        graphics.setTransform(new Affine3D(1.25, 0, 0, -3, 0, 1.25, 0, 31, 0, 0, 1, 0));\n+\n+        final RectBounds bounds = new RectBounds(0, 0, 272, 480);\n+        n.setContentBounds(bounds);\n+        n.setTransformMatrix(new Translate2D(-15.2, 0));\n+\n+        TestNGRectangle clip = createRectangle(0, 0, 102.4f, 460.8f);\n+        clip.setTransformMatrix(new Translate2D(18.4, 0));\n+        n.setClipNode(clip);\n+        n.render(graphics);\n+\n+        Rectangle clipRect = rectRef.get();\n+        assertEquals(1, clipRect.x);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/NGNodeTest.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n-    public static TestNGRectangle createRectangle(int x, int y, int width, int height) {\n+    public static TestNGRectangle createRectangle(float x, float y, float width, float height) {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/NGTestBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,5 @@\n-        super(new TestContext(), new TestRenderTarget());\n+        this(0, 0);\n+    }\n+\n+    public TestGraphics(int width, int height) {\n+        super(new TestContext(), new TestRenderTarget(width, height));\n@@ -289,0 +293,8 @@\n+        private final int width;\n+        private final int height;\n+\n+        public TestRenderTarget(int width, int height) {\n+            this.width = width;\n+            this.height = height;\n+        }\n+\n@@ -330,1 +342,1 @@\n-            return 0;\n+            return width;\n@@ -335,1 +347,1 @@\n-            return 0;\n+            return height;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/TestGraphics.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"}]}