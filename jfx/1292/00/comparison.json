{"files":[{"patch":"@@ -1195,1 +1195,2 @@\n-        double dragX = x - dragOffset;\n+        double headerX = getTableHeaderRow().sceneToLocal(sceneX, sceneY).getX();\n+        double dragX = headerX - dragOffset;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableColumnHeader.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import javafx.scene.control.skin.NestedTableColumnHeader;\n@@ -191,0 +192,37 @@\n+    @Test\n+    void testHeaderReorderWithinNestedColumns() {\n+        TableView<String> tableView = new TableView<>();\n+        for (int i = 0; i < 2; i++) {\n+            TableColumn<String, String> column = new TableColumn<>(\"Col \" + i);\n+            column.setMinWidth(100);\n+            column.setMaxWidth(100);\n+            tableView.getColumns().add(column);\n+        }\n+\n+        TableColumn<String, String> column = new TableColumn<>(\"Column with nested\");\n+        for (int i = 0; i < 2; i++) {\n+            TableColumn<String, String> nestedCol = new TableColumn<>(\"NestedCol \" + i);\n+            nestedCol.setMinWidth(100);\n+            nestedCol.setMaxWidth(100);\n+            column.getColumns().add(nestedCol);\n+        }\n+        tableView.getColumns().add(column);\n+\n+        stageLoader = new StageLoader(tableView);\n+\n+        TableHeaderRow header = (TableHeaderRow) tableView.lookup(\"TableHeaderRow\");\n+        Node columnDragHeader = header.lookup(\".column-drag-header\");\n+\n+        assertEquals(0, columnDragHeader.getTranslateX());\n+\n+        NestedTableColumnHeader nestedTableColumnHeader =\n+                (NestedTableColumnHeader) header.getRootHeader().getColumnHeaders().get(2);\n+        TableColumnHeader tableColumnHeader = nestedTableColumnHeader.getColumnHeaders().get(0);\n+\n+        Bounds bounds = tableColumnHeader.localToScene(tableColumnHeader.getLayoutBounds());\n+        TableColumnHeaderShim.columnReordering(tableColumnHeader, bounds.getMinX() + 20, bounds.getMinY());\n+\n+        \/\/ 200, since we have 2 columns to the left with a size of 100.\n+        assertEquals(220, columnDragHeader.getTranslateX());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TableViewSkinTest.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import javafx.scene.control.skin.NestedTableColumnHeader;\n@@ -171,0 +172,37 @@\n+    @Test\n+    void testHeaderReorderWithinNestedColumns() {\n+        TreeTableView<String> treeTableView = new TreeTableView<>();\n+        for (int i = 0; i < 2; i++) {\n+            TreeTableColumn<String, String> column = new TreeTableColumn<>(\"Col \" + i);\n+            column.setMinWidth(100);\n+            column.setMaxWidth(100);\n+            treeTableView.getColumns().add(column);\n+        }\n+\n+        TreeTableColumn<String, String> column = new TreeTableColumn<>(\"Column with nested\");\n+        for (int i = 0; i < 2; i++) {\n+            TreeTableColumn<String, String> nestedCol = new TreeTableColumn<>(\"NestedCol \" + i);\n+            nestedCol.setMinWidth(100);\n+            nestedCol.setMaxWidth(100);\n+            column.getColumns().add(nestedCol);\n+        }\n+        treeTableView.getColumns().add(column);\n+\n+        stageLoader = new StageLoader(treeTableView);\n+\n+        TableHeaderRow header = (TableHeaderRow) treeTableView.lookup(\"TableHeaderRow\");\n+        Node columnDragHeader = header.lookup(\".column-drag-header\");\n+\n+        assertEquals(0, columnDragHeader.getTranslateX());\n+\n+        NestedTableColumnHeader nestedTableColumnHeader =\n+                (NestedTableColumnHeader) header.getRootHeader().getColumnHeaders().get(2);\n+        TableColumnHeader tableColumnHeader = nestedTableColumnHeader.getColumnHeaders().get(0);\n+\n+        Bounds bounds = tableColumnHeader.localToScene(tableColumnHeader.getLayoutBounds());\n+        TableColumnHeaderShim.columnReordering(tableColumnHeader, bounds.getMinX() + 20, bounds.getMinY());\n+\n+        \/\/ 200, since we have 2 columns to the left with a size of 100.\n+        assertEquals(220, columnDragHeader.getTranslateX());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TreeTableViewSkinTest.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"modified"}]}