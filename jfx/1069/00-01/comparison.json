{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import javafx.beans.Subscription;\n@@ -31,1 +32,0 @@\n-import javafx.beans.value.Subscription;\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/ConditionalBinding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import javafx.beans.Subscription;\n@@ -32,1 +33,0 @@\n-import javafx.beans.value.Subscription;\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/FlatMappedBinding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import javafx.beans.Subscription;\n@@ -31,1 +32,0 @@\n-import javafx.beans.value.Subscription;\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/LazyObjectBinding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import javafx.beans.Subscription;\n@@ -32,1 +33,0 @@\n-import javafx.beans.value.Subscription;\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/MappedBinding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import javafx.beans.Subscription;\n@@ -31,1 +32,0 @@\n-import javafx.beans.value.Subscription;\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/OrElseBinding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.Objects;\n@@ -96,0 +97,18 @@\n+    \/**\n+     * Creates a {@link Subscription} on this value which calls the given\n+     * {@code runnable} whenever it becomes invalid.\n+     *\n+     * @param subscriber a {@code Runnable} to call whenever this\n+     *     value becomes invalid, cannot be {@code null}\n+     * @return a {@code Subscription} which can be used to cancel this\n+     *     subscription, never {@code null}\n+     * @since 21\n+     *\/\n+    default Subscription invalidations(Runnable subscriber) {\n+        Objects.requireNonNull(subscriber, \"subscriber cannot be null\");\n+        InvalidationListener listener = obs -> subscriber.run();\n+\n+        addListener(listener);\n+\n+        return () -> removeListener(listener);\n+    }\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/Observable.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-package javafx.beans.value;\n+package javafx.beans;\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/Subscription.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/value\/Subscription.java","status":"renamed"},{"patch":"@@ -40,0 +40,1 @@\n+import javafx.beans.Subscription;\n@@ -347,19 +348,0 @@\n-\n-    \/**\n-     * Creates a {@link Subscription} on this value which calls the given\n-     * {@code runnable} whenever it becomes invalid.\n-     *\n-     * @param subscriber a {@code Runnable} to call whenever this\n-     *     value becomes invalid, cannot be {@code null}\n-     * @return a {@code Subscription} which can be used to cancel this\n-     *     subscription, never {@code null}\n-     * @since 21\n-     *\/\n-    default Subscription invalidations(Runnable subscriber) {\n-        Objects.requireNonNull(subscriber, \"subscriber cannot be null\");\n-        InvalidationListener listener = obs -> subscriber.run();\n-\n-        addListener(listener);\n-\n-        return () -> removeListener(listener);\n-    }\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/value\/ObservableValue.java","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import javafx.beans.value.Subscription;\n+import javafx.beans.Subscription;\n","filename":"modules\/javafx.base\/src\/shims\/java\/com\/sun\/javafx\/binding\/LazyObjectBindingStub.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-package test.javafx.beans.value;\n+package test.javafx.beans;\n@@ -11,1 +11,1 @@\n-import javafx.beans.value.Subscription;\n+import javafx.beans.Subscription;\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/beans\/SubscriptionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/beans\/value\/SubscriptionTest.java","status":"renamed"}]}