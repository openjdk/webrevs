{"files":[{"patch":"@@ -263,3 +263,1 @@\n-    \/**\n-     * Row style must affect the required column width\n-     *\/\n+    \/** Row style must affect the required column width *\/\n@@ -279,3 +277,1 @@\n-    \/**\n-     * Test resizeColumnToFitContent in the presence of a non-standard row skin\n-     *\/\n+    \/** Test resizeColumnToFitContent in the presence of a non-standard row skin *\/\n@@ -292,0 +288,4 @@\n+    \/**\n+     * We expect that the css of the label is processed after the resizing took place,\n+     * since it is needed to correctly measure the size.\n+     *\/\n@@ -298,0 +298,2 @@\n+        assertEquals(12, label.getFont().getSize(), 0);\n+\n@@ -303,0 +305,3 @@\n+    \/**\n+     * A table column with a graphic {@link Text} should be bigger than without.\n+     *\/\n@@ -321,0 +326,3 @@\n+    \/**\n+     * A table column with a graphic {@link Label} should be bigger than without.\n+     *\/\n@@ -339,0 +347,4 @@\n+    \/**\n+     * The content display should also be taken into consideration when measuring the width.\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8186188\">JDK-8186188<\/a>\n+     *\/\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TableColumnHeaderTest.java","additions":18,"deletions":6,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n@@ -56,3 +56,3 @@\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -70,1 +70,1 @@\n-    @Before\n+    @BeforeEach\n@@ -98,1 +98,1 @@\n-    @After\n+    @AfterEach\n@@ -152,2 +152,1 @@\n-        assertEquals(\"Width must be the same\",\n-                width, column.getWidth(), 0.001);\n+        assertEquals(width, column.getWidth(), 0.001, \"Width must be the same\");\n@@ -168,2 +167,2 @@\n-        assertEquals(\"Width must be the same\",\n-                width, column.getWidth(), 0.001);\n+        assertEquals(\n+                width, column.getWidth(), 0.001, \"Width must be the same\");\n@@ -172,2 +171,2 @@\n-        assertTrue(\"Column width must be greater\",\n-                width < column.getWidth());\n+        assertTrue(\n+                width < column.getWidth(), \"Column width must be greater\");\n@@ -179,2 +178,1 @@\n-        assertEquals(\"Width must be equal to initial value\",\n-                width, column.getWidth(), 0.001);\n+        assertEquals(width, column.getWidth(), 0.001, \"Width must be equal to initial value\");\n@@ -198,2 +196,2 @@\n-        assertEquals(\"Width must be the same\",\n-                width, column.getWidth(), 0.001);\n+        assertEquals(\n+                width, column.getWidth(), 0.001, \"Width must be the same\");\n@@ -202,2 +200,2 @@\n-        assertTrue(\"Column width must be smaller\",\n-                width > column.getWidth());\n+        assertTrue(\n+                width > column.getWidth(), \"Column width must be smaller\");\n@@ -212,2 +210,1 @@\n-        assertEquals(\"Width must be equal to initial value\",\n-                width, column.getWidth(), 0.001);\n+        assertEquals(width, column.getWidth(), 0.001, \"Width must be equal to initial value\");\n@@ -228,2 +225,1 @@\n-        assertEquals(\"Width must be the same\",\n-                width, column.getWidth(), 0.001);\n+        assertEquals(width, column.getWidth(), 0.001, \"Width must be the same\");\n@@ -232,2 +228,1 @@\n-        assertTrue(\"Column width must be greater\",\n-                width < column.getWidth());\n+        assertTrue(width < column.getWidth(), \"Column width must be greater\");\n@@ -238,2 +233,1 @@\n-        assertEquals(\"Width must be equal to initial value\",\n-                width, column.getWidth(), 0.001);\n+        assertEquals(width, column.getWidth(), 0.001, \"Width must be equal to initial value\");\n@@ -254,1 +248,0 @@\n-\n@@ -256,3 +249,1 @@\n-        assertEquals(\"Width must be the same\",\n-                width, column.getWidth(), 0.001);\n-\n+        assertEquals(width, column.getWidth(), 0.001, \"Width must be the same\");\n@@ -263,1 +254,0 @@\n-\n@@ -265,2 +255,1 @@\n-        assertEquals(\"Width must be equal to initial value\",\n-                width, column.getWidth(), 0.001);\n+        assertEquals(width, column.getWidth(), 0.001, \"Width must be equal to initial value\");\n@@ -280,1 +269,1 @@\n-        assertTrue(\"Column width must be greater\", width < column.getWidth());\n+        assertTrue(width < column.getWidth(), \"Column width must be greater\");\n@@ -294,0 +283,4 @@\n+    \/**\n+     * We expect that the css of the label is processed after the resizing took place,\n+     * since it is needed to correctly measure the size.\n+     *\/\n@@ -300,0 +293,2 @@\n+        assertEquals(12, label.getFont().getSize(), 0);\n+\n@@ -305,0 +300,3 @@\n+    \/**\n+     * A table column with a graphic {@link Text} should be bigger than without.\n+     *\/\n@@ -323,0 +321,3 @@\n+    \/**\n+     * A table column with a graphic {@link Label} should be bigger than without.\n+     *\/\n@@ -341,0 +342,4 @@\n+    \/**\n+     * The content display should also be taken into consideration when measuring the width.\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8186188\">JDK-8186188<\/a>\n+     *\/\n@@ -363,1 +368,1 @@\n-        TreeTableRow<Person> row = new TreeTableRow<>() {\n+        return new TreeTableRow<>() {\n@@ -368,1 +373,0 @@\n-        return row;\n@@ -398,1 +402,1 @@\n-        row.setStyle(\"-fx-font: 24 Amble\");\n+        row.setStyle(\"-fx-font: 24 System\");\n@@ -404,1 +408,1 @@\n-        row.setStyle(\"-fx-font: 48 Amble\");\n+        row.setStyle(\"-fx-font: 48 System\");\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TableColumnHeaderTreeTableTest.java","additions":44,"deletions":40,"binary":false,"changes":84,"status":"modified"}]}