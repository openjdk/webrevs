{"files":[{"patch":"@@ -92,0 +92,5 @@\n+\n+    public boolean handleKeyEvent(int code, int modifiers) {\n+        Application.checkEventThread();\n+        return delegate.handleKeyEvent(code, modifiers);\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/MenuBar.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,0 +34,4 @@\n+    \/\/ Returns true if the key event was processed\n+    default public boolean handleKeyEvent(int code, int modifiers) {\n+        return false;\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/delegate\/MenuBarDelegate.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,0 +56,6 @@\n+    private native boolean _handleKeyEvent(long menubarPtr, int code, int modifiers);\n+    @Override\n+    public boolean handleKeyEvent(int code, int modifiers) {\n+        return _handleKeyEvent(ptr, code, modifiers);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacMenuBarDelegate.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import com.sun.javafx.tk.Toolkit;\n+\n@@ -33,0 +35,2 @@\n+import javafx.event.Event;\n+import javafx.scene.input.KeyEvent;\n@@ -41,0 +45,27 @@\n+\n+    static class SystemMenuHandler extends BasicEventDispatcher {\n+        private enum SupportedState {\n+            TRUE,\n+            FALSE,\n+            UNKNOWN\n+        };\n+\n+        private SupportedState supported = SupportedState.UNKNOWN;\n+\n+        @Override\n+        public Event dispatchBubblingEvent(Event event) {\n+            if (supported == SupportedState.UNKNOWN) {\n+                var systemMenu = Toolkit.getToolkit().getSystemMenu();\n+                if (systemMenu != null && systemMenu.isSupported()) {\n+                    supported = SupportedState.TRUE;\n+                } else {\n+                    supported = SupportedState.FALSE;\n+                }\n+            }\n+            if (supported == SupportedState.TRUE && event.getEventType() == KeyEvent.KEY_PRESSED && (event instanceof KeyEvent)) {\n+               Toolkit.getToolkit().getSystemMenu().handleKeyEvent((KeyEvent)event);\n+            }\n+            return event;\n+        }\n+    }\n+\n@@ -47,0 +78,2 @@\n+    private final SystemMenuHandler systemMenuHandler;\n+\n@@ -50,2 +83,2 @@\n-             new EventHandlerManager(window));\n-\n+             new EventHandlerManager(window),\n+             new SystemMenuHandler());\n@@ -58,0 +91,11 @@\n+        this(eventRedirector,\n+             windowCloseRequestHandler,\n+             eventHandlerManager,\n+             null);\n+    }\n+\n+    private WindowEventDispatcher(\n+            final EventRedirector eventRedirector,\n+            final WindowCloseRequestHandler windowCloseRequestHandler,\n+            final EventHandlerManager eventHandlerManager,\n+            final SystemMenuHandler systemMenuHandler) {\n@@ -61,0 +105,1 @@\n+        this.systemMenuHandler = systemMenuHandler;\n@@ -64,0 +109,3 @@\n+        if (systemMenuHandler != null) {\n+            eventHandlerManager.insertNextDispatcher(systemMenuHandler);\n+        }\n@@ -85,0 +133,3 @@\n+        if (systemMenuHandler != null) {\n+            return systemMenuHandler;\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/stage\/WindowEventDispatcher.java","additions":53,"deletions":2,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-\n+import javafx.scene.input.KeyEvent;\n@@ -48,0 +48,1 @@\n+    public void handleKeyEvent(KeyEvent event);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/TKSystemMenu.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -123,0 +123,7 @@\n+    @Override\n+    public void handleKeyEvent(javafx.scene.input.KeyEvent event) {\n+        if (glassSystemMenuBar.handleKeyEvent(event.getCode().getCode(), glassModifiers(event))) {\n+            event.consume();\n+        }\n+    }\n+\n@@ -410,0 +417,27 @@\n+    private int glassModifiers(javafx.scene.input.KeyEvent event) {\n+        int ret = 0;\n+        if (event.isShiftDown()) {\n+            ret |= KeyEvent.MODIFIER_SHIFT;\n+        }\n+        if (event.isControlDown()) {\n+            ret |= KeyEvent.MODIFIER_CONTROL;\n+        }\n+        if (event.isAltDown()) {\n+            ret |= KeyEvent.MODIFIER_ALT;\n+        }\n+        if (event.isShortcutDown()) {\n+            if (PlatformUtil.isMac()) {\n+                ret |= KeyEvent.MODIFIER_COMMAND;\n+            } else {\n+                ret |= KeyEvent.MODIFIER_CONTROL;\n+            }\n+        }\n+        if (event.isMetaDown()) {\n+            if (PlatformUtil.isLinux()) {\n+                ret |= KeyEvent.MODIFIER_WINDOWS;\n+            } else if (PlatformUtil.isMac()) {\n+                ret |= KeyEvent.MODIFIER_COMMAND;\n+            }\n+        }\n+        return ret;\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GlassSystemMenu.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -904,1 +904,0 @@\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/PopupWindow.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -74,0 +74,2 @@\n++ (void)setMenuKeyEvent:(NSEvent*)event;\n++ (BOOL)handleMenuKeyEventForCode:(jint)code modifiers:(jint)modifiers;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassApplication.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,0 +85,2 @@\n+static NSEvent* menuKeyEvent = nil;\n+\n@@ -911,0 +913,24 @@\n++ (void)setMenuKeyEvent:(NSEvent*)event\n+{\n+    if (menuKeyEvent != nil) {\n+        [menuKeyEvent release];\n+        menuKeyEvent = nil;\n+    }\n+    if (event != nil) {\n+        menuKeyEvent = [event retain];\n+    }\n+}\n+\n++ (BOOL)handleMenuKeyEventForCode:(jint)code modifiers:(jint)modifiers;\n+{\n+    BOOL result = NO;\n+    if (menuKeyEvent != nil) {\n+        if (code == GetJavaKeyCode(menuKeyEvent) && modifiers == GetJavaKeyModifiers(menuKeyEvent)) {\n+            result = [NSApp.mainMenu performKeyEquivalent: menuKeyEvent];\n+            [menuKeyEvent release];\n+            menuKeyEvent = nil;\n+        }\n+    }\n+    return result;\n+}\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassApplication.m","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#import \"GlassApplication.h\"\n@@ -383,0 +384,25 @@\n+\/*\n+ * Class:     com_sun_glass_ui_mac_MacMenuBarDelegate\n+ * Method:    _handleKeyEvent\n+ * Signature: (JII)Z\n+ *\/\n+JNIEXPORT jboolean JNICALL Java_com_sun_glass_ui_mac_MacMenuBarDelegate__1handleKeyEvent\n+  (JNIEnv *env, jobject jMenuDelegate, jlong jMenubarPtr, jint code, jint modifiers)\n+{\n+    LOG(\"Java_com_sun_glass_ui_mac_MacMenuBarDelegate__1handleKeyEvent\");\n+\n+    jboolean result = false;\n+\n+    GLASS_ASSERT_MAIN_JAVA_THREAD(env);\n+    GLASS_POOL_ENTER;\n+    {\n+        if ([GlassApplication handleMenuKeyEventForCode: code modifiers: modifiers]) {\n+            result = true;\n+        }\n+    }\n+    GLASS_POOL_EXIT;\n+    GLASS_CHECK_EXCEPTION(env);\n+\n+    return result;\n+}\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassMenu.m","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -474,35 +474,7 @@\n-    \/\/ JDK-8093711, JDK-8094601 Command-EQUALS and Command-DOT needs special casing on Mac\n-    \/\/ as it is passed through as two calls to performKeyEquivalent, which in turn\n-    \/\/ create extra KeyEvents.\n-    \/\/\n-    NSString *chars = [theEvent charactersIgnoringModifiers];\n-    if ([theEvent type] == NSEventTypeKeyDown && [chars length] > 0)\n-    {\n-        unichar uch = [chars characterAtIndex:0];\n-        if ([theEvent modifierFlags] & NSEventModifierFlagCommand &&\n-            (uch == com_sun_glass_events_KeyEvent_VK_PERIOD ||\n-             uch == com_sun_glass_events_KeyEvent_VK_EQUALS))\n-        {\n-            GET_MAIN_JENV;\n-\n-            jcharArray jKeyChars = GetJavaKeyChars(env, theEvent);\n-            jint jModifiers = GetJavaModifiers(theEvent);\n-\n-            (*env)->CallBooleanMethod(env, self->_delegate->jView, jViewNotifyKeyAndReturnConsumed,\n-                                      com_sun_glass_events_KeyEvent_PRESS,\n-                                      uch, jKeyChars, jModifiers);\n-            (*env)->CallBooleanMethod(env, self->_delegate->jView, jViewNotifyKeyAndReturnConsumed,\n-                                      com_sun_glass_events_KeyEvent_TYPED,\n-                                      uch, jKeyChars, jModifiers);\n-            (*env)->CallBooleanMethod(env, self->_delegate->jView, jViewNotifyKeyAndReturnConsumed,\n-                                   com_sun_glass_events_KeyEvent_RELEASE,\n-                                   uch, jKeyChars, jModifiers);\n-            (*env)->DeleteLocalRef(env, jKeyChars);\n-\n-            GLASS_CHECK_EXCEPTION(env);\n-            return YES;\n-        }\n-    }\n-\n-    BOOL result = [self handleKeyDown: theEvent];\n-    return result;\n+    \/\/ We can return YES here unconditionally. If the scene graph wants to\n+    \/\/ invoke the system menu it will call handleKeyEvent in the\n+    \/\/ MenuBarDelegate while the KeyEvent is being dispatched.\n+    [GlassApplication setMenuKeyEvent: theEvent];\n+    [self handleKeyDown: theEvent];\n+    [GlassApplication setMenuKeyEvent: nil];\n+    return YES;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassView3D.m","additions":7,"deletions":35,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -963,0 +963,4 @@\n+        @Override\n+        public void handleKeyEvent(KeyEvent keyEvent) {\n+        }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/pgstub\/StubToolkit.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-        FIREDTWICE(\"Key press event fired scene action and also a menu bar item\"),\n@@ -67,1 +66,4 @@\n-        FIREDSCENE(\"Key press event fired scene action instead of menu bar item\");\n+        FIREDSCENE(\"Key press event fired scene action instead of menu bar item\"),\n+        FIREDBOTH(\"Key press event fired scene action and also a menu bar item\"),\n+        FIREDMENUITEMTWICE(\"Key press event fired menu bar item twice\"),\n+        FIREDSCENETWICE(\"Key press event fired scene action twice\");\n@@ -153,2 +155,2 @@\n-        private boolean sceneAcceleratorFired = false;\n-        private boolean menuBarItemFired = false;\n+        private int sceneAcceleratorFiredCount = 0;\n+        private int menuBarItemFiredCount = 0;\n@@ -160,1 +162,1 @@\n-                menuBarItemFired = true;\n+                menuBarItemFiredCount += 1;\n@@ -183,1 +185,1 @@\n-                sceneAcceleratorFired = true;\n+                sceneAcceleratorFiredCount += 1;\n@@ -186,1 +188,1 @@\n-                sceneAcceleratorFired = true;\n+                sceneAcceleratorFiredCount += 1;\n@@ -199,2 +201,2 @@\n-            sceneAcceleratorFired = false;\n-            menuBarItemFired = false;\n+            sceneAcceleratorFiredCount = 0;\n+            menuBarItemFiredCount = 0;\n@@ -212,3 +214,9 @@\n-            if (sceneAcceleratorFired && menuBarItemFired) {\n-                return TestResult.FIREDTWICE;\n-            } else if (sceneAcceleratorFired) {\n+            if (menuBarItemFiredCount > 1) {\n+                return TestResult.FIREDMENUITEMTWICE;\n+            }\n+            else if (sceneAcceleratorFiredCount > 1) {\n+                return TestResult.FIREDSCENETWICE;\n+            }\n+            else if (sceneAcceleratorFiredCount == 1 && menuBarItemFiredCount == 1) {\n+                return TestResult.FIREDBOTH;\n+            } else if (sceneAcceleratorFiredCount == 1) {\n@@ -216,1 +224,1 @@\n-            } else if (menuBarItemFired) {\n+            } else if (menuBarItemFiredCount == 1) {\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/MenuDoubleShortcutTest.java","additions":21,"deletions":13,"binary":false,"changes":34,"status":"modified"}]}