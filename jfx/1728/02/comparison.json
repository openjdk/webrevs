{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -416,0 +416,1 @@\n+        Toolkit.getToolkit().checkFxUserThread();\n@@ -424,2 +425,2 @@\n-     *\n-     * <p>This method may be called from any thread.<\/p>\n+     * <p>\n+     * This property can be accessed only from the JavaFX Application Thread.\n@@ -429,0 +430,2 @@\n+     * @throws IllegalStateException if this method is called on a thread\n+     *     other than the JavaFX Application Thread.\n@@ -432,0 +435,1 @@\n+        Toolkit.getToolkit().checkFxUserThread();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/application\/Platform.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,13 +28,0 @@\n-import org.junit.jupiter.api.AfterAll;\n-import org.junit.jupiter.api.BeforeAll;\n-import org.junit.jupiter.api.Test;\n-import test.util.Util;\n-\n-import javafx.animation.KeyFrame;\n-import javafx.animation.Timeline;\n-import javafx.util.Duration;\n-import javafx.application.Platform;\n-\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.atomic.AtomicReference;\n-\n@@ -44,1 +31,0 @@\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -46,0 +32,11 @@\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.atomic.AtomicReference;\n+import javafx.animation.KeyFrame;\n+import javafx.animation.Timeline;\n+import javafx.application.Platform;\n+import javafx.util.Duration;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import test.util.Util;\n@@ -131,0 +128,5 @@\n+    @Test\n+    public void accessibilityActiveNotOnFxThread() {\n+        assertThrows(IllegalStateException.class, Platform::isAccessibilityActive);\n+        assertThrows(IllegalStateException.class, Platform::accessibilityActiveProperty);\n+    }\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/application\/PlatformTest.java","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"}]}