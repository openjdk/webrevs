{"files":[{"patch":"@@ -59,0 +59,1 @@\n+import java.util.Collections;\n@@ -97,3 +98,0 @@\n-    \/\/ Used as the (dummy) value for the various listener maps\n-    private static final Object dummyObj = new Object();\n-\n@@ -372,7 +370,5 @@\n-    \/\/ referenced. We use a WeakHashMap with a dummy object as a value, rather\n-    \/\/ than a HashSet of WeakReferences so that the entries are automatically\n-    \/\/ removed after the listener is garbage collected.\n-    private final Map<TKPulseListener,Object> stagePulseListeners = new WeakHashMap<>();\n-    private final Map<TKPulseListener,Object> scenePulseListeners = new WeakHashMap<>();\n-    private final Map<TKPulseListener,Object> postScenePulseListeners = new WeakHashMap<>();\n-    private final Map<TKListener,Object> toolkitListeners = new WeakHashMap<>();\n+    \/\/ referenced.\n+    private final Set<TKPulseListener> stagePulseListeners = Collections.newSetFromMap(new WeakHashMap<>());\n+    private final Set<TKPulseListener> scenePulseListeners = Collections.newSetFromMap(new WeakHashMap<>());\n+    private final Set<TKPulseListener> postScenePulseListeners = Collections.newSetFromMap(new WeakHashMap<>());\n+    private final Set<TKListener> toolkitListeners = Collections.newSetFromMap(new WeakHashMap<>());\n@@ -397,3 +393,3 @@\n-            stagePulseList.addAll(stagePulseListeners.keySet());\n-            scenePulseList.addAll(scenePulseListeners.keySet());\n-            postScenePulseList.addAll(postScenePulseListeners.keySet());\n+            stagePulseList.addAll(stagePulseListeners);\n+            scenePulseList.addAll(scenePulseListeners);\n+            postScenePulseList.addAll(postScenePulseListeners);\n@@ -420,1 +416,1 @@\n-            stagePulseListeners.put(listener, dummyObj);\n+            stagePulseListeners.add(listener);\n@@ -433,1 +429,1 @@\n-            scenePulseListeners.put(listener, dummyObj);\n+            scenePulseListeners.add(listener);\n@@ -446,1 +442,1 @@\n-            postScenePulseListeners.put(listener, dummyObj);\n+            postScenePulseListeners.add(listener);\n@@ -459,1 +455,1 @@\n-        toolkitListeners.put(listener, dummyObj);\n+        toolkitListeners.add(listener);\n@@ -500,1 +496,1 @@\n-        for (TKListener listener : toolkitListeners.keySet()) {\n+        for (TKListener listener : toolkitListeners) {\n@@ -506,1 +502,1 @@\n-        for (TKListener listener: toolkitListeners.keySet()) {\n+        for (TKListener listener: toolkitListeners) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/Toolkit.java","additions":15,"deletions":19,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    private static final Object dummyAcc = new Object();\n+    private static final Object DUMMY_ACC = new Object();\n@@ -95,1 +95,1 @@\n-        setMemberImpl(peer, peer_type, name, value, dummyAcc);\n+        setMemberImpl(peer, peer_type, name, value, DUMMY_ACC);\n@@ -120,1 +120,1 @@\n-        setSlotImpl(peer, peer_type, index, value,dummyAcc);\n+        setSlotImpl(peer, peer_type, index, value, DUMMY_ACC);\n@@ -129,1 +129,1 @@\n-        return callImpl(peer, peer_type, methodName, args,dummyAcc);\n+        return callImpl(peer, peer_type, methodName, args, DUMMY_ACC);\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/dom\/JSObject.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}