{"files":[{"patch":"@@ -6436,0 +6436,10 @@\n+    \/**\n+     * Node orientation describes the flow of visual data within a node.\n+     * In the English speaking world, visual data normally flows from\n+     * left-to-right. In an Arabic or Hebrew world, visual data flows\n+     * from right-to-left. This is consistent with the reading order\n+     * of text in both worlds.\n+     *\n+     * @defaultValue {@code NodeOrientation.INHERIT}\n+     * @since JavaFX 8.0\n+     *\/\n@@ -6456,13 +6466,1 @@\n-    \/**\n-     * Property holding NodeOrientation.\n-     * <p>\n-     * Node orientation describes the flow of visual data within a node.\n-     * In the English speaking world, visual data normally flows from\n-     * left-to-right. In an Arabic or Hebrew world, visual data flows\n-     * from right-to-left.  This is consistent with the reading order\n-     * of text in both worlds.  The default value is left-to-right.\n-     * <\/p>\n-     *\n-     * @return NodeOrientation\n-     * @since JavaFX 8.0\n-     *\/\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -6249,2 +6249,11 @@\n-\n-\n+    \/**\n+     * Node orientation describes the flow of visual data within a node.\n+     * In the English speaking world, visual data normally flows from\n+     * left-to-right. In an Arabic or Hebrew world, visual data flows\n+     * from right-to-left. This is consistent with the reading order\n+     * of text in both worlds.\n+     *\n+     * @defaultValue if the system property {@code javafx.scene.nodeOrientation.RTL} is {@code true},\n+     *     {@code NodeOrientation.RIGHT_TO_LEFT}, otherwise {@code NodeOrientation.INHERIT}\n+     * @since JavaFX 8.0\n+     *\/\n@@ -6264,13 +6273,0 @@\n-    \/**\n-     * Property holding NodeOrientation.\n-     * <p>\n-     * Node orientation describes the flow of visual data within a node.\n-     * In the English speaking world, visual data normally flows from\n-     * left-to-right. In an Arabic or Hebrew world, visual data flows\n-     * from right-to-left.  This is consistent with the reading order\n-     * of text in both worlds.  The default value is left-to-right.\n-     * <\/p>\n-     *\n-     * @return NodeOrientation\n-     * @since JavaFX 8.0\n-     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Scene.java","additions":11,"deletions":15,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-     * that it's top is always offset by that amount from the anchor pane's top\n+     * that its top is always offset by that amount from the anchor pane's top\n@@ -132,1 +132,1 @@\n-     * Setting the value to null will remove the constraint.\n+     * Setting the value to {@code null} will remove the constraint.\n@@ -141,1 +141,1 @@\n-     * Returns the child's top anchor constraint if set.\n+     * Returns the child's top anchor constraint, if set.\n@@ -143,1 +143,1 @@\n-     * @return the offset from the top of the anchor pane or null if no top anchor was set\n+     * @return the offset from the top of the anchor pane, or {@code null} if no top anchor was set\n@@ -152,1 +152,1 @@\n-     * that it's left is always offset by that amount from the anchor pane's left\n+     * that its left is always offset by that amount from the anchor pane's left\n@@ -154,1 +154,1 @@\n-     * Setting the value to null will remove the constraint.\n+     * Setting the value to {@code null} will remove the constraint.\n@@ -163,1 +163,1 @@\n-     * Returns the child's left anchor constraint if set.\n+     * Returns the child's left anchor constraint, if set.\n@@ -165,1 +165,1 @@\n-     * @return the offset from the left of the anchor pane or null if no left anchor was set\n+     * @return the offset from the left of the anchor pane, or {@code null} if no left anchor was set\n@@ -174,1 +174,1 @@\n-     * that it's bottom is always offset by that amount from the anchor pane's bottom\n+     * that its bottom is always offset by that amount from the anchor pane's bottom\n@@ -176,1 +176,1 @@\n-     * Setting the value to null will remove the constraint.\n+     * Setting the value to {@code null} will remove the constraint.\n@@ -185,1 +185,1 @@\n-     * Returns the child's bottom anchor constraint if set.\n+     * Returns the child's bottom anchor constraint, if set.\n@@ -187,1 +187,1 @@\n-     * @return the offset from the bottom of the anchor pane or null if no bottom anchor was set\n+     * @return the offset from the bottom of the anchor pane, or {@code null} if no bottom anchor was set\n@@ -196,1 +196,1 @@\n-     * that it's right is always offset by that amount from the anchor pane's right\n+     * that its right is always offset by that amount from the anchor pane's right\n@@ -198,1 +198,1 @@\n-     * Setting the value to null will remove the constraint.\n+     * Setting the value to {@code null} will remove the constraint.\n@@ -207,1 +207,1 @@\n-     * Returns the child's right anchor constraint if set.\n+     * Returns the child's right anchor constraint, if set.\n@@ -209,1 +209,1 @@\n-     * @return the offset from the right of the anchor pane or null if no right anchor was set\n+     * @return the offset from the right of the anchor pane, or {@code null} if no right anchor was set\n@@ -231,1 +231,1 @@\n-     * Creates an AnchorPane layout.\n+     * Creates an {@code AnchorPane} layout.\n@@ -238,2 +238,2 @@\n-     * Creates an AnchorPane layout with the given children.\n-     * @param children    The initial set of children for this pane.\n+     * Creates an {@code AnchorPane} layout with the given children.\n+     * @param children the initial set of children for this pane\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/AnchorPane.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"}]}