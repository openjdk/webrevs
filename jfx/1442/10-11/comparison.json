{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-public final class WinTextRangeProvider {\n+final class WinTextRangeProvider {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinTextRangeProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.glass.ui.win;\n+\n+\/**\n+ * Provides access to the {@link WinTextRangeProvider} class by making its\n+ * package-private fields and methods public for test cases in\n+ * {@link test.com.sun.glass.ui.win.WinTextRangeProviderTest WinTextRangeProviderTest}.\n+ *\/\n+public class WinTextRangeProviderShim {\n+    public static int getValidStringIndex(int start, int requestedSteps, int maxEnd) {\n+        return WinTextRangeProvider.getValidStringIndex(start, requestedSteps, maxEnd);\n+    }\n+}\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/glass\/ui\/win\/WinTextRangeProviderShim.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -29,1 +29,1 @@\n-import com.sun.glass.ui.win.WinTextRangeProvider;\n+import com.sun.glass.ui.win.WinTextRangeProviderShim;\n@@ -34,10 +34,11 @@\n-        assertEquals(1, WinTextRangeProvider.getValidStringIndex(0, 1, 2));\n-        assertEquals(1, WinTextRangeProvider.getValidStringIndex(0, 2, 1));\n-        assertEquals(1, WinTextRangeProvider.getValidStringIndex(-1, 2, 1));\n-        assertEquals(1, WinTextRangeProvider.getValidStringIndex(0, Integer.MAX_VALUE, 1));\n-        assertEquals(Integer.MAX_VALUE, WinTextRangeProvider.getValidStringIndex(0, Integer.MAX_VALUE, Integer.MAX_VALUE));\n-        assertEquals(55, WinTextRangeProvider.getValidStringIndex(50, Integer.MAX_VALUE, 55));\n-        assertEquals(50, WinTextRangeProvider.getValidStringIndex(50, -1, 55));\n-        assertEquals(55, WinTextRangeProvider.getValidStringIndex(50, 10, 55));\n-        assertEquals(60, WinTextRangeProvider.getValidStringIndex(50, 10, Integer.MIN_VALUE));\n-        assertEquals(50, WinTextRangeProvider.getValidStringIndex(50, Integer.MIN_VALUE, Integer.MIN_VALUE));\n+        assertEquals(1, WinTextRangeProviderShim.getValidStringIndex(0, 1, 2));\n+        assertEquals(1, WinTextRangeProviderShim.getValidStringIndex(0, 2, 1));\n+        assertEquals(1, WinTextRangeProviderShim.getValidStringIndex(-1, 2, 1));\n+        assertEquals(1, WinTextRangeProviderShim.getValidStringIndex(0, Integer.MAX_VALUE, 1));\n+        assertEquals(1, WinTextRangeProviderShim.getValidStringIndex(0, Integer.MAX_VALUE, Integer.MAX_VALUE));\n+        assertEquals(55, WinTextRangeProviderShim.getValidStringIndex(50, Integer.MAX_VALUE, 55));\n+        assertEquals(50, WinTextRangeProviderShim.getValidStringIndex(50, -1, 55));\n+        assertEquals(55, WinTextRangeProviderShim.getValidStringIndex(50, 10, 55));\n+        assertEquals(60, WinTextRangeProviderShim.getValidStringIndex(50, 10, Integer.MAX_VALUE));\n+        assertEquals(60, WinTextRangeProviderShim.getValidStringIndex(50, 10, Integer.MIN_VALUE));\n+        assertEquals(50, WinTextRangeProviderShim.getValidStringIndex(50, Integer.MIN_VALUE, Integer.MIN_VALUE));\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/glass\/ui\/win\/WinTextRangeProviderTest.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"}]}