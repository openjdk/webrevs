{"files":[{"patch":"@@ -105,10 +105,12 @@\n-    public static int getValidStringIndex(int start, int requestedSteps, int maxEnd) {\n-        int fixedMaxEnd = Math.max(0, maxEnd);\n-        int fixedStart = Math.max(0, Math.min(start, fixedMaxEnd));\n-        if (requestedSteps < 0) {\n-            return fixedMaxEnd;\n-        }\n-        try {\n-            return Math.min(fixedMaxEnd, Math.addExact(fixedStart, requestedSteps));\n-        } catch (ArithmeticException e) {\n-            return fixedMaxEnd;\n+    \/**\n+     * Calculate the end index based on the start index, requested length and the maximum end index.\n+     *\n+     * @implNote Code does not work if values near Integer.MAX_VALUE are used. For isntance, if 2147483645 is passed as start, 5 as length, and 2147483647 as maxEndIndex, the result will negative.\n+     *\n+     * @param startIndex The start index in a string. Needs to be 0 or more (not checked in the code).\n+     * @param length The requested length of a string when starting from \"start\". Negative numbers are treated as full length.\n+     * @param maxEndIndex The maximum end index to return. Needs to be equal or greater than startIndex (not checked in the code).\n+     *\/\n+    static int calculateEndIndex(int startIndex, int length, int maxEndIndex) {\n+        if (length < 0 || length > maxEndIndex) {\n+            return maxEndIndex;\n@@ -116,0 +118,1 @@\n+        return Math.min(startIndex + length, maxEndIndex);\n@@ -378,1 +381,1 @@\n-        int endOffset = getValidStringIndex(start, maxLength, end);\n+        int endOffset = calculateEndIndex(start, maxLength, end);\n@@ -394,1 +397,1 @@\n-                start = getValidStringIndex(start, requestedCount, length - 1);\n+                start = calculateEndIndex(start, requestedCount, length - 1);\n@@ -498,1 +501,1 @@\n-                offset = getValidStringIndex(offset, requestedCount, length);\n+                offset = calculateEndIndex(offset, requestedCount, length);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinTextRangeProvider.java","additions":16,"deletions":13,"binary":false,"changes":29,"status":"modified"}]}