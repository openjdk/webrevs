{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-class WinTextRangeProvider {\n+public final class WinTextRangeProvider {\n@@ -105,0 +105,13 @@\n+    public static int getValidStringIndex(int start, int requestedSteps, int maxEnd) {\n+        int fixedMaxEnd = Math.max(0, maxEnd);\n+        int fixedStart = Math.max(0, Math.min(start, fixedMaxEnd));\n+        if (requestedSteps < 0) {\n+            return fixedMaxEnd;\n+        }\n+        try {\n+            return Math.min(fixedMaxEnd, Math.addExact(fixedStart, requestedSteps));\n+        } catch (ArithmeticException e) {\n+            return fixedMaxEnd;\n+        }\n+    }\n+\n@@ -365,1 +378,1 @@\n-        int endOffset = maxLength != -1 ? Math.min(end, start + maxLength) : end;\n+        int endOffset = getValidStringIndex(start, maxLength, end);\n@@ -381,1 +394,1 @@\n-                start = Math.max(0, Math.min(start + requestedCount, length - 1));\n+                start = getValidStringIndex(start, requestedCount, length - 1);\n@@ -485,1 +498,1 @@\n-                offset = Math.max(0, Math.min(offset + requestedCount, length));\n+                offset = getValidStringIndex(offset, requestedCount, length);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinTextRangeProvider.java","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+--add-exports javafx.graphics\/com.sun.glass.ui.win=ALL-UNNAMED\n","filename":"modules\/javafx.graphics\/src\/test\/addExports","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package test.com.sun.glass.ui.win;\n+\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+import com.sun.glass.ui.win.WinTextRangeProvider;\n+\n+public class WinTextRangeProviderTest {\n+    @Test\n+    public void getValidStringIndex() {\n+        assertEquals(1, WinTextRangeProvider.getValidStringIndex(0, 1, 2));\n+        assertEquals(1, WinTextRangeProvider.getValidStringIndex(0, 2, 1));\n+        assertEquals(1, WinTextRangeProvider.getValidStringIndex(-1, 2, 1));\n+        assertEquals(1, WinTextRangeProvider.getValidStringIndex(0, Integer.MAX_VALUE, 1));\n+        assertEquals(Integer.MAX_VALUE, WinTextRangeProvider.getValidStringIndex(0, Integer.MAX_VALUE, Integer.MAX_VALUE));\n+        assertEquals(55, WinTextRangeProvider.getValidStringIndex(50, Integer.MAX_VALUE, 55));\n+        assertEquals(50, WinTextRangeProvider.getValidStringIndex(50, -1, 55));\n+        assertEquals(55, WinTextRangeProvider.getValidStringIndex(50, 10, 55));\n+        assertEquals(60, WinTextRangeProvider.getValidStringIndex(50, 10, Integer.MIN_VALUE));\n+        assertEquals(50, WinTextRangeProvider.getValidStringIndex(50, Integer.MIN_VALUE, Integer.MIN_VALUE));\n+    }\n+}\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/glass\/ui\/win\/WinTextRangeProviderTest.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"}]}