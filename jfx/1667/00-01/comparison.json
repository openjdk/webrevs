{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -42,1 +43,1 @@\n-    private static volatile boolean inUse;\n+    private static final AtomicBoolean guard = new AtomicBoolean(false);\n@@ -50,9 +51,2 @@\n-        \/* The following heuristic is that if the reusable instance is\n-         * in use, it probably still will be in a micro-second, so avoid\n-         * synchronising on the class and just allocate a new instance.\n-         * The cost is one extra boolean test for the normal case, and some\n-         * small number of cases where we allocate an extra object when\n-         * in fact the reusable one would be freed very soon.\n-         *\/\n-        if (inUse) {\n-            return newInstance();\n+        if (guard.compareAndSet(false, true)) {\n+            return reusableGL;\n@@ -60,8 +54,1 @@\n-            synchronized(GlyphLayout.class) {\n-                if (inUse) {\n-                    return newInstance();\n-                } else {\n-                    inUse = true;\n-                    return reusableGL;\n-                }\n-            }\n+            return newInstance();\n@@ -73,1 +60,1 @@\n-            inUse = false;\n+            guard.set(false);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/GlyphLayoutManager.java","additions":6,"deletions":19,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -36,1 +37,1 @@\n-    private static boolean inUse;\n+    private static final AtomicBoolean guard = new AtomicBoolean(false);\n@@ -53,2 +54,6 @@\n-        if (inUse) {\n-            return createLayout();\n+        if (guard.compareAndSet(false, true)) {\n+            reusableTL.setAlignment(0);\n+            reusableTL.setWrapWidth(0);\n+            reusableTL.setDirection(0);\n+            reusableTL.setContent(null);\n+            return reusableTL;\n@@ -56,12 +61,1 @@\n-            synchronized(PrismTextLayoutFactory.class) {\n-                if (inUse) {\n-                    return createLayout();\n-                } else {\n-                    inUse = true;\n-                    reusableTL.setAlignment(0);\n-                    reusableTL.setWrapWidth(0);\n-                    reusableTL.setDirection(0);\n-                    reusableTL.setContent(null);\n-                    return reusableTL;\n-                }\n-            }\n+            return createLayout();\n@@ -74,1 +68,1 @@\n-            inUse = false;\n+            guard.set(false);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/PrismTextLayoutFactory.java","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"}]}