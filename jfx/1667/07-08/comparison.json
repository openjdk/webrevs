{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -191,1 +191,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(series1).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(series1, lineChart);\n@@ -213,1 +213,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -235,1 +235,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -258,1 +258,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -281,1 +281,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -303,1 +303,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -325,1 +325,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -347,1 +347,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -369,1 +369,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -393,1 +393,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -417,1 +417,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -441,1 +441,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -465,1 +465,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -488,1 +488,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -511,1 +511,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -533,1 +533,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -556,1 +556,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -580,1 +580,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -603,1 +603,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -626,1 +626,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -649,1 +649,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -672,1 +672,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -695,1 +695,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -718,1 +718,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -741,1 +741,1 @@\n-        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+        eq(expectedSeries, lineChart);\n@@ -780,0 +780,13 @@\n+\n+    private void eq(XYChart.Series<Number, Number> expected, LineChart<Number, Number> ch) {\n+        List<Point2D> exp = convertSeriesDataToPoint2D(expected);\n+        List<Point2D> res = findDataPointsFromPathLine(lineChart);\n+\n+        assertEquals(exp.size(), res.size());\n+        for (int i = 0; i < exp.size(); i++) {\n+            Point2D pe = exp.get(i);\n+            Point2D pr = res.get(i);\n+            assertEquals(pe.getX(), pr.getX(), 1e-9, \"at index \" + i + \" expected=\" + pe + \" actual=\" + pr);\n+            assertEquals(pe.getY(), pr.getY(), 1e-9, \"at index \" + i + \" expected=\" + pe + \" actual=\" + pr);\n+        }\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/chart\/LineChartTest.java","additions":39,"deletions":26,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,1 @@\n-        assertEquals(\"10 453 218 35 238 409 218 79 465 355 218 133 \", bounds);\n+        assertEquals(\"10 440 216 34 236 397 216 77 461 345 216 129 \", bounds);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/chart\/StackedBarChartTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}