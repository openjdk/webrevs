{"files":[{"patch":"@@ -249,1 +249,2 @@\n-            isModal(), isUtilityWindow(), (getStyleMask() & RIGHT_TO_LEFT) != 0);\n+            isModal() || getOwner() != null, isUtilityWindow(),\n+            (getStyleMask() & RIGHT_TO_LEFT) != 0);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkWindow.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -381,1 +381,1 @@\n-            isModal(), isUtilityWindow(),\n+            isModal() || getOwner() != null, isUtilityWindow(),\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinWindow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import javafx.event.Event;\n@@ -40,0 +41,1 @@\n+import javafx.stage.WindowEvent;\n@@ -43,1 +45,1 @@\n-public final class HeaderButtonBehavior implements EventHandler<MouseEvent> {\n+public final class HeaderButtonBehavior implements EventHandler<Event> {\n@@ -85,0 +87,4 @@\n+\n+        if (getStage() instanceof Stage stage) {\n+            stage.removeEventFilter(WindowEvent.WINDOW_SHOWING, this);\n+        }\n@@ -88,1 +94,9 @@\n-    public void handle(MouseEvent event) {\n+    public void handle(Event event) {\n+        if (event instanceof MouseEvent mouseEvent) {\n+            handleMouseEvent(mouseEvent);\n+        } else if (event instanceof WindowEvent windowEvent) {\n+            handleWindowEvent(windowEvent);\n+        }\n+    }\n+\n+    private void handleMouseEvent(MouseEvent event) {\n@@ -113,0 +127,6 @@\n+    private void handleWindowEvent(WindowEvent event) {\n+        if (event.getEventType() == WindowEvent.WINDOW_SHOWING && getStage() instanceof Stage stage) {\n+            updateButtonDisableState(stage);\n+        }\n+    }\n+\n@@ -122,5 +142,7 @@\n-    private void onStageChanged(Stage stage) {\n-        if (stage != null) {\n-            boolean utility = stage.getStyle() == StageStyle.UTILITY;\n-            boolean modal = stage.getModality() != Modality.NONE;\n-            updateDisableState(utility, modal, stage.isResizable());\n+    private void onStageChanged(Stage oldStage, Stage newStage) {\n+        if (oldStage != null) {\n+            oldStage.removeEventFilter(WindowEvent.WINDOW_SHOWING, this);\n+        }\n+\n+        if (newStage != null) {\n+            newStage.addEventFilter(WindowEvent.WINDOW_SHOWING, this);\n@@ -131,1 +153,3 @@\n-        onStageChanged(getStage());\n+        if (getStage() instanceof Stage stage) {\n+            updateButtonDisableState(stage);\n+        }\n@@ -134,1 +158,1 @@\n-    private void updateDisableState(boolean utility, boolean modal, boolean resizable) {\n+    private void updateButtonDisableState(Stage stage) {\n@@ -136,0 +160,4 @@\n+            boolean utility = stage.getStyle() == StageStyle.UTILITY;\n+            boolean modal = stage.getOwner() != null || stage.getModality() != Modality.NONE;\n+            boolean resizable = stage.isResizable();\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/HeaderButtonBehavior.java","additions":37,"deletions":9,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -43,4 +43,8 @@\n-        RESIZABLE(true, false, false, false),\n-        UNRESIZABLE(false, false, false, true),\n-        MODAL_RESIZABLE(true, true, true, false),\n-        MODAL_UNRESIZABLE(false, true, true, true);\n+        RESIZABLE(true, false, false, false, false),\n+        UNRESIZABLE(false, false, false, false, true),\n+        MODAL_RESIZABLE(true, true, false, true, false),\n+        MODAL_UNRESIZABLE(false, true, false, true, true),\n+        OWNER_RESIZABLE(true, false, true, true, false),\n+        OWNER_UNRESIZABLE(false, false, true, true, true),\n+        OWNER_MODAL_RESIZABLE(true, true, true, true, false),\n+        OWNER_MODAL_UNRESIZABLE(false, true, true, true, true);\n@@ -48,1 +52,2 @@\n-        ButtonDisabledStateTest(boolean resizable, boolean modal, boolean iconifyDisabled, boolean maximizeDisabled) {\n+        ButtonDisabledStateTest(boolean resizable, boolean modal, boolean hasOwner,\n+                                boolean iconifyDisabled, boolean maximizeDisabled) {\n@@ -51,0 +56,1 @@\n+            this.hasOwner = hasOwner;\n@@ -57,0 +63,1 @@\n+        final boolean hasOwner;\n@@ -63,1 +70,1 @@\n-     * of resizable and modal window attributes.\n+     * of resizable, modal, and owner window attributes.\n@@ -77,1 +84,0 @@\n-        stage.show();\n@@ -79,0 +85,5 @@\n+        if (test.hasOwner) {\n+            stage.initOwner(new Stage());\n+        }\n+\n+        stage.show();\n@@ -82,0 +93,1 @@\n+        stage.close();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/layout\/HeaderButtonBehaviorTest.java","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"}]}