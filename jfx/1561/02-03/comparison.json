{"files":[{"patch":"@@ -655,0 +655,12 @@\n+\/\/    @ParameterizedTest\n+\/\/    @MethodSource(\"parameters\")\n+\/\/    public void selectedTextWorksWhenSelectionIsBound(Class<?> type) {\n+\/\/        setup(type);\n+\/\/        ObjectProperty<IndexRange> other = new SimpleObjectProperty<IndexRange>(new IndexRange(4, 9));\n+\/\/        textInput.setText(\"The quick brown fox\");\n+\/\/        textInput.selectionProperty().bind(other);\n+\/\/        assertEquals(\"quick\", textInput.getSelectedText());\n+\/\/        other.set(new IndexRange(10, 19));\n+\/\/        assertEquals(\"brown fox\", textInput.getSelectedText());\n+\/\/    }\n+\n@@ -741,0 +753,11 @@\n+\/\/    @ParameterizedTest\n+\/\/    @MethodSource(\"parameters\")\n+\/\/    public void selectionCanBeBound(Class<?> type) {\n+\/\/        setup(type);\n+\/\/        ObjectProperty<IndexRange> other = new SimpleObjectProperty<IndexRange>(new IndexRange(4, 9));\n+\/\/        textInput.selectionProperty().bind(other);\n+\/\/        assertEquals(new IndexRange(4, 9), textInput.getSelection());\n+\/\/        other.set(new IndexRange(10, 19));\n+\/\/        assertEquals(new IndexRange(10, 19), textInput.getSelection());\n+\/\/    }\n+\n@@ -753,0 +776,34 @@\n+\/\/    @ParameterizedTest\n+\/\/    @MethodSource(\"parameters\")\n+\/\/    public void selectionChangeEventsHappenWhenBound(Class<?> type) {\n+\/\/        setup(type);\n+\/\/        final boolean[] passed = new boolean[] { false };\n+\/\/        ObjectProperty<IndexRange> other = new SimpleObjectProperty<IndexRange>(new IndexRange(0, 5));\n+\/\/        textInput.selectionProperty().addListener(new InvalidationListener() {\n+\/\/            @Override\n+\/\/            public void invalidated(Observable observable) {\n+\/\/                passed[0] = true;\n+\/\/            }\n+\/\/        });\n+\/\/        textInput.selectionProperty().bind(other);\n+\/\/        assertTrue(passed[0]);\n+\/\/    }\n+\n+\/\/    @ParameterizedTest\n+\/\/    @MethodSource(\"parameters\")\n+\/\/    public void selectionChangeEventsHappenWhenBound2(Class<?> type) {\n+\/\/        setup(type);\n+\/\/        final boolean[] passed = new boolean[] { false };\n+\/\/        ObjectProperty<IndexRange> other = new SimpleObjectProperty<IndexRange>(new IndexRange(0, 5));\n+\/\/        textInput.selectionProperty().bind(other);\n+\/\/        textInput.selectionProperty().addListener(new InvalidationListener() {\n+\/\/            @Override\n+\/\/            public void invalidated(Observable observable) {\n+\/\/                passed[0] = true;\n+\/\/            }\n+\/\/        });\n+\/\/        assertFalse(passed[0]);\n+\/\/        other.set(new IndexRange(1, 2));\n+\/\/        assertTrue(passed[0]);\n+\/\/    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TextInputControlTest.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"modified"}]}