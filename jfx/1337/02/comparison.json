{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.application.PlatformImpl;\n@@ -30,0 +31,1 @@\n+import javafx.application.Platform;\n@@ -44,0 +46,2 @@\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicReference;\n@@ -61,2 +65,7 @@\n-            Point2D result = fxRequests.getTextLocation(offset.getInsertionIndex());\n-            return new Rectangle((int)result.getX(), (int)result.getY(), 0, 0);\n+            AtomicReference<Point2D> location = new AtomicReference<>(new Point2D(0.0, 0.0));\n+            if (fxRequests != null) {\n+                PlatformImpl.runAndWait(() -> {\n+                    location.set(fxRequests.getTextLocation(offset.getInsertionIndex()));\n+                });\n+            }\n+            return new Rectangle((int)location.get().getX(), (int)location.get().getY(), 0, 0);\n@@ -67,2 +76,7 @@\n-            int result = fxRequests.getLocationOffset(x, y);\n-            return TextHitInfo.afterOffset(result);\n+            AtomicInteger offset = new AtomicInteger(0);\n+            if (fxRequests != null) {\n+                PlatformImpl.runAndWait(() -> {\n+                    offset.set(fxRequests.getLocationOffset(x, y));\n+                });\n+            }\n+            return TextHitInfo.afterOffset(offset.get());\n@@ -73,0 +87,1 @@\n+            AtomicInteger offset = new AtomicInteger(0);\n@@ -74,1 +89,3 @@\n-                return ((ExtendedInputMethodRequests)fxRequests).getInsertPositionOffset();\n+                PlatformImpl.runAndWait(() -> {\n+                    offset.set(((ExtendedInputMethodRequests)fxRequests).getInsertPositionOffset());\n+                });\n@@ -76,1 +93,1 @@\n-            return 0;\n+            return offset.get();\n@@ -81,1 +98,1 @@\n-            String result = null;\n+            AtomicReference<String> committed = new AtomicReference<>(null);\n@@ -83,1 +100,3 @@\n-                result = ((ExtendedInputMethodRequests)fxRequests).getCommittedText(beginIndex, endIndex);\n+                PlatformImpl.runAndWait(() -> {\n+                    committed.set(((ExtendedInputMethodRequests)fxRequests).getCommittedText(beginIndex, endIndex));\n+                });\n@@ -85,2 +104,3 @@\n-            if (result == null) result = \"\";\n-            return new AttributedString(result).getIterator();\n+            String text = committed.get();\n+            if (text == null) text = \"\";\n+            return new AttributedString(text).getIterator();\n@@ -91,0 +111,1 @@\n+            AtomicInteger length = new AtomicInteger(0);\n@@ -92,1 +113,3 @@\n-                return ((ExtendedInputMethodRequests)fxRequests).getCommittedTextLength();\n+                PlatformImpl.runAndWait(() -> {\n+                    length.set(((ExtendedInputMethodRequests)fxRequests).getCommittedTextLength());\n+                });\n@@ -94,1 +117,1 @@\n-            return 0;\n+            return length.get();\n@@ -105,1 +128,7 @@\n-            String text = fxRequests.getSelectedText();\n+            AtomicReference<String> selected = new AtomicReference<>(null);\n+            if (fxRequests != null) {\n+                PlatformImpl.runAndWait(() -> {\n+                    selected.set(fxRequests.getSelectedText());\n+                });\n+            }\n+            String text = selected.get();\n","filename":"modules\/javafx.swing\/src\/main\/java\/javafx\/embed\/swing\/InputMethodSupport.java","additions":42,"deletions":13,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -959,1 +959,1 @@\n-            return null;\n+            return new InputMethodSupport.InputMethodRequestsAdapter(null);\n","filename":"modules\/javafx.swing\/src\/main\/java\/javafx\/embed\/swing\/JFXPanel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}