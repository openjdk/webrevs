{"files":[{"patch":"@@ -37,0 +37,2 @@\n+import javafx.beans.value.ChangeListener;\n+import javafx.beans.value.ObservableValue;\n@@ -516,1 +518,5 @@\n-\n+    private final ChangeListener<StringConverter> converterListener = new ChangeListener<StringConverter>() {\n+        @Override public void changed(ObservableValue<? extends StringConverter> observable, StringConverter oldValue, StringConverter newRate) {\n+            setText(valueProperty().getValue());\n+        }\n+    };\n@@ -536,0 +542,1 @@\n+                private SpinnerValueFactory oldFactory;\n@@ -538,0 +545,3 @@\n+                    if(oldFactory != null) {\n+                        oldFactory.converterProperty().removeListener(converterListener);\n+                    }\n@@ -544,0 +554,2 @@\n+                        \/\/ Listener to update the spinner editor when converter is changed.\n+                        newFactory.converterProperty().addListener(converterListener);\n@@ -545,0 +557,1 @@\n+                    oldFactory = newFactory;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Spinner.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.text.DecimalFormat;\n@@ -56,0 +57,1 @@\n+import javafx.util.StringConverter;\n@@ -1526,0 +1528,56 @@\n+\n+    @Test public void testDoubleSpinnerEditorUpdateOnConverterChange() {\n+        dblSpinner = new Spinner<>(0.0, 1.0, 0.5, 0.01);\n+        dblSpinner.setEditable(true);\n+\n+        assertEquals(\"0.5\", dblSpinner.getEditor().getText());\n+\n+        dblSpinner.getValueFactory().setConverter(new StringConverter<Double>() {\n+            private final DecimalFormat df = new DecimalFormat(\"#.##%\");\n+\n+            @Override\n+            public String toString(Double value) {\n+                return value == null ? \"\" : df.format(value);\n+            }\n+            @Override\n+            public Double fromString(String value) {\n+                if (value == null) {\n+                    return null;\n+                }\n+\n+                try {\n+                    return df.parse(value).doubleValue();\n+                } catch (Exception e) {\n+                    throw new RuntimeException(e);\n+                }\n+            }\n+        });\n+\n+        assertEquals(\"50%\", dblSpinner.getEditor().getText());\n+    }\n+\n+    @Test public void testIntegerSpinnerEditorUpdateOnConverterChange() {\n+        intSpinner = new Spinner<>(0, 100, 50, 1);\n+        intSpinner.setEditable(true);\n+\n+        assertEquals(\"50\", intSpinner.getEditor().getText());\n+\n+        intSpinner.getValueFactory().setConverter(new StringConverter<Integer>() {\n+            @Override\n+            public String toString(Integer value) {\n+                return value == null ? \"\" : value.toString() + \"%\";\n+            }\n+\n+            @Override\n+            public Integer fromString(String value) {\n+                if (value == null) {\n+                    return null;\n+                }\n+\n+                String valueWithoutUnits = value.replaceAll(\"%\", \"\").trim();\n+                return valueWithoutUnits.isEmpty() ? 0 : Integer.valueOf(valueWithoutUnits);\n+            }\n+        });\n+\n+        assertEquals(\"50%\", intSpinner.getEditor().getText());\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/SpinnerTest.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"modified"}]}