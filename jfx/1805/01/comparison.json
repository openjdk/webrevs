{"files":[{"patch":"@@ -56,1 +56,0 @@\n-\n@@ -58,0 +57,5 @@\n+\n+    \/\/ These fields track state for the Keyman input method.\n+    BOOL keymanActive;\n+    BOOL sendKeyEvent;\n+    unichar insertTextChar;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassView3D.h","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -252,0 +252,4 @@\n+\n+        keymanActive = NO;\n+        sendKeyEvent = NO;\n+        insertTextChar = 0;\n@@ -516,0 +520,10 @@\n+\n+    \/\/ The Keyman input method expects us to ignore key events that don't lead\n+    \/\/ to NSTextInputClient calls. For Keyman the NSEvent refers to some\n+    \/\/ internal Roman layout and not the chosen Keyman layout. The correct\n+    \/\/ Keyman character will be passed to insertText. We detect this input\n+    \/\/ method using the same method as AWT.\n+    keymanActive = [self.inputContext.selectedKeyboardInputSource containsString: @\"keyman\"];\n+    sendKeyEvent = NO;\n+    insertTextChar = 0;\n+\n@@ -533,0 +547,10 @@\n+    }\n+    else if (keymanActive) {\n+        \/\/ We do not call registerKeyEvent: for keyman which means shortcuts\n+        \/\/ based on symbols and punctuation (like Cmd++) will not work\n+        \/\/ correctly. We don't see changes to the Keyman layout so\n+        \/\/ registerKeyEvent: would accumulate stale information. Keyman does\n+        \/\/ not set marked text so we don't need to check nsAttrBuffer.\n+        if (sendKeyEvent) {\n+            wasConsumed = [self->_delegate sendJavaKeyEvent:theEvent isDown:YES character:insertTextChar];\n+        }\n@@ -535,1 +559,1 @@\n-        wasConsumed = [self->_delegate sendJavaKeyEvent:theEvent isDown:YES];\n+        wasConsumed = [self->_delegate sendJavaKeyEvent:theEvent isDown:YES character:0];\n@@ -538,0 +562,2 @@\n+    keymanActive = NO;\n+\n@@ -550,1 +576,1 @@\n-    [self->_delegate sendJavaKeyEvent:theEvent isDown:NO];\n+    [self->_delegate sendJavaKeyEvent:theEvent isDown:NO character:insertTextChar];\n@@ -769,1 +795,1 @@\n-- (void)commitString:(NSString*)aString\n+- (void)commitString:(id)aString\n@@ -780,0 +806,3 @@\n+    if (keymanActive) {\n+        sendKeyEvent = YES;\n+    }\n@@ -790,0 +819,12 @@\n+    if (keymanActive) {\n+        if ([aString isKindOfClass: [NSString class]]) {\n+            NSString* nsString = (NSString*)aString;\n+            \/\/ A longer string would be sent out above as an InputMethod\n+            \/\/ commit rather than a multi-unit KeyEvent.\n+            if (nsString.length == 1) {\n+                insertTextChar = [nsString characterAtIndex: 0];\n+                sendKeyEvent = YES;\n+            }\n+        }\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassView3D.m","additions":44,"deletions":3,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-- (BOOL)sendJavaKeyEvent:(NSEvent *)event isDown:(BOOL)isDown;\n+- (BOOL)sendJavaKeyEvent:(NSEvent *)event isDown:(BOOL)isDown character:(unichar)textChar;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassViewDelegate.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -679,1 +679,1 @@\n-- (BOOL)sendJavaKeyEvent:(NSEvent *)theEvent isDown:(BOOL)isDown\n+- (BOOL)sendJavaKeyEvent:(NSEvent *)theEvent isDown:(BOOL)isDown character:(unichar)textChar\n@@ -684,1 +684,0 @@\n-    jcharArray jKeyChars = GetJavaKeyChars(env, theEvent);\n@@ -686,0 +685,11 @@\n+    jcharArray jKeyChars;\n+    if (textChar != 0) {\n+        jchar jc[1] = { textChar };\n+        jKeyChars = (*env)->NewCharArray(env, 1);\n+        if (jKeyChars == NULL) {\n+            return YES;\n+        }\n+        (*env)->SetCharArrayRegion(env, jKeyChars, 0, 1, jc);\n+    } else {\n+        jKeyChars = GetJavaKeyChars(env, theEvent);\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassViewDelegate.m","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}