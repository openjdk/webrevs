{"files":[{"patch":"@@ -1,1 +1,1 @@\n-## xmlsoft.org: libxslt v1.1.39\n+## xmlsoft.org: libxslt v1.1.42\n","filename":"modules\/javafx.web\/src\/main\/legal\/libxslt.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-#define PACKAGE_STRING \"libxslt 1.1.39\"\n+#define PACKAGE_STRING \"libxslt 1.1.42\"\n@@ -116,1 +116,1 @@\n-#define PACKAGE_VERSION \"1.1.39\"\n+#define PACKAGE_VERSION \"1.1.42\"\n@@ -212,1 +212,1 @@\n-#define VERSION \"1.1.39\"\n+#define VERSION \"1.1.42\"\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/linux\/config.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-#define PACKAGE_STRING \"libxslt 1.1.39\"\n+#define PACKAGE_STRING \"libxslt 1.1.42\"\n@@ -116,1 +116,1 @@\n-#define PACKAGE_VERSION \"1.1.39\"\n+#define PACKAGE_VERSION \"1.1.42\"\n@@ -212,1 +212,1 @@\n-#define VERSION \"1.1.39\"\n+#define VERSION \"1.1.42\"\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/mac\/config.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,7 +45,0 @@\n-cleantar:\n-\t@(rm -f libxslt*.tar.gz)\n-\n-rpm: cleantar\n-\t@(unset CDPATH ; $(MAKE) dist && rpmbuild -ta $(distdir).tar.gz)\n-\n-\n@@ -59,3 +52,0 @@\n-m4datadir = $(datadir)\/aclocal\n-dist_m4data_DATA = libxslt.m4\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/Makefile.am","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n-m4_define([MICRO_VERSION], [39])\n+m4_define([MICRO_VERSION], [42])\n@@ -24,1 +24,1 @@\n-LIBEXSLT_MICRO_VERSION=21\n+LIBEXSLT_MICRO_VERSION=23\n@@ -256,9 +256,0 @@\n-AC_ARG_WITH(mem_debug, [  --with-mem-debug        Add the memory debugging module (off)])\n-if test \"$with_mem_debug\" = \"yes\" ; then\n-    echo Enabling memory debug support\n-    WITH_MEM_DEBUG=1\n-else    \n-    WITH_MEM_DEBUG=0\n-fi\n-AC_SUBST(WITH_MEM_DEBUG)\n-\n@@ -571,1 +562,0 @@\n-libxslt.spec\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/configure.ac","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,2 +91,0 @@\n-    if (pctxt->directory == NULL)\n-        pctxt->directory = xmlParserGetDirectory((const char *) URI);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/documents.c","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -418,0 +418,1 @@\n+#if LIBXML_VERSION < 21300\n@@ -428,0 +429,1 @@\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/extensions.c","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,2 @@\n-xsltDocumentFunctionLoadDocument(xmlXPathParserContextPtr ctxt, xmlChar* URI)\n+xsltDocumentFunctionLoadDocument(xmlXPathParserContextPtr ctxt,\n+                                 const xmlChar* URI, const xmlChar *fragment)\n@@ -102,2 +103,0 @@\n-    xmlURIPtr uri;\n-    xmlChar *fragment;\n@@ -109,0 +108,2 @@\n+    (void) xptrctxt;\n+\n@@ -113,2 +114,1 @@\n-        valuePush(ctxt, xmlXPathNewNodeSet(NULL));\n-        return;\n+        goto out_fragment;\n@@ -117,21 +117,1 @@\n-    uri = xmlParseURI((const char *) URI);\n-    if (uri == NULL) {\n-        xsltTransformError(tctxt, NULL, NULL,\n-            \"document() : failed to parse URI\\n\");\n-        valuePush(ctxt, xmlXPathNewNodeSet(NULL));\n-        return;\n-    }\n-\n-    \/*\n-     * check for and remove fragment identifier\n-     *\/\n-    fragment = (xmlChar *)uri->fragment;\n-    if (fragment != NULL) {\n-        xmlChar *newURI;\n-        uri->fragment = NULL;\n-        newURI = xmlSaveUri(uri);\n-        idoc = xsltLoadDocument(tctxt, newURI);\n-        xmlFree(newURI);\n-    } else\n-        idoc = xsltLoadDocument(tctxt, URI);\n-    xmlFreeURI(uri);\n+    idoc = xsltLoadDocument(tctxt, URI);\n@@ -150,6 +130,1 @@\n-            valuePush(ctxt, xmlXPathNewNodeSet(NULL));\n-\n-            if (fragment != NULL)\n-                xmlFree(fragment);\n-\n-            return;\n+            goto out_fragment;\n@@ -167,1 +142,1 @@\n-    xptrctxt = xmlXPtrNewContext(doc, NULL, NULL);\n+    xptrctxt = xmlXPathNewContext(doc);\n@@ -202,1 +177,0 @@\n-    xmlFree(fragment);\n@@ -218,1 +192,2 @@\n-\n+    xmlChar *newURI = NULL;\n+    xmlChar *fragment = NULL;\n@@ -300,0 +275,3 @@\n+        xmlURIPtr uri;\n+        const xmlChar *url;\n+\n@@ -301,0 +279,22 @@\n+\n+        url = obj->stringval;\n+\n+        uri = xmlParseURI((const char *) url);\n+        if (uri == NULL) {\n+            xsltTransformError(tctxt, NULL, NULL,\n+                \"document() : failed to parse URI '%s'\\n\", url);\n+            valuePush(ctxt, xmlXPathNewNodeSet(NULL));\n+            goto error;\n+        }\n+\n+        \/*\n+         * check for and remove fragment identifier\n+         *\/\n+        fragment = (xmlChar *)uri->fragment;\n+        if (fragment != NULL) {\n+            uri->fragment = NULL;\n+            newURI = xmlSaveUri(uri);\n+            url = newURI;\n+        }\n+        xmlFreeURI(uri);\n+\n@@ -321,1 +321,2 @@\n-        URI = xmlBuildURI(obj->stringval, base);\n+\n+        URI = xmlBuildURI(url, base);\n@@ -334,1 +335,1 @@\n-            xsltDocumentFunctionLoadDocument( ctxt, URI );\n+            xsltDocumentFunctionLoadDocument(ctxt, URI, fragment);\n@@ -338,0 +339,4 @@\n+\n+error:\n+    xmlFree(newURI);\n+    xmlFree(fragment);\n@@ -698,1 +703,1 @@\n-    size_t size, nsPrefixSize;\n+    size_t size, nsPrefixSize = 0;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/functions.c","additions":43,"deletions":38,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -13,0 +13,13 @@\n+\/*\n+ * These macros must be defined before including system headers.\n+ * Do not add any #include directives above this block.\n+ *\/\n+#ifndef NO_LARGEFILE_SOURCE\n+  #ifndef _LARGEFILE_SOURCE\n+    #define _LARGEFILE_SOURCE\n+  #endif\n+  #ifndef _FILE_OFFSET_BITS\n+    #define _FILE_OFFSET_BITS 64\n+  #endif\n+#endif\n+\n@@ -36,0 +49,6 @@\n+#ifdef __GNUC__\n+#define ATTRIBUTE_UNUSED __attribute__((unused))\n+#else\n+#define ATTRIBUTE_UNUSED\n+#endif\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/libxslt.h","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -425,0 +425,13 @@\n+    if (xmlStrstr(URL, BAD_CAST \":\/\/\") == NULL) {\n+        check = xsltGetSecurityPrefs(sec, XSLT_SECPREF_READ_FILE);\n+        if (check != NULL) {\n+            ret = check(sec, ctxt, (const char *) URL);\n+            if (ret == 0) {\n+                xsltTransformError(ctxt, NULL, NULL,\n+                             \"Local file read for %s refused\\n\", URL);\n+                return(0);\n+            }\n+        }\n+        return(1);\n+    }\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/security.c","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1014,3 +1014,3 @@\n-                * Freeing is not handled there anymore.\n-                * QUESTION TODO: What does the above comment mean?\n-                *\/\n+                 * This stops older libxml2 versions from freeing the nodes\n+                 * in the tree.\n+                 *\/\n@@ -1235,1 +1235,5 @@\n-                result->boolval = 0; \/* Freeing is not handled there anymore *\/\n+                \/*\n+                 * This stops older libxml2 versions from freeing the nodes\n+                 * in the tree.\n+                 *\/\n+                result->boolval = 0;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/variables.c","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -4463,0 +4463,2 @@\n+        cctxt->style->principal->opCount += 1;\n+\n@@ -4503,1 +4505,5 @@\n-                        xmlAddPrevSibling(cur, tmp);\n+                        if (xmlAddPrevSibling(cur, tmp) == NULL) {\n+                            xsltTransformError(ctxt, NULL, NULL,\n+                                    \"out of memory\\n\");\n+                            xmlFreeNode(tmp);\n+                        }\n@@ -4857,0 +4863,2 @@\n+            style->principal->opCount += 1;\n+\n@@ -4900,0 +4908,2 @@\n+        style->principal->opCount += 1;\n+\n@@ -4989,1 +4999,5 @@\n-                            xmlAddPrevSibling(cur, text);\n+                            if (xmlAddPrevSibling(cur, text) == NULL) {\n+                                xsltTransformError(NULL, style, NULL,\n+                                        \"out of memory\\n\");\n+                                xmlFreeNode(text);\n+                            }\n@@ -5369,0 +5383,9 @@\n+    if (style->principal->opLimit > 0) {\n+        if (style->principal->opCount > style->principal->opLimit) {\n+            xsltTransformError(NULL, style, NULL,\n+                \"XSLT parser operation limit exceeded\\n\");\n+            style->errors++;\n+            return;\n+        }\n+    }\n+\n@@ -6093,0 +6116,9 @@\n+    if (style->principal->opLimit > 0) {\n+        if (style->principal->opCount > style->principal->opLimit) {\n+            xsltTransformError(NULL, style, NULL,\n+                \"XSLT parser operation limit exceeded\\n\");\n+            style->errors++;\n+            return;\n+        }\n+    }\n+\n@@ -6116,0 +6148,2 @@\n+            style->principal->opCount += 1;\n+\n@@ -6132,0 +6166,2 @@\n+        style->principal->opCount += 1;\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/xslt.c","additions":38,"deletions":2,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -1637,0 +1637,3 @@\n+\n+    unsigned long opLimit;\n+    unsigned long opCount;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/xsltInternals.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -23,1 +23,1 @@\n-#define LIBXSLT_DOTTED_VERSION \"1.1.39\"\n+#define LIBXSLT_DOTTED_VERSION \"1.1.42\"\n@@ -30,1 +30,1 @@\n-#define LIBXSLT_VERSION 10139\n+#define LIBXSLT_VERSION 10142\n@@ -37,1 +37,1 @@\n-#define LIBXSLT_VERSION_STRING \"10139\"\n+#define LIBXSLT_VERSION_STRING \"10142\"\n@@ -57,20 +57,0 @@\n-#if 0\n-\/**\n- * DEBUG_MEMORY:\n- *\n- * should be activated only when debugging libxslt. It replaces the\n- * allocator with a collect and debug shell to the libc allocator.\n- * Use configure --with-mem-debug to activate it on both library\n- *\/\n-#define DEBUG_MEMORY\n-\n-\/**\n- * DEBUG_MEMORY_LOCATION:\n- *\n- * should be activated only when debugging libxslt.\n- * DEBUG_MEMORY_LOCATION should be activated only when libxml has\n- * been configured with --with-debug-mem too\n- *\/\n-#define DEBUG_MEMORY_LOCATION\n-#endif\n-\n@@ -135,14 +115,1 @@\n-#define LIBXSLT_DEFAULT_PLUGINS_PATH() \"\/usr\/local\/lib\/libxslt-plugins\"\n-#endif\n-\n-\/**\n- * ATTRIBUTE_UNUSED:\n- *\n- * This macro is used to flag unused function parameters to GCC\n- *\/\n-#ifdef __GNUC__\n-#ifndef ATTRIBUTE_UNUSED\n-#define ATTRIBUTE_UNUSED __attribute__((unused))\n-#endif\n-#else\n-#define ATTRIBUTE_UNUSED\n+#define LIBXSLT_DEFAULT_PLUGINS_PATH() \"NULL\"\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/xsltconfig.h","additions":4,"deletions":37,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -57,20 +57,0 @@\n-#if @WITH_MEM_DEBUG@\n-\/**\n- * DEBUG_MEMORY:\n- *\n- * should be activated only when debugging libxslt. It replaces the\n- * allocator with a collect and debug shell to the libc allocator.\n- * Use configure --with-mem-debug to activate it on both library\n- *\/\n-#define DEBUG_MEMORY\n-\n-\/**\n- * DEBUG_MEMORY_LOCATION:\n- *\n- * should be activated only when debugging libxslt.\n- * DEBUG_MEMORY_LOCATION should be activated only when libxml has\n- * been configured with --with-debug-mem too\n- *\/\n-#define DEBUG_MEMORY_LOCATION\n-#endif\n-\n@@ -138,13 +118,0 @@\n-\/**\n- * ATTRIBUTE_UNUSED:\n- *\n- * This macro is used to flag unused function parameters to GCC\n- *\/\n-#ifdef __GNUC__\n-#ifndef ATTRIBUTE_UNUSED\n-#define ATTRIBUTE_UNUSED __attribute__((unused))\n-#endif\n-#else\n-#define ATTRIBUTE_UNUSED\n-#endif\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/xsltconfig.h.in","additions":0,"deletions":33,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-        locale = newlocale(LC_COLLATE_MASK, localeName, NULL);\n+        locale = newlocale(LC_ALL_MASK, localeName, NULL);\n@@ -158,1 +158,1 @@\n-    locale = newlocale(LC_COLLATE_MASK, localeName, NULL);\n+    locale = newlocale(LC_ALL_MASK, localeName, NULL);\n@@ -176,1 +176,1 @@\n-    locale = newlocale(LC_COLLATE_MASK, localeName, NULL);\n+    locale = newlocale(LC_ALL_MASK, localeName, NULL);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/xsltlocale.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1753,1 +1753,1 @@\n-        xmlCharEncodingHandlerPtr encoder;\n+        xmlCharEncodingHandlerPtr encoder = NULL;\n@@ -1755,5 +1755,4 @@\n-        encoder = xmlFindCharEncodingHandler((char *)encoding);\n-        if ((encoder != NULL) &&\n-            (xmlStrEqual((const xmlChar *)encoder->name,\n-                         (const xmlChar *) \"UTF-8\")))\n-            encoder = NULL;\n+        \/* Don't use UTF-8 dummy encoder *\/\n+        if ((xmlStrcasecmp(encoding, BAD_CAST \"UTF-8\") != 0) &&\n+            (xmlStrcasecmp(encoding, BAD_CAST \"UTF8\") != 0))\n+            encoder = xmlFindCharEncodingHandler((char *) encoding);\n@@ -1796,1 +1795,1 @@\n-        xmlCharEncodingHandlerPtr encoder;\n+        xmlCharEncodingHandlerPtr encoder = NULL;\n@@ -1798,5 +1797,4 @@\n-        encoder = xmlFindCharEncodingHandler((char *)encoding);\n-        if ((encoder != NULL) &&\n-            (xmlStrEqual((const xmlChar *)encoder->name,\n-                         (const xmlChar *) \"UTF-8\")))\n-            encoder = NULL;\n+        \/* Don't use UTF-8 dummy encoder *\/\n+        if ((xmlStrcasecmp(encoding, BAD_CAST \"UTF-8\") != 0) &&\n+            (xmlStrcasecmp(encoding, BAD_CAST \"UTF8\") != 0))\n+            encoder = xmlFindCharEncodingHandler((char *) encoding);\n@@ -1840,1 +1838,1 @@\n-        xmlCharEncodingHandlerPtr encoder;\n+        xmlCharEncodingHandlerPtr encoder = NULL;\n@@ -1842,5 +1840,4 @@\n-        encoder = xmlFindCharEncodingHandler((char *)encoding);\n-        if ((encoder != NULL) &&\n-            (xmlStrEqual((const xmlChar *)encoder->name,\n-                         (const xmlChar *) \"UTF-8\")))\n-            encoder = NULL;\n+        \/* Don't use UTF-8 dummy encoder *\/\n+        if ((xmlStrcasecmp(encoding, BAD_CAST \"UTF-8\") != 0) &&\n+            (xmlStrcasecmp(encoding, BAD_CAST \"UTF8\") != 0))\n+            encoder = xmlFindCharEncodingHandler((char *) encoding);\n@@ -1883,1 +1880,1 @@\n-        xmlCharEncodingHandlerPtr encoder;\n+        xmlCharEncodingHandlerPtr encoder = NULL;\n@@ -1885,5 +1882,4 @@\n-        encoder = xmlFindCharEncodingHandler((char *)encoding);\n-        if ((encoder != NULL) &&\n-            (xmlStrEqual((const xmlChar *)encoder->name,\n-                         (const xmlChar *) \"UTF-8\")))\n-            encoder = NULL;\n+        \/* Don't use UTF-8 dummy encoder *\/\n+        if ((xmlStrcasecmp(encoding, BAD_CAST \"UTF-8\") != 0) &&\n+            (xmlStrcasecmp(encoding, BAD_CAST \"UTF8\") != 0))\n+            encoder = xmlFindCharEncodingHandler((char *) encoding);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/libxslt\/xsltutils.c","additions":20,"deletions":24,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -183,1 +183,0 @@\n-\tvf.WriteLine(\"WITH_MEM_DEBUG=\" + (withMemDebug? \"1\" : \"0\"));\n@@ -233,2 +232,0 @@\n-\t\t} else if (s.search(\/\\@WITH_MEM_DEBUG\\@\/) != -1) {\n-\t\t\tof.WriteLine(s.replace(\/\\@WITH_MEM_DEBUG\\@\/, withMemDebug? \"1\" : \"0\"));\n@@ -306,2 +303,0 @@\n-\t\t} else if (s.search(\/\\@WITH_MEM_DEBUG\\@\/) != -1) {\n-\t\t\tof.WriteLine(s.replace(\/\\@WITH_MEM_DEBUG\\@\/, withMemDebug? \"1\" : \"0\"));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxslt\/src\/win32\/configure.js","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}