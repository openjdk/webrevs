{"files":[{"patch":"@@ -66,0 +66,34 @@\n+    private static final CountDownLatch keepAliveLatch = new CountDownLatch(1);\n+\n+    \/**\n+     * Starts a non-daemon KeepAlive thread to ensure that the\n+     * JavaFX toolkit keeps running until the toolkit exits. On\n+     * other platforms, the JavaFX Application Thread is created\n+     * as a non-daemon Java thread when the toolkit starts. On\n+     * macOS, we use the existing AppKit thread as the JavaFX\n+     * Application thread, and attach it to the JVM as a daemon\n+     * thread. In the case of Swing \/ JavaFX interop, AWT attaches\n+     * the AppKit thread as a daemon thread. Since there is no other\n+     * non-daemon thread, we create one so that the JavaFX toolkit\n+     * will not exit prematurely.\n+     *\/\n+    private static void startKeepAliveThread() {\n+        Thread thr = new Thread(() -> {\n+            try {\n+                keepAliveLatch.await();\n+            } catch (InterruptedException ex) {\n+                throw new RuntimeException(\"Unexpected exception: \", ex);\n+            }\n+        });\n+        thr.setName(\"JavaFX-KeepAlive\");\n+        thr.setDaemon(false);\n+        thr.start();\n+    }\n+\n+    \/**\n+     * Terminates the KeepAlive thread.\n+     *\/\n+    private static void finishKeepAliveThread() {\n+        keepAliveLatch.countDown();\n+    }\n+\n@@ -107,0 +141,4 @@\n+        \/\/ Create a non-daemon KeepAlive thread so the FX toolkit\n+        \/\/ doesn't exit prematurely.\n+        startKeepAliveThread();\n+\n@@ -138,0 +176,1 @@\n+        finishKeepAliveThread();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacApplication.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -539,2 +539,1 @@\n-    jint error = (*jVM)->AttachCurrentThread(jVM, (void **)&jEnv, NULL);\n-    \/\/jint error = (*jVM)->AttachCurrentThreadAsDaemon(jVM, (void **)&jEnv, NULL);\n+    jint error = (*jVM)->AttachCurrentThreadAsDaemon(jVM, (void **)&jEnv, NULL);\n@@ -739,6 +738,0 @@\n-            jint err = (*jVM)->DetachCurrentThread(jVM);\n-            if (err < 0)\n-            {\n-                NSLog(@\"Unable to detach from JVM. Error code: %d\\n\", (int)err);\n-            }\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassApplication.m","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -103,0 +103,3 @@\n+        new TestData(\"TestAWTAppDaemon\", ERROR_NONE),\n+        new TestData(\"TestAppDaemon\", ERROR_NONE),\n+        new TestData(\"TestAppPlatformExitAWT\", ERROR_NONE),\n","filename":"tests\/system\/src\/test\/java\/test\/launchertest\/MainLauncherTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,22 +45,0 @@\n-    \/\/ Timeout in milliseconds (must be at least 15 seconds)\n-    private static final int TIMEOUT = 20000;\n-\n-    public static void sleep(long msec) {\n-        try {\n-            Thread.sleep(msec);\n-        } catch (InterruptedException ex) {\n-            ex.printStackTrace();\n-            System.exit(ERROR_UNEXPECTED_EXCEPTION);\n-        }\n-    }\n-\n-    public static void setupTimeoutThread() {\n-        \/\/ Timeout thread\n-        Thread th = new Thread(() -> {\n-            sleep(TIMEOUT);\n-            System.exit(ERROR_TIMEOUT);\n-        });\n-        th.setDaemon(true);\n-        th.start();\n-    }\n-\n@@ -80,1 +58,1 @@\n-            sleep(1000);\n+            Util.sleep(1000);\n@@ -90,1 +68,1 @@\n-        setupTimeoutThread();\n+        Util.setupTimeoutThread();\n@@ -94,1 +72,1 @@\n-        sleep(500);\n+        Util.sleep(500);\n","filename":"tests\/system\/src\/test\/java\/test\/launchertest\/PlatformExitApp.java","additions":3,"deletions":25,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.launchertest;\n+\n+import java.awt.BorderLayout;\n+\n+import javafx.application.Platform;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+import static test.launchertest.Constants.*;\n+\n+\/**\n+ * Test that an AWT app that starts the JavaFX Platform with only daemon\n+ * threads doesn't exit prematurely. It should remain alive until\n+ * Platform.exit is called.\n+ *\n+ * This is launched by MainLauncherTest.\n+ *\/\n+public class TestAWTAppDaemon {\n+\n+    private static void createSwing() {\n+        \/\/ Start up FX platform\n+        Platform.startup(() -> {});\n+\n+        final JFrame frame = new JFrame(\"TestAWTAppDaemon\");\n+        frame.setLayout(new BorderLayout());\n+\n+        JPanel swingPanel = new JPanel();\n+        frame.getContentPane().add(swingPanel, BorderLayout.CENTER);\n+\n+        \/\/ show frame\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+\n+        \/\/ Show window for 1 second then close and dispost it\n+        Util.sleep(1000);\n+        frame.setVisible(false);\n+        frame.dispose();\n+\n+        \/\/ Sleep for 5 seconds to ensure that we don't exit prematurely,\n+        \/\/ then exit normally.\n+        Thread thr = new Thread(() -> {\n+            Util.sleep(5000);\n+            System.exit(ERROR_NONE);\n+        });\n+        thr.setDaemon(true);\n+        thr.start();\n+    }\n+\n+    \/**\n+     * @param args the command line arguments\n+     *\/\n+    public static void main(String[] args) {\n+        Util.setupTimeoutThread();\n+        SwingUtilities.invokeLater(TestAWTAppDaemon::createSwing);\n+    }\n+\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/launchertest\/TestAWTAppDaemon.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.launchertest;\n+\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.stage.Stage;\n+import javax.swing.JDialog;\n+import javax.swing.SwingUtilities;\n+\n+import static test.launchertest.Constants.*;\n+\n+\/**\n+ * Test application launcher with daemon threads to verify that the\n+ * the platform doesn't exit prematurely. It should remain alive until\n+ * Platform.exit is called.\n+ *\n+ * This is launched by MainLauncherTest.\n+ *\/\n+public class TestAppDaemon extends Application {\n+\n+    @Override\n+    public void stop() {\n+        \/\/ If we get here then the test passed.\n+        System.exit(ERROR_NONE);\n+    }\n+\n+    @Override\n+    public void start(Stage st) {\n+        \/\/ Wait for 3 seconds then call Platform.exit\n+        Thread thr = new Thread(() -> {\n+            Util.sleep(3000);\n+            Platform.exit();\n+        });\n+        thr.setDaemon(true);\n+        thr.start();\n+    }\n+\n+    \/**\n+     * @param args the command line arguments\n+     *\/\n+    public static void main(String[] args) {\n+        Util.setupTimeoutThread();\n+\n+        \/\/ Launch the application from a daemon thread\n+        Thread thr = new Thread(() -> Application.launch(args));\n+        thr.setDaemon(true);\n+        thr.start();\n+    }\n+\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/launchertest\/TestAppDaemon.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.launchertest;\n+\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.stage.Stage;\n+import javax.swing.JDialog;\n+import javax.swing.SwingUtilities;\n+\n+import static test.launchertest.Constants.*;\n+\n+\/**\n+ * Test application, also using AWT, that calls Platform.exit and then\n+ * tries to show an AWT window. The test might hang after the call to\n+ * Platform.exit, but should not crash.\n+ *\n+ * This is launched by MainLauncherTest.\n+ *\/\n+public class TestAppPlatformExitAWT extends Application {\n+\n+    private void createSwing() {\n+        JDialog d = new JDialog();\n+        Platform.runLater(()-> {\n+            Platform.exit();\n+            SwingUtilities.invokeLater(() -> d.setVisible(true));\n+        });\n+    }\n+\n+    @Override\n+    public void stop() {\n+        \/\/ Sleep for 5 seconds to ensure no crash, then exit normally.\n+        Thread thr = new Thread(() -> {\n+            Util.sleep(5000);\n+            System.exit(ERROR_NONE);\n+        });\n+        thr.setDaemon(true);\n+        thr.start();\n+    }\n+\n+    @Override\n+    public void start(Stage st) {\n+        SwingUtilities.invokeLater(this::createSwing);\n+    }\n+\n+    \/**\n+     * @param args the command line arguments\n+     *\/\n+    public static void main(String[] args) {\n+        Util.setupTimeoutThread();\n+        Application.launch(args);\n+    }\n+\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/launchertest\/TestAppPlatformExitAWT.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.launchertest;\n+\n+import static test.launchertest.Constants.*;\n+\n+public class Util {\n+\n+    \/\/ Timeout in milliseconds (must be at least 15 seconds)\n+    private static final int TIMEOUT = 20000;\n+\n+    public static void sleep(long msec) {\n+        try {\n+            Thread.sleep(msec);\n+        } catch (InterruptedException ex) {\n+            ex.printStackTrace();\n+            System.exit(ERROR_UNEXPECTED_EXCEPTION);\n+        }\n+    }\n+\n+    public static void setupTimeoutThread() {\n+        \/\/ Timeout thread\n+        Thread th = new Thread(() -> {\n+            sleep(TIMEOUT);\n+            System.exit(ERROR_TIMEOUT);\n+        });\n+        th.setDaemon(true);\n+        th.start();\n+    }\n+\n+    \/\/ No need to ever create an instance of this class\n+    private Util() {}\n+\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/launchertest\/Util.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}