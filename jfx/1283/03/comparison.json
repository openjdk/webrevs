{"files":[{"patch":"@@ -43,0 +43,2 @@\n+import java.util.HashMap;\n+import java.util.Map;\n@@ -48,0 +50,1 @@\n+import javafx.beans.WeakInvalidationListener;\n@@ -60,0 +63,2 @@\n+    private final Map<Menu, ListChangeListener> menuListeners = new HashMap<>();\n+    private final Map<ListChangeListener, ObservableList> listenerItems = new HashMap<>();\n@@ -114,0 +119,8 @@\n+        ListChangeListener lcl = menuListeners.get(menu);\n+        if (lcl != null) {\n+            ObservableList target = listenerItems.get(lcl);\n+            target.removeListener(lcl);\n+            menuListeners.remove(menu);\n+            listenerItems.remove(lcl);\n+        }\n+\n@@ -116,1 +129,0 @@\n-\n@@ -119,0 +131,1 @@\n+                menu.remove(i);\n@@ -151,1 +164,27 @@\n-        filteredItems.addListener((ListChangeListener.Change<? extends MenuItemBase> change) -> {\n+        ListChangeListener menuItemListener = createListener(glassMenu);\n+        filteredItems.addListener(menuItemListener);\n+        menuListeners.put(glassMenu, menuItemListener);\n+        listenerItems.put(menuItemListener, filteredItems);\n+\n+        for (MenuItemBase item : items) {\n+            if (item instanceof MenuBase) {\n+                \/\/ submenu\n+                addMenu(glassMenu, (MenuBase)item);\n+            } else {\n+                \/\/ menu item\n+                addMenuItem(glassMenu, item);\n+            }\n+        }\n+        glassMenu.setPixels(getPixels(mb));\n+\n+        setMenuBindings(glassMenu, mb);\n+\n+        if (parent != null) {\n+            parent.insert(glassMenu, pos);\n+        } else {\n+            glassSystemMenuBar.insert(glassMenu, pos);\n+        }\n+    }\n+\n+    private ListChangeListener<MenuItemBase> createListener(final Menu glassMenu) {\n+        return (ListChangeListener.Change<? extends MenuItemBase> change) -> {\n@@ -172,20 +211,1 @@\n-        });\n-\n-        for (MenuItemBase item : items) {\n-            if (item instanceof MenuBase) {\n-                \/\/ submenu\n-                addMenu(glassMenu, (MenuBase)item);\n-            } else {\n-                \/\/ menu item\n-                addMenuItem(glassMenu, item);\n-            }\n-        }\n-        glassMenu.setPixels(getPixels(mb));\n-\n-        setMenuBindings(glassMenu, mb);\n-\n-        if (parent != null) {\n-            parent.insert(glassMenu, pos);\n-        } else {\n-            glassSystemMenuBar.insert(glassMenu, pos);\n-        }\n+        };\n@@ -194,0 +214,1 @@\n+\n@@ -195,3 +216,3 @@\n-        mb.textProperty().addListener(valueModel -> glassMenu.setTitle(parseText(mb)));\n-        mb.disableProperty().addListener(valueModel -> glassMenu.setEnabled(!mb.isDisable()));\n-        mb.mnemonicParsingProperty().addListener(valueModel -> glassMenu.setTitle(parseText(mb)));\n+        mb.textProperty().addListener(new WeakInvalidationListener(valueModel -> glassMenu.setTitle(parseText(mb))));\n+        mb.disableProperty().addListener(new WeakInvalidationListener(valueModel -> glassMenu.setEnabled(!mb.isDisable())));\n+        mb.mnemonicParsingProperty().addListener(new WeakInvalidationListener(valueModel -> glassMenu.setTitle(parseText(mb))));\n@@ -252,1 +273,1 @@\n-            menuitem.textProperty().addListener(valueModel -> glassSubMenuItem.setTitle(parseText(menuitem)));\n+            menuitem.textProperty().addListener(new WeakInvalidationListener(valueModel -> glassSubMenuItem.setTitle(parseText(menuitem))));\n@@ -255,1 +276,1 @@\n-            menuitem.graphicProperty().addListener(valueModel -> {\n+            menuitem.graphicProperty().addListener(new WeakInvalidationListener(valueModel -> {\n@@ -257,1 +278,1 @@\n-            });\n+            }));\n@@ -260,1 +281,1 @@\n-            menuitem.disableProperty().addListener(valueModel -> glassSubMenuItem.setEnabled(!menuitem.isDisable()));\n+            menuitem.disableProperty().addListener(new WeakInvalidationListener(valueModel -> glassSubMenuItem.setEnabled(!menuitem.isDisable())));\n@@ -263,1 +284,1 @@\n-            menuitem.acceleratorProperty().addListener(valueModel -> setShortcut(glassSubMenuItem, menuitem));\n+            menuitem.acceleratorProperty().addListener(new WeakInvalidationListener(valueModel -> setShortcut(glassSubMenuItem, menuitem)));\n@@ -265,1 +286,1 @@\n-            menuitem.mnemonicParsingProperty().addListener(valueModel -> glassSubMenuItem.setTitle(parseText(menuitem)));\n+            menuitem.mnemonicParsingProperty().addListener(new WeakInvalidationListener(valueModel -> glassSubMenuItem.setTitle(parseText(menuitem))));\n@@ -270,1 +291,1 @@\n-                checkItem.selectedProperty().addListener(valueModel -> glassSubMenuItem.setChecked(checkItem.isSelected()));\n+                checkItem.selectedProperty().addListener(new WeakInvalidationListener(valueModel -> glassSubMenuItem.setChecked(checkItem.isSelected())));\n@@ -274,1 +295,1 @@\n-                radioItem.selectedProperty().addListener(valueModel -> glassSubMenuItem.setChecked(radioItem.isSelected()));\n+                radioItem.selectedProperty().addListener(new WeakInvalidationListener(valueModel -> glassSubMenuItem.setChecked(radioItem.isSelected())));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GlassSystemMenu.java","additions":54,"deletions":33,"binary":false,"changes":87,"status":"modified"}]}