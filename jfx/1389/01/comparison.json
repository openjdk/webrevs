{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,9 +28,0 @@\n-import com.sun.javafx.css.StyleManager;\n-import com.sun.javafx.scene.NodeHelper;\n-import javafx.css.converter.BooleanConverter;\n-import javafx.css.converter.EnumConverter;\n-import javafx.css.converter.InsetsConverter;\n-import javafx.css.converter.PaintConverter;\n-import javafx.css.converter.SizeConverter;\n-import javafx.css.converter.StringConverter;\n-\n@@ -40,1 +31,2 @@\n-\n+import javafx.beans.DefaultProperty;\n+import javafx.beans.binding.Bindings;\n@@ -44,0 +36,2 @@\n+import javafx.beans.property.ReadOnlyBooleanProperty;\n+import javafx.beans.property.ReadOnlyBooleanWrapper;\n@@ -49,0 +43,15 @@\n+import javafx.css.CssMetaData;\n+import javafx.css.FontCssMetaData;\n+import javafx.css.StyleOrigin;\n+import javafx.css.Styleable;\n+import javafx.css.StyleableBooleanProperty;\n+import javafx.css.StyleableDoubleProperty;\n+import javafx.css.StyleableObjectProperty;\n+import javafx.css.StyleableProperty;\n+import javafx.css.StyleableStringProperty;\n+import javafx.css.converter.BooleanConverter;\n+import javafx.css.converter.EnumConverter;\n+import javafx.css.converter.InsetsConverter;\n+import javafx.css.converter.PaintConverter;\n+import javafx.css.converter.SizeConverter;\n+import javafx.css.converter.StringConverter;\n@@ -59,10 +68,2 @@\n-import javafx.beans.DefaultProperty;\n-import javafx.css.CssMetaData;\n-import javafx.css.FontCssMetaData;\n-import javafx.css.StyleOrigin;\n-import javafx.css.Styleable;\n-import javafx.css.StyleableBooleanProperty;\n-import javafx.css.StyleableDoubleProperty;\n-import javafx.css.StyleableObjectProperty;\n-import javafx.css.StyleableProperty;\n-import javafx.css.StyleableStringProperty;\n+import com.sun.javafx.css.StyleManager;\n+import com.sun.javafx.scene.NodeHelper;\n@@ -821,0 +822,36 @@\n+    \/**\n+     * Indicates whether the text has been truncated\n+     * when it cannot fit into the available width.\n+     * <p>\n+     * When truncated, the {@link #ellipsisStringProperty() ellipsis string}\n+     * gets inserted in the place dictated by the\n+     * {@link #textOverrun} property.\n+     *\n+     * @since 23\n+     *\/\n+    private ReadOnlyBooleanWrapper textTruncated;\n+\n+    public final ReadOnlyBooleanProperty textTruncatedProperty() {\n+        if (textTruncated == null) {\n+            textTruncated = new ReadOnlyBooleanWrapper(this, \"textTruncated\");\n+            textTruncated.bind(Bindings.createBooleanBinding(() -> {\n+                    if (isWrapText()) {\n+                        return (getHeight() < prefHeight(getWidth()));\n+                    }\n+                    return (getWidth() < prefWidth(-1));\n+                },\n+                ellipsisStringProperty(),\n+                fontProperty(),\n+                heightProperty(),\n+                textProperty(),\n+                widthProperty(),\n+                wrapTextProperty()\n+            ));\n+        }\n+        return textTruncated.getReadOnlyProperty();\n+    }\n+\n+    public final boolean isTextTruncated() {\n+        return textTruncatedProperty().get();\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Labeled.java","additions":58,"deletions":21,"binary":false,"changes":79,"status":"modified"}]}