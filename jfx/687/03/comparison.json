{"files":[{"patch":"@@ -193,1 +193,2 @@\n-    \"-DMACOS_MIN_VERSION_MINOR=$macOSMinVersionMinor\"].flatten()\n+    \"-DMACOS_MIN_VERSION_MINOR=$macOSMinVersionMinor\",\n+    \"-Werror\"].flatten()\n","filename":"buildSrc\/mac.gradle","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n+\n@@ -296,7 +298,9 @@\n-     if (!NSApp.isActive && requiresActivation) {\n-        \/\/ As of macOS 14, application gets to the foreground,\n-        \/\/ but it doesn't get activated, so this is needed:\n-        LOG(\"-> need to active application\");\n-        dispatch_async(dispatch_get_main_queue(), ^{\n-            [NSApp activate];\n-        });\n+    if (@available(macOS 14.0, *)) {\n+        if (!NSApp.isActive && requiresActivation) {\n+            \/\/ As of macOS 14, application gets to the foreground,\n+            \/\/ but it doesn't get activated, so this is needed:\n+            LOG(\"-> need to active application\");\n+            dispatch_async(dispatch_get_main_queue(), ^{\n+                [NSApp activate];\n+            });\n+        }\n@@ -645,0 +649,1 @@\n+                    BOOL isFolder = NO;\n@@ -646,1 +651,1 @@\n-                    if ([[NSFileManager defaultManager] fileExistsAtPath:overridenPath isDirectory:NO] == YES)\n+                    if ([[NSFileManager defaultManager] fileExistsAtPath:overridenPath isDirectory:&isFolder] && !isFolder)\n@@ -651,5 +656,0 @@\n-                if ([[NSFileManager defaultManager] fileExistsAtPath:iconPath isDirectory:NO] == NO)\n-                {\n-                    \/\/ try again using Java generic icon (this icon might go away eventually ?)\n-                    iconPath = [NSString stringWithFormat:@\"%s\", \"\/System\/Library\/Frameworks\/JavaVM.framework\/Resources\/GenericApp.icns\"];\n-                }\n@@ -659,1 +659,2 @@\n-                    if ([[NSFileManager defaultManager] fileExistsAtPath:iconPath isDirectory:NO] == YES)\n+                    BOOL isFolder = NO;\n+                    if ([[NSFileManager defaultManager] fileExistsAtPath:iconPath isDirectory:&isFolder] && !isFolder)\n@@ -665,2 +666,2 @@\n-                        \/\/ last resort - if still no icon, then ask for an empty standard app icon, which is guranteed to exist\n-                        image = [[NSImage imageNamed:@\"NSApplicationIcon\"] retain];\n+                        \/\/ last resort - if still no icon, then ask for an empty standard app icon, which is guaranteed to exist\n+                        image = [[NSImage imageNamed:@\"NSImageNameApplicationIcon\"] retain];\n@@ -748,1 +749,2 @@\n-                [glassApp applicationWillFinishLaunching: NULL];\n+                \/\/ The NSNotification is ignored but the compiler insists on a non-NULL argument.\n+                [glassApp applicationWillFinishLaunching: [[[NSNotification alloc] init] autorelease]];\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassApplication.m","additions":19,"deletions":17,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -463,1 +463,1 @@\n-            if (([dispatcher getButton] == NSFileHandlingPanelOKButton) && ([urls count] > 0))\n+            if (([dispatcher getButton] == NSModalResponseOK) && ([urls count] > 0))\n@@ -539,1 +539,1 @@\n-            if (([dispatcher getButton] == NSFileHandlingPanelOKButton) && (url != nil))\n+            if (([dispatcher getButton] == NSModalResponseOK) && (url != nil))\n@@ -601,1 +601,1 @@\n-            if (([dispatcher getButton] == NSFileHandlingPanelOKButton) && ([urls count] >= 1))\n+            if (([dispatcher getButton] == NSModalResponseOK) && ([urls count] >= 1))\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassDialogs.m","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-+ (jint)mapNSOperationToJavaMaskInternal:(NSDragOperation)operation;\n++ (jint)mapNsOperationToJavaMaskInternal:(NSDragOperation)operation;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassDragSource.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -198,0 +198,2 @@\n+        default:\n+            break;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassDragSource.m","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassFullscreenWindow.m","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassKey.m","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassMenu.m","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassPasteboard.m","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,0 +114,2 @@\n+#pragma clang diagnostic push\n+#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n@@ -116,0 +118,1 @@\n+#pragma clang diagnostic pop\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassRobot.m","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassScreen.m","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassView3D.m","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,0 +49,2 @@\n+#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n+\n@@ -433,0 +435,3 @@\n+\n+        default:\n+            break;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassViewDelegate.m","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+- (void)_sendJavaWindowNotifyScaleChanged:(CGFloat)newScale;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow+Java.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n+\n@@ -197,0 +199,2 @@\n+        default:                                                                        \\\n+            break;                                                                      \\\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow.m","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-- (BOOL)performAccessibleAction:(jlong)actionId;\n+- (BOOL)performAccessibleAction:(NSString*)actionId;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/a11y\/AccessibleBase.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -244,2 +244,2 @@\n-    if ([accessible respondsToSelector:@selector(clearParent)]) {\n-        [accessible clearParent];\n+    if ([accessible isKindOfClass: [AccessibleBase class]]) {\n+        [((AccessibleBase*) accessible) clearParent];\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/a11y\/AccessibleBase.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}