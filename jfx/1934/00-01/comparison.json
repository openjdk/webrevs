{"files":[{"patch":"@@ -46,0 +46,1 @@\n+        System.setProperty(\"prism.order\", \"sw\");\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/glass\/ui\/headless\/HeadlessApplication1Test.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import com.sun.javafx.application.PlatformImplShim;\n@@ -32,0 +33,5 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n@@ -37,0 +43,2 @@\n+    private final CountDownLatch exitLatch = PlatformImplShim.test_getPlatformExitLatch();\n+\n@@ -40,0 +48,1 @@\n+        System.setProperty(\"prism.order\", \"sw\");\n@@ -45,0 +54,1 @@\n+        AtomicBoolean fail = new AtomicBoolean();\n@@ -47,0 +57,1 @@\n+            assertEquals(1, exitLatch.getCount());\n@@ -49,0 +60,11 @@\n+        try {\n+            if (!exitLatch.await(1, TimeUnit.SECONDS)) {\n+                fail.set(true);\n+            }\n+        } catch (InterruptedException e) {\n+            fail.set(true);\n+        }\n+\n+        assertEquals(0, exitLatch.getCount());\n+        assertFalse(fail.get());\n+\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/glass\/ui\/headless\/HeadlessApplication2Test.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}