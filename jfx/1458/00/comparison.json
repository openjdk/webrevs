{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,0 +166,1 @@\n+        hoverSquare.setVisible(square != null);\n@@ -171,1 +172,0 @@\n-        hoverSquare.setVisible(focusedSquare != null);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ColorPalette.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,6 @@\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static test.com.sun.javafx.scene.control.infrastructure.ControlTestUtils.assertStyleClassContains;\n@@ -30,0 +36,1 @@\n+import javafx.scene.Node;\n@@ -31,0 +38,2 @@\n+import javafx.scene.control.ColorPicker;\n+import javafx.scene.control.PopupControl;\n@@ -34,3 +43,2 @@\n-import test.com.sun.javafx.pgstub.StubToolkit;\n-import com.sun.javafx.tk.Toolkit;\n-import javafx.scene.control.ColorPicker;\n+import javafx.stage.Window;\n+import org.junit.After;\n@@ -39,6 +47,2 @@\n-import static test.com.sun.javafx.scene.control.infrastructure.ControlTestUtils.assertStyleClassContains;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n+import com.sun.javafx.tk.Toolkit;\n+import test.com.sun.javafx.pgstub.StubToolkit;\n@@ -68,0 +72,5 @@\n+    @After\n+    public void after() {\n+        stage.hide();\n+    }\n+\n@@ -148,0 +157,37 @@\n+\n+    \/\/ verifies that the hover square is visible after popup is shown because its value is present in the palette\n+    @Test\n+    public void testHoverRectangleShown() {\n+        colorPicker.setValue(Color.WHITE);\n+        colorPicker.show();\n+        tk.firePulse();\n+        Node hoverSquare = getHoverSquare();\n+        assertTrue(hoverSquare != null);\n+        assertTrue(hoverSquare.isVisible());\n+        colorPicker.hide();\n+    }\n+\n+    \/\/ verifies that the hover square is NOT visible after popup is shown because its value is NOT in the palette\n+    @Test\n+    public void testHoverRectangleNotShown() {\n+        colorPicker.setValue(Color.CORAL); \/\/ coral is not in the palette, JDK-8324327\n+        colorPicker.show();\n+        tk.firePulse();\n+        Node hoverSquare = getHoverSquare();\n+        assertTrue(hoverSquare != null);\n+        assertFalse(hoverSquare.isVisible());\n+        colorPicker.hide();\n+    }\n+\n+    \/\/ returns first (and only) hover square found in the popup, or null\n+    private Node getHoverSquare() {\n+        for (Window w : Window.getWindows()) {\n+            if (w instanceof PopupControl c) {\n+                var it = c.getScene().getRoot().lookupAll(\".hover-square\").iterator();\n+                if (it.hasNext()) {\n+                    return it.next();\n+                }\n+            }\n+        }\n+        return null;\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ColorPickerTest.java","additions":56,"deletions":10,"binary":false,"changes":66,"status":"modified"}]}