{"files":[{"patch":"@@ -254,1 +254,5 @@\n-     * VK_UNDEFINED if the character isn't present in the current layout.\n+     * VK_UNDEFINED if the character isn't present in the current layout. The\n+     * hint is the VK_ code of the key the system is attempting to match\n+     * (which may be VK_UNDEFINED for a key on the main keyboard). It can be\n+     * used to optimize the search or to distinguish between the main\n+     * keyboard and the numeric keypad.\n@@ -256,0 +260,2 @@\n+     * @param c the character\n+     * @param hint the code of the key the system is attempting to match\n@@ -258,2 +264,2 @@\n-    public static int getKeyCodeForChar(char c) {\n-        return Application.getKeyCodeForChar(c);\n+    public static int getKeyCodeForChar(char c, int hint) {\n+        return Application.getKeyCodeForChar(c, hint);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/events\/KeyEvent.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -726,1 +726,1 @@\n-    protected abstract int _getKeyCodeForChar(char c);\n+    protected abstract int _getKeyCodeForChar(char c, int hint);\n@@ -730,1 +730,5 @@\n-     * VK_UNDEFINED if the character isn't present in the current layout.\n+     * VK_UNDEFINED if the character isn't present in the current layout. The\n+     * hint is the VK_ code of the key the system is attempting to match\n+     * (which may be VK_UNDEFINED for a key on the main keyboard). It can be\n+     * used to optimize the search or to distinguish between the main\n+     * keyboard and the numeric keypad.\n@@ -733,0 +737,1 @@\n+     * @param hint the code of the key the system is attempting to match\n@@ -735,2 +740,2 @@\n-    public static int getKeyCodeForChar(char c) {\n-        return application._getKeyCodeForChar(c);\n+    public static int getKeyCodeForChar(char c, int hint) {\n+        return application._getKeyCodeForChar(c, hint);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Application.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -466,1 +466,1 @@\n-    protected native int _getKeyCodeForChar(char c);\n+    protected native int _getKeyCodeForChar(char c, int hint);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkApplication.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -286,1 +286,1 @@\n-    protected native int _getKeyCodeForChar(char c);\n+    protected native int _getKeyCodeForChar(char c, int hint);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ios\/IosApplication.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -389,1 +389,1 @@\n-    protected native int _getKeyCodeForChar(char c);\n+    protected native int _getKeyCodeForChar(char c, int hint);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacApplication.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-    int getKeyCodeForChar(char c) {\n+    int getKeyCodeForChar(char c, int hint) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/KeyInput.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -357,2 +357,2 @@\n-    protected int _getKeyCodeForChar(char c) {\n-        return KeyInput.getInstance().getKeyCodeForChar(c);\n+    protected int _getKeyCodeForChar(char c, int hint) {\n+        return KeyInput.getInstance().getKeyCodeForChar(c, hint);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/MonocleApplication.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -367,1 +367,1 @@\n-    protected native int _getKeyCodeForChar(char c);\n+    protected native int _getKeyCodeForChar(char c, int hint);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinApplication.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -229,1 +229,1 @@\n-    public int getKeyCodeForChar(String character) {\n+    public int getKeyCodeForChar(String character, int hint) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/DummyToolkit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -705,1 +705,1 @@\n-    public abstract int getKeyCodeForChar(String character);\n+    public abstract int getKeyCodeForChar(String character, int hint);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/Toolkit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1088,1 +1088,1 @@\n-    @Override public int getKeyCodeForChar(String character) {\n+    @Override public int getKeyCodeForChar(String character, int hint) {\n@@ -1091,1 +1091,1 @@\n-                          character.charAt(0))\n+                          character.charAt(0), hint)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/QuantumToolkit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -115,3 +115,3 @@\n-        return (event.getCode().getCode()\n-                       == Toolkit.getToolkit().getKeyCodeForChar(getCharacter()))\n-                   && super.match(event);\n+        int code = event.getCode().getCode();\n+        return (super.match(event) &&\n+                code == Toolkit.getToolkit().getKeyCodeForChar(getCharacter(), code));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/KeyCharacterCombination.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -324,1 +324,1 @@\n- * Signature: (C)I\n+ * Signature: (CI)I\n@@ -327,1 +327,1 @@\n-  (JNIEnv *env, jobject jApplication, jchar character)\n+  (JNIEnv *env, jobject jApplication, jchar character, jint hint)\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_key.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * Signature: (C)I\n+ * Signature: (CI)I\n@@ -40,1 +40,1 @@\n-(JNIEnv * env, jobject jApplication, jchar c)\n+(JNIEnv * env, jobject jApplication, jchar c, jint hint)\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/ios\/GlassKey.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -627,1 +627,1 @@\n- * Signature: (C)I\n+ * Signature: (CI)I\n@@ -630,1 +630,1 @@\n-(JNIEnv * env, jobject jApplication, jchar c)\n+(JNIEnv * env, jobject jApplication, jchar c, jint hint)\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassKey.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -345,0 +345,23 @@\n+BOOL IsNumericKeypadCode(int javaCode) {\n+    switch (javaCode) {\n+        case com_sun_glass_events_KeyEvent_VK_DIVIDE:\n+        case com_sun_glass_events_KeyEvent_VK_MULTIPLY:\n+        case com_sun_glass_events_KeyEvent_VK_SUBTRACT:\n+        case com_sun_glass_events_KeyEvent_VK_ADD:\n+        case com_sun_glass_events_KeyEvent_VK_DECIMAL:\n+        case com_sun_glass_events_KeyEvent_VK_SEPARATOR:\n+        case com_sun_glass_events_KeyEvent_VK_NUMPAD0:\n+        case com_sun_glass_events_KeyEvent_VK_NUMPAD1:\n+        case com_sun_glass_events_KeyEvent_VK_NUMPAD2:\n+        case com_sun_glass_events_KeyEvent_VK_NUMPAD3:\n+        case com_sun_glass_events_KeyEvent_VK_NUMPAD4:\n+        case com_sun_glass_events_KeyEvent_VK_NUMPAD5:\n+        case com_sun_glass_events_KeyEvent_VK_NUMPAD6:\n+        case com_sun_glass_events_KeyEvent_VK_NUMPAD7:\n+        case com_sun_glass_events_KeyEvent_VK_NUMPAD8:\n+        case com_sun_glass_events_KeyEvent_VK_NUMPAD9:\n+            return true;\n+    }\n+    return false;\n+}\n+\n@@ -348,1 +371,1 @@\n- * Signature: (C)I\n+ * Signature: (CI)I\n@@ -351,1 +374,1 @@\n-  (JNIEnv * env, jobject jApplication, jchar c)\n+  (JNIEnv * env, jobject jApplication, jchar c, jint hint)\n@@ -360,0 +383,14 @@\n+\n+    \/\/ If the system is trying to match against the numeric keypad verify that\n+    \/\/ the key generates the expected character.\n+    if (IsNumericKeypadCode(hint)) {\n+        UINT vkey = 0, modifiers = 0;\n+        JavaKeyToWindowsKey(hint, vkey, modifiers);\n+        if (vkey != 0) {\n+            UINT mapped = ::MapVirtualKeyEx(vkey, MAPVK_VK_TO_CHAR, layout);\n+            if (mapped != 0 && mapped == c) {\n+                return hint;\n+            }\n+        }\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/win\/KeyTable.cpp","additions":39,"deletions":2,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n-    public static int _getKeyCodeForChar(char c) {\n-        return MonocleApplication.getKeyCodeForChar(c);\n+    public static int _getKeyCodeForChar(char c, int hint) {\n+        return MonocleApplication.getKeyCodeForChar(c, hint);\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/glass\/ui\/monocle\/MonocleApplicationShim.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -609,1 +609,1 @@\n-    public int getKeyCodeForChar(String character) {\n+    public int getKeyCodeForChar(String character, int hint) {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/pgstub\/StubToolkit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-                int code = MonocleApplicationShim._getKeyCodeForChar(ch);\n+                int code = MonocleApplicationShim._getKeyCodeForChar(ch, KeyEvent.VK_UNDEFINED);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/MonocleApplicationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}