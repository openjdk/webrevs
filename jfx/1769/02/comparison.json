{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,8 @@\n+import static javafx.concurrent.WorkerStateEvent.WORKER_STATE_CANCELLED;\n+import static javafx.concurrent.WorkerStateEvent.WORKER_STATE_FAILED;\n+import static javafx.concurrent.WorkerStateEvent.WORKER_STATE_RUNNING;\n+import static javafx.concurrent.WorkerStateEvent.WORKER_STATE_SCHEDULED;\n+import static javafx.concurrent.WorkerStateEvent.WORKER_STATE_SUCCEEDED;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.FutureTask;\n+import java.util.concurrent.atomic.AtomicReference;\n@@ -46,8 +54,0 @@\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.FutureTask;\n-import java.util.concurrent.atomic.AtomicReference;\n-import static javafx.concurrent.WorkerStateEvent.WORKER_STATE_CANCELLED;\n-import static javafx.concurrent.WorkerStateEvent.WORKER_STATE_FAILED;\n-import static javafx.concurrent.WorkerStateEvent.WORKER_STATE_RUNNING;\n-import static javafx.concurrent.WorkerStateEvent.WORKER_STATE_SCHEDULED;\n-import static javafx.concurrent.WorkerStateEvent.WORKER_STATE_SUCCEEDED;\n@@ -1001,1 +1001,2 @@\n-    @Override public boolean cancel(boolean mayInterruptIfRunning) {\n+    @Override\n+    public boolean cancel(boolean mayInterruptIfRunning) {\n@@ -1017,0 +1018,7 @@\n+                switch (getState()) {\n+                case FAILED:\n+                case SUCCEEDED:\n+                    \/\/ a finished or failed task retains its state\n+                    return false;\n+                }\n+\n@@ -1019,1 +1027,13 @@\n-                runLater(() -> setState(Worker.State.CANCELLED));\n+                runLater(() -> {\n+                    \/\/ the state must be accessed only in the fx application thread\n+                    switch (getState()) {\n+                    case FAILED:\n+                    case SUCCEEDED:\n+                        \/\/ a finished or failed task retains its state\n+                        break;\n+                    default:\n+                        setState(Worker.State.CANCELLED);\n+                        break;\n+                    }\n+                });\n+                return flag;\n@@ -1022,1 +1042,0 @@\n-        \/\/ return the flag\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/concurrent\/Task.java","additions":31,"deletions":12,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,7 @@\n-import test.javafx.concurrent.mocks.MythicalEvent;\n-import test.javafx.concurrent.mocks.SimpleTask;\n-import javafx.event.EventHandler;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertSame;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -43,1 +47,1 @@\n-\n+import javafx.event.EventHandler;\n@@ -46,0 +50,1 @@\n+import org.junit.jupiter.api.RepeatedTest;\n@@ -47,7 +52,2 @@\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.assertNull;\n-import static org.junit.jupiter.api.Assertions.assertSame;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n+import test.javafx.concurrent.mocks.MythicalEvent;\n+import test.javafx.concurrent.mocks.SimpleTask;\n@@ -1281,0 +1281,1 @@\n+    @RepeatedTest(50)\n@@ -1425,0 +1426,1 @@\n+    @RepeatedTest(50)\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/ServiceLifecycleTest.java","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"}]}