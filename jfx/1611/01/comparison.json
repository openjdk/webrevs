{"files":[{"patch":"@@ -62,1 +62,0 @@\n-import javafx.util.FXPermission;\n@@ -118,4 +117,0 @@\n-    \/\/ Internal permission used by FXCanvas (SWT interop)\n-    private static final FXPermission FXCANVAS_PERMISSION =\n-            new FXPermission(\"accessFXCanvasInternals\");\n-\n@@ -361,13 +356,0 @@\n-        \/\/ Verify that we have the appropriate permission\n-        @SuppressWarnings(\"removal\")\n-        final SecurityManager sm = System.getSecurityManager();\n-        if (sm != null) {\n-            try {\n-                sm.checkPermission(FXCANVAS_PERMISSION);\n-            } catch (SecurityException ex) {\n-                System.err.println(\"FXCanvas: no permission to access JavaFX internals\");\n-                ex.printStackTrace();\n-                return;\n-            }\n-        }\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/PlatformImpl.java","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,12 +28,0 @@\n-import com.sun.glass.ui.Application;\n-import com.sun.glass.ui.Pixels;\n-import com.sun.javafx.cursor.CursorFrame;\n-import com.sun.javafx.cursor.CursorType;\n-import com.sun.javafx.embed.AbstractEvents;\n-import com.sun.javafx.embed.EmbeddedSceneDSInterface;\n-import com.sun.javafx.embed.EmbeddedSceneDTInterface;\n-import com.sun.javafx.embed.EmbeddedSceneInterface;\n-import com.sun.javafx.embed.EmbeddedStageInterface;\n-import com.sun.javafx.embed.HostInterface;\n-import com.sun.javafx.stage.EmbeddedWindow;\n-\n@@ -44,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -52,1 +38,0 @@\n-\n@@ -58,2 +43,0 @@\n-import javafx.util.FXPermission;\n-\n@@ -101,0 +84,11 @@\n+import com.sun.glass.ui.Application;\n+import com.sun.glass.ui.Pixels;\n+import com.sun.javafx.cursor.CursorFrame;\n+import com.sun.javafx.cursor.CursorType;\n+import com.sun.javafx.embed.AbstractEvents;\n+import com.sun.javafx.embed.EmbeddedSceneDSInterface;\n+import com.sun.javafx.embed.EmbeddedSceneDTInterface;\n+import com.sun.javafx.embed.EmbeddedSceneInterface;\n+import com.sun.javafx.embed.EmbeddedStageInterface;\n+import com.sun.javafx.embed.HostInterface;\n+import com.sun.javafx.stage.EmbeddedWindow;\n@@ -142,4 +136,0 @@\n-    \/\/ Internal permission used by FXCanvas (SWT interop)\n-    private static final FXPermission FXCANVAS_PERMISSION =\n-            new FXPermission(\"accessFXCanvasInternals\");\n-\n@@ -261,2 +251,1 @@\n-                @SuppressWarnings(\"removal\")\n-                String autoScale = AccessController.doPrivileged((PrivilegedAction<String>)() -> System.getProperty(\"swt.autoScale\"));\n+                String autoScale = System.getProperty(\"swt.autoScale\");\n@@ -312,1 +301,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -333,15 +321,11 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            System.setProperty(\"com.sun.javafx.application.type\", \"FXCanvas\");\n-            System.setProperty(\"javafx.embed.isEventThread\", \"true\");\n-            if (swtDPIUtilMethod == null) {\n-                System.setProperty(\"glass.win.uiScale\", \"100%\");\n-                System.setProperty(\"glass.win.renderScale\", \"100%\");\n-            } else {\n-                Integer scale = 100;\n-                try {\n-                    scale = (Integer) swtDPIUtilMethod.invoke(null);\n-                } catch (Exception e) {\n-                    \/\/Fail silently\n-                }\n-                System.setProperty(\"glass.win.uiScale\", scale + \"%\");\n-                System.setProperty(\"glass.win.renderScale\", scale + \"%\");\n+        System.setProperty(\"com.sun.javafx.application.type\", \"FXCanvas\");\n+        System.setProperty(\"javafx.embed.isEventThread\", \"true\");\n+        if (swtDPIUtilMethod == null) {\n+            System.setProperty(\"glass.win.uiScale\", \"100%\");\n+            System.setProperty(\"glass.win.renderScale\", \"100%\");\n+        } else {\n+            Integer scale = 100;\n+            try {\n+                scale = (Integer) swtDPIUtilMethod.invoke(null);\n+            } catch (Exception e) {\n+                \/\/Fail silently\n@@ -349,3 +333,4 @@\n-            System.setProperty(\"javafx.embed.eventProc\", eventProcStr);\n-            return null;\n-        });\n+            System.setProperty(\"glass.win.uiScale\", scale + \"%\");\n+            System.setProperty(\"glass.win.renderScale\", scale + \"%\");\n+        }\n+        System.setProperty(\"javafx.embed.eventProc\", eventProcStr);\n@@ -354,6 +339,3 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            Platform.startup(() -> {\n-                startupLatch.countDown();\n-            });\n-            return null;\n-        }, null, FXCANVAS_PERMISSION);\n+        Platform.startup(() -> {\n+            startupLatch.countDown();\n+        });\n","filename":"modules\/javafx.swt\/src\/main\/java\/javafx\/embed\/swt\/FXCanvas.java","additions":31,"deletions":49,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedExceptionAction;\n@@ -194,1 +192,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -197,6 +194,9 @@\n-        return AccessController.doPrivileged(\n-                (PrivilegedExceptionAction<Integer>) () -> {\n-                    Field field = clazz.getDeclaredField(name);\n-                    field.setAccessible(true);\n-                    return field.getInt(clazz);\n-                });\n+        Field field = clazz.getDeclaredField(name);\n+        field.setAccessible(true);\n+        return field.getInt(clazz);\n+    }\n+\n+    private static Method getMethod(Class<?> clazz, String name, Class<?> ... argClasses) throws Exception {\n+        Method method = clazz.getDeclaredMethod(name, argClasses);\n+        method.setAccessible(true);\n+        return method;\n@@ -206,1 +206,1 @@\n-    @SuppressWarnings(\"removal\")\n+\n@@ -228,7 +228,1 @@\n-            blitDirect = AccessController.doPrivileged(\n-                    (PrivilegedExceptionAction<Method>) () -> {\n-                        Method method = clazz.\n-                            getDeclaredMethod(\"blit\", argClasses);\n-                        method.setAccessible(true);\n-                        return method;\n-                    });\n+            blitDirect = getMethod(clazz, \"blit\", argClasses);\n@@ -250,1 +244,1 @@\n-    @SuppressWarnings(\"removal\")\n+\n@@ -272,7 +266,1 @@\n-            blitPalette = AccessController.doPrivileged(\n-                    (PrivilegedExceptionAction<Method>) () -> {\n-                        Method method = clazz.\n-                            getDeclaredMethod(\"blit\", argClasses);\n-                        method.setAccessible(true);\n-                        return method;\n-                    });\n+            blitPalette = getMethod(clazz, \"blit\", argClasses);\n@@ -294,1 +282,1 @@\n-    @SuppressWarnings(\"removal\")\n+\n@@ -298,6 +286,1 @@\n-            getByteOrderMethod = AccessController.doPrivileged(\n-                    (PrivilegedExceptionAction<Method>) () -> {\n-                        Method method = clazz.getDeclaredMethod(\"getByteOrder\");\n-                        method.setAccessible(true);\n-                        return method;\n-                    });\n+            getByteOrderMethod = getMethod(clazz, \"getByteOrder\");\n","filename":"modules\/javafx.swt\/src\/main\/java\/javafx\/embed\/swt\/SWTFXUtils.java","additions":16,"deletions":33,"binary":false,"changes":49,"status":"modified"}]}