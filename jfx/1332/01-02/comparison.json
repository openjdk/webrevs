{"files":[{"patch":"@@ -1351,4 +1351,6 @@\n-        Stream<NGLightBase> lights = Stream.concat(\n-            Optional.ofNullable(scene).stream().flatMap(s -> s.lights.stream()).map(LightBase::getPeer),\n-            Optional.ofNullable(subScene).stream().flatMap(s -> s.getLights().stream()).map(LightBase::getPeer)\n-        );\n+        Stream<NGLightBase> lights;\n+        if (subScene != null) {\n+            lights = Optional.of(subScene).stream().flatMap(s -> s.getLights().stream()).map(LightBase::getPeer);\n+        } else {\n+            lights = Optional.ofNullable(scene).stream().flatMap(s -> s.lights.stream()).map(LightBase::getPeer);\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Scene.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import javafx.embed.swing.SwingFXUtils;\n@@ -49,0 +50,6 @@\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.imageio.ImageIO;\n+\n@@ -97,3 +104,3 @@\n-    private void compareSnapshots(WritableImage base, WritableImage node) {\n-        assertEquals(base.getWidth(), node.getWidth(), 0.1);\n-        assertEquals(base.getHeight(), node.getHeight(), 0.1);\n+    private void compareSnapshots(WritableImage base, WritableImage comp) {\n+        assertEquals(base.getWidth(), comp.getWidth(), 0.1);\n+        assertEquals(base.getHeight(), comp.getHeight(), 0.1);\n@@ -102,1 +109,1 @@\n-        PixelReader nodeReader = node.getPixelReader();\n+        PixelReader compReader = comp.getPixelReader();\n@@ -104,1 +111,1 @@\n-        assertEquals(baseReader.getArgb(BOX_DIM \/ 2, BOX_DIM \/ 2), nodeReader.getArgb(BOX_DIM \/ 2, BOX_DIM \/ 2));\n+        assertEquals(baseReader.getArgb(BOX_DIM \/ 2, BOX_DIM \/ 2), compReader.getArgb(BOX_DIM \/ 2, BOX_DIM \/ 2));\n@@ -136,0 +143,25 @@\n+\n+    @Test\n+    public void testSubSceneSnapshotWithSceneLights() throws Exception {\n+        Util.runAndWait(() -> {\n+            Scene scene = buildScene(true);\n+\n+            \/\/ SubScene is \"separated\" from Scene, so Scene's lights should not be included\n+            \/\/ Add an extra red light to make sure it is actually not included\n+            PointLight light = new PointLight(Color.RED);\n+            light.setTranslateZ(-150);\n+            StackPane sceneRootPane = (StackPane)scene.getRoot();\n+            sceneRootPane.getChildren().add(light);\n+\n+            WritableImage baseSnapshot = scene.snapshot(null);\n+\n+            SubScene ss = (SubScene)scene.getRoot().getChildrenUnmodifiable().get(0);\n+            WritableImage subSceneSnapshot = ss.snapshot(null, null);\n+\n+            Node boxNode = ss.getRoot().getChildrenUnmodifiable().get(0);\n+            WritableImage nodeSnapshot = boxNode.snapshot(null, null);\n+\n+            compareSnapshots(baseSnapshot, subSceneSnapshot);\n+            compareSnapshots(baseSnapshot, nodeSnapshot);\n+        });\n+    }\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/SnapshotLightsTest.java","additions":37,"deletions":5,"binary":false,"changes":42,"status":"modified"}]}