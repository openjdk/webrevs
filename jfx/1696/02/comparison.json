{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,19 +28,0 @@\n-import com.sun.javafx.beans.IDProperty;\n-import com.sun.javafx.css.StyleManager;\n-import com.sun.javafx.scene.NodeHelper;\n-import com.sun.javafx.stage.PopupWindowHelper;\n-\n-import javafx.css.SimpleStyleableBooleanProperty;\n-import javafx.css.SimpleStyleableDoubleProperty;\n-import javafx.css.SimpleStyleableObjectProperty;\n-import javafx.css.StyleOrigin;\n-import javafx.css.StyleableObjectProperty;\n-import javafx.css.StyleableStringProperty;\n-\n-import javafx.css.converter.BooleanConverter;\n-import javafx.css.converter.EnumConverter;\n-import javafx.css.converter.SizeConverter;\n-import javafx.css.converter.StringConverter;\n-import javafx.css.converter.DurationConverter;\n-import javafx.scene.control.skin.TooltipSkin;\n-\n@@ -50,1 +31,0 @@\n-\n@@ -53,1 +33,8 @@\n-import javafx.beans.property.*;\n+import javafx.application.Platform;\n+import javafx.beans.property.BooleanProperty;\n+import javafx.beans.property.DoubleProperty;\n+import javafx.beans.property.ObjectProperty;\n+import javafx.beans.property.ReadOnlyBooleanProperty;\n+import javafx.beans.property.ReadOnlyBooleanWrapper;\n+import javafx.beans.property.SimpleStringProperty;\n+import javafx.beans.property.StringProperty;\n@@ -57,0 +44,4 @@\n+import javafx.css.SimpleStyleableBooleanProperty;\n+import javafx.css.SimpleStyleableDoubleProperty;\n+import javafx.css.SimpleStyleableObjectProperty;\n+import javafx.css.StyleOrigin;\n@@ -58,0 +49,1 @@\n+import javafx.css.StyleableObjectProperty;\n@@ -59,0 +51,6 @@\n+import javafx.css.StyleableStringProperty;\n+import javafx.css.converter.BooleanConverter;\n+import javafx.css.converter.DurationConverter;\n+import javafx.css.converter.EnumConverter;\n+import javafx.css.converter.SizeConverter;\n+import javafx.css.converter.StringConverter;\n@@ -65,0 +63,1 @@\n+import javafx.scene.control.skin.TooltipSkin;\n@@ -72,0 +71,4 @@\n+import com.sun.javafx.beans.IDProperty;\n+import com.sun.javafx.css.StyleManager;\n+import com.sun.javafx.scene.NodeHelper;\n+import com.sun.javafx.stage.PopupWindowHelper;\n@@ -772,2 +775,3 @@\n-    @Override public Styleable getStyleableParent() {\n-        if (BEHAVIOR.hoveredNode == null) {\n+    @Override\n+    public Styleable getStyleableParent() {\n+        if (!Platform.isFxApplicationThread() || (BEHAVIOR.hoveredNode == null)) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Tooltip.java","additions":28,"deletions":24,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import javafx.application.Platform;\n@@ -41,0 +42,1 @@\n+import javafx.geometry.Point2D;\n@@ -90,0 +92,1 @@\n+import javafx.scene.control.Tooltip;\n@@ -119,0 +122,1 @@\n+import javafx.scene.layout.Border;\n@@ -121,0 +125,1 @@\n+import javafx.scene.layout.VBox;\n@@ -124,0 +129,1 @@\n+import javafx.util.Duration;\n@@ -672,1 +678,0 @@\n-    @Disabled(\"JDK-8348100\") \/\/ FIX\n@@ -676,1 +681,37 @@\n-        \/\/ TODO will have a better test in JDK-8348100\n+        AtomicBoolean phase = new AtomicBoolean();\n+        test(() -> {\n+            Tooltip t = new Tooltip(\"tooltip\");\n+            t.setStyle(\"-fx-background-color:red; -fx-min-width:100px; -fx-min-height:100px; -fx-wrap-text:true; -fx-show-delay:0ms; -fx-hide-delay:0ms;\");\n+            t.setShowDelay(Duration.ZERO);\n+            t.setHideDelay(Duration.ZERO);\n+            Label c = new Label(\"Tooltip\");\n+            c.setSkin(new LabelSkin(c));\n+            c.setTooltip(t);\n+            c.setBorder(Border.stroke(Color.BLACK));\n+            c.setPrefHeight(500);\n+            c.setPrefWidth(500);\n+            VBox b = new VBox();\n+            b.getChildren().add(c);\n+            b.setId(\"Tooltip\");\n+            return b;\n+        }, (c) -> {\n+            Tooltip t = new Tooltip();\n+            if (Platform.isFxApplicationThread()) {\n+                Label label = (Label)c.getChildren().get(0);\n+                Point2D p;\n+                if (phase.get()) {\n+                    p = c.localToScreen(c.getWidth() \/ 2.0, c.getHeight() \/ 2.0);\n+                } else {\n+                    p = c.localToScreen(c.getWidth() + 2, c.getHeight() + 2);\n+                }\n+                robot.mouseMove(p);\n+                double h = STAGE_HEIGHT;\n+                if (phase.get()) {\n+                    h += 10;\n+                }\n+                label.setMinHeight(h);\n+                label.setMaxHeight(h);\n+                stage.setHeight(h);\n+                phase.set(!phase.get());\n+            }\n+        });\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/NodeInitializationStressTest.java","additions":43,"deletions":2,"binary":false,"changes":45,"status":"modified"}]}