{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import javafx.scene.TraversalDirection;\n@@ -69,0 +70,11 @@\n+\n+    public static Direction of(TraversalDirection d) {\n+        return switch (d) {\n+        case DOWN -> DOWN;\n+        case LEFT -> LEFT;\n+        case NEXT -> NEXT;\n+        case PREVIOUS -> PREVIOUS;\n+        case RIGHT -> RIGHT;\n+        case UP -> UP;\n+        };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/traversal\/Direction.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -8542,1 +8542,1 @@\n-     * @param direction the direction of focus traversal\n+     * @param direction the direction of focus traversal, non-null\n@@ -8547,23 +8547,1 @@\n-        Direction d;\n-        switch (direction) {\n-        case DOWN:\n-            d = Direction.DOWN;\n-            break;\n-        case LEFT:\n-            d = Direction.LEFT;\n-            break;\n-        case NEXT:\n-            d = Direction.NEXT;\n-            break;\n-        case PREVIOUS:\n-            d = Direction.PREVIOUS;\n-            break;\n-        case RIGHT:\n-            d = Direction.RIGHT;\n-            break;\n-        case UP:\n-            d = Direction.UP;\n-            break;\n-        default:\n-            return false;\n-        }\n+        Direction d = Direction.of(direction);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":2,"deletions":24,"binary":false,"changes":26,"status":"modified"}]}