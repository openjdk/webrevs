{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,5 +32,0 @@\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.Semaphore;\n-import java.util.concurrent.TimeUnit;\n-\n@@ -47,2 +42,0 @@\n-    int writtenBytes;\n-    FontTracker tracker;\n@@ -59,1 +52,0 @@\n-        checkTracker(size);\n@@ -79,1 +71,0 @@\n-        writtenBytes = 0;\n@@ -86,3 +77,0 @@\n-        if (tracker != null) {\n-            tracker.add(file);\n-        }\n@@ -90,3 +78,0 @@\n-        if (tracker != null) {\n-            tracker.set(file, raFile);\n-        }\n@@ -109,3 +94,0 @@\n-        if (tracker != null) {\n-            tracker.remove(file);\n-        }\n@@ -116,3 +98,0 @@\n-            if (tracker != null) {\n-                tracker.subBytes(writtenBytes);\n-            }\n@@ -135,23 +114,0 @@\n-    public boolean isTracking() {\n-        return tracker != null;\n-    }\n-\n-    private void checkTracker(int size) throws IOException {\n-        if (tracker != null) {\n-            if (size < 0 || pos > FontTracker.MAX_FILE_SIZE - size) {\n-                throw new IOException(\"File too big.\");\n-            }\n-            if (tracker.getNumBytes() > FontTracker.MAX_TOTAL_BYTES - size) {\n-                throw new IOException(\"Total files too big.\");\n-            }\n-        }\n-    }\n-\n-    private void checkSize(int size) throws IOException {\n-        if (tracker != null) {\n-            checkTracker(size);\n-            tracker.addBytes(size);\n-            writtenBytes += size;\n-        }\n-    }\n-\n@@ -167,1 +123,0 @@\n-        checkSize(size);\n@@ -226,1 +181,0 @@\n-        checkSize(length);\n@@ -230,116 +184,0 @@\n-\n-    \/* Like JDK, FX allows untrusted code to create fonts which consume\n-     * disk resource. We need to place some reasonable limit on the amount\n-     * that can be consumed to prevent D.O.S type attacks.\n-     *\/\n-    static class FontTracker {\n-        public static final int MAX_FILE_SIZE = 32 * 1024 * 1024;\n-        public static final int MAX_TOTAL_BYTES = 10 * MAX_FILE_SIZE;\n-\n-        static int numBytes;\n-        static FontTracker tracker;\n-\n-        public static synchronized FontTracker getTracker() {\n-            if (tracker == null) {\n-                tracker = new FontTracker();\n-            }\n-            return tracker;\n-        }\n-\n-        public synchronized int getNumBytes() {\n-            return numBytes;\n-        }\n-\n-        public synchronized void addBytes(int sz) {\n-            numBytes += sz;\n-        }\n-\n-        public synchronized void subBytes(int sz) {\n-            numBytes -= sz;\n-        }\n-\n-        private static Semaphore cs = null;\n-\n-        \/**\n-         * Returns a counting semaphore.\n-         *\/\n-        private static synchronized Semaphore getCS() {\n-            if (cs == null) {\n-                \/\/ Make a semaphore with 5 permits that obeys the first-in first-out\n-                \/\/ granting of permits.\n-                cs = new Semaphore(5, true);\n-            }\n-            return cs;\n-        }\n-\n-        public boolean acquirePermit() throws InterruptedException {\n-            \/\/ This does a timed-out wait.\n-            return getCS().tryAcquire(120, TimeUnit.SECONDS);\n-        }\n-\n-        public void releasePermit() {\n-            getCS().release();\n-        }\n-\n-        public void add(File file) {\n-            TempFileDeletionHook.add(file);\n-        }\n-\n-        public void set(File file, RandomAccessFile raf) {\n-            TempFileDeletionHook.set(file, raf);\n-        }\n-\n-        public void remove(File file) {\n-            TempFileDeletionHook.remove(file);\n-        }\n-\n-        \/**\n-         * Helper class for cleanup of temp files created while processing fonts.\n-         *\/\n-        private static class TempFileDeletionHook {\n-            private static HashMap<File, RandomAccessFile> files = new HashMap<>();\n-\n-            private static Thread t = null;\n-            static void init() {\n-                if (t == null) {\n-                    \/\/ Add a shutdown hook to remove the temp file.\n-                    t = new Thread(() -> {\n-                        runHooks();\n-                    });\n-                    Runtime.getRuntime().addShutdownHook(t);\n-                }\n-            }\n-\n-            private TempFileDeletionHook() {}\n-\n-            static synchronized void add(File file) {\n-                init();\n-                files.put(file, null);\n-            }\n-\n-            static synchronized void set(File file, RandomAccessFile raf) {\n-                files.put(file, raf);\n-            }\n-\n-            static synchronized void remove(File file) {\n-                files.remove(file);\n-            }\n-\n-            static synchronized void runHooks() {\n-                if (files.isEmpty()) {\n-                    return;\n-                }\n-\n-                for (Map.Entry<File, RandomAccessFile> entry : files.entrySet())\n-                {\n-                    \/\/ Close the associated raf, and then delete the file.\n-                    try {\n-                        if (entry.getValue() != null) {\n-                            entry.getValue().close();\n-                        }\n-                    } catch (Exception e) {}\n-                    entry.getKey().delete();\n-                }\n-            }\n-        }\n-    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/FontFileWriter.java","additions":1,"deletions":163,"binary":false,"changes":164,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -212,1 +212,1 @@\n-                         boolean copy, boolean tracked)\n+                         boolean copy)\n@@ -222,1 +222,1 @@\n-                                  true, false, false, false);\n+                                  true, false, false);\n@@ -228,1 +228,1 @@\n-                                             boolean copy, boolean tracked) {\n+                                             boolean copy) {\n@@ -244,1 +244,1 @@\n-                                embedded, copy, tracked);\n+                                embedded, copy);\n@@ -273,1 +273,1 @@\n-             PrismFontFile fr = createFontFile(null, filename, 0, false, false, false, false);\n+             PrismFontFile fr = createFontFile(null, filename, 0, false, false, false);\n@@ -281,1 +281,1 @@\n-                 fr = createFontFile(null, filename, index, false, false, false, false);\n+                 fr = createFontFile(null, filename, index, false, false, false);\n@@ -298,1 +298,1 @@\n-                                true, false, false, false, true);\n+                                true, false, false, true);\n@@ -322,1 +322,0 @@\n-                                                boolean tracked,\n@@ -330,1 +329,1 @@\n-                                              embedded, copy, tracked);\n+                                              embedded, copy);\n@@ -355,1 +354,1 @@\n-                                        copy, tracked);\n+                                        copy);\n@@ -1387,1 +1386,1 @@\n-                                   fontWriter.isTracking(), loadAll);\n+                                   loadAll);\n@@ -1409,2 +1408,1 @@\n-             * delete the tmp file and decrement the byte count\n-             * in the tracker object before returning.\n+             * delete the tmp file before returning.\n@@ -1448,1 +1446,1 @@\n-          loadEmbeddedFont1(name, path, register, false, false, loadAll);\n+          loadEmbeddedFont1(name, path, register, false, loadAll);\n@@ -1501,1 +1499,1 @@\n-                                          boolean tracked, boolean loadAll) {\n+                                          boolean loadAll) {\n@@ -1515,2 +1513,1 @@\n-                                                    true, copy, tracked,\n-                                                    loadAll);\n+                                                    true, copy, loadAll);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismFontFactory.java","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,0 @@\n-    boolean isTracked = false;\n@@ -92,1 +91,1 @@\n-                          boolean copy, boolean tracked) throws Exception {\n+                          boolean copy) throws Exception {\n@@ -97,1 +96,0 @@\n-        this.isTracked = tracked;\n@@ -103,1 +101,1 @@\n-        FileDisposer disposer = new FileDisposer(filename, isTracked, rc);\n+        FileDisposer disposer = new FileDisposer(filename, rc);\n@@ -199,1 +197,0 @@\n-        boolean isTracked;\n@@ -204,2 +201,1 @@\n-        public FileDisposer(String fileName, boolean isTracked,\n-                            FileRefCounter rc) {\n+        public FileDisposer(String fileName, FileRefCounter rc) {\n@@ -207,1 +203,0 @@\n-            this.isTracked = isTracked;\n@@ -229,6 +224,0 @@\n-                    \/\/ decrement tracker only after\n-                    \/\/ successful deletion.\n-                    if (isTracked) {\n-                        FontFileWriter.FontTracker.\n-                            getTracker().subBytes(size);\n-                    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismFontFile.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,2 +68,2 @@\n-            int fIndex, boolean register, boolean embedded, boolean copy,\n-            boolean tracked) throws Exception {\n+            int fIndex, boolean register, boolean embedded, boolean copy)\n+            throws Exception {\n@@ -71,1 +71,1 @@\n-                              embedded, copy, tracked);\n+                              embedded, copy);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/coretext\/CTFactory.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        super(name, filename, fIndex, false, false, false, false);\n+        super(name, filename, fIndex, false, false, false);\n@@ -79,2 +79,2 @@\n-               boolean embedded, boolean copy, boolean tracked) throws Exception {\n-        super(name, filename, fIndex, register, embedded, copy, tracked);\n+               boolean embedded, boolean copy) throws Exception {\n+        super(name, filename, fIndex, register, embedded, copy);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/coretext\/CTFontFile.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,2 @@\n-                                           boolean embedded, boolean copy,\n-                                           boolean tracked) throws Exception {\n+                                           boolean embedded, boolean copy)\n+                                           throws Exception {\n@@ -69,1 +69,1 @@\n-                              embedded, copy, tracked);\n+                              embedded, copy);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/directwrite\/DWFactory.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n-               boolean embedded, boolean copy, boolean tracked) throws Exception {\n-        super(name, filename, fIndex, register, embedded, copy, tracked);\n+               boolean embedded, boolean copy) throws Exception {\n+        super(name, filename, fIndex, register, embedded, copy);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/directwrite\/DWFontFile.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,2 +80,2 @@\n-                                           boolean embedded, boolean copy,\n-                                           boolean tracked) throws Exception {\n+                                           boolean embedded, boolean copy)\n+                                           throws Exception {\n@@ -83,1 +83,1 @@\n-                              embedded, copy, tracked);\n+                              embedded, copy);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/freetype\/FTFactory.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,2 +56,2 @@\n-               boolean embedded, boolean copy, boolean tracked) throws Exception {\n-        super(name, filename, fIndex, register, embedded, copy, tracked);\n+               boolean embedded, boolean copy) throws Exception {\n+        super(name, filename, fIndex, register, embedded, copy);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/freetype\/FTFontFile.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}