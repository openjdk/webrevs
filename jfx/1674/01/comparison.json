{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.UnmodifiableArrayList;\n@@ -32,0 +33,1 @@\n+import java.util.Comparator;\n@@ -37,1 +39,0 @@\n-\n@@ -42,1 +43,1 @@\n-public abstract class VetoableListDecorator<E> implements ObservableList<E> {\n+public abstract class VetoableListDecorator<E> implements ObservableList<E>, SortableList<E> {\n@@ -103,0 +104,7 @@\n+    @Override\n+    public final void doSort(Comparator<? super E> comparator) {\n+        var sortedList = new ArrayList<>(list);\n+        sortedList.sort(comparator);\n+        setAllImpl(Collections.unmodifiableList(sortedList));\n+    }\n+\n@@ -110,1 +118,1 @@\n-        return setAll(Arrays.asList(elements));\n+        return setAllImpl(new UnmodifiableArrayList<>(elements, elements.length));\n@@ -115,2 +123,7 @@\n-        Objects.requireNonNull(col);\n-        onProposedChange(Collections.unmodifiableList(new ArrayList<>(col)), 0, size());\n+        List<E> list = col instanceof List<?> ? (List<E>)col : new ArrayList<>(col);\n+        return setAllImpl(Collections.unmodifiableList(list));\n+    }\n+\n+    private boolean setAllImpl(List<E> unmodifiableList) {\n+        onProposedChange(unmodifiableList, 0, size());\n+\n@@ -119,1 +132,1 @@\n-            return list.setAll(col);\n+            return list.setAll(unmodifiableList);\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/collections\/VetoableListDecorator.java","additions":19,"deletions":6,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.Comparator;\n@@ -572,1 +573,0 @@\n-\n@@ -575,0 +575,8 @@\n+    @Test\n+    public void testSort() {\n+        list.setAll(\"d\", \"b\", \"a\", \"c\");\n+        calls.clear();\n+        list.sort(Comparator.naturalOrder());\n+        assertEquals(List.of(\"a\", \"b\", \"c\", \"d\"), list);\n+        assertSingleCall(new String[] {\"a\", \"b\", \"c\", \"d\"}, new int[] {0, 4});\n+    }\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/collections\/VetoableObservableListTest.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+import java.util.Comparator;\n+import java.util.List;\n@@ -280,0 +282,16 @@\n+    @Test\n+    public void testSortChildren() {\n+        Rectangle rect1 = new Rectangle();\n+        rect1.setId(\"1\");\n+        Rectangle rect2 = new Rectangle();\n+        rect2.setId(\"2\");\n+        Rectangle rect3 = new Rectangle();\n+        rect3.setId(\"3\");\n+\n+        Group g = new Group();\n+        g.getChildren().addAll(rect3, rect1, rect2);\n+        g.getChildren().sort(Comparator.comparing(node -> node.getId()));\n+\n+        assertEquals(List.of(rect1, rect2, rect3), g.getChildren());\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/ParentTest.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import org.junit.jupiter.api.Disabled;\n@@ -215,1 +214,0 @@\n-    @Disabled(\"JDK-8233179\")\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Parent_structuralPseudoClasses_Test.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}