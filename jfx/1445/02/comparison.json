{"files":[{"patch":"@@ -501,8 +501,0 @@\n-    private static native boolean nIsRTTVolatile(long contextHandle);\n-\n-    public boolean isRTTVolatile() {\n-        if (checkDisposed()) return false;\n-\n-        return nIsRTTVolatile(pContext);\n-    }\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DContext.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-        return getContext().isRTTVolatile();\n+        return false;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DRTTexture.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,0 @@\n-    public static final boolean disableD3D9Ex;\n@@ -329,2 +328,0 @@\n-        disableD3D9Ex = getBoolean(systemProperties, \"prism.disableD3D9Ex\", false);\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/PrismSettings.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-D3DContext::CreateInstance(IDirect3D9 *pd3d9, IDirect3D9Ex *pd3d9Ex, UINT adapter, bool isVsyncEnabled, D3DContext **ppCtx)\n+D3DContext::CreateInstance(IDirect3D9Ex *pd3d9, UINT adapter, bool isVsyncEnabled, D3DContext **ppCtx)\n@@ -75,1 +75,1 @@\n-    *ppCtx = new D3DContext(pd3d9, pd3d9Ex, adapter);\n+    *ppCtx = new D3DContext(pd3d9, adapter);\n@@ -83,1 +83,1 @@\n-D3DContext::D3DContext(IDirect3D9 *pd3d, IDirect3D9Ex *pd3dEx, UINT adapter)\n+D3DContext::D3DContext(IDirect3D9Ex *pd3d9, UINT adapter)\n@@ -86,3 +86,2 @@\n-    TraceLn1(NWT_TRACE_VERBOSE, \"  pd3d=0x%x\", pd3d);\n-    pd3dObject = pd3d;\n-    pd3dObjectEx = pd3dEx;\n+    TraceLn1(NWT_TRACE_VERBOSE, \"  pd3d9=0x%x\", pd3d9);\n+    pd3dObject = pd3d9;\n@@ -90,1 +89,0 @@\n-    pd3dDeviceEx = NULL;\n@@ -166,1 +164,0 @@\n-    SAFE_RELEASE(pd3dDeviceEx);\n@@ -657,1 +654,1 @@\n-HRESULT D3DContext::InitDevice(IDirect3DDevice9 *pd3dDevice)\n+HRESULT D3DContext::InitDevice(IDirect3DDevice9Ex *pd3dDevice)\n@@ -738,3 +735,3 @@\n-    TraceLn2(NWT_TRACE_INFO,\n-             \"D3DContext::testCooperativeLevel pd3dDevice = 0x%x, pd3dDeviceEx = 0x%x\",\n-             pd3dDevice, pd3dDeviceEx);\n+    TraceLn1(NWT_TRACE_INFO,\n+             \"D3DContext::CheckDeviceState pd3dDevice = 0x%x\",\n+             pd3dDevice);\n@@ -745,3 +742,1 @@\n-    HRESULT res = pd3dDeviceEx ?\n-        pd3dDeviceEx->CheckDeviceState(NULL) :\n-        pd3dDevice->TestCooperativeLevel();\n+    HRESULT res = pd3dDevice->CheckDeviceState(NULL);\n@@ -1283,1 +1278,1 @@\n-IDirect3DTexture9 *createTexture(D3DFORMAT format, int w, int h, IDirect3DSurface9 **pSurface, IDirect3DDevice9 *dev) {\n+IDirect3DTexture9 *createTexture(D3DFORMAT format, int w, int h, IDirect3DSurface9 **pSurface, IDirect3DDevice9Ex *dev) {\n@@ -1303,1 +1298,1 @@\n-    D3DFORMAT format, int w, int h, IDirect3DSurface9 **pSurface, IDirect3DDevice9 *dev)\n+    D3DFORMAT format, int w, int h, IDirect3DSurface9 **pSurface, IDirect3DDevice9Ex *dev)\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DContext.cc","additions":13,"deletions":18,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n- *  - provides access to IDirect3DDevice9 interface (creation,\n+ *  - provides access to IDirect3DDevice9Ex interface (creation,\n@@ -108,1 +108,1 @@\n-    static HRESULT CreateInstance(IDirect3D9 *pd3d9, IDirect3D9Ex *pd3d9Ex, UINT adapter, bool isVsyncEnabled, D3DContext **ppCtx);\n+    static HRESULT CreateInstance(IDirect3D9Ex *pd3d9, UINT adapter, bool isVsyncEnabled, D3DContext **ppCtx);\n@@ -133,2 +133,1 @@\n-    IDirect3DDevice9 *Get3DDevice() { return pd3dDevice; }\n-    IDirect3DDevice9Ex *Get3DExDevice() { return pd3dDeviceEx; }\n+    IDirect3DDevice9Ex *Get3DDevice() { return pd3dDevice; }\n@@ -136,1 +135,1 @@\n-    IDirect3D9 *Get3DObject() { return pd3dObject; }\n+    IDirect3D9Ex *Get3DObject() { return pd3dObject; }\n@@ -262,2 +261,2 @@\n-    D3DContext(IDirect3D9 *pd3d, IDirect3D9Ex *pd3dEx, UINT adapter);\n-    HRESULT InitDevice(IDirect3DDevice9 *d3dDevice);\n+    D3DContext(IDirect3D9Ex *pd3d9, UINT adapter);\n+    HRESULT InitDevice(IDirect3DDevice9Ex *d3dDevice);\n@@ -266,2 +265,1 @@\n-    IDirect3DDevice9        *pd3dDevice;\n-    IDirect3DDevice9Ex      *pd3dDeviceEx;\n+    IDirect3DDevice9Ex      *pd3dDevice;\n@@ -269,2 +267,1 @@\n-    IDirect3D9              *pd3dObject;\n-    IDirect3D9Ex            *pd3dObjectEx;\n+    IDirect3D9Ex            *pd3dObject;\n@@ -297,1 +294,1 @@\n-        IDirect3DTexture9 *getTexture(D3DFORMAT format, int width, int height, IDirect3DSurface9 **pSurface, IDirect3DDevice9 *dev);\n+        IDirect3DTexture9 *getTexture(D3DFORMAT format, int width, int height, IDirect3DSurface9 **pSurface, IDirect3DDevice9Ex *dev);\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DContext.h","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,10 +61,2 @@\n-    if (pd3dObjectEx) {\n-        hr = pd3dObjectEx->CreateDeviceEx(adapterOrdinal, devType, 0,\n-            dwBehaviorFlags, &params, 0, &pd3dDeviceEx);\n-        if (SUCCEEDED(hr)) {\n-            pd3dDevice = addRef<IDirect3DDevice9>(pd3dDeviceEx);\n-        }\n-    } else {\n-        hr = pd3dObject->CreateDevice(adapterOrdinal, devType, 0,\n-            dwBehaviorFlags, &params, &pd3dDevice);\n-    }\n+    hr = pd3dObject->CreateDeviceEx(adapterOrdinal, devType, 0,\n+        dwBehaviorFlags, &params, 0, &pd3dDevice);\n@@ -78,1 +70,1 @@\n-    defaulResourcePool = pd3dObjectEx ? D3DPOOL_DEFAULT : D3DPOOL_MANAGED;\n+    defaulResourcePool = D3DPOOL_DEFAULT;\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DContextInit.cc","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -268,1 +268,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n@@ -348,1 +348,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n@@ -497,13 +497,0 @@\n-\n-\/*\n- * Class:     com_sun_prism_d3d_D3DContext\n- * Method:    nIsRTTVolatile\n- *\/\n-JNIEXPORT jboolean JNICALL Java_com_sun_prism_d3d_D3DContext_nIsRTTVolatile\n-  (JNIEnv *, jclass, jlong ctx)\n-{\n-    D3DContext *pCtx = (D3DContext*)jlong_to_ptr(ctx);\n-    RETURN_STATUS_IF_NULL(pCtx, false);\n-\n-    return pCtx->Get3DExDevice() ? false : true;\n-}\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DGraphics.cc","additions":3,"deletions":16,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-    IDirect3DDevice9 *device = context->Get3DDevice();\n+    IDirect3DDevice9Ex *device = context->Get3DDevice();\n@@ -155,1 +155,1 @@\n-    IDirect3DDevice9 *device = context->Get3DDevice();\n+    IDirect3DDevice9Ex *device = context->Get3DDevice();\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DMesh.cc","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-    IDirect3DDevice9 *device = context->Get3DDevice();\n+    IDirect3DDevice9Ex *device = context->Get3DDevice();\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DMeshView.cc","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-IDirect3DVertexShader9 *createVertexShader(IDirect3DDevice9 *d, ShaderFunction pFun()) {\n+IDirect3DVertexShader9 *createVertexShader(IDirect3DDevice9Ex *d, ShaderFunction pFun()) {\n@@ -39,1 +39,1 @@\n-IDirect3DPixelShader9 *createPixelShader(IDirect3DDevice9 *d, ShaderFunction pFun()) {\n+IDirect3DPixelShader9 *createPixelShader(IDirect3DDevice9Ex *d, ShaderFunction pFun()) {\n@@ -62,1 +62,1 @@\n-D3DPhongShader::D3DPhongShader(IDirect3DDevice9 *dev) {\n+D3DPhongShader::D3DPhongShader(IDirect3DDevice9Ex *dev) {\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DPhongShader.cc","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-    D3DPhongShader(IDirect3DDevice9 *dev);\n+    D3DPhongShader(IDirect3DDevice9Ex *dev);\n@@ -124,1 +124,1 @@\n-    IDirect3DDevice9 *device;\n+    IDirect3DDevice9Ex *device;\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DPhongShader.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-typedef IDirect3D9 * WINAPI FnDirect3DCreate9(UINT SDKVersion);\n@@ -36,1 +35,0 @@\n-FnDirect3DCreate9 * pD3D9FactoryFunction = 0;\n@@ -54,1 +52,0 @@\n-        pD3D9FactoryFunction = (FnDirect3DCreate9*)GetProcAddress(hLibD3D9, \"Direct3DCreate9\");\n@@ -63,1 +60,0 @@\n-        pD3D9FactoryFunction = 0;\n@@ -68,4 +64,0 @@\n-IDirect3D9 * Direct3DCreate9() {\n-    return pD3D9FactoryFunction ? pD3D9FactoryFunction(D3D_SDK_VERSION) : 0;\n-}\n-\n@@ -240,1 +232,1 @@\n-inline IDirect3D9* addRef(IDirect3D9* i) {\n+inline IDirect3D9Ex* addRef(IDirect3D9Ex* i) {\n@@ -245,1 +237,1 @@\n-int getMaxSampleSupport(IDirect3D9 *d3d9, UINT adapter) {\n+int getMaxSampleSupport(IDirect3D9Ex *d3d9, UINT adapter) {\n@@ -275,2 +267,2 @@\n-    IDirect3D9 * d3d9 = D3DPipelineManager::GetInstance() ?\n-        addRef(D3DPipelineManager::GetInstance()->GetD3DObject()) : Direct3DCreate9();\n+    IDirect3D9Ex * d3d9 = D3DPipelineManager::GetInstance() ?\n+        addRef(D3DPipelineManager::GetInstance()->GetD3DObject()) : Direct3DCreate9Ex();\n@@ -310,2 +302,2 @@\n-    IDirect3D9 * d3d9 = D3DPipelineManager::GetInstance() ?\n-        addRef(D3DPipelineManager::GetInstance()->GetD3DObject()) : Direct3DCreate9();\n+    IDirect3D9Ex * d3d9 = D3DPipelineManager::GetInstance() ?\n+        addRef(D3DPipelineManager::GetInstance()->GetD3DObject()) : Direct3DCreate9Ex();\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DPipeline.cc","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2014, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,1 +126,1 @@\n-int getMaxSampleSupport(IDirect3D9 *d3d9, UINT adapter);\n+int getMaxSampleSupport(IDirect3D9Ex *d3d9, UINT adapter);\n@@ -139,1 +139,1 @@\n-inline void logDeviceTargets(IDirect3DDevice9 *pd3dDevice) {\n+inline void logDeviceTargets(IDirect3DDevice9Ex *pd3dDevice) {\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DPipeline.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,0 @@\n-    pd3d9Ex = NULL;\n@@ -86,1 +85,0 @@\n-    SAFE_RELEASE(pd3d9Ex);\n@@ -95,1 +93,0 @@\n-    bool useD3D9Ex = !cfg.getBool(\"disableD3D9Ex\");\n@@ -98,6 +95,1 @@\n-    pd3d9Ex = 0;\n-    if (useD3D9Ex && OS::isWindows7orNewer()) {\n-        pd3d9Ex = Direct3DCreate9Ex();\n-    }\n-\n-    pd3d9 = pd3d9Ex ? addRef<IDirect3D9>(pd3d9Ex) : Direct3DCreate9();\n+    pd3d9 = Direct3DCreate9Ex();\n@@ -106,1 +98,1 @@\n-        if (pd3d9Ex) {\n+        if (pd3d9) {\n@@ -108,2 +100,0 @@\n-        } else if (pd3d9) {\n-            fprintf(stderr, \"D3DPipelineManager: Created D3D9 device\\n\");\n@@ -117,1 +107,1 @@\n-        SetErrorMessage(\"InitD3D: unable to create IDirect3D9 object\");\n+        SetErrorMessage(\"InitD3D: unable to create IDirect3D9Ex object\");\n@@ -614,1 +604,1 @@\n-                res = D3DContext::CreateInstance(pd3d9, pd3d9Ex, adapterOrdinal, isVsyncEnabled, &pCtx);\n+                res = D3DContext::CreateInstance(pd3d9, adapterOrdinal, isVsyncEnabled, &pCtx);\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DPipelineManager.cc","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,0 @@\n-IDirect3D9 * Direct3DCreate9();\n@@ -83,1 +82,1 @@\n-    LPDIRECT3D9 GetD3DObject() { return pd3d9; }\n+    LPDIRECT3D9EX GetD3DObject() { return pd3d9; }\n@@ -138,2 +137,1 @@\n-    LPDIRECT3D9 pd3d9;\n-    IDirect3D9Ex * pd3d9Ex;\n+    IDirect3D9Ex * pd3d9;\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DPipelineManager.h","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -257,3 +257,1 @@\n-    int nBytes = pCtx->Get3DExDevice()\n-        ? updater.updateD3D9ExTexture(pCtx)\n-        : updater.updateLockableTexture();\n+    int nBytes = updater.updateD3D9ExTexture(pCtx);\n@@ -404,1 +402,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DResourceFactory.cc","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -275,1 +275,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n@@ -300,1 +300,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n@@ -333,1 +333,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n@@ -414,1 +414,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n@@ -432,1 +432,1 @@\n-    IDirect3D9 *pd3dObject = pCtx->Get3DObject();\n+    IDirect3D9Ex *pd3dObject = pCtx->Get3DObject();\n@@ -504,1 +504,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n@@ -547,1 +547,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DResourceManager.cc","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n@@ -102,1 +102,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n@@ -142,1 +142,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n@@ -182,1 +182,1 @@\n-    IDirect3DDevice9 *pd3dDevice = pCtx->Get3DDevice();\n+    IDirect3DDevice9Ex *pd3dDevice = pCtx->Get3DDevice();\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DShader.cc","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -167,1 +167,1 @@\n-        HRESULT hr = pCtx->Get3DExDevice()->UpdateSurface(tempSurface, &sRect, pSurface, &dPos);\n+        HRESULT hr = pCtx->Get3DDevice()->UpdateSurface(tempSurface, &sRect, pSurface, &dPos);\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/TextureUploader.cc","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}