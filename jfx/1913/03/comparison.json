{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,0 @@\n-import org.junit.jupiter.api.AfterEach;\n@@ -67,4 +66,0 @@\n-    @AfterEach\n-    public void cleanup() {\n-    }\n-\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/helloworld\/StageRobotTest.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import test.util.ScreenCaptureTestWatcher;\n@@ -34,0 +35,1 @@\n+import org.junit.jupiter.api.extension.ExtendWith;\n@@ -38,0 +40,1 @@\n+@ExtendWith(ScreenCaptureTestWatcher.class)\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/layout\/RegionBackgroundFillUITest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import test.util.ScreenCaptureTestWatcher;\n@@ -34,0 +35,1 @@\n+import org.junit.jupiter.api.extension.ExtendWith;\n@@ -42,0 +44,1 @@\n+@ExtendWith(ScreenCaptureTestWatcher.class)\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/layout\/RegionBackgroundImageUITest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,2 @@\n-    public void setupEach() {\n+    @Override\n+    public void doSetup() {\n@@ -63,0 +64,1 @@\n+        super.doSetup();\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/test3d\/AABalanceFlipTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -276,1 +276,2 @@\n-    public void setupEach() {\n+    @Override\n+    public void doSetup() {\n@@ -278,0 +279,1 @@\n+        super.doSetup();\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/test3d\/MeshCompareTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,2 @@\n-    public void setupEach() {\n+    @Override\n+    public void doSetup() {\n@@ -58,0 +59,1 @@\n+        super.doSetup();\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/test3d\/NearAndFarClipTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import org.junit.jupiter.api.AfterEach;\n@@ -71,1 +70,2 @@\n-    public void setupEach() {\n+    @Override\n+    public void doSetup() {\n@@ -73,0 +73,1 @@\n+        super.doSetup();\n@@ -84,0 +85,2 @@\n+            \/\/ The same scene can be used for all the illumination tests by this class\n+            clearStage = false;\n@@ -137,10 +140,0 @@\n-    \/**\n-     * This method is overridden and doing nothing, so that the test stage and scene\n-     * will not be hidden (which is the default behavior in the super class). The same\n-     * scene can be used for all the illumination tests by this class.\n-     *\/\n-    @Override\n-    @AfterEach\n-    public void doTeardown() {\n-    }\n-\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/test3d\/PointLightIlluminationTest.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,2 @@\n-    public void setupEach() {\n+    @Override\n+    public void doSetup() {\n@@ -60,0 +61,1 @@\n+        super.doSetup();\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/test3d\/RT35019Test.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -150,1 +150,2 @@\n-    public void setupEach() {\n+    @Override\n+    public void doSetup() {\n@@ -152,0 +153,1 @@\n+        super.doSetup();\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/test3d\/Snapshot3DTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,2 @@\n-    public void setupEach() {\n+    @Override\n+    public void doSetup() {\n@@ -66,0 +67,1 @@\n+        super.doSetup();\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/test3d\/TriangleMeshPNTValidationTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,2 @@\n-    public void setupEach() {\n+    @Override\n+    public void doSetup() {\n@@ -67,0 +68,1 @@\n+        super.doSetup();\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/test3d\/TriangleMeshValidationTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    private List<Stage> stages = new ArrayList<>();\n+    private static List<Stage> stages = new ArrayList<>();\n@@ -63,0 +63,2 @@\n+    protected static boolean clearStage = true;\n+\n@@ -99,11 +101,7 @@\n-        runAndWait(() -> robot = new Robot());\n-        Util.parkCursor(robot);\n-    }\n-\n-    @AfterEach\n-    public void doTeardown() {\n-        runAndWait(() -> {\n-            if (!stages.isEmpty()) {\n-                for (final Stage stage : stages) {\n-                    if (stage.isShowing()) {\n-                        stage.hide();\n+        if (clearStage) {\n+            runAndWait(() -> {\n+                if (!stages.isEmpty()) {\n+                    for (final Stage stage : stages) {\n+                        if (stage.isShowing()) {\n+                            stage.hide();\n+                        }\n@@ -111,0 +109,1 @@\n+                    stages.clear();\n@@ -112,3 +111,4 @@\n-                stages.clear();\n-            }\n-        });\n+            });\n+        }\n+        runAndWait(() -> robot = new Robot());\n+        Util.parkCursor(robot);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/testharness\/VisualTestBase.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"}]}