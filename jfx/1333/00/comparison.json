{"files":[{"patch":"@@ -26,4 +26,1 @@\n-package javafx.css;\n-\n-import com.sun.javafx.css.Combinator;\n-import com.sun.javafx.css.PseudoClassState;\n+package com.sun.javafx.css;\n@@ -39,0 +36,5 @@\n+import javafx.css.PseudoClass;\n+import javafx.css.Selector;\n+import javafx.css.StyleConverter;\n+import javafx.css.Styleable;\n+\n@@ -89,1 +91,1 @@\n-    CompoundSelector(List<SimpleSelector> selectors, List<Combinator> relationships) {\n+    public CompoundSelector(List<SimpleSelector> selectors, List<Combinator> relationships) {\n@@ -100,16 +102,0 @@\n-    @Override public Match createMatch() {\n-        final PseudoClassState allPseudoClasses = new PseudoClassState();\n-        int idCount = 0;\n-        int styleClassCount = 0;\n-\n-        for(int n=0, nMax=selectors.size(); n<nMax; n++) {\n-            Selector sel = selectors.get(n);\n-            Match match = sel.createMatch();\n-            allPseudoClasses.addAll(match.getPseudoClasses());\n-            idCount += match.idCount;\n-            styleClassCount += match.styleClassCount;\n-        }\n-\n-        return new Match(this, allPseudoClasses, idCount, styleClassCount);\n-    }\n-\n@@ -306,1 +292,1 @@\n-    static CompoundSelector readBinary(int bssVersion, final DataInputStream is, final String[] strings)\n+    public static CompoundSelector readBinary(int bssVersion, final DataInputStream is, final String[] strings)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/CompoundSelector.java","additions":8,"deletions":22,"binary":false,"changes":30,"previous_filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CompoundSelector.java","status":"renamed"},{"patch":"@@ -28,1 +28,0 @@\n-import javafx.css.CompoundSelector;\n@@ -30,1 +29,0 @@\n-import javafx.css.SimpleSelector;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/SelectorPartitioning.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-package javafx.css;\n+package com.sun.javafx.css;\n@@ -28,0 +28,5 @@\n+import javafx.css.PseudoClass;\n+import javafx.css.Selector;\n+import javafx.css.StyleClass;\n+import javafx.css.StyleConverter;\n+import javafx.css.Styleable;\n@@ -40,4 +45,0 @@\n-import com.sun.javafx.css.ImmutablePseudoClassSetsCache;\n-import com.sun.javafx.css.PseudoClassState;\n-import com.sun.javafx.css.StyleClassSet;\n-\n@@ -117,1 +118,1 @@\n-    Set<PseudoClass> getPseudoClassStates() {\n+    public Set<PseudoClass> getPseudoClassStates() {\n@@ -144,1 +145,1 @@\n-    SimpleSelector(final String name, final List<String> styleClasses,\n+    public SimpleSelector(final String name, final List<String> styleClasses,\n@@ -195,6 +196,0 @@\n-    @Override public Match createMatch() {\n-        final int idCount = (matchOnId) ? 1 : 0;\n-        int styleClassCount = styleClassSet.size();\n-        return new Match(this, pseudoClassState, idCount, styleClassCount);\n-    }\n-\n@@ -384,1 +379,1 @@\n-    static SimpleSelector readBinary(int bssVersion, final DataInputStream is, final String[] strings)\n+    public static SimpleSelector readBinary(int bssVersion, final DataInputStream is, final String[] strings)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/SimpleSelector.java","additions":9,"deletions":14,"binary":false,"changes":23,"previous_filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/SimpleSelector.java","status":"renamed"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.javafx.css.CompoundSelector;\n@@ -31,0 +32,1 @@\n+import com.sun.javafx.css.SimpleSelector;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import com.sun.javafx.css.SimpleSelector;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Match.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,3 @@\n+import com.sun.javafx.css.CompoundSelector;\n+import com.sun.javafx.css.PseudoClassState;\n+import com.sun.javafx.css.SimpleSelector;\n@@ -43,7 +46,1 @@\n-abstract public class Selector {\n-\n-    \/**\n-     * Package scoped constructor.\n-     *\/\n-    Selector() {\n-    }\n+public abstract sealed class Selector permits SimpleSelector, CompoundSelector {\n@@ -99,1 +96,27 @@\n-    public abstract Match createMatch();\n+    public final Match createMatch() {\n+        if (this instanceof SimpleSelector s) {\n+            int idCount = s.getId().isEmpty() ? 0 : 1;\n+            int styleClassCount = s.getStyleClassSet().size();\n+\n+            return new Match(this, s.getPseudoClassStates(), idCount, styleClassCount);\n+        }\n+\n+        if (this instanceof CompoundSelector cs) {\n+            PseudoClassState pseudoClasses = new PseudoClassState();\n+            int idCount = 0;\n+            int styleClassCount = 0;\n+\n+            for (int n = 0, max = cs.getSelectors().size(); n < max; n++) {\n+                Selector selector = cs.getSelectors().get(n);\n+                Match match = selector.createMatch();\n+\n+                pseudoClasses.addAll(match.getPseudoClasses());\n+                idCount += match.idCount;\n+                styleClassCount += match.styleClassCount;\n+            }\n+\n+            return new Match(this, pseudoClasses, idCount, styleClassCount);\n+        }\n+\n+        throw new AssertionError(\"unreachable, class is sealed\");\n+    }\n@@ -153,0 +176,1 @@\n+     * @return a selector, never {@code null}\n@@ -155,1 +179,1 @@\n-    static Selector readBinary(int bssVersion, DataInputStream is, String[] strings)\n+    protected static Selector readBinary(int bssVersion, DataInputStream is, String[] strings)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Selector.java","additions":33,"deletions":9,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -1,42 +0,0 @@\n-\/*\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package javafx.css;\n-\n-import java.util.List;\n-import java.util.Set;\n-\n-public class SimpleSelectorShim {\n-\n-    public static SimpleSelector getSimpleSelector(\n-            final String name, final List<String> styleClasses,\n-            final List<String> pseudoClasses, final String id) {\n-        return new SimpleSelector(name, styleClasses, pseudoClasses, id);\n-    }\n-\n-    public static Set<PseudoClass> getPseudoClassStates(SimpleSelector ss) {\n-        return ss.getPseudoClassStates();\n-    }\n-\n-}\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/javafx\/css\/SimpleSelectorShim.java","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"},{"patch":"@@ -57,1 +57,2 @@\n-import javafx.css.CompoundSelector;\n+import com.sun.javafx.css.CompoundSelector;\n+import com.sun.javafx.css.SimpleSelector;\n@@ -70,2 +71,0 @@\n-import javafx.css.SimpleSelector;\n-import javafx.css.SimpleSelectorShim;\n@@ -255,1 +254,1 @@\n-        if (selector instanceof SimpleSelector) {\n+        if (selector instanceof SimpleSelector s) {\n@@ -257,2 +256,1 @@\n-            pseudoClasses =\n-                    SimpleSelectorShim.getPseudoClassStates((SimpleSelector)selector);\n+            pseudoClasses = s.getPseudoClassStates();\n@@ -264,1 +262,1 @@\n-                Set<PseudoClass> selectorPseudoClasses = SimpleSelectorShim.getPseudoClassStates(sel);\n+                Set<PseudoClass> selectorPseudoClasses = sel.getPseudoClassStates();\n@@ -294,1 +292,1 @@\n-        Selector root = SimpleSelectorShim.getSimpleSelector(\"*\", rootStyleClass, null, null);\n+        Selector root = new SimpleSelector(\"*\", rootStyleClass, null, null);\n@@ -317,1 +315,1 @@\n-        Selector rect = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, null, null);\n+        Selector rect = new SimpleSelector(\"*\", rectStyleClass, null, null);\n@@ -335,1 +333,1 @@\n-        Selector rectHover = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n+        Selector rectHover = new SimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n@@ -399,1 +397,1 @@\n-        Selector root = SimpleSelectorShim.getSimpleSelector(\"*\", rootStyleClass, null, null);\n+        Selector root = new SimpleSelector(\"*\", rootStyleClass, null, null);\n@@ -422,1 +420,1 @@\n-        Selector rect = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, null, null);\n+        Selector rect = new SimpleSelector(\"*\", rectStyleClass, null, null);\n@@ -440,1 +438,1 @@\n-        Selector rectHover = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n+        Selector rectHover = new SimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n@@ -523,1 +521,1 @@\n-        Selector root = SimpleSelectorShim.getSimpleSelector(\"*\", rootStyleClass, null, null);\n+        Selector root = new SimpleSelector(\"*\", rootStyleClass, null, null);\n@@ -546,1 +544,1 @@\n-        Selector rect = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, null, null);\n+        Selector rect = new SimpleSelector(\"*\", rectStyleClass, null, null);\n@@ -564,1 +562,1 @@\n-        Selector rectHover = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n+        Selector rectHover = new SimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n@@ -647,1 +645,1 @@\n-        Selector root = SimpleSelectorShim.getSimpleSelector(\"*\", rootStyleClass, null, null);\n+        Selector root = new SimpleSelector(\"*\", rootStyleClass, null, null);\n@@ -670,1 +668,1 @@\n-        Selector rect = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, null, null);\n+        Selector rect = new SimpleSelector(\"*\", rectStyleClass, null, null);\n@@ -688,1 +686,1 @@\n-        Selector rectHover = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n+        Selector rectHover = new SimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n@@ -775,1 +773,1 @@\n-        Selector root = SimpleSelectorShim.getSimpleSelector(\"*\", rootStyleClass, null, null);\n+        Selector root = new SimpleSelector(\"*\", rootStyleClass, null, null);\n@@ -801,1 +799,1 @@\n-        Selector rect = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, null, null);\n+        Selector rect = new SimpleSelector(\"*\", rectStyleClass, null, null);\n@@ -819,1 +817,1 @@\n-        Selector rectHover = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n+        Selector rectHover = new SimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n@@ -886,1 +884,1 @@\n-        Selector root = SimpleSelectorShim.getSimpleSelector(\"*\", rootStyleClass, null, null);\n+        Selector root = new SimpleSelector(\"*\", rootStyleClass, null, null);\n@@ -909,1 +907,1 @@\n-        Selector rect = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, null, null);\n+        Selector rect = new SimpleSelector(\"*\", rectStyleClass, null, null);\n@@ -927,1 +925,1 @@\n-        Selector rectHover = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n+        Selector rectHover = new SimpleSelector(\"*\", rectStyleClass, pseudoclasses, null);\n@@ -989,1 +987,1 @@\n-        Selector root = SimpleSelectorShim.getSimpleSelector(\"*\", rootStyleClass, null, null);\n+        Selector root = new SimpleSelector(\"*\", rootStyleClass, null, null);\n@@ -1009,1 +1007,1 @@\n-        Selector textSelector = SimpleSelectorShim.getSimpleSelector(\"*\", textStyleClass, null, null);\n+        Selector textSelector = new SimpleSelector(\"*\", textStyleClass, null, null);\n@@ -1070,1 +1068,1 @@\n-        Selector root = SimpleSelectorShim.getSimpleSelector(\"*\", rootStyleClass, null, null);\n+        Selector root = new SimpleSelector(\"*\", rootStyleClass, null, null);\n@@ -1090,1 +1088,1 @@\n-        Selector textSelector = SimpleSelectorShim.getSimpleSelector(\"*\", rectStyleClass, null, null);\n+        Selector textSelector = new SimpleSelector(\"*\", rectStyleClass, null, null);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssMetaDataTest.java","additions":27,"deletions":29,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.javafx.css.SimpleSelector;\n@@ -39,2 +40,0 @@\n-import javafx.css.SimpleSelector;\n-import javafx.css.SimpleSelectorShim;\n@@ -91,2 +90,1 @@\n-            this.selector =\n-                SimpleSelectorShim.getSimpleSelector(type, styleClasses, null, id);\n+            this.selector = new SimpleSelector(type, styleClasses, null, id);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/SelectorPartitioningTest.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.css.SimpleSelector;\n@@ -52,1 +53,0 @@\n-import javafx.css.SimpleSelector;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StylesheetTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}