{"files":[{"patch":"@@ -398,0 +398,19 @@\n+#if ENABLE(VIDEO)\n+    else if (part == MediaSliderThumbPart) {\n+        static int timeWidth = 0;\n+        static int timeHeight;\n+        if (timeWidth == 0) {\n+            getSliderThumbSize(JNI_EXPAND_MEDIA(SLIDER_TYPE_TIME), &timeWidth, &timeHeight);\n+        }\n+        style.setWidth(Length(timeWidth, LengthType::Fixed));\n+        style.setHeight(Length(timeHeight, LengthType::Fixed));\n+    } else if (part == MediaVolumeSliderThumbPart) {\n+        static int volumeWidth = 0;\n+        static int volumeHeight;\n+        if (volumeWidth == 0) {\n+            getSliderThumbSize(JNI_EXPAND_MEDIA(SLIDER_TYPE_VOLUME), &volumeWidth, &volumeHeight);\n+        }\n+        style.setWidth(Length(volumeWidth, LengthType::Fixed));\n+        style.setHeight(Length(volumeHeight, LengthType::Fixed));\n+    }\n+#endif\n@@ -514,0 +533,33 @@\n+bool RenderThemeJava::paintMediaSliderTrack(const RenderObject& renderObject, const PaintInfo& paintInfo, const IntRect& r)\n+{\n+    auto mediaElement = parentMediaElement(renderObject.node());\n+    if (mediaElement == nullptr)\n+        return false;\n+\n+    Ref<TimeRanges> timeRanges = mediaElement->buffered();\n+\n+    paintInfo.context().platformContext()->rq().freeSpace(4\n+        + 4                 \/\/ number of timeRange pairs\n+        + timeRanges->length() * 4 *2   \/\/ timeRange pairs\n+        + 4 + 4             \/\/ duration and currentTime\n+        + 4 + 4 + 4 + 4     \/\/ x, y, w, h\n+        )\n+    << (jint)com_sun_webkit_graphics_GraphicsDecoder_RENDERMEDIA_TIMETRACK\n+    << (jint)timeRanges->length();\n+\n+    \/\/utatodo: need [double] support\n+    for (unsigned i = 0; i < timeRanges->length(); i++) {\n+        paintInfo.context().platformContext()->rq()\n+        << (jfloat)timeRanges->start(i).releaseReturnValue() << (jfloat)timeRanges->end(i).releaseReturnValue();\n+    }\n+\n+    paintInfo.context().platformContext()->rq()\n+    << (jfloat)mediaElement->duration()\n+    << (jfloat)mediaElement->currentTime()\n+    << (jint)r.x() <<  (jint)r.y() << (jint)r.width() << (jint)r.height();\n+    return true;\n+}\n+bool RenderThemeJava::paintMediaSliderThumb(const RenderObject& renderObject, const PaintInfo& paintInfo, const IntRect& r)\n+{\n+    return paintMediaControl(JNI_EXPAND_MEDIA(TIME_SLIDER_THUMB), renderObject, paintInfo, r);\n+}\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/RenderThemeJava.cpp","additions":52,"deletions":0,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -85,0 +85,2 @@\n+    bool paintMediaSliderTrack(const RenderObject&, const PaintInfo&, const IntRect&) override;\n+    bool paintMediaSliderThumb(const RenderObject&, const PaintInfo&, const IntRect&) override;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/RenderThemeJava.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -298,0 +298,3 @@\n+#if PLATFORM(JAVA)\n+    case MediaSliderPart:\n+#endif\n@@ -527,0 +530,6 @@\n+#if PLATFORM(JAVA)\n+    case MediaSliderPart:\n+        return paintMediaSliderTrack(box, paintInfo, integralSnappedRect);\n+    case MediaSliderThumbPart:\n+        return paintMediaSliderThumb(box, paintInfo, integralSnappedRect);\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderTheme.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -371,0 +371,5 @@\n+#if PLATFORM(JAVA)\n+    virtual bool paintMediaSliderTrack(const RenderObject&, const PaintInfo&, const IntRect&) { return true; }\n+    virtual bool paintMediaSliderThumb(const RenderObject&, const PaintInfo&, const IntRect&) { return true; }\n+#endif\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderTheme.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}