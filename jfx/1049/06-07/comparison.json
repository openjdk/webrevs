{"files":[{"patch":"@@ -150,0 +150,14 @@\n+#if PLATFORM(JAVA)\n+const AtomString& webkitMediaSliderThumb()\n+{\n+    static MainThreadNeverDestroyed<const AtomString> webkitMediaSliderThumb(\"-webkit-media-slider-thumb\"_s);\n+    return webkitMediaSliderThumb;\n+}\n+\n+const AtomString& webkitMediaSliderContainer()\n+{\n+    static MainThreadNeverDestroyed<const AtomString> webkitMediaSliderContainer(\"-webkit-media-slider-container\"_s);\n+    return webkitMediaSliderContainer;\n+}\n+#endif\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/shadow\/ShadowPseudoIds.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -63,0 +63,4 @@\n+#if PLATFORM(JAVA)\n+const AtomString& webkitMediaSliderThumb();\n+const AtomString& webkitMediaSliderContainer();\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/shadow\/ShadowPseudoIds.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,0 +67,3 @@\n+#if PLATFORM(JAVA)\n+WTF_MAKE_ISO_ALLOCATED_IMPL(RenderSliderThumb);\n+#endif\n@@ -81,0 +84,30 @@\n+#if PLATFORM(JAVA)\n+RenderSliderThumb::RenderSliderThumb(SliderThumbElement& element, RenderStyle&& style)\n+    : RenderBlockFlow(element, WTFMove(style))\n+{\n+}\n+\n+void RenderSliderThumb::updateAppearance(const RenderStyle* parentStyle)\n+{\n+    if (parentStyle->effectiveAppearance() == SliderVerticalPart)\n+        mutableStyle().setEffectiveAppearance(SliderThumbVerticalPart);\n+    else if (parentStyle->effectiveAppearance() == SliderHorizontalPart)\n+        mutableStyle().setEffectiveAppearance(SliderThumbHorizontalPart);\n+    else if (parentStyle->effectiveAppearance() == MediaSliderPart)\n+        mutableStyle().setEffectiveAppearance(MediaSliderThumbPart);\n+    else if (parentStyle->effectiveAppearance() == MediaVolumeSliderPart)\n+        mutableStyle().setEffectiveAppearance(MediaVolumeSliderThumbPart);\n+    else if (parentStyle->effectiveAppearance() == MediaFullScreenVolumeSliderPart)\n+        mutableStyle().setEffectiveAppearance(MediaFullScreenVolumeSliderThumbPart);\n+    if (style().hasEffectiveAppearance()) {\n+        ASSERT(element());\n+        theme().adjustSliderThumbSize(mutableStyle(), element());\n+    }\n+}\n+\n+bool RenderSliderThumb::isSliderThumb() const\n+{\n+    return true;\n+}\n+#endif\n+\n@@ -197,0 +230,7 @@\n+#if PLATFORM(JAVA)\n+RenderPtr<RenderElement> SliderThumbElement::createElementRenderer(RenderStyle&& style, const RenderTreePosition&)\n+{\n+    return createRenderer<RenderSliderThumb>(*this, WTFMove(style));\n+}\n+#endif\n+\n@@ -557,0 +597,1 @@\n+#if !PLATFORM(JAVA)\n@@ -565,0 +606,13 @@\n+\t}\n+\treturn elementStyle;\t\t\n+#else\n+    case MediaSliderPart:\n+    case MediaSliderThumbPart:\n+    case MediaVolumeSliderPart:\n+    case MediaVolumeSliderThumbPart:\n+    case MediaFullScreenVolumeSliderPart:\n+    case MediaFullScreenVolumeSliderThumbPart:\n+        m_shadowPseudoId = ShadowPseudoIds::webkitMediaSliderThumb();\n+        break;\n+    default:\n+        m_shadowPseudoId = ShadowPseudoIds::webkitSliderThumb();\n@@ -566,0 +620,4 @@\n+#endif\t\n+\n+    return std::nullopt;\n+}\n@@ -567,1 +625,4 @@\n-    return elementStyle;\n+#if PLATFORM(JAVA)\n+const AtomString& SliderThumbElement::shadowPseudoId() const\n+{\n+    return m_shadowPseudoId;\n@@ -569,0 +630,1 @@\n+#endif\n@@ -596,0 +658,30 @@\n+#if PLATFORM(JAVA)\n+std::optional<Style::ElementStyle> SliderContainerElement::resolveCustomStyle(const Style::ResolutionContext&, const RenderStyle* hostStyle)\n+{\n+    \/\/ This doesn't actually compute style. This is just a hack to pick shadow pseudo id when host style is known.\n+\n+    if (!hostStyle)\n+        return std::nullopt;\n+\n+    switch (hostStyle->effectiveAppearance()) {\n+    case MediaSliderPart:\n+    case MediaSliderThumbPart:\n+    case MediaVolumeSliderPart:\n+    case MediaVolumeSliderThumbPart:\n+    case MediaFullScreenVolumeSliderPart:\n+    case MediaFullScreenVolumeSliderThumbPart:\n+        m_shadowPseudoId = ShadowPseudoIds::webkitMediaSliderContainer();\n+        break;\n+    default:\n+        m_shadowPseudoId = ShadowPseudoIds::webkitSliderContainer();\n+    }\n+\n+    return std::nullopt;\n+}\n+\n+const AtomString& SliderContainerElement::shadowPseudoId() const\n+{\n+    return m_shadowPseudoId;\n+}\n+#endif\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/shadow\/SliderThumbElement.cpp","additions":93,"deletions":1,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -62,0 +62,3 @@\n+#if PLATFORM(JAVA)\n+    RenderPtr<RenderElement> createElementRenderer(RenderStyle&&, const RenderTreePosition&) final;\n+#endif\n@@ -77,0 +80,3 @@\n+#if PLATFORM(JAVA)\n+    const AtomString& shadowPseudoId() const final;\n+#endif\n@@ -107,0 +113,12 @@\n+#if PLATFORM(JAVA)\n+class RenderSliderThumb final : public RenderBlockFlow {\n+    WTF_MAKE_ISO_ALLOCATED(RenderSliderThumb);\n+public:\n+    RenderSliderThumb(SliderThumbElement&, RenderStyle&&);\n+    void updateAppearance(const RenderStyle* parentStyle);\n+\n+private:\n+    bool isSliderThumb() const final;\n+};\n+#endif\n+\n@@ -117,0 +135,4 @@\n+#if PLATFORM(JAVA)\n+    std::optional<Style::ElementStyle> resolveCustomStyle(const Style::ResolutionContext&, const RenderStyle*) final;\n+    const AtomString& shadowPseudoId() const final;\n+#endif\n@@ -118,0 +140,3 @@\n+#if PLATFORM(JAVA)\n+    AtomString m_shadowPseudoId;\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/shadow\/SliderThumbElement.h","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -241,0 +241,3 @@\n+#if PLATFORM(JAVA)\n+    virtual bool isSliderThumb() const { return false; }\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderObject.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -94,0 +94,14 @@\n+#if PLATFORM(JAVA)\n+void RenderSlider::layout()\n+{\n+    StackStats::LayoutCheckPoint layoutCheckPoint;\n+\n+    \/\/ FIXME: Find a way to cascade appearance. http:\/\/webkit.org\/b\/62535\n+    RenderBox* thumbBox = element().sliderThumbElement()->renderBox();\n+    if (thumbBox && thumbBox->isSliderThumb())\n+        static_cast<RenderSliderThumb*>(thumbBox)->updateAppearance(&style());\n+\n+    RenderFlexibleBox::layout();\n+}\n+#endif\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderSlider.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -51,0 +51,3 @@\n+#if PLATFORM(JAVA)\n+    void layout() override;\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderSlider.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}