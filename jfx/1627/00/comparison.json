{"files":[{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.javafx;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+\/**\n+ * Utility class to check for the presence of a security manager.\n+ *\/\n+public class SecurityUtil {\n+\n+    \/\/ Prevent class from being instantiated.\n+    private SecurityUtil() {}\n+\n+    \/**\n+     * Check for the presence of a security manager (from an older JDK) and\n+     * throw UnsupportedOperationException if enabled. Use reflection to avoid\n+     * a dependency on an API that is deprecated for removal. This method does\n+     * nothing if the security manager is not enabled or if\n+     * System::getSecurityManager cannot be invoked.\n+     *\n+     * @throws UnsupportedOperationException if the security manager is enabled\n+     *\/\n+    public static void checkSecurityManager() {\n+        try {\n+            \/\/ Call System.getSecurityManager() using reflection. Throw an\n+            \/\/ UnsupportedOperationException if it returns a non-null object.\n+            \/\/ If we cannot find or invoke getSecurityManager, ignore the error.\n+            Method meth = System.class.getMethod(\"getSecurityManager\");\n+            Object sm = meth.invoke(null);\n+            if (sm != null) {\n+                throw new UnsupportedOperationException(\"JavaFX does not support running with the Security Manager\");\n+            }\n+        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException ex) {\n+            \/\/ Ignore the error\n+        }\n+    }\n+}\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/SecurityUtil.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.SecurityUtil;\n@@ -80,0 +81,6 @@\n+\n+    static {\n+        \/\/ Check for security manager (throws exception if enabled)\n+        SecurityUtil.checkSecurityManager();\n+    }\n+\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/reflect\/MethodUtil.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.javafx.SecurityUtil;\n@@ -33,0 +34,5 @@\n+    static {\n+        \/\/ Check for security manager (throws exception if enabled)\n+        SecurityUtil.checkSecurityManager();\n+    }\n+\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/reflect\/ReflectUtil.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.javafx.SecurityUtil;\n@@ -60,6 +61,2 @@\n-        @SuppressWarnings(\"removal\")\n-        var sm = System.getSecurityManager();\n-        if (sm != null) {\n-            throw new UnsupportedOperationException(\"JavaFX does not support running with the Security Manager\");\n-        }\n-\n+        \/\/ Check for security manager (throws exception if enabled)\n+        SecurityUtil.checkSecurityManager();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/LauncherImpl.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import com.sun.javafx.SecurityUtil;\n@@ -64,6 +65,2 @@\n-        @SuppressWarnings(\"removal\")\n-        var sm = System.getSecurityManager();\n-        if (sm != null) {\n-            throw new UnsupportedOperationException(\"JavaFX does not support running with the Security Manager\");\n-        }\n-\n+        \/\/ Check for security manager (throws exception if enabled)\n+        SecurityUtil.checkSecurityManager();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/PlatformImpl.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}