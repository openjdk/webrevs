{"files":[{"patch":"@@ -48,1 +48,0 @@\n-- (void)_restorePreZoomedRect;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow+Java.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -299,17 +299,1 @@\n-    NSString *const constantRestorePreZoomRect = @\"_restorePreZoomedRect\";\n-    NSArray *syms = [NSThread  callStackSymbols];\n-    NSString *callerMethod;\n-\n-    bool callFlipFrame = true;\n-    if ([syms count] > 1) {\n-        callerMethod = [syms objectAtIndex:1];\n-        if([callerMethod rangeOfString:constantRestorePreZoomRect].location != NSNotFound){\n-            callFlipFrame = false;\n-        }\n-    }\n-    if (callFlipFrame) {\n-        [self _setFlipFrame:frame display:(BOOL)display animate:(BOOL)animate];\n-    }\n-    else {\n-        [self->nsWindow setFrame:frame display:(BOOL)display animate:(BOOL)animate];\n-    }\n+    [self _setFlipFrame:frame display:(BOOL)display animate:(BOOL)animate];\n@@ -341,7 +325,0 @@\n-- (void)_restorePreZoomedRect\n-{\n-    [self _setWindowFrameWithRect:NSMakeRect(self->preZoomedRect.origin.x, self->preZoomedRect.origin.y, self->preZoomedRect.size.width, self->preZoomedRect.size.height) withDisplay:JNI_TRUE withAnimate:JNI_TRUE];\n-    [self _sendJavaWindowMoveEventForFrame:[self _flipFrame]];\n-    [self _sendJavaWindowResizeEvent:com_sun_glass_events_WindowEvent_RESTORE forFrame:[self _flipFrame]];\n-}\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow+Java.m","additions":1,"deletions":24,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -184,2 +184,0 @@\n-    (*env)->CallVoidMethod(env, jWindow, jWindowNotifyResize, com_sun_glass_events_WindowEvent_MAXIMIZE, (int)newFrame.size.width, (int)newFrame.size.height);\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow+Overrides.m","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1040,0 +1040,4 @@\n+\n+        NSRect oldFrame = window->nsWindow.frame;\n+        int eventType = com_sun_glass_events_WindowEvent_RESTORE;\n+\n@@ -1041,0 +1045,1 @@\n+        window->suppressWindowMoveEvent = YES;\n@@ -1044,1 +1049,2 @@\n-            window->preZoomedRect = [window->nsWindow frame];\n+            window->preZoomedRect = oldFrame;\n+            eventType = com_sun_glass_events_WindowEvent_MAXIMIZE;\n@@ -1049,1 +1055,0 @@\n-                \/\/ windowShouldZoom will be called automatically in this case\n@@ -1054,4 +1059,1 @@\n-                [window _setWindowFrameWithRect:NSMakeRect(visibleRect.origin.x, visibleRect.origin.y, visibleRect.size.width, visibleRect.size.height) withDisplay:JNI_TRUE withAnimate:JNI_TRUE];\n-\n-                \/\/ calling windowShouldZoom will send Java maximize event\n-                [window windowShouldZoom:window->nsWindow toFrame:[window->nsWindow frame]];\n+                [window->nsWindow setFrame:visibleRect display:YES animate:YES];\n@@ -1062,1 +1064,9 @@\n-            [window _restorePreZoomedRect];\n+            \/\/ Platform unzooming only works reliably for titled windows. For\n+            \/\/ untitled windows the unzoom location can be wildly off. We want\n+            \/\/ to use platform unzoom when we can since it uses the platform's\n+            \/\/ user state which may be more up-to-date than the preZoomedRect.\n+            if (window->nsWindow.styleMask & NSWindowStyleMaskTitled) {\n+                [window->nsWindow zoom:nil];\n+            } else {\n+                [window->nsWindow setFrame:window->preZoomedRect display:YES animate:YES];\n+            }\n@@ -1066,0 +1076,8 @@\n+        window->suppressWindowMoveEvent = NO;\n+\n+        NSRect newFrame = window->nsWindow.frame;\n+        if (!NSEqualRects(newFrame, oldFrame)) {\n+            NSRect flipFrame = [window _flipFrame];\n+            [window _sendJavaWindowMoveEventForFrame:flipFrame];\n+            [window _sendJavaWindowResizeEvent:eventType forFrame:flipFrame];\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow.m","additions":25,"deletions":7,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -122,3 +122,0 @@\n-        \/\/ Disable on Mac until JDK-8089230 is fixed\n-        assumeTrue(!PlatformUtil.isMac());\n-\n@@ -132,2 +129,2 @@\n-        Platform.runLater(() -> stage.setMaximized(true));\n-        Thread.sleep(200);\n+        Util.runAndWait(() -> stage.setMaximized(true));\n+        Util.waitForIdle(stage.getScene());\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/stage\/RestoreStagePositionTest.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}