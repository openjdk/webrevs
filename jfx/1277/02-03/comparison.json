{"files":[{"patch":"@@ -32,0 +32,3 @@\n+import java.lang.ref.WeakReference;\n+import java.util.ArrayList;\n+\n@@ -45,0 +48,1 @@\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n@@ -63,0 +67,1 @@\n+    CountDownLatch memoryLatch = new CountDownLatch(1);\n@@ -111,0 +116,57 @@\n+\n+    @Test\n+    public void testMemoryLeak() throws InterruptedException {\n+        Util.runAndWait(() -> {\n+            Thread.currentThread().setUncaughtExceptionHandler((t,e) -> {\n+                e.printStackTrace();\n+                failed.set(true);\n+            });\n+            createMenuBarWithItemsStage();\n+        });\n+        memoryLatch.await();\n+        assertFalse(failed.get());\n+    }\n+\n+    public void createMenuBarWithItemsStage() {\n+        final ArrayList<WeakReference<MenuItem>> uncollectedMenuItems = new ArrayList<>();\n+\n+        Stage stage = new Stage();\n+        VBox root = new VBox();\n+        final MenuBar menuBar = new MenuBar();\n+        final Menu menu = new Menu(\"MyMenu\");\n+        menuBar.getMenus().add(menu);\n+        menuBar.setUseSystemMenuBar(true);\n+        root.getChildren().add(menuBar);\n+\n+        Scene scene = new Scene(root);\n+        stage.setScene(scene);\n+        stage.show();\n+        stage.requestFocus();\n+        Thread t = new Thread(){\n+            @Override public void run() {\n+                for (int i = 0; i < 50; i++) {\n+                    try {\n+                        Thread.sleep(20);\n+                    } catch (Exception e) {\n+                        e.printStackTrace();\n+                    }\n+                    Platform.runLater(() -> {\n+                        menu.getItems().clear();\n+                        MenuItem menuItem = new MenuItem(\"MyItem\");\n+                        WeakReference wr = new WeakReference<>(menuItem);\n+                        uncollectedMenuItems.add(wr);\n+                        menu.getItems().add(menuItem);\n+                    });\n+                }\n+                Platform.runLater( () -> {\n+                    System.gc();\n+                    uncollectedMenuItems.removeIf(ref -> ref.get() == null);\n+                    assertEquals(1, uncollectedMenuItems.size(), \"Only the last menuItem should be alive\");\n+                    memoryLatch.countDown();\n+                });\n+            }\n+        };\n+        t.start();\n+\n+    }\n+\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/stage\/SystemMenuBarTest.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"modified"}]}