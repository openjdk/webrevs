{"files":[{"patch":"@@ -118,1 +118,1 @@\n-     *              {@link #increment(int)} with the absolute number of steps.\n+     *              {@link #increment(int)} with the absolute value of {@code steps}.\n@@ -129,1 +129,1 @@\n-     *              {@link #decrement(int)} with the absolute number of steps.\n+     *              {@link #decrement(int)} with the absolute number of {@code steps}.\n@@ -417,1 +417,1 @@\n-     * If {@link #wrapAround} is {@code true}, the {@code IntegerSpinnerValueFactory} will step from\n+     * If {@link #wrapAroundProperty wrapAround} is {@code true}, the {@code IntegerSpinnerValueFactory} will step from\n@@ -419,2 +419,3 @@\n-     * of steps required to wrap around to the same value is N+1, where N is the number of steps between\n-     * {@link #min} (inclusive) and {@link #max} (inclusive).\n+     * of steps required to wrap around to the same value is {@code N+1}, where {@code N} is the number of steps between\n+     * {@link #minProperty min} (inclusive) and {@link #maxProperty max} (inclusive). The new value after a step is\n+     * {@code val = (val + amountToStepBy) % (max - min + 1)}.\n@@ -619,3 +620,4 @@\n-     * If {@link #wrapAround} is {@code true}, the {@code DoubleSpinnerValueFactory} will step through\n-     * from the maximum value to the minimum value seamlessly; that is, any step up from the maximum value\n-     * is equal to the same step up from the minimum value (and vice versa).\n+     * If {@link #wrapAroundProperty wrapAround} is {@code true}, the {@code DoubleSpinnerValueFactory} will step\n+     * through from the maximum value to the minimum value seamlessly; that is, any step up from the maximum value\n+     * is equal to the same step up from the minimum value (and vice versa). The new value after a step is\n+     * {@code val = (val + amountToStepBy) % (max - min)}.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/SpinnerValueFactory.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"}]}