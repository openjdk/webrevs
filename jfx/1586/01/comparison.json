{"files":[{"patch":"@@ -290,2 +290,1 @@\n-            ViewPainter painter = ((ViewScene)oldScene).getPainter();\n-            QuantumRenderer.getInstance().disposePresentable(painter.presentable);   \/\/ latched on RT\n+            disposeScenePainter((ViewScene) oldScene);\n@@ -295,0 +294,5 @@\n+    private static void disposeScenePainter(ViewScene oldScene) {\n+        ViewPainter painter = oldScene.getPainter();\n+        QuantumRenderer.getInstance().disposePresentable(painter.presentable);   \/\/ latched on RT\n+    }\n+\n@@ -795,1 +799,1 @@\n-            GlassScene oldScene = getViewScene();\n+            ViewScene oldScene = getViewScene();\n@@ -798,0 +802,1 @@\n+                disposeScenePainter(oldScene);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/WindowStage.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -193,1 +193,5 @@\n-        if (drawable.getNativeWindow() != pState.getNativeWindow()) {\n+        if (drawable == null || drawable.getNativeWindow() != pState.getNativeWindow()) {\n+            if (drawable != null) {\n+                drawable.dispose();\n+            }\n+\n@@ -307,0 +311,5 @@\n+\n+        if (drawable != null) {\n+            drawable.dispose();\n+            drawable = null;\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2SwapChain.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,1 +28,3 @@\n-abstract class GLDrawable {\n+import com.sun.prism.GraphicsResource;\n+\n+abstract class GLDrawable implements GraphicsResource {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/GLDrawable.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+    private static native void nDestroyDrawable(long nativeCtxInfo);\n@@ -35,1 +36,0 @@\n-\n@@ -54,0 +54,5 @@\n+    @Override\n+    public void dispose() {\n+        nDestroyDrawable(nativeDrawableInfo);\n+        nativeDrawableInfo = 0;\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/IOSGLDrawable.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+    private static native void nDestroyDrawable(long nativeCtxInfo);\n@@ -52,0 +53,6 @@\n+\n+    @Override\n+    public void dispose() {\n+        nDestroyDrawable(nativeDrawableInfo);\n+        nativeDrawableInfo = 0;\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/MacGLDrawable.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -70,0 +70,5 @@\n+\n+    @Override\n+    public void dispose() {\n+        \/\/empty\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/MonocleGLDrawable.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+    private static native void nDestroyDrawable(long nativeCtxInfo);\n@@ -53,0 +54,6 @@\n+\n+    @Override\n+    public void dispose() {\n+        nDestroyDrawable(nativeDrawableInfo);\n+        nativeDrawableInfo = 0;\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/WinGLDrawable.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+    private static native void nDestroyDrawable(long nativeCtxInfo);\n@@ -52,0 +53,6 @@\n+\n+    @Override\n+    public void dispose() {\n+        nDestroyDrawable(nativeDrawableInfo);\n+        nativeDrawableInfo = 0;\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/X11GLDrawable.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1,66 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <jni.h>\n-#include <stdlib.h>\n-#include <assert.h>\n-#include <stdio.h>\n-#include <string.h>\n-#include <math.h>\n-\n-#include \"PrismES2Defs.h\"\n-\n-void initializeDrawableInfo(DrawableInfo *dInfo)\n-{\n-    if (dInfo == NULL) {\n-        return;\n-    }\n-    \/\/ Initialize structure to all zeros\n-    memset(dInfo, 0, sizeof(DrawableInfo));\n-}\n-\n-void deleteDrawableInfo(DrawableInfo *dInfo)\n-{\n-    if (dInfo == NULL) {\n-        return;\n-    }\n-#ifdef WIN32 \/* WIN32 *\/\n-    if ((dInfo->hdc != NULL) && (dInfo->hwnd != NULL)) {\n-        ReleaseDC(dInfo->hwnd, dInfo->hdc);\n-    }\n-#endif\n-#ifdef UNIX\n-    \/\/ This win is pass in from Glass so we most likely don't destroy it\n-    \/*\n-            if (dInfo->display == NULL) {\n-                if (dInfo->win != None) {\n-                    XDestroyWindow(dInfo->display, dInfo->win);\n-                }\n-            }\n-     *\/\n-#endif\n-    \/\/ Initialize structure to all zeros\n-    memset(dInfo, 0, sizeof (DrawableInfo));\n-}\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/GLDrawable.c","additions":0,"deletions":66,"binary":false,"changes":66,"status":"deleted"},{"patch":"@@ -55,1 +55,1 @@\n-    initializeDrawableInfo(dInfo);\n+    memset(dInfo, 0, sizeof(DrawableInfo));\n@@ -87,1 +87,1 @@\n-    initializeDrawableInfo(dInfo);\n+    memset(dInfo, 0, sizeof(DrawableInfo));\n@@ -111,0 +111,16 @@\n+\n+\n+\/*\n+ * Class:     com_sun_prism_es2_IOSGLDrawable\n+ * Method:    nDestroyDrawable\n+ * Signature: (J)V\n+ *\/\n+JNIEXPORT void JNICALL Java_com_sun_prism_es2_IOSGLDrawable_nDestroyDrawable\n+(JNIEnv *env, jclass class, jlong nativeDInfo) {\n+    DrawableInfo *dInfo = (DrawableInfo *) jlong_to_ptr(nativeDInfo);\n+    if (dInfo == NULL) {\n+        return;\n+    }\n+\n+    free(dInfo);\n+}\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/ios\/IOSGLDrawable.c","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -35,2 +35,0 @@\n-extern void initializeDrawableInfo(DrawableInfo *dInfo);\n-\n@@ -54,1 +52,1 @@\n-    initializeDrawableInfo(dInfo);\n+    memset(dInfo, 0, sizeof(DrawableInfo));\n@@ -85,1 +83,1 @@\n-    initializeDrawableInfo(dInfo);\n+    memset(dInfo, 0, sizeof(DrawableInfo));\n@@ -108,0 +106,15 @@\n+\n+\/*\n+ * Class:     com_sun_prism_es2_MacGLDrawable\n+ * Method:    nDestroyDrawable\n+ * Signature: (J)V\n+ *\/\n+JNIEXPORT void JNICALL Java_com_sun_prism_es2_MacGLDrawable_nDestroyDrawable\n+(JNIEnv *env, jclass class, jlong nativeDInfo) {\n+    DrawableInfo *dInfo = (DrawableInfo *) jlong_to_ptr(nativeDInfo);\n+    if (dInfo == NULL) {\n+        return;\n+    }\n+\n+    free(dInfo);\n+}\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/macosx\/MacGLDrawable.c","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-    initializeDrawableInfo(dInfo);\n+    memset(dInfo, 0, sizeof(DrawableInfo));\n@@ -105,1 +105,1 @@\n-    initializeDrawableInfo(dInfo);\n+    memset(dInfo, 0, sizeof(DrawableInfo));\n@@ -129,0 +129,20 @@\n+\n+\n+\/*\n+ * Class:     com_sun_prism_es2_WinGLDrawable\n+ * Method:    nDestroyDrawable\n+ * Signature: (J)V\n+ *\/\n+JNIEXPORT void JNICALL Java_com_sun_prism_es2_WinGLDrawable_nDestroyDrawable\n+(JNIEnv *env, jclass class, jlong nativeDInfo) {\n+    DrawableInfo *dInfo = (DrawableInfo *) jlong_to_ptr(nativeDInfo);\n+    if (dInfo == NULL) {\n+        return;\n+    }\n+\n+    if ((dInfo->hdc != NULL) && (dInfo->hwnd != NULL)) {\n+        ReleaseDC(dInfo->hwnd, dInfo->hdc);\n+    }\n+\n+    free(dInfo);\n+}\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/windows\/WinGLDrawable.c","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-extern void deleteDrawableInfo(DrawableInfo *dInfo);\n@@ -51,0 +50,1 @@\n+\n@@ -59,1 +59,1 @@\n-    initializeDrawableInfo(dInfo);\n+    memset(dInfo, 0, sizeof(DrawableInfo));\n@@ -91,1 +91,1 @@\n-    initializeDrawableInfo(dInfo);\n+    memset(dInfo, 0, sizeof(DrawableInfo));\n@@ -116,0 +116,15 @@\n+\n+\/*\n+ * Class:     com_sun_prism_es2_X11GLDrawable\n+ * Method:    nDestroyDrawable\n+ * Signature: (J)V\n+ *\/\n+JNIEXPORT void JNICALL Java_com_sun_prism_es2_X11GLDrawable_nDestroyDrawable\n+(JNIEnv *env, jclass class, jlong nativeDInfo) {\n+    DrawableInfo *dInfo = (DrawableInfo *) jlong_to_ptr(nativeDInfo);\n+    if (dInfo == NULL) {\n+        return;\n+    }\n+\n+    free(dInfo);\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/x11\/X11GLDrawable.c","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"}]}