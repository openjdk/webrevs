{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-\n+import javafx.application.Platform;\n@@ -80,1 +80,1 @@\n-\n+import javafx.util.Subscription;\n@@ -133,1 +133,1 @@\n-\n+    private volatile Subscription windowSubscription;\n@@ -232,0 +232,25 @@\n+        if (Platform.isFxApplicationThread()) {\n+            if (Toolkit.getToolkit().getSystemMenu().isSupported()) {\n+                lh.addInvalidationListener(control.useSystemMenuBarProperty(), (v) -> {\n+                    rebuildUI();\n+                });\n+            }\n+        } else {\n+            \/\/ delay rebuildUI() until after MenuBar becomes a part of the scene graph\n+            \/\/ this subscription will be removed by cleanUpListeners()\n+            windowSubscription = getSkinnable()\n+                .sceneProperty()\n+                .flatMap(Scene::windowProperty)\n+                .subscribe(w -> {\n+                    if (w != null) {\n+                        if (Toolkit.getToolkit().getSystemMenu().isSupported()) {\n+                            lh.addInvalidationListener(control.useSystemMenuBarProperty(), (v) -> {\n+                                rebuildUI();\n+                            });\n+                        }\n+                        \/\/ this method will unsubscribe on first run\n+                        rebuildUI();\n+                    }\n+                });\n+        }\n+\n@@ -237,6 +262,0 @@\n-        if (Toolkit.getToolkit().getSystemMenu().isSupported()) {\n-            lh.addInvalidationListener(control.useSystemMenuBarProperty(), (v) -> {\n-                rebuildUI();\n-            });\n-        }\n-\n@@ -786,0 +805,6 @@\n+        Subscription sub = windowSubscription;\n+        if (sub != null) {\n+            sub.unsubscribe();\n+            windowSubscription = null;\n+        }\n+\n@@ -820,0 +845,3 @@\n+        if (!Platform.isFxApplicationThread()) {\n+            return;\n+        }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/MenuBarSkin.java","additions":38,"deletions":10,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -90,0 +90,2 @@\n+import javafx.scene.control.Menu;\n+import javafx.scene.control.MenuBar;\n@@ -127,0 +129,1 @@\n+import javafx.scene.control.skin.MenuBarSkin;\n@@ -212,1 +215,0 @@\n- * - MenuBar\n@@ -747,0 +749,19 @@\n+    @Test\n+    public void menuBar() {\n+        assumeFalse(SKIP_TEST);\n+        test(() -> {\n+            MenuBar c = new MenuBar();\n+            \/\/ exercise skin installation and disposal code paths\n+            c.setSkin(new MenuBarSkin(c));\n+            c.setSkin(new MenuBarSkin(c));\n+            c.setUseSystemMenuBar(nextBoolean());\n+            return c;\n+        }, (c) -> {\n+            c.getMenus().setAll(new Menu(\"MenuBar\"));\n+            accessControl(c);\n+            if (Platform.isFxApplicationThread()) {\n+                c.setUseSystemMenuBar(nextBoolean());\n+            }\n+        });\n+    }\n+\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/NodeInitializationStressTest.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"}]}