{"files":[{"patch":"@@ -771,0 +771,3 @@\n+\n+            def status = compareJdkVersion(jdkVersion, \"24\")\n+            ext.jdk24OrLater = (status >= 0)\n@@ -778,0 +781,7 @@\n+\/\/ Use --upgrade-module-path instead of --module-path when compiling and\n+\/\/ running tests if we are using a JDK that includes an upgradable\n+\/\/ jdk.jsobject module.  Currently, this is JDK 24 or later. Once\n+\/\/ jdk.jsobject is removed from the JDK, we can stop doing it. For example,\n+\/\/ if jdk.jsobject is removed from the JDK in JDK 26, the logic will then be\n+\/\/ changed to: \"jdk24OrLater && !jdk26OrLater\"\n+ext.USE_UPGRADE_MODULE_PATH = jdk24OrLater\n@@ -999,2 +1009,3 @@\n-\/\/ Return list with the arguments needed for --patch-module or --module-path\n-\/\/ for the provided projects. Used with Java executables ie. tests\n+\/\/ Return list with the arguments needed for --patch-module, --module-path,\n+\/\/ or --upgrade-module-path for the provided projects.\n+\/\/ Used with Java executables ie. tests\n@@ -1045,1 +1056,1 @@\n-        pma += '--module-path'\n+        pma += (test && USE_UPGRADE_MODULE_PATH) ? '--upgrade-module-path' : '--module-path'\n@@ -1074,1 +1085,1 @@\n-    List<String> mpa = HAS_JAVAFX_MODULES ? [ '--upgrade-module-path' ] : [ '--module-path' ]\n+    List<String> mpa = (HAS_JAVAFX_MODULES || (test && USE_UPGRADE_MODULE_PATH)) ? [ '--upgrade-module-path' ] : [ '--module-path' ]\n@@ -1158,0 +1169,2 @@\n+        def modulePathArgName = USE_UPGRADE_MODULE_PATH ? '--upgrade-module-path' : '--module-path'\n+\n@@ -1159,1 +1172,1 @@\n-            dest <<  \"--module-path=\\\"\"\n+            dest <<  \"${modulePathArgName}=\\\"\"\n@@ -1163,1 +1176,1 @@\n-            dest <<  \"--module-path=\\\"\\\\\\n\"\n+            dest <<  \"${modulePathArgName}=\\\"\\\\\\n\"\n@@ -3618,0 +3631,24 @@\n+project(\":jsobject\") {\n+    project.ext.buildModule = true\n+    project.ext.includeSources = true\n+    project.ext.moduleRuntime = true\n+    project.ext.moduleName = \"jdk.jsobject\"\n+\n+    sourceSets {\n+        main\n+    }\n+\n+    project.ext.moduleSourcePath = defaultModuleSourcePath\n+    project.ext.moduleSourcePathShim = defaultModuleSourcePathShim\n+\n+    commonModuleSetup(project, [ 'jsobject' ])\n+\n+\n+    dependencies {\n+    }\n+\n+    addMavenPublication(project, [])\n+\n+    addValidateSourceSets(project, sourceSets)\n+}\n+\n@@ -3648,1 +3685,1 @@\n-    commonModuleSetup(project, [ 'base', 'graphics', 'controls', 'media', 'web' ])\n+    commonModuleSetup(project, [ 'base', 'graphics', 'controls', 'media', 'jsobject', 'web' ])\n@@ -3902,1 +3939,1 @@\n-    addMavenPublication(project, [ 'controls', 'media' ])\n+    addMavenPublication(project, [ 'controls', 'media', 'jsobject' ])\n@@ -3964,1 +4001,1 @@\n-    def dependentProjects = [ 'base', 'graphics', 'controls', 'media', 'web', 'swing', 'fxml' ]\n+    def dependentProjects = [ 'base', 'graphics', 'controls', 'media', 'jsobject', 'web', 'swing', 'fxml' ]\n@@ -4093,1 +4130,1 @@\n-        \/\/ Parse testPatchModuleArgs looking for \"--module-path\".\n+        \/\/ Parse testPatchModuleArgs looking for \"*module-path\".\n@@ -4100,1 +4137,1 @@\n-            } else if (str == \"--module-path\") {\n+            } else if (str.endsWith(\"module-path\")) {\n@@ -4175,2 +4212,4 @@\n-        if (project.hasProperty('skipJavaCompilerOptionRelease') &&\n-                project.ext.skipJavaCompilerOptionRelease) {\n+        def isCompileTestTask = compile.name.startsWith(\"compileTest\")\n+        if (!isCompileTestTask) {\n+            if (project.hasProperty('skipJavaCompilerOptionRelease') &&\n+                    project.ext.skipJavaCompilerOptionRelease) {\n@@ -4178,3 +4217,4 @@\n-            logger.info \"Using 'javac -source\/-target' for ${compile}\"\n-        } else {\n-            compile.options.release = JAVA_TARGET_VERSION\n+                logger.info \"Using 'javac -source\/-target' for ${compile}\"\n+            } else {\n+                compile.options.release = JAVA_TARGET_VERSION\n+            }\n@@ -4408,1 +4448,1 @@\n-            project(\":swing\"), \/*project(\":swt\"),*\/ project(\":fxml\"), project(\":web\")]\n+            project(\":swing\"), \/*project(\":swt\"),*\/ project(\":fxml\"), project(\":jsobject\"), project(\":web\")]\n","filename":"build.gradle","additions":57,"deletions":17,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Defines the API for the JavaScript Object.\n+ *\n+ * @moduleGraph\n+ * @since 9\n+ *\/\n+module jdk.jsobject {\n+    exports netscape.javascript;\n+}\n","filename":"modules\/jdk.jsobject\/src\/main\/java\/module-info.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package netscape.javascript;\n+\n+\/**\n+ * Thrown when an exception is raised in the JavaScript engine. This is merely\n+ * a marker class to indicate an exception relating to the JavaScript\n+ * interface.\n+ * @since 1.5\n+ *\/\n+public class JSException extends RuntimeException {\n+    private static final long serialVersionUID = 2778103758223661489L;\n+\n+    \/**\n+     * Constructs a new JavaScript exception with null as it's detail message.\n+     *\/\n+    public JSException() {\n+        super();\n+    }\n+\n+    \/**\n+     * Construct a new JavaScript exception with the specified detail message.\n+     *\n+     * @param s The detail message\n+     *\/\n+    public JSException(String s) {\n+        super(s);\n+    }\n+\n+    \/**\n+     * Construct a new JavaScript exception with the specified cause.\n+     *\n+     * @param t Throwable cause\n+     *\/\n+    public JSException(Throwable t) {\n+        super(t);\n+    }\n+}\n","filename":"modules\/jdk.jsobject\/src\/main\/java\/netscape\/javascript\/JSException.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package netscape.javascript;\n+\n+\/**\n+ * <p>\n+ * Allows Java code to manipulate JavaScript objects.\n+ * <\/p>\n+ *\n+ * <p>\n+ * When a JavaScript object is passed or returned to Java code, it\n+ * is wrapped in an instance of {@code JSObject}. When a\n+ * {@code JSObject} instance is passed to the JavaScript engine,\n+ * it is unwrapped back to its original JavaScript object. The\n+ * {@code JSObject} class provides a way to invoke JavaScript\n+ * methods and examine JavaScript properties.\n+ * <\/p>\n+ *\n+ * <p> Any data returned from the JavaScript engine to Java is\n+ * converted to Java data types. Certain data passed to the JavaScript\n+ * engine is converted to JavaScript data types.\n+ * <\/p>\n+ * @since 1.5\n+ *\/\n+public abstract class JSObject {\n+\n+    static {\n+        System.err.println(\"KCR: JavaFX version of jdk.jsobject loaded\");\n+    }\n+\n+    \/**\n+     * Constructs a new JSObject. Users should neither call this method nor\n+     * subclass JSObject.\n+     *\/\n+    protected JSObject()  {\n+    }\n+\n+    \/**\n+     * Calls a JavaScript method. Equivalent to\n+     * \"this.methodName(args[0], args[1], ...)\" in JavaScript.\n+     *\n+     * @param methodName The name of the JavaScript method to be invoked.\n+     * @param args the Java objects passed as arguments to the method.\n+     * @return Result of the method.\n+     * @throws JSException when an error is reported from the browser or\n+     * JavaScript engine.\n+     *\/\n+    public abstract Object call(String methodName, Object... args) throws JSException;\n+\n+    \/**\n+     * Evaluates a JavaScript expression. The expression is a string of\n+     * JavaScript source code which will be evaluated in the context given by\n+     * \"this\".\n+     *\n+     * @param s The JavaScript expression.\n+     * @return Result of the JavaScript evaluation.\n+     * @throws JSException when an error is reported from the browser or\n+     * JavaScript engine.\n+     *\/\n+    public abstract Object eval(String s) throws JSException;\n+\n+    \/**\n+     * Retrieves a named member of a JavaScript object. Equivalent to\n+     * \"this.name\" in JavaScript.\n+     *\n+     * @param name The name of the JavaScript property to be accessed.\n+     * @return The value of the property.\n+     * @throws JSException when an error is reported from the browser or\n+     * JavaScript engine.\n+     *\/\n+    public abstract Object getMember(String name) throws JSException;\n+\n+    \/**\n+     * Sets a named member of a JavaScript object. Equivalent to\n+     * \"this.name = value\" in JavaScript.\n+     *\n+     * @param name The name of the JavaScript property to be accessed.\n+     * @param value The value of the property.\n+     * @throws JSException when an error is reported from the browser or\n+     * JavaScript engine.\n+     *\/\n+    public abstract void setMember(String name, Object value) throws JSException;\n+\n+    \/**\n+     * Removes a named member of a JavaScript object. Equivalent\n+     * to \"delete this.name\" in JavaScript.\n+     *\n+     * @param name The name of the JavaScript property to be removed.\n+     * @throws JSException when an error is reported from the browser or\n+     * JavaScript engine.\n+     *\/\n+    public abstract void removeMember(String name) throws JSException;\n+\n+    \/**\n+     * Retrieves an indexed member of a JavaScript object. Equivalent to\n+     * \"this[index]\" in JavaScript.\n+     *\n+     * @param index The index of the array to be accessed.\n+     * @return The value of the indexed member.\n+     * @throws JSException when an error is reported from the browser or\n+     * JavaScript engine.\n+     *\/\n+    public abstract Object getSlot(int index) throws JSException;\n+\n+    \/**\n+     * Sets an indexed member of a JavaScript object. Equivalent to\n+     * \"this[index] = value\" in JavaScript.\n+     *\n+     * @param index The index of the array to be accessed.\n+     * @param value The value to set\n+     * @throws JSException when an error is reported from the browser or\n+     * JavaScript engine.\n+     *\/\n+    public abstract void setSlot(int index, Object value) throws JSException;\n+\n+}\n","filename":"modules\/jdk.jsobject\/src\/main\/java\/netscape\/javascript\/JSObject.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * <p>\n+ * Provides Java code the ability to access the JavaScript engine and the\n+ * HTML DOM in the web browser.\n+ * <\/p>\n+ *\n+ * <p>\n+ * The classes in this package were initially specified by Netscape, and are the\n+ * de facto standard mechanism for calling JavaScript from the Java runtime.\n+ * <\/p>\n+ *\n+ * @since 1.5\n+ *\/\n+\n+package netscape.javascript;\n","filename":"modules\/jdk.jsobject\/src\/main\/java\/netscape\/javascript\/package-info.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-include \"base\", \"graphics\", \"controls\", \"swing\", \"swt\", \"fxml\", \"web\", \"media\", \"systemTests\"\n+include \"base\", \"graphics\", \"controls\", \"swing\", \"swt\", \"fxml\", \"jsobject\", \"web\", \"media\", \"systemTests\"\n@@ -34,0 +34,1 @@\n+project(\":jsobject\").projectDir = file(\"modules\/jdk.jsobject\")\n","filename":"settings.gradle","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}