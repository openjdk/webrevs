{"files":[{"patch":"@@ -82,9 +82,0 @@\n-    private boolean paused = false;\n-    private long totalPausedTime;\n-    private long startPauseTime;\n-\n-    \/\/ These methods only exist for the sake of testing.\n-    boolean isPaused() { return paused; }\n-    long getTotalPausedTime() { return totalPausedTime; }\n-    long getStartPauseTime() { return startPauseTime; }\n-\n@@ -124,14 +115,0 @@\n-    public void pause() {\n-        if (!paused) {\n-            startPauseTime = nanos();\n-            paused = true;\n-        }\n-    }\n-\n-    public void resume() {\n-        if (paused) {\n-            paused = false;\n-            totalPausedTime += nanos() - startPauseTime;\n-        }\n-    }\n-\n@@ -143,2 +120,1 @@\n-        return paused ? startPauseTime :\n-                        System.nanoTime() - totalPausedTime;\n+        return System.nanoTime();\n@@ -261,3 +237,0 @@\n-            if (paused) {\n-                return;\n-            }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/animation\/AbstractPrimaryTimer.java","additions":1,"deletions":28,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1,42 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.scenario.animation;\n-\n-public class AbstractPrimaryTimerShim {\n-\n-    public static boolean isPaused(AbstractPrimaryTimer amt) {\n-        return amt.isPaused();\n-    }\n-\n-    public static long getTotalPausedTime(AbstractPrimaryTimer amt) {\n-        return amt.getTotalPausedTime();\n-    }\n-\n-    public static long getStartPauseTime(AbstractPrimaryTimer amt) {\n-        return amt.getStartPauseTime();\n-    }\n-\n-}\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/scenario\/animation\/AbstractPrimaryTimerShim.java","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"},{"patch":"@@ -64,6 +64,0 @@\n-\n-    @Override\n-    public void pause() { }\n-\n-    @Override\n-    public void resume() { }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/pgstub\/StubPrimaryTimer.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import com.sun.scenario.animation.AbstractPrimaryTimerShim;\n@@ -49,47 +48,0 @@\n-    @Test\n-    public void testPauseResume() {\n-        \/\/ pause timer\n-        timer.setNanos(2L);\n-        assertEquals(2L, timer.nanos());\n-        timer.pause();\n-        assertEquals(2L, timer.nanos());\n-\n-        \/\/ test nanos during pause\n-        timer.setNanos(5L);\n-        assertEquals(2L, timer.nanos());\n-\n-        \/\/ pause again\n-        timer.setNanos(10L);\n-        timer.pause();\n-        assertEquals(2L, timer.nanos());\n-\n-        \/\/ resume\n-        timer.setNanos(17L);\n-        timer.resume();\n-        assertEquals(2L, timer.nanos());\n-        timer.setNanos(28L);\n-        assertEquals(13L, timer.nanos());\n-\n-        \/\/ resume again\n-        timer.setNanos(41L);\n-        timer.resume();\n-        assertEquals(26L, timer.nanos());\n-\n-        \/\/ pause again\n-        timer.setNanos(58L);\n-        assertEquals(43L, timer.nanos());\n-        timer.pause();\n-        assertEquals(43L, timer.nanos());\n-\n-        \/\/ test nanos during pause\n-        timer.setNanos(77L);\n-        assertEquals(43L, timer.nanos());\n-\n-        \/\/ resume\n-        timer.setNanos(100L);\n-        timer.resume();\n-        assertEquals(43L, timer.nanos());\n-        timer.setNanos(129L);\n-        assertEquals(72L, timer.nanos());\n-    }\n-\n@@ -158,1 +110,0 @@\n-        private long nanos;\n@@ -161,4 +112,0 @@\n-        public void setNanos(long nanos) {\n-            this.nanos = nanos;\n-        }\n-\n@@ -171,6 +118,0 @@\n-        @Override public long nanos() {\n-            return AbstractPrimaryTimerShim.isPaused(this) ?\n-                    AbstractPrimaryTimerShim.getStartPauseTime(this) :\n-                    nanos - AbstractPrimaryTimerShim.getTotalPausedTime(this);\n-        }\n-\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/scenario\/animation\/AbstractPrimaryTimerTest.java","additions":0,"deletions":59,"binary":false,"changes":59,"status":"modified"}]}