{"files":[{"patch":"@@ -985,0 +985,4 @@\n+    \/**\n+     * The maximum number of nested event loops.\n+     *\/\n+    public static final int MAX_NESTED_EVENT_LOOPS = 200;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/PlatformImpl.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -622,0 +622,7 @@\n+    private boolean maxNestedEventLoopsHit() {\n+        if (eventLoopMap == null) {\n+            return false;\n+        }\n+        return eventLoopMap.size() >= PlatformImpl.MAX_NESTED_EVENT_LOOPS;\n+    }\n+\n@@ -625,1 +632,1 @@\n-        return inPulse == 0;\n+        return inPulse == 0 && !maxNestedEventLoopsHit();\n@@ -636,1 +643,6 @@\n-            throw new IllegalStateException(\"Cannot enter nested loop during animation or layout processing\");\n+            if (maxNestedEventLoopsHit()) {\n+                throw new IllegalStateException(\"Exceeded limit on number of nested event loops (\" +\n+                    PlatformImpl.MAX_NESTED_EVENT_LOOPS + \")\");\n+            } else {\n+                throw new IllegalStateException(\"Cannot enter nested loop during animation or layout processing\");\n+            }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/QuantumToolkit.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -305,0 +305,3 @@\n+     * @throws IllegalStateException if this call would exceed the maximum\n+     * number of nested event loops.\n+     *\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/application\/Platform.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -401,0 +401,2 @@\n+     * @throws IllegalStateException if this call would exceed the maximum\n+     *      number of nested event loops.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/Stage.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import com.sun.javafx.application.PlatformImpl;\n@@ -314,0 +315,48 @@\n+\n+    \/\/ Verify that an exception is thrown if we exceed the maximum number of\n+    \/\/ nested event loops.\n+    private void createManyNestedLoops(int n, Object previousLoop, AtomicBoolean exceptionThrown) {\n+        if (exceptionThrown.get()) {\n+            \/\/ Previous run loop was not created.\n+            return;\n+        }\n+\n+        if (n <= 0) {\n+            \/\/ We created all the nested loops successfully. Unwind them.\n+            if (previousLoop != null) {\n+                Platform.exitNestedEventLoop(previousLoop, null);\n+            }\n+        } else {\n+            final Integer thisLoop = n;\n+            Platform.runLater(() -> {\n+                createManyNestedLoops(n - 1, thisLoop, exceptionThrown);\n+            });\n+\n+            try {\n+                Platform.enterNestedEventLoop(thisLoop);\n+            } catch (IllegalStateException ex) {\n+                exceptionThrown.set(true);\n+            }\n+\n+            if (previousLoop != null) {\n+                Platform.exitNestedEventLoop(previousLoop, null);\n+            }\n+        }\n+    }\n+\n+    @Test public void maxNestedLoops() {\n+        Util.runAndWait(() -> {\n+            \/\/ Test the exception case first to ensure the system recovers\n+            \/\/ correctly.\n+            AtomicBoolean expectedException = new AtomicBoolean(false);\n+            createManyNestedLoops(PlatformImpl.MAX_NESTED_EVENT_LOOPS + 1, null, expectedException);\n+            assertFalse(Platform.isNestedLoopRunning());\n+\n+            AtomicBoolean noExceptionExpected = new AtomicBoolean(false);\n+            createManyNestedLoops(PlatformImpl.MAX_NESTED_EVENT_LOOPS, null, noExceptionExpected);\n+            assertFalse(Platform.isNestedLoopRunning());\n+\n+            assertTrue(expectedException.get());\n+            assertFalse(noExceptionExpected.get());\n+        });\n+    }\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/stage\/NestedEventLoopTest.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"modified"}]}