{"files":[{"patch":"@@ -994,0 +994,4 @@\n+        \/\/ Needs to be set before needsLayout is updated, as otherwise a listener that\n+        \/\/ calls isNeedsLayout() might see the old value.\n+        layoutFlag = flag;\n+\n@@ -997,1 +1001,0 @@\n-        layoutFlag = flag;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Parent.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,4 @@\n+    public static void setNeedsLayout(Parent p, boolean value) {\n+        p.setNeedsLayout(value);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/javafx\/scene\/ParentShim.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,1 @@\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n@@ -515,0 +516,17 @@\n+    @Test\n+    public void isNeedsLayoutReturnsCorrectValueInListener() {\n+         var g = new Group();\n+         g.layout();\n+         assertFalse(g.isNeedsLayout());\n+\n+         boolean[] flags = new boolean[2];\n+         g.needsLayoutProperty().subscribe(value -> {\n+             flags[0] = value;\n+             flags[1] = g.isNeedsLayout();\n+         });\n+\n+         ParentShim.setNeedsLayout(g, true);\n+         assertTrue(flags[0]);\n+         assertTrue(flags[1]);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/ParentTest.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"}]}