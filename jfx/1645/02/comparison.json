{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,0 @@\n-    \/\/ FIXME: replace listener to fixedCellSize with direct lookup - JDK-8277000\n@@ -107,10 +106,4 @@\n-            registerChangeListener(tableView.fixedCellSizeProperty(), e -> {\n-                VirtualFlow<TableRow<T>> virtualFlow = getVirtualFlow();\n-                if (virtualFlow != null) {\n-                    unregisterChangeListeners(virtualFlow.widthProperty());\n-                }\n-\n-                updateCachedFixedSize();\n-            });\n-\n-            updateCachedFixedSize();\n+            VirtualFlow<TableRow<T>> virtualFlow = getVirtualFlow();\n+            if (virtualFlow != null) {\n+                registerChangeListener(virtualFlow.widthProperty(), e -> requestLayoutWhenFixedCellSizeSet());\n+            }\n@@ -120,12 +113,7 @@\n-    private void updateCachedFixedSize() {\n-        TableView<T> tableView = getSkinnable().getTableView();\n-        if (tableView != null) {\n-            fixedCellSize = tableView.getFixedCellSize();\n-            fixedCellSizeEnabled = fixedCellSize > 0;\n-\n-            if (fixedCellSizeEnabled) {\n-                VirtualFlow<TableRow<T>> virtualFlow = getVirtualFlow();\n-                if (virtualFlow != null) {\n-                    registerChangeListener(virtualFlow.widthProperty(), e -> getSkinnable().requestLayout());\n-                }\n-            }\n+    private void requestLayoutWhenFixedCellSizeSet() {\n+        \/\/ JDK-8144500:\n+        \/\/ When in fixed cell size mode, we must listen to the width of the virtual flow, so\n+        \/\/ that when it changes, we can appropriately add \/ remove cells that may or may not\n+        \/\/ be required (because we remove all cells that are not visible).\n+        if (getFixedCellSize() > 0) {\n+            getSkinnable().requestLayout();\n@@ -240,0 +228,6 @@\n+    @Override\n+    double getFixedCellSize() {\n+        TableView<T> tableView = getTableView();\n+        return tableView != null ? tableView.getFixedCellSize() : super.getFixedCellSize();\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableRowSkin.java","additions":18,"deletions":24,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,1 @@\n+import javafx.scene.layout.Region;\n@@ -118,4 +119,0 @@\n-    \/\/ FIXME: replace cached values with direct lookup - JDK-8277000\n-    double fixedCellSize;\n-    boolean fixedCellSizeEnabled;\n-\n@@ -307,0 +304,1 @@\n+        double fixedCellSize = getFixedCellSize();\n@@ -314,1 +312,1 @@\n-            if (fixedCellSizeEnabled) {\n+            if (fixedCellSize > 0) {\n@@ -416,0 +414,4 @@\n+    double getFixedCellSize() {\n+        return Region.USE_COMPUTED_SIZE;\n+    }\n+\n@@ -515,1 +517,2 @@\n-        if (fixedCellSizeEnabled) {\n+        double fixedCellSize = getFixedCellSize();\n+        if (fixedCellSize > 0) {\n@@ -548,1 +551,2 @@\n-        if (fixedCellSizeEnabled) {\n+        double fixedCellSize = getFixedCellSize();\n+        if (fixedCellSize > 0) {\n@@ -578,1 +582,2 @@\n-        if (fixedCellSizeEnabled) {\n+        double fixedCellSize = getFixedCellSize();\n+        if (fixedCellSize > 0) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableRowSkinBase.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,1 +109,0 @@\n-    \/\/ FIXME: replace listener to fixedCellSize with direct lookup - JDK-8277000\n@@ -122,9 +121,4 @@\n-            registerChangeListener(getTreeTableView().fixedCellSizeProperty(), e -> {\n-                VirtualFlow<TreeTableRow<T>> virtualFlow = getVirtualFlow();\n-                if (virtualFlow != null) {\n-                    unregisterChangeListeners(virtualFlow.widthProperty());\n-                }\n-\n-                updateCachedFixedSize();\n-            });\n-            updateCachedFixedSize();\n+            VirtualFlow<TreeTableRow<T>> virtualFlow = getVirtualFlow();\n+            if (virtualFlow != null) {\n+                registerChangeListener(getVirtualFlow().widthProperty(), e -> requestLayoutWhenFixedCellSizeSet());\n+            }\n@@ -134,14 +128,7 @@\n-    private void updateCachedFixedSize() {\n-        if (getSkinnable() != null) {\n-            TreeTableView<T> t = getSkinnable().getTreeTableView();\n-            if (t != null) {\n-                fixedCellSize = t.getFixedCellSize();\n-                fixedCellSizeEnabled = fixedCellSize > 0.0;\n-\n-                if (fixedCellSizeEnabled) {\n-                    VirtualFlow<TreeTableRow<T>> virtualFlow = getTableViewSkin().getVirtualFlow();\n-                    if (virtualFlow != null) {\n-                        registerChangeListener(virtualFlow.widthProperty(), ev -> getSkinnable().requestLayout());\n-                    }\n-                }\n-            }\n+    private void requestLayoutWhenFixedCellSizeSet() {\n+        \/\/ JDK-8144500:\n+        \/\/ When in fixed cell size mode, we must listen to the width of the virtual flow, so\n+        \/\/ that when it changes, we can appropriately add \/ remove cells that may or may not\n+        \/\/ be required (because we remove all cells that are not visible).\n+        if (getFixedCellSize() > 0) {\n+            getSkinnable().requestLayout();\n@@ -322,0 +309,6 @@\n+    @Override\n+    double getFixedCellSize() {\n+        TreeTableView<T> treeTableView = getTreeTableView();\n+        return treeTableView != null ? treeTableView.getFixedCellSize() : super.getFixedCellSize();\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeTableRowSkin.java","additions":18,"deletions":25,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,2 +120,1 @@\n-        TableRowSkin<T> skin = (TableRowSkin<T>) tableRow.getSkin();\n-        return skin.fixedCellSizeEnabled;\n+        return tableRow.getTableView().getFixedCellSize() > 0;\n@@ -125,2 +124,1 @@\n-        TreeTableRowSkin<T> skin = (TreeTableRowSkin<T>) tableRow.getSkin();\n-        return skin.fixedCellSizeEnabled;\n+        return tableRow.getTreeTableView().getFixedCellSize() > 0;\n","filename":"modules\/javafx.controls\/src\/shims\/java\/javafx\/scene\/control\/skin\/TableSkinShim.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -124,1 +124,0 @@\n-    @Disabled(\"JDK-8277000\")\n@@ -274,0 +273,31 @@\n+    @Test\n+    public void testTreeTableRowVirtualFlowWidthListenerReplaceSkin() {\n+        TreeTableView<Person> tableView = createPersonTreeTable(false);\n+        tableView.setFixedCellSize(24);\n+        showControl(tableView, true);\n+        VirtualFlow<?> flow = getVirtualFlow(tableView);\n+        TreeTableRow<?> tableRow = (TreeTableRow<?>) getCell(tableView, 1);\n+        replaceSkin(tableRow);\n+        Toolkit.getToolkit().firePulse();\n+        TreeTableRowSkin<?> rowSkin = (TreeTableRowSkin<?>) tableRow.getSkin();\n+        assertNotNull(\n+                unregisterChangeListeners(rowSkin, flow.widthProperty()),\n+                \"row skin must have listener to virtualFlow width\");\n+    }\n+\n+    \/**\n+     * Sanity test: listener to flow's width is registered.\n+     *\/\n+    @Test\n+    public void testTreeTableRowVirtualFlowWidthListener() {\n+        TreeTableView<Person> tableView = createPersonTreeTable(false);\n+        tableView.setFixedCellSize(24);\n+        showControl(tableView, true);\n+        VirtualFlow<?> flow = getVirtualFlow(tableView);\n+        TreeTableRow<?> tableRow = (TreeTableRow<?>) getCell(tableView, 1);\n+        TreeTableRowSkin<?> rowSkin = (TreeTableRowSkin<?>) tableRow.getSkin();\n+        assertNotNull(\n+                unregisterChangeListeners(rowSkin, flow.widthProperty()),\n+                \"row skin must have listener to virtualFlow width\");\n+    }\n+\n@@ -553,1 +583,0 @@\n-    @Disabled(\"JDK-8277000\")\n@@ -675,0 +704,25 @@\n+    @Test\n+    public void testTableRowTracksVirtualFlowReplaceSkin() {\n+        TableView<Person> tableView = createPersonTable(false);\n+        showControl(tableView, true);\n+        VirtualFlow<?> flow = getVirtualFlow(tableView);\n+        TableRow<?> tableRow = (TableRow<?>) getCell(tableView, 1);\n+        replaceSkin(tableRow);\n+        Toolkit.getToolkit().firePulse();\n+        TableRowSkin<?> rowSkin = (TableRowSkin<?>) tableRow.getSkin();\n+        checkFollowsWidth(flow, (Region) rowSkin.getNode());\n+    }\n+\n+    \/**\n+     * Sanity test checks that tree table row skin tracks the virtual flow width.\n+     *\/\n+    @Test\n+    public void testTableRowTracksVirtualFlowWidth() {\n+        TableView<Person> tableView = createPersonTable(false);\n+        showControl(tableView, true);\n+        VirtualFlow<?> flow = getVirtualFlow(tableView);\n+        TableRow<?> tableRow = (TableRow<?>) getCell(tableView, 1);\n+        TableRowSkin<?> rowSkin = (TableRowSkin<?>) tableRow.getSkin();\n+        checkFollowsWidth(flow, (Region) rowSkin.getNode());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SkinCleanupTest.java","additions":57,"deletions":3,"binary":false,"changes":60,"status":"modified"}]}