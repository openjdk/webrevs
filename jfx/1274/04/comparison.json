{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import java.time.format.DateTimeParseException;\n@@ -150,1 +151,5 @@\n-                commitValue();\n+                try {\n+                    commitValue();\n+                } catch (DateTimeParseException dtpe) {\n+                    cancelEdit();\n+                }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/DatePicker.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -740,0 +740,27 @@\n+    \/**\n+     * When DatePicker looses focus with misformatted text in the editor,\n+     * checks that the value is not changed, and the text is reverted to the value\n+     *\/\n+    @Test\n+    public void testFocusLostWithTypo() {\n+        Button button = new Button();\n+        StageLoader stageLoader = new StageLoader(new HBox(datePicker, button));\n+\n+        \/\/ initial value\n+        datePicker.setValue(LocalDate.of(2015, 03, 25));\n+        assertEquals(\"3\/25\/2015\", datePicker.getEditor().getText());\n+\n+        \/\/ set misformatted text\n+        datePicker.requestFocus();\n+        datePicker.getEditor().setText(\"11\/24\/20xx\");\n+\n+        \/\/ loosing focus triggers cancelEdit() because the text cannot be parsed\n+        button.requestFocus();\n+\n+        \/\/ check that value remains unchanged, and text is reverted\n+        assertEquals(LocalDate.of(2015, 03, 25), datePicker.getValue());\n+        assertEquals(\"3\/25\/2015\", datePicker.getEditor().getText());\n+\n+        stageLoader.dispose();\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/DatePickerTest.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"}]}