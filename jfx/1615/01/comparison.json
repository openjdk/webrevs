{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,3 +74,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -192,24 +189,21 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            String s = System.getProperty(\"com.sun.javafx.vk.adjustwindow\");\n-            if (s != null) {\n-                vkAdjustWindow = Boolean.valueOf(s);\n-            }\n-            s = System.getProperty(\"com.sun.javafx.sqe.vk.lookup\");\n-            if (s != null) {\n-                vkLookup = Boolean.valueOf(s);\n-            }\n-            s = System.getProperty(\"com.sun.javafx.virtualKeyboard.backspaceRepeatDelay\");\n-            if (s != null) {\n-                Double delay = Double.valueOf(s);\n-                KEY_REPEAT_DELAY = Math.min(Math.max(delay, KEY_REPEAT_DELAY_MIN), KEY_REPEAT_DELAY_MAX);\n-            }\n-            s = System.getProperty(\"com.sun.javafx.virtualKeyboard.backspaceRepeatRate\");\n-            if (s != null) {\n-                Double rate = Double.valueOf(s);\n-                if (rate <= 0) {\n-                    \/\/disable key repeat\n-                    KEY_REPEAT_RATE = 0;\n-                } else {\n-                    KEY_REPEAT_RATE = Math.min(Math.max(rate, KEY_REPEAT_RATE_MIN), KEY_REPEAT_RATE_MAX);\n-                }\n+        String s = System.getProperty(\"com.sun.javafx.vk.adjustwindow\");\n+        if (s != null) {\n+            vkAdjustWindow = Boolean.valueOf(s);\n+        }\n+        s = System.getProperty(\"com.sun.javafx.sqe.vk.lookup\");\n+        if (s != null) {\n+            vkLookup = Boolean.valueOf(s);\n+        }\n+        s = System.getProperty(\"com.sun.javafx.virtualKeyboard.backspaceRepeatDelay\");\n+        if (s != null) {\n+            Double delay = Double.valueOf(s);\n+            KEY_REPEAT_DELAY = Math.min(Math.max(delay, KEY_REPEAT_DELAY_MIN), KEY_REPEAT_DELAY_MAX);\n+        }\n+        s = System.getProperty(\"com.sun.javafx.virtualKeyboard.backspaceRepeatRate\");\n+        if (s != null) {\n+            Double rate = Double.valueOf(s);\n+            if (rate <= 0) {\n+                \/\/disable key repeat\n+                KEY_REPEAT_RATE = 0;\n+            } else {\n+                KEY_REPEAT_RATE = Math.min(Math.max(rate, KEY_REPEAT_RATE_MIN), KEY_REPEAT_RATE_MAX);\n@@ -217,2 +211,1 @@\n-            return null;\n-        });\n+        }\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/skin\/FXVKSkin.java","additions":23,"deletions":30,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -82,5 +80,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final boolean IS_PANNABLE =\n-            AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"javafx.scene.control.skin.ListViewSkin.pannable\"));\n-\n-\n+    private static final boolean IS_PANNABLE = Boolean.getBoolean(\"javafx.scene.control.skin.ListViewSkin.pannable\");\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ListViewSkin.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -39,1 +37,0 @@\n-import java.util.function.Predicate;\n@@ -84,1 +81,0 @@\n-import com.sun.javafx.FXPermissions;\n@@ -106,11 +102,3 @@\n-    private static final ObservableList<Window> stages;\n-\n-    static {\n-        final Predicate<Window> findStage = (w) -> w instanceof Stage;\n-        @SuppressWarnings(\"removal\")\n-        ObservableList<Window> windows = AccessController.doPrivileged(\n-            (PrivilegedAction<ObservableList<Window>>) () -> Window.getWindows(),\n-            null,\n-            FXPermissions.ACCESS_WINDOW_LIST_PERMISSION);\n-        stages = windows.filtered(findStage);\n-    }\n+    private static final ObservableList<Window> stages = Window.getWindows().filtered((w) -> {\n+        return w instanceof Stage;\n+    });\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/MenuBarSkin.java","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -105,5 +103,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final boolean IS_PANNABLE =\n-            AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"javafx.scene.control.skin.TableViewSkin.pannable\"));\n-\n-\n+    private static final boolean IS_PANNABLE = Boolean.getBoolean(\"javafx.scene.control.skin.TableViewSkin.pannable\");\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableViewSkinBase.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -148,9 +146,7 @@\n-    static boolean preload = false;\n-    static {\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            String s = System.getProperty(\"com.sun.javafx.virtualKeyboard.preload\");\n-            if (s != null) {\n-                if (s.equalsIgnoreCase(\"PRERENDER\")) {\n-                    preload = true;\n-                }\n+    private static final boolean preload = initPreload();\n+\n+    private static boolean initPreload() {\n+        String s = System.getProperty(\"com.sun.javafx.virtualKeyboard.preload\");\n+        if (s != null) {\n+            if (s.equalsIgnoreCase(\"PRERENDER\")) {\n+                return true;\n@@ -158,2 +154,2 @@\n-            return null;\n-        });\n+        }\n+        return false;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TextInputControlSkin.java","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -83,3 +81,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final boolean IS_PANNABLE =\n-            AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"javafx.scene.control.skin.TreeViewSkin.pannable\"));\n+    private static final boolean IS_PANNABLE = Boolean.getBoolean(\"javafx.scene.control.skin.TreeViewSkin.pannable\");\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeViewSkin.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}