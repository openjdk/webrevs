{"files":[{"patch":"@@ -1,116 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package test.com.sun.javafx.animation;\n-\n-import javafx.animation.PauseTransition;\n-import javafx.application.Application;\n-import javafx.application.Platform;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-import org.junit.AfterClass;\n-import org.junit.BeforeClass;\n-import org.junit.Test;\n-import test.util.Util;\n-\n-import java.util.concurrent.CountDownLatch;\n-\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n-\n-public class AnimationTest {\n-\n-    private static final CountDownLatch startupLatch = new CountDownLatch(1);\n-\n-    private static Stage primaryStage;\n-\n-    public static class TestApp extends Application {\n-\n-        @Override\n-        public void init() throws Exception {\n-            assertFalse(Platform.isFxApplicationThread());\n-        }\n-\n-        @Override\n-        public void start(Stage stage) throws Exception {\n-            primaryStage = stage;\n-            assertTrue(Platform.isFxApplicationThread());\n-\n-            startupLatch.countDown();\n-        }\n-\n-    }\n-\n-    @BeforeClass\n-    public static void setup() throws Exception {\n-        Util.launch(startupLatch, TestApp.class);\n-    }\n-\n-    @AfterClass\n-    public static void shutdown() {\n-        Util.shutdown(primaryStage);\n-    }\n-\n-    @Test\n-    public void animationOnFXThreadTest() throws InterruptedException {\n-        final CountDownLatch l = new CountDownLatch(1);\n-        Platform.runLater(() -> {\n-            assertTrue(Platform.isFxApplicationThread());\n-            PauseTransition pause = new PauseTransition(Duration.seconds(1));\n-            pause.play();\n-            pause.pause();\n-            pause.stop();\n-            l.countDown();\n-        });\n-        l.await();\n-    }\n-\n-    @Test\n-    public void startAnimationNotOnFXThreadTest() {\n-        assertFalse(Platform.isFxApplicationThread());\n-        PauseTransition pause = new PauseTransition(Duration.seconds(1));\n-        assertThrows(IllegalStateException.class, pause::play);\n-    }\n-\n-    @Test\n-    public void pauseAnimationNotOnFXThreadTest() {\n-        assertFalse(Platform.isFxApplicationThread());\n-        PauseTransition pause = new PauseTransition(Duration.seconds(1));\n-        Platform.runLater(pause::play);\n-        assertThrows(IllegalStateException.class, pause::pause);\n-    }\n-\n-    @Test\n-    public void stopAnimationNotOnFXThreadTest() {\n-        assertFalse(Platform.isFxApplicationThread());\n-        PauseTransition pause = new PauseTransition(Duration.seconds(1));\n-        Platform.runLater(() -> {\n-            pause.play();\n-            pause.pause();\n-        });\n-        assertThrows(IllegalStateException.class, pause::stop);\n-    }\n-}\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/animation\/AnimationTest.java","additions":0,"deletions":116,"binary":false,"changes":116,"status":"deleted"},{"patch":"@@ -1,112 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package test.com.sun.javafx.animation;\n-\n-import java.util.concurrent.CountDownLatch;\n-import javafx.animation.AnimationTimer;\n-import javafx.application.Application;\n-import javafx.application.Platform;\n-import javafx.stage.Stage;\n-import org.junit.AfterClass;\n-import org.junit.BeforeClass;\n-import org.junit.Test;\n-import test.util.Util;\n-\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n-\n-public class AnimationTimerTest {\n-\n-    private static final CountDownLatch startupLatch = new CountDownLatch(1);\n-\n-    private static Stage primaryStage;\n-\n-    public static class TestApp extends Application {\n-\n-        @Override\n-        public void init() throws Exception {\n-            assertFalse(Platform.isFxApplicationThread());\n-        }\n-\n-        @Override\n-        public void start(Stage stage) throws Exception {\n-            primaryStage = stage;\n-            assertTrue(Platform.isFxApplicationThread());\n-\n-            startupLatch.countDown();\n-        }\n-\n-    }\n-\n-    @BeforeClass\n-    public static void setup() throws Exception {\n-        Util.launch(startupLatch, TestApp.class);\n-    }\n-\n-    @AfterClass\n-    public static void shutdown() {\n-        Util.shutdown(primaryStage);\n-    }\n-\n-    @Test\n-    public void animationTimerOnFXThreadTest() throws InterruptedException {\n-        final CountDownLatch frameCounter = new CountDownLatch(3);\n-        Platform.runLater(() -> {\n-            AnimationTimer timer = new AnimationTimer() {\n-                @Override public void handle(long l) {\n-                    frameCounter.countDown();\n-                    if (frameCounter.getCount() == 0L) {\n-                        stop();\n-                    }\n-                }\n-            };\n-            assertTrue(Platform.isFxApplicationThread());\n-            timer.start();\n-        });\n-        frameCounter.await();\n-    }\n-\n-    @Test\n-    public void startAnimationTimerNotOnFXThreadTest() {\n-        assertFalse(Platform.isFxApplicationThread());\n-        AnimationTimer timer = new AnimationTimer() {\n-            @Override public void handle(long l) {}\n-        };\n-        assertThrows(IllegalStateException.class, timer::start);\n-    }\n-\n-    @Test\n-    public void stopAnimationTimerNotOnFXThreadTest() {\n-        assertFalse(Platform.isFxApplicationThread());\n-        AnimationTimer timer = new AnimationTimer() {\n-            @Override public void handle(long l) {\n-                assertThrows(IllegalStateException.class, () -> stop());\n-            }\n-        };\n-        Platform.runLater(timer::start);\n-    }\n-}\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/animation\/AnimationTimerTest.java","additions":0,"deletions":112,"binary":false,"changes":112,"status":"deleted"}]}