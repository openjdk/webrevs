{"files":[{"patch":"@@ -0,0 +1,98 @@\n+package test.com.sun.javafx.scene.control.skin.modena;\n+\n+import com.sun.javafx.tk.Toolkit;\n+import javafx.scene.Scene;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextArea;\n+import javafx.scene.control.TextField;\n+import javafx.scene.control.TextInputControl;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.paint.Paint;\n+import javafx.scene.text.Text;\n+import javafx.stage.Stage;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.CsvSource;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+public class ModenaTest {\n+\n+    private static Collection<Class> parameters() {\n+        return List.of(\n+                TextField.class,\n+                PasswordField.class,\n+                TextArea.class\n+        );\n+    }\n+\n+    private TextInputControl textInput;\n+\n+    \/\/@BeforeEach\n+    \/\/ junit5 does not support parameterized class-level tests yet\n+    public void setup(Class<?> type) {\n+        setUncaughtExceptionHandler();\n+        try {\n+            textInput = (TextInputControl)type.getDeclaredConstructor().newInstance();\n+        } catch (Exception e) {\n+            fail(e);\n+        }\n+    }\n+\n+    @AfterEach\n+    public void cleanup() {\n+        removeUncaughtExceptionHandler();\n+    }\n+\n+    private void setUncaughtExceptionHandler() {\n+        Thread.currentThread().setUncaughtExceptionHandler((thread, throwable) -> {\n+            if (throwable instanceof RuntimeException) {\n+                throw (RuntimeException)throwable;\n+            } else {\n+                Thread.currentThread().getThreadGroup().uncaughtException(thread, throwable);\n+            }\n+        });\n+    }\n+\n+    private void removeUncaughtExceptionHandler() {\n+        Thread.currentThread().setUncaughtExceptionHandler(null);\n+    }\n+\n+    \/******************************************************\n+     * Test for highlight-text-fill                       *\n+     *****************************************************\/\n+\n+    @ParameterizedTest\n+    @CsvSource({\n+            \"#999999, 333333\",\n+            \"#222222, ffffff\",\n+            \"#777777, 000000\"\n+    })\n+    public void testHighlightTextInput(String accentColor, String expectedTextColor) {\n+        for (Class<?> type : parameters()) {\n+            setup(type);\n+            textInput.setText(\"This is a text\");\n+            textInput.selectAll();\n+\n+            StackPane root = new StackPane(textInput);\n+            Scene scene = new Scene(root, 400, 200);\n+            Stage stage = new Stage();\n+            stage.setScene(scene);\n+            stage.show();\n+\n+            scene.getRoot().setStyle(\"-fx-accent: \" + accentColor + \";\");\n+            textInput.requestFocus();\n+            Toolkit.getToolkit().firePulse();\n+\n+            Text internalText = (Text) textInput.lookup(\".text\");\n+            Paint fill = internalText.getSelectionFill();\n+\n+            String resolved = fill.toString().toLowerCase();\n+            assertTrue(resolved.contains(expectedTextColor));\n+        }\n+    }\n+}\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/control\/skin\/modena\/ModenaTest.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -46,1 +46,0 @@\n-import javafx.scene.paint.Paint;\n@@ -48,1 +47,0 @@\n-import javafx.scene.text.Text;\n@@ -52,1 +50,0 @@\n-import org.junit.jupiter.params.provider.CsvSource;\n@@ -218,30 +215,0 @@\n-    @ParameterizedTest\n-    @CsvSource({\n-            \"#999999, 333333\",\n-            \"#222222, ffffff\",\n-            \"#777777, 000000\"\n-    })\n-    public void testHighlightTextFillForAccentColors(String accentColor, String expectedTextColor) {\n-        for (Class<?> type : parameters()) {\n-            setup(type);\n-            textInput.setText(\"This is a text\");\n-            textInput.selectAll();\n-\n-            StackPane root = new StackPane(textInput);\n-            Scene scene = new Scene(root, 400, 200);\n-            Stage stage = new Stage();\n-            stage.setScene(scene);\n-            stage.show();\n-\n-            scene.getRoot().setStyle(\"-fx-accent: \" + accentColor + \";\");\n-            textInput.requestFocus();\n-            Toolkit.getToolkit().firePulse();\n-\n-            Text internalText = (Text) textInput.lookup(\".text\");\n-            Paint fill = internalText.getSelectionFill();\n-\n-            String resolved = fill.toString().toLowerCase();\n-            assertTrue(resolved.contains(expectedTextColor));\n-        }\n-    }\n-\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TextInputControlTest.java","additions":0,"deletions":33,"binary":false,"changes":33,"status":"modified"}]}