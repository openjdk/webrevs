{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+- (id)requestNodeAttribute:(NSString *)attribute;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/a11y\/AccessibleBase.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,2 +50,1 @@\n-\/\/  Requires TAB_GROUP to be implemented first\n-\/\/  [rolesMap setObject:@\"JFXRadiobuttonAccessibility\" forKey:@\"TAB_ITEM\"];\n+    [rolesMap setObject:@\"JFXRadiobuttonAccessibility\" forKey:@\"TAB_ITEM\"];\n@@ -105,1 +104,6 @@\n-- (id)accessibilityValue\n+\/*\n+ * Request accessibility attribute by name from JavaFX Node. Returns attribute value\n+ * converted to the native format or NULL if attribute with that name does not exist.\n+ * Code that uses this function needs to convert NULL to the default value of a certain type where required.\n+ *\/\n+- (id)requestNodeAttribute:(NSString *)attribute\n@@ -107,1 +111,0 @@\n-    jobject jresult = NULL;\n@@ -110,1 +113,2 @@\n-    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue, (jlong)@\"AXValue\");\n+    jobject jresult = (jobject)(*env)->CallLongMethod(env, [self getJAccessible],\n+                                              jAccessibilityAttributeValue, (jlong)attribute);\n@@ -115,0 +119,5 @@\n+- (id)accessibilityValue\n+{\n+    return [self requestNodeAttribute:@\"AXValue\"];\n+}\n+\n@@ -117,7 +126,1 @@\n-    jobject jresult = NULL;\n-    GET_MAIN_JENV;\n-    if (env == NULL) return NULL;\n-    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible,\n-                                              jAccessibilityAttributeValue, (jlong)@\"AXMinValue\");\n-    GLASS_CHECK_EXCEPTION(env);\n-    return variantToID(env, jresult);\n+    return [self requestNodeAttribute:@\"AXMinValue\"];\n@@ -128,7 +131,1 @@\n-    jobject jresult = NULL;\n-    GET_MAIN_JENV;\n-    if (env == NULL) return NULL;\n-    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible,\n-                                              jAccessibilityAttributeValue, (jlong)@\"AXMaxValue\");\n-    GLASS_CHECK_EXCEPTION(env);\n-    return variantToID(env, jresult);\n+    return [self requestNodeAttribute:@\"AXMaxValue\"];\n@@ -139,1 +136,1 @@\n-    \/\/ Use the same value that is set for accessibilityTitle - some component\n+    \/\/ Use the same value that is set for accessibilityTitle - some components\n@@ -147,7 +144,1 @@\n-        jobject jresult = NULL;\n-        GET_MAIN_JENV;\n-        if (env == NULL) return NULL;\n-        jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue,\n-                                                  (jlong) @\"AXParent\");\n-        GLASS_CHECK_EXCEPTION(env);\n-        parent = variantToID(env, jresult);\n+        parent = [self requestNodeAttribute:@\"AXParent\"];\n@@ -160,7 +151,1 @@\n-    jobject jresult = NULL;\n-    GET_MAIN_JENV;\n-    if (env == NULL) return NULL;\n-    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible,\n-                                              jAccessibilityAttributeValue, (jlong)@\"AXTitle\");\n-    GLASS_CHECK_EXCEPTION(env);\n-    return variantToID(env, jresult);\n+    return [self requestNodeAttribute:@\"AXTitle\"];\n@@ -171,7 +156,1 @@\n-    jobject jresult = NULL;\n-    GET_MAIN_JENV;\n-    if (env == NULL) return NULL;\n-    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue,\n-                                              (jlong)@\"AXTitleUIElement\");\n-    GLASS_CHECK_EXCEPTION(env);\n-    return variantToID(env, jresult);\n+    return [self requestNodeAttribute:@\"AXTitleUIElement\"];\n@@ -182,7 +161,1 @@\n-    jobject jresult = NULL;\n-    GET_MAIN_JENV;\n-    if (env == NULL) return NULL;\n-    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible,\n-                                              jAccessibilityAttributeValue, (jlong)@\"AXChildren\");\n-    GLASS_CHECK_EXCEPTION(env);\n-    return variantToID(env, jresult);\n+    return [self requestNodeAttribute:@\"AXChildren\"];\n@@ -193,7 +166,1 @@\n-    jobject jresult = NULL;\n-    GET_MAIN_JENV;\n-    if (env == NULL) return NULL;\n-    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue,\n-                                              (jlong)@\"AXRoleDescription\");\n-    GLASS_CHECK_EXCEPTION(env);\n-    return variantToID(env, jresult);\n+    return [self requestNodeAttribute:@\"AXRoleDescription\"];\n@@ -222,9 +189,7 @@\n-    jobject jresult = NULL;\n-    GET_MAIN_JENV;\n-    if (env == NULL) return NSZeroRect;\n-    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue, (jlong)@\"AXPosition\");\n-    GLASS_CHECK_EXCEPTION(env);\n-    NSPoint position = [variantToID(env, jresult) pointValue];\n-    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue, (jlong)@\"AXSize\");\n-    GLASS_CHECK_EXCEPTION(env);\n-    NSSize size = [variantToID(env, jresult) sizeValue];\n+    id p = [self requestNodeAttribute:@\"AXPosition\"];\n+    id s = [self requestNodeAttribute:@\"AXSize\"];\n+    if (p == NULL || s == NULL) {\n+        return NSZeroRect;\n+    }\n+    NSPoint position = [p pointValue];\n+    NSSize size = [s sizeValue];\n@@ -247,7 +212,6 @@\n-    jobject jresult = NULL;\n-    GET_MAIN_JENV;\n-    if (env == NULL) return NO;\n-    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue, (jlong)@\"AXFocused\");\n-    GLASS_CHECK_EXCEPTION(env);\n-\n-    return [variantToID(env, jresult) boolValue];\n+    id retval = [self requestNodeAttribute:@\"AXFocused\"];\n+    if (retval == NULL) {\n+        return NO;\n+    } else {\n+        return [retval boolValue];\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/a11y\/AccessibleBase.m","additions":36,"deletions":72,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -53,8 +53,1 @@\n-    jobject jresult = NULL;\n-    GET_MAIN_JENV;\n-    if (env == NULL) return NULL;\n-    jresult = (jobject)(*env)->CallLongMethod(env, [self getJAccessible],\n-                                              jAccessibilityAttributeValue,\n-                                              (jlong)@\"AXTabs\");\n-    GLASS_CHECK_EXCEPTION(env);\n-    return variantToID(env, jresult);\n+    return [self requestNodeAttribute:@\"AXTabs\"];\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/a11y\/JFXTabGroupAccessibility.m","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"}]}