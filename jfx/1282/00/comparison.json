{"files":[{"patch":"@@ -0,0 +1,155 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import javax.swing.JButton;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.embed.swing.SwingNode;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.stage.Stage;\n+\n+\/**\n+ * Simple SwingNode test program that displays an FX stage with an FX Label\n+ * and Button, and a Swing JLabel and JButton.\n+ *\/\n+public class SimpleSwingNodeBlurryTextTest extends Application {\n+\n+    \/\/ Set to true to put the Swing JLabel and JButton into a JPanel, using\n+    \/\/ the JPanel as the content of the SwingNode. Set to false to use the\n+    \/\/ Swing JLabel and JButton, respectively, as the content of two separate\n+    \/\/ SwingNodes.\n+    private static final boolean USE_JPANEL = true;\n+    private static VBox rootNode = null;\n+    private static SwingNode swingPanel = null;\n+    private static SwingNode swingLabel = null;\n+    private static SwingNode swingButton = null;\n+\n+    \/**\n+     * @param args the command line arguments\n+     *\/\n+    public static void main(String[] args) {\n+        Application.launch(args);\n+    }\n+\n+    @Override\n+    public void start(Stage stage) throws Exception {\n+        Button passButton = new Button(\"Pass\");\n+        Button failButton = new Button(\"Fail\");\n+        passButton.setOnAction(e -> this.quit());\n+        failButton.setOnAction(e -> {\n+            this.quit();\n+            throw new AssertionError(\"SwingNode text rendering is blurry in HIDPI scale\");\n+        });\n+\n+        BorderPane pane = new BorderPane();\n+        HBox hbox = new HBox(10, passButton, failButton);\n+        hbox.setAlignment(Pos.CENTER);\n+\n+        rootNode = new VBox(5,\n+                new Label(\"1. This is a test for text rendering being not blurry on SwingNode.\"),\n+                new Label(\"2. A JavaFX Label and Button and Swing JLabel and JButton is shown one below the other\"),\n+                new Label(\"3. If Swing JLabel\/JButton text is blurry compared to JavaFX Label\/Button,\"),\n+                new Label(\"              click on Fail or else click on Pass\"),\n+                new Label(\"4. You may need to move the window a bit \"),\n+                new Label(\"       or maximize\/restore the window to render the Swing contents\"),\n+                new Label(\"\"),\n+                hbox, pane);\n+\n+        stage.setTitle(\"JavaFX SwingNode: \"\n+                + \"USE_JPANEL:\" + USE_JPANEL\n+                + \", jdk:\" + System.getProperty(\"java.runtime.version\")\n+                + \", javafx:\" + System.getProperty(\"javafx.runtime.version\"));\n+\n+        rootNode.setPadding(new Insets(5));\n+        Scene scene = new Scene(rootNode, 500, 300);\n+        stage.setScene(scene);\n+        stage.show();\n+        EventQueue.invokeLater(SimpleSwingNodeBlurryTextTest::initSwing);\n+    }\n+\n+    private void quit() {\n+        Platform.exit();\n+    }\n+\n+    private static void initSwing() {\n+        Label label = new Label(\"JavaFX: label\");\n+\n+        Button button = new Button(\"JavaFX: Button\");\n+        button.setOnAction(e -> {\n+            System.out.print(\"\" + Thread.currentThread() + \": \");\n+            System.out.println(\"JavaFX: Button\");\n+        });\n+\n+        JLabel jLabel = new JLabel(\"Swing: JLabel \");\n+        if (!USE_JPANEL) {\n+            swingLabel = new SwingNode();\n+            swingLabel.setContent(jLabel);\n+        }\n+\n+        JButton jButton = new JButton(\"Swing: JButton\");\n+        jButton.addActionListener(e -> {\n+            System.out.print(\"\" + Thread.currentThread() + \": \");\n+            System.out.println(\"Swing: JButton in SwingNode\");\n+        });\n+\n+        if (!USE_JPANEL) {\n+            swingButton = new SwingNode();\n+            swingButton.setContent(jButton);\n+        }\n+\n+        if (USE_JPANEL) {\n+            JPanel jPanel = new JPanel() {\n+                {\n+                    this.setLayout(new FlowLayout(FlowLayout.LEFT));\n+                    this.add(jLabel);\n+                    this.add(jButton);\n+                }\n+            };\n+            swingPanel = new SwingNode();\n+            swingPanel.setContent(jPanel);\n+        }\n+\n+        Platform.runLater(() -> {\n+            if (USE_JPANEL) {\n+                VBox vbox = new VBox(new Label(\"\"));\n+                HBox hbox = new HBox(10, label, button);\n+                rootNode.getChildren().addAll(vbox, hbox, swingPanel);\n+            } else {\n+                rootNode.getChildren().addAll(label, button, swingLabel, swingButton);\n+            }\n+        });\n+    }\n+}\n","filename":"tests\/manual\/swing\/SimpleSwingNodeBlurryTextTest.java","additions":155,"deletions":0,"binary":false,"changes":155,"status":"added"}]}