{"files":[{"patch":"@@ -36,2 +36,2 @@\n-import org.junit.Before;\n-import org.junit.Test;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n@@ -39,1 +39,1 @@\n-import static org.junit.Assert.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n@@ -45,12 +45,12 @@\n-                                    \"var result;\" +\n-                                    \"window.addEventListener('click', (e) => {\" +\n-                                        \"document.getElementById('file').click();\" +\n-                                    \"});\" +\n-                                    \"function readFile()\" +\n-                                    \"{\" +\n-                                        \"file = event.target.files[0];\" +\n-                                        \"result = file.name;\" +\n-                                    \"}\" +\n-                                    \"<\/script>\" +\n-                                    \"<body> <input type='file' id='file' onchange='readFile()'\/> <\/body>\");\n-    @Before\n+            \"var result;\" +\n+            \"window.addEventListener('click', (e) => {\" +\n+            \"document.getElementById('file').click();\" +\n+            \"});\" +\n+            \"function readFile()\" +\n+            \"{\" +\n+            \"file = event.target.files[0];\" +\n+            \"result = file.name;\" +\n+            \"}\" +\n+            \"<\/script>\" +\n+            \"<body> <input type='file' id='file' onchange='readFile()'\/> <\/body>\");\n+    @BeforeEach\n@@ -73,1 +73,1 @@\n-            assertEquals(\"Unexpected file name received\", \"HelloWorld.txt\", getEngine().executeScript(\"window.result\"));\n+            assertEquals(\"HelloWorld.txt\", getEngine().executeScript(\"window.result\"), \"Unexpected file name received\");\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/FileTest.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-import org.junit.Test;\n+import org.junit.jupiter.api.Test;\n@@ -36,2 +36,2 @@\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -49,5 +49,5 @@\n-                    \"<body style='margin: 0px;'>\\n\" +\n-                    \"<p style='text-shadow:5px 5px 0 #FF0000;height: 100px;'>text<\/p>\\n\" +\n-                    \"<p style='height: 100px'>text<\/p>\\n\" +\n-                    \"<\/body>\\n\" +\n-                    \"<\/html>\");\n+                \"<body style='margin: 0px;'>\\n\" +\n+                \"<p style='text-shadow:5px 5px 0 #FF0000;height: 100px;'>text<\/p>\\n\" +\n+                \"<p style='height: 100px'>text<\/p>\\n\" +\n+                \"<\/body>\\n\" +\n+                \"<\/html>\");\n@@ -55,4 +55,4 @@\n-                final WebPage webPage = WebEngineShim.getPage(getEngine());\n-                assertNotNull(webPage);\n-                final BufferedImage img = WebPageShim.paint(webPage, 0, 0, 800, 600);\n-                assertNotNull(img);\n+            final WebPage webPage = WebEngineShim.getPage(getEngine());\n+            assertNotNull(webPage);\n+            final BufferedImage img = WebPageShim.paint(webPage, 0, 0, 800, 600);\n+            assertNotNull(img);\n@@ -60,11 +60,10 @@\n-                int redShadowCnt = 0;\n-                int noShadowCnt = 0;\n-                for (int x = 0; x < 100; x++) {\n-                    for (int y = 0; y < 200; y++) {\n-                        Color pixelColor = new Color(img.getRGB(x, y), true);\n-                        if (isColorsSimilar(Color.RED, pixelColor, 1)) {\n-                            if (y < 100) {\n-                                redShadowCnt++;\n-                            } else {\n-                                noShadowCnt++;\n-                            }\n+            int redShadowCnt = 0;\n+            int noShadowCnt = 0;\n+            for (int x = 0; x < 100; x++) {\n+                for (int y = 0; y < 200; y++) {\n+                    Color pixelColor = new Color(img.getRGB(x, y), true);\n+                    if (isColorsSimilar(Color.RED, pixelColor, 1)) {\n+                        if (y < 100) {\n+                            redShadowCnt++;\n+                        } else {\n+                            noShadowCnt++;\n@@ -74,0 +73,1 @@\n+            }\n@@ -75,2 +75,2 @@\n-                assertTrue(\"no shadow found\", redShadowCnt > 0);\n-                assertTrue(\"wrong shadow found\", noShadowCnt == 0);\n+            assertTrue(redShadowCnt > 0, () -> \"no shadow found\");\n+            assertTrue(noShadowCnt == 0, () -> \"wrong shadow found\");\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/ShadowTest.java","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"}]}