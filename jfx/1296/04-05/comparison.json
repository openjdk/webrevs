{"files":[{"patch":"@@ -334,1 +334,1 @@\n-     * The intended usage is to combine the parent and the child CSS meta data for\n+     * The intended usage is to combine the parent and the child {@code CssMetaData} for\n@@ -338,3 +338,3 @@\n-     * <pre>\n-     * private static final List&lt;CssMetaData&lt;? extends Styleable, ?>> STYLEABLES = CssMetaData.combine(\n-     *      &lt;Parent>.getClassCssMetaData(),\n+     * <pre>{@code\n+     * private static final List<CssMetaData<? extends Styleable, ?>> STYLEABLES = CssMetaData.combine(\n+     *      <Parent>.getClassCssMetaData(),\n@@ -344,2 +344,3 @@\n-     * <\/pre>\n-     * This method returns an instance of {@link java.util.RandomAccess} interface.\n+     * }<\/pre>\n+     * This method returns an instance of a {@code List} that implements\n+     * {@link java.util.RandomAccess} interface.\n@@ -347,1 +348,1 @@\n-     * @param list the css metadata items, usually from the parent, must not be null\n+     * @param inheritedFromParent the {@code CssMetaData} items inherited from parent, must not be null\n@@ -354,1 +355,1 @@\n-        List<CssMetaData<? extends Styleable, ?>> list,\n+        List<CssMetaData<? extends Styleable, ?>> inheritedFromParent,\n@@ -357,3 +358,3 @@\n-        CssMetaData[] combined = new CssMetaData[list.size() + items.length];\n-        list.toArray(combined);\n-        System.arraycopy(items, 0, combined, list.size(), items.length);\n+        CssMetaData[] combined = new CssMetaData[inheritedFromParent.size() + items.length];\n+        inheritedFromParent.toArray(combined);\n+        System.arraycopy(items, 0, combined, inheritedFromParent.size(), items.length);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssMetaData.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"}]}