{"files":[{"patch":"@@ -99,0 +99,1 @@\n+    private int overflowNodeIndex = Integer.MAX_VALUE;\n@@ -470,1 +471,1 @@\n-                correctOverflow(toolbarLength);\n+                organizeOverflow(toolbarLength);\n@@ -479,1 +480,1 @@\n-                correctOverflow(toolbarLength);\n+                organizeOverflow(toolbarLength);\n@@ -576,6 +577,3 @@\n-    private void correctOverflow(double length) {\n-        boolean overflowed = isOverflowed(length);\n-        if (overflowed != overflow) {\n-            organizeOverflow(length, overflow);\n-        }\n-    }\n+    private void organizeOverflow(double length) {\n+        \/\/ Determine the index of the first node to be moved to the overflow menu\n+        int newOverflowNodeIndex = getOverflowNodeIndex(length);\n@@ -583,2 +581,3 @@\n-    private void organizeOverflow(double length, boolean hasOverflow) {\n-        if (hasOverflow) {\n+        \/\/ If the overflow button is displayed, the length must be corrected\n+        \/\/ and the overflow index recalculated.\n+        if (newOverflowNodeIndex < getSkinnable().getItems().size()) {\n@@ -591,0 +590,7 @@\n+            newOverflowNodeIndex = getOverflowNodeIndex(length);\n+        }\n+\n+        \/\/ Optimization: Skip moving nodes if the node list has not been changed\n+        \/\/ and the overflow index has remained the same.\n+        if (!needsUpdate && newOverflowNodeIndex == overflowNodeIndex) {\n+            return;\n@@ -594,0 +600,1 @@\n+        ObservableList<Node> nodes = getSkinnable().getItems();\n@@ -595,1 +602,0 @@\n-        double x = 0;\n@@ -598,1 +604,2 @@\n-        for (Node node : getSkinnable().getItems()) {\n+        for (int i = 0; i < nodes.size(); i++) {\n+            Node node = nodes.get(i);\n@@ -602,9 +609,1 @@\n-            if (node.isManaged()) {\n-                if (getSkinnable().getOrientation() == Orientation.VERTICAL) {\n-                    x += snapSizeY(node.prefHeight(-1)) + getSpacing();\n-                } else {\n-                    x += snapSizeX(node.prefWidth(-1)) + getSpacing();\n-                }\n-            }\n-\n-            if (x <= length) {\n+            if (i < newOverflowNodeIndex) {\n@@ -673,1 +672,7 @@\n-        if (!overflow && overflowMenu.isFocused()) {\n+        overflowNodeIndex = newOverflowNodeIndex;\n+        if (overflow) {\n+            \/\/ The nodes needs to be added to the scene and the css needs to be applied,\n+            \/\/ otherwise subsequent prefWidth(..)\/prefHeight(..) may return wrong values.\n+            overflowMenu.popup.getItems().setAll(overflowMenuItems);\n+            overflowMenu.popup.getScene().getRoot().applyCss();\n+        } else if(overflowMenu.isFocused()) {\n@@ -687,4 +692,3 @@\n-        \/\/ Is there overflow ?\n-        boolean hasOverflow = isOverflowed(toolbarLength);\n-\n-        organizeOverflow(toolbarLength, hasOverflow);\n+        \/\/ Reset overflowNodeIndex. This causes the overflow menu to be reorganized.\n+        overflowNodeIndex = Integer.MAX_VALUE;\n+        organizeOverflow(toolbarLength);\n@@ -703,1 +707,9 @@\n-    private boolean isOverflowed(double length) {\n+    \/**\n+     * Calculate the index of the node that does not fit in the toolbar and must be moved to the overflow menu.\n+     *\n+     * @param length the length of the toolbar\n+     * @return the index of the first node that does not fit in the toolbar, or the size of the items list else\n+     *\/\n+    private int getOverflowNodeIndex(double length) {\n+        ObservableList<Node> items = getSkinnable().getItems();\n+        int overflowIndex = items.size();\n@@ -705,7 +717,9 @@\n-        boolean hasOverflow = false;\n-        for (Node node : getSkinnable().getItems()) {\n-            if (!node.isManaged()) continue;\n-            if (getSkinnable().getOrientation() == Orientation.VERTICAL) {\n-                x += snapSizeY(node.prefHeight(-1)) + getSpacing();\n-            } else {\n-                x += snapSizeX(node.prefWidth(-1)) + getSpacing();\n+        for (int i = 0; i < items.size(); i++) {\n+            Node node = items.get(i);\n+\n+            if (node.isManaged()) {\n+                if (getSkinnable().getOrientation() == Orientation.VERTICAL) {\n+                    x += snapSizeY(node.prefHeight(-1)) + getSpacing();\n+                } else {\n+                    x += snapSizeX(node.prefWidth(-1)) + getSpacing();\n+                }\n@@ -713,0 +727,1 @@\n+\n@@ -714,1 +729,1 @@\n-                hasOverflow = true;\n+                overflowIndex = i;\n@@ -718,1 +733,1 @@\n-        return hasOverflow;\n+        return overflowIndex;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ToolBarSkin.java","additions":51,"deletions":36,"binary":false,"changes":87,"status":"modified"}]}