{"files":[{"patch":"@@ -68,1 +68,1 @@\n- * {@link #leadingProperty() leading}, {@link #centerProperty() center}, and {@link #trailingProperty() trailing}.\n+ * {@link #leftProperty() left}, {@link #centerProperty() center}, and {@link #rightProperty() right}.\n@@ -83,2 +83,2 @@\n- * two header bars. In this case, the {@link #leadingSystemPaddingProperty() leadingSystemPadding} and\n- * {@link #trailingSystemPaddingProperty() trailingSystemPadding} properties can be used to remove the padding\n+ * two header bars. In this case, the {@link #leftSystemPaddingProperty() leftSystemPadding} and\n+ * {@link #rightSystemPaddingProperty() rightSystemPadding} properties can be used to remove the padding\n@@ -93,0 +93,6 @@\n+ * <h2>Color scheme<\/h2>\n+ * The color scheme of the default header buttons is automatically adjusted to remain easily recognizable\n+ * by inspecting the {@link Scene#fillProperty() Scene.fill} property to gauge the brightness of the user\n+ * interface. Applications should set the scene fill to a color that matches the user interface of the header\n+ * bar area, even if the scene fill is not visible because it is obscured by other controls.\n+ *\n@@ -109,1 +115,1 @@\n- * The {@code leading} and {@code trailing} children will be resized to their preferred widths and extend the\n+ * The {@code left} and {@code right} children will be resized to their preferred widths and extend the\n@@ -331,0 +337,2 @@\n+        effectiveNodeOrientationProperty().subscribe(this::updateInsets);\n+\n@@ -345,1 +353,1 @@\n-     * @param leading the leading node, or {@code null}\n+     * @param left the left node, or {@code null}\n@@ -347,1 +355,1 @@\n-     * @param trailing the trailing node, or {@code null}\n+     * @param right the right node, or {@code null}\n@@ -349,1 +357,1 @@\n-    public HeaderBar(Node leading, Node center, Node trailing) {\n+    public HeaderBar(Node left, Node center, Node right) {\n@@ -351,1 +359,1 @@\n-        setLeading(leading);\n+        setLeft(left);\n@@ -353,1 +361,1 @@\n-        setTrailing(trailing);\n+        setRight(right);\n@@ -366,1 +374,1 @@\n-        updateInsets();\n+        updateInsets(getEffectiveNodeOrientation());\n@@ -371,1 +379,1 @@\n-        updateInsets();\n+        updateInsets(getEffectiveNodeOrientation());\n@@ -374,1 +382,1 @@\n-    private void updateInsets() {\n+    private void updateInsets(NodeOrientation orientation) {\n@@ -379,1 +387,1 @@\n-        } else {\n+        } else if (orientation == NodeOrientation.LEFT_TO_RIGHT) {\n@@ -383,0 +391,4 @@\n+        } else {\n+            leftSystemInset.set(currentMetrics.rightInset());\n+            rightSystemInset.set(currentMetrics.leftInset());\n+            minSystemHeight.set(currentMetrics.minHeight());\n@@ -390,2 +402,0 @@\n-     * <p>\n-     * Note that the left system inset refers to the left side of the window, independent of layout orientation.\n@@ -413,2 +423,0 @@\n-     * <p>\n-     * Note that the right system inset refers to the right side of the window, independent of layout orientation.\n@@ -463,4 +471,1 @@\n-     * The leading area of the {@code HeaderBar}.\n-     * <p>\n-     * The leading area corresponds to the left area in a left-to-right layout, and to the right area\n-     * in a right-to-left layout.\n+     * The left area of the {@code HeaderBar}.\n@@ -470,1 +475,1 @@\n-    private final ObjectProperty<Node> leading = new NodeProperty(\"leading\");\n+    private final ObjectProperty<Node> left = new NodeProperty(\"left\");\n@@ -472,2 +477,2 @@\n-    public final ObjectProperty<Node> leadingProperty() {\n-        return leading;\n+    public final ObjectProperty<Node> leftProperty() {\n+        return left;\n@@ -476,2 +481,2 @@\n-    public final Node getLeading() {\n-        return leading.get();\n+    public final Node getLeft() {\n+        return left.get();\n@@ -480,2 +485,2 @@\n-    public final void setLeading(Node value) {\n-        leading.set(value);\n+    public final void setLeft(Node value) {\n+        left.set(value);\n@@ -504,4 +509,1 @@\n-     * The trailing area of the {@code HeaderBar}.\n-     * <p>\n-     * The trailing area corresponds to the right area in a left-to-right layout, and to the left area\n-     * in a right-to-left layout.\n+     * The right area of the {@code HeaderBar}.\n@@ -511,1 +513,1 @@\n-    private final ObjectProperty<Node> trailing = new NodeProperty(\"trailing\");\n+    private final ObjectProperty<Node> right = new NodeProperty(\"right\");\n@@ -513,2 +515,2 @@\n-    public final ObjectProperty<Node> trailingProperty() {\n-        return trailing;\n+    public final ObjectProperty<Node> rightProperty() {\n+        return right;\n@@ -517,2 +519,2 @@\n-    public final Node getTrailing() {\n-        return trailing.get();\n+    public final Node getRight() {\n+        return right.get();\n@@ -521,2 +523,2 @@\n-    public final void setTrailing(Node value) {\n-        trailing.set(value);\n+    public final void setRight(Node value) {\n+        right.set(value);\n@@ -526,1 +528,1 @@\n-     * Specifies whether additional padding should be added to the leading side of the {@code HeaderBar}.\n+     * Specifies whether additional padding should be added to the left side of the {@code HeaderBar}.\n@@ -529,1 +531,1 @@\n-     * header buttons, no additional padding is added to the leading side of the {@code HeaderBar}.\n+     * header buttons, no additional padding is added to the left side of the {@code HeaderBar}.\n@@ -536,1 +538,1 @@\n-     * @see #trailingSystemPaddingProperty() trailingSystemPadding\n+     * @see #rightSystemPaddingProperty() rightSystemPadding\n@@ -538,1 +540,1 @@\n-    private final BooleanProperty leadingSystemPadding = new BooleanPropertyBase(true) {\n+    private final BooleanProperty leftSystemPadding = new BooleanPropertyBase(true) {\n@@ -546,1 +548,1 @@\n-            return \"leadingSystemPadding\";\n+            return \"leftSystemPadding\";\n@@ -555,2 +557,2 @@\n-    public final BooleanProperty leadingSystemPaddingProperty() {\n-        return leadingSystemPadding;\n+    public final BooleanProperty leftSystemPaddingProperty() {\n+        return leftSystemPadding;\n@@ -559,2 +561,2 @@\n-    public final boolean isLeadingSystemPadding() {\n-        return leadingSystemPadding.get();\n+    public final boolean isLeftSystemPadding() {\n+        return leftSystemPadding.get();\n@@ -563,2 +565,2 @@\n-    public final void setLeadingSystemPadding(boolean value) {\n-        leadingSystemPadding.set(value);\n+    public final void setLeftSystemPadding(boolean value) {\n+        leftSystemPadding.set(value);\n@@ -568,1 +570,1 @@\n-     * Specifies whether additional padding should be added to the trailing side of the {@code HeaderBar}.\n+     * Specifies whether additional padding should be added to the right side of the {@code HeaderBar}.\n@@ -571,1 +573,1 @@\n-     * header buttons, no additional padding is added to the trailing side of the {@code HeaderBar}.\n+     * header buttons, no additional padding is added to the right side of the {@code HeaderBar}.\n@@ -578,1 +580,1 @@\n-     * @see #leadingSystemPaddingProperty() leadingSystemPadding\n+     * @see #leftSystemPaddingProperty() leftSystemPadding\n@@ -580,1 +582,1 @@\n-    private final BooleanProperty trailingSystemPadding = new BooleanPropertyBase(true) {\n+    private final BooleanProperty rightSystemPadding = new BooleanPropertyBase(true) {\n@@ -588,1 +590,1 @@\n-            return \"trailingSystemPadding\";\n+            return \"rightSystemPadding\";\n@@ -597,6 +599,2 @@\n-    public final BooleanProperty trailingSystemPaddingProperty() {\n-        return trailingSystemPadding;\n-    }\n-\n-    public final boolean isTrailingSystemPadding() {\n-        return trailingSystemPadding.get();\n+    public final BooleanProperty rightSystemPaddingProperty() {\n+        return rightSystemPadding;\n@@ -605,2 +603,2 @@\n-    public final void setTrailingSystemPadding(boolean value) {\n-        trailingSystemPadding.set(value);\n+    public final boolean isRightSystemPadding() {\n+        return rightSystemPadding.get();\n@@ -609,8 +607,2 @@\n-    private boolean isLeftSystemPadding(NodeOrientation nodeOrientation) {\n-        return nodeOrientation == NodeOrientation.LEFT_TO_RIGHT && isLeadingSystemPadding()\n-            || nodeOrientation == NodeOrientation.RIGHT_TO_LEFT && isTrailingSystemPadding();\n-    }\n-\n-    private boolean isRightSystemPadding(NodeOrientation nodeOrientation) {\n-        return nodeOrientation == NodeOrientation.LEFT_TO_RIGHT && isTrailingSystemPadding()\n-            || nodeOrientation == NodeOrientation.RIGHT_TO_LEFT && isLeadingSystemPadding();\n+    public final void setRightSystemPadding(boolean value) {\n+        rightSystemPadding.set(value);\n@@ -621,1 +613,1 @@\n-        Node leading = getLeading();\n+        Node left = getLeft();\n@@ -623,1 +615,1 @@\n-        Node trailing = getTrailing();\n+        Node right = getRight();\n@@ -628,1 +620,0 @@\n-        double systemPaddingWidth = 0;\n@@ -631,2 +622,2 @@\n-                && (childHasContentBias(leading, Orientation.VERTICAL) ||\n-                    childHasContentBias(trailing, Orientation.VERTICAL) ||\n+                && (childHasContentBias(left, Orientation.VERTICAL) ||\n+                    childHasContentBias(right, Orientation.VERTICAL) ||\n@@ -635,2 +626,2 @@\n-            leftPrefWidth = getAreaWidth(leading, areaHeight, false);\n-            rightPrefWidth = getAreaWidth(trailing, areaHeight, false);\n+            leftPrefWidth = getAreaWidth(left, areaHeight, false);\n+            rightPrefWidth = getAreaWidth(right, areaHeight, false);\n@@ -639,2 +630,2 @@\n-            leftPrefWidth = getAreaWidth(leading, -1, false);\n-            rightPrefWidth = getAreaWidth(trailing, -1, false);\n+            leftPrefWidth = getAreaWidth(left, -1, false);\n+            rightPrefWidth = getAreaWidth(right, -1, false);\n@@ -644,9 +635,2 @@\n-        NodeOrientation nodeOrientation = getEffectiveNodeOrientation();\n-\n-        if (isLeftSystemPadding(nodeOrientation)) {\n-            systemPaddingWidth += getLeftSystemInset().getWidth();\n-        }\n-\n-        if (isRightSystemPadding(nodeOrientation)) {\n-            systemPaddingWidth += getRightSystemInset().getWidth();\n-        }\n+        double leftSystemPaddingWidth = isLeftSystemPadding() ? getLeftSystemInset().getWidth() : 0;\n+        double rightSystemPaddingWidth = isRightSystemPadding() ? getRightSystemInset().getWidth() : 0;\n@@ -659,1 +643,2 @@\n-             + systemPaddingWidth;\n+             + leftSystemPaddingWidth\n+             + rightSystemPaddingWidth;\n@@ -664,1 +649,1 @@\n-        Node leading = getLeading();\n+        Node left = getLeft();\n@@ -666,1 +651,1 @@\n-        Node trailing = getTrailing();\n+        Node right = getRight();\n@@ -668,2 +653,2 @@\n-        double leadingMinHeight = getAreaHeight(leading, -1, true);\n-        double trailingMinHeight = getAreaHeight(trailing, -1, true);\n+        double leftMinHeight = getAreaHeight(left, -1, true);\n+        double rightMinHeight = getAreaHeight(right, -1, true);\n@@ -673,3 +658,3 @@\n-            double leadingPrefWidth = getAreaWidth(leading, -1, false);\n-            double trailingPrefWidth = getAreaWidth(trailing, -1, false);\n-            centerMinHeight = getAreaHeight(center, Math.max(0, width - leadingPrefWidth - trailingPrefWidth), true);\n+            double leftPrefWidth = getAreaWidth(left, -1, false);\n+            double rightPrefWidth = getAreaWidth(right, -1, false);\n+            centerMinHeight = getAreaHeight(center, Math.max(0, width - leftPrefWidth - rightPrefWidth), true);\n@@ -682,1 +667,1 @@\n-             + Math.max(centerMinHeight, Math.max(trailingMinHeight, leadingMinHeight));\n+             + Math.max(centerMinHeight, Math.max(rightMinHeight, leftMinHeight));\n@@ -687,1 +672,1 @@\n-        Node leading = getLeading();\n+        Node left = getLeft();\n@@ -689,1 +674,1 @@\n-        Node trailing = getTrailing();\n+        Node right = getRight();\n@@ -691,2 +676,2 @@\n-        double leadingPrefHeight = getAreaHeight(leading, -1, false);\n-        double trailingPrefHeight = getAreaHeight(trailing, -1, false);\n+        double leftPrefHeight = getAreaHeight(left, -1, false);\n+        double rightPrefHeight = getAreaHeight(right, -1, false);\n@@ -696,3 +681,3 @@\n-            double leadingPrefWidth = getAreaWidth(leading, -1, false);\n-            double trailingPrefWidth = getAreaWidth(trailing, -1, false);\n-            centerPrefHeight = getAreaHeight(center, Math.max(0, width - leadingPrefWidth - trailingPrefWidth), false);\n+            double leftPrefWidth = getAreaWidth(left, -1, false);\n+            double rightPrefWidth = getAreaWidth(right, -1, false);\n+            centerPrefHeight = getAreaHeight(center, Math.max(0, width - leftPrefWidth - rightPrefWidth), false);\n@@ -705,6 +690,1 @@\n-             + Math.max(centerPrefHeight, Math.max(trailingPrefHeight, leadingPrefHeight));\n-    }\n-\n-    @Override\n-    public boolean usesMirroring() {\n-        return false;\n+             + Math.max(centerPrefHeight, Math.max(rightPrefHeight, leftPrefHeight));\n@@ -715,0 +695,1 @@\n+        Node left = getLeft();\n@@ -716,1 +697,1 @@\n-        Node left, right;\n+        Node right = getRight();\n@@ -718,2 +699,0 @@\n-        NodeOrientation nodeOrientation = getEffectiveNodeOrientation();\n-        boolean rtl = nodeOrientation == NodeOrientation.RIGHT_TO_LEFT;\n@@ -726,15 +705,4 @@\n-        double insideX, insideWidth;\n-        double leftSystemPaddingWidth = isLeftSystemPadding(nodeOrientation) ? getLeftSystemInset().getWidth() : 0;\n-        double rightSystemPaddingWidth = isRightSystemPadding(nodeOrientation) ? getRightSystemInset().getWidth() : 0;\n-\n-        if (rtl) {\n-            left = getTrailing();\n-            right = getLeading();\n-            insideX = insets.getRight() + leftSystemPaddingWidth;\n-            insideWidth = width - insideX - insets.getLeft() - rightSystemPaddingWidth;\n-        } else {\n-            left = getLeading();\n-            right = getTrailing();\n-            insideX = insets.getLeft() + leftSystemPaddingWidth;\n-            insideWidth = width - insideX - insets.getRight() - rightSystemPaddingWidth;\n-        }\n+        double leftSystemPaddingWidth = isLeftSystemPadding() ? getLeftSystemInset().getWidth() : 0;\n+        double rightSystemPaddingWidth = isRightSystemPadding() ? getRightSystemInset().getWidth() : 0;\n+        double insideX = insets.getLeft() + leftSystemPaddingWidth;\n+        double insideWidth = width - insideX - insets.getRight() - rightSystemPaddingWidth;\n@@ -743,1 +711,1 @@\n-            Insets leftMargin = adjustMarginForRTL(getNodeMargin(left), rtl);\n+            Insets leftMargin = getNodeMargin(left);\n@@ -759,1 +727,1 @@\n-            Insets rightMargin = adjustMarginForRTL(getNodeMargin(right), rtl);\n+            Insets rightMargin = getNodeMargin(right);\n@@ -775,1 +743,1 @@\n-            Insets centerMargin = adjustMarginForRTL(getNodeMargin(center), rtl);\n+            Insets centerMargin = getNodeMargin(center);\n@@ -812,10 +780,0 @@\n-    private Insets adjustMarginForRTL(Insets margin, boolean rtl) {\n-        if (margin == null) {\n-            return null;\n-        }\n-\n-        return rtl\n-            ? new Insets(margin.getTop(), margin.getLeft(), margin.getBottom(), margin.getRight())\n-            : margin;\n-    }\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/HeaderBar.java","additions":100,"deletions":142,"binary":false,"changes":242,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        assertNull(headerBar.getLeading());\n+        assertNull(headerBar.getLeft());\n@@ -66,1 +66,1 @@\n-        assertNull(headerBar.getTrailing());\n+        assertNull(headerBar.getRight());\n@@ -94,1 +94,1 @@\n-        void alignmentOfLeadingChildOnly_resizable(Pos pos, double x, double y, double width, double height) {\n+        void alignmentOfLeftChildOnly_resizable(Pos pos, double x, double y, double width, double height) {\n@@ -98,1 +98,1 @@\n-            headerBar.setLeading(content);\n+            headerBar.setLeft(content);\n@@ -117,1 +117,1 @@\n-        void alignmentOfLeadingChildOnly_notResizable(Pos pos, double x, double y, double width, double height) {\n+        void alignmentOfLeftChildOnly_notResizable(Pos pos, double x, double y, double width, double height) {\n@@ -121,1 +121,1 @@\n-            headerBar.setLeading(content);\n+            headerBar.setLeft(content);\n@@ -140,1 +140,1 @@\n-        void alignmentOfTrailingChildOnly_resizable(Pos pos, double x, double y, double width, double height) {\n+        void alignmentOfRightChildOnly_resizable(Pos pos, double x, double y, double width, double height) {\n@@ -144,1 +144,1 @@\n-            headerBar.setTrailing(content);\n+            headerBar.setRight(content);\n@@ -163,1 +163,1 @@\n-        void alignmentOfTrailingChildOnly_notResizable(Pos pos, double x, double y, double width, double height) {\n+        void alignmentOfRightChildOnly_notResizable(Pos pos, double x, double y, double width, double height) {\n@@ -167,1 +167,1 @@\n-            headerBar.setTrailing(content);\n+            headerBar.setRight(content);\n@@ -233,1 +233,1 @@\n-        void alignmentOfCenterChild_resizable_withNonEmptyLeadingAndTrailingChild(\n+        void alignmentOfCenterChild_resizable_withNonEmptyLeftAndRightChild(\n@@ -235,1 +235,1 @@\n-            var leading = new MockResizable(50, 50);\n+            var left = new MockResizable(50, 50);\n@@ -237,1 +237,1 @@\n-            var trailing = new MockResizable(150, 50);\n+            var right = new MockResizable(150, 50);\n@@ -240,1 +240,1 @@\n-            headerBar.setLeading(leading);\n+            headerBar.setLeft(left);\n@@ -242,1 +242,1 @@\n-            headerBar.setTrailing(trailing);\n+            headerBar.setRight(right);\n@@ -261,1 +261,1 @@\n-        void alignmentOfCenterChild_notResizable_withNonEmptyLeadingAndTrailingChild(\n+        void alignmentOfCenterChild_notResizable_withNonEmptyLeftAndRightChild(\n@@ -263,1 +263,1 @@\n-            var leading = new Rectangle(50, 50);\n+            var left = new Rectangle(50, 50);\n@@ -265,1 +265,1 @@\n-            var trailing = new Rectangle(150, 50);\n+            var right = new Rectangle(150, 50);\n@@ -268,1 +268,1 @@\n-            headerBar.setLeading(leading);\n+            headerBar.setLeft(left);\n@@ -270,1 +270,1 @@\n-            headerBar.setTrailing(trailing);\n+            headerBar.setRight(right);\n@@ -379,1 +379,1 @@\n-            var leading = new MockResizable(50, 50);\n+            var left = new MockResizable(50, 50);\n@@ -381,1 +381,1 @@\n-            var trailing = new MockResizable(150, 50);\n+            var right = new MockResizable(150, 50);\n@@ -384,1 +384,1 @@\n-            headerBar.setLeading(leading);\n+            headerBar.setLeft(left);\n@@ -386,1 +386,1 @@\n-            headerBar.setTrailing(trailing);\n+            headerBar.setRight(right);\n@@ -399,1 +399,1 @@\n-        void alignmentOfLeadingChild_notResizable_withoutReservedArea(\n+        void alignmentOfLeftChild_notResizable_withoutReservedArea(\n@@ -403,5 +403,5 @@\n-            var leading = new Rectangle(50, 50);\n-            HeaderBar.setAlignment(leading, pos);\n-            HeaderBar.setMargin(leading, new Insets(10));\n-            headerBar.setLeadingSystemPadding(false);\n-            headerBar.setLeading(leading);\n+            var left = new Rectangle(50, 50);\n+            HeaderBar.setAlignment(left, pos);\n+            HeaderBar.setMargin(left, new Insets(10));\n+            headerBar.setLeftSystemPadding(false);\n+            headerBar.setLeft(left);\n@@ -411,1 +411,1 @@\n-            assertBounds(x, y, width, height, leading);\n+            assertBounds(x, y, width, height, left);\n@@ -420,1 +420,1 @@\n-        void alignmentOfTrailingChild_notResizable_withoutReservedArea(\n+        void alignmentOfRightChild_notResizable_withoutReservedArea(\n@@ -424,5 +424,5 @@\n-            var trailing = new Rectangle(50, 50);\n-            HeaderBar.setAlignment(trailing, pos);\n-            HeaderBar.setMargin(trailing, new Insets(10));\n-            headerBar.setTrailingSystemPadding(false);\n-            headerBar.setTrailing(trailing);\n+            var right = new Rectangle(50, 50);\n+            HeaderBar.setAlignment(right, pos);\n+            HeaderBar.setMargin(right, new Insets(10));\n+            headerBar.setRightSystemPadding(false);\n+            headerBar.setRight(right);\n@@ -432,1 +432,1 @@\n-            assertBounds(x, y, width, height, trailing);\n+            assertBounds(x, y, width, height, right);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/HeaderBarTest.java","additions":38,"deletions":38,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -201,3 +201,3 @@\n-        var leadingContent = new HBox(menuBar);\n-        HeaderBar.setDragType(leadingContent, HeaderDragType.DRAGGABLE);\n-        headerBar.setLeading(leadingContent);\n+        var leftContent = new HBox(menuBar);\n+        HeaderBar.setDragType(leftContent, HeaderDragType.DRAGGABLE);\n+        headerBar.setLeft(leftContent);\n@@ -225,1 +225,1 @@\n-            leadingContent.getChildren().add(adaptiveButtonHeight);\n+            leftContent.getChildren().add(adaptiveButtonHeight);\n@@ -228,4 +228,4 @@\n-        var trailingNodes = new HBox(sizeComboBox);\n-        trailingNodes.setAlignment(Pos.CENTER);\n-        trailingNodes.setSpacing(5);\n-        headerBar.setTrailing(trailingNodes);\n+        var rightNodes = new HBox(sizeComboBox);\n+        rightNodes.setAlignment(Pos.CENTER);\n+        rightNodes.setSpacing(5);\n+        headerBar.setRight(rightNodes);\n@@ -234,1 +234,1 @@\n-            trailingNodes.getChildren().addAll(createCustomWindowButtons());\n+            rightNodes.getChildren().addAll(createCustomWindowButtons());\n@@ -247,1 +247,1 @@\n-        leftHeaderBar.setLeading(new Button(\"\\u2728\"));\n+        leftHeaderBar.setLeft(new Button(\"\\u2728\"));\n@@ -249,1 +249,1 @@\n-        leftHeaderBar.setTrailingSystemPadding(false);\n+        leftHeaderBar.setRightSystemPadding(false);\n@@ -253,1 +253,1 @@\n-        rightHeaderBar.setLeadingSystemPadding(false);\n+        rightHeaderBar.setLeftSystemPadding(false);\n@@ -268,4 +268,4 @@\n-        var trailingNodes = new HBox(sizeComboBox);\n-        trailingNodes.setAlignment(Pos.CENTER);\n-        trailingNodes.setSpacing(5);\n-        rightHeaderBar.setTrailing(trailingNodes);\n+        var rightNodes = new HBox(sizeComboBox);\n+        rightNodes.setAlignment(Pos.CENTER);\n+        rightNodes.setSpacing(5);\n+        rightHeaderBar.setRight(rightNodes);\n@@ -274,1 +274,1 @@\n-            trailingNodes.getChildren().addAll(createCustomWindowButtons());\n+            rightNodes.getChildren().addAll(createCustomWindowButtons());\n@@ -278,1 +278,1 @@\n-        rightHeaderBar.setTrailing(trailingNodes);\n+        rightHeaderBar.setRight(rightNodes);\n","filename":"tests\/manual\/monkey\/src\/com\/oracle\/tools\/fx\/monkey\/tools\/StageTesterWindow.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"}]}