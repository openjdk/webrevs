{"files":[{"patch":"@@ -512,1 +512,1 @@\n-\/\/            \/\/ TODO HACK for [JIRA] (RT-30449) FX 8 3D: Need to handle mirror transformation (flip culling);\n+\/\/            \/\/ TODO HACK for [JIRA] (JDK-8120494) FX 8 3D: Need to handle mirror transformation (flip culling);\n","filename":"apps\/samples\/3DViewer\/src\/main\/java\/com\/javafx\/experiments\/importers\/maya\/Loader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -405,2 +405,2 @@\n-        camera.setNearClip(1.0); \/\/ TODO: Workaround as per RT-31255\n-        camera.setFarClip(10000.0); \/\/ TODO: Workaround as per RT-31255\n+        camera.setNearClip(1.0); \/\/ TODO: Workaround as per JDK-8118078\n+        camera.setFarClip(10000.0); \/\/ TODO: Workaround as per JDK-8118078\n","filename":"apps\/samples\/3DViewer\/src\/main\/java\/com\/javafx\/experiments\/jfx3dviewer\/ContentModel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-                                \/\/ workaround for RT-30195\n+                                \/\/ workaround for JDK-8119860\n","filename":"apps\/samples\/3DViewer\/src\/main\/java\/com\/javafx\/experiments\/jfx3dviewer\/MainController.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-        \/\/TODO: RT-40270 - Public PerformanceTracker support should be added\n+        \/\/TODO: JDK-8091546 - Public PerformanceTracker support should be added\n","filename":"apps\/samples\/3DViewer\/src\/main\/java\/com\/javafx\/experiments\/jfx3dviewer\/SimpleViewerApp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -273,1 +273,1 @@\n-            \/\/ [JIRA] (RT-31178)\n+            \/\/ [JIRA] (JDK-8117423)\n@@ -343,1 +343,1 @@\n-            \/\/ [JIRA] (RT-31178)\n+            \/\/ [JIRA] (JDK-8117423)\n","filename":"apps\/samples\/3DViewer\/src\/main\/java\/com\/javafx\/experiments\/shape3d\/PolygonMeshView.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-    \/\/ TODO: Add variants of deriveWithNewBounds such as pair of Vec* (RT-26886)\n+    \/\/ TODO: Add variants of deriveWithNewBounds such as pair of Vec* (JDK-8092361)\n@@ -148,1 +148,1 @@\n-    \/\/ (RT-26886)\n+    \/\/ (JDK-8092361)\n","filename":"apps\/samples\/3DViewer\/src\/main\/java\/com\/javafx\/experiments\/utils3d\/geom\/BaseBounds.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -795,1 +795,1 @@\n-                    \/\/ (RT-26801)\n+                    \/\/ (JDK-8091010)\n@@ -1402,1 +1402,1 @@\n-        \/\/ TODO: Simplify this (RT-26801)\n+        \/\/ TODO: Simplify this (JDK-8091010)\n","filename":"apps\/samples\/3DViewer\/src\/main\/java\/com\/javafx\/experiments\/utils3d\/geom\/transform\/Affine2D.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -345,1 +345,1 @@\n-                \/\/ TODO: Optimize these cases ... (RT-26800)\n+                \/\/ TODO: Optimize these cases ... (JDK-8091788)\n@@ -436,1 +436,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -449,1 +449,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -462,1 +462,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -473,1 +473,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -484,1 +484,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -495,1 +495,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -506,1 +506,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -518,1 +518,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -546,1 +546,1 @@\n-        \/\/ to be simplified... (RT-26800)\n+        \/\/ to be simplified... (JDK-8091788)\n@@ -744,1 +744,1 @@\n-        \/\/ TODO: Optimize the state... (RT-26800)\n+        \/\/ TODO: Optimize the state... (JDK-8091788)\n","filename":"apps\/samples\/3DViewer\/src\/main\/java\/com\/javafx\/experiments\/utils3d\/geom\/transform\/Affine3D.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -285,1 +285,1 @@\n-            updateState(); \/\/ TODO: Is this really needed? (RT-26884)\n+            updateState(); \/\/ TODO: Is this really needed? (JDK-8092003)\n@@ -1010,1 +1010,1 @@\n-                \/\/TODO: Need to verify that this is a safe cast ... (RT-26885)\n+                \/\/TODO: Need to verify that this is a safe cast ... (JDK-8092066)\n@@ -2006,1 +2006,1 @@\n-                \/\/TODO: Need to verify this casting is safe .... (RT-26885)\n+                \/\/TODO: Need to verify this casting is safe .... (JDK-8092066)\n@@ -2751,1 +2751,1 @@\n-                \/\/ try to avoid this garbage... (RT-26884)\n+                \/\/ try to avoid this garbage... (JDK-8092003)\n","filename":"apps\/samples\/3DViewer\/src\/main\/java\/com\/javafx\/experiments\/utils3d\/geom\/transform\/AffineBase.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        \/\/ TODO: Optimize... (RT-26884)\n+        \/\/ TODO: Optimize... (JDK-8092003)\n","filename":"apps\/samples\/3DViewer\/src\/main\/java\/com\/javafx\/experiments\/utils3d\/geom\/transform\/TransformHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        \/\/ (Fix for RT-34920 that considered this to be a bug)\n+        \/\/ (Fix for JDK-8097504 that considered this to be a bug)\n","filename":"apps\/samples\/Ensemble8\/src\/samples\/java\/ensemble\/samples\/controls\/button\/pillbutton\/PillButtonApp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        htmlSP.setPrefWidth(htmlEditor.prefWidth(-1)); \/\/ Workaround of RT-21495\n+        htmlSP.setPrefWidth(htmlEditor.prefWidth(-1)); \/\/ Workaround of JDK-8096877\n","filename":"apps\/samples\/Ensemble8\/src\/samples\/java\/ensemble\/samples\/controls\/htmleditor\/HTMLEditorApp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-\/\/        stage.setIconified(test); \/\/ TODO: Blocked by http:\/\/javafx-jira.kenai.com\/browse\/JMY-203\n+\/\/        stage.setIconified(test);\n@@ -295,1 +295,0 @@\n-            \/\/ Customer example from bug report http:\/\/javafx-jira.kenai.com\/browse\/DTL-5561\n","filename":"apps\/samples\/Modena\/src\/main\/java\/modena\/Modena.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -262,1 +262,1 @@\n-        \/\/ Test case for RT-28410 MODENA: can't make tree\/table cell factories change color based\n+        \/\/ Test case for JDK-8117108 MODENA: can't make tree\/table cell factories change color based\n","filename":"apps\/samples\/Modena\/src\/main\/java\/modena\/SamplePageTableHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-<!-- Customer test case from bug http:\/\/javafx-jira.kenai.com\/browse\/DTL-5561 -->\n","filename":"apps\/samples\/Modena\/src\/main\/resources\/modena\/ScottSelvia.fxml","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -200,1 +200,1 @@\n-                        \/\/ See RT-28850.\n+                        \/\/ See JDK-8090379.\n","filename":"apps\/toys\/Hello\/src\/main\/java\/hello\/HelloDatePicker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-        \/\/ RT-28635\n+        \/\/ JDK-8120561\n","filename":"apps\/toys\/Hello\/src\/main\/java\/hello\/HelloFontSize.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-            \/\/ since that will provoke RT-9824\n+            \/\/ since that will provoke JDK-8109685\n","filename":"apps\/toys\/Hello\/src\/main\/java\/hello\/HelloLaunchOnNewThread.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-        Tab disappearingNodesTab = new Tab(\"RT-12822\");\n+        Tab disappearingNodesTab = new Tab(\"JDK-8112018\");\n","filename":"apps\/toys\/Hello\/src\/main\/java\/hello\/HelloListView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n- \/* for HelloFontSize as regards RT-28635 *\/\n+ \/* for HelloFontSize as regards JDK-8120561 *\/\n","filename":"apps\/toys\/Hello\/src\/main\/java\/hello\/hello.css","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -455,1 +455,1 @@\n-    @Disabled(\"RT-33413\")\n+    @Disabled(\"JDK-8089771\")\n@@ -480,1 +480,1 @@\n-    @Disabled(\"RT-33413\")\n+    @Disabled(\"JDK-8089771\")\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/binding\/expression\/AbstractNumberExpressionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-    \/\/RT-37089\n+    \/\/JDK-8095966\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/collections\/ListChangeBuilderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-     * A slightly updated test provided by \"Kleopatra\" (http:\/\/javafx-jira.kenai.com\/browse\/RT-14400)\n+     * A slightly updated test provided by \"Kleopatra\" (JDK-8112763)\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/collections\/SortedListTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-        \/\/ RT-20197 add menuitems only on first show.\n+        \/\/ JDK-8127239 add menuitems only on first show.\n@@ -231,1 +231,1 @@\n-        \/\/ Fix for RT-38838.\n+        \/\/ Fix for JDK-8092793.\n@@ -296,1 +296,1 @@\n-        \/\/ RT-36513 made this applyCss(). Modified by RT-36995 to NodeHelper.reapplyCSS()\n+        \/\/ JDK-8094435 made this applyCss(). Modified by JDK-8093654 to NodeHelper.reapplyCSS()\n@@ -485,1 +485,1 @@\n-        \/\/ RT-19624 calling requestFocus inside layout was casuing repeated layouts.\n+        \/\/ JDK-8127198 calling requestFocus inside layout was casuing repeated layouts.\n@@ -508,1 +508,1 @@\n-        \/\/ we get the issue shown in RT-34429\n+        \/\/ we get the issue shown in JDK-8119487\n@@ -534,1 +534,1 @@\n-                        \/\/ beneath this switch statement. See RT-34429 for more context.\n+                        \/\/ beneath this switch statement. See JDK-8119487 for more context.\n@@ -658,1 +658,1 @@\n-                    \/\/ RT-15103\n+                    \/\/ JDK-8114597\n@@ -803,1 +803,1 @@\n-        updateItems(); \/\/ RT-29761\n+        updateItems(); \/\/ JDK-8124669\n@@ -891,1 +891,1 @@\n-        \/\/ Fix for RT-37022 - we dispose content so that we do not process CSS\n+        \/\/ Fix for JDK-8094989 - we dispose content so that we do not process CSS\n@@ -940,1 +940,1 @@\n-        \/\/ RT-37185: We check the direction of the scroll, to prevent it locking\n+        \/\/ JDK-8093506: We check the direction of the scroll, to prevent it locking\n@@ -1304,1 +1304,1 @@\n-                \/\/ RT-19546 update currentFocusedIndex when MenuItemContainer gets focused.\n+                \/\/ JDK-8127539 update currentFocusedIndex when MenuItemContainer gets focused.\n@@ -1334,1 +1334,1 @@\n-                                \/\/ open then close it (RT-15049)\n+                                \/\/ open then close it (JDK-8114380)\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/ContextMenuContent.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-        \/\/ we return on empty, the listener is never installed (leading to RT-39249)\n+        \/\/ we return on empty, the listener is never installed (leading to JDK-8094496)\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/ControlAcceleratorSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-            \/\/ Workaround of RT-29871: Instead of just invoking fixPosition()\n+            \/\/ Workaround of JDK-8091771: Instead of just invoking fixPosition()\n@@ -248,1 +248,1 @@\n-        \/\/ Math.max(0, ...) added for RT-34704 to ensure the dialog is at least 0 x 0\n+        \/\/ Math.max(0, ...) added for JDK-8095542 to ensure the dialog is at least 0 x 0\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/CustomColorDialog.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-                \/\/ RT-30903: Make sure width snaps to pixel when divided by\n+                \/\/ JDK-8123555: Make sure width snaps to pixel when divided by\n@@ -223,1 +223,1 @@\n-        \/\/ RT-30511: This prevents key events from reaching the popup's owner.\n+        \/\/ JDK-8118350: This prevents key events from reaching the popup's owner.\n@@ -467,1 +467,1 @@\n-        \/\/ RT-31075: The following are now set in the try-catch block.\n+        \/\/ JDK-8096176: The following are now set in the try-catch block.\n@@ -721,1 +721,1 @@\n-        \/\/ RT-31857\n+        \/\/ JDK-8123621\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/DatePickerContent.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n- * Refer to RT-33442 for more information on this issue.\n+ * Refer to JDK-8123472 for more information on this issue.\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/SelectedCellsMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -319,1 +319,1 @@\n-        \/\/ To prevent RT-32119, we make a copy of the selected indices\n+        \/\/ To prevent JDK-8123898, we make a copy of the selected indices\n@@ -331,1 +331,1 @@\n-            \/\/ RT-32560: This prevents the anchor 'sticking' in\n+            \/\/ JDK-8115366: This prevents the anchor 'sticking' in\n@@ -334,1 +334,1 @@\n-            \/\/ (Refer to the video in RT-32560 for more detail).\n+            \/\/ (Refer to the video in JDK-8115366 for more detail).\n@@ -337,1 +337,1 @@\n-            \/\/ RT-21444: We need to put the range in the correct\n+            \/\/ JDK-8126876: We need to put the range in the correct\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/CellBehaviorBase.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -238,1 +238,1 @@\n-        \/\/ RT-18151: namely, clicking on the comboBox button shouldn't hide,\n+        \/\/ JDK-8118434: namely, clicking on the comboBox button shouldn't hide,\n@@ -300,1 +300,1 @@\n-        \/\/ RT-18151: if the ComboBox button was clicked, and it was this that forced the\n+        \/\/ JDK-8118434: if the ComboBox button was clicked, and it was this that forced the\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/ComboBoxBaseBehavior.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-            \/\/ RT-12751: we want to keep an eye on the user holding down the shift key,\n+            \/\/ JDK-8114799: we want to keep an eye on the user holding down the shift key,\n@@ -201,1 +201,1 @@\n-        \/\/ Fix for RT-16565\n+        \/\/ Fix for JDK-8128723\n@@ -661,1 +661,1 @@\n-        \/\/ fix for RT-34407\n+        \/\/ fix for JDK-8097503\n@@ -689,1 +689,1 @@\n-        \/\/ fix for RT-34407\n+        \/\/ fix for JDK-8097503\n@@ -721,1 +721,1 @@\n-        \/\/ RT-18413: Focus must go to first row\n+        \/\/ JDK-8115478: Focus must go to first row\n@@ -761,1 +761,1 @@\n-        \/\/ Fix for RT-31241\n+        \/\/ Fix for JDK-8123409\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/ListViewBehavior.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    \/\/ RT-18711 & RT-18854: Stub out word based navigation and editing\n+    \/\/ JDK-8127160 & JDK-8127849: Stub out word based navigation and editing\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/PasswordFieldBehavior.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-        \/\/ RT-15207 When snapToTicks is true, slider value calculated in drag\n+        \/\/ JDK-8114134 When snapToTicks is true, slider value calculated in drag\n@@ -157,1 +157,1 @@\n-        \/\/ RT-8634 If snapToTicks is true and block increment is less than\n+        \/\/ JDK-8109702 If snapToTicks is true and block increment is less than\n@@ -174,1 +174,1 @@\n-        \/\/ RT-8634 If snapToTicks is true and block increment is less than\n+        \/\/ JDK-8109702 If snapToTicks is true and block increment is less than\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/SliderBehavior.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-                    \/\/ RT-21444: We need to put the range in the correct\n+                    \/\/ JDK-8126876: We need to put the range in the correct\n@@ -189,1 +189,1 @@\n-                    \/\/ This line of code below was disabled as a fix for RT-30394.\n+                    \/\/ This line of code below was disabled as a fix for JDK-8119603.\n@@ -193,1 +193,1 @@\n-                    \/\/ without taking care of RT-30394 in an alternative manner.\n+                    \/\/ without taking care of JDK-8119603 in an alternative manner.\n@@ -221,1 +221,1 @@\n-                \/\/ we check if cell selection is enabled to fix RT-33897\n+                \/\/ we check if cell selection is enabled to fix JDK-8119598\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TableCellBehaviorBase.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-        \/\/ Fix for RT-16565\n+        \/\/ Fix for JDK-8128723\n@@ -176,1 +176,1 @@\n-        \/\/ Fix for RT-31241\n+        \/\/ Fix for JDK-8123409\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TableViewBehavior.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-            \/\/ RT-12751: we want to keep an eye on the user holding down the shift key,\n+            \/\/ JDK-8114799: we want to keep an eye on the user holding down the shift key,\n@@ -1093,1 +1093,1 @@\n-                \/\/ fix for RT-34407\n+                \/\/ fix for JDK-8097503\n@@ -1130,1 +1130,1 @@\n-                \/\/ fix for RT-34407\n+                \/\/ fix for JDK-8097503\n@@ -1163,1 +1163,1 @@\n-        \/\/ Functionality as described in RT-12752\n+        \/\/ Functionality as described in JDK-8112552\n@@ -1179,1 +1179,1 @@\n-        \/\/ Functionality as described in RT-12752\n+        \/\/ Functionality as described in JDK-8112552\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TableViewBehaviorBase.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-            \/\/ RT-23699: The selection is now only affected when the TextField\n+            \/\/ JDK-8116975: The selection is now only affected when the TextField\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TextFieldBehavior.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        \/\/ key reserved for the default button. See RT-40166 for more detail.\n+        \/\/ key reserved for the default button. See JDK-8093253 for more detail.\n@@ -78,1 +78,1 @@\n-\/\/        \/\/ key reserved for the default button. See RT-40166 for more detail.\n+\/\/        \/\/ key reserved for the default button. See JDK-8093253 for more detail.\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TitledPaneBehavior.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-        \/\/ Fix for RT-16565\n+        \/\/ Fix for JDK-8128723\n@@ -180,1 +180,1 @@\n-        \/\/ Fix for RT-31241\n+        \/\/ Fix for JDK-8123409\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TreeTableViewBehavior.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-            \/\/ RT-12751: we want to keep an eye on the user holding down the shift key,\n+            \/\/ JDK-8114799: we want to keep an eye on the user holding down the shift key,\n@@ -71,1 +71,1 @@\n-    \/\/ Support for RT-13826:\n+    \/\/ Support for JDK-8114797:\n@@ -246,1 +246,1 @@\n-        \/\/ Fix for RT-16565\n+        \/\/ Fix for JDK-8128723\n@@ -535,1 +535,1 @@\n-        \/\/ RT-18413: Focus must go to first row\n+        \/\/ JDK-8115478: Focus must go to first row\n@@ -584,1 +584,1 @@\n-        \/\/ fix for RT-34407\n+        \/\/ fix for JDK-8097503\n@@ -612,1 +612,1 @@\n-        \/\/ fix for RT-34407\n+        \/\/ fix for JDK-8097503\n@@ -629,1 +629,1 @@\n-        \/\/ Fix for RT-31241\n+        \/\/ Fix for JDK-8123409\n@@ -670,1 +670,1 @@\n-            \/\/ move selection to the first child (RT-17978)\n+            \/\/ move selection to the first child (JDK-8117018)\n@@ -708,1 +708,1 @@\n-        \/\/ Fix for RT-17233 where we could hide all items in a tree with no visible\n+        \/\/ Fix for JDK-8118332 where we could hide all items in a tree with no visible\n@@ -717,1 +717,1 @@\n-        \/\/ Fix for RT-17833 where the selection highlight could disappear unexpectedly from\n+        \/\/ Fix for JDK-8128031 where the selection highlight could disappear unexpectedly from\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TreeViewBehavior.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-        \/\/ RT-37092: Use the line bounds specifically, to include font leading.\n+        \/\/ JDK-8093957: Use the line bounds specifically, to include font leading.\n@@ -298,1 +298,1 @@\n-                \/\/ RT-23458: Use a faster algorithm for the most common case\n+                \/\/ JDK-8101897: Use a faster algorithm for the most common case\n@@ -495,1 +495,1 @@\n-            return text; \/\/ JDK-8092895 (RT-30868) - return text, not empty string.\n+            return text; \/\/ JDK-8092895 (JDK-8092895) - return text, not empty string.\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/skin\/Utils.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-        \/\/ RT-37494: Force the major text direction to LTR, so that '#' is always\n+        \/\/ JDK-8095846: Force the major text direction to LTR, so that '#' is always\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/skin\/WebColorFieldSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -709,1 +709,1 @@\n-            \/\/ RT-12272 : tick labels overlapping\n+            \/\/ JDK-8112169 : tick labels overlapping\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/Axis.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-            \/\/ RT-21162 : replacing the previous data, first remove the node from scenegraph.\n+            \/\/ JDK-8115821 : replacing the previous data, first remove the node from scenegraph.\n@@ -299,1 +299,1 @@\n-            \/\/ RT-21164 upside down bars: was adding NEGATIVE_STYLE styleclass\n+            \/\/ JDK-8115074 upside down bars: was adding NEGATIVE_STYLE styleclass\n@@ -372,1 +372,1 @@\n-        \/\/ RT-24813 : if the data in a series gets too large, barWidth can get negative.\n+        \/\/ JDK-8125812 : if the data in a series gets too large, barWidth can get negative.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/BarChart.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-                        \/\/ Note: workaround for RT-7689 - saw this in ProgressControlSkin\n+                        \/\/ Note: workaround for JDK-8109535 - saw this in ProgressControlSkin\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/BubbleChart.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -294,1 +294,1 @@\n-            \/\/ RT-14092 flickering  : check if bVal is 0\n+            \/\/ JDK-8113502 flickering  : check if bVal is 0\n@@ -462,1 +462,1 @@\n-        \/\/RT-21141 allDataCategories needs to be updated based on data -\n+        \/\/JDK-8127602 allDataCategories needs to be updated based on data -\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/CategoryAxis.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-            \/\/ RT-32838 No need to invalidate range if there is one data item - whose value is zero.\n+            \/\/ JDK-8118969 No need to invalidate range if there is one data item - whose value is zero.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/LineChart.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -443,1 +443,1 @@\n-            \/\/ fix for RT-35600 where a massive tick unit was being selected\n+            \/\/ fix for JDK-8094132 where a massive tick unit was being selected\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/NumberAxis.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-            \/\/ RT-28090 Probably a sort happened, just reorder the pointers.\n+            \/\/ JDK-8124777 Probably a sort happened, just reorder the pointers.\n@@ -384,1 +384,1 @@\n-            requestChartLayout(); \/\/ RT-23091\n+            requestChartLayout(); \/\/ JDK-8115802\n@@ -442,1 +442,1 @@\n-                            \/\/ RT-23597 : item's chart might have been set to null if\n+                            \/\/ JDK-8117811 : item's chart might have been set to null if\n@@ -460,1 +460,1 @@\n-        \/\/ (Fix for RT-34564)\n+        \/\/ (Fix for JDK-8122332)\n@@ -499,1 +499,1 @@\n-                                     \/\/ remove chart references from old data - RT-22553\n+                                     \/\/ remove chart references from old data - JDK-8126613\n@@ -746,1 +746,1 @@\n-        if (legendNode != null && legendNode != legend) return; \/\/ RT-23596 dont update when user has set legend.\n+        if (legendNode != null && legendNode != legend) return; \/\/ JDK-8126273 dont update when user has set legend.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/PieChart.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    \/\/ RT-23125 handling data removal when a category is removed.\n+    \/\/ JDK-8115252 handling data removal when a category is removed.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/StackedBarChart.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-            \/\/ RT-12069, linked list pointers should update when list is permutated.\n+            \/\/ JDK-8112081, linked list pointers should update when list is permutated.\n@@ -249,2 +249,2 @@\n-                \/\/ at the same time. RT-14163\n-                \/\/ RT-21295 - disable animated only when current is also not null.\n+                \/\/ at the same time. JDK-8113301\n+                \/\/ JDK-8127526 - disable animated only when current is also not null.\n@@ -493,1 +493,1 @@\n-        \/\/ RT-23123 autoranging leads to charts incorrect appearance.\n+        \/\/ JDK-8118001 autoranging leads to charts incorrect appearance.\n@@ -1519,1 +1519,1 @@\n-                        \/\/ RT-25187 Probably a sort happened, just reorder the pointers and return.\n+                        \/\/ JDK-8125209 Probably a sort happened, just reorder the pointers and return.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/XYChart.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -256,1 +256,1 @@\n-                        \/\/ RT-29433 - clear selection.\n+                        \/\/ JDK-8124891 - clear selection.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ChoiceBox.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -269,1 +269,1 @@\n-                \/\/ later instances. This is RT-19227.\n+                \/\/ later instances. This is JDK-8127705.\n@@ -495,1 +495,1 @@\n-                \/\/ no-op: fix for RT-22572 where the developer was completely\n+                \/\/ no-op: fix for JDK-8117197 where the developer was completely\n@@ -499,1 +499,1 @@\n-                \/\/ Additional fix for RT-22937: adding the '&& t1 == null'.\n+                \/\/ Additional fix for JDK-8115968: adding the '&& t1 == null'.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ComboBox.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-        \/\/ Fix for RT-29885\n+        \/\/ Fix for JDK-8115009\n@@ -132,1 +132,1 @@\n-        \/\/ End of fix for RT-29885\n+        \/\/ End of fix for JDK-8115009\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ComboBoxBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-            \/\/ RT-17525 : Use context class loader only if Class.forName fails.\n+            \/\/ JDK-8114970 : Use context class loader only if Class.forName fails.\n@@ -135,1 +135,1 @@\n-            \/\/ RT-14177: Try looking up the class using the class loader of the\n+            \/\/ JDK-8112993: Try looking up the class using the class loader of the\n@@ -413,1 +413,1 @@\n-                ctx.setShowRelativeToWindow(true); \/\/RT-15160\n+                ctx.setShowRelativeToWindow(true); \/\/JDK-8114638\n@@ -724,1 +724,1 @@\n-                errors.add(error); \/\/ RT-19884\n+                errors.add(error); \/\/ JDK-8120505\n@@ -738,1 +738,1 @@\n-                    errors.add(error); \/\/ RT-19884\n+                    errors.add(error); \/\/ JDK-8120505\n@@ -761,1 +761,1 @@\n-                    errors.add(error); \/\/ RT-19884\n+                    errors.add(error); \/\/ JDK-8120505\n@@ -776,1 +776,1 @@\n-                errors.add(error); \/\/ RT-19884\n+                errors.add(error); \/\/ JDK-8120505\n@@ -785,1 +785,1 @@\n-                errors.add(error); \/\/ RT-19884\n+                errors.add(error); \/\/ JDK-8120505\n@@ -848,1 +848,1 @@\n-            \/\/ RT-29162: make sure properties only show up once in the list\n+            \/\/ JDK-8118782: make sure properties only show up once in the list\n@@ -920,1 +920,1 @@\n-                        errors.add(error); \/\/ RT-19884\n+                        errors.add(error); \/\/ JDK-8120505\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Control.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -217,1 +217,1 @@\n-        \/\/ Fix for RT-31577 - the selectedItems list was going to\n+        \/\/ Fix for JDK-8123234 - the selectedItems list was going to\n@@ -222,1 +222,1 @@\n-        \/\/ makeAtomic toggle added to resolve RT-32618\n+        \/\/ makeAtomic toggle added to resolve JDK-8117117\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ControlUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -357,1 +357,1 @@\n-                        \/\/ RT-34466 - if graphic's url is the same as this property's value, then don't overwrite.\n+                        \/\/ JDK-8095575 - if graphic's url is the same as this property's value, then don't overwrite.\n@@ -842,1 +842,1 @@\n-        \/\/ snapped insets code commented out to resolve RT-39738\n+        \/\/ snapped insets code commented out to resolve JDK-8095678\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/DialogPane.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-        \/\/ Refer to RT-40687 for more context\n+        \/\/ Refer to JDK-8094829 for more context\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/HeavyweightDialog.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -365,1 +365,1 @@\n-                    \/\/ RT-20727 - if CSS is setting the font, then make sure invalidate doesn't call NodeHelper.reapplyCSS\n+                    \/\/ JDK-8127428 - if CSS is setting the font, then make sure invalidate doesn't call NodeHelper.reapplyCSS\n@@ -392,1 +392,1 @@\n-                    \/\/ RT-20727 - if font is changed by calling setFont, then\n+                    \/\/ JDK-8127428 - if font is changed by calling setFont, then\n@@ -509,1 +509,1 @@\n-                        \/\/ RT-34466 - if graphic's url is the same as this property's value, then don't overwrite.\n+                        \/\/ JDK-8095575 - if graphic's url is the same as this property's value, then don't overwrite.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Labeled.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-            \/\/ RT-35395: We only update the item in this cell if the current cell\n+            \/\/ JDK-8091726: We only update the item in this cell if the current cell\n@@ -331,1 +331,1 @@\n-            \/\/ Fix for RT-31165 - if we (needlessly) update the index whilst the\n+            \/\/ Fix for JDK-8123482 - if we (needlessly) update the index whilst the\n@@ -426,1 +426,1 @@\n-        \/\/ fired (as identified in RT-29650)\n+        \/\/ fired (as identified in JDK-8124615)\n@@ -516,1 +516,1 @@\n-            \/\/ RT-35864 - if the index didn't change, then avoid calling updateItem\n+            \/\/ JDK-8092593 - if the index didn't change, then avoid calling updateItem\n@@ -520,1 +520,1 @@\n-                    \/\/ RT-37054:  we break out of the if\/else code here and\n+                    \/\/ JDK-8096969:  we break out of the if\/else code here and\n@@ -528,1 +528,1 @@\n-            \/\/ RT-30484 We need to allow a first run to be special-cased to allow\n+            \/\/ JDK-8116529 We need to allow a first run to be special-cased to allow\n@@ -530,1 +530,1 @@\n-            \/\/ the correct visual state to be set up. In particular, in RT-30484\n+            \/\/ the correct visual state to be set up. In particular, in JDK-8116529\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ListCell.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -390,1 +390,1 @@\n-        \/\/ Fix for RT-36651, which was introduced by RT-35679 (above) and resolved\n+        \/\/ Fix for JDK-8094212, which was introduced by JDK-8096184 (above) and resolved\n@@ -1325,1 +1325,1 @@\n-                        \/\/ Bug fix for RT-28637\n+                        \/\/ Bug fix for JDK-8118846\n@@ -1401,2 +1401,2 @@\n-                            \/\/ Fix for RT-18969: the list had setAll called on it\n-                            \/\/ Use of makeAtomic is a fix for RT-20945\n+                            \/\/ Fix for JDK-8120433: the list had setAll called on it\n+                            \/\/ Use of makeAtomic is a fix for JDK-8116954\n@@ -1408,1 +1408,1 @@\n-                            \/\/ Fix for RT-22079\n+                            \/\/ Fix for JDK-8126088\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ListView.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -580,1 +580,1 @@\n-        \/\/ Fix for RT-20582. We dive into the visual representation\n+        \/\/ Fix for JDK-8118568. We dive into the visual representation\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/MenuItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-            \/\/ Fix for RT-38787: we used to not enter this block if\n+            \/\/ Fix for JDK-8096243: we used to not enter this block if\n@@ -243,2 +243,2 @@\n-            \/\/ added the selectedIndices call for RT-30356.\n-            \/\/ changed to check if hasPermutated, and to call select(..) for RT-40010.\n+            \/\/ added the selectedIndices call for JDK-8116904.\n+            \/\/ changed to check if hasPermutated, and to call select(..) for JDK-8095676.\n@@ -253,1 +253,1 @@\n-            \/\/ removed due to RT-27185\n+            \/\/ removed due to JDK-8125112\n@@ -278,1 +278,1 @@\n-        \/\/ with no check here, we get RT-15024\n+        \/\/ with no check here, we get JDK-8114444\n@@ -342,1 +342,1 @@\n-        \/\/ RT-33558 if this method has been called with a given row, and that\n+        \/\/ JDK-8119637 if this method has been called with a given row, and that\n@@ -361,1 +361,1 @@\n-        \/\/ RT-32411 We used to call quietClearSelection() here, but this\n+        \/\/ JDK-8120351 We used to call quietClearSelection() here, but this\n@@ -364,1 +364,1 @@\n-        \/\/ makeAtomic toggle added to resolve RT-32618\n+        \/\/ makeAtomic toggle added to resolve JDK-8117117\n@@ -375,1 +375,1 @@\n-        \/\/ individual remove and add notifications) - see RT-33324\n+        \/\/ individual remove and add notifications) - see JDK-8119264\n@@ -587,1 +587,1 @@\n-        \/\/ to resolve issues such as RT-26721, where isSelected(int) was being\n+        \/\/ to resolve issues such as JDK-8118464, where isSelected(int) was being\n@@ -645,1 +645,1 @@\n-        \/\/ Fix for RT-20945 (and numerous other issues!)\n+        \/\/ Fix for JDK-8116954 (and numerous other issues!)\n@@ -690,1 +690,1 @@\n-                \/\/ performance reasons (RT-39776)\n+                \/\/ performance reasons (JDK-8093204)\n@@ -696,1 +696,1 @@\n-                \/\/ performance reasons (RT-39776)\n+                \/\/ performance reasons (JDK-8093204)\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/MultipleSelectionModelBase.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -959,1 +959,1 @@\n-            \/\/ RT-14094, RT-16754: We need the skins of the popup\n+            \/\/ JDK-8113199, JDK-8128650: We need the skins of the popup\n@@ -1143,1 +1143,1 @@\n-            \/\/skinSizeComputed = false; -- RT-33073 disabled this\n+            \/\/skinSizeComputed = false; -- JDK-8096434 disabled this\n@@ -1190,1 +1190,1 @@\n-                        errors.add(error); \/\/ RT-19884\n+                        errors.add(error); \/\/ JDK-8120505\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/PopupControl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-            \/\/ we don't use newIndex here, to prevent RT-32139 (which has a unit\n+            \/\/ we don't use newIndex here, to prevent JDK-8123070 (which has a unit\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/SingleSelectionModel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-        ** See RT-13995 & RT-14480\n+        ** See JDK-8113240 & JDK-8092752\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/SkinBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-        \/\/ Fix for RT-29885\n+        \/\/ Fix for JDK-8115009\n@@ -165,1 +165,1 @@\n-        \/\/ End of fix for RT-29885\n+        \/\/ End of fix for JDK-8115009\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Spinner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -696,1 +696,1 @@\n-        \/\/ Fix for RT-24658 - content should be disabled if the tab is disabled\n+        \/\/ Fix for JDK-8094969 - content should be disabled if the tab is disabled\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Tab.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -625,1 +625,1 @@\n-                    \/\/ just selecting the first tab (fix for RT-36908)\n+                    \/\/ just selecting the first tab (fix for JDK-8092665)\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TabPane.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -353,1 +353,1 @@\n-        \/\/ fired (as identified in RT-29650)\n+        \/\/ fired (as identified in JDK-8124615)\n@@ -437,1 +437,1 @@\n-        \/\/ as the parent TableRow is not empty (see RT-15529).\n+        \/\/ as the parent TableRow is not empty (see JDK-8113895).\n@@ -486,1 +486,1 @@\n-        \/\/ RT-22428 where all the columns are collapsed.\n+        \/\/ JDK-8126803 where all the columns are collapsed.\n@@ -624,1 +624,1 @@\n-     * This was brought in to fix the issue in RT-22077, namely that the\n+     * This was brought in to fix the issue in JDK-8126798, namely that the\n@@ -668,1 +668,1 @@\n-            \/\/ RT-30484 We need to allow a first run to be special-cased to allow\n+            \/\/ JDK-8116529 We need to allow a first run to be special-cased to allow\n@@ -670,1 +670,1 @@\n-            \/\/ the correct visual state to be set up. In particular, in RT-30484\n+            \/\/ the correct visual state to be set up. In particular, in JDK-8116529\n@@ -674,1 +674,1 @@\n-            \/\/ RT-32621: There are circumstances where we need to updateItem,\n+            \/\/ JDK-8115233: There are circumstances where we need to updateItem,\n@@ -676,1 +676,1 @@\n-            \/\/ RT-32621 identifies issues where a TreeTableView collapses a\n+            \/\/ JDK-8115233 identifies issues where a TreeTableView collapses a\n@@ -688,1 +688,1 @@\n-            \/\/ RT-35864 - if the index didn't change, then avoid calling updateItem\n+            \/\/ JDK-8092593 - if the index didn't change, then avoid calling updateItem\n@@ -692,1 +692,1 @@\n-                    \/\/ RT-36670: we need to check the row item here to prevent\n+                    \/\/ JDK-8096643: we need to check the row item here to prevent\n@@ -697,1 +697,1 @@\n-                        \/\/ RT-37054:  we break out of the if\/else code here and\n+                        \/\/ JDK-8096969:  we break out of the if\/else code here and\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableCell.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-            \/\/ This code was commented out due to RT-22391, with this enabled\n+            \/\/ This code was commented out due to JDK-8116917, with this enabled\n@@ -307,1 +307,1 @@\n-                \/\/ Fix for RT-16978. In TableColumnHeader we add before we\n+                \/\/ Fix for JDK-8128151. In TableColumnHeader we add before we\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableColumn.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -250,1 +250,1 @@\n-            \/\/ RT-35864 - if the index didn't change, then avoid calling updateItem\n+            \/\/ JDK-8092593 - if the index didn't change, then avoid calling updateItem\n@@ -254,1 +254,1 @@\n-                    \/\/ RT-37054:  we break out of the if\/else code here and\n+                    \/\/ JDK-8096969:  we break out of the if\/else code here and\n@@ -262,1 +262,1 @@\n-            \/\/ RT-30484 We need to allow a first run to be special-cased to allow\n+            \/\/ JDK-8116529 We need to allow a first run to be special-cased to allow\n@@ -264,1 +264,1 @@\n-            \/\/ the correct visual state to be set up. In particular, in RT-30484\n+            \/\/ the correct visual state to be set up. In particular, in JDK-8116529\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableRow.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -746,1 +746,1 @@\n-            \/\/ Fix for RT-39822 - don't allow the same column to be installed twice\n+            \/\/ Fix for JDK-8097509 - don't allow the same column to be installed twice\n@@ -776,1 +776,1 @@\n-            \/\/ Fix for RT-15194: Need to remove removed columns from the\n+            \/\/ Fix for JDK-8114644: Need to remove removed columns from the\n@@ -819,1 +819,1 @@\n-            \/\/ Fix for RT-38892.\n+            \/\/ Fix for JDK-8096633.\n@@ -986,1 +986,1 @@\n-                \/\/ Fix for RT-36425\n+                \/\/ Fix for JDK-8096819\n@@ -991,1 +991,1 @@\n-                \/\/ Fix for RT-35763\n+                \/\/ Fix for JDK-8092759\n@@ -2363,1 +2363,1 @@\n-                    \/\/ Bug fix for RT-28637\n+                    \/\/ Bug fix for JDK-8118846\n@@ -2431,2 +2431,2 @@\n-                            \/\/ Fix for RT-18969: the list had setAll called on it\n-                            \/\/ Use of makeAtomic is a fix for RT-20945\n+                            \/\/ Fix for JDK-8120433: the list had setAll called on it\n+                            \/\/ Use of makeAtomic is a fix for JDK-8116954\n@@ -2438,1 +2438,1 @@\n-                            \/\/ Fix for RT-22079\n+                            \/\/ Fix for JDK-8126088\n@@ -2591,1 +2591,1 @@\n-            \/\/ RT-32411 We used to call quietClearSelection() here, but this\n+            \/\/ JDK-8120351 We used to call quietClearSelection() here, but this\n@@ -2594,1 +2594,1 @@\n-            \/\/ makeAtomic toggle added to resolve RT-32618\n+            \/\/ makeAtomic toggle added to resolve JDK-8117117\n@@ -2619,1 +2619,1 @@\n-            \/\/ individual remove and add notifications) - see RT-33324\n+            \/\/ individual remove and add notifications) - see JDK-8119264\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableView.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-                    \/\/ RT-20727 - if CSS is setting the font, then make sure invalidate doesn't call NodeHelper.reapplyCSS\n+                    \/\/ JDK-8127428 - if CSS is setting the font, then make sure invalidate doesn't call NodeHelper.reapplyCSS\n@@ -279,1 +279,1 @@\n-                    \/\/ RT-20727 - if font is changed by calling setFont, then\n+                    \/\/ JDK-8127428 - if font is changed by calling setFont, then\n@@ -1289,1 +1289,1 @@\n-        \/\/ RT-16566: Need to take into account stripping of chars into the\n+        \/\/ JDK-8120290: Need to take into account stripping of chars into the\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TextInputControl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-    \/\/ RT-31134 : the tooltip style includes a shadow around the tooltip with a\n+    \/\/ JDK-8123248 : the tooltip style includes a shadow around the tooltip with a\n@@ -116,1 +116,1 @@\n-    \/\/ RT-37107: The y-offset was upped to 7 to ensure no overlaps when the tooltip\n+    \/\/ JDK-8094371: The y-offset was upped to 7 to ensure no overlaps when the tooltip\n@@ -275,1 +275,1 @@\n-            \/\/ RT-20727 - if CSS is setting the font, then make sure invalidate doesn't call NodeHelper.reapplyCSS\n+            \/\/ JDK-8127428 - if CSS is setting the font, then make sure invalidate doesn't call NodeHelper.reapplyCSS\n@@ -297,1 +297,1 @@\n-            \/\/ RT-20727 - if font is changed by calling setFont, then\n+            \/\/ JDK-8127428 - if font is changed by calling setFont, then\n@@ -454,1 +454,1 @@\n-                        \/\/ RT-34466 - if graphic's url is the same as this property's value, then don't overwrite.\n+                        \/\/ JDK-8095575 - if graphic's url is the same as this property's value, then don't overwrite.\n@@ -889,1 +889,1 @@\n-                    \/\/ the Node that it is attached to (see RT-26147). It\n+                    \/\/ the Node that it is attached to (see JDK-8117558). It\n@@ -901,1 +901,1 @@\n-                    \/\/ RT-37107: Ensure the tooltip is displayed in a position\n+                    \/\/ JDK-8094371: Ensure the tooltip is displayed in a position\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Tooltip.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -402,1 +402,1 @@\n-        \/\/ fired (as identified in RT-29650)\n+        \/\/ fired (as identified in JDK-8124615)\n@@ -491,1 +491,1 @@\n-            \/\/ Fix for RT-31165 - if we (needlessly) update the index whilst the\n+            \/\/ Fix for JDK-8123482 - if we (needlessly) update the index whilst the\n@@ -524,1 +524,1 @@\n-            \/\/ For the sake of RT-14279, it is important that the order of these\n+            \/\/ For the sake of JDK-8113226, it is important that the order of these\n@@ -530,1 +530,1 @@\n-            \/\/ RT-35864 - if the index didn't change, then avoid calling updateItem\n+            \/\/ JDK-8092593 - if the index didn't change, then avoid calling updateItem\n@@ -534,1 +534,1 @@\n-                    \/\/ RT-37054:  we break out of the if\/else code here and\n+                    \/\/ JDK-8096969:  we break out of the if\/else code here and\n@@ -543,1 +543,1 @@\n-            \/\/ RT-30484 We need to allow a first run to be special-cased to allow\n+            \/\/ JDK-8116529 We need to allow a first run to be special-cased to allow\n@@ -545,1 +545,1 @@\n-            \/\/ the correct visual state to be set up. In particular, in RT-30484\n+            \/\/ the correct visual state to be set up. In particular, in JDK-8116529\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeCell.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -389,1 +389,1 @@\n-    \/\/ Made static based on findings of RT-18344 - EventHandlerManager is an\n+    \/\/ Made static based on findings of JDK-8118829 - EventHandlerManager is an\n@@ -557,1 +557,1 @@\n-                    \/\/ We don't fire expanded events for leaf nodes (RT-32620)\n+                    \/\/ We don't fire expanded events for leaf nodes (JDK-8123264)\n@@ -660,1 +660,1 @@\n-        \/\/ avoid this (which resolves RT-37593), we set the ignoreSortUpdate\n+        \/\/ avoid this (which resolves JDK-8096663), we set the ignoreSortUpdate\n@@ -962,1 +962,1 @@\n-            \/\/ situations such as what is shown in RT-28668 (and tested for in\n+            \/\/ situations such as what is shown in JDK-8124825 (and tested for in\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeItem.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -370,1 +370,1 @@\n-        \/\/ fired (as identified in RT-29650)\n+        \/\/ fired (as identified in JDK-8124615)\n@@ -454,1 +454,1 @@\n-        \/\/ as the parent TableRow is not empty (see RT-15529).\n+        \/\/ as the parent TableRow is not empty (see JDK-8113895).\n@@ -474,1 +474,1 @@\n-            \/\/ Fix for RT-31165 - if we (needlessly) update the index whilst the\n+            \/\/ Fix for JDK-8123482 - if we (needlessly) update the index whilst the\n@@ -483,1 +483,1 @@\n-            \/\/ RT-22428 where all the columns are collapsed.\n+            \/\/ JDK-8126803 where all the columns are collapsed.\n@@ -619,1 +619,1 @@\n-     * This was brought in to fix the issue in RT-22077, namely that the\n+     * This was brought in to fix the issue in JDK-8126798, namely that the\n@@ -663,1 +663,1 @@\n-            \/\/ RT-30484 We need to allow a first run to be special-cased to allow\n+            \/\/ JDK-8116529 We need to allow a first run to be special-cased to allow\n@@ -665,1 +665,1 @@\n-            \/\/ the correct visual state to be set up. In particular, in RT-30484\n+            \/\/ the correct visual state to be set up. In particular, in JDK-8116529\n@@ -669,1 +669,1 @@\n-            \/\/ RT-32621: There are circumstances where we need to updateItem,\n+            \/\/ JDK-8115233: There are circumstances where we need to updateItem,\n@@ -671,1 +671,1 @@\n-            \/\/ RT-32621 identifies issues where a TreeTableView collapses a\n+            \/\/ JDK-8115233 identifies issues where a TreeTableView collapses a\n@@ -684,1 +684,1 @@\n-            \/\/ RT-35864 - if the index didn't change, then avoid calling updateItem\n+            \/\/ JDK-8092593 - if the index didn't change, then avoid calling updateItem\n@@ -688,1 +688,1 @@\n-                    \/\/ RT-36670: we need to check the row item here to prevent\n+                    \/\/ JDK-8096643: we need to check the row item here to prevent\n@@ -693,1 +693,1 @@\n-                        \/\/ RT-37054:  we break out of the if\/else code here and\n+                        \/\/ JDK-8096969:  we break out of the if\/else code here and\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableCell.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-            \/\/ This code was commented out due to RT-22391, with this enabled\n+            \/\/ This code was commented out due to JDK-8116917, with this enabled\n@@ -301,1 +301,1 @@\n-                    \/\/ Fix for RT-16978. In TableColumnHeader we add before we\n+                    \/\/ Fix for JDK-8128151. In TableColumnHeader we add before we\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableColumn.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -411,1 +411,1 @@\n-            \/\/ For the sake of RT-14279, it is important that the order of these\n+            \/\/ For the sake of JDK-8113226, it is important that the order of these\n@@ -417,1 +417,1 @@\n-            \/\/ RT-35864 - if the index didn't change, then avoid calling updateItem\n+            \/\/ JDK-8092593 - if the index didn't change, then avoid calling updateItem\n@@ -421,1 +421,1 @@\n-                    \/\/ RT-37054:  we break out of the if\/else code here and\n+                    \/\/ JDK-8096969:  we break out of the if\/else code here and\n@@ -431,1 +431,1 @@\n-            \/\/ RT-30484 We need to allow a first run to be special-cased to allow\n+            \/\/ JDK-8116529 We need to allow a first run to be special-cased to allow\n@@ -433,1 +433,1 @@\n-            \/\/ the correct visual state to be set up. In particular, in RT-30484\n+            \/\/ the correct visual state to be set up. In particular, in JDK-8116529\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableRow.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -762,1 +762,1 @@\n-    \/\/ See RT-26716 for the justification and performance gains.\n+    \/\/ See JDK-8125681 for the justification and performance gains.\n@@ -822,1 +822,1 @@\n-            \/\/ Fix for RT-39822 - don't allow the same column to be installed twice\n+            \/\/ Fix for JDK-8097509 - don't allow the same column to be installed twice\n@@ -852,1 +852,1 @@\n-            \/\/ Fix for RT-15194: Need to remove removed columns from the\n+            \/\/ Fix for JDK-8114644: Need to remove removed columns from the\n@@ -895,1 +895,1 @@\n-            \/\/ Fix for RT-38892.\n+            \/\/ Fix for JDK-8096633.\n@@ -1065,1 +1065,1 @@\n-            \/\/ Fix for RT-35763\n+            \/\/ Fix for JDK-8092759\n@@ -2712,1 +2712,1 @@\n-                            \/\/ row selection mode. Refer to RT-34103 for the bug report\n+                            \/\/ row selection mode. Refer to JDK-8115514 for the bug report\n@@ -2794,1 +2794,1 @@\n-                        \/\/ RT-32963: We were taking the startRow from the TreeItem\n+                        \/\/ JDK-8117147: We were taking the startRow from the TreeItem\n@@ -2799,1 +2799,1 @@\n-                        \/\/ subsequently commented out due to RT-33894.\n+                        \/\/ subsequently commented out due to JDK-8123085.\n@@ -2820,1 +2820,1 @@\n-                        \/\/ from selection if they are (as per RT-15446)\n+                        \/\/ from selection if they are (as per JDK-8114236)\n@@ -2847,1 +2847,1 @@\n-                                \/\/ Bug fix for RT-28637\n+                                \/\/ Bug fix for JDK-8118846\n@@ -2969,1 +2969,1 @@\n-            \/\/ RT-32411: We used to call quietClearSelection() here, but this\n+            \/\/ JDK-8120351: We used to call quietClearSelection() here, but this\n@@ -2972,1 +2972,1 @@\n-            \/\/ makeAtomic toggle added to resolve RT-32618\n+            \/\/ makeAtomic toggle added to resolve JDK-8117117\n@@ -2996,1 +2996,1 @@\n-            \/\/ individual remove and add notifications) - see RT-33324\n+            \/\/ individual remove and add notifications) - see JDK-8119264\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableView.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -407,1 +407,1 @@\n-    \/\/ See RT-26716 for the justification and performance gains.\n+    \/\/ See JDK-8125681 for the justification and performance gains.\n@@ -511,1 +511,1 @@\n-            \/\/ Fix for RT-37853\n+            \/\/ Fix for JDK-8094887\n@@ -1462,1 +1462,1 @@\n-                    \/\/ RT-32963: We were taking the startRow from the TreeItem\n+                    \/\/ JDK-8117147: We were taking the startRow from the TreeItem\n@@ -1467,1 +1467,1 @@\n-                    \/\/ subsequently commented out due to RT-33894.\n+                    \/\/ subsequently commented out due to JDK-8123085.\n@@ -1479,1 +1479,1 @@\n-                    \/\/ from selection if they are (as per RT-15446)\n+                    \/\/ from selection if they are (as per JDK-8114236)\n@@ -1507,1 +1507,1 @@\n-                            \/\/ Bug fix for RT-28637\n+                            \/\/ Bug fix for JDK-8118846\n@@ -1563,1 +1563,1 @@\n-            \/\/ visible. This fixes RT-14456, where selection was not happening\n+            \/\/ visible. This fixes JDK-8113764, where selection was not happening\n@@ -1574,1 +1574,1 @@\n-            \/\/ Fix for RT-15419. We eagerly update the tree item count, such that\n+            \/\/ Fix for JDK-8114413. We eagerly update the tree item count, such that\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeView.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-        \/\/ TextField (see RT-28132)\n+        \/\/ TextField (see JDK-8117464)\n@@ -247,1 +247,1 @@\n-        \/\/ as otherwise we encounter RT-34685\n+        \/\/ as otherwise we encounter JDK-8096726\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/cell\/CellUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -484,1 +484,1 @@\n-        \/\/ This was done to resolve RT-33603, but will impact the ability for\n+        \/\/ This was done to resolve JDK-8120095, but will impact the ability for\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/cell\/CheckBoxTreeCell.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-                    \/\/ to the user (see RT-15910)\n+                    \/\/ to the user (see JDK-8115941)\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/cell\/DefaultTreeCell.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-            \/\/ a bit of reference, refer to RT-13937.\n+            \/\/ a bit of reference, refer to JDK-8112885.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/cell\/PropertyValueFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-            \/\/ a bit of reference, refer to RT-13937.\n+            \/\/ a bit of reference, refer to JDK-8112885.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/cell\/TreeItemPropertyValueFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-            \/\/ added to resolve RT-32787\n+            \/\/ added to resolve JDK-8123268\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/AccordionSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-\/\/                    \/\/ Commented this out due to RT-19794, because otherwise\n+\/\/                    \/\/ Commented this out due to JDK-8120853, because otherwise\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/CellSkinBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-            getSkinnable().requestLayout(); \/\/ RT-18052 resize of choicebox should happen immediately.\n+            getSkinnable().requestLayout(); \/\/ JDK-8128697 resize of choicebox should happen immediately.\n@@ -161,1 +161,1 @@\n-                \/\/ This is a fix for RT-9071. Ideally this won't be necessary in\n+                \/\/ This is a fix for JDK-8110365. Ideally this won't be necessary in\n@@ -166,1 +166,1 @@\n-                \/\/ -- End of RT-9071 fix\n+                \/\/ -- End of JDK-8110365 fix\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ChoiceBoxSkin.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -241,1 +241,1 @@\n-    \/\/ See RT-30754 for more information.\n+    \/\/ See JDK-8115826 for more information.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ComboBoxBaseSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-        \/\/ Fix for RT-21207. Additional code related to this bug is further below.\n+        \/\/ Fix for JDK-8115587. Additional code related to this bug is further below.\n@@ -168,1 +168,1 @@\n-        \/\/ Fix for RT-19431 (also tested via ComboBoxListViewSkinTest)\n+        \/\/ Fix for JDK-8115097 (also tested via ComboBoxListViewSkinTest)\n@@ -361,1 +361,1 @@\n-                \/\/ RT-21336 Show the ComboBox value even though it doesn't\n+                \/\/ JDK-8127575 Show the ComboBox value even though it doesn't\n@@ -367,1 +367,1 @@\n-                \/\/ RT-27834, where we were getting different styling based on whether\n+                \/\/ JDK-8124141, where we were getting different styling based on whether\n@@ -414,1 +414,1 @@\n-        \/\/ RT-22386: We need to test to see if the value is in the comboBox\n+        \/\/ JDK-8117826: We need to test to see if the value is in the comboBox\n@@ -439,1 +439,1 @@\n-                        \/\/ RT-21336 Show the ComboBox value even though it doesn't\n+                        \/\/ JDK-8127575 Show the ComboBox value even though it doesn't\n@@ -591,1 +591,1 @@\n-            \/\/ RT-18672: Without checking if the user is clicking in the\n+            \/\/ JDK-8115969: Without checking if the user is clicking in the\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ComboBoxListViewSkin.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-        \/\/ Fix for RT-29565. Without this the textField does not have a correct\n+        \/\/ Fix for JDK-8115309. Without this the textField does not have a correct\n@@ -144,1 +144,1 @@\n-                \/\/ Fix for the regression noted in a comment in RT-29885.\n+                \/\/ Fix for the regression noted in a comment in JDK-8115009.\n@@ -169,1 +169,1 @@\n-                    \/\/ Fix for the regression noted in a comment in RT-29885.\n+                    \/\/ Fix for the regression noted in a comment in JDK-8115009.\n@@ -181,1 +181,1 @@\n-        \/\/ RT-38978: Forward input method events to TextField if editable.\n+        \/\/ JDK-8096136: Forward input method events to TextField if editable.\n@@ -193,1 +193,1 @@\n-        \/\/ Fix for RT-36902, where focus traversal was getting stuck inside the ComboBox\n+        \/\/ Fix for JDK-8094715, where focus traversal was getting stuck inside the ComboBox\n@@ -310,1 +310,1 @@\n-            \/\/ Fix for RT-21406: ComboBox do not show initial text value\n+            \/\/ Fix for JDK-8126553: ComboBox do not show initial text value\n@@ -326,1 +326,1 @@\n-                \/\/ conditional check here added due to RT-28245\n+                \/\/ conditional check here added due to JDK-8124287\n@@ -353,1 +353,1 @@\n-                \/\/ Remainder of fix for RT-21406: ComboBox do not show initial text value\n+                \/\/ Remainder of fix for JDK-8126553: ComboBox do not show initial text value\n@@ -386,1 +386,1 @@\n-            \/\/ Fix for RT-31093 - drag events from the textfield were not surfacing\n+            \/\/ Fix for JDK-8115604 - drag events from the textfield were not surfacing\n@@ -391,1 +391,1 @@\n-            \/\/ RT-38978: Forward input method requests to TextField.\n+            \/\/ JDK-8096136: Forward input method requests to TextField.\n@@ -455,1 +455,1 @@\n-        \/\/ has been displayed. See RT-37622 for more detail.\n+        \/\/ has been displayed. See JDK-8095352 for more detail.\n@@ -466,1 +466,1 @@\n-            \/\/ 0 is used here for the width due to RT-46097\n+            \/\/ 0 is used here for the width due to JDK-8095712\n@@ -505,1 +505,1 @@\n-            \/\/ RT-18529: We listen to mouse input that is received by the popup\n+            \/\/ JDK-8117556: We listen to mouse input that is received by the popup\n@@ -517,1 +517,1 @@\n-        \/\/ Fix for RT-21207\n+        \/\/ Fix for JDK-8115587\n@@ -528,1 +528,1 @@\n-        \/\/ RT-36966 - if skinnable's scene becomes null, ensure popup is closed\n+        \/\/ JDK-8094950 - if skinnable's scene becomes null, ensure popup is closed\n@@ -540,1 +540,1 @@\n-        \/\/ RT-26861. Don't call getPopup() here because it may cause the popup\n+        \/\/ JDK-8125934. Don't call getPopup() here because it may cause the popup\n@@ -542,1 +542,1 @@\n-        \/\/ in RT-32827.\n+        \/\/ in JDK-8123109.\n@@ -569,2 +569,2 @@\n-            \/\/ Resizing content to resolve issues such as RT-32582 and RT-33700\n-            \/\/ (where RT-33700 was introduced due to a previous fix for RT-32582)\n+            \/\/ Resizing content to resolve issues such as JDK-8116801 and JDK-8123876\n+            \/\/ (where JDK-8123876 was introduced due to a previous fix for JDK-8116801)\n@@ -594,1 +594,1 @@\n-            \/\/ RT-23275: The TextField fires F10 and ESCAPE key events\n+            \/\/ JDK-8115456: The TextField fires F10 and ESCAPE key events\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ComboBoxPopupControl.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    \/\/ Fix for RT-18247\n+    \/\/ Fix for JDK-8128552\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ContextMenuSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-            \/\/ Workaround for RT-31643. The cellSize property was not yet set from CSS.\n+            \/\/ Workaround for JDK-8116318. The cellSize property was not yet set from CSS.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/DateCellSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-        \/\/ RT-19851 Only setMouseTransparent(true) for an ImageView.  This allows the button\n+        \/\/ JDK-8117199 Only setMouseTransparent(true) for an ImageView.  This allows the button\n@@ -340,1 +340,1 @@\n-            \/\/ Fix for RT-39889\n+            \/\/ Fix for JDK-8093977\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/LabeledSkinBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-        \/\/ cell size to prevent the issue identified in RT-19873.\n+        \/\/ cell size to prevent the issue identified in JDK-8116512.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ListCellSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    \/\/ RT-34744 : IS_PANNABLE will be false unless\n+    \/\/ JDK-8094803 : IS_PANNABLE will be false unless\n@@ -134,1 +134,1 @@\n-                    \/\/ RT-28397: Support for when an item is replaced with itself (but\n+                    \/\/ JDK-8118897: Support for when an item is replaced with itself (but\n@@ -136,1 +136,1 @@\n-                    \/\/ This code was updated for RT-36714 to not update all cells,\n+                    \/\/ This code was updated for JDK-8097146 to not update all cells,\n@@ -144,1 +144,1 @@\n-                    \/\/ RT-22463: If the user clears out an items list then we\n+                    \/\/ JDK-8098235: If the user clears out an items list then we\n@@ -155,1 +155,1 @@\n-            \/\/ fix for RT-37853\n+            \/\/ fix for JDK-8094887\n@@ -550,1 +550,1 @@\n-        \/\/ Fix for RT-11299\n+        \/\/ Fix for JDK-8111061\n@@ -564,1 +564,1 @@\n-        \/\/ Fix for RT-11299\n+        \/\/ Fix for JDK-8111061\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ListViewSkin.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-    \/\/ RT-20411 : reset menu selected\/focused state\n+    \/\/ JDK-8127045 : reset menu selected\/focused state\n@@ -147,1 +147,1 @@\n-            \/\/ RT-29614 If CustomMenuItem hideOnClick is false, dont hide\n+            \/\/ JDK-8124120 If CustomMenuItem hideOnClick is false, dont hide\n@@ -215,1 +215,1 @@\n-                \/\/ RT-23147 when MenuBar's focusTraversable is true the first\n+                \/\/ JDK-8126368 when MenuBar's focusTraversable is true the first\n@@ -246,1 +246,1 @@\n-          \/\/ fix RT-12254 : menu bar should not request focus on mouse exit.\n+          \/\/ fix JDK-8112401 : menu bar should not request focus on mouse exit.\n@@ -331,1 +331,1 @@\n-                            \/\/ RT-18859: Doing nothing for space and enter\n+                            \/\/ JDK-8127205: Doing nothing for space and enter\n@@ -449,2 +449,2 @@\n-    \/\/ RT-22480: This is intended as private API for SceneBuilder,\n-    \/\/ pending fix for RT-19857: Keeping menu in the Mac menu bar when\n+    \/\/ JDK-8102072: This is intended as private API for SceneBuilder,\n+    \/\/ pending fix for JDK-8090562: Keeping menu in the Mac menu bar when\n@@ -808,1 +808,1 @@\n-            \/\/ RT-29729 : old instance of context menu window\/popup for this MenuButton needs\n+            \/\/ JDK-8118781 : old instance of context menu window\/popup for this MenuButton needs\n@@ -825,1 +825,1 @@\n-                \/\/ RT-36554 - make sure system menu is updated when this MenuBar's scene changes.\n+                \/\/ JDK-8094110 - make sure system menu is updated when this MenuBar's scene changes.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/MenuBarSkin.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -508,1 +508,1 @@\n-        \/\/ RT-33596: Do CSS now, as we are in the middle of layout pass and the headers are new Nodes w\/o CSS done\n+        \/\/ JDK-8123569: Do CSS now, as we are in the middle of layout pass and the headers are new Nodes w\/o CSS done\n@@ -604,1 +604,1 @@\n-        \/\/ RT-32547 - don't show resize cursor when in constrained resize mode\n+        \/\/ JDK-8123497 - don't show resize cursor when in constrained resize mode\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/NestedTableColumnHeader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -374,1 +374,1 @@\n-        \/\/ RT-33789: if the ProgressBar was indeterminate and still is indeterminate, don't update the bar width\n+        \/\/ JDK-8092936: if the ProgressBar was indeterminate and still is indeterminate, don't update the bar width\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ProgressBarSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-                thumb.resize(snapSizeX(x >= 0 ? w : w + x), thumbLength); \/\/ Account for negative padding (see also RT-10719)\n+                thumb.resize(snapSizeX(x >= 0 ? w : w + x), thumbLength); \/\/ Account for negative padding (see also JDK-8111392)\n@@ -175,1 +175,1 @@\n-                thumb.resize(snapSizeX(x >= 0 ? w : w + x), thumbLength); \/\/ Account for negative padding (see also RT-10719)\n+                thumb.resize(snapSizeX(x >= 0 ? w : w + x), thumbLength); \/\/ Account for negative padding (see also JDK-8111392)\n@@ -193,1 +193,1 @@\n-                thumb.resize(thumbLength, snapSizeY(y >= 0 ? h : h + y)); \/\/ Account for negative padding (see also RT-10719)\n+                thumb.resize(thumbLength, snapSizeY(y >= 0 ? h : h + y)); \/\/ Account for negative padding (see also JDK-8111392)\n@@ -201,1 +201,1 @@\n-                thumb.resize(thumbLength, snapSizeY(y >= 0 ? h : h + y)); \/\/ Account for negative padding (see also RT-10719)\n+                thumb.resize(thumbLength, snapSizeY(y >= 0 ? h : h + y)); \/\/ Account for negative padding (see also JDK-8111392)\n@@ -535,1 +535,1 @@\n-                ** RT-22941 - If this is either a touch or inertia scroll\n+                ** JDK-8126191 - If this is either a touch or inertia scroll\n@@ -538,1 +538,1 @@\n-                * TODO: this fix causes RT-23406 ([ScrollBar, touch] Dragging scrollbar from the\n+                * TODO: this fix causes JDK-8095841 ([ScrollBar, touch] Dragging scrollbar from the\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ScrollBarSkin.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -883,1 +883,1 @@\n-         * on the ScrollPane itself. This is for RT-31582, and effectively\n+         * on the ScrollPane itself. This is for JDK-8096155, and effectively\n@@ -970,1 +970,1 @@\n-        \/\/ update skin initial state to match control (see RT-35554)\n+        \/\/ update skin initial state to match control (see JDK-8096249)\n@@ -1078,1 +1078,1 @@\n-            \/\/ RT-17395: ScrollBarPolicy might be null. If so, treat it as \"AS_NEEDED\", which is the default\n+            \/\/ JDK-8093908: ScrollBarPolicy might be null. If so, treat it as \"AS_NEEDED\", which is the default\n@@ -1094,1 +1094,1 @@\n-            \/\/ RT-17395: ScrollBarPolicy might be null. If so, treat it as \"AS_NEEDED\", which is the default\n+            \/\/ JDK-8093908: ScrollBarPolicy might be null. If so, treat it as \"AS_NEEDED\", which is the default\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ScrollPaneSkin.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-            \/\/ Fix for the regression noted in a comment in RT-29885.\n+            \/\/ Fix for the regression noted in a comment in JDK-8115009.\n@@ -187,1 +187,1 @@\n-                \/\/ Fix for RT-38527 which led to a stack overflow\n+                \/\/ Fix for JDK-8095537 which led to a stack overflow\n@@ -194,1 +194,1 @@\n-                \/\/ Fix for the regression noted in a comment in RT-29885.\n+                \/\/ Fix for the regression noted in a comment in JDK-8115009.\n@@ -219,1 +219,1 @@\n-            \/\/ Fix for RT-29885\n+            \/\/ Fix for JDK-8115009\n@@ -221,1 +221,1 @@\n-            \/\/ --- end of RT-29885\n+            \/\/ --- end of JDK-8115009\n@@ -223,1 +223,1 @@\n-            \/\/ RT-21454 starts here\n+            \/\/ JDK-8120120 starts here\n@@ -229,1 +229,1 @@\n-            \/\/ --- end of RT-21454\n+            \/\/ --- end of JDK-8120120\n@@ -237,2 +237,2 @@\n-        \/\/ issue initially identified in RT-36902, but specifically (for Spinner)\n-        \/\/ identified in RT-40625\n+        \/\/ issue initially identified in JDK-8094715, but specifically (for Spinner)\n+        \/\/ identified in JDK-8092584\n@@ -420,1 +420,1 @@\n-    \/\/ See RT-30754 for more information.\n+    \/\/ See JDK-8115826 for more information.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/SpinnerSkin.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -433,1 +433,1 @@\n-            \/\/ see RT-29167\n+            \/\/ see JDK-8116643\n@@ -553,1 +553,1 @@\n-        \/\/ RT-39984: check if any other tabs are animating - they must be completed first.\n+        \/\/ JDK-8093620: check if any other tabs are animating - they must be completed first.\n@@ -561,1 +561,1 @@\n-        \/\/ end of fix for RT-39984\n+        \/\/ end of fix for JDK-8093620\n@@ -672,1 +672,1 @@\n-            \/\/ Fix for RT-34692\n+            \/\/ Fix for JDK-8122662\n@@ -1116,1 +1116,1 @@\n-                \/\/ it into line. See RT-35194 for a test case.\n+                \/\/ it into line. See JDK-8095332 for a test case.\n@@ -1407,1 +1407,1 @@\n-                    \/\/ Magic numbers regretfully introduced for RT-28944 (so that\n+                    \/\/ Magic numbers regretfully introduced for JDK-8124860 (so that\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TabPaneSkin.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        \/\/ RT-22038\n+        \/\/ JDK-8126489\n@@ -81,1 +81,1 @@\n-        \/\/ --- end of RT-22038\n+        \/\/ --- end of JDK-8126489\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableCellSkinBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -521,1 +521,1 @@\n-    \/\/ RT-29682: When the sortable property of a TableColumnBase changes this\n+    \/\/ JDK-8124703: When the sortable property of a TableColumnBase changes this\n@@ -539,1 +539,1 @@\n-        \/\/ RT-17684: If the TableColumn widths are all currently the default,\n+        \/\/ JDK-8100647: If the TableColumn widths are all currently the default,\n@@ -678,1 +678,1 @@\n-        \/\/ dispose of the row and cell to prevent it retaining listeners (see RT-31015)\n+        \/\/ dispose of the row and cell to prevent it retaining listeners (see JDK-8122968)\n@@ -682,1 +682,1 @@\n-        \/\/ RT-36855 - take into account the column header text \/ graphic widths.\n+        \/\/ JDK-8096512 - take into account the column header text \/ graphic widths.\n@@ -689,1 +689,1 @@\n-        \/\/ RT-23486\n+        \/\/ JDK-8126253\n@@ -774,1 +774,1 @@\n-        \/\/ dispose of the row and cell to prevent it retaining listeners (see RT-31015)\n+        \/\/ dispose of the row and cell to prevent it retaining listeners (see JDK-8122968)\n@@ -778,1 +778,1 @@\n-        \/\/ RT-36855 - take into account the column header text \/ graphic widths.\n+        \/\/ JDK-8096512 - take into account the column header text \/ graphic widths.\n@@ -785,1 +785,1 @@\n-        \/\/ RT-23486\n+        \/\/ JDK-8126253\n@@ -830,1 +830,1 @@\n-        \/\/ Fix for RT-14488\n+        \/\/ Fix for JDK-8114510\n@@ -847,1 +847,1 @@\n-        \/\/ RT-28016: if the tablecolumn is not a visible leaf column, we should ignore this\n+        \/\/ JDK-8124443: if the tablecolumn is not a visible leaf column, we should ignore this\n@@ -945,1 +945,1 @@\n-            \/\/ RT-34914: fine tuning the placement of the sort dots. We could have gone to a custom layout, but for now\n+            \/\/ JDK-8122488: fine tuning the placement of the sort dots. We could have gone to a custom layout, but for now\n@@ -970,1 +970,1 @@\n-        \/\/ Fix for RT-35141: We need to account for hidden columns.\n+        \/\/ Fix for JDK-8096167: We need to account for hidden columns.\n@@ -985,1 +985,1 @@\n-        \/\/ --- end of RT-35141 fix\n+        \/\/ --- end of JDK-8096167 fix\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableColumnHeader.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-    \/\/ This is necessary for RT-20300 (but was updated for RT-20840)\n+    \/\/ This is necessary for JDK-8127819 (but was updated for JDK-8127677)\n@@ -411,1 +411,1 @@\n-        \/\/ we hardcode 24.0 here to avoid RT-37616, where the\n+        \/\/ we hardcode 24.0 here to avoid JDK-8095994, where the\n@@ -432,1 +432,1 @@\n-        \/\/ Fix for RT-36392: without this call even though we call requestLayout()\n+        \/\/ Fix for JDK-8094852: without this call even though we call requestLayout()\n@@ -453,1 +453,1 @@\n-        \/\/ snapping added for RT-19428\n+        \/\/ snapping added for JDK-8127930\n@@ -641,1 +641,1 @@\n-            \/\/ fake bidrectional binding (a real one was used here but resulted in JBS-8136468)\n+            \/\/ fake bidrectional binding (a real one was used here but resulted in JDK-8136468)\n@@ -681,1 +681,1 @@\n-    \/\/ the parent column text in the menu. Fixes RT-14482.\n+    \/\/ the parent column text in the menu. Fixes JDK-8114496.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableHeaderRow.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-    \/\/ Filed as RT-29163.\n+    \/\/ Filed as JDK-8120657.\n@@ -166,1 +166,1 @@\n-        \/\/ (e.g. see RT-22463)\n+        \/\/ (e.g. see JDK-8098235)\n@@ -287,1 +287,1 @@\n-                        \/\/ RT-36359: The recorded max width of the disclosure node\n+                        \/\/ JDK-8094321: The recorded max width of the disclosure node\n@@ -312,1 +312,1 @@\n-         * RT-26743:TreeTableView: Vertical Line looks unfinished.\n+         * JDK-8125142:TreeTableView: Vertical Line looks unfinished.\n@@ -352,1 +352,1 @@\n-                \/\/ Added for RT-32700, and then updated for RT-34074.\n+                \/\/ Added for JDK-8115536, and then updated for JDK-8122708.\n@@ -368,1 +368,1 @@\n-                \/\/ --- end of RT-32700 fix\n+                \/\/ --- end of JDK-8115536 fix\n@@ -418,1 +418,1 @@\n-                \/\/ Request layout is here as (partial) fix for RT-28684.\n+                \/\/ Request layout is here as (partial) fix for JDK-8118040.\n@@ -566,1 +566,1 @@\n-        \/\/ fix for RT-29080\n+        \/\/ fix for JDK-8118823\n@@ -569,1 +569,1 @@\n-        \/\/ Support for RT-18467: making it easier to specify a height for\n+        \/\/ Support for JDK-8119085: making it easier to specify a height for\n@@ -599,1 +599,1 @@\n-        \/\/ fix for RT-29080\n+        \/\/ fix for JDK-8118823\n@@ -602,1 +602,1 @@\n-        \/\/ Support for RT-18467: making it easier to specify a height for\n+        \/\/ Support for JDK-8119085: making it easier to specify a height for\n@@ -685,1 +685,1 @@\n-        \/\/ update the index of all children cells (RT-29849).\n+        \/\/ update the index of all children cells (JDK-8119094).\n@@ -689,1 +689,1 @@\n-        \/\/ issue highlighted in RT-33602, where the table cell had the correct\n+        \/\/ issue highlighted in JDK-8115269, where the table cell had the correct\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableRowSkinBase.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    \/\/ RT-34744 : IS_PANNABLE will be false unless\n+    \/\/ JDK-8094803 : IS_PANNABLE will be false unless\n@@ -171,1 +171,1 @@\n-                \/\/ RT-28397: Support for when an item is replaced with itself (but\n+                \/\/ JDK-8118897: Support for when an item is replaced with itself (but\n@@ -176,1 +176,1 @@\n-                \/\/ our unit test for RT-36220 fails as we do not handle the case\n+                \/\/ our unit test for JDK-8093027 fails as we do not handle the case\n@@ -186,1 +186,1 @@\n-                \/\/ RT-22463: If the user clears out an items list then we\n+                \/\/ JDK-8098235: If the user clears out an items list then we\n@@ -197,1 +197,1 @@\n-        \/\/ fix for RT-37853\n+        \/\/ fix for JDK-8094887\n@@ -211,1 +211,1 @@\n-        \/\/ as otherwise performance suffers massively (RT-27831)\n+        \/\/ as otherwise performance suffers massively (JDK-8124403)\n@@ -252,1 +252,1 @@\n-        \/\/ RT-37152\n+        \/\/ JDK-8095370\n@@ -449,1 +449,1 @@\n-        \/\/ RT-14335 for more information.\n+        \/\/ JDK-8112896 for more information.\n@@ -584,1 +584,1 @@\n-        \/\/ we test for item count here to resolve RT-14855, where the column\n+        \/\/ we test for item count here to resolve JDK-8113886, where the column\n@@ -752,1 +752,1 @@\n-        \/\/ in this method also). See RT-19053 for more information.\n+        \/\/ in this method also). See JDK-8127405 for more information.\n@@ -911,1 +911,1 @@\n-        \/\/ this isn't perfect, but it prevents RT-14885\/JDK-8089280, which results in\n+        \/\/ this isn't perfect, but it prevents JDK-8089280\/JDK-8089280, which results in\n@@ -958,1 +958,1 @@\n-        \/\/ RT-37060 - if we are trying to scroll to a column that has not\n+        \/\/ JDK-8096491 - if we are trying to scroll to a column that has not\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableViewSkinBase.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-        \/\/ modifying visibility of the caret forces a layout-pass (RT-32373), so\n+        \/\/ modifying visibility of the caret forces a layout-pass (JDK-8123291), so\n@@ -564,1 +564,1 @@\n-            \/\/ See RT-25465.\n+            \/\/ See JDK-8089958.\n@@ -1266,1 +1266,1 @@\n-                \/\/ TODO: Remove this temporary workaround for RT-27533\n+                \/\/ TODO: Remove this temporary workaround for JDK-8115242\n@@ -1330,1 +1330,1 @@\n-            \/\/ RT-36454 (JDK-8097060): Fit to width\/height only if smaller than viewport.\n+            \/\/ JDK-8097060 (JDK-8097060): Fit to width\/height only if smaller than viewport.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TextAreaSkin.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-        \/\/ modifying visibility of the caret forces a layout-pass (RT-32373), so\n+        \/\/ modifying visibility of the caret forces a layout-pass (JDK-8123291), so\n@@ -594,1 +594,1 @@\n-            \/\/ See RT-25465.\n+            \/\/ See JDK-8089958.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TextFieldSkin.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-                \/\/ RT-10682: On Windows, we show the caret during selection, but on others we hide it\n+                \/\/ JDK-8111037: On Windows, we show the caret during selection, but on others we hide it\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TextInputControlSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -429,1 +429,1 @@\n-            \/\/ RT-13294: TitledPane : add animation to the title arrow\n+            \/\/ JDK-8101303: TitledPane : add animation to the title arrow\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TitledPaneSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -794,1 +794,1 @@\n-                    \/\/ RT-36455 (JDK-8096292):\n+                    \/\/ JDK-8096292 (JDK-8096292):\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ToolBarSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-        \/\/ RT-7512 - skin needs to have styleClass of the control\n+        \/\/ JDK-8109380 - skin needs to have styleClass of the control\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TooltipSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-     * RT-19656 identifies a related issue, which is that we may not provide\n+     * JDK-8119169 identifies a related issue, which is that we may not provide\n@@ -186,1 +186,1 @@\n-        \/\/ RT-25876: can not null-check here as this prevents empty rows from\n+        \/\/ JDK-8125816: can not null-check here as this prevents empty rows from\n@@ -210,1 +210,1 @@\n-                maxDisclosureWidthMap.get(tree) : 18;   \/\/ RT-19656: default width of default disclosure node\n+                maxDisclosureWidthMap.get(tree) : 18;   \/\/ JDK-8119169: default width of default disclosure node\n@@ -239,1 +239,1 @@\n-        \/\/ Rather ugly fix for RT-38519, where graphics are disappearing in\n+        \/\/ Rather ugly fix for JDK-8094112, where graphics are disappearing in\n@@ -274,2 +274,2 @@\n-        \/\/ RT-30212: TreeCell does not honor minSize of cells.\n-        \/\/ snapSize for RT-36460\n+        \/\/ JDK-8124039: TreeCell does not honor minSize of cells.\n+        \/\/ snapSize for JDK-8093097\n@@ -351,2 +351,2 @@\n-        \/\/ RT-26625: [TreeView, TreeTableView] can lose arrows while scrolling\n-        \/\/ RT-28668: Ensemble tree arrow disappears\n+        \/\/ JDK-8125162: [TreeView, TreeTableView] can lose arrows while scrolling\n+        \/\/ JDK-8124825: Ensemble tree arrow disappears\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeCellSkin.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-        \/\/ RT-27167: we must take into account the disclosure node and the\n+        \/\/ JDK-8118884: we must take into account the disclosure node and the\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeTableCellSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-                \/\/ Fix for RT-27782: Need to set isDirty to true, rather than the\n+                \/\/ Fix for JDK-8124861: Need to set isDirty to true, rather than the\n@@ -364,1 +364,1 @@\n-            \/\/ RT-30466: remove the old graphic\n+            \/\/ JDK-8118024: remove the old graphic\n@@ -390,2 +390,2 @@\n-            \/\/ RT-26625: [TreeView, TreeTableView] can lose arrows while scrolling\n-            \/\/ RT-28668: Ensemble tree arrow disappears\n+            \/\/ JDK-8125162: [TreeView, TreeTableView] can lose arrows while scrolling\n+            \/\/ JDK-8124825: Ensemble tree arrow disappears\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeTableRowSkin.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-            \/\/ fix for RT-37853\n+            \/\/ fix for JDK-8094887\n@@ -296,1 +296,1 @@\n-                    \/\/ Fix for RT-14842, where the children of a TreeItem were changing,\n+                    \/\/ Fix for JDK-8114432, where the children of a TreeItem were changing,\n@@ -304,1 +304,1 @@\n-                    \/\/ Fix for RT-14971 and RT-15338.\n+                    \/\/ Fix for JDK-8114657 and JDK-8114610.\n@@ -307,1 +307,1 @@\n-                    \/\/ Fix for RT-20090. We are checking to see if the event coming\n+                    \/\/ Fix for JDK-8115929. We are checking to see if the event coming\n@@ -320,1 +320,1 @@\n-                \/\/ fix for RT-37853\n+                \/\/ fix for JDK-8094887\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeTableViewSkin.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-    \/\/ RT-34744 : IS_PANNABLE will be false unless\n+    \/\/ JDK-8094803 : IS_PANNABLE will be false unless\n@@ -113,1 +113,1 @@\n-            \/\/ Fix for RT-14842, where the children of a TreeItem were changing,\n+            \/\/ Fix for JDK-8114432, where the children of a TreeItem were changing,\n@@ -121,1 +121,1 @@\n-            \/\/ Fix for RT-14971 and RT-15338.\n+            \/\/ Fix for JDK-8114657 and JDK-8114610.\n@@ -124,1 +124,1 @@\n-            \/\/ Fix for RT-20090. We are checking to see if the event coming\n+            \/\/ Fix for JDK-8115929. We are checking to see if the event coming\n@@ -137,1 +137,1 @@\n-        \/\/ fix for RT-37853\n+        \/\/ fix for JDK-8094887\n@@ -407,1 +407,1 @@\n-        \/\/ RT-27852, where the expended item count of the new root equals the\n+        \/\/ JDK-8124052, where the expended item count of the new root equals the\n@@ -469,1 +469,1 @@\n-                            \/\/ to the user (see RT-15910)\n+                            \/\/ to the user (see JDK-8115941)\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeViewSkin.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-            \/\/ Fix for RT-24630: The row count in VirtualFlow was incorrect\n+            \/\/ Fix for JDK-8119687: The row count in VirtualFlow was incorrect\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/VirtualContainerBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-     * See RT-23616 for more details.\n+     * See JDK-8102238 for more details.\n@@ -471,1 +471,1 @@\n-                    \/\/ relevant given the bug identified in RT-32869. In this\n+                    \/\/ relevant given the bug identified in JDK-8119995. In this\n@@ -611,1 +611,1 @@\n-            \/\/ Fix for RT-8480, where the VirtualFlow does not show its content\n+            \/\/ Fix for JDK-8109812, where the VirtualFlow does not show its content\n@@ -893,1 +893,1 @@\n-            \/\/ Fix for RT-12512, RT-14301 and RT-14864.\n+            \/\/ Fix for JDK-8111753, JDK-8113660 and JDK-8114287.\n@@ -1032,1 +1032,1 @@\n-\/\/        \/\/ isNeedsLayout() is commented out due to RT-21417. This does not\n+\/\/        \/\/ isNeedsLayout() is commented out due to JDK-8126753. This does not\n@@ -1034,1 +1034,1 @@\n-\/\/        \/\/ issue identified in RT-21417.\n+\/\/        \/\/ issue identified in JDK-8126753.\n@@ -1393,1 +1393,1 @@\n-        \/\/ Fix for RT-12822. We try to retrieve the cell from the pile rather\n+        \/\/ Fix for JDK-8112018. We try to retrieve the cell from the pile rather\n@@ -1671,1 +1671,1 @@\n-            \/\/ Fix for RT-32908\n+            \/\/ Fix for JDK-8120237\n@@ -1685,1 +1685,1 @@\n-            \/\/ end of fix for RT-32908\n+            \/\/ end of fix for JDK-8120237\n@@ -1835,1 +1835,1 @@\n-        \/\/ RT-34333, where the sizes were being reported incorrectly to the\n+        \/\/ JDK-8122624, where the sizes were being reported incorrectly to the\n@@ -2065,1 +2065,1 @@\n-            \/\/ this is to help in situations such as RT-34407\n+            \/\/ this is to help in situations such as JDK-8097503\n@@ -2198,1 +2198,1 @@\n-        \/\/ Fix for RT-37421, which was a regression caused by RT-36556\n+        \/\/ Fix for JDK-8095487, which was a regression caused by JDK-8095592\n@@ -2204,1 +2204,1 @@\n-        \/\/ RT-36507: viewportLength gives the maximum number of\n+        \/\/ JDK-8093564: viewportLength gives the maximum number of\n@@ -2215,1 +2215,1 @@\n-                \/\/ RT-36507 - return if we've exceeded the maximum\n+                \/\/ JDK-8093564 - return if we've exceeded the maximum\n@@ -2407,1 +2407,1 @@\n-        \/\/ the hbar isn't visible (fix for RT-11666)\n+        \/\/ the hbar isn't visible (fix for JDK-8112383)\n@@ -2651,1 +2651,1 @@\n-                \/\/ special case to help resolve RT-17701 and the case where we have\n+                \/\/ special case to help resolve JDK-8128348 and the case where we have\n@@ -2660,1 +2660,1 @@\n-            \/\/ Fix for RT-11873. If this isn't here, we can have a situation where\n+            \/\/ Fix for JDK-8112227. If this isn't here, we can have a situation where\n@@ -2665,2 +2665,2 @@\n-            \/\/ This code was commented out to resolve RT-14477 after testing\n-            \/\/ whether RT-11873 can be recreated. It could not, and therefore\n+            \/\/ This code was commented out to resolve JDK-8114498 after testing\n+            \/\/ whether JDK-8112227 can be recreated. It could not, and therefore\n@@ -2725,1 +2725,1 @@\n-        \/\/ storing that into a int value - this can lead to RT-32828\n+        \/\/ storing that into a int value - this can lead to JDK-8123184\n@@ -2839,1 +2839,1 @@\n-        \/\/ Fix for RT-35876: Rather than have the cells do weird things with\n+        \/\/ Fix for JDK-8095710: Rather than have the cells do weird things with\n@@ -3375,1 +3375,1 @@\n-                \/\/ Commented out exception due to RT-29111\n+                \/\/ Commented out exception due to JDK-8124175\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/VirtualFlow.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -789,1 +789,1 @@\n- * RT-33312 - if the context-menu is belongs to a menu-button, then set the context-menu's -fx-color to -fx-base\n+ * JDK-8094080 - if the context-menu is belongs to a menu-button, then set the context-menu's -fx-color to -fx-base\n@@ -1097,1 +1097,1 @@\n-\/* Uncomment when RT-10521 is fixed.\n+\/* Uncomment when JDK-8111191 is fixed.\n@@ -1193,1 +1193,1 @@\n-\/* Uncomment when RT-10521 is fixed.\n+\/* Uncomment when JDK-8111191 is fixed.\n@@ -1728,1 +1728,1 @@\n-    \/* TODO workaround for RT-19062 *\/\n+    \/* TODO workaround for JDK-8127609 *\/\n@@ -2227,1 +2227,1 @@\n-   introducing horizontal scrollbars (see RT-14886). *\/\n+   introducing horizontal scrollbars (see JDK-8114045). *\/\n@@ -2343,1 +2343,1 @@\n-          Refer to RT-12298 for the spec.\n+          Refer to JDK-8111760 for the spec.\n@@ -2362,1 +2362,1 @@\n-          Refer to RT-12298 for the spec.\n+          Refer to JDK-8111760 for the spec.\n@@ -3259,1 +3259,1 @@\n-\/** Fix for RT-35422 where border was being shown incorrectly on non-split-buttons *\/\n+\/** Fix for JDK-8092518 where border was being shown incorrectly on non-split-buttons *\/\n@@ -3392,1 +3392,1 @@\n-\/* The fix for RT-37494 forces the web color text's major direction to\n+\/* The fix for JDK-8095846 forces the web color text's major direction to\n","filename":"modules\/javafx.controls\/src\/main\/resources\/com\/sun\/javafx\/scene\/control\/skin\/caspian\/caspian.css","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -838,1 +838,1 @@\n-\/* Fix for RT-37971 *\/\n+\/* Fix for JDK-8094252 *\/\n@@ -1230,1 +1230,1 @@\n-    \/** Applying to undo styling from .spinner, reported in RT-37965 *\/\n+    \/** Applying to undo styling from .spinner, reported in JDK-8093574 *\/\n@@ -2137,1 +2137,1 @@\n-\/* The fix for RT-37494 forces the web color text's major direction to\n+\/* The fix for JDK-8095846 forces the web color text's major direction to\n@@ -2405,1 +2405,1 @@\n-   introducing horizontal scrollbars (see RT-14886). *\/\n+   introducing horizontal scrollbars (see JDK-8114045). *\/\n@@ -2956,1 +2956,1 @@\n-     -fx-background-insets: 0;  \/* Fix for RT-35067 *\/\n+     -fx-background-insets: 0;  \/* Fix for JDK-8093820 *\/\n","filename":"modules\/javafx.controls\/src\/main\/resources\/com\/sun\/javafx\/scene\/control\/skin\/modena\/modena.css","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -386,1 +386,1 @@\n-        \/\/ If the actual size is 10 * 1.5 * 1.5 = 22.5, then we've encountered RT-37787!\n+        \/\/ If the actual size is 10 * 1.5 * 1.5 = 22.5, then we've encountered JDK-8093937!\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/control\/LabeledTextTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-    @Disabled(\"pending RT-28373\")\n+    @Disabled(\"pending JDK-8087612\")\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/chart\/StackedAreaChartTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-    \/\/ RT-22166\n+    \/\/ JDK-8126166\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/chart\/XYChartTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-            \/\/ tests RT-22124\n+            \/\/ tests JDK-8117583\n@@ -111,1 +111,1 @@\n-        \/\/ tests RT-46086\n+        \/\/ tests JDK-8095927\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/chart\/XYNumberLineChartsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -543,1 +543,1 @@\n-        \/\/ This is the acid test. If this fails, then RT-23207 is present.\n+        \/\/ This is the acid test. If this fails, then JDK-8126478 is present.\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ButtonTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1970,1 +1970,1 @@\n-        \/\/ Updated with fix for RT-34602: The TextField now never gets\n+        \/\/ Updated with fix for JDK-8090788: The TextField now never gets\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ComboBoxTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1085,1 +1085,1 @@\n-                fail(\"NoSuchMethodException: RT-18097 cannot be tested on \" + what);\n+                fail(\"NoSuchMethodException: JDK-8128808 cannot be tested on \" + what);\n@@ -1087,1 +1087,1 @@\n-                System.err.println(\"IllegalAccessException:  RT-18097 cannot be tested on \" + what);\n+                System.err.println(\"IllegalAccessException:  JDK-8128808 cannot be tested on \" + what);\n@@ -1089,1 +1089,1 @@\n-                fail(\"IllegalArgumentException:  RT-18097 cannot be tested on \" + what);\n+                fail(\"IllegalArgumentException:  JDK-8128808 cannot be tested on \" + what);\n@@ -1091,1 +1091,1 @@\n-                fail(\"InvocationTargetException:  RT-18097 cannot be tested on \" + what);\n+                fail(\"InvocationTargetException:  JDK-8128808 cannot be tested on \" + what);\n@@ -1093,1 +1093,1 @@\n-                fail(\"InstantiationException:  RT-18097 cannot be tested on \" + what);\n+                fail(\"InstantiationException:  JDK-8128808 cannot be tested on \" + what);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ControlTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -623,1 +623,1 @@\n-        \/\/ Updated with fix for RT-34602: The TextField now never gets\n+        \/\/ Updated with fix for JDK-8090788: The TextField now never gets\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/DatePickerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -964,2 +964,2 @@\n-        \/\/ This test used to be as shown below....but due to RT-33108, it changed\n-        \/\/ to the enabled code beneath. Refer to the first comment in RT-33108\n+        \/\/ This test used to be as shown below....but due to JDK-8122970, it changed\n+        \/\/ to the enabled code beneath. Refer to the first comment in JDK-8122970\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListCellTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -816,1 +816,1 @@\n-     * Tests for discontinuous multiple selection (RT-18953)\n+     * Tests for discontinuous multiple selection (JDK-8117952)\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListViewKeyInputTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -938,1 +938,1 @@\n-\/\/--------- regression testing of JDK-8093144 (was: RT-35857)\n+\/\/--------- regression testing of JDK-8093144 (was: JDK-8093144)\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListViewTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        Button button = new Button(\"RT-31168\");\n+        Button button = new Button(\"JDK-8123224\");\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/MiscellaneousTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -224,2 +224,2 @@\n-        \/\/ This test used to be as shown below....but due to RT-33108, it changed\n-        \/\/ to the enabled code beneath. Refer to the first comment in RT-33108\n+        \/\/ This test used to be as shown below....but due to JDK-8122970, it changed\n+        \/\/ to the enabled code beneath. Refer to the first comment in JDK-8122970\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableCellTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-    \/\/ Tests for discontinuous multiple cell selection (RT-18951)\n+    \/\/ Tests for discontinuous multiple cell selection (JDK-8120523)\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableViewHorizontalArrowsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1002,1 +1002,1 @@\n-     * Tests for discontinuous multiple row selection (RT-18951)\n+     * Tests for discontinuous multiple row selection (JDK-8120523)\n@@ -1224,1 +1224,1 @@\n-     * Tests for discontinuous multiple cell selection (RT-18951)\n+     * Tests for discontinuous multiple cell selection (JDK-8120523)\n@@ -4392,1 +4392,1 @@\n-        \/\/ this should not cause any issue, but it does - as noted in RT-39792\n+        \/\/ this should not cause any issue, but it does - as noted in JDK-8093052\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableViewKeyInputTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -865,1 +865,1 @@\n-        \/\/ RT-16019: NodeMemory TableView tests fail with\n+        \/\/ JDK-8128207: NodeMemory TableView tests fail with\n@@ -1353,1 +1353,1 @@\n-        \/\/ [0,1,1] (which is what RT-29313 is about)\n+        \/\/ [0,1,1] (which is what JDK-8102348 is about)\n@@ -1397,1 +1397,1 @@\n-        \/\/ [p0,p1,p1] (which is what RT-29313 is about)\n+        \/\/ [p0,p1,p1] (which is what JDK-8102348 is about)\n@@ -2113,1 +2113,1 @@\n-     * @ Ignore(\"Test started intermittently failing, most probably due to RT-36855\/JDK-8096512 changeset\")\n+     * @ Ignore(\"Test started intermittently failing, most probably due to JDK-8096512\/JDK-8096512 changeset\")\n@@ -3018,1 +3018,1 @@\n-  \/\/--------- regression testing of JDK-8093144 (was: RT-35857)\n+  \/\/--------- regression testing of JDK-8093144 (was: JDK-8093144)\n@@ -3080,1 +3080,1 @@\n-\/\/--------- end regression testing of JDK-8093144 (was: RT-35857)\n+\/\/--------- end regression testing of JDK-8093144 (was: JDK-8093144)\n@@ -3225,1 +3225,1 @@\n-    \/\/ column headers. The issue in RT-36290 was that we were creating new column\n+    \/\/ column headers. The issue in JDK-8096568 was that we were creating new column\n@@ -3505,1 +3505,1 @@\n-        \/\/ identified in RT-36670 shows that row 0 is also selected\n+        \/\/ identified in JDK-8096643 shows that row 0 is also selected\n@@ -3628,1 +3628,1 @@\n-        \/\/ move as per first instructions in RT-37057. Note that the moveColumn\n+        \/\/ move as per first instructions in JDK-8095341. Note that the moveColumn\n@@ -3631,1 +3631,1 @@\n-        \/\/ RT-37057).\n+        \/\/ JDK-8095341).\n@@ -3691,1 +3691,1 @@\n-        \/\/ move as per first instructions in RT-37057. The dragOffset and sceneX\n+        \/\/ move as per first instructions in JDK-8095341. The dragOffset and sceneX\n@@ -3693,1 +3693,1 @@\n-        \/\/ the test application attached to RT-37057 with debug output printed\n+        \/\/ the test application attached to JDK-8095341 with debug output printed\n@@ -3754,1 +3754,1 @@\n-        \/\/ move as per second instructions in RT-37057. Note that the moveColumn\n+        \/\/ move as per second instructions in JDK-8095341. Note that the moveColumn\n@@ -3757,1 +3757,1 @@\n-        \/\/ RT-37057).\n+        \/\/ JDK-8095341).\n@@ -3814,1 +3814,1 @@\n-        \/\/ move as per second instructions in RT-37057. The dragOffset and sceneX\n+        \/\/ move as per second instructions in JDK-8095341. The dragOffset and sceneX\n@@ -3816,1 +3816,1 @@\n-        \/\/ the test application attached to RT-37057 with debug output printed\n+        \/\/ the test application attached to JDK-8095341 with debug output printed\n@@ -4484,1 +4484,1 @@\n-     * Tests (and related code) for RT-38892\n+     * Tests (and related code) for JDK-8096633\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableViewTest.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-    \/\/ RT-3977\n+    \/\/ JDK-8106999\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ToggleGroupTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-     * Test do-nothing block in indexChanged (was RT-31165, is JDK-8123482)\n+     * Test do-nothing block in indexChanged (was JDK-8123482, is JDK-8123482)\n@@ -176,1 +176,1 @@\n-     * Test do-nothing block in indexChanged (was RT-31165, is JDK-8123482)\n+     * Test do-nothing block in indexChanged (was JDK-8123482, is JDK-8123482)\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeCellEditingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -565,2 +565,2 @@\n-        \/\/ This test used to be as shown below....but due to RT-33108, it changed\n-        \/\/ to the enabled code beneath. Refer to the first comment in RT-33108\n+        \/\/ This test used to be as shown below....but due to JDK-8122970, it changed\n+        \/\/ to the enabled code beneath. Refer to the first comment in JDK-8122970\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableCellTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1056,1 +1056,1 @@\n-     * Tests for discontinuous multiple row selection (RT-18951)\n+     * Tests for discontinuous multiple row selection (JDK-8120523)\n@@ -1278,1 +1278,1 @@\n-     * Tests for discontinuous multiple cell selection (RT-18951)\n+     * Tests for discontinuous multiple cell selection (JDK-8120523)\n@@ -1923,1 +1923,1 @@\n-     * Tests for discontinuous multiple selection (RT-18952)\n+     * Tests for discontinuous multiple selection (JDK-8127476)\n@@ -4847,1 +4847,1 @@\n-        \/\/ this should not cause any issue, but it does - as noted in RT-39792\n+        \/\/ this should not cause any issue, but it does - as noted in JDK-8093052\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewKeyInputTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-\/\/    @Ignore(\"Ignoring due to RT-37166\")\n+\/\/    @Ignore(\"Ignoring due to JDK-8093802\")\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewMouseInputTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1003,1 +1003,1 @@\n-\/\/        \/\/ RT-16019: NodeMemory TableView tests fail with\n+\/\/        \/\/ JDK-8128207: NodeMemory TableView tests fail with\n@@ -2079,1 +2079,1 @@\n-        \/\/ [0,1,1] (which is what RT-29313 is about)\n+        \/\/ [0,1,1] (which is what JDK-8102348 is about)\n@@ -2130,1 +2130,1 @@\n-        \/\/ [p0,p1,p1] (which is what RT-29313 is about)\n+        \/\/ [p0,p1,p1] (which is what JDK-8102348 is about)\n@@ -2972,1 +2972,1 @@\n-        \/\/ NOTE: this method (prior to the fix as part of RT-34327) would have\n+        \/\/ NOTE: this method (prior to the fix as part of JDK-8122045) would have\n@@ -3059,1 +3059,1 @@\n-\/\/    @Ignore(\"Test started intermittently failing, most probably due to RT-36855 changeset\")\n+\/\/    @Ignore(\"Test started intermittently failing, most probably due to JDK-8096512 changeset\")\n@@ -3721,1 +3721,1 @@\n-    \/\/--------- regression testing of JDK-8093144 (was: RT-35857)\n+    \/\/--------- regression testing of JDK-8093144 (was: JDK-8093144)\n@@ -3805,1 +3805,1 @@\n-    \/\/--------- end regression testing of JDK-8093144 (was: RT-35857)\n+    \/\/--------- end regression testing of JDK-8093144 (was: JDK-8093144)\n@@ -4804,1 +4804,1 @@\n-     * Tests (and related code) for RT-38892\n+     * Tests (and related code) for JDK-8096633\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -831,1 +831,1 @@\n-     * Tests for discontinuous multiple selection (RT-18952)\n+     * Tests for discontinuous multiple selection (JDK-8127476)\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeViewKeyInputTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1745,1 +1745,1 @@\n-    \/\/--------- regression testing of JDK-8093144 (was: RT-35857)\n+    \/\/--------- regression testing of JDK-8093144 (was: JDK-8093144)\n@@ -1828,1 +1828,1 @@\n-  \/\/--------- end regression testing of JDK-8093144 (was: RT-35857)\n+  \/\/--------- end regression testing of JDK-8093144 (was: JDK-8093144)\n@@ -3478,1 +3478,1 @@\n-    @Disabled(\"RT-39674 not yet fixed\")\n+    @Disabled(\"JDK-8090273 not yet fixed\")\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeViewTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-        \/\/ Pending RT-37118, MenuBar needs to be in a scene in order to set the skin.\n+        \/\/ Pending JDK-8095650, MenuBar needs to be in a scene in order to set the skin.\n@@ -98,1 +98,1 @@\n-            \/\/ setting system menu bar true should create a sceneProperty listener for RT-36554\n+            \/\/ setting system menu bar true should create a sceneProperty listener for JDK-8094110\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/MenuBarSkinTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-    ** RT-16641 : root cause, you shouldn't be able to drag\n+    ** JDK-8128277 : root cause, you shouldn't be able to drag\n@@ -686,1 +686,1 @@\n-        \/\/ 1 px of padding is on the outside - see RT-21251\n+        \/\/ 1 px of padding is on the outside - see JDK-8127431\n@@ -691,1 +691,1 @@\n-        \/\/ 1 px of padding is on the outside - see RT-21251\n+        \/\/ 1 px of padding is on the outside - see JDK-8127431\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/ScrollPaneSkinTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-        \/\/ RT-34178: NPE in TextFieldSkin of PasswordField\n+        \/\/ JDK-8118506: NPE in TextFieldSkin of PasswordField\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TextInputControlSkinTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2453,1 +2453,1 @@\n-        \/\/ SB-dependency: RT-21226 has been filed to track this\n+        \/\/ SB-dependency: JDK-8102312 has been filed to track this\n@@ -2463,1 +2463,1 @@\n-        \/\/ SB-dependency: RT-21226 has been filed to track this\n+        \/\/ SB-dependency: JDK-8102312 has been filed to track this\n@@ -2475,1 +2475,1 @@\n-        \/\/ SB-dependency: RT-21228 has been filed to track this\n+        \/\/ SB-dependency: JDK-8091571 has been filed to track this\n@@ -2487,1 +2487,1 @@\n-        \/\/ SB-dependency: RT-21228 has been filed to track this\n+        \/\/ SB-dependency: JDK-8091571 has been filed to track this\n","filename":"modules\/javafx.fxml\/src\/main\/java\/javafx\/fxml\/FXMLLoader.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-\/\/ TODO: Uncomment the following when RT-40037 is fixed.\n+\/\/ TODO: Uncomment the following when JDK-8089907 is fixed.\n@@ -82,1 +82,1 @@\n-\/\/ TODO: Remove the following when RT-40037 is fixed.\n+\/\/ TODO: Remove the following when JDK-8089907 is fixed.\n@@ -139,1 +139,1 @@\n-\/\/ TODO: enable this code when RT-40037 is fixed.\n+\/\/ TODO: enable this code when JDK-8089907 is fixed.\n@@ -152,1 +152,1 @@\n-            \/\/ TODO: Remove the following when RT-40037 is fixed.\n+            \/\/ TODO: Remove the following when JDK-8089907 is fixed.\n@@ -192,1 +192,1 @@\n-     * it to work without requiring the legacy builders. See RT-40037.\n+     * it to work without requiring the legacy builders. See JDK-8089907.\n","filename":"modules\/javafx.fxml\/src\/main\/java\/javafx\/fxml\/JavaFXBuilderFactory.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-        \/\/ which may help debugging (see RT-4475)\n+        \/\/ which may help debugging (see JDK-8107477)\n","filename":"modules\/javafx.graphics\/src\/jslc\/java\/com\/sun\/scenario\/effect\/compiler\/backend\/sw\/sse\/SSEBackend.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-        \/\/ RT-21288. Notify outer world when touch point count changes\n+        \/\/ JDK-8102493. Notify outer world when touch point count changes\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/TouchInputSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-                        \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-14593\n+                        \/\/ JDK-8091740\n@@ -130,1 +130,1 @@\n-                        System.err.println(\"DelayedCallback not implemented yet: RT-14593\");\n+                        System.err.println(\"DelayedCallback not implemented yet: JDK-8091740\");\n@@ -154,1 +154,1 @@\n-                    \/\/ custom client mime type - pass through (RT-14592)\n+                    \/\/ custom client mime type - pass through (JDK-8089912)\n@@ -262,1 +262,1 @@\n-                        \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-14592\n+                        \/\/ JDK-8089912\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ios\/IosSystemClipboard.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-12187\n+    \/\/ JDK-8092024\n@@ -153,1 +153,1 @@\n-                            \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-14593\n+                            \/\/ JDK-8091740\n@@ -156,1 +156,1 @@\n-                            System.err.println(\"DelayedCallback not implemented yet: RT-14593\");\n+                            System.err.println(\"DelayedCallback not implemented yet: JDK-8091740\");\n@@ -201,1 +201,1 @@\n-                        \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-14592\n+                        \/\/ JDK-8089912\n@@ -290,1 +290,1 @@\n-                        \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-14592\n+                        \/\/ JDK-8089912\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacSystemClipboard.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-                    \/\/ RT-16199 - internal Windows data null terminated\n+                    \/\/ JDK-8118474 - internal Windows data null terminated\n@@ -292,1 +292,1 @@\n-                        \/\/ RT-16199 - internal Windows data null terminated\n+                        \/\/ JDK-8118474 - internal Windows data null terminated\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinSystemClipboard.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -388,1 +388,1 @@\n-        \/\/ RT-32872 - If the intersection is empty, then set bits to the EMPTY_SET.\n+        \/\/ JDK-8123530 - If the intersection is empty, then set bits to the EMPTY_SET.\n@@ -463,1 +463,1 @@\n-        \/\/ RT-32872 - If the intersection is empty, then set bits to the EMPTY_SET.\n+        \/\/ JDK-8123530 - If the intersection is empty, then set bits to the EMPTY_SET.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/BitSet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -372,1 +372,1 @@\n-            \/\/ RT-24614 - \"CENTER\" should equal \"center\"\n+            \/\/ JDK-8095337 - \"CENTER\" should equal \"center\"\n@@ -643,1 +643,1 @@\n-                \/\/ RT-31022\n+                \/\/ JDK-8116809\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/ParsedValueImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -530,1 +530,1 @@\n-            \/\/ RT-34863 - clean up CSS cache when Parent is removed from scene-graph\n+            \/\/ JDK-8094828 - clean up CSS cache when Parent is removed from scene-graph\n@@ -761,1 +761,1 @@\n-                        \/\/ RT-31865\n+                        \/\/ JDK-8117908\n@@ -968,1 +968,1 @@\n-                            \/\/ RT-36332: if loadBinary throws an IOException, make sure to try .css\n+                            \/\/ JDK-8095691: if loadBinary throws an IOException, make sure to try .css\n@@ -1194,1 +1194,1 @@\n-    \/\/ For RT-20643\n+    \/\/ For JDK-8127659\n@@ -1279,1 +1279,1 @@\n-    \/\/ For RT-20643\n+    \/\/ For JDK-8127659\n@@ -1470,1 +1470,1 @@\n-                    \/\/ RT-22565: remember that this parent or scene uses this stylesheet.\n+                    \/\/ JDK-8117492: remember that this parent or scene uses this stylesheet.\n@@ -1482,1 +1482,1 @@\n-                    \/\/ RT-22565: remember that this parent or scene uses this stylesheet.\n+                    \/\/ JDK-8117492: remember that this parent or scene uses this stylesheet.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/StyleManager.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-                 * IDWriteGlyphRunAnalysis. See RT-31587.\n+                 * IDWriteGlyphRunAnalysis. See JDK-8096940.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/directwrite\/DWGlyph.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-    \/\/ TODO: Add variants of deriveWithNewBounds such as pair of Vec* (RT-26886)\n+    \/\/ TODO: Add variants of deriveWithNewBounds such as pair of Vec* (JDK-8092361)\n@@ -137,1 +137,1 @@\n-    \/\/ (RT-26886)\n+    \/\/ (JDK-8092361)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/BaseBounds.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    \/\/ hold field must be volatile to work around a Mac runtime bug (see RT-12386)\n+    \/\/ hold field must be volatile to work around a Mac runtime bug (see JDK-8111925)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/FlatteningPathIterator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-            \/\/ TODO: Or should we use Infinity? (RT-26888)\n+            \/\/ TODO: Or should we use Infinity? (JDK-8091717)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/PickRay.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-        \/\/ TODO: Could check for rectilinear shapes, if it matters (RT-26884)\n+        \/\/ TODO: Could check for rectilinear shapes, if it matters (JDK-8092003)\n@@ -161,1 +161,1 @@\n-        \/\/ TODO: Could check for rectilinear shapes, if it matters (RT-26884)\n+        \/\/ TODO: Could check for rectilinear shapes, if it matters (JDK-8092003)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/TransformedShape.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -788,1 +788,1 @@\n-                    \/\/ (RT-26801)\n+                    \/\/ (JDK-8091010)\n@@ -1392,1 +1392,1 @@\n-        \/\/ TODO: Simplify this (RT-26801)\n+        \/\/ TODO: Simplify this (JDK-8091010)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/Affine2D.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -322,1 +322,1 @@\n-            \/\/ TODO: Optimize these cases ... (RT-26800)\n+            \/\/ TODO: Optimize these cases ... (JDK-8091788)\n@@ -414,1 +414,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -428,1 +428,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -442,1 +442,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -454,1 +454,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -466,1 +466,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -478,1 +478,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -490,1 +490,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -503,1 +503,1 @@\n-            \/\/ TODO: Optimize... (RT-26800)\n+            \/\/ TODO: Optimize... (JDK-8091788)\n@@ -533,1 +533,1 @@\n-        \/\/ to be simplified... (RT-26800)\n+        \/\/ to be simplified... (JDK-8091788)\n@@ -731,1 +731,1 @@\n-        \/\/ TODO: Optimize the state... (RT-26800)\n+        \/\/ TODO: Optimize the state... (JDK-8091788)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/Affine3D.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -276,1 +276,1 @@\n-            updateState(); \/\/ TODO: Is this really needed? (RT-26884)\n+            updateState(); \/\/ TODO: Is this really needed? (JDK-8092003)\n@@ -992,1 +992,1 @@\n-            \/\/TODO: Need to verify that this is a safe cast ... (RT-26885)\n+            \/\/TODO: Need to verify that this is a safe cast ... (JDK-8092066)\n@@ -1943,1 +1943,1 @@\n-            \/\/TODO: Need to verify this casting is safe .... (RT-26885)\n+            \/\/TODO: Need to verify this casting is safe .... (JDK-8092066)\n@@ -2677,1 +2677,1 @@\n-                \/\/ try to avoid this garbage... (RT-26884)\n+                \/\/ try to avoid this garbage... (JDK-8092003)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/AffineBase.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-        \/\/ TODO: Can we just return s? (RT-26884)\n+        \/\/ TODO: Can we just return s? (JDK-8092003)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/Identity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        \/\/ TODO: Optimize... (RT-26884)\n+        \/\/ TODO: Optimize... (JDK-8092003)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/TransformHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-                \/\/ RT-27408\n+                \/\/ JDK-8090523\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/common\/ScalerFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * Should be removed once RT-20448 is fixed.\n+ * Should be removed once JDK-8090319 is fixed.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/input\/KeyCodeMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * (filed as RT-19470).\n+ * (filed as JDK-8090927).\n@@ -55,1 +55,1 @@\n- * somehow, possibly empirically (filed as RT-19471).\n+ * somehow, possibly empirically (filed as JDK-8091219).\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/traversal\/WeightedClosestCorner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-        \/\/ TODO: is == sufficient for floating point comparison here? (RT-23963)\n+        \/\/ TODO: is == sufficient for floating point comparison here? (JDK-8091390)\n@@ -430,1 +430,1 @@\n-        \/\/ TODO: assert: all 4 values are sane (RT-23962)\n+        \/\/ TODO: assert: all 4 values are sane (JDK-8091701)\n@@ -611,1 +611,1 @@\n-                \/\/   or  assert xforminfo == cachedXform info (RT-23962)\n+                \/\/   or  assert xforminfo == cachedXform info (JDK-8091701)\n@@ -693,1 +693,1 @@\n-     * image is unexpectedly null.  See RT-6428.\n+     * image is unexpectedly null.  See JDK-8108473.\n@@ -826,1 +826,1 @@\n-        \/\/ See RT-34928 for more details.\n+        \/\/ See JDK-8096788 for more details.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/CacheFilter.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-            \/\/ (RT-26982)\n+            \/\/ (JDK-8091738)\n@@ -96,1 +96,1 @@\n-            \/\/ (RT-26982)\n+            \/\/ (JDK-8091738)\n@@ -158,1 +158,1 @@\n-        \/\/ TODO: The \"outer edge\" slices below overlap at the corners... (RT-26982)\n+        \/\/ TODO: The \"outer edge\" slices below overlap at the corners... (JDK-8091738)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/EffectUtil.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -278,1 +278,1 @@\n-            \/\/ TODO: probably don't need to wrap the transform here... (RT-26981)\n+            \/\/ TODO: probably don't need to wrap the transform here... (JDK-8092196)\n@@ -341,1 +341,1 @@\n-        \/\/ (RT-26981)\n+        \/\/ (JDK-8092196)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGGroup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-    \/\/ RT-18701: this method does nothing\n+    \/\/ JDK-8127343: this method does nothing\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGImageView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -699,1 +699,1 @@\n-        \/\/ @see RT-12105 http:\/\/javafx-jira.kenai.com\/browse\/RT-12105\n+        \/\/ @see JDK-8091880\n@@ -1002,1 +1002,1 @@\n-     * TODO: Only made non-final for the sake of testing (see javafx-sg-prism tests) (RT-23957)\n+     * TODO: Only made non-final for the sake of testing (see javafx-sg-prism tests) (JDK-8090845)\n@@ -1046,1 +1046,1 @@\n-     * TODO: Only made non-final for the sake of testing (see javafx-sg-prism tests) (RT-23957)\n+     * TODO: Only made non-final for the sake of testing (see javafx-sg-prism tests) (JDK-8090845)\n@@ -1094,1 +1094,1 @@\n-     * TODO: Only made non-final for the sake of testing (see javafx-sg-prism tests) (RT-23957)\n+     * TODO: Only made non-final for the sake of testing (see javafx-sg-prism tests) (JDK-8090845)\n@@ -1817,2 +1817,2 @@\n-        \/\/ regions of its children (although this is a fine idea to consider!). See RT-32441\n-        \/\/ If we ever fix RT-32441, we must be sure to handle the case of a Group being used\n+        \/\/ regions of its children (although this is a fine idea to consider!). See JDK-8092168\n+        \/\/ If we ever fix JDK-8092168, we must be sure to handle the case of a Group being used\n@@ -1851,1 +1851,1 @@\n-                        \/\/ RT-25095: If this node has a clip who's opaque region cannot be determined, then\n+                        \/\/ JDK-8125859: If this node has a clip who's opaque region cannot be determined, then\n@@ -2132,1 +2132,1 @@\n-        \/\/ TODO: optimize this (RT-26936)\n+        \/\/ TODO: optimize this (JDK-8091917)\n@@ -2222,1 +2222,1 @@\n-        \/\/ TODO: optimize this (RT-26936)\n+        \/\/ TODO: optimize this (JDK-8091917)\n@@ -2508,1 +2508,1 @@\n-                \/\/RT-29453 - CCE: in case we get 3D bounds we need to \"flatten\" them\n+                \/\/JDK-8124495 - CCE: in case we get 3D bounds we need to \"flatten\" them\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGNode.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-        \/\/ RT-8926, append(true) converts the initial moveTo into a\n+        \/\/ JDK-8109639, append(true) converts the initial moveTo into a\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGPath.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-        \/\/ prevent undefined behavior in GLSL pow(0, 0), see RT-36235\n+        \/\/ prevent undefined behavior in GLSL pow(0, 0), see JDK-8094279\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGPhongMaterial.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-            \/\/ TODO: Allow solid strokes that are square in the corners... (RT-26974)\n+            \/\/ TODO: Allow solid strokes that are square in the corners... (JDK-8091278)\n@@ -119,1 +119,1 @@\n-            \/\/ TODO: Check if all colors in a gradient have same alpha... (RT-26974)\n+            \/\/ TODO: Check if all colors in a gradient have same alpha... (JDK-8091278)\n@@ -211,1 +211,1 @@\n-            \/\/ TODO: This should never happen... (RT-26974)\n+            \/\/ TODO: This should never happen... (JDK-8091278)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGRectangle.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-        \/\/ TODO what to do if the opaqueRegion has negative width or height due to excessive opaque insets? (RT-26979)\n+        \/\/ TODO what to do if the opaqueRegion has negative width or height due to excessive opaque insets? (JDK-8090743)\n@@ -614,1 +614,1 @@\n-            \/\/ RT-25013: We need to make sure that we do not use a cached image in the case of a\n+            \/\/ JDK-8125450: We need to make sure that we do not use a cached image in the case of a\n@@ -802,1 +802,1 @@\n-        \/\/ RT-25013: We need to make sure that we do not use a cached image in the case of a\n+        \/\/ JDK-8125450: We need to make sure that we do not use a cached image in the case of a\n@@ -804,1 +804,1 @@\n-        \/\/ RT-25049: Need to only use the cache for pixel aligned regions or the result\n+        \/\/ JDK-8125766: Need to only use the cache for pixel aligned regions or the result\n@@ -870,1 +870,1 @@\n-            \/\/ TODO need to write tests where we use a writable image and draw to it a lot. (RT-26978)\n+            \/\/ TODO need to write tests where we use a writable image and draw to it a lot. (JDK-8092105)\n@@ -1096,1 +1096,1 @@\n-            \/\/ width and will not paint it. TODO we need to document this fact (RT-26924)\n+            \/\/ width and will not paint it. TODO we need to document this fact (JDK-8091593)\n@@ -1102,1 +1102,1 @@\n-                \/\/ This is a workaround for RT-28435 so we use path rasterizer for small radius's We are\n+                \/\/ This is a workaround for JDK-8087965 so we use path rasterizer for small radius's We are\n@@ -1133,1 +1133,1 @@\n-                    \/\/ below in such cases. (RT-26979)\n+                    \/\/ below in such cases. (JDK-8090743)\n@@ -1240,1 +1240,1 @@\n-                \/\/ TODO make sure CSS uses TRANSPARENT and NONE when possible (RT-26943)\n+                \/\/ TODO make sure CSS uses TRANSPARENT and NONE when possible (JDK-8091746)\n@@ -1458,1 +1458,1 @@\n-        \/\/Not strictly correct. See RT-34051\n+        \/\/Not strictly correct. See JDK-8090013\n@@ -1513,1 +1513,1 @@\n-            \/\/ See https:\/\/javafx-jira.kenai.com\/browse\/RT-38384\n+            \/\/ See JDK-8088335\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGRegion.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-        \/\/ TODO: consider caching the stroke shape (RT-26940)\n+        \/\/ TODO: consider caching the stroke shape (JDK-8090812)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGShape.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-        \/\/ that we can avoid creating garbage here? (RT-23958)\n+        \/\/ that we can avoid creating garbage here? (JDK-8098188)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NodeEffectInput.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-            \/* Temporary Code: See RT-26997 *\/\n+            \/* Temporary Code: See JDK-8115661 *\/\n@@ -296,1 +296,1 @@\n-                \/* Temporary Code: See RT-26997 *\/\n+                \/* Temporary Code: See JDK-8115661 *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/GlyphLayout.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -287,1 +287,1 @@\n-                            popupTrigger, false, \/\/ do we know if it's synthesized? RT-20142\n+                            popupTrigger, false, \/\/ do we know if it's synthesized? JDK-8091490\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/EmbeddedScene.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-        \/\/ TODO: Need to solve RT-12605:\n+        \/\/ TODO: Need to solve JDK-8087800:\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GlassStage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-    \/\/ Clear the menu to prevent a memory leak, as outlined in RT-34779\n+    \/\/ Clear the menu to prevent a memory leak, as outlined in JDK-8094232\n@@ -391,1 +391,1 @@\n-                ret += KeyEvent.MODIFIER_WINDOWS;   \/\/ RT-19326 - Linux shortcut support\n+                ret += KeyEvent.MODIFIER_WINDOWS;   \/\/ JDK-8127216 - Linux shortcut support\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GlassSystemMenu.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -339,1 +339,1 @@\n-                        \/\/RT-11305: the drag hasn't been started on this window -- ignore the event\n+                        \/\/JDK-8110944: the drag hasn't been started on this window -- ignore the event\n@@ -345,1 +345,1 @@\n-                        \/\/RT-11305: the mouse button hasn't been pressed on this window -- ignore the event\n+                        \/\/JDK-8110944: the mouse button hasn't been pressed on this window -- ignore the event\n@@ -861,1 +861,1 @@\n-                        \/\/ RT-21057 - ignore initial minimum size setting if not visible\n+                        \/\/ JDK-8127339 - ignore initial minimum size setting if not visible\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GlassViewEventHandler.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-        \/\/ RT-34510: assert currentDragboard != null;\n+        \/\/ JDK-8088771: assert currentDragboard != null;\n@@ -420,1 +420,1 @@\n-                \/\/ RT-16812 - IE puts images on the clipboard in a HTML IMG url\n+                \/\/ JDK-8128413 - IE puts images on the clipboard in a HTML IMG url\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/QuantumClipboard.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -238,1 +238,1 @@\n-         * needed with X11 and Windows, see RT-32501\n+         * needed with X11 and Windows, see JDK-8095201\n@@ -1278,1 +1278,1 @@\n-                return TransferMode.COPY; \/\/ select a reasonable trasnfer mode as workaround until RT-22840\n+                return TransferMode.COPY; \/\/ select a reasonable trasnfer mode as workaround until JDK-8118478\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/QuantumToolkit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-        \/\/ RT-21465, RT-28490\n+        \/\/ JDK-8126842, JDK-8124937\n@@ -498,1 +498,1 @@\n-            \/\/ mentioned in RT-12607\n+            \/\/ mentioned in JDK-8112637\n@@ -736,1 +736,1 @@\n-        platformWindow.requestFocus(); \/\/ RT-17836\n+        platformWindow.requestFocus(); \/\/ JDK-8128222\n@@ -859,1 +859,1 @@\n-         * RT-17588 - exit if stage is closed from under us as\n+         * JDK-8128168 - exit if stage is closed from under us as\n@@ -874,1 +874,1 @@\n-    \/\/ Note: This method is required to workaround a glass issue mentioned in RT-12607\n+    \/\/ Note: This method is required to workaround a glass issue mentioned in JDK-8112637\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/WindowStage.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -438,1 +438,1 @@\n-            \/\/ This is a work-around for RT-15648.  That bug still applies here\n+            \/\/ This is a work-around for JDK-8090884.  That bug still applies here\n@@ -714,1 +714,1 @@\n-                \/\/ RT-27416\n+                \/\/ JDK-8092165\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/BasicStroke.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -242,1 +242,1 @@\n-     * to be [0, 1], so we need to adjust the matrix, see RT-32880.\n+     * to be [0, 1], so we need to adjust the matrix, see JDK-8123305.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -190,1 +190,1 @@\n-                    \/\/ until we fix RT-26286.\n+                    \/\/ until we fix JDK-8092380.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2ResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -259,1 +259,1 @@\n-        \/\/ TODO: remove disable() method from Shader interface... (RT-27442)\n+        \/\/ TODO: remove disable() method from Shader interface... (JDK-8091985)\n@@ -514,1 +514,1 @@\n-        \/\/ TODO: remove off param in favor of IntBuffer.position() (RT-27442)\n+        \/\/ TODO: remove off param in favor of IntBuffer.position() (JDK-8091985)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2Shader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-                \/\/ RT-27554\n+                \/\/ JDK-8092059\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2SwapChain.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-        \/\/ RT-27443\n+        \/\/ JDK-8090325\n@@ -470,1 +470,1 @@\n-                    \/\/ RT-27443\n+                    \/\/ JDK-8090325\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2Texture.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -527,1 +527,1 @@\n-        \/\/ else TODO: glGetBooleanv(GL_SHADER_COMPILER, supported, 0); (RT-27526)\n+        \/\/ else TODO: glGetBooleanv(GL_SHADER_COMPILER, supported, 0); (JDK-8091367)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/GLContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-        \/\/ RT-27419\n+        \/\/ JDK-8092081\n@@ -115,1 +115,1 @@\n-        \/\/ RT-27419\n+        \/\/ JDK-8092081\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/image\/CompoundCoords.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -567,1 +567,1 @@\n-        \/\/ RT-27421\n+        \/\/ JDK-8090715\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    \/\/ TODO: initialize transform lazily to avoid creating garbage... (RT-27422)\n+    \/\/ TODO: initialize transform lazily to avoid creating garbage... (JDK-8091727)\n@@ -97,1 +97,1 @@\n-            \/\/ RT-27422\n+            \/\/ JDK-8091727\n@@ -252,1 +252,1 @@\n-            \/\/ RT-27422\n+            \/\/ JDK-8091727\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseGraphics.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-        \/\/ Disabled as a workaround for RT-39755.\n+        \/\/ Disabled as a workaround for JDK-8093860.\n@@ -299,1 +299,1 @@\n-         * See RT-21998. This is a workaround for the fact that we don't\n+         * See JDK-8117239. This is a workaround for the fact that we don't\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/PrismSettings.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -738,1 +738,1 @@\n-        \/\/ TODO: RT-29488 we need to track the uses of the LCD buffer,\n+        \/\/ TODO: JDK-8091015 we need to track the uses of the LCD buffer,\n@@ -829,1 +829,1 @@\n-        \/\/ Null out hard references that cause memory leak reported in RT-17304\n+        \/\/ Null out hard references that cause memory leak reported in JDK-8116598\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ps\/BaseShaderContext.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1649,1 +1649,1 @@\n-        \/\/ RT-27378\n+        \/\/ JDK-8090624\n@@ -1711,1 +1711,1 @@\n-        \/\/ RT-27378\n+        \/\/ JDK-8090624\n@@ -1779,1 +1779,1 @@\n-        \/\/ RT-27378\n+        \/\/ JDK-8090624\n@@ -2194,1 +2194,1 @@\n-        \/\/ (See RT-29488)\n+        \/\/ (See JDK-8091015)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ps\/BaseShaderGraphics.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -299,1 +299,1 @@\n-            \/\/ TODO: optimize this... (RT-27377)\n+            \/\/ TODO: optimize this... (JDK-8090612)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ps\/PaintHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-            \/\/ RT-27427\n+            \/\/ JDK-8090672\n@@ -76,1 +76,1 @@\n-            \/\/TODO: Need to verify that this is a safe cast ... (RT-27427)\n+            \/\/TODO: Need to verify that this is a safe cast ... (JDK-8090672)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/shape\/DMarlinRasterizer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-        \/\/ TODO: implement (RT-27375)\n+        \/\/ TODO: implement (JDK-8092378)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-                 * RT-27385\n+                 * JDK-8101778\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DPresentable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-    \/\/ Do not implement RectShadowGraphics without fixing RT-15016 (note that\n+    \/\/ Do not implement RectShadowGraphics without fixing JDK-8097116 (note that\n@@ -703,1 +703,1 @@\n-        \/\/ TODO: Modify PrEffectHelper to not pass a null... (RT-27384)\n+        \/\/ TODO: Modify PrEffectHelper to not pass a null... (JDK-8090854)\n@@ -1029,1 +1029,1 @@\n-        \/\/ produce the same behavior as the Prism hw pipelines (see RT-19270).\n+        \/\/ produce the same behavior as the Prism hw pipelines (see JDK-8089654).\n@@ -1125,1 +1125,1 @@\n-        \/\/ RT-19270 and RT-19271).\n+        \/\/ JDK-8089654 and JDK-8087886).\n@@ -1336,1 +1336,1 @@\n-        \/\/ (See RT-29488)\n+        \/\/ (See JDK-8091015)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DPrismGraphics.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-                \/\/ RT-27427\n+                \/\/ JDK-8090672\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-        \/\/ TODO: implement (RT-27375)\n+        \/\/ TODO: implement (JDK-8092378)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-             * RT-27374\n+             * JDK-8092310\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWPresentable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        \/\/ order problems (RT-5572), so it's being commented out.\n+        \/\/ order problems (JDK-8107671), so it's being commented out.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/Settings.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -586,1 +586,1 @@\n-        \/\/ RT-27563\n+        \/\/ JDK-8091561\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/Blend.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        \/\/ RT-27395\n+        \/\/ JDK-8091908\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/CoreEffect.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    \/\/ TODO: This class should go away once we fix RT-1347...\n+    \/\/ TODO: This class should go away once we fix JDK-8090967...\n@@ -193,1 +193,1 @@\n-        \/\/ RT-27564\n+        \/\/ JDK-8091630\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/Crop.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-        \/\/ RT-27553\n+        \/\/ JDK-8090740\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/FloatMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-        \/\/ RT-27396\n+        \/\/ JDK-8090910\n@@ -164,1 +164,1 @@\n-        \/\/ RT-27396\n+        \/\/ JDK-8090910\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/Identity.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-        if ((dx3 == 0.0F) && (dy3 == 0.0F)) { \/\/ TODO: use tolerance (RT-27402)\n+        if ((dx3 == 0.0F) && (dy3 == 0.0F)) { \/\/ TODO: use tolerance (JDK-8091598)\n@@ -267,1 +267,1 @@\n-        \/\/ RT-27402\n+        \/\/ JDK-8091598\n@@ -284,1 +284,1 @@\n-        \/\/RT-28197 - Dirty regions could be computed in more efficient way\n+        \/\/JDK-8090678 - Dirty regions could be computed in more efficient way\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/PerspectiveTransform.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-        \/\/ RT-27564\n+        \/\/ JDK-8091630\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/PhongLighting.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-        \/\/ RT-27405\n+        \/\/ JDK-8091422\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/Reflection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-            \/\/ RT-27555\n+            \/\/ JDK-8090833\n@@ -136,1 +136,1 @@\n-        \/\/ RT-27555\n+        \/\/ JDK-8090833\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrEffectHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        \/\/ RT-27389: take clipping into account...\n+        \/\/ JDK-8090465: take clipping into account...\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrReflectionPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    \/\/ RT-27390\n+    \/\/ JDK-8091138\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrRenderInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -379,1 +379,1 @@\n-        \/\/ RT-27561\n+        \/\/ JDK-8091213\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/ps\/PPSRenderer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-            \/\/ RT-27562\n+            \/\/ JDK-8091374\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/sw\/PSWDrawable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -323,1 +323,1 @@\n-        \/\/ RT-27561\n+        \/\/ JDK-8091213\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/sw\/PSWRenderer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-            \/\/ RT-27387\n+            \/\/ JDK-8092042\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/sw\/java\/JSWLinearConvolvePeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-                            \/\/ TODO: Usine linear interpolation here... (RT-27388)\n+                            \/\/ TODO: Usine linear interpolation here... (JDK-8090445)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/sw\/java\/JSWLinearConvolveShadowPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-        \/\/ we would not need to call getPassResultBounds twice (RT-27406)\n+        \/\/ we would not need to call getPassResultBounds twice (JDK-8091117)\n@@ -94,1 +94,1 @@\n-            \/\/ RT-27406\n+            \/\/ JDK-8091117\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/sw\/sse\/SSELinearConvolvePeer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-\/\/        \/\/ TODO RT-19601: not used for now pending completion of JRE work\n+\/\/        \/\/ TODO JDK-8091711: not used for now pending completion of JRE work\n@@ -424,1 +424,1 @@\n-\/\/       \/\/TODO RT-19601: implementation pending JRE work\n+\/\/       \/\/TODO JDK-8091711: implementation pending JRE work\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/application\/Preloader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -583,1 +583,1 @@\n-            \/\/ RT-20880: IllegalStateException thrown from Service#restart()\n+            \/\/ JDK-8127414: IllegalStateException thrown from Service#restart()\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/concurrent\/Service.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-        \/\/ RT-21185: Only apply the style if something has changed.\n+        \/\/ JDK-8102176: Only apply the style if something has changed.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssMetaData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-            \/\/ problems like RT-20311\n+            \/\/ problems like JDK-8127922\n@@ -301,1 +301,1 @@\n-                \/\/ problems like RT-20311\n+                \/\/ problems like JDK-8127922\n@@ -344,1 +344,1 @@\n-            \/\/ problems like RT-20311\n+            \/\/ problems like JDK-8127922\n@@ -766,1 +766,1 @@\n-                \/\/ Pending RT-33574\n+                \/\/ Pending JDK-8090988\n@@ -960,1 +960,1 @@\n-                    \/\/ TODO: isIdent is needed here because of RT-38345. This effectively undoes RT-38201\n+                    \/\/ TODO: isIdent is needed here because of JDK-8096053. This effectively undoes JDK-8095368\n@@ -4483,1 +4483,1 @@\n-            \/\/ run into problems (for example, see RT-40346).\n+            \/\/ run into problems (for example, see JDK-8093583).\n@@ -4569,1 +4569,1 @@\n-        \/\/ RT-15473\n+        \/\/ JDK-8114387\n@@ -4778,1 +4778,1 @@\n-            \/\/ RT-17830 - allow declaration;;\n+            \/\/ JDK-8128890 - allow declaration;;\n@@ -4805,1 +4805,1 @@\n-\/\/            RT-16547: this warning was misleading because an empty rule\n+\/\/            JDK-8128013: this warning was misleading because an empty rule\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-    \/\/ RT-21964\n+    \/\/ JDK-8126015\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Declaration.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -376,1 +376,1 @@\n-    \/\/ RT-14711: The spec says 1px is equal to 0.75pt\n+    \/\/ JDK-8114453: The spec says 1px is equal to 0.75pt\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/SizeUnits.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -497,1 +497,1 @@\n-        case \"javafx.scene.layout.CornerRadiiConverter\" :  \/\/ Fix for RT-39665\n+        case \"javafx.scene.layout.CornerRadiiConverter\" :  \/\/ Fix for JDK-8096129\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-        \/\/ RT-17344\n+        \/\/ JDK-8120294\n@@ -338,1 +338,1 @@\n-                    \/\/ RT-31022\n+                    \/\/ JDK-8116809\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Stylesheet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-                \/\/ fall through pending RT-34551\n+                \/\/ fall through pending JDK-8087791\n@@ -76,1 +76,1 @@\n-        \/\/ pending RT-34551\n+        \/\/ pending JDK-8087791\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/ColorConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-            \/\/ Testing for RT-31022 exposed a ClassCastException where value\n+            \/\/ Testing for JDK-8116809 exposed a ClassCastException where value\n@@ -200,1 +200,1 @@\n-            \/\/ Testing for RT-31022 exposed a ClassCastException where value\n+            \/\/ Testing for JDK-8116809 exposed a ClassCastException where value\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/FontConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-            \/\/ RT-33080\n+            \/\/ JDK-8123731\n@@ -473,1 +473,1 @@\n-        \/\/ RT-31714 - make a copy of the entry set and clear the cssSetProperties immediately.\n+        \/\/ JDK-8094367 - make a copy of the entry set and clear the cssSetProperties immediately.\n@@ -854,1 +854,1 @@\n-            \/\/ take the slow path if cssFlags is REAPPLY (RT-31691)\n+            \/\/ take the slow path if cssFlags is REAPPLY (JDK-8116341)\n@@ -888,1 +888,1 @@\n-                \/\/ RT-19089\n+                \/\/ JDK-8127435\n@@ -933,1 +933,1 @@\n-                \/\/ RT-10522:\n+                \/\/ JDK-8110994:\n@@ -961,1 +961,1 @@\n-                \/\/ RT-21185: Only apply the style if something has changed.\n+                \/\/ JDK-8102176: Only apply the style if something has changed.\n@@ -1000,1 +1000,1 @@\n-                \/\/ RT-27155: if setting value raises exception, reset value\n+                \/\/ JDK-8125956: if setting value raises exception, reset value\n@@ -1220,1 +1220,1 @@\n-            \/\/ RT-16308: if there is no matching style and the user set\n+            \/\/ JDK-8117129: if there is no matching style and the user set\n@@ -1440,1 +1440,1 @@\n-        \/\/ See RT-33319 for an example of this.\n+        \/\/ See JDK-8097038 for an example of this.\n@@ -1599,1 +1599,1 @@\n-                \/\/ RT-37727 - handling of properties that are insets is wonky. If the property is -fx-inset, then\n+                \/\/ JDK-8095062 - handling of properties that are insets is wonky. If the property is -fx-inset, then\n@@ -1833,1 +1833,1 @@\n-        \/\/ RT-20145 - if looking for font size and the node has a font,\n+        \/\/ JDK-8127344 - if looking for font size and the node has a font,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/CssStyleHelper.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1030,1 +1030,1 @@\n-                        \/\/ RT-31168: reset CssFlag to clean so css will be reapplied if the node is added back later.\n+                        \/\/ JDK-8123224: reset CssFlag to clean so css will be reapplied if the node is added back later.\n@@ -3916,1 +3916,1 @@\n-                \/\/ Until this is fixed or defined differently (RT-28510),\n+                \/\/ Until this is fixed or defined differently (JDK-8090485),\n@@ -5461,1 +5461,1 @@\n-                \/\/ Until this is fixed or defined differently (RT-28510),\n+                \/\/ Until this is fixed or defined differently (JDK-8090485),\n@@ -9671,1 +9671,1 @@\n-    \/\/ SB-dependency: RT-21096 has been filed to track this\n+    \/\/ SB-dependency: JDK-8092096 has been filed to track this\n@@ -9688,1 +9688,1 @@\n-      * RT-17293\n+      * JDK-8091202\n@@ -9690,1 +9690,1 @@\n-     \/\/ SB-dependency: RT-21096 has been filed to track this\n+     \/\/ SB-dependency: JDK-8092096 has been filed to track this\n@@ -9705,1 +9705,1 @@\n-    \/\/ SB-dependency: RT-21096 has been filed to track this\n+    \/\/ SB-dependency: JDK-8092096 has been filed to track this\n@@ -9846,1 +9846,1 @@\n-        \/\/ RT-36838 - don't reapply CSS in the middle of an update\n+        \/\/ JDK-8095580 - don't reapply CSS in the middle of an update\n@@ -10019,1 +10019,1 @@\n-        \/\/ RT-28394 - need to see if any ancestor has a flag UPDATE\n+        \/\/ JDK-8115093 - need to see if any ancestor has a flag UPDATE\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -763,1 +763,1 @@\n-            \/\/ RT-34863 - clean up CSS cache when Parent is removed from scene-graph\n+            \/\/ JDK-8094828 - clean up CSS cache when Parent is removed from scene-graph\n@@ -1288,1 +1288,1 @@\n-                \/\/ RT-9784 - if stylesheet is removed, reset styled properties to\n+                \/\/ JDK-8110059 - if stylesheet is removed, reset styled properties to\n@@ -1325,1 +1325,1 @@\n-     \/\/ SB-dependency: RT-21247 has been filed to track this\n+     \/\/ SB-dependency: JDK-8091352 has been filed to track this\n@@ -1362,1 +1362,1 @@\n-        \/\/ RT-29254 - If DIRTY_BRANCH, pass control to Node#processCSS. This avoids calling NodeHelper.processCSS on\n+        \/\/ JDK-8124385 - If DIRTY_BRANCH, pass control to Node#processCSS. This avoids calling NodeHelper.processCSS on\n@@ -1376,1 +1376,1 @@\n-        \/\/ RT-33103\n+        \/\/ JDK-8117203\n@@ -1397,1 +1397,1 @@\n-            \/\/ Unless the child is already more dirty than this parent (RT-29074).\n+            \/\/ Unless the child is already more dirty than this parent (JDK-8124468).\n@@ -1840,1 +1840,1 @@\n-    \/\/ in RT-37879, it might happen that the child bounds will be marked as invalid. Due to optimizations,\n+    \/\/ in JDK-8096304, it might happen that the child bounds will be marked as invalid. Due to optimizations,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Parent.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -565,1 +565,1 @@\n-        \/\/ RT-17547: when the tree is synchronized, the dirty bits are\n+        \/\/ JDK-8120624: when the tree is synchronized, the dirty bits are\n@@ -569,1 +569,1 @@\n-        \/\/ Before RT-17547, the code checked the dirty bit. But this is\n+        \/\/ Before JDK-8120624, the code checked the dirty bit. But this is\n@@ -1611,1 +1611,1 @@\n-            \/\/ RT-9784 - if stylesheet is removed, reset styled properties to\n+            \/\/ JDK-8110059 - if stylesheet is removed, reset styled properties to\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Scene.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -303,1 +303,1 @@\n-            \/\/ TODO refer to RT-14486 for remaining glyphs\n+            \/\/ TODO refer to JDK-8114084 for remaining glyphs\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/KeyCombination.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-                \/\/ RT-21335: skip background and border images whose image url is null\n+                \/\/ JDK-8116322: skip background and border images whose image url is null\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/BackgroundConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1679,1 +1679,1 @@\n-        \/\/ RT-18878: Do not update metrics dirty if we are performing layout.\n+        \/\/ JDK-8119502: Do not update metrics dirty if we are performing layout.\n@@ -2027,1 +2027,1 @@\n-        \/\/ RT-25684: We have to be careful that when subtracting change\n+        \/\/ JDK-8125641: We have to be careful that when subtracting change\n@@ -2271,1 +2271,1 @@\n-        \/\/ RT-25684: We have to be careful that when subtracting change\n+        \/\/ JDK-8125641: We have to be careful that when subtracting change\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/GridPane.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3303,1 +3303,1 @@\n-         * This is a work around for RT-7680. Parent returns invalid bounds from\n+         * This is a work around for JDK-8109407. Parent returns invalid bounds from\n@@ -3305,1 +3305,1 @@\n-         * have invalid bounds. If RT-7680 were fixed, then we could omit this\n+         * have invalid bounds. If JDK-8109407 were fixed, then we could omit this\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/Region.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -463,1 +463,0 @@\n-        \/\/ see http:\/\/javafx-jira.kenai.com\/browse\/JFXC-4247\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/paint\/RadialGradient.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -544,1 +544,1 @@\n-            \/\/ RT-8926, append(true) converts the initial moveTo into a\n+            \/\/ JDK-8109639, append(true) converts the initial moveTo into a\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/ArcTo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-     * RT-28454: When a parent node or parent window we are associated with is not\n+     * JDK-8088846: When a parent node or parent window we are associated with is not\n@@ -479,1 +479,1 @@\n-            \/\/ its calculation. (fix for part of RT-10675).\n+            \/\/ its calculation. (fix for part of JDK-8111578).\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/PopupWindow.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -856,1 +856,1 @@\n-                \/\/ Fix for RT-15432: we should update new Scene's stylesheets, if the\n+                \/\/ Fix for JDK-8113774: we should update new Scene's stylesheets, if the\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/Window.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    \/\/ TODO: these should be defined as const... (RT-27394)\n+    \/\/ TODO: these should be defined as const... (JDK-8091603)\n","filename":"modules\/javafx.graphics\/src\/main\/jsl-decora\/SepiaTone.jsl","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-    \/\/ TODO: select Y based on whether pixel is even\/odd (RT-27382)\n+    \/\/ TODO: select Y based on whether pixel is even\/odd (JDK-8091282)\n","filename":"modules\/javafx.graphics\/src\/main\/jsl-prism\/PaintTextureYUV422.jsl","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-                        \/\/ TODO: linear interp the alphas... (RT-27407)\n+                        \/\/ TODO: linear interp the alphas... (JDK-8091113)\n","filename":"modules\/javafx.graphics\/src\/main\/native-decora\/SSELinearConvolveShadowPeer.cc","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-    \/\/ See RT-21408 & RT-20756\n+    \/\/ See JDK-8126059 & JDK-8118745\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassApplication.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -632,1 +632,1 @@\n-        \/\/TODO text\/x-moz-url ? RT-17802\n+        \/\/TODO text\/x-moz-url ? JDK-8090861\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassSystemClipboard.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -430,1 +430,1 @@\n-        if (enter) { \/\/ workaround for RT-21590\n+        if (enter) { \/\/ workaround for JDK-8126843\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1033,1 +1033,1 @@\n-            window->suppressWindowMoveEvent = YES; \/\/ RT-11215\n+            window->suppressWindowMoveEvent = YES; \/\/ JDK-8111165\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/ios\/GlassWindow.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-\/\/ RT-37304: do not use menuNeedsUpdate here, even though Cocoa prohibits\n+\/\/ JDK-8096139: do not use menuNeedsUpdate here, even though Cocoa prohibits\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassMenu.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-            \/\/ Notes after fixing RT-23199:\n+            \/\/ Notes after fixing JDK-8097372:\n@@ -275,1 +275,1 @@\n-    \/\/  (RT-20139, RT-20375);\n+    \/\/  (JDK-8127622, JDK-8127136);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassTouches.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -474,1 +474,1 @@\n-    \/\/ RT-37093, RT-37399 Command-EQUALS and Command-DOT needs special casing on Mac\n+    \/\/ JDK-8093711, JDK-8094601 Command-EQUALS and Command-DOT needs special casing on Mac\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassView3D.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -496,1 +496,1 @@\n-        \/\/ RT-5892\n+        \/\/ JDK-8107811\n@@ -621,1 +621,1 @@\n-            \/\/ RT-22388, RT-25269\n+            \/\/ JDK-8126339, JDK-8115029\n@@ -675,1 +675,1 @@\n-\/\/ RT-11707: zero out the keycode for TYPED events\n+\/\/ JDK-8112726: zero out the keycode for TYPED events\n@@ -1135,1 +1135,1 @@\n-    \/\/ RT-36038: OS X won't send mouseUp after DnD is complete, so we synthesize them\n+    \/\/ JDK-8095312: OS X won't send mouseUp after DnD is complete, so we synthesize them\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassViewDelegate.m","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -847,1 +847,1 @@\n-            window->suppressWindowMoveEvent = YES; \/\/ RT-11215\n+            window->suppressWindowMoveEvent = YES; \/\/ JDK-8111165\n@@ -926,1 +926,1 @@\n-        \/\/ RT-39813 When closing a window as the result of a global right-click\n+        \/\/ JDK-8095359 When closing a window as the result of a global right-click\n@@ -1217,1 +1217,1 @@\n-        \/\/ RT-22502 temp workaround: bring plugin window in front of a browser\n+        \/\/ JDK-8088691 temp workaround: bring plugin window in front of a browser\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassWindow.m","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -448,1 +448,1 @@\n-\/\/ Workaround for RT-13998. It has some side effects and thus commented out\n+\/\/ Workaround for JDK-8112996. It has some side effects and thus commented out\n@@ -927,1 +927,1 @@\n-    \/\/ Fix RT-16490: use GetAncestor() instead of ::GetParent() to support embedded windows\n+    \/\/ Fix JDK-8128445: use GetAncestor() instead of ::GetParent() to support embedded windows\n@@ -1646,1 +1646,1 @@\n-                    \/\/ RT-14197:\n+                    \/\/ JDK-8112905:\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/win\/GlassWindow.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -431,1 +431,1 @@\n-        \/\/ RT-17062: suppress auto-repeated events for modifier keys\n+        \/\/ JDK-8100645: suppress auto-repeated events for modifier keys\n@@ -732,1 +732,1 @@\n-                \/\/ See RT-11305 regarding the GetCapture() check\n+                \/\/ See JDK-8110944 regarding the GetCapture() check\n@@ -738,1 +738,1 @@\n-                \/\/ Due to RT-11305 we should report the pressed button for both\n+                \/\/ Due to JDK-8110944 we should report the pressed button for both\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/win\/ViewContainer.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-        \/\/ NOTE: see what went wrong (RT-27439)\n+        \/\/ NOTE: see what went wrong (JDK-8090625)\n","filename":"modules\/javafx.graphics\/src\/main\/native-iio\/ios\/ImageLoader.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-\/* RT-37125: use setjmp\/longjmp versions that do not save\/restore the signal mask *\/\n+\/* JDK-8097189: use setjmp\/longjmp versions that do not save\/restore the signal mask *\/\n","filename":"modules\/javafx.graphics\/src\/main\/native-iio\/jpegloader.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    \/\/ Reason: workaround for RT-11540\n+    \/\/ Reason: workaround for JDK-8112602\n@@ -79,1 +79,1 @@\n-    \/\/ Reason: workaround for RT-11540\n+    \/\/ Reason: workaround for JDK-8112602\n@@ -110,1 +110,1 @@\n-    \/\/ Reason: RT-31537, RT-35153\n+    \/\/ Reason: JDK-8122978, JDK-8094193\n@@ -149,1 +149,1 @@\n-    \/\/ Reason: RT-33212, RT-35993 - All of the X1xxx series cards\n+    \/\/ Reason: JDK-8123481, JDK-8095851 - All of the X1xxx series cards\n@@ -272,1 +272,1 @@\n-    \/\/ Reason: workaround for RT-14870, 15045\n+    \/\/ Reason: workaround for JDK-8114416, 15045\n@@ -407,1 +407,1 @@\n-    \/\/ Reason: workaround for RT-15381\n+    \/\/ Reason: workaround for JDK-8114494\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DBadHardware.h","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -618,1 +618,1 @@\n-        \/\/ TODO: 3D - RT-34415: [D3D 3D] Need a robust 3D states management for texture\n+        \/\/ TODO: 3D - JDK-8092272: [D3D 3D] Need a robust 3D states management for texture\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-d3d\/D3DContext.cc","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-    \/\/ Needs implementation to handle multi-monitors (RT-27437)\n+    \/\/ Needs implementation to handle multi-monitors (JDK-8091992)\n@@ -211,1 +211,1 @@\n-    \/\/ Needs implementation to handle multi-monitors (RT-27437)\n+    \/\/ Needs implementation to handle multi-monitors (JDK-8091992)\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/ios\/IOSGLFactory.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -213,1 +213,1 @@\n-    \/\/TODO: Needs implementation to handle multi-monitors (RT-27437)\n+    \/\/TODO: Needs implementation to handle multi-monitors (JDK-8091992)\n@@ -224,1 +224,1 @@\n-    \/\/TODO: Needs implementation to handle multi-monitors (RT-27437)\n+    \/\/TODO: Needs implementation to handle multi-monitors (JDK-8091992)\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/macosx\/MacGLFactory.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    \/\/ TODO: Need to get the screen info in pfInfo to handle multi-monitor case. (RT-27445)\n+    \/\/ TODO: Need to get the screen info in pfInfo to handle multi-monitor case. (JDK-8092267)\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/windows\/WinGLDrawable.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -348,1 +348,1 @@\n-    \/\/TODO: Needs implementation to handle multi-monitors (RT-27437)\n+    \/\/TODO: Needs implementation to handle multi-monitors (JDK-8091992)\n@@ -359,1 +359,1 @@\n-    \/\/TODO: Needs implementation to handle multi-monitors (RT-27437)\n+    \/\/TODO: Needs implementation to handle multi-monitors (JDK-8091992)\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/windows\/WinGLFactory.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    \/\/ RT-27438\n+    \/\/ JDK-8090498\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/windows\/WinGLPixelFormat.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -386,1 +386,1 @@\n-    \/\/TODO: Needs implementation to handle multi-monitors (RT-27437)\n+    \/\/TODO: Needs implementation to handle multi-monitors (JDK-8091992)\n@@ -397,1 +397,1 @@\n-    \/\/TODO: Needs implementation to handle multi-monitors (RT-27437)\n+    \/\/TODO: Needs implementation to handle multi-monitors (JDK-8091992)\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/x11\/X11GLFactory.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    \/\/ RT-27386\n+    \/\/ JDK-8091981\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/x11\/X11GLPixelFormat.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    \/\/       compiler bug on the Freescale iMX6 platform. See RT-37789 for details.\n+    \/\/       compiler bug on the Freescale iMX6 platform. See JDK-8097444 for details.\n","filename":"modules\/javafx.graphics\/src\/main\/resources\/com\/sun\/prism\/es2\/glsl\/main.vert","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -941,1 +941,1 @@\n-        \/\/ The issue in RT-37025 was that the stylesheet container wasn't getting removed even\n+        \/\/ The issue in JDK-8096738 was that the stylesheet container wasn't getting removed even\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/StyleManagerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * TODO: expand this to cover the entire class (RT-26882)\n+ * TODO: expand this to cover the entire class (JDK-8092141)\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/geom\/Vec3dTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * TODO: cover more of BaseTransform's functionality. (RT-26882)\n+ * TODO: cover more of BaseTransform's functionality. (JDK-8092141)\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/geom\/transform\/BaseTransformTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -321,1 +321,1 @@\n-        \/\/ TODO The root might have changes to its bounds and we should reset these. (RT-26928)\n+        \/\/ TODO The root might have changes to its bounds and we should reset these. (JDK-8091760)\n@@ -327,1 +327,1 @@\n-        \/\/ (RT-26928)\n+        \/\/ (JDK-8091760)\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/DirtyRegionTestBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-    \/\/ and change its geometry (RT-26928)\n+    \/\/ and change its geometry (JDK-8091760)\n@@ -285,1 +285,1 @@\n-    \/\/ I test that accumulating dirty regions is correct in the presence of a clip. (RT-26928)\n+    \/\/ I test that accumulating dirty regions is correct in the presence of a clip. (JDK-8091760)\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/GridDirtyRegionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    \/\/ RT-13820: We change the shape internally and call this same method, so it\n+    \/\/ JDK-8112908: We change the shape internally and call this same method, so it\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/NGRegionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        \/\/RT-39045\n+        \/\/JDK-8096579\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/tk\/quantum\/WindowStageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * Fix to verify RT-5239\n+ * Fix to verify JDK-8108480\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/scenario\/effect\/rt_5239\/RT_5239Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-     * RT-20880. The fix allows this test to pass.\n+     * JDK-8127414. The fix allows this test to pass.\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/ServiceLifecycleTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        \/\/ RT-16959 is an infinite loop on incomplete linear gradient\n+        \/\/ JDK-8119841 is an infinite loop on incomplete linear gradient\n@@ -109,1 +109,1 @@\n-        \/\/ RT-17770 is an infinite loop on a dangling comma.\n+        \/\/ JDK-8116301 is an infinite loop on a dangling comma.\n@@ -155,1 +155,1 @@\n-        \/\/ RT-16959 is an infinite loop on incomplete linear gradient\n+        \/\/ JDK-8119841 is an infinite loop on incomplete linear gradient\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssParserTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * AKA: RT-7401. Tests that the pattern used works by testing opacity\n+ * AKA: JDK-8109200. Tests that the pattern used works by testing opacity\n@@ -266,1 +266,1 @@\n-        \/\/ RT-20145 is not working, then the code will pick up the 20px\n+        \/\/ JDK-8127344 is not working, then the code will pick up the 20px\n@@ -285,1 +285,1 @@\n-        \/\/ If RT-20513 is not working, then the code will _not_\n+        \/\/ If JDK-8120245 is not working, then the code will _not_\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/HonorDeveloperSettingsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -334,1 +334,1 @@\n-        group.applyCss(); \/\/ TODO: force StyleHelper to be created, remove pending RT-34812\n+        group.applyCss(); \/\/ TODO: force StyleHelper to be created, remove pending JDK-8095679\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/Node_cssStyleMap_Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -298,1 +298,1 @@\n-            \/\/ RT-23140 is supposed to fix the NPE. Did it?\n+            \/\/ JDK-8126949 is supposed to fix the NPE. Did it?\n@@ -302,1 +302,1 @@\n-            \/\/ but the exception is not what RT-23140 fixed.\n+            \/\/ but the exception is not what JDK-8126949 fixed.\n@@ -495,1 +495,1 @@\n-        \/\/ RT-30953-2.2.4bss was generated with javafx version 2.2.45 from 7u??\n+        \/\/ RT-30953-2.2.45.bss was generated with javafx version 2.2.45 from 7u??\n@@ -503,1 +503,1 @@\n-        \/\/ RT-30953-2.2.4bss was generated with javafx version 2.2.4 from 7u10\n+        \/\/ RT-30953-2.2.4.bss was generated with javafx version 2.2.4 from 7u10\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StylesheetTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-        \/\/ \"intersects\". See http:\/\/javafx-jira.kenai.com\/browse\/RT-646\n+        \/\/ \"intersects\". See JDK-8105568\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/NodeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -494,1 +494,1 @@\n-        \/\/ there are assertions tested down the stack (see RT-21746)\n+        \/\/ there are assertions tested down the stack (see JDK-8115729)\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/ParentTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n- * Tests structural aspects of scene graph manipulation. See RT-4095.\n+ * Tests structural aspects of scene graph manipulation. See JDK-8106612.\n@@ -327,1 +327,1 @@\n-\/\/ TODO XXX TEMPORARY STOPGAP POLICY RT-4095 -- TEST DISABLED\n+\/\/ TODO XXX TEMPORARY STOPGAP POLICY JDK-8106612 -- TEST DISABLED\n@@ -346,1 +346,1 @@\n-\/\/ TODO XXX TEMPORARY STOPGAP POLICY RT-4095 -- TEST DISABLED\n+\/\/ TODO XXX TEMPORARY STOPGAP POLICY JDK-8106612 -- TEST DISABLED\n@@ -364,1 +364,1 @@\n-\/\/ TODO XXX TEMPORARY STOPGAP POLICY RT-4095 -- TEST OF STOPGAP POLICY\n+\/\/ TODO XXX TEMPORARY STOPGAP POLICY JDK-8106612 -- TEST OF STOPGAP POLICY\n@@ -396,1 +396,1 @@\n-\/\/ TODO XXX TEMPORARY STOPGAP POLICY RT-4095 -- TEST DISABLED\n+\/\/ TODO XXX TEMPORARY STOPGAP POLICY JDK-8106612 -- TEST DISABLED\n@@ -414,1 +414,1 @@\n-\/\/ TODO XXX TEMPORARY STOPGAP POLICY RT-4095 -- TEST DISABLED\n+\/\/ TODO XXX TEMPORARY STOPGAP POLICY JDK-8106612 -- TEST DISABLED\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/StructureTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n- * false. However, due to RT-25066, the bounds of a region defined by a shape will be 0x0,\n+ * false. However, due to JDK-8088149, the bounds of a region defined by a shape will be 0x0,\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/RegionPickTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -440,1 +440,1 @@\n-\/\/    \/\/ See RT-19282\n+\/\/    \/\/ See JDK-8127910\n@@ -471,1 +471,1 @@\n-\/\/    \/\/ See RT-19282\n+\/\/    \/\/ See JDK-8127910\n@@ -517,1 +517,1 @@\n-\/\/    \/\/ See RT-19282\n+\/\/    \/\/ See JDK-8127910\n@@ -547,1 +547,1 @@\n-\/\/    \/\/ See RT-19282\n+\/\/    \/\/ See JDK-8127910\n@@ -577,1 +577,1 @@\n-\/\/    \/\/ See RT-19282\n+\/\/    \/\/ See JDK-8127910\n@@ -607,1 +607,1 @@\n-\/\/    \/\/ See RT-19282\n+\/\/    \/\/ See JDK-8127910\n@@ -637,1 +637,1 @@\n-\/\/    \/\/ See RT-19282\n+\/\/    \/\/ See JDK-8127910\n@@ -667,1 +667,1 @@\n-\/\/    \/\/ See RT-19282\n+\/\/    \/\/ See JDK-8127910\n@@ -1323,1 +1323,1 @@\n-    \/\/ Test for RT-13820\n+    \/\/ Test for JDK-8112908\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/RegionTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-    \/\/ RT-18647: ClassCastException: [Ljava.lang.Double; cannot be cast to javafx.collections.ObservableList\n+    \/\/ JDK-8127534: ClassCastException: [Ljava.lang.Double; cannot be cast to javafx.collections.ObservableList\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/shape\/ShapeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    \/\/ RT-28932\n+    \/\/ JDK-8124701\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/transform\/TransformChangedEventTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-     * http:\/\/javafx-jira.kenai.com\/browse\/RT-27007\n+     * JDK-8089356\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/NativeMediaAudioClip.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -456,1 +456,1 @@\n-    \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-24594\n+    \/\/ JDK-8092403\n","filename":"modules\/javafx.media\/src\/main\/java\/javafx\/scene\/media\/Media.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-            \/\/ (RT-26934)\n+            \/\/ (JDK-8092177)\n","filename":"modules\/javafx.media\/src\/main\/java\/javafx\/scene\/media\/NGMediaView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        \/\/ See https:\/\/javafx-jira.kenai.com\/browse\/RT-37115\n+        \/\/ See JDK-8093889\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/jni\/JavaInputStreamCallbacks.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+    \/\/ JDK-8096014\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/platform\/ios\/EventDispatcher.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -617,1 +617,1 @@\n-                \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+                \/\/ JDK-8096014\n@@ -621,1 +621,1 @@\n-            \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+            \/\/ JDK-8096014\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/platform\/ios\/EventDispatcher.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-            \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+            \/\/ JDK-8096014\n@@ -230,1 +230,1 @@\n-            \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+            \/\/ JDK-8096014\n@@ -236,1 +236,1 @@\n-            \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+            \/\/ JDK-8096014\n@@ -270,1 +270,1 @@\n-    \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+    \/\/ JDK-8096014\n@@ -334,1 +334,1 @@\n-    \/\/ TODO: http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+    \/\/ TODO: JDK-8096014\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/platform\/ios\/Media.m","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -621,1 +621,1 @@\n-    \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+    \/\/ JDK-8096014\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/platform\/ios\/MediaPlayer.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-        \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+        \/\/ JDK-8096014\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/platform\/ios\/jni\/com_sun_media_jfxmediaimpl_platform_ios_IOSMedia.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        \/\/ Not implemented: http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+        \/\/ Not implemented: JDK-8096014\n@@ -94,1 +94,1 @@\n-        \/\/ Not implemented: http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+        \/\/ Not implemented: JDK-8096014\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/platform\/ios\/jni\/com_sun_media_jfxmediaimpl_platform_ios_IOSMediaPlayer.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+        \/\/ JDK-8096014\n@@ -97,1 +97,1 @@\n-        \/* TODO: add fine-grained error handling http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+        \/* TODO: add fine-grained error handling JDK-8096014\n@@ -118,1 +118,1 @@\n-        \/\/ http:\/\/javafx-jira.kenai.com\/browse\/RT-27005\n+        \/\/ JDK-8096014\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/platform\/ios\/jni\/com_sun_media_jfxmediaimpl_platform_ios_IOSPlatform.m","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-            \/\/ RT-12663\n+            \/\/ JDK-8101336\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/DataFlavorUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-        \/\/ RT-22049: Multi-JFrame\/JFXPanel app leaks JFXPanels\n+        \/\/ JDK-8126546: Multi-JFrame\/JFXPanel app leaks JFXPanels\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/SwingDnD.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-            \/\/ Fix for RT-15457: we should report mouse buttons for mouse drags\n+            \/\/ Fix for JDK-8114341: we should report mouse buttons for mouse drags\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/SwingEvents.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -435,1 +435,1 @@\n-        \/\/ Fix for RT-15457: we should report no mouse button upon mouse release, so\n+        \/\/ Fix for JDK-8114341: we should report no mouse button upon mouse release, so\n@@ -443,1 +443,1 @@\n-        \/\/ Fix for RT-16558: if a PRESSED event is consumed, e.g. by a Swing Popup,\n+        \/\/ Fix for JDK-8128809: if a PRESSED event is consumed, e.g. by a Swing Popup,\n@@ -952,1 +952,1 @@\n-        updateComponentSize(); \/\/ see RT-23603\n+        updateComponentSize(); \/\/ see JDK-8117363\n","filename":"modules\/javafx.swing\/src\/main\/java\/javafx\/embed\/swing\/JFXPanel.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-        \/\/Workaround for RT-34170\n+        \/\/Workaround for JDK-8120878\n@@ -851,1 +851,1 @@\n-                    \/\/ RT-34610: In FX, CLICKED events are generated even after dragging the mouse pointer\n+                    \/\/ JDK-8122146: In FX, CLICKED events are generated even after dragging the mouse pointer\n","filename":"modules\/javafx.swing\/src\/main\/java\/javafx\/embed\/swing\/SwingNode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -736,1 +736,1 @@\n-                false);  \/\/ RT-32990: popup trigger not implemented\n+                false);  \/\/ JDK-8089491: popup trigger not implemented\n@@ -1042,1 +1042,1 @@\n-            \/\/ The bg color may show through on resize. See RT-34380.\n+            \/\/ The bg color may show through on resize. See JDK-8122273.\n@@ -1415,1 +1415,1 @@\n-            \/\/ RT-18085: not implemented\n+            \/\/ JDK-8120706: not implemented\n@@ -1483,1 +1483,1 @@\n-            \/\/ RT-27949: not implemented\n+            \/\/ JDK-8094861: not implemented\n@@ -1489,1 +1489,1 @@\n-            \/\/ RT-27949: not implemented\n+            \/\/ JDK-8094861: not implemented\n","filename":"modules\/javafx.swt\/src\/main\/java\/javafx\/embed\/swt\/FXCanvas.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -272,1 +272,1 @@\n-    \/\/ RT-27940: map these to Fx keys\n+    \/\/ JDK-8090271: map these to Fx keys\n","filename":"modules\/javafx.swt\/src\/main\/java\/javafx\/embed\/swt\/SWTEvents.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -950,1 +950,1 @@\n-        \/\/ Used just to guarantee constant pulse activity. See RT-14433.\n+        \/\/ Used just to guarantee constant pulse activity. See JDK-8114603.\n","filename":"modules\/javafx.web\/src\/android\/java\/javafx\/scene\/web\/WebEngine.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-    \/\/ As per RT-16330: default format -> bold\/size mappings are as follows:\n+    \/\/ As per JDK-8128317: default format -> bold\/size mappings are as follows:\n@@ -210,1 +210,1 @@\n-    \/\/ As per RT-16379: default OS -> font mappings:\n+    \/\/ As per JDK-8128304: default OS -> font mappings:\n@@ -248,1 +248,1 @@\n-\/\/                            \/\/ RT-28611 webView removed - set associated webPage to null\n+\/\/                            \/\/ JDK-8120698 webView removed - set associated webPage to null\n@@ -614,1 +614,1 @@\n-                    \/\/ RT-16330 match the new font format with the required weight and size\n+                    \/\/ JDK-8128317 match the new font format with the required weight and size\n@@ -748,1 +748,1 @@\n-        \/\/ We override setOnAction to insert a new line.  This fixes RT-16453\n+        \/\/ We override setOnAction to insert a new line.  This fixes JDK-8128749\n","filename":"modules\/javafx.web\/src\/ios\/java\/javafx\/scene\/web\/HTMLEditorSkin.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -664,1 +664,1 @@\n-        \/\/ Used just to guarantee constant pulse activity. See RT-14433.\n+        \/\/ Used just to guarantee constant pulse activity. See JDK-8114603.\n","filename":"modules\/javafx.web\/src\/ios\/java\/javafx\/scene\/web\/WebEngine.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * TODO: Implement this to fix RT-40037.\n+ * TODO: Implement this to fix JDK-8089907.\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/web\/JavaFXWebViewBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-\/\/ TODO: remove this class as part of fixing RT-40037.\n+\/\/ TODO: remove this class as part of fixing JDK-8089907.\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/web\/NodeBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-\/\/ TODO: remove this class as part of fixing RT-40037.\n+\/\/ TODO: remove this class as part of fixing JDK-8089907.\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/web\/ParentBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-\/\/ TODO: remove this class as part of fixing RT-40037.\n+\/\/ TODO: remove this class as part of fixing JDK-8089907.\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/web\/WebEngineBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-\/\/ TODO: remove this class as part of fixing RT-40037.\n+\/\/ TODO: remove this class as part of fixing JDK-8089907.\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/web\/WebViewBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-        \/\/ RT-19949: disable FLV support (workaround for youtube):\n+        \/\/ JDK-8127495: disable FLV support (workaround for youtube):\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/PrismGraphicsManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-    \/\/ See RT-34443.\n+    \/\/ See JDK-8097381.\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCBufferedContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -802,1 +802,1 @@\n-                    \/\/ Create subImage only if srcRect doesn't fit the texture bounds. See RT-20193.\n+                    \/\/ Create subImage only if srcRect doesn't fit the texture bounds. See JDK-8116190.\n@@ -1005,1 +1005,1 @@\n-        \/\/ adjust x coordinate (see RT-29908)\n+        \/\/ adjust x coordinate (see JDK-8115418)\n@@ -1375,1 +1375,1 @@\n-            \/\/ avoid creating zero-size drawable, see also RT-21410\n+            \/\/ avoid creating zero-size drawable, see also JDK-8117714\n@@ -1670,1 +1670,1 @@\n-            \/\/ internally by ImageData. See RT-33625 for details.\n+            \/\/ internally by ImageData. See JDK-8095424 for details.\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCGraphicsPrismContext.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-            \/\/ The following lines is a workaround for RT-13475,\n+            \/\/ The following lines is a workaround for JDK-8093650,\n@@ -298,1 +298,1 @@\n-        \/\/ See RT-13535 or <http:\/\/webkit.org\/b\/36082>.\n+        \/\/ See JDK-8113587 or <http:\/\/webkit.org\/b\/36082>.\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCImageDecoderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -409,1 +409,1 @@\n-            \/\/ RT-10059: drawImage() may have to create the texture\n+            \/\/ JDK-8111480: drawImage() may have to create the texture\n@@ -435,1 +435,1 @@\n-            \/\/ RT-10059: drawImage() may have to create the texture\n+            \/\/ JDK-8111480: drawImage() may have to create the texture\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/graphics\/GraphicsDecoder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-        \/\/ RT-12200, RT-31072: Rewrite the 'https' scheme to\n+        \/\/ JDK-8112702, JDK-8119520: Rewrite the 'https' scheme to\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/CookieJar.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-            \/\/ RT-15907: Process the list of headers in reverse order,\n+            \/\/ JDK-8118580: Process the list of headers in reverse order,\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/CookieManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-                \/\/ RT-14438\n+                \/\/ JDK-8114159\n@@ -141,1 +141,1 @@\n-                \/\/ RT-22458\n+                \/\/ JDK-8126749\n@@ -151,1 +151,1 @@\n-                    \/\/ RT-19914\n+                    \/\/ JDK-8118819\n@@ -258,1 +258,1 @@\n-        \/\/ the causes for RT-11880.\n+        \/\/ the causes for JDK-8112030.\n@@ -398,1 +398,1 @@\n-            \/\/ See RT-17435\n+            \/\/ See JDK-8128279\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/URLLoader.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-            \/\/ RT-15138\n+            \/\/ JDK-8113893\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/text\/TextBreakIterator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-    \/\/ As per RT-16330: default format -> bold\/size mappings are as follows:\n+    \/\/ As per JDK-8128317: default format -> bold\/size mappings are as follows:\n@@ -223,1 +223,1 @@\n-                        \/\/ RT-28611 webView removed - set associated webPage to null\n+                        \/\/ JDK-8120698 webView removed - set associated webPage to null\n@@ -410,1 +410,1 @@\n-            \/\/ disabling as a fix for RT-30081\n+            \/\/ disabling as a fix for JDK-8095707\n@@ -637,1 +637,1 @@\n-                \/\/ RT-16330 match the new font format with the required weight and size\n+                \/\/ JDK-8128317 match the new font format with the required weight and size\n@@ -658,1 +658,1 @@\n-        \/\/ Fix for RT-32906, where all rows were being put through the cell factory\n+        \/\/ Fix for JDK-8123740, where all rows were being put through the cell factory\n@@ -763,1 +763,1 @@\n-        \/\/ We override setOnAction to insert a new line.  This fixes RT-16453\n+        \/\/ We override setOnAction to insert a new line.  This fixes JDK-8128749\n@@ -1005,1 +1005,1 @@\n-        \/\/ added test for fontSizeValue == null to combat RT-28847\n+        \/\/ added test for fontSizeValue == null to combat JDK-8118879\n@@ -1093,1 +1093,1 @@\n-        \/\/ The mentions of atomicity throughout this class relate back to RT-39941,\n+        \/\/ The mentions of atomicity throughout this class relate back to JDK-8096536,\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/HTMLEditorSkin.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1187,1 +1187,1 @@\n-        \/\/ Used just to guarantee constant pulse activity. See RT-14433.\n+        \/\/ Used just to guarantee constant pulse activity. See JDK-8114603.\n@@ -1396,1 +1396,1 @@\n-                        \/\/ We have empty load; send a synthetic event (RT-32097)\n+                        \/\/ We have empty load; send a synthetic event (JDK-8119247)\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/WebEngine.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1064,1 +1064,1 @@\n-        \/\/ RT-24511\n+        \/\/ JDK-8116116\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/WebView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-                        \/\/ Replaced the following line to work around possible GCC bug, see RT-22725\n+                        \/\/ Replaced the following line to work around possible GCC bug, see JDK-8126601\n@@ -195,1 +195,1 @@\n-    \/\/ Changed the call to work around possible GCC bug, see RT-22725\n+    \/\/ Changed the call to work around possible GCC bug, see JDK-8126601\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/bridge\/jni\/jsc\/JavaInstanceJSC.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-#if PLATFORM(JAVA) \/\/ RT-26487\n+#if PLATFORM(JAVA) \/\/ JDK-8125359\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/parser\/HTMLElementStack.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    \/\/ we need to call freeSpace() before refIntArr() and refFloatArr(), see RT-19695.\n+    \/\/ we need to call freeSpace() before refIntArr() and refFloatArr(), see JDK-8127455.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/java\/FontCascadeJava.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -398,1 +398,1 @@\n-    \/\/ Fix for RT-13802: If the mime type is not specified,\n+    \/\/ Fix for JDK-8113134: If the mime type is not specified,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/network\/java\/URLLoader.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -787,1 +787,1 @@\n-    \/\/ by ChromeClientJava::scroll(). See also RT-29123.\n+    \/\/ by ChromeClientJava::scroll(). See also JDK-8124810.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/ChromeClientJava.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -882,1 +882,1 @@\n-    \/\/ RT-17330: Allow local loads for substitute data, that is,\n+    \/\/ JDK-8128763: Allow local loads for substitute data, that is,\n@@ -2574,2 +2574,2 @@\n-    \/\/utatodo: seems that RT-21428 will back again\n-    \/\/JSDOMWindowBase::commonVM()->timeoutChecker.reset(); \/\/ RT-21428\n+    \/\/utatodo: seems that JDK-8126646 will back again\n+    \/\/JSDOMWindowBase::commonVM()->timeoutChecker.reset(); \/\/ JDK-8126646\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/WebPage.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -389,1 +389,1 @@\n-        \/\/ RT-14528\n+        \/\/ JDK-8114591\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/com\/sun\/webkit\/network\/data\/DataURLConnectionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-    \/\/ Tests that no exceptions occur when createPopupHandler is null (RT-15512).\n+    \/\/ Tests that no exceptions occur when createPopupHandler is null (JDK-8113962).\n@@ -138,1 +138,1 @@\n-    \/\/ Tests that no exceptions occur when createPopupHandler returns null (RT-15512).\n+    \/\/ Tests that no exceptions occur when createPopupHandler returns null (JDK-8113962).\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/CallbackTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-            \/\/ RT-14174\n+            \/\/ JDK-8113479\n@@ -92,1 +92,1 @@\n-            \/\/ RT-14175\n+            \/\/ JDK-8113008\n@@ -116,1 +116,1 @@\n-            \/\/ RT-14178\n+            \/\/ JDK-8113243\n@@ -119,1 +119,1 @@\n-            \/\/ RT-14241\n+            \/\/ JDK-8112761\n@@ -165,1 +165,1 @@\n-            \/\/ Based on RT-19205 \"JavaScript2Java Bridge: float and double\n+            \/\/ Based on JDK-8127135 \"JavaScript2Java Bridge: float and double\n@@ -191,1 +191,1 @@\n-            \/\/ Based on RT-19209 \"JavaScript2Java Bridge: assigning a JS\n+            \/\/ Based on JDK-8127580 \"JavaScript2Java Bridge: assigning a JS\n@@ -200,1 +200,1 @@\n-            \/\/ Based on RT-19204 \"JavaScript2Java Bridge:\n+            \/\/ Based on JDK-8118086 \"JavaScript2Java Bridge:\n@@ -307,1 +307,1 @@\n-            \/\/ Test RT-19099\n+            \/\/ Test JDK-8119560\n@@ -622,1 +622,1 @@\n-    \/\/ RT-37859\n+    \/\/ JDK-8097240\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/JavaScriptBridgeTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n- * This is a regression test for RT-33771 - Lens:FXML-LoginDemo throws\n+ * This is a regression test for JDK-8119854 - Lens:FXML-LoginDemo throws\n@@ -45,1 +45,1 @@\n- * and  RT-33687 - Lens:some touch events are been dropped in native\n+ * and  JDK-8123356 - Lens:some touch events are been dropped in native\n@@ -70,1 +70,1 @@\n-     * RT-33771 stated that exceptions are been thrown because the state of the\n+     * JDK-8119854 stated that exceptions are been thrown because the state of the\n@@ -74,1 +74,1 @@\n-     * Test update for RT-34191 - make sure no touch event received if drag\n+     * Test update for JDK-8122329 - make sure no touch event received if drag\n@@ -110,1 +110,1 @@\n-     * This test is also related to RT-33687 - Lens:some touch events are been\n+     * This test is also related to JDK-8123356 - Lens:some touch events are been\n@@ -237,1 +237,1 @@\n-    @Disabled(\"RT-38482\")\n+    @Disabled(\"JDK-8087675\")\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/DragTouchInAndOutAWindowTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -269,1 +269,1 @@\n-    @Disabled \/\/RT-36616\n+    @Disabled \/\/JDK-8088641\n@@ -322,1 +322,1 @@\n-    @Disabled \/\/RT-36616\n+    @Disabled \/\/JDK-8088641\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/RotateTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-    @Disabled(\"RT-37283\")\n+    @Disabled(\"JDK-8093836\")\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/SingleTouchTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-    @Disabled(\"RT-37709\")\n+    @Disabled(\"JDK-8093869\")\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/SwipeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-     * RT-34625 - we should get a click when tapping on a control, dragging the\n+     * JDK-8097082 - we should get a click when tapping on a control, dragging the\n@@ -216,1 +216,1 @@\n-     * RT-34625 - Currently a control will not generate a click when tapping on\n+     * JDK-8097082 - Currently a control will not generate a click when tapping on\n@@ -225,1 +225,1 @@\n-    @Disabled(\"RT-34625\")\n+    @Disabled(\"JDK-8097082\")\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/TouchButtonTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-    \/** Key presses and releases are allowed to overlap. RT-37425. *\/\n+    \/** Key presses and releases are allowed to overlap. JDK-8090306. *\/\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/com\/sun\/glass\/ui\/monocle\/USKeyboardTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n- * RT-23603: WebView does not display in JFXPanel on initialization\n+ * JDK-8117363: WebView does not display in JFXPanel on initialization\n@@ -51,1 +51,1 @@\n-@Disabled(\"RT-29515\")\n+@Disabled(\"JDK-8089433\")\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/RT23603Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n- * RT-30650: SwingNode is not Resizable\n+ * JDK-8120292: SwingNode is not Resizable\n@@ -92,1 +92,1 @@\n-        stage.setTitle(\"RT-30650\");\n+        stage.setTitle(\"JDK-8120292\");\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/RT30650GUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * RT-30650: SwingNode is not Resizable\n+ * JDK-8120292: SwingNode is not Resizable\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/RT30650Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n- * https:\/\/javafx-jira.kenai.com\/browse\/RT-32570\n+ * JDK-8088697\n@@ -121,1 +121,0 @@\n-\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/RT32570Test.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -625,1 +625,1 @@\n-    @Disabled(\"RT-33446\")\n+    @Disabled(\"JDK-8087813\")\n@@ -655,1 +655,1 @@\n-    @Disabled(\"RT-33446\")\n+    @Disabled(\"JDK-8087813\")\n@@ -685,1 +685,1 @@\n-    @Disabled(\"RT-33446\")\n+    @Disabled(\"JDK-8087813\")\n@@ -715,1 +715,1 @@\n-    @Disabled(\"RT-33446\")\n+    @Disabled(\"JDK-8087813\")\n@@ -745,1 +745,1 @@\n-    @Disabled(\"RT-33446\")\n+    @Disabled(\"JDK-8087813\")\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/layout\/RegionBackgroundFillUITest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -432,1 +432,1 @@\n-    @Disabled(\"RT-33411: Doesn't work at present because of Prism bug where the gaps between rows are inconsistent\")\n+    @Disabled(\"JDK-8088544: Doesn't work at present because of Prism bug where the gaps between rows are inconsistent\")\n@@ -452,1 +452,1 @@\n-    @Disabled(\"RT-33411: Doesn't work at present because of Prism bug where the gaps between rows are inconsistent\")\n+    @Disabled(\"JDK-8088544: Doesn't work at present because of Prism bug where the gaps between rows are inconsistent\")\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/layout\/RegionBackgroundImageUITest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-        \/\/ Undecorated stage to workaround RT-39904\n+        \/\/ Undecorated stage to workaround JDK-8089784\n@@ -220,1 +220,1 @@\n-        \/\/ This is a temporary workaround until RT-28683 is implemented\n+        \/\/ This is a temporary workaround until JDK-8091284 is implemented\n@@ -227,1 +227,1 @@\n-        \/\/ This is a temporary workaround until RT-28683 is implemented\n+        \/\/ This is a temporary workaround until JDK-8091284 is implemented\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/testharness\/VisualTestBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}