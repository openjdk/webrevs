{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -42,0 +40,2 @@\n+import java.util.function.Supplier;\n+\n@@ -140,1 +140,1 @@\n-    private class GetAttribute implements PrivilegedAction<Object> {\n+    private class GetAttribute implements Supplier<Object> {\n@@ -143,1 +143,1 @@\n-        @Override public Object run() {\n+        @Override public Object get() {\n@@ -165,1 +165,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -167,7 +166,3 @@\n-        AccessControlContext acc = getAccessControlContext();\n-        if (acc == null) return null;\n-        return QuantumToolkit.runWithoutRenderLock(() -> {\n-            getAttribute.attribute = attribute;\n-            getAttribute.parameters = parameters;\n-            return AccessController.doPrivileged(getAttribute, acc);\n-        });\n+        getAttribute.attribute = attribute;\n+        getAttribute.parameters = parameters;\n+        return QuantumToolkit.runWithoutRenderLock(getAttribute);\n@@ -176,1 +171,1 @@\n-    private class ExecuteAction implements PrivilegedAction<Void> {\n+    private class ExecuteAction implements Supplier<Void> {\n@@ -179,1 +174,1 @@\n-        @Override public Void run() {\n+        @Override public Void get() {\n@@ -187,1 +182,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -189,2 +183,0 @@\n-        AccessControlContext acc = getAccessControlContext();\n-        if (acc == null) return;\n@@ -194,1 +186,1 @@\n-            return AccessController.doPrivileged(executeAction, acc);\n+            return executeAction;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Accessible.java","additions":11,"deletions":19,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -35,2 +35,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -41,0 +39,1 @@\n+import java.util.function.Supplier;\n@@ -99,4 +98,2 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final boolean disableThreadChecks =\n-        AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n-            final String str =\n+    private static final boolean disableThreadChecks = ((Supplier<Boolean>) () -> {\n+        final String str =\n@@ -105,1 +102,1 @@\n-        });\n+    }).get();\n@@ -218,2 +215,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String userHome = AccessController.doPrivileged((PrivilegedAction<String>) () -> System.getProperty(\"user.home\"));\n+        String userHome = System.getProperty(\"user.home\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Application.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -45,3 +43,1 @@\n-            @SuppressWarnings(\"removal\")\n-            String userPlatform =\n-                AccessController.doPrivileged((PrivilegedAction<String>) () -> System.getProperty(\"glass.platform\"));\n+            String userPlatform = System.getProperty(\"glass.platform\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Platform.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -40,3 +38,2 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final int dpiOverride = AccessController.doPrivileged((PrivilegedAction<Integer>) () ->\n-        Integer.getInteger(\"com.sun.javafx.screenDPI\", 0)).intValue();\n+    private static final int dpiOverride =\n+        Integer.getInteger(\"com.sun.javafx.screenDPI\", 0);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Screen.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -35,0 +33,1 @@\n+import java.util.function.Supplier;\n@@ -47,2 +46,1 @@\n-    @SuppressWarnings(\"removal\")\n-    final static boolean accessible = AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n+    final static boolean accessible = ((Supplier<Boolean>) () -> {\n@@ -63,1 +61,1 @@\n-    });\n+    }).get();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/View.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,2 +49,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -53,0 +51,1 @@\n+import java.util.function.Supplier;\n@@ -68,3 +67,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String gtkVersion = AccessController.doPrivileged((PrivilegedAction<String>)\n-                                () -> System.getProperty(\"org.eclipse.swt.internal.gtk.version\"));\n+        String gtkVersion = System.getProperty(\"org.eclipse.swt.internal.gtk.version\");\n@@ -86,5 +83,1 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            Application.loadNativeLibrary();\n-            return null;\n-        });\n+        Application.loadNativeLibrary();\n@@ -126,1 +119,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -128,1 +120,1 @@\n-            AccessController.doPrivileged((PrivilegedAction<Integer>) () -> {\n+            ((Supplier<Integer>) () -> {\n@@ -131,1 +123,1 @@\n-            }) : forcedGtkVersion;\n+            }).get() : forcedGtkVersion;\n@@ -147,5 +139,1 @@\n-        @SuppressWarnings(\"removal\")\n-        boolean gtkVersionVerbose =\n-                AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n-            return Boolean.getBoolean(\"jdk.gtk.verbose\");\n-        });\n+        boolean gtkVersionVerbose = Boolean.getBoolean(\"jdk.gtk.verbose\");\n@@ -153,3 +141,2 @@\n-            @SuppressWarnings(\"removal\")\n-            float tmp = AccessController.doPrivileged((PrivilegedAction<Float>) () ->\n-                    getFloat(\"glass.gtk.uiScale\", -1.0f, \"Forcing UI scaling factor: \"));\n+            float tmp =\n+                getFloat(\"glass.gtk.uiScale\", -1.0f, \"Forcing UI scaling factor: \");\n@@ -163,15 +150,9 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            if (libraryToLoad == QUERY_NO_DISPLAY) {\n-                throw new UnsupportedOperationException(\"Unable to open DISPLAY\");\n-            } else if (libraryToLoad == QUERY_USE_CURRENT) {\n-                if (gtkVersionVerbose) {\n-                    System.out.println(\"Glass GTK library to load is already loaded\");\n-                }\n-            } else if (libraryToLoad == QUERY_LOAD_GTK3) {\n-                if (gtkVersionVerbose) {\n-                    System.out.println(\"Glass GTK library to load is glassgtk3\");\n-                }\n-                NativeLibLoader.loadLibrary(\"glassgtk3\");\n-            } else {\n-                throw new UnsupportedOperationException(\"Unable to load glass GTK library.\");\n+        if (libraryToLoad == QUERY_NO_DISPLAY) {\n+            throw new UnsupportedOperationException(\"Unable to open DISPLAY\");\n+        } else if (libraryToLoad == QUERY_USE_CURRENT) {\n+            if (gtkVersionVerbose) {\n+                System.out.println(\"Glass GTK library to load is already loaded\");\n+            }\n+        } else if (libraryToLoad == QUERY_LOAD_GTK3) {\n+            if (gtkVersionVerbose) {\n+                System.out.println(\"Glass GTK library to load is glassgtk3\");\n@@ -179,2 +160,4 @@\n-            return null;\n-        });\n+            NativeLibLoader.loadLibrary(\"glassgtk3\");\n+        } else {\n+            throw new UnsupportedOperationException(\"Unable to load glass GTK library.\");\n+        }\n@@ -185,3 +168,1 @@\n-        @SuppressWarnings(\"removal\")\n-        boolean isEventThread = AccessController\n-                .doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"javafx.embed.isEventThread\"));\n+        boolean isEventThread = Boolean.getBoolean(\"javafx.embed.isEventThread\");\n@@ -236,2 +217,1 @@\n-        @SuppressWarnings(\"removal\")\n-        final boolean disableGrab = AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"sun.awt.disablegrab\") ||\n+        final boolean disableGrab = (Boolean.getBoolean(\"sun.awt.disablegrab\") ||\n@@ -246,3 +226,1 @@\n-        @SuppressWarnings(\"removal\")\n-        final boolean isEventThread = AccessController\n-            .doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"javafx.embed.isEventThread\"));\n+        final boolean isEventThread = Boolean.getBoolean(\"javafx.embed.isEventThread\");\n@@ -257,3 +235,1 @@\n-        @SuppressWarnings(\"removal\")\n-        final boolean noErrorTrap = AccessController\n-            .doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"glass.noErrorTrap\"));\n+        final boolean noErrorTrap = Boolean.getBoolean(\"glass.noErrorTrap\");\n@@ -261,1 +237,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -263,1 +238,1 @@\n-            AccessController.doPrivileged((PrivilegedAction<Thread>) () -> new Thread(() -> {\n+            new Thread(() -> {\n@@ -266,1 +241,1 @@\n-            }, \"GtkNativeMainLoopThread\"));\n+            }, \"GtkNativeMainLoopThread\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkApplication.java","additions":27,"deletions":52,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -36,3 +36,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -46,5 +43,2 @@\n-        @SuppressWarnings(\"removal\")\n-        boolean isOnWayland = AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n-            String waylandDisplay = System.getenv(\"WAYLAND_DISPLAY\");\n-            return waylandDisplay != null && !waylandDisplay.isBlank();\n-        });\n+        String waylandDisplay = System.getenv(\"WAYLAND_DISPLAY\");\n+        boolean isOnWayland = waylandDisplay != null && !waylandDisplay.isBlank();\n@@ -52,7 +46,3 @@\n-        @SuppressWarnings(\"removal\")\n-        String method = AccessController\n-                .doPrivileged((PrivilegedAction<String>) () ->\n-                        System.getProperty(\n-                                \"javafx.robot.screenshotMethod\",\n-                                isOnWayland ? METHOD_SCREENCAST : METHOD_GTK\n-                        ));\n+        String method =\n+            System.getProperty(\"javafx.robot.screenshotMethod\",\n+                isOnWayland ? METHOD_SCREENCAST : METHOD_GTK);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkRobot.java","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -38,0 +36,1 @@\n+import java.util.function.Supplier;\n@@ -66,1 +65,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -68,1 +66,1 @@\n-                AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n+                ((Supplier<Boolean>) () -> {\n@@ -72,1 +70,1 @@\n-                });\n+                }).get();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/screencast\/ScreencastHelper.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,2 +40,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -76,11 +74,0 @@\n-    @SuppressWarnings(\"removal\")\n-    private static void doPrivilegedRunnable(Runnable runnable) {\n-        AccessController.doPrivileged(new PrivilegedAction<Void>() {\n-            @Override\n-            public Void run() {\n-                runnable.run();\n-                return null;\n-            }\n-        });\n-    }\n-\n@@ -88,7 +75,1 @@\n-         @SuppressWarnings(\"removal\")\n-         Path propsPath = AccessController.doPrivileged(new PrivilegedAction<Path>() {\n-            @Override\n-            public Path run() {\n-                return setupPath();\n-            }\n-        });\n+        Path propsPath = setupPath();\n@@ -226,1 +207,1 @@\n-                        doPrivilegedRunnable(() -> setFilePermission(PROPS_PATH));\n+                        setFilePermission(PROPS_PATH);\n@@ -228,1 +209,1 @@\n-                        doPrivilegedRunnable(() -> readTokens(PROPS_PATH));\n+                        readTokens(PROPS_PATH);\n@@ -244,17 +225,15 @@\n-        doPrivilegedRunnable(() -> {\n-            try {\n-                watchService =\n-                        FileSystems.getDefault().newWatchService();\n-\n-                PROPS_PATH\n-                        .getParent()\n-                        .register(watchService,\n-                                ENTRY_CREATE,\n-                                ENTRY_DELETE,\n-                                ENTRY_MODIFY);\n-\n-            } catch (Exception e) {\n-                if (SCREENCAST_DEBUG) {\n-                    System.err.printf(\"Token storage: failed to setup \" +\n-                            \"file watch %s\\n\", e);\n-                }\n+        try {\n+            watchService =\n+                    FileSystems.getDefault().newWatchService();\n+\n+            PROPS_PATH\n+                    .getParent()\n+                    .register(watchService,\n+                            ENTRY_CREATE,\n+                            ENTRY_DELETE,\n+                            ENTRY_MODIFY);\n+\n+        } catch (Exception e) {\n+            if (SCREENCAST_DEBUG) {\n+                System.err.printf(\"Token storage: failed to setup \" +\n+                        \"file watch %s\\n\", e);\n@@ -262,1 +241,1 @@\n-        });\n+        }\n@@ -317,1 +296,1 @@\n-                doPrivilegedRunnable(() -> store(\"save tokens\"));\n+                store(\"save tokens\");\n@@ -372,1 +351,1 @@\n-        doPrivilegedRunnable(() -> removeMalformedRecords(malformed));\n+        removeMalformedRecords(malformed);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/screencast\/TokenStorage.java","additions":21,"deletions":42,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -35,2 +35,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -42,5 +40,1 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            Application.loadNativeLibrary();\n-            return null;\n-        });\n+        Application.loadNativeLibrary();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ios\/IosApplication.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -39,2 +39,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -49,9 +47,3 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            Application.loadNativeLibrary();\n-            return null;\n-        });\n-        @SuppressWarnings(\"removal\")\n-        boolean disableSyncRendering = AccessController\n-                .doPrivileged((PrivilegedAction<Boolean>) () ->\n-                        Boolean.getBoolean(\"glass.disableSyncRendering\"));\n+        Application.loadNativeLibrary();\n+        boolean disableSyncRendering =\n+            Boolean.getBoolean(\"glass.disableSyncRendering\");\n@@ -103,3 +95,1 @@\n-        @SuppressWarnings(\"removal\")\n-        boolean isEventThread = AccessController\n-                .doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"javafx.embed.isEventThread\"));\n+        boolean isEventThread = Boolean.getBoolean(\"javafx.embed.isEventThread\");\n@@ -134,8 +124,2 @@\n-        @SuppressWarnings(\"removal\")\n-        boolean tmp =\n-            AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n-                String taskbarAppProp = System.getProperty(\"glass.taskbarApplication\");\n-                return  !\"false\".equalsIgnoreCase(taskbarAppProp);\n-            });\n-        isTaskbarApplication = tmp;\n-\n+        String taskbarAppProp = System.getProperty(\"glass.taskbarApplication\");\n+        isTaskbarApplication = !\"false\".equalsIgnoreCase(taskbarAppProp);\n@@ -513,3 +497,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private boolean checkSystemAppearance = AccessController.doPrivileged(\n-            (PrivilegedAction<Boolean>) () -> !Boolean.getBoolean(SUPPRESS_AWT_WARNING_PROPERTY));\n+    private boolean checkSystemAppearance = !Boolean.getBoolean(SUPPRESS_AWT_WARNING_PROPERTY);\n@@ -520,3 +502,1 @@\n-            @SuppressWarnings(\"removal\")\n-            String awtAppearanceProperty = AccessController.doPrivileged(\n-                (PrivilegedAction<String>) () -> System.getProperty(AWT_APPEARANCE_PROPERTY));\n+            String awtAppearanceProperty = System.getProperty(AWT_APPEARANCE_PROPERTY);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacApplication.java","additions":8,"deletions":28,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -72,1 +70,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -76,1 +73,1 @@\n-        return AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"glass.macosx.enableFileNSURL\"));\n+        return Boolean.getBoolean(\"glass.macosx.enableFileNSURL\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacCommonDialogs.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,4 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n-\n@@ -36,3 +32,1 @@\n-       @SuppressWarnings(\"removal\")\n-       String platform = AccessController.doPrivileged(\n-                (PrivilegedAction<String>) () -> System.getProperty(\"javafx.platform\"));\n+       String platform = System.getProperty(\"javafx.platform\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/AndroidPlatformFactory.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -41,8 +38,2 @@\n-        @SuppressWarnings(\"removal\")\n-        int displayID = AccessController.doPrivileged(\n-                (PrivilegedAction<Integer>)\n-                        () -> Integer.getInteger(\"dispman.display\", 0 \/* LCD *\/));\n-        @SuppressWarnings(\"removal\")\n-        int layerID = AccessController.doPrivileged(\n-                (PrivilegedAction<Integer>)\n-                        () -> Integer.getInteger(\"dispman.layer\", 1));\n+        int displayID = Integer.getInteger(\"dispman.display\", 0 \/* LCD *\/);\n+        int layerID = Integer.getInteger(\"dispman.layer\", 1);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/DispmanAcceleratedScreen.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -36,0 +34,2 @@\n+import java.util.function.Supplier;\n+\n@@ -75,2 +75,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String fbinfo = AccessController.doPrivileged((PrivilegedAction<String>) () -> {\n+        String fbinfo = ((Supplier<String>) () -> {\n@@ -84,1 +83,1 @@\n-        });\n+        }).get();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/EPDPlatformFactory.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -93,3 +91,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String tmp = AccessController.doPrivileged((PrivilegedAction<String>) ()\n-                -> System.getProperty(FB_PATH_KEY, FB_PATH_DEFAULT));\n+        String tmp = System.getProperty(FB_PATH_KEY, FB_PATH_DEFAULT);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/EPDScreen.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -207,1 +205,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -209,2 +206,1 @@\n-        return AccessController.doPrivileged(\n-                (PrivilegedAction<EPDSettings>) () -> new EPDSettings());\n+        return new EPDSettings();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/EPDSettings.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -58,4 +56,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String tmp = AccessController.doPrivileged(\n-                (PrivilegedAction<String>) () ->\n-                        System.getProperty(\"monocle.screen.fb\", \"\/dev\/fb0\"));\n+        String tmp = System.getProperty(\"monocle.screen.fb\", \"\/dev\/fb0\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/FBDevScreen.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -53,2 +51,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String geometry = AccessController.doPrivileged((PrivilegedAction<String>) () -> System.getProperty(\"headless.geometry\"));\n+        String geometry = System.getProperty(\"headless.geometry\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/HeadlessScreen.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,3 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -88,7 +85,3 @@\n-                    @SuppressWarnings(\"removal\")\n-                    var dummy = AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-                        if (\"1\".equals(System.getenv(\"JAVAFX_DEBUG\"))) {\n-                            System.exit(0);\n-                        }\n-                        return null;\n-                    });\n+                    if (\"1\".equals(System.getenv(\"JAVAFX_DEBUG\"))) {\n+                        System.exit(0);\n+                    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/KeyInput.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,1 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n+import java.util.function.Supplier;\n@@ -33,2 +32,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final int bits = AccessController.doPrivileged((PrivilegedAction<Integer>) () -> {\n+    private static final int bits = ((Supplier<Integer>) () -> {\n@@ -37,1 +35,1 @@\n-    });\n+    }).get();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/LinuxArch.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -37,1 +34,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -40,2 +36,2 @@\n-        PrivilegedAction<String> getFilterProperty =\n-                () -> System.getProperty(\n+        String getFilterProperty =\n+                System.getProperty(\n@@ -46,2 +42,1 @@\n-        pipeline.addNamedFilters(\n-                AccessController.doPrivileged(getFilterProperty));\n+        pipeline.addNamedFilters(getFilterProperty);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/LinuxTouchProcessor.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -55,1 +53,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -60,5 +57,2 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            flipXY = Boolean.getBoolean(\"monocle.input.\"\n-                                        + product + \".flipXY\");\n-            return null;\n-        });\n+        flipXY = Boolean.getBoolean(\"monocle.input.\"\n+                                    + product + \".flipXY\");\n@@ -142,12 +136,8 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            int minimum = Integer.getInteger(\n-                    \"monocle.input.\" + product + \".min\" + axisName,\n-                    caps.getMinimum());\n-            int maximum = Integer.getInteger(\n-                    \"monocle.input.\" + product + \".max\" + axisName,\n-                    caps.getMaximum());\n-            translates[index] = -minimum;\n-            scalars[index] = range \/ (maximum - minimum);\n-            return null;\n-        });\n+        int minimum = Integer.getInteger(\n+                \"monocle.input.\" + product + \".min\" + axisName,\n+                caps.getMinimum());\n+        int maximum = Integer.getInteger(\n+                \"monocle.input.\" + product + \".max\" + axisName,\n+                caps.getMaximum());\n+        translates[index] = -minimum;\n+        scalars[index] = range \/ (maximum - minimum);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/LinuxTouchTransform.java","additions":11,"deletions":21,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -43,2 +43,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -114,4 +112,1 @@\n-        @SuppressWarnings(\"removal\")\n-        long stackSize = AccessController.doPrivileged(\n-                (PrivilegedAction<Long>)\n-                        () -> Long.getLong(\"monocle.stackSize\", 0));\n+        long stackSize = Long.getLong(\"monocle.stackSize\", 0);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/MonocleApplication.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -33,3 +30,1 @@\n-    @SuppressWarnings(\"removal\")\n-    static final MonocleSettings settings = AccessController.doPrivileged(\n-            (PrivilegedAction<MonocleSettings>) () -> new MonocleSettings());\n+    static final MonocleSettings settings = new MonocleSettings();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/MonocleSettings.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -33,0 +30,1 @@\n+import java.util.function.Supplier;\n@@ -49,1 +47,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -51,1 +48,1 @@\n-        AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n+        ((Supplier<Boolean>) () -> {\n@@ -55,3 +52,1 @@\n-        });\n-\n-\n+        }).get();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/NativePlatform.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -84,1 +81,0 @@\n-            @SuppressWarnings(\"removal\")\n@@ -86,2 +82,2 @@\n-                    AccessController.doPrivileged((PrivilegedAction<String>) () -> System.getProperty(\"monocle.platform\",\n-                                              \"MX6,OMAP,Dispman,Android,X11,Linux,Headless\"));\n+                    System.getProperty(\"monocle.platform\",\n+                                        \"MX6,OMAP,Dispman,Android,X11,Linux,Headless\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/NativePlatformFactory.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,3 +34,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -49,5 +46,2 @@\n-    @SuppressWarnings(\"removal\")\n-    private final int touchRadius = AccessController.doPrivileged(\n-            (PrivilegedAction<Integer>) () -> Integer.getInteger(\n-                    \"monocle.input.touchRadius\", 20)\n-    );\n+    private final int touchRadius = Integer.getInteger(\n+                    \"monocle.input.touchRadius\", 20);\n@@ -74,3 +68,1 @@\n-            @SuppressWarnings(\"removal\")\n-            String[] touchFilterNames = AccessController.doPrivileged(\n-                    (PrivilegedAction<String>) () -> System.getProperty(\n+            String[] touchFilterNames = System.getProperty(\n@@ -78,2 +70,1 @@\n-                            \"SmallMove\")\n-            ).split(\",\");\n+                            \"SmallMove\").split(\",\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/TouchInput.java","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -57,4 +55,1 @@\n-            @SuppressWarnings(\"removal\")\n-            int vncPort = AccessController.doPrivileged(\n-                    (PrivilegedAction<Integer>)\n-                            () -> Integer.getInteger(\"vnc.port\", 5901));\n+            int vncPort = Integer.getInteger(\"vnc.port\", 5901);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/VNCScreen.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -54,6 +51,2 @@\n-            @SuppressWarnings(\"removal\")\n-            boolean doMaliWorkaround =\n-                    AccessController.doPrivileged(\n-                            (PrivilegedAction<Boolean>) () ->\n-                                    Boolean.getBoolean(\n-                                            \"monocle.maliSignedStruct\"));\n+            boolean doMaliWorkaround = Boolean.getBoolean(\n+                                            \"monocle.maliSignedStruct\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/X11AcceleratedScreen.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -38,1 +35,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -41,2 +37,1 @@\n-        x11Input = AccessController.doPrivileged((PrivilegedAction<Boolean>)\n-                () -> Boolean.getBoolean(\"x11.input\"));\n+        x11Input = Boolean.getBoolean(\"x11.input\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/X11Platform.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -38,3 +35,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String display = AccessController.doPrivileged(\n-                (PrivilegedAction<String>) () -> System.getenv(\"DISPLAY\"));\n+        String display = System.getenv(\"DISPLAY\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/X11PlatformFactory.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -77,4 +75,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String geometry =\n-                AccessController.doPrivileged((PrivilegedAction<String>) () ->\n-                        System.getProperty(\"x11.geometry\"));\n+        String geometry = System.getProperty(\"x11.geometry\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/X11Screen.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -38,2 +38,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -86,23 +84,11 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged(new PrivilegedAction<Void>() {\n-            @Override\n-            public Void run() {\n-                verbose = Boolean.getBoolean(\"javafx.verbose\");\n-                if (PrismSettings.allowHiDPIScaling) {\n-                    overrideUIScale = getFloat(\"glass.win.uiScale\", -1.0f, \"Forcing UI scaling factor: \");\n-                    \/\/ We only parse these if verbose, to inform the user...\n-                    if (PrismSettings.verbose) {\n-                        getFloat(\"glass.win.renderScale\", -1.0f,\n-                                 \"(No longer supported) Rendering scaling factor: \");\n-                        getFloat(\"glass.win.minHiDPI\", 1.5f,\n-                                 \"(No longer supported) UI scaling threshold: \");\n-                        getBoolean(\"glass.win.forceIntegerRenderScale\", true,\n-                                   \"(No longer supported) force integer rendering scale\");\n-                    }\n-                } else {\n-                    overrideUIScale = 1.0f;\n-                }\n-                \/\/ Load required Microsoft runtime DLLs on Windows platforms\n-                Toolkit.loadMSWindowsLibraries();\n-                Application.loadNativeLibrary();\n-                return null;\n+        verbose = Boolean.getBoolean(\"javafx.verbose\");\n+        if (PrismSettings.allowHiDPIScaling) {\n+            overrideUIScale = getFloat(\"glass.win.uiScale\", -1.0f, \"Forcing UI scaling factor: \");\n+            \/\/ We only parse these if verbose, to inform the user...\n+            if (PrismSettings.verbose) {\n+                getFloat(\"glass.win.renderScale\", -1.0f,\n+                         \"(No longer supported) Rendering scaling factor: \");\n+                getFloat(\"glass.win.minHiDPI\", 1.5f,\n+                         \"(No longer supported) UI scaling threshold: \");\n+                getBoolean(\"glass.win.forceIntegerRenderScale\", true,\n+                           \"(No longer supported) force integer rendering scale\");\n@@ -110,1 +96,6 @@\n-        });\n+        } else {\n+            overrideUIScale = 1.0f;\n+        }\n+        \/\/ Load required Microsoft runtime DLLs on Windows platforms\n+        Toolkit.loadMSWindowsLibraries();\n+        Application.loadNativeLibrary();\n@@ -118,3 +109,1 @@\n-        @SuppressWarnings(\"removal\")\n-        boolean isEventThread = AccessController\n-                .doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"javafx.embed.isEventThread\"));\n+        boolean isEventThread = Boolean.getBoolean(\"javafx.embed.isEventThread\");\n@@ -145,4 +134,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String awareRequested = AccessController\n-            .doPrivileged((PrivilegedAction<String>) () ->\n-                          System.getProperty(\"javafx.glass.winDPIawareness\"));\n+        String awareRequested = System.getProperty(\"javafx.glass.winDPIawareness\");\n@@ -167,3 +153,1 @@\n-        @SuppressWarnings(\"removal\")\n-        boolean isEventThread = AccessController\n-            .doPrivileged((PrivilegedAction<Boolean>) () -> Boolean.getBoolean(\"javafx.embed.isEventThread\"));\n+        boolean isEventThread = Boolean.getBoolean(\"javafx.embed.isEventThread\");\n@@ -181,1 +165,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -183,1 +166,1 @@\n-            AccessController.doPrivileged((PrivilegedAction<Thread>) () -> new Thread(() -> {\n+            new Thread(() -> {\n@@ -186,1 +169,1 @@\n-            }, \"WindowsNativeRunloopThread\"));\n+            }, \"WindowsNativeRunloopThread\");\n@@ -359,2 +342,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String baseDirectory = AccessController.doPrivileged((PrivilegedAction<String>) () -> System.getenv(\"APPDATA\"));\n+        String baseDirectory = System.getenv(\"APPDATA\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinApplication.java","additions":23,"deletions":41,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import java.security.AccessController;\n@@ -43,1 +42,0 @@\n-import java.security.PrivilegedAction;\n@@ -54,3 +52,2 @@\n-            @SuppressWarnings(\"removal\")\n-            StackWalker walker = AccessController.doPrivileged((PrivilegedAction<StackWalker>) () ->\n-            StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE));\n+            StackWalker walker = StackWalker.\n+                getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE);\n@@ -65,3 +62,2 @@\n-            @SuppressWarnings(\"removal\")\n-            StackWalker walker = AccessController.doPrivileged((PrivilegedAction<StackWalker>) () ->\n-            StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE));\n+            StackWalker walker = StackWalker.\n+                getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE);\n@@ -81,5 +77,1 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged((PrivilegedAction<Object>) () -> {\n-            verbose = Boolean.getBoolean(\"javafx.verbose\");\n-            return null;\n-        });\n+        verbose = Boolean.getBoolean(\"javafx.verbose\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/utils\/NativeLibLoader.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"}]}