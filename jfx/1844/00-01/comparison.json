{"files":[{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.javafx.css.media;\n+\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.Set;\n+\n+public enum ContextAwareness {\n+\n+    \/**\n+     * Indicates that the media query probes the viewport size (width or height).\n+     *\/\n+    VIEWPORT_SIZE,\n+\n+    \/**\n+     * Indicates that the media query probes the full-screen state.\n+     *\/\n+    FULLSCREEN;\n+\n+    public static Set<ContextAwareness> combine(Set<ContextAwareness> first, Set<ContextAwareness> second) {\n+        var result = EnumSet.copyOf(first);\n+        result.addAll(second);\n+        return result;\n+    }\n+\n+    public static Set<ContextAwareness> of(ContextAwareness... awareness) {\n+        var result = EnumSet.noneOf(ContextAwareness.class);\n+        Collections.addAll(result, awareness);\n+        return result;\n+    }\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/ContextAwareness.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -96,1 +96,1 @@\n-                    true, MediaQuery.VIEWPORT_SIZE_AWARE);\n+                    true, ContextAwareness.VIEWPORT_SIZE);\n@@ -110,1 +110,1 @@\n-                    true, MediaQuery.FULLSCREEN_AWARE);\n+                    true, ContextAwareness.FULLSCREEN);\n@@ -117,2 +117,1 @@\n-                enumValue(ColorScheme::valueOf, featureName, featureValue),\n-                MediaQuery.DEFAULT_AWARENESS);\n+                enumValue(ColorScheme::valueOf, featureName, featureValue));\n@@ -191,1 +190,1 @@\n-            return FunctionExpression.of(featureName, featureValue, argument, false, MediaQuery.DEFAULT_AWARENESS);\n+            return FunctionExpression.of(featureName, featureValue, argument, false);\n@@ -195,1 +194,1 @@\n-            return FunctionExpression.of(featureName, featureValue, argument, true, MediaQuery.DEFAULT_AWARENESS);\n+            return FunctionExpression.of(featureName, featureValue, argument, true);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/MediaFeatures.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.util.Set;\n@@ -49,16 +50,0 @@\n-    \/**\n-     * Indicates that the media query does not probe any of the more specific aspects of\n-     * the media query context.\n-     *\/\n-    int DEFAULT_AWARENESS = 0;\n-\n-    \/**\n-     * Indicates that the media query probes the viewport size (width or height).\n-     *\/\n-    int VIEWPORT_SIZE_AWARE = 1;\n-\n-    \/**\n-     * Indicates that the media query probes the full-screen state.\n-     *\/\n-    int FULLSCREEN_AWARE = 2;\n-\n@@ -69,1 +54,1 @@\n-     * @return a bitwise combination of context awareness flags\n+     * @return the context awareness flags\n@@ -71,1 +56,1 @@\n-    int getContextAwareness();\n+    Set<ContextAwareness> getContextAwareness();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/MediaQuery.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-     * Registers the specified query with the media query context and provides its current value.\n+     * Notifies the media query context that a query has been evaluated and provides its current value.\n@@ -104,1 +104,0 @@\n-     * @param contextAwareness the context-awareness flags\n@@ -107,1 +106,1 @@\n-    void registerContextAwareQuery(MediaQuery query, int contextAwareness, boolean currentValue);\n+    void notifyQueryEvaluated(MediaQuery query, boolean currentValue);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/MediaQueryContext.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -86,4 +86,1 @@\n-            int contextAwareness = query.getContextAwareness();\n-            if (contextAwareness != MediaQuery.DEFAULT_AWARENESS) {\n-                context.registerContextAwareQuery(query, contextAwareness, value);\n-            }\n+            context.notifyQueryEvaluated(query, value);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/MediaRule.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.css.media.ContextAwareness;\n@@ -33,0 +34,1 @@\n+import java.util.Set;\n@@ -41,0 +43,1 @@\n+    private final Set<ContextAwareness> contextAwareness;\n@@ -45,0 +48,1 @@\n+        this.contextAwareness = ContextAwareness.combine(left.getContextAwareness(), right.getContextAwareness());\n@@ -80,2 +84,2 @@\n-    public int getContextAwareness() {\n-        return left.getContextAwareness() | right.getContextAwareness();\n+    public Set<ContextAwareness> getContextAwareness() {\n+        return contextAwareness;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/ConjunctionExpression.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.css.media.ContextAwareness;\n@@ -31,0 +32,1 @@\n+import java.util.EnumSet;\n@@ -32,0 +34,1 @@\n+import java.util.Set;\n@@ -38,0 +41,2 @@\n+    private static final Set<ContextAwareness> NONE = EnumSet.noneOf(ContextAwareness.class);\n+\n@@ -53,2 +58,2 @@\n-    public int getContextAwareness() {\n-        return DEFAULT_AWARENESS;\n+    public Set<ContextAwareness> getContextAwareness() {\n+        return NONE;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/ConstantExpression.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.css.media.ContextAwareness;\n@@ -33,0 +34,1 @@\n+import java.util.Set;\n@@ -41,0 +43,1 @@\n+    private final Set<ContextAwareness> contextAwareness;\n@@ -45,0 +48,1 @@\n+        this.contextAwareness = ContextAwareness.combine(left.getContextAwareness(), right.getContextAwareness());\n@@ -80,2 +84,2 @@\n-    public int getContextAwareness() {\n-        return left.getContextAwareness() | right.getContextAwareness();\n+    public Set<ContextAwareness> getContextAwareness() {\n+        return contextAwareness;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/DisjunctionExpression.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.css.media.ContextAwareness;\n@@ -32,0 +33,1 @@\n+import java.util.Set;\n@@ -42,0 +44,1 @@\n+    private final Set<ContextAwareness> contextAwareness;\n@@ -43,1 +46,0 @@\n-    private final int contextAwareness;\n@@ -45,9 +47,0 @@\n-    \/**\n-     * Creates a new {@code FunctionExpression}.\n-     *\n-     * @param featureName the feature name\n-     * @param featureValue the feature value, or {@code null} to indicate a boolean context\n-     * @param function the evaluation function\n-     * @param value the expected return value of the function+\n-     * @param contextAwareness the context awareness of the function, see {@link MediaQuery#getContextAwareness()}\n-     *\/\n@@ -58,1 +51,1 @@\n-                               int contextAwareness) {\n+                               ContextAwareness... contextAwareness) {\n@@ -62,0 +55,1 @@\n+        this.contextAwareness = ContextAwareness.of(contextAwareness);\n@@ -63,1 +57,0 @@\n-        this.contextAwareness = contextAwareness;\n@@ -66,0 +59,9 @@\n+    \/**\n+     * Returns an interned {@code FunctionExpression}.\n+     *\n+     * @param featureName the feature name\n+     * @param featureValue the feature value, or {@code null} to indicate a boolean context\n+     * @param function the evaluation function\n+     * @param value the expected return value of the function+\n+     * @param contextAwareness the context awareness of the function, see {@link MediaQuery#getContextAwareness()}\n+     *\/\n@@ -70,1 +72,1 @@\n-                                               int contextAwareness) {\n+                                               ContextAwareness... contextAwareness) {\n@@ -84,1 +86,1 @@\n-    public int getContextAwareness() {\n+    public Set<ContextAwareness> getContextAwareness() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/FunctionExpression.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.css.media.ContextAwareness;\n@@ -32,0 +33,1 @@\n+import java.util.Set;\n@@ -39,0 +41,1 @@\n+    private final Set<ContextAwareness> contextAwareness;\n@@ -42,0 +45,1 @@\n+        this.contextAwareness = expression.getContextAwareness();\n@@ -53,2 +57,2 @@\n-    public int getContextAwareness() {\n-        return expression.getContextAwareness();\n+    public Set<ContextAwareness> getContextAwareness() {\n+        return contextAwareness;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/NegationExpression.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.css.media.ContextAwareness;\n@@ -31,0 +32,1 @@\n+import java.util.EnumSet;\n@@ -32,0 +34,1 @@\n+import java.util.Set;\n@@ -43,0 +46,2 @@\n+    private static final Set<ContextAwareness> VIEWPORT_SIZE = EnumSet.of(ContextAwareness.VIEWPORT_SIZE);\n+\n@@ -64,2 +69,2 @@\n-    public int getContextAwareness() {\n-        return VIEWPORT_SIZE_AWARE;\n+    public Set<ContextAwareness> getContextAwareness() {\n+        return VIEWPORT_SIZE;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/media\/expression\/RangeExpression.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import com.sun.javafx.css.media.ContextAwareness;\n@@ -32,0 +33,1 @@\n+import com.sun.javafx.css.media.MediaRule;\n@@ -35,0 +37,1 @@\n+import java.util.Set;\n@@ -92,0 +95,3 @@\n+    \/**\n+     * Called by {@link MediaRule} when a media query has been evaluated.\n+     *\/\n@@ -93,2 +99,7 @@\n-    public void registerContextAwareQuery(MediaQuery query, int contextAwareness, boolean currentValue) {\n-        if ((contextAwareness & MediaQuery.VIEWPORT_SIZE_AWARE) != 0) {\n+    public void notifyQueryEvaluated(MediaQuery query, boolean currentValue) {\n+        Set<ContextAwareness> contextAwareness = query.getContextAwareness();\n+        if (contextAwareness.isEmpty()) {\n+            return;\n+        }\n+\n+        if (contextAwareness.contains(ContextAwareness.VIEWPORT_SIZE)) {\n@@ -98,1 +109,1 @@\n-        if ((contextAwareness & MediaQuery.FULLSCREEN_AWARE) != 0) {\n+        if (contextAwareness.contains(ContextAwareness.FULLSCREEN)) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/SceneContext.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        FUNCTION(() -> FunctionExpression.of(\"test\", \"value\", _ -> 0, 0, MediaQuery.DEFAULT_AWARENESS)),\n+        FUNCTION(() -> FunctionExpression.of(\"test\", \"value\", _ -> 0, 0)),\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/media\/MediaQueryCacheTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-import static com.sun.javafx.css.media.MediaQuery.DEFAULT_AWARENESS;\n@@ -77,1 +76,1 @@\n-        var expected = FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true, DEFAULT_AWARENESS);\n+        var expected = FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true);\n@@ -81,1 +80,1 @@\n-        expected = FunctionExpression.of(\"prefers-reduced-motion\", null, _ -> null, true, DEFAULT_AWARENESS);\n+        expected = FunctionExpression.of(\"prefers-reduced-motion\", null, _ -> null, true);\n@@ -146,2 +145,2 @@\n-                FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true, DEFAULT_AWARENESS),\n-                FunctionExpression.of(\"prefers-reduced-transparency\", \"no-preference\", _ -> null, false, DEFAULT_AWARENESS)\n+                FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true),\n+                FunctionExpression.of(\"prefers-reduced-transparency\", \"no-preference\", _ -> null, false)\n@@ -151,1 +150,1 @@\n-                    FunctionExpression.of(\"prefers-reduced-motion\", null, _ -> null, true, DEFAULT_AWARENESS)\n+                    FunctionExpression.of(\"prefers-reduced-motion\", null, _ -> null, true)\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/media\/MediaQuerySerializerTest.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-import static com.sun.javafx.css.media.MediaQuery.DEFAULT_AWARENESS;\n@@ -64,1 +63,1 @@\n-            FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT, DEFAULT_AWARENESS),\n+            FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT),\n@@ -79,1 +78,1 @@\n-            NegationExpression.of(FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT, DEFAULT_AWARENESS)),\n+            NegationExpression.of(FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT)),\n@@ -99,1 +98,1 @@\n-            FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT, DEFAULT_AWARENESS),\n+            FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT),\n@@ -102,1 +101,1 @@\n-            FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true, DEFAULT_AWARENESS),\n+            FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true),\n@@ -119,3 +118,3 @@\n-                FunctionExpression.of(\"prefers-color-scheme\", \"dark\", _ -> null, ColorScheme.DARK, DEFAULT_AWARENESS),\n-                FunctionExpression.of(\"prefers-reduced-motion\", null, _ -> null, true, DEFAULT_AWARENESS),\n-                FunctionExpression.of(\"prefers-reduced-transparency\", \"no-preference\", _ -> null, false, DEFAULT_AWARENESS)\n+                FunctionExpression.of(\"prefers-color-scheme\", \"dark\", _ -> null, ColorScheme.DARK),\n+                FunctionExpression.of(\"prefers-reduced-motion\", null, _ -> null, true),\n+                FunctionExpression.of(\"prefers-reduced-transparency\", \"no-preference\", _ -> null, false)\n@@ -138,2 +137,2 @@\n-                FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT, DEFAULT_AWARENESS),\n-                FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true, DEFAULT_AWARENESS)\n+                FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT),\n+                FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true)\n@@ -159,3 +158,3 @@\n-                    FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT, DEFAULT_AWARENESS),\n-                    FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> false, true, DEFAULT_AWARENESS)),\n-                FunctionExpression.of(\"prefers-reduced-transparency\", \"no-preference\", _ -> false, false, DEFAULT_AWARENESS)\n+                    FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT),\n+                    FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> false, true)),\n+                FunctionExpression.of(\"prefers-reduced-transparency\", \"no-preference\", _ -> false, false)\n@@ -179,2 +178,2 @@\n-                FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT, DEFAULT_AWARENESS),\n-                FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true, DEFAULT_AWARENESS)\n+                FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT),\n+                FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true)\n@@ -200,3 +199,3 @@\n-                    FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT, DEFAULT_AWARENESS),\n-                    FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> false, true, DEFAULT_AWARENESS)),\n-                FunctionExpression.of(\"-fx-prefers-persistent-scrollbars\", \"persistent\", _ -> false, true, DEFAULT_AWARENESS)\n+                    FunctionExpression.of(\"prefers-color-scheme\", \"light\", _ -> null, ColorScheme.LIGHT),\n+                    FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> false, true)),\n+                FunctionExpression.of(\"-fx-prefers-persistent-scrollbars\", \"persistent\", _ -> false, true)\n@@ -234,1 +233,1 @@\n-            FunctionExpression.of(\"prefers-reduced-motion\", null, _ -> null, true, DEFAULT_AWARENESS),\n+            FunctionExpression.of(\"prefers-reduced-motion\", null, _ -> null, true),\n@@ -249,1 +248,1 @@\n-            FunctionExpression.of(\"prefers-reduced-transparency\", null, _ -> null, true, DEFAULT_AWARENESS),\n+            FunctionExpression.of(\"prefers-reduced-transparency\", null, _ -> null, true),\n@@ -264,1 +263,1 @@\n-            FunctionExpression.of(\"-fx-prefers-persistent-scrollbars\", null, _ -> null, true, DEFAULT_AWARENESS),\n+            FunctionExpression.of(\"-fx-prefers-persistent-scrollbars\", null, _ -> null, true),\n@@ -348,1 +347,1 @@\n-                FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true, DEFAULT_AWARENESS),\n+                FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true),\n@@ -379,1 +378,1 @@\n-                FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true, DEFAULT_AWARENESS)\n+                FunctionExpression.of(\"prefers-reduced-motion\", \"reduce\", _ -> null, true)\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssParser_mediaQuery_Test.java","additions":22,"deletions":23,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -817,1 +817,1 @@\n-            FunctionExpression.of(\"prefers-color-scheme\", \"dark\", _ -> null, ColorScheme.DARK, MediaQuery.DEFAULT_AWARENESS),\n+            FunctionExpression.of(\"prefers-color-scheme\", \"dark\", _ -> null, ColorScheme.DARK),\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StylesheetTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}