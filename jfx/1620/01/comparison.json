{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,3 +44,0 @@\n-import java.security.AccessControlContext;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -114,5 +111,0 @@\n-    @SuppressWarnings(\"removal\")\n-    private AccessControlContext getAccessContext() {\n-        return accessor.getPage().getAccessControlContext();\n-    }\n-\n@@ -125,3 +117,1 @@\n-            @SuppressWarnings(\"removal\")\n-            WebEngine popup = AccessController.doPrivileged(\n-                    (PrivilegedAction<WebEngine>) () -> w.getCreatePopupHandler().call(pf), getAccessContext());\n+            WebEngine popup = w.getCreatePopupHandler().call(pf);\n@@ -133,1 +123,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -135,4 +124,1 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            handler.handle(ev);\n-            return null;\n-        }, getAccessContext());\n+        handler.handle(ev);\n@@ -200,1 +186,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -204,2 +189,1 @@\n-            return AccessController.doPrivileged(\n-                    (PrivilegedAction<Boolean>) () -> w.getConfirmHandler().call(text), getAccessContext());\n+            return w.getConfirmHandler().call(text);\n@@ -210,1 +194,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -215,2 +198,1 @@\n-            return AccessController.doPrivileged(\n-                    (PrivilegedAction<String>) () -> w.getPromptHandler().call(data), getAccessContext());\n+            return w.getPromptHandler().call(data);\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/UIClientImpl.java","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -53,4 +51,2 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final boolean backBufferSupported = Boolean.valueOf(\n-        AccessController.doPrivileged((PrivilegedAction<String>) () -> System.getProperty(\n-            \"com.sun.webkit.pagebackbuffer\", \"true\")));\n+    private static final boolean backBufferSupported =\n+        Boolean.valueOf(System.getProperty(\"com.sun.webkit.pagebackbuffer\", \"true\"));\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/WebPageClientImpl.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,2 +56,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -84,4 +82,2 @@\n-    @SuppressWarnings(\"removal\")\n-    private final static boolean DEBUG_DRAW_CLIP_SHAPE = Boolean.valueOf(\n-            AccessController.doPrivileged((PrivilegedAction<String>) () ->\n-            System.getProperty(\"com.sun.webkit.debugDrawClipShape\", \"false\")));\n+    private final static boolean DEBUG_DRAW_CLIP_SHAPE =\n+        Boolean.valueOf(System.getProperty(\"com.sun.webkit.debugDrawClipShape\", \"false\"));\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCGraphicsPrismContext.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import java.security.PrivilegedAction;\n@@ -62,11 +61,9 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = java.security.AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            \/*\n-             * The thread must be a member of a thread group\n-             * which will not get GCed before VM exit.\n-             * Make its parent the top-level thread group.\n-             *\/\n-            ThreadGroup tg = Thread.currentThread().getThreadGroup();\n-            for (ThreadGroup tgn = tg;\n-                    tgn != null;\n-                    tg = tgn, tgn = tg.getParent());\n+        \/*\n+         * The thread must be a member of a thread group\n+         * which will not get GCed before VM exit.\n+         * Make its parent the top-level thread group.\n+         *\/\n+        ThreadGroup tg = Thread.currentThread().getThreadGroup();\n+        for (ThreadGroup tgn = tg;\n+                tgn != null;\n+                tg = tgn, tgn = tg.getParent());\n@@ -74,6 +71,4 @@\n-            Thread t = new Thread(tg, disposerInstance, \"Disposer\");\n-            t.setDaemon(true);\n-            t.setPriority(Thread.MAX_PRIORITY);\n-            t.start();\n-            return null;\n-        });\n+        Thread t = new Thread(tg, disposerInstance, \"Disposer\");\n+        t.setDaemon(true);\n+        t.setPriority(Thread.MAX_PRIORITY);\n+        t.start();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/Disposer.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -39,4 +37,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final boolean logAccessErrors\n-            = AccessController.doPrivileged((PrivilegedAction<Boolean>) ()\n-                    -> Boolean.getBoolean(\"sun.reflect.debugModuleAccessChecks\"));\n+    private static final boolean logAccessErrors = Boolean.getBoolean(\"sun.reflect.debugModuleAccessChecks\");\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/MethodHelper.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -45,1 +42,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -48,3 +44,1 @@\n-            mode = Boolean.valueOf(AccessController.doPrivileged(\n-                    (PrivilegedAction<String>) () -> System.getProperty(\n-                            \"com.sun.webkit.platformticks\", \"true\"))) ? Mode.PLATFORM_TICKS : Mode.SEPARATE_THREAD;\n+            mode = Boolean.valueOf(System.getProperty(\"com.sun.webkit.platformticks\", \"true\")) ? Mode.PLATFORM_TICKS : Mode.SEPARATE_THREAD;\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/Timer.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedActionException;\n-import java.security.PrivilegedExceptionAction;\n@@ -123,3 +120,2 @@\n-            return AccessController.doPrivileged((PrivilegedExceptionAction<Object>)\n-                    () -> MethodHelper.invoke(method, instance, args), acc);\n-        } catch (PrivilegedActionException ex) {\n+            return MethodHelper.invoke(method, instance, args);\n+        } catch (InvocationTargetException ex) {\n@@ -127,6 +123,1 @@\n-            if (cause == null)\n-                cause = ex;\n-            else if (cause instanceof InvocationTargetException\n-                && cause.getCause() != null)\n-                cause = cause.getCause();\n-            throw cause;\n+            throw cause != null ? cause : ex;\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/Utilities.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,3 +48,0 @@\n-import java.security.AccessControlContext;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -106,4 +103,0 @@\n-    \/\/ The access control context associated with this object\n-    @SuppressWarnings(\"removal\")\n-    private final AccessControlContext accessControlContext;\n-\n@@ -137,12 +130,9 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            NativeLibLoader.loadLibrary(\"jfxwebkit\");\n-            log.finer(\"jfxwebkit loaded\");\n-\n-            if (CookieHandler.getDefault() == null) {\n-                boolean setDefault = Boolean.valueOf(System.getProperty(\n-                        \"com.sun.webkit.setDefaultCookieHandler\",\n-                        \"true\"));\n-                if (setDefault) {\n-                    CookieHandler.setDefault(new CookieManager());\n-                }\n+        NativeLibLoader.loadLibrary(\"jfxwebkit\");\n+        log.finer(\"jfxwebkit loaded\");\n+\n+        if (CookieHandler.getDefault() == null) {\n+            boolean setDefault = Boolean.valueOf(System.getProperty(\n+                    \"com.sun.webkit.setDefaultCookieHandler\",\n+                    \"true\"));\n+            if (setDefault) {\n+                CookieHandler.setDefault(new CookieManager());\n@@ -150,0 +140,1 @@\n+        }\n@@ -151,12 +142,4 @@\n-            final boolean useJIT = Boolean.valueOf(System.getProperty(\n-                    \"com.sun.webkit.useJIT\", \"true\"));\n-            final boolean useDFGJIT = Boolean.valueOf(System.getProperty(\n-                    \"com.sun.webkit.useDFGJIT\", \"false\"));\n-\n-            \/\/ TODO: Enable CSS3D by default once it is stabilized.\n-            boolean useCSS3D = Boolean.valueOf(System.getProperty(\n-                    \"com.sun.webkit.useCSS3D\", \"false\"));\n-            useCSS3D = useCSS3D && Platform.isSupported(ConditionalFeature.SCENE3D);\n-\n-            \/\/ Initialize WTF, WebCore and JavaScriptCore.\n-            twkInitWebCore(useJIT, useDFGJIT, useCSS3D);\n+        final boolean useJIT = Boolean.valueOf(System.getProperty(\n+                \"com.sun.webkit.useJIT\", \"true\"));\n+        final boolean useDFGJIT = Boolean.valueOf(System.getProperty(\n+                \"com.sun.webkit.useDFGJIT\", \"false\"));\n@@ -164,7 +147,4 @@\n-            \/\/ Inform the native webkit code when either the JVM or the\n-            \/\/ JavaFX runtime is being shutdown\n-            final Runnable shutdownHook = () -> {\n-                synchronized(WebPage.class) {\n-                    MainThread.twkSetShutdown(true);\n-                }\n-            };\n+        \/\/ TODO: Enable CSS3D by default once it is stabilized.\n+        boolean useCSS3D = Boolean.valueOf(System.getProperty(\n+                \"com.sun.webkit.useCSS3D\", \"false\"));\n+        useCSS3D = useCSS3D && Platform.isSupported(ConditionalFeature.SCENE3D);\n@@ -172,3 +152,2 @@\n-            \/\/ Register shutdown hook with the Java runtime and the Toolkit\n-            Toolkit.getToolkit().addShutdownHook(shutdownHook);\n-            Runtime.getRuntime().addShutdownHook(new Thread(shutdownHook));\n+        \/\/ Initialize WTF, WebCore and JavaScriptCore.\n+        twkInitWebCore(useJIT, useDFGJIT, useCSS3D);\n@@ -176,2 +155,7 @@\n-            return null;\n-        });\n+        \/\/ Inform the native webkit code when either the JVM or the\n+        \/\/ JavaFX runtime is being shutdown\n+        final Runnable shutdownHook = () -> {\n+            synchronized(WebPage.class) {\n+                MainThread.twkSetShutdown(true);\n+            }\n+        };\n@@ -179,0 +163,3 @@\n+        \/\/ Register shutdown hook with the Java runtime and the Toolkit\n+        Toolkit.getToolkit().addShutdownHook(shutdownHook);\n+        Runtime.getRuntime().addShutdownHook(new Thread(shutdownHook));\n@@ -213,4 +200,0 @@\n-        @SuppressWarnings(\"removal\")\n-        AccessControlContext tmpAcc = AccessController.getContext();\n-        accessControlContext = tmpAcc;\n-\n@@ -244,10 +227,0 @@\n-    \/**\n-     * Returns the access control context associated with this object.\n-     * May be called on any thread.\n-     * @return the access control context associated with this object\n-     *\/\n-    @SuppressWarnings(\"removal\")\n-    public AccessControlContext getAccessControlContext() {\n-        return accessControlContext;\n-    }\n-\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/WebPage.java","additions":31,"deletions":58,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -45,3 +43,1 @@\n-        @SuppressWarnings(\"removal\")\n-        CookieHandler handler =\n-            AccessController.doPrivileged((PrivilegedAction<CookieHandler>) CookieHandler::getDefault);\n+        CookieHandler handler = CookieHandler.getDefault();\n@@ -69,3 +65,1 @@\n-        @SuppressWarnings(\"removal\")\n-        CookieHandler handler =\n-            AccessController.doPrivileged((PrivilegedAction<CookieHandler>) CookieHandler::getDefault);\n+        CookieHandler handler = CookieHandler.getDefault();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/CookieJar.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,3 +54,0 @@\n-import java.security.AccessControlException;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -93,3 +90,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private final static HttpClient HTTP_CLIENT =\n-        AccessController.doPrivileged((PrivilegedAction<HttpClient>) () -> HttpClient.newBuilder()\n+    private final static HttpClient HTTP_CLIENT = HttpClient.newBuilder()\n@@ -100,1 +95,1 @@\n-                .build());\n+                .build();\n@@ -106,4 +101,1 @@\n-       @SuppressWarnings(\"removal\")\n-       int bufSize  = AccessController.doPrivileged(\n-                        (PrivilegedAction<Integer>) () ->\n-                            Integer.valueOf(System.getProperty(\"jdk.httpclient.bufsize\", Integer.toString(DEFAULT_BUFSIZE))));\n+       int bufSize  = Integer.valueOf(System.getProperty(\"jdk.httpclient.bufsize\", Integer.toString(DEFAULT_BUFSIZE)));\n@@ -401,4 +393,1 @@\n-        \/\/ Run the HttpClient in the page's access control context\n-        @SuppressWarnings(\"removal\")\n-        var tmpResponse = AccessController.doPrivileged((PrivilegedAction<CompletableFuture<Void>>) () -> {\n-            return HTTP_CLIENT.sendAsync(request, bodyHandler)\n+        this.response = HTTP_CLIENT.sendAsync(request, bodyHandler)\n@@ -407,2 +396,0 @@\n-        }, webPage.getAccessControlContext());\n-        this.response = tmpResponse;\n@@ -579,2 +566,0 @@\n-            } catch (@SuppressWarnings(\"removal\") AccessControlException ex) {\n-                errorCode = LoadListenerClient.PERMISSION_DENIED;\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/HTTP2Loader.java","additions":5,"deletions":20,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -95,8 +93,4 @@\n-        @SuppressWarnings(\"removal\")\n-        boolean tmp = AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n-            \/\/ Use HTTP2 by default on JDK 12 or later\n-            final var version = Runtime.Version.parse(System.getProperty(\"java.version\"));\n-            final String defaultUseHTTP2 = version.feature() >= 12 ? \"true\" : \"false\";\n-            return Boolean.valueOf(System.getProperty(\"com.sun.webkit.useHTTP2Loader\", defaultUseHTTP2));\n-        });\n-        useHTTP2Loader = tmp;\n+        \/\/ Use HTTP2 by default on JDK 12 or later\n+        final var version = Runtime.Version.parse(System.getProperty(\"java.version\"));\n+        final String defaultUseHTTP2 = version.feature() >= 12 ? \"true\" : \"false\";\n+        useHTTP2Loader = Boolean.valueOf(System.getProperty(\"com.sun.webkit.useHTTP2Loader\", defaultUseHTTP2));\n@@ -221,3 +215,1 @@\n-        @SuppressWarnings(\"removal\")\n-        int propValue = AccessController.doPrivileged(\n-                (PrivilegedAction<Integer>) () -> Integer.getInteger(\"http.maxConnections\", -1));\n+        int propValue = Integer.getInteger(\"http.maxConnections\", -1);\n@@ -238,7 +230,0 @@\n-        \/\/ Need to assert the modifyThread and modifyThreadGroup permission when\n-        \/\/ creating the thread from the URLLoaderThreadFactory, so we can\n-        \/\/ create the thread with the desired ThreadGroup.\n-        \/\/ Note that this is needed when running with a security manager\n-        private static final Permission modifyThreadGroupPerm = new RuntimePermission(\"modifyThreadGroup\");\n-        private static final Permission modifyThreadPerm = new RuntimePermission(\"modifyThread\");\n-\n@@ -252,1 +237,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -255,13 +239,6 @@\n-            \/\/ Assert the modifyThread and modifyThreadGroup permissions\n-            return\n-                AccessController.doPrivileged((PrivilegedAction<Thread>) () -> {\n-                    Thread t = new Thread(group, r,\n-                            \"URL-Loader-\" + index.getAndIncrement());\n-                    t.setDaemon(true);\n-                    if (t.getPriority() != Thread.NORM_PRIORITY) {\n-                        t.setPriority(Thread.NORM_PRIORITY);\n-                    }\n-                    return t;\n-                },\n-                null,\n-                modifyThreadGroupPerm, modifyThreadPerm);\n+            Thread t = new Thread(group, r, \"URL-Loader-\" + index.getAndIncrement());\n+            t.setDaemon(true);\n+            if (t.getPriority() != Thread.NORM_PRIORITY) {\n+                t.setPriority(Thread.NORM_PRIORITY);\n+            }\n+            return t;\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/NetworkContext.java","additions":12,"deletions":35,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import com.sun.javafx.logging.PlatformLogger;\n-import com.sun.javafx.logging.PlatformLogger.Level;\n-\n@@ -39,2 +36,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -44,0 +39,1 @@\n+import java.util.function.BooleanSupplier;\n@@ -46,0 +42,2 @@\n+import com.sun.javafx.logging.PlatformLogger;\n+import com.sun.javafx.logging.PlatformLogger.Level;\n@@ -75,3 +73,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final File pslFile = AccessController.doPrivileged((PrivilegedAction<File>)\n-        () -> new File(System.getProperty(\"java.home\"), \"lib\/security\/public_suffix_list.dat\"));\n+    private static final File pslFile = new File(System.getProperty(\"java.home\"), \"lib\/security\/public_suffix_list.dat\");\n@@ -83,10 +79,8 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final boolean pslFileExists = AccessController.doPrivileged(\n-        (PrivilegedAction<Boolean>) () -> {\n-            if (!pslFile.exists()) {\n-                logger.warning(\"Resource not found: \" +\n-                    \"lib\/security\/public_suffix_list.dat\");\n-                return false;\n-            }\n-            return true;\n-        });\n+    private static final boolean pslFileExists = ((BooleanSupplier)() -> {\n+        if (!pslFile.exists()) {\n+            logger.warning(\"Resource not found: \" +\n+                \"lib\/security\/public_suffix_list.dat\");\n+            return false;\n+        }\n+        return true;\n+    }).getAsBoolean();\n@@ -200,13 +194,7 @@\n-            @SuppressWarnings(\"removal\")\n-            InputStream is = AccessController.doPrivileged(\n-                (PrivilegedAction<InputStream>) () -> {\n-                    try {\n-                        return new FileInputStream(pslFile);\n-                    } catch (FileNotFoundException ex) {\n-                        logger.warning(\"Resource not found: \" +\n-                                \"lib\/security\/public_suffix_list.dat\");\n-                        return null;\n-                    }\n-                }\n-            );\n-            return is;\n+            try {\n+                return new FileInputStream(pslFile);\n+            } catch (FileNotFoundException ex) {\n+                logger.warning(\"Resource not found: \" +\n+                    \"lib\/security\/public_suffix_list.dat\");\n+                return null;\n+            }\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/PublicSuffixes.java","additions":20,"deletions":32,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,2 +46,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -104,1 +102,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -117,5 +114,0 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            doRun();\n-            return null;\n-        }, webPage.getAccessControlContext());\n-    }\n@@ -123,1 +115,0 @@\n-    private void doRun() {\n@@ -212,3 +203,1 @@\n-        @SuppressWarnings(\"removal\")\n-        ProxySelector proxySelector = AccessController.doPrivileged(\n-                (PrivilegedAction<ProxySelector>) () -> ProxySelector.getDefault());\n+        ProxySelector proxySelector = ProxySelector.getDefault();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/SocketStreamHandle.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,3 +54,0 @@\n-import java.security.AccessControlException;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -125,1 +122,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -128,11 +124,0 @@\n-        \/\/ Run the loader in the page's access control context\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            doRun();\n-            return null;\n-        }, webPage.getAccessControlContext());\n-    }\n-\n-    \/**\n-     * Executes this loader.\n-     *\/\n-    private void doRun() {\n@@ -189,3 +174,0 @@\n-        } catch (@SuppressWarnings(\"removal\") AccessControlException ex) {\n-            error = ex;\n-            errorCode = LoadListenerClient.PERMISSION_DENIED;\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/URLLoader.java","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.net.NetPermission;\n@@ -32,3 +31,0 @@\n-import java.security.AccessController;\n-import java.security.Permission;\n-import java.security.PrivilegedAction;\n@@ -50,3 +46,0 @@\n-    private static final Permission streamHandlerPermission =\n-        new NetPermission(\"specifyStreamHandler\");\n-\n@@ -99,19 +92,1 @@\n-            try {\n-                \/\/ We should be able to specify one of our stream handlers for the URL\n-                \/\/ when running with a security manager\n-                @SuppressWarnings(\"removal\")\n-                URL result = AccessController.doPrivileged((PrivilegedAction<URL>) () -> {\n-                    try {\n-                        return new URL(context, spec, handler);\n-                    } catch (MalformedURLException muex) {\n-                        throw new RuntimeException(muex);\n-                    }\n-                }, null, streamHandlerPermission);\n-                return result;\n-\n-            } catch (RuntimeException re) {\n-                if (re.getCause() instanceof MalformedURLException) {\n-                    throw (MalformedURLException)re.getCause();\n-                }\n-                throw re;\n-            }\n+            return new URL(context, spec, handler);\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/URLs.java","additions":2,"deletions":27,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,4 +74,0 @@\n-\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -833,3 +829,1 @@\n-        @SuppressWarnings(\"removal\")\n-        Image icon = AccessController.doPrivileged((PrivilegedAction<Image>) () -> new Image(HTMLEditorSkin.class.getResource(iconName).toString()));\n-\/\/        button.setGraphic(new ImageView(icon));\n+        Image icon = new Image(HTMLEditorSkin.class.getResource(iconName).toString());\n@@ -837,0 +831,1 @@\n+\/\/      button.setGraphic(new ImageView(icon));\n@@ -858,2 +853,1 @@\n-        @SuppressWarnings(\"removal\")\n-        Image icon = AccessController.doPrivileged((PrivilegedAction<Image>) () -> new Image(HTMLEditorSkin.class.getResource(iconName).toString()));\n+        Image icon = new Image(HTMLEditorSkin.class.getResource(iconName).toString());\n@@ -861,1 +855,1 @@\n-\/\/        toggleButton.setGraphic(new ImageView(icon));\n+\/\/      toggleButton.setGraphic(new ImageView(icon));\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/HTMLEditorSkin.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,2 +69,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -1584,4 +1582,1 @@\n-                    AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-                        messageCallback.call(message);\n-                        return null;\n-                    }, webEngine.page.getAccessControlContext());\n+                    messageCallback.call(message);\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/WebEngine.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"}]}