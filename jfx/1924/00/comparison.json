{"files":[{"patch":"@@ -189,0 +189,1 @@\n+        bool in_preedit_window;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-    if (im_ctx.on_preedit || !im_ctx.on_key_event) {\n+    if (im_ctx.in_preedit_window || !im_ctx.on_key_event) {\n@@ -128,0 +128,8 @@\n+    \/\/ If \"commit\" arrives while pre-editing is active we send out an\n+    \/\/ InputMethodEvent; otherwise we send out a KeyEvent. Normally the\n+    \/\/ \"commit\" signal arrives before \"preedit-end\" but sometimes when\n+    \/\/ processing dead keys on a system with no input method\n+    \/\/ framework these signals arrive in reverse order. This flag\n+    \/\/ ensures that if we're in the pre-edit window when we start\n+    \/\/ filtering the event we stay there until we're done.\n+    im_ctx.in_preedit_window = im_ctx.on_preedit;\n@@ -129,0 +137,1 @@\n+    im_ctx.in_preedit_window = im_ctx.on_preedit;\n@@ -186,0 +195,2 @@\n+    im_ctx.on_key_event = false;\n+    im_ctx.in_preedit_window = false;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window_ime.cpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"}]}