{"files":[{"patch":"@@ -1341,0 +1341,1 @@\n+                    ParsedValue<?, ?> resolvedParsedValue = resolved.getParsedValue();\n@@ -1342,2 +1343,1 @@\n-                    if (resolves.contains(resolved.getParsedValue())) {\n-\n+                    if (!resolves.add(resolvedParsedValue)) {\n@@ -1347,1 +1347,0 @@\n-                        throw new IllegalArgumentException(\"Loop detected in \" + resolved.getRule().toString() + \" while resolving '\" + sval + \"'\");\n@@ -1349,2 +1348,1 @@\n-                    } else {\n-                        resolves.add(parsedValue);\n+                        throw new IllegalArgumentException(\"Loop detected in \" + resolved.getRule().toString() + \" while resolving '\" + sval + \"'\");\n@@ -1368,1 +1366,1 @@\n-                    ParsedValue pv = resolveLookups(styleable, resolved.getParsedValue(), styleMap, states, whence, resolves);\n+                    ParsedValue<?, ?> pv = resolveLookups(styleable, resolvedParsedValue, styleMap, states, whence, resolves);\n@@ -1370,3 +1368,1 @@\n-                    if (resolves != null) {\n-                        resolves.remove(parsedValue);\n-                    }\n+                    resolves.remove(resolvedParsedValue);\n@@ -1401,2 +1397,0 @@\n-            resolves.clear();\n-\n@@ -1416,2 +1410,0 @@\n-            resolves.clear();\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/CssStyleHelper.java","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+import javafx.css.CssParser.ParseError;\n+import javafx.css.CssParser.ParseError.PropertySetError;\n@@ -40,0 +42,1 @@\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n@@ -660,0 +663,151 @@\n+\n+    @Test\n+    public void shouldDetectSimpleInfiniteLoop() throws IOException {\n+        Stylesheet stylesheet = new CssParser().parse(\n+            \"userAgentStyleSheet\",\n+            \"\"\"\n+                .root {\n+                    -fx-base-fill: -fx-base;\n+                    -fx-base: -fx-base-color;\n+                    -fx-base-color: -fx-base-fill;\n+                }\n+\n+                .pane {\n+                    -fx-background-color: -fx-base;\n+                }\n+            \"\"\"\n+        );\n+\n+        StyleManager.getInstance().setDefaultUserAgentStylesheet(stylesheet);\n+        Pane a = new Pane();\n+\n+        a.getStyleClass().add(\"pane\");\n+\n+        root.getChildren().addAll(a);\n+\n+        assertDoesNotThrow(() -> stage.show());  \/\/ This should not result in a StackOverflowError\n+        assertEquals(1, CssParser.errorsProperty().size());\n+\n+        ParseError error = CssParser.errorsProperty().getFirst();\n+\n+        assertEquals(PropertySetError.class, error.getClass());\n+\n+        \/\/ Note: on Windows, the message is using inconsistent line endings (sometimes Windows, sometimes Linux)\n+        \/\/ so I've stripped it.\n+        assertEquals(\n+            \"\"\"\n+            Caught java.lang.IllegalArgumentException: Loop detected in *.root{\n+            \\t-fx-base-fill: <Value lookup=\"true\">\n+              <value>-fx-base<\/value>\n+              <converter>null<\/converter>\n+            <\/Value>\n+            \\t-fx-base: <Value lookup=\"true\">\n+              <value>-fx-base-color<\/value>\n+              <converter>null<\/converter>\n+            <\/Value>\n+            \\t-fx-base-color: <Value lookup=\"true\">\n+              <value>-fx-base-fill<\/value>\n+              <converter>null<\/converter>\n+            <\/Value>\n+            } while resolving '-fx-base'' while calculating value for '-fx-background-color' from rule '*.pane' in stylesheet userAgentStyleSheet\\\n+            \"\"\",\n+            error.getMessage().replace(\"\\r\", \"\")\n+        );\n+    }\n+\n+    @Test\n+    public void shouldDetectNestedInfiniteLoop() throws IOException {\n+        Stylesheet stylesheet = new CssParser().parse(\n+            \"userAgentStyleSheet\",\n+            \"\"\"\n+                .root {\n+                    -fx-base-fill: ladder(-fx-base, white 49%, black 50%);\n+                    -fx-base: ladder(-fx-base-fill, white 49%, black 50%);\n+                }\n+\n+                .pane {\n+                    -fx-background-color: -fx-base;\n+                }\n+            \"\"\"\n+        );\n+\n+        StyleManager.getInstance().setDefaultUserAgentStylesheet(stylesheet);\n+        Pane a = new Pane();\n+\n+        a.getStyleClass().add(\"pane\");\n+\n+        root.getChildren().addAll(a);\n+\n+        assertDoesNotThrow(() -> stage.show());  \/\/ This should not result in a StackOverflowError\n+        assertEquals(1, CssParser.errorsProperty().size());\n+\n+        ParseError error = CssParser.errorsProperty().getFirst();\n+\n+        assertEquals(PropertySetError.class, error.getClass());\n+\n+        \/\/ Note: on Windows, the message is using inconsistent line endings (sometimes Windows, sometimes Linux)\n+        \/\/ so I've stripped it.\n+        assertEquals(\n+            \"\"\"\n+            Caught java.lang.IllegalArgumentException: Loop detected in *.root{\n+            \\t-fx-base-fill: <Value>\n+              <value values=\"3\">\n+                <Value lookup=\"true\">\n+                  <value>-fx-base<\/value>\n+                  <converter>null<\/converter>\n+                <\/Value>    <Value>\n+                  <value values=\"2\">\n+                    <Value>\n+                      <value>49.0%<\/value>\n+                      <converter>null<\/converter>\n+                    <\/Value>        <Value>\n+                      <value>0xffffffff<\/value>\n+                      <converter>null<\/converter>\n+                    <\/Value>      <\/value>\n+                  <converter>StopConverter<\/converter>\n+                <\/Value>    <Value>\n+                  <value values=\"2\">\n+                    <Value>\n+                      <value>50.0%<\/value>\n+                      <converter>null<\/converter>\n+                    <\/Value>        <Value>\n+                      <value>0x000000ff<\/value>\n+                      <converter>null<\/converter>\n+                    <\/Value>      <\/value>\n+                  <converter>StopConverter<\/converter>\n+                <\/Value>  <\/value>\n+              <converter>LadderConverter<\/converter>\n+            <\/Value>\n+            \\t-fx-base: <Value>\n+              <value values=\"3\">\n+                <Value lookup=\"true\">\n+                  <value>-fx-base-fill<\/value>\n+                  <converter>null<\/converter>\n+                <\/Value>    <Value>\n+                  <value values=\"2\">\n+                    <Value>\n+                      <value>49.0%<\/value>\n+                      <converter>null<\/converter>\n+                    <\/Value>        <Value>\n+                      <value>0xffffffff<\/value>\n+                      <converter>null<\/converter>\n+                    <\/Value>      <\/value>\n+                  <converter>StopConverter<\/converter>\n+                <\/Value>    <Value>\n+                  <value values=\"2\">\n+                    <Value>\n+                      <value>50.0%<\/value>\n+                      <converter>null<\/converter>\n+                    <\/Value>        <Value>\n+                      <value>0x000000ff<\/value>\n+                      <converter>null<\/converter>\n+                    <\/Value>      <\/value>\n+                  <converter>StopConverter<\/converter>\n+                <\/Value>  <\/value>\n+              <converter>LadderConverter<\/converter>\n+            <\/Value>\n+            } while resolving '-fx-base'' while calculating value for '-fx-background-color' from rule '*.pane' in stylesheet userAgentStyleSheet\\\n+            \"\"\",\n+            error.getMessage().replace(\"\\r\", \"\")\n+        );\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/CssStyleHelperTest.java","additions":154,"deletions":0,"binary":false,"changes":154,"status":"modified"}]}