{"files":[{"patch":"@@ -1338,0 +1338,1 @@\n+                    ParsedValue<?, ?> resolvedParsedValue = resolved.getParsedValue();\n@@ -1339,2 +1340,1 @@\n-                    if (resolves.contains(resolved.getParsedValue())) {\n-\n+                    if (!resolves.add(resolvedParsedValue)) {\n@@ -1344,1 +1344,0 @@\n-                        throw new IllegalArgumentException(\"Loop detected in \" + resolved.getRule().toString() + \" while resolving '\" + sval + \"'\");\n@@ -1346,2 +1345,1 @@\n-                    } else {\n-                        resolves.add(parsedValue);\n+                        throw new IllegalArgumentException(\"Loop detected in \" + resolved.getRule().toString() + \" while resolving '\" + sval + \"'\");\n@@ -1365,1 +1363,1 @@\n-                    ParsedValue pv = resolveLookups(styleable, resolved.getParsedValue(), styleMap, states, whence, resolves);\n+                    ParsedValue<?, ?> pv = resolveLookups(styleable, resolvedParsedValue, styleMap, states, whence, resolves);\n@@ -1367,3 +1365,1 @@\n-                    if (resolves != null) {\n-                        resolves.remove(parsedValue);\n-                    }\n+                    resolves.remove(resolvedParsedValue);\n@@ -1398,2 +1394,0 @@\n-            resolves.clear();\n-\n@@ -1413,2 +1407,0 @@\n-            resolves.clear();\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/CssStyleHelper.java","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import static org.junit.Assert.assertNull;\n@@ -44,0 +43,1 @@\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n@@ -661,0 +661,53 @@\n+\n+    @Test\n+    public void shouldDetectSimpleInfiniteLoop() throws IOException {\n+        Stylesheet stylesheet = new CssParser().parse(\n+            \"userAgentStyleSheet\",\n+            \"\"\"\n+                .root {\n+                    -fx-base-fill: -fx-base;\n+                    -fx-base: -fx-base-color;\n+                    -fx-base-color: -fx-base-fill;\n+                }\n+\n+                .pane {\n+                    -fx-background-color: -fx-base;\n+                }\n+            \"\"\"\n+        );\n+\n+        StyleManager.getInstance().setDefaultUserAgentStylesheet(stylesheet);\n+        Pane a = new Pane();\n+\n+        a.getStyleClass().add(\"pane\");\n+\n+        root.getChildren().addAll(a);\n+\n+        assertDoesNotThrow(() -> stage.show());  \/\/ This should not result in a StackOverflowError\n+    }\n+\n+    @Test\n+    public void shouldDetectNestedInfiniteLoop() throws IOException {\n+        Stylesheet stylesheet = new CssParser().parse(\n+            \"userAgentStyleSheet\",\n+            \"\"\"\n+                .root {\n+                    -fx-base-fill: ladder(-fx-base, white 49%, black 50%);\n+                    -fx-base: ladder(-fx-base-fill, white 49%, black 50%);\n+                }\n+\n+                .pane {\n+                    -fx-background-color: -fx-base;\n+                }\n+            \"\"\"\n+        );\n+\n+        StyleManager.getInstance().setDefaultUserAgentStylesheet(stylesheet);\n+        Pane a = new Pane();\n+\n+        a.getStyleClass().add(\"pane\");\n+\n+        root.getChildren().addAll(a);\n+\n+        assertDoesNotThrow(() -> stage.show());  \/\/ This should not result in a StackOverflowError\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/CssStyleHelperTest.java","additions":54,"deletions":1,"binary":false,"changes":55,"status":"modified"}]}