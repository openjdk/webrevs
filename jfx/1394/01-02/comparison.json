{"files":[{"patch":"@@ -174,0 +174,10 @@\n+    @Override\n+    protected void show() {\n+        \/\/ The very first show call is just for us to do the correct CSS processing, so we ignore the request here.\n+        if (!cssForced) {\n+            return;\n+        }\n+\n+        super.show();\n+    }\n+\n@@ -1002,0 +1012,5 @@\n+                            \/\/ Note that we do not really show the tooltip but rather do all the necessary setup for\n+                            \/\/ the correct CSS processing.\n+                            \/\/ In this case we especially need the show method to attach all the stylesheets to us\n+                            \/\/ from the owner root window.\n+                            t.show(owner);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Tooltip.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -70,2 +70,13 @@\n-        assertTrue(tooltipShowTime >= 1000);\n-        assertTrue(tooltipShowTime <= 1100);\n+        assertTooltipShowDelay(tooltipShowTime, 1000);\n+    }\n+\n+    @Test\n+    public void testCssStylesheetTooltip() {\n+        scene.getStylesheets().add(getClass().getResource(\"Tooltip.css\").toExternalForm());\n+\n+        assertFalse(tooltip.isShowing());\n+\n+        long tooltipShowTime = waitForTooltip();\n+\n+        assertTrue(tooltip.isShowing());\n+        assertTooltipShowDelay(tooltipShowTime, 50);\n@@ -83,2 +94,1 @@\n-        assertTrue(tooltipShowTime >= 100);\n-        assertTrue(tooltipShowTime <= 200);\n+        assertTooltipShowDelay(tooltipShowTime, 100);\n@@ -96,3 +106,1 @@\n-\n-        assertTrue(tooltipShowTime >= 100);\n-        assertTrue(tooltipShowTime <= 200);\n+        assertTooltipShowDelay(tooltipShowTime, 100);\n@@ -110,3 +118,1 @@\n-\n-        assertTrue(tooltipShowTime >= 100);\n-        assertTrue(tooltipShowTime <= 200);\n+        assertTooltipShowDelay(tooltipShowTime, 100);\n@@ -120,2 +126,1 @@\n-        assertTrue(tooltipShowTime >= 2000);\n-        assertTrue(tooltipShowTime <= 2100);\n+        assertTooltipShowDelay(tooltipShowTime, 2000);\n@@ -133,2 +138,1 @@\n-        assertTrue(tooltipShowTime >= 100);\n-        assertTrue(tooltipShowTime <= 200);\n+        assertTooltipShowDelay(tooltipShowTime, 100);\n@@ -142,2 +146,1 @@\n-        assertTrue(tooltipShowTime >= 2000);\n-        assertTrue(tooltipShowTime <= 2100);\n+        assertTooltipShowDelay(tooltipShowTime, 2000);\n@@ -158,2 +161,1 @@\n-        assertTrue(tooltipShowTime >= 100);\n-        assertTrue(tooltipShowTime <= 200);\n+        assertTooltipShowDelay(tooltipShowTime, 100);\n@@ -169,2 +171,1 @@\n-        assertTrue(tooltipShowTime >= 100);\n-        assertTrue(tooltipShowTime <= 200);\n+        assertTooltipShowDelay(tooltipShowTime, 100);\n@@ -204,0 +205,8 @@\n+    private static void assertTooltipShowDelay(long tooltipShowTime, long expectedTime) {\n+        \/\/ To avoid any small timing error we rather check if the value is between.\n+        long maximumTime = expectedTime + 50;\n+\n+        assertTrue(tooltipShowTime >= expectedTime, tooltipShowTime + \" < \" + expectedTime);\n+        assertTrue(tooltipShowTime <= maximumTime, tooltipShowTime + \" > \" + maximumTime);\n+    }\n+\n@@ -237,0 +246,2 @@\n+\n+            scene.getStylesheets().clear();\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/TooltipTest.java","additions":31,"deletions":20,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -0,0 +1,3 @@\n+.tooltip {\n+    -fx-show-delay: 50ms;\n+}\n","filename":"tests\/system\/src\/test\/resources\/test\/robot\/javafx\/scene\/Tooltip.css","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"}]}