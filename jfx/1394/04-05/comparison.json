{"files":[{"patch":"@@ -122,1 +122,0 @@\n-    private boolean cssForced;\n@@ -999,0 +998,3 @@\n+                        \/\/ styles. Note that this is normally done when showing the tooltip,\n+                        \/\/ which is too late for some properties,\n+                        t.applyStylesheetFromOwner(owner);\n@@ -1001,8 +1003,1 @@\n-                        if (!t.cssForced) {\n-                            \/\/ We need to copy the stylesheet from the owner so that we get all the defined tooltip\n-                            \/\/ styles. Note that this is normally done when showing the tooltip,\n-                            \/\/ which is too late for some properties,\n-                            t.applyStylesheetFromOwner(owner);\n-                            t.bridge.applyCss();\n-                            t.cssForced = true;\n-                        }\n+                        t.bridge.applyCss();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Tooltip.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -64,0 +64,4 @@\n+        assertTooltipShowDelay(tooltipShowTime, expectedTime, 50);\n+    }\n+\n+    private static void assertTooltipShowDelay(long tooltipShowTime, long expectedTime, long maximumDifference) {\n@@ -65,1 +69,1 @@\n-        long maximumTime = expectedTime + 50;\n+        long maximumTime = expectedTime + maximumDifference;\n@@ -105,2 +109,22 @@\n-        assertTrue(tooltipShowTime >= expectedTime, tooltipShowTime + \" >= \" + expectedTime);\n-        assertTrue(tooltipShowTime <= maximumTime, tooltipShowTime + \" <= \" + maximumTime);\n+        assertTooltipShowDelay(tooltipShowTime, expectedTime, maximumTime);\n+    }\n+\n+    @Test\n+    void testCssStylesheetChangeTooltip() {\n+        scene.getStylesheets().add(getClass().getResource(\"tooltip.css\").toExternalForm());\n+\n+        assertFalse(tooltip.isShowing());\n+\n+        long tooltipShowTime = waitForTooltip();\n+\n+        assertTrue(tooltip.isShowing());\n+\n+        assertTooltipShowDelay(tooltipShowTime, 30, 100);\n+\n+        scene.getStylesheets().setAll(getClass().getResource(\"tooltip2.css\").toExternalForm());\n+        tooltipShownLatch = new CountDownLatch(1);\n+        tooltipShowTime = waitForTooltip();\n+\n+        assertTrue(tooltip.isShowing());\n+\n+        assertTooltipShowDelay(tooltipShowTime, 200, 100);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/TooltipTest.java","additions":27,"deletions":3,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-    -fx-show-delay: 30ms;\n+    -fx-show-delay: 200ms;\n","filename":"tests\/system\/src\/test\/resources\/test\/robot\/javafx\/scene\/tooltip2.css","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"tests\/system\/src\/test\/resources\/test\/robot\/javafx\/scene\/tooltip.css","status":"copied"}]}