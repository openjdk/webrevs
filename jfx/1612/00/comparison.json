{"files":[{"patch":"@@ -45,2 +45,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -170,8 +168,6 @@\n-        @SuppressWarnings(\"removal\")\n-        Method method = AccessController.doPrivileged((PrivilegedAction<Method>) () -> {\n-            try {\n-                return URLConnection.class.getMethod(\"getContentLengthLong\");\n-            } catch (NoSuchMethodException ex) {\n-                return null;\n-            }\n-        });\n+        Method method;\n+        try {\n+            method = URLConnection.class.getMethod(\"getContentLengthLong\");\n+        } catch (NoSuchMethodException ex) {\n+            method = null;\n+        }\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/locator\/Locator.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -36,3 +36,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedActionException;\n-import java.security.PrivilegedExceptionAction;\n@@ -108,5 +105,4 @@\n-            AccessController.doPrivileged((PrivilegedExceptionAction) () -> {\n-                ArrayList<String> dependencies = new ArrayList<>();\n-                if (PlatformUtil.isWindows() || PlatformUtil.isMac()) {\n-                    NativeLibLoader.loadLibrary(\"glib-lite\");\n-                }\n+            ArrayList<String> dependencies = new ArrayList<>();\n+            if (PlatformUtil.isWindows() || PlatformUtil.isMac()) {\n+                NativeLibLoader.loadLibrary(\"glib-lite\");\n+            }\n@@ -114,31 +110,29 @@\n-                if (!PlatformUtil.isLinux() && !PlatformUtil.isIOS()) {\n-                    NativeLibLoader.loadLibrary(\"gstreamer-lite\");\n-                } else {\n-                    dependencies.add(\"gstreamer-lite\");\n-                }\n-                if (PlatformUtil.isLinux()) {\n-                    dependencies.add(\"fxplugins\");\n-                    dependencies.add(\"avplugin\");\n-                    dependencies.add(\"avplugin-54\");\n-                    dependencies.add(\"avplugin-56\");\n-                    dependencies.add(\"avplugin-57\");\n-                    dependencies.add(\"avplugin-ffmpeg-56\");\n-                    dependencies.add(\"avplugin-ffmpeg-57\");\n-                    dependencies.add(\"avplugin-ffmpeg-58\");\n-                    dependencies.add(\"avplugin-ffmpeg-59\");\n-                    dependencies.add(\"avplugin-ffmpeg-60\");\n-                    dependencies.add(\"avplugin-ffmpeg-61\");\n-                }\n-                if (PlatformUtil.isMac()) {\n-                    dependencies.add(\"fxplugins\");\n-                    dependencies.add(\"glib-lite\");\n-                    dependencies.add(\"jfxmedia_avf\");\n-                }\n-                if (PlatformUtil.isWindows()) {\n-                    dependencies.add(\"fxplugins\");\n-                    dependencies.add(\"glib-lite\");\n-                }\n-                NativeLibLoader.loadLibrary(\"jfxmedia\", dependencies);\n-                return null;\n-            });\n-        } catch (PrivilegedActionException pae) {\n+            if (!PlatformUtil.isLinux() && !PlatformUtil.isIOS()) {\n+                NativeLibLoader.loadLibrary(\"gstreamer-lite\");\n+            } else {\n+                dependencies.add(\"gstreamer-lite\");\n+            }\n+            if (PlatformUtil.isLinux()) {\n+                dependencies.add(\"fxplugins\");\n+                dependencies.add(\"avplugin\");\n+                dependencies.add(\"avplugin-54\");\n+                dependencies.add(\"avplugin-56\");\n+                dependencies.add(\"avplugin-57\");\n+                dependencies.add(\"avplugin-ffmpeg-56\");\n+                dependencies.add(\"avplugin-ffmpeg-57\");\n+                dependencies.add(\"avplugin-ffmpeg-58\");\n+                dependencies.add(\"avplugin-ffmpeg-59\");\n+                dependencies.add(\"avplugin-ffmpeg-60\");\n+                dependencies.add(\"avplugin-ffmpeg-61\");\n+            }\n+            if (PlatformUtil.isMac()) {\n+                dependencies.add(\"fxplugins\");\n+                dependencies.add(\"glib-lite\");\n+                dependencies.add(\"jfxmedia_avf\");\n+            }\n+            if (PlatformUtil.isWindows()) {\n+                dependencies.add(\"fxplugins\");\n+                dependencies.add(\"glib-lite\");\n+            }\n+            NativeLibLoader.loadLibrary(\"jfxmedia\", dependencies);\n+        } catch (Exception pae) {\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/NativeMediaManager.java","additions":33,"deletions":39,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -46,8 +44,1 @@\n-    private static String enabledPlatforms;\n-    static {\n-        @SuppressWarnings(\"removal\")\n-        var dummy = AccessController.doPrivileged((PrivilegedAction) () -> {\n-            getPlatformSettings();\n-            return null;\n-        });\n-    }\n+    private static String enabledPlatforms = getPlatformSettings();\n@@ -55,1 +46,1 @@\n-    private static void getPlatformSettings() {\n+    private static String getPlatformSettings() {\n@@ -57,1 +48,1 @@\n-        enabledPlatforms = System.getProperty(\"jfxmedia.platforms\", \"\").toLowerCase();\n+        return System.getProperty(\"jfxmedia.platforms\", \"\").toLowerCase();\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/platform\/PlatformManager.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -75,7 +73,3 @@\n-                @SuppressWarnings(\"removal\")\n-                boolean tmp = AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n-                    boolean avf = false;\n-                    try {\n-                        NativeLibLoader.loadLibrary(\"jfxmedia_avf\");\n-                        avf = true;\n-                    } catch (UnsatisfiedLinkError ule) {}\n+                NativeLibLoader.loadLibrary(\"jfxmedia_avf\");\n+                isLoaded = true;\n+            } catch (UnsatisfiedLinkError ule) { }\n@@ -83,6 +77,0 @@\n-                    return avf;\n-                });\n-                isLoaded = tmp;\n-            } catch (Exception e) {\n-                \/\/ Ignore\n-            }\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/platform\/osx\/OSXPlatform.java","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"}]}