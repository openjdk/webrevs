{"files":[{"patch":"@@ -108,1 +108,1 @@\n-    public boolean setAll(int from, int to, Collection<? extends E> col) {\n+    public boolean replaceRange(int from, int to, Collection<? extends E> col) {\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/collections\/ModifiableObservableListBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,24 +86,0 @@\n-    \/**\n-     * Replaces a contiguous range of elements in this list, starting at the specified index,\n-     * with the elements from the given collection. The range replaced has the same length\n-     * as the collection.\n-     *\n-     * @param index the start index at which to replace elements, must be in\n-     *              {@code 0 .. size() - col.size()}\n-     * @param col collection containing elements to be inserted, cannot be {@code null}\n-     * @return {@code true} if this list changed as a result of the call\n-     * @throws ClassCastException if the class of an element of the specified\n-     *         collection prevents it from being added to this list\n-     * @throws NullPointerException if the specified collection contains one\n-     *         or more null elements and this list does not permit null\n-     *         elements, or if the specified collection is null\n-     * @throws IllegalArgumentException if some property of an element of the\n-     *         specified collection prevents it from being added to this list\n-     * @throws IndexOutOfBoundsException if {@code index < 0} or\n-     *         {@code index + col.size() > size()}\n-     *\/\n-    public default boolean setAll(int index, Collection<? extends E> col) {\n-        \/\/ implicit check to ensure col != null\n-        return setAll(index, index + col.size(), col);\n-    }\n-\n@@ -129,1 +105,1 @@\n-    public default boolean setAll(int from, int to, Collection<? extends E> col) {\n+    public default boolean replaceRange(int from, int to, Collection<? extends E> col) {\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/collections\/ObservableList.java","additions":1,"deletions":25,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -73,2 +73,1 @@\n-            assertThrows(NullPointerException.class, () -> list.setAll(0, (Collection<? extends String>) null));\n-            assertThrows(NullPointerException.class, () -> list.setAll(0, 0, (Collection<? extends String>) null));\n+            assertThrows(NullPointerException.class, () -> list.replaceRange(0, 0, (Collection<? extends String>) null));\n@@ -80,5 +79,3 @@\n-            assertThrows(IndexOutOfBoundsException.class, () -> list.setAll(0, List.of(\"d\", \"e\", \"f\", \"g\")));\n-            assertThrows(IndexOutOfBoundsException.class, () -> list.setAll(1, List.of(\"d\", \"e\", \"f\")));\n-            assertThrows(IndexOutOfBoundsException.class, () -> list.setAll(-1, 2, List.of(\"d\", \"e\", \"f\")));\n-            assertThrows(IndexOutOfBoundsException.class, () -> list.setAll(0, 5, List.of(\"d\", \"e\", \"f\")));\n-            assertThrows(IndexOutOfBoundsException.class, () -> list.setAll(2, 1, List.of(\"d\", \"e\", \"f\")));\n+            assertThrows(IndexOutOfBoundsException.class, () -> list.replaceRange(-1, 2, List.of(\"d\", \"e\", \"f\")));\n+            assertThrows(IndexOutOfBoundsException.class, () -> list.replaceRange(0, 5, List.of(\"d\", \"e\", \"f\")));\n+            assertThrows(IndexOutOfBoundsException.class, () -> list.replaceRange(2, 1, List.of(\"d\", \"e\", \"f\")));\n@@ -90,1 +87,1 @@\n-            assertFalse(list.setAll(0, List.of()));\n+            assertFalse(list.replaceRange(1, 1, List.of()));\n@@ -93,11 +90,0 @@\n-\n-            assertFalse(list.setAll(1, 1, List.of()));\n-            assertEquals(List.of(\"a\", \"b\", \"c\"), list);\n-            assertEquals(List.of(), recordedChanges);\n-        }\n-\n-        @Test\n-        void shouldReplaceElementsAtGivenIndex() {\n-            assertTrue(list.setAll(0, List.of(\"A\", \"B\")));\n-            assertEquals(List.of(\"A\", \"B\", \"c\"), list);\n-            assertEquals(List.of(\"{ [a, b] replaced by [A, B] at 0 }\"), recordedChanges);\n@@ -108,1 +94,1 @@\n-            assertTrue(list.setAll(1, 3, List.of(\"B\", \"C\", \"D\")));\n+            assertTrue(list.replaceRange(1, 3, List.of(\"B\", \"C\", \"D\")));\n@@ -115,1 +101,1 @@\n-            assertTrue(list.setAll(1, 3, List.of()));\n+            assertTrue(list.replaceRange(1, 3, List.of()));\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/collections\/ModifiableObservableListBaseTest.java","additions":7,"deletions":21,"binary":false,"changes":28,"status":"modified"}]}