{"files":[{"patch":"@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\r\n+<svg width=\"64\" height=\"64\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" version=\"1.1\">\r\n+\t<defs><linearGradient id=\"r\">\r\n+\t\t<stop offset=\"0\" stop-color=\"#f00\"\/>\r\n+\t\t<stop offset=\"0.2\" stop-color=\"#ff0\"\/>\r\n+\t\t<stop offset=\"0.4\" stop-color=\"#0f0\"\/>\r\n+\t\t<stop offset=\"0.6\" stop-color=\"#0ff\"\/>\r\n+\t\t<stop offset=\"0.8\" stop-color=\"#00f\"\/>\r\n+\t\t<stop offset=\"1\" stop-color=\"#f0f\"\/>\r\n+\t<\/linearGradient><\/defs>\r\n+\t<rect width=\"64px\" height=\"64px\" fill=\"url(#r)\"\/>\r\n+<\/svg>\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/color and map\/gradient.svg","additions":12,"deletions":0,"binary":false,"changes":12,"status":"added"},{"patch":"@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\r\n+<svg width=\"64\" height=\"64\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" version=\"1.1\">\r\n+\t<defs><linearGradient id=\"r\">\r\n+\t\t<stop offset=\"0\" stop-color=\"#000\"\/>\r\n+\t\t<stop offset=\"0.2\" stop-color=\"#0f0\"\/>\r\n+\t\t<stop offset=\"0.4\" stop-color=\"#0f0\"\/>\r\n+\t\t<stop offset=\"0.6\" stop-color=\"#0f0\"\/>\r\n+\t\t<stop offset=\"0.8\" stop-color=\"#000\"\/>\r\n+\t\t<stop offset=\"1\" stop-color=\"#000\"\/>\r\n+\t<\/linearGradient><\/defs>\r\n+\t<rect width=\"64px\" height=\"64px\" fill=\"url(#r)\"\/>\r\n+<\/svg>\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/color and map\/green gradient.svg","additions":12,"deletions":0,"binary":false,"changes":12,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/color and map\/map tint.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/color and map\/map.png","binary":true,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+<svg width=\"605\" height=\"462\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" xml:space=\"preserve\" overflow=\"hidden\"><g transform=\"translate(-1227 -914)\"><path d=\"M1228 1151 1826.55 1154.4\" stroke=\"#000000\" stroke-width=\"10.3125\" stroke-miterlimit=\"8\" fill=\"none\" fill-rule=\"evenodd\"\/><path d=\"M2.1768-0.716427 57.3571 166.944 53.0035 168.377-2.1768 0.716427ZM66.8082 159.008 62.3445 189.428 40.6866 167.605Z\" fill=\"#00B050\" transform=\"matrix(-1 0 0 1 1614.84 1158.5)\"\/><path d=\"M1.77691-1.44718 116.681 139.636 113.127 142.531-1.77691 1.44718ZM122.671 128.847 129.376 158.853 101.348 146.213Z\" fill=\"#00B050\" transform=\"matrix(-1 0 0 1 1614.88 1158.5)\"\/><path d=\"M1.27973-1.90106 166.645 109.418 164.086 113.22-1.27973 1.90106ZM169.242 97.3528 184.376 124.116 153.885 120.166Z\" fill=\"#00B050\" transform=\"matrix(-1 0 0 1 1614.88 1158.5)\"\/><path d=\"M1613.46 1153.63 1300.41 1011.08 1302.31 1006.91 1615.36 1149.46ZM1299.83 1023.41 1280.5 999.5 1311.23 998.382Z\" fill=\"#ED7D31\"\/><path d=\"M1609.98 1154 1280.88 1059.05 1282.15 1054.65 1611.25 1149.59ZM1282.11 1071.33 1259.5 1050.5 1289.73 1044.91Z\" fill=\"#ED7D31\"\/><path d=\"M1615.65 1155.12 1330.04 957.427 1332.65 953.658 1618.26 1151.35ZM1327.29 969.457 1312.5 942.5 1342.94 946.845Z\" fill=\"#ED7D31\"\/><path d=\"M1612.75 1150.69 1565.33 1003.02 1569.69 1001.62 1617.11 1149.29ZM1555.82 1010.89 1560.5 980.5 1582 1002.48Z\" fill=\"#7030A0\"\/><path d=\"M2.19742-0.650463 46.2581 148.197 41.8633 149.498-2.19742 0.650463ZM55.9443 140.55 50.5654 170.822 29.5753 148.355Z\" fill=\"#7030A0\" transform=\"matrix(1 0 0 -1 1614.5 1150.32)\"\/><path d=\"M1.19396-1.95606 132.393 78.1265 130.005 82.0386-1.19396 1.95606ZM134.451 65.9582 150.76 92.0221 120.123 89.431Z\" fill=\"#7030A0\" transform=\"matrix(1 0 0 -1 1618.5 1150.52)\"\/><path d=\"M1615.65 1155.21 1500.97 1051.57 1504.04 1048.16 1618.72 1151.8ZM1496.68 1063.14 1485.5 1034.5 1515.12 1042.74Z\" fill=\"#7030A0\"\/><path d=\"M1614.35 1155.09 1472.73 1131.52 1473.48 1127 1615.1 1150.57ZM1475.37 1143.58 1450.5 1125.5 1479.88 1116.45Z\" fill=\"#7030A0\"\/><path d=\"M0.360313-2.26316 154.703 22.3093 153.982 26.8356-0.360313 2.26316ZM151.978 10.2729 176.974 28.1756 147.654 37.4308Z\" fill=\"#7030A0\" transform=\"matrix(1 0 0 -1 1616.5 1152.68)\"\/><path d=\"M3.95377-3.30977 168.387 193.117 160.479 199.737-3.95377 3.30977ZM172.984 182.544 180.982 216.196 149.262 202.403Z\" fill=\"#4472C4\" transform=\"matrix(-1 0 0 1 1794.98 942)\"\/><\/g><\/svg>\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/components\/all.svg","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+<svg width=\"411\" height=\"251\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" xml:space=\"preserve\" overflow=\"hidden\"><g transform=\"translate(-1422 -938)\"><path d=\"M1432 1151 1827.31 1154.88\" stroke=\"#000000\" stroke-width=\"10.3125\" stroke-miterlimit=\"8\" fill=\"none\" fill-rule=\"evenodd\"\/><path d=\"M1612.75 1150.69 1565.33 1003.02 1569.69 1001.62 1617.11 1149.29ZM1555.82 1010.89 1560.5 980.5 1582 1002.48Z\" fill=\"#7030A0\"\/><path d=\"M2.19742-0.650463 46.2581 148.197 41.8633 149.498-2.19742 0.650463ZM55.9443 140.55 50.5654 170.822 29.5753 148.355Z\" fill=\"#7030A0\" transform=\"matrix(1 0 0 -1 1614.5 1150.32)\"\/><path d=\"M1.19396-1.95606 132.393 78.1265 130.005 82.0386-1.19396 1.95606ZM134.451 65.9582 150.76 92.0221 120.123 89.431Z\" fill=\"#7030A0\" transform=\"matrix(1 0 0 -1 1618.5 1150.52)\"\/><path d=\"M1615.65 1155.21 1500.97 1051.57 1504.04 1048.16 1618.72 1151.8ZM1496.68 1063.14 1485.5 1034.5 1515.12 1042.74Z\" fill=\"#7030A0\"\/><path d=\"M1614.35 1155.09 1472.73 1131.52 1473.48 1127 1615.1 1150.57ZM1475.37 1143.58 1450.5 1125.5 1479.88 1116.45Z\" fill=\"#7030A0\"\/><path d=\"M0.360313-2.26316 154.703 22.3093 153.982 26.8356-0.360313 2.26316ZM151.978 10.2729 176.974 28.1756 147.654 37.4308Z\" fill=\"#7030A0\" transform=\"matrix(1 0 0 -1 1616.5 1152.68)\"\/><path d=\"M3.95377-3.30977 168.387 193.117 160.479 199.737-3.95377 3.30977ZM172.984 182.544 180.982 216.196 149.262 202.403Z\" fill=\"#4472C4\" transform=\"matrix(-1 0 0 1 1794.98 942)\"\/><\/g><\/svg>\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/components\/lambertian.svg","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+<svg width=\"605\" height=\"275\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" xml:space=\"preserve\" overflow=\"hidden\"><g transform=\"translate(-1227 -914)\"><path d=\"M1228 1151 1826.55 1154.4\" stroke=\"#000000\" stroke-width=\"10.3125\" stroke-miterlimit=\"8\" fill=\"none\" fill-rule=\"evenodd\"\/><path d=\"M1613.46 1153.63 1300.41 1011.08 1302.31 1006.91 1615.36 1149.46ZM1299.83 1023.41 1280.5 999.5 1311.23 998.382Z\" fill=\"#ED7D31\"\/><path d=\"M1609.98 1154 1280.88 1059.05 1282.15 1054.65 1611.25 1149.59ZM1282.11 1071.33 1259.5 1050.5 1289.73 1044.91Z\" fill=\"#ED7D31\"\/><path d=\"M1615.65 1155.12 1330.04 957.427 1332.65 953.658 1618.26 1151.35ZM1327.29 969.457 1312.5 942.5 1342.94 946.845Z\" fill=\"#ED7D31\"\/><path d=\"M1612.75 1150.69 1565.33 1003.02 1569.69 1001.62 1617.11 1149.29ZM1555.82 1010.89 1560.5 980.5 1582 1002.48Z\" fill=\"#7030A0\" fill-opacity=\"0.501961\"\/><path d=\"M2.19742-0.650463 46.2581 148.197 41.8633 149.498-2.19742 0.650463ZM55.9443 140.55 50.5654 170.822 29.5753 148.355Z\" fill=\"#7030A0\" fill-opacity=\"0.501961\" transform=\"matrix(1 0 0 -1 1614.5 1150.32)\"\/><path d=\"M1.19396-1.95606 132.393 78.1265 130.005 82.0386-1.19396 1.95606ZM134.451 65.9582 150.76 92.0221 120.123 89.431Z\" fill=\"#7030A0\" fill-opacity=\"0.501961\" transform=\"matrix(1 0 0 -1 1618.5 1150.52)\"\/><path d=\"M1615.65 1155.21 1500.97 1051.57 1504.04 1048.16 1618.72 1151.8ZM1496.68 1063.14 1485.5 1034.5 1515.12 1042.74Z\" fill=\"#7030A0\" fill-opacity=\"0.501961\"\/><path d=\"M1614.35 1155.09 1472.73 1131.52 1473.48 1127 1615.1 1150.57ZM1475.37 1143.58 1450.5 1125.5 1479.88 1116.45Z\" fill=\"#7030A0\" fill-opacity=\"0.501961\"\/><path d=\"M0.360313-2.26316 154.703 22.3093 153.982 26.8356-0.360313 2.26316ZM151.978 10.2729 176.974 28.1756 147.654 37.4308Z\" fill=\"#7030A0\" fill-opacity=\"0.501961\" transform=\"matrix(1 0 0 -1 1616.5 1152.68)\"\/><path d=\"M3.95377-3.30977 168.387 193.117 160.479 199.737-3.95377 3.30977ZM172.984 182.544 180.982 216.196 149.262 202.403Z\" fill=\"#4472C4\" transform=\"matrix(-1 0 0 1 1794.98 942)\"\/><\/g><\/svg>\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/components\/reflective.svg","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+<svg width=\"605\" height=\"462\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" xml:space=\"preserve\" overflow=\"hidden\"><g transform=\"translate(-1227 -914)\"><path d=\"M1228 1151 1826.55 1154.4\" stroke=\"#000000\" stroke-width=\"10.3125\" stroke-miterlimit=\"8\" fill=\"none\" fill-rule=\"evenodd\"\/><path d=\"M2.1768-0.716427 57.3571 166.944 53.0035 168.377-2.1768 0.716427ZM66.8082 159.008 62.3445 189.428 40.6866 167.605Z\" fill=\"#00B050\" transform=\"matrix(-1 0 0 1 1614.84 1158.5)\"\/><path d=\"M1.77691-1.44718 116.681 139.636 113.127 142.531-1.77691 1.44718ZM122.671 128.847 129.376 158.853 101.348 146.213Z\" fill=\"#00B050\" transform=\"matrix(-1 0 0 1 1614.88 1158.5)\"\/><path d=\"M1.27973-1.90106 166.645 109.418 164.086 113.22-1.27973 1.90106ZM169.242 97.3528 184.376 124.116 153.885 120.166Z\" fill=\"#00B050\" transform=\"matrix(-1 0 0 1 1614.88 1158.5)\"\/><path d=\"M1613.46 1153.63 1300.41 1011.08 1302.31 1006.91 1615.36 1149.46ZM1299.83 1023.41 1280.5 999.5 1311.23 998.382Z\" fill=\"#ED7D31\"\/><path d=\"M1609.98 1154 1280.88 1059.05 1282.15 1054.65 1611.25 1149.59ZM1282.11 1071.33 1259.5 1050.5 1289.73 1044.91Z\" fill=\"#ED7D31\"\/><path d=\"M1615.65 1155.12 1330.04 957.427 1332.65 953.658 1618.26 1151.35ZM1327.29 969.457 1312.5 942.5 1342.94 946.845Z\" fill=\"#ED7D31\"\/><path d=\"M3.95377-3.30977 168.387 193.117 160.479 199.737-3.95377 3.30977ZM172.984 182.544 180.982 216.196 149.262 202.403Z\" fill=\"#4472C4\" transform=\"matrix(-1 0 0 1 1794.98 942)\"\/><\/g><\/svg>\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/components\/transparent.svg","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/gloss\/red high spec.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/gloss\/yellow low spec.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/diff\/bump map.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/diff\/bump.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/diff\/diff map.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/diff\/diff+bump.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/diff\/diff.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/spec\/bump map.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/spec\/diff map.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/spec\/diff+bump.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/spec\/diff+spec+bump.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/spec\/diff+spec.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/spec\/diff.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/map detail\/spec\/spec map.png","binary":true,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<svg\n+   width=\"599\"\n+   height=\"385\"\n+   xml:space=\"preserve\"\n+   overflow=\"hidden\"\n+   version=\"1.1\"\n+   id=\"svg7\"\n+   sodipodi:docname=\"specular power high.svg\"\n+   inkscape:version=\"1.3 (0e150ed6c4, 2023-07-21)\"\n+   xmlns:inkscape=\"http:\/\/www.inkscape.org\/namespaces\/inkscape\"\n+   xmlns:sodipodi=\"http:\/\/sodipodi.sourceforge.net\/DTD\/sodipodi-0.dtd\"\n+   xmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n+   xmlns:svg=\"http:\/\/www.w3.org\/2000\/svg\"><defs\n+     id=\"defs7\" \/><sodipodi:namedview\n+     id=\"namedview7\"\n+     pagecolor=\"#ffffff\"\n+     bordercolor=\"#000000\"\n+     borderopacity=\"0.25\"\n+     inkscape:showpageshadow=\"2\"\n+     inkscape:pageopacity=\"0.0\"\n+     inkscape:pagecheckerboard=\"0\"\n+     inkscape:deskcolor=\"#d1d1d1\"\n+     inkscape:zoom=\"2.1324675\"\n+     inkscape:cx=\"299.65286\"\n+     inkscape:cy=\"192.5\"\n+     inkscape:window-width=\"1920\"\n+     inkscape:window-height=\"1017\"\n+     inkscape:window-x=\"-8\"\n+     inkscape:window-y=\"32\"\n+     inkscape:window-maximized=\"1\"\n+     inkscape:current-layer=\"svg7\" \/><g\n+     transform=\"translate(-791 -658)\"\n+     id=\"g7\"><path\n+       d=\"m 803.27344,1016.8541 578.42216,-0.01\"\n+       stroke=\"#000000\"\n+       stroke-width=\"6.875\"\n+       stroke-miterlimit=\"8\"\n+       fill=\"none\"\n+       fill-rule=\"evenodd\"\n+       id=\"path1\"\n+       inkscape:label=\"path1\" \/><path\n+       d=\"M1.73976-1.49164 255.195 294.124 251.716 297.107-1.73976 1.49164ZM260.911 283.186 268.372 313.013 240.034 301.086Z\"\n+       fill=\"#4472C4\"\n+       transform=\"matrix(-1 0 0 1 1363.87 701.5)\"\n+       id=\"path2\" \/><path\n+       d=\"M1.7375-1.49426 256.973 295.289 253.498 298.278-1.7375 1.49426ZM262.672 284.343 270.178 314.159 241.822 302.274Z\"\n+       fill=\"#4472C4\"\n+       transform=\"matrix(-1 0 0 1 1328.68 700.5)\"\n+       id=\"path3\" \/><path\n+       d=\"M1.72732-1.50603 262.576 297.671 259.121 300.683-1.72732 1.50603ZM268.201 286.686 275.909 316.45 247.473 304.759Z\"\n+       fill=\"#4472C4\"\n+       transform=\"matrix(-1 0 0 1 1296.41 698.5)\"\n+       id=\"path4\" \/><path\n+       d=\"M1093.75 1015.67 891.157 706.917 894.989 704.403 1097.59 1013.15ZM884.091 717.035 880.5 686.5 907.083 701.948Z\"\n+       fill=\"#ED7D31\"\n+       id=\"path5\" \/><path\n+       d=\"M1060.39 1015.8 861.444 721.764 865.24 719.196 1064.19 1013.23ZM854.523 731.982 850.5 701.5 877.299 716.571Z\"\n+       fill=\"#ED7D31\"\n+       id=\"path6\" \/><path\n+       d=\"M1018.36 1016.47 830.509 740.729 834.297 738.149 1022.15 1013.89ZM823.62 750.969 819.5 720.5 846.347 735.485Z\"\n+       fill=\"#ED7D31\"\n+       id=\"path7\" \/><\/g><\/svg>\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/math\/specular power high.svg","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+<svg width=\"610\" height=\"387\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" xml:space=\"preserve\" overflow=\"hidden\"><g transform=\"translate(-1565 -658)\"><path d=\"M1596.5 1020.5 2171.4 1020.5\" stroke=\"#000000\" stroke-width=\"6.875\" stroke-miterlimit=\"8\" fill=\"none\" fill-rule=\"evenodd\"\/><path d=\"M1.73976-1.49164 255.195 294.124 251.716 297.107-1.73976 1.49164ZM260.911 283.186 268.372 313.013 240.034 301.086Z\" fill=\"#4472C4\" transform=\"matrix(-1 0 0 1 2153.87 703.5)\"\/><path d=\"M1.7375-1.49426 256.973 295.289 253.498 298.278-1.7375 1.49426ZM262.672 284.343 270.178 314.159 241.822 302.274Z\" fill=\"#4472C4\" transform=\"matrix(-1 0 0 1 2118.68 702.5)\"\/><path d=\"M1.72732-1.50603 262.576 297.671 259.121 300.683-1.72732 1.50603ZM268.201 286.686 275.909 316.45 247.473 304.759Z\" fill=\"#4472C4\" transform=\"matrix(-1 0 0 1 2086.41 700.5)\"\/><path d=\"M1883.14 1017.2 1726.8 707.985 1730.89 705.917 1887.23 1015.13ZM1718.64 717.246 1718.5 686.5 1743.18 704.837Z\" fill=\"#ED7D31\"\/><path d=\"M1849.39 1017.8 1650.44 723.764 1654.24 721.196 1853.19 1015.23ZM1643.52 733.982 1639.5 703.5 1666.3 718.571Z\" fill=\"#ED7D31\"\/><path d=\"M1808.27 1017.7 1606.74 784.342 1610.21 781.346 1811.74 1014.7ZM1601.07 795.3 1593.5 765.5 1621.88 777.326Z\" fill=\"#ED7D31\"\/><\/g><\/svg>\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/math\/specular power low.svg","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+<svg width=\"1199\" height=\"917\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" xml:space=\"preserve\" overflow=\"hidden\"><g transform=\"translate(-1095 -267)\"><path d=\"M1207.37 1183.19C1198.98 1005.29 1331.71 854.05 1503.82 845.382 1675.93 836.714 1822.24 973.904 1830.63 1151.81 1830.88 1157.03 1831 1162.27 1831 1167.5\" stroke=\"#000000\" stroke-width=\"10.3125\" stroke-miterlimit=\"8\" fill=\"none\" fill-rule=\"evenodd\"\/><path d=\"M1876.89 1170.76 1719 835\" stroke=\"#4472C4\" stroke-width=\"10.3125\" stroke-miterlimit=\"8\" fill=\"none\" fill-rule=\"evenodd\"\/><path d=\"M0 0 172.54 345.969\" stroke=\"#4472C4\" stroke-width=\"10.3125\" stroke-miterlimit=\"8\" fill=\"none\" fill-rule=\"evenodd\" transform=\"matrix(1 0 0 -1 1152 1180.97)\"\/><path d=\"M1322 835 1722.47 835\" stroke=\"#4472C4\" stroke-width=\"10.3125\" stroke-miterlimit=\"8\" fill=\"none\" fill-rule=\"evenodd\"\/><g><g><g><path d=\"M2194.31 666 2228.69 666C2231.61 666 2233.84 668.234 2233.84 671.156 2233.84 674.078 2231.61 676.312 2228.69 676.312L2194.31 676.312C2191.39 676.312 2189.16 674.078 2189.16 671.156 2189.16 668.234 2191.39 666 2194.31 666Z\"\/><path d=\"M2194.31 683.187 2228.69 683.187C2231.61 683.187 2233.84 685.422 2233.84 688.344 2233.84 691.265 2231.61 693.5 2228.69 693.5L2194.31 693.5C2191.39 693.5 2189.16 691.265 2189.16 688.344 2189.16 685.422 2191.39 683.187 2194.31 683.187Z\"\/><path d=\"M2200.33 700.375C2200.84 706.219 2205.66 710.687 2211.5 710.687 2217.34 710.687 2222.16 706.219 2222.67 700.375L2200.33 700.375Z\"\/><path d=\"M2211.5 566.312C2211.5 566.312 2211.5 566.312 2211.5 566.312 2211.5 566.312 2211.5 566.312 2211.5 566.312 2187.09 566.484 2167.33 586.078 2166.81 610.484L2166.81 612.031C2166.98 617.359 2168.02 622.515 2169.91 627.5 2171.8 632.14 2174.37 636.437 2177.64 640.219 2181.77 644.687 2186.23 653.453 2188.12 657.234 2188.64 658.437 2189.84 659.125 2191.22 659.125L2231.78 659.125C2233.16 659.125 2234.36 658.437 2234.87 657.234 2236.77 653.453 2241.23 644.687 2245.36 640.219 2248.62 636.437 2251.37 632.14 2253.09 627.5 2254.98 622.515 2256.02 617.359 2256.19 612.031L2256.19 610.484C2255.67 586.078 2235.91 566.484 2211.5 566.312ZM2245.87 611.859C2245.7 615.984 2244.84 620.109 2243.47 623.89 2242.09 627.328 2240.2 630.594 2237.62 633.344 2233.67 638.156 2230.23 643.312 2227.66 648.812L2211.5 648.812 2195.52 648.812C2192.77 643.312 2189.33 638.156 2185.55 633.344 2183.14 630.594 2181.08 627.328 2179.7 623.89 2178.16 620.109 2177.47 615.984 2177.3 611.859L2177.3 610.484C2177.64 591.75 2192.94 576.625 2211.67 576.453L2211.67 576.453 2211.67 576.453C2211.67 576.453 2211.67 576.453 2211.67 576.453 2211.67 576.453 2211.67 576.453 2211.67 576.453L2211.67 576.453 2211.67 576.453C2230.41 576.625 2245.7 591.578 2246.05 610.484L2246.05 611.859Z\"\/><\/g><\/g><\/g><g><g><g><path d=\"M1329.39 424.25C1342.8 411.359 1343.48 390.047 1330.77 376.297 1344.34 383.344 1355.52 394.172 1362.05 401.391 1355.17 408.094 1343.48 418.062 1329.39 424.25ZM1261.84 388.844C1267.52 384.031 1273.53 379.906 1280.06 376.469 1267.52 390.219 1268.2 411.359 1281.61 424.25 1267.52 418.062 1255.66 408.094 1248.95 401.391 1252.91 396.922 1257.2 392.797 1261.84 388.844L1261.84 388.844ZM1305.5 427C1290.38 427 1278 414.625 1278 399.5 1278 384.375 1290.38 372 1305.5 372 1320.63 372 1333 384.375 1333 399.5 1333 414.625 1320.63 427 1305.5 427ZM1372.36 396.578C1362.39 384.891 1336.27 358.25 1305.5 358.25 1274.73 358.25 1248.61 384.891 1238.64 396.578 1236.06 399.672 1236.23 403.969 1238.98 406.891 1249.13 417.547 1275.08 440.75 1305.5 440.75 1335.92 440.75 1361.88 417.547 1372.19 406.891 1374.77 404.141 1374.94 399.672 1372.36 396.578Z\"\/><path d=\"M1322.69 399.5C1322.69 408.992 1314.99 416.687 1305.5 416.687 1296.01 416.687 1288.31 408.992 1288.31 399.5 1288.31 390.008 1296.01 382.312 1305.5 382.312 1314.99 382.312 1322.69 390.008 1322.69 399.5Z\"\/><\/g><\/g><\/g><path d=\"M1.27666-3.19164 467.204 183.179 464.651 189.563-1.27666 3.19164ZM466.778 171.902 487.205 194.882 456.565 197.435Z\" fill=\"#FF0000\" transform=\"matrix(1 0 0 -1 1639.5 834.382)\"\/><path d=\"M3.4375-2.61763e-06 3.43784 451.011-3.43716 451.011-3.4375 2.61763e-06ZM13.7503 446.428 0.000360892 473.928-13.7497 446.428Z\" fill=\"#C00000\" transform=\"matrix(1 0 0 -1 1639.5 835.428)\"\/><path d=\"M1627.53 288.641 1640.46 288.641 1651.16 320.211C1652.7 324.75 1653.89 328.587 1654.73 331.721L1655.17 331.721C1655.39 330.073 1655.88 327.331 1656.65 323.494 1657.42 319.658 1658.13 316.307 1658.78 313.443L1661.62 300.677C1662.21 298.002 1662.51 295.827 1662.51 294.152 1662.51 292.882 1662.19 291.998 1661.56 291.498 1660.92 290.998 1659.91 290.707 1658.54 290.626L1658.98 288.641 1673.17 288.641 1672.72 290.626C1671.69 290.843 1670.96 291.086 1670.51 291.356 1670.07 291.626 1669.67 292.031 1669.32 292.572 1668.96 293.112 1668.6 293.956 1668.22 295.105 1667.84 296.253 1667.37 298.124 1666.8 300.718L1657.28 343.96 1651.77 343.96 1639.93 309.188C1638.5 305.027 1637.25 300.88 1636.16 296.746L1635.64 296.746C1635.48 298.124 1635.03 300.751 1634.3 304.629 1633.57 308.506 1632.8 312.295 1631.99 315.997L1628.42 332.167C1627.86 334.734 1627.57 336.841 1627.57 338.489 1627.57 339.705 1627.88 340.563 1628.48 341.063 1629.09 341.563 1630.11 341.866 1631.54 341.975L1631.1 343.96 1616.91 343.96 1617.36 341.975C1618.39 341.812 1619.16 341.549 1619.67 341.184 1620.18 340.82 1620.62 340.313 1620.97 339.664 1621.32 339.016 1621.64 338.226 1621.94 337.294 1622.24 336.362 1622.68 334.558 1623.28 331.883L1630.17 300.677C1630.44 299.515 1630.65 298.408 1630.82 297.354 1630.98 296.3 1631.06 295.233 1631.06 294.152 1631.06 292.882 1630.74 291.998 1630.11 291.498 1629.47 290.998 1628.46 290.707 1627.09 290.626Z\" fill-rule=\"evenodd\"\/><text fill=\"#000000\" fill-opacity=\"0\" font-family=\"Arial,Arial_MSFontService,sans-serif\" font-size=\"55.3198\" x=\"1616.91\" y=\"337.045\">𝑁<\/text><path d=\"M2115.81 559.398 2132.02 559.398 2131.58 561.383C2130.55 561.599 2129.81 561.843 2129.37 562.113 2128.92 562.383 2128.52 562.788 2128.17 563.329 2127.82 563.869 2127.46 564.713 2127.08 565.862 2126.7 567.01 2126.23 568.881 2125.66 571.475L2116.99 610.989 2126.96 610.989C2128.77 610.989 2130.19 610.813 2131.23 610.462 2132.27 610.111 2133.26 609.469 2134.19 608.537 2135.12 607.605 2136.04 606.342 2136.93 604.748 2137.82 603.154 2138.72 601.168 2139.64 598.79L2143.57 598.79 2139.48 614.717 2105.19 614.717 2105.64 612.732C2106.67 612.569 2107.44 612.306 2107.95 611.941 2108.46 611.576 2108.9 611.07 2109.25 610.421 2109.6 609.773 2109.92 608.983 2110.22 608.051 2110.52 607.118 2110.96 605.315 2111.56 602.64L2118.45 571.434C2119.04 568.732 2119.34 566.557 2119.34 564.909 2119.34 563.639 2119.02 562.755 2118.39 562.255 2117.75 561.755 2116.74 561.464 2115.37 561.383Z\" fill-rule=\"evenodd\"\/><text fill=\"#000000\" fill-opacity=\"0\" font-family=\"Arial,Arial_MSFontService,sans-serif\" font-size=\"55.3198\" x=\"2105.19\" y=\"607.802\">𝐿<\/text><path d=\"M1635.86 835.869 1406.01 439.053 1411.96 435.608 1641.81 832.423ZM1399.39 448.188 1397.5 417.5 1423.18 434.405Z\" fill=\"#92D050\"\/><path d=\"M1374.25 338.624 1391.03 338.624 1390.59 340.61C1389.4 340.745 1388.47 341.096 1387.81 341.663 1387.15 342.231 1386.68 343.021 1386.41 344.034 1386.14 345.047 1386.01 346.405 1386.01 348.107 1386.01 348.512 1386.05 349.728 1386.13 351.755L1387.26 381.421 1387.26 384.663 1387.67 384.663 1405.22 353.011C1406.24 351.147 1407.01 349.546 1407.53 348.208 1408.04 346.871 1408.3 345.689 1408.3 344.662 1408.3 342.393 1406.95 341.042 1404.24 340.61L1404.69 338.624 1421.27 338.624 1420.82 340.61C1420.09 340.718 1419.4 340.995 1418.73 341.44 1418.07 341.886 1417.33 342.629 1416.5 343.669 1415.68 344.71 1414.4 346.716 1412.67 349.688L1386.74 394.592 1381.35 394.592 1378.63 349.404C1378.52 347.648 1378.33 346.142 1378.04 344.885 1377.76 343.629 1377.31 342.65 1376.71 341.947 1376.1 341.245 1375.13 340.799 1373.81 340.61Z\" fill-rule=\"evenodd\"\/><text fill=\"#000000\" fill-opacity=\"0\" font-family=\"Arial,Arial_MSFontService,sans-serif\" font-size=\"55.9683\" x=\"1373.81\" y=\"387.596\">𝑉<\/text><path d=\"M1640.43 837.573 1174.5 651.203 1177.05 644.819 1642.98 831.19ZM1174.93 662.48 1154.5 639.5 1185.14 636.947Z\" fill=\"#00B050\"\/><path d=\"M1134.12 600.496C1132.69 600.496 1131.17 600.55 1129.58 600.659L1124.39 624.124 1129.17 624.124C1133.09 624.124 1136.19 623.597 1138.46 622.543 1140.73 621.49 1142.52 619.76 1143.85 617.356 1145.17 614.951 1145.83 612.357 1145.83 609.575 1145.83 608.413 1145.72 607.379 1145.51 606.474 1145.29 605.569 1145.01 604.819 1144.66 604.225 1144.31 603.63 1143.86 603.104 1143.32 602.644 1142.78 602.185 1142.1 601.786 1141.29 601.449 1140.48 601.111 1139.54 600.868 1138.48 600.719 1137.41 600.571 1135.96 600.496 1134.12 600.496ZM1117.87 596.93 1135.9 596.93C1138.77 596.93 1141.1 597.099 1142.91 597.437 1144.72 597.774 1146.27 598.281 1147.55 598.956 1148.84 599.632 1149.91 600.503 1150.78 601.57 1151.64 602.638 1152.29 603.84 1152.72 605.177 1153.15 606.515 1153.37 607.94 1153.37 609.453 1153.37 613.614 1152.1 617.153 1149.56 620.071 1147.02 622.989 1143.28 625.205 1138.33 626.718L1138.33 627.163C1139.63 628.136 1140.68 629.298 1141.47 630.649 1142.27 632 1142.91 633.877 1143.4 636.282L1144.33 640.983C1144.63 642.469 1144.97 643.807 1145.35 644.995 1145.72 646.184 1146.18 647.13 1146.7 647.832 1147.23 648.535 1147.82 649.062 1148.49 649.413 1149.15 649.764 1150.11 650.048 1151.38 650.264L1150.98 652.25 1139.75 652.25C1138.89 649.845 1138.12 646.981 1137.44 643.658L1135.66 635.066C1135.36 633.58 1135 632.331 1134.59 631.317 1134.17 630.304 1133.67 629.521 1133.09 628.967 1132.5 628.413 1131.83 628.048 1131.06 627.873 1130.29 627.697 1129.35 627.609 1128.24 627.609L1123.62 627.609 1120.79 640.456C1120.54 641.51 1120.37 642.348 1120.28 642.969 1120.18 643.59 1120.1 644.246 1120.04 644.935 1119.97 645.624 1119.93 646.238 1119.93 646.779 1119.93 647.616 1120.07 648.271 1120.34 648.744 1120.61 649.217 1121.02 649.562 1121.56 649.778 1122.1 649.994 1123.03 650.156 1124.35 650.264L1123.91 652.25 1107.25 652.25 1107.7 650.264C1108.72 650.102 1109.49 649.838 1110.01 649.474 1110.52 649.109 1110.95 648.602 1111.3 647.954 1111.65 647.305 1111.98 646.515 1112.27 645.583 1112.57 644.651 1113.02 642.847 1113.61 640.173L1120.5 608.967C1121.1 606.265 1121.39 604.13 1121.39 602.563 1121.39 601.239 1121.08 600.321 1120.46 599.807 1119.84 599.294 1118.83 598.997 1117.42 598.916Z\" fill-rule=\"evenodd\"\/><text fill=\"#000000\" fill-opacity=\"0\" font-family=\"Arial,Arial_MSFontService,sans-serif\" font-size=\"55.3198\" x=\"1107.25\" y=\"645.335\">𝑅<\/text><\/g><\/svg>\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/math\/vectors.svg","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/specular color\/copper high.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/specular color\/copper low.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/specular color\/copper medium.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/specular color\/gold high.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/specular color\/gold low.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/texture animation\/animated gif map.gif","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/texture animation\/animated gif.gif","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/texture animation\/animated writable.gif","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/transparency\/high spec.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/transparency\/low spec tint.png","binary":true,"status":"added"},{"filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/paint\/doc-files\/transparency\/low spec.png","binary":true,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import com.sun.javafx.logging.PlatformLogger;\n@@ -30,0 +31,1 @@\n+\n@@ -34,1 +36,1 @@\n-import com.sun.javafx.logging.PlatformLogger;\n+import javafx.scene.shape.Shape3D;\n@@ -37,1 +39,3 @@\n- * Base class for representing the material of a 3D surface.\n+ * Base class for representing the material of a 3D surface. Materials are used to give a realistic appearance to\n+ * objects ({@link Shape3D}), corresponding to physical materials such as fabric, metal, plastic, glass, and wood. Each\n+ * material defines its interaction with light, for example, its reflective properties, giving it its appearance.\n@@ -39,3 +43,2 @@\n- * Note that this is a conditional feature. See\n- * {@link javafx.application.ConditionalFeature#SCENE3D ConditionalFeature.SCENE3D}\n- * for more information.\n+ * Note that this is a conditional feature. See {@link javafx.application.ConditionalFeature#SCENE3D\n+ * ConditionalFeature.SCENE3D} for more information.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/paint\/Material.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+\n@@ -38,1 +39,1 @@\n-import javafx.scene.PointLight;\n+import javafx.scene.LightBase;\n@@ -40,0 +41,3 @@\n+import javafx.scene.image.WritableImage;\n+import javafx.scene.shape.Shape3D;\n+import javafx.scene.shape.TriangleMesh;\n@@ -42,6 +46,313 @@\n- * The {@code PhongMaterial} class provides definitions of properties that\n- * represent a Phong shaded material. It describes the interaction of\n- * light with the surface of the {@code Mesh} it is applied to. The {@code PhongMaterial}\n- * reflects light in terms of a diffuse and specular component together with\n- * an ambient and a self illumination term. The color of a point on a geometric\n- * surface is mathematical function of these four components.\n+ * A material based on the Phong shading model. This material has several independent components that together give an\n+ * object its appearance using the <i>Phong shading model<\/i>. The material interacts with each illuminating light\n+ * separately, and the contribution from each light is summed.\n+ * <p>\n+ * The <i>diffuse<\/i> and <i>specular<\/i> components can be specified by a (solid) color and\/or a texture map\n+ * (represented as an image). If both are applied, their values are multiplied. For example:<br>\n+ * {@link javafx.scene.paint.Color#LIMEGREEN Color#LIMEGREEN} *\n+ * <img style=\"vertical-align:middle;height:128px\" src=\"doc-files\/color and map\/gradient.svg\" alt=\"Rainbow gradient\"> =\n+ * <img style=\"vertical-align:middle;height:128px\" src=\"doc-files\/color and map\/green gradient.svg\" alt=\"Green gradient\">\n+ * <p>\n+ * {@link javafx.scene.paint.Color#CYAN Color#CYAN} *\n+ * <img style=\"vertical-align:middle;height:128px\" src=\"doc-files\/color and map\/map.png\" alt=\"Map\"> =\n+ * <img style=\"vertical-align:middle;height:128px\" src=\"doc-files\/color and map\/map tint.png\" alt=\"Tinted map\">\n+ * <p>\n+ * Note: the <i>self-illumination<\/i> component can not currently be specified as a color. However, a color behaves like\n+ * a map (of any size) of a single color. Creating a 1x1 pixel map of that color will have the same effect.\n+ * <p>\n+ * {@code PhongMaterial} is not suitable for surfaces that act like mirrors and reflect their environment, such as\n+ * reflective metals, water, and reflective ceramics. Neither does light refract (bend) when passing through transparent\n+ * or translucnet materials such as water, glass, or ice. These materials rely on <i>Fresnel effects<\/i> that are not\n+ * implemented for this material.\n+ *\n+ * <h2>Components<\/h2>\n+ * <img style=\"float:left;height:180px\" src=\"doc-files\/components\/all.svg\" alt=\"Incident ray schematic\">\n+ * While in the physical world each light ray goes through a single path of reflection, transmission, or absorption, in\n+ * the computational world a number of adjacent rays are averaged into a single one that can split into multiple paths.\n+ * This approximation simplifies the computation model greatly while still allowing realistic rendering. The validity of\n+ * this approximation depends on microscopic details of the material, but it holds well for the vast majority of cases.\n+ * When an averaged incident ray (blue) hits the surface, it can split into many rays depending on the values of the\n+ * components of the material: rays that are either transmitted through the material (green) or reflected in all\n+ * directions via scattering (purple) depend on the diffuse component; rays that are reflected (orange), which depend on\n+ * the incident angle, are controlled by the specular component.\n+ * <p>\n+ * <div style=\"overflow:auto\">\n+ * <table style=\"float:right;text-align:center\">\n+ *   <caption>Material types<\/caption>\n+ *   <tr>\n+ *     <td><img style=\"height:60px\" src=\"doc-files\/components\/transparent.svg\" alt=\"Transparent schematic\"><\/td>\n+ *     <td><img style=\"height:60px\" src=\"doc-files\/components\/lambertian.svg\" alt=\"Lambertian schematic\"><\/td>\n+ *     <td><img style=\"height:60px\" src=\"doc-files\/components\/reflective.svg\" alt=\"Reflective schematic\"><\/td>\n+ *   <\/tr>\n+ *   <tr>\n+ *     <td>Transparent<\/td>\n+ *     <td>Lambertian<\/td>\n+ *     <td>Reflective<\/td>\n+ *   <\/tr>\n+ * <\/table>\n+ * Materials whose diffuse component allows only transmitted rays are transparent. These still have a specular component,\n+ * otherwise they will be invisible (no such material exists). Materials without a specular component and whose diffuse\n+ * component allows only reflected rays exhibit <i>Lambertian reflectance<\/i>. Lambertian materials reflect light in all\n+ * directions equally. Materials with a specular component and a diffuse component that only allows weak reflectance are\n+ * reflective.\n+ * <\/div>\n+ *\n+ * <h3>Diffuse<\/h3>\n+ * The diffuse component, sometimes called <i>albedo<\/i>, serves as the base color of the surface. It represents light\n+ * that is not reflected directly from the surface and instead enters the material.<br>\n+ * The alpha channel of the diffuse component controls the light that passes through it (transmitted). Decreasing this\n+ * value increases the transparency of the material and causes the object to appear translucent, and ultimately makes\n+ * it transparent. Materials such as glass and plastics can be simulated with a low alpha value.<br>\n+ * Light that isn't transmitted undergoes <i>subsurface scattering<\/i> that causes it to be absorbed in the material or\n+ * be reflected back to the surface, exiting in (approximately) all directions (irrespective of the incident angle). The\n+ * RGB channels of the diffuse component controls which colors are absorbed and which are reflected, giving the material\n+ * its base color. The higher one of the RGB values is, the more that material reflects that color.\n+ * <p>\n+ * The diffuse component interacts with all lights - both those that have directionality and {@code AmbientLight}, which\n+ * simulates a light that comes from all directions.\n+ * <p>\n+ * <b>Important:<\/b> there is currently a bug that causes objects with 0 opacity to not render at all (despite having a\n+ * specular or a self-illumination component). Setting the opacity to 1\/255 instead will give the desirable result.\n+ *\n+ * <h3>Specular<\/h3>\n+ * The specular component represents light that is reflected directly from the surface. For most materials, the color of\n+ * the specular component is on the gray scale regardless of the diffuse component's color. This means that the specular\n+ * highlight will be the light's color and not the material's color. These materials are sometimes called\n+ * <i>dielectrics<\/i>. Metals, on the other hand, reflect a color similar to their diffuse color (like yellow for gold\n+ * or reddish for copper) and get most of their appearance from the specular color. These materials are sometimes called\n+ * <i>conductors<\/i>.\n+ * <p>\n+ * The spread of the surface-reflected rays simulates the microgeometry that causes adjacent beams to be reflected in\n+ * different directions. Smooth surfaces' microgeometry varies little, causing them to have a strong specular component\n+ * that results in a glossy look, such as plastics, finished wood, and polished metals. Conversely, rough surfaces have\n+ * a varying microgeometry, weak specular component, and a matte look, such as unfinished wood, fabric, and cardboard.\n+ * This spread is controlled by the specular power, sometimes called <i>smoothness<\/i> or, conversely, <i>roughness<\/i>.\n+ *\n+ * A larger specular power simulates a smoother object, which\n+ * results in a smaller reflection.\n+ * <p>\n+ * The specular component interacts only with lights that have directionality (not {@code AmbientLight}) as it depends\n+ * on the incident ray direction, and also on the viewer position since it depends on the reflectance direction.\n+ * <p>\n+ * The alpha component of the specular color is not used at this time.\n+ *\n+ * <h3>Self-Illumination<\/h3>\n+ * The self-illumination component, also called <i>emissive<\/i>, represents light emitted by the object. It does not\n+ * interact with light sources and as such the viewer position does not matter. Specifying this component does not cause\n+ * the object to serve as a light source - a light has to be added at the position of the object with a color that\n+ * matches this color. If a multi-colored map is used, several lights of matching colors can be positioned appropriately\n+ * in the object's volume to give a realistic appearance.\n+ * <p>\n+ * The alpha component of the self-illumination color is not used at this time.\n+ *\n+ * <h3>Bump<\/h3>\n+ * The bump component gives the illusion of small height changes on the surface, like bumps and ridges. It is a\n+ * <i>normal map<\/i> (not a <i>height map<\/i> or a <i>displacement map<\/i>), which works by modifying the normals of\n+ * surfaces on the object, causing light to interact differently with the surface than it would have without it.\n+ * Tree trunks and rough stones can be simulated with a bump map.\n+ * <p>\n+ * Bump maps are less expensive than changing a mesh by subdividing a surface into many polygons facing different ways.\n+ * If the physical geometry of the surface is not important (for example, for intersection calculations), it's advised\n+ * to use a bump map.\n+ * <p>\n+ * The alpha component of the bump map is not used at this time.\n+ *\n+ * <h2>Mathematical Model<\/h2>\n+ * <div style=\"overflow:auto\">\n+ * <img style=\"float:left;height:180px\" src=\"doc-files\/math\/vectors.svg\" alt=\"Vectors in the Phong model\"> The image on\n+ * the left depicts a standard schematic of a scene with a mesh, a light source, and a camera. The black curve is the\n+ * required geometry, and the blue lines are the polygons (mesh) representing this geometry. Four normalized vectors are\n+ * considered for each point on the surface:<br>\n+ * <i>L<\/i> - the vector from the surface to the light source;<br>\n+ * <i>N<\/i> - the normal vector of the surface;<br>\n+ * <i>V<\/i> - the vector from the surface to the viewer (camera);<br>\n+ * <i>R<\/i> - the reflection vector of <i>L<\/i> from the surface. <i>R<\/i> can be calculated from <i>L<\/i> and <i>N<\/i>:\n+ * <i>R=2(L⋅N)N - L<\/i>.\n+ * <p>\n+ * The diffuse and and specular components are comprised of 3 factors: the geometry, the light's color, and the\n+ * material's color, each considered at every point on the surface. The light's color computation is described in\n+ * {@link LightBase} (and its subclasses). The material's color computation, as described above, is the multiplication\n+ * of the color and map properties. These factors are multiplied to get the final color.\n+ * <\/div>\n+ *\n+ * <h3>Bump<\/h3>\n+ * The default normal vector of a point on the polygon is <i>N=(0, 0, 1)<\/i> (facing away from the surface). If a bump\n+ * map is specified, this vector will have a different value based on the RGB values in the bump map:\n+ * <i>N=2 * RGB - 1<\/i>. The default value for a bump map (corresponding to the default normal) is\n+ * <i>RGB=(0.5, 0.5, 1)<\/i>, which is why bump maps tend to be blueish.\n+ * <p>\n+ * We will treat <i>N<\/i> as the normal vector after applying a bump map, if available.\n+ *\n+ * <h3>Diffuse<\/h3>\n+ * The diffuse component represents light scattered from the surface in all directions, hence, it depends on the\n+ * interaction between the light and the surface (and independent of the viewer position): <i>L⋅N<\/i>. <i>L⋅N<\/i>\n+ * is the geometric factor of the diffuse component. It moderates the intensity of the color resulting from the light\n+ * hitting the surface at different angles. If the light ray is parallel to the surface, <i>L⋅N=0<\/i> and the diffuse\n+ * contribution of the light will be 0; if the light ray is perpendicular to the surface (coincides with the normal\n+ * vector), <i>L⋅N=1<\/i> and no reduction in intensity occurs.\n+ * <p>\n+ * Defining the light's color as <i>C<sub>L<\/sub><\/i>, and the material's diffuse color as <i>C<sub>DM<\/sub><\/i>, we\n+ * multiply the 3 factors described above: <i>L⋅N * C<sub>L<\/sub> * C<sub>DM<\/sub><\/i>. For <i>i<\/i> lights illuminating\n+ * the surface, the contribution of each light is summed:<br>\n+ * <i>Σ<sub>i<\/sub>(L<sub>i<\/sub>⋅N * C<sub>Li<\/sub> * C<sub>DM<\/sub>)\n+ * = Σ<sub>i<\/sub>(L<sub>i<\/sub>⋅N * C<sub>Li<\/sub>) * C<sub>DM<\/sub><\/i>\n+ * (since <i>C<sub>DM<\/sub><\/i> is a property of the material and is the same for all lights).\n+ * <p>\n+ * Since {@link AmbientLight} simulates a light coming from and scattered in all directions, it contributes fully to the\n+ * diffuse component (<i>L⋅N=1<\/i>). We will define all the ambient lights' contribution as\n+ * <i>A=Σ<sub>i<\/sub>(C<sub>Li<\/sub>)<\/i> and all the other lights' (that have a light vector) as\n+ * <i>D=Σ<sub>i<\/sub>(L<sub>i<\/sub>⋅N * C<sub>Li<\/sub>)<\/i>. The total diffuse component contribution is then\n+ * <i>(A+D) * C<sub>DM<\/sub><\/i>.\n+ *\n+ * <h3>Specular<\/h3>\n+ * The specular component represents light reflected from the surface in a mirror-like reflection, hence, it depends on\n+ * the interaction between the reflected light and the viewer position: <i>R⋅V<\/i>. As similarly explained in the\n+ * diffuse component section, the geometric contribution is strongest when the viewer is aligned with the reflection\n+ * vector and is non-existant when they are perpendicular.\n+ * <p>\n+ * <img style=\"float:right;height:100px\" src=\"doc-files\/math\/specular power high.svg\" alt=\"High specular power\">\n+ * <img style=\"float:right;height:100px\" src=\"doc-files\/math\/specular power low.svg\" alt=\"Low specular power\">\n+ * The specular power, <i>P<\/i>, represents the smoothness of the surface. Smoother surfaces have more narrow\n+ * reflections and their specular power is smaller (right image), while rougher surfaces have more dispersed reflections\n+ * and their specular power is larger (left image). Since <i>0≤R⋅V≤1<\/i>, the term <i>(R⋅V)<sup>P<\/sup><\/i> decreases\n+ * as <i>P<\/i> increases, giving a smaller contribution.\n+ * <p>\n+ * Like with the diffuse component, the resulting specular color is computed by multiplying the geometric factor, the\n+ * light's color, and the material's specular color, <i>C<sub>SM<\/sub><\/i>, for each light:<br>\n+ * <i>Σ<sub>i<\/sub>((R<sub>i<\/sub>⋅V)<sup>P<\/sup> * C<sub>Li<\/sub>) * C<sub>SM<\/sub><\/i>,\n+ * and defining the specular lights' contribution as\n+ * <i>S=Σ<sub>i<\/sub>((R<sub>i<\/sub>⋅V)<sup>P<\/sup> * C<sub>Li<\/sub>)<\/i>,\n+ * the total specular component contribution is <i>S * C<sub>SM<\/sub><\/i>.\n+ *\n+ * <h3>Slef-Illumination<\/h3>\n+ * The self-illumination component represents light emanating from the surface, hence, it is not affected by lights, the\n+ * geometry, or the viewer position. Its contribution is just the material's self-illumination color,\n+ * <i>C<sub>LM<\/sub><\/i>.\n+ *\n+ * <h3>Summary<\/h3>\n+ *\n+ * The final color at the point of the computation is then:\n+ * <i>(A+D) * C<sub>DM<\/sub> + S * C<sub>SM<\/sub> + C<sub>LM<\/sub><\/i>.\n+ *\n+ * <h2>Examples<\/h2>\n+ * This section shows examples for simulating various common materials. Each image will be accompanied by the values\n+ * used for the material. Values that aren't specified are the default ones.\n+ *\n+ * <h3>Gloss<\/h3>\n+ * The specular power controls the size of specular highlights, which changes the gloss or smoothness look. Lower powers\n+ * create larger highlights and vice versa. Some plastics and marble exhibit this behavior, as shown here with 2\n+ * billiard balls:\n+ *\n+ * <table class=\"striped\">\n+ *   <caption>Materials values<\/caption>\n+ *   <tr>\n+ *     <td>Image<\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/gloss\/yellow low spec.png\" alt=\"Yellow ball with low specular power\"><\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/gloss\/red high spec.png\" alt=\"Red ball with high specular power\"><\/td>\n+ *   <\/tr>\n+ *   <tr>\n+ *     <td>Diffuse color<\/td>\n+ *     <td>{@code Color.YELLOW.darker()}<\/td>\n+ *     <td>{@code Color.RED.darker()}<\/td>\n+ *   <\/tr>\n+ *   <tr>\n+ *     <td>Specular color<\/td>\n+ *     <td>{@code Color.WHITE}<\/td>\n+ *     <td>{@code Color.WHITE}<\/td>\n+ *   <\/tr>\n+ *   <tr>\n+ *     <td>Specular power<\/td>\n+ *     <td>10<\/td>\n+ *     <td>150<\/td>\n+ *   <\/tr>\n+ * <\/table>\n+ *\n+ * <h3>Transparency<\/h3>\n+ * Some materials are transparent\/translucent, allowing most of the light through, like glass and plastics. This is\n+ * achieved with low diffuse opacity (alpha) values. Tint can be achieved with small RGB values in addition. The\n+ * smoothness of these materials also means a specular component is present with strength that depends on the\n+ * finish\/polish of the material. A high brightness specular color gives a more glossy look and a low brightness one\n+ * gives a more matte look.\n+ *\n+ * <table class=\"striped\">\n+ *   <caption>Material values<\/caption>\n+ *   <tr>\n+ *     <td>Image<\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/transparency\/high spec.png\" alt=\"Transparency with high specular reflection\"><\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/transparency\/low spec.png\" alt=\"Transparency with low specular reflection\"><\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/transparency\/low spec tint.png\" alt=\"Tinted transparency with low specular reflection\"><\/td>\n+ *   <\/tr>\n+ *   <tr>\n+ *     <td>Diffuse color<\/td>\n+ *     <td>{@code Color.rgb(0, 0, 0, 0.1)}<\/td>\n+ *     <td>{@code Color.rgb(0, 0, 0, 0.1)}<\/td>\n+ *     <td>{@code Color.rgb(0, 100, 0, 0.1)}<\/td>\n+ *   <\/tr>\n+ *   <tr>\n+ *     <td>Specular color<\/td>\n+ *     <td>{@code Color.hsb(0, 0, 90)}<\/td>\n+ *     <td>{@code Color.hsb(0, 0, 40)}<\/td>\n+ *     <td>{@code Color.hsb(0, 0, 40)}<\/td>\n+ *   <\/tr>\n+ * <\/table>\n+ *\n+ * <h3>Specular Color<\/h3>\n+ * Metals reflect their own color rather than the light's full color. In this case, the specular color should be similar\n+ * to the diffuse color, with its brightness affecting the shininess\/polish levels. Copper and gold are shown here.\n+ *\n+ * <table class=\"striped\">\n+ *   <caption>Material values<\/caption>\n+ *   <tr>\n+ *     <td>Image<\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/specular color\/copper low.png\" alt=\"Copper with low specular reflection\"><\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/specular color\/copper medium.png\" alt=\"Copper with medium specular reflection\"><\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/specular color\/copper high.png\" alt=\"Copper with high specular reflection\"><\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/specular color\/gold low.png\" alt=\"Gold with low specular reflection\"><\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/specular color\/gold high.png\" alt=\"Gold with high specular reflection\"><\/td>\n+ *   <\/tr>\n+ *   <tr>\n+ *     <td>Diffuse color<\/td>\n+ *     <td>{@code Color.hsb(20, 85, 70)}<\/td>\n+ *     <td>{@code Color.hsb(20, 85, 70)}<\/td>\n+ *     <td>{@code Color.hsb(20, 85, 70)}<\/td>\n+ *     <td>{@code Color.hsb(41, 82, 92)}<\/td>\n+ *     <td>{@code Color.hsb(41, 82, 92)}<\/td>\n+ *   <\/tr>\n+ *   <tr>\n+ *     <td>Specular color<\/td>\n+ *     <td>{@code Color.hsb(20, 85, 40)}<\/td>\n+ *     <td>{@code Color.hsb(20, 85, 70)}<\/td>\n+ *     <td>{@code Color.hsb(20, 85, 100)}<\/td>\n+ *     <td>{@code Color.hsb(41, 82, 30)}<\/td>\n+ *     <td>{@code Color.hsb(41, 82, 92)}<\/td>\n+ *   <\/tr>\n+ * <\/table>\n+ *\n+ * <h3>Maps and Surface Detail<\/h3>\n+ * The specular and bump maps can provide surface details that make the object look more realistic. A tree trunk, which\n+ * has none-to-low specularity, has a lot of grooves that can be emphasized with a bump map:\n+ * <div style=\"overflow:auto\">\n+ *   <figure style=\"float:left\">\n+ *     <img style=\"height:180px\" src=\"doc-files\/map detail\/diff\/diff map.png\" alt=\"Diffuse map\">\n+ *     <figcaption style=\"text-align:center\">Diffuse map<\/figcaption>\n+ *   <\/figure>\n+ *   <figure style=\"float:left\">\n+ *     <img style=\"height:180px\" src=\"doc-files\/map detail\/diff\/bump map.png\" alt=\"Bump map\">\n+ *     <figcaption style=\"text-align:center\">Bump map<\/figcaption>\n+ *   <\/figure>\n+ * <\/div>\n+ *\n+ * <table style=\"text-align:center\">\n+ *   <caption>Model with maps applied<\/caption>\n+ *   <tr>\n+ *     <td><img style=\"height:220px\" src=\"doc-files\/map detail\/diff\/bump.png\" alt=\"Tree trunk with bump map\"><\/td>\n+ *     <td><img style=\"height:220px\" src=\"doc-files\/map detail\/diff\/diff.png\" alt=\"Tree trunk with diffuse map\"><\/td>\n+ *     <td><img style=\"height:220px\" src=\"doc-files\/map detail\/diff\/diff+bump.png\" alt=\"Tree trunk with diffuse and bump maps\"><\/td>\n+ *   <\/tr>\n+ *   <tr>\n+ *     <td>Bump<\/td>\n+ *     <td>Diffuse<\/td>\n+ *     <td>Bump+Diffuse<\/td>\n+ *   <\/tr>\n+ * <\/table>\n+ * A diffuse color of {@code HSB=(0, 0, 60)} has been used to darken the wood.\n@@ -49,1 +360,16 @@\n- * The color is computed by the following equation:\n+ * Polished wood, like that used in housing, has a strong specular component due to the finish and buff. A combination\n+ * of a specular and a bump map highlights the details in the wood:\n+ * <div style=\"overflow:auto\">\n+ *   <figure style=\"float:left\">\n+ *     <img style=\"height:180px\" src=\"doc-files\/map detail\/spec\/diff map.png\" alt=\"Diffuse map\">\n+ *     <figcaption style=\"text-align:center\">Diffuse map<\/figcaption>\n+ *   <\/figure>\n+ *   <figure style=\"float:left\">\n+ *     <img style=\"height:180px\" src=\"doc-files\/map detail\/spec\/spec map.png\" alt=\"Specular map\">\n+ *     <figcaption style=\"text-align:center\">Specular map<\/figcaption>\n+ *   <\/figure>\n+ *   <figure style=\"float:left\">\n+ *     <img style=\"height:180px\" src=\"doc-files\/map detail\/spec\/bump map.png\" alt=\"Bump map\">\n+ *     <figcaption style=\"text-align:center\">Bump map<\/figcaption>\n+ *   <\/figure>\n+ * <\/div>\n@@ -51,4 +377,16 @@\n- * <pre>{@code\n- * for each ambient light source i {\n- *     ambient += lightColor[i]\n- * }\n+ * <table style=\"text-align:center\">\n+ *   <caption>Model with maps applied<\/caption>\n+ *   <tr>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/map detail\/spec\/diff.png\" alt=\"Finished wood with diffuse map\"><\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/map detail\/spec\/diff+spec.png\" alt=\"Finished wood with diffuse and specular maps\"><\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/map detail\/spec\/diff+bump.png\" alt=\"Finished wood with diffuse and bump maps\"><\/td>\n+ *     <td><img style=\"height:180px\" src=\"doc-files\/map detail\/spec\/diff+spec+bump.png\" alt=\"Finished wood with diffuse, specular, and bump maps\"><\/td>\n+ *   <\/tr>\n+ *   <tr>\n+ *     <td>Diffuse<\/td>\n+ *     <td>Diffuse+Specular<\/td>\n+ *     <td>Diffuse+Bump<\/td>\n+ *     <td>Diffuse+Specular+Bump<\/td>\n+ *   <\/tr>\n+ * <\/table>\n+ * A specular power of 100 has been used to give a more smooth look.\n@@ -56,4 +394,14 @@\n- * for each point light source i {\n- *     diffuse += (L[i] . N) * lightColor[i]\n- *     specular += ((R[i] . V) ^ (specularPower * intensity(specularMap))) * lightColor[i]\n- * }\n+ * <h3>Texture Animation<\/h3>\n+ * Texture animation and runtime effects can be achieved in different ways. Firstly, an animated GIF can be used as the\n+ * {@code Image} for texture maps, as demonstrated here when used as a diffuse map:<br>\n+ * <img style=\"height:180px\" src=\"doc-files\/texture animation\/animated gif.gif\" alt=\"Animation gif\">\n+ * <img style=\"height:180px\" src=\"doc-files\/texture animation\/animated gif map.gif\" alt=\"Animation gif as map\">\n+ * <p>\n+ * Secondly, by using a {@link WritableImage}, the pixel values can be changed programmatically, creating a live texture\n+ * as demonstrated for the diffuse map by this code snippet that repaints the image left to right and top to bottom:\n+ * <div style=\"overflow:auto\">\n+ * <img style=\"float:right;height:180px\" src=\"doc-files\/texture animation\/animated writable.gif\" alt=\"Writable image as map\">\n+ * <pre>{@code WritableImage diffuseMap = ...\n+ * material.setDiffuseMap(diffuseMap);\n+ * var timer = new AnimationTimer() {\n+ *     int x, y;\n@@ -61,3 +409,14 @@\n- * color = (ambient + diffuse) * diffuseColor * diffuseMap\n- *             + specular * specularColor * specularMap\n- *             + selfIlluminationMap\n+ *     @Override\n+ *     public void handle(long now) {\n+ *         diffuseMap.getPixelWriter().setColor(x, y, Color.color(0, 0, 1, 0.5));\n+ *         x++;\n+ *         if (x > diffuseMap.getWidth() - 1) {\n+ *             x = 0;\n+ *             y++;\n+ *             if (y > diffuseMap.getHeight() - 1) {\n+ *                 stop();\n+ *             }\n+ *         }\n+ *     }\n+ * };\n+ * timer.start();\n@@ -65,6 +424,4 @@\n- * where\n- * {@code lightColor[i]} is the color of light source i,<br>\n- * {@code L[i]} is the vector from the surface to light source i,<br>\n- * {@code N} is the normal vector (taking into the account the bumpMap if present),<br>\n- * {@code R[i]} is the normalized reflection vector for L[i] about the surface normal,<br>\n- * and {@code V} is the normalized view vector.\n+ * <\/div>\n+ * Other maps can be modified as well, producing various effects.<br>\n+ * Another way to animate textures is done through changing the {@link TriangleMesh#getTexCoords() texture coordinates}\n+ * of the mesh, the explanation for which is out of scope for this class.\n@@ -72,2 +429,2 @@\n- * @see AmbientLight\n- * @see PointLight\n+ * @see LightBase\n+ * @see Shape3D\n@@ -87,2 +444,1 @@\n-     * Creates a new instance of {@code PhongMaterial} class with a default\n-     * Color.WHITE {@code diffuseColor} property.\n+     * Creates a new instance of {@code PhongMaterial} class with a default {@code Color.WHITE diffuseColor} property.\n@@ -113,1 +469,0 @@\n-     *\n@@ -127,1 +482,1 @@\n-     * @defaultValue Color.WHITE\n+     * @defaultValue {@code Color.WHITE}\n@@ -141,2 +496,1 @@\n-            diffuseColor = new SimpleObjectProperty<>(PhongMaterial.this,\n-                    \"diffuseColor\") {\n+            diffuseColor = new SimpleObjectProperty<>(PhongMaterial.this, \"diffuseColor\") {\n@@ -156,1 +510,1 @@\n-     * @defaultValue null\n+     * @defaultValue {@code null}\n@@ -170,2 +524,1 @@\n-            specularColor = new SimpleObjectProperty<>(PhongMaterial.this,\n-                    \"specularColor\") {\n+            specularColor = new SimpleObjectProperty<>(PhongMaterial.this, \"specularColor\") {\n@@ -199,2 +552,1 @@\n-            specularPower = new SimpleDoubleProperty(PhongMaterial.this,\n-                    \"specularPower\", 32.0) {\n+            specularPower = new SimpleDoubleProperty(PhongMaterial.this, \"specularPower\", 32.0) {\n@@ -234,1 +586,1 @@\n-     * @defaultValue null\n+     * @defaultValue {@code null}\n@@ -248,0 +600,1 @@\n+\n@@ -250,2 +603,1 @@\n-            diffuseMap = new SimpleObjectProperty<>(PhongMaterial.this,\n-                    \"diffuseMap\") {\n+            diffuseMap = new SimpleObjectProperty<>(PhongMaterial.this, \"diffuseMap\") {\n@@ -283,1 +635,1 @@\n-     * @defaultValue null\n+     * @defaultValue {@code null}\n@@ -297,0 +649,1 @@\n+\n@@ -299,2 +652,1 @@\n-            specularMap = new SimpleObjectProperty<>(PhongMaterial.this,\n-                    \"specularMap\") {\n+            specularMap = new SimpleObjectProperty<>(PhongMaterial.this, \"specularMap\") {\n@@ -331,2 +683,1 @@\n-     * The bump map of this {@code PhongMaterial}, which is a normal map stored\n-     * as a RGB {@link Image}.\n+     * The bump map of this {@code PhongMaterial}, which is a normal map stored as an RGB image.\n@@ -334,1 +685,1 @@\n-     * @defaultValue null\n+     * @defaultValue {@code null}\n@@ -348,0 +699,1 @@\n+\n@@ -350,2 +702,1 @@\n-            bumpMap = new SimpleObjectProperty<>(PhongMaterial.this,\n-                    \"bumpMap\") {\n+            bumpMap = new SimpleObjectProperty<>(PhongMaterial.this, \"bumpMap\") {\n@@ -384,1 +735,1 @@\n-     * @defaultValue null\n+     * @defaultValue {@code null}\n@@ -398,0 +749,1 @@\n+\n@@ -400,2 +752,1 @@\n-            selfIlluminationMap = new SimpleObjectProperty<>(PhongMaterial.this,\n-                    \"selfIlluminationMap\") {\n+            selfIlluminationMap = new SimpleObjectProperty<>(PhongMaterial.this, \"selfIlluminationMap\") {\n@@ -457,1 +808,1 @@\n-    void updatePG(){\n+    void updatePG() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/paint\/PhongMaterial.java","additions":405,"deletions":54,"binary":false,"changes":459,"status":"modified"}]}