{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import static org.junit.Assume.assumeTrue;\n@@ -58,2 +59,2 @@\n-    private final PGFont font = (PGFont) FontHelper.getNativeFont(Font.font(\"Monaco\", 12));\n-    private final PGFont font2 = (PGFont) FontHelper.getNativeFont(Font.font(\"Tahoma\", 12));\n+    private final PGFont arialFont = (PGFont) FontHelper.getNativeFont(Font.font(\"Arial\", 12));\n+    private final PGFont tahomaFont = (PGFont) FontHelper.getNativeFont(Font.font(\"Tahoma\", 12));\n@@ -135,1 +136,1 @@\n-        layout.setContent(\"aa\" + J + J, font);\n+        layout.setContent(\"aa\" + J + J, arialFont);\n@@ -139,1 +140,1 @@\n-        layout.setContent(D, font);\n+        layout.setContent(D, arialFont);\n@@ -143,1 +144,1 @@\n-        layout.setContent(\"aa\" + D + D, font);\n+        layout.setContent(\"aa\" + D + D, arialFont);\n@@ -147,1 +148,1 @@\n-        layout.setContent(D + D + \"aa\", font);\n+        layout.setContent(D + D + \"aa\", arialFont);\n@@ -151,1 +152,1 @@\n-        layout.setContent(\"aa\" + D + D + J + J, font);\n+        layout.setContent(\"aa\" + D + D + J + J, arialFont);\n@@ -156,1 +157,1 @@\n-        layout.setContent(D + D + T + T, font2);\n+        layout.setContent(D + D + T + T, tahomaFont);\n@@ -160,1 +161,1 @@\n-        layout.setContent(T + T + D + D + T + T, font2);\n+        layout.setContent(T + T + D + D + T + T, tahomaFont);\n@@ -164,1 +165,1 @@\n-        layout.setContent(T + T + D + D + \"aa\", font2);\n+        layout.setContent(T + T + D + D + \"aa\", tahomaFont);\n@@ -168,1 +169,1 @@\n-        layout.setContent(T + T + \"aa\" + T + T, font2);\n+        layout.setContent(T + T + \"aa\" + T + T, tahomaFont);\n@@ -172,1 +173,1 @@\n-        layout.setContent(\"aa\" + D + D + T + T, font2);\n+        layout.setContent(\"aa\" + D + D + T + T, tahomaFont);\n@@ -183,1 +184,4 @@\n-        layout.setContent(\"aa\" + J + J, font);\n+        assumeArialFontAvailable();\n+        assumeTahomaFontAvailable();\n+\n+        layout.setContent(\"aa\" + J + J, arialFont);\n@@ -187,1 +191,1 @@\n-        layout.setContent(D, font);\n+        layout.setContent(D, arialFont);\n@@ -191,1 +195,1 @@\n-        layout.setContent(\"aa\" + D + D, font);\n+        layout.setContent(\"aa\" + D + D, arialFont);\n@@ -195,1 +199,1 @@\n-        layout.setContent(D + D + \"aa\", font);\n+        layout.setContent(D + D + \"aa\", arialFont);\n@@ -199,1 +203,1 @@\n-        layout.setContent(\"aa\" + D + D + J + J, font);\n+        layout.setContent(\"aa\" + D + D + J + J, arialFont);\n@@ -204,1 +208,1 @@\n-        layout.setContent(D + D + T + T, font2);\n+        layout.setContent(D + D + T + T, tahomaFont);\n@@ -208,1 +212,1 @@\n-        layout.setContent(T + T + D + D + T + T, font2);\n+        layout.setContent(T + T + D + D + T + T, tahomaFont);\n@@ -212,1 +216,1 @@\n-        layout.setContent(T + T + D + D + \"aa\", font2);\n+        layout.setContent(T + T + D + D + \"aa\", tahomaFont);\n@@ -216,1 +220,1 @@\n-        layout.setContent(T + T + \"aa\" + T + T, font2);\n+        layout.setContent(T + T + \"aa\" + T + T, tahomaFont);\n@@ -220,1 +224,1 @@\n-        layout.setContent(\"aa\" + D + D + T + T, font2);\n+        layout.setContent(\"aa\" + D + D + T + T, tahomaFont);\n@@ -227,0 +231,2 @@\n+        assumeArialFontAvailable();\n+\n@@ -228,1 +234,1 @@\n-        layout.setContent(\"hello\", font);\n+        layout.setContent(\"hello\", arialFont);\n@@ -232,1 +238,1 @@\n-        layout.setContent(\"hello world\", font);\n+        layout.setContent(\"hello world\", arialFont);\n@@ -236,1 +242,1 @@\n-        layout.setContent(\"\", font);\n+        layout.setContent(\"\", arialFont);\n@@ -240,1 +246,1 @@\n-        layout.setContent(\"\\n\", font);  \/\/ first line has the line break (glyphCount=0)\n+        layout.setContent(\"\\n\", arialFont);  \/\/ first line has the line break (glyphCount=0)\n@@ -242,1 +248,1 @@\n-        layout.setContent(\"\\r\", font);\n+        layout.setContent(\"\\r\", arialFont);\n@@ -244,1 +250,1 @@\n-        layout.setContent(\"\\r\\n\", font);\n+        layout.setContent(\"\\r\\n\", arialFont);\n@@ -246,1 +252,1 @@\n-        layout.setContent(\"a\\nb\", font);\n+        layout.setContent(\"a\\nb\", arialFont);\n@@ -248,1 +254,1 @@\n-        layout.setContent(\"\\n\\n\\r\\r\\n\", font);\n+        layout.setContent(\"\\n\\n\\r\\r\\n\", arialFont);\n@@ -252,1 +258,1 @@\n-        layout.setContent(\"\\t\", font);\n+        layout.setContent(\"\\t\", arialFont);\n@@ -254,1 +260,1 @@\n-        layout.setContent(\"\\t\\t\", font);\n+        layout.setContent(\"\\t\\t\", arialFont);\n@@ -256,1 +262,1 @@\n-        layout.setContent(\"a\\tb\", font);\n+        layout.setContent(\"a\\tb\", arialFont);\n@@ -262,1 +268,3 @@\n-        setContent(layout, \"hello \", font, \"world\", font);\n+        assumeArialFontAvailable();\n+\n+        setContent(layout, \"hello \", arialFont, \"world\", arialFont);\n@@ -266,1 +274,1 @@\n-        setContent(layout, \"aaa\", font, J + J + J, font);\n+        setContent(layout, \"aaa\", arialFont, J + J + J, arialFont);\n@@ -270,1 +278,1 @@\n-        setContent(layout, \"aaa\", font, D + D + D, font);\n+        setContent(layout, \"aaa\", arialFont, D + D + D, arialFont);\n@@ -275,1 +283,1 @@\n-        setContent(layout, \"aa\\r\", font, \"\\nbb\", font);\n+        setContent(layout, \"aa\\r\", arialFont, \"\\nbb\", arialFont);\n@@ -279,1 +287,1 @@\n-        setContent(layout, \"aa\\r\\n\", font, \"bb\", font);\n+        setContent(layout, \"aa\\r\\n\", arialFont, \"bb\", arialFont);\n@@ -284,1 +292,1 @@\n-        setContent(layout, \"\\uD840\\uDC0B\", font, \"\\uD840\\uDC89\\uD840\\uDCA2\", font);\n+        setContent(layout, \"\\uD840\\uDC0B\", arialFont, \"\\uD840\\uDC89\\uD840\\uDCA2\", arialFont);\n@@ -295,1 +303,1 @@\n-        setContent(layout, \"\\uD840\\uDC0B\\uD840\", font, \"\\uDC89\\uD840\\uDCA2\", font);\n+        setContent(layout, \"\\uD840\\uDC0B\\uD840\", arialFont, \"\\uDC89\\uD840\\uDCA2\", arialFont);\n@@ -306,0 +314,5 @@\n+    private static final float ARIAL_ASCENT = -10.863281f;\n+    private static final float ARIAL_DESCENT = 2.9355469f;\n+    private static final float ARIAL_SPACE_ADVANCE = 3.333984375f;\n+    private static final float ARIAL_TAB_ADVANCE = ARIAL_SPACE_ADVANCE * 8;\n+\n@@ -308,1 +321,3 @@\n-        layout.setContent(\"The quick brown fox jumps over the lazy dog\", font);\n+        assumeArialFontAvailable();\n+\n+        layout.setContent(\"The quick brown fox jumps over the lazy dog\", arialFont);\n@@ -314,1 +329,1 @@\n-            assertLineBounds(new RectBounds(0, -12, 309.6504f, 4.001953f));\n+            assertLineBounds(new RectBounds(0, ARIAL_ASCENT, 237.45117f, ARIAL_DESCENT));\n@@ -325,3 +340,1 @@\n-            Font.font(\"Monaco\", 12),\n-            0.0f, List.of(309.6504f),\n-            12.0f, 4.001953f\n+            0.0f, List.of(237.45117f)\n@@ -338,3 +351,1 @@\n-            Font.font(\"Monaco\", 12),\n-            0.0f, List.of(180.0293f, 122.41992f),\n-            12.0f, 4.001953f\n+            0.0f, List.of(142.72852f, 91.38867f)\n@@ -349,3 +360,1 @@\n-            Font.font(\"Monaco\", 12),\n-            0.0f, List.of(180.0293f + 79.2129f, 122.41992f + 79.2129f),\n-            12.0f, 4.001953f\n+            0.0f, List.of(142.72852f + 11 * ARIAL_SPACE_ADVANCE, 91.38867f + 11 * ARIAL_SPACE_ADVANCE)\n@@ -360,3 +369,1 @@\n-            Font.font(\"Monaco\", 12),\n-            0.0f, List.of(79.21289f, 79.21289f, 79.21289f),\n-            12.0f, 4.001953f\n+            0.0f, List.of(46.01367f, 46.01367f, 46.01367f)\n@@ -370,3 +377,1 @@\n-            Font.font(\"Monaco\", 12),\n-            0.0f, List.of(57.609375f, 57.609375f * 2, 57.609375f * 3),\n-            12.0f, 4.001953f\n+            0.0f, List.of(ARIAL_TAB_ADVANCE, ARIAL_TAB_ADVANCE * 2, ARIAL_TAB_ADVANCE * 3)\n@@ -382,3 +387,1 @@\n-            Font.font(\"Monaco\", 12),\n-            200.0f, List.of(180.0293f, 122.41992f),\n-            12.0f, 4.001953f\n+            145.0f, List.of(142.72852f, 91.38867f)\n@@ -395,3 +398,1 @@\n-            Font.font(\"Monaco\", 12),\n-            200.0f, List.of(136.82226f + 28.80469f, 165.62695f),\n-            12.0f, 4.001953f\n+            145.0f, List.of(107.384762f + 4 * ARIAL_SPACE_ADVANCE, 126.73242f)\n@@ -408,3 +409,1 @@\n-            Font.font(\"Monaco\", 12),\n-            200.0f, List.of(180.0293f, 122.41992f + 28.80469f),\n-            12.0f, 4.001953f\n+            145.0f, List.of(142.72852f, 91.38867f + 4 * ARIAL_SPACE_ADVANCE)\n@@ -420,3 +419,1 @@\n-            Font.font(\"Monaco\", 12),\n-            200.0f, List.of(180.0293f, 122.41992f),\n-            12.0f, 4.001953f\n+            145.0f, List.of(142.72852f, 91.38867f)\n@@ -432,3 +429,1 @@\n-            Font.font(\"Monaco\", 12),\n-            200.0f, List.of(189.89649f, 122.583984f),\n-            12.0f, 4.001953f\n+            160.0f, List.of(158.1914f, 93.134766f)\n@@ -442,1 +437,1 @@\n-        SOFT_WRAP_WITH_COMPLEX_TEXT_AND_EXTRA_TRAILING_SPACE(new Parameters(\n+        SOFT_WRAP_WITH_COMPLEX_TEXT_AND_EXTRA_SPACE(new Parameters(\n@@ -444,3 +439,1 @@\n-            Font.font(\"Monaco\", 12),\n-            200.0f, List.of(189.89649f, 122.583984f),\n-            12.0f, 4.001953f\n+            160.0f, List.of(158.1914f, 93.134766f)\n@@ -455,1 +448,1 @@\n-        record Parameters(String text, Font font, float wrapWidth, List<Float> lineWidths, float ascent, float descent) {\n+        record Parameters(String text, float wrapWidth, List<Float> lineWidths) {\n@@ -458,1 +451,0 @@\n-                assert font != null;\n@@ -461,2 +453,0 @@\n-                assert ascent > 0;\n-                assert descent > 0;\n@@ -479,0 +469,2 @@\n+        assumeArialFontAvailable();\n+\n@@ -481,2 +473,2 @@\n-        final float ASCENT = p.ascent;\n-        final float DESCENT = p.descent;\n+        final float ASCENT = -ARIAL_ASCENT;\n+        final float DESCENT = ARIAL_DESCENT;\n@@ -488,1 +480,1 @@\n-                layout.setContent(p.text, FontHelper.getNativeFont(p.font));\n+                layout.setContent(p.text, arialFont);\n@@ -492,1 +484,1 @@\n-                layout.setContent(Arrays.stream(p.text.split(\"(?<=\\n)\")).map(text -> new TestSpan(text, FontHelper.getNativeFont(p.font))).toArray(TextSpan[]::new));\n+                layout.setContent(Arrays.stream(p.text.split(\"(?<=\\n)\")).map(text -> new TestSpan(text, arialFont)).toArray(TextSpan[]::new));\n@@ -565,4 +557,3 @@\n-    @Test\n-    void fail() {\n-        String fontDescription1 = \"[\" + font.getFullName() + \", \" + font.getFamilyName() + \", \" + font.getStyleName() + \", \" + font.getName() + \", \" + font.getSize() + \"]\";\n-        String fontDescription2 = \"[\" + font2.getFullName() + \", \" + font2.getFamilyName() + \", \" + font2.getStyleName() + \", \" + font2.getName() + \", \" + font2.getSize() + \"]\";\n+    private void assumeArialFontAvailable() {\n+        assumeTrue(\"Arial font missing\", arialFont.getName().equals(\"Arial\"));\n+    }\n@@ -570,1 +561,2 @@\n-        assertTrue(false, \"Check if this system test actually runs on the build environment; font loaded was \" + fontDescription1 + \" and \" + fontDescription2);\n+    private void assumeTahomaFontAvailable() {\n+        assumeTrue(\"Tahoma font missing\", arialFont.getName().equals(\"Tahoma\"));\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/javafx\/text\/TextLayoutTest.java","additions":81,"deletions":89,"binary":false,"changes":170,"status":"modified"}]}