{"files":[{"patch":"@@ -276,1 +276,1 @@\n-String pathGetFileName(const String& path)\n+String pathFileName(const String& path)\n@@ -444,7 +444,0 @@\n-String pathFileName(const String& path)\n-{\n-    UNUSED_PARAM(path);\n-   \/\/ return path.substring(path.reverseFind('\/') + 1);\n-   return nullString();\n-}\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/java\/FileSystemJava.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -138,1 +138,0 @@\n-#if !PLATFORM(JAVA)\n@@ -140,4 +139,0 @@\n-#else\n-    \/\/ Use simple path not from std::FileSystem\n-    effectiveName = nameOverride.isEmpty() ? path : nameOverride;\n-#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/fileapi\/File.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene.web;\n+\n+import com.sun.javafx.webkit.UIClientImplShim;\n+import com.sun.webkit.WebPage;\n+import com.sun.webkit.WebPageShim;\n+import javafx.concurrent.Worker.State;\n+import javafx.scene.web.WebEngineShim;\n+import netscape.javascript.JSObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.util.Base64;\n+import java.util.concurrent.CountDownLatch;\n+\n+import static javafx.concurrent.Worker.State.SUCCEEDED;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class FileTest extends TestBase {\n+    private final WebPage page = WebEngineShim.getPage(getEngine());\n+    private String[] fileList = { new File(\"src\/test\/resources\/test\/html\/HelloWorld.txt\").getAbsolutePath() };\n+\n+    private State getLoadState() {\n+        return submit(() -> getEngine().getLoadWorker().getState());\n+    }\n+\n+    private String getScriptString(String api) {\n+        String scriptContent = String.format(\"<script type='text\/javascript'>\" +\n+                                    \"var result;\" +\n+                                    \"window.addEventListener('click', (e) => {\" +\n+                                        \"document.getElementById('file').click();\" +\n+                                    \"});\" +\n+                                    \"function readFile()\" +\n+                                    \"{\" +\n+                                        \"file = event.target.files[0];\" +\n+                                        \"result = file.\" + api + \";\" +\n+                                    \"}\" +\n+                               \"<\/script>\" +\n+                               \"<body> <input type='file' id='file' onchange='readFile()'\/><\/body>\");\n+        return scriptContent;\n+    }\n+\n+    @Before\n+    public void before() {\n+        UIClientImplShim.test_setChooseFiles(fileList);\n+    }\n+\n+    private void loadFileReaderTestScript(String testScript) {\n+        loadContent(testScript);\n+        submit(() -> {\n+            \/\/ we send a dummy mouse click event at (0,0) to simulate click on file chooser button.\n+            WebPageShim.click(page, 0, 0);\n+        });\n+    }\n+\n+    @Test public void testFileName() {\n+        loadFileReaderTestScript(getScriptString(\"name\"));\n+        submit(() -> {\n+            assertEquals(\"Unexpected file name received\", \"HelloWorld.txt\", getEngine().executeScript(\"window.result\"));\n+        });\n+    }\n+}\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/FileTest.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"}]}