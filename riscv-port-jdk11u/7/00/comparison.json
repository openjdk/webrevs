{"files":[{"patch":"@@ -314,3 +314,1 @@\n-#ifdef ASSERT\n-  call->verify();\n-#endif\n+  DEBUG_ONLY(call->verify());\n@@ -323,3 +321,1 @@\n-#ifdef ASSERT\n-  call->verify();\n-#endif\n+  DEBUG_ONLY(call->verify());\n@@ -365,1 +361,1 @@\n-  void  set_data(intptr_t x);\n+  void set_data(intptr_t x);\n@@ -373,2 +369,2 @@\n-  void  verify();\n-  void  print();\n+  void verify();\n+  void print();\n@@ -384,3 +380,1 @@\n-#ifdef ASSERT\n-  test->verify();\n-#endif\n+  DEBUG_ONLY(test->verify());\n@@ -393,3 +387,1 @@\n-#ifdef ASSERT\n-  test->verify();\n-#endif\n+  DEBUG_ONLY(test->verify());\n@@ -399,1 +391,2 @@\n-\/\/ RISCV should not use C1 runtime patching, so just leave NativeMovRegMem Unimplemented.\n+\/\/ RISCV should not use C1 runtime patching, but still implement\n+\/\/ NativeMovRegMem to keep some compilers happy.\n@@ -402,4 +395,6 @@\n-  int instruction_start() const {\n-    Unimplemented();\n-    return 0;\n-  }\n+  enum RISCV_specific_constants {\n+    instruction_size            =    NativeInstruction::instruction_size,\n+    instruction_offset          =    0,\n+    data_offset                 =    0,\n+    next_instruction_offset     =    NativeInstruction::instruction_size\n+  };\n@@ -407,4 +402,1 @@\n-  address instruction_address() const {\n-    Unimplemented();\n-    return NULL;\n-  }\n+  int instruction_start() const { return instruction_offset; }\n@@ -412,4 +404,3 @@\n-  int num_bytes_to_end_of_patch() const {\n-    Unimplemented();\n-    return 0;\n-  }\n+  address instruction_address() const { return addr_at(instruction_offset); }\n+\n+  int num_bytes_to_end_of_patch() const { return instruction_offset + instruction_size; }\n@@ -421,1 +412,3 @@\n-  void add_offset_in_bytes(int add_offset) { Unimplemented(); }\n+  void add_offset_in_bytes(int add_offset) {\n+    set_offset(offset() + add_offset);\n+  }\n@@ -427,1 +420,1 @@\n-  inline friend NativeMovRegMem* nativeMovRegMem_at (address addr);\n+  inline friend NativeMovRegMem* nativeMovRegMem_at(address addr);\n@@ -430,3 +423,4 @@\n-inline NativeMovRegMem* nativeMovRegMem_at (address addr) {\n-  Unimplemented();\n-  return NULL;\n+inline NativeMovRegMem* nativeMovRegMem_at(address addr) {\n+  NativeMovRegMem* test = (NativeMovRegMem*)(addr - NativeMovRegMem::instruction_offset);\n+  DEBUG_ONLY(test->verify());\n+  return test;\n@@ -463,3 +457,1 @@\n-#ifdef ASSERT\n-  jump->verify();\n-#endif\n+  DEBUG_ONLY(jump->verify());\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.hpp","additions":28,"deletions":36,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-  \/\/  t2: CompiledICHolder\n+  \/\/  t1: CompiledICHolder\n","filename":"src\/hotspot\/cpu\/riscv\/vtableStubs_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}