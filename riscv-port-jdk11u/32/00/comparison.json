{"files":[{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -48,1 +48,0 @@\n-  assert_cond(masm != NULL);\n@@ -91,1 +90,0 @@\n-  assert_cond(masm != NULL);\n@@ -112,1 +110,0 @@\n-  assert_cond(masm != NULL);\n@@ -180,1 +177,0 @@\n-  assert_cond(masm != NULL);\n@@ -257,1 +253,0 @@\n-  assert_cond(masm != NULL);\n@@ -281,1 +276,0 @@\n-  assert_cond(masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -42,2 +42,0 @@\n-  assert_cond(masm != NULL);\n-\n@@ -84,1 +82,0 @@\n-  assert_cond(masm != NULL);\n@@ -126,1 +123,0 @@\n-  assert_cond(masm != NULL);\n@@ -141,1 +137,0 @@\n-  assert_cond(masm != NULL);\n@@ -221,1 +216,0 @@\n-  assert_cond(masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-  assert_cond(masm != NULL);\n@@ -72,1 +71,0 @@\n-  assert_cond(masm != NULL);\n@@ -120,1 +118,0 @@\n-      assert_cond(masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/cardTableBarrierSetAssembler_riscv.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -34,1 +34,0 @@\n-\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/modRefBarrierSetAssembler_riscv.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n-    assert_cond(masm != NULL);\n@@ -73,1 +72,0 @@\n-    assert_cond(masm != NULL);\n@@ -80,1 +78,0 @@\n-    assert_cond(masm != NULL);\n@@ -87,1 +84,0 @@\n-    assert_cond(masm != NULL);\n@@ -1648,1 +1644,0 @@\n-  assert_cond(masm != NULL);\n@@ -1657,1 +1652,0 @@\n-  assert_cond(_masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-  assert_cond(_masm != NULL);\n@@ -72,1 +71,0 @@\n-  assert_cond(_masm != NULL);\n@@ -101,1 +99,0 @@\n-  assert_cond(_masm != NULL);\n@@ -132,1 +129,0 @@\n-  assert_cond(_masm != NULL);\n@@ -171,1 +167,0 @@\n-  assert_cond(_masm != NULL);\n@@ -259,1 +254,0 @@\n-  assert_cond(_masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/methodHandles_riscv.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -132,1 +132,0 @@\n-  assert_cond(masm != NULL && total_frame_words != NULL);\n@@ -180,1 +179,0 @@\n-  assert_cond(masm != NULL);\n@@ -311,1 +309,0 @@\n-  assert_cond(masm != NULL);\n@@ -715,1 +712,0 @@\n-  assert_cond(masm != NULL);\n@@ -745,1 +741,0 @@\n-  assert_cond(masm != NULL && map != NULL && receiver_offset != NULL);\n@@ -828,1 +823,0 @@\n-  assert_cond(masm != NULL);\n@@ -849,1 +843,0 @@\n-  assert_cond(masm != NULL);\n@@ -873,1 +866,0 @@\n-  assert_cond(masm != NULL);\n@@ -893,1 +885,0 @@\n-  assert_cond(masm != NULL);\n@@ -911,1 +902,0 @@\n-  assert_cond(masm != NULL);\n@@ -929,1 +919,0 @@\n-  assert_cond(masm != NULL && args != NULL);\n@@ -943,1 +932,0 @@\n-  assert_cond(masm != NULL && args != NULL);\n@@ -964,1 +952,0 @@\n-  assert_cond(masm != NULL);\n@@ -2448,1 +2435,1 @@\n-  assert (StubRoutines::forward_exception_entry() != NULL, \"must be generated before\");\n+  assert(StubRoutines::forward_exception_entry() != NULL, \"must be generated before\");\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -77,2 +77,1 @@\n-static inline Address iaddress(Register r,  Register temp, InterpreterMacroAssembler* _masm) {\n-  assert_cond(_masm != NULL);\n+static inline Address iaddress(Register r, Register temp, InterpreterMacroAssembler* _masm) {\n@@ -83,3 +82,1 @@\n-static inline Address laddress(Register r, Register temp,\n-                               InterpreterMacroAssembler* _masm) {\n-  assert_cond(_masm != NULL);\n+static inline Address laddress(Register r, Register temp, InterpreterMacroAssembler* _masm) {\n@@ -94,2 +91,1 @@\n-static inline Address daddress(Register r, Register temp,\n-                               InterpreterMacroAssembler* _masm) {\n+static inline Address daddress(Register r, Register temp, InterpreterMacroAssembler* _masm) {\n@@ -141,1 +137,0 @@\n-  assert_cond(_masm != NULL);\n@@ -149,1 +144,0 @@\n-  assert_cond(_masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"}]}