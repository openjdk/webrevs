{"files":[{"patch":"@@ -1114,0 +1114,5 @@\n+    \/\/ The lambda proxy class and its nest host have the same class loader and class loader data,\n+    \/\/ as verified in SystemDictionaryShared::add_lambda_proxy_class()\n+    assert(shared_nest_host->class_loader() == class_loader(), \"mismatched class loader\");\n+    assert(shared_nest_host->class_loader_data() == class_loader_data(class_loader), \"mismatched class loader data\");\n+    ik->set_nest_host(shared_nest_host);\n@@ -1116,6 +1121,0 @@\n-  \/\/ The lambda proxy class and its nest host have the same class loader and class loader data,\n-  \/\/ as verified in SystemDictionaryShared::add_lambda_proxy_class()\n-  assert(shared_nest_host->class_loader() == class_loader(), \"mismatched class loader\");\n-  assert(shared_nest_host->class_loader_data() == class_loader_data(class_loader), \"mismatched class loader data\");\n-  ik->set_nest_host(shared_nest_host);\n-\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8323950\n+ * @summary Transforming an interface of an archived lambda proxy class should not\n+ *          crash the VM. The lambda proxy class should be regenerated during runtime.\n+ * @requires vm.cds\n+ * @requires vm.jvmti\n+ * @requires vm.flagless\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\n+ * @compile test-classes\/SimpleTest.java\n+ * @compile test-classes\/TransformBootClass.java\n+ * @run driver TransformInterfaceOfLambda\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+\n+public class TransformInterfaceOfLambda {\n+\n+    public static String agentClasses[] = {\n+        TransformBootClass.class.getName(),\n+    };\n+\n+    public static void main(String[] args) throws Exception {\n+        String mainClass = SimpleTest.class.getName();\n+        String namePrefix = \"transform-interface-of-lambda\";\n+        JarBuilder.build(namePrefix, mainClass);\n+\n+        String appJar = TestCommon.getTestJar(namePrefix + \".jar\");\n+\n+        String agentJar =\n+            ClassFileInstaller.writeJar(\"TransformBootClass.jar\",\n+                                        ClassFileInstaller.Manifest.fromSourceFile(\"test-classes\/TransformBootClass.mf\"),\n+                                        agentClasses);\n+        String useJavaAgent = \"-javaagent:\" + agentJar + \"=java\/util\/function\/IntFunction\";\n+\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-cp\", appJar, \"-Xlog:class+load,cds=debug\",\n+            \"-XX:+UnlockDiagnosticVMOptions\",\n+            \"-XX:+AllowArchivingWithJavaAgent\",\n+            useJavaAgent,\n+            mainClass);\n+        OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+        System.out.println(out.getStdout());\n+        out.shouldHaveExitValue(0)\n+           \/\/ the class loaded by the SimpleTest should be from the archive\n+           .shouldContain(\"[class,load] java.text.SimpleDateFormat source: shared objects file\")\n+           \/\/ the IntFunction is the interface which is being transformed. The\n+           \/\/ interface is a super type of the following lambda proxy class.\n+           .shouldContain(\"Transforming class java\/util\/function\/IntFunction\")\n+           \/\/ the lambda proxy class should be regenerated\n+           .shouldMatch(\".class.load.*sun.util.locale.provider.LocaleProviderAdapter[$][$]Lambda\/0x.*source:.*sun.util.locale.provider.LocaleProviderAdapter\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TransformInterfaceOfLambda.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * Loading the java.text.SimpleDateFormat class will in turn load the\n+ * sun.util.locale.provider.LocaleProviderAdapter$$Lambda\/0x... lambda proxy class\n+ * which will also load its interface java.util.function.IntFunction.\n+ * By default, all of the above classes should be in the default CDS archive.\n+ *\/\n+public class SimpleTest {\n+    public static void main(String[] args) throws Exception {\n+        new java.text.SimpleDateFormat();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/SimpleTest.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"}]}