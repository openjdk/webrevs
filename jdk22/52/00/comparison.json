{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.concurrent.TimeoutException;\n@@ -33,1 +34,1 @@\n-import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n@@ -53,11 +54,13 @@\n-        Process process = ProcessTools.createTestJavaProcessBuilder(command).start();\n-\n-        long timeOut = (long) (Utils.TIMEOUT_FACTOR * 1L);\n-        boolean completed = process.waitFor(timeOut, TimeUnit.MINUTES);\n-        assertTrue(completed, \"Time out while waiting for process\");\n-\n-        OutputAnalyzer output = new OutputAnalyzer(process);\n-        output.outputTo(System.out);\n-        output.errorTo(System.err);\n-\n-        return output;\n+        try {\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(command);\n+            \/\/ note that it's important to use ProcessTools.startProcess here since this makes sure output streams of the\n+            \/\/ fork don't fill up, which could make the process stall while writing to stdout\/stderr\n+            Process process = ProcessTools.startProcess(target.getName(), pb, null, null, 1L, TimeUnit.MINUTES);\n+            OutputAnalyzer output = new OutputAnalyzer(process);\n+            output.outputTo(System.out);\n+            output.errorTo(System.err);\n+            return output;\n+        } catch (TimeoutException e) {\n+            fail(\"Timeout while waiting for forked process\");\n+            return null;\n+        }\n","filename":"test\/jdk\/java\/foreign\/UpcallTestHelper.java","additions":16,"deletions":13,"binary":false,"changes":29,"status":"modified"}]}