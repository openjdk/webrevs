{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import java.util.Arrays;\n@@ -342,3 +343,9 @@\n-            if (tableEntry == INVALID_COUNTRY_ENTRY ||\n-                    (tableEntry & SPECIAL_CASE_COUNTRY_MASK) != 0 ||\n-                    (tableEntry & SIMPLE_CASE_COUNTRY_FINAL_CHAR_MASK) != (currencyCode.charAt(2) - 'A')) {\n+\n+            \/\/ Do not allow a future currency to be classified as an otherCurrency,\n+            \/\/ otherwise it will leak out into Currency:getAvailableCurrencies\n+            boolean futureCurrency = Arrays.asList(specialCaseNewCurrencies).contains(currencyCode);\n+            boolean simpleCurrency = (tableEntry & SIMPLE_CASE_COUNTRY_FINAL_CHAR_MASK) == (currencyCode.charAt(2) - 'A');\n+\n+            \/\/ If neither a simple currency, or one defined in the future\n+            \/\/ then the current currency is applicable to be added to the otherTable\n+            if (!futureCurrency && !simpleCurrency) {\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatecurrencydata\/GenerateCurrencyData.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -272,0 +272,1 @@\n+XCG=XCG\n@@ -497,0 +498,1 @@\n+xcg=Caribbean Guilder\n","filename":"src\/java.base\/share\/classes\/sun\/util\/resources\/CurrencyNames.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-dataVersion=175\n+dataVersion=176\n@@ -58,1 +58,1 @@\n-    XBB956-XBC957-XBD958-XCD951-XDR960-XFO000-XFU000-XOF952-XPD964-XPF953-\\\n+    XBB956-XBC957-XBD958-XCD951-XCG532-XDR960-XFO000-XFU000-XOF952-XPD964-XPF953-\\\n@@ -192,1 +192,1 @@\n-HR=HRK;2022-12-31-23-00-00;EUR\n+HR=EUR\n@@ -196,1 +196,1 @@\n-CW=ANG\n+CW=ANG;2025-04-01-04-00-00;XCG\n@@ -513,1 +513,1 @@\n-SX=ANG\n+SX=ANG;2025-04-01-04-00-00;XCG\n","filename":"src\/java.base\/share\/data\/currency\/CurrencyData.properties","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- *      8208746 8209775 8264792 8274658 8283277 8296239\n+ *      8208746 8209775 8264792 8274658 8283277 8296239 8321480\n@@ -89,1 +89,1 @@\n-                    + \"DEM-EEK-ESP-FIM-FRF-GHC-GRD-GWP-IEP-ITL-LTL-LUF-LVL-MGF-MRO-MTL-MXV-MZM-NLG-\"\n+                    + \"DEM-EEK-ESP-FIM-FRF-GHC-GRD-GWP-HRK-IEP-ITL-LTL-LUF-LVL-MGF-MRO-MTL-MXV-MZM-NLG-\"\n@@ -171,1 +171,1 @@\n-                \/\/ If the cut-over already passed, test the changed data too\n+                \/\/ If the cut-over already passed, use the new curency for ISO4217Codes\n@@ -270,14 +270,15 @@\n-    @ParameterizedTest\n-    @MethodSource(\"codeCombos\")\n-    public void twoLetterCodesTest(String country) {\n-        if (codes[toIndex(country)] == UNDEFINED) {\n-            \/\/ if a code is undefined \/ 0, creating a Currency from it\n-            \/\/ should throw an IllegalArgumentException\n-            assertThrows(IllegalArgumentException.class,\n-                    ()-> Currency.getInstance(Locale.of(\"\", country)),\n-                    \"Error: This should be an undefined code and throw IllegalArgumentException: \" + country);\n-        } else if (codes[toIndex(country)] == SKIPPED) {\n-            \/\/ if a code is marked as skipped \/ 2, creating a Currency from it\n-            \/\/ should return null\n-            assertNull(Currency.getInstance(Locale.of(\"\", country)),\n-                    \"Error: Currency.getInstance() for this locale should return null: \" + country);\n+    @Test\n+    public void twoLetterCodesTest() {\n+        for (String country : codeCombos()) {\n+            if (codes[toIndex(country)] == UNDEFINED) {\n+                \/\/ if a code is undefined \/ 0, creating a Currency from it\n+                \/\/ should throw an IllegalArgumentException\n+                assertThrows(IllegalArgumentException.class,\n+                        () -> Currency.getInstance(Locale.of(\"\", country)),\n+                        \"Error: This should be an undefined code and throw IllegalArgumentException: \" + country);\n+            } else if (codes[toIndex(country)] == SKIPPED) {\n+                \/\/ if a code is marked as skipped \/ 2, creating a Currency from it\n+                \/\/ should return null\n+                assertNull(Currency.getInstance(Locale.of(\"\", country)),\n+                        \"Error: Currency.getInstance() for this locale should return null: \" + country);\n+            }\n","filename":"test\/jdk\/java\/util\/Currency\/ValidateISO4217.java","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -3,2 +3,2 @@\n-# Amendments up until ISO 4217 AMENDMENT NUMBER 175\n-#   (As of 31 March 2023)\n+# Amendments up until ISO 4217 AMENDMENT NUMBER 176\n+#   (As of 06 December 2023)\n@@ -9,1 +9,1 @@\n-DATAVERSION=175\n+DATAVERSION=176\n@@ -70,1 +70,1 @@\n-HR\tHRK\t191\t2\t2022-12-31-23-00-00\tEUR\t978\t2\n+HR\tEUR\t978\t2\n@@ -72,1 +72,1 @@\n-CW\tANG\t532\t2\n+CW\tANG\t532\t2\t2025-04-01-04-00-00\tXCG\t532\t2\n@@ -236,1 +236,1 @@\n-SX\tANG\t532\t2\n+SX\tANG\t532\t2\t2025-04-01-04-00-00\tXCG\t532\t2\n","filename":"test\/jdk\/java\/util\/Currency\/tablea1.txt","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}