{"files":[{"patch":"@@ -0,0 +1,527 @@\n+\/*\n+ * Copyright (C) 2009 Apple Inc.  All rights reserved.\n+ * Copyright (C) 2009 Google Inc.\n+ * Copyright (C) 2012 Zan Dobersek <zandobersek@gmail.com>\n+ * Copyright (C) 2012, 2020 Igalia S.L.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in the\n+ *    documentation and\/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+\n+\/* These are based on the Chromium media controls and using the Adwaita icons *\/\n+\n+audio::-webkit-media-controls-panel.hidden,\n+video::-webkit-media-controls-panel.hidden {\n+    display: none !important;\n+}\n+\n+body:-webkit-full-page-media {\n+    background-color: rgb(0, 0, 0);\n+}\n+\n+audio {\n+    width: 300px;\n+    height: 30px;\n+}\n+\n+audio:-webkit-full-page-media,\n+video:-webkit-full-page-media {\n+    max-height: 100%;\n+    max-width: 100%;\n+}\n+\n+audio:-webkit-full-page-media::-webkit-media-controls-panel,\n+video:-webkit-full-page-media::-webkit-media-controls-panel {\n+    bottom: 0px;\n+}\n+\n+::-webkit-media-controls {\n+    display: flex;\n+    flex-direction: column;\n+    justify-content: flex-end;\n+    align-items: center;\n+}\n+\n+audio::-webkit-media-controls-enclosure,\n+video::-webkit-media-controls-enclosure {\n+    width: 100%;\n+    max-width: 800px;\n+    height: 30px;\n+    bottom: 0;\n+    text-indent: 0;\n+    padding: 0;\n+    box-sizing: border-box;\n+    overflow: visible;\n+}\n+\n+video::-webkit-media-controls-enclosure {\n+    padding: 5px;\n+    height: 40px;\n+}\n+\n+audio::-webkit-media-controls-panel,\n+video::-webkit-media-controls-panel {\n+    display: flex;\n+    flex-direction: row;\n+    align-items: center;\n+    justify-content: flex-start;\n+    bottom: auto;\n+    height: 30px;\n+    background-color: rgba(20, 20, 20, 0.8);\n+    border-radius: 5px;\n+    overflow: visible;\n+    transition: opacity 0.25s linear;\n+}\n+\n+video::-webkit-media-controls-panel {\n+    opacity: 0;\n+}\n+\n+audio::-webkit-media-controls-panel,\n+video:-webkit-full-page-media::-webkit-media-controls-panel.no-video,\n+video::-webkit-media-controls-panel:hover,\n+video::-webkit-media-controls-panel.show,\n+video::-webkit-media-controls-panel.paused {\n+    opacity: 1;\n+}\n+\n+video::-webkit-media-controls-panel div.mute-box,\n+audio::-webkit-media-controls-panel div.mute-box {\n+    display: flex;\n+    flex: none;\n+    box-sizing: border-box;\n+    width: 30px;\n+    height: 30px;\n+    margin: 0 9px 0 -7px;\n+}\n+\n+audio::-webkit-media-controls-panel div.mute-box.hidden,\n+video::-webkit-media-controls-panel div.mute-box.hidden {\n+    display: none !important;\n+}\n+\n+audio::-webkit-media-controls-mute-button,\n+video::-webkit-media-controls-mute-button {\n+    display: flex;\n+    flex: none;\n+    border: none;\n+    box-sizing: border-box;\n+    width: 30px;\n+    height: 30px;\n+    line-height: 30px;\n+    outline: none;\n+    background-repeat: no-repeat;\n+    background-position: center center;\n+    background-image: url(\"data:image\/svg+xml;utf-8, \\\n+        <svg xmlns='http:\/\/www.w3.org\/2000\/svg' width='16' height='16'> \\\n+          <g fill='%23FFFFFF'> \\\n+            <path d='M0 5h2.484l2.97-3H6v12h-.475l-3.04-3H0z' style='marker:none' color='%23bebebe' overflow='visible'\/> \\\n+            <path d='M15 8c0-2.814-1-5.172-2.586-7H11v1.48C12.265 4 13 5.7 13 8c0 2.3-.78 4-2 5.52V15h1.381C13.847 13.36 15 10.814 15 8z' style='marker:none' color='%23000' overflow='visible'\/> \\\n+            <path d='M12 8c0-2.166-.739-4.02-2-5H9v2c.607.789 1 1.76 1 3 0 1.241-.393 2.22-1 3v2h1c1.223-.995 2-2.873 2-5z' style='marker:none' color='%23000' overflow='visible'\/> \\\n+            <path d='M9 8c0-1.257-.312-2.216-1-3H7v6h1c.672-.837 1-1.742 1-3z' style='line-height:normal;-inkscape-font-specification:Sans;text-indent:0;text-align:start;text-decoration-line:none;text-transform:none;marker:none' color='%23000' font-weight='400' font-family='Sans' overflow='visible'\/> \\\n+          <\/g> \\\n+        <\/svg>\");\n+}\n+\n+audio::-webkit-media-controls-mute-button.muted,\n+video::-webkit-media-controls-mute-button.muted {\n+    background-image: url(\"data:image\/svg+xml;utf-8, \\\n+        <svg xmlns='http:\/\/www.w3.org\/2000\/svg' width='16' height='16'> \\\n+          <g fill='%23FFFFFF'> \\\n+            <path d='M11 11h1.375l1.125 1.094L14.594 11H16v1.469l-1.094 1.062L16 14.594V16h-1.438L13.5 14.937 12.437 16H11v-1.406l1.062-1.063L11 12.47zM0 5h2.484l2.97-3H6v12h-.475l-3.04-3H0z' style='marker:none' color='%23bebebe' overflow='visible'\/> \\\n+            <path d='M11 1v1.48C12.265 4 13 5.7 13 8c0 .723-.085 1.382-.229 2h2.034c.124-.645.195-1.314.195-2 0-2.814-1-5.172-2.586-7z' style='marker:none' color='%23000' overflow='visible' opacity='.35'\/> \\\n+            <path d='M9 3v2c.607.789 1 1.759 1 3s-.393 2.22-1 3v2h1v-3h1.75c.158-.626.25-1.297.25-2 0-2.167-.739-4.02-2-5z' style='marker:none' color='%23000' overflow='visible' opacity='.35'\/> \\\n+            <path d='M9 8c0-1.257-.312-2.216-1-3H7v6h1c.672-.837 1-1.742 1-3z' style='line-height:normal;-inkscape-font-specification:Sans;text-indent:0;text-align:start;text-decoration-line:none;text-transform:none;marker:none' color='%23000' font-weight='400' font-family='Sans' overflow='visible' opacity='.35'\/> \\\n+          <\/g> \\\n+        <\/svg>\");\n+}\n+\n+audio::-webkit-media-controls-play-button,\n+video::-webkit-media-controls-play-button {\n+    display: flex;\n+    flex: none;\n+    border: none;\n+    box-sizing: border-box;\n+    width: 30px;\n+    height: 30px;\n+    line-height: 30px;\n+    margin: 0 9px;\n+    outline: none;\n+    background-repeat: no-repeat;\n+    background-position: center center;\n+    background-image: url(\"data:image\/svg+xml;utf-8, \\\n+        <svg xmlns='http:\/\/www.w3.org\/2000\/svg' width='16' height='16'> \\\n+          <g color='%23000' fill='%23FFFFFF'> \\\n+            <path d='M4.002 4h3v8h-3zM9.002 4h3v8h-3z' style='marker:none' overflow='visible'\/> \\\n+          <\/g> \\\n+        <\/svg>\");\n+}\n+\n+\/* Paused classes for audio\/video controls should be defined to make a difference in style from not having this class. Otherwise a repaint would not happen. *\/\n+audio::-webkit-media-controls-play-button.paused,\n+video::-webkit-media-controls-play-button.paused {\n+    position: relative;\n+    background-image: url(\"data:image\/svg+xml;utf-8, \\\n+        <svg xmlns='http:\/\/www.w3.org\/2000\/svg' width='16' height='16'> \\\n+          <g color='%23000' fill='%23FFFFFF'> \\\n+            <path d='M5.022 3a1 1 0 0 0-1.02 1v8a1 1 0 0 0 1.496.87l6.999-4a1 1 0 0 0 0-1.74l-6.999-4A1 1 0 0 0 5.022 3zm.98 2.725L9.982 8l-3.98 2.275z' style='line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:%23000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal;marker:none' font-weight='400' font-family='sans-serif' white-space='normal' overflow='visible'\/> \\\n+            <path d='M5.002 12h-1v1h1zM5.002 3h-1v1h1zM5.002 4L12 8l-6.998 4z' style='marker:none' overflow='visible'\/> \\\n+          <\/g> \\\n+        <\/svg>\");\n+}\n+\n+audio::-webkit-media-controls-current-time-display,\n+video::-webkit-media-controls-current-time-display {\n+    -webkit-user-select: none;\n+    flex: none;\n+    display: block;\n+    border: none;\n+    cursor: default;\n+\n+    height: 30px;\n+    margin: 0 15px 0 0;\n+\n+    line-height: 30px;\n+    font-family: -webkit-system-font;\n+    font-variant-numeric: tabular-nums;\n+    font-size: 13px;\n+    font-weight: normal;\n+    font-style: normal;\n+    color: white;\n+\n+    letter-spacing: normal;\n+    word-spacing: normal;\n+    text-transform: none;\n+    text-indent: 0;\n+    text-shadow: none;\n+    text-decoration: none;\n+}\n+\n+audio::-webkit-media-controls-current-time-display.no-duration,\n+video::-webkit-media-controls-current-time-display.no-duration {\n+    filter: brightness(50%);\n+}\n+\n+audio::-webkit-media-controls-current-time-display.hidden,\n+video::-webkit-media-controls-current-time-display.hidden {\n+    display: none !important;\n+}\n+\n+audio::-webkit-media-controls-timeline,\n+video::-webkit-media-controls-timeline {\n+    -webkit-appearance: media-slider !important;\n+    display: flex !important;\n+    flex: 1 1 auto !important;\n+    height: 4px !important;\n+    margin: 0 15px 0 1px !important;\n+    padding: 0 !important;\n+    min-width: 25px !important;\n+    outline: none !important;\n+}\n+\n+input[type=\"range\"][disabled]::-webkit-media-slider-thumb,\n+input[type=\"range\"][disabled]::-webkit-media-slider-thumb:hover,\n+input[type=\"range\"][disabled]::-webkit-media-slider-thumb:active {\n+    filter: brightness(50%);\n+}\n+\n+audio::-webkit-media-controls-timeline.hidden,\n+video::-webkit-media-controls-timeline.hidden {\n+    display: none !important;\n+}\n+\n+audio::-webkit-media-controls-volume-slider-container,\n+video::-webkit-media-controls-volume-slider-container {\n+    -webkit-appearance: media-volume-slider-container;\n+    display: flex;\n+    overflow: hidden;\n+    position: absolute;\n+    padding: 0;\n+    height: 100px;\n+    width: 30px;\n+    bottom: 30px;\n+    z-index: 2;\n+    background-color: rgba(20, 20, 20, 0.8);\n+    border-radius: 5px 5px 0px 0px;\n+    transition: height 0.10s linear;\n+}\n+\n+audio::-webkit-media-controls-volume-slider-container.hiding,\n+video::-webkit-media-controls-volume-slider-container.hiding {\n+    height: 0;\n+}\n+\n+audio::-webkit-media-controls-volume-slider-container.down,\n+video::-webkit-media-controls-volume-slider-container.down {\n+    bottom: -100px;\n+    border-radius: 0px 0px 5px 5px;\n+    transition: height 0.10s linear, bottom 0.10s linear;\n+}\n+\n+audio::-webkit-media-controls-panel .hiding.down,\n+video::-webkit-media-controls-panel .hiding.down {\n+    bottom: 0;\n+}\n+\n+audio::-webkit-media-controls-volume-slider,\n+video::-webkit-media-controls-volume-slider {\n+    -webkit-appearance: media-volume-slider !important;\n+    display: flex !important;\n+    align-items: center !important;\n+    flex-direction: column !important;\n+    box-sizing: border-box !important;\n+    height: 80px !important;\n+    width: 4px !important;\n+    margin: 10px auto !important;\n+    outline: none !important;\n+}\n+\n+audio::-webkit-media-controls-volume-slider-container input[type=\"range\"]::-webkit-media-slider-container > div,\n+video::-webkit-media-controls-volume-slider-container input[type=\"range\"]::-webkit-media-slider-container > div {\n+    margin: -7px 0;\n+}\n+\n+input[type=\"range\"]::-webkit-media-slider-container {\n+    display: flex;\n+    align-items: center;\n+    flex-direction: row; \/* This property is updated by C++ code. *\/\n+    box-sizing: border-box;\n+    height: 100%;\n+    width: 100%;\n+}\n+\n+\/* The negative right margin causes the track to overflow its container. *\/\n+input[type=\"range\"]::-webkit-media-slider-container > div {\n+    margin-right: -14px;\n+}\n+\n+input[type=\"range\"]::-webkit-media-slider-thumb {\n+    -webkit-appearance: none !important;\n+    width: 14px;\n+    height: 14px;\n+    border-radius: 7px;\n+    color: white;\n+    margin-left: -7px;\n+    margin-right: -7px;\n+    background-color: white;\n+}\n+\n+audio::-webkit-media-controls-toggle-closed-captions-button,\n+video::-webkit-media-controls-toggle-closed-captions-button {\n+    display: flex;\n+    flex: none;\n+    border: none;\n+    box-sizing: border-box;\n+    width: 30px;\n+    height: 30px;\n+    line-height: 30px;\n+    margin: 0 9px 0 -7px;\n+    outline: none;\n+    background-repeat: no-repeat;\n+    background-position: center center;\n+    background-image: url(\"data:image\/svg+xml;utf-8, \\\n+        <svg xmlns='http:\/\/www.w3.org\/2000\/svg' width='16' height='16'> \\\n+          <path d='M3.5 2A2.495 2.495 0 0 0 1 4.5v5c0 1.385 1.115 2.52 2.5 2.5h6.375L13 15v-3.063A2.486 2.486 0 0 0 15 9.5v-5C15 3.115 13.885 2 12.5 2zM3 7h4v1H3zm5 0h5v1H8zM3 9h2v1H3zm3 0h5v1H6zm6 0h1v1h-1z' fill='%23FFFFFF'\/> \\\n+        <\/svg>\");\n+}\n+\n+audio::-webkit-media-controls-toggle-closed-captions-button.hidden,\n+video::-webkit-media-controls-toggle-closed-captions-button.hidden {\n+    display: none !important;\n+}\n+\n+video::-webkit-media-controls-closed-captions-container {\n+    -webkit-appearance: media-closed-captions-container;\n+    display: flex;\n+    position: absolute;\n+    bottom: 35px;\n+    z-index: 2;\n+    background-color: rgba(20, 20, 20, 0.8);\n+    border-radius: 5px 5px 0px 0px;\n+    overflow: hidden;\n+    max-width: -webkit-calc(100% - 48px); \/* right + 10px *\/\n+    max-height: -webkit-calc(100% - 35px); \/* bottom + 10px *\/\n+    cursor: default;\n+    font-family: -webkit-system-font;\n+    font-size: 10pt;\n+    font-weight: normal;\n+    font-style: normal;\n+    color: white;\n+    -webkit-user-select: none;\n+    transition: height 0.10s linear;\n+}\n+\n+video::-webkit-media-controls-closed-captions-container.out {\n+    border-radius: 5px;\n+}\n+\n+video::-webkit-media-controls-closed-captions-container.hidden {\n+    display: none !important;\n+}\n+\n+video::-webkit-media-controls-closed-captions-container h3 {\n+    padding-top: 8px;\n+    margin: 0;\n+    padding-left: 17px;\n+    padding-right: 15px;\n+    font-size: 10pt;\n+    font-weight: bold;\n+    font-style: normal;\n+}\n+\n+video::-webkit-media-controls-closed-captions-container ul {\n+    list-style-type: none;\n+    margin: 0 0 4px 0;\n+    padding: 4px 0 0 0;\n+}\n+\n+video::-webkit-media-controls-closed-captions-container li {\n+    position: relative;\n+    color: white;\n+    margin: 0;\n+    padding-left: 17px;\n+    padding-right: 15px;\n+    padding-top: 0.15em;\n+    padding-bottom: 0.2em;\n+    box-sizing: border-box;\n+    overflow: hidden;\n+    white-space: nowrap;\n+    text-overflow: ellipsis;\n+    outline: none;\n+}\n+video::-webkit-media-controls-closed-captions-container li.selected {\n+    background-color: rgba(230, 230, 230, 0.15);\n+}\n+\n+video::-webkit-media-controls-fullscreen-button {\n+    display: flex;\n+    flex: none;\n+    border: none;\n+    box-sizing: border-box;\n+    width: 30px;\n+    height: 30px;\n+    line-height: 30px;\n+    margin: 0 9px 0 -7px;\n+    outline: none;\n+    background-repeat: no-repeat;\n+    background-position: center center;\n+    background-image: url(\"data:image\/svg+xml;utf-8, \\\n+        <svg xmlns='http:\/\/www.w3.org\/2000\/svg' width='16' height='16'> \\\n+          <g color='%23000' fill='%23FFFFFF'> \\\n+            <path d='M1.984 8.986A1 1 0 0 0 1 10v4a1 1 0 0 0 1 1h4a1 1 0 1 0 0-2H3v-3a1 1 0 0 0-1.016-1.014z' style='line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:%23000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal;marker:none' font-weight='400' font-family='sans-serif' white-space='normal' overflow='visible'\/> \\\n+            <path d='M6.48 8.49a1 1 0 0 0-.687.303l-4.5 4.5a1 1 0 1 0 1.414 1.414l4.5-4.5A1 1 0 0 0 6.48 8.49z' style='line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:%23000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal;marker:none' font-weight='400' font-family='sans-serif' white-space='normal' overflow='visible'\/> \\\n+            <path d='M1 14h1v1H1z' style='marker:none' overflow='visible'\/> \\\n+            <path d='M10 1a1 1 0 1 0 0 2h3v3a1 1 0 1 0 2 0V2a1 1 0 0 0-1-1z' style='line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:%23000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal;marker:none' font-weight='400' font-family='sans-serif' white-space='normal' overflow='visible'\/> \\\n+            <path d='M14 1h1v1h-1z' style='marker:none' overflow='visible'\/> \\\n+            <path d='M13.984.99a1 1 0 0 0-.69.301l-4.5 4.469a1 1 0 1 0 1.411 1.418l4.5-4.469a1 1 0 0 0-.72-1.719z' style='line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:%23000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal;marker:none' font-weight='400' font-family='sans-serif' white-space='normal' overflow='visible'\/> \\\n+            <path d='M1 9h1v1H1zM6 14h1v1H6zM14 6h1v1h-1zM9 1h1v1H9z' style='marker:none' overflow='visible'\/> \\\n+          <\/g> \\\n+        <\/svg>\");\n+}\n+\n+video::-webkit-media-controls-fullscreen-button.exit {\n+    background-image: url(\"data:image\/svg+xml;utf-8, \\\n+        <svg xmlns='http:\/\/www.w3.org\/2000\/svg' width='16.014' height='16.01'> \\\n+          <g color='%23000' fill='%23FFFFFF'> \\\n+            <path d='M12 1.006l-2 .008.018 4.996H15v-2h-2.99z' style='line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:%23000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal;marker:none' font-weight='400' font-family='sans-serif' white-space='normal' overflow='visible'\/> \\\n+            <path d='M14.979 0a1 1 0 0 0-.688.305l-3.984 4a1 1 0 1 0 1.416 1.41l3.986-4A1 1 0 0 0 14.979 0zM1.014 6.01a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-8a1 1 0 0 0-1-1zm1 2h6v6h-6z' style='line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:%23000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal;marker:none' font-weight='400' font-family='sans-serif' white-space='normal' overflow='visible'\/> \\\n+            <path d='M1.014 8.01a1 1 0 1 0 0 2h8a1 1 0 1 0 0-2z' style='line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:%23000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal;marker:none' font-weight='400' font-family='sans-serif' white-space='normal' overflow='visible' fill-rule='evenodd'\/> \\\n+            <path d='M15 5.01h1v1h-1zM10 .01h1v1h-1zM9.014 15.01h1v1h-1zM.014 15.01h1v1h-1z' style='marker:none' overflow='visible'\/> \\\n+            <path d='M11 .01c.554 0 1 .446 1 1s-.446 1-1 1-1-.446-1-1 .446-1 1-1zM15 4.01c.554 0 1 .446 1 1s-.446 1-1 1-1-.446-1-1 .446-1 1-1z' style='marker:none' overflow='visible'\/> \\\n+          <\/g> \\\n+        <\/svg>\");\n+}\n+\n+video::-webkit-media-controls-fullscreen-button.hidden {\n+    display: none !important;\n+}\n+\n+audio::-webkit-media-controls-panel button:hover,\n+video::-webkit-media-controls-panel button:hover,\n+input[type=\"range\"]::-webkit-media-slider-thumb:hover {\n+    filter: brightness(90%);\n+}\n+\n+audio::-webkit-media-controls-panel button:active,\n+video::-webkit-media-controls-panel button:active,\n+input[type=\"range\"]::-webkit-media-slider-thumb:active {\n+    filter: brightness(80%);\n+}\n+\n+audio::-webkit-media-controls-panel button[disabled],\n+video::-webkit-media-controls-panel button[disabled] {\n+    filter: brightness(50%);\n+}\n+\n+video::-webkit-media-text-track-container,\n+audio::-webkit-media-text-track-container {\n+    position: relative;\n+    -webkit-flex: 1 1 auto;\n+}\n+\n+video::-webkit-media-text-track-container {\n+    overflow: hidden;\n+    padding-bottom: 5px;\n+    z-index: 0;\n+\n+    text-align: center;\n+    color: rgba(255, 255, 255, 1);\n+\n+    letter-spacing: normal;\n+    word-spacing: normal;\n+    text-transform: none;\n+    text-indent: 0;\n+    text-decoration: none;\n+    pointer-events: none;\n+    -webkit-user-select: none;\n+\n+    flex: 1 1 auto;\n+\n+    -webkit-line-box-contain: block inline-box replaced;\n+}\n+\n+video::cue {\n+    background-color: rgba(0, 0, 0, 0.8);\n+}\n+\n+video::cue(:future) {\n+    color: gray;\n+}\n+\n+video::-webkit-media-text-track-display-backdrop {\n+    display: inline-block;\n+}\n+\n+video::-webkit-media-text-track-container b {\n+    font-weight: bold;\n+}\n+\n+video::-webkit-media-text-track-container u {\n+    text-decoration: underline;\n+}\n+\n+video::-webkit-media-text-track-container i {\n+    font-style: italic;\n+}\n+\n+video::-webkit-media-text-track-container .hidden,\n+audio::-webkit-media-text-track-container .hidden {\n+    display: none;\n+}\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/mediacontrols\/mediaControlsAdwaita.css","additions":527,"deletions":0,"binary":false,"changes":527,"status":"added"},{"patch":"@@ -0,0 +1,979 @@\n+\/* do not delete this file on webkit update*\/\n+\n+function createControls(root, video, host)\n+{\n+    return new Controller(root, video, host);\n+};\n+\n+function Controller(root, video, host)\n+{\n+    this.video = video;\n+    this.root = root;\n+    this.host = host;\n+    this.controls = {};\n+    this.listeners = {};\n+    this.isLive = false;\n+    this.hasVisualMedia = false;\n+\n+    this.addVideoListeners();\n+    this.createBase();\n+    this.createControls();\n+    this.updateBase();\n+    this.updateControls();\n+    this.updateDuration();\n+    this.updateTime();\n+    this.updatePlaying();\n+    this.updateCaptionButton();\n+    this.updateCaptionContainer();\n+    this.updateFullscreenButton();\n+    this.updateVolume();\n+    this.updateHasAudio();\n+    this.updateHasVideo();\n+};\n+\n+Controller.prototype = {\n+\n+    \/* Constants *\/\n+    HandledVideoEvents: {\n+        emptied: 'handleReadyStateChange',\n+        loadedmetadata: 'handleReadyStateChange',\n+        loadeddata: 'handleReadyStateChange',\n+        canplay: 'handleReadyStateChange',\n+        canplaythrough: 'handleReadyStateChange',\n+        timeupdate: 'handleTimeUpdate',\n+        durationchange: 'handleDurationChange',\n+        playing: 'handlePlay',\n+        pause: 'handlePause',\n+        volumechange: 'handleVolumeChange',\n+        webkitfullscreenchange: 'handleFullscreenChange',\n+        webkitbeginfullscreen: 'handleFullscreenChange',\n+        webkitendfullscreen: 'handleFullscreenChange',\n+    },\n+    HideControlsDelay: 4 * 1000,\n+    ClassNames: {\n+        exit: 'exit',\n+        hidden: 'hidden',\n+        hiding: 'hiding',\n+        muteBox: 'mute-box',\n+        muted: 'muted',\n+        paused: 'paused',\n+        selected: 'selected',\n+        show: 'show',\n+        noVideo: 'no-video',\n+        noDuration: 'no-duration',\n+        down: 'down',\n+        out: 'out',\n+    },\n+    KeyCodes: {\n+        enter: 13,\n+        escape: 27,\n+        space: 32,\n+        left: 37,\n+        up: 38,\n+        right: 39,\n+        down: 40\n+    },\n+\n+    listenFor: function(element, eventName, handler, useCapture)\n+    {\n+        if (typeof useCapture === 'undefined')\n+            useCapture = false;\n+\n+        if (!(this.listeners[eventName] instanceof Array))\n+            this.listeners[eventName] = [];\n+        this.listeners[eventName].push({element:element, handler:handler, useCapture:useCapture});\n+        element.addEventListener(eventName, this, useCapture);\n+    },\n+\n+    stopListeningFor: function(element, eventName, handler, useCapture)\n+    {\n+        if (typeof useCapture === 'undefined')\n+            useCapture = false;\n+\n+        if (!(this.listeners[eventName] instanceof Array))\n+            return;\n+\n+        this.listeners[eventName] = this.listeners[eventName].filter(function(entry) {\n+            return !(entry.element === element && entry.handler === handler && entry.useCapture === useCapture);\n+        });\n+        element.removeEventListener(eventName, this, useCapture);\n+    },\n+\n+    addVideoListeners: function()\n+    {\n+        for (var name in this.HandledVideoEvents) {\n+            this.listenFor(this.video, name, this.HandledVideoEvents[name]);\n+        };\n+\n+        \/* text tracks *\/\n+        this.listenFor(this.video.textTracks, 'change', this.handleTextTrackChange);\n+        this.listenFor(this.video.textTracks, 'addtrack', this.handleTextTrackAdd);\n+        this.listenFor(this.video.textTracks, 'removetrack', this.handleTextTrackRemove);\n+\n+        \/* audio tracks *\/\n+        this.listenFor(this.video.audioTracks, 'change', this.updateHasAudio);\n+        this.listenFor(this.video.audioTracks, 'addtrack', this.updateHasAudio);\n+        this.listenFor(this.video.audioTracks, 'removetrack', this.updateHasAudio);\n+\n+        \/* video tracks *\/\n+        this.listenFor(this.video.videoTracks, 'change', this.updateHasVideo);\n+        this.listenFor(this.video.videoTracks, 'addtrack', this.updateHasVideo);\n+        this.listenFor(this.video.videoTracks, 'removetrack', this.updateHasVideo);\n+\n+        \/* controls attribute *\/\n+        this.controlsObserver = new MutationObserver(this.handleControlsChange.bind(this));\n+        this.controlsObserver.observe(this.video, { attributes: true, attributeFilter: ['controls'] });\n+    },\n+\n+    removeVideoListeners: function()\n+    {\n+        for (var name in this.HandledVideoEvents) {\n+            this.stopListeningFor(this.video, name, this.HandledVideoEvents[name]);\n+        };\n+\n+        \/* text tracks *\/\n+        this.stopListeningFor(this.video.textTracks, 'change', this.handleTextTrackChange);\n+        this.stopListeningFor(this.video.textTracks, 'addtrack', this.handleTextTrackAdd);\n+        this.stopListeningFor(this.video.textTracks, 'removetrack', this.handleTextTrackRemove);\n+\n+        \/* audio tracks *\/\n+        this.stopListeningFor(this.video.audioTracks, 'change', this.updateHasAudio);\n+        this.stopListeningFor(this.video.audioTracks, 'addtrack', this.updateHasAudio);\n+        this.stopListeningFor(this.video.audioTracks, 'removetrack', this.updateHasAudio);\n+\n+        \/* video tracks *\/\n+        this.stopListeningFor(this.video.videoTracks, 'change', this.updateHasVideo);\n+        this.stopListeningFor(this.video.videoTracks, 'addtrack', this.updateHasVideo);\n+        this.stopListeningFor(this.video.videoTracks, 'removetrack', this.updateHasVideo);\n+\n+        \/* controls attribute *\/\n+        this.controlsObserver.disconnect();\n+        delete(this.controlsObserver);\n+    },\n+\n+    handleEvent: function(event)\n+    {\n+        var preventDefault = false;\n+\n+        try {\n+            if (event.target === this.video) {\n+                var handlerName = this.HandledVideoEvents[event.type];\n+                var handler = this[handlerName];\n+                if (handler && handler instanceof Function)\n+                    handler.call(this, event);\n+            }\n+\n+            if (!(this.listeners[event.type] instanceof Array))\n+                return;\n+\n+            this.listeners[event.type].forEach(function(entry) {\n+                if (entry.element === event.currentTarget && entry.handler instanceof Function)\n+                    preventDefault |= entry.handler.call(this, event);\n+            }, this);\n+        } catch(e) {\n+            if (window.console)\n+                console.error(e);\n+        }\n+\n+        if (preventDefault) {\n+            event.stopPropagation();\n+            event.preventDefault();\n+        }\n+    },\n+\n+    createBase: function()\n+    {\n+        var base = this.base = document.createElement('div');\n+        base.setAttribute('pseudo', '-webkit-media-controls');\n+        this.listenFor(base, 'mousemove', this.handleWrapperMouseMove);\n+        this.listenFor(base, 'mouseout', this.handleWrapperMouseOut);\n+        if (this.host.textTrackContainer)\n+            base.appendChild(this.host.textTrackContainer);\n+    },\n+\n+    isAudio: function()\n+    {\n+        return this.video instanceof HTMLAudioElement;\n+    },\n+\n+    isFullScreen: function()\n+    {\n+        return this.video.webkitDisplayingFullscreen;\n+    },\n+\n+    shouldHaveControls: function()\n+    {\n+        if (!this.isAudio() && !this.host.allowsInlineMediaPlayback)\n+            return true;\n+\n+        return this.video.controls || this.isFullScreen();\n+    },\n+\n+    updateBase: function()\n+    {\n+        if (this.shouldHaveControls() || (this.video.textTracks && this.video.textTracks.length)) {\n+            if (!this.base.parentNode) {\n+                this.root.appendChild(this.base);\n+            }\n+        } else {\n+            if (this.base.parentNode) {\n+                this.base.parentNode.removeChild(this.base);\n+            }\n+        }\n+    },\n+\n+    createControls: function()\n+    {\n+        var enclosure = this.controls.enclosure = document.createElement('div');\n+        enclosure.setAttribute('pseudo', '-webkit-media-controls-enclosure');\n+\n+        var panel = this.controls.panel = document.createElement('div');\n+        panel.setAttribute('pseudo', '-webkit-media-controls-panel');\n+        panel.setAttribute('aria-label', (this.isAudio() ? 'Audio Playback' : 'Video Playback'));\n+        panel.setAttribute('role', 'toolbar');\n+        this.listenFor(panel, 'mousedown', this.handlePanelMouseDown);\n+        this.listenFor(panel, 'transitionend', this.handlePanelTransitionEnd);\n+        this.listenFor(panel, 'click', this.handlePanelClick);\n+        this.listenFor(panel, 'dblclick', this.handlePanelClick);\n+\n+        var playButton = this.controls.playButton = document.createElement('button');\n+        playButton.setAttribute('pseudo', '-webkit-media-controls-play-button');\n+        playButton.setAttribute('aria-label', 'Play');\n+        this.listenFor(playButton, 'click', this.handlePlayButtonClicked);\n+\n+        var timelineBox = this.controls.timelineBox = document.createElement('div');\n+        timelineBox.setAttribute('pseudo', '-webkit-media-controls-timeline-container');\n+\n+        var currentTime = this.controls.currentTime = document.createElement('div');\n+        currentTime.setAttribute('pseudo', '-webkit-media-controls-current-time-display');\n+        currentTime.setAttribute('aria-label', 'Elapsed');\n+        currentTime.setAttribute('role', 'timer');\n+\n+        var timeline = this.controls.timeline = document.createElement('input');\n+        timeline.setAttribute('pseudo', '-webkit-media-controls-timeline');\n+        timeline.setAttribute('aria-label', 'Duration');\n+        timeline.type = 'range';\n+        timeline.value = 0;\n+        timeline.step = .01;\n+        this.listenFor(timeline, 'input', this.handleTimelineChange);\n+        this.listenFor(timeline, 'mouseup', this.handleTimelineMouseUp);\n+\n+        var muteBox = this.controls.muteBox = document.createElement('div');\n+        muteBox.classList.add(this.ClassNames.muteBox);\n+        this.listenFor(muteBox, 'mouseout', this.handleVolumeBoxMouseOut);\n+\n+        var muteButton = this.controls.muteButton = document.createElement('button');\n+        muteButton.setAttribute('pseudo', '-webkit-media-controls-mute-button');\n+        muteButton.setAttribute('aria-label', 'Mute');\n+        this.listenFor(muteButton, 'click', this.handleMuteButtonClicked);\n+        this.listenFor(muteButton, 'mouseover', this.handleMuteButtonMouseOver);\n+\n+        var volumeBox = this.controls.volumeBox = document.createElement('div');\n+        volumeBox.setAttribute('pseudo', '-webkit-media-controls-volume-slider-container');\n+        volumeBox.classList.add(this.ClassNames.hiding);\n+        this.listenFor(volumeBox, 'mouseover', this.handleMuteButtonMouseOver);\n+\n+        var volume = this.controls.volume = document.createElement('input');\n+        volume.setAttribute('pseudo', '-webkit-media-controls-volume-slider');\n+        volume.setAttribute('aria-label', 'Volume');\n+        volume.type = 'range';\n+        volume.min = 0;\n+        volume.max = 1;\n+        volume.step = .01;\n+        this.listenFor(volume, 'input', this.handleVolumeSliderInput);\n+        this.listenFor(volume, 'mouseover', this.handleMuteButtonMouseOver);\n+\n+        var captionButton = this.controls.captionButton = document.createElement('button');\n+        captionButton.setAttribute('pseudo', '-webkit-media-controls-toggle-closed-captions-button');\n+        captionButton.setAttribute('aria-label', 'Captions');\n+        captionButton.setAttribute('aria-haspopup', 'true');\n+        captionButton.setAttribute('aria-owns', 'audioTrackMenu');\n+        this.listenFor(captionButton, 'click', this.handleCaptionButtonClicked);\n+        this.listenFor(captionButton, 'mouseover', this.handleCaptionButtonMouseOver);\n+        this.listenFor(captionButton, 'mouseout', this.handleCaptionButtonMouseOut);\n+\n+        var fullscreenButton = this.controls.fullscreenButton = document.createElement('button');\n+        fullscreenButton.setAttribute('pseudo', '-webkit-media-controls-fullscreen-button');\n+        fullscreenButton.setAttribute('aria-label', 'Display Full Screen');\n+        fullscreenButton.disabled = true;\n+        this.listenFor(fullscreenButton, 'click', this.handleFullscreenButtonClicked);\n+    },\n+\n+    configureControls: function()\n+    {\n+        this.controls.panel.appendChild(this.controls.playButton);\n+        this.controls.panel.appendChild(this.controls.timeline);\n+        this.controls.panel.appendChild(this.controls.currentTime);\n+        this.controls.panel.appendChild(this.controls.muteBox);\n+        this.controls.muteBox.appendChild(this.controls.muteButton);\n+        this.controls.muteBox.appendChild(this.controls.volumeBox);\n+        this.controls.volumeBox.appendChild(this.controls.volume);\n+        this.controls.panel.appendChild(this.controls.captionButton);\n+        if (!this.isAudio())\n+            this.controls.panel.appendChild(this.controls.fullscreenButton);\n+        this.controls.enclosure.appendChild(this.controls.panel);\n+    },\n+\n+    disconnectControls: function(event)\n+    {\n+        for (var item in this.controls) {\n+            var control = this.controls[item];\n+            if (control && control.parentNode)\n+                control.parentNode.removeChild(control);\n+       }\n+    },\n+\n+    reconnectControls: function()\n+    {\n+        this.disconnectControls();\n+        this.configureControls();\n+\n+        if (this.shouldHaveControls())\n+            this.addControls();\n+    },\n+\n+    showControls: function()\n+    {\n+        this.controls.panel.classList.remove(this.ClassNames.hidden);\n+        this.controls.panel.classList.add(this.ClassNames.show);\n+\n+        this.updateTime();\n+    },\n+\n+    hideControls: function()\n+    {\n+        this.controls.panel.classList.remove(this.ClassNames.show);\n+    },\n+\n+    resetHideControlsTimer: function()\n+    {\n+        if (this.hideTimer)\n+            clearTimeout(this.hideTimer);\n+        this.hideTimer = setTimeout(this.hideControls.bind(this), this.HideControlsDelay);\n+    },\n+\n+    clearHideControlsTimer: function()\n+    {\n+        if (this.hideTimer)\n+            clearTimeout(this.hideTimer);\n+        this.hideTimer = null;\n+    },\n+\n+    controlsAreAlwaysVisible: function()\n+    {\n+        return this.isAudio() || this.controls.panel.classList.contains(this.ClassNames.noVideo);\n+    },\n+\n+    controlsAreHidden: function()\n+    {\n+        if (this.controlsAreAlwaysVisible())\n+            return false;\n+\n+        var panel = this.controls.panel;\n+        return (!panel.classList.contains(this.ClassNames.show) || panel.classList.contains(this.ClassNames.hidden))\n+            && (panel.parentElement.querySelector(':hover') !== panel);\n+    },\n+\n+    addControls: function()\n+    {\n+        this.base.appendChild(this.controls.enclosure);\n+    },\n+\n+    removeControls: function()\n+    {\n+        if (this.controls.enclosure.parentNode)\n+            this.controls.enclosure.parentNode.removeChild(this.controls.enclosure);\n+        this.hideCaptionMenu();\n+    },\n+\n+    updateControls: function()\n+    {\n+        this.reconnectControls();\n+    },\n+\n+    setIsLive: function(live)\n+    {\n+        if (live === this.isLive)\n+            return;\n+        this.isLive = live;\n+\n+        this.reconnectControls();\n+        this.controls.timeline.disabled = this.isLive;\n+    },\n+\n+    updateDuration: function()\n+    {\n+        var duration = this.video.duration;\n+        this.setIsLive(duration === Number.POSITIVE_INFINITY);\n+        this.controls.timeline.min = 0;\n+        this.controls.timeline.max = this.isLive ? 0 : duration;\n+        if (this.isLive || isNaN(duration))\n+            this.timeDigitsCount = 4;\n+        else if (duration < 10 * 60) \/* Ten minutes *\/\n+            this.timeDigitsCount = 3;\n+        else if (duration < 60 * 60) \/* One hour *\/\n+            this.timeDigitsCount = 4;\n+        else if (duration < 10 * 60 * 60) \/* Ten hours *\/\n+            this.timeDigitsCount = 5;\n+        else\n+            this.timeDigitsCount = 6;\n+    },\n+\n+    formatTime: function(time)\n+    {\n+        if (isNaN(time))\n+            return '00:00';\n+\n+        const absTime = Math.abs(time);\n+        const seconds = Math.floor(absTime % 60).toFixed(0);\n+        const minutes = Math.floor((absTime \/ 60) % 60).toFixed(0);\n+        const hours = Math.floor(absTime \/ (60 * 60)).toFixed(0);\n+\n+        function prependZeroIfNeeded(value) {\n+            if (value < 10)\n+                return `0${value}`;\n+            return `${value}`;\n+        }\n+\n+        switch (this.timeDigitsCount) {\n+        case 3:\n+            return minutes + ':' + prependZeroIfNeeded(seconds);\n+        case 4:\n+            return prependZeroIfNeeded(minutes) + ':' + prependZeroIfNeeded(seconds);\n+        case 5:\n+            return hours + ':' + prependZeroIfNeeded(minutes) + ':' + prependZeroIfNeeded(seconds);\n+        case 6:\n+            return prependZeroIfNeeded(hours) + ':' + prependZeroIfNeeded(minutes) + ':' + prependZeroIfNeeded(seconds);\n+        }\n+    },\n+\n+    updateTime: function(forceUpdate)\n+    {\n+        if (!forceUpdate && this.controlsAreHidden())\n+            return;\n+\n+        var currentTime = this.video.currentTime;\n+        this.controls.timeline.value = currentTime;\n+        this.controls.currentTime.innerText = this.formatTime(currentTime);\n+        if (!this.isLive) {\n+            var duration = this.video.duration;\n+            this.controls.currentTime.innerText += \" \/ \" + this.formatTime(duration);\n+            this.controls.currentTime.classList.toggle(this.ClassNames.noDuration, !duration);\n+            this.controls.timeline.disabled = !duration;\n+        } else\n+            this.controls.currentTime.classList.remove(this.ClassNames.noDuration);\n+    },\n+\n+    setPlaying: function(isPlaying)\n+    {\n+        if (this.isPlaying === isPlaying)\n+            return;\n+        this.isPlaying = isPlaying;\n+\n+        if (!isPlaying) {\n+            this.controls.panel.classList.add(this.ClassNames.paused);\n+            this.controls.playButton.classList.add(this.ClassNames.paused);\n+            this.controls.playButton.setAttribute('aria-label', 'Play');\n+            this.showControls();\n+        } else {\n+            this.controls.panel.classList.remove(this.ClassNames.paused);\n+            this.controls.playButton.classList.remove(this.ClassNames.paused);\n+            this.controls.playButton.setAttribute('aria-label', 'Pause');\n+\n+            this.hideControls();\n+            this.resetHideControlsTimer();\n+        }\n+    },\n+\n+    updatePlaying: function()\n+    {\n+        this.setPlaying(!this.canPlay());\n+        if (!this.canPlay())\n+            this.showControls();\n+    },\n+\n+    updateCaptionButton: function()\n+    {\n+        if (this.video.webkitHasClosedCaptions)\n+            this.controls.captionButton.classList.remove(this.ClassNames.hidden);\n+        else\n+            this.controls.captionButton.classList.add(this.ClassNames.hidden);\n+    },\n+\n+    updateCaptionContainer: function()\n+    {\n+        if (!this.host.textTrackContainer)\n+            return;\n+\n+        var hasClosedCaptions = this.video.webkitHasClosedCaptions;\n+        var hasHiddenClass = this.host.textTrackContainer.classList.contains(this.ClassNames.hidden);\n+\n+        if (hasClosedCaptions && hasHiddenClass)\n+            this.host.textTrackContainer.classList.remove(this.ClassNames.hidden);\n+        else if (!hasClosedCaptions && !hasHiddenClass)\n+            this.host.textTrackContainer.classList.add(this.ClassNames.hidden);\n+\n+        this.updateBase();\n+        this.host.updateTextTrackContainer();\n+    },\n+\n+    updateFullscreenButton: function()\n+    {\n+        if (this.video.readyState > HTMLMediaElement.HAVE_NOTHING && !this.hasVisualMedia) {\n+            this.controls.fullscreenButton.classList.add(this.ClassNames.hidden);\n+            return;\n+        }\n+\n+        this.controls.fullscreenButton.disabled = !this.host.supportsFullscreen;\n+    },\n+\n+    updateVolume: function()\n+    {\n+        if (this.video.muted || !this.video.volume) {\n+            this.controls.muteButton.classList.add(this.ClassNames.muted);\n+            this.controls.volume.value = 0;\n+        } else {\n+            this.controls.muteButton.classList.remove(this.ClassNames.muted);\n+            this.controls.volume.value = this.video.volume;\n+        }\n+    },\n+\n+    updateHasAudio: function()\n+    {\n+        this.controls.muteButton.disabled = this.video.audioTracks.length == 0;\n+    },\n+\n+    updateHasVideo: function()\n+    {\n+        if (this.video.videoTracks.length)\n+            this.controls.panel.classList.remove(this.ClassNames.noVideo);\n+        else\n+            this.controls.panel.classList.add(this.ClassNames.noVideo);\n+    },\n+\n+    handleReadyStateChange: function(event)\n+    {\n+        this.hasVisualMedia = this.video.videoTracks && this.video.videoTracks.length > 0;\n+        this.updateVolume();\n+        this.updateDuration();\n+        this.updateCaptionButton();\n+        this.updateCaptionContainer();\n+        this.updateFullscreenButton();\n+    },\n+\n+    handleTimeUpdate: function(event)\n+    {\n+        this.updateTime();\n+    },\n+\n+    handleDurationChange: function(event)\n+    {\n+        this.updateDuration();\n+        this.updateTime(true);\n+    },\n+\n+    handlePlay: function(event)\n+    {\n+        this.setPlaying(true);\n+    },\n+\n+    handlePause: function(event)\n+    {\n+        this.setPlaying(false);\n+    },\n+\n+    handleVolumeChange: function(event)\n+    {\n+        this.updateVolume();\n+    },\n+\n+    handleFullscreenChange: function(event)\n+    {\n+        this.updateBase();\n+        this.updateControls();\n+\n+        if (this.isFullScreen()) {\n+            this.controls.fullscreenButton.classList.add(this.ClassNames.exit);\n+            this.controls.fullscreenButton.setAttribute('aria-label', 'Exit Full Screen');\n+            this.host.enteredFullscreen();\n+        } else {\n+            this.controls.fullscreenButton.classList.remove(this.ClassNames.exit);\n+            this.controls.fullscreenButton.setAttribute('aria-label', 'Display Full Screen');\n+            this.host.exitedFullscreen();\n+        }\n+    },\n+\n+    handleTextTrackChange: function(event)\n+    {\n+        this.updateCaptionContainer();\n+    },\n+\n+    handleTextTrackAdd: function(event)\n+    {\n+        this.updateCaptionButton();\n+        this.updateCaptionContainer();\n+    },\n+\n+    handleTextTrackRemove: function(event)\n+    {\n+        this.updateCaptionButton();\n+        this.updateCaptionContainer();\n+    },\n+\n+    handleControlsChange: function()\n+    {\n+        try {\n+            this.updateBase();\n+\n+            if (this.shouldHaveControls())\n+                this.addControls();\n+            else\n+                this.removeControls();\n+        } catch(e) {\n+            if (window.console)\n+                console.error(e);\n+        }\n+    },\n+\n+    handleWrapperMouseMove: function(event)\n+    {\n+        this.showControls();\n+        this.resetHideControlsTimer();\n+\n+        if (!this.isDragging)\n+            return;\n+        var delta = new WebKitPoint(event.clientX - this.initialDragLocation.x, event.clientY - this.initialDragLocation.y);\n+        this.controls.panel.style.left = this.initialOffset.x + delta.x + 'px';\n+        this.controls.panel.style.top = this.initialOffset.y + delta.y + 'px';\n+        event.stopPropagation()\n+    },\n+\n+    handleWrapperMouseOut: function(event)\n+    {\n+        this.hideControls();\n+        this.clearHideControlsTimer();\n+    },\n+\n+    handleWrapperMouseUp: function(event)\n+    {\n+        this.isDragging = false;\n+        this.stopListeningFor(this.base, 'mouseup', 'handleWrapperMouseUp', true);\n+    },\n+\n+    handlePanelMouseDown: function(event)\n+    {\n+        if (event.target != this.controls.panel)\n+            return;\n+\n+        if (!this.isFullScreen())\n+            return;\n+\n+        this.listenFor(this.base, 'mouseup', this.handleWrapperMouseUp, true);\n+        this.isDragging = true;\n+        this.initialDragLocation = new WebKitPoint(event.clientX, event.clientY);\n+        this.initialOffset = new WebKitPoint(\n+            parseInt(this.controls.panel.style.left) | 0,\n+            parseInt(this.controls.panel.style.top) | 0\n+        );\n+    },\n+\n+    handlePanelTransitionEnd: function(event)\n+    {\n+        var opacity = window.getComputedStyle(this.controls.panel).opacity;\n+        if (parseInt(opacity) > 0)\n+            this.controls.panel.classList.remove(this.ClassNames.hidden);\n+        else\n+            this.controls.panel.classList.add(this.ClassNames.hidden);\n+    },\n+\n+    handlePanelClick: function(event)\n+    {\n+        \/* Prevent clicks in the panel from playing or pausing the video in a MediaDocument. *\/\n+        event.preventDefault();\n+    },\n+\n+    canPlay: function()\n+    {\n+        return this.video.paused || this.video.ended || this.video.readyState < HTMLMediaElement.HAVE_METADATA;\n+    },\n+\n+    handlePlayButtonClicked: function(event)\n+    {\n+        if (this.canPlay())\n+            this.video.play();\n+        else\n+            this.video.pause();\n+        return true;\n+    },\n+\n+    handleTimelineChange: function(event)\n+    {\n+        this.video.fastSeek(this.controls.timeline.value);\n+    },\n+\n+    handleTimelineMouseUp: function(event)\n+    {\n+        \/* Do a precise seek when we lift the mouse. *\/\n+        this.video.currentTime = this.controls.timeline.value;\n+    },\n+\n+    handleMuteButtonClicked: function(event)\n+    {\n+        this.video.muted = !this.video.muted;\n+        if (this.video.muted)\n+            this.controls.muteButton.setAttribute('aria-label', 'Unmute');\n+        return true;\n+    },\n+\n+    handleMuteButtonMouseOver: function(event)\n+    {\n+        if (this.video.offsetTop + this.controls.enclosure.offsetTop < 105) {\n+            this.controls.volumeBox.classList.add(this.ClassNames.down);\n+            this.controls.panel.classList.add(this.ClassNames.down);\n+        } else {\n+            this.controls.volumeBox.classList.remove(this.ClassNames.down);\n+            this.controls.panel.classList.remove(this.ClassNames.down);\n+        }\n+        this.controls.volumeBox.classList.remove(this.ClassNames.hiding);\n+\n+        return true;\n+    },\n+\n+    handleVolumeBoxMouseOut: function(event)\n+    {\n+        this.controls.volumeBox.classList.add(this.ClassNames.hiding);\n+        return true;\n+    },\n+\n+    handleVolumeSliderInput: function(event)\n+    {\n+        if (this.video.muted) {\n+            this.video.muted = false;\n+            this.controls.muteButton.setAttribute('aria-label', 'Mute');\n+        }\n+        this.video.volume = this.controls.volume.value;\n+    },\n+\n+    handleFullscreenButtonClicked: function(event)\n+    {\n+        if (this.isFullScreen())\n+            this.video.webkitExitFullscreen();\n+        else\n+            this.video.webkitEnterFullscreen();\n+        return true;\n+    },\n+\n+    buildCaptionMenu: function()\n+    {\n+        var tracks = this.host.sortedTrackListForMenu(this.video.textTracks);\n+        if (!tracks || !tracks.length)\n+            return;\n+\n+        this.captionMenu = document.createElement('div');\n+        this.captionMenu.setAttribute('pseudo', '-webkit-media-controls-closed-captions-container');\n+        this.captionMenu.setAttribute('id', 'audioTrackMenu');\n+        this.listenFor(this.captionMenu, 'mouseout', this.handleCaptionMenuMouseOut);\n+        this.listenFor(this.captionMenu, 'transitionend', this.captionMenuTransitionEnd);\n+        this.base.appendChild(this.captionMenu);\n+        this.captionMenu.captionMenuTreeElements = [];\n+        this.captionMenuItems = [];\n+\n+        var offItem = this.host.captionMenuOffItem;\n+        var automaticItem = this.host.captionMenuAutomaticItem;\n+        var displayMode = this.host.captionDisplayMode;\n+\n+        var list = document.createElement('div');\n+        this.captionMenu.appendChild(list);\n+        this.captionMenu.captionMenuTreeElements.push(list);\n+\n+        var heading = document.createElement('h3');\n+        heading.id = 'webkitMediaControlsClosedCaptionsHeading';\n+        list.appendChild(heading);\n+        heading.innerText = 'Subtitles';\n+        this.captionMenu.captionMenuTreeElements.push(heading);\n+\n+        var ul = document.createElement('ul');\n+        ul.setAttribute('role', 'menu');\n+        ul.setAttribute('aria-labelledby', 'webkitMediaControlsClosedCaptionsHeading');\n+        list.appendChild(ul);\n+        this.captionMenu.captionMenuTreeElements.push(ul);\n+\n+        for (var i = 0; i < tracks.length; ++i) {\n+            var menuItem = document.createElement('li');\n+            menuItem.setAttribute('role', 'menuitemradio');\n+            menuItem.setAttribute('tabindex', '-1');\n+            this.captionMenuItems.push(menuItem);\n+            this.listenFor(menuItem, 'click', this.captionItemSelected);\n+            this.listenFor(menuItem, 'keyup', this.handleCaptionItemKeyUp);\n+            ul.appendChild(menuItem);\n+\n+            var track = tracks[i];\n+            menuItem.innerText = this.host.displayNameForTrack(track);\n+            menuItem.track = track;\n+\n+            if (track === offItem) {\n+                var offMenu = menuItem;\n+                continue;\n+            }\n+\n+            if (track === automaticItem) {\n+                if (displayMode === 'automatic') {\n+                    menuItem.classList.add(this.ClassNames.selected);\n+                    menuItem.setAttribute('tabindex', '0');\n+                    menuItem.setAttribute('aria-checked', 'true');\n+                }\n+                continue;\n+            }\n+\n+            if (displayMode != 'automatic' && track.mode === 'showing') {\n+                var trackMenuItemSelected = true;\n+                menuItem.classList.add(this.ClassNames.selected);\n+                menuItem.setAttribute('tabindex', '0');\n+                menuItem.setAttribute('aria-checked', 'true');\n+            }\n+        }\n+\n+        if (offMenu && displayMode === 'forced-only' && !trackMenuItemSelected) {\n+            offMenu.classList.add(this.ClassNames.selected);\n+            menuItem.setAttribute('tabindex', '0');\n+            menuItem.setAttribute('aria-checked', 'true');\n+        }\n+\n+        \/* Focus first selected menuitem. *\/\n+        for (var i = 0, c = this.captionMenuItems.length; i < c; i++) {\n+            var item = this.captionMenuItems[i];\n+            if (item.classList.contains(this.ClassNames.selected)) {\n+                item.focus();\n+                break;\n+            }\n+        }\n+\n+        \/* Caption menu has to be centered to the caption button. *\/\n+        var captionButtonCenter =  this.controls.panel.offsetLeft + this.controls.captionButton.offsetLeft +\n+            this.controls.captionButton.offsetWidth \/ 2;\n+        var captionMenuLeft = (captionButtonCenter - this.captionMenu.offsetWidth \/ 2);\n+        if (captionMenuLeft + this.captionMenu.offsetWidth > this.controls.panel.offsetLeft + this.controls.panel.offsetWidth)\n+            this.captionMenu.classList.add(this.ClassNames.out);\n+        this.captionMenu.style.left = captionMenuLeft + 'px';\n+        \/* As height is not in the css, it needs to be specified to animate it. *\/\n+        this.captionMenu.height = this.captionMenu.offsetHeight;\n+        this.captionMenu.style.height = 0;\n+    },\n+\n+    captionItemSelected: function(event)\n+    {\n+        this.host.setSelectedTextTrack(event.target.track);\n+        this.hideCaptionMenu();\n+    },\n+\n+    focusSiblingCaptionItem: function(event)\n+    {\n+        var currentItem = event.target;\n+        var pendingItem = false;\n+        switch(event.keyCode) {\n+        case this.KeyCodes.left:\n+        case this.KeyCodes.up:\n+            pendingItem = currentItem.previousSibling;\n+            break;\n+        case this.KeyCodes.right:\n+        case this.KeyCodes.down:\n+            pendingItem = currentItem.nextSibling;\n+            break;\n+        }\n+        if (pendingItem) {\n+            currentItem.setAttribute('tabindex', '-1');\n+            pendingItem.setAttribute('tabindex', '0');\n+            pendingItem.focus();\n+        }\n+    },\n+\n+    handleCaptionItemKeyUp: function(event)\n+    {\n+        switch (event.keyCode) {\n+        case this.KeyCodes.enter:\n+        case this.KeyCodes.space:\n+            this.captionItemSelected(event);\n+            break;\n+        case this.KeyCodes.escape:\n+            this.hideCaptionMenu();\n+            break;\n+        case this.KeyCodes.left:\n+        case this.KeyCodes.up:\n+        case this.KeyCodes.right:\n+        case this.KeyCodes.down:\n+            this.focusSiblingCaptionItem(event);\n+            break;\n+        default:\n+            return;\n+        }\n+\n+        event.stopPropagation();\n+        event.preventDefault();\n+    },\n+\n+    showCaptionMenu: function()\n+    {\n+        if (!this.captionMenu)\n+            this.buildCaptionMenu();\n+        this.captionMenu.style.height = this.captionMenu.height + 'px';\n+    },\n+\n+    hideCaptionMenu: function()\n+    {\n+        if (!this.captionMenu)\n+            return;\n+        this.captionMenu.style.height = 0;\n+    },\n+\n+    captionMenuTransitionEnd: function(event)\n+    {\n+        if (this.captionMenu.offsetHeight !== 0)\n+            return;\n+\n+        this.captionMenuItems.forEach(function(item) {\n+            this.stopListeningFor(item, 'click', this.captionItemSelected);\n+            this.stopListeningFor(item, 'keyup', this.handleCaptionItemKeyUp);\n+        }, this);\n+\n+        \/* FKA and AX: focus the trigger before destroying the element with focus. *\/\n+        if (this.controls.captionButton)\n+            this.controls.captionButton.focus();\n+\n+        if (this.captionMenu.parentNode)\n+            this.captionMenu.parentNode.removeChild(this.captionMenu);\n+        delete this.captionMenu;\n+        delete this.captionMenuItems;\n+    },\n+\n+    captionMenuContainsNode: function(node)\n+    {\n+        return this.captionMenu.captionMenuTreeElements.find((item) => item == node)\n+            || this.captionMenuItems.find((item) => item == node);\n+    },\n+\n+    handleCaptionButtonClicked: function(event)\n+    {\n+        this.showCaptionMenu();\n+        return true;\n+    },\n+\n+    handleCaptionButtonMouseOver: function(event)\n+    {\n+        this.showCaptionMenu();\n+        return true;\n+    },\n+\n+    handleCaptionButtonMouseOut: function(event)\n+    {\n+        if (this.captionMenu && !this.captionMenuContainsNode(event.relatedTarget))\n+            this.hideCaptionMenu();\n+        return true;\n+    },\n+\n+    handleCaptionMenuMouseOut: function(event)\n+    {\n+        if (event.relatedTarget != this.controls.captionButton && !this.captionMenuContainsNode(event.relatedTarget))\n+            this.hideCaptionMenu();\n+        return true;\n+    },\n+};\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/mediacontrols\/mediaControlsAdwaita.js","additions":979,"deletions":0,"binary":false,"changes":979,"status":"added"},{"patch":"@@ -60,0 +60,1 @@\n+if (ENABLE_MODERN_MEDIA_CONTROLS)\n@@ -64,0 +65,6 @@\n+else()\n+list(APPEND WebCore_USER_AGENT_STYLE_SHEETS\n+    ${WEBCORE_DIR}\/css\/themeAdwaita.css\n+    ${WEBCORE_DIR}\/Modules\/mediacontrols\/mediaControlsAdwaita.css\n+)\n+endif()\n@@ -65,0 +72,1 @@\n+if (ENABLE_MODERN_MEDIA_CONTROLS)\n@@ -68,0 +76,5 @@\n+else()\n+set(WebCore_USER_AGENT_SCRIPTS\n+    ${WEBCORE_DIR}\/Modules\/mediacontrols\/mediaControlsAdwaita.js\n+)\n+endif()\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/PlatformJava.cmake","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -487,0 +487,1 @@\n+#if ENABLE(MODERN_MEDIA_CONTROLS)\n@@ -488,0 +489,3 @@\n+#else\n+    return { String(mediaControlsAdwaitaJavaScript, sizeof(mediaControlsAdwaitaJavaScript)) };\n+#endif\n@@ -492,0 +496,1 @@\n+#if ENABLE(MODERN_MEDIA_CONTROLS)\n@@ -493,0 +498,3 @@\n+#else\n+    return String(mediaControlsAdwaitaUserAgentStyleSheet, sizeof(mediaControlsAdwaitaUserAgentStyleSheet));\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/RenderThemeJava.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}