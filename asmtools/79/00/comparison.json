{"files":[{"patch":"@@ -65,1 +65,1 @@\n-            this.cells.add(classifyConstCell(pool, cell));\n+            this.cells.add(cell);\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/ArrayAttr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -317,3 +317,0 @@\n-\/\/                        if (entryType == EARLY_LARVAL) {\n-\/\/                            environment.throwErrorException(scanner.pos, \"err.base.frame.expected\");\n-\/\/                        }\n@@ -365,5 +362,0 @@\n-\/\/                            } else if (expectedToken == UNSETFIELDS) {\n-\/\/                                \/\/ missing means empty unset_fields\n-\/\/                                stackMapData.unsetFields = new DataVector<>();\n-\/\/                                list.add(stackMapData);\n-\/\/                                stackMapData = new StackMapData(environment, parser.curCodeAttr.isTypeCheckingVerifier());\n@@ -564,5 +556,0 @@\n-\/\/                default -> {\n-\/\/                    if (wrapLevel == 0) {\n-\/\/                        environment.throwErrorException(scanner.pos, \"err.token.expected\", RBRACE.parseKey());\n-\/\/                    }\n-\/\/                }\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/ParseAttribute.java","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1092,1 +1092,1 @@\n-                case ATT_NestHost -> decodeTypes(in, 1);\n+                case ATT_NestHost -> decodeTypes(in, 1, \"class\");\n@@ -1108,1 +1108,1 @@\n-                case ATT_NestMembers, ATT_PermittedSubclasses -> {\n+                case ATT_NestMembers -> {\n@@ -1112,1 +1112,10 @@\n-                        decodeTypes(in, nsubtypes);\n+                        decodeTypes(in, nsubtypes, \"class\");\n+                    } finally {\n+                        out_end(\"}\");\n+                    }\n+                }\n+                case ATT_PermittedSubclasses -> {\n+                    int nsubtypes = in.readUnsignedShort();\n+                    startArrayCmt(nsubtypes, \"subclasses\");\n+                    try {\n+                        decodeTypes(in, nsubtypes, \"subclass\");\n@@ -1129,1 +1138,1 @@\n-                        decodeTypes(in, nsubtypes);\n+                        decodeTypes(in, nsubtypes, \"descriptor\");\n@@ -1381,1 +1390,1 @@\n-                decodeTypes(inputStream, numinterfaces);\n+                decodeTypes(inputStream, numinterfaces, \"interface\");\n@@ -1415,1 +1424,1 @@\n-            for (int i = wrappingLevel-1; i >= 0; i--) {\n+            for (int i = wrappingLevel - 1; i >= 0; i--) {\n@@ -1422,1 +1431,1 @@\n-    private void decodeTypes(DataInputStream in, int count) throws IOException {\n+    private void decodeTypes(DataInputStream in, int count, String typeName) throws IOException {\n@@ -1431,1 +1440,1 @@\n-                    name = getStringByIndex(index);\n+                    name = \"%s: %s\".formatted(typeName, getStringByIndex(index));\n@@ -1433,1 +1442,1 @@\n-                    name = \"Reference to a ConstantPool Object: %s\".formatted(cpObj);\n+                    name = \"%s: %s\".formatted(typeName, cpObj);\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/ClassData.java","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-        if (indexes.length > 3) {\n+        if (indexes.length > 2) {\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/ClassArrayData.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,150 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.asmtools.attribute.LoadableDescriptors;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.TestInstance;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.openjdk.asmtools.common.inputs.StringInput;\n+import org.openjdk.asmtools.lib.action.*;\n+import org.openjdk.asmtools.lib.log.LogAndBinResults;\n+import org.openjdk.asmtools.lib.log.LogAndTextResults;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n+import static org.openjdk.asmtools.lib.utility.StringUtils.funcSubStrCount;\n+\n+@TestInstance(TestInstance.Lifecycle.PER_CLASS)\n+public class LoadableDescriptorsTests {\n+\n+    private Jasm jasm = new Jasm();\n+    private Jcoder jcoder = new Jcoder();\n+    private File resourceDir;\n+\n+    private static Stream<Arguments> getJasmParameters() {\n+        return Stream.of(\n+                Arguments.of(\"LoadableDescriptorsAttributeTest$X.jasm\", EToolArguments.JDIS, List.of(\n+                                (Function<String, Boolean>) (text) -> funcSubStrCount.apply(text, \"LoadableDescriptors \") == 1,\n+                                (Function<String, Boolean>) (text) -> funcSubStrCount.apply(text, \"strict\") == 3\n+\n+                        )\n+                ),\n+                Arguments.of(\"LoadableDescriptorsAttributeTest$X.g.jasm\", EToolArguments.JDIS_G_T, List.of(\n+                                (Function<String, Boolean>) (text) -> funcSubStrCount.apply(text, \"LoadableDescriptors \") == 1,\n+                                (Function<String, Boolean>) (text) -> funcSubStrCount.apply(text, \"strict\") == 3\n+\n+                        )\n+                ),\n+                Arguments.of(\"LoadableDescriptorsAttributeTest$X.g.t.jasm\", EToolArguments.JDIS_G, List.of(\n+                                (Function<String, Boolean>) (text) -> funcSubStrCount.apply(text, \"LoadableDescriptors \") == 1,\n+                                (Function<String, Boolean>) (text) -> funcSubStrCount.apply(text, \"strict\") == 3\n+                        )\n+                )\n+        );\n+    }\n+\n+    private static Stream<Arguments> getJcodParameters() {\n+        return Stream.of(\n+                Arguments.of(\"LoadableDescriptorsAttributeTest$X.jcod\", EToolArguments.JDEC_G, List.of(\n+                                (Function<String, Boolean>) (text) -> funcSubStrCount.apply(text, \"LoadableDescriptors \") == 1\n+                        )\n+                ),\n+                Arguments.of(\"LoadableDescriptorsAttributeTest$X.g.jcod\", EToolArguments.JDEC, List.of(\n+                                (Function<String, Boolean>) (text) -> funcSubStrCount.apply(text, \"LoadableDescriptors\") == 26\n+                        )\n+                )\n+        );\n+    }\n+\n+    @BeforeAll\n+    public void init() throws IOException {\n+        resourceDir = new File(Objects.requireNonNull(this.getClass().\n+                getResource(\"LoadableDescriptorsAttributeTest$X.jasm\")).getFile()).getParentFile();\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"getJasmParameters\")\n+    public void jasmTest(String resourceName, EToolArguments args, List<Function<String, Boolean>> tests) {\n+        \/\/ jasm to class in memory\n+        LogAndBinResults binResult = jasm.compile(List.of(resourceDir + File.separator + resourceName));\n+        \/\/ class produced correctly\n+        Assertions.assertTrue(binResult.log.toString().isEmpty());\n+        Assertions.assertEquals(0, binResult.result);\n+\n+        \/\/ class to jasm\n+        LogAndTextResults textResult = new Jdis().setArgs(args).decode(binResult.getAsByteInput());\n+\n+        Assertions.assertEquals(0, textResult.result);\n+        String jasmText = textResult.getResultAsString(Function.identity());\n+        for (Function<String, Boolean> testFunction : tests) {\n+            Assertions.assertTrue(testFunction.apply(jasmText));\n+        }\n+        \/\/ jasm to class\n+        binResult = jasm.compile(new StringInput(jasmText));\n+        \/\/ class produced correctly\n+        Assertions.assertTrue(binResult.log.toString().isEmpty());\n+        Assertions.assertEquals(0, binResult.result);\n+        \/\/ class to jasm\n+        textResult = new Jdis().setArgs(args).decode(binResult.getAsByteInput());\n+        Assertions.assertEquals(0, textResult.result);\n+        jasmText = textResult.getResultAsString(Function.identity());\n+        for (Function<String, Boolean> testFunction : tests) {\n+            Assertions.assertTrue(testFunction.apply(jasmText));\n+        }\n+        \/\/ class to jcod\n+        textResult = new Jdec().setArgs(EToolArguments.JDEC_G).decode(binResult.getAsByteInput());\n+        Assertions.assertEquals(0, textResult.result);\n+        \/\/ jcod to class\n+        binResult = jcoder.compile(new StringInput(textResult.getResultAsString(Function.identity())));\n+        Assertions.assertEquals(0, binResult.result);\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"getJcodParameters\")\n+    public void jcoderTest(String resourceName, EToolArguments args, List<Function<String, Boolean>> tests) {\n+        \/\/ jcod to class in memory\n+        LogAndBinResults binResult = jcoder.compile(List.of(resourceDir + File.separator + resourceName));\n+        \/\/ class produced correctly\n+        Assertions.assertEquals(0, binResult.result);\n+        Assertions.assertTrue(binResult.log.toString().isEmpty());\n+        \/\/ class to jcod\n+        LogAndTextResults textResult = new Jdec().setArgs(args).decode(binResult.getAsByteInput());\n+        Assertions.assertEquals(0, textResult.result);\n+        for (Function<String, Boolean> testFunction : tests) {\n+            Assertions.assertTrue(testFunction.apply(textResult.getResultAsString(Function.identity())));\n+        }\n+        \/\/ class to jasm twice\n+        textResult = new Jdis().setArgs(EToolArguments.JDIS_G_T_LNT_LVT).decode(binResult.getAsByteInput());\n+        Assertions.assertEquals(0, textResult.result);\n+        textResult = new Jdis().setArgs(EToolArguments.JDIS_GG_NC_LNT_LVT).decode(binResult.getAsByteInput());\n+        Assertions.assertEquals(0, textResult.result);\n+    }\n+}\n","filename":"test\/java\/org\/openjdk\/asmtools\/attribute\/LoadableDescriptors\/LoadableDescriptorsTests.java","additions":150,"deletions":0,"binary":false,"changes":150,"status":"added"},{"patch":"@@ -0,0 +1,174 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+final class #2 \/* LoadableDescriptorsAttributeTest$X *\/ version 69:65535\n+{\n+  const #1   = Field       #2.#3;               \/\/ LoadableDescriptorsAttributeTest$X.v1:\"[LLoadableDescriptorsAttributeTest$V1;\"\n+  const #2   = class       #4;                  \/\/ LoadableDescriptorsAttributeTest$X\n+  const #3   = NameAndType #5:#6;               \/\/ v1:\"[LLoadableDescriptorsAttributeTest$V1;\"\n+  const #4   = Utf8        \"LoadableDescriptorsAttributeTest$X\";\n+  const #5   = Utf8        \"v1\";\n+  const #6   = Utf8        \"[LLoadableDescriptorsAttributeTest$V1;\";\n+  const #7   = Field       #2.#8;               \/\/ LoadableDescriptorsAttributeTest$X.v7:\"LLoadableDescriptorsAttributeTest$V7;\"\n+  const #8   = NameAndType #9:#10;              \/\/ v7:\"LLoadableDescriptorsAttributeTest$V7;\"\n+  const #9   = Utf8        \"v7\";\n+  const #10  = Utf8        \"LLoadableDescriptorsAttributeTest$V7;\";\n+  const #11  = Field       #2.#12;              \/\/ LoadableDescriptorsAttributeTest$X.v10:\"LLoadableDescriptorsAttributeTest$V10;\"\n+  const #12  = NameAndType #13:#14;             \/\/ v10:\"LLoadableDescriptorsAttributeTest$V10;\"\n+  const #13  = Utf8        \"v10\";\n+  const #14  = Utf8        \"LLoadableDescriptorsAttributeTest$V10;\";\n+  const #15  = Method      #16.#17;             \/\/ java\/lang\/Object.\"<init>\":\"()V\"\n+  const #16  = class       #18;                 \/\/ java\/lang\/Object\n+  const #17  = NameAndType #19:#20;             \/\/ \"<init>\":\"()V\"\n+  const #18  = Utf8        \"java\/lang\/Object\";\n+  const #19  = Utf8        \"<init>\";\n+  const #20  = Utf8        \"()V\";\n+  const #21  = Utf8        \"Code\";\n+  const #22  = Utf8        \"LineNumberTable\";\n+  const #23  = Utf8        \"foo\";\n+  const #24  = Utf8        \"()LLoadableDescriptorsAttributeTest$V2;\";\n+  const #25  = Utf8        \"(LLoadableDescriptorsAttributeTest$V3;)V\";\n+  const #26  = Utf8        \"(I)V\";\n+  const #27  = Utf8        \"goo\";\n+  const #28  = Utf8        \"([LLoadableDescriptorsAttributeTest$V6;)V\";\n+  const #29  = Utf8        \"StackMapTable\";\n+  const #30  = class       #31;                 \/\/ LoadableDescriptorsAttributeTest$V5\n+  const #31  = Utf8        \"LoadableDescriptorsAttributeTest$V5\";\n+  const #32  = Utf8        \"([LLoadableDescriptorsAttributeTest$V9;)[LLoadableDescriptorsAttributeTest$V8;\";\n+  const #33  = Utf8        \"SourceFile\";\n+  const #34  = Utf8        \"LoadableDescriptorsAttributeTest.java\";\n+  const #35  = Utf8        \"NestHost\";\n+  const #36  = class       #37;                 \/\/ LoadableDescriptorsAttributeTest\n+  const #37  = Utf8        \"LoadableDescriptorsAttributeTest\";\n+  const #38  = Utf8        \"InnerClasses\";\n+  const #39  = Utf8        \"X\";\n+  const #40  = class       #41;                 \/\/ LoadableDescriptorsAttributeTest$V1\n+  const #41  = Utf8        \"LoadableDescriptorsAttributeTest$V1\";\n+  const #42  = Utf8        \"V1\";\n+  const #43  = class       #44;                 \/\/ LoadableDescriptorsAttributeTest$V7\n+  const #44  = Utf8        \"LoadableDescriptorsAttributeTest$V7\";\n+  const #45  = Utf8        \"V7\";\n+  const #46  = class       #47;                 \/\/ LoadableDescriptorsAttributeTest$V10\n+  const #47  = Utf8        \"LoadableDescriptorsAttributeTest$V10\";\n+  const #48  = Utf8        \"V10\";\n+  const #49  = class       #50;                 \/\/ LoadableDescriptorsAttributeTest$V2\n+  const #50  = Utf8        \"LoadableDescriptorsAttributeTest$V2\";\n+  const #51  = Utf8        \"V2\";\n+  const #52  = class       #53;                 \/\/ LoadableDescriptorsAttributeTest$V3\n+  const #53  = Utf8        \"LoadableDescriptorsAttributeTest$V3\";\n+  const #54  = Utf8        \"V3\";\n+  const #55  = class       #56;                 \/\/ LoadableDescriptorsAttributeTest$V6\n+  const #56  = Utf8        \"LoadableDescriptorsAttributeTest$V6\";\n+  const #57  = Utf8        \"V6\";\n+  const #58  = Utf8        \"V5\";\n+  const #59  = class       #60;                 \/\/ LoadableDescriptorsAttributeTest$V9\n+  const #60  = Utf8        \"LoadableDescriptorsAttributeTest$V9\";\n+  const #61  = Utf8        \"V9\";\n+  const #62  = class       #63;                 \/\/ LoadableDescriptorsAttributeTest$V8\n+  const #63  = Utf8        \"LoadableDescriptorsAttributeTest$V8\";\n+  const #64  = Utf8        \"V8\";\n+  const #65  = Utf8        \"LoadableDescriptors\";\n+  const #66  = Utf8        \"LLoadableDescriptorsAttributeTest$V3;\";\n+  const #67  = Utf8        \"LLoadableDescriptorsAttributeTest$V2;\";\n+\n+  final strict Field #5:#6;                     \/\/ v1:\"[LLoadableDescriptorsAttributeTest$V1;\"\n+  final strict Field #9:#10;                    \/\/ v7:\"LLoadableDescriptorsAttributeTest$V7;\"\n+  final strict Field #13:#14;                   \/\/ v10:\"LLoadableDescriptorsAttributeTest$V10;\"\n+\n+  Method       #19:#20                          \/\/ \"<init>\":\"()V\"\n+    stack 2  locals 1\n+  {\n+     0:    aload_0;\n+     1:    aconst_null;\n+     2:    putfield          #1;                \/\/ Field v1:\"[LLoadableDescriptorsAttributeTest$V1;\"\n+     5:    aload_0;\n+     6:    aconst_null;\n+     7:    putfield          #7;                \/\/ Field v7:\"LLoadableDescriptorsAttributeTest$V7;\"\n+    10:    aload_0;\n+    11:    aconst_null;\n+    12:    putfield          #11;               \/\/ Field v10:\"LLoadableDescriptorsAttributeTest$V10;\"\n+    15:    aload_0;\n+    16:    invokespecial     #15;               \/\/ Method java\/lang\/Object.\"<init>\":\"()V\"\n+    19:    return;\n+  }\n+\n+  Method       #23:#24                          \/\/ foo:\"()LLoadableDescriptorsAttributeTest$V2;\"\n+    stack 1  locals 1\n+  {\n+     0:    aconst_null;\n+     1:    areturn;\n+  }\n+\n+  Method       #23:#25                          \/\/ foo:\"(LLoadableDescriptorsAttributeTest$V3;)V\"\n+    stack 0  locals 2\n+  {\n+     0:    return;\n+  }\n+\n+  Method       #23:#26                          \/\/ foo:\"(I)V\"\n+    stack 1  locals 3\n+  {\n+     0:    aconst_null;\n+     1:    astore_2;\n+     2:    return;\n+  }\n+\n+  Method       #27:#28                          \/\/ goo:\"([LLoadableDescriptorsAttributeTest$V6;)V\"\n+    stack 1  locals 4\n+  {\n+     0:    aconst_null;\n+     1:    astore_2;\n+     2:    aload_2;\n+     3:    ifnonnull         9;\n+     6:    goto              11;\n+     9:    stack_frame_type  append;            \/\/ frame_type 252\n+             locals_map      #30;               \/\/ class LoadableDescriptorsAttributeTest$V5;\n+           aconst_null;\n+    10:    astore_3;\n+    11:    stack_frame_type  same;              \/\/ frame_type 1\n+           return;\n+  }\n+\n+  Method       #27:#32                          \/\/ goo:\"([LLoadableDescriptorsAttributeTest$V9;)[LLoadableDescriptorsAttributeTest$V8;\"\n+    stack 1  locals 2\n+  {\n+     0:    aconst_null;\n+     1:    areturn;\n+  }\n+\n+  SourceFile                 #34;               \/\/ LoadableDescriptorsAttributeTest.java\n+\n+  NestHost                   #36;               \/\/ LoadableDescriptorsAttributeTest\n+\n+  InnerClass                 static final #39 = #2 of #36;  \/\/ X = class LoadableDescriptorsAttributeTest$X of class LoadableDescriptorsAttributeTest\n+  InnerClass                 final #42 = #40 of #36;        \/\/ V1 = class LoadableDescriptorsAttributeTest$V1 of class LoadableDescriptorsAttributeTest\n+  InnerClass                 final #45 = #43 of #36;        \/\/ V7 = class LoadableDescriptorsAttributeTest$V7 of class LoadableDescriptorsAttributeTest\n+  InnerClass                 abstract #48 = #46 of #36;     \/\/ V10 = class LoadableDescriptorsAttributeTest$V10 of class LoadableDescriptorsAttributeTest\n+  InnerClass                 final #51 = #49 of #36;        \/\/ V2 = class LoadableDescriptorsAttributeTest$V2 of class LoadableDescriptorsAttributeTest\n+  InnerClass                 final #54 = #52 of #36;        \/\/ V3 = class LoadableDescriptorsAttributeTest$V3 of class LoadableDescriptorsAttributeTest\n+  InnerClass                 final #57 = #55 of #36;        \/\/ V6 = class LoadableDescriptorsAttributeTest$V6 of class LoadableDescriptorsAttributeTest\n+  InnerClass                 final #58 = #30 of #36;        \/\/ V5 = class LoadableDescriptorsAttributeTest$V5 of class LoadableDescriptorsAttributeTest\n+  InnerClass                 final #61 = #59 of #36;        \/\/ V9 = class LoadableDescriptorsAttributeTest$V9 of class LoadableDescriptorsAttributeTest\n+  InnerClass                 final #64 = #62 of #36;        \/\/ V8 = class LoadableDescriptorsAttributeTest$V8 of class LoadableDescriptorsAttributeTest\n+\n+  LoadableDescriptors        #66, #10, #67;     \/\/ \"LLoadableDescriptorsAttributeTest$V3;\", \"LLoadableDescriptorsAttributeTest$V7;\", \"LLoadableDescriptorsAttributeTest$V2;\"\n+} \/\/ end Class LoadableDescriptorsAttributeTest$X compiled from \"LoadableDescriptorsAttributeTest.java\"\n","filename":"test\/resources\/org\/openjdk\/asmtools\/attribute\/LoadableDescriptors\/LoadableDescriptorsAttributeTest$X.g.jasm","additions":174,"deletions":0,"binary":false,"changes":174,"status":"added"},{"patch":"@@ -0,0 +1,326 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+class LoadableDescriptorsAttributeTest$X {\n+  0xCAFEBABE;\n+  65535;                                   \/\/ minor version\n+  69;                                      \/\/ version\n+  [68] {                                   \/\/ Constant Pool\n+    ;                                      \/\/ first element is empty\n+    Field #2 #3;                           \/\/ #1     at 0x0A\n+    Class #4;                              \/\/ #2     at 0x0F\n+    NameAndType #5 #6;                     \/\/ #3     at 0x12\n+    Utf8 \"LoadableDescriptorsAttributeTest$X\";  \/\/ #4     at 0x17\n+    Utf8 \"v1\";                             \/\/ #5     at 0x3C\n+    Utf8 \"[LLoadableDescriptorsAttributeTest$V1;\";  \/\/ #6     at 0x41\n+    Field #2 #8;                           \/\/ #7     at 0x6A\n+    NameAndType #9 #10;                    \/\/ #8     at 0x6F\n+    Utf8 \"v7\";                             \/\/ #9     at 0x74\n+    Utf8 \"LLoadableDescriptorsAttributeTest$V7;\";  \/\/ #10     at 0x79\n+    Field #2 #12;                          \/\/ #11     at 0xA1\n+    NameAndType #13 #14;                   \/\/ #12     at 0xA6\n+    Utf8 \"v10\";                            \/\/ #13     at 0xAB\n+    Utf8 \"LLoadableDescriptorsAttributeTest$V10;\";  \/\/ #14     at 0xB1\n+    Method #16 #17;                        \/\/ #15     at 0xDA\n+    Class #18;                             \/\/ #16     at 0xDF\n+    NameAndType #19 #20;                   \/\/ #17     at 0xE2\n+    Utf8 \"java\/lang\/Object\";               \/\/ #18     at 0xE7\n+    Utf8 \"<init>\";                         \/\/ #19     at 0xFA\n+    Utf8 \"()V\";                            \/\/ #20     at 0x0103\n+    Utf8 \"Code\";                           \/\/ #21     at 0x0109\n+    Utf8 \"LineNumberTable\";                \/\/ #22     at 0x0110\n+    Utf8 \"foo\";                            \/\/ #23     at 0x0122\n+    Utf8 \"()LLoadableDescriptorsAttributeTest$V2;\";  \/\/ #24     at 0x0128\n+    Utf8 \"(LLoadableDescriptorsAttributeTest$V3;)V\";  \/\/ #25     at 0x0152\n+    Utf8 \"(I)V\";                           \/\/ #26     at 0x017D\n+    Utf8 \"goo\";                            \/\/ #27     at 0x0184\n+    Utf8 \"([LLoadableDescriptorsAttributeTest$V6;)V\";  \/\/ #28     at 0x018A\n+    Utf8 \"StackMapTable\";                  \/\/ #29     at 0x01B6\n+    Class #31;                             \/\/ #30     at 0x01C6\n+    Utf8 \"LoadableDescriptorsAttributeTest$V5\";  \/\/ #31     at 0x01C9\n+    Utf8 \"([LLoadableDescriptorsAttributeTest$V9;)[LLoadableDescriptorsAttributeTest$V8;\";  \/\/ #32     at 0x01EF\n+    Utf8 \"SourceFile\";                     \/\/ #33     at 0x0240\n+    Utf8 \"LoadableDescriptorsAttributeTest.java\";  \/\/ #34     at 0x024D\n+    Utf8 \"NestHost\";                       \/\/ #35     at 0x0275\n+    Class #37;                             \/\/ #36     at 0x0280\n+    Utf8 \"LoadableDescriptorsAttributeTest\";  \/\/ #37     at 0x0283\n+    Utf8 \"InnerClasses\";                   \/\/ #38     at 0x02A6\n+    Utf8 \"X\";                              \/\/ #39     at 0x02B5\n+    Class #41;                             \/\/ #40     at 0x02B9\n+    Utf8 \"LoadableDescriptorsAttributeTest$V1\";  \/\/ #41     at 0x02BC\n+    Utf8 \"V1\";                             \/\/ #42     at 0x02E2\n+    Class #44;                             \/\/ #43     at 0x02E7\n+    Utf8 \"LoadableDescriptorsAttributeTest$V7\";  \/\/ #44     at 0x02EA\n+    Utf8 \"V7\";                             \/\/ #45     at 0x0310\n+    Class #47;                             \/\/ #46     at 0x0315\n+    Utf8 \"LoadableDescriptorsAttributeTest$V10\";  \/\/ #47     at 0x0318\n+    Utf8 \"V10\";                            \/\/ #48     at 0x033F\n+    Class #50;                             \/\/ #49     at 0x0345\n+    Utf8 \"LoadableDescriptorsAttributeTest$V2\";  \/\/ #50     at 0x0348\n+    Utf8 \"V2\";                             \/\/ #51     at 0x036E\n+    Class #53;                             \/\/ #52     at 0x0373\n+    Utf8 \"LoadableDescriptorsAttributeTest$V3\";  \/\/ #53     at 0x0376\n+    Utf8 \"V3\";                             \/\/ #54     at 0x039C\n+    Class #56;                             \/\/ #55     at 0x03A1\n+    Utf8 \"LoadableDescriptorsAttributeTest$V6\";  \/\/ #56     at 0x03A4\n+    Utf8 \"V6\";                             \/\/ #57     at 0x03CA\n+    Utf8 \"V5\";                             \/\/ #58     at 0x03CF\n+    Class #60;                             \/\/ #59     at 0x03D4\n+    Utf8 \"LoadableDescriptorsAttributeTest$V9\";  \/\/ #60     at 0x03D7\n+    Utf8 \"V9\";                             \/\/ #61     at 0x03FD\n+    Class #63;                             \/\/ #62     at 0x0402\n+    Utf8 \"LoadableDescriptorsAttributeTest$V8\";  \/\/ #63     at 0x0405\n+    Utf8 \"V8\";                             \/\/ #64     at 0x042B\n+    Utf8 \"LoadableDescriptors\";            \/\/ #65     at 0x0430\n+    Utf8 \"LLoadableDescriptorsAttributeTest$V3;\";  \/\/ #66     at 0x0446\n+    Utf8 \"LLoadableDescriptorsAttributeTest$V2;\";  \/\/ #67     at 0x046E\n+  }                                        \/\/ end of Constant Pool\n+\n+  0x0010;                                  \/\/ access [ ACC_FINAL ]\n+  #2;                                      \/\/ this_cpx\n+  #16;                                     \/\/ super_cpx\n+\n+  [0] {                                    \/\/ Interfaces\n+  }                                        \/\/ end of Interfaces\n+\n+  [3] {                                    \/\/ Fields\n+    {                                      \/\/ field at 0x04A0\n+      0x0810;                              \/\/ access\n+      #5;                                  \/\/ name_index       : v1\n+      #6;                                  \/\/ descriptor_index : [LLoadableDescriptorsAttributeTest$V1;\n+      [0] {                                \/\/ Attributes\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ field at 0x04A8\n+      0x0810;                              \/\/ access\n+      #9;                                  \/\/ name_index       : v7\n+      #10;                                 \/\/ descriptor_index : LLoadableDescriptorsAttributeTest$V7;\n+      [0] {                                \/\/ Attributes\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ field at 0x04B0\n+      0x0810;                              \/\/ access\n+      #13;                                 \/\/ name_index       : v10\n+      #14;                                 \/\/ descriptor_index : LLoadableDescriptorsAttributeTest$V10;\n+      [0] {                                \/\/ Attributes\n+      }                                    \/\/ end of Attributes\n+    }\n+  }                                        \/\/ end of Fields\n+\n+  [6] {                                    \/\/ Methods\n+    {                                      \/\/ method at 0x04BA\n+      0x0000;                              \/\/ access\n+      #19;                                 \/\/ name_index       : <init>\n+      #20;                                 \/\/ descriptor_index : ()V\n+      [1] {                                \/\/ Attributes\n+        Attr(#21, 60) {                    \/\/ Code at 0x04C2\n+          2;                               \/\/ max_stack\n+          1;                               \/\/ max_locals\n+          Bytes[20]{\n+            0x2A 0x01 0xB5 0x00 0x01 0x2A 0x01 0xB5 0x00 0x07 0x2A 0x01;\n+            0xB5 0x00 0x0B 0x2A 0xB7 0x00 0x0F 0xB1;\n+          }\n+          [0] {                            \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [1] {                            \/\/ Attributes\n+            Attr(#22, 22) {                \/\/ LineNumberTable at 0x04E8\n+              [5] {                        \/\/ line_number_table\n+                   0   50;                 \/\/ at 0x04F4\n+                   5   67;                 \/\/ at 0x04F8\n+                  10   71;                 \/\/ at 0x04FC\n+                  15   49;                 \/\/ at 0x0500\n+                  19   71;                 \/\/ at 0x0504\n+              }\n+            }                              \/\/ end of LineNumberTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ method at 0x0504\n+      0x0000;                              \/\/ access\n+      #23;                                 \/\/ name_index       : foo\n+      #24;                                 \/\/ descriptor_index : ()LLoadableDescriptorsAttributeTest$V2;\n+      [1] {                                \/\/ Attributes\n+        Attr(#21, 26) {                    \/\/ Code at 0x050C\n+          1;                               \/\/ max_stack\n+          1;                               \/\/ max_locals\n+          Bytes[2]{\n+            0x01 0xB0;\n+          }\n+          [0] {                            \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [1] {                            \/\/ Attributes\n+            Attr(#22, 6) {                 \/\/ LineNumberTable at 0x0520\n+              [1] {                        \/\/ line_number_table\n+                   0   52;                 \/\/ at 0x052C\n+              }\n+            }                              \/\/ end of LineNumberTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ method at 0x052C\n+      0x0000;                              \/\/ access\n+      #23;                                 \/\/ name_index       : foo\n+      #25;                                 \/\/ descriptor_index : (LLoadableDescriptorsAttributeTest$V3;)V\n+      [1] {                                \/\/ Attributes\n+        Attr(#21, 25) {                    \/\/ Code at 0x0534\n+          0;                               \/\/ max_stack\n+          2;                               \/\/ max_locals\n+          Bytes[1]{\n+            0xB1;\n+          }\n+          [0] {                            \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [1] {                            \/\/ Attributes\n+            Attr(#22, 6) {                 \/\/ LineNumberTable at 0x0547\n+              [1] {                        \/\/ line_number_table\n+                   0   55;                 \/\/ at 0x0553\n+              }\n+            }                              \/\/ end of LineNumberTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ method at 0x0553\n+      0x0000;                              \/\/ access\n+      #23;                                 \/\/ name_index       : foo\n+      #26;                                 \/\/ descriptor_index : (I)V\n+      [1] {                                \/\/ Attributes\n+        Attr(#21, 31) {                    \/\/ Code at 0x055B\n+          1;                               \/\/ max_stack\n+          3;                               \/\/ max_locals\n+          Bytes[3]{\n+            0x01 0x4D 0xB1;\n+          }\n+          [0] {                            \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [1] {                            \/\/ Attributes\n+            Attr(#22, 10) {                \/\/ LineNumberTable at 0x0570\n+              [2] {                        \/\/ line_number_table\n+                   0   57;                 \/\/ at 0x057C\n+                   2   58;                 \/\/ at 0x0580\n+              }\n+            }                              \/\/ end of LineNumberTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ method at 0x0580\n+      0x0000;                              \/\/ access\n+      #27;                                 \/\/ name_index       : goo\n+      #28;                                 \/\/ descriptor_index : ([LLoadableDescriptorsAttributeTest$V6;)V\n+      [1] {                                \/\/ Attributes\n+        Attr(#21, 63) {                    \/\/ Code at 0x0588\n+          1;                               \/\/ max_stack\n+          4;                               \/\/ max_locals\n+          Bytes[12]{\n+            0x01 0x4D 0x2C 0xC7 0x00 0x06 0xA7 0x00 0x05 0x01 0x4E 0xB1;\n+;\n+          }\n+          [0] {                            \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [2] {                            \/\/ Attributes\n+            Attr(#22, 18) {                \/\/ LineNumberTable at 0x05A6\n+              [4] {                        \/\/ line_number_table\n+                   0   60;                 \/\/ at 0x05B2\n+                   2   61;                 \/\/ at 0x05B6\n+                   9   64;                 \/\/ at 0x05BA\n+                  11   66;                 \/\/ at 0x05BE\n+              }\n+            }                              \/\/ end of LineNumberTable\n+            ;\n+            Attr(#29, 9) {                 \/\/ StackMapTable at 0x05BE\n+              [2] {                        \/\/\n+                252b, 9, [1]z{7b,#30};     \/\/ append_frame 1\n+                1b;                        \/\/ same_frame\n+              }\n+            }                              \/\/ end of StackMapTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ method at 0x05CD\n+      0x0000;                              \/\/ access\n+      #27;                                 \/\/ name_index       : goo\n+      #32;                                 \/\/ descriptor_index : ([LLoadableDescriptorsAttributeTest$V9;)[LLoadableDescriptorsAttributeTest$V8;\n+      [1] {                                \/\/ Attributes\n+        Attr(#21, 26) {                    \/\/ Code at 0x05D5\n+          1;                               \/\/ max_stack\n+          2;                               \/\/ max_locals\n+          Bytes[2]{\n+            0x01 0xB0;\n+          }\n+          [0] {                            \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [1] {                            \/\/ Attributes\n+            Attr(#22, 6) {                 \/\/ LineNumberTable at 0x05E9\n+              [1] {                        \/\/ line_number_table\n+                   0   69;                 \/\/ at 0x05F5\n+              }\n+            }                              \/\/ end of LineNumberTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+  }                                        \/\/ end of Methods\n+\n+  [4] {                                    \/\/ Attributes\n+    Attr(#33, 2) {                         \/\/ SourceFile at 0x05F7\n+      #34;\n+    }                                      \/\/ end of SourceFile\n+    ;\n+    Attr(#35, 2) {                         \/\/ NestHost at 0x05FF\n+      #36;                                 \/\/ class: LoadableDescriptorsAttributeTest at 0x0607\n+    }                                      \/\/ end of NestHost\n+    ;\n+    Attr(#38, 82) {                        \/\/ InnerClasses at 0x0607\n+      [10] {                               \/\/ classes\n+           #2   #36   #39  24;             \/\/ access [ ACC_STATIC, ACC_FINAL ]\n+          #40   #36   #42  16;             \/\/ access [ ACC_FINAL ]\n+          #43   #36   #45  16;             \/\/ access [ ACC_FINAL ]\n+          #46   #36   #48 1024;            \/\/ access [ ACC_ABSTRACT ]\n+          #49   #36   #51  16;             \/\/ access [ ACC_FINAL ]\n+          #52   #36   #54  16;             \/\/ access [ ACC_FINAL ]\n+          #55   #36   #57  16;             \/\/ access [ ACC_FINAL ]\n+          #30   #36   #58  16;             \/\/ access [ ACC_FINAL ]\n+          #59   #36   #61  16;             \/\/ access [ ACC_FINAL ]\n+          #62   #36   #64  16;             \/\/ access [ ACC_FINAL ]\n+      }\n+    }                                      \/\/ end of InnerClasses\n+    ;\n+    Attr(#65, 8) {                         \/\/ LoadableDescriptors at 0x065F\n+      [3] {                                \/\/ Utf8\n+        #66;                               \/\/ descriptor: LLoadableDescriptorsAttributeTest$V3; at 0x0669\n+        #10;                               \/\/ descriptor: LLoadableDescriptorsAttributeTest$V7; at 0x066B\n+        #67;                               \/\/ descriptor: LLoadableDescriptorsAttributeTest$V2; at 0x066D\n+      }\n+    }                                      \/\/ end of LoadableDescriptors\n+  }                                        \/\/ end of Attributes\n+}                                          \/\/ end of class LoadableDescriptorsAttributeTest$X\n","filename":"test\/resources\/org\/openjdk\/asmtools\/attribute\/LoadableDescriptors\/LoadableDescriptorsAttributeTest$X.g.jcod","additions":326,"deletions":0,"binary":false,"changes":326,"status":"added"},{"patch":"@@ -0,0 +1,178 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+final class #2 \/* LoadableDescriptorsAttributeTest$X *\/ version 69:65535\n+{\n+  const #1   = Fieldref    #2.#3;               \/\/ LoadableDescriptorsAttributeTest$X.v1:\"[LLoadableDescriptorsAttributeTest$V1;\"\n+  const #2   = Class       #4;                  \/\/ LoadableDescriptorsAttributeTest$X\n+  const #3   = NameAndType #5:#6;               \/\/ v1:\"[LLoadableDescriptorsAttributeTest$V1;\"\n+  const #4   = Utf8        \"LoadableDescriptorsAttributeTest$X\";\n+  const #5   = Utf8        \"v1\";\n+  const #6   = Utf8        \"[LLoadableDescriptorsAttributeTest$V1;\";\n+  const #7   = Fieldref    #2.#8;               \/\/ LoadableDescriptorsAttributeTest$X.v7:\"LLoadableDescriptorsAttributeTest$V7;\"\n+  const #8   = NameAndType #9:#10;              \/\/ v7:\"LLoadableDescriptorsAttributeTest$V7;\"\n+  const #9   = Utf8        \"v7\";\n+  const #10  = Utf8        \"LLoadableDescriptorsAttributeTest$V7;\";\n+  const #11  = Fieldref    #2.#12;              \/\/ LoadableDescriptorsAttributeTest$X.v10:\"LLoadableDescriptorsAttributeTest$V10;\"\n+  const #12  = NameAndType #13:#14;             \/\/ v10:\"LLoadableDescriptorsAttributeTest$V10;\"\n+  const #13  = Utf8        \"v10\";\n+  const #14  = Utf8        \"LLoadableDescriptorsAttributeTest$V10;\";\n+  const #15  = Methodref   #16.#17;             \/\/ java\/lang\/Object.\"<init>\":\"()V\"\n+  const #16  = Class       #18;                 \/\/ java\/lang\/Object\n+  const #17  = NameAndType #19:#20;             \/\/ \"<init>\":\"()V\"\n+  const #18  = Utf8        \"java\/lang\/Object\";\n+  const #19  = Utf8        \"<init>\";\n+  const #20  = Utf8        \"()V\";\n+  const #21  = Utf8        \"Code\";\n+  const #22  = Utf8        \"LineNumberTable\";\n+  const #23  = Utf8        \"foo\";\n+  const #24  = Utf8        \"()LLoadableDescriptorsAttributeTest$V2;\";\n+  const #25  = Utf8        \"(LLoadableDescriptorsAttributeTest$V3;)V\";\n+  const #26  = Utf8        \"(I)V\";\n+  const #27  = Utf8        \"goo\";\n+  const #28  = Utf8        \"([LLoadableDescriptorsAttributeTest$V6;)V\";\n+  const #29  = Utf8        \"StackMapTable\";\n+  const #30  = Class       #31;                 \/\/ LoadableDescriptorsAttributeTest$V5\n+  const #31  = Utf8        \"LoadableDescriptorsAttributeTest$V5\";\n+  const #32  = Utf8        \"([LLoadableDescriptorsAttributeTest$V9;)[LLoadableDescriptorsAttributeTest$V8;\";\n+  const #33  = Utf8        \"SourceFile\";\n+  const #34  = Utf8        \"LoadableDescriptorsAttributeTest.java\";\n+  const #35  = Utf8        \"NestHost\";\n+  const #36  = Class       #37;                 \/\/ LoadableDescriptorsAttributeTest\n+  const #37  = Utf8        \"LoadableDescriptorsAttributeTest\";\n+  const #38  = Utf8        \"InnerClasses\";\n+  const #39  = Utf8        \"X\";\n+  const #40  = Class       #41;                 \/\/ LoadableDescriptorsAttributeTest$V1\n+  const #41  = Utf8        \"LoadableDescriptorsAttributeTest$V1\";\n+  const #42  = Utf8        \"V1\";\n+  const #43  = Class       #44;                 \/\/ LoadableDescriptorsAttributeTest$V7\n+  const #44  = Utf8        \"LoadableDescriptorsAttributeTest$V7\";\n+  const #45  = Utf8        \"V7\";\n+  const #46  = Class       #47;                 \/\/ LoadableDescriptorsAttributeTest$V10\n+  const #47  = Utf8        \"LoadableDescriptorsAttributeTest$V10\";\n+  const #48  = Utf8        \"V10\";\n+  const #49  = Class       #50;                 \/\/ LoadableDescriptorsAttributeTest$V2\n+  const #50  = Utf8        \"LoadableDescriptorsAttributeTest$V2\";\n+  const #51  = Utf8        \"V2\";\n+  const #52  = Class       #53;                 \/\/ LoadableDescriptorsAttributeTest$V3\n+  const #53  = Utf8        \"LoadableDescriptorsAttributeTest$V3\";\n+  const #54  = Utf8        \"V3\";\n+  const #55  = Class       #56;                 \/\/ LoadableDescriptorsAttributeTest$V6\n+  const #56  = Utf8        \"LoadableDescriptorsAttributeTest$V6\";\n+  const #57  = Utf8        \"V6\";\n+  const #58  = Utf8        \"V5\";\n+  const #59  = Class       #60;                 \/\/ LoadableDescriptorsAttributeTest$V9\n+  const #60  = Utf8        \"LoadableDescriptorsAttributeTest$V9\";\n+  const #61  = Utf8        \"V9\";\n+  const #62  = Class       #63;                 \/\/ LoadableDescriptorsAttributeTest$V8\n+  const #63  = Utf8        \"LoadableDescriptorsAttributeTest$V8\";\n+  const #64  = Utf8        \"V8\";\n+  const #65  = Utf8        \"LoadableDescriptors\";\n+  const #66  = Utf8        \"LLoadableDescriptorsAttributeTest$V3;\";\n+  const #67  = Utf8        \"LLoadableDescriptorsAttributeTest$V2;\";\n+\n+  final strict Field #5:#6;                     \/\/ v1:\"[LLoadableDescriptorsAttributeTest$V1;\"\n+  final strict Field #9:#10;                    \/\/ v7:\"LLoadableDescriptorsAttributeTest$V7;\"\n+  final strict Field #13:#14;                   \/\/ v10:\"LLoadableDescriptorsAttributeTest$V10;\"\n+\n+  Method       #19:#20                          \/\/ \"<init>\":\"()V\"\n+    stack 2  locals 1\n+  {\n+     0:    aload_0;\n+     1:    aconst_null;\n+     2:    putfield          #1;                \/\/ Field v1:\"[LLoadableDescriptorsAttributeTest$V1;\"\n+     5:    aload_0;\n+     6:    aconst_null;\n+     7:    putfield          #7;                \/\/ Field v7:\"LLoadableDescriptorsAttributeTest$V7;\"\n+    10:    aload_0;\n+    11:    aconst_null;\n+    12:    putfield          #11;               \/\/ Field v10:\"LLoadableDescriptorsAttributeTest$V10;\"\n+    15:    aload_0;\n+    16:    invokespecial     #15;               \/\/ Method java\/lang\/Object.\"<init>\":\"()V\"\n+    19:    return;\n+  }\n+\n+  Method       #23:#24                          \/\/ foo:\"()LLoadableDescriptorsAttributeTest$V2;\"\n+    stack 1  locals 1\n+  {\n+     0:    aconst_null;\n+     1:    areturn;\n+  }\n+\n+  Method       #23:#25                          \/\/ foo:\"(LLoadableDescriptorsAttributeTest$V3;)V\"\n+    stack 0  locals 2\n+  {\n+     0:    return;\n+  }\n+\n+  Method       #23:#26                          \/\/ foo:\"(I)V\"\n+    stack 1  locals 3\n+  {\n+     0:    aconst_null;\n+     1:    astore_2;\n+     2:    return;\n+  }\n+\n+  Method       #27:#28                          \/\/ goo:\"([LLoadableDescriptorsAttributeTest$V6;)V\"\n+    stack 1  locals 4\n+  {\n+     0:    aconst_null;\n+     1:    astore_2;\n+     2:    aload_2;\n+     3:    ifnonnull         9;\n+     6:    goto              11;\n+     9:    aconst_null;\n+    10:    astore_3;\n+    11:    return;\n+    StackMapTable: number_of_entries = 2\n+           frame_type = 252                     \/\/ append\n+             offset_delta = 9\n+               locals_map = [ #30; ]            \/\/ class LoadableDescriptorsAttributeTest$V5;\n+           frame_type = 1                       \/\/ same\n+  }\n+\n+  Method       #27:#32                          \/\/ goo:\"([LLoadableDescriptorsAttributeTest$V9;)[LLoadableDescriptorsAttributeTest$V8;\"\n+    stack 1  locals 2\n+  {\n+     0:    aconst_null;\n+     1:    areturn;\n+  }\n+\n+  SourceFile                 #34;               \/\/ LoadableDescriptorsAttributeTest.java\n+\n+  NestHost                   #36;               \/\/ LoadableDescriptorsAttributeTest\n+\n+  InnerClasses {\n+    static final #39 = #2 of #36;               \/\/ X = class LoadableDescriptorsAttributeTest$X of class LoadableDescriptorsAttributeTest\n+    final #42 = #40 of #36;                     \/\/ V1 = class LoadableDescriptorsAttributeTest$V1 of class LoadableDescriptorsAttributeTest\n+    final #45 = #43 of #36;                     \/\/ V7 = class LoadableDescriptorsAttributeTest$V7 of class LoadableDescriptorsAttributeTest\n+    abstract #48 = #46 of #36;                  \/\/ V10 = class LoadableDescriptorsAttributeTest$V10 of class LoadableDescriptorsAttributeTest\n+    final #51 = #49 of #36;                     \/\/ V2 = class LoadableDescriptorsAttributeTest$V2 of class LoadableDescriptorsAttributeTest\n+    final #54 = #52 of #36;                     \/\/ V3 = class LoadableDescriptorsAttributeTest$V3 of class LoadableDescriptorsAttributeTest\n+    final #57 = #55 of #36;                     \/\/ V6 = class LoadableDescriptorsAttributeTest$V6 of class LoadableDescriptorsAttributeTest\n+    final #58 = #30 of #36;                     \/\/ V5 = class LoadableDescriptorsAttributeTest$V5 of class LoadableDescriptorsAttributeTest\n+    final #61 = #59 of #36;                     \/\/ V9 = class LoadableDescriptorsAttributeTest$V9 of class LoadableDescriptorsAttributeTest\n+    final #64 = #62 of #36;                     \/\/ V8 = class LoadableDescriptorsAttributeTest$V8 of class LoadableDescriptorsAttributeTest\n+  }\n+\n+  LoadableDescriptors        #66, #10, #67;     \/\/ \"LLoadableDescriptorsAttributeTest$V3;\", \"LLoadableDescriptorsAttributeTest$V7;\", \"LLoadableDescriptorsAttributeTest$V2;\"\n+} \/\/ end Class LoadableDescriptorsAttributeTest$X compiled from \"LoadableDescriptorsAttributeTest.java\"\n","filename":"test\/resources\/org\/openjdk\/asmtools\/attribute\/LoadableDescriptors\/LoadableDescriptorsAttributeTest$X.g.t.jasm","additions":178,"deletions":0,"binary":false,"changes":178,"status":"added"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+final class LoadableDescriptorsAttributeTest$X version 69:65535\n+{\n+  final strict Field v1:\"[LLoadableDescriptorsAttributeTest$V1;\";\n+  final strict Field v7:\"LLoadableDescriptorsAttributeTest$V7;\";\n+  final strict Field v10:\"LLoadableDescriptorsAttributeTest$V10;\";\n+\n+  Method       \"<init>\":\"()V\"\n+    stack 2  locals 1\n+  {\n+         aload_0;\n+         aconst_null;\n+         putfield          Field v1:\"[LLoadableDescriptorsAttributeTest$V1;\";\n+         aload_0;\n+         aconst_null;\n+         putfield          Field v7:\"LLoadableDescriptorsAttributeTest$V7;\";\n+         aload_0;\n+         aconst_null;\n+         putfield          Field v10:\"LLoadableDescriptorsAttributeTest$V10;\";\n+         aload_0;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+         return;\n+  }\n+\n+  Method       foo:\"()LLoadableDescriptorsAttributeTest$V2;\"\n+    stack 1  locals 1\n+  {\n+         aconst_null;\n+         areturn;\n+  }\n+\n+  Method       foo:\"(LLoadableDescriptorsAttributeTest$V3;)V\"\n+    stack 0  locals 2\n+  {\n+         return;\n+  }\n+\n+  Method       foo:\"(I)V\"\n+    stack 1  locals 3\n+  {\n+         aconst_null;\n+         astore_2;\n+         return;\n+  }\n+\n+  Method       goo:\"([LLoadableDescriptorsAttributeTest$V6;)V\"\n+    stack 1  locals 4\n+  {\n+         aconst_null;\n+         astore_2;\n+         aload_2;\n+         ifnonnull         L9;\n+         goto              L11;\n+  L9:    stack_frame_type  append;\n+           locals_map      class LoadableDescriptorsAttributeTest$V5;\n+         aconst_null;\n+         astore_3;\n+  L11:   stack_frame_type  same;\n+         return;\n+  }\n+\n+  Method       goo:\"([LLoadableDescriptorsAttributeTest$V9;)[LLoadableDescriptorsAttributeTest$V8;\"\n+    stack 1  locals 2\n+  {\n+         aconst_null;\n+         areturn;\n+  }\n+\n+  SourceFile               \"LoadableDescriptorsAttributeTest.java\";\n+\n+  NestHost                 \"LoadableDescriptorsAttributeTest\";\n+\n+  InnerClass               static final X = class LoadableDescriptorsAttributeTest$X of class LoadableDescriptorsAttributeTest;\n+  InnerClass               final V1 = class LoadableDescriptorsAttributeTest$V1 of class LoadableDescriptorsAttributeTest;\n+  InnerClass               final V7 = class LoadableDescriptorsAttributeTest$V7 of class LoadableDescriptorsAttributeTest;\n+  InnerClass               abstract V10 = class LoadableDescriptorsAttributeTest$V10 of class LoadableDescriptorsAttributeTest;\n+  InnerClass               final V2 = class LoadableDescriptorsAttributeTest$V2 of class LoadableDescriptorsAttributeTest;\n+  InnerClass               final V3 = class LoadableDescriptorsAttributeTest$V3 of class LoadableDescriptorsAttributeTest;\n+  InnerClass               final V6 = class LoadableDescriptorsAttributeTest$V6 of class LoadableDescriptorsAttributeTest;\n+  InnerClass               final V5 = class LoadableDescriptorsAttributeTest$V5 of class LoadableDescriptorsAttributeTest;\n+  InnerClass               final V9 = class LoadableDescriptorsAttributeTest$V9 of class LoadableDescriptorsAttributeTest;\n+  InnerClass               final V8 = class LoadableDescriptorsAttributeTest$V8 of class LoadableDescriptorsAttributeTest;\n+\n+  LoadableDescriptors      \"LLoadableDescriptorsAttributeTest$V3;\",\n+                           \"LLoadableDescriptorsAttributeTest$V7;\",\n+                           \"LLoadableDescriptorsAttributeTest$V2;\";\n+} \/\/ end Class LoadableDescriptorsAttributeTest$X compiled from \"LoadableDescriptorsAttributeTest.java\"\n","filename":"test\/resources\/org\/openjdk\/asmtools\/attribute\/LoadableDescriptors\/LoadableDescriptorsAttributeTest$X.jasm","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -0,0 +1,326 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+class LoadableDescriptorsAttributeTest$X {\n+  0xCAFEBABE;\n+  65535;                                   \/\/ minor version\n+  69;                                      \/\/ version\n+  [] {                                     \/\/ Constant Pool\n+    ;                                      \/\/ first element is empty\n+    Field #2 #3;                           \/\/ #1\n+    Class #4;                              \/\/ #2\n+    NameAndType #5 #6;                     \/\/ #3\n+    Utf8 \"LoadableDescriptorsAttributeTest$X\";  \/\/ #4\n+    Utf8 \"v1\";                             \/\/ #5\n+    Utf8 \"[LLoadableDescriptorsAttributeTest$V1;\";  \/\/ #6\n+    Field #2 #8;                           \/\/ #7\n+    NameAndType #9 #10;                    \/\/ #8\n+    Utf8 \"v7\";                             \/\/ #9\n+    Utf8 \"LLoadableDescriptorsAttributeTest$V7;\";  \/\/ #10\n+    Field #2 #12;                          \/\/ #11\n+    NameAndType #13 #14;                   \/\/ #12\n+    Utf8 \"v10\";                            \/\/ #13\n+    Utf8 \"LLoadableDescriptorsAttributeTest$V10;\";  \/\/ #14\n+    Method #16 #17;                        \/\/ #15\n+    Class #18;                             \/\/ #16\n+    NameAndType #19 #20;                   \/\/ #17\n+    Utf8 \"java\/lang\/Object\";               \/\/ #18\n+    Utf8 \"<init>\";                         \/\/ #19\n+    Utf8 \"()V\";                            \/\/ #20\n+    Utf8 \"Code\";                           \/\/ #21\n+    Utf8 \"LineNumberTable\";                \/\/ #22\n+    Utf8 \"foo\";                            \/\/ #23\n+    Utf8 \"()LLoadableDescriptorsAttributeTest$V2;\";  \/\/ #24\n+    Utf8 \"(LLoadableDescriptorsAttributeTest$V3;)V\";  \/\/ #25\n+    Utf8 \"(I)V\";                           \/\/ #26\n+    Utf8 \"goo\";                            \/\/ #27\n+    Utf8 \"([LLoadableDescriptorsAttributeTest$V6;)V\";  \/\/ #28\n+    Utf8 \"StackMapTable\";                  \/\/ #29\n+    Class #31;                             \/\/ #30\n+    Utf8 \"LoadableDescriptorsAttributeTest$V5\";  \/\/ #31\n+    Utf8 \"([LLoadableDescriptorsAttributeTest$V9;)[LLoadableDescriptorsAttributeTest$V8;\";  \/\/ #32\n+    Utf8 \"SourceFile\";                     \/\/ #33\n+    Utf8 \"LoadableDescriptorsAttributeTest.java\";  \/\/ #34\n+    Utf8 \"NestHost\";                       \/\/ #35\n+    Class #37;                             \/\/ #36\n+    Utf8 \"LoadableDescriptorsAttributeTest\";  \/\/ #37\n+    Utf8 \"InnerClasses\";                   \/\/ #38\n+    Utf8 \"X\";                              \/\/ #39\n+    Class #41;                             \/\/ #40\n+    Utf8 \"LoadableDescriptorsAttributeTest$V1\";  \/\/ #41\n+    Utf8 \"V1\";                             \/\/ #42\n+    Class #44;                             \/\/ #43\n+    Utf8 \"LoadableDescriptorsAttributeTest$V7\";  \/\/ #44\n+    Utf8 \"V7\";                             \/\/ #45\n+    Class #47;                             \/\/ #46\n+    Utf8 \"LoadableDescriptorsAttributeTest$V10\";  \/\/ #47\n+    Utf8 \"V10\";                            \/\/ #48\n+    Class #50;                             \/\/ #49\n+    Utf8 \"LoadableDescriptorsAttributeTest$V2\";  \/\/ #50\n+    Utf8 \"V2\";                             \/\/ #51\n+    Class #53;                             \/\/ #52\n+    Utf8 \"LoadableDescriptorsAttributeTest$V3\";  \/\/ #53\n+    Utf8 \"V3\";                             \/\/ #54\n+    Class #56;                             \/\/ #55\n+    Utf8 \"LoadableDescriptorsAttributeTest$V6\";  \/\/ #56\n+    Utf8 \"V6\";                             \/\/ #57\n+    Utf8 \"V5\";                             \/\/ #58\n+    Class #60;                             \/\/ #59\n+    Utf8 \"LoadableDescriptorsAttributeTest$V9\";  \/\/ #60\n+    Utf8 \"V9\";                             \/\/ #61\n+    Class #63;                             \/\/ #62\n+    Utf8 \"LoadableDescriptorsAttributeTest$V8\";  \/\/ #63\n+    Utf8 \"V8\";                             \/\/ #64\n+    Utf8 \"LoadableDescriptors\";            \/\/ #65\n+    Utf8 \"LLoadableDescriptorsAttributeTest$V3;\";  \/\/ #66\n+    Utf8 \"LLoadableDescriptorsAttributeTest$V2;\";  \/\/ #67\n+  }\n+\n+  0x0010;                                  \/\/ access\n+  #2;                                      \/\/ this_cpx\n+  #16;                                     \/\/ super_cpx\n+\n+  [] {                                     \/\/ Interfaces\n+  }                                        \/\/ end of Interfaces\n+\n+  [] {                                     \/\/ Fields\n+    {                                      \/\/ field\n+      0x0810;                              \/\/ access\n+      #5;                                  \/\/ name_index\n+      #6;                                  \/\/ descriptor_index\n+      [] {                                 \/\/ Attributes\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ field\n+      0x0810;                              \/\/ access\n+      #9;                                  \/\/ name_index\n+      #10;                                 \/\/ descriptor_index\n+      [] {                                 \/\/ Attributes\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ field\n+      0x0810;                              \/\/ access\n+      #13;                                 \/\/ name_index\n+      #14;                                 \/\/ descriptor_index\n+      [] {                                 \/\/ Attributes\n+      }                                    \/\/ end of Attributes\n+    }\n+  }                                        \/\/ end of Fields\n+\n+  [] {                                     \/\/ Methods\n+    {                                      \/\/ method\n+      0x0000;                              \/\/ access\n+      #19;                                 \/\/ name_index\n+      #20;                                 \/\/ descriptor_index\n+      [] {                                 \/\/ Attributes\n+        Attr(#21) {                        \/\/ Code\n+          2;                               \/\/ max_stack\n+          1;                               \/\/ max_locals\n+          Bytes[]{\n+            0x2A 0x01 0xB5 0x00 0x01 0x2A 0x01 0xB5 0x00 0x07 0x2A 0x01;\n+            0xB5 0x00 0x0B 0x2A 0xB7 0x00 0x0F 0xB1;\n+          }\n+          [] {                             \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [] {                             \/\/ Attributes\n+            Attr(#22) {                    \/\/ LineNumberTable\n+              [] {                         \/\/ line_number_table\n+                   0   50;\n+                   5   67;\n+                  10   71;\n+                  15   49;\n+                  19   71;\n+              }\n+            }                              \/\/ end of LineNumberTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ method\n+      0x0000;                              \/\/ access\n+      #23;                                 \/\/ name_index\n+      #24;                                 \/\/ descriptor_index\n+      [] {                                 \/\/ Attributes\n+        Attr(#21) {                        \/\/ Code\n+          1;                               \/\/ max_stack\n+          1;                               \/\/ max_locals\n+          Bytes[]{\n+            0x01 0xB0;\n+          }\n+          [] {                             \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [] {                             \/\/ Attributes\n+            Attr(#22) {                    \/\/ LineNumberTable\n+              [] {                         \/\/ line_number_table\n+                   0   52;\n+              }\n+            }                              \/\/ end of LineNumberTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ method\n+      0x0000;                              \/\/ access\n+      #23;                                 \/\/ name_index\n+      #25;                                 \/\/ descriptor_index\n+      [] {                                 \/\/ Attributes\n+        Attr(#21) {                        \/\/ Code\n+          0;                               \/\/ max_stack\n+          2;                               \/\/ max_locals\n+          Bytes[]{\n+            0xB1;\n+          }\n+          [] {                             \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [] {                             \/\/ Attributes\n+            Attr(#22) {                    \/\/ LineNumberTable\n+              [] {                         \/\/ line_number_table\n+                   0   55;\n+              }\n+            }                              \/\/ end of LineNumberTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ method\n+      0x0000;                              \/\/ access\n+      #23;                                 \/\/ name_index\n+      #26;                                 \/\/ descriptor_index\n+      [] {                                 \/\/ Attributes\n+        Attr(#21) {                        \/\/ Code\n+          1;                               \/\/ max_stack\n+          3;                               \/\/ max_locals\n+          Bytes[]{\n+            0x01 0x4D 0xB1;\n+          }\n+          [] {                             \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [] {                             \/\/ Attributes\n+            Attr(#22) {                    \/\/ LineNumberTable\n+              [] {                         \/\/ line_number_table\n+                   0   57;\n+                   2   58;\n+              }\n+            }                              \/\/ end of LineNumberTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ method\n+      0x0000;                              \/\/ access\n+      #27;                                 \/\/ name_index\n+      #28;                                 \/\/ descriptor_index\n+      [] {                                 \/\/ Attributes\n+        Attr(#21) {                        \/\/ Code\n+          1;                               \/\/ max_stack\n+          4;                               \/\/ max_locals\n+          Bytes[]{\n+            0x01 0x4D 0x2C 0xC7 0x00 0x06 0xA7 0x00 0x05 0x01 0x4E 0xB1;\n+;\n+          }\n+          [] {                             \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [] {                             \/\/ Attributes\n+            Attr(#22) {                    \/\/ LineNumberTable\n+              [] {                         \/\/ line_number_table\n+                   0   60;\n+                   2   61;\n+                   9   64;\n+                  11   66;\n+              }\n+            }                              \/\/ end of LineNumberTable\n+            ;\n+            Attr(#29) {                    \/\/ StackMapTable\n+              [] {                         \/\/\n+                252b, 9, []z{O,#30};       \/\/ append_frame 1\n+                1b;                        \/\/ same_frame\n+              }\n+            }                              \/\/ end of StackMapTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+    ;\n+    {                                      \/\/ method\n+      0x0000;                              \/\/ access\n+      #27;                                 \/\/ name_index\n+      #32;                                 \/\/ descriptor_index\n+      [] {                                 \/\/ Attributes\n+        Attr(#21) {                        \/\/ Code\n+          1;                               \/\/ max_stack\n+          2;                               \/\/ max_locals\n+          Bytes[]{\n+            0x01 0xB0;\n+          }\n+          [] {                             \/\/ Traps\n+          }                                \/\/ end of Traps\n+          [] {                             \/\/ Attributes\n+            Attr(#22) {                    \/\/ LineNumberTable\n+              [] {                         \/\/ line_number_table\n+                   0   69;\n+              }\n+            }                              \/\/ end of LineNumberTable\n+          }                                \/\/ end of Attributes\n+        }                                  \/\/ end of Code\n+      }                                    \/\/ end of Attributes\n+    }\n+  }                                        \/\/ end of Methods\n+\n+  [] {                                     \/\/ Attributes\n+    Attr(#33) {                            \/\/ SourceFile\n+      #34;\n+    }                                      \/\/ end of SourceFile\n+    ;\n+    Attr(#35) {                            \/\/ NestHost\n+      #36;\n+    }                                      \/\/ end of NestHost\n+    ;\n+    Attr(#38) {                            \/\/ InnerClasses\n+      [] {                                 \/\/ classes\n+           #2   #36   #39  24;\n+          #40   #36   #42  16;\n+          #43   #36   #45  16;\n+          #46   #36   #48 1024;\n+          #49   #36   #51  16;\n+          #52   #36   #54  16;\n+          #55   #36   #57  16;\n+          #30   #36   #58  16;\n+          #59   #36   #61  16;\n+          #62   #36   #64  16;\n+      }\n+    }                                      \/\/ end of InnerClasses\n+    ;\n+    Attr(#65) {                            \/\/ LoadableDescriptors\n+      [] {                                 \/\/ Utf8\n+        #66;\n+        #10;\n+        #67;\n+      }\n+    }                                      \/\/ end of LoadableDescriptors\n+  }                                        \/\/ end of Attributes\n+}\n","filename":"test\/resources\/org\/openjdk\/asmtools\/attribute\/LoadableDescriptors\/LoadableDescriptorsAttributeTest$X.jcod","additions":326,"deletions":0,"binary":false,"changes":326,"status":"added"}]}