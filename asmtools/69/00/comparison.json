{"files":[{"patch":"@@ -4,1 +4,1 @@\n-# Symlinks are forbidden in openjdk project, thus we generate them on the fly togehter with pom.xml #\n+# Symlinks are forbidden in openjdk project, thus we generate them on the fly together with pom.xml #\n","filename":"maven\/mvngen.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,5 +32,5 @@\n-    public static final short DEFAULT_MAJOR_VERSION = 45;\n-    public static final short DEFAULT_MINOR_VERSION = 3;\n-    public static final short DEFAULT_MODULE_MAJOR_VERSION = 53;\n-    public static final short DEFAULT_MODULE_MINOR_VERSION = 0;\n-    public static final short UNDEFINED_VERSION = -1;\n+    public static final int DEFAULT_MAJOR_VERSION = 45;\n+    public static final int DEFAULT_MINOR_VERSION = 3;\n+    public static final int DEFAULT_MODULE_MAJOR_VERSION = 53;\n+    public static final int DEFAULT_MODULE_MINOR_VERSION = 0;\n+    public static final int UNDEFINED_VERSION = -1;\n@@ -40,2 +40,2 @@\n-    private short major_version;\n-    private short minor_version;\n+    private int major_version;\n+    private int minor_version;\n@@ -43,2 +43,2 @@\n-    private short threshold_major_version;\n-    private short threshold_minor_version;\n+    private int threshold_major_version;\n+    private int threshold_minor_version;\n@@ -60,1 +60,1 @@\n-    public CFVersion(short major_version, short minor_version) {\n+    public CFVersion(int major_version, int minor_version) {\n@@ -71,1 +71,1 @@\n-    public CFVersion setThreshold(short major_version, short minor_version) {\n+    public CFVersion setThreshold(int major_version, int minor_version) {\n@@ -77,1 +77,1 @@\n-    public CFVersion setVersion(short major_version, short minor_version) {\n+    public CFVersion setVersion(int major_version, int minor_version) {\n@@ -83,1 +83,1 @@\n-    public CFVersion setFileVersion(short major_version, short minor_version) {\n+    public CFVersion setFileVersion(int major_version, int minor_version) {\n@@ -100,1 +100,1 @@\n-    public CFVersion setMajorVersion(short major_version) {\n+    public CFVersion setMajorVersion(int major_version) {\n@@ -106,1 +106,1 @@\n-    public CFVersion setMinorVersion(short minor_version) {\n+    public CFVersion setMinorVersion(int minor_version) {\n@@ -175,2 +175,2 @@\n-    public short minor_version() {\n-        return this.minor_version;\n+    public int minor_version() {\n+            return this.minor_version;\n@@ -179,1 +179,1 @@\n-    public short major_version() {\n+    public int major_version() {\n","filename":"src\/org\/openjdk\/asmtools\/common\/structure\/CFVersion.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.asmtools.asmutils.Pair;\n@@ -239,3 +240,11 @@\n-                                cfv.setThreshold(Short.parseShort(versionsThreshold[0]), Short.parseShort(versionsThreshold[1])).\n-                                        setVersion(Short.parseShort(versionsUpdate[0]), Short.parseShort(versionsUpdate[1])).\n-                                        setByParameter(true).setFrozen(true);\n+                                Pair<Integer, Integer> versionsPair = new Pair<>(Integer.parseInt(versionsThreshold[0]),\n+                                        Integer.parseInt(versionsThreshold[1]));\n+                                if( versionsPair.second > 0xFFFF || versionsPair.first > 0xFFFF ) {\n+                                    throw new NumberFormatException();\n+                                }\n+                                cfv.setThreshold(versionsPair.first, versionsPair.second);\n+                                versionsPair = new Pair<>(Integer.parseInt(versionsUpdate[0]), Integer.parseInt(versionsUpdate[1]));\n+                                if( versionsPair.second > 0xFFFF || versionsPair.first > 0xFFFF ) {\n+                                    throw new NumberFormatException();\n+                                }\n+                                cfv.setVersion(versionsPair.first, versionsPair.second).setByParameter(true).setFrozen(true);\n@@ -245,1 +254,5 @@\n-                                    cfv.setVersion(Short.parseShort(versions[0]), Short.parseShort(versions[1])).\n+                                    Pair<Integer, Integer> versionsPair = new Pair<>(Integer.parseInt(versions[0]), Integer.parseInt(versions[1]));\n+                                    if( versionsPair.second > 0xFFFF || versionsPair.first > 0xFFFF ) {\n+                                        throw new NumberFormatException();\n+                                    }\n+                                    cfv.setVersion(Integer.parseInt(versions[0]), Integer.parseInt(versions[1])).\n@@ -256,1 +269,0 @@\n-\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/Main.java","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-        short majorVersion, minorVersion;\n+        int majorVersion, minorVersion;\n@@ -128,1 +128,1 @@\n-                majorVersion = (short) scanner.intValue;\n+                majorVersion = scanner.intValue;\n@@ -133,1 +133,1 @@\n-                        minorVersion = (short) scanner.intValue;\n+                        minorVersion = scanner.intValue;\n@@ -1549,2 +1549,2 @@\n-                short minor = classData.cfv.minor_version();\n-                short major = classData.cfv.major_version();\n+                int minor = classData.cfv.minor_version();\n+                int major = classData.cfv.major_version();\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/Parser.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-err.invalid_threshold_major_minor_param=Invalid parameter \\\"-fixvc '{<major.minor>-}'<major.minor>\\\"\n+err.invalid_threshold_major_minor_param=Invalid parameter \\\"-fixcv '{<major.minor>-}'<major.minor>\\\"\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/i18n.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.asmtools.asmutils.Pair;\n@@ -219,0 +220,2 @@\n+                        String cfvArg = argv[++i];\n+                        boolean withThreshold = cfvArg.contains(\"-\");\n@@ -220,3 +223,1 @@\n-\n-                            String cfvArg = argv[++i];\n-                            if (cfvArg.contains(\"-\")) {\n+                            if (withThreshold) {\n@@ -229,4 +230,11 @@\n-                                environment.cfv.setThreshold(Short.parseShort(versionsThreshold[0]), Short.parseShort(versionsThreshold[1])).\n-                                        setVersion(Short.parseShort(versionsUpdate[0]), Short.parseShort(versionsUpdate[1])).\n-                                        setByParameter(true).setFrozen(true);\n-\n+                                Pair<Integer, Integer> versionsPair = new Pair<>(Integer.parseInt(versionsThreshold[0]),\n+                                        Integer.parseInt(versionsThreshold[1]));\n+                                if( versionsPair.second > 0xFFFF || versionsPair.first > 0xFFFF ) {\n+                                    throw new NumberFormatException();\n+                                }\n+                                environment.cfv.setThreshold(versionsPair.first, versionsPair.second);\n+                                versionsPair = new Pair<>(Integer.parseInt(versionsUpdate[0]), Integer.parseInt(versionsUpdate[1]));\n+                                if( versionsPair.second > 0xFFFF || versionsPair.first > 0xFFFF ) {\n+                                    throw new NumberFormatException();\n+                                }\n+                                environment.cfv.setVersion(versionsPair.first, versionsPair.second).setByParameter(true).setFrozen(true);\n@@ -236,1 +244,5 @@\n-                                    environment.cfv.setVersion(Short.parseShort(versions[0]), Short.parseShort(versions[1])).\n+                                    Pair<Integer, Integer> versionsPair = new Pair<>(Integer.parseInt(versions[0]), Integer.parseInt(versions[1]));\n+                                    if( versionsPair.second > 0xFFFF || versionsPair.first > 0xFFFF ) {\n+                                        throw new NumberFormatException();\n+                                    }\n+                                    environment.cfv.setVersion(Integer.parseInt(versions[0]), Integer.parseInt(versions[1])).\n@@ -243,1 +255,1 @@\n-                            environment.error(\"err.invalid_threshold_major_minor_param\");\n+                                environment.error(\"err.invalid_threshold_major_minor_param\");\n","filename":"src\/org\/openjdk\/asmtools\/jcoder\/Main.java","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -288,2 +288,2 @@\n-            cfVersion.setMinorVersion((short) in.readUnsignedShort());\n-            cfVersion.setMajorVersion((short) in.readUnsignedShort());\n+            cfVersion.setMinorVersion( in.readUnsignedShort());\n+            cfVersion.setMajorVersion( in.readUnsignedShort());\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/ClassData.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}