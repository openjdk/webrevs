{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,2 +84,1 @@\n-    # For public debug symbols on Windows, we have to use stripped pdbs, rename them\n-    # and filter out a few launcher pdbs where there's a lib that goes by the same name\n+    # For public debug symbols on Windows, we have to use stripped pdbs and rename them\n@@ -89,2 +88,1 @@\n-        $(filter-out %jimage.stripped.pdb %jpackage.stripped.pdb %java.stripped.pdb, \\\n-            $(filter %.stripped.pdb, $(call FindFiles, $(CMDS_DIR))))\n+        $(filter %.stripped.pdb, $(call FindFiles, $(CMDS_DIR)))\n@@ -99,12 +97,0 @@\n-  else ifeq ($(call isTargetOs, windows)+$(SHIP_DEBUG_SYMBOLS), true+full)\n-    # For full debug symbols on Windows, we have to filter out a few launcher pdbs\n-    # where there's a lib that goes by the same name\n-    CMDS_DIR_FILTERED := $(subst modules_cmds,modules_cmds_filtered, $(CMDS_DIR))\n-    $(eval $(call SetupCopyFiles, COPY_FILTERED_CMDS, \\\n-        SRC := $(CMDS_DIR), \\\n-        DEST := $(CMDS_DIR_FILTERED), \\\n-        FILES := $(filter-out %jimage.pdb %jpackage.pdb %java.pdb, \\\n-            $(call FindFiles, $(CMDS_DIR))), \\\n-    ))\n-    DEPS += $(COPY_FILTERED_CMDS)\n-    JMOD_FLAGS += --cmds $(CMDS_DIR_FILTERED)\n","filename":"make\/CreateJmods.gmk","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -270,3 +270,0 @@\n-FILTERED_PDBS := %jimage.stripped.pdb %jpackage.stripped.pdb %java.stripped.pdb \\\n-    %jimage.pdb %jpackage.pdb %java.pdb %jimage.map %jpackage.map %java.map\n-\n@@ -286,2 +283,2 @@\n-          FILES := $(filter-out $(FILTERED_PDBS), $(call FindDebuginfoFiles, \\\n-              $(SUPPORT_OUTPUTDIR)\/modules_cmds\/$m)), \\\n+          FILES := $(call FindDebuginfoFiles, \\\n+              $(SUPPORT_OUTPUTDIR)\/modules_cmds\/$m), \\\n","filename":"make\/Images.gmk","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -91,3 +91,3 @@\n-          modules_libs\/java.security.jgss\/w2k_lsa_auth.diz \\\n-          modules_libs\/java.security.jgss\/w2k_lsa_auth.map \\\n-          modules_libs\/java.security.jgss\/w2k_lsa_auth.pdb, \\\n+          modules_libs\/java.security.jgss\/w2k_lsa_auth.dll.diz \\\n+          modules_libs\/java.security.jgss\/w2k_lsa_auth.dll.map \\\n+          modules_libs\/java.security.jgss\/w2k_lsa_auth.dll.pdb, \\\n","filename":"make\/ZipSecurity.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1053,2 +1053,2 @@\n-          $1_EXTRA_LDFLAGS += -debug \"-pdb:$$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).pdb\" \\\n-              \"-map:$$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).map\"\n+          $1_EXTRA_LDFLAGS += -debug \"-pdb:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).pdb\" \\\n+              \"-map:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).map\"\n@@ -1056,1 +1056,1 @@\n-            $1_EXTRA_LDFLAGS += \"-pdbstripped:$$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).stripped.pdb\"\n+            $1_EXTRA_LDFLAGS += \"-pdbstripped:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).stripped.pdb\"\n@@ -1058,2 +1058,2 @@\n-          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).pdb \\\n-              $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).map\n+          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).pdb \\\n+              $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).map\n@@ -1107,1 +1107,5 @@\n-          $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).diz\n+          ifeq ($(call isTargetOs, windows), true)\n+            $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).diz\n+          else\n+            $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).diz\n+          endif\n","filename":"make\/common\/NativeCompilation.gmk","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-          FILES := jvm.pdb gtestLauncher.pdb, \\\n+          FILES := jvm.dll.pdb gtestLauncher.exe.pdb, \\\n","filename":"make\/hotspot\/test\/GtestImage.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -332,1 +332,1 @@\n-        addAttr(rv, \"ProgramDataBaseFileName\", outDir+Util.sep+\"jvm.pdb\");\n+        addAttr(rv, \"ProgramDataBaseFileName\", outDir+Util.sep+\"jvm.dll.pdb\");\n@@ -412,1 +412,1 @@\n-        addAttr(rv, \"ProgramDatabaseFile\", outDir+Util.sep+\"jvm.pdb\");\n+        addAttr(rv, \"ProgramDatabaseFile\", outDir+Util.sep+\"jvm.dll.pdb\");\n","filename":"make\/ide\/visualstudio\/hotspot\/src\/classes\/build\/tools\/projectcreator\/WinGammaPlatformVC10.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,2 +52,2 @@\n-      \/modules_libs\/java.security.jgss\/w2k_lsa_auth.pdb\n-      \/modules_libs\/java.security.jgss\/w2k_lsa_auth.map\n+      \/modules_libs\/java.security.jgss\/w2k_lsa_auth.dll.pdb\n+      \/modules_libs\/java.security.jgss\/w2k_lsa_auth.dll.map\n","filename":"make\/scripts\/compare_exceptions.sh.incl","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test symbolsHsErr\n+ * @summary Test that function names are present in native frames of hs-err file as a proof that symbols are available.\n+ * @library \/test\/lib\n+ * @requires vm.flagless\n+ * @requires vm.debug\n+ * @requires os.family == \"windows\"\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run driver TestSymbolsInHsErrFile\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class TestSymbolsInHsErrFile {\n+\n+  public static void main(String[] args) throws Exception {\n+\n+    \/\/ Start a jvm and cause a SIGSEGV \/ ACCESS_VIOLATION\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        \"-XX:+UnlockDiagnosticVMOptions\",\n+        \"-Xmx100M\",\n+        \"-XX:-CreateCoredumpOnCrash\",\n+        \"-XX:ErrorHandlerTest=14\",\n+        \"-version\");\n+\n+    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    output.shouldNotHaveExitValue(0);\n+\n+    \/\/ Verify that the hs_err problematic frame contains a function name that points to origin of the crash;\n+    \/\/ on Windows\/MSVC, if symbols are present and loaded, we should see a ref to  either 'crash_with_segfault'\n+    \/\/ 'VMError::controlled_crash' depending on whether the compile optimizations (i.e. crash_with_segfault\n+    \/\/ was inlined or not):\n+    \/\/ # Problematic frame:\n+    \/\/ # V  [jvm.dll+0x.....]  crash_with_segfault+0x10\n+    \/\/ or\n+    \/\/ # V  [jvm.dll+0x.....]  VMError::controlled_crash+0x99\n+    \/\/\n+    \/\/ If symbols could not be loaded, however, then the frame will contain not function name at all, i.e.\n+    \/\/ # Problematic frame:\n+    \/\/ # V  [jvm.dll+0x.....]\n+    \/\/ NB: this is not true for other OS\/Compilers, where the functions names are present even with no symbols,\n+    \/\/ hence this test being restricted to Windows only.\n+    output.shouldMatch((\"# V  \\\\[jvm.dll.*\\\\].*(crash_with_segfault|controlled_crash).*\"));\n+\n+  }\n+\n+}\n+\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestSymbolsInHsErrFile.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"}]}