{"files":[{"patch":"@@ -852,0 +852,16 @@\n+      if test \"x$FILE_MACRO_CFLAGS\" != x; then\n+        # Add -pathmap for all VS system include paths using Windows\n+        # full Long path name that is generated by the compiler\n+        # Not enabled under WSL as there is no easy way to obtain the\n+        # Windows full long paths, thus reproducible WSL builds will\n+        # depend on building with the same VS toolchain install location.\n+        if test \"x$OPENJDK_BUILD_OS_ENV\" != \"xwindows.wsl1\" && test \"x$OPENJDK_BUILD_OS_ENV\" != \"xwindows.wsl2\"; then\n+          for ipath in ${$3SYSROOT_CFLAGS}; do\n+              if test \"x${ipath:0:2}\" == \"x-I\"; then\n+                  ipath_path=${ipath#\"-I\"}\n+                  UTIL_FIXUP_WIN_LONG_PATH(ipath_path)\n+                  FILE_MACRO_CFLAGS=\"$FILE_MACRO_CFLAGS -pathmap:\\\"$ipath_path\\\"=vsi\"\n+              fi\n+          done\n+        fi\n+      fi\n","filename":"make\/autoconf\/flags-cflags.m4","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -121,0 +121,18 @@\n+##############################################################################\n+# Fixup path to be a Windows full long path\n+# Note: Only supported with cygwin\/msys2 (cygpath tool)\n+AC_DEFUN([UTIL_FIXUP_WIN_LONG_PATH],\n+[\n+  # Only process if variable expands to non-empty\n+  path=\"[$]$1\"\n+  if test \"x$path\" != x; then\n+    if test \"x$OPENJDK_BUILD_OS\" = \"xwindows\"; then\n+      win_path=$($PATHTOOL -wl \"$path\")\n+      if test \"x$win_path\" != \"x$path\"; then\n+        $1=\"$win_path\"\n+      fi\n+    fi\n+  fi\n+])\n+\n+\n","filename":"make\/autoconf\/util_paths.m4","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}