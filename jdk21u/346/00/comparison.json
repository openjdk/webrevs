{"files":[{"patch":"@@ -41,5 +41,3 @@\n-  : _thread(map->thread()),\n-    _entry(Continuation::get_continuation_entry_for_continuation(_thread, map->stack_chunk()->cont())),\n-    _continuation(map->stack_chunk()->cont())\n-  {\n-  assert(oopDesc::is_oop(_continuation),\"Invalid cont: \" INTPTR_FORMAT, p2i((void*)_continuation));\n+  : ContinuationWrapper(map->thread(),\n+                        Continuation::get_continuation_entry_for_continuation(map->thread(), map->stack_chunk()->cont()),\n+                        map->stack_chunk()->cont()) {\n@@ -49,2 +47,0 @@\n-  disallow_safepoint();\n-  read();\n@@ -99,1 +95,0 @@\n-\n","filename":"src\/hotspot\/share\/runtime\/continuationWrapper.cpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+  bool               _done;\n@@ -61,0 +62,1 @@\n+      assert(!_done, \"\");\n@@ -72,1 +74,1 @@\n-      if (_continuation != nullptr && _current_thread->is_Java_thread()) {\n+      if (!_done && _current_thread->is_Java_thread()) {\n@@ -78,0 +80,2 @@\n+  ContinuationWrapper(JavaThread* thread, ContinuationEntry* entry, oop continuation);\n+\n@@ -81,1 +85,2 @@\n-    _continuation = nullptr;\n+    _done = true;\n+    *reinterpret_cast<intptr_t*>(&_continuation) = badHeapOopVal;\n@@ -143,3 +148,2 @@\n-inline ContinuationWrapper::ContinuationWrapper(JavaThread* thread, oop continuation)\n-  : _thread(thread), _entry(thread->last_continuation()), _continuation(continuation)\n-  {\n+inline ContinuationWrapper::ContinuationWrapper(JavaThread* thread, ContinuationEntry* entry, oop continuation)\n+  : _thread(thread), _entry(entry), _continuation(continuation), _done(false) {\n@@ -152,0 +156,3 @@\n+inline ContinuationWrapper::ContinuationWrapper(JavaThread* thread, oop continuation)\n+  : ContinuationWrapper(thread, thread->last_continuation(), continuation) {}\n+\n@@ -153,7 +160,1 @@\n-  : _thread(nullptr), _entry(nullptr), _continuation(continuation)\n-  {\n-  assert(oopDesc::is_oop(_continuation),\n-         \"Invalid continuation object: \" INTPTR_FORMAT, p2i((void*)_continuation));\n-  disallow_safepoint();\n-  read();\n-}\n+  : ContinuationWrapper(nullptr, nullptr, continuation) {}\n","filename":"src\/hotspot\/share\/runtime\/continuationWrapper.inline.hpp","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"}]}