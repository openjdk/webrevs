{"files":[{"patch":"@@ -52,1 +52,1 @@\n-    public static boolean enabled() {\n+    public static boolean shouldCommit(long duration) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/events\/MethodTraceEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        if (MethodTraceEvent.enabled() && JVM.getEventWriter() != null) {\n+        if (MethodTraceEvent.shouldCommit(duration) && JVM.getEventWriter() != null) {\n@@ -69,1 +69,1 @@\n-        if (MethodTraceEvent.enabled() && JVM.getEventWriter() != null) {\n+        if (MethodTraceEvent.shouldCommit(duration) && JVM.getEventWriter() != null) {\n@@ -80,1 +80,1 @@\n-        if (MethodTraceEvent.enabled()) {\n+        if (MethodTraceEvent.shouldCommit(duration)) {\n@@ -99,1 +99,1 @@\n-        if (MethodTraceEvent.enabled()) {\n+        if (MethodTraceEvent.shouldCommit(duration)) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/tracing\/MethodTracer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+import java.time.Duration;\n+import java.util.List;\n@@ -32,0 +34,1 @@\n+import jdk.jfr.Recording;\n@@ -33,0 +36,1 @@\n+import jdk.test.lib.jfr.Events;\n@@ -55,0 +59,25 @@\n+        testWithoutThreshold();\n+        testWithThreshold();\n+    }\n+\n+    private static void testWithThreshold() throws Exception {\n+        try (Recording r = new Recording()) {\n+            r.enable(EVENT_NAME)\n+             .with(\"filter\", CLASS_NAME + \"::printHello\")\n+             .withThreshold(Duration.ofHours(1));\n+            r.start();\n+            printHello();\n+            r.stop();\n+            List<RecordedEvent> events = Events.fromRecording(r);\n+            if (!events.isEmpty()) {\n+                System.out.println(events);\n+                throw new Exception(\"Unexpected MethodTrace event\");\n+            }\n+        }\n+    }\n+\n+    public static void printHello() {\n+        System.out.println(\"Hello!\");\n+    }\n+\n+    private static void testWithoutThreshold() throws Exception {\n","filename":"test\/jdk\/jdk\/jfr\/event\/tracing\/TestMethodTrace.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"}]}