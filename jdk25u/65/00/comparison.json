{"files":[{"patch":"@@ -47,3 +47,8 @@\n-        int length = Integer.MAX_VALUE\/2 + 1;\n-        char character = (char)0XD1; \/\/ N with tilde\n-        long utf8Length = 2L * length;\n+        \/\/ We want a string whose UTF-8 length is > Integer.MAX_VALUE, but\n+        \/\/ whose \"natural\" length is < Integer.MAX_VALUE\/2 so it can be\n+        \/\/ created regardless of whether compact-strings are enabled or not.\n+        \/\/ So we use a character that encodes as 3-bytes in UTF-8.\n+        \/\/   U+08A0 : e0 a2 a0 : ARABIC LETTER BEH WITH SMALL V BELOW\n+        char character = '\\u08A0';\n+        int length = Integer.MAX_VALUE\/2 - 1;\n+        long utf8Length = 3L * length;\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/checked\/TestLargeUTF8Length.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}