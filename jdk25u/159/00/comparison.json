{"files":[{"patch":"@@ -1090,1 +1090,2 @@\n-  assert(allocation->harvested() + allocation->committed_capacity() == freed, \"must have freed all\");\n+  assert(allocation->harvested() + allocation->committed_capacity() == freed, \"must have freed all\"\n+         \" %zu + %zu == %zu\", allocation->harvested(), allocation->committed_capacity(), freed);\n@@ -1907,0 +1908,1 @@\n+  assert(allocation->partial_vmems()->is_empty(), \"Invariant for single partition commit failure\");\n@@ -1908,4 +1910,7 @@\n-  const size_t committed = allocation->committed_capacity();\n-  const ZVirtualMemory non_harvested_vmem = vmem.last_part(allocation->harvested());\n-  const ZVirtualMemory committed_vmem = non_harvested_vmem.first_part(committed);\n-  const ZVirtualMemory non_committed_vmem = non_harvested_vmem.last_part(committed);\n+  \/\/ For a single partition we have unmapped the harvested memory before we\n+  \/\/ started committing, and moved its physical memory association to the start\n+  \/\/ of the vmem. As such, the partial_vmems is empty. All the harvested and\n+  \/\/ partially successfully committed memory is mapped in the first part of vmem.\n+  const size_t harvested_and_committed_capacity = allocation->harvested() + allocation->committed_capacity();\n+  const ZVirtualMemory succeeded_vmem = vmem.first_part(harvested_and_committed_capacity);\n+  const ZVirtualMemory failed_vmem = vmem.last_part(harvested_and_committed_capacity);\n@@ -1913,1 +1918,1 @@\n-  if (committed_vmem.size() > 0) {\n+  if (succeeded_vmem.size() > 0) {\n@@ -1917,1 +1922,1 @@\n-    allocation->partial_vmems()->append(committed_vmem);\n+    allocation->partial_vmems()->append(succeeded_vmem);\n@@ -1922,2 +1927,2 @@\n-  partition.free_physical(non_committed_vmem);\n-  partition.free_virtual(non_committed_vmem);\n+  partition.free_physical(failed_vmem);\n+  partition.free_virtual(failed_vmem);\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -26,0 +26,8 @@\n+\/*\n+ * @test id=Normal\n+ * @requires vm.gc.Z & vm.debug\n+ * @summary Test ZGC graceful failure when a commit fails\n+ * @library \/ \/test\/lib\n+ * @run driver gc.z.TestCommitFailure\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestCommitFailure.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}