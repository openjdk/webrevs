{"files":[{"patch":"@@ -65,1 +65,2 @@\n-      exelauncher.c\n+      exelauncher.c \\\n+      libChangeSignalDisposition.c exePrintSignalDisposition.c\n","filename":"make\/test\/JtregNativeJdk.gmk","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -419,0 +419,5 @@\n+    \/\/ Children should be started with default signal disposition for SIGPIPE\n+    if (signal(SIGPIPE, SIG_DFL) == SIG_ERR) {\n+        goto WhyCantJohnnyExec;\n+    }\n+\n","filename":"src\/java.base\/unix\/native\/libjava\/childproc.c","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test id=posix_spawn\n+ * @bug 8364611\n+ * @summary Check that childs start with SIG_DFL as SIGPIPE disposition\n+ * @requires os.family != \"windows\"\n+ * @library \/test\/lib\n+ * @run main\/othervm\/native -Djdk.lang.Process.launchMechanism=posix_spawn -agentlib:ChangeSignalDisposition TestChildSignalDisposition\n+ *\/\n+\n+\/**\n+ * @test id=fork\n+ * @bug 8364611\n+ * @summary Check that childs start with SIG_DFL as SIGPIPE disposition\n+ * @requires os.family != \"windows\"\n+ * @library \/test\/lib\n+ * @run main\/othervm\/native -Djdk.lang.Process.launchMechanism=fork -agentlib:ChangeSignalDisposition TestChildSignalDisposition\n+ *\/\n+\n+\/**\n+ * @test id=vfork\n+ * @bug 8364611\n+ * @summary Check that childs start with SIG_DFL as SIGPIPE disposition\n+ * @requires os.family == \"linux\"\n+ * @library \/test\/lib\n+ * @run main\/othervm\/native -Djdk.lang.Process.launchMechanism=vfork -agentlib:ChangeSignalDisposition TestChildSignalDisposition\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+public class TestChildSignalDisposition {\n+    \/\/ This test has two native parts:\n+    \/\/ - a library injected into the JVM with -agentlib changes signal disposition of the VM process for SIGPIPE to\n+    \/\/   SIG_IGN\n+    \/\/ - a small native executable that prints out, in its main function, all signal handler dispositions, to be executed\n+    \/\/   as a child process.\n+    \/\/\n+    \/\/ What should happen: In child process, SIGPIPE should be set to default.\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createNativeTestProcessBuilder(\"PrintSignalDisposition\");\n+        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n+        output.shouldHaveExitValue(0);\n+        output.shouldNotMatch(\"SIGPIPE: +ignore\");\n+        output.shouldNotMatch(\"SIGPIPE: +block\");\n+        output.shouldMatch(\"SIGPIPE: +default\");\n+        output.reportDiagnosticSummary();\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/childSignalDisposition\/TestChildSignalDisposition.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <errno.h>\n+#include \"jvmti.h\"\n+#include <signal.h>\n+#include <stdio.h>\n+#include <unistd.h>\n+\n+static const struct { int sig; const char* name; } signals[] = {\n+    { SIGABRT, \"SIGABRT\" }, { SIGALRM, \"SIGALRM\" }, { SIGBUS, \"SIGBUS\" }, { SIGCHLD, \"SIGCHLD\" }, { SIGCONT, \"SIGCONT\" },\n+    { SIGFPE, \"SIGFPE\" }, { SIGHUP, \"SIGHUP\" }, { SIGILL, \"SIGILL\" }, { SIGINT, \"SIGINT\" }, { SIGKILL, \"SIGKILL\" },\n+    { SIGPIPE, \"SIGPIPE\" }, { SIGQUIT, \"SIGQUIT\" }, { SIGSEGV, \"SIGSEGV\" }, { SIGSTOP, \"SIGSTOP\" }, { SIGTERM, \"SIGTERM\" },\n+    { SIGTSTP, \"SIGTSTP\" }, { SIGTTIN, \"SIGTTIN\" }, { SIGTTOU, \"SIGTTOU\" }, { SIGUSR1, \"SIGUSR1\" }, { SIGUSR2, \"SIGUSR2\" },\n+#ifdef SIGPOLL\n+    { SIGPOLL, \"SIGPOLL\" },\n+#endif\n+    { SIGPROF, \"SIGPROF\" }, { SIGSYS, \"SIGSYS\" }, { SIGTRAP, \"SIGTRAP\" }, { SIGURG, \"SIGURG\" }, { SIGVTALRM, \"SIGVTALRM\" },\n+    { SIGXCPU, \"SIGXCPU\" }, { SIGXFSZ, \"SIGXFSZ\" }, { -1, NULL }\n+};\n+\n+int main(int argc, char** argv) {\n+\n+    printf(\"PID: %d\\n\", getpid());\n+\n+    sigset_t current_mask;\n+    sigemptyset(&current_mask);\n+    if (sigprocmask(SIG_BLOCK \/* ignored *\/, NULL, &current_mask) != 0) {\n+        printf(\"sigprocmask %d\\n\", errno);\n+        return -1;\n+    }\n+\n+    for (int n = 0; signals[n].sig != -1; n++) {\n+        printf(\"%s: \", signals[n].name);\n+        if (sigismember(&current_mask, signals[n].sig)) {\n+            printf(\"blocked \");\n+        }\n+        struct sigaction act;\n+        if (sigaction(signals[n].sig, NULL, &act) != 0) {\n+            printf(\"sigaction %d\\n\", errno);\n+            printf(\"\\n\");\n+            continue;\n+        }\n+        const void* const handler = (act.sa_flags & SA_SIGINFO ?\n+                                    (void*)act.sa_sigaction : (void*)act.sa_handler);\n+        if (handler == (void*)SIG_DFL) {\n+            printf(\"default \");\n+        } else if (handler == (void*)SIG_IGN) {\n+            printf(\"ignore \");\n+        } else if (handler == (void*)SIG_HOLD) {\n+            printf(\"hold \");\n+        } else {\n+            printf(\"%p \", handler);\n+        }\n+        printf(\"%X %X\\n\", act.sa_flags, act.sa_mask);\n+    }\n+\n+    return 0;\n+}\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/childSignalDisposition\/exePrintSignalDisposition.c","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <errno.h>\n+#include \"jvmti.h\"\n+#include <signal.h>\n+#include <stdio.h>\n+\n+JNIEXPORT jint JNICALL\n+Agent_OnLoad(JavaVM *jvm, char *options, void *reserved) {\n+\n+  if (signal(SIGPIPE, SIG_IGN) != SIG_ERR) {\n+    printf(\"changed signal disposition for SIGPIPE to SIG_IGN\\n\");\n+  } else {\n+    printf(\"FAILED to change signal disposition for SIGPIPE to SIG_IGN (%d)\\n\", errno);\n+    return JNI_ERR;\n+  }\n+\n+  return JNI_OK;\n+}\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/childSignalDisposition\/libChangeSignalDisposition.c","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"}]}