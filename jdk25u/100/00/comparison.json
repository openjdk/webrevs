{"files":[{"patch":"@@ -834,1 +834,0 @@\n-template<bool GENERATIONAL>\n@@ -844,3 +843,0 @@\n-    if (GENERATIONAL) {\n-      ShenandoahThreadLocalData::enable_plab_promotions(thread);\n-    }\n@@ -850,1 +846,0 @@\n-template<bool GENERATIONAL>\n@@ -862,5 +857,0 @@\n-    if (GENERATIONAL) {\n-      Thread* worker_thread = Thread::current();\n-      ShenandoahThreadLocalData::enable_plab_promotions(worker_thread);\n-    }\n-\n@@ -870,1 +860,1 @@\n-    ShenandoahConcurrentEvacThreadClosure<GENERATIONAL> thr_cl(&oops_cl);\n+    ShenandoahConcurrentEvacThreadClosure thr_cl(&oops_cl);\n@@ -876,1 +866,1 @@\n-  ShenandoahHeap* const heap = ShenandoahHeap::heap();\n+  const ShenandoahHeap* const heap = ShenandoahHeap::heap();\n@@ -879,7 +869,2 @@\n-  if (heap->mode()->is_generational()) {\n-    ShenandoahConcurrentEvacUpdateThreadTask<true> task(heap->workers()->active_workers());\n-    heap->workers()->run_task(&task);\n-  } else {\n-    ShenandoahConcurrentEvacUpdateThreadTask<false> task(heap->workers()->active_workers());\n-    heap->workers()->run_task(&task);\n-  }\n+  ShenandoahConcurrentEvacUpdateThreadTask task(heap->workers()->active_workers());\n+  heap->workers()->run_task(&task);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":4,"deletions":19,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1241,0 +1241,5 @@\n+\n+      \/\/ Re-enable promotions for the next evacuation phase.\n+      ShenandoahThreadLocalData::enable_plab_promotions(thread);\n+\n+      \/\/ Reset the fill size for next evacuation phase.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}