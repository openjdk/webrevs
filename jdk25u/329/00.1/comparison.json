{"files":[{"patch":"@@ -27,0 +27,2 @@\n+import java.security.cert.*;\n+import java.security.cert.Extension;\n@@ -29,4 +31,0 @@\n-import java.security.cert.X509Certificate;\n-import java.security.cert.CertificateException;\n-import java.security.cert.CertificateFactory;\n-import java.security.cert.Extension;\n@@ -46,0 +44,1 @@\n+import sun.security.x509.IPAddressName;\n@@ -59,0 +58,1 @@\n+\n@@ -103,0 +103,83 @@\n+    public enum KeyUsage {\n+        DIGITAL_SIGNATURE,\n+        NONREPUDIATION,\n+        KEY_ENCIPHERMENT,\n+        DATA_ENCIPHERMENT,\n+        KEY_AGREEMENT,\n+        KEY_CERT_SIGN,\n+        CRL_SIGN,\n+        ENCIPHER_ONLY,\n+        DECIPHER_ONLY;\n+    }\n+\n+    \/**\n+     * Create a new CertificateBuilder instance. This method sets the subject name,\n+     * public key, authority key id, and serial number.\n+     *\n+     * @param subjectName entity associated with the public key\n+     * @param publicKey the entity's public key\n+     * @param caKey public key of certificate signer\n+     * @param keyUsages list of key uses\n+     * @return\n+     * @throws CertificateException\n+     * @throws IOException\n+     *\/\n+    public static CertificateBuilder newCertificateBuilder(String subjectName,\n+                           PublicKey publicKey, PublicKey caKey, KeyUsage... keyUsages)\n+            throws CertificateException, IOException {\n+        SecureRandom random = new SecureRandom();\n+\n+        boolean [] keyUsage = new boolean[KeyUsage.values().length];\n+        for (KeyUsage ku : keyUsages) {\n+            keyUsage[ku.ordinal()] = true;\n+        }\n+\n+        CertificateBuilder builder = new CertificateBuilder()\n+                .setSubjectName(subjectName)\n+                .setPublicKey(publicKey)\n+                .setSerialNumber(BigInteger.valueOf(random.nextLong(1000000)+1))\n+                .addSubjectKeyIdExt(publicKey)\n+                .addAuthorityKeyIdExt(caKey);\n+        if (keyUsages.length != 0) {\n+            builder.addKeyUsageExt(keyUsage);\n+        }\n+        return builder;\n+    }\n+\n+    \/**\n+     * Create a Subject Alternative Name extension for the given DNS name\n+     * @param critical Sets the extension to critical or non-critical\n+     * @param dnsName DNS name to use in the extension\n+     * @throws IOException\n+     *\/\n+    public static SubjectAlternativeNameExtension createDNSSubjectAltNameExt(\n+            boolean critical, String dnsName) throws IOException {\n+        GeneralNames gns = new GeneralNames();\n+        gns.add(new GeneralName(new DNSName(dnsName)));\n+        return new SubjectAlternativeNameExtension(critical, gns);\n+    }\n+\n+    \/**\n+     * Create a Subject Alternative Name extension for the given IP address\n+     * @param critical Sets the extension to critical or non-critical\n+     * @param ipAddress IP address to use in the extension\n+     * @throws IOException\n+     *\/\n+    public static SubjectAlternativeNameExtension createIPSubjectAltNameExt(\n+            boolean critical, String ipAddress) throws IOException {\n+        GeneralNames gns = new GeneralNames();\n+        gns.add(new GeneralName(new IPAddressName(ipAddress)));\n+        return new SubjectAlternativeNameExtension(critical, gns);\n+    }\n+\n+    public static void printCertificate(X509Certificate certificate, PrintStream ps) {\n+        try {\n+            Base64.Encoder encoder = Base64.getEncoder();\n+            ps.println(\"-----BEGIN CERTIFICATE-----\");\n+            ps.println(encoder.encodeToString(certificate.getEncoded()));\n+            ps.println(\"-----END CERTIFICATE-----\");\n+        } catch (CertificateEncodingException exc) {\n+            exc.printStackTrace(ps);\n+        }\n+    }\n+\n@@ -196,0 +279,5 @@\n+    public CertificateBuilder setOneHourValidity() {\n+        return setNotBefore(Date.from(Instant.now().minus(5, ChronoUnit.MINUTES)))\n+                .setNotAfter(Date.from(Instant.now().plus(1, ChronoUnit.HOURS)));\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/security\/CertificateBuilder.java","additions":92,"deletions":4,"binary":false,"changes":96,"status":"modified"}]}