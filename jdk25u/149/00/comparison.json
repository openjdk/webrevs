{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,0 +23,1 @@\n+\n@@ -28,4 +29,4 @@\n- *     ComponentOrientation property is set to RIGHT_TO_LEFT. This test is\n- *     manual.  The tester is asked to compare left-to-right and\n- *     right-to-left menu bars and judge whether they are mirror images of each\n- *     other.\n+ *     ComponentOrientation property is set to RIGHT_TO_LEFT.\n+ *     The tester is asked to compare left-to-right and\n+ *     right-to-left menu bars and decide whether they are mirror\n+ *     images of each other.\n@@ -38,1 +39,0 @@\n-import java.awt.Point;\n@@ -41,0 +41,2 @@\n+import java.util.List;\n+\n@@ -45,0 +47,1 @@\n+import javax.swing.JOptionPane;\n@@ -50,1 +53,1 @@\n-public class RightLeftOrientation {\n+public final class RightLeftOrientation {\n@@ -52,2 +55,1 @@\n-    static JFrame ltrFrame;\n-    static JFrame rtlFrame;\n+    private static List<JFrame> frames;\n@@ -56,3 +58,1 @@\n-        This test checks menu bars for correct Right-To-Left Component Orientation.\n-\n-        You should see two frames, each containing a menu bar.\n+        This test checks menu bars for correct Right-To-Left component orientation.\n@@ -60,1 +60,2 @@\n-        One frame will be labelled \"Left To Right\" and will contain\n+        You should see two frames, each contains a menu bar.\n+        One frame is labelled \"Left To Right\" and contains\n@@ -62,2 +63,2 @@\n-        The other frame will be labelled \"Right To Left\" and will\n-        contain a menu bar with menus starting on its right side.\n+        The other frame is labelled \"Right To Left\" and\n+        contains a menu bar with menus starting on its right side.\n@@ -65,4 +66,5 @@\n-        The test will also contain radio buttons that can be used to set\n-        the look and feel of the menu bars.\n-        For each look and feel, you should compare the two menu\n-        bars and make sure they are mirror images of each other. \"\"\";\n+        The test also displays a frame with radio buttons\n+        to change the look and feel of the menu bars.\n+        For each look and feel, compare the two menu bars\n+        in LTR and RTL orientation and make sure they are mirror\n+        images of each other.\"\"\";\n@@ -72,1 +74,1 @@\n-                 .title(\"RTL test Instructions\")\n+                 .title(\"Menu Bar RTL Instructions\")\n@@ -74,1 +76,0 @@\n-                 .rows((int) INSTRUCTIONS.lines().count() + 2)\n@@ -77,0 +78,1 @@\n+                 .positionTestUIRightColumn()\n@@ -81,2 +83,2 @@\n-    private static JFrame createTestUI() {\n-        JFrame frame = new JFrame(\"RightLeftOrientation\");\n+    private static JFrame createPlafChangerFrame() {\n+        JFrame frame = new JFrame(\"Change Look and Feel\");\n@@ -86,1 +88,0 @@\n-        JRadioButton rb;\n@@ -91,1 +92,1 @@\n-            rb = new JRadioButton(lafInfos[i].getName());\n+            JRadioButton rb = new JRadioButton(lafInfos[i].getName());\n@@ -102,0 +103,3 @@\n+        frame.pack();\n+        return frame;\n+    }\n@@ -103,1 +107,4 @@\n-        ltrFrame = new JFrame(\"Left To Right\");\n+    private static List<JFrame> createTestUI() {\n+        JFrame plafFrame = createPlafChangerFrame();\n+\n+        JFrame ltrFrame = new JFrame(\"Left To Right\");\n@@ -106,2 +113,0 @@\n-        ltrFrame.setLocation(new Point(10, 10));\n-        ltrFrame.setVisible(true);\n@@ -109,1 +114,1 @@\n-        rtlFrame = new JFrame(\"Right To Left\");\n+        JFrame rtlFrame = new JFrame(\"Right To Left\");\n@@ -112,4 +117,2 @@\n-        rtlFrame.setLocation(new Point(10, 120));\n-        rtlFrame.setVisible(true);\n-        frame.pack();\n-        return frame;\n+\n+        return (frames = List.of(plafFrame, ltrFrame, rtlFrame));\n@@ -118,1 +121,2 @@\n-    static class PlafChanger implements ActionListener {\n+    private static final class PlafChanger implements ActionListener {\n+        @Override\n@@ -124,5 +128,8 @@\n-                SwingUtilities.updateComponentTreeUI(ltrFrame);\n-                SwingUtilities.updateComponentTreeUI(rtlFrame);\n-            }\n-            catch (Exception exc) {\n-                System.err.println(\"Could not load LookAndFeel: \" + lnfName);\n+                frames.forEach(SwingUtilities::updateComponentTreeUI);\n+            } catch (Exception exc) {\n+                String message = \"Could not set Look and Feel to \" + lnfName;\n+                System.err.println(message);\n+                JOptionPane.showMessageDialog(frames.get(0),\n+                                              message,\n+                                              \"Look and Feel Error\",\n+                                              JOptionPane.ERROR_MESSAGE);\n","filename":"test\/jdk\/javax\/swing\/JMenuBar\/RightLeftOrientation.java","additions":46,"deletions":39,"binary":false,"changes":85,"status":"modified"}]}