[{"commit":{"message":"- Change the 'size' arg to 'size_t' type in add_oop_with_size() functions.\n- Fix the entry value type to be 'size_t' in RRHT (a ResizeableResourceHashtable). The entry values are oop sizes."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"8c4984756335565b4fb91e66bad74ed414e729d8"},{"commit":{"message":"- Add comment about saved oop sizes in TsanOopMapTable."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"00bcec7f343e084a0399e148af6272e213b46889"},{"commit":{"message":"- Rename SHARE_VM_PRIMS_TSAN_OOPMAPTABLE_HPP to SHARE_TSAN_TSANOOPMAPTABLE_HPP."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"49fc004a16a3995617326386b572fa8b1883cbbc"},{"commit":{"message":"Sort moves for overlapping case only."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"}],"sha":"a4496362466d909dc7dffdbd4a49a5ac5bedcdb1"},{"commit":{"message":"Change to use log_debug for the pre-existing DEBUG_PRINT."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"}],"sha":"80c1f5583ae5bc93782fd1f333a4f2f6a107669d"},{"commit":{"message":"Update TsanOopMap.hpp comment with more details."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.hpp"}],"sha":"dd6a4c45152a9c788bb97c447b32b888b7efb2c6"},{"commit":{"message":"Remove TsanOopBitMap. We can use CHeapBitMap instead. Thanks manc@ for catching it in https:\/\/github.com\/openjdk\/tsan\/pull\/19\/files#r1687286079."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"}],"sha":"a41bc9877b8e2293b8f2def398743e6870f4887a"},{"commit":{"message":"- Replace the `if` check with `assert(_oop_map != nullptr, \"must be\") in `TsanOopMap::notify_tsan_for_freed_and_moved_objects().\n  Add SafepointSynchronize::is_at_safepoint() assert check. I rechecked these asserts with a slowdebug binary.\n\n- Add back \"Source and target ranges overlap...\" comments for sorting moves."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"}],"sha":"2073896d33263db487a1afd613e0f22677742c88"},{"commit":{"message":"Move PendingMove declaration to tsanOopMapTable.hpp."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"d791587331fbdd4dd455fc737e4a4a304f7621cb"},{"commit":{"message":"Remove newline."},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/weakProcessor.inline.hpp"}],"sha":"08c2efd4e2ec8d621ca6af7c48e879de4a074185"},{"commit":{"message":"Fix more Whitespace error."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"4bd9191688b2618807f2cbcfbaf08faebd9a933f"},{"commit":{"message":"Fix Whitespace errors."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"5167c4a1360f10a2435607d50b69dadfa9daac6b"},{"commit":{"message":"Remove TsanOopMap::notify_tsan_for_freed_and_moved_objects() call from WeakProcessor::weak_oops_do.\nIt's already covered by the call in WeakProcessor::Task::work()."},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/weakProcessor.inline.hpp"}],"sha":"05433441d969d22884ff6354ff6a486d64c828e7"},{"commit":{"message":"Handle table resize in TsanOopMapTable::add_oop_with_size."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"}],"sha":"9584e1887e3e13654dfba436003675a700073cb1"},{"commit":{"message":"Replace DEBUG_PRINT in tsanOopMap.cpp with tsan log_trace."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"}],"sha":"9e0fb9a875d96844dc6169b82bcad1b7aedfb742"},{"commit":{"message":"Implement TsanOopMapTable::~TsanOopMapTable."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"62e1fc851ad1d192f628d1ade0d8b5fadbaef986"},{"commit":{"message":"- Remove TsanOopMap::gc_notification and register_num_dead_callback() for TsanOopMap weak oop storage.\n- Only include is_empty() and find(oop obj) if ASSERT is defined."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"272c590745c6a2fc4331069afdf8329861a9e4f0"},{"commit":{"message":"Add Xlog for tsan:\n- Add tsan log tag.\n- Add trace logging for __tsan_java_alloc|__tsan_java_move|__tsan_java_free calls."},"files":[{"filename":"src\/hotspot\/share\/logging\/logTag.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"}],"sha":"5e8c149ee1a8a8cf7488d97b6058d0d42789c346"},{"commit":{"message":"Rename TsanOopMap::update() to TsanOopMap::notify_tsan_for_freed_and_moved_objects()\nand include the call in TSAN_RUNTIME_ONLY()."},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/weakProcessor.inline.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"384c5f91103d664353052d7204817b37d8ff3c4c"},{"commit":{"message":"Add back TsanOopMapTableKey copy constructor to avoid compiler warning:\n\ntsanOopMapTable.hpp:48:23: warning: definition of implicit copy constructor for 'TsanOopMapTableKey' is deprecated because it has a user-declared copy assignment operator [-Wdeprecated-copy]\n  TsanOopMapTableKey& operator=(const TsanOopMapTableKey&) = delete;\n                      ^\n\/usr\/local\/google\/home\/jianglizhou\/github\/tsan-oopMap-weakhandle\/src\/hotspot\/share\/utilities\/resourceHash.hpp:45:18: note: in implicit copy constructor for 'TsanOopMapTableKey' first required here\n    _hash(hash), _key(key), _value(value), _next(next) {}"},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"b1f4f135fa792919b79df92f37fbe209a15944a0"},{"commit":{"message":"Remove unneeded 'size' field from TsanOopMapTableKey. Object sizes are stored as the\nvalues in TsanOopMap."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"4405eda7b2c18edd1c07acbfcceec95fc77631ee"},{"commit":{"message":"- Remove concurrent TsanOopMap update\/cleanup related since that's done as part of GC.\n\n- Suppress tsan error for following in src\/java.base\/share\/native\/launcher\/main.c\n  - libjava.so\n  - java.util.concurrent.locks\n\n- Misc cleanups."},"files":[{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"},{"filename":"src\/java.base\/share\/native\/launcher\/main.c"}],"sha":"456e2268a43d0e4ba316c2ab120ac8d957cffd6e"},{"commit":{"message":"- Restored TsanOopMapImpl::PendingMove and sorting\/handling overlapping moves from JDK 11 TsanOopMap implementationa.\n  As part of that, I added TsanOopBitMap in order to provide get_next_one_offset(), which no longer exists in JDK 21 BitMap.\n  The get_next_one_offset() that's included was the version from BitpMap in JDK 11. I also had to include following functions\n  from JDK 11 BitMap:\n  - word_index()\n  - word_align_up()\n  - is_word_aligned()\n\n- Added code in following to update TsanOopMap and trigger __tsan_java_move|__tsan_java_free:\n  - WeakProcessor::Task::work\n  - WeakProcessor::weak_oops_do\n  This is to make sure we notify tsan immediately about object move and free before mutaters see those. That resolves the\n  \"ThreadSanitizer: CHECK failed: tsan_sync.cpp:261 \"((*dst_meta)) == ((0))\" errors when running tsan jtreg tests with the\n  initial implementation.\n  I'll remove the concurrent TsanOopMap from ServiceThread and do additional cleanups."},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/weakProcessor.inline.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"17b54ce7c73b63bef0eb6f5c47078b39ba016e5e"},{"commit":{"message":"This is an initial raw implementation of the tsan oop map support using WeakHandle.\nIt's buildable but not functional. The affected tsan jtreg tests (3 tests) still\nfail. I think it probably needs to be able to handle overlapping object moves like the\nprevious support. I'm looking into that next."},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/oopStorageSet.hpp"},{"filename":"src\/hotspot\/share\/runtime\/init.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsan.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMap.hpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.cpp"},{"filename":"src\/hotspot\/share\/tsan\/tsanOopMapTable.hpp"}],"sha":"7f2b30670409cf5854f76a0b1dc01441749232a0"}]