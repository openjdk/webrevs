{"files":[{"patch":"@@ -538,4 +538,1 @@\n-  \/\/ Ultimately, the same closure handles in-place promotions for tenured regions. No objects will be moved.\n-  \/\/ The threads will still participate in the oom-evac-protocol, although no memory will be allocated for\n-  \/\/ in place promotions.\n-  op_evacuate();\n+  ShenandoahGenerationalHeap::heap()->promote_regions_in_place(true);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-        ShenandoahHeap::heap()->evacuate_collection_set(false \/* concurrent*\/);\n+        ShenandoahGenerationalHeap::heap()->promote_regions_in_place(false \/* concurrent*\/);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-                                                                           bool concurrent) :\n+                                                                           bool concurrent, bool only_promote_regions) :\n@@ -61,0 +61,1 @@\n+  _only_promote_regions(only_promote_regions),\n@@ -71,1 +72,0 @@\n-    ShenandoahEvacOOMScope oom_evac_scope;\n@@ -75,1 +75,0 @@\n-    ShenandoahEvacOOMScope oom_evac_scope;\n@@ -81,0 +80,10 @@\n+  if (_only_promote_regions) {\n+    \/\/ No allocations will be made, do not enter oom-during-evac protocol.\n+    do_evacuations();\n+  } else {\n+    ShenandoahEvacOOMScope oom_evac_scope;\n+    do_evacuations();\n+  }\n+}\n+\n+void ShenandoahGenerationalEvacuationTask::do_evacuations() {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalEvacuationTask.cpp","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+  bool _only_promote_regions;\n@@ -46,1 +47,1 @@\n-                                       bool concurrent);\n+                                       bool concurrent, bool only_promote_regions);\n@@ -50,1 +51,1 @@\n-\n+  void do_evacuations();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalEvacuationTask.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -173,0 +173,12 @@\n+void ShenandoahGenerationalHeap::evacuate_collection_set(bool concurrent) {\n+  ShenandoahRegionIterator regions;\n+  ShenandoahGenerationalEvacuationTask task(this, &regions, concurrent, false \/* only promote regions *\/);\n+  workers()->run_task(&task);\n+}\n+\n+void ShenandoahGenerationalHeap::promote_regions_in_place(bool concurrent) {\n+  ShenandoahRegionIterator regions;\n+  ShenandoahGenerationalEvacuationTask task(this, &regions, concurrent, true \/* only promote regions *\/);\n+  workers()->run_task(&task);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -86,0 +86,2 @@\n+  void evacuate_collection_set(bool concurrent) override;\n+  void promote_regions_in_place(bool concurrent);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1213,8 +1213,2 @@\n-  if (mode()->is_generational()) {\n-    ShenandoahRegionIterator regions;\n-    ShenandoahGenerationalEvacuationTask task(ShenandoahGenerationalHeap::heap(), &regions, concurrent);\n-    workers()->run_task(&task);\n-  } else {\n-    ShenandoahEvacuationTask task(this, _collection_set, concurrent);\n-    workers()->run_task(&task);\n-  }\n+  ShenandoahEvacuationTask task(this, _collection_set, concurrent);\n+  workers()->run_task(&task);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -472,1 +472,1 @@\n-  void evacuate_collection_set(bool concurrent);\n+  virtual void evacuate_collection_set(bool concurrent);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}