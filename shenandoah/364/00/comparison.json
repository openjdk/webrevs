{"files":[{"patch":"@@ -210,0 +210,4 @@\n+  inline size_t collector_free() const { return _free_sets.capacity_of(Collector) - _free_sets.used_by(Collector); }\n+  inline size_t old_collector_free() const {\n+    return _free_sets.capacity_of(OldCollector) - _free_sets.used_by(OldCollector);\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,0 +47,3 @@\n+  \/\/ The critical threshold is described in terms of memory available within the heap.\n+  \/\/ This includes mutator_free + collector_reserve + old_collector_reserve\n+\n@@ -48,1 +51,2 @@\n-  size_t free_actual   = _heap->free_set()->available();\n+  size_t free_actual   =\n+    _heap->free_set()->available() + _heap->free_set()->collector_free() + _heap->free_set()->old_collector_free();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMetrics.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}