{"files":[{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"gc\/parallel\/jvmFlagConstraintsParallel.hpp\"\n-#include \"gc\/shared\/gc_globals.hpp\"\n-#include \"runtime\/globals.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-JVMFlag::Error InitialTenuringThresholdConstraintFuncParallel(uint value, bool verbose) {\n-  \/\/ InitialTenuringThreshold is only used for ParallelGC.\n-  if (UseParallelGC && (value > MaxTenuringThreshold)) {\n-      JVMFlag::printError(verbose,\n-                          \"InitialTenuringThreshold (%u) must be \"\n-                          \"less than or equal to MaxTenuringThreshold (%u)\\n\",\n-                          value, MaxTenuringThreshold);\n-      return JVMFlag::VIOLATES_CONSTRAINT;\n-  }\n-  return JVMFlag::SUCCESS;\n-}\n-\n-JVMFlag::Error MaxTenuringThresholdConstraintFuncParallel(uint value, bool verbose) {\n-  \/\/ As only ParallelGC uses InitialTenuringThreshold,\n-  \/\/ we don't need to compare InitialTenuringThreshold with MaxTenuringThreshold.\n-  if (UseParallelGC && (value < InitialTenuringThreshold)) {\n-    JVMFlag::printError(verbose,\n-                        \"MaxTenuringThreshold (%u) must be \"\n-                        \"greater than or equal to InitialTenuringThreshold (%u)\\n\",\n-                        value, InitialTenuringThreshold);\n-    return JVMFlag::VIOLATES_CONSTRAINT;\n-  }\n-\n-  return JVMFlag::SUCCESS;\n-}\n","filename":"src\/hotspot\/share\/gc\/parallel\/jvmFlagConstraintsParallel.cpp","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"},{"patch":"@@ -1,38 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_GC_PARALLEL_JVMFLAGCONSTRAINTSPARALLEL_HPP\n-#define SHARE_GC_PARALLEL_JVMFLAGCONSTRAINTSPARALLEL_HPP\n-\n-#include \"runtime\/flags\/jvmFlag.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-\/\/ Parallel Subconstraints\n-#define PARALLEL_GC_CONSTRAINTS(f)                          \\\n-  f(uint, InitialTenuringThresholdConstraintFuncParallel)   \\\n-  f(uint, MaxTenuringThresholdConstraintFuncParallel)\n-\n-PARALLEL_GC_CONSTRAINTS(DECLARE_CONSTRAINT)\n-\n-#endif \/\/ SHARE_GC_PARALLEL_JVMFLAGCONSTRAINTSPARALLEL_HPP\n","filename":"src\/hotspot\/share\/gc\/parallel\/jvmFlagConstraintsParallel.hpp","additions":0,"deletions":38,"binary":false,"changes":38,"status":"deleted"},{"patch":"@@ -44,3 +44,0 @@\n-#if INCLUDE_PARALLELGC\n-#include \"gc\/parallel\/jvmFlagConstraintsParallel.hpp\"\n-#endif\n@@ -178,4 +175,7 @@\n-#if INCLUDE_PARALLELGC\n-  JVMFlag::Error status = InitialTenuringThresholdConstraintFuncParallel(value, verbose);\n-  if (status != JVMFlag::SUCCESS) {\n-    return status;\n+#if defined(INCLUDE_PARALLELGC) || defined(INCLUDE_SHENANDOAHGC)\n+  if ((UseParallelGC || UseShenandoahGC) && (value > MaxTenuringThreshold)) {\n+    JVMFlag::printError(verbose,\n+                        \"InitialTenuringThreshold (%u) must be \"\n+                        \"less than or equal to MaxTenuringThreshold (%u)\\n\",\n+                        value, MaxTenuringThreshold);\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n@@ -189,4 +189,7 @@\n-#if INCLUDE_PARALLELGC\n-  JVMFlag::Error status = MaxTenuringThresholdConstraintFuncParallel(value, verbose);\n-  if (status != JVMFlag::SUCCESS) {\n-    return status;\n+#if defined(INCLUDE_PARALLELGC) || defined(INCLUDE_SHENANDOAHGC)\n+  if ((UseParallelGC || UseShenandoahGC) && (value < InitialTenuringThreshold)) {\n+    JVMFlag::printError(verbose,\n+                        \"MaxTenuringThreshold (%u) must be \"\n+                        \"greater than or equal to InitialTenuringThreshold (%u)\\n\",\n+                        value, InitialTenuringThreshold);\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.cpp","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -34,3 +34,0 @@\n-#if INCLUDE_PARALLELGC\n-#include \"gc\/parallel\/jvmFlagConstraintsParallel.hpp\"\n-#endif\n@@ -77,2 +74,1 @@\n-  G1GC_ONLY(G1_GC_CONSTRAINTS(f))              \\\n-  PARALLELGC_ONLY(PARALLEL_GC_CONSTRAINTS(f))\n+  G1GC_ONLY(G1_GC_CONSTRAINTS(f))\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}