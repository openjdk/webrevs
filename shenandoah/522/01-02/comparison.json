{"files":[{"patch":"@@ -115,7 +115,10 @@\n-  ShenandoahOldHeuristics* old_heuristics = heap->old_generation()->heuristics();\n-\n-  \/\/ Checks that an old cycle has run for at least ShenandoahMinimumOldMarkTimeMs before allowing a young cycle.\n-  if (ShenandoahMinimumOldMarkTimeMs > 0 && heap->is_concurrent_old_mark_in_progress()) {\n-    size_t old_mark_elapsed = size_t(old_heuristics->elapsed_cycle_time() * 1000);\n-    if (old_mark_elapsed < ShenandoahMinimumOldMarkTimeMs) {\n-      return false;\n+  ShenandoahOldGeneration* old_generation = heap->old_generation();\n+  ShenandoahOldHeuristics* old_heuristics = old_generation->heuristics();\n+\n+  \/\/ Checks that an old cycle has run for at least ShenandoahMinimumOldTimeMs before allowing a young cycle.\n+  if (ShenandoahMinimumOldTimeMs > 0) {\n+    if (old_generation->is_preparing_for_mark() || old_generation->is_concurrent_mark_in_progress()) {\n+      size_t old_time_elapsed = size_t(old_heuristics->elapsed_cycle_time() * 1000);\n+      if (old_time_elapsed < ShenandoahMinimumOldTimeMs) {\n+        return false;\n+      }\n@@ -136,1 +139,1 @@\n-  size_t promo_potential = heap->old_generation()->get_promotion_potential();\n+  size_t promo_potential = old_generation->get_promotion_potential();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -80,1 +80,2 @@\n-      bool needs_reset = _generation->contains(region) || !region->is_affiliated();\n+      auto const affiliation = region->affiliation();\n+      bool needs_reset = affiliation == FREE || _generation->contains(affiliation);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/shenandoah\/shenandoahAffiliation.hpp\"\n@@ -178,0 +179,2 @@\n+  virtual bool contains(ShenandoahAffiliation affiliation) const = 0;\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -84,0 +84,4 @@\n+bool ShenandoahGlobalGeneration::contains(ShenandoahAffiliation affiliation) const {\n+  return true;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGlobalGeneration.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+  bool contains(ShenandoahAffiliation affiliation) const override;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGlobalGeneration.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -603,0 +603,1 @@\n+  \/\/ Returns true if the given oop belongs to a generation that is actively being collected.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -372,1 +372,1 @@\n-    \/\/ Free regions are in Old, Young, Global\n+    \/\/ Free regions are in old, young, and global collections\n@@ -375,1 +375,1 @@\n-    \/\/ Young regions are in young_generation and global_generation, not in old_generation\n+    \/\/ Young regions are in young and global collections, not in old collections\n@@ -378,2 +378,2 @@\n-    \/\/ Old regions are in old_generation and no others\n-    return gen->is_old();\n+    \/\/ Old regions are in old and global collections, not in young collections\n+    return !gen->is_young();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -318,0 +318,3 @@\n+bool ShenandoahOldGeneration::contains(ShenandoahAffiliation affiliation) const {\n+  return affiliation == OLD_GENERATION;\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -200,0 +200,1 @@\n+  bool contains(ShenandoahAffiliation affiliation) const override;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,0 +51,4 @@\n+bool ShenandoahYoungGeneration::contains(ShenandoahAffiliation affiliation) const {\n+  return affiliation == YOUNG_GENERATION;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahYoungGeneration.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+  bool contains(ShenandoahAffiliation affiliation) const override;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahYoungGeneration.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -560,2 +560,2 @@\n-  product(uintx, ShenandoahMinimumOldMarkTimeMs, 100, EXPERIMENTAL,         \\\n-         \"Minimum amount of time in milliseconds to run old marking \"       \\\n+  product(uintx, ShenandoahMinimumOldTimeMs, 100, EXPERIMENTAL,             \\\n+         \"Minimum amount of time in milliseconds to run old collections \"   \\\n@@ -565,1 +565,1 @@\n-         \"marking.\")                                                        \\\n+         \"collections.\")                                                    \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -101,2 +101,0 @@\n-gc\/shenandoah\/TestReferenceRefersToShenandoah.java#generational 8342734 generic-all\n-gc\/shenandoah\/TestReferenceRefersToShenandoah.java#generational-100 8342734 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @requires vm.gc.Shenandoah\n+ * @requires vm.gc.Shenandoah & vm.opt.ShenandoahGCMode != \"generational\"\n@@ -47,1 +47,1 @@\n- * @requires vm.gc.Shenandoah\n+ * @requires vm.gc.Shenandoah & vm.opt.ShenandoahGCMode != \"generational\"\n@@ -59,1 +59,1 @@\n- * @requires vm.gc.Shenandoah\n+ * @requires vm.gc.Shenandoah & vm.opt.ShenandoahGCMode != \"generational\"\n@@ -71,1 +71,1 @@\n- * @requires vm.gc.Shenandoah\n+ * @requires vm.gc.Shenandoah & vm.opt.ShenandoahGCMode != \"generational\"\n@@ -83,1 +83,1 @@\n- * @requires vm.gc.Shenandoah\n+ * @requires vm.gc.Shenandoah & vm.opt.ShenandoahGCMode != \"generational\"\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/mxbeans\/TestChurnNotifications.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}