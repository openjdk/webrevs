{"files":[{"patch":"@@ -89,1 +89,1 @@\n-    log_debug(gc)(\"Remaining \" UINT32_FORMAT \" old regions are being coalesced and filled\", unprocessed_old_collection_candidates());\n+    log_info(gc, ergo)(\"Remaining \" UINT32_FORMAT \" old regions are being coalesced and filled\", unprocessed_old_collection_candidates());\n@@ -212,4 +212,2 @@\n-    log_debug(gc)(\"Old-gen piggyback evac (\" UINT32_FORMAT \" regions, evacuating \" SIZE_FORMAT \"%s, reclaiming: \" SIZE_FORMAT \"%s)\",\n-                  included_old_regions,\n-                  byte_size_in_proper_unit(evacuated_old_bytes), proper_unit_for_byte_size(evacuated_old_bytes),\n-                  byte_size_in_proper_unit(collected_old_bytes), proper_unit_for_byte_size(collected_old_bytes));\n+    log_info(gc, ergo)(\"Old-gen piggyback evac (\" UINT32_FORMAT \" regions, evacuating \" PROPERFMT \", reclaiming: \" PROPERFMT \")\",\n+                  included_old_regions, PROPERFMTARGS(evacuated_old_bytes), PROPERFMTARGS(collected_old_bytes));\n@@ -231,1 +229,1 @@\n-      log_debug(gc)(\"All candidate regions \" UINT32_FORMAT \" are pinned\", unprocessed_old_collection_candidates());\n+      log_info(gc, ergo)(\"All candidate regions \" UINT32_FORMAT \" are pinned\", unprocessed_old_collection_candidates());\n@@ -234,8 +232,8 @@\n-      log_debug(gc)(\"No regions selected for mixed collection. \"\n-                    \"Old evacuation budget: \" PROPERFMT \", Remaining evacuation budget: \" PROPERFMT\n-                    \", Lost capacity: \" PROPERFMT\n-                    \", Next candidate: \" UINT32_FORMAT \", Last candidate: \" UINT32_FORMAT,\n-                    PROPERFMTARGS(old_evacuation_reserve),\n-                    PROPERFMTARGS(remaining_old_evacuation_budget),\n-                    PROPERFMTARGS(lost_evacuation_capacity),\n-                    _next_old_collection_candidate, _last_old_collection_candidate);\n+      log_info(gc, ergo)(\"No regions selected for mixed collection. \"\n+                         \"Old evacuation budget: \" PROPERFMT \", Remaining evacuation budget: \" PROPERFMT\n+                         \", Lost capacity: \" PROPERFMT\n+                         \", Next candidate: \" UINT32_FORMAT \", Last candidate: \" UINT32_FORMAT,\n+                         PROPERFMTARGS(old_evacuation_reserve),\n+                         PROPERFMTARGS(remaining_old_evacuation_budget),\n+                         PROPERFMTARGS(lost_evacuation_capacity),\n+                         _next_old_collection_candidate, _last_old_collection_candidate);\n@@ -471,6 +469,6 @@\n-  log_debug(gc)(\"Old-Gen Collectable Garbage: \" PROPERFMT \" consolidated with free: \" PROPERFMT \", over \" SIZE_FORMAT \" regions\",\n-                PROPERFMTARGS(collectable_garbage), PROPERFMTARGS(unfragmented), old_candidates);\n-  log_debug(gc)(\"Old-Gen Immediate Garbage: \" PROPERFMT \" over \" SIZE_FORMAT \" regions\",\n-               PROPERFMTARGS(immediate_garbage), immediate_regions);\n-  log_debug(gc)(\"Old regions selected for defragmentation: \" SIZE_FORMAT, defrag_count);\n-  log_debug(gc)(\"Old regions not selected: \" SIZE_FORMAT, total_uncollected_old_regions);\n+  log_info(gc, ergo)(\"Old-Gen Collectable Garbage: \" PROPERFMT \" consolidated with free: \" PROPERFMT \", over \" SIZE_FORMAT \" regions\",\n+                     PROPERFMTARGS(collectable_garbage), PROPERFMTARGS(unfragmented), old_candidates);\n+  log_info(gc, ergo)(\"Old-Gen Immediate Garbage: \" PROPERFMT \" over \" SIZE_FORMAT \" regions\",\n+                     PROPERFMTARGS(immediate_garbage), immediate_regions);\n+  log_info(gc, ergo)(\"Old regions selected for defragmentation: \" SIZE_FORMAT, defrag_count);\n+  log_info(gc, ergo)(\"Old regions not selected: \" SIZE_FORMAT, total_uncollected_old_regions);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":18,"deletions":20,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -1610,2 +1610,2 @@\n-      log_debug(gc)(\"Transfer \" SIZE_FORMAT \" region(s) from %s to %s, yielding increased size: \" PROPERFMT,\n-                   region_count, young_gen->name(), old_gen->name(), PROPERFMTARGS(new_old_capacity));\n+      log_info(gc, ergo)(\"Transfer \" SIZE_FORMAT \" region(s) from %s to %s, yielding increased size: \" PROPERFMT,\n+                         region_count, young_gen->name(), old_gen->name(), PROPERFMTARGS(new_old_capacity));\n@@ -1614,2 +1614,2 @@\n-      log_debug(gc)(\"Transfer \" SIZE_FORMAT \" region(s) from %s to %s, yielding increased size: \" PROPERFMT,\n-                   region_count, old_gen->name(), young_gen->name(), PROPERFMTARGS(new_young_capacity));\n+      log_info(gc, ergo)(\"Transfer \" SIZE_FORMAT \" region(s) from %s to %s, yielding increased size: \" PROPERFMT,\n+                         region_count, old_gen->name(), young_gen->name(), PROPERFMTARGS(new_young_capacity));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -141,2 +141,2 @@\n-  log_debug(gc)(\"Transfer \" SIZE_FORMAT \" region(s) from %s to %s, yielding increased size: \" PROPERFMT,\n-          regions, src->name(), dst->name(), PROPERFMTARGS(new_size));\n+  log_info(gc, ergo)(\"Transfer \" SIZE_FORMAT \" region(s) from %s to %s, yielding increased size: \" PROPERFMT,\n+                     regions, src->name(), dst->name(), PROPERFMTARGS(new_size));\n@@ -193,2 +193,2 @@\n-  log_debug(gc)(\"Forcing transfer of \" SIZE_FORMAT \" region(s) from %s to %s, yielding increased size: \" PROPERFMT,\n-          regions, young_gen->name(), old_gen->name(), PROPERFMTARGS(new_size));\n+  log_info(gc, ergo)(\"Forcing transfer of \" SIZE_FORMAT \" region(s) from %s to %s, yielding increased size: \" PROPERFMT,\n+                     regions, young_gen->name(), old_gen->name(), PROPERFMTARGS(new_size));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}