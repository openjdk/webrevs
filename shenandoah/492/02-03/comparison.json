{"files":[{"patch":"@@ -553,1 +553,1 @@\n-void ShenandoahOldHeuristics::trigger_collection_if_fragmented(size_t first_old_region, size_t last_old_region,\n+void ShenandoahOldHeuristics::set_trigger_if_old_is_fragmented(size_t first_old_region, size_t last_old_region,\n@@ -576,15 +576,20 @@\n-    double old_span_percent_squared = old_span_percent * old_span_percent;\n-\n-    \/\/ Squaring old_span_percent in the denominator below allows more aggressive triggering when we are\n-    \/\/ above desired maximum span and less aggressive triggering when we are far below the desired\n-    \/\/ maximum span.\n-    if ((old_span_percent >= 0.50) && (old_density \/ old_span_percent_squared < 0.75)) {\n-      \/\/ We trigger old defragmentation, for example, if:\n-      \/\/  old_span_percent is 110% and old_density is below 90.8%, or\n-      \/\/  old_span_percent is 100% and old_density is below 75.0%, or\n-      \/\/  old_span_percent is  90% and old_density is below 60.8%, or\n-      \/\/  old_span_percent is  80% and old_density is below 48.0%, or\n-      \/\/  old_span_percent is  70% and old_density is below 36.8%, or\n-      \/\/  old_span_percent is  60% and old_density is below 27.0%, or\n-      \/\/  old_span_percent is  50% and old_density is below 18.8%.\n-      trigger_old_is_fragmented(old_density, first_old_region, last_old_region);\n+    if (old_span_percent > 0.50) {\n+      \/\/ Squaring old_span_percent in the denominator below allows more aggressive triggering when we are\n+      \/\/ above desired maximum span and less aggressive triggering when we are far below the desired maximum span.\n+      double old_span_percent_squared = old_span_percent * old_span_percent;\n+      if (old_density \/ old_span_percent_squared < 0.75) {\n+        \/\/ We trigger old defragmentation, for example, if:\n+        \/\/  old_span_percent is 110% and old_density is below 90.8%, or\n+        \/\/  old_span_percent is 100% and old_density is below 75.0%, or\n+        \/\/  old_span_percent is  90% and old_density is below 60.8%, or\n+        \/\/  old_span_percent is  80% and old_density is below 48.0%, or\n+        \/\/  old_span_percent is  70% and old_density is below 36.8%, or\n+        \/\/  old_span_percent is  60% and old_density is below 27.0%, or\n+        \/\/  old_span_percent is  50% and old_density is below 18.8%.\n+\n+        \/\/ Set the fragmentation trigger and related attributes\n+        _fragmentation_trigger = true;\n+        _fragmentation_density = old_density;\n+        _fragmentation_first_old_region = first_old_region;\n+        _fragmentation_last_old_region = last_old_region;\n+      }\n@@ -595,1 +600,1 @@\n-void ShenandoahOldHeuristics::trigger_collection_if_overgrown() {\n+void ShenandoahOldHeuristics::set_trigger_if_old_is_overgrown() {\n@@ -603,1 +608,1 @@\n-    trigger_old_has_grown();\n+    _growth_trigger = true;\n@@ -607,4 +612,4 @@\n-void ShenandoahOldHeuristics::trigger_maybe(size_t first_old_region, size_t last_old_region,\n-                                            size_t old_region_count, size_t num_regions) {\n-  trigger_collection_if_fragmented(first_old_region, last_old_region, old_region_count, num_regions);\n-  trigger_collection_if_overgrown();\n+void ShenandoahOldHeuristics::evaluate_triggers(size_t first_old_region, size_t last_old_region,\n+                                                size_t old_region_count, size_t num_regions) {\n+  set_trigger_if_old_is_fragmented(first_old_region, last_old_region, old_region_count, num_regions);\n+  set_trigger_if_old_is_overgrown();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":27,"deletions":22,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -116,7 +116,3 @@\n-  inline void trigger_old_is_fragmented(double density, size_t first_old_index, size_t last_old_index) {\n-    _fragmentation_trigger = true;\n-    _fragmentation_density = density;\n-    _fragmentation_first_old_region = first_old_index;\n-    _fragmentation_last_old_region = last_old_index;\n-  }\n-  inline void trigger_old_has_grown() { _growth_trigger = true; }\n+  \/\/ Set the fragmentation trigger if old-gen memory has become fragmented.\n+  void set_trigger_if_old_is_fragmented(size_t first_old_region, size_t last_old_region,\n+                                        size_t old_region_count, size_t num_regions);\n@@ -124,2 +120,2 @@\n-  void trigger_collection_if_fragmented(size_t first_old_region, size_t last_old_region, size_t old_region_count, size_t num_regions);\n-  void trigger_collection_if_overgrown();\n+  \/\/ Set the overgrowth trigger if old-gen memory has grown beyond a particular threshold.\n+  void set_trigger_if_old_is_overgrown();\n@@ -186,1 +182,2 @@\n-  void trigger_maybe(size_t first_old_region, size_t last_old_region, size_t old_region_count, size_t num_regions);\n+  \/\/ Check whether conditions merit the start of old GC.  Set appropriate trigger if so.\n+  void evaluate_triggers(size_t first_old_region, size_t last_old_region, size_t old_region_count, size_t num_regions);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2480,1 +2480,1 @@\n-    old_gen->heuristics()->trigger_maybe(first_old_region, last_old_region, old_region_count, num_regions());\n+    old_gen->heuristics()->evaluate_triggers(first_old_region, last_old_region, old_region_count, num_regions());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}