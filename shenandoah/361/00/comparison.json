{"files":[{"patch":"@@ -3129,1 +3129,1 @@\n-  if (mode()->is_generational()) {\n+  if (mode()->is_generational() && (ShenandoahGenerationalHumongousReserve > 0)) {\n@@ -3134,5 +3134,8 @@\n-    \/\/   if old_gen spans more than 100% and density < 87.5%, trigger old-defrag\n-    \/\/   else if old_gen spans more than 87.5% and density < 75%, trigger old-defrag\n-    \/\/   else if old_gen spans more than 75% and density < 62.5%, trigger old-defrag\n-    \/\/   else if old_gen spans more than 62.5% and density < 50%, trigger old-defrag\n-    \/\/   else if old_gen spans more than 50% and density < 37.5%, trigger old-defrag\n+    \/\/   if old_gen spans more than 100% and density < 75%, trigger old-defrag\n+    \/\/   else if old_gen spans more than 87.5% and density < 62.5%, trigger old-defrag\n+    \/\/   else if old_gen spans more than 75% and density < 50%, trigger old-defrag\n+    \/\/   else if old_gen spans more than 62.5% and density < 37.5%, trigger old-defrag\n+    \/\/   else if old_gen spans more than 50% and density < 25%, trigger old-defrag\n+    \/\/\n+    \/\/ A previous implementation was more aggressive in triggering, resulting in degraded throughput when\n+    \/\/ humongous allocation was not required.\n@@ -3154,2 +3157,1 @@\n-      eighths--;\n-      double density_threshold = eighths \/ 8.0;\n+      double density_threshold = (eighths - 2) \/ 8.0;\n@@ -3160,0 +3162,1 @@\n+      eighths--;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"}]}