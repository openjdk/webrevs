{"files":[{"patch":"@@ -36,1 +36,2 @@\n-    _use_age_table(ShenandoahGenerationalCensusAtEvac || !ShenandoahGenerationalAdaptiveTenuring) {\n+    _use_age_table(ShenandoahGenerationalCensusAtEvac || !ShenandoahGenerationalAdaptiveTenuring),\n+    _age_table(nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahEvacTracker.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1846,15 +1846,0 @@\n-    size_t retired_old = 0;\n-    size_t retired_old_humongous = 0;\n-    size_t retired_young = 0;\n-    size_t retired_young_humongous = 0;\n-    size_t region_size_bytes = ShenandoahHeapRegion::region_size_bytes();\n-    size_t retired_young_waste = 0;\n-    size_t retired_old_waste = 0;\n-    size_t consumed_collector = 0;\n-    size_t consumed_old_collector = 0;\n-    size_t consumed_mutator = 0;\n-    size_t available_old = 0;\n-    size_t available_young = 0;\n-    size_t available_mutator = 0;\n-    size_t available_collector = 0;\n-    size_t available_old_collector = 0;\n@@ -1891,3 +1876,1 @@\n-        available_mutator += capacity;\n-        consumed_mutator += region_size_bytes - capacity;\n-        buffer[idx] = (capacity == region_size_bytes)? 'M': 'm';\n+        buffer[idx] = (capacity == ShenandoahHeapRegion::region_size_bytes()) ? 'M' : 'm';\n@@ -1897,3 +1880,1 @@\n-        available_collector += capacity;\n-        consumed_collector += region_size_bytes - capacity;\n-        buffer[idx] = (capacity == region_size_bytes)? 'C': 'c';\n+        buffer[idx] = (capacity == ShenandoahHeapRegion::region_size_bytes()) ? 'C' : 'c';\n@@ -1902,3 +1883,1 @@\n-        available_old_collector += capacity;\n-        consumed_old_collector += region_size_bytes - capacity;\n-        buffer[idx] = (capacity == region_size_bytes)? 'O': 'o';\n+        buffer[idx] = (capacity == ShenandoahHeapRegion::region_size_bytes()) ? 'O' : 'o';\n@@ -1908,1 +1887,0 @@\n-          retired_old_humongous += region_size_bytes;\n@@ -1911,1 +1889,0 @@\n-          retired_young_humongous += region_size_bytes;\n@@ -1916,2 +1893,0 @@\n-          retired_old_waste += alloc_capacity(r);\n-          retired_old += region_size_bytes;\n@@ -1920,2 +1895,0 @@\n-          retired_young_waste += alloc_capacity(r);\n-          retired_young += region_size_bytes;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":3,"deletions":30,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -380,1 +380,1 @@\n-  size_t old_evacuated_committed = (size_t) (ShenandoahOldEvacWaste * old_evacuated);\n+  size_t old_evacuated_committed = (size_t) (ShenandoahOldEvacWaste * double(old_evacuated));\n@@ -397,1 +397,1 @@\n-  size_t young_advance_promoted_reserve_used = (size_t) (ShenandoahPromoEvacWaste * young_advance_promoted);\n+  size_t young_advance_promoted_reserve_used = (size_t) (ShenandoahPromoEvacWaste * double(young_advance_promoted));\n@@ -400,1 +400,1 @@\n-  size_t young_evacuated_reserve_used = (size_t) (ShenandoahEvacWaste * young_evacuated);\n+  size_t young_evacuated_reserve_used = (size_t) (ShenandoahEvacWaste * double(young_evacuated));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -643,3 +643,3 @@\n-  const size_t bound_on_old_reserve = old_available + old_xfer_limit + young_reserve;\n-  const size_t max_old_reserve = (ShenandoahOldEvacRatioPercent == 100)?\n-                                 bound_on_old_reserve: MIN2((young_reserve * ShenandoahOldEvacRatioPercent) \/ (100 - ShenandoahOldEvacRatioPercent),\n+  const double bound_on_old_reserve = old_available + old_xfer_limit + young_reserve;\n+  const double max_old_reserve = (ShenandoahOldEvacRatioPercent == 100)?\n+                                 bound_on_old_reserve: MIN2(double(young_reserve * ShenandoahOldEvacRatioPercent) \/ double(100 - ShenandoahOldEvacRatioPercent),\n@@ -651,1 +651,1 @@\n-  size_t reserve_for_mixed = 0;\n+  double reserve_for_mixed = 0;\n@@ -655,2 +655,1 @@\n-    const size_t max_evac_need = (size_t)\n-            (old_generation()->unprocessed_collection_candidates_live_memory() * ShenandoahOldEvacWaste);\n+    const double max_evac_need = (double(old_generation()->unprocessed_collection_candidates_live_memory()) * ShenandoahOldEvacWaste);\n@@ -659,2 +658,1 @@\n-    const size_t old_fragmented_available =\n-            old_available - old_generation()->free_unaffiliated_regions() * region_size_bytes;\n+    const double old_fragmented_available = double(old_available - old_generation()->free_unaffiliated_regions() * region_size_bytes);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -360,1 +360,1 @@\n-  inline HeapWord* allocate(size_t word_size, ShenandoahAllocRequest req);\n+  inline HeapWord* allocate(size_t word_size, const ShenandoahAllocRequest& req);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-HeapWord* ShenandoahHeapRegion::allocate(size_t size, ShenandoahAllocRequest req) {\n+HeapWord* ShenandoahHeapRegion::allocate(size_t size, const ShenandoahAllocRequest& req) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,0 @@\n-  uint _count = 0;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegionCounters.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-  uint8_t offset_in_card = address - card_start_address;\n+  uint8_t offset_in_card = checked_cast<uint8_t>(pointer_delta(address, card_start_address));\n@@ -181,1 +181,1 @@\n-      uint8_t coalesced_offset = static_cast<uint8_t>(address - card_start_address);\n+      uint8_t coalesced_offset = checked_cast<uint8_t>(pointer_delta(address, card_start_address));\n@@ -191,1 +191,1 @@\n-    uint8_t coalesced_offset = static_cast<uint8_t>(address - card_start_address);\n+    uint8_t coalesced_offset = checked_cast<uint8_t>(pointer_delta(address, card_start_address));\n@@ -203,1 +203,1 @@\n-    uint8_t follow_offset = static_cast<uint8_t>((address + length_in_words) - _rs->addr_for_card_index(card_at_end));\n+    uint8_t follow_offset = checked_cast<uint8_t>((address + length_in_words) - _rs->addr_for_card_index(card_at_end));\n@@ -889,1 +889,0 @@\n-    size_t previous_group_entries = (i == 1)? _group_entries[0]: (_group_entries[i-1] - _group_entries[i-2]);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -360,2 +360,2 @@\n-  static const uint16_t ObjectStartsInCardRegion = 0x80;\n-  static const uint16_t FirstStartBits           = 0x7f;\n+  static const uint8_t ObjectStartsInCardRegion = 0x80;\n+  static const uint8_t FirstStartBits           = 0x7f;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}