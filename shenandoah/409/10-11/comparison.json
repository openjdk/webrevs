{"files":[{"patch":"@@ -655,1 +655,1 @@\n-    const size_t current_usage = _old_generation->used();\n+    const size_t current_usage = _old_generation->used() + _old_generation->humongous_waste();\n@@ -678,0 +678,1 @@\n+      \/\/ Mixed evacuations have decreased current_usage such that old-growth trigger is no longer relevant.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -228,4 +228,10 @@\n-  _live_bytes_after_last_mark = bytes;\n-  _growth_before_compaction \/= 2;\n-  if (_growth_before_compaction < _min_growth_before_compaction) {\n-    _growth_before_compaction = _min_growth_before_compaction;\n+  if (bytes == 0) {\n+    \/\/ Restart search for best old-gen size to the initial state\n+    _live_bytes_after_last_mark = ShenandoahHeap::heap()->capacity() * INITIAL_LIVE_FRACTION \/ FRACTIONAL_DENOMINATOR;\n+    _growth_before_compaction = INITIAL_GROWTH_BEFORE_COMPACTION;\n+  } else {\n+    _live_bytes_after_last_mark = bytes;\n+    _growth_before_compaction \/= 2;\n+    if (_growth_before_compaction < _min_growth_before_compaction) {\n+      _growth_before_compaction = _min_growth_before_compaction;\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"}]}