{"files":[{"patch":"@@ -302,1 +302,3 @@\n-      return min_young_size();\n+      \/\/ Officially, there is no limit on size of OLD, though the practical limit is heap size - min_young_size().\n+      \/\/ The pracital limit is enforced when we try to shrink young in order to expand old.\n+      return ShenandoahHeap::heap()->max_capacity();\n@@ -314,1 +316,3 @@\n-      return ShenandoahHeap::heap()->max_capacity() - max_young_size();\n+      \/\/ Officially, there is no limit on size of OLD, though the practical limit is heap size - max_young_size().\n+      \/\/ The pracital limit is enforced when we try to expand young in order to shrink old.\n+      return 0;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}