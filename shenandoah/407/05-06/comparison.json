{"files":[{"patch":"@@ -54,1 +54,0 @@\n-  set_thread();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,13 +31,0 @@\n-Thread* ShenandoahController::_thread = nullptr;\n-\n-Thread* ShenandoahController::thread() {\n-  assert(_thread != nullptr, \"None started\");\n-  return _thread;\n-}\n-\n-void ShenandoahController::set_thread() {\n-  assert(_thread == nullptr, \"Only once!\");\n-  _thread = Thread::current();\n-  assert(_thread->is_ConcurrentGC_thread(), \"Error\");\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahController.cpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-  static Thread* _thread;\n@@ -58,2 +57,0 @@\n-  static void set_thread();\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahController.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-  set_thread();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalControlThread.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -376,3 +376,1 @@\n-  assert(gen == (ShenandoahGeneration*)old_generation() ||\n-         gen == (ShenandoahGeneration*)young_generation() ||\n-         gen == (ShenandoahGeneration*)global_generation(),\n+  assert(gen == (ShenandoahGeneration*)old_generation() || gen == (ShenandoahGeneration*)young_generation() || gen == (ShenandoahGeneration*)global_generation(),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}