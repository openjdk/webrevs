{"files":[{"patch":"@@ -173,0 +173,4 @@\n+\/\/ A stronger version of the above that checks that we are at a safepoint if the vm thread\n+#define shenandoah_assert_control_or_vm_thread_at_safepoint() \\\n+                    assert(Thread::current() == ShenandoahHeap::heap()->control_thread() || (SafepointSynchronize::is_at_safepoint() && Thread::current()->is_VM_thread()), \\\n+                    \"Expected control thread, or vm thread at a safepoint\") \n@@ -239,0 +243,1 @@\n+#define shenandoah_assert_control_or_vm_thread_at_safepoint()\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1577,0 +1577,1 @@\n+  shenandoah_assert_control_or_vm_thread_at_safepoint();\n@@ -1578,3 +1579,0 @@\n-  assert(Thread::current() == ShenandoahController::thread() ||\n-         (SafepointSynchronize::is_at_safepoint() && Thread::current()->is_VM_thread()),\n-         \"Unexpected thread or condition\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}