{"files":[{"patch":"@@ -327,4 +327,16 @@\n-    if (region->is_trash()) {\n-      \/\/ Count humongous objects made into trash here.\n-      immediate_regions++;\n-      immediate_garbage += garbage;\n+    if (region->is_regular() || region->is_regular_pinned()) {\n+        \/\/ Only place regular or pinned regions with live data into the candidate set.\n+        \/\/ Pinned regions cannot be evacuated, but we are not actually choosing candidates\n+        \/\/ for the collection set here. That happens later during the next young GC cycle,\n+        \/\/ by which time, the pinned region may no longer be pinned.\n+      if (!region->has_live()) {\n+        assert(!region->is_pinned(), \"Pinned region should have live (pinned) objects.\");\n+        region->make_trash_immediate();\n+        immediate_regions++;\n+        immediate_garbage += garbage;\n+      } else {\n+        region->begin_preemptible_coalesce_and_fill();\n+        candidates[cand_idx]._region = region;\n+        candidates[cand_idx]._u._live_data = live_bytes;\n+        cand_idx++;\n+      }\n@@ -346,16 +358,4 @@\n-    } else if (region->is_regular() || region->is_pinned()) {\n-      if (!region->has_live()) {\n-        assert(!region->is_pinned(), \"Pinned region should have live (pinned) objects.\");\n-        region->make_trash_immediate();\n-        immediate_regions++;\n-        immediate_garbage += garbage;\n-      } else {\n-        \/\/ Only place regular or pinned regions with live data into the candidate set.\n-        \/\/ Pinned regions cannot be evacuated, but we are not actually choosing candidates\n-        \/\/ for the collection set here. That happens later during the next young GC cycle,\n-        \/\/ by which time, the pinned region may no longer be pinned.\n-        region->begin_preemptible_coalesce_and_fill();\n-        candidates[cand_idx]._region = region;\n-        candidates[cand_idx]._u._live_data = live_bytes;\n-        cand_idx++;\n-      }\n+    } else if (region->is_trash()) {\n+      \/\/ Count humongous objects made into trash here.\n+      immediate_regions++;\n+      immediate_garbage += garbage;\n@@ -411,0 +411,2 @@\n+  \/\/ defrag_count represents regions that are placed into the old collection set in order to defragment the memory\n+  \/\/ that we try to \"reserve\" for humongous allocations.\n@@ -443,1 +445,1 @@\n-      assert((r->is_regular() || r->is_pinned()) && !r->is_humongous(), \"Region \" SIZE_FORMAT \" has wrong state for collection: %s\",\n+      assert(r->is_regular() || r->is_regular_pinned(), \"Region \" SIZE_FORMAT \" has wrong state for collection: %s\",\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":23,"deletions":21,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -205,0 +205,2 @@\n+  bool is_regular_pinned()         const { return _state == _pinned; }\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}