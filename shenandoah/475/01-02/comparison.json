{"files":[{"patch":"@@ -97,1 +97,0 @@\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_aarch64.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -95,1 +95,0 @@\n-\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_x86.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -137,3 +137,0 @@\n-      \/\/ retire_plab may register the remnant filler object with the remembered set scanner without a lock.\n-      \/\/ This is safe because it is assured that each PLAB is a whole-number multiple of card-mark memory size and each\n-      \/\/ PLAB is aligned with the start of each card's memory range.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -560,0 +560,1 @@\n+    \/\/ No lock is necessary because the PLAB memory is aligned on card boundaries.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}