{"files":[{"patch":"@@ -321,1 +321,1 @@\n-  \/\/ that checks that the *(ebp+frame::interpreter_frame_last_sp) == NULL.\n+  \/\/ that checks that the *(ebp+frame::interpreter_frame_last_sp) == nullptr.\n@@ -807,1 +807,1 @@\n-  \/\/ Filter: when offending in-memory value is NULL, the failure is definitely legitimate\n+  \/\/ Filter: when offending in-memory value is null, the failure is definitely legitimate\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -364,7 +364,0 @@\n-}\n-\n-void CardTable::clear(MemRegion mr) {\n-  for (int i = 0; i < _cur_covered_regions; i++) {\n-    MemRegion mri = mr.intersection(_covered[i]);\n-    if (!mri.is_empty()) clear_MemRegion(mri);\n-  }\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -85,4 +85,0 @@\n-void ShenandoahCardTable::clear() {\n-  CardTable::clear(_whole_heap);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCardTable.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,2 +69,0 @@\n-  void clear();\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCardTable.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}