{"files":[{"patch":"@@ -41,39 +41,0 @@\n-template<ShenandoahAffiliation AFFILIATION>\n-class ShenandoahIncludeRegionClosure : public ShenandoahHeapRegionClosure {\n-private:\n-  ShenandoahHeapRegionClosure* _closure;\n-\n-public:\n-  explicit ShenandoahIncludeRegionClosure(ShenandoahHeapRegionClosure* closure): _closure(closure) {}\n-\n-  void heap_region_do(ShenandoahHeapRegion* r) override {\n-    if (r->affiliation() == AFFILIATION) {\n-      _closure->heap_region_do(r);\n-    }\n-  }\n-\n-  bool is_thread_safe() override {\n-    return _closure->is_thread_safe();\n-  }\n-};\n-\n-template<ShenandoahAffiliation AFFILIATION>\n-class ShenandoahExcludeRegionClosure : public ShenandoahHeapRegionClosure {\n-private:\n-  ShenandoahHeapRegionClosure* _closure;\n-\n-public:\n-  explicit ShenandoahExcludeRegionClosure(ShenandoahHeapRegionClosure* closure): _closure(closure) {}\n-\n-  void heap_region_do(ShenandoahHeapRegion* r) override {\n-    if (r->affiliation() != AFFILIATION) {\n-      _closure->heap_region_do(r);\n-    }\n-  }\n-\n-  bool is_thread_safe() override {\n-    return _closure->is_thread_safe();\n-  }\n-};\n-\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp","additions":0,"deletions":39,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SRC_SHARE_GC_SHENANDOAH_SHENANDOAHHEAPREGIONCLOSURES_HPP\n+#define SRC_SHARE_GC_SHENANDOAH_SHENANDOAHHEAPREGIONCLOSURES_HPP\n+\n+\n+#include \"gc\/shenandoah\/shenandoahHeap.hpp\"\n+#include \"gc\/shenandoah\/shenandoahHeapRegion.inline.hpp\"\n+\n+template<ShenandoahAffiliation AFFILIATION>\n+class ShenandoahIncludeRegionClosure : public ShenandoahHeapRegionClosure {\n+private:\n+  ShenandoahHeapRegionClosure* _closure;\n+\n+public:\n+  explicit ShenandoahIncludeRegionClosure(ShenandoahHeapRegionClosure* closure): _closure(closure) {}\n+\n+  void heap_region_do(ShenandoahHeapRegion* r) override {\n+    if (r->affiliation() == AFFILIATION) {\n+      _closure->heap_region_do(r);\n+    }\n+  }\n+\n+  bool is_thread_safe() override {\n+    return _closure->is_thread_safe();\n+  }\n+};\n+\n+template<ShenandoahAffiliation AFFILIATION>\n+class ShenandoahExcludeRegionClosure : public ShenandoahHeapRegionClosure {\n+private:\n+  ShenandoahHeapRegionClosure* _closure;\n+\n+public:\n+  explicit ShenandoahExcludeRegionClosure(ShenandoahHeapRegionClosure* closure): _closure(closure) {}\n+\n+  void heap_region_do(ShenandoahHeapRegion* r) override {\n+    if (r->affiliation() != AFFILIATION) {\n+      _closure->heap_region_do(r);\n+    }\n+  }\n+\n+  bool is_thread_safe() override {\n+    return _closure->is_thread_safe();\n+  }\n+};\n+\n+#endif \/\/SRC_SHARE_GC_SHENANDOAH_SHENANDOAHHEAPREGIONCLOSURES_HPP\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegionClosures.hpp","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"gc\/shenandoah\/shenandoahHeapRegionClosures.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/shenandoah\/shenandoahHeapRegionClosures.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahYoungGeneration.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}