{"files":[{"patch":"@@ -374,1 +374,1 @@\n-              '${{ github.api_url }}\/repos\/${{ github.repository }}\/actions\/runs\/${{ github.run_id }}\/artifacts')\"\n+              '${{ github.api_url }}\/repos\/${{ github.repository }}\/actions\/runs\/${{ github.run_id }}\/artifacts?per_page=100')\"\n","filename":".github\/workflows\/main.yml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,0 +74,1 @@\n+      # Clang needs the lld linker to work correctly\n@@ -75,0 +76,1 @@\n+      UTIL_REQUIRE_PROGS(LLD, lld)\n","filename":"make\/autoconf\/flags-ldflags.m4","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -681,0 +681,3 @@\n+        AC_MSG_NOTICE([A full XCode is required to build the JDK (not only command line tools)])\n+        AC_MSG_NOTICE([If you have XCode installed, you might need to reset the Xcode active developer directory])\n+        AC_MSG_NOTICE([using 'sudo xcode-select -r'])\n","filename":"make\/autoconf\/toolchain.m4","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -112,0 +112,5 @@\n+          # 'ld -r' might invalidate the .llvm_addrsig section, and this will cause subsequent\n+          # calls to lld (with '-Wl,--icf=safe') to fail when linking with this library, so\n+          # remove that section.\n+\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_objcopy_remove_llvm_addrsig_section, \\\n+\t      $$($1_OBJCOPY) --remove-section=.llvm_addrsig $$($1_TARGET_RELOCATABLE))\n","filename":"make\/common\/native\/Link.gmk","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -60,1 +60,2 @@\n-    DISABLED_WARNINGS_gcc := undef unused-result format-nonliteral maybe-uninitialized, \\\n+    DISABLED_WARNINGS_gcc := undef unused-result format-nonliteral \\\n+        maybe-uninitialized zero-as-null-pointer-constant, \\\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -240,1 +240,0 @@\n-      DISABLED_WARNINGS_gcc_gtk2_interface.c := parentheses type-limits, \\\n@@ -255,1 +254,0 @@\n-      DISABLED_WARNINGS_clang_gtk2_interface.c := parentheses, \\\n@@ -265,2 +263,0 @@\n-      DISABLED_WARNINGS_clang_aix_gtk2_interface.c := parentheses \\\n-          logical-op-parentheses, \\\n","filename":"make\/modules\/java.desktop\/lib\/AwtLibraries.gmk","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -16187,0 +16187,13 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+\n+  format %{ \"b forward_exception_stub\" %}\n+  ins_encode %{\n+    __ far_jump(RuntimeAddress(StubRoutines::forward_exception_entry()));\n+  %}\n+  ins_pipe(pipe_class_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -298,1 +298,1 @@\n-    uint64_t or_bits_top = (0 << nbits) | or_bits_sub;\n+    uint64_t or_bits_top = (UCONST64(0) << nbits) | or_bits_sub;\n","filename":"src\/hotspot\/cpu\/aarch64\/immediate_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,1 +204,1 @@\n-    __ lea(rscratch1, ExternalAddress(slow_case_addr));\n+    __ lea(rscratch1, RuntimeAddress(slow_case_addr));\n","filename":"src\/hotspot\/cpu\/aarch64\/jniFastGetField_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1733,2 +1733,2 @@\n-  cmn(r_bitmap, (u1)1);\n-  br(EQ, L_huge);\n+  cmpw(r_array_length, (u1)(Klass::SECONDARY_SUPERS_TABLE_SIZE - 2));\n+  br(GT, L_huge);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1886,10 +1886,2 @@\n-    \/\/ We need an acquire here to ensure that any subsequent load of the\n-    \/\/ global SafepointSynchronize::_state flag is ordered after this load\n-    \/\/ of the thread-local polling word.  We don't want this poll to\n-    \/\/ return false (i.e. not safepointing) and a later poll of the global\n-    \/\/ SafepointSynchronize::_state spuriously to return true.\n-    \/\/\n-    \/\/ This is to avoid a race when we're in a native->Java transition\n-    \/\/ racing the code which wakes up from a safepoint.\n-\n-    __ safepoint_poll(safepoint_in_progress, true \/* at_return *\/, true \/* acquire *\/, false \/* in_nmethod *\/);\n+    \/\/ No need for acquire as Java threads always disarm themselves.\n+    __ safepoint_poll(safepoint_in_progress, true \/* at_return *\/, false \/* acquire *\/, false \/* in_nmethod *\/);\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1416,9 +1416,2 @@\n-    \/\/ We need an acquire here to ensure that any subsequent load of the\n-    \/\/ global SafepointSynchronize::_state flag is ordered after this load\n-    \/\/ of the thread-local polling word.  We don't want this poll to\n-    \/\/ return false (i.e. not safepointing) and a later poll of the global\n-    \/\/ SafepointSynchronize::_state spuriously to return true.\n-    \/\/\n-    \/\/ This is to avoid a race when we're in a native->Java transition\n-    \/\/ racing the code which wakes up from a safepoint.\n-    __ safepoint_poll(L, true \/* at_return *\/, true \/* acquire *\/, false \/* in_nmethod *\/);\n+    \/\/ No need for acquire as Java threads always disarm themselves.\n+    __ safepoint_poll(L, true \/* at_return *\/, false \/* acquire *\/, false \/* in_nmethod *\/);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -8956,0 +8956,14 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+\n+  format %{ \"b    forward_exception_stub\" %}\n+  ins_encode %{\n+    \/\/ OK to trash Rtemp, because Rtemp is used by stub\n+    __ jump(StubRoutines::forward_exception_entry(), relocInfo::runtime_call_type, Rtemp);\n+  %}\n+  ins_pipe(tail_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -14537,0 +14537,15 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+\n+  format %{ \"Jmp     forward_exception_stub\" %}\n+  ins_encode %{\n+    __ set_inst_mark();\n+    __ b64_patchable(StubRoutines::forward_exception_entry(), relocInfo::runtime_call_type);\n+    __ clear_inst_mark();\n+  %}\n+  ins_pipe(pipe_class_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1831,0 +1831,13 @@\n+#define INSN(NAME, op, width, umop, mop, mew, nf)                                               \\\n+  void NAME(VectorRegister Vd_or_Vs3, Register Rs1, VectorMask vm = unmasked) { \\\n+    patch_VLdSt(op, Vd_or_Vs3, width, Rs1, umop, vm, mop, mew, nf);                         \\\n+  }\n+\n+  \/\/ Vector Unit-Stride Segment Load Instructions\n+  INSN(vlseg3e8_v, 0b0000111, 0b000, 0b00000, 0b00, 0b0, g3);\n+\n+  \/\/ Vector Unit-Stride Segment Store Instructions\n+  INSN(vsseg4e8_v, 0b0100111, 0b000, 0b00000, 0b00, 0b0, g4);\n+\n+#undef INSN\n+\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -545,1 +545,1 @@\n-      assert(c->as_jobject() == 0, \"should be\");\n+      assert(c->as_jobject() == nullptr, \"should be\");\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1069,1 +1069,1 @@\n-const char *Runtime1::pd_name_for_address(address entry) { Unimplemented(); return 0; }\n+const char *Runtime1::pd_name_for_address(address entry) { Unimplemented(); }\n","filename":"src\/hotspot\/cpu\/riscv\/c1_Runtime1_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -272,1 +272,1 @@\n-  assert(_pc == pc_old || pc == pc_old || pc_old == 0, \"must be\");\n+  assert(_pc == pc_old || pc == pc_old || pc_old == nullptr, \"must be\");\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,6 +176,1 @@\n-    ExternalAddress target(slow_case_addr);\n-    __ relocate(target.rspec(), [&] {\n-      int32_t offset;\n-      __ la(t0, target.target(), offset);\n-      __ jalr(t0, offset);\n-    });\n+    __ rt_call(slow_case_addr);\n","filename":"src\/hotspot\/cpu\/riscv\/jniFastGetField_riscv.cpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -3976,2 +3976,2 @@\n-  addi(t0, r_bitmap, (u1)1);\n-  beqz(t0, L_bitmap_full);\n+  subw(t0, r_array_length, Klass::SECONDARY_SUPERS_TABLE_SIZE - 2);\n+  bgtz(t0, L_bitmap_full);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -688,1 +688,1 @@\n-  if ((dest == (address) this) || dest == 0) {\n+  if ((dest == (address) this) || dest == nullptr) {\n@@ -717,1 +717,1 @@\n-  if ((dest == (address) this) || dest == 0) {\n+  if ((dest == (address) this) || dest == nullptr) {\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -10620,0 +10620,16 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+\n+  ins_cost(BRANCH_COST);\n+\n+  format %{ \"j forward_exception_stub\\t#@ForwardException\" %}\n+\n+  ins_encode %{\n+    __ far_jump(RuntimeAddress(StubRoutines::forward_exception_entry()));\n+  %}\n+\n+  ins_pipe(pipe_class_call);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -5106,0 +5106,219 @@\n+  \/**\n+   * vector registers:\n+   *   input VectorRegister's:  intputV1-V3, for m2 they could be v2, v4, v6, for m1 they could be v1, v2, v3\n+   *   index VectorRegister's:  idxV1-V4, for m2 they could be v8, v10, v12, v14, for m1 they could be v4, v5, v6, v7\n+   *   output VectorRegister's: outputV1-V4, for m2 they could be v16, v18, v20, v22, for m1 they could be v8, v9, v10, v11\n+   *\n+   * NOTE: each field will occupy a vector register group\n+   *\/\n+  void base64_vector_encode_round(Register src, Register dst, Register codec,\n+                    Register size, Register stepSrc, Register stepDst,\n+                    VectorRegister inputV1, VectorRegister inputV2, VectorRegister inputV3,\n+                    VectorRegister idxV1, VectorRegister idxV2, VectorRegister idxV3, VectorRegister idxV4,\n+                    VectorRegister outputV1, VectorRegister outputV2, VectorRegister outputV3, VectorRegister outputV4,\n+                    Assembler::LMUL lmul) {\n+    \/\/ set vector register type\/len\n+    __ vsetvli(x0, size, Assembler::e8, lmul);\n+\n+    \/\/ segmented load src into v registers: mem(src) => vr(3)\n+    __ vlseg3e8_v(inputV1, src);\n+\n+    \/\/ src = src + register_group_len_bytes * 3\n+    __ add(src, src, stepSrc);\n+\n+    \/\/ encoding\n+    \/\/   1. compute index into lookup table: vr(3) => vr(4)\n+    __ vsrl_vi(idxV1, inputV1, 2);\n+\n+    __ vsrl_vi(idxV2, inputV2, 2);\n+    __ vsll_vi(inputV1, inputV1, 6);\n+    __ vor_vv(idxV2, idxV2, inputV1);\n+    __ vsrl_vi(idxV2, idxV2, 2);\n+\n+    __ vsrl_vi(idxV3, inputV3, 4);\n+    __ vsll_vi(inputV2, inputV2, 4);\n+    __ vor_vv(idxV3, inputV2, idxV3);\n+    __ vsrl_vi(idxV3, idxV3, 2);\n+\n+    __ vsll_vi(idxV4, inputV3, 2);\n+    __ vsrl_vi(idxV4, idxV4, 2);\n+\n+    \/\/   2. indexed load: vr(4) => vr(4)\n+    __ vluxei8_v(outputV1, codec, idxV1);\n+    __ vluxei8_v(outputV2, codec, idxV2);\n+    __ vluxei8_v(outputV3, codec, idxV3);\n+    __ vluxei8_v(outputV4, codec, idxV4);\n+\n+    \/\/ segmented store encoded data in v registers back to dst: vr(4) => mem(dst)\n+    __ vsseg4e8_v(outputV1, dst);\n+\n+    \/\/ dst = dst + register_group_len_bytes * 4\n+    __ add(dst, dst, stepDst);\n+  }\n+\n+  \/**\n+   *  void j.u.Base64.Encoder.encodeBlock(byte[] src, int sp, int sl, byte[] dst, int dp, boolean isURL)\n+   *\n+   *  Input arguments:\n+   *  c_rarg0   - src, source array\n+   *  c_rarg1   - sp, src start offset\n+   *  c_rarg2   - sl, src end offset\n+   *  c_rarg3   - dst, dest array\n+   *  c_rarg4   - dp, dst start offset\n+   *  c_rarg5   - isURL, Base64 or URL character set\n+   *\/\n+  address generate_base64_encodeBlock() {\n+    alignas(64) static const char toBase64[64] = {\n+      'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n+      'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n+      'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n+      'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n+      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '\/'\n+    };\n+\n+    alignas(64) static const char toBase64URL[64] = {\n+      'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n+      'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n+      'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n+      'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n+      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'\n+    };\n+\n+    __ align(CodeEntryAlignment);\n+    StubCodeMark mark(this, \"StubRoutines\", \"encodeBlock\");\n+    address start = __ pc();\n+    __ enter();\n+\n+    Register src    = c_rarg0;\n+    Register soff   = c_rarg1;\n+    Register send   = c_rarg2;\n+    Register dst    = c_rarg3;\n+    Register doff   = c_rarg4;\n+    Register isURL  = c_rarg5;\n+\n+    Register codec  = c_rarg6;\n+    Register length = c_rarg7; \/\/ total length of src data in bytes\n+\n+    Label ProcessData, Exit;\n+\n+    \/\/ length should be multiple of 3\n+    __ sub(length, send, soff);\n+    \/\/ real src\/dst to process data\n+    __ add(src, src, soff);\n+    __ add(dst, dst, doff);\n+\n+    \/\/ load the codec base address\n+    __ la(codec, ExternalAddress((address) toBase64));\n+    __ beqz(isURL, ProcessData);\n+    __ la(codec, ExternalAddress((address) toBase64URL));\n+    __ BIND(ProcessData);\n+\n+    \/\/ vector version\n+    if (UseRVV) {\n+      Label ProcessM2, ProcessM1, ProcessScalar;\n+\n+      Register size      = soff;\n+      Register stepSrcM1 = send;\n+      Register stepSrcM2 = doff;\n+      Register stepDst   = isURL;\n+\n+      __ mv(size, MaxVectorSize * 2);\n+      __ mv(stepSrcM1, MaxVectorSize * 3);\n+      __ slli(stepSrcM2, stepSrcM1, 1);\n+      __ mv(stepDst, MaxVectorSize * 2 * 4);\n+\n+      __ blt(length, stepSrcM2, ProcessM1);\n+\n+      __ BIND(ProcessM2);\n+      base64_vector_encode_round(src, dst, codec,\n+                    size, stepSrcM2, stepDst,\n+                    v2, v4, v6,         \/\/ inputs\n+                    v8, v10, v12, v14,  \/\/ indexes\n+                    v16, v18, v20, v22, \/\/ outputs\n+                    Assembler::m2);\n+\n+      __ sub(length, length, stepSrcM2);\n+      __ bge(length, stepSrcM2, ProcessM2);\n+\n+      __ BIND(ProcessM1);\n+      __ blt(length, stepSrcM1, ProcessScalar);\n+\n+      __ srli(size, size, 1);\n+      __ srli(stepDst, stepDst, 1);\n+      base64_vector_encode_round(src, dst, codec,\n+                    size, stepSrcM1, stepDst,\n+                    v1, v2, v3,         \/\/ inputs\n+                    v4, v5, v6, v7,     \/\/ indexes\n+                    v8, v9, v10, v11,   \/\/ outputs\n+                    Assembler::m1);\n+      __ sub(length, length, stepSrcM1);\n+\n+      __ BIND(ProcessScalar);\n+    }\n+\n+    \/\/ scalar version\n+    {\n+      Register byte1 = soff, byte0 = send, byte2 = doff;\n+      Register combined24Bits = isURL;\n+\n+      __ beqz(length, Exit);\n+\n+      Label ScalarLoop;\n+      __ BIND(ScalarLoop);\n+      {\n+        \/\/ plain:   [byte0[7:0] : byte1[7:0] : byte2[7:0]] =>\n+        \/\/ encoded: [byte0[7:2] : byte0[1:0]+byte1[7:4] : byte1[3:0]+byte2[7:6] : byte2[5:0]]\n+\n+        \/\/ load 3 bytes src data\n+        __ lbu(byte0, Address(src, 0));\n+        __ lbu(byte1, Address(src, 1));\n+        __ lbu(byte2, Address(src, 2));\n+        __ addi(src, src, 3);\n+\n+        \/\/ construct 24 bits from 3 bytes\n+        __ slliw(byte0, byte0, 16);\n+        __ slliw(byte1, byte1, 8);\n+        __ orr(combined24Bits, byte0, byte1);\n+        __ orr(combined24Bits, combined24Bits, byte2);\n+\n+        \/\/ get codec index and encode(ie. load from codec by index)\n+        __ slliw(byte0, combined24Bits, 8);\n+        __ srliw(byte0, byte0, 26);\n+        __ add(byte0, codec, byte0);\n+        __ lbu(byte0, byte0);\n+\n+        __ slliw(byte1, combined24Bits, 14);\n+        __ srliw(byte1, byte1, 26);\n+        __ add(byte1, codec, byte1);\n+        __ lbu(byte1, byte1);\n+\n+        __ slliw(byte2, combined24Bits, 20);\n+        __ srliw(byte2, byte2, 26);\n+        __ add(byte2, codec, byte2);\n+        __ lbu(byte2, byte2);\n+\n+        __ andi(combined24Bits, combined24Bits, 0x3f);\n+        __ add(combined24Bits, codec, combined24Bits);\n+        __ lbu(combined24Bits, combined24Bits);\n+\n+        \/\/ store 4 bytes encoded data\n+        __ sb(byte0, Address(dst, 0));\n+        __ sb(byte1, Address(dst, 1));\n+        __ sb(byte2, Address(dst, 2));\n+        __ sb(combined24Bits, Address(dst, 3));\n+\n+        __ sub(length, length, 3);\n+        __ addi(dst, dst, 4);\n+        \/\/ loop back\n+        __ bnez(length, ScalarLoop);\n+      }\n+    }\n+\n+    __ BIND(Exit);\n+\n+    __ leave();\n+    __ ret();\n+\n+    return (address) start;\n+  }\n+\n@@ -5999,0 +6218,4 @@\n+    if (UseBASE64Intrinsics) {\n+      StubRoutines::_base64_encodeBlock = generate_base64_encodeBlock();\n+    }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":223,"deletions":0,"binary":false,"changes":223,"status":"modified"},{"patch":"@@ -268,0 +268,5 @@\n+  \/\/ Base64\n+  if (FLAG_IS_DEFAULT(UseBASE64Intrinsics)) {\n+    FLAG_SET_DEFAULT(UseBASE64Intrinsics, true);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -9520,0 +9520,14 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp() %{\n+  match(ForwardException);\n+  ins_cost(CALL_COST);\n+  format %{ \"Jmp    forward_exception_stub\" %}\n+  ins_encode %{\n+    __ set_inst_mark();\n+    __ load_const_optimized(Z_R1_scratch, (address)StubRoutines::forward_exception_entry());\n+    __ z_br(Z_R1_scratch);\n+    __ clear_inst_mark();\n+  %}\n+  ins_pipe(pipe_class_dummy);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1783,0 +1783,1 @@\n+  assert(!adr._rspec.reloc()->is_data(), \"should not use ExternalAddress for call\");\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-  __ jump (ExternalAddress(slow_case_addr));\n+  __ jump (RuntimeAddress(slow_case_addr));\n@@ -254,1 +254,1 @@\n-  __ jump (ExternalAddress(slow_case_addr));\n+  __ jump (RuntimeAddress(slow_case_addr));\n@@ -353,1 +353,1 @@\n-  __ jump (ExternalAddress(slow_case_addr));\n+  __ jump (RuntimeAddress(slow_case_addr));\n","filename":"src\/hotspot\/cpu\/x86\/jniFastGetField_x86_32.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-  __ jump (ExternalAddress(slow_case_addr), rscratch1);\n+  __ jump (RuntimeAddress(slow_case_addr), rscratch1);\n@@ -209,1 +209,1 @@\n-  __ jump (ExternalAddress(slow_case_addr), rscratch1);\n+  __ jump (RuntimeAddress(slow_case_addr), rscratch1);\n","filename":"src\/hotspot\/cpu\/x86\/jniFastGetField_x86_64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2332,1 +2332,1 @@\n-\n+  assert(!dst.rspec().reloc()->is_data(), \"should not use ExternalAddress for jump\");\n@@ -2343,1 +2343,1 @@\n-\n+  assert(!dst.rspec().reloc()->is_data(), \"should not use ExternalAddress for jump_cc\");\n@@ -4948,3 +4948,2 @@\n-  assert(Klass::SECONDARY_SUPERS_BITMAP_FULL == ~uintx(0), \"\");\n-  cmpq(r_bitmap, (int32_t)-1); \/\/ sign-extends immediate to 64-bit value\n-  jcc(Assembler::equal, L_huge);\n+  cmpl(r_array_length, (int32_t)Klass::SECONDARY_SUPERS_TABLE_SIZE - 2);\n+  jcc(Assembler::greater, L_huge);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -707,1 +707,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_start));\n+  __ lea(temp_reg, AddressLiteral(code_start, relocInfo::none));\n@@ -710,1 +710,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_end));\n+  __ lea(temp_reg, AddressLiteral(code_end, relocInfo::none));\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -827,1 +827,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_start));\n+  __ lea(temp_reg, AddressLiteral(code_start, relocInfo::none));\n@@ -830,1 +830,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_end));\n+  __ lea(temp_reg, AddressLiteral(code_end, relocInfo::none));\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-    ExternalAddress no_overlap(no_overlap_target);\n+    RuntimeAddress no_overlap(no_overlap_target);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_arraycopy.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -13586,0 +13586,12 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+\n+  format %{ \"JMP    forward_exception_stub\" %}\n+  ins_encode %{\n+    __ jump(RuntimeAddress(StubRoutines::forward_exception_entry()), noreg);\n+  %}\n+  ins_pipe(pipe_jmp);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -12595,0 +12595,12 @@\n+\/\/ Forward exception.\n+instruct ForwardExceptionjmp()\n+%{\n+  match(ForwardException);\n+\n+  format %{ \"jmp     forward_exception_stub\" %}\n+  ins_encode %{\n+    __ jump(RuntimeAddress(StubRoutines::forward_exception_entry()), noreg);\n+  %}\n+  ins_pipe(pipe_jmp);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-    bool is_read_only() { return _read_only; }\n+    bool is_read_only() override { return _read_only; }\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Red Hat Inc.\n+ * Copyright (c) 2020, 2024, Red Hat Inc.\n@@ -131,2 +131,2 @@\n-    CachingCgroupController<CgroupMemoryController>* memory_controller() { return _memory; }\n-    CachingCgroupController<CgroupCpuController>* cpu_controller() { return _cpu; }\n+    CachingCgroupController<CgroupMemoryController>* memory_controller() override { return _memory; }\n+    CachingCgroupController<CgroupCpuController>* cpu_controller() override { return _cpu; }\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -433,0 +433,2 @@\n+  PRAGMA_DIAG_PUSH\n+  PRAGMA_ZERO_AS_NULL_POINTER_CONSTANT_IGNORED\n@@ -434,0 +436,1 @@\n+  PRAGMA_DIAG_POP\n","filename":"src\/hotspot\/os\/linux\/os_perf_linux.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,43 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"gc\/z\/zUtils.hpp\"\n-#include \"utilities\/debug.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-#include <stdlib.h>\n-\n-uintptr_t ZUtils::alloc_aligned(size_t alignment, size_t size) {\n-  void* res = nullptr;\n-\n-  \/\/ Use raw posix_memalign as long as we have no wrapper for it\n-  ALLOW_C_FUNCTION(::posix_memalign, int rc = posix_memalign(&res, alignment, size);)\n-  if (rc != 0) {\n-    fatal(\"posix_memalign() failed\");\n-  }\n-\n-  memset(res, 0, size);\n-\n-  return (uintptr_t)res;\n-}\n","filename":"src\/hotspot\/os\/posix\/gc\/z\/zUtils_posix.cpp","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+#include \"utilities\/compilerWarnings.hpp\"\n@@ -38,0 +39,3 @@\n+\n+PRAGMA_DIAG_PUSH\n+PRAGMA_ZERO_AS_NULL_POINTER_CONSTANT_IGNORED\n@@ -39,0 +43,2 @@\n+PRAGMA_DIAG_POP\n+\n","filename":"src\/hotspot\/os\/posix\/threadCritical_posix.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,40 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"gc\/z\/zUtils.hpp\"\n-#include \"utilities\/debug.hpp\"\n-\n-#include <malloc.h>\n-\n-uintptr_t ZUtils::alloc_aligned(size_t alignment, size_t size) {\n-  void* const res = _aligned_malloc(size, alignment);\n-\n-  if (res == nullptr) {\n-    fatal(\"_aligned_malloc failed\");\n-  }\n-\n-  memset(res, 0, size);\n-\n-  return (uintptr_t)res;\n-}\n","filename":"src\/hotspot\/os\/windows\/gc\/z\/zUtils_windows.cpp","additions":0,"deletions":40,"binary":false,"changes":40,"status":"deleted"},{"patch":"@@ -3465,1 +3465,2 @@\n-  assert(aligned_base != nullptr, \"Did not manage to re-map after %d attempts?\", max_attempts);\n+  assert(aligned_base != nullptr,\n+      \"Did not manage to re-map after %d attempts (size %zu, alignment %zu, file descriptor %d)\", max_attempts, size, alignment, file_desc);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#include \"runtime\/atomic.hpp\"\n+\n@@ -31,0 +33,17 @@\n+template <typename T>\n+static void pd_conjoint_atomic_helper(const T* from, T* to, size_t count) {\n+  if (from > to) {\n+    while (count-- > 0) {\n+      \/\/ Copy forwards\n+      Atomic::store(to++, Atomic::load(from++));\n+    }\n+  } else {\n+    from += count - 1;\n+    to   += count - 1;\n+    while (count-- > 0) {\n+      \/\/ Copy backwards\n+      Atomic::store(to--, Atomic::load(from--));\n+    }\n+  }\n+}\n+\n@@ -74,13 +93,1 @@\n-  if (from > to) {\n-    while (count-- > 0) {\n-      \/\/ Copy forwards\n-      *to++ = *from++;\n-    }\n-  } else {\n-    from += count - 1;\n-    to   += count - 1;\n-    while (count-- > 0) {\n-      \/\/ Copy backwards\n-      *to-- = *from--;\n-    }\n-  }\n+  pd_conjoint_atomic_helper(from, to, count);\n@@ -90,13 +97,1 @@\n-  if (from > to) {\n-    while (count-- > 0) {\n-      \/\/ Copy forwards\n-      *to++ = *from++;\n-    }\n-  } else {\n-    from += count - 1;\n-    to   += count - 1;\n-    while (count-- > 0) {\n-      \/\/ Copy backwards\n-      *to-- = *from--;\n-    }\n-  }\n+  pd_conjoint_atomic_helper(from, to, count);\n@@ -106,1 +101,1 @@\n-  pd_conjoint_oops_atomic((const oop*)from, (oop*)to, count);\n+  pd_conjoint_atomic_helper(from, to, count);\n@@ -110,13 +105,1 @@\n- if (from > to) {\n-    while (count-- > 0) {\n-      \/\/ Copy forwards\n-      *to++ = *from++;\n-    }\n-  } else {\n-    from += count - 1;\n-    to   += count - 1;\n-    while (count-- > 0) {\n-      \/\/ Copy backwards\n-      *to-- = *from--;\n-    }\n-  }\n+ pd_conjoint_atomic_helper(from, to, count);\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/copy_windows_aarch64.hpp","additions":23,"deletions":40,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-  masm->jump(ExternalAddress((address)&HandleExceptionFromCodeCache), rscratch1);\n+  masm->jump(RuntimeAddress((address)&HandleExceptionFromCodeCache), rscratch1);\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/os_windows_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -213,9 +213,10 @@\n-  if (_matrule->find_type(\"Goto\",          index)) return true;\n-  if (_matrule->find_type(\"If\",            index)) return true;\n-  if (_matrule->find_type(\"CountedLoopEnd\",index)) return true;\n-  if (_matrule->find_type(\"Return\",        index)) return true;\n-  if (_matrule->find_type(\"Rethrow\",       index)) return true;\n-  if (_matrule->find_type(\"TailCall\",      index)) return true;\n-  if (_matrule->find_type(\"TailJump\",      index)) return true;\n-  if (_matrule->find_type(\"Halt\",          index)) return true;\n-  if (_matrule->find_type(\"Jump\",          index)) return true;\n+  if (_matrule->find_type(\"Goto\",             index)) return true;\n+  if (_matrule->find_type(\"If\",               index)) return true;\n+  if (_matrule->find_type(\"CountedLoopEnd\",   index)) return true;\n+  if (_matrule->find_type(\"Return\",           index)) return true;\n+  if (_matrule->find_type(\"Rethrow\",          index)) return true;\n+  if (_matrule->find_type(\"TailCall\",         index)) return true;\n+  if (_matrule->find_type(\"TailJump\",         index)) return true;\n+  if (_matrule->find_type(\"ForwardException\", index)) return true;\n+  if (_matrule->find_type(\"Halt\",             index)) return true;\n+  if (_matrule->find_type(\"Jump\",             index)) return true;\n@@ -231,6 +232,7 @@\n-  if (_matrule->find_type(\"Goto\",    index)) return true;\n-  if (_matrule->find_type(\"Return\",  index)) return true;\n-  if (_matrule->find_type(\"Rethrow\", index)) return true;\n-  if (_matrule->find_type(\"TailCall\",index)) return true;\n-  if (_matrule->find_type(\"TailJump\",index)) return true;\n-  if (_matrule->find_type(\"Halt\",    index)) return true;\n+  if (_matrule->find_type(\"Goto\",             index)) return true;\n+  if (_matrule->find_type(\"Return\",           index)) return true;\n+  if (_matrule->find_type(\"Rethrow\",          index)) return true;\n+  if (_matrule->find_type(\"TailCall\",         index)) return true;\n+  if (_matrule->find_type(\"TailJump\",         index)) return true;\n+  if (_matrule->find_type(\"ForwardException\", index)) return true;\n+  if (_matrule->find_type(\"Halt\",             index)) return true;\n@@ -379,0 +381,1 @@\n+  if (_matrule->find_type(\"ForwardException\", index)) return true;\n@@ -897,0 +900,1 @@\n+      strcmp(_matrule->_opType,\"ForwardException\")==0 ||\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":19,"deletions":15,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2181,10 +2181,1 @@\n-  char* base = map_memory(_fd, _full_path, r->file_offset(),\n-                          addr, _mapped_heap_memregion.byte_size(), r->read_only(),\n-                          r->allow_exec());\n-  if (base == nullptr || base != addr) {\n-    dealloc_heap_region();\n-    log_info(cds)(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n-                  INTPTR_FORMAT \", size = \" SIZE_FORMAT \" bytes\",\n-                  p2i(addr), _mapped_heap_memregion.byte_size());\n-    return false;\n-  }\n+  char* base;\n@@ -2192,4 +2183,27 @@\n-  if (VerifySharedSpaces && !r->check_region_crc(base)) {\n-    dealloc_heap_region();\n-    log_info(cds)(\"UseSharedSpaces: mapped heap region is corrupt\");\n-    return false;\n+  if (MetaspaceShared::use_windows_memory_mapping()) {\n+    if (!read_region(MetaspaceShared::hp, addr,\n+                     align_up(_mapped_heap_memregion.byte_size(), os::vm_page_size()),\n+                     \/* do_commit = *\/ true)) {\n+      dealloc_heap_region();\n+      log_error(cds)(\"Failed to read archived heap region into \" INTPTR_FORMAT, p2i(addr));\n+      return false;\n+    }\n+    \/\/ Checks for VerifySharedSpaces is already done inside read_region()\n+    base = addr;\n+  } else {\n+    base = map_memory(_fd, _full_path, r->file_offset(),\n+                      addr, _mapped_heap_memregion.byte_size(), r->read_only(),\n+                      r->allow_exec());\n+    if (base == nullptr || base != addr) {\n+      dealloc_heap_region();\n+      log_info(cds)(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n+                    INTPTR_FORMAT \", size = \" SIZE_FORMAT \" bytes\",\n+                    p2i(addr), _mapped_heap_memregion.byte_size());\n+      return false;\n+    }\n+\n+    if (VerifySharedSpaces && !r->check_region_crc(base)) {\n+      dealloc_heap_region();\n+      log_info(cds)(\"UseSharedSpaces: mapped heap region is corrupt\");\n+      return false;\n+    }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -1557,1 +1557,0 @@\n-  int i;\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -374,0 +374,1 @@\n+#ifndef PRODUCT\n@@ -375,0 +376,1 @@\n+#endif\n@@ -429,0 +431,1 @@\n+#ifndef PRODUCT\n@@ -430,0 +433,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1455,6 +1455,0 @@\n-\n-  \/\/ Init lock is a C union with component_mirror.  Only instanceKlass mirrors have\n-  \/\/ init_lock and only ArrayKlass mirrors have component_mirror.  Since both are oops\n-  \/\/ GC treats them the same.\n-  _init_lock_offset = _component_mirror_offset;\n-\n@@ -1467,1 +1461,0 @@\n-  f->do_u4((u4*)&_init_lock_offset);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -212,0 +212,1 @@\n+  macro(java_lang_Class, init_lock,              object_signature,  false)\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -182,0 +182,1 @@\n+#ifdef ASSERT\n@@ -184,0 +185,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  virtual void do_card_ptr(CardValue* card_ptr, uint worker_id) = 0;\n+  virtual void do_card_ptr(CardValue* card_ptr) = 0;\n@@ -47,1 +47,1 @@\n-      do_card_ptr(card_ptr, worker_id);\n+      do_card_ptr(card_ptr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTableEntryClosure.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  Atomic::add(&_direct_allocated, value);\n+  Atomic::add(&_direct_allocated, value, memory_order_relaxed);\n@@ -37,1 +37,1 @@\n-  Atomic::add(&_num_plab_filled, value);\n+  Atomic::add(&_num_plab_filled, value, memory_order_relaxed);\n@@ -41,1 +41,1 @@\n-  Atomic::add(&_num_direct_allocated, value);\n+  Atomic::add(&_num_direct_allocated, value, memory_order_relaxed);\n@@ -45,2 +45,2 @@\n-  Atomic::add(&_region_end_waste, value);\n-  Atomic::inc(&_regions_filled);\n+  Atomic::add(&_region_end_waste, value, memory_order_relaxed);\n+  Atomic::inc(&_regions_filled, memory_order_relaxed);\n@@ -50,2 +50,2 @@\n-  Atomic::add(&_failure_used, used);\n-  Atomic::add(&_failure_waste, waste);\n+  Atomic::add(&_failure_used, used, memory_order_relaxed);\n+  Atomic::add(&_failure_waste, waste, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacStats.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"gc\/shared\/partialArrayState.hpp\"\n@@ -46,0 +47,1 @@\n+#include \"runtime\/mutexLocker.hpp\"\n@@ -64,1 +66,2 @@\n-                                           G1EvacFailureRegions* evac_failure_regions)\n+                                           G1EvacFailureRegions* evac_failure_regions,\n+                                           PartialArrayStateAllocator* pas_allocator)\n@@ -83,2 +86,2 @@\n-    _partial_objarray_chunk_size(ParGCArrayScanChunk),\n-    _partial_array_stepper(num_workers),\n+    _partial_array_state_allocator(pas_allocator),\n+    _partial_array_stepper(num_workers, ParGCArrayScanChunk),\n@@ -172,1 +175,1 @@\n-void G1ParScanThreadState::verify_task(PartialArrayScanTask task) const {\n+void G1ParScanThreadState::verify_task(PartialArrayState* task) const {\n@@ -174,1 +177,1 @@\n-  oop p = task.to_source_array();\n+  oop p = task->source();\n@@ -183,2 +186,2 @@\n-  } else if (task.is_partial_array_task()) {\n-    verify_task(task.to_partial_array_task());\n+  } else if (task.is_partial_array_state()) {\n+    verify_task(task.to_partial_array_state());\n@@ -226,2 +229,2 @@\n-void G1ParScanThreadState::do_partial_array(PartialArrayScanTask task) {\n-  oop from_obj = task.to_source_array();\n+void G1ParScanThreadState::do_partial_array(PartialArrayState* state) {\n+  oop to_obj = state->destination();\n@@ -229,0 +232,2 @@\n+#ifdef ASSERT\n+  oop from_obj = state->source();\n@@ -232,2 +237,0 @@\n-\n-  oop to_obj = from_obj->forwardee();\n@@ -236,0 +239,2 @@\n+#endif \/\/ ASSERT\n+\n@@ -238,6 +243,9 @@\n-  PartialArrayTaskStepper::Step step\n-    = _partial_array_stepper.next(objArrayOop(from_obj),\n-                                  to_array,\n-                                  _partial_objarray_chunk_size);\n-  for (uint i = 0; i < step._ncreate; ++i) {\n-    push_on_queue(ScannerTask(PartialArrayScanTask(from_obj)));\n+  \/\/ Claim a chunk and get number of additional tasks to enqueue.\n+  PartialArrayTaskStepper::Step step = _partial_array_stepper.next(state);\n+  \/\/ Push any additional partial scan tasks needed.  Pushed before processing\n+  \/\/ the claimed chunk to allow other workers to steal while we're processing.\n+  if (step._ncreate > 0) {\n+    state->add_references(step._ncreate);\n+    for (uint i = 0; i < step._ncreate; ++i) {\n+      push_on_queue(ScannerTask(state));\n+    }\n@@ -248,3 +256,1 @@\n-  \/\/ Process claimed task.  The length of to_array is not correct, but\n-  \/\/ fortunately the iteration ignores the length field and just relies\n-  \/\/ on start\/end.\n+  \/\/ Process claimed task.\n@@ -252,2 +258,4 @@\n-                              step._index,\n-                              step._index + _partial_objarray_chunk_size);\n+                              checked_cast<int>(step._index),\n+                              checked_cast<int>(step._index + _partial_array_stepper.chunk_size()));\n+  \/\/ Release reference to the state, now that we're done with it.\n+  _partial_array_state_allocator->release(_worker_id, state);\n@@ -263,1 +271,0 @@\n-  assert(from_obj != to_obj, \"should not be scanning self-forwarded objects\");\n@@ -268,4 +275,2 @@\n-  PartialArrayTaskStepper::Step step\n-    = _partial_array_stepper.start(objArrayOop(from_obj),\n-                                   to_array,\n-                                   _partial_objarray_chunk_size);\n+  size_t array_length = to_array->length();\n+  PartialArrayTaskStepper::Step step = _partial_array_stepper.start(array_length);\n@@ -275,2 +280,15 @@\n-  for (uint i = 0; i < step._ncreate; ++i) {\n-    push_on_queue(ScannerTask(PartialArrayScanTask(from_obj)));\n+  if (step._ncreate > 0) {\n+    assert(step._index < array_length, \"invariant\");\n+    assert(((array_length - step._index) % _partial_array_stepper.chunk_size()) == 0,\n+           \"invariant\");\n+    PartialArrayState* state =\n+      _partial_array_state_allocator->allocate(_worker_id,\n+                                               from_obj, to_obj,\n+                                               step._index,\n+                                               array_length,\n+                                               step._ncreate);\n+    for (uint i = 0; i < step._ncreate; ++i) {\n+      push_on_queue(ScannerTask(state));\n+    }\n+  } else {\n+    assert(step._index == array_length, \"invariant\");\n@@ -287,3 +305,2 @@\n-  \/\/ module. The length of to_array is not correct, but fortunately\n-  \/\/ the iteration ignores that length field and relies on start\/end.\n-  to_array->oop_iterate_range(&_scanner, 0, step._index);\n+  \/\/ module.\n+  to_array->oop_iterate_range(&_scanner, 0, checked_cast<int>(step._index));\n@@ -300,1 +317,1 @@\n-    do_partial_array(task.to_partial_array_task());\n+    do_partial_array(task.to_partial_array_state());\n@@ -585,1 +602,2 @@\n-                               _evac_failure_regions);\n+                               _evac_failure_regions,\n+                               &_partial_array_state_allocator);\n@@ -718,1 +736,3 @@\n-    _evac_failure_regions(evac_failure_regions) {\n+    _evac_failure_regions(evac_failure_regions),\n+    _partial_array_state_allocator(num_workers)\n+{\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":55,"deletions":35,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"gc\/shared\/partialArrayState.hpp\"\n@@ -90,1 +91,2 @@\n-  int _partial_objarray_chunk_size;\n+  size_t _partial_objarray_chunk_size;\n+  PartialArrayStateAllocator* _partial_array_state_allocator;\n@@ -132,1 +134,2 @@\n-                       G1EvacFailureRegions* evac_failure_regions);\n+                       G1EvacFailureRegions* evac_failure_regions,\n+                       PartialArrayStateAllocator* partial_array_state_allocator);\n@@ -143,1 +146,1 @@\n-  void verify_task(PartialArrayScanTask task) const NOT_DEBUG_RETURN;\n+  void verify_task(PartialArrayState* task) const NOT_DEBUG_RETURN;\n@@ -172,1 +175,1 @@\n-  void do_partial_array(PartialArrayScanTask task);\n+  void do_partial_array(PartialArrayState* state);\n@@ -255,0 +258,1 @@\n+  PartialArrayStateAllocator _partial_array_state_allocator;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1233,1 +1233,1 @@\n-    void do_card_ptr(CardValue* card_ptr, uint worker_id) {\n+    void do_card_ptr(CardValue* card_ptr) override {\n@@ -1237,1 +1237,0 @@\n-      \/\/ In this case worker_id should be the id of a GC worker thread.\n@@ -1345,0 +1344,1 @@\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -525,1 +525,1 @@\n-  void do_card_ptr(CardValue* card_ptr, uint worker_id) {\n+  void do_card_ptr(CardValue* card_ptr) override {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -524,1 +524,1 @@\n-void ParallelCompactData::verify_clear(const PSVirtualSpace* vspace)\n+void ParallelCompactData::verify_clear()\n@@ -526,2 +526,2 @@\n-  const size_t* const beg = (const size_t*)vspace->committed_low_addr();\n-  const size_t* const end = (const size_t*)vspace->committed_high_addr();\n+  const size_t* const beg = (const size_t*) _region_vspace->committed_low_addr();\n+  const size_t* const end = (const size_t*) _region_vspace->committed_high_addr();\n@@ -532,5 +532,0 @@\n-\n-void ParallelCompactData::verify_clear()\n-{\n-  verify_clear(_region_vspace);\n-}\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -377,3 +377,0 @@\n-  void clear_range(HeapWord* beg, HeapWord* end) {\n-    clear_range(addr_to_region_idx(beg), addr_to_region_idx(end));\n-  }\n@@ -396,1 +393,0 @@\n-  void verify_clear(const PSVirtualSpace* vspace);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -117,2 +117,1 @@\n-  virtual void update_counters() = 0;\n-  virtual CollectorCounters* counters() { return _gc_counters; }\n+  CollectorCounters* counters() { return _gc_counters; }\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,153 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"gc\/shared\/partialArrayState.hpp\"\n+#include \"memory\/allocation.inline.hpp\"\n+#include \"memory\/arena.hpp\"\n+#include \"nmt\/memflags.hpp\"\n+#include \"oops\/oopsHierarchy.hpp\"\n+#include \"runtime\/atomic.hpp\"\n+#include \"runtime\/orderAccess.hpp\"\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"utilities\/macros.hpp\"\n+#include <new>\n+\n+PartialArrayState::PartialArrayState(oop src, oop dst,\n+                                     size_t index, size_t length,\n+                                     size_t initial_refcount)\n+  : _source(src),\n+    _destination(dst),\n+    _length(length),\n+    _index(index),\n+    _refcount(initial_refcount)\n+{\n+  assert(index <= length, \"precondition\");\n+}\n+\n+void PartialArrayState::add_references(size_t count) {\n+  size_t new_count = Atomic::add(&_refcount, count, memory_order_relaxed);\n+  assert(new_count >= count, \"reference count overflow\");\n+}\n+\n+class PartialArrayStateAllocator::Impl : public CHeapObj<mtGC> {\n+  struct FreeListEntry;\n+\n+  Arena* _arenas;\n+  FreeListEntry** _free_lists;\n+  uint _num_workers;\n+\n+public:\n+  Impl(uint num_workers);\n+  ~Impl();\n+\n+  NONCOPYABLE(Impl);\n+\n+  PartialArrayState* allocate(uint worker_id,\n+                              oop src, oop dst,\n+                              size_t index, size_t length,\n+                              size_t initial_refcount);\n+  void release(uint worker_id, PartialArrayState* state);\n+};\n+\n+struct PartialArrayStateAllocator::Impl::FreeListEntry {\n+  FreeListEntry* _next;\n+\n+  FreeListEntry(FreeListEntry* next) : _next(next) {}\n+  ~FreeListEntry() = default;\n+\n+  NONCOPYABLE(FreeListEntry);\n+};\n+\n+PartialArrayStateAllocator::Impl::Impl(uint num_workers)\n+  : _arenas(NEW_C_HEAP_ARRAY(Arena, num_workers, mtGC)),\n+    _free_lists(NEW_C_HEAP_ARRAY(FreeListEntry*, num_workers, mtGC)),\n+    _num_workers(num_workers)\n+{\n+  for (uint i = 0; i < _num_workers; ++i) {\n+    ::new (&_arenas[i]) Arena(mtGC);\n+    _free_lists[i] = nullptr;\n+  }\n+}\n+\n+PartialArrayStateAllocator::Impl::~Impl() {\n+  \/\/ We don't need to clean up the free lists.  Deallocating the entries\n+  \/\/ does nothing, since we're using arena allocation.  Instead, leave it\n+  \/\/ to the arena destructor to release the memory.\n+  FREE_C_HEAP_ARRAY(FreeListEntry*, _free_lists);\n+  for (uint i = 0; i < _num_workers; ++i) {\n+    _arenas[i].~Arena();\n+  }\n+  FREE_C_HEAP_ARRAY(Arena*, _arenas);\n+}\n+\n+PartialArrayState* PartialArrayStateAllocator::Impl::allocate(uint worker_id,\n+                                                              oop src, oop dst,\n+                                                              size_t index,\n+                                                              size_t length,\n+                                                              size_t initial_refcount) {\n+  void* p;\n+  FreeListEntry* head = _free_lists[worker_id];\n+  if (head == nullptr) {\n+    p = NEW_ARENA_OBJ(&_arenas[worker_id], PartialArrayState);\n+  } else {\n+    _free_lists[worker_id] = head->_next;\n+    head->~FreeListEntry();\n+    p = head;\n+  }\n+  return ::new (p) PartialArrayState(src, dst, index, length, initial_refcount);\n+}\n+\n+void PartialArrayStateAllocator::Impl::release(uint worker_id, PartialArrayState* state) {\n+  size_t refcount = Atomic::sub(&state->_refcount, size_t(1), memory_order_release);\n+  if (refcount != 0) {\n+    assert(refcount + 1 != 0, \"refcount underflow\");\n+  } else {\n+    OrderAccess::acquire();\n+    state->~PartialArrayState();\n+    _free_lists[worker_id] = ::new (state) FreeListEntry(_free_lists[worker_id]);\n+  }\n+}\n+\n+PartialArrayStateAllocator::PartialArrayStateAllocator(uint num_workers)\n+  : _impl(new Impl(num_workers))\n+{}\n+\n+PartialArrayStateAllocator::~PartialArrayStateAllocator() {\n+  delete _impl;\n+}\n+\n+PartialArrayState* PartialArrayStateAllocator::allocate(uint worker_id,\n+                                                        oop src, oop dst,\n+                                                        size_t index,\n+                                                        size_t length,\n+                                                        size_t initial_refcount) {\n+  return _impl->allocate(worker_id, src, dst, index, length, initial_refcount);\n+}\n+\n+void PartialArrayStateAllocator::release(uint worker_id, PartialArrayState* state) {\n+  _impl->release(worker_id, state);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/partialArrayState.cpp","additions":153,"deletions":0,"binary":false,"changes":153,"status":"added"},{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_GC_SHARED_PARTIALARRAYSTATE_HPP\n+#define SHARE_GC_SHARED_PARTIALARRAYSTATE_HPP\n+\n+#include \"oops\/oopsHierarchy.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"utilities\/macros.hpp\"\n+\n+class PartialArrayStateAllocator;\n+\n+\/\/ Instances of this class are used to represent processing progress for an\n+\/\/ array task in a taskqueue.  When a sufficiently large array needs to be\n+\/\/ processed, such that it is desirable to split up the processing into\n+\/\/ parallelizable subtasks, a state object is allocated for the array.\n+\/\/ Multiple tasks referring to the state can then be added to the taskqueue\n+\/\/ for later processing, either by the current thread or by some other thread\n+\/\/ that steals one of those tasks.\n+\/\/\n+\/\/ Processing a state involves using the state to claim a segment of the\n+\/\/ array, and processing that segment.  Claiming is done by atomically\n+\/\/ incrementing the index, thereby claiming the segment from the old to new\n+\/\/ index values.  New tasks should also be added as needed to ensure the\n+\/\/ entire array will be processed.  A PartialArrayTaskStepper can be used to\n+\/\/ help with this.\n+\/\/\n+\/\/ States are allocated and released using a PartialArrayStateAllocator.\n+\/\/ States are reference counted to aid in that management.  Each task\n+\/\/ referring to a given state that is added to a taskqueue must increase the\n+\/\/ reference count by one.  When the processing of a task referring to a state\n+\/\/ is complete, the reference count must be decreased by one.  When the\n+\/\/ reference count reaches zero the state should be released to the allocator\n+\/\/ for later reuse.\n+class PartialArrayState {\n+  oop _source;\n+  oop _destination;\n+  size_t _length;\n+  volatile size_t _index;\n+  volatile size_t _refcount;\n+\n+  friend class PartialArrayStateAllocator;\n+\n+  PartialArrayState(oop src, oop dst,\n+                    size_t index, size_t length,\n+                    size_t initial_refcount);\n+  ~PartialArrayState() = default;\n+\n+  NONCOPYABLE(PartialArrayState);\n+\n+public:\n+  \/\/ Add count references, one per referring task being added to a taskqueue.\n+  void add_references(size_t count);\n+\n+  \/\/ The source array oop.\n+  oop source() const { return _source; }\n+\n+  \/\/ The destination array oop.  In some circumstances the source and\n+  \/\/ destination may be the same.\n+  oop destination() const { return _destination; }\n+\n+  \/\/ The length of the array oop.\n+  size_t length() const { return _length; }\n+\n+  \/\/ A pointer to the start index for the next segment to process, for atomic\n+  \/\/ update.\n+  volatile size_t* index_addr() { return &_index; }\n+};\n+\n+\/\/ This class provides memory management for PartialArrayStates.\n+\/\/\n+\/\/ States are initially allocated from a set of arenas owned by the allocator.\n+\/\/ This allows the entire set of allocated states to be discarded without the\n+\/\/ need to keep track of or find them under some circumstances.  For example,\n+\/\/ if G1 concurrent marking is aborted and needs to restart because of a full\n+\/\/ marking queue, the queue doesn't need to be searched for tasks referring to\n+\/\/ states to allow releasing them.  Instead the queue contents can just be\n+\/\/ discarded, and the memory for the no longer referenced states will\n+\/\/ eventually be reclaimed when the arenas are reset.\n+\/\/\n+\/\/ A set of free-lists is placed in front of the arena allocators.  This\n+\/\/ causes the maximum number of allocated states to be based on the number of\n+\/\/ in-progress arrays, rather than the total number of arrays that need to be\n+\/\/ processed.  The use of free-list allocators is the reason for reference\n+\/\/ counting states.\n+\/\/\n+\/\/ The arena and free-list to use for an allocation operation is designated by\n+\/\/ the worker_id used in the operation.  This avoids locking and such on those\n+\/\/ data structures, at the cost of possibly doing more total arena allocation\n+\/\/ that would be needed with a single shared arena and free-list.\n+class PartialArrayStateAllocator {\n+  class Impl;\n+  Impl* _impl;\n+\n+public:\n+  PartialArrayStateAllocator(uint num_workers);\n+  ~PartialArrayStateAllocator();\n+\n+  NONCOPYABLE(PartialArrayStateAllocator);\n+\n+  \/\/ Create a new state, obtaining the memory for it from the free-list or\n+  \/\/ arena associated with worker_id.\n+  PartialArrayState* allocate(uint worker_id,\n+                              oop src, oop dst,\n+                              size_t index, size_t length,\n+                              size_t initial_refcount);\n+\n+  \/\/ Decrement the state's refcount.  If the new refcount is zero, add the\n+  \/\/ state to the free-list associated with worker_id.  The state must have\n+  \/\/ been allocated by this allocator, but that allocation doesn't need to\n+  \/\/ have been associated with worker_id.\n+  void release(uint worker_id, PartialArrayState* state);\n+};\n+\n+#endif \/\/ SHARE_GC_SHARED_PARTIALARRAYSTATE_HPP\n","filename":"src\/hotspot\/share\/gc\/shared\/partialArrayState.hpp","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -51,1 +52,2 @@\n-PartialArrayTaskStepper::PartialArrayTaskStepper(uint n_workers) :\n+PartialArrayTaskStepper::PartialArrayTaskStepper(uint n_workers, size_t chunk_size) :\n+  _chunk_size(chunk_size),\n","filename":"src\/hotspot\/share\/gc\/shared\/partialArrayTaskStepper.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,3 @@\n-\/\/ Helper for handling PartialArrayTasks.\n+class PartialArrayState;\n+\n+\/\/ Helper for partial array chunking tasks.\n@@ -34,11 +36,4 @@\n-\/\/ processed in parallel.  Each task (implicitly) represents such a chunk.\n-\/\/ We can enqueue multiple tasks at the same time.  We want to enqueue\n-\/\/ enough tasks to benefit from the available parallelism, while not so many\n-\/\/ as to substantially expand the task queues.\n-\/\/\n-\/\/ A task directly refers to the from-space array.  The from-space array's\n-\/\/ forwarding pointer refers to the associated to-space array, and its\n-\/\/ length is the actual length. The to-space array's length field is used to\n-\/\/ indicate processing progress.  It is the starting index of the next chunk\n-\/\/ to process, or equals the actual length when there are no more chunks to\n-\/\/ be processed.\n+\/\/ processed in parallel.  Each task (implicitly) represents such a chunk.  We\n+\/\/ can enqueue multiple tasks at the same time.  We want to enqueue enough\n+\/\/ tasks to benefit from the available parallelism, while not so many as to\n+\/\/ substantially expand the task queues.\n@@ -47,1 +42,1 @@\n-  PartialArrayTaskStepper(uint n_workers);\n+  PartialArrayTaskStepper(uint n_workers, size_t chunk_size);\n@@ -50,1 +45,1 @@\n-    int _index;                 \/\/ Array index for the step.\n+    size_t _index;              \/\/ Array index for the step.\n@@ -54,5 +49,12 @@\n-  \/\/ Set to's length to the end of the initial chunk, which is the start of\n-  \/\/ the first partial task if the array is large enough to need splitting.\n-  \/\/ Returns a Step with _index being that index and _ncreate being the\n-  \/\/ initial number of partial tasks to enqueue.\n-  inline Step start(arrayOop from, arrayOop to, int chunk_size) const;\n+  \/\/ Called with the length of the array to be processed.  Returns a Step with\n+  \/\/ _index being the end of the initial chunk, which the caller should\n+  \/\/ process.  This is also the starting index for the next chunk to process.\n+  \/\/ The _ncreate is the number of tasks to enqueue to continue processing the\n+  \/\/ array.  If _ncreate is zero then _index will be length.\n+  inline Step start(size_t length) const;\n+\n+  \/\/ Atomically increment state's index by chunk_size() to claim the next\n+  \/\/ chunk.  Returns a Step with _index being the starting index of the\n+  \/\/ claimed chunk and _ncreate being the number of additional partial tasks\n+  \/\/ to enqueue.\n+  inline Step next(PartialArrayState* state) const;\n@@ -60,5 +62,2 @@\n-  \/\/ Increment to's length by chunk_size to claim the next chunk.  Returns a\n-  \/\/ Step with _index being the starting index of the claimed chunk and\n-  \/\/ _ncreate being the number of additional partial tasks to enqueue.\n-  \/\/ precondition: chunk_size must be the same as used to start the task sequence.\n-  inline Step next(arrayOop from, arrayOop to, int chunk_size) const;\n+  \/\/ The size of chunks to claim for each task.\n+  inline size_t chunk_size() const;\n@@ -69,0 +68,2 @@\n+  \/\/ Size (number of elements) of a chunk to process.\n+  size_t _chunk_size;\n@@ -74,6 +75,2 @@\n-  \/\/ Split start\/next into public part dealing with oops and private\n-  \/\/ impl dealing with lengths and pointers to lengths, for unit testing.\n-  \/\/ length is the actual length obtained from the from-space object.\n-  \/\/ to_length_addr is the address of the to-space object's length value.\n-  inline Step start_impl(int length, int* to_length_addr, int chunk_size) const;\n-  inline Step next_impl(int length, int* to_length_addr, int chunk_size) const;\n+  \/\/ For unit tests.\n+  inline Step next_impl(size_t length, volatile size_t* index_addr) const;\n","filename":"src\/hotspot\/share\/gc\/shared\/partialArrayTaskStepper.hpp","additions":28,"deletions":31,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"gc\/shared\/partialArrayState.hpp\"\n@@ -29,2 +30,0 @@\n-\n-#include \"oops\/arrayOop.hpp\"\n@@ -32,0 +31,2 @@\n+#include \"utilities\/checkedCast.hpp\"\n+#include \"utilities\/debug.hpp\"\n@@ -33,17 +34,3 @@\n-PartialArrayTaskStepper::Step\n-PartialArrayTaskStepper::start_impl(int length,\n-                                    int* to_length_addr,\n-                                    int chunk_size) const {\n-  assert(chunk_size > 0, \"precondition\");\n-\n-  int end = length % chunk_size; \/\/ End of initial chunk.\n-  \/\/ Set to's length to end of initial chunk.  Partial tasks use that length\n-  \/\/ field as the start of the next chunk to process.  Must be done before\n-  \/\/ enqueuing partial scan tasks, in case other threads steal any of those\n-  \/\/ tasks.\n-  \/\/\n-  \/\/ The value of end can be 0, either because of a 0-length array or\n-  \/\/ because length is a multiple of the chunk size.  Both of those are\n-  \/\/ relatively rare and handled in the normal course of the iteration, so\n-  \/\/ not worth doing anything special about here.\n-  *to_length_addr = end;\n+size_t PartialArrayTaskStepper::chunk_size() const {\n+  return _chunk_size;\n+}\n@@ -51,0 +38,3 @@\n+PartialArrayTaskStepper::Step\n+PartialArrayTaskStepper::start(size_t length) const {\n+  size_t end = length % _chunk_size; \/\/ End of initial chunk.\n@@ -54,2 +44,1 @@\n-  Step result = { end, (length > end) ? 1u : 0u };\n-  return result;\n+  return Step{ end, (length > end) ? 1u : 0u };\n@@ -59,11 +48,2 @@\n-PartialArrayTaskStepper::start(arrayOop from, arrayOop to, int chunk_size) const {\n-  return start_impl(from->length(), to->length_addr(), chunk_size);\n-}\n-\n-PartialArrayTaskStepper::Step\n-PartialArrayTaskStepper::next_impl(int length,\n-                                   int* to_length_addr,\n-                                   int chunk_size) const {\n-  assert(chunk_size > 0, \"precondition\");\n-\n-  \/\/ The start of the next task is in the length field of the to-space object.\n+PartialArrayTaskStepper::next_impl(size_t length, volatile size_t* index_addr) const {\n+  \/\/ The start of the next task is in the state's index.\n@@ -74,3 +54,3 @@\n-  int start = Atomic::fetch_then_add(to_length_addr,\n-                                     chunk_size,\n-                                     memory_order_relaxed);\n+  size_t start = Atomic::fetch_then_add(index_addr,\n+                                        _chunk_size,\n+                                        memory_order_relaxed);\n@@ -78,4 +58,4 @@\n-  assert(start < length, \"invariant: start %d, length %d\", start, length);\n-  assert(((length - start) % chunk_size) == 0,\n-         \"invariant: start %d, length %d, chunk size %d\",\n-         start, length, chunk_size);\n+  assert(start < length, \"invariant: start %zu, length %zu\", start, length);\n+  assert(((length - start) % _chunk_size) == 0,\n+         \"invariant: start %zu, length %zu, chunk size %zu\",\n+         start, length, _chunk_size);\n@@ -85,1 +65,1 @@\n-  uint task_num = (start \/ chunk_size);\n+  uint task_num = checked_cast<uint>(start \/ _chunk_size);\n@@ -87,1 +67,1 @@\n-  uint remaining_tasks = (length - start) \/ chunk_size;\n+  uint remaining_tasks = checked_cast<uint>((length - start) \/ _chunk_size);\n@@ -109,2 +89,1 @@\n-  Step result = { start, ncreate };\n-  return result;\n+  return Step{ start, ncreate };\n@@ -114,2 +93,2 @@\n-PartialArrayTaskStepper::next(arrayOop from, arrayOop to, int chunk_size) const {\n-  return next_impl(from->length(), to->length_addr(), chunk_size);\n+PartialArrayTaskStepper::next(PartialArrayState* state) const {\n+  return next_impl(state->length(), state->index_addr());\n","filename":"src\/hotspot\/share\/gc\/shared\/partialArrayTaskStepper.inline.hpp","additions":25,"deletions":46,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -579,0 +579,1 @@\n+\/\/ Temporarily retained to support ParallelGC until it adopts PartialArrayState.\n@@ -589,1 +590,3 @@\n-\/\/ Discriminated union over oop*, narrowOop*, and PartialArrayScanTask.\n+class PartialArrayState;\n+\n+\/\/ Discriminated union over oop*, narrowOop*, and PartialArrayState.\n@@ -627,0 +630,1 @@\n+  \/\/ Temporarily retained to support ParallelGC until it adopts PartialArrayState.\n@@ -630,0 +634,3 @@\n+  explicit ScannerTask(PartialArrayState* state) :\n+    _p(encode(state, PartialArrayTag)) {}\n+\n@@ -642,0 +649,1 @@\n+  \/\/ Temporarily retained to support ParallelGC until it adopts PartialArrayState.\n@@ -646,0 +654,4 @@\n+  bool is_partial_array_state() const {\n+    return (raw_value() & PartialArrayTag) != 0;\n+  }\n+\n@@ -654,0 +666,1 @@\n+  \/\/ Temporarily retained to support ParallelGC until it adopts PartialArrayState.\n@@ -657,0 +670,4 @@\n+\n+  PartialArrayState* to_partial_array_state() const {\n+    return static_cast<PartialArrayState*>(decode(PartialArrayTag));\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/taskqueue.hpp","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -975,1 +975,1 @@\n-    heap->rendezvous_threads();\n+    heap->rendezvous_threads(\"Shenandoah Concurrent Weak Roots\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-    HandshakeClosure(\"Shenandoah Flush SATB Handshake\"),\n+    HandshakeClosure(\"Shenandoah Flush SATB\"),\n@@ -275,1 +275,4 @@\n-    Handshake::execute(&flush_satb);\n+    {\n+      ShenandoahTimingsTracker t(ShenandoahPhaseTimings::conc_mark_satb_flush, true);\n+      Handshake::execute(&flush_satb);\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -317,8 +317,1 @@\n-#ifdef LINUX\n-  \/\/ In THP \"advise\" mode, we refrain from advising the system to use large pages\n-  \/\/ since we know these commits will be short lived, and there is no reason to trash\n-  \/\/ the THP area with this bitmap.\n-  if (UseTransparentHugePages) {\n-    aux_bitmap_page_size = os::vm_page_size();\n-  }\n-#endif\n+\n@@ -428,10 +421,0 @@\n-#ifdef LINUX\n-    \/\/ UseTransparentHugePages would madvise that backing memory can be coalesced into huge\n-    \/\/ pages. But, the kernel needs to know that every small page is used, in order to coalesce\n-    \/\/ them into huge one. Therefore, we need to pretouch with smaller pages.\n-    if (UseTransparentHugePages) {\n-      _pretouch_heap_page_size = (size_t)os::vm_page_size();\n-      _pretouch_bitmap_page_size = (size_t)os::vm_page_size();\n-    }\n-#endif\n-\n@@ -1928,1 +1911,1 @@\n-  inline ShenandoahRendezvousClosure() : HandshakeClosure(\"ShenandoahRendezvous\") {}\n+  inline ShenandoahRendezvousClosure(const char* name) : HandshakeClosure(name) {}\n@@ -1932,2 +1915,2 @@\n-void ShenandoahHeap::rendezvous_threads() {\n-  ShenandoahRendezvousClosure cl;\n+void ShenandoahHeap::rendezvous_threads(const char* name) {\n+  ShenandoahRendezvousClosure cl(name);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":4,"deletions":21,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -485,1 +485,1 @@\n-  void rendezvous_threads();\n+  void rendezvous_threads(const char* name);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,1 +145,5 @@\n-void ShenandoahPhaseTimings::set_cycle_data(Phase phase, double time) {\n+void ShenandoahPhaseTimings::set_cycle_data(Phase phase, double time, bool should_aggregate) {\n+  const double cycle_data = _cycle_data[phase];\n+  if (should_aggregate) {\n+    _cycle_data[phase] = (cycle_data == uninitialized()) ? time :  (cycle_data + time);\n+  } else {\n@@ -147,2 +151,1 @@\n-  double d = _cycle_data[phase];\n-  assert(d == uninitialized(), \"Should not be set yet: %s, current value: %lf\", phase_name(phase), d);\n+    assert(cycle_data == uninitialized(), \"Should not be set yet: %s, current value: %lf\", phase_name(phase), cycle_data);\n@@ -150,1 +153,2 @@\n-  _cycle_data[phase] = time;\n+    _cycle_data[phase] = time;\n+  }\n@@ -153,1 +157,1 @@\n-void ShenandoahPhaseTimings::record_phase_time(Phase phase, double time) {\n+void ShenandoahPhaseTimings::record_phase_time(Phase phase, double time, bool should_aggregate) {\n@@ -155,1 +159,1 @@\n-    set_cycle_data(phase, time);\n+    set_cycle_data(phase, time, should_aggregate);\n@@ -189,1 +193,1 @@\n-      double s = uninitialized();\n+      double sum = uninitialized();\n@@ -192,1 +196,1 @@\n-        double ws = uninitialized();\n+        double worker_sum = uninitialized();\n@@ -194,4 +198,4 @@\n-          double v = wd->get(c);\n-          if (v != ShenandoahWorkerData::uninitialized()) {\n-            if (ws == uninitialized()) {\n-              ws = v;\n+          double worker_time = wd->get(c);\n+          if (worker_time != ShenandoahWorkerData::uninitialized()) {\n+            if (worker_sum == uninitialized()) {\n+              worker_sum = worker_time;\n@@ -199,1 +203,1 @@\n-              ws += v;\n+              worker_sum += worker_time;\n@@ -203,1 +207,1 @@\n-        if (ws != uninitialized()) {\n+        if (worker_sum != uninitialized()) {\n@@ -205,3 +209,3 @@\n-          set_cycle_data(Phase(phase + i + 1), ws);\n-          if (s == uninitialized()) {\n-            s = ws;\n+          set_cycle_data(Phase(phase + i + 1), worker_sum);\n+          if (sum == uninitialized()) {\n+            sum = worker_sum;\n@@ -209,1 +213,1 @@\n-            s += ws;\n+            sum += worker_sum;\n@@ -213,1 +217,1 @@\n-      if (s != uninitialized()) {\n+      if (sum != uninitialized()) {\n@@ -215,1 +219,1 @@\n-        set_cycle_data(Phase(phase + 1), s);\n+        set_cycle_data(Phase(phase + 1), sum);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.cpp","additions":24,"deletions":20,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+  f(conc_mark_satb_flush,                           \"  Flush SATB\")                    \\\n@@ -233,1 +234,1 @@\n-  void set_cycle_data(Phase phase, double time);\n+  void set_cycle_data(Phase phase, double time, bool should_aggregate = false);\n@@ -239,1 +240,1 @@\n-  void record_phase_time(Phase phase, double time);\n+  void record_phase_time(Phase phase, double time, bool should_aggregate = false);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-    heap->rendezvous_threads();\n+    heap->rendezvous_threads(\"Shenandoah Class Unloading\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUnload.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,2 +116,2 @@\n-ShenandoahTimingsTracker::ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase) :\n-  _timings(ShenandoahHeap::heap()->phase_timings()), _phase(phase) {\n+ShenandoahTimingsTracker::ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase, bool should_aggregate) :\n+  _timings(ShenandoahHeap::heap()->phase_timings()), _phase(phase), _should_aggregate(should_aggregate) {\n@@ -126,1 +126,1 @@\n-  _timings->record_phase_time(_phase, os::elapsedTime() - _start);\n+  _timings->record_phase_time(_phase, os::elapsedTime() - _start, _should_aggregate);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -85,0 +85,1 @@\n+  const bool                            _should_aggregate;\n@@ -89,1 +90,1 @@\n-  ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase);\n+  ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase, bool should_aggregate = false);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,3 +96,1 @@\n-    check_oop_function = [](oopDesc* obj) {\n-      (void)to_zaddress(obj);\n-    };\n+    check_oop_function = &check_is_valid_zaddress;\n","filename":"src\/hotspot\/share\/gc\/z\/zAddress.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -336,2 +336,1 @@\n-inline zaddress to_zaddress(uintptr_t value) {\n-  const zaddress addr = zaddress(value);\n+inline void check_is_valid_zaddress(zaddress addr) {\n@@ -340,0 +339,13 @@\n+}\n+\n+inline void check_is_valid_zaddress(uintptr_t value) {\n+  check_is_valid_zaddress(zaddress(value));\n+}\n+\n+inline void check_is_valid_zaddress(oopDesc* o) {\n+  check_is_valid_zaddress(uintptr_t(o));\n+}\n+\n+inline zaddress to_zaddress(uintptr_t value) {\n+  const zaddress addr = zaddress(value);\n+  check_is_valid_zaddress(addr);\n@@ -347,1 +359,1 @@\n-inline oop to_oop(zaddress addr) {\n+inline void assert_is_oop_or_null(zaddress addr) {\n@@ -355,1 +367,10 @@\n-  return obj;\n+}\n+\n+inline void assert_is_oop(zaddress addr) {\n+  assert(!is_null(addr), \"Should not be null\");\n+  assert_is_oop_or_null(addr);\n+}\n+\n+inline oop to_oop(zaddress addr) {\n+  assert_is_oop_or_null(addr);\n+  return cast_to_oop(addr);\n@@ -381,1 +402,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zAddress.inline.hpp","additions":25,"deletions":5,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -748,1 +748,1 @@\n-  assert(!ZVerifyOops || oopDesc::is_oop(to_oop(addr), false), \"must be oop\");\n+  assert_is_oop(addr);\n@@ -760,1 +760,1 @@\n-  assert(!ZVerifyOops || oopDesc::is_oop(to_oop(addr), false), \"must be oop\");\n+  assert_is_oop(addr);\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrier.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -433,1 +433,1 @@\n-  assert_is_valid(to_zaddress(src));\n+  check_is_valid_zaddress(src);\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrierSet.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-    assert_is_valid(to_zaddress(o));\n+    check_is_valid_zaddress(o);\n","filename":"src\/hotspot\/share\/gc\/z\/zHeapIterator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -368,1 +368,1 @@\n-  assert_is_valid(to_zaddress(obj));\n+  check_is_valid_zaddress(obj);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-  assert(!ZVerifyOops || oopDesc::is_oop(to_oop(addr)), \"Should be oop\");\n+  assert_is_oop(addr);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -314,1 +314,1 @@\n-  (void)to_oop(addr);\n+  assert_is_oop(addr);\n","filename":"src\/hotspot\/share\/gc\/z\/zPage.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,1 +146,1 @@\n-    (void)to_zaddress(referent);\n+    check_is_valid_zaddress(referent);\n","filename":"src\/hotspot\/share\/gc\/z\/zReferenceProcessor.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-#include \"gc\/z\/zUtils.hpp\"\n+#include \"gc\/z\/zUtils.inline.hpp\"\n@@ -367,1 +367,1 @@\n-  _base = ZUtils::alloc_aligned(ZCacheLineSize, size);\n+  _base = ZUtils::alloc_aligned_unfreeable(ZCacheLineSize, size);\n","filename":"src\/hotspot\/share\/gc\/z\/zStat.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-  static uintptr_t alloc_aligned(size_t alignment, size_t size);\n+  static uintptr_t alloc_aligned_unfreeable(size_t alignment, size_t size);\n","filename":"src\/hotspot\/share\/gc\/z\/zUtils.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"runtime\/os.hpp\"\n@@ -36,0 +37,12 @@\n+inline uintptr_t ZUtils::alloc_aligned_unfreeable(size_t alignment, size_t size) {\n+  const size_t padded_size = size + (alignment - 1);\n+  void* const addr = os::malloc(padded_size, mtGC);\n+  void* const aligned_addr = align_up(addr, alignment);\n+\n+  memset(aligned_addr, 0, size);\n+\n+  \/\/ Since free expects pointers returned by malloc, aligned_addr cannot be\n+  \/\/ freed since it is most likely not the same as addr after alignment.\n+  return (uintptr_t)aligned_addr;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zUtils.inline.hpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-#include \"gc\/z\/zUtils.hpp\"\n+#include \"gc\/z\/zUtils.inline.hpp\"\n@@ -61,1 +61,1 @@\n-  _top = ZUtils::alloc_aligned(block_alignment, block_size);\n+  _top = ZUtils::alloc_aligned_unfreeable(block_alignment, block_size);\n","filename":"src\/hotspot\/share\/gc\/z\/zValue.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -114,0 +114,10 @@\n+static void z_verify_oop_object(zaddress addr, zpointer o, void* p) {\n+  const oop obj = cast_to_oop(addr);\n+  guarantee(oopDesc::is_oop(obj), BAD_OOP_ARG(o, p));\n+}\n+\n+static void z_verify_root_oop_object(zaddress addr, void* p) {\n+  const oop obj = cast_to_oop(addr);\n+  guarantee(oopDesc::is_oop(obj), BAD_OOP_ARG(addr, p));\n+}\n+\n@@ -124,1 +134,1 @@\n-      guarantee(oopDesc::is_oop(to_oop(addr)), BAD_OOP_ARG(o, p));\n+      z_verify_oop_object(addr, o, p);\n@@ -146,1 +156,1 @@\n-      guarantee(oopDesc::is_oop(to_oop(ZPointer::uncolor(o))), BAD_OOP_ARG(o, p));\n+      z_verify_oop_object(ZPointer::uncolor(o), o, p);\n@@ -151,4 +161,0 @@\n-static void z_verify_root_oop_object(zaddress o, void* p) {\n-  guarantee(oopDesc::is_oop(to_oop(o)), BAD_OOP_ARG(o, p));\n-}\n-\n@@ -171,1 +177,1 @@\n-    guarantee(oopDesc::is_oop(to_oop(addr)), BAD_OOP_ARG(o, p));\n+    z_verify_oop_object(addr, o, p);\n@@ -214,1 +220,1 @@\n-      z_verify_root_oop_object(addr, p);\n+      z_verify_oop_object(addr, o, p);\n@@ -221,1 +227,1 @@\n-        z_verify_root_oop_object(addr, p);\n+        z_verify_oop_object(addr, o, p);\n","filename":"src\/hotspot\/share\/gc\/z\/zVerify.cpp","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -886,0 +886,9 @@\n+  if (is_initial_typeset_for_chunk()) {\n+    CldPtr bootloader = get_cld(Universe::boolArrayKlass());\n+    assert(bootloader != nullptr, \"invariant\");\n+    if (IS_NOT_SERIALIZED(bootloader)) {\n+      write__cld(_writer, bootloader);\n+      assert(IS_SERIALIZED(bootloader), \"invariant\");\n+      cldw.add(1);\n+    }\n+  }\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -642,5 +642,1 @@\n-  const size_t storage_elements = flush_storage(_storage, _chunkwriter);\n-  if (0 == storage_elements) {\n-    return total_elements;\n-  }\n-  total_elements += storage_elements;\n+  total_elements = flush_storage(_storage, _chunkwriter);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrRecorderService.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -139,1 +139,3 @@\n-  assert(h_array_list.not_null(), \"invariant\");\n+  if (h_array_list.is_null()) {\n+    return empty_java_util_arraylist;\n+  }\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrJdkJfrEvent.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -552,2 +552,2 @@\n-    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(),\n-        err_msg(\"Expected interface type, got %s\", klass->external_name()));\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                   err_msg(\"Expected interface type, got %s\", klass->external_name()));\n@@ -592,1 +592,1 @@\n-    JVMCI_THROW_MSG_0(InternalError, err_msg(\"Primitive type %s should be handled in Java code\", str));\n+    JVMCI_THROW_MSG_NULL(InternalError, err_msg(\"Primitive type %s should be handled in Java code\", str));\n@@ -601,2 +601,2 @@\n-      THROW_MSG_0(vmSymbols::java_lang_Exception(),\n-                  err_msg(\"lookupTypeException: %s\", str));\n+      THROW_MSG_NULL(vmSymbols::java_lang_Exception(),\n+                     err_msg(\"lookupTypeException: %s\", str));\n@@ -620,1 +620,1 @@\n-        JVMCI_THROW_MSG_0(InternalError, err_msg(\"Illegal class loader value: %d\", accessing_klass_loader));\n+        JVMCI_THROW_MSG_NULL(InternalError, err_msg(\"Illegal class loader value: %d\", accessing_klass_loader));\n@@ -663,1 +663,1 @@\n-    BasicType type = JVMCIENV->typeCharToBasicType(type_char, JVMCI_CHECK_0);\n+    BasicType type = JVMCIENV->typeCharToBasicType(type_char, JVMCI_CHECK_NULL);\n@@ -815,1 +815,1 @@\n-    JVMCI_THROW_MSG_0(IllegalArgumentException, err_msg(\"Unexpected constant pool tag at index %d: %d\", index, tag.value()));\n+    JVMCI_THROW_MSG_NULL(IllegalArgumentException, err_msg(\"Unexpected constant pool tag at index %d: %d\", index, tag.value()));\n@@ -1972,1 +1972,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -1976,1 +1976,1 @@\n-    JVMCI_THROW_MSG_0(InternalError, err_msg(\"Class %s must be instance klass\", klass->external_name()));\n+    JVMCI_THROW_MSG_NULL(InternalError, err_msg(\"Class %s must be instance klass\", klass->external_name()));\n@@ -1996,1 +1996,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2005,2 +2005,2 @@\n-    JVMCI_THROW_MSG_0(NullPointerException,\n-                    err_msg(\"Component mirror for array class %s is null\", klass->external_name()))\n+    JVMCI_THROW_MSG_NULL(NullPointerException,\n+                         err_msg(\"Component mirror for array class %s is null\", klass->external_name()))\n@@ -2109,1 +2109,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2123,1 +2123,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2168,1 +2168,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2195,1 +2195,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2222,1 +2222,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2349,1 +2349,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2399,1 +2399,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2419,1 +2419,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2438,1 +2438,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2460,1 +2460,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2546,1 +2546,1 @@\n-      JVMCI_THROW_MSG_0(InternalError, err_msg(\"Error initializing JVMCI runtime %d\", runtime->id()));\n+      JVMCI_THROW_MSG_NULL(InternalError, err_msg(\"Error initializing JVMCI runtime %d\", runtime->id()));\n@@ -2551,1 +2551,1 @@\n-    JVMCI_THROW_0(NullPointerException);\n+    JVMCI_THROW_NULL(NullPointerException);\n@@ -2555,1 +2555,1 @@\n-    JVMCI_THROW_MSG_0(IllegalArgumentException, \"clazz is for primitive type\");\n+    JVMCI_THROW_MSG_NULL(IllegalArgumentException, \"clazz is for primitive type\");\n@@ -2590,1 +2590,1 @@\n-          JVMCI_THROW_MSG_0(UnsatisfiedLinkError, err_msg(\"%s [neither %s nor %s exist in %s]\",\n+          JVMCI_THROW_MSG_NULL(UnsatisfiedLinkError, err_msg(\"%s [neither %s nor %s exist in %s]\",\n@@ -2597,1 +2597,1 @@\n-        JVMCI_THROW_MSG_0(UnsatisfiedLinkError, err_msg(\"%s [cannot re-link from \" PTR_FORMAT \" to \" PTR_FORMAT \"]\",\n+        JVMCI_THROW_MSG_NULL(UnsatisfiedLinkError, err_msg(\"%s [cannot re-link from \" PTR_FORMAT \" to \" PTR_FORMAT \"]\",\n@@ -2608,1 +2608,1 @@\n-  typeArrayOop info_oop = oopFactory::new_longArray(4, CHECK_0);\n+  typeArrayOop info_oop = oopFactory::new_longArray(4, CHECK_NULL);\n@@ -2610,1 +2610,1 @@\n-  runtime->init_JavaVM_info(info, JVMCI_CHECK_0);\n+  runtime->init_JavaVM_info(info, JVMCI_CHECK_NULL);\n@@ -3157,2 +3157,2 @@\n-  THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(),\n-              err_msg(\"%d is not a valid thread local id\", id));\n+  THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                 err_msg(\"%d is not a valid thread local id\", id));\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -181,2 +181,0 @@\n-\n-  #undef assrt0n\n","filename":"src\/hotspot\/share\/memory\/metaspace\/blockTree.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-  assert_is_aligned((p), metaspace::AllocationAlignmentByteSize);\n+  assert_is_aligned((p), metaspace::AllocationAlignmentByteSize)\n@@ -144,2 +144,2 @@\n-#define UL(level, message)        log_##level(metaspace)(LOGFMT \": \" message, LOGFMT_ARGS);\n-#define UL2(level, message, ...)  log_##level(metaspace)(LOGFMT \": \" message, LOGFMT_ARGS, __VA_ARGS__);\n+#define UL(level, message)        log_##level(metaspace)(LOGFMT \": \" message, LOGFMT_ARGS)\n+#define UL2(level, message, ...)  log_##level(metaspace)(LOGFMT \": \" message, LOGFMT_ARGS, __VA_ARGS__)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceCommon.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-    size_t hs = length_offset_in_bytes() + sizeof(int);\n+    int hs = length_offset_in_bytes() + (int)sizeof(int);\n@@ -74,1 +74,1 @@\n-    static size_t arrayoopdesc_hs = 0;\n+    static int arrayoopdesc_hs = 0;\n@@ -86,1 +86,1 @@\n-                               sizeof(arrayOopDesc);\n+                               (int)sizeof(arrayOopDesc);\n@@ -91,2 +91,2 @@\n-    size_t hs = header_size_in_bytes();\n-    return (int)(element_type_should_be_aligned(type) ? align_up(hs, BytesPerLong) : hs);\n+    int hs = header_size_in_bytes();\n+    return element_type_should_be_aligned(type) ? align_up(hs, BytesPerLong) : hs;\n@@ -137,1 +137,1 @@\n-    size_t hdr_size_in_bytes = base_offset_in_bytes(type);\n+    int hdr_size_in_bytes = base_offset_in_bytes(type);\n@@ -139,1 +139,1 @@\n-    size_t hdr_size_in_words = align_up(hdr_size_in_bytes, HeapWordSize) \/ HeapWordSize;\n+    int hdr_size_in_words = align_up(hdr_size_in_bytes, HeapWordSize) \/ HeapWordSize;\n@@ -142,1 +142,1 @@\n-      align_down((SIZE_MAX\/HeapWordSize - hdr_size_in_words), MinObjAlignment);\n+      align_down((SIZE_MAX\/HeapWordSize - (size_t)hdr_size_in_words), MinObjAlignment);\n@@ -144,1 +144,1 @@\n-      HeapWordSize * max_element_words_per_size_t \/ type2aelembytes(type);\n+      HeapWordSize * max_element_words_per_size_t \/ (size_t)type2aelembytes(type);\n","filename":"src\/hotspot\/share\/oops\/arrayOop.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -309,0 +309,1 @@\n+    assert(secondaries->length() >= (int)population_count(bitmap), \"must be\");\n@@ -347,5 +348,6 @@\n-  \/\/ For performance reasons we don't use a hashed table unless there\n-  \/\/ are at least two empty slots in it. If there were only one empty\n-  \/\/ slot it'd take a long time to create the table and the resulting\n-  \/\/ search would be no faster than linear probing.\n-  if (length > SECONDARY_SUPERS_TABLE_SIZE - 2) {\n+  \/\/ Invariant: _secondary_supers.length >= population_count(_secondary_supers_bitmap)\n+\n+  \/\/ Don't attempt to hash a table that's completely full, because in\n+  \/\/ the case of an absent interface linear probing would not\n+  \/\/ terminate.\n+  if (length >= SECONDARY_SUPERS_TABLE_SIZE) {\n@@ -791,0 +793,1 @@\n+  assert(secondary_supers()->length() >= (int)population_count(_bitmap), \"must be\");\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -155,0 +155,11 @@\n+\/\/------------------------------ForwardExceptionNode---------------------------\n+\/\/ Pop stack frame and jump to StubRoutines::forward_exception_entry()\n+class ForwardExceptionNode : public ReturnNode {\n+public:\n+  ForwardExceptionNode(Node* cntrl, Node* i_o, Node* memory, Node* frameptr, Node* retadr)\n+    : ReturnNode(TypeFunc::Parms, cntrl, i_o, memory, frameptr, retadr) {\n+  }\n+\n+  virtual int Opcode() const;\n+};\n+\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -187,0 +187,1 @@\n+macro(ForwardException)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -242,0 +242,1 @@\n+  case Op_ForwardException:\n","filename":"src\/hotspot\/share\/opto\/domgraph.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2034,0 +2034,1 @@\n+  case Op_ForwardException:\n@@ -2087,0 +2088,1 @@\n+  case Op_ForwardException:\n@@ -2132,0 +2134,1 @@\n+  case Op_ForwardException:\n","filename":"src\/hotspot\/share\/opto\/gcm.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -258,7 +258,5 @@\n-  Node *exc_target = makecon(TypeRawPtr::make( StubRoutines::forward_exception_entry() ));\n-  Node *to_exc = new TailCallNode(if_not_null,\n-                                  i_o(),\n-                                  exit_memory,\n-                                  frameptr(),\n-                                  returnadr(),\n-                                  exc_target, null());\n+  Node *to_exc = new ForwardExceptionNode(if_not_null,\n+                                          i_o(),\n+                                          exit_memory,\n+                                          frameptr(),\n+                                          returnadr());\n","filename":"src\/hotspot\/share\/opto\/generateOptoStub.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n-jdouble MachOper::constantD() const { ShouldNotReachHere(); return 0.0; }\n-jfloat  MachOper::constantF() const { ShouldNotReachHere(); return 0.0; }\n-jlong   MachOper::constantL() const { ShouldNotReachHere(); return CONST64(0) ; }\n+jdouble MachOper::constantD() const { ShouldNotReachHere(); }\n+jfloat  MachOper::constantF() const { ShouldNotReachHere(); }\n+jlong   MachOper::constantL() const { ShouldNotReachHere(); }\n@@ -65,2 +65,2 @@\n-Label*   MachOper::label()  const { ShouldNotReachHere(); return 0; }\n-intptr_t MachOper::method() const { ShouldNotReachHere(); return 0; }\n+Label*   MachOper::label()  const { ShouldNotReachHere(); }\n+intptr_t MachOper::method() const { ShouldNotReachHere(); }\n@@ -83,1 +83,0 @@\n-  return nullptr;\n@@ -96,1 +95,0 @@\n-  return 5;\n@@ -103,1 +101,0 @@\n-  return opcode() == oper.opcode();\n@@ -210,1 +207,0 @@\n-  return nullptr;\n","filename":"src\/hotspot\/share\/opto\/machnode.cpp","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -807,0 +807,4 @@\n+  \/\/ Input RegMask array shared by all ForwardExceptions\n+  uint forw_exc_edge_cnt = TypeFunc::Parms;\n+  RegMask* forw_exc_rms  = init_input_masks( forw_exc_edge_cnt + soe_cnt, _return_addr_mask, c_frame_ptr_mask );\n+\n@@ -866,0 +870,1 @@\n+      case Op_ForwardException: exit->_in_rms = forw_exc_rms; break;\n@@ -885,0 +890,1 @@\n+      forw_exc_rms [ forw_exc_edge_cnt] = mreg2regmask[i];\n@@ -902,0 +908,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt].Insert(OptoReg::Name(i+1));\n@@ -914,0 +921,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt] = RegMask::Empty;\n@@ -928,0 +936,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt].Insert(OptoReg::Name(i+1));\n@@ -940,0 +949,1 @@\n+        forw_exc_rms [ forw_exc_edge_cnt] = RegMask::Empty;\n@@ -951,0 +961,1 @@\n+      forw_exc_edge_cnt++;\n@@ -954,1 +965,1 @@\n-      for( uint j=1; j < root->req(); j++ )\n+      for (uint j=1; j < root->req(); j++) {\n@@ -956,0 +967,1 @@\n+      }\n@@ -1073,0 +1085,1 @@\n+    case Op_ForwardException:\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -837,0 +837,1 @@\n+#ifdef ASSERT\n@@ -838,0 +839,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -694,3 +694,1 @@\n-  BasicType longer_bt = longer_type_for_conversion(s1);\n-  if (Matcher::max_vector_size_auto_vectorization(bt1) < 2 ||\n-      (longer_bt != T_ILLEGAL && Matcher::max_vector_size_auto_vectorization(longer_bt) < 2)) {\n+  if (Matcher::max_vector_size_auto_vectorization(bt1) < 2) {\n@@ -2275,1 +2273,1 @@\n-  for (uint i = 1; i < pack->size(); i++) {\n+  for (uint i = 0; i < pack->size(); i++) {\n@@ -2445,21 +2443,0 @@\n-BasicType SuperWord::longer_type_for_conversion(Node* n) const {\n-  if (!(VectorNode::is_convert_opcode(n->Opcode()) ||\n-        VectorNode::is_scalar_op_that_returns_int_but_vector_op_returns_long(n->Opcode())) ||\n-      !in_bb(n->in(1))) {\n-    return T_ILLEGAL;\n-  }\n-  assert(in_bb(n), \"must be in the bb\");\n-  BasicType src_t = velt_basic_type(n->in(1));\n-  BasicType dst_t = velt_basic_type(n);\n-  \/\/ Do not use superword for non-primitives.\n-  \/\/ Superword does not support casting involving unsigned types.\n-  if (!is_java_primitive(src_t) || is_unsigned_subword_type(src_t) ||\n-      !is_java_primitive(dst_t) || is_unsigned_subword_type(dst_t)) {\n-    return T_ILLEGAL;\n-  }\n-  int src_size = type2aelembytes(src_t);\n-  int dst_size = type2aelembytes(dst_t);\n-  return src_size == dst_size ? T_ILLEGAL\n-                              : (src_size > dst_size ? src_t : dst_t);\n-}\n-\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":2,"deletions":25,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -626,3 +626,0 @@\n-  \/\/ Return the longer type for vectorizable type-conversion node or illegal type for other nodes.\n-  BasicType longer_type_for_conversion(Node* n) const;\n-\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-\/\/ *.include.hpp, since including them decreased build performance.\n+\/\/ *.inline.hpp, since including them decreased build performance.\n","filename":"src\/hotspot\/share\/precompiled\/precompiled.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -932,3 +932,2 @@\n-    if (_thread->is_in_any_VTMS_transition()) {\n-      return; \/\/ no events should be posted if thread is in any VTMS transition\n-    }\n+    assert(!_thread->is_in_any_VTMS_transition(), \"CFLH events are not allowed in any VTMS transition\");\n+\n@@ -1094,2 +1093,3 @@\n-  if (JavaThread::current()->is_in_tmp_VTMS_transition()) {\n-    return false; \/\/ skip CFLH events in tmp VTMS transition\n+\n+  if (JavaThread::current()->is_in_any_VTMS_transition()) {\n+    return false; \/\/ no events should be posted if thread is in any VTMS transition\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -803,0 +803,1 @@\n+    ResourceMark rm(THREAD);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+#include \"utilities\/checkedCast.hpp\"\n@@ -1121,1 +1122,1 @@\n-  size_t offset = pointer_delta(dest, aligned_dest, 1);\n+  uint32_t offset = checked_cast<uint32_t>(pointer_delta(dest, aligned_dest, 1));\n","filename":"src\/hotspot\/share\/runtime\/atomic.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -390,0 +390,1 @@\n+#ifdef ASSERT\n@@ -391,0 +392,1 @@\n+#endif\n@@ -441,0 +443,1 @@\n+#ifndef PRODUCT\n@@ -443,0 +446,1 @@\n+#endif\n@@ -495,0 +499,1 @@\n+#ifdef ASSERT\n@@ -498,0 +503,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/frame.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,0 +156,1 @@\n+#ifndef PRODUCT\n@@ -159,4 +160,0 @@\n-  void set_async(bool value)        { NOT_PRODUCT(_async = value;) }\n-  void set_skip_missing(bool value) { NOT_PRODUCT(_skip_missing = value;) }\n-\n-#ifndef PRODUCT\n@@ -169,0 +166,3 @@\n+  void set_async(bool value)        { NOT_PRODUCT(_async = value;) }\n+  void set_skip_missing(bool value) { NOT_PRODUCT(_skip_missing = value;) }\n+\n","filename":"src\/hotspot\/share\/runtime\/registerMap.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"sanitizers\/ub.hpp\"\n@@ -341,0 +342,1 @@\n+  ATTRIBUTE_NO_UBSAN\n","filename":"src\/hotspot\/share\/runtime\/signature.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -599,2 +599,2 @@\n-        assert(monitor->owner() == Thread::current(), \"must be owner=\" PTR_FORMAT \" current=\" PTR_FORMAT \" mark=\" PTR_FORMAT,\n-               p2i(monitor->owner()), p2i(Thread::current()), monitor->object()->mark_acquire().value());\n+        assert(monitor->owner() == locking_thread, \"must be owner=\" PTR_FORMAT \" locking_thread=\" PTR_FORMAT \" mark=\" PTR_FORMAT,\n+               p2i(monitor->owner()), p2i(locking_thread), monitor->object()->mark_acquire().value());\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1425,0 +1425,1 @@\n+  declare_c2_type(ForwardExceptionNode, ReturnNode)                       \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1823,1 +1823,1 @@\n-    THROW_(vmSymbols::java_lang_NullPointerException(), 0);\n+    THROW_NULL(vmSymbols::java_lang_NullPointerException());\n@@ -1831,2 +1831,2 @@\n-    THROW_MSG_(vmSymbols::java_lang_IllegalArgumentException(),\n-               \"The length of the given MemoryUsage array does not match the number of memory pools.\", 0);\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                   \"The length of the given MemoryUsage array does not match the number of memory pools.\");\n@@ -1839,2 +1839,2 @@\n-    THROW_MSG_(vmSymbols::java_lang_IllegalArgumentException(),\n-               \"The element type is not MemoryUsage class\", 0);\n+    THROW_MSG_NULL(vmSymbols::java_lang_IllegalArgumentException(),\n+                   \"The element type is not MemoryUsage class\");\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"utilities\/checkedCast.hpp\"\n@@ -66,1 +67,1 @@\n-    return (((x & UINT16_C(0x00ff)) << 8) | ((x & UINT16_C(0xff00)) >> 8));\n+    return checked_cast<uint16_t>(((x & UINT16_C(0x00ff)) << 8) | ((x & UINT16_C(0xff00)) >> 8));\n","filename":"src\/hotspot\/share\/utilities\/byteswap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,0 +85,4 @@\n+#ifndef PRAGMA_ZERO_AS_NULL_POINTER_CONSTANT_IGNORED\n+#define PRAGMA_ZERO_AS_NULL_POINTER_CONSTANT_IGNORED\n+#endif\n+\n","filename":"src\/hotspot\/share\/utilities\/compilerWarnings.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,0 +70,3 @@\n+#define PRAGMA_ZERO_AS_NULL_POINTER_CONSTANT_IGNORED \\\n+  PRAGMA_DISABLE_GCC_WARNING(\"-Wzero-as-null-pointer-constant\")\n+\n","filename":"src\/hotspot\/share\/utilities\/compilerWarnings_gcc.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+    DEBUG_ONLY(size_t _saved_hash);\n@@ -80,0 +81,4 @@\n+#ifdef ASSERT\n+    size_t saved_hash() const         { return _saved_hash; }\n+    void set_saved_hash(size_t hash)  { _saved_hash = hash; }\n+#endif\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -682,1 +682,3 @@\n-        fatal(\"aux_index does not match even or odd indices\");\n+        const char* msg = \"Cannot resize table: Node hash code has changed possibly due to corruption of the contents.\";\n+        DEBUG_ONLY(fatal(\"%s Node hash code changed from \" SIZE_FORMAT \" to \" SIZE_FORMAT, msg, aux->saved_hash(), aux_hash);)\n+        NOT_DEBUG(fatal(\"%s\", msg);)\n@@ -895,0 +897,1 @@\n+  DEBUG_ONLY(new_node->set_saved_hash(hash);)\n@@ -1120,0 +1123,1 @@\n+  DEBUG_ONLY(new_node->set_saved_hash(hash);)\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.inline.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -624,1 +624,1 @@\n-#if INCLUDE_CDS && INCLUDE_G1GC && defined(_LP64) && !defined(_WINDOWS)\n+#if INCLUDE_CDS && INCLUDE_G1GC && defined(_LP64)\n","filename":"src\/hotspot\/share\/utilities\/macros.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1275,1 +1275,1 @@\n-        if (cl != null && isCustomSubclass()) {\n+        if (isCustomSubclass()) {\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.lang.classfile.constantpool.DynamicConstantPoolEntry;\n@@ -37,1 +38,1 @@\n-import java.lang.constant.ConstantDesc;\n+import java.lang.constant.Constable;\n@@ -52,4 +53,1 @@\n-public sealed interface AnnotationValue\n-        permits AnnotationValue.OfAnnotation, AnnotationValue.OfArray,\n-                AnnotationValue.OfConstant, AnnotationValue.OfClass,\n-                AnnotationValue.OfEnum {\n+public sealed interface AnnotationValue {\n@@ -58,1 +56,2 @@\n-     * Models an annotation-valued element\n+     * Models an annotation-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_ANNOTATION}.\n@@ -65,1 +64,1 @@\n-        \/** {@return the annotation} *\/\n+        \/** {@return the annotation value} *\/\n@@ -70,1 +69,2 @@\n-     * Models an array-valued element\n+     * Models an array-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_ARRAY}.\n@@ -77,1 +77,7 @@\n-        \/** {@return the values} *\/\n+        \/**\n+         * {@return the array elements of the array value}\n+         *\n+         * @apiNote\n+         * All array elements derived from Java source code have the same type,\n+         * which must not be an array type. ({@jls 9.6.1})\n+         *\/\n@@ -82,1 +88,1 @@\n-     * Models a constant-valued element\n+     * Models a constant-valued element.\n@@ -88,7 +94,13 @@\n-    sealed interface OfConstant extends AnnotationValue\n-            permits AnnotationValue.OfString, AnnotationValue.OfDouble,\n-                    AnnotationValue.OfFloat, AnnotationValue.OfLong,\n-                    AnnotationValue.OfInteger, AnnotationValue.OfShort,\n-                    AnnotationValue.OfCharacter, AnnotationValue.OfByte,\n-                    AnnotationValue.OfBoolean, AnnotationImpl.OfConstantImpl {\n-        \/** {@return the constant} *\/\n+    sealed interface OfConstant\n+            extends AnnotationValue\n+            permits OfString, OfDouble, OfFloat, OfLong, OfInt, OfShort, OfChar, OfByte,\n+                    OfBoolean, AnnotationImpl.OfConstantImpl {\n+        \/**\n+         * {@return the constant pool entry backing this constant element}\n+         *\n+         * @apiNote\n+         * Different types of constant values may share the same type of entry.\n+         * For example, {@link OfInt} and {@link OfChar} are both\n+         * backed by {@link IntegerEntry}. Use {@link #resolvedValue\n+         * resolvedValue()} for a value of accurate type.\n+         *\/\n@@ -96,3 +108,0 @@\n-        \/** {@return the constant} *\/\n-        ConstantDesc constantValue();\n-    }\n@@ -100,2 +109,19 @@\n-    \/**\n-     * Models a constant-valued element\n+        \/**\n+         * {@return the resolved live constant value, as an object} The type of\n+         * the returned value may be a wrapper class or {@link String}.\n+         *\n+         * @apiNote\n+         * The returned object, despite being {@link Constable}, may not\n+         * {@linkplain Constable#describeConstable() describe} the right constant\n+         * for encoding the annotation value in a class file. For example,\n+         * {@link Character} returned by {@link OfChar} describes itself as a\n+         * {@link DynamicConstantPoolEntry}, but it is actually backed by\n+         * {@link IntegerEntry} in annotation format.\n+         * Use {@link #constant constant()} for a correct constant pool representation.\n+         *\/\n+        Constable resolvedValue();\n+    }\n+\n+    \/**\n+     * Models a string-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_STRING}.\n@@ -106,1 +132,1 @@\n-    sealed interface OfString extends AnnotationValue.OfConstant\n+    sealed interface OfString extends OfConstant\n@@ -108,1 +134,5 @@\n-        \/** {@return the constant} *\/\n+        \/** {@return the backing UTF8 entry} *\/\n+        @Override\n+        Utf8Entry constant();\n+\n+        \/** {@return the constant string value} *\/\n@@ -110,0 +140,11 @@\n+\n+        \/**\n+         * {@return the resolved string value}\n+         *\n+         * @implSpec\n+         * This method returns the same as {@link #stringValue()}.\n+         *\/\n+        @Override\n+        default String resolvedValue() {\n+            return stringValue();\n+        }\n@@ -113,1 +154,2 @@\n-     * Models a constant-valued element\n+     * Models a double-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_DOUBLE}.\n@@ -118,1 +160,1 @@\n-    sealed interface OfDouble extends AnnotationValue.OfConstant\n+    sealed interface OfDouble extends OfConstant\n@@ -120,1 +162,5 @@\n-        \/** {@return the constant} *\/\n+        \/** {@return the backing double entry} *\/\n+        @Override\n+        DoubleEntry constant();\n+\n+        \/** {@return the constant double value} *\/\n@@ -122,0 +168,11 @@\n+\n+        \/**\n+         * {@return the resolved double value}\n+         *\n+         * @implSpec\n+         * This method returns the same as {@link #doubleValue()}.\n+         *\/\n+        @Override\n+        default Double resolvedValue() {\n+            return doubleValue();\n+        }\n@@ -125,1 +182,2 @@\n-     * Models a constant-valued element\n+     * Models a float-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_FLOAT}.\n@@ -130,1 +188,1 @@\n-    sealed interface OfFloat extends AnnotationValue.OfConstant\n+    sealed interface OfFloat extends OfConstant\n@@ -132,1 +190,5 @@\n-        \/** {@return the constant} *\/\n+        \/** {@return the backing float entry} *\/\n+        @Override\n+        FloatEntry constant();\n+\n+        \/** {@return the constant float value} *\/\n@@ -134,0 +196,11 @@\n+\n+        \/**\n+         * {@return the resolved float value}\n+         *\n+         * @implSpec\n+         * This method returns the same as {@link #floatValue()}.\n+         *\/\n+        @Override\n+        default Float resolvedValue() {\n+            return floatValue();\n+        }\n@@ -137,1 +210,2 @@\n-     * Models a constant-valued element\n+     * Models a long-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_LONG}.\n@@ -142,1 +216,1 @@\n-    sealed interface OfLong extends AnnotationValue.OfConstant\n+    sealed interface OfLong extends OfConstant\n@@ -144,1 +218,5 @@\n-        \/** {@return the constant} *\/\n+        \/** {@return the backing long entry} *\/\n+        @Override\n+        LongEntry constant();\n+\n+        \/** {@return the constant long value} *\/\n@@ -146,0 +224,11 @@\n+\n+        \/**\n+         * {@return the resolved long value}\n+         *\n+         * @implSpec\n+         * This method returns the same as {@link #longValue()}.\n+         *\/\n+        @Override\n+        default Long resolvedValue() {\n+            return longValue();\n+        }\n@@ -149,1 +238,2 @@\n-     * Models a constant-valued element\n+     * Models an int-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_INT}.\n@@ -154,3 +244,7 @@\n-    sealed interface OfInteger extends AnnotationValue.OfConstant\n-            permits AnnotationImpl.OfIntegerImpl {\n-        \/** {@return the constant} *\/\n+    sealed interface OfInt extends OfConstant\n+            permits AnnotationImpl.OfIntImpl {\n+        \/** {@return the backing integer entry} *\/\n+        @Override\n+        IntegerEntry constant();\n+\n+        \/** {@return the constant int value} *\/\n@@ -158,0 +252,11 @@\n+\n+        \/**\n+         * {@return the resolved int value}\n+         *\n+         * @implSpec\n+         * This method returns the same as {@link #intValue()}.\n+         *\/\n+        @Override\n+        default Integer resolvedValue() {\n+            return intValue();\n+        }\n@@ -161,1 +266,2 @@\n-     * Models a constant-valued element\n+     * Models a short-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_SHORT}.\n@@ -166,1 +272,1 @@\n-    sealed interface OfShort extends AnnotationValue.OfConstant\n+    sealed interface OfShort extends OfConstant\n@@ -168,1 +274,8 @@\n-        \/** {@return the constant} *\/\n+        \/** {@return the backing integer entry} *\/\n+        @Override\n+        IntegerEntry constant();\n+\n+        \/**\n+         * {@return the constant short value}\n+         * @jvms 2.11.1 Types and the Java Virtual Machine\n+         *\/\n@@ -170,0 +283,11 @@\n+\n+        \/**\n+         * {@return the resolved short value}\n+         *\n+         * @implSpec\n+         * This method returns the same as {@link #shortValue()}.\n+         *\/\n+        @Override\n+        default Short resolvedValue() {\n+            return shortValue();\n+        }\n@@ -173,1 +297,2 @@\n-     * Models a constant-valued element\n+     * Models a char-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_CHAR}.\n@@ -178,3 +303,10 @@\n-    sealed interface OfCharacter extends AnnotationValue.OfConstant\n-            permits AnnotationImpl.OfCharacterImpl {\n-        \/** {@return the constant} *\/\n+    sealed interface OfChar extends OfConstant\n+            permits AnnotationImpl.OfCharImpl {\n+        \/** {@return the backing integer entry} *\/\n+        @Override\n+        IntegerEntry constant();\n+\n+        \/**\n+         * {@return the constant char value}\n+         * @jvms 2.11.1 Types and the Java Virtual Machine\n+         *\/\n@@ -182,0 +314,11 @@\n+\n+        \/**\n+         * {@return the resolved char value}\n+         *\n+         * @implSpec\n+         * This method returns the same as {@link #charValue()}.\n+         *\/\n+        @Override\n+        default Character resolvedValue() {\n+            return charValue();\n+        }\n@@ -185,1 +328,2 @@\n-     * Models a constant-valued element\n+     * Models a byte-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_BYTE}.\n@@ -190,1 +334,1 @@\n-    sealed interface OfByte extends AnnotationValue.OfConstant\n+    sealed interface OfByte extends OfConstant\n@@ -192,1 +336,8 @@\n-        \/** {@return the constant} *\/\n+        \/** {@return the backing integer entry} *\/\n+        @Override\n+        IntegerEntry constant();\n+\n+        \/**\n+         * {@return the constant byte value}\n+         * @jvms 2.11.1 Types and the Java Virtual Machine\n+         *\/\n@@ -194,0 +345,11 @@\n+\n+        \/**\n+         * {@return the resolved byte value}\n+         *\n+         * @implSpec\n+         * This method returns the same as {@link #byteValue()}.\n+         *\/\n+        @Override\n+        default Byte resolvedValue() {\n+            return byteValue();\n+        }\n@@ -197,1 +359,2 @@\n-     * Models a constant-valued element\n+     * Models a boolean-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_BOOLEAN}.\n@@ -202,1 +365,1 @@\n-    sealed interface OfBoolean extends AnnotationValue.OfConstant\n+    sealed interface OfBoolean extends OfConstant\n@@ -204,1 +367,8 @@\n-        \/** {@return the constant} *\/\n+        \/** {@return the backing integer entry} *\/\n+        @Override\n+        IntegerEntry constant();\n+\n+        \/**\n+         * {@return the constant boolean value}\n+         * @jvms 2.3.4 The <i>boolean<\/i> Type\n+         *\/\n@@ -206,0 +376,11 @@\n+\n+        \/**\n+         * {@return the resolved boolean value}\n+         *\n+         * @implSpec\n+         * This method returns the same as {@link #booleanValue()}.\n+         *\/\n+        @Override\n+        default Boolean resolvedValue() {\n+            return booleanValue();\n+        }\n@@ -209,1 +390,2 @@\n-     * Models a class-valued element\n+     * Models a class-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_CLASS}.\n@@ -216,1 +398,1 @@\n-        \/** {@return the class name} *\/\n+        \/** {@return the class descriptor string} *\/\n@@ -219,1 +401,1 @@\n-        \/** {@return the class symbol} *\/\n+        \/** {@return the class descriptor} *\/\n@@ -226,1 +408,2 @@\n-     * Models an enum-valued element\n+     * Models an enum-valued element.\n+     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_ENUM}.\n@@ -233,1 +416,1 @@\n-        \/** {@return the enum class name} *\/\n+        \/** {@return the enum class descriptor string} *\/\n@@ -236,1 +419,1 @@\n-        \/** {@return the enum class symbol} *\/\n+        \/** {@return the enum class descriptor} *\/\n@@ -252,1 +435,1 @@\n-     * @param className the name of the enum class\n+     * @param className the descriptor string of the enum class\n@@ -262,1 +445,1 @@\n-     * @param className the name of the enum class\n+     * @param className the descriptor of the enum class\n@@ -272,1 +455,1 @@\n-     * @param className the name of the enum class\n+     * @param className the descriptor string of the class\n@@ -280,1 +463,1 @@\n-     * @param className the name of the enum class\n+     * @param className the descriptor of the class\n@@ -290,1 +473,1 @@\n-    static OfConstant ofString(Utf8Entry value) {\n+    static OfString ofString(Utf8Entry value) {\n@@ -298,1 +481,1 @@\n-    static OfConstant ofString(String value) {\n+    static OfString ofString(String value) {\n@@ -306,1 +489,1 @@\n-    static OfConstant ofDouble(DoubleEntry value) {\n+    static OfDouble ofDouble(DoubleEntry value) {\n@@ -314,1 +497,1 @@\n-    static OfConstant ofDouble(double value) {\n+    static OfDouble ofDouble(double value) {\n@@ -322,1 +505,1 @@\n-    static OfConstant ofFloat(FloatEntry value) {\n+    static OfFloat ofFloat(FloatEntry value) {\n@@ -330,1 +513,1 @@\n-    static OfConstant ofFloat(float value) {\n+    static OfFloat ofFloat(float value) {\n@@ -338,1 +521,1 @@\n-    static OfConstant ofLong(LongEntry value) {\n+    static OfLong ofLong(LongEntry value) {\n@@ -346,1 +529,1 @@\n-    static OfConstant ofLong(long value) {\n+    static OfLong ofLong(long value) {\n@@ -354,2 +537,2 @@\n-    static OfConstant ofInt(IntegerEntry value) {\n-        return new AnnotationImpl.OfIntegerImpl(value);\n+    static OfInt ofInt(IntegerEntry value) {\n+        return new AnnotationImpl.OfIntImpl(value);\n@@ -362,1 +545,1 @@\n-    static OfConstant ofInt(int value) {\n+    static OfInt ofInt(int value) {\n@@ -370,1 +553,1 @@\n-    static OfConstant ofShort(IntegerEntry value) {\n+    static OfShort ofShort(IntegerEntry value) {\n@@ -378,1 +561,1 @@\n-    static OfConstant ofShort(short value) {\n+    static OfShort ofShort(short value) {\n@@ -386,2 +569,2 @@\n-    static OfConstant ofChar(IntegerEntry value) {\n-        return new AnnotationImpl.OfCharacterImpl(value);\n+    static OfChar ofChar(IntegerEntry value) {\n+        return new AnnotationImpl.OfCharImpl(value);\n@@ -394,1 +577,1 @@\n-    static OfConstant ofChar(char value) {\n+    static OfChar ofChar(char value) {\n@@ -402,1 +585,1 @@\n-    static OfConstant ofByte(IntegerEntry value) {\n+    static OfByte ofByte(IntegerEntry value) {\n@@ -410,1 +593,1 @@\n-    static OfConstant ofByte(byte value) {\n+    static OfByte ofByte(byte value) {\n@@ -418,1 +601,1 @@\n-    static OfConstant ofBoolean(IntegerEntry value) {\n+    static OfBoolean ofBoolean(IntegerEntry value) {\n@@ -426,1 +609,1 @@\n-    static OfConstant ofBoolean(boolean value) {\n+    static OfBoolean ofBoolean(boolean value) {\n@@ -441,1 +624,1 @@\n-     * @param values the values\n+     * @param values the array elements\n@@ -449,1 +632,1 @@\n-     * @param values the values\n+     * @param values the array elements\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/AnnotationValue.java","additions":265,"deletions":82,"binary":false,"changes":347,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import java.lang.classfile.AnnotationValue;\n@@ -31,2 +32,4 @@\n- * A constant pool entry that may be used as an annotation constant,\n- * which includes the four kinds of primitive constants, and UTF8 constants.\n+ * A constant pool entry that may be used by annotation constant values,\n+ * which includes the four kinds of primitive constants and UTF8 constants.\n+ * These entries are also the only entries that do not refer to other\n+ * constant pool entries.\n@@ -34,0 +37,7 @@\n+ * @apiNote\n+ * An annotation constant value entry alone is not sufficient to determine\n+ * the annotation constant; for example, an {@link IntegerEntry} of {@code 1}\n+ * can mean {@code true} in {@link AnnotationValue.OfBoolean} or {@code 1}\n+ * in {@link AnnotationValue.OfInt}.\n+ *\n+ * @see AnnotationValue.OfConstant\n@@ -43,1 +53,2 @@\n-     * {@link Long}, {@link Float}, {@link Double}, or {@link String}.\n+     * {@link Long}, {@link Float}, {@link Double} for the primitive constants,\n+     * or {@link String} for UTF8 constants.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/constantpool\/AnnotationConstantValueEntry.java","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -511,19 +511,0 @@\n-    }\n-\n-    \/**\n-     * {@return An {@link AnnotationConstantValueEntry} describing the provided\n-     * constant}  The constant should be an Integer, String, Long, Float,\n-     * Double, ClassDesc (for a Class constant), or MethodTypeDesc (for a MethodType\n-     * constant.)\n-     *\n-     * @param c the constant\n-     *\/\n-    default AnnotationConstantValueEntry annotationConstantValueEntry(ConstantDesc c) {\n-        if (c instanceof Integer i) return intEntry(i);\n-        if (c instanceof String s) return utf8Entry(s);\n-        if (c instanceof Long l) return longEntry(l);\n-        if (c instanceof Float f) return floatEntry(f);\n-        if (c instanceof Double d) return doubleEntry(d);\n-        if (c instanceof ClassDesc cd) return utf8Entry(cd);\n-        if (c instanceof MethodTypeDesc mtd) return utf8Entry(mtd);\n-        throw new IllegalArgumentException(\"Illegal type: \" + (c == null ? null : c.getClass()));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/constantpool\/ConstantPoolBuilder.java","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * modifying Java class files, as specified in Chapter {@jvms 4} of the <cite>Java\n- * Java Virtual Machine Specification<\/cite>.\n+ * modifying Java class files, as specified in Chapter {@jvms 4} of the\n+ * <cite>Java Virtual Machine Specification<\/cite>.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/package-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n- *    <td>{@link #getFirst() getFirst()}<\/td>\n+ *    <td>{@link #peekFirst() peekFirst()}<\/td>\n","filename":"src\/java.base\/share\/classes\/java\/util\/Deque.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,0 +103,2 @@\n+    private static final Object[] EMPTY_ELEMENTDATA = {};\n+\n@@ -131,1 +133,1 @@\n-        setArray(new Object[0]);\n+        setArray(EMPTY_ELEMENTDATA);\n@@ -146,0 +148,2 @@\n+        else if (c.isEmpty())\n+            es = EMPTY_ELEMENTDATA;\n@@ -162,1 +166,4 @@\n-        setArray(Arrays.copyOf(toCopyIn, toCopyIn.length, Object[].class));\n+        if (toCopyIn.length == 0)\n+            setArray(EMPTY_ELEMENTDATA);\n+        else\n+            setArray(Arrays.copyOf(toCopyIn, toCopyIn.length, Object[].class));\n@@ -536,0 +543,2 @@\n+            else if (len == 1)\n+                newElements = EMPTY_ELEMENTDATA;\n@@ -621,0 +630,5 @@\n+            if (len == 1) {\n+                \/\/ one element exists and that element should be removed\n+                setArray(EMPTY_ELEMENTDATA);\n+                return true;\n+            }\n@@ -807,1 +821,1 @@\n-            setArray(new Object[0]);\n+            setArray(EMPTY_ELEMENTDATA);\n@@ -1025,1 +1039,1 @@\n-        Object[] es = new Object[len];\n+        Object[] es = (len == 0 ? EMPTY_ELEMENTDATA : new Object[len]);\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/CopyOnWriteArrayList.java","additions":18,"deletions":4,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -372,1 +372,0 @@\n-                long nanos;\n@@ -374,6 +373,12 @@\n-                if (!timed)\n-                    LockSupport.park(this);\n-                else if ((nanos = time - System.nanoTime()) > 0L)\n-                    LockSupport.parkNanos(this, nanos);\n-                else\n-                    break;\n+                try {\n+                    long nanos;\n+                    if (!timed)\n+                        LockSupport.park(this);\n+                    else if ((nanos = time - System.nanoTime()) > 0L)\n+                        LockSupport.parkNanos(this, nanos);\n+                    else\n+                        break;\n+                } catch (Error | RuntimeException ex) {\n+                    cancelAcquire(node, interrupted, interruptible); \/\/ cancel & rethrow\n+                    throw ex;\n+                }\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedLongSynchronizer.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -751,1 +751,0 @@\n-                long nanos;\n@@ -753,6 +752,12 @@\n-                if (!timed)\n-                    LockSupport.park(this);\n-                else if ((nanos = time - System.nanoTime()) > 0L)\n-                    LockSupport.parkNanos(this, nanos);\n-                else\n-                    break;\n+                try {\n+                    long nanos;\n+                    if (!timed)\n+                        LockSupport.park(this);\n+                    else if ((nanos = time - System.nanoTime()) > 0L)\n+                        LockSupport.parkNanos(this, nanos);\n+                    else\n+                        break;\n+                } catch (Error | RuntimeException ex) {\n+                    cancelAcquire(node, interrupted, interruptible); \/\/ cancel & rethrow\n+                    throw ex;\n+                }\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedSynchronizer.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.lang.constant.ConstantDesc;\n@@ -83,6 +82,1 @@\n-    public sealed interface OfConstantImpl extends AnnotationValue.OfConstant, Util.Writable\n-            permits AnnotationImpl.OfStringImpl, AnnotationImpl.OfDoubleImpl,\n-                    AnnotationImpl.OfFloatImpl, AnnotationImpl.OfLongImpl,\n-                    AnnotationImpl.OfIntegerImpl, AnnotationImpl.OfShortImpl,\n-                    AnnotationImpl.OfCharacterImpl, AnnotationImpl.OfByteImpl,\n-                    AnnotationImpl.OfBooleanImpl {\n+    public sealed interface OfConstantImpl extends AnnotationValue.OfConstant, Util.Writable {\n@@ -96,5 +90,0 @@\n-        @Override\n-        default ConstantDesc constantValue() {\n-            return constant().constantValue();\n-        }\n-\n@@ -104,1 +93,1 @@\n-            implements AnnotationImpl.OfConstantImpl, AnnotationValue.OfString {\n+            implements OfConstantImpl, AnnotationValue.OfString {\n@@ -118,1 +107,1 @@\n-            implements AnnotationImpl.OfConstantImpl, AnnotationValue.OfDouble {\n+            implements OfConstantImpl, AnnotationValue.OfDouble {\n@@ -132,1 +121,1 @@\n-            implements AnnotationImpl.OfConstantImpl, AnnotationValue.OfFloat {\n+            implements OfConstantImpl, AnnotationValue.OfFloat {\n@@ -146,1 +135,1 @@\n-            implements AnnotationImpl.OfConstantImpl, AnnotationValue.OfLong {\n+            implements OfConstantImpl, AnnotationValue.OfLong {\n@@ -159,2 +148,2 @@\n-    public record OfIntegerImpl(IntegerEntry constant)\n-            implements AnnotationImpl.OfConstantImpl, AnnotationValue.OfInteger {\n+    public record OfIntImpl(IntegerEntry constant)\n+            implements OfConstantImpl, AnnotationValue.OfInt {\n@@ -174,1 +163,1 @@\n-            implements AnnotationImpl.OfConstantImpl, AnnotationValue.OfShort {\n+            implements OfConstantImpl, AnnotationValue.OfShort {\n@@ -183,1 +172,1 @@\n-            return (short)constant().intValue();\n+            return (short) constant().intValue();\n@@ -187,2 +176,2 @@\n-    public record OfCharacterImpl(IntegerEntry constant)\n-            implements AnnotationImpl.OfConstantImpl, AnnotationValue.OfCharacter {\n+    public record OfCharImpl(IntegerEntry constant)\n+            implements OfConstantImpl, AnnotationValue.OfChar {\n@@ -197,1 +186,1 @@\n-            return (char)constant().intValue();\n+            return (char) constant().intValue();\n@@ -202,1 +191,1 @@\n-            implements AnnotationImpl.OfConstantImpl, AnnotationValue.OfByte {\n+            implements OfConstantImpl, AnnotationValue.OfByte {\n@@ -211,1 +200,1 @@\n-            return (byte)constant().intValue();\n+            return (byte) constant().intValue();\n@@ -216,1 +205,1 @@\n-            implements AnnotationImpl.OfConstantImpl, AnnotationValue.OfBoolean {\n+            implements OfConstantImpl, AnnotationValue.OfBoolean {\n@@ -225,1 +214,1 @@\n-            return constant().intValue() == 1;\n+            return constant().intValue() != 0;\n@@ -232,2 +221,2 @@\n-        public OfArrayImpl(List<AnnotationValue> values) {\n-            this.values = List.copyOf(values);\n+        public OfArrayImpl {\n+            values = List.copyOf(values);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AnnotationImpl.java","additions":18,"deletions":29,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-            case AEV_CHAR -> new AnnotationImpl.OfCharacterImpl(classReader.readEntry(p, IntegerEntry.class));\n+            case AEV_CHAR -> new AnnotationImpl.OfCharImpl(classReader.readEntry(p, IntegerEntry.class));\n@@ -66,1 +66,1 @@\n-            case AEV_INT -> new AnnotationImpl.OfIntegerImpl(classReader.readEntry(p, IntegerEntry.class));\n+            case AEV_INT -> new AnnotationImpl.OfIntImpl(classReader.readEntry(p, IntegerEntry.class));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AnnotationReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -510,9 +510,9 @@\n-            case OfString cv -> leafs(\"string\", String.valueOf(cv.constantValue()));\n-            case OfDouble cv -> leafs(\"double\", String.valueOf(cv.constantValue()));\n-            case OfFloat cv -> leafs(\"float\", String.valueOf(cv.constantValue()));\n-            case OfLong cv -> leafs(\"long\", String.valueOf(cv.constantValue()));\n-            case OfInteger cv -> leafs(\"int\", String.valueOf(cv.constantValue()));\n-            case OfShort cv -> leafs(\"short\", String.valueOf(cv.constantValue()));\n-            case OfCharacter cv -> leafs(\"char\", String.valueOf(cv.constantValue()));\n-            case OfByte cv -> leafs(\"byte\", String.valueOf(cv.constantValue()));\n-            case OfBoolean cv -> leafs(\"boolean\", String.valueOf((int)cv.constantValue() != 0));\n+            case OfString cv -> leafs(\"string\", String.valueOf(cv.stringValue()));\n+            case OfDouble cv -> leafs(\"double\", String.valueOf(cv.doubleValue()));\n+            case OfFloat cv -> leafs(\"float\", String.valueOf(cv.floatValue()));\n+            case OfLong cv -> leafs(\"long\", String.valueOf(cv.longValue()));\n+            case OfInt cv -> leafs(\"int\", String.valueOf(cv.intValue()));\n+            case OfShort cv -> leafs(\"short\", String.valueOf(cv.shortValue()));\n+            case OfChar cv -> leafs(\"char\", String.valueOf(cv.charValue()));\n+            case OfByte cv -> leafs(\"byte\", String.valueOf(cv.byteValue()));\n+            case OfBoolean cv -> leafs(\"boolean\", String.valueOf(cv.booleanValue()));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassPrinterImpl.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -222,1 +222,0 @@\n-        Objects.requireNonNull(key, \"key must not be null\");\n@@ -224,0 +223,7 @@\n+        return getNoCheckStale(key);\n+    }\n+\n+    \/\/ Internal get(key) without removing stale references that would modify the keyset.\n+    \/\/ Use when iterating or streaming over the keys to avoid ConcurrentModificationException.\n+    private V getNoCheckStale(Object key) {\n+        Objects.requireNonNull(key, \"key must not be null\");\n@@ -294,1 +300,1 @@\n-                .map(k -> new AbstractMap.SimpleEntry<>(k, get(k)))\n+                .map(k -> new AbstractMap.SimpleEntry<>(k, getNoCheckStale(k)))\n@@ -338,1 +344,1 @@\n-                .map(k -> k + \"=\" + get(k))\n+                .map(k -> k + \"=\" + getNoCheckStale(k))\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ReferencedKeyMap.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -677,1 +677,0 @@\n-                nanos = Long.MAX_VALUE;\n@@ -692,1 +691,3 @@\n-                    long remainingNanos = nanos - (System.nanoTime() - startNanos);\n+                    long remainingNanos = (nanos > 0)\n+                            ? nanos - (System.nanoTime() - startNanos)\n+                            : 0;\n@@ -759,3 +760,8 @@\n-                long remainingNanos = nanos - (System.nanoTime() - startNanos);\n-                if (remainingNanos <= 0) {\n-                    throw new SocketTimeoutException(\"Receive timed out\");\n+                if (nanos > 0) {\n+                    long remainingNanos = nanos - (System.nanoTime() - startNanos);\n+                    if (remainingNanos <= 0) {\n+                        throw new SocketTimeoutException(\"Receive timed out\");\n+                    }\n+                    park(Net.POLLIN, remainingNanos);\n+                } else {\n+                    park(Net.POLLIN);\n@@ -763,1 +769,0 @@\n-                park(Net.POLLIN, remainingNanos);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/DatagramChannelImpl.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,4 +54,30 @@\n-    \/** The modifier {@code public} *\/          PUBLIC,\n-    \/** The modifier {@code protected} *\/       PROTECTED,\n-    \/** The modifier {@code private} *\/         PRIVATE,\n-    \/** The modifier {@code abstract} *\/        ABSTRACT,\n+    \/**\n+     * The modifier {@code public}\n+     *\n+     * @jls 6.6 Access Control\n+     *\/\n+    PUBLIC,\n+\n+    \/**\n+     * The modifier {@code protected}\n+     *\n+     * @jls 6.6 Access Control\n+     *\/\n+    PROTECTED,\n+\n+    \/**\n+     * The modifier {@code private}\n+     *\n+     * @jls 6.6 Access Control\n+     *\/\n+    PRIVATE,\n+\n+    \/**\n+     * The modifier {@code abstract}\n+     *\n+     * @jls 8.1.1.1 {@code abstract} Classes\n+     * @jls 8.4.3.1 {@code abstract} Methods\n+     * @jls 9.1.1.1 {@code abstract} Interfaces\n+     *\/\n+    ABSTRACT,\n+\n@@ -60,0 +86,2 @@\n+     *\n+     * @jls 9.4 Method Declarations\n@@ -63,1 +91,10 @@\n-    \/** The modifier {@code static} *\/          STATIC,\n+\n+    \/**\n+     * The modifier {@code static}\n+     *\n+     * @jls 8.1.1.4 {@code static} Classes\n+     * @jls 8.3.1.1 {@code static} Fields\n+     * @jls 8.4.3.2 {@code static} Methods\n+     * @jls 9.1.1.3 {@code static} Interfaces\n+     *\/\n+    STATIC,\n@@ -67,0 +104,3 @@\n+     *\n+     * @jls 8.1.1.2 {@code sealed}, {@code non-sealed}, and {@code final} Classes\n+     * @jls 9.1.1.4 {@code sealed} and {@code non-sealed} Interfaces\n@@ -73,0 +113,3 @@\n+     *\n+     * @jls 8.1.1.2 {@code sealed}, {@code non-sealed}, and {@code final} Classes\n+     * @jls 9.1.1.4 {@code sealed} and {@code non-sealed} Interfaces\n@@ -80,6 +123,45 @@\n-    \/** The modifier {@code final} *\/           FINAL,\n-    \/** The modifier {@code transient} *\/       TRANSIENT,\n-    \/** The modifier {@code volatile} *\/        VOLATILE,\n-    \/** The modifier {@code synchronized} *\/    SYNCHRONIZED,\n-    \/** The modifier {@code native} *\/          NATIVE,\n-    \/** The modifier {@code strictfp} *\/        STRICTFP;\n+    \/**\n+     * The modifier {@code final}\n+     *\n+     * @jls 8.1.1.2 {@code sealed}, {@code non-sealed}, and {@code final} Classes\n+     * @jls 8.3.1.2 {@code final} Fields\n+     * @jls 8.4.3.3 {@code final} Methods\n+     *\/\n+    FINAL,\n+\n+    \/**\n+     * The modifier {@code transient}\n+     *\n+     * @jls 8.3.1.3 {@code transient} Fields\n+     *\/\n+    TRANSIENT,\n+\n+    \/**\n+     * The modifier {@code volatile}\n+     *\n+     * @jls 8.3.1.4 {@code volatile} Fields\n+     *\/\n+    VOLATILE,\n+\n+    \/**\n+     * The modifier {@code synchronized}\n+     *\n+     * @jls 8.4.3.6 {@code synchronized} Methods\n+     *\/\n+    SYNCHRONIZED,\n+\n+    \/**\n+     * The modifier {@code native}\n+     *\n+     * @jls 8.4.3.4 {@code native} Methods\n+     *\/\n+    NATIVE,\n+\n+    \/**\n+     * The modifier {@code strictfp}\n+     *\n+     * @jls 8.1.1.3 {@code strictfp} Classes\n+     * @jls 8.4.3.5 {@code strictfp} Methods\n+     * @jls 9.1.1.2 {@code strictfp} Interfaces\n+     *\/\n+    STRICTFP;\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/Modifier.java","additions":94,"deletions":12,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.awt.image.BufferedImage;\n@@ -922,2 +923,14 @@\n-            Rectangle rect = new Rectangle(minX, row, width, 1);\n-            Raster ras = image.getData(rect);\n+            Raster ras;\n+            if (image instanceof BufferedImage bi) {\n+                \/\/ Use the raster directly (no copy).\n+                ras = bi.getRaster();\n+            } else if (image.getNumXTiles() == 1 && image.getNumYTiles() == 1 &&\n+                       image.getTileWidth() == width && image.getTileHeight() == height) {\n+                \/\/ Use the single tile directly (no copy).\n+                ras = image.getTile(image.getMinTileX(), image.getMinTileY());\n+            } else {\n+                \/\/ Make a copy of the raster data.\n+                Rectangle rect = new Rectangle(minX, row, width, 1);\n+                ras = image.getData(rect);\n+            }\n+\n@@ -925,2 +938,1 @@\n-                ras = ras.createChild(minX, row, width, 1, minX, row,\n-                                      sourceBands);\n+                ras = ras.createChild(minX, row, width, 1, minX, row, sourceBands);\n@@ -932,1 +944,1 @@\n-                WritableRaster wr = ras.createCompatibleWritableRaster();\n+                WritableRaster wr = ras.createCompatibleWritableRaster(minX, row, width, 1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/png\/PNGImageWriter.java","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-    \/** This enum mirrors that in gtk2_interface.h *\/\n+    \/** This enum mirrors that in gtk_interface.h *\/\n@@ -496,5 +496,4 @@\n-        if(GTKLookAndFeel.is3()) {\n-            if (parent != null && parent.getParent() instanceof JComboBox) {\n-                if (parent.getParent().hasFocus()) {\n-                    synthState |= SynthConstants.FOCUSED;\n-                }\n+\n+        if (parent != null && parent.getParent() instanceof JComboBox) {\n+            if (parent.getParent().hasFocus()) {\n+                synthState |= SynthConstants.FOCUSED;\n@@ -503,0 +502,1 @@\n+\n@@ -631,1 +631,1 @@\n-    \/* GtkSettings enum mirrors that in gtk2_interface.h *\/\n+    \/* GtkSettings enum mirrors that in gtk_interface.h *\/\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKEngine.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    static final int DEFAULT_TOGGLE_MENU_ITEM_SIZE = 12; \/\/ For pre-gtk2.4\n+    static final int DEFAULT_TOGGLE_MENU_ITEM_SIZE = 12;\n@@ -217,1 +217,1 @@\n-            if (GTKLookAndFeel.is3() && region == Region.MENU) {\n+            if (region == Region.MENU) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKIconFactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -80,1 +80,0 @@\n-    private static boolean IS_22;\n@@ -127,11 +126,0 @@\n-    \/**\n-     * Returns true if running on system containing at least 2.2.\n-     *\/\n-    static boolean is2_2() {\n-        \/\/ NOTE: We're currently hard coding to use 2.2.\n-        \/\/ If we want to support both GTK 2.0 and 2.2, we'll\n-        \/\/ need to get the major\/minor\/micro version from the .so.\n-        \/\/ Refer to bug 4912613 for details.\n-        return IS_22;\n-    }\n-\n@@ -1457,11 +1445,1 @@\n-        if (UNIXToolkit.getGtkVersion() == UNIXToolkit.GtkVersions.GTK2) {\n-            @SuppressWarnings(\"removal\")\n-            String version = AccessController.doPrivileged(\n-                    new GetPropertyAction(\"jdk.gtk.version\"));\n-            if (version != null) {\n-                IS_22 = version.equals(\"2.2\");\n-            } else {\n-                IS_22 = true;\n-            }\n-        } else if (UNIXToolkit.getGtkVersion() ==\n-                                UNIXToolkit.GtkVersions.GTK3) {\n+        if (UNIXToolkit.getGtkVersion() == UNIXToolkit.GtkVersions.GTK3) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKLookAndFeel.java","additions":1,"deletions":23,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -214,14 +214,1 @@\n-            if (GTKLookAndFeel.is3()) {\n-                paintComponentBackground(context, g, x, y, w, h);\n-                return;\n-            }\n-            synchronized (UNIXToolkit.GTK_LOCK) {\n-                if (! ENGINE.paintCachedImage(g, x, y, w, h, id)) {\n-                    ShadowType shadow = (GTKLookAndFeel.is2_2() ?\n-                        ShadowType.NONE : ShadowType.OUT);\n-                    ENGINE.startPainting(g, x, y, w, h, id);\n-                    ENGINE.paintBox(g, context, id, gtkState,\n-                            shadow, \"menuitem\", x, y, w, h);\n-                    ENGINE.finishPainting();\n-                }\n-            }\n+            paintComponentBackground(context, g, x, y, w, h);\n@@ -573,15 +560,1 @@\n-            if (GTKLookAndFeel.is3()) {\n-                paintComponentBackground(context, g, x, y, w, h);\n-                return;\n-            }\n-            Region id = Region.MENU_ITEM;\n-            synchronized (UNIXToolkit.GTK_LOCK) {\n-                if (! ENGINE.paintCachedImage(g, x, y, w, h, id)) {\n-                    ShadowType shadow = (GTKLookAndFeel.is2_2() ?\n-                        ShadowType.NONE : ShadowType.OUT);\n-                    ENGINE.startPainting(g, x, y, w, h, id);\n-                    ENGINE.paintBox(g, context, id, gtkState, shadow,\n-                            \"menuitem\", x, y, w, h);\n-                    ENGINE.finishPainting();\n-                }\n-            }\n+            paintComponentBackground(context, g, x, y, w, h);\n@@ -701,7 +674,4 @@\n-            if (GTKLookAndFeel.is3()) {\n-                if (id == Region.POPUP_MENU_SEPARATOR) {\n-                    detail = \"menuitem\";\n-                    h -= (insets.top + insets.bottom);\n-                } else {\n-                    detail = \"separator\";\n-                }\n+\n+            if (id == Region.POPUP_MENU_SEPARATOR) {\n+                detail = \"menuitem\";\n+                h -= (insets.top + insets.bottom);\n@@ -709,2 +679,1 @@\n-                detail = orientation == JSeparator.HORIZONTAL ?\n-                                                    \"hseparator\" : \"vseparator\";\n+                detail = \"separator\";\n@@ -712,0 +681,1 @@\n+\n@@ -826,8 +796,7 @@\n-        if (GTKLookAndFeel.is3()) {\n-            if (slider.getOrientation() == JSlider.VERTICAL) {\n-                y += 1;\n-                h -= 2;\n-            } else {\n-                x += 1;\n-                w -= 2;\n-            }\n+\n+        if (slider.getOrientation() == JSlider.VERTICAL) {\n+            y += 1;\n+            h -= 2;\n+        } else {\n+            x += 1;\n+            w -= 2;\n@@ -835,0 +804,1 @@\n+\n@@ -868,1 +838,1 @@\n-        boolean hasFocus = GTKLookAndFeel.is3() &&\n+        boolean hasFocus =\n@@ -968,4 +938,0 @@\n-        Region id = context.getRegion();\n-        int state = context.getComponentState();\n-        int gtkState = ((state & SynthConstants.SELECTED) != 0 ?\n-            SynthConstants.ENABLED : SynthConstants.PRESSED);\n@@ -973,1 +939,6 @@\n-        int placement = pane.getTabPlacement();\n+        if (UIManager.getBoolean(\"TabbedPane.tabsOpaque\") || pane.isOpaque()) {\n+            Region id = context.getRegion();\n+            int state = context.getComponentState();\n+            int gtkState = ((state & SynthConstants.SELECTED) != 0 ?\n+                    SynthConstants.ENABLED : SynthConstants.PRESSED);\n+            int placement = pane.getTabPlacement();\n@@ -975,2 +946,2 @@\n-        \/\/ Fill the tab rect area\n-        g.fillRect(x, y, w, h);\n+            \/\/ Fill the tab rect area\n+            g.fillRect(x, y, w, h);\n@@ -978,9 +949,10 @@\n-        synchronized (UNIXToolkit.GTK_LOCK) {\n-            if (! ENGINE.paintCachedImage(g, x, y, w, h,\n-                    id, gtkState, placement, tabIndex)) {\n-                PositionType side = POSITIONS[placement - 1];\n-                ENGINE.startPainting(g, x, y, w, h,\n-                        id, gtkState, placement, tabIndex);\n-                ENGINE.paintExtension(g, context, id, gtkState,\n-                        ShadowType.OUT, \"tab\", x, y, w, h, side, tabIndex);\n-                ENGINE.finishPainting();\n+            synchronized (UNIXToolkit.GTK_LOCK) {\n+                if (!ENGINE.paintCachedImage(g, x, y, w, h,\n+                        id, gtkState, placement, tabIndex)) {\n+                    PositionType side = POSITIONS[placement - 1];\n+                    ENGINE.startPainting(g, x, y, w, h,\n+                            id, gtkState, placement, tabIndex);\n+                    ENGINE.paintExtension(g, context, id, gtkState,\n+                            ShadowType.OUT, \"tab\", x, y, w, h, side, tabIndex);\n+                    ENGINE.finishPainting();\n+                }\n@@ -1062,4 +1034,2 @@\n-            if (GTKLookAndFeel.is3()) {\n-                ENGINE.paintBackground(g, context, id, gtkState, null,\n-                                                                    x, y, w, h);\n-            }\n+            ENGINE.paintBackground(g, context, id, gtkState, null,\n+                                                                x, y, w, h);\n@@ -1068,9 +1038,0 @@\n-            if (!GTKLookAndFeel.is3()) {\n-                ENGINE.paintFlatBox(g, context, id,\n-                        gtkState, ShadowType.NONE, \"entry_bg\",\n-                        x + xThickness,\n-                        y + yThickness,\n-                        w - (2 * xThickness),\n-                        h - (2 * yThickness),\n-                        ColorType.TEXT_BACKGROUND);\n-            }\n@@ -1087,3 +1048,3 @@\n-                        y += focusSize + (GTKLookAndFeel.is3() ? 3 : 1);\n-                        w -= 2 * focusSize + (GTKLookAndFeel.is3() ? 4 : 1);\n-                        h -= 2 * focusSize + (GTKLookAndFeel.is3() ? 6 : 2);\n+                        y += focusSize + 3;\n+                        w -= 2 * focusSize + 4;\n+                        h -= 2 * focusSize + 6;\n@@ -1091,4 +1052,4 @@\n-                        x += focusSize + (GTKLookAndFeel.is3() ? 2 : 0);\n-                        y += focusSize + (GTKLookAndFeel.is3() ? 2 :0 );\n-                        w -= 2 * focusSize + (GTKLookAndFeel.is3() ? 4 : 0);\n-                        h -= 2 * focusSize + (GTKLookAndFeel.is3() ? 4 : 0);\n+                        x += focusSize + 2;\n+                        y += focusSize + 2;\n+                        w -= 2 * focusSize + 4;\n+                        h -= 2 * focusSize + 4;\n@@ -1440,5 +1401,0 @@\n-        if (!GTKLookAndFeel.is3()) {\n-            x += 3;\n-            y += 3;\n-            w = h = 7;\n-        }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKPainter.java","additions":44,"deletions":88,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -754,8 +754,1 @@\n-        if (!GTKLookAndFeel.is3()) {\n-            if (region == Region.FORMATTED_TEXT_FIELD ||\n-                  region == Region.PASSWORD_FIELD ||\n-                  region == Region.SPINNER ||\n-                  region == Region.TEXT_FIELD) {\n-                return true;\n-            }\n-        }\n+\n@@ -887,1 +880,1 @@\n-        } else if (GTKLookAndFeel.is3() && \"ComboBox.forceOpaque\".equals(key)) {\n+        } else if (\"ComboBox.forceOpaque\".equals(key)) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKStyle.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2101,18 +2101,21 @@\n-        if (orientation == JTabbedPane.LEFT) {\n-            AffineTransform transform = new AffineTransform();\n-            transform.scale(-1, 1);\n-            transform.rotate(Math.toRadians(90));\n-            paintBackground(context, g, y, x, h, w, transform);\n-        } else if (orientation == JTabbedPane.RIGHT) {\n-            AffineTransform transform = new AffineTransform();\n-            transform.rotate(Math.toRadians(90));\n-            transform.translate(0, -(x + w));\n-            paintBackground(context, g, y, 0, h, w, transform);\n-        } else if (orientation == JTabbedPane.BOTTOM) {\n-            AffineTransform transform = new AffineTransform();\n-            transform.translate(x,y);\n-            transform.scale(1, -1);\n-            transform.translate(0,-h);\n-            paintBackground(context, g, 0, 0, w, h, transform);\n-        } else {\n-            paintBackground(context, g, x, y, w, h, null);\n+        JTabbedPane pane = (JTabbedPane)context.getComponent();\n+        if (UIManager.getBoolean(\"TabbedPane.tabsOpaque\") || pane.isOpaque()) {\n+            if (orientation == JTabbedPane.LEFT) {\n+                AffineTransform transform = new AffineTransform();\n+                transform.scale(-1, 1);\n+                transform.rotate(Math.toRadians(90));\n+                paintBackground(context, g, y, x, h, w, transform);\n+            } else if (orientation == JTabbedPane.RIGHT) {\n+                AffineTransform transform = new AffineTransform();\n+                transform.rotate(Math.toRadians(90));\n+                transform.translate(0, -(x + w));\n+                paintBackground(context, g, y, 0, h, w, transform);\n+            } else if (orientation == JTabbedPane.BOTTOM) {\n+                AffineTransform transform = new AffineTransform();\n+                transform.translate(x, y);\n+                transform.scale(1, -1);\n+                transform.translate(0, -h);\n+                paintBackground(context, g, 0, 0, w, h, transform);\n+            } else {\n+                paintBackground(context, g, x, y, w, h, null);\n+            }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/SynthPainterImpl.java","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -130,1 +130,0 @@\n-    private boolean tabsOpaque = true;\n@@ -159,1 +158,0 @@\n-        tabsOpaque = UIManager.getBoolean(\"TabbedPane.tabsOpaque\");\n@@ -658,4 +656,2 @@\n-        if (tabsOpaque || tabPane.isOpaque()) {\n-            tabContext.getPainter().paintTabbedPaneTabBackground(tabContext, g,\n-                    x, y, width, height, tabIndex, placement);\n-        }\n+        tabContext.getPainter().paintTabbedPaneTabBackground(tabContext, g,\n+                x, y, width, height, tabIndex, placement);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthTabbedPaneUI.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,4 @@\n-import jdk.internal.misc.Unsafe;\n+import java.lang.foreign.Arena;\n+import java.lang.foreign.MemorySegment;\n+import java.lang.foreign.ValueLayout;\n+import static java.lang.foreign.ValueLayout.*;\n@@ -32,1 +35,1 @@\n- * The RenderBuffer class is a simplified, high-performance, Unsafe wrapper\n+ * The RenderBuffer class is a simplified, high-performance class\n@@ -34,1 +37,1 @@\n- * environment.  It's functionality is similar to the ByteBuffer and related\n+ * environment.  Its functionality is similar to the ByteBuffer and related\n@@ -41,0 +44,1 @@\n+ * Failure to do so will result in exceptions from the FFM API, or worse.\n@@ -46,1 +50,1 @@\n-public class RenderBuffer {\n+public final class RenderBuffer {\n@@ -51,6 +55,6 @@\n-    protected static final long SIZEOF_BYTE   = 1L;\n-    protected static final long SIZEOF_SHORT  = 2L;\n-    protected static final long SIZEOF_INT    = 4L;\n-    protected static final long SIZEOF_FLOAT  = 4L;\n-    protected static final long SIZEOF_LONG   = 8L;\n-    protected static final long SIZEOF_DOUBLE = 8L;\n+    private static final int SIZEOF_BYTE   = Byte.BYTES;\n+    private static final int SIZEOF_SHORT  = Short.BYTES;\n+    private static final int SIZEOF_INT    = Integer.BYTES;\n+    private static final int SIZEOF_FLOAT  = Float.BYTES;\n+    private static final int SIZEOF_LONG   = Long.BYTES;\n+    private static final int SIZEOF_DOUBLE = Double.BYTES;\n@@ -59,7 +63,4 @@\n-     * Represents the number of elements at which we have empirically\n-     * determined that the average cost of a JNI call exceeds the expense\n-     * of an element by element copy.  In other words, if the number of\n-     * elements in an array to be copied exceeds this value, then we should\n-     * use the copyFromArray() method to complete the bulk put operation.\n-     * (This value can be adjusted if the cost of JNI downcalls is reduced\n-     * in a future release.)\n+     * Measurements show that using the copy API from a segment backed by a heap\n+     * array gets reliably faster than individual puts around a length of 10.\n+     * However the time is miniscule in the context of what it is used for\n+     * and much more than adequate, so no problem expected if this changes over time.\n@@ -67,13 +68,8 @@\n-    private static final int COPY_FROM_ARRAY_THRESHOLD = 6;\n-\n-    protected final Unsafe unsafe;\n-    protected final long baseAddress;\n-    protected final long endAddress;\n-    protected long curAddress;\n-    protected final int capacity;\n-\n-    protected RenderBuffer(int numBytes) {\n-        unsafe = Unsafe.getUnsafe();\n-        curAddress = baseAddress = unsafe.allocateMemory(numBytes);\n-        endAddress = baseAddress + numBytes;\n-        capacity = numBytes;\n+    private static final int COPY_FROM_ARRAY_THRESHOLD = 10;\n+\n+    private final MemorySegment segment;\n+    private int curOffset;\n+\n+    private RenderBuffer(int numBytes) {\n+        segment = Arena.global().allocate(numBytes, SIZEOF_DOUBLE);\n+        curOffset = 0;\n@@ -93,1 +89,1 @@\n-        return baseAddress;\n+        return segment.address();\n@@ -102,1 +98,1 @@\n-        return capacity;\n+        return (int)segment.byteSize();\n@@ -106,1 +102,1 @@\n-        return (int)(endAddress - curAddress);\n+        return (capacity() - curOffset);\n@@ -110,1 +106,1 @@\n-        return (int)(curAddress - baseAddress);\n+        return curOffset;\n@@ -113,2 +109,2 @@\n-    public final void position(long numBytes) {\n-        curAddress = baseAddress + numBytes;\n+    public final void position(int bytePos) {\n+        curOffset = bytePos;\n@@ -118,1 +114,1 @@\n-        curAddress = baseAddress;\n+        curOffset = 0;\n@@ -121,2 +117,2 @@\n-    public final RenderBuffer skip(long numBytes) {\n-        curAddress += numBytes;\n+    public final RenderBuffer skip(int numBytes) {\n+        curOffset += numBytes;\n@@ -131,2 +127,2 @@\n-        unsafe.putByte(curAddress, x);\n-        curAddress += SIZEOF_BYTE;\n+        segment.set(JAVA_BYTE, curOffset, x);\n+        curOffset += SIZEOF_BYTE;\n@@ -142,4 +138,2 @@\n-            long offsetInBytes = offset * SIZEOF_BYTE + Unsafe.ARRAY_BYTE_BASE_OFFSET;\n-            long lengthInBytes = length * SIZEOF_BYTE;\n-            unsafe.copyMemory(x, offsetInBytes, null, curAddress, lengthInBytes);\n-            position(position() + lengthInBytes);\n+            MemorySegment.copy(x, offset, segment, JAVA_BYTE, curOffset, length);\n+            position(position() + length * SIZEOF_BYTE);\n@@ -161,2 +155,2 @@\n-        unsafe.putShort(curAddress, x);\n-        curAddress += SIZEOF_SHORT;\n+        segment.set(JAVA_SHORT, curOffset, x);\n+        curOffset += SIZEOF_SHORT;\n@@ -173,4 +167,2 @@\n-            long offsetInBytes = offset * SIZEOF_SHORT + Unsafe.ARRAY_SHORT_BASE_OFFSET;\n-            long lengthInBytes = length * SIZEOF_SHORT;\n-            unsafe.copyMemory(x, offsetInBytes, null, curAddress, lengthInBytes);\n-            position(position() + lengthInBytes);\n+            MemorySegment.copy(x, offset, segment, JAVA_SHORT, curOffset, length);\n+            position(position() + length * SIZEOF_SHORT);\n@@ -191,2 +183,2 @@\n-        \/\/ assert (baseAddress + pos % SIZEOF_INT == 0);\n-        unsafe.putInt(baseAddress + pos, x);\n+        \/\/ assert (getAddress() + pos % SIZEOF_INT == 0);\n+        segment.set(JAVA_INT, pos, x);\n@@ -198,2 +190,2 @@\n-        unsafe.putInt(curAddress, x);\n-        curAddress += SIZEOF_INT;\n+        segment.set(JAVA_INT, curOffset, x);\n+        curOffset += SIZEOF_INT;\n@@ -210,4 +202,2 @@\n-            long offsetInBytes = offset * SIZEOF_INT + Unsafe.ARRAY_INT_BASE_OFFSET;\n-            long lengthInBytes = length * SIZEOF_INT;\n-            unsafe.copyMemory(x, offsetInBytes, null, curAddress, lengthInBytes);\n-            position(position() + lengthInBytes);\n+            MemorySegment.copy(x, offset, segment, JAVA_INT, curOffset, length);\n+            position(position() + length * SIZEOF_INT);\n@@ -229,2 +219,2 @@\n-        unsafe.putFloat(curAddress, x);\n-        curAddress += SIZEOF_FLOAT;\n+        segment.set(JAVA_FLOAT, curOffset, x);\n+        curOffset += SIZEOF_FLOAT;\n@@ -241,4 +231,2 @@\n-            long offsetInBytes = offset * SIZEOF_FLOAT + Unsafe.ARRAY_FLOAT_BASE_OFFSET;\n-            long lengthInBytes = length * SIZEOF_FLOAT;\n-            unsafe.copyMemory(x, offsetInBytes, null, curAddress, lengthInBytes);\n-            position(position() + lengthInBytes);\n+            MemorySegment.copy(x, offset, segment, JAVA_FLOAT, curOffset, length);\n+            position(position() + length * SIZEOF_FLOAT);\n@@ -260,2 +248,2 @@\n-        unsafe.putLong(curAddress, x);\n-        curAddress += SIZEOF_LONG;\n+        segment.set(JAVA_LONG, curOffset, x);\n+        curOffset += SIZEOF_LONG;\n@@ -272,4 +260,2 @@\n-            long offsetInBytes = offset * SIZEOF_LONG + Unsafe.ARRAY_LONG_BASE_OFFSET;\n-            long lengthInBytes = length * SIZEOF_LONG;\n-            unsafe.copyMemory(x, offsetInBytes, null, curAddress, lengthInBytes);\n-            position(position() + lengthInBytes);\n+            MemorySegment.copy(x, offset, segment, JAVA_LONG, curOffset, length);\n+            position(position() + length * SIZEOF_LONG);\n@@ -291,2 +277,2 @@\n-        unsafe.putDouble(curAddress, x);\n-        curAddress += SIZEOF_DOUBLE;\n+        segment.set(JAVA_DOUBLE, curOffset, x);\n+        curOffset += SIZEOF_DOUBLE;\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/pipe\/RenderBuffer.java","additions":60,"deletions":74,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -73,5 +73,0 @@\n-    private static final String GTK2_DEPRECATION_MESSAGE =\n-            \"WARNING: the GTK 2 library is deprecated and \" +\n-                    \"its support will be removed in a future release\";\n-    private static volatile boolean gtk2WarningIssued = false;\n-\n@@ -81,1 +76,0 @@\n-        GTK2(Constants.GTK2_MAJOR_NUMBER),\n@@ -85,1 +79,0 @@\n-            static final int GTK2_MAJOR_NUMBER = 2;\n@@ -97,2 +90,0 @@\n-                case Constants.GTK2_MAJOR_NUMBER:\n-                    return GTK2;\n@@ -501,9 +492,1 @@\n-        if (version == null) {\n-            return GtkVersions.ANY;\n-        } else if (version.startsWith(\"2\")) {\n-            if (!gtk2WarningIssued) {\n-                System.err.println(GTK2_DEPRECATION_MESSAGE);\n-                gtk2WarningIssued = true;\n-            }\n-            return GtkVersions.GTK2;\n-        } else if(\"3\".equals(version) ){\n+        if (\"3\".equals(version)) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/UNIXToolkit.java","additions":1,"deletions":18,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -365,0 +365,3 @@\n+                AffineTransform af = g2.getTransform();\n+                double scaleX = af.getScaleX();\n+                double scaleY = af.getScaleY();\n@@ -369,2 +372,2 @@\n-                AffineTransform af = g2.getTransform();\n-                g2.setTransform(AffineTransform.getTranslateInstance(rx,ry));\n+                g2.setTransform(AffineTransform.getTranslateInstance(rx * scaleX, ry * scaleY));\n+                g2.scale(scaleX, scaleY);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XCheckboxPeer.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -63,1 +63,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -69,0 +68,2 @@\n+            \".java\/robot\/screencast-tokens.properties\";\n+    private static final String REL_NAME_SECONDARY =\n@@ -75,0 +76,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -76,6 +78,3 @@\n-        AccessController.doPrivileged(new PrivilegedAction<Void>() {\n-            @Override\n-            public Void run() {\n-                runnable.run();\n-                return null;\n-            }\n+        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n+            runnable.run();\n+            return null;\n@@ -86,6 +85,5 @@\n-        PROPS_PATH = AccessController.doPrivileged(new PrivilegedAction<Path>() {\n-            @Override\n-            public Path run() {\n-                return setupPath();\n-            }\n-        });\n+        @SuppressWarnings(\"removal\")\n+        Path propsPath = AccessController\n+                .doPrivileged((PrivilegedAction<Path>) () -> setupPath());\n+\n+        PROPS_PATH = propsPath;\n@@ -113,0 +111,5 @@\n+        Path secondaryPath = Path.of(userHome, REL_NAME_SECONDARY);\n+\n+        boolean copyFromSecondary = !Files.isWritable(path)\n+                && Files.isWritable(secondaryPath);\n+\n@@ -115,7 +118,10 @@\n-        if (!Files.exists(workdir)) {\n-            try {\n-                Files.createDirectories(workdir);\n-            } catch (Exception e) {\n-                if (SCREENCAST_DEBUG) {\n-                    System.err.printf(\"Token storage: cannot create\" +\n-                                    \" directory %s %s\\n\", workdir, e);\n+        if (!Files.isWritable(path)) {\n+            if (!Files.exists(workdir)) {\n+                try {\n+                    Files.createDirectories(workdir);\n+                } catch (Exception e) {\n+                    if (SCREENCAST_DEBUG) {\n+                        System.err.printf(\"Token storage: cannot create\" +\n+                                \" directory %s %s\\n\", workdir, e);\n+                    }\n+                    return null;\n@@ -123,1 +129,0 @@\n-                return null;\n@@ -125,1 +130,0 @@\n-        }\n@@ -127,3 +131,5 @@\n-        if (!Files.isWritable(workdir)) {\n-            if (SCREENCAST_DEBUG) {\n-                System.err.printf(\"Token storage: %s is not writable\\n\", workdir);\n+            if (!Files.isWritable(workdir)) {\n+                if (SCREENCAST_DEBUG) {\n+                    System.err.printf(\"Token storage: %s is not writable\\n\", workdir);\n+                }\n+                return null;\n@@ -131,1 +137,0 @@\n-            return null;\n@@ -148,1 +153,11 @@\n-        if (Files.exists(path)) {\n+        if (copyFromSecondary) {\n+            if (SCREENCAST_DEBUG) {\n+                System.out.println(\"Token storage: copying from the secondary location \"\n+                                        + secondaryPath);\n+            }\n+            synchronized (PROPS) {\n+                if (readTokens(secondaryPath)) {\n+                    store(path, \"copy from the secondary location\");\n+                }\n+            }\n+        } else if (Files.exists(path)) {\n@@ -305,1 +320,1 @@\n-                doPrivilegedRunnable(() -> store(\"save tokens\"));\n+                doPrivilegedRunnable(() -> store(PROPS_PATH, \"save tokens\"));\n@@ -318,1 +333,1 @@\n-        } catch (IOException e) {\n+        } catch (IOException | IllegalArgumentException e) {\n@@ -413,1 +428,1 @@\n-        if (!isWritable()\n+        if (!isWritable(PROPS_PATH)\n@@ -427,1 +442,1 @@\n-            store(\"remove malformed records\");\n+            store(PROPS_PATH, \"remove malformed records\");\n@@ -431,2 +446,2 @@\n-    private static void store(String failMsg) {\n-        if (!isWritable()) {\n+    private static void store(Path path, String failMsg) {\n+        if (!isWritable(path)) {\n@@ -437,1 +452,1 @@\n-            try (BufferedWriter writer = Files.newBufferedWriter(PROPS_PATH)) {\n+            try (BufferedWriter writer = Files.newBufferedWriter(path)) {\n@@ -448,3 +463,3 @@\n-    private static boolean isWritable() {\n-        if (PROPS_PATH == null\n-            || (Files.exists(PROPS_PATH) && !Files.isWritable(PROPS_PATH))) {\n+    private static boolean isWritable(Path path) {\n+        if (path == null\n+            || (Files.exists(path) && !Files.isWritable(path))) {\n@@ -454,1 +469,1 @@\n-                        \"Token storage: %s is not writable\\n\", PROPS_PATH);\n+                        \"Token storage: %s is not writable\\n\", path);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/TokenStorage.java","additions":53,"deletions":38,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -1,2603 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifdef HEADLESS\n-    #error This file should not be included in headless library\n-#endif\n-\n-#include <dlfcn.h>\n-#include <setjmp.h>\n-#include <X11\/Xlib.h>\n-#include <limits.h>\n-#include <stdio.h>\n-#include <string.h>\n-#include \"gtk2_interface.h\"\n-#include \"java_awt_Transparency.h\"\n-#include \"jvm_md.h\"\n-#include \"sizecalc.h\"\n-#include <jni_util.h>\n-#include \"awt.h\"\n-\n-#define GTK_TYPE_BORDER                 ((*fp_gtk_border_get_type)())\n-\n-#define G_TYPE_FUNDAMENTAL_SHIFT        (2)\n-#define G_TYPE_MAKE_FUNDAMENTAL(x)      ((GType) ((x) << G_TYPE_FUNDAMENTAL_SHIFT))\n-\n-#define CONV_BUFFER_SIZE 128\n-\n-#define NO_SYMBOL_EXCEPTION 1\n-\n-static void *gtk2_libhandle = NULL;\n-static void *gthread_libhandle = NULL;\n-\n-static jmp_buf j;\n-\n-\/* Widgets *\/\n-static GtkWidget *gtk2_widget = NULL;\n-static GtkWidget *gtk2_window = NULL;\n-static GtkFixed  *gtk2_fixed  = NULL;\n-\n-\/* Paint system *\/\n-static GdkPixmap *gtk2_white_pixmap = NULL;\n-static GdkPixmap *gtk2_black_pixmap = NULL;\n-static GdkPixbuf *gtk2_white_pixbuf = NULL;\n-static GdkPixbuf *gtk2_black_pixbuf = NULL;\n-static int gtk2_pixbuf_width = 0;\n-static int gtk2_pixbuf_height = 0;\n-\n-\/* Static buffer for conversion from java.lang.String to UTF-8 *\/\n-static char convertionBuffer[CONV_BUFFER_SIZE];\n-\n-static gboolean new_combo = TRUE;\n-const char ENV_PREFIX[] = \"GTK_MODULES=\";\n-\n-\n-static GtkWidget *gtk2_widgets[_GTK_WIDGET_TYPE_SIZE];\n-\n-\/*************************\n- * Glib function pointers\n- *************************\/\n-\n-static gboolean (*fp_g_main_context_iteration)(GMainContext *context,\n-                                             gboolean may_block);\n-\n-static GValue*      (*fp_g_value_init)(GValue *value, GType g_type);\n-static gboolean     (*fp_g_type_is_a)(GType type, GType is_a_type);\n-static gboolean     (*fp_g_value_get_boolean)(const GValue *value);\n-static gchar        (*fp_g_value_get_char)(const GValue *value);\n-static guchar       (*fp_g_value_get_uchar)(const GValue *value);\n-static gint         (*fp_g_value_get_int)(const GValue *value);\n-static guint        (*fp_g_value_get_uint)(const GValue *value);\n-static glong        (*fp_g_value_get_long)(const GValue *value);\n-static gulong       (*fp_g_value_get_ulong)(const GValue *value);\n-static gint64       (*fp_g_value_get_int64)(const GValue *value);\n-static guint64      (*fp_g_value_get_uint64)(const GValue *value);\n-static gfloat       (*fp_g_value_get_float)(const GValue *value);\n-static gdouble      (*fp_g_value_get_double)(const GValue *value);\n-static const gchar* (*fp_g_value_get_string)(const GValue *value);\n-static gint         (*fp_g_value_get_enum)(const GValue *value);\n-static guint        (*fp_g_value_get_flags)(const GValue *value);\n-static GParamSpec*  (*fp_g_value_get_param)(const GValue *value);\n-static gpointer*    (*fp_g_value_get_boxed)(const GValue *value);\n-static gpointer*    (*fp_g_value_get_pointer)(const GValue *value);\n-static GObject*     (*fp_g_value_get_object)(const GValue *value);\n-static GParamSpec*  (*fp_g_param_spec_int)(const gchar *name,\n-        const gchar *nick, const gchar *blurb,\n-        gint minimum, gint maximum, gint default_value,\n-        GParamFlags flags);\n-static void         (*fp_g_object_get)(gpointer object,\n-                                       const gchar* fpn, ...);\n-static void         (*fp_g_object_set)(gpointer object,\n-                                       const gchar *first_property_name,\n-                                       ...);\n-\/************************\n- * GDK function pointers\n- ************************\/\n-static GdkPixmap *(*fp_gdk_pixmap_new)(GdkDrawable *drawable,\n-        gint width, gint height, gint depth);\n-static GdkGC *(*fp_gdk_gc_new)(GdkDrawable*);\n-static void (*fp_gdk_rgb_gc_set_foreground)(GdkGC*, guint32);\n-static void (*fp_gdk_draw_rectangle)(GdkDrawable*, GdkGC*, gboolean,\n-        gint, gint, gint, gint);\n-static GdkPixbuf *(*fp_gdk_pixbuf_new)(GdkColorspace colorspace,\n-        gboolean has_alpha, int bits_per_sample, int width, int height);\n-static void (*fp_gdk_drawable_get_size)(GdkDrawable *drawable,\n-        gint* width, gint* height);\n-\n-\/************************\n- * Gtk function pointers\n- ************************\/\n-static gboolean (*fp_gtk_init_check)(int* argc, char** argv);\n-\n-\/* Painting *\/\n-static void (*fp_gtk_paint_hline)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GdkRectangle* area, GtkWidget* widget,\n-        const gchar* detail, gint x1, gint x2, gint y);\n-static void (*fp_gtk_paint_vline)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GdkRectangle* area, GtkWidget* widget,\n-        const gchar* detail, gint y1, gint y2, gint x);\n-static void (*fp_gtk_paint_shadow)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_arrow)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        GtkArrowType arrow_type, gboolean fill, gint x, gint y,\n-        gint width, gint height);\n-static void (*fp_gtk_paint_box)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_flat_box)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_check)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_option)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_box_gap)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height,\n-        GtkPositionType gap_side, gint gap_x, gint gap_width);\n-static void (*fp_gtk_paint_extension)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height, GtkPositionType gap_side);\n-static void (*fp_gtk_paint_focus)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GdkRectangle* area, GtkWidget* widget,\n-        const gchar* detail, gint x, gint y, gint width, gint height);\n-static void (*fp_gtk_paint_slider)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height, GtkOrientation orientation);\n-static void (*fp_gtk_paint_handle)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GtkShadowType shadow_type,\n-        GdkRectangle* area, GtkWidget* widget, const gchar* detail,\n-        gint x, gint y, gint width, gint height, GtkOrientation orientation);\n-static void (*fp_gtk_paint_expander)(GtkStyle* style, GdkWindow* window,\n-        GtkStateType state_type, GdkRectangle* area, GtkWidget* widget,\n-        const gchar* detail, gint x, gint y, GtkExpanderStyle expander_style);\n-static void (*fp_gtk_style_apply_default_background)(GtkStyle* style,\n-        GdkWindow* window, gboolean set_bg, GtkStateType state_type,\n-        GdkRectangle* area, gint x, gint y, gint width, gint height);\n-\n-\/* Widget creation *\/\n-static GtkWidget* (*fp_gtk_arrow_new)(GtkArrowType arrow_type,\n-                                      GtkShadowType shadow_type);\n-static GtkWidget* (*fp_gtk_button_new)();\n-static GtkWidget* (*fp_gtk_check_button_new)();\n-static GtkWidget* (*fp_gtk_check_menu_item_new)();\n-static GtkWidget* (*fp_gtk_color_selection_dialog_new)(const gchar* title);\n-static GtkWidget* (*fp_gtk_combo_box_new)();\n-static GtkWidget* (*fp_gtk_combo_box_entry_new)();\n-static GtkWidget* (*fp_gtk_entry_new)();\n-static GtkWidget* (*fp_gtk_fixed_new)();\n-static GtkWidget* (*fp_gtk_handle_box_new)();\n-static GtkWidget* (*fp_gtk_hpaned_new)();\n-static GtkWidget* (*fp_gtk_vpaned_new)();\n-static GtkWidget* (*fp_gtk_hscale_new)(GtkAdjustment* adjustment);\n-static GtkWidget* (*fp_gtk_vscale_new)(GtkAdjustment* adjustment);\n-static GtkWidget* (*fp_gtk_hscrollbar_new)(GtkAdjustment* adjustment);\n-static GtkWidget* (*fp_gtk_vscrollbar_new)(GtkAdjustment* adjustment);\n-static GtkWidget* (*fp_gtk_hseparator_new)();\n-static GtkWidget* (*fp_gtk_vseparator_new)();\n-static GtkWidget* (*fp_gtk_image_new)();\n-static GtkWidget* (*fp_gtk_label_new)(const gchar* str);\n-static GtkWidget* (*fp_gtk_menu_new)();\n-static GtkWidget* (*fp_gtk_menu_bar_new)();\n-static GtkWidget* (*fp_gtk_menu_item_new)();\n-static GtkWidget* (*fp_gtk_notebook_new)();\n-static GtkWidget* (*fp_gtk_progress_bar_new)();\n-static GtkWidget* (*fp_gtk_progress_bar_set_orientation)(\n-        GtkProgressBar *pbar,\n-        GtkProgressBarOrientation orientation);\n-static GtkWidget* (*fp_gtk_radio_button_new)(GSList *group);\n-static GtkWidget* (*fp_gtk_radio_menu_item_new)(GSList *group);\n-static GtkWidget* (*fp_gtk_scrolled_window_new)(GtkAdjustment *hadjustment,\n-        GtkAdjustment *vadjustment);\n-static GtkWidget* (*fp_gtk_separator_menu_item_new)();\n-static GtkWidget* (*fp_gtk_separator_tool_item_new)();\n-static GtkWidget* (*fp_gtk_text_view_new)();\n-static GtkWidget* (*fp_gtk_toggle_button_new)();\n-static GtkWidget* (*fp_gtk_toolbar_new)();\n-static GtkWidget* (*fp_gtk_tree_view_new)();\n-static GtkWidget* (*fp_gtk_viewport_new)(GtkAdjustment *hadjustment,\n-        GtkAdjustment *vadjustment);\n-static GtkWidget* (*fp_gtk_window_new)(GtkWindowType type);\n-static GtkWidget* (*fp_gtk_dialog_new)();\n-static GtkWidget* (*fp_gtk_spin_button_new)(GtkAdjustment *adjustment,\n-        gdouble climb_rate, guint digits);\n-static GtkWidget* (*fp_gtk_frame_new)(const gchar *label);\n-\n-\/* Other widget operations *\/\n-static GtkObject* (*fp_gtk_adjustment_new)(gdouble value,\n-        gdouble lower, gdouble upper, gdouble step_increment,\n-        gdouble page_increment, gdouble page_size);\n-static void (*fp_gtk_container_add)(GtkContainer *window, GtkWidget *widget);\n-static void (*fp_gtk_menu_shell_append)(GtkMenuShell *menu_shell,\n-        GtkWidget *child);\n-static void (*fp_gtk_menu_item_set_submenu)(GtkMenuItem *menu_item,\n-        GtkWidget *submenu);\n-static void (*fp_gtk_widget_realize)(GtkWidget *widget);\n-static GdkPixbuf* (*fp_gtk_widget_render_icon)(GtkWidget *widget,\n-        const gchar *stock_id, GtkIconSize size, const gchar *detail);\n-static void (*fp_gtk_widget_set_name)(GtkWidget *widget, const gchar *name);\n-static void (*fp_gtk_widget_set_parent)(GtkWidget *widget, GtkWidget *parent);\n-static void (*fp_gtk_widget_set_direction)(GtkWidget *widget,\n-        GtkTextDirection direction);\n-static void (*fp_gtk_widget_style_get)(GtkWidget *widget,\n-        const gchar *first_property_name, ...);\n-static void (*fp_gtk_widget_class_install_style_property)(\n-        GtkWidgetClass* class, GParamSpec *pspec);\n-static GParamSpec* (*fp_gtk_widget_class_find_style_property)(\n-        GtkWidgetClass* class, const gchar* property_name);\n-static void (*fp_gtk_widget_style_get_property)(GtkWidget* widget,\n-        const gchar* property_name, GValue* value);\n-static char* (*fp_pango_font_description_to_string)(\n-        const PangoFontDescription* fd);\n-static GtkSettings* (*fp_gtk_settings_get_default)();\n-static GtkSettings* (*fp_gtk_widget_get_settings)(GtkWidget *widget);\n-static GType        (*fp_gtk_border_get_type)();\n-static void (*fp_gtk_arrow_set)(GtkWidget* arrow,\n-                                GtkArrowType arrow_type,\n-                                GtkShadowType shadow_type);\n-static void (*fp_gtk_widget_size_request)(GtkWidget *widget,\n-                                          GtkRequisition *requisition);\n-static GtkAdjustment* (*fp_gtk_range_get_adjustment)(GtkRange* range);\n-\n-\/* Method bodies *\/\n-\n-static void throw_exception(JNIEnv *env, const char* name, const char* message)\n-{\n-    jclass class = (*env)->FindClass(env, name);\n-\n-    if (class != NULL)\n-        (*env)->ThrowNew(env, class, message);\n-\n-    (*env)->DeleteLocalRef(env, class);\n-}\n-\n-\/* This is a workaround for the bug:\n- * http:\/\/sourceware.org\/bugzilla\/show_bug.cgi?id=1814\n- * (dlsym\/dlopen clears dlerror state)\n- * This bug is specific to Linux, but there is no harm in\n- * applying this workaround on Solaris as well.\n- *\/\n-static void* dl_symbol(const char* name)\n-{\n-    void* result = dlsym(gtk2_libhandle, name);\n-    if (!result)\n-        longjmp(j, NO_SYMBOL_EXCEPTION);\n-\n-    return result;\n-}\n-\n-static void* dl_symbol_gthread(const char* name)\n-{\n-    void* result = dlsym(gthread_libhandle, name);\n-    if (!result)\n-        longjmp(j, NO_SYMBOL_EXCEPTION);\n-\n-    return result;\n-}\n-\n-gboolean gtk2_check(const char* lib_name, gboolean load)\n-{\n-    if (gtk2_libhandle != NULL) {\n-        \/* We've already successfully opened the GTK libs, so return true. *\/\n-        return TRUE;\n-    } else {\n-        void *lib = NULL;\n-\n-#ifdef RTLD_NOLOAD\n-        \/* Just check if gtk libs are already in the process space *\/\n-        lib = dlopen(lib_name, RTLD_LAZY | RTLD_NOLOAD);\n-        if (!load || lib != NULL) {\n-            return lib != NULL;\n-        }\n-#else\n-#ifdef _AIX\n-        \/* On AIX we could implement this with the help of loadquery(L_GETINFO, ..)  *\/\n-        \/* (see reload_table() in hotspot\/src\/os\/aix\/vm\/loadlib_aix.cpp) but it is   *\/\n-        \/* probably not worth it because most AIX servers don't have GTK libs anyway *\/\n-#endif\n-#endif\n-\n-        lib = dlopen(lib_name, RTLD_LAZY | RTLD_LOCAL);\n-        if (lib == NULL) {\n-            return FALSE;\n-        }\n-\n-        fp_gtk_check_version = dlsym(lib, \"gtk_check_version\");\n-        \/* Check for GTK 2.2+ *\/\n-        if (!fp_gtk_check_version(2, 2, 0)) {\n-            return TRUE;\n-        }\n-\n-        \/\/ 8048289: workaround for https:\/\/bugzilla.gnome.org\/show_bug.cgi?id=733065\n-        \/\/ dlclose(lib);\n-\n-        return FALSE;\n-    }\n-}\n-\n-#define ADD_SUPPORTED_ACTION(actionStr) \\\n-do { \\\n-    jfieldID fld_action = (*env)->GetStaticFieldID(env, cls_action, actionStr, \"Ljava\/awt\/Desktop$Action;\"); \\\n-    if (!(*env)->ExceptionCheck(env)) { \\\n-        jobject action = (*env)->GetStaticObjectField(env, cls_action, fld_action); \\\n-        (*env)->CallBooleanMethod(env, supportedActions, mid_arrayListAdd, action); \\\n-    } else { \\\n-        (*env)->ExceptionClear(env); \\\n-    } \\\n-} while(0);\n-\n-\n-static void update_supported_actions(JNIEnv *env) {\n-    GVfs * (*fp_g_vfs_get_default) (void);\n-    const gchar * const * (*fp_g_vfs_get_supported_uri_schemes) (GVfs * vfs);\n-    const gchar * const * schemes = NULL;\n-\n-    jclass cls_action = (*env)->FindClass(env, \"java\/awt\/Desktop$Action\");\n-    CHECK_NULL(cls_action);\n-    jclass cls_xDesktopPeer = (*env)->FindClass(env, \"sun\/awt\/X11\/XDesktopPeer\");\n-    CHECK_NULL(cls_xDesktopPeer);\n-    jfieldID fld_supportedActions = (*env)->GetStaticFieldID(env, cls_xDesktopPeer, \"supportedActions\", \"Ljava\/util\/List;\");\n-    CHECK_NULL(fld_supportedActions);\n-    jobject supportedActions = (*env)->GetStaticObjectField(env, cls_xDesktopPeer, fld_supportedActions);\n-\n-    jclass cls_arrayList = (*env)->FindClass(env, \"java\/util\/ArrayList\");\n-    CHECK_NULL(cls_arrayList);\n-    jmethodID mid_arrayListAdd = (*env)->GetMethodID(env, cls_arrayList, \"add\", \"(Ljava\/lang\/Object;)Z\");\n-    CHECK_NULL(mid_arrayListAdd);\n-    jmethodID mid_arrayListClear = (*env)->GetMethodID(env, cls_arrayList, \"clear\", \"()V\");\n-    CHECK_NULL(mid_arrayListClear);\n-\n-    (*env)->CallVoidMethod(env, supportedActions, mid_arrayListClear);\n-\n-    ADD_SUPPORTED_ACTION(\"OPEN\");\n-\n-    \/**\n-     * gtk_show_uri() documentation says:\n-     *\n-     * > you need to install gvfs to get support for uri schemes such as http:\/\/\n-     * > or ftp:\/\/, as only local files are handled by GIO itself.\n-     *\n-     * So OPEN action was safely added here.\n-     * However, it looks like Solaris 11 have gvfs support only for 32-bit\n-     * applications only by default.\n-     *\/\n-\n-    fp_g_vfs_get_default = dl_symbol(\"g_vfs_get_default\");\n-    fp_g_vfs_get_supported_uri_schemes = dl_symbol(\"g_vfs_get_supported_uri_schemes\");\n-    dlerror();\n-\n-    if (fp_g_vfs_get_default && fp_g_vfs_get_supported_uri_schemes) {\n-        GVfs * vfs = fp_g_vfs_get_default();\n-        schemes = vfs ? fp_g_vfs_get_supported_uri_schemes(vfs) : NULL;\n-        if (schemes) {\n-            int i = 0;\n-            while (schemes[i]) {\n-                if (strcmp(schemes[i], \"http\") == 0) {\n-                    ADD_SUPPORTED_ACTION(\"BROWSE\");\n-                    ADD_SUPPORTED_ACTION(\"MAIL\");\n-                    break;\n-                }\n-                i++;\n-            }\n-        }\n-    } else {\n-#ifdef DEBUG\n-        fprintf(stderr, \"Cannot load g_vfs_get_supported_uri_schemes\\n\");\n-#endif \/* DEBUG *\/\n-    }\n-\n-}\n-\/**\n- * Functions for awt_Desktop.c\n- *\/\n-static gboolean gtk2_show_uri_load(JNIEnv *env) {\n-     gboolean success = FALSE;\n-     dlerror();\n-     const char *gtk_version = fp_gtk_check_version(2, 14, 0);\n-     if (gtk_version != NULL) {\n-         \/\/ The gtk_show_uri is available from GTK+ 2.14\n-#ifdef DEBUG\n-         fprintf (stderr, \"The version of GTK is %s. \"\n-             \"The gtk_show_uri function is supported \"\n-             \"since GTK+ 2.14.\\n\", gtk_version);\n-#endif \/* DEBUG *\/\n-     } else {\n-         \/\/ Loading symbols only if the GTK version is 2.14 and higher\n-         fp_gtk_show_uri = dl_symbol(\"gtk_show_uri\");\n-         const char *dlsym_error = dlerror();\n-         if (dlsym_error) {\n-#ifdef DEBUG\n-             fprintf (stderr, \"Cannot load symbol: %s \\n\", dlsym_error);\n-#endif \/* DEBUG *\/\n-         } else if (fp_gtk_show_uri == NULL) {\n-#ifdef DEBUG\n-             fprintf(stderr, \"dlsym(gtk_show_uri) returned NULL\\n\");\n-#endif \/* DEBUG *\/\n-        } else {\n-            gtk->gtk_show_uri = fp_gtk_show_uri;\n-            update_supported_actions(env);\n-            success = TRUE;\n-        }\n-     }\n-     return success;\n-}\n-\n-\/**\n- * Functions for sun_awt_X11_GtkFileDialogPeer.c\n- *\/\n-static void gtk2_file_chooser_load()\n-{\n-    fp_gtk_file_chooser_get_filename = dl_symbol(\n-            \"gtk_file_chooser_get_filename\");\n-    fp_gtk_file_chooser_dialog_new = dl_symbol(\"gtk_file_chooser_dialog_new\");\n-    fp_gtk_file_chooser_set_current_folder = dl_symbol(\n-            \"gtk_file_chooser_set_current_folder\");\n-    fp_gtk_file_chooser_set_filename = dl_symbol(\n-            \"gtk_file_chooser_set_filename\");\n-    fp_gtk_file_chooser_set_current_name = dl_symbol(\n-            \"gtk_file_chooser_set_current_name\");\n-    fp_gtk_file_filter_add_custom = dl_symbol(\"gtk_file_filter_add_custom\");\n-    fp_gtk_file_chooser_set_filter = dl_symbol(\"gtk_file_chooser_set_filter\");\n-    fp_gtk_file_chooser_get_type = dl_symbol(\"gtk_file_chooser_get_type\");\n-    fp_gtk_file_filter_new = dl_symbol(\"gtk_file_filter_new\");\n-    if (fp_gtk_check_version(2, 8, 0) == NULL) {\n-        fp_gtk_file_chooser_set_do_overwrite_confirmation = dl_symbol(\n-                \"gtk_file_chooser_set_do_overwrite_confirmation\");\n-    }\n-    fp_gtk_file_chooser_set_select_multiple = dl_symbol(\n-            \"gtk_file_chooser_set_select_multiple\");\n-    fp_gtk_file_chooser_get_current_folder = dl_symbol(\n-            \"gtk_file_chooser_get_current_folder\");\n-    fp_gtk_file_chooser_get_filenames = dl_symbol(\n-            \"gtk_file_chooser_get_filenames\");\n-    fp_gtk_g_slist_length = dl_symbol(\"g_slist_length\");\n-    fp_gdk_x11_drawable_get_xid = dl_symbol(\"gdk_x11_drawable_get_xid\");\n-}\n-\n-GtkApi* gtk2_load(JNIEnv *env, const char* lib_name)\n-{\n-    gboolean result;\n-    int i;\n-    int (*handler)();\n-    int (*io_handler)();\n-    char *gtk_modules_env;\n-\n-    gtk2_libhandle = dlopen(lib_name, RTLD_LAZY | RTLD_LOCAL);\n-    if (gtk2_libhandle == NULL) {\n-        return FALSE;\n-    }\n-\n-    gthread_libhandle = dlopen(GTHREAD_LIB_VERSIONED, RTLD_LAZY | RTLD_LOCAL);\n-    if (gthread_libhandle == NULL) {\n-        gthread_libhandle = dlopen(GTHREAD_LIB, RTLD_LAZY | RTLD_LOCAL);\n-        if (gthread_libhandle == NULL)\n-            return FALSE;\n-    }\n-\n-    if (setjmp(j) == 0)\n-    {\n-        fp_gtk_check_version = dl_symbol(\"gtk_check_version\");\n-        \/* Check for GTK 2.2+ *\/\n-        if (fp_gtk_check_version(2, 2, 0)) {\n-            longjmp(j, NO_SYMBOL_EXCEPTION);\n-        }\n-\n-        \/* GLib *\/\n-        fp_glib_check_version = dlsym(gtk2_libhandle, \"glib_check_version\");\n-        if (!fp_glib_check_version) {\n-            dlerror();\n-        }\n-        fp_g_free = dl_symbol(\"g_free\");\n-        fp_g_object_unref = dl_symbol(\"g_object_unref\");\n-\n-        fp_g_main_context_iteration =\n-            dl_symbol(\"g_main_context_iteration\");\n-\n-        fp_g_value_init = dl_symbol(\"g_value_init\");\n-        fp_g_type_is_a = dl_symbol(\"g_type_is_a\");\n-\n-        fp_g_value_get_boolean = dl_symbol(\"g_value_get_boolean\");\n-        fp_g_value_get_char = dl_symbol(\"g_value_get_char\");\n-        fp_g_value_get_uchar = dl_symbol(\"g_value_get_uchar\");\n-        fp_g_value_get_int = dl_symbol(\"g_value_get_int\");\n-        fp_g_value_get_uint = dl_symbol(\"g_value_get_uint\");\n-        fp_g_value_get_long = dl_symbol(\"g_value_get_long\");\n-        fp_g_value_get_ulong = dl_symbol(\"g_value_get_ulong\");\n-        fp_g_value_get_int64 = dl_symbol(\"g_value_get_int64\");\n-        fp_g_value_get_uint64 = dl_symbol(\"g_value_get_uint64\");\n-        fp_g_value_get_float = dl_symbol(\"g_value_get_float\");\n-        fp_g_value_get_double = dl_symbol(\"g_value_get_double\");\n-        fp_g_value_get_string = dl_symbol(\"g_value_get_string\");\n-        fp_g_value_get_enum = dl_symbol(\"g_value_get_enum\");\n-        fp_g_value_get_flags = dl_symbol(\"g_value_get_flags\");\n-        fp_g_value_get_param = dl_symbol(\"g_value_get_param\");\n-        fp_g_value_get_boxed = dl_symbol(\"g_value_get_boxed\");\n-        fp_g_value_get_pointer = dl_symbol(\"g_value_get_pointer\");\n-        fp_g_value_get_object = dl_symbol(\"g_value_get_object\");\n-        fp_g_param_spec_int = dl_symbol(\"g_param_spec_int\");\n-        fp_g_object_get = dl_symbol(\"g_object_get\");\n-        fp_g_object_set = dl_symbol(\"g_object_set\");\n-\n-        \/* GDK *\/\n-        fp_gdk_get_default_root_window =\n-            dl_symbol(\"gdk_get_default_root_window\");\n-        fp_gdk_pixmap_new = dl_symbol(\"gdk_pixmap_new\");\n-        fp_gdk_pixbuf_get_from_drawable =\n-            dl_symbol(\"gdk_pixbuf_get_from_drawable\");\n-        fp_gdk_pixbuf_scale_simple =\n-            dl_symbol(\"gdk_pixbuf_scale_simple\");\n-        fp_gdk_gc_new = dl_symbol(\"gdk_gc_new\");\n-        fp_gdk_rgb_gc_set_foreground =\n-            dl_symbol(\"gdk_rgb_gc_set_foreground\");\n-        fp_gdk_draw_rectangle = dl_symbol(\"gdk_draw_rectangle\");\n-        fp_gdk_drawable_get_size = dl_symbol(\"gdk_drawable_get_size\");\n-\n-        \/* Pixbuf *\/\n-        fp_gdk_pixbuf_new = dl_symbol(\"gdk_pixbuf_new\");\n-        fp_gdk_pixbuf_new_from_file =\n-                dl_symbol(\"gdk_pixbuf_new_from_file\");\n-        fp_gdk_pixbuf_get_width = dl_symbol(\"gdk_pixbuf_get_width\");\n-        fp_gdk_pixbuf_get_height = dl_symbol(\"gdk_pixbuf_get_height\");\n-        fp_gdk_pixbuf_get_pixels = dl_symbol(\"gdk_pixbuf_get_pixels\");\n-        fp_gdk_pixbuf_get_rowstride =\n-                dl_symbol(\"gdk_pixbuf_get_rowstride\");\n-        fp_gdk_pixbuf_get_has_alpha =\n-                dl_symbol(\"gdk_pixbuf_get_has_alpha\");\n-        fp_gdk_pixbuf_get_bits_per_sample =\n-                dl_symbol(\"gdk_pixbuf_get_bits_per_sample\");\n-        fp_gdk_pixbuf_get_n_channels =\n-                dl_symbol(\"gdk_pixbuf_get_n_channels\");\n-        fp_gdk_pixbuf_get_colorspace =\n-                dl_symbol(\"gdk_pixbuf_get_colorspace\");\n-\n-        \/* GTK painting *\/\n-        fp_gtk_init_check = dl_symbol(\"gtk_init_check\");\n-        fp_gtk_paint_hline = dl_symbol(\"gtk_paint_hline\");\n-        fp_gtk_paint_vline = dl_symbol(\"gtk_paint_vline\");\n-        fp_gtk_paint_shadow = dl_symbol(\"gtk_paint_shadow\");\n-        fp_gtk_paint_arrow = dl_symbol(\"gtk_paint_arrow\");\n-        fp_gtk_paint_box = dl_symbol(\"gtk_paint_box\");\n-        fp_gtk_paint_flat_box = dl_symbol(\"gtk_paint_flat_box\");\n-        fp_gtk_paint_check = dl_symbol(\"gtk_paint_check\");\n-        fp_gtk_paint_option = dl_symbol(\"gtk_paint_option\");\n-        fp_gtk_paint_box_gap = dl_symbol(\"gtk_paint_box_gap\");\n-        fp_gtk_paint_extension = dl_symbol(\"gtk_paint_extension\");\n-        fp_gtk_paint_focus = dl_symbol(\"gtk_paint_focus\");\n-        fp_gtk_paint_slider = dl_symbol(\"gtk_paint_slider\");\n-        fp_gtk_paint_handle = dl_symbol(\"gtk_paint_handle\");\n-        fp_gtk_paint_expander = dl_symbol(\"gtk_paint_expander\");\n-        fp_gtk_style_apply_default_background =\n-                dl_symbol(\"gtk_style_apply_default_background\");\n-\n-        \/* GTK widgets *\/\n-        fp_gtk_arrow_new = dl_symbol(\"gtk_arrow_new\");\n-        fp_gtk_button_new = dl_symbol(\"gtk_button_new\");\n-        fp_gtk_spin_button_new = dl_symbol(\"gtk_spin_button_new\");\n-        fp_gtk_check_button_new = dl_symbol(\"gtk_check_button_new\");\n-        fp_gtk_check_menu_item_new =\n-                dl_symbol(\"gtk_check_menu_item_new\");\n-        fp_gtk_color_selection_dialog_new =\n-                dl_symbol(\"gtk_color_selection_dialog_new\");\n-        fp_gtk_entry_new = dl_symbol(\"gtk_entry_new\");\n-        fp_gtk_fixed_new = dl_symbol(\"gtk_fixed_new\");\n-        fp_gtk_handle_box_new = dl_symbol(\"gtk_handle_box_new\");\n-        fp_gtk_image_new = dl_symbol(\"gtk_image_new\");\n-        fp_gtk_hpaned_new = dl_symbol(\"gtk_hpaned_new\");\n-        fp_gtk_vpaned_new = dl_symbol(\"gtk_vpaned_new\");\n-        fp_gtk_hscale_new = dl_symbol(\"gtk_hscale_new\");\n-        fp_gtk_vscale_new = dl_symbol(\"gtk_vscale_new\");\n-        fp_gtk_hscrollbar_new = dl_symbol(\"gtk_hscrollbar_new\");\n-        fp_gtk_vscrollbar_new = dl_symbol(\"gtk_vscrollbar_new\");\n-        fp_gtk_hseparator_new = dl_symbol(\"gtk_hseparator_new\");\n-        fp_gtk_vseparator_new = dl_symbol(\"gtk_vseparator_new\");\n-        fp_gtk_label_new = dl_symbol(\"gtk_label_new\");\n-        fp_gtk_menu_new = dl_symbol(\"gtk_menu_new\");\n-        fp_gtk_menu_bar_new = dl_symbol(\"gtk_menu_bar_new\");\n-        fp_gtk_menu_item_new = dl_symbol(\"gtk_menu_item_new\");\n-        fp_gtk_menu_item_set_submenu =\n-                dl_symbol(\"gtk_menu_item_set_submenu\");\n-        fp_gtk_notebook_new = dl_symbol(\"gtk_notebook_new\");\n-        fp_gtk_progress_bar_new =\n-            dl_symbol(\"gtk_progress_bar_new\");\n-        fp_gtk_progress_bar_set_orientation =\n-            dl_symbol(\"gtk_progress_bar_set_orientation\");\n-        fp_gtk_radio_button_new =\n-            dl_symbol(\"gtk_radio_button_new\");\n-        fp_gtk_radio_menu_item_new =\n-            dl_symbol(\"gtk_radio_menu_item_new\");\n-        fp_gtk_scrolled_window_new =\n-            dl_symbol(\"gtk_scrolled_window_new\");\n-        fp_gtk_separator_menu_item_new =\n-            dl_symbol(\"gtk_separator_menu_item_new\");\n-        fp_gtk_text_view_new = dl_symbol(\"gtk_text_view_new\");\n-        fp_gtk_toggle_button_new =\n-            dl_symbol(\"gtk_toggle_button_new\");\n-        fp_gtk_toolbar_new = dl_symbol(\"gtk_toolbar_new\");\n-        fp_gtk_tree_view_new = dl_symbol(\"gtk_tree_view_new\");\n-        fp_gtk_viewport_new = dl_symbol(\"gtk_viewport_new\");\n-        fp_gtk_window_new = dl_symbol(\"gtk_window_new\");\n-        fp_gtk_window_present = dl_symbol(\"gtk_window_present\");\n-        fp_gtk_window_move = dl_symbol(\"gtk_window_move\");\n-        fp_gtk_window_resize = dl_symbol(\"gtk_window_resize\");\n-\n-          fp_gtk_dialog_new = dl_symbol(\"gtk_dialog_new\");\n-        fp_gtk_frame_new = dl_symbol(\"gtk_frame_new\");\n-\n-        fp_gtk_adjustment_new = dl_symbol(\"gtk_adjustment_new\");\n-        fp_gtk_container_add = dl_symbol(\"gtk_container_add\");\n-        fp_gtk_menu_shell_append =\n-            dl_symbol(\"gtk_menu_shell_append\");\n-        fp_gtk_widget_realize = dl_symbol(\"gtk_widget_realize\");\n-        fp_gtk_widget_destroy = dl_symbol(\"gtk_widget_destroy\");\n-        fp_gtk_widget_render_icon =\n-            dl_symbol(\"gtk_widget_render_icon\");\n-        fp_gtk_widget_set_name =\n-            dl_symbol(\"gtk_widget_set_name\");\n-        fp_gtk_widget_set_parent =\n-            dl_symbol(\"gtk_widget_set_parent\");\n-        fp_gtk_widget_set_direction =\n-            dl_symbol(\"gtk_widget_set_direction\");\n-        fp_gtk_widget_style_get =\n-            dl_symbol(\"gtk_widget_style_get\");\n-        fp_gtk_widget_class_install_style_property =\n-            dl_symbol(\"gtk_widget_class_install_style_property\");\n-        fp_gtk_widget_class_find_style_property =\n-            dl_symbol(\"gtk_widget_class_find_style_property\");\n-        fp_gtk_widget_style_get_property =\n-            dl_symbol(\"gtk_widget_style_get_property\");\n-        fp_pango_font_description_to_string =\n-            dl_symbol(\"pango_font_description_to_string\");\n-        fp_gtk_settings_get_default =\n-            dl_symbol(\"gtk_settings_get_default\");\n-        fp_gtk_widget_get_settings =\n-            dl_symbol(\"gtk_widget_get_settings\");\n-        fp_gtk_border_get_type =  dl_symbol(\"gtk_border_get_type\");\n-        fp_gtk_arrow_set = dl_symbol(\"gtk_arrow_set\");\n-        fp_gtk_widget_size_request =\n-            dl_symbol(\"gtk_widget_size_request\");\n-        fp_gtk_range_get_adjustment =\n-            dl_symbol(\"gtk_range_get_adjustment\");\n-\n-        fp_gtk_widget_hide = dl_symbol(\"gtk_widget_hide\");\n-        fp_gtk_main_quit = dl_symbol(\"gtk_main_quit\");\n-        fp_g_signal_connect_data = dl_symbol(\"g_signal_connect_data\");\n-        fp_gtk_widget_show = dl_symbol(\"gtk_widget_show\");\n-        fp_gtk_main = dl_symbol(\"gtk_main\");\n-\n-        fp_g_path_get_dirname = dl_symbol(\"g_path_get_dirname\");\n-\n-        \/**\n-         * GLib thread system\n-         *\/\n-        if (GLIB_CHECK_VERSION(2, 20, 0)) {\n-            fp_g_thread_get_initialized = dl_symbol_gthread(\"g_thread_get_initialized\");\n-        }\n-        fp_g_thread_init = dl_symbol_gthread(\"g_thread_init\");\n-        fp_gdk_threads_init = dl_symbol(\"gdk_threads_init\");\n-        fp_gdk_threads_enter = dl_symbol(\"gdk_threads_enter\");\n-        fp_gdk_threads_leave = dl_symbol(\"gdk_threads_leave\");\n-\n-        \/**\n-         * Functions for sun_awt_X11_GtkFileDialogPeer.c\n-         *\/\n-        if (fp_gtk_check_version(2, 4, 0) == NULL) {\n-            \/\/ The current GtkFileChooser is available from GTK+ 2.4\n-            gtk2_file_chooser_load();\n-        }\n-\n-        \/* Some functions may be missing in pre-2.4 GTK.\n-           We handle them specially here.\n-         *\/\n-        fp_gtk_combo_box_new = dlsym(gtk2_libhandle, \"gtk_combo_box_new\");\n-        if (fp_gtk_combo_box_new == NULL) {\n-            fp_gtk_combo_box_new = dl_symbol(\"gtk_combo_new\");\n-        }\n-\n-        fp_gtk_combo_box_entry_new =\n-            dlsym(gtk2_libhandle, \"gtk_combo_box_entry_new\");\n-        if (fp_gtk_combo_box_entry_new == NULL) {\n-            fp_gtk_combo_box_entry_new = dl_symbol(\"gtk_combo_new\");\n-            new_combo = FALSE;\n-        }\n-\n-        fp_gtk_separator_tool_item_new =\n-            dlsym(gtk2_libhandle, \"gtk_separator_tool_item_new\");\n-        if (fp_gtk_separator_tool_item_new == NULL) {\n-            fp_gtk_separator_tool_item_new =\n-                dl_symbol(\"gtk_vseparator_new\");\n-        }\n-\n-        fp_g_list_append = dl_symbol(\"g_list_append\");\n-        fp_g_list_free = dl_symbol(\"g_list_free\");\n-        fp_g_list_free_full = dl_symbol(\"g_list_free_full\");\n-    }\n-    \/* Now we have only one kind of exceptions: NO_SYMBOL_EXCEPTION\n-     * Otherwise we can check the return value of setjmp method.\n-     *\/\n-    else\n-    {\n-        dlclose(gtk2_libhandle);\n-        gtk2_libhandle = NULL;\n-\n-        dlclose(gthread_libhandle);\n-        gthread_libhandle = NULL;\n-\n-        return FALSE;\n-    }\n-\n-    \/*\n-     * Strip the AT-SPI GTK_MODULES if present\n-     *\/\n-    gtk_modules_env = getenv (\"GTK_MODULES\");\n-    if ((gtk_modules_env && strstr(gtk_modules_env, \"atk-bridge\")) ||\n-        (gtk_modules_env && strstr(gtk_modules_env, \"gail\"))) {\n-        \/* careful, strtok modifies its args *\/\n-        gchar *tmp_env = strdup(gtk_modules_env);\n-        if (tmp_env) {\n-            \/* the new env will be smaller than the old one *\/\n-            gchar *s, *new_env = SAFE_SIZE_STRUCT_ALLOC(malloc,\n-                    sizeof(ENV_PREFIX), 1, strlen (gtk_modules_env));\n-\n-            if (new_env) {\n-                strcpy(new_env, ENV_PREFIX);\n-\n-                \/* strip out 'atk-bridge' and 'gail' *\/\n-                size_t PREFIX_LENGTH = strlen(ENV_PREFIX);\n-                gchar *tmp_ptr = NULL;\n-                for (s = strtok_r(tmp_env, \":\", &tmp_ptr); s;\n-                     s = strtok_r(NULL, \":\", &tmp_ptr)) {\n-                    if ((!strstr(s, \"atk-bridge\")) && (!strstr(s, \"gail\"))) {\n-                        if (strlen(new_env) > PREFIX_LENGTH) {\n-                            new_env = strcat(new_env, \":\");\n-                        }\n-                        new_env = strcat(new_env, s);\n-                    }\n-                }\n-                if (putenv(new_env) != 0) {\n-                    \/* no free() on success, putenv() doesn't copy string *\/\n-                    free(new_env);\n-                }\n-            }\n-            free(tmp_env);\n-        }\n-    }\n-    \/*\n-     * GTK should be initialized with gtk_init_check() before use.\n-     *\n-     * gtk_init_check installs its own error handlers. It is critical that\n-     * we preserve error handler set from AWT. Otherwise we'll crash on\n-     * BadMatch errors which we would normally ignore. The IO error handler\n-     * is preserved here, too, just for consistency.\n-    *\/\n-    AWT_LOCK();\n-    handler = XSetErrorHandler(NULL);\n-    io_handler = XSetIOErrorHandler(NULL);\n-\n-    if (fp_gtk_check_version(2, 2, 0) == NULL) {\n-\n-        \/\/ Calling g_thread_init() multiple times leads to crash on GLib < 2.24\n-        \/\/ We can use g_thread_get_initialized () but it is available only for\n-        \/\/ GLib >= 2.20.\n-        gboolean is_g_thread_get_initialized = FALSE;\n-        if (GLIB_CHECK_VERSION(2, 20, 0)) {\n-            is_g_thread_get_initialized = fp_g_thread_get_initialized();\n-        }\n-\n-        if (!is_g_thread_get_initialized) {\n-            fp_g_thread_init(NULL);\n-        }\n-\n-        \/\/According the GTK documentation, gdk_threads_init() should be\n-        \/\/called before gtk_init() or gtk_init_check()\n-        fp_gdk_threads_init();\n-    }\n-    result = (*fp_gtk_init_check)(NULL, NULL);\n-\n-    XSetErrorHandler(handler);\n-    XSetIOErrorHandler(io_handler);\n-    AWT_UNLOCK();\n-\n-    \/* Initialize widget array. *\/\n-    for (i = 0; i < _GTK_WIDGET_TYPE_SIZE; i++)\n-    {\n-        gtk2_widgets[i] = NULL;\n-    }\n-    if (result) {\n-        GtkApi* gtk = (GtkApi*)malloc(sizeof(GtkApi));\n-        gtk2_init(gtk);\n-        return gtk;\n-    }\n-    return NULL;\n-}\n-\n-int gtk2_unload()\n-{\n-    int i;\n-    char *gtk2_error;\n-\n-    if (!gtk2_libhandle)\n-        return TRUE;\n-\n-    \/* Release painting objects *\/\n-    if (gtk2_white_pixmap != NULL) {\n-        (*fp_g_object_unref)(gtk2_white_pixmap);\n-        (*fp_g_object_unref)(gtk2_black_pixmap);\n-        (*fp_g_object_unref)(gtk2_white_pixbuf);\n-        (*fp_g_object_unref)(gtk2_black_pixbuf);\n-        gtk2_white_pixmap = gtk2_black_pixmap =\n-            gtk2_white_pixbuf = gtk2_black_pixbuf = NULL;\n-    }\n-    gtk2_pixbuf_width = 0;\n-    gtk2_pixbuf_height = 0;\n-\n-    if (gtk2_window != NULL) {\n-        \/* Destroying toplevel widget will destroy all contained widgets *\/\n-        (*fp_gtk_widget_destroy)(gtk2_window);\n-\n-        \/* Unset some static data so they get reinitialized on next load *\/\n-        gtk2_window = NULL;\n-    }\n-\n-    dlerror();\n-    dlclose(gtk2_libhandle);\n-    dlclose(gthread_libhandle);\n-    if ((gtk2_error = dlerror()) != NULL)\n-    {\n-        return FALSE;\n-    }\n-    return TRUE;\n-}\n-\n-\/* Dispatch all pending events from the GTK event loop.\n- * This is needed to catch theme change and update widgets' style.\n- *\/\n-static void flush_gtk_event_loop()\n-{\n-    while( (*fp_g_main_context_iteration)(NULL, FALSE));\n-}\n-\n-\/*\n- * Initialize components of containment hierarchy. This creates a GtkFixed\n- * inside a GtkWindow. All widgets get realized.\n- *\/\n-static void init_containers()\n-{\n-    if (gtk2_window == NULL)\n-    {\n-        gtk2_window = (*fp_gtk_window_new)(GTK_WINDOW_TOPLEVEL);\n-        gtk2_fixed = (GtkFixed *)(*fp_gtk_fixed_new)();\n-        (*fp_gtk_container_add)((GtkContainer*)gtk2_window,\n-                                (GtkWidget *)gtk2_fixed);\n-        (*fp_gtk_widget_realize)(gtk2_window);\n-        (*fp_gtk_widget_realize)((GtkWidget *)gtk2_fixed);\n-    }\n-}\n-\n-\/*\n- * Ensure everything is ready for drawing an element of the specified width\n- * and height.\n- *\n- * We should somehow handle translucent images. GTK can draw to X Drawables\n- * only, which don't support alpha. When we retrieve the image back from\n- * the server, translucency information is lost. There're several ways to\n- * work around this:\n- * 1) Subclass GdkPixmap and cache translucent objects on client side. This\n- * requires us to implement parts of X server drawing logic on client side.\n- * Many X requests can potentially be \"translucent\"; e.g. XDrawLine with\n- * fill=tile and a translucent tile is a \"translucent\" operation, whereas\n- * XDrawLine with fill=solid is an \"opaque\" one. Moreover themes can (and some\n- * do) intermix transparent and opaque operations which makes caching even\n- * more problematic.\n- * 2) Use Xorg 32bit ARGB visual when available. GDK has no native support\n- * for it (as of version 2.6). Also even in JDS 3 Xorg does not support\n- * these visuals by default, which makes optimizing for them pointless.\n- * We can consider doing this at a later point when ARGB visuals become more\n- * popular.\n- * 3') GTK has plans to use Cairo as its graphical backend (presumably in\n- * 2.8), and Cairo supports alpha. With it we could also get rid of the\n- * unnecessary round trip to server and do all the drawing on client side.\n- * 4) For now we draw to two different pixmaps and restore alpha channel by\n- * comparing results. This can be optimized by using subclassed pixmap and\n- * doing the second drawing only if necessary.\n-*\/\n-static void gtk2_init_painting(JNIEnv *env, gint width, gint height)\n-{\n-    GdkGC *gc;\n-    GdkPixbuf *white, *black;\n-\n-    init_containers();\n-\n-    if (gtk2_pixbuf_width < width || gtk2_pixbuf_height < height)\n-    {\n-        white = (*fp_gdk_pixbuf_new)(GDK_COLORSPACE_RGB, TRUE, 8, width, height);\n-        black = (*fp_gdk_pixbuf_new)(GDK_COLORSPACE_RGB, TRUE, 8, width, height);\n-\n-        if (white == NULL || black == NULL)\n-        {\n-            snprintf(convertionBuffer, CONV_BUFFER_SIZE, \"Couldn't create pixbuf of size %dx%d\", width, height);\n-            throw_exception(env, \"java\/lang\/RuntimeException\", convertionBuffer);\n-            fp_gdk_threads_leave();\n-            return;\n-        }\n-\n-        if (gtk2_white_pixmap != NULL) {\n-            \/* free old stuff *\/\n-            (*fp_g_object_unref)(gtk2_white_pixmap);\n-            (*fp_g_object_unref)(gtk2_black_pixmap);\n-            (*fp_g_object_unref)(gtk2_white_pixbuf);\n-            (*fp_g_object_unref)(gtk2_black_pixbuf);\n-        }\n-\n-        gtk2_white_pixmap = (*fp_gdk_pixmap_new)(gtk2_window->window, width, height, -1);\n-        gtk2_black_pixmap = (*fp_gdk_pixmap_new)(gtk2_window->window, width, height, -1);\n-\n-        gtk2_white_pixbuf = white;\n-        gtk2_black_pixbuf = black;\n-\n-        gtk2_pixbuf_width = width;\n-        gtk2_pixbuf_height = height;\n-    }\n-\n-    \/* clear the pixmaps *\/\n-    gc = (*fp_gdk_gc_new)(gtk2_white_pixmap);\n-    (*fp_gdk_rgb_gc_set_foreground)(gc, 0xffffff);\n-    (*fp_gdk_draw_rectangle)(gtk2_white_pixmap, gc, TRUE, 0, 0, width, height);\n-    (*fp_g_object_unref)(gc);\n-\n-    gc = (*fp_gdk_gc_new)(gtk2_black_pixmap);\n-    (*fp_gdk_rgb_gc_set_foreground)(gc, 0x000000);\n-    (*fp_gdk_draw_rectangle)(gtk2_black_pixmap, gc, TRUE, 0, 0, width, height);\n-    (*fp_g_object_unref)(gc);\n-}\n-\n-\/*\n- * Restore image from white and black pixmaps and copy it into destination\n- * buffer. This method compares two pixbufs taken from white and black\n- * pixmaps and decodes color and alpha components. Pixbufs are RGB without\n- * alpha, destination buffer is ABGR.\n- *\n- * The return value is the transparency type of the resulting image, either\n- * one of java_awt_Transparency_OPAQUE, java_awt_Transparency_BITMASK, and\n- * java_awt_Transparency_TRANSLUCENT.\n- *\/\n-static gint gtk2_copy_image(gint *dst, gint width, gint height)\n-{\n-    gint i, j, r, g, b;\n-    guchar *white, *black;\n-    gint stride, padding;\n-    gboolean is_opaque = TRUE;\n-    gboolean is_bitmask = TRUE;\n-\n-    (*fp_gdk_pixbuf_get_from_drawable)(gtk2_white_pixbuf, gtk2_white_pixmap,\n-            NULL, 0, 0, 0, 0, width, height);\n-    (*fp_gdk_pixbuf_get_from_drawable)(gtk2_black_pixbuf, gtk2_black_pixmap,\n-            NULL, 0, 0, 0, 0, width, height);\n-\n-    white = (*fp_gdk_pixbuf_get_pixels)(gtk2_white_pixbuf);\n-    black = (*fp_gdk_pixbuf_get_pixels)(gtk2_black_pixbuf);\n-    stride = (*fp_gdk_pixbuf_get_rowstride)(gtk2_black_pixbuf);\n-    padding = stride - width * 4;\n-    if (padding >= 0 && stride > 0) {\n-        for (i = 0; i < height; i++) {\n-            for (j = 0; j < width; j++) {\n-                int r1 = *white++;\n-                int r2 = *black++;\n-                int alpha = 0xff + r2 - r1;\n-\n-                switch (alpha) {\n-                    case 0:       \/* transparent pixel *\/\n-                        r = g = b = 0;\n-                        black += 3;\n-                        white += 3;\n-                        is_opaque = FALSE;\n-                        break;\n-\n-                    case 0xff:    \/* opaque pixel *\/\n-                        r = r2;\n-                        g = *black++;\n-                        b = *black++;\n-                        black++;\n-                        white += 3;\n-                        break;\n-\n-                    default:      \/* translucent pixel *\/\n-                        r = 0xff * r2 \/ alpha;\n-                        g = 0xff * *black++ \/ alpha;\n-                        b = 0xff * *black++ \/ alpha;\n-                        black++;\n-                        white += 3;\n-                        is_opaque = FALSE;\n-                        is_bitmask = FALSE;\n-                        break;\n-                }\n-\n-                *dst++ = (alpha << 24 | r << 16 | g << 8 | b);\n-            }\n-\n-            white += padding;\n-            black += padding;\n-        }\n-    }\n-    return is_opaque ? java_awt_Transparency_OPAQUE :\n-                       (is_bitmask ? java_awt_Transparency_BITMASK :\n-                                     java_awt_Transparency_TRANSLUCENT);\n-}\n-\n-static void\n-gtk2_set_direction(GtkWidget *widget, GtkTextDirection dir)\n-{\n-    \/*\n-     * Some engines (inexplicably) look at the direction of the widget's\n-     * parent, so we need to set the direction of both the widget and its\n-     * parent.\n-     *\/\n-    (*fp_gtk_widget_set_direction)(widget, dir);\n-    if (widget->parent != NULL) {\n-        (*fp_gtk_widget_set_direction)(widget->parent, dir);\n-    }\n-}\n-\n-\/*\n- * Initializes the widget to correct state for some engines.\n- * This is a pure empirical method.\n- *\/\n-static void init_toggle_widget(WidgetType widget_type, gint synth_state)\n-{\n-    gboolean is_active = ((synth_state & SELECTED) != 0);\n-\n-    if (widget_type == RADIO_BUTTON ||\n-        widget_type == CHECK_BOX ||\n-        widget_type == TOGGLE_BUTTON) {\n-        ((GtkToggleButton*)gtk2_widget)->active = is_active;\n-    }\n-\n-    if ((synth_state & FOCUSED) != 0) {\n-        ((GtkObject*)gtk2_widget)->flags |= GTK_HAS_FOCUS;\n-    } else {\n-        ((GtkObject*)gtk2_widget)->flags &= ~GTK_HAS_FOCUS;\n-    }\n-\n-    if ((((synth_state & MOUSE_OVER) != 0) && ((synth_state & PRESSED) == 0)) ||\n-           (((synth_state & FOCUSED) != 0) && ((synth_state & PRESSED) != 0))) {\n-        gtk2_widget->state = GTK_STATE_PRELIGHT;\n-    } else if ((synth_state & DISABLED) != 0) {\n-        gtk2_widget->state = GTK_STATE_INSENSITIVE;\n-    } else {\n-        gtk2_widget->state = is_active ? GTK_STATE_ACTIVE : GTK_STATE_NORMAL;\n-    }\n-}\n-\n-\/* GTK state_type filter *\/\n-static GtkStateType get_gtk_state_type(WidgetType widget_type, gint synth_state)\n-{\n-    GtkStateType result = GTK_STATE_NORMAL;\n-\n-    if ((synth_state & DISABLED) != 0) {\n-        result = GTK_STATE_INSENSITIVE;\n-    } else if ((synth_state & PRESSED) != 0) {\n-        result = GTK_STATE_ACTIVE;\n-    } else if ((synth_state & MOUSE_OVER) != 0) {\n-        result = GTK_STATE_PRELIGHT;\n-    }\n-    return result;\n-}\n-\n-\/* GTK shadow_type filter *\/\n-static GtkShadowType get_gtk_shadow_type(WidgetType widget_type, gint synth_state)\n-{\n-    GtkShadowType result = GTK_SHADOW_OUT;\n-\n-    if ((synth_state & SELECTED) != 0) {\n-        result = GTK_SHADOW_IN;\n-    }\n-    return result;\n-}\n-\n-\n-static GtkWidget* gtk2_get_arrow(GtkArrowType arrow_type, GtkShadowType shadow_type)\n-{\n-    GtkWidget *arrow = NULL;\n-    if (NULL == gtk2_widgets[_GTK_ARROW_TYPE])\n-    {\n-        gtk2_widgets[_GTK_ARROW_TYPE] = (*fp_gtk_arrow_new)(arrow_type, shadow_type);\n-        (*fp_gtk_container_add)((GtkContainer *)gtk2_fixed, gtk2_widgets[_GTK_ARROW_TYPE]);\n-        (*fp_gtk_widget_realize)(gtk2_widgets[_GTK_ARROW_TYPE]);\n-    }\n-    arrow = gtk2_widgets[_GTK_ARROW_TYPE];\n-\n-    (*fp_gtk_arrow_set)(arrow, arrow_type, shadow_type);\n-    return arrow;\n-}\n-\n-static GtkAdjustment* create_adjustment()\n-{\n-    return (GtkAdjustment *)\n-            (*fp_gtk_adjustment_new)(50.0, 0.0, 100.0, 10.0, 20.0, 20.0);\n-}\n-\n-\/**\n- * Returns a pointer to the cached native widget for the specified widget\n- * type.\n- *\/\n-static GtkWidget *gtk2_get_widget(WidgetType widget_type)\n-{\n-    gboolean init_result = FALSE;\n-    GtkWidget *result = NULL;\n-    switch (widget_type)\n-    {\n-        case BUTTON:\n-        case TABLE_HEADER:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_BUTTON_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_BUTTON_TYPE] = (*fp_gtk_button_new)();\n-            }\n-            result = gtk2_widgets[_GTK_BUTTON_TYPE];\n-            break;\n-        case CHECK_BOX:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_CHECK_BUTTON_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_CHECK_BUTTON_TYPE] =\n-                    (*fp_gtk_check_button_new)();\n-            }\n-            result = gtk2_widgets[_GTK_CHECK_BUTTON_TYPE];\n-            break;\n-        case CHECK_BOX_MENU_ITEM:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_CHECK_MENU_ITEM_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_CHECK_MENU_ITEM_TYPE] =\n-                    (*fp_gtk_check_menu_item_new)();\n-            }\n-            result = gtk2_widgets[_GTK_CHECK_MENU_ITEM_TYPE];\n-            break;\n-        \/************************************************************\n-         *    Creation a dedicated color chooser is dangerous because\n-         * it deadlocks the EDT\n-         ************************************************************\/\n-\/*        case COLOR_CHOOSER:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_COLOR_SELECTION_DIALOG_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_COLOR_SELECTION_DIALOG_TYPE] =\n-                    (*fp_gtk_color_selection_dialog_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_COLOR_SELECTION_DIALOG_TYPE];\n-            break;*\/\n-        case COMBO_BOX:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_COMBO_BOX_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_COMBO_BOX_TYPE] =\n-                    (*fp_gtk_combo_box_new)();\n-            }\n-            result = gtk2_widgets[_GTK_COMBO_BOX_TYPE];\n-            break;\n-        case COMBO_BOX_ARROW_BUTTON:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_COMBO_BOX_ARROW_BUTTON_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_COMBO_BOX_ARROW_BUTTON_TYPE] =\n-                     (*fp_gtk_toggle_button_new)();\n-            }\n-            result = gtk2_widgets[_GTK_COMBO_BOX_ARROW_BUTTON_TYPE];\n-            break;\n-        case COMBO_BOX_TEXT_FIELD:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_COMBO_BOX_TEXT_FIELD_TYPE]))\n-            {\n-                result = gtk2_widgets[_GTK_COMBO_BOX_TEXT_FIELD_TYPE] =\n-                     (*fp_gtk_entry_new)();\n-            }\n-            result = gtk2_widgets[_GTK_COMBO_BOX_TEXT_FIELD_TYPE];\n-            break;\n-        case DESKTOP_ICON:\n-        case INTERNAL_FRAME_TITLE_PANE:\n-        case LABEL:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_LABEL_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_LABEL_TYPE] =\n-                    (*fp_gtk_label_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_LABEL_TYPE];\n-            break;\n-        case DESKTOP_PANE:\n-        case PANEL:\n-        case ROOT_PANE:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_CONTAINER_TYPE]))\n-            {\n-                \/* There is no constructor for a container type.  I've\n-                 * chosen GtkFixed container since it has a default\n-                 * constructor.\n-                 *\/\n-                gtk2_widgets[_GTK_CONTAINER_TYPE] =\n-                    (*fp_gtk_fixed_new)();\n-            }\n-            result = gtk2_widgets[_GTK_CONTAINER_TYPE];\n-            break;\n-        case EDITOR_PANE:\n-        case TEXT_AREA:\n-        case TEXT_PANE:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_TEXT_VIEW_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_TEXT_VIEW_TYPE] =\n-                    (*fp_gtk_text_view_new)();\n-            }\n-            result = gtk2_widgets[_GTK_TEXT_VIEW_TYPE];\n-            break;\n-        case FORMATTED_TEXT_FIELD:\n-        case PASSWORD_FIELD:\n-        case TEXT_FIELD:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_ENTRY_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_ENTRY_TYPE] =\n-                    (*fp_gtk_entry_new)();\n-            }\n-            result = gtk2_widgets[_GTK_ENTRY_TYPE];\n-            break;\n-        case HANDLE_BOX:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HANDLE_BOX_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HANDLE_BOX_TYPE] =\n-                    (*fp_gtk_handle_box_new)();\n-            }\n-            result = gtk2_widgets[_GTK_HANDLE_BOX_TYPE];\n-            break;\n-        case HSCROLL_BAR:\n-        case HSCROLL_BAR_BUTTON_LEFT:\n-        case HSCROLL_BAR_BUTTON_RIGHT:\n-        case HSCROLL_BAR_TRACK:\n-        case HSCROLL_BAR_THUMB:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HSCROLLBAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HSCROLLBAR_TYPE] =\n-                    (*fp_gtk_hscrollbar_new)(create_adjustment());\n-            }\n-            result = gtk2_widgets[_GTK_HSCROLLBAR_TYPE];\n-            break;\n-        case HSEPARATOR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HSEPARATOR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HSEPARATOR_TYPE] =\n-                    (*fp_gtk_hseparator_new)();\n-            }\n-            result = gtk2_widgets[_GTK_HSEPARATOR_TYPE];\n-            break;\n-        case HSLIDER:\n-        case HSLIDER_THUMB:\n-        case HSLIDER_TRACK:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HSCALE_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HSCALE_TYPE] =\n-                    (*fp_gtk_hscale_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_HSCALE_TYPE];\n-            break;\n-        case HSPLIT_PANE_DIVIDER:\n-        case SPLIT_PANE:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HPANED_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HPANED_TYPE] = (*fp_gtk_hpaned_new)();\n-            }\n-            result = gtk2_widgets[_GTK_HPANED_TYPE];\n-            break;\n-        case IMAGE:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_IMAGE_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_IMAGE_TYPE] = (*fp_gtk_image_new)();\n-            }\n-            result = gtk2_widgets[_GTK_IMAGE_TYPE];\n-            break;\n-        case INTERNAL_FRAME:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_WINDOW_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_WINDOW_TYPE] =\n-                    (*fp_gtk_window_new)(GTK_WINDOW_TOPLEVEL);\n-            }\n-            result = gtk2_widgets[_GTK_WINDOW_TYPE];\n-            break;\n-        case TOOL_TIP:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_TOOLTIP_TYPE]))\n-            {\n-                result = (*fp_gtk_window_new)(GTK_WINDOW_TOPLEVEL);\n-                (*fp_gtk_widget_set_name)(result, \"gtk-tooltips\");\n-                gtk2_widgets[_GTK_TOOLTIP_TYPE] = result;\n-            }\n-            result = gtk2_widgets[_GTK_TOOLTIP_TYPE];\n-            break;\n-        case LIST:\n-        case TABLE:\n-        case TREE:\n-        case TREE_CELL:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_TREE_VIEW_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_TREE_VIEW_TYPE] =\n-                    (*fp_gtk_tree_view_new)();\n-            }\n-            result = gtk2_widgets[_GTK_TREE_VIEW_TYPE];\n-            break;\n-        case TITLED_BORDER:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_FRAME_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_FRAME_TYPE] = fp_gtk_frame_new(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_FRAME_TYPE];\n-            break;\n-        case POPUP_MENU:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_MENU_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_MENU_TYPE] =\n-                    (*fp_gtk_menu_new)();\n-            }\n-            result = gtk2_widgets[_GTK_MENU_TYPE];\n-            break;\n-        case MENU:\n-        case MENU_ITEM:\n-        case MENU_ITEM_ACCELERATOR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_MENU_ITEM_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_MENU_ITEM_TYPE] =\n-                    (*fp_gtk_menu_item_new)();\n-            }\n-            result = gtk2_widgets[_GTK_MENU_ITEM_TYPE];\n-            break;\n-        case MENU_BAR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_MENU_BAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_MENU_BAR_TYPE] =\n-                    (*fp_gtk_menu_bar_new)();\n-            }\n-            result = gtk2_widgets[_GTK_MENU_BAR_TYPE];\n-            break;\n-        case COLOR_CHOOSER:\n-        case OPTION_PANE:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_DIALOG_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_DIALOG_TYPE] =\n-                    (*fp_gtk_dialog_new)();\n-            }\n-            result = gtk2_widgets[_GTK_DIALOG_TYPE];\n-            break;\n-        case POPUP_MENU_SEPARATOR:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_SEPARATOR_MENU_ITEM_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_SEPARATOR_MENU_ITEM_TYPE] =\n-                    (*fp_gtk_separator_menu_item_new)();\n-            }\n-            result = gtk2_widgets[_GTK_SEPARATOR_MENU_ITEM_TYPE];\n-            break;\n-        case HPROGRESS_BAR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_HPROGRESS_BAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_HPROGRESS_BAR_TYPE] =\n-                    (*fp_gtk_progress_bar_new)();\n-            }\n-            result = gtk2_widgets[_GTK_HPROGRESS_BAR_TYPE];\n-            break;\n-        case VPROGRESS_BAR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VPROGRESS_BAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_VPROGRESS_BAR_TYPE] =\n-                    (*fp_gtk_progress_bar_new)();\n-                \/*\n-                 * Vertical JProgressBars always go bottom-to-top,\n-                 * regardless of the ComponentOrientation.\n-                 *\/\n-                (*fp_gtk_progress_bar_set_orientation)(\n-                    (GtkProgressBar *)gtk2_widgets[_GTK_VPROGRESS_BAR_TYPE],\n-                    GTK_PROGRESS_BOTTOM_TO_TOP);\n-            }\n-            result = gtk2_widgets[_GTK_VPROGRESS_BAR_TYPE];\n-            break;\n-        case RADIO_BUTTON:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_RADIO_BUTTON_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_RADIO_BUTTON_TYPE] =\n-                    (*fp_gtk_radio_button_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_RADIO_BUTTON_TYPE];\n-            break;\n-        case RADIO_BUTTON_MENU_ITEM:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_RADIO_MENU_ITEM_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_RADIO_MENU_ITEM_TYPE] =\n-                    (*fp_gtk_radio_menu_item_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_RADIO_MENU_ITEM_TYPE];\n-            break;\n-        case SCROLL_PANE:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_SCROLLED_WINDOW_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_SCROLLED_WINDOW_TYPE] =\n-                    (*fp_gtk_scrolled_window_new)(NULL, NULL);\n-            }\n-            result = gtk2_widgets[_GTK_SCROLLED_WINDOW_TYPE];\n-            break;\n-        case SPINNER:\n-        case SPINNER_ARROW_BUTTON:\n-        case SPINNER_TEXT_FIELD:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_SPIN_BUTTON_TYPE]))\n-            {\n-                result = gtk2_widgets[_GTK_SPIN_BUTTON_TYPE] =\n-                    (*fp_gtk_spin_button_new)(NULL, 0, 0);\n-            }\n-            result = gtk2_widgets[_GTK_SPIN_BUTTON_TYPE];\n-            break;\n-        case TABBED_PANE:\n-        case TABBED_PANE_TAB_AREA:\n-        case TABBED_PANE_CONTENT:\n-        case TABBED_PANE_TAB:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_NOTEBOOK_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_NOTEBOOK_TYPE] =\n-                    (*fp_gtk_notebook_new)();\n-            }\n-            result = gtk2_widgets[_GTK_NOTEBOOK_TYPE];\n-            break;\n-        case TOGGLE_BUTTON:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_TOGGLE_BUTTON_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_TOGGLE_BUTTON_TYPE] =\n-                    (*fp_gtk_toggle_button_new)();\n-            }\n-            result = gtk2_widgets[_GTK_TOGGLE_BUTTON_TYPE];\n-            break;\n-        case TOOL_BAR:\n-        case TOOL_BAR_DRAG_WINDOW:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_TOOLBAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_TOOLBAR_TYPE] =\n-                    (*fp_gtk_toolbar_new)();\n-            }\n-            result = gtk2_widgets[_GTK_TOOLBAR_TYPE];\n-            break;\n-        case TOOL_BAR_SEPARATOR:\n-            if (init_result =\n-                    (NULL == gtk2_widgets[_GTK_SEPARATOR_TOOL_ITEM_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_SEPARATOR_TOOL_ITEM_TYPE] =\n-                    (*fp_gtk_separator_tool_item_new)();\n-            }\n-            result = gtk2_widgets[_GTK_SEPARATOR_TOOL_ITEM_TYPE];\n-            break;\n-        case VIEWPORT:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VIEWPORT_TYPE]))\n-            {\n-                GtkAdjustment *adjustment = create_adjustment();\n-                gtk2_widgets[_GTK_VIEWPORT_TYPE] =\n-                    (*fp_gtk_viewport_new)(adjustment, adjustment);\n-            }\n-            result = gtk2_widgets[_GTK_VIEWPORT_TYPE];\n-            break;\n-        case VSCROLL_BAR:\n-        case VSCROLL_BAR_BUTTON_UP:\n-        case VSCROLL_BAR_BUTTON_DOWN:\n-        case VSCROLL_BAR_TRACK:\n-        case VSCROLL_BAR_THUMB:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VSCROLLBAR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_VSCROLLBAR_TYPE] =\n-                    (*fp_gtk_vscrollbar_new)(create_adjustment());\n-            }\n-            result = gtk2_widgets[_GTK_VSCROLLBAR_TYPE];\n-            break;\n-        case VSEPARATOR:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VSEPARATOR_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_VSEPARATOR_TYPE] =\n-                    (*fp_gtk_vseparator_new)();\n-            }\n-            result = gtk2_widgets[_GTK_VSEPARATOR_TYPE];\n-            break;\n-        case VSLIDER:\n-        case VSLIDER_THUMB:\n-        case VSLIDER_TRACK:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VSCALE_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_VSCALE_TYPE] =\n-                    (*fp_gtk_vscale_new)(NULL);\n-            }\n-            result = gtk2_widgets[_GTK_VSCALE_TYPE];\n-            \/*\n-             * Vertical JSliders start at the bottom, while vertical\n-             * GtkVScale widgets start at the top (by default), so to fix\n-             * this we set the \"inverted\" flag to get the Swing behavior.\n-             *\/\n-            ((GtkRange*)result)->inverted = 1;\n-            break;\n-        case VSPLIT_PANE_DIVIDER:\n-            if (init_result = (NULL == gtk2_widgets[_GTK_VPANED_TYPE]))\n-            {\n-                gtk2_widgets[_GTK_VPANED_TYPE] = (*fp_gtk_vpaned_new)();\n-            }\n-            result = gtk2_widgets[_GTK_VPANED_TYPE];\n-            break;\n-        default:\n-            result = NULL;\n-            break;\n-    }\n-\n-    if (result != NULL && init_result)\n-    {\n-        if (widget_type == RADIO_BUTTON_MENU_ITEM ||\n-                widget_type == CHECK_BOX_MENU_ITEM ||\n-                widget_type == MENU_ITEM ||\n-                widget_type == MENU ||\n-                widget_type == POPUP_MENU_SEPARATOR)\n-        {\n-            GtkWidget *menu = gtk2_get_widget(POPUP_MENU);\n-            (*fp_gtk_menu_shell_append)((GtkMenuShell *)menu, result);\n-        }\n-        else if (widget_type == POPUP_MENU)\n-        {\n-            GtkWidget *menu_bar = gtk2_get_widget(MENU_BAR);\n-            GtkWidget *root_menu = (*fp_gtk_menu_item_new)();\n-            (*fp_gtk_menu_item_set_submenu)((GtkMenuItem*)root_menu, result);\n-            (*fp_gtk_menu_shell_append)((GtkMenuShell *)menu_bar, root_menu);\n-        }\n-        else if (widget_type == COMBO_BOX_ARROW_BUTTON ||\n-                 widget_type == COMBO_BOX_TEXT_FIELD)\n-        {\n-            \/*\n-            * We add a regular GtkButton\/GtkEntry to a GtkComboBoxEntry\n-            * in order to trick engines into thinking it's a real combobox\n-            * arrow button\/text field.\n-            *\/\n-            GtkWidget *combo = (*fp_gtk_combo_box_entry_new)();\n-\n-            if (new_combo && widget_type == COMBO_BOX_ARROW_BUTTON) {\n-                (*fp_gtk_widget_set_parent)(result, combo);\n-                ((GtkBin*)combo)->child = result;\n-            } else {\n-                (*fp_gtk_container_add)((GtkContainer *)combo, result);\n-            }\n-            (*fp_gtk_container_add)((GtkContainer *)gtk2_fixed, combo);\n-        }\n-        else if (widget_type != TOOL_TIP &&\n-                 widget_type != INTERNAL_FRAME &&\n-                 widget_type != OPTION_PANE)\n-        {\n-            (*fp_gtk_container_add)((GtkContainer *)gtk2_fixed, result);\n-        }\n-        (*fp_gtk_widget_realize)(result);\n-    }\n-    return result;\n-}\n-\n-void gtk2_paint_arrow(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height,\n-        GtkArrowType arrow_type, gboolean fill)\n-{\n-    static int w, h;\n-    static GtkRequisition size;\n-\n-    if (widget_type == COMBO_BOX_ARROW_BUTTON || widget_type == TABLE)\n-        gtk2_widget = gtk2_get_arrow(arrow_type, shadow_type);\n-    else\n-        gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    switch (widget_type)\n-    {\n-        case SPINNER_ARROW_BUTTON:\n-            x = 1;\n-            y = ((arrow_type == GTK_ARROW_UP) ? 2 : 0);\n-            height -= 2;\n-            width -= 3;\n-\n-            w = width \/ 2;\n-            w -= w % 2 - 1;\n-            h = (w + 1) \/ 2;\n-            break;\n-\n-        case HSCROLL_BAR_BUTTON_LEFT:\n-        case HSCROLL_BAR_BUTTON_RIGHT:\n-        case VSCROLL_BAR_BUTTON_UP:\n-        case VSCROLL_BAR_BUTTON_DOWN:\n-            w = width \/ 2;\n-            h = height \/ 2;\n-            break;\n-\n-        case COMBO_BOX_ARROW_BUTTON:\n-        case TABLE:\n-            x = 1;\n-            (*fp_gtk_widget_size_request)(gtk2_widget, &size);\n-            w = size.width - ((GtkMisc*)gtk2_widget)->xpad * 2;\n-            h = size.height - ((GtkMisc*)gtk2_widget)->ypad * 2;\n-            w = h = MIN(MIN(w, h), MIN(width,height)) * 0.7;\n-            break;\n-\n-        default:\n-            w = width;\n-            h = height;\n-            break;\n-    }\n-    x += (width - w) \/ 2;\n-    y += (height - h) \/ 2;\n-\n-    (*fp_gtk_paint_arrow)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, arrow_type, fill,\n-            x, y, w, h);\n-    (*fp_gtk_paint_arrow)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, arrow_type, fill,\n-            x, y, w, h);\n-}\n-\n-static void gtk2_paint_box(WidgetType widget_type, GtkStateType state_type,\n-                    GtkShadowType shadow_type, const gchar *detail,\n-                    gint x, gint y, gint width, gint height,\n-                    gint synth_state, GtkTextDirection dir)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    \/*\n-     * The clearlooks engine sometimes looks at the widget's state field\n-     * instead of just the state_type variable that we pass in, so to account\n-     * for those cases we set the widget's state field accordingly.  The\n-     * flags field is similarly important for things like focus\/default state.\n-     *\/\n-    gtk2_widget->state = state_type;\n-\n-    if (widget_type == HSLIDER_TRACK) {\n-        \/*\n-         * For horizontal JSliders with right-to-left orientation, we need\n-         * to set the \"inverted\" flag to match the native GTK behavior where\n-         * the foreground highlight is on the right side of the slider thumb.\n-         * This is needed especially for the ubuntulooks engine, which looks\n-         * exclusively at the \"inverted\" flag to determine on which side of\n-         * the thumb to paint the highlight...\n-         *\/\n-        ((GtkRange*)gtk2_widget)->inverted = (dir == GTK_TEXT_DIR_RTL);\n-\n-        \/*\n-         * Note however that other engines like clearlooks will look at both\n-         * the \"inverted\" field and the text direction to determine how\n-         * the foreground highlight is painted:\n-         *     !inverted && ltr --> paint highlight on left side\n-         *     !inverted && rtl --> paint highlight on right side\n-         *      inverted && ltr --> paint highlight on right side\n-         *      inverted && rtl --> paint highlight on left side\n-         * So the only way to reliably get the desired results for horizontal\n-         * JSlider (i.e., highlight on left side for LTR ComponentOrientation\n-         * and highlight on right side for RTL ComponentOrientation) is to\n-         * always override text direction as LTR, and then set the \"inverted\"\n-         * flag accordingly (as we have done above).\n-         *\/\n-        dir = GTK_TEXT_DIR_LTR;\n-    }\n-\n-    \/*\n-     * Some engines (e.g. clearlooks) will paint the shadow of certain\n-     * widgets (e.g. COMBO_BOX_ARROW_BUTTON) differently depending on the\n-     * the text direction.\n-     *\/\n-    gtk2_set_direction(gtk2_widget, dir);\n-\n-    switch (widget_type) {\n-    case BUTTON:\n-        if (synth_state & DEFAULT) {\n-            ((GtkObject*)gtk2_widget)->flags |= GTK_HAS_DEFAULT;\n-        } else {\n-            ((GtkObject*)gtk2_widget)->flags &= ~GTK_HAS_DEFAULT;\n-        }\n-        break;\n-    case TOGGLE_BUTTON:\n-        init_toggle_widget(widget_type, synth_state);\n-        break;\n-    case HSCROLL_BAR_BUTTON_LEFT:\n-        \/*\n-         * The clearlooks engine will draw a \"left\" button when:\n-         *   x == w->allocation.x\n-         *\n-         * The ubuntulooks engine will draw a \"left\" button when:\n-         *   [x,y,width,height]\n-         *     intersects\n-         *   [w->alloc.x,w->alloc.y,width,height]\n-         *\n-         * The values that are set below should ensure that a \"left\"\n-         * button is rendered for both of these (and other) engines.\n-         *\/\n-        gtk2_widget->allocation.x = x;\n-        gtk2_widget->allocation.y = y;\n-        gtk2_widget->allocation.width = width;\n-        gtk2_widget->allocation.height = height;\n-        break;\n-    case HSCROLL_BAR_BUTTON_RIGHT:\n-        \/*\n-         * The clearlooks engine will draw a \"right\" button when:\n-         *   x + width == w->allocation.x + w->allocation.width\n-         *\n-         * The ubuntulooks engine will draw a \"right\" button when:\n-         *   [x,y,width,height]\n-         *     does not intersect\n-         *   [w->alloc.x,w->alloc.y,width,height]\n-         *     but does intersect\n-         *   [w->alloc.x+width,w->alloc.y,width,height]\n-         *\n-         * The values that are set below should ensure that a \"right\"\n-         * button is rendered for both of these (and other) engines.\n-         *\/\n-        gtk2_widget->allocation.x = x+width;\n-        gtk2_widget->allocation.y = 0;\n-        gtk2_widget->allocation.width = 0;\n-        gtk2_widget->allocation.height = height;\n-        break;\n-    case VSCROLL_BAR_BUTTON_UP:\n-        \/*\n-         * The clearlooks engine will draw an \"up\" button when:\n-         *   y == w->allocation.y\n-         *\n-         * The ubuntulooks engine will draw an \"up\" button when:\n-         *   [x,y,width,height]\n-         *     intersects\n-         *   [w->alloc.x,w->alloc.y,width,height]\n-         *\n-         * The values that are set below should ensure that an \"up\"\n-         * button is rendered for both of these (and other) engines.\n-         *\/\n-        gtk2_widget->allocation.x = x;\n-        gtk2_widget->allocation.y = y;\n-        gtk2_widget->allocation.width = width;\n-        gtk2_widget->allocation.height = height;\n-        break;\n-    case VSCROLL_BAR_BUTTON_DOWN:\n-        \/*\n-         * The clearlooks engine will draw a \"down\" button when:\n-         *   y + height == w->allocation.y + w->allocation.height\n-         *\n-         * The ubuntulooks engine will draw a \"down\" button when:\n-         *   [x,y,width,height]\n-         *     does not intersect\n-         *   [w->alloc.x,w->alloc.y,width,height]\n-         *     but does intersect\n-         *   [w->alloc.x,w->alloc.y+height,width,height]\n-         *\n-         * The values that are set below should ensure that a \"down\"\n-         * button is rendered for both of these (and other) engines.\n-         *\/\n-        gtk2_widget->allocation.x = x;\n-        gtk2_widget->allocation.y = y+height;\n-        gtk2_widget->allocation.width = width;\n-        gtk2_widget->allocation.height = 0;\n-        break;\n-    default:\n-        break;\n-    }\n-\n-    (*fp_gtk_paint_box)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, x, y, width, height);\n-    (*fp_gtk_paint_box)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, x, y, width, height);\n-\n-    \/*\n-     * Reset the text direction to the default value so that we don't\n-     * accidentally affect other operations and widgets.\n-     *\/\n-    gtk2_set_direction(gtk2_widget, GTK_TEXT_DIR_LTR);\n-}\n-\n-void gtk2_paint_box_gap(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height,\n-        GtkPositionType gap_side, gint gap_x, gint gap_width)\n-{\n-    \/* Clearlooks needs a real clip area to paint the gap properly *\/\n-    GdkRectangle area = { x, y, width, height };\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_box_gap)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, &area, gtk2_widget, detail,\n-            x, y, width, height, gap_side, gap_x, gap_width);\n-    (*fp_gtk_paint_box_gap)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, &area, gtk2_widget, detail,\n-            x, y, width, height, gap_side, gap_x, gap_width);\n-}\n-\n-static void gtk2_paint_check(WidgetType widget_type, gint synth_state,\n-        const gchar *detail, gint x, gint y, gint width, gint height)\n-{\n-    GtkStateType state_type = get_gtk_state_type(widget_type, synth_state);\n-    GtkShadowType shadow_type = get_gtk_shadow_type(widget_type, synth_state);\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    init_toggle_widget(widget_type, synth_state);\n-\n-    (*fp_gtk_paint_check)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-    (*fp_gtk_paint_check)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-}\n-\n-static void gtk2_paint_expander(WidgetType widget_type, GtkStateType state_type,\n-        const gchar *detail, gint x, gint y, gint width, gint height,\n-        GtkExpanderStyle expander_style)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_expander)(gtk2_widget->style, gtk2_white_pixmap,\n-            state_type, NULL, gtk2_widget, detail,\n-            x + width \/ 2, y + height \/ 2, expander_style);\n-    (*fp_gtk_paint_expander)(gtk2_widget->style, gtk2_black_pixmap,\n-            state_type, NULL, gtk2_widget, detail,\n-            x + width \/ 2, y + height \/ 2, expander_style);\n-}\n-\n-static void gtk2_paint_extension(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height, GtkPositionType gap_side)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_extension)(gtk2_widget->style, gtk2_white_pixmap,\n-            state_type, shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, gap_side);\n-    (*fp_gtk_paint_extension)(gtk2_widget->style, gtk2_black_pixmap,\n-            state_type, shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, gap_side);\n-}\n-\n-static void gtk2_paint_flat_box(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height, gboolean has_focus)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    if (has_focus)\n-        ((GtkObject*)gtk2_widget)->flags |= GTK_HAS_FOCUS;\n-    else\n-        ((GtkObject*)gtk2_widget)->flags &= ~GTK_HAS_FOCUS;\n-\n-    (*fp_gtk_paint_flat_box)(gtk2_widget->style, gtk2_white_pixmap,\n-            state_type, shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-    (*fp_gtk_paint_flat_box)(gtk2_widget->style, gtk2_black_pixmap,\n-            state_type, shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-}\n-\n-static void gtk2_paint_focus(WidgetType widget_type, GtkStateType state_type,\n-        const char *detail, gint x, gint y, gint width, gint height)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_focus)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            NULL, gtk2_widget, detail, x, y, width, height);\n-    (*fp_gtk_paint_focus)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            NULL, gtk2_widget, detail, x, y, width, height);\n-}\n-\n-static void gtk2_paint_handle(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height, GtkOrientation orientation)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_handle)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, orientation);\n-    (*fp_gtk_paint_handle)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, orientation);\n-}\n-\n-static void gtk2_paint_hline(WidgetType widget_type, GtkStateType state_type,\n-        const gchar *detail, gint x, gint y, gint width, gint height)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_hline)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            NULL, gtk2_widget, detail, x, x + width, y);\n-    (*fp_gtk_paint_hline)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            NULL, gtk2_widget, detail, x, x + width, y);\n-}\n-\n-static void gtk2_paint_option(WidgetType widget_type, gint synth_state,\n-        const gchar *detail, gint x, gint y, gint width, gint height)\n-{\n-    GtkStateType state_type = get_gtk_state_type(widget_type, synth_state);\n-    GtkShadowType shadow_type = get_gtk_shadow_type(widget_type, synth_state);\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    init_toggle_widget(widget_type, synth_state);\n-\n-    (*fp_gtk_paint_option)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-    (*fp_gtk_paint_option)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height);\n-}\n-\n-static void gtk2_paint_shadow(WidgetType widget_type, GtkStateType state_type,\n-                       GtkShadowType shadow_type, const gchar *detail,\n-                       gint x, gint y, gint width, gint height,\n-                       gint synth_state, GtkTextDirection dir)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    \/*\n-     * The clearlooks engine sometimes looks at the widget's state field\n-     * instead of just the state_type variable that we pass in, so to account\n-     * for those cases we set the widget's state field accordingly.  The\n-     * flags field is similarly important for things like focus state.\n-     *\/\n-    gtk2_widget->state = state_type;\n-\n-    \/*\n-     * Some engines (e.g. clearlooks) will paint the shadow of certain\n-     * widgets (e.g. COMBO_BOX_TEXT_FIELD) differently depending on the\n-     * the text direction.\n-     *\/\n-    gtk2_set_direction(gtk2_widget, dir);\n-\n-    switch (widget_type) {\n-    case COMBO_BOX_TEXT_FIELD:\n-    case FORMATTED_TEXT_FIELD:\n-    case PASSWORD_FIELD:\n-    case SPINNER_TEXT_FIELD:\n-    case TEXT_FIELD:\n-        if (synth_state & FOCUSED) {\n-            ((GtkObject*)gtk2_widget)->flags |= GTK_HAS_FOCUS;\n-        } else {\n-            ((GtkObject*)gtk2_widget)->flags &= ~GTK_HAS_FOCUS;\n-        }\n-        break;\n-    default:\n-        break;\n-    }\n-\n-    (*fp_gtk_paint_shadow)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, x, y, width, height);\n-    (*fp_gtk_paint_shadow)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail, x, y, width, height);\n-\n-    \/*\n-     * Reset the text direction to the default value so that we don't\n-     * accidentally affect other operations and widgets.\n-     *\/\n-    gtk2_set_direction(gtk2_widget, GTK_TEXT_DIR_LTR);\n-}\n-\n-static void gtk2_paint_slider(WidgetType widget_type, GtkStateType state_type,\n-        GtkShadowType shadow_type, const gchar *detail,\n-        gint x, gint y, gint width, gint height, GtkOrientation orientation,\n-        gboolean has_focus)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_slider)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, orientation);\n-    (*fp_gtk_paint_slider)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            shadow_type, NULL, gtk2_widget, detail,\n-            x, y, width, height, orientation);\n-}\n-\n-static void gtk2_paint_vline(WidgetType widget_type, GtkStateType state_type,\n-        const gchar *detail, gint x, gint y, gint width, gint height)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_paint_vline)(gtk2_widget->style, gtk2_white_pixmap, state_type,\n-            NULL, gtk2_widget, detail, y, y + height, x);\n-    (*fp_gtk_paint_vline)(gtk2_widget->style, gtk2_black_pixmap, state_type,\n-            NULL, gtk2_widget, detail, y, y + height, x);\n-}\n-\n-static void gtk_paint_background(WidgetType widget_type, GtkStateType state_type,\n-        gint x, gint y, gint width, gint height)\n-{\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    (*fp_gtk_style_apply_default_background)(gtk2_widget->style,\n-            gtk2_white_pixmap, TRUE, state_type, NULL, x, y, width, height);\n-    (*fp_gtk_style_apply_default_background)(gtk2_widget->style,\n-            gtk2_black_pixmap, TRUE, state_type, NULL, x, y, width, height);\n-}\n-\n-static GdkPixbuf *gtk2_get_stock_icon(gint widget_type, const gchar *stock_id,\n-        GtkIconSize size, GtkTextDirection direction, const char *detail)\n-{\n-    init_containers();\n-    gtk2_widget = gtk2_get_widget((widget_type < 0) ? IMAGE : widget_type);\n-    gtk2_widget->state = GTK_STATE_NORMAL;\n-    (*fp_gtk_widget_set_direction)(gtk2_widget, direction);\n-    return (*fp_gtk_widget_render_icon)(gtk2_widget, stock_id, size, detail);\n-}\n-\n-static jboolean gtk2_get_pixbuf_data(JNIEnv *env, GdkPixbuf* pixbuf,\n-                              jmethodID icon_upcall_method, jobject this) {\n-    if (!pixbuf) {\n-        return JNI_FALSE;\n-    }\n-    guchar *pixbuf_data = (*fp_gdk_pixbuf_get_pixels)(pixbuf);\n-    if (pixbuf_data) {\n-        int row_stride = (*fp_gdk_pixbuf_get_rowstride)(pixbuf);\n-        int width = (*fp_gdk_pixbuf_get_width)(pixbuf);\n-        int height = (*fp_gdk_pixbuf_get_height)(pixbuf);\n-        int bps = (*fp_gdk_pixbuf_get_bits_per_sample)(pixbuf);\n-        int channels = (*fp_gdk_pixbuf_get_n_channels)(pixbuf);\n-        gboolean alpha = (*fp_gdk_pixbuf_get_has_alpha)(pixbuf);\n-\n-        jbyteArray data = (*env)->NewByteArray(env, (row_stride * height));\n-        JNU_CHECK_EXCEPTION_RETURN(env, JNI_FALSE);\n-\n-        (*env)->SetByteArrayRegion(env, data, 0, (row_stride * height),\n-                                   (jbyte *)pixbuf_data);\n-        (*fp_g_object_unref)(pixbuf);\n-\n-        \/* Call the callback method to create the image on the Java side. *\/\n-        (*env)->CallVoidMethod(env, this, icon_upcall_method, data,\n-                width, height, row_stride, bps, channels, alpha);\n-        return JNI_TRUE;\n-    }\n-    return JNI_FALSE;\n-}\n-\n-static jboolean gtk2_get_file_icon_data(JNIEnv *env, const char *filename,\n-                 GError **error, jmethodID icon_upcall_method, jobject this) {\n-    GdkPixbuf* pixbuf = fp_gdk_pixbuf_new_from_file(filename, error);\n-    return gtk2_get_pixbuf_data(env, pixbuf, icon_upcall_method, this);\n-}\n-\n-static jboolean gtk2_get_icon_data(JNIEnv *env, gint widget_type,\n-                              const gchar *stock_id, GtkIconSize size,\n-                              GtkTextDirection direction, const char *detail,\n-                              jmethodID icon_upcall_method, jobject this) {\n-    GdkPixbuf* pixbuf = gtk2_get_stock_icon(widget_type, stock_id, size,\n-                                       direction, detail);\n-    return gtk2_get_pixbuf_data(env, pixbuf, icon_upcall_method, this);\n-}\n-\n-\/*************************************************\/\n-static gint gtk2_get_xthickness(JNIEnv *env, WidgetType widget_type)\n-{\n-    init_containers();\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    GtkStyle* style = gtk2_widget->style;\n-    return style->xthickness;\n-}\n-\n-static gint gtk2_get_ythickness(JNIEnv *env, WidgetType widget_type)\n-{\n-    init_containers();\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    GtkStyle* style = gtk2_widget->style;\n-    return style->ythickness;\n-}\n-\n-\/*************************************************\/\n-static guint8 recode_color(guint16 channel)\n-{\n-    return (guint8)(channel>>8);\n-}\n-\n-static gint gtk2_get_color_for_state(JNIEnv *env, WidgetType widget_type,\n-                              GtkStateType state_type, ColorType color_type)\n-{\n-    gint result = 0;\n-    GdkColor *color = NULL;\n-\n-    init_containers();\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    GtkStyle* style = gtk2_widget->style;\n-\n-    switch (color_type)\n-    {\n-        case FOREGROUND:\n-            color = &(style->fg[state_type]);\n-            break;\n-        case BACKGROUND:\n-            color = &(style->bg[state_type]);\n-            break;\n-        case TEXT_FOREGROUND:\n-            color = &(style->text[state_type]);\n-            break;\n-        case TEXT_BACKGROUND:\n-            color = &(style->base[state_type]);\n-            break;\n-        case LIGHT:\n-            color = &(style->light[state_type]);\n-            break;\n-        case DARK:\n-            color = &(style->dark[state_type]);\n-            break;\n-        case MID:\n-            color = &(style->mid[state_type]);\n-            break;\n-        case FOCUS:\n-        case BLACK:\n-            color = &(style->black);\n-            break;\n-        case WHITE:\n-            color = &(style->white);\n-            break;\n-    }\n-\n-    if (color)\n-        result = recode_color(color->red)   << 16 |\n-                 recode_color(color->green) << 8  |\n-                 recode_color(color->blue);\n-\n-    return result;\n-}\n-\n-\/*************************************************\/\n-static jobject create_Boolean(JNIEnv *env, jboolean boolean_value);\n-static jobject create_Integer(JNIEnv *env, jint int_value);\n-static jobject create_Long(JNIEnv *env, jlong long_value);\n-static jobject create_Float(JNIEnv *env, jfloat float_value);\n-static jobject create_Double(JNIEnv *env, jdouble double_value);\n-static jobject create_Character(JNIEnv *env, jchar char_value);\n-static jobject create_Insets(JNIEnv *env, GtkBorder *border);\n-\n-static jobject gtk2_get_class_value(JNIEnv *env, WidgetType widget_type,\n-                              const char* key)\n-{\n-    init_containers();\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    GValue value;\n-    value.g_type = 0;\n-\n-    GParamSpec* param = (*fp_gtk_widget_class_find_style_property)(\n-                                    ((GTypeInstance*)gtk2_widget)->g_class, key);\n-    if( param )\n-    {\n-        (*fp_g_value_init)( &value, param->value_type );\n-        (*fp_gtk_widget_style_get_property)(gtk2_widget, key, &value);\n-\n-        if( (*fp_g_type_is_a)( param->value_type, G_TYPE_BOOLEAN ))\n-        {\n-            gboolean val = (*fp_g_value_get_boolean)(&value);\n-            return create_Boolean(env, (jboolean)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_CHAR ))\n-        {\n-            gchar val = (*fp_g_value_get_char)(&value);\n-            return create_Character(env, (jchar)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_UCHAR ))\n-        {\n-            guchar val = (*fp_g_value_get_uchar)(&value);\n-            return create_Character(env, (jchar)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_INT ))\n-        {\n-            gint val = (*fp_g_value_get_int)(&value);\n-            return create_Integer(env, (jint)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_UINT ))\n-        {\n-            guint val = (*fp_g_value_get_uint)(&value);\n-            return create_Integer(env, (jint)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_LONG ))\n-        {\n-            glong val = (*fp_g_value_get_long)(&value);\n-            return create_Long(env, (jlong)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_ULONG ))\n-        {\n-            gulong val = (*fp_g_value_get_ulong)(&value);\n-            return create_Long(env, (jlong)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_INT64 ))\n-        {\n-            gint64 val = (*fp_g_value_get_int64)(&value);\n-            return create_Long(env, (jlong)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_UINT64 ))\n-        {\n-            guint64 val = (*fp_g_value_get_uint64)(&value);\n-            return create_Long(env, (jlong)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_FLOAT ))\n-        {\n-            gfloat val = (*fp_g_value_get_float)(&value);\n-            return create_Float(env, (jfloat)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_DOUBLE ))\n-        {\n-            gdouble val = (*fp_g_value_get_double)(&value);\n-            return create_Double(env, (jdouble)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_ENUM ))\n-        {\n-            gint val = (*fp_g_value_get_enum)(&value);\n-            return create_Integer(env, (jint)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_FLAGS ))\n-        {\n-            guint val = (*fp_g_value_get_flags)(&value);\n-            return create_Integer(env, (jint)val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_STRING ))\n-        {\n-            const gchar* val = (*fp_g_value_get_string)(&value);\n-\n-            \/* We suppose that all values come in C locale and\n-             * utf-8 representation of a string is the same as\n-             * the string itself. If this isn't so we should\n-             * use g_convert.\n-             *\/\n-            return (*env)->NewStringUTF(env, val);\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, GTK_TYPE_BORDER ))\n-        {\n-            GtkBorder *border = (GtkBorder*)(*fp_g_value_get_boxed)(&value);\n-            return border ? create_Insets(env, border) : NULL;\n-        }\n-\n-        \/*      TODO: Other types are not supported yet.*\/\n-\/*        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_PARAM ))\n-        {\n-            GParamSpec* val = (*fp_g_value_get_param)(&value);\n-            printf( \"Param: %p\\n\", val );\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_BOXED ))\n-        {\n-            gpointer* val = (*fp_g_value_get_boxed)(&value);\n-            printf( \"Boxed: %p\\n\", val );\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_POINTER ))\n-        {\n-            gpointer* val = (*fp_g_value_get_pointer)(&value);\n-            printf( \"Pointer: %p\\n\", val );\n-        }\n-        else if( (*fp_g_type_is_a)( param->value_type, G_TYPE_OBJECT ))\n-        {\n-            GObject* val = (GObject*)(*fp_g_value_get_object)(&value);\n-            printf( \"Object: %p\\n\", val );\n-        }*\/\n-    }\n-\n-    return NULL;\n-}\n-\n-static void gtk2_set_range_value(WidgetType widget_type, jdouble value,\n-                          jdouble min, jdouble max, jdouble visible)\n-{\n-    GtkAdjustment *adj;\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-\n-    adj = (*fp_gtk_range_get_adjustment)((GtkRange *)gtk2_widget);\n-    adj->value = (gdouble)value;\n-    adj->lower = (gdouble)min;\n-    adj->upper = (gdouble)max;\n-    adj->page_size = (gdouble)visible;\n-}\n-\n-\/*************************************************\/\n-static jobject create_Object(JNIEnv *env, jmethodID *cid,\n-                             const char* class_name,\n-                             const char* signature,\n-                             jvalue* value)\n-{\n-    jclass  class;\n-    jobject result;\n-\n-    class = (*env)->FindClass(env, class_name);\n-    if( class == NULL )\n-        return NULL; \/* can't find\/load the class, exception thrown *\/\n-\n-    if( *cid == NULL)\n-    {\n-        *cid = (*env)->GetMethodID(env, class, \"<init>\", signature);\n-        if( *cid == NULL )\n-        {\n-            (*env)->DeleteLocalRef(env, class);\n-            return NULL; \/* can't find\/get the method, exception thrown *\/\n-        }\n-    }\n-\n-    result = (*env)->NewObjectA(env, class, *cid, value);\n-\n-    (*env)->DeleteLocalRef(env, class);\n-    return result;\n-}\n-\n-jobject create_Boolean(JNIEnv *env, jboolean boolean_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.z = boolean_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Boolean\", \"(Z)V\", &value);\n-}\n-\n-jobject create_Integer(JNIEnv *env, jint int_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.i = int_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Integer\", \"(I)V\", &value);\n-}\n-\n-jobject create_Long(JNIEnv *env, jlong long_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.j = long_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Long\", \"(J)V\", &value);\n-}\n-\n-jobject create_Float(JNIEnv *env, jfloat float_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.f = float_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Float\", \"(F)V\", &value);\n-}\n-\n-jobject create_Double(JNIEnv *env, jdouble double_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.d = double_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Double\", \"(D)V\", &value);\n-}\n-\n-jobject create_Character(JNIEnv *env, jchar char_value)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue value;\n-\n-    value.c = char_value;\n-\n-    return create_Object(env, &cid, \"java\/lang\/Character\", \"(C)V\", &value);\n-}\n-\n-\n-jobject create_Insets(JNIEnv *env, GtkBorder *border)\n-{\n-    static jmethodID cid = NULL;\n-    jvalue values[4];\n-\n-    values[0].i = border->top;\n-    values[1].i = border->left;\n-    values[2].i = border->bottom;\n-    values[3].i = border->right;\n-\n-    return create_Object(env, &cid, \"java\/awt\/Insets\", \"(IIII)V\", values);\n-}\n-\n-\/*********************************************\/\n-static jstring gtk2_get_pango_font_name(JNIEnv *env, WidgetType widget_type)\n-{\n-    init_containers();\n-\n-    gtk2_widget = gtk2_get_widget(widget_type);\n-    jstring  result = NULL;\n-    GtkStyle* style = gtk2_widget->style;\n-\n-    if (style && style->font_desc)\n-    {\n-        gchar* val = (*fp_pango_font_description_to_string)(style->font_desc);\n-        result = (*env)->NewStringUTF(env, val);\n-        (*fp_g_free)( val );\n-    }\n-\n-    return result;\n-}\n-\n-\/***********************************************\/\n-static jobject get_string_property(JNIEnv *env, GtkSettings* settings, const gchar* key)\n-{\n-    jobject result = NULL;\n-    gchar*  strval = NULL;\n-\n-    (*fp_g_object_get)(settings, key, &strval, NULL);\n-    result = (*env)->NewStringUTF(env, strval);\n-    (*fp_g_free)(strval);\n-\n-    return result;\n-}\n-\n-static jobject get_integer_property(JNIEnv *env, GtkSettings* settings, const gchar* key)\n-{\n-    gint intval = 0;\n-    (*fp_g_object_get)(settings, key, &intval, NULL);\n-    return create_Integer(env, intval);\n-}\n-\n-static jobject get_boolean_property(JNIEnv *env, GtkSettings* settings, const gchar* key)\n-{\n-    gint intval = 0;\n-    (*fp_g_object_get)(settings, key, &intval, NULL);\n-    return create_Boolean(env, intval);\n-}\n-\n-static jobject gtk2_get_setting(JNIEnv *env, Setting property)\n-{\n-    GtkSettings* settings = (*fp_gtk_settings_get_default)();\n-\n-    switch (property)\n-    {\n-        case GTK_FONT_NAME:\n-            return get_string_property(env, settings, \"gtk-font-name\");\n-        case GTK_ICON_SIZES:\n-            return get_string_property(env, settings, \"gtk-icon-sizes\");\n-        case GTK_CURSOR_BLINK:\n-            return get_boolean_property(env, settings, \"gtk-cursor-blink\");\n-        case GTK_CURSOR_BLINK_TIME:\n-            return get_integer_property(env, settings, \"gtk-cursor-blink-time\");\n-    }\n-\n-    return NULL;\n-}\n-\n-static gboolean gtk2_get_drawable_data(JNIEnv *env, jintArray pixelArray, jint x,\n-     jint y, jint width, jint height, jint jwidth, int dx, int dy) {\n-    GdkPixbuf *pixbuf;\n-    jint *ary;\n-\n-    GdkWindow *root = (*fp_gdk_get_default_root_window)();\n-\n-    pixbuf = (*fp_gdk_pixbuf_get_from_drawable)(NULL, root, NULL, x, y,\n-                                                    0, 0, width, height);\n-\n-    if (pixbuf) {\n-        int nchan = (*fp_gdk_pixbuf_get_n_channels)(pixbuf);\n-        int stride = (*fp_gdk_pixbuf_get_rowstride)(pixbuf);\n-\n-        if ((*fp_gdk_pixbuf_get_width)(pixbuf) == width\n-                && (*fp_gdk_pixbuf_get_height)(pixbuf) == height\n-                && (*fp_gdk_pixbuf_get_bits_per_sample)(pixbuf) == 8\n-                && (*fp_gdk_pixbuf_get_colorspace)(pixbuf) == GDK_COLORSPACE_RGB\n-                && nchan >= 3\n-                ) {\n-            guchar *p, *pix = (*fp_gdk_pixbuf_get_pixels)(pixbuf);\n-\n-            ary = (*env)->GetPrimitiveArrayCritical(env, pixelArray, NULL);\n-            if (ary) {\n-                jint _x, _y;\n-                int index;\n-                for (_y = 0; _y < height; _y++) {\n-                    for (_x = 0; _x < width; _x++) {\n-                        p = pix + (intptr_t) _y * stride + _x * nchan;\n-\n-                        index = (_y + dy) * jwidth + (_x + dx);\n-                        ary[index] = 0xff000000\n-                                        | (p[0] << 16)\n-                                        | (p[1] << 8)\n-                                        | (p[2]);\n-\n-                    }\n-                }\n-                (*env)->ReleasePrimitiveArrayCritical(env, pixelArray, ary, 0);\n-            }\n-        }\n-        (*fp_g_object_unref)(pixbuf);\n-    }\n-    return JNI_FALSE;\n-}\n-\n-static GdkWindow* gtk2_get_window(void *widget) {\n-    return ((GtkWidget*)widget)->window;\n-}\n-\n-void gtk2_init(GtkApi* gtk) {\n-    gtk->version = GTK_2;\n-\n-    gtk->show_uri_load = &gtk2_show_uri_load;\n-    gtk->unload = &gtk2_unload;\n-    gtk->flush_event_loop = &flush_gtk_event_loop;\n-    gtk->gtk_check_version = fp_gtk_check_version;\n-    gtk->get_setting = &gtk2_get_setting;\n-\n-    gtk->paint_arrow = &gtk2_paint_arrow;\n-    gtk->paint_box = &gtk2_paint_box;\n-    gtk->paint_box_gap = &gtk2_paint_box_gap;\n-    gtk->paint_expander = &gtk2_paint_expander;\n-    gtk->paint_extension = &gtk2_paint_extension;\n-    gtk->paint_flat_box = &gtk2_paint_flat_box;\n-    gtk->paint_focus = &gtk2_paint_focus;\n-    gtk->paint_handle = &gtk2_paint_handle;\n-    gtk->paint_hline = &gtk2_paint_hline;\n-    gtk->paint_vline = &gtk2_paint_vline;\n-    gtk->paint_option = &gtk2_paint_option;\n-    gtk->paint_shadow = &gtk2_paint_shadow;\n-    gtk->paint_slider = &gtk2_paint_slider;\n-    gtk->paint_background = &gtk_paint_background;\n-    gtk->paint_check = &gtk2_paint_check;\n-    gtk->set_range_value = &gtk2_set_range_value;\n-\n-    gtk->init_painting = &gtk2_init_painting;\n-    gtk->copy_image = &gtk2_copy_image;\n-\n-    gtk->get_xthickness = &gtk2_get_xthickness;\n-    gtk->get_ythickness = &gtk2_get_ythickness;\n-    gtk->get_color_for_state = &gtk2_get_color_for_state;\n-    gtk->get_class_value = &gtk2_get_class_value;\n-\n-    gtk->get_pango_font_name = &gtk2_get_pango_font_name;\n-    gtk->get_icon_data = &gtk2_get_icon_data;\n-    gtk->get_file_icon_data = &gtk2_get_file_icon_data;\n-    gtk->gdk_threads_enter = fp_gdk_threads_enter;\n-    gtk->gdk_threads_leave = fp_gdk_threads_leave;\n-    gtk->gtk_show_uri = fp_gtk_show_uri;\n-    gtk->get_drawable_data = &gtk2_get_drawable_data;\n-    gtk->g_free = fp_g_free;\n-\n-    gtk->gtk_file_chooser_get_filename = fp_gtk_file_chooser_get_filename;\n-    gtk->gtk_widget_hide = fp_gtk_widget_hide;\n-    gtk->gtk_main_quit = fp_gtk_main_quit;\n-    gtk->gtk_file_chooser_dialog_new = fp_gtk_file_chooser_dialog_new;\n-    gtk->gtk_file_chooser_set_current_folder =\n-                          fp_gtk_file_chooser_set_current_folder;\n-    gtk->gtk_file_chooser_set_filename = fp_gtk_file_chooser_set_filename;\n-    gtk->gtk_file_chooser_set_current_name =\n-                          fp_gtk_file_chooser_set_current_name;\n-    gtk->gtk_file_filter_add_custom = fp_gtk_file_filter_add_custom;\n-    gtk->gtk_file_chooser_set_filter = fp_gtk_file_chooser_set_filter;\n-    gtk->gtk_file_chooser_get_type = fp_gtk_file_chooser_get_type;\n-    gtk->gtk_file_filter_new = fp_gtk_file_filter_new;\n-    gtk->gtk_file_chooser_set_do_overwrite_confirmation =\n-                          fp_gtk_file_chooser_set_do_overwrite_confirmation;\n-    gtk->gtk_file_chooser_set_select_multiple =\n-                          fp_gtk_file_chooser_set_select_multiple;\n-    gtk->gtk_file_chooser_get_current_folder =\n-                          fp_gtk_file_chooser_get_current_folder;\n-    gtk->gtk_file_chooser_get_filenames = fp_gtk_file_chooser_get_filenames;\n-    gtk->gtk_g_slist_length = fp_gtk_g_slist_length;\n-    gtk->g_signal_connect_data = fp_g_signal_connect_data;\n-    gtk->gtk_widget_show = fp_gtk_widget_show;\n-    gtk->gtk_main = fp_gtk_main;\n-    gtk->gtk_main_level = fp_gtk_main_level;\n-    gtk->g_path_get_dirname = fp_g_path_get_dirname;\n-    gtk->gdk_x11_drawable_get_xid = fp_gdk_x11_drawable_get_xid;\n-    gtk->gtk_widget_destroy = fp_gtk_widget_destroy;\n-    gtk->gtk_window_present = fp_gtk_window_present;\n-    gtk->gtk_window_move = fp_gtk_window_move;\n-    gtk->gtk_window_resize = fp_gtk_window_resize;\n-    gtk->get_window = &gtk2_get_window;\n-\n-    gtk->g_object_unref = fp_g_object_unref;\n-    gtk->g_list_append = fp_g_list_append;\n-    gtk->g_list_free = fp_g_list_free;\n-    gtk->g_list_free_full = fp_g_list_free_full;\n-}\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk2_interface.c","additions":0,"deletions":2603,"binary":false,"changes":2603,"status":"deleted"},{"patch":"@@ -1,448 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifdef HEADLESS\n-    #error This file should not be included in headless library\n-#endif\n-\n-#ifndef _GTK2_INTERFACE_H\n-#define _GTK2_INTERFACE_H\n-\n-#include <stdlib.h>\n-#include <jni.h>\n-#include <X11\/X.h>\n-#include \"gtk_interface.h\"\n-\n-#define GTK_HAS_FOCUS   (1 << 12)\n-#define GTK_HAS_DEFAULT (1 << 14)\n-\n-typedef enum\n-{\n-  GTK_WINDOW_TOPLEVEL,\n-  GTK_WINDOW_POPUP\n-} GtkWindowType;\n-\n-typedef enum\n-{\n-  G_PARAM_READABLE            = 1 << 0,\n-  G_PARAM_WRITABLE            = 1 << 1,\n-  G_PARAM_CONSTRUCT           = 1 << 2,\n-  G_PARAM_CONSTRUCT_ONLY      = 1 << 3,\n-  G_PARAM_LAX_VALIDATION      = 1 << 4,\n-  G_PARAM_PRIVATE             = 1 << 5\n-} GParamFlags;\n-\n-\/* We define all structure pointers to be void* *\/\n-typedef void GVfs;\n-\n-typedef void GdkColormap;\n-typedef void GdkDrawable;\n-typedef void GdkGC;\n-typedef void GdkPixmap;\n-\n-typedef void GtkFixed;\n-typedef void GtkMenuItem;\n-typedef void GtkMenuShell;\n-typedef void GtkWidgetClass;\n-typedef void PangoFontDescription;\n-typedef void GtkSettings;\n-\n-\/* Some real structures *\/\n-typedef struct\n-{\n-  guint32 pixel;\n-  guint16 red;\n-  guint16 green;\n-  guint16 blue;\n-} GdkColor;\n-\n-typedef struct {\n-  gint      fd;\n-  gushort   events;\n-  gushort   revents;\n-} GPollFD;\n-\n-typedef struct {\n-  gint x;\n-  gint y;\n-  gint width;\n-  gint height;\n-} GtkAllocation;\n-\n-typedef struct {\n-  gint width;\n-  gint height;\n-} GtkRequisition;\n-\n-typedef struct {\n-  GtkWidgetClass *g_class;\n-} GTypeInstance;\n-\n-typedef struct {\n-  gint left;\n-  gint right;\n-  gint top;\n-  gint bottom;\n-} GtkBorder;\n-\n-\/******************************************************\n- * FIXME: it is more safe to include gtk headers for\n- * the precise type definition of GType and other\n- * structures. This is a place where getting rid of gtk\n- * headers may be dangerous.\n- ******************************************************\/\n-\n-typedef struct\n-{\n-  GType         g_type;\n-\n-  union {\n-    gint        v_int;\n-    guint       v_uint;\n-    glong       v_long;\n-    gulong      v_ulong;\n-    gint64      v_int64;\n-    guint64     v_uint64;\n-    gfloat      v_float;\n-    gdouble     v_double;\n-    gpointer    v_pointer;\n-  } data[2];\n-} GValue;\n-\n-typedef struct\n-{\n-  GTypeInstance  g_type_instance;\n-\n-  gchar         *name;\n-  GParamFlags    flags;\n-  GType          value_type;\n-  GType          owner_type;\n-} GParamSpec;\n-\n-typedef struct {\n-  GTypeInstance g_type_instance;\n-  guint         ref_count;\n-  void         *qdata;\n-} GObject;\n-\n-typedef struct {\n-  GObject parent_instance;\n-  guint32 flags;\n-} GtkObject;\n-\n-typedef struct\n-{\n-  GObject parent_instance;\n-\n-  GdkColor fg[5];\n-  GdkColor bg[5];\n-  GdkColor light[5];\n-  GdkColor dark[5];\n-  GdkColor mid[5];\n-  GdkColor text[5];\n-  GdkColor base[5];\n-  GdkColor text_aa[5];          \/* Halfway between text\/base *\/\n-\n-  GdkColor black;\n-  GdkColor white;\n-  PangoFontDescription *font_desc;\n-\n-  gint xthickness;\n-  gint ythickness;\n-\n-  GdkGC *fg_gc[5];\n-  GdkGC *bg_gc[5];\n-  GdkGC *light_gc[5];\n-  GdkGC *dark_gc[5];\n-  GdkGC *mid_gc[5];\n-  GdkGC *text_gc[5];\n-  GdkGC *base_gc[5];\n-  GdkGC *text_aa_gc[5];\n-  GdkGC *black_gc;\n-  GdkGC *white_gc;\n-\n-  GdkPixmap *bg_pixmap[5];\n-} GtkStyle;\n-\n-typedef struct _GtkWidget GtkWidget;\n-struct _GtkWidget\n-{\n-  GtkObject object;\n-  guint16 private_flags;\n-  guint8 state;\n-  guint8 saved_state;\n-  gchar *name;\n-  GtkStyle *style;\n-  GtkRequisition requisition;\n-  GtkAllocation allocation;\n-  GdkWindow *window;\n-  GtkWidget *parent;\n-};\n-\n-typedef struct\n-{\n-  GtkWidget widget;\n-\n-  gfloat xalign;\n-  gfloat yalign;\n-\n-  guint16 xpad;\n-  guint16 ypad;\n-} GtkMisc;\n-\n-typedef struct {\n-  GtkWidget widget;\n-  GtkWidget *focus_child;\n-  guint border_width : 16;\n-  guint need_resize : 1;\n-  guint resize_mode : 2;\n-  guint reallocate_redraws : 1;\n-  guint has_focus_chain : 1;\n-} GtkContainer;\n-\n-typedef struct {\n-  GtkContainer container;\n-  GtkWidget *child;\n-} GtkBin;\n-\n-typedef struct {\n-  GtkBin bin;\n-  GdkWindow *event_window;\n-  gchar *label_text;\n-  guint activate_timeout;\n-  guint constructed : 1;\n-  guint in_button : 1;\n-  guint button_down : 1;\n-  guint relief : 2;\n-  guint use_underline : 1;\n-  guint use_stock : 1;\n-  guint depressed : 1;\n-  guint depress_on_activate : 1;\n-  guint focus_on_click : 1;\n-} GtkButton;\n-\n-typedef struct {\n-  GtkButton button;\n-  guint active : 1;\n-  guint draw_indicator : 1;\n-  guint inconsistent : 1;\n-} GtkToggleButton;\n-\n-typedef struct _GtkAdjustment GtkAdjustment;\n-struct _GtkAdjustment\n-{\n-  GtkObject parent_instance;\n-\n-  gdouble lower;\n-  gdouble upper;\n-  gdouble value;\n-  gdouble step_increment;\n-  gdouble page_increment;\n-  gdouble page_size;\n-};\n-\n-typedef enum\n-{\n-  GTK_UPDATE_CONTINUOUS,\n-  GTK_UPDATE_DISCONTINUOUS,\n-  GTK_UPDATE_DELAYED\n-} GtkUpdateType;\n-\n-typedef struct _GtkRange GtkRange;\n-struct _GtkRange\n-{\n-  GtkWidget widget;\n-  GtkAdjustment *adjustment;\n-  GtkUpdateType update_policy;\n-  guint inverted : 1;\n-  \/*< protected >*\/\n-  guint flippable : 1;\n-  guint has_stepper_a : 1;\n-  guint has_stepper_b : 1;\n-  guint has_stepper_c : 1;\n-  guint has_stepper_d : 1;\n-  guint need_recalc : 1;\n-  guint slider_size_fixed : 1;\n-  gint min_slider_size;\n-  GtkOrientation orientation;\n-  GdkRectangle range_rect;\n-  gint slider_start, slider_end;\n-  gint round_digits;\n-  \/*< private >*\/\n-  guint trough_click_forward : 1;\n-  guint update_pending : 1;\n-  \/*GtkRangeLayout * *\/ void *layout;\n-  \/*GtkRangeStepTimer * *\/ void* timer;\n-  gint slide_initial_slider_position;\n-  gint slide_initial_coordinate;\n-  guint update_timeout_id;\n-  GdkWindow *event_window;\n-};\n-\n-typedef struct _GtkProgressBar       GtkProgressBar;\n-\n-typedef enum\n-{\n-  GTK_PROGRESS_CONTINUOUS,\n-  GTK_PROGRESS_DISCRETE\n-} GtkProgressBarStyle;\n-\n-typedef enum\n-{\n-  GTK_PROGRESS_LEFT_TO_RIGHT,\n-  GTK_PROGRESS_RIGHT_TO_LEFT,\n-  GTK_PROGRESS_BOTTOM_TO_TOP,\n-  GTK_PROGRESS_TOP_TO_BOTTOM\n-} GtkProgressBarOrientation;\n-\n-typedef struct _GtkProgress       GtkProgress;\n-\n-struct _GtkProgress\n-{\n-  GtkWidget widget;\n-  GtkAdjustment *adjustment;\n-  GdkPixmap     *offscreen_pixmap;\n-  gchar         *format;\n-  gfloat         x_align;\n-  gfloat         y_align;\n-  guint          show_text : 1;\n-  guint          activity_mode : 1;\n-  guint          use_text_format : 1;\n-};\n-\n-struct _GtkProgressBar\n-{\n-  GtkProgress progress;\n-  GtkProgressBarStyle bar_style;\n-  GtkProgressBarOrientation orientation;\n-  guint blocks;\n-  gint  in_block;\n-  gint  activity_pos;\n-  guint activity_step;\n-  guint activity_blocks;\n-  gdouble pulse_fraction;\n-  guint activity_dir : 1;\n-  guint ellipsize : 3;\n-};\n-\n-\/**\n- * Returns :\n- * NULL if the GLib library is compatible with the given version, or a string\n- * describing the version mismatch.\n- * Please note that the glib_check_version() is available since 2.6,\n- * so you should use GLIB_CHECK_VERSION macro instead.\n- *\/\n-static gchar* (*fp_glib_check_version)(guint required_major, guint required_minor,\n-                       guint required_micro);\n-\n-\/**\n- * Returns :\n- *  TRUE if the GLib library is compatible with the given version\n- *\/\n-#define GLIB_CHECK_VERSION(major, minor, micro) \\\n-    (fp_glib_check_version && fp_glib_check_version(major, minor, micro) == NULL)\n-\n-\/**\n- * Returns :\n- * NULL if the GTK+ library is compatible with the given version, or a string\n- * describing the version mismatch.\n- *\/\n-static gchar* (*fp_gtk_check_version)(guint required_major, guint required_minor,\n-                       guint required_micro);\n-\n-static void gtk2_init(GtkApi* gtk);\n-\n-static void (*fp_g_free)(gpointer mem);\n-static void (*fp_g_object_unref)(gpointer object);\n-static GdkWindow *(*fp_gdk_get_default_root_window) (void);\n-\n-static int (*fp_gdk_pixbuf_get_bits_per_sample)(const GdkPixbuf *pixbuf);\n-static guchar *(*fp_gdk_pixbuf_get_pixels)(const GdkPixbuf *pixbuf);\n-static gboolean (*fp_gdk_pixbuf_get_has_alpha)(const GdkPixbuf *pixbuf);\n-static int (*fp_gdk_pixbuf_get_height)(const GdkPixbuf *pixbuf);\n-static int (*fp_gdk_pixbuf_get_n_channels)(const GdkPixbuf *pixbuf);\n-static int (*fp_gdk_pixbuf_get_rowstride)(const GdkPixbuf *pixbuf);\n-static int (*fp_gdk_pixbuf_get_width)(const GdkPixbuf *pixbuf);\n-static GdkPixbuf *(*fp_gdk_pixbuf_new_from_file)(const char *filename, GError **error);\n-static GdkColorspace (*fp_gdk_pixbuf_get_colorspace)(const GdkPixbuf *pixbuf);\n-\n-static GdkPixbuf *(*fp_gdk_pixbuf_get_from_drawable)(GdkPixbuf *dest,\n-        GdkDrawable *src, GdkColormap *cmap, int src_x, int src_y,\n-        int dest_x, int dest_y, int width, int height);\n-static GdkPixbuf *(*fp_gdk_pixbuf_scale_simple)(GdkPixbuf *src,\n-        int dest_width, int dest_heigh, GdkInterpType interp_type);\n-\n-\n-static void (*fp_gtk_widget_destroy)(void *widget);\n-static void (*fp_gtk_window_present)(GtkWindow *window);\n-static void (*fp_gtk_window_move)(GtkWindow *window, gint x, gint y);\n-static void (*fp_gtk_window_resize)(GtkWindow *window, gint width, gint height);\n-\n-\/**\n- * Function Pointers for GtkFileChooser\n- *\/\n-static gchar* (*fp_gtk_file_chooser_get_filename)(GtkFileChooser *chooser);\n-static void (*fp_gtk_widget_hide)(void *widget);\n-static void (*fp_gtk_main_quit)(void);\n-static void* (*fp_gtk_file_chooser_dialog_new)(const gchar *title,\n-    GtkWindow *parent, GtkFileChooserAction action,\n-    const gchar *first_button_text, ...);\n-static gboolean (*fp_gtk_file_chooser_set_current_folder)(GtkFileChooser *chooser,\n-    const gchar *filename);\n-static gboolean (*fp_gtk_file_chooser_set_filename)(GtkFileChooser *chooser,\n-    const char *filename);\n-static void (*fp_gtk_file_chooser_set_current_name)(GtkFileChooser *chooser,\n-    const gchar *name);\n-static void (*fp_gtk_file_filter_add_custom)(GtkFileFilter *filter,\n-    GtkFileFilterFlags needed, GtkFileFilterFunc func, gpointer data,\n-    GDestroyNotify notify);\n-static void (*fp_gtk_file_chooser_set_filter)(GtkFileChooser *chooser,\n-    GtkFileFilter *filter);\n-static GType (*fp_gtk_file_chooser_get_type)(void);\n-static GtkFileFilter* (*fp_gtk_file_filter_new)(void);\n-static void (*fp_gtk_file_chooser_set_do_overwrite_confirmation)(\n-    GtkFileChooser *chooser, gboolean do_overwrite_confirmation);\n-static void (*fp_gtk_file_chooser_set_select_multiple)(\n-    GtkFileChooser *chooser, gboolean select_multiple);\n-static gchar* (*fp_gtk_file_chooser_get_current_folder)(GtkFileChooser *chooser);\n-static GSList* (*fp_gtk_file_chooser_get_filenames)(GtkFileChooser *chooser);\n-static guint (*fp_gtk_g_slist_length)(GSList *list);\n-static gulong (*fp_g_signal_connect_data)(gpointer instance,\n-    const gchar *detailed_signal, GCallback c_handler, gpointer data,\n-    GClosureNotify destroy_data, GConnectFlags connect_flags);\n-static void (*fp_gtk_widget_show)(void *widget);\n-static void (*fp_gtk_main)(void);\n-static guint (*fp_gtk_main_level)(void);\n-static gchar* (*fp_g_path_get_dirname) (const gchar *file_name);\n-static XID (*fp_gdk_x11_drawable_get_xid) (GdkWindow *drawable);\n-\n-static GList* (*fp_g_list_append) (GList *list, gpointer data);\n-static void (*fp_g_list_free) (GList *list);\n-static void (*fp_g_list_free_full) (GList *list, GDestroyNotify free_func);\n-\n-static gboolean (*fp_gtk_show_uri)(GdkScreen *screen, const gchar *uri,\n-    guint32 timestamp, GError **error);\n-\n-#endif \/* !_GTK2_INTERFACE_H *\/\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk2_interface.h","additions":0,"deletions":448,"binary":false,"changes":448,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-GtkApi* gtk2_load(JNIEnv *env, const char* lib_name);\n@@ -38,1 +37,0 @@\n-gboolean gtk2_check(const char* lib_name, gboolean load);\n@@ -59,7 +57,0 @@\n-    {\n-        GTK_2,\n-        JNI_LIB_NAME(\"gtk-x11-2.0\"),\n-        VERSIONED_JNI_LIB_NAME(\"gtk-x11-2.0\", \"0\"),\n-        &gtk2_load,\n-        &gtk2_check\n-    }\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk_interface.c","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -678,1 +678,0 @@\n-\/\/glib_version_2_68 false for gtk2, as it comes from gtk3_interface.c\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_pipewire.c","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,4 @@\n+    \/\/ this will be set to true only when the peer explicitly states (through a GOAWAY frame or\n+    \/\/ a relevant error code in reset frame) that the corresponding stream (id) wasn't processed\n+    private volatile boolean unprocessedByPeer;\n+\n@@ -268,0 +272,9 @@\n+\n+    final boolean isUnprocessedByPeer() {\n+        return this.unprocessedByPeer;\n+    }\n+\n+    \/\/ Marks the exchange as unprocessed by the peer\n+    final void markUnprocessedByPeer() {\n+        this.unprocessedByPeer = true;\n+    }\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/ExchangeImpl.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,2 @@\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicLong;\n@@ -361,0 +363,1 @@\n+    private final AtomicLong lastProcessedStreamInGoAway = new AtomicLong(-1);\n@@ -728,1 +731,3 @@\n-            if (connection.channel().isOpen()) {\n+            \/\/ we send a GOAWAY frame only if the remote side hasn't already indicated\n+            \/\/ the intention to close the connection by previously sending a GOAWAY of its own\n+            if (connection.channel().isOpen() && !isMarked(closedState, HALF_CLOSED_REMOTE)) {\n@@ -1208,7 +1213,40 @@\n-    private void handleGoAway(GoAwayFrame frame)\n-        throws IOException\n-    {\n-        if (markHalfClosedLRemote()) {\n-            shutdown(new IOException(\n-                    connection.channel().getLocalAddress()\n-                            + \": GOAWAY received\"));\n+    private void handleGoAway(final GoAwayFrame frame) {\n+        final long lastProcessedStream = frame.getLastStream();\n+        assert lastProcessedStream >= 0 : \"unexpected last stream id: \"\n+                + lastProcessedStream + \" in GOAWAY frame\";\n+\n+        markHalfClosedRemote();\n+        setFinalStream(); \/\/ don't allow any new streams on this connection\n+        if (debug.on()) {\n+            debug.log(\"processing incoming GOAWAY with last processed stream id:%s in frame %s\",\n+                    lastProcessedStream, frame);\n+        }\n+        \/\/ see if this connection has previously received a GOAWAY from the peer and if yes\n+        \/\/ then check if this new last processed stream id is lesser than the previous\n+        \/\/ known last processed stream id. Only update the last processed stream id if the new\n+        \/\/ one is lesser than the previous one.\n+        long prevLastProcessed = lastProcessedStreamInGoAway.get();\n+        while (prevLastProcessed == -1 || lastProcessedStream < prevLastProcessed) {\n+            if (lastProcessedStreamInGoAway.compareAndSet(prevLastProcessed,\n+                    lastProcessedStream)) {\n+                break;\n+            }\n+            prevLastProcessed = lastProcessedStreamInGoAway.get();\n+        }\n+        handlePeerUnprocessedStreams(lastProcessedStreamInGoAway.get());\n+    }\n+\n+    private void handlePeerUnprocessedStreams(final long lastProcessedStream) {\n+        final AtomicInteger numClosed = new AtomicInteger(); \/\/ atomic merely to allow usage within lambda\n+        streams.forEach((id, exchange) -> {\n+            if (id > lastProcessedStream) {\n+                \/\/ any streams with an stream id higher than the last processed stream\n+                \/\/ can be retried (on a new connection). we close the exchange as unprocessed\n+                \/\/ to facilitate the retrying.\n+                client2.client().theExecutor().ensureExecutedAsync(exchange::closeAsUnprocessed);\n+                numClosed.incrementAndGet();\n+            }\n+        });\n+        if (debug.on()) {\n+            debug.log(numClosed.get() + \" stream(s), with id greater than \" + lastProcessedStream\n+                    + \", will be closed as unprocessed\");\n@@ -1748,1 +1786,1 @@\n-    private boolean markHalfClosedLRemote() {\n+    private boolean markHalfClosedRemote() {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":48,"deletions":10,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-    volatile boolean expiredOnce;\n+    volatile boolean retriedOnce;\n@@ -472,1 +472,1 @@\n-                                expiredOnce = false;\n+                                retriedOnce = false;\n@@ -485,1 +485,1 @@\n-                        CompletableFuture<Response> errorCF = getExceptionalCF(ex);\n+                        CompletableFuture<Response> errorCF = getExceptionalCF(ex, exch.exchImpl);\n@@ -557,1 +557,1 @@\n-    private CompletableFuture<Response> getExceptionalCF(Throwable t) {\n+    private CompletableFuture<Response> getExceptionalCF(Throwable t, ExchangeImpl<?> exchImpl) {\n@@ -563,0 +563,1 @@\n+        final boolean retryAsUnprocessed = exchImpl != null && exchImpl.isUnprocessedByPeer();\n@@ -567,1 +568,1 @@\n-        } else if (retryOnFailure(t)) {\n+        } else if (retryAsUnprocessed || retryOnFailure(t)) {\n@@ -574,2 +575,4 @@\n-                if (!canRetryRequest(currentreq)) {\n-                    return failedFuture(cause); \/\/ fails with original cause\n+                if (!retryAsUnprocessed && !canRetryRequest(currentreq)) {\n+                    \/\/ a (peer) processed request which cannot be retried, fail with\n+                    \/\/ the original cause\n+                    return failedFuture(cause);\n@@ -581,1 +584,1 @@\n-            if (!expiredOnce) {\n+            if (!retriedOnce) {\n@@ -584,1 +587,1 @@\n-                            + \" (async): retrying due to: \", t);\n+                            + \" (async): retrying \" + currentreq + \" due to: \", t);\n@@ -586,1 +589,1 @@\n-                expiredOnce = true;\n+                retriedOnce = true;\n@@ -597,1 +600,1 @@\n-                            + \" (async): already retried once.\", t);\n+                            + \" (async): already retried once \" + currentreq, t);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/MultiExchange.java","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -644,6 +644,24 @@\n-                int error = frame.getErrorCode();\n-                IOException e = new IOException(\"Received RST_STREAM: \"\n-                        + ErrorFrame.stringForCode(error));\n-                if (errorRef.compareAndSet(null, e)) {\n-                    if (subscriber != null) {\n-                        subscriber.onError(e);\n+                final int error = frame.getErrorCode();\n+                \/\/ A REFUSED_STREAM error code implies that the stream wasn't processed by the\n+                \/\/ peer and the client is free to retry the request afresh.\n+                if (error == ErrorFrame.REFUSED_STREAM) {\n+                    \/\/ Here we arrange for the request to be retried. Note that we don't call\n+                    \/\/ closeAsUnprocessed() method here because the \"closed\" state is already set\n+                    \/\/ to true a few lines above and calling close() from within\n+                    \/\/ closeAsUnprocessed() will end up being a no-op. We instead do the additional\n+                    \/\/ bookkeeping here.\n+                    markUnprocessedByPeer();\n+                    errorRef.compareAndSet(null, new IOException(\"request not processed by peer\"));\n+                    if (debug.on()) {\n+                        debug.log(\"request unprocessed by peer (REFUSED_STREAM) \" + this.request);\n+                    }\n+                } else {\n+                    final String reason = ErrorFrame.stringForCode(error);\n+                    final IOException failureCause = new IOException(\"Received RST_STREAM: \" + reason);\n+                    if (debug.on()) {\n+                        debug.log(streamid + \" received RST_STREAM with code: \" + reason);\n+                    }\n+                    if (errorRef.compareAndSet(null, failureCause)) {\n+                        if (subscriber != null) {\n+                            subscriber.onError(failureCause);\n+                        }\n@@ -652,1 +670,2 @@\n-                completeResponseExceptionally(e);\n+                final Throwable failureCause = errorRef.get();\n+                completeResponseExceptionally(failureCause);\n@@ -654,1 +673,1 @@\n-                    requestBodyCF.completeExceptionally(errorRef.get()); \/\/ we may be sending the body..\n+                    requestBodyCF.completeExceptionally(failureCause); \/\/ we may be sending the body..\n@@ -657,1 +676,1 @@\n-                    responseBodyCF.completeExceptionally(errorRef.get());\n+                    responseBodyCF.completeExceptionally(failureCause);\n@@ -1666,1 +1685,29 @@\n-        return connection.dbgString() + \"\/Stream(\"+streamid+\")\";\n+        final int id = streamid;\n+        final String sid = id == 0 ? \"?\" : String.valueOf(id);\n+        return connection.dbgString() + \"\/Stream(\" + sid + \")\";\n+    }\n+\n+    \/**\n+     * An unprocessed exchange is one that hasn't been processed by a peer. The local end of the\n+     * connection would be notified about such exchanges when it receives a GOAWAY frame with\n+     * a stream id that tells which exchanges have been unprocessed.\n+     * This method is called on such unprocessed exchanges and the implementation of this method\n+     * will arrange for the request, corresponding to this exchange, to be retried afresh on a\n+     * new connection.\n+     *\/\n+    void closeAsUnprocessed() {\n+        try {\n+            \/\/ We arrange for the request to be retried on a new connection as allowed by the RFC-9113\n+            markUnprocessedByPeer();\n+            this.errorRef.compareAndSet(null, new IOException(\"request not processed by peer\"));\n+            if (debug.on()) {\n+                debug.log(\"closing \" + this.request + \" as unprocessed by peer\");\n+            }\n+            \/\/ close the exchange and complete the response CF exceptionally\n+            close();\n+            completeResponseExceptionally(this.errorRef.get());\n+        } finally {\n+            \/\/ decrementStreamsCount isn't really needed but we do it to make sure\n+            \/\/ the log messages, where these counts\/states get reported, show the accurate state.\n+            connection.decrementStreamsCount(streamid);\n+        }\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":57,"deletions":10,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,6 @@\n-            \/\/ Odd stream numbers (client streams) should have been registered.\n+            \/\/ A client initiated stream might be closed (as unprocessed, due to a\n+            \/\/ GOAWAY received on the connection) even before the stream is\n+            \/\/ registered with this WindowController instance (when sending out request headers).\n+            \/\/ Thus, for client initiated streams, we don't enforce the presence of the\n+            \/\/ stream in the registered \"streams\" map.\n+\n@@ -107,3 +112,1 @@\n-            if (old == null && isClientStream) {\n-                throw new InternalError(\"Expected entry for streamid: \" + streamid);\n-            } else if (old != null && !isClientStream) {\n+            if (old != null && !isClientStream) {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/WindowController.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,3 @@\n-        return super.toString() + \" Debugdata: \" + new String(debugData, UTF_8);\n+        return super.toString()\n+                + \" lastStreamId=\" + lastStream\n+                + \", Debugdata: \" + new String(debugData, UTF_8);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/GoAwayFrame.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -5254,1 +5254,12 @@\n-            Env<AttrContext> errEnv = env.dup(env.tree, env.info.dup());\n+            WriteableScope newScope = env.info.scope;\n+\n+            if (env.tree instanceof JCClassDecl) {\n+                Symbol fakeOwner =\n+                    new MethodSymbol(BLOCK, names.empty, null,\n+                        env.info.scope.owner);\n+                newScope = newScope.dupUnshared(fakeOwner);\n+            }\n+\n+            Env<AttrContext> errEnv =\n+                    env.dup(env.tree,\n+                            env.info.dup(newScope));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1222,3 +1222,11 @@\n-                Type tDesc = types.findDescriptorType(types.capture(t));\n-                Type tDescNoCapture = types.findDescriptorType(t);\n-                Type sDesc = types.findDescriptorType(s);\n+                Type tDesc;\n+                Type tDescNoCapture;\n+                Type sDesc;\n+                try {\n+                    tDesc = types.findDescriptorType(types.capture(t));\n+                    tDescNoCapture = types.findDescriptorType(t);\n+                    sDesc = types.findDescriptorType(s);\n+                } catch (Types.FunctionDescriptorLookupError ex) {\n+                    \/\/ don't report, a more meaningful error should be reported upstream\n+                    return false;\n+                }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.util.function.BiFunction;\n@@ -42,0 +41,1 @@\n+import java.util.stream.IntStream;\n@@ -65,0 +65,1 @@\n+import com.sun.tools.javac.resources.CompilerProperties.Errors;\n@@ -2314,3 +2315,11 @@\n-    private static void addTypeAnnotationsToSymbol(\n-            Symbol s, List<Attribute.TypeCompound> attributes) {\n-        new TypeAnnotationSymbolVisitor(attributes).visit(s, null);\n+    private void addTypeAnnotationsToSymbol(Symbol s, List<Attribute.TypeCompound> attributes) {\n+        try {\n+            new TypeAnnotationSymbolVisitor(attributes).visit(s, null);\n+        } catch (CompletionFailure ex) {\n+            JavaFileObject prev = log.useSource(currentClassFile);\n+            try {\n+                log.error(Errors.CantAttachTypeAnnotations(attributes, s.owner, s.name, ex.getDetailValue()));\n+            } finally {\n+                log.useSource(prev);\n+            }\n+        }\n@@ -2464,4 +2473,0 @@\n-            \/\/ Search the structure of the type to find the contained types at each type path\n-            Map<Type, List<Attribute.TypeCompound>> attributesByType = new HashMap<>();\n-            new TypeAnnotationLocator(attributesByPath, attributesByType).visit(type, List.nil());\n-\n@@ -2469,2 +2474,1 @@\n-            type = new TypeAnnotationTypeMapping(attributesByType).visit(type, null);\n-            Assert.check(attributesByType.isEmpty(), \"Failed to apply annotations to types\");\n+            type = new TypeAnnotationStructuralTypeMapping(attributesByPath).visit(type, List.nil());\n@@ -2498,2 +2502,4 @@\n-     * Visit all contained types, assembling a type path to represent the current location, and\n-     * record the types at each type path that need to be annotated.\n+     * A type mapping that rewrites the type to include type annotations.\n+     *\n+     * <p>This logic is similar to {@link Type.StructuralTypeMapping}, but also tracks the path to\n+     * the contained types being rewritten, and so cannot easily share the existing logic.\n@@ -2501,2 +2507,3 @@\n-    private static class TypeAnnotationLocator\n-            extends Types.DefaultTypeVisitor<Void, List<TypeAnnotationPosition.TypePathEntry>> {\n+    private static final class TypeAnnotationStructuralTypeMapping\n+            extends Types.TypeMapping<List<TypeAnnotationPosition.TypePathEntry>> {\n+\n@@ -2504,2 +2511,1 @@\n-                          ListBuffer<Attribute.TypeCompound>> attributesByPath;\n-        private final Map<Type, List<Attribute.TypeCompound>> attributesByType;\n+                ListBuffer<Attribute.TypeCompound>> attributesByPath;\n@@ -2507,1 +2513,1 @@\n-        private TypeAnnotationLocator(\n+        private TypeAnnotationStructuralTypeMapping(\n@@ -2509,2 +2515,1 @@\n-                        attributesByPath,\n-                Map<Type, List<Attribute.TypeCompound>> attributesByType) {\n+                    attributesByPath) {\n@@ -2512,1 +2517,0 @@\n-            this.attributesByType = attributesByType;\n@@ -2515,0 +2519,1 @@\n+\n@@ -2516,1 +2521,1 @@\n-        public Void visitClassType(ClassType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n+        public Type visitClassType(ClassType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n@@ -2522,3 +2527,4 @@\n-            List<ClassType> enclosing = List.nil();\n-            for (Type curr = t;\n-                    curr != null && curr != Type.noType;\n+            Type outer = t.getEnclosingType();\n+            Type outer1 = outer != Type.noType ? visit(outer, path) : outer;\n+            for (Type curr = t.getEnclosingType();\n+                    curr != Type.noType;\n@@ -2526,11 +2532,0 @@\n-                enclosing = enclosing.prepend((ClassType) curr);\n-            }\n-            for (ClassType te : enclosing) {\n-                if (te.typarams_field != null) {\n-                    int i = 0;\n-                    for (Type typaram : te.typarams_field) {\n-                        visit(typaram, path.append(new TypeAnnotationPosition.TypePathEntry(\n-                                TypeAnnotationPosition.TypePathEntryKind.TYPE_ARGUMENT, i++)));\n-                    }\n-                }\n-                visitType(te, path);\n@@ -2539,1 +2534,6 @@\n-            return null;\n+            List<Type> typarams = t.getTypeArguments();\n+            List<Type> typarams1 = rewriteTypeParams(path, typarams);\n+            if (outer1 != outer || typarams != typarams1) {\n+                t = new ClassType(outer1, typarams1, t.tsym, t.getMetadata());\n+            }\n+            return reannotate(t, path);\n@@ -2542,5 +2542,6 @@\n-        @Override\n-        public Void visitWildcardType(\n-                WildcardType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n-            visit(t.type, path.append(TypeAnnotationPosition.TypePathEntry.WILDCARD));\n-            return super.visitWildcardType(t, path);\n+        private List<Type> rewriteTypeParams(\n+                List<TypeAnnotationPosition.TypePathEntry> path, List<Type> typarams) {\n+            var i = IntStream.iterate(0, x -> x + 1).iterator();\n+            return typarams.map(typaram -> visit(typaram,\n+                    path.append(new TypeAnnotationPosition.TypePathEntry(\n+                            TypeAnnotationPosition.TypePathEntryKind.TYPE_ARGUMENT, i.nextInt()))));\n@@ -2550,3 +2551,10 @@\n-        public Void visitArrayType(ArrayType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n-            visit(t.elemtype, path.append(TypeAnnotationPosition.TypePathEntry.ARRAY));\n-            return super.visitArrayType(t, path);\n+        public Type visitWildcardType(\n+                WildcardType wt, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            Type t = wt.type;\n+            if (t != null) {\n+                t = visit(t, path.append(TypeAnnotationPosition.TypePathEntry.WILDCARD));\n+            }\n+            if (t != wt.type) {\n+                wt = new WildcardType(t, wt.kind, wt.tsym, wt.bound, wt.getMetadata());\n+            }\n+            return reannotate(wt, path);\n@@ -2556,4 +2564,6 @@\n-        public Void visitType(Type t, List<TypeAnnotationPosition.TypePathEntry> path) {\n-            ListBuffer<Attribute.TypeCompound> attributes = attributesByPath.remove(path);\n-            if (attributes != null) {\n-                attributesByType.put(t, attributes.toList());\n+        public Type visitArrayType(ArrayType t, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            Type elemtype = t.elemtype;\n+            Type elemtype1 =\n+                    visit(elemtype, path.append(TypeAnnotationPosition.TypePathEntry.ARRAY));\n+            if (elemtype1 != elemtype)  {\n+                t = new ArrayType(elemtype1, t.tsym, t.getMetadata());\n@@ -2561,1 +2571,1 @@\n-            return null;\n+            return reannotate(t, path);\n@@ -2563,4 +2573,0 @@\n-    }\n-\n-    \/** A type mapping that rewrites the type to include type annotations. *\/\n-    private static class TypeAnnotationTypeMapping extends Type.StructuralTypeMapping<Void> {\n@@ -2568,5 +2574,3 @@\n-        private final Map<Type, List<Attribute.TypeCompound>> attributesByType;\n-\n-        private TypeAnnotationTypeMapping(\n-                Map<Type, List<Attribute.TypeCompound>> attributesByType) {\n-            this.attributesByType = attributesByType;\n+        @Override\n+        public Type visitType(Type t, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            return reannotate(t, path);\n@@ -2575,8 +2579,4 @@\n-        private <T extends Type> Type reannotate(T t, BiFunction<T, Void, Type> f) {\n-            \/\/ We're relying on object identify of Type instances to record where the annotations\n-            \/\/ need to be added, so we have to retrieve the annotations for each type before\n-            \/\/ rewriting it, and then add them after its contained types have been rewritten.\n-            List<Attribute.TypeCompound> attributes = attributesByType.remove(t);\n-            Type mapped = f.apply(t, null);\n-            if (attributes == null) {\n-                return mapped;\n+        Type reannotate(Type type, List<TypeAnnotationPosition.TypePathEntry> path) {\n+            List<Attribute.TypeCompound> attributes = attributesForPath(path);\n+            if (attributes.isEmpty()) {\n+                return type;\n@@ -2586,1 +2586,1 @@\n-            TypeMetadata.Annotations existing = mapped.getMetadata(TypeMetadata.Annotations.class);\n+            TypeMetadata.Annotations existing = type.getMetadata(TypeMetadata.Annotations.class);\n@@ -2589,1 +2589,1 @@\n-                return mapped;\n+                return type;\n@@ -2591,6 +2591,1 @@\n-            return mapped.annotatedType(attributes);\n-        }\n-\n-        @Override\n-        public Type visitClassType(ClassType t, Void unused) {\n-            return reannotate(t, super::visitClassType);\n+            return type.annotatedType(attributes);\n@@ -2599,13 +2594,4 @@\n-        @Override\n-        public Type visitWildcardType(WildcardType t, Void unused) {\n-            return reannotate(t, super::visitWildcardType);\n-        }\n-\n-        @Override\n-        public Type visitArrayType(ArrayType t, Void unused) {\n-            return reannotate(t, super::visitArrayType);\n-        }\n-\n-        @Override\n-        public Type visitType(Type t, Void unused) {\n-            return reannotate(t, (x, u) -> x);\n+        List<Attribute.TypeCompound> attributesForPath(\n+                List<TypeAnnotationPosition.TypePathEntry> path) {\n+            ListBuffer<Attribute.TypeCompound> attributes = attributesByPath.remove(path);\n+            return attributes != null ? attributes.toList() : List.nil();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":73,"deletions":87,"binary":false,"changes":160,"status":"modified"},{"patch":"@@ -458,1 +458,1 @@\n-    protected JCErroneous syntaxError(int pos, List<JCTree> errs, Error errorKey) {\n+    protected JCErroneous syntaxError(int pos, List<? extends JCTree> errs, Error errorKey) {\n@@ -4736,0 +4736,6 @@\n+            } else if (isDefiniteStatementStartToken()) {\n+                int startPos = token.pos;\n+                List<JCStatement> statements = blockStatement();\n+                return List.of(syntaxError(startPos,\n+                                           statements,\n+                                           Errors.StatementNotExpected));\n@@ -4913,1 +4919,13 @@\n-        }\n+    }\n+\n+    \/**\n+     * {@return true if and only if the current token is definitelly a token that\n+     *  starts a statement.}\n+     *\/\n+    private boolean isDefiniteStatementStartToken() {\n+        return switch (token.kind) {\n+            case IF, WHILE, DO, SWITCH, RETURN, TRY, FOR, ASSERT, BREAK,\n+                 CONTINUE, THROW -> true;\n+            default -> false;\n+        };\n+    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    protected JCErroneous syntaxError(int pos, List<JCTree> errs, Error errorKey) {\n+    protected JCErroneous syntaxError(int pos, List<? extends JCTree> errs, Error errorKey) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/VirtualParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1619,0 +1619,3 @@\n+compiler.err.statement.not.expected=\\\n+    statements not expected outside of methods and initializers\n+\n@@ -2348,0 +2351,5 @@\n+# 0: list of annotation, 1: symbol, 2: name, 3: message segment\n+compiler.err.cant.attach.type.annotations=\\\n+    Cannot attach type annotations {0} to {1}.{2}:\\n\\\n+    {3}\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import javax.lang.model.element.TypeParameterElement;\n@@ -158,1 +159,1 @@\n-        Content c = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n+        var c = new ContentBuilder();\n@@ -167,5 +168,7 @@\n-        buildClassSignature(c);\n-        buildDeprecationInfo(c);\n-        buildClassDescription(c);\n-        buildClassTagInfo(c);\n-\n+        c.add(new HtmlTree(HtmlTag.HR));\n+        var div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n+        buildClassSignature(div);\n+        buildDeprecationInfo(div);\n+        buildClassDescription(div);\n+        buildClassTagInfo(div);\n+        c.add(div);\n@@ -435,3 +438,0 @@\n-        HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration,\n-                HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, typeElement)\n-                .linkToSelf(false);  \/\/ Let's not link to ourselves in the header\n@@ -440,1 +440,1 @@\n-        heading.add(getTypeParameterLinks(linkInfo));\n+        heading.add(getTypeParameters());\n@@ -448,0 +448,29 @@\n+    \/\/ Renders type parameters for the class heading, creating id attributes\n+    \/\/ if @param block tags are missing in doc comment.\n+    private Content getTypeParameters() {\n+        var content = new ContentBuilder();\n+        var typeParams = typeElement.getTypeParameters();\n+        if (!typeParams.isEmpty()) {\n+            \/\/ Generate id attributes if @param tags are missing for type parameters.\n+            \/\/ Note that this does not handle the case where some but not all @param tags are missing.\n+            var needsId = !utils.hasBlockTag(typeElement, DocTree.Kind.PARAM);\n+            var linkInfo = new HtmlLinkInfo(configuration,\n+                    HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, typeElement)\n+                    .linkToSelf(false);  \/\/ Let's not link to ourselves in the header\n+            content.add(\"<\");\n+            var first = true;\n+            for (TypeParameterElement t : typeParams) {\n+                if (!first) {\n+                    content.add(\",\").add(new HtmlTree(HtmlTag.WBR));\n+                }\n+                var typeParamLink = getLink(linkInfo.forType(t.asType()));\n+                content.add(needsId\n+                        ? HtmlTree.SPAN_ID(htmlIds.forTypeParam(t.getSimpleName().toString(), typeElement), typeParamLink)\n+                        : typeParamLink);\n+                first = false;\n+            }\n+            content.add(\">\");\n+        }\n+        return content;\n+    }\n+\n@@ -476,1 +505,0 @@\n-        classInfo.add(new HtmlTree(HtmlTag.HR));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriter.java","additions":39,"deletions":11,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -465,0 +465,16 @@\n+    \/**\n+     * Returns an id for text documenting a type parameter of a class or method.\n+     *\n+     * @param paramName the name of the type parameter\n+     * @param owner the enclosing element\n+     *\n+     * @return the id\n+     *\/\n+    public HtmlId forTypeParam(String paramName, Element owner) {\n+        if (utils.isExecutableElement(owner)) {\n+            return HtmlId.of(forMember((ExecutableElement) owner).getFirst().name()\n+                    + \"-type-param-\" + paramName);\n+        }\n+        return HtmlId.of(\"type-param-\" + paramName);\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -165,3 +165,5 @@\n-                        Content label = newContent();\n-                        label.add(utils.getTypeName(type, false));\n-                        linkInfo.label(label).skipPreview(true);\n+                        if (linkInfo.getLabel() == null || linkInfo.getLabel().isEmpty()) {\n+                            Content label = newContent();\n+                            label.add(utils.getTypeName(type, false));\n+                            linkInfo.label(label).skipPreview(true);\n+                        }\n@@ -245,0 +247,5 @@\n+            if (isTypeLink) {\n+                linkInfo.fragment(m_writer.configuration.htmlIds.forTypeParam(\n+                        utils.getTypeName(utils.getComponentType(linkInfo.getType()), false),\n+                        typeElement).name());\n+            }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkFactory.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -235,0 +235,14 @@\n+    \/\/ Reset animation for type parameter target highlight\n+    document.querySelectorAll(\"a\").forEach((link) => {\n+        link.addEventListener(\"click\", (e) => {\n+            const href = e.currentTarget.getAttribute(\"href\");\n+            if (href && href.startsWith(\"#\") && href.indexOf(\"type-param-\") > -1) {\n+                const target = document.getElementById(decodeURI(href.substring(1)));\n+                if (target) {\n+                    target.style.animation = \"none\";\n+                    void target.offsetHeight;\n+                    target.style.removeProperty(\"animation\");\n+                }\n+            }\n+        })\n+    });\n@@ -289,1 +303,1 @@\n-    function collapse() {\n+    function collapse(e) {\n@@ -339,1 +353,1 @@\n-            var id = hdr.getAttribute(\"id\") || hdr.parentElement.getAttribute(\"id\")\n+            var id = hdr.parentElement.getAttribute(\"id\") || hdr.getAttribute(\"id\")\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script.js.template","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    --search-tag-highlight-color: #ffff00;\n+    --search-tag-highlight-color: #ffff66;\n@@ -310,1 +310,1 @@\n-    margin:10px 0;\n+    margin:10px 0 12px 0;\n@@ -991,0 +991,16 @@\n+dd > span:target,\n+h1 > span:target {\n+    animation: 2.4s ease-out highlight;\n+}\n+section.class-description dd > span:target,\n+section.class-description h1 > span:target {\n+    scroll-margin-top: 20em;\n+}\n+@keyframes highlight {\n+    from {\n+        background-color: var(--search-tag-highlight-color);\n+    }\n+    60% {\n+        background-color: var(--search-tag-highlight-color);\n+    }\n+}\n@@ -1043,1 +1059,1 @@\n-    margin: 10px 0 10px 0;\n+    margin: 10px 0;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/stylesheet.css","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -179,1 +179,1 @@\n-                String refModuleName =  ch.getReferencedModuleName(refSignature);\n+                String refModuleName = ch.getReferencedModuleName(refSignature);\n@@ -193,1 +193,1 @@\n-                                new Object[] { refSignature});\n+                                new Object[] {refSignature});\n@@ -196,1 +196,1 @@\n-                            Optional.of(labelContent.isEmpty() ? text: labelContent));\n+                            Optional.of(labelContent.isEmpty() ? text : labelContent));\n@@ -199,0 +199,16 @@\n+        } else if (utils.isTypeParameterElement(ref)) {\n+            \/\/ This is a type parameter of a generic class, method or constructor\n+            if (labelContent.isEmpty()) {\n+                labelContent = plainOrCode(isPlain, Text.of(utils.getSimpleName(ref)));\n+            }\n+            if (refMem == null) {\n+                return htmlWriter.getLink(\n+                        new HtmlLinkInfo(config, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS, ref.asType())\n+                                .label(labelContent));\n+            } else {\n+                \/\/ HtmlLinkFactory does not render type parameters of generic methods as links, so instead of\n+                \/\/ teaching it how to do it (making the code even more complex) just create the link directly.\n+                return htmlWriter.getLink(new HtmlLinkInfo(config, HtmlLinkInfo.Kind.PLAIN, refClass)\n+                        .fragment(config.htmlIds.forTypeParam(ref.getSimpleName().toString(), refMem).name())\n+                        .label((labelContent)));\n+            }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/LinkTaglet.java","additions":20,"deletions":4,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,1 +281,3 @@\n-        return HtmlTree.DD(body);\n+        return HtmlTree.DD(paramTag.isTypeParameter()\n+                ? HtmlTree.SPAN_ID(config.htmlIds.forTypeParam(paramName, element), body)\n+                : body);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/ParamTaglet.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -191,0 +191,6 @@\n+        } else if (utils.isTypeParameterElement(e)) {\n+            \/\/ Return the enclosing member for type parameters of generic methods or constructors.\n+            Element encl = e.getEnclosingElement();\n+            if (utils.isExecutableElement(encl)) {\n+                return encl;\n+            }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -998,0 +998,2 @@\n+    gdata->jvmti_data_dump = JNI_FALSE;\n+\n@@ -1162,0 +1164,7 @@\n+        } else if (strcmp(buf, \"datadump\") == 0) {\n+          \/\/ Enable JVMTI DATA_DUMP_REQUEST support.\n+          \/\/ This is not a documented flag. This feature is experimental and is only intended\n+          \/\/ to be used by debug agent developers. See comment for cbDataDump() for more details.\n+          if ( !get_boolean(&str, &(gdata->jvmti_data_dump)) ) {\n+                goto syntax_error;\n+            }\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/debugInit.c","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1390,3 +1390,1 @@\n-\/***** debugging *****\/\n-\n-#ifdef DEBUG\n+\/***** APIs for debugging the debug agent *****\/\n@@ -1479,2 +1477,0 @@\n-\n-#endif \/* DEBUG *\/\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/eventFilter.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-\/***** debugging *****\/\n+\/***** APIs for debugging the debug agent *****\/\n@@ -81,1 +81,0 @@\n-#ifdef DEBUG\n@@ -83,1 +82,0 @@\n-#endif\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/eventFilter.h","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1333,0 +1333,38 @@\n+\/**\n+ * Event callback for JVMTI_EVENT_DATA_DUMP_REQUEST\n+ *\n+ * This callback is made when a JVMTI data dump is requested. The common way of doing\n+ * this is with \"jcmd <pid> JVMTI.data_dump\".\n+ *\n+ * Debug agent data dumps are experimental and only intended to be used by debug agent\n+ * developers. Data dumps are disabled by default.\n+ *\n+ * This callback is enabled by launching the debug agent with datadump=y. The easiest\n+ * way to enabled data dumps with debugger tests or when using jdb is to use the\n+ * _JAVA_JDWP_OPTIONS export. The following works well when running tests:\n+ *\n+ *  make test TEST=<test> \\\n+ *    JTREG='JAVA_OPTIONS=-XX:+StartAttachListener;OPTIONS=-e:_JAVA_JDWP_OPTIONS=datadump=y'\n+ *\n+ * Data dumps may fail to happen due to the debug agent suspending all threads.\n+ * This causes the Signal Dispatcher and Attach Listener threads to be suspended,\n+ * which can cause issues with jcmd attaching. Running with -XX:+StartAttachListener can\n+ * help, but in general it is best not to try a datadump when all threads are suspended.\n+ *\n+ * Data dumps are also risky when the debug agent is handling events or commands from\n+ * the debugger, due to dumping data that is not lock protected. This can cause a\n+ * crash.\n+ *\n+ * Data dumps are meant to aid with post mortem debugging (debugging after a\n+ * problem has been detected), not for ongoing periodic data gathering.\n+ *\/\n+static void JNICALL\n+cbDataDump(jvmtiEnv *jvmti_env)\n+{\n+    tty_message(\"Debug Agent Data Dump\");\n+    tty_message(\"=== START DUMP ===\");\n+    threadControl_dumpAllThreads();\n+    eventHandler_dumpAllHandlers(JNI_TRUE);\n+    tty_message(\"=== END DUMP ===\");\n+}\n+\n@@ -1521,0 +1559,13 @@\n+\n+    \/*\n+     * DATA_DUMP_REQUEST is special since it is not tied to any handlers or an EI,\n+     * so it cannot be setup using threadControl_setEventMode(). Use JVMTI API directly.\n+     *\/\n+    if (gdata->jvmti_data_dump) {\n+        error = JVMTI_FUNC_PTR(gdata->jvmti,SetEventNotificationMode)\n+                (gdata->jvmti, JVMTI_ENABLE, JVMTI_EVENT_DATA_DUMP_REQUEST, NULL);\n+        if (error != JVMTI_ERROR_NONE) {\n+            EXIT_ERROR(error,\"Can't enable data dump request events\");\n+        }\n+    }\n+\n@@ -1583,0 +1634,2 @@\n+    \/* Event callback for JVMTI_EVENT_DATA_DUMP_REQUEST *\/\n+    gdata->callbacks.DataDumpRequest = &cbDataDump;\n@@ -1854,3 +1907,1 @@\n-\/***** debugging *****\/\n-\n-#ifdef DEBUG\n+\/***** APIs for debugging the debug agent *****\/\n@@ -1895,2 +1946,0 @@\n-\n-#endif \/* DEBUG *\/\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/eventHandler.c","additions":54,"deletions":5,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-\/***** debugging *****\/\n+\/***** APIs for debugging the debug agent *****\/\n@@ -90,1 +90,0 @@\n-#ifdef DEBUG\n@@ -94,1 +93,0 @@\n-#endif\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/eventHandler.h","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -140,5 +140,0 @@\n-#ifdef DEBUG\n-static void dumpThreadList(ThreadList *list);\n-static void dumpThread(ThreadNode *node);\n-#endif\n-\n@@ -2564,1 +2559,1 @@\n-\/***** debugging *****\/\n+\/***** APIs for debugging the debug agent *****\/\n@@ -2566,1 +2561,2 @@\n-#ifdef DEBUG\n+static void dumpThreadList(ThreadList *list);\n+static void dumpThread(ThreadNode *node);\n@@ -2571,0 +2567,1 @@\n+    tty_message(\"suspendAllCount: %d\", suspendAllCount);\n@@ -2655,2 +2652,0 @@\n-\n-#endif \/* DEBUG *\/\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/threadControl.c","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-\/***** debugging *****\/\n+\/***** APIs for debugging the debug agent *****\/\n@@ -81,1 +81,0 @@\n-#ifdef DEBUG\n@@ -84,1 +83,0 @@\n-#endif\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/threadControl.h","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1987,2 +1987,0 @@\n-#ifdef DEBUG\n-\n@@ -2043,2 +2041,0 @@\n-#endif\n-\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.c","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,0 +93,1 @@\n+    jboolean jvmti_data_dump; \/* If true, then support JVMTI DATA_DUMP_REQUEST events. *\/\n@@ -392,1 +393,0 @@\n-#ifdef DEBUG\n@@ -394,1 +394,0 @@\n-#endif\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,7 +35,0 @@\n-  static Step start(const Stepper* stepper,\n-                    int length,\n-                    int* to_length_addr,\n-                    uint chunk_size) {\n-    return stepper->start_impl(length, to_length_addr, chunk_size);\n-  }\n-\n@@ -43,4 +36,3 @@\n-                   int length,\n-                   int* to_length_addr,\n-                   uint chunk_size) {\n-    return stepper->next_impl(length, to_length_addr, chunk_size);\n+                   size_t length,\n+                   size_t* to_length_addr) {\n+    return stepper->next_impl(length, to_length_addr);\n@@ -52,5 +44,5 @@\n-static int simulate(const Stepper* stepper,\n-                    int length,\n-                    int* to_length_addr,\n-                    uint chunk_size) {\n-  Step init = StepperSupport::start(stepper, length, to_length_addr, chunk_size);\n+static uint simulate(const Stepper* stepper,\n+                     size_t length,\n+                     size_t* to_length_addr) {\n+  Step init = stepper->start(length);\n+  *to_length_addr = init._index;\n@@ -58,1 +50,1 @@\n-  int task = 0;\n+  uint task = 0;\n@@ -61,1 +53,1 @@\n-    Step step = StepperSupport::next(stepper, length, to_length_addr, chunk_size);\n+    Step step = StepperSupport::next(stepper, length, to_length_addr);\n@@ -67,4 +59,4 @@\n-static void run_test(int length, int chunk_size, uint n_workers) {\n-  const PartialArrayTaskStepper stepper(n_workers);\n-  int to_length;\n-  int tasks = simulate(&stepper, length, &to_length, chunk_size);\n+static void run_test(size_t length, size_t chunk_size, uint n_workers) {\n+  const PartialArrayTaskStepper stepper(n_workers, chunk_size);\n+  size_t to_length;\n+  uint tasks = simulate(&stepper, length, &to_length);\n@@ -76,1 +68,1 @@\n-  for (int chunk_size = 50; chunk_size <= 500; chunk_size += 50) {\n+  for (size_t chunk_size = 50; chunk_size <= 500; chunk_size += 50) {\n@@ -78,1 +70,1 @@\n-      for (int length = 0; length <= 1000000; length = (length * 2 + 1)) {\n+      for (size_t length = 0; length <= 1000000; length = (length * 2 + 1)) {\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_partialArrayTaskStepper.cpp","additions":17,"deletions":25,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -339,1 +339,1 @@\n-  return 0;\n+  return nullptr;\n","filename":"test\/hotspot\/gtest\/gtestMain.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -120,0 +120,1 @@\n+runtime\/Thread\/TestAlwaysPreTouchStacks.java 8335167 macosx-aarch64\n@@ -122,0 +123,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,1 +160,10 @@\n-### 2.5 Framework Debug and Stress Flags\n+### 2.5 IR Tests with Privileged Classes\n+To run tests in a privileged mode (e.g. when using `@Stable`, `@Contended`, `@ReservedStackAccess` etc.), one need to add the test classes to the boot classpath. This can easily be achieved by calling `TestFramework.addTestClassesToBootClassPath()` on the test framework object:\n+```\n+TestFramework testFramework = new TestFramework();\n+testFramework\n+        .addTestClassesToBootClassPath()\n+        .start();\n+```\n+\n+### 2.6 Framework Debug and Stress Flags\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/README.md","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -175,0 +175,1 @@\n+    private boolean testClassesOnBootClassPath;\n@@ -326,0 +327,9 @@\n+    \/**\n+     * Add test classes to boot classpath. This adds all classes found on path {@link jdk.test.lib.Utils#TEST_CLASSES}\n+     * to the boot classpath with \"-Xbootclasspath\/a\". This is useful when trying to run tests in a privileged mode.\n+     *\/\n+    public TestFramework addTestClassesToBootClassPath() {\n+        this.testClassesOnBootClassPath = true;\n+        return this;\n+    }\n+\n@@ -747,1 +757,2 @@\n-        TestVMProcess testVMProcess = new TestVMProcess(additionalFlags, testClass, helperClasses, defaultWarmup);\n+        TestVMProcess testVMProcess = new TestVMProcess(additionalFlags, testClass, helperClasses, defaultWarmup,\n+                                                        testClassesOnBootClassPath);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/TestFramework.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import java.io.File;\n@@ -66,1 +67,2 @@\n-    public TestVMProcess(List<String> additionalFlags, Class<?> testClass, Set<Class<?>> helperClasses, int defaultWarmup) {\n+    public TestVMProcess(List<String> additionalFlags, Class<?> testClass, Set<Class<?>> helperClasses, int defaultWarmup,\n+                         boolean testClassesOnBootClassPath) {\n@@ -70,1 +72,1 @@\n-            prepareTestVMFlags(additionalFlags, socket, testClass, helperClasses, defaultWarmup);\n+            prepareTestVMFlags(additionalFlags, socket, testClass, helperClasses, defaultWarmup, testClassesOnBootClassPath);\n@@ -94,1 +96,1 @@\n-                                    Set<Class<?>> helperClasses, int defaultWarmup) {\n+                                    Set<Class<?>> helperClasses, int defaultWarmup, boolean testClassesOnBootClassPath) {\n@@ -98,1 +100,6 @@\n-        cmds.add(\"-Xbootclasspath\/a:.\");\n+        String bootClassPath = \"-Xbootclasspath\/a:.\";\n+        if (testClassesOnBootClassPath) {\n+            \/\/ Add test classes themselves to boot classpath to make them privileged.\n+            bootClassPath += File.pathSeparator + Utils.TEST_CLASS_PATH;\n+        }\n+        cmds.add(bootClassPath);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/TestVMProcess.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+    static final int[] GOLDEN_M;\n@@ -74,0 +75,1 @@\n+        GOLDEN_M = testm(new int[ITER]);\n@@ -83,1 +85,1 @@\n-                 \"testi\", \"testj\", \"testk\", \"testl\"})\n+                 \"testi\", \"testj\", \"testk\", \"testl\", \"testm\"})\n@@ -98,0 +100,1 @@\n+        compare(testm(new int[ITER]), GOLDEN_M, \"testm\");\n@@ -302,0 +305,13 @@\n+    @Test\n+    @IR(counts = {IRNode.MUL_ADD_S2I, \"> 0\"},\n+        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n+    @IR(counts = {IRNode.MUL_ADD_VS2VI, \"= 0\"})\n+    public static int[] testm(int[] out) {\n+        for (int i = 0; i < ITER-4; i+=4) {\n+            \/\/ Unrolled, with some swaps that prevent vectorization.\n+            out[i+0] += ((sArr1[2*i+0] * sArr2[2*i+1]) + (sArr1[2*i+1] * sArr2[2*i+0])); \/\/ bad\n+            out[i+1] += ((sArr1[2*i+2] * sArr2[2*i+2]) + (sArr1[2*i+3] * sArr2[2*i+3])); \/\/ ok\n+            \/\/ 2-element gap\n+        }\n+        return out;\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestMulAddS2I.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -73,0 +73,12 @@\n+\n+            \/\/ Intermittent deflation and inflation may occur due to running the test\n+            \/\/ with stress flags (like DeoptimizeALot) or with added instrumentation\n+            \/\/ which runs in the same VM.\n+            \/\/ An arbitrary fuzzy max difference of 10 (= 0.01% of COUNT) is chosen to\n+            \/\/ allow for these occurrences to be skipped while still catching regressions.\n+            final long fuzzy_max_difference = 10;\n+            if (Math.abs(monitor_count_change) < fuzzy_max_difference) {\n+                final String type = monitor_count_change < 0 ? \"deflation\" : \"inflation\";\n+                throw new SkippedException(\"Intermittent \" + type + \" detected. Invalid test.\");\n+            }\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/locking\/TestRecursiveMonitorChurn.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8337622\n+ * @summary (reflect) java.lang.Class componentType field not found.\n+ * @library \/test\/lib\n+ * @modules java.base\/java.lang:open\n+ * @run main ComponentTypeFieldTest\n+ *\/\n+\n+import java.lang.reflect.Field;\n+import static jdk.test.lib.Asserts.*;\n+\n+public class ComponentTypeFieldTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        Field f = Class.class.getDeclaredField(\"componentType\");\n+        f.setAccessible(true);\n+        Object val = f.get(Runnable.class);\n+        assertTrue(val == null);\n+        System.out.println(\"val is \" + val);\n+\n+        Object arrayVal = f.get(Integer[].class);\n+        System.out.println(\"val is \" + arrayVal);\n+        String arrayValString = arrayVal.toString();\n+        assertTrue(arrayValString.equals(\"class java.lang.Integer\"));\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/reflect\/ComponentTypeFieldTest.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8333356\n+ * @summary Verify new error message for corrupting string table contents.\n+ * @requires vm.flagless\n+ * @modules java.base\/java.lang:open\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run driver StringTableCorruptionTest test\n+ *\/\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class StringTableCorruptionTest {\n+    public static void main(String[] args) throws Exception {\n+        if (args.length > 0) {\n+            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"--add-opens\", \"java.base\/java.lang=ALL-UNNAMED\",\n+                                                             \"-XX:-CreateCoredumpOnCrash\", \"StringTableCorruptionTest\");\n+            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+            output.shouldContain(\"Node hash code has changed possibly due to corruption of the contents.\");\n+            output.shouldNotHaveExitValue(0);\n+            return;\n+        }\n+\n+        Field f = String.class.getDeclaredField(\"value\");\n+        f.setAccessible(true);\n+        f.set(\"s1\".intern(), f.get(\"s2\"));\n+        for (int i = 0; i < 4_000_000; i++) {\n+            (\"s_\" + i).intern();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/stringtable\/StringTableCorruptionTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+import java.lang.instrument.ClassFileTransformer;\n+import java.lang.instrument.IllegalClassFormatException;\n+import java.lang.instrument.Instrumentation;\n+import java.security.ProtectionDomain;\n+import jdk.test.lib.thread.VThreadPinner;\n+\n+\/*\n+ * @test\n+ * @summary javaagent + tracePinnedThreads will cause jvm crash\/ run into deadlock when the virtual thread is pinned\n+ * @library \/test\/lib\n+ * @requires vm.continuations\n+ * @requires vm.jvmti\n+ * @modules java.base\/java.lang:+open\n+ * @compile TestPinCaseWithCFLH.java\n+ * @build jdk.test.lib.Utils\n+ * @run driver jdk.test.lib.util.JavaAgentBuilder\n+ *             TestPinCaseWithCFLH TestPinCaseWithCFLH.jar\n+ * @run main\/othervm\/timeout=100  -Djdk.virtualThreadScheduler.maxPoolSize=1\n+ *       -Djdk.tracePinnedThreads=full --enable-native-access=ALL-UNNAMED\n+ *       -javaagent:TestPinCaseWithCFLH.jar TestPinCaseWithCFLH\n+ *\/\n+public class TestPinCaseWithCFLH {\n+\n+    public static class TestClassFileTransformer implements ClassFileTransformer {\n+        public byte[] transform(ClassLoader loader, String className, Class<?> classBeingRedefined,\n+                                ProtectionDomain protectionDomain, byte[] classfileBuffer)\n+                                throws IllegalClassFormatException {\n+            return classfileBuffer;\n+        }\n+    }\n+\n+    \/\/ Called when agent is loaded at startup\n+    public static void premain(String agentArgs, Instrumentation instrumentation) throws Exception {\n+        instrumentation.addTransformer(new TestClassFileTransformer());\n+    }\n+\n+    private static int result = 0;\n+\n+    public static void main(String[] args) throws Exception{\n+        Thread t1 = Thread.ofVirtual().name(\"vthread-1\").start(() -> {\n+            VThreadPinner.runPinned(() -> {\n+                try {\n+                    \/\/ try yield, will pin,\n+                    \/\/ javaagent + tracePinnedThreads should not lead to crash\n+                    \/\/ (because of the class `PinnedThreadPrinter`)\n+                    Thread.sleep(500);\n+                } catch (Exception e) {\n+                    e.printStackTrace();\n+                }\n+            });\n+        });\n+        t1.join();\n+    }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/TestPinCaseWithCFLH\/TestPinCaseWithCFLH.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -11,1 +11,1 @@\n-disable-static=true\n+disable-static=false\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jittester\/conf\/default.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-                    .setCanHaveBreaks(true)\n+                    .setCanHaveBreaks(false)\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jittester\/src\/jdk\/test\/lib\/jittester\/factories\/StaticConstructorDefinitionFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-        TestVMProcess testVMProcess = new TestVMProcess(testVMFlags, testClass, null, -1);\n+        TestVMProcess testVMProcess = new TestVMProcess(testVMFlags, testClass, null, -1, false);\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestPhaseIRMatching.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package ir_framework.tests;\n+\n+import compiler.lib.ir_framework.*;\n+import compiler.lib.ir_framework.driver.irmatching.IRViolationException;\n+\n+import jdk.internal.vm.annotation.Stable;\n+import jdk.test.lib.Asserts;\n+\n+\/*\n+ * @test\n+ * @requires vm.debug == true & vm.compiler2.enabled & vm.flagless\n+ * @summary Test that IR framework successfully adds test class to boot classpath in order to run in privileged mode.\n+ * @modules java.base\/jdk.internal.vm.annotation\n+ * @library \/test\/lib \/\n+ * @run driver ir_framework.tests.TestPrivilegedMode\n+ *\/\n+\n+public class TestPrivilegedMode {\n+    static @Stable int iFld; \/\/ Treated as constant after first being set.\n+\n+    public static void main(String[] args) {\n+        try {\n+            TestFramework.run();\n+            Asserts.fail(\"should not reach\");\n+        } catch (IRViolationException e) {\n+            \/\/ Without adding test class to boot classpath, we fail to replace the field load by a constant.\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"Matched forbidden node\"));\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"LoadI\"));\n+        }\n+\n+        \/\/ When adding the test class to the boot classpath, we can replace the field load by a constant.\n+        new TestFramework().addTestClassesToBootClassPath().start();\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setup\")\n+    @IR(failOn = IRNode.LOAD_I)\n+    public int test() {\n+        return iFld;\n+    }\n+\n+    @Setup\n+    public void setup() {\n+        iFld = 34;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestPrivilegedMode.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new caught_exception002().runTest(argv, out);\n+        new caught_exception002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/caught_exception\/caught_exception002\/caught_exception002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -63,4 +63,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -70,1 +66,1 @@\n-        return new classes001().runTest(argv, out);\n+        new classes001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/classes\/classes001\/classes001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -62,4 +62,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -69,1 +65,1 @@\n-        return new classpath001().runTest(argv, out);\n+        new classpath001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/classpath\/classpath001\/classpath001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -64,4 +64,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -71,1 +67,1 @@\n-        return new clear002().runTest(argv, out);\n+        new clear002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear002\/clear002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -65,4 +65,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -72,1 +68,1 @@\n-        return new clear003().runTest(argv, out);\n+        new clear003().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear003\/clear003.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -66,4 +66,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -73,1 +69,1 @@\n-        return new clear004().runTest(argv, out);\n+        new clear004().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear004\/clear004.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -69,4 +69,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -76,1 +72,1 @@\n-        return new down002().runTest(argv, out);\n+        new down002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/down\/down002\/down002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -73,4 +73,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new dump002().runTest(argv, out);\n+        new dump002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/dump\/dump002\/dump002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -78,4 +78,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -85,1 +81,1 @@\n-        return new eval001().runTest(argv, out);\n+        new eval001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/eval\/eval001\/eval001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n- * @run main\/othervm\/timeout=600\n+ * @run driver\/timeout=600\n@@ -85,4 +85,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -92,1 +88,1 @@\n-        return new exclude001().runTest(argv, out);\n+        new exclude001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/exclude\/exclude001\/exclude001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -67,4 +67,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -74,1 +70,1 @@\n-        return new fields001().runTest(argv, out);\n+        new fields001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/fields\/fields001\/fields001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -63,4 +63,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -69,1 +65,1 @@\n-        return new hc001().runTest(argv, out);\n+        new hc001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/hidden_class\/hc001\/hc001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -66,4 +66,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -73,1 +69,1 @@\n-        return new ignore001().runTest(argv, out);\n+        new ignore001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/ignore\/ignore001\/ignore001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -76,4 +76,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -82,1 +78,1 @@\n-        return new interrupt001().runTest(argv, out);\n+        new interrupt001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/interrupt\/interrupt001\/interrupt001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -77,4 +77,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -83,1 +79,1 @@\n-        return new kill001().runTest(argv, out);\n+        new kill001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill001\/kill001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -69,4 +69,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new kill002().runTest(argv, out);\n+        new kill002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill002\/kill002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -66,4 +66,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -73,1 +69,1 @@\n-        return new class001().runTest(argv, out);\n+        new class001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/klass\/class001\/class001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -71,4 +71,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -78,1 +74,1 @@\n-        return new list002().runTest(argv, out);\n+        new list002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/list\/list002\/list002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -50,0 +50,1 @@\n+ *      -jdb.option=\"-sourcepath ${test.src}\/..\/..\/..\/..\"\n@@ -101,4 +102,0 @@\n-        System.exit(run(args, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String[] args, PrintStream out) {\n@@ -107,1 +104,1 @@\n-        return new list003().runTest(args, out);\n+        new list003().runTest(args);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/list\/list003\/list003.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -78,4 +78,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -86,1 +82,1 @@\n-        return new locals002().runTest(argv, out);\n+        new locals002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/locals\/locals002\/locals002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -76,4 +76,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -83,1 +79,1 @@\n-        return new methods002().runTest(argv, out);\n+        new methods002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/methods\/methods002\/methods002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new monitor001().runTest(argv, out);\n+        new monitor001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor001\/monitor001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -68,4 +68,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new monitor002().runTest(argv, out);\n+        new monitor002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor002\/monitor002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new next001().runTest(argv, out);\n+        new next001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/next\/next001\/next001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new connect001().runTest(argv, out);\n+        new connect001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect001\/connect001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new connect002().runTest(argv, out);\n+        new connect002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect002\/connect002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new connect003().runTest(argv, out);\n+        new connect003().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect003\/connect003.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new connect004().runTest(argv, out);\n+        new connect004().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect004\/connect004.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -73,6 +73,1 @@\n-    public static void main (String argv[]) {\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static void main (String argv[]) {    debuggeeClass =  DEBUGGEE_CLASS;\n@@ -81,1 +76,1 @@\n-        return new connect005().runTest(argv, out);\n+        new connect005().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect005\/connect005.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -78,4 +78,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -85,1 +81,1 @@\n-        return new listconnectors001().runTest(argv, out);\n+        new listconnectors001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/listconnectors\/listconnectors001\/listconnectors001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -73,4 +73,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -80,1 +76,1 @@\n-        return new pop001().runTest(argv, out);\n+        new pop001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/pop\/pop001\/pop001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -66,4 +66,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -73,1 +69,1 @@\n-        return new pop_exception001().runTest(argv, out);\n+        new pop_exception001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/pop_exception\/pop_exception001\/pop_exception001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -78,4 +78,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -85,1 +81,1 @@\n-        return new print002().runTest(argv, out);\n+        new print002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/print\/print002\/print002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -79,4 +79,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -86,1 +82,1 @@\n-        return new read001().runTest(argv, out);\n+        new read001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/read\/read001\/read001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -83,4 +83,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -90,1 +86,1 @@\n-        return new redefine001().runTest(argv, out);\n+        new redefine001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/redefine\/redefine001\/redefine001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new reenter001().runTest(argv, out);\n+        new reenter001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/reenter\/reenter001\/reenter001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -134,4 +134,0 @@\n-                System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-        }\n-\n-        public static int run(String argv[], PrintStream out) {\n@@ -140,1 +136,1 @@\n-                return new b4689395().runTest(argv, out);\n+                new b4689395().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/regression\/b4689395\/b4689395.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -71,4 +71,0 @@\n-        System.exit(run(args, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String[] args, PrintStream out) {\n@@ -77,1 +73,1 @@\n-        return new repeat001().runTest(args, out);\n+        new repeat001().runTest(args);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/repeat\/repeat001\/repeat001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -76,4 +76,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -83,1 +79,1 @@\n-        return new resume002().runTest(argv, out);\n+        new resume002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/resume\/resume002\/resume002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -70,4 +70,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -77,1 +73,1 @@\n-        return new run002().runTest(argv, out);\n+        new run002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/run\/run002\/run002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -79,4 +79,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -86,1 +82,1 @@\n-        return new set001().runTest(argv, out);\n+        new set001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/set\/set001\/set001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -79,4 +79,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -87,1 +83,1 @@\n-        return new set002().runTest(argv, out);\n+        new set002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/set\/set002\/set002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -82,4 +82,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -89,1 +85,1 @@\n-        return new step002().runTest(argv, out);\n+        new step002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/step\/step002\/step002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -71,4 +71,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -78,1 +74,1 @@\n-        return new step_up001().runTest(argv, out);\n+        new step_up001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/step_up\/step_up001\/step_up001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -70,4 +70,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -77,1 +73,1 @@\n-        return new stop_at002().runTest(argv, out);\n+        new stop_at002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at002\/stop_at002.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -82,4 +82,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -89,1 +85,1 @@\n-        return new stop_at003().runTest(argv, out);\n+        new stop_at003().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at003\/stop_at003.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -83,4 +83,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -90,1 +86,1 @@\n-        return new stop_in002().runTest(argv, out);\n+        new stop_in002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_in\/stop_in002\/stop_in002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new suspend001().runTest(argv, out);\n+        new suspend001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/suspend\/suspend001\/suspend001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -69,4 +69,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -76,1 +72,1 @@\n-        return new thread002().runTest(argv, out);\n+        new thread002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/thread\/thread002\/thread002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -72,4 +72,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -79,1 +75,1 @@\n-        return new threadgroup002().runTest(argv, out);\n+        new threadgroup002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threadgroup\/threadgroup002\/threadgroup002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -67,4 +67,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -74,1 +70,1 @@\n-        return new threadgroups002().runTest(argv, out);\n+        new threadgroups002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threadgroups\/threadgroups002\/threadgroups002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -68,4 +68,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new threads002().runTest(argv, out);\n+        new threads002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threads\/threads002\/threads002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -68,4 +68,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new threads003().runTest(argv, out);\n+        new threads003().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threads\/threads003\/threads003.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -81,1 +77,1 @@\n-        return new trace001().runTest(argv, out);\n+        new trace001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/trace\/trace001\/trace001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -78,4 +78,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -85,1 +81,1 @@\n-        return new uncaught_exception002(true).runTest(argv, out);\n+        new uncaught_exception002(true).runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/uncaught_exception\/uncaught_exception002\/uncaught_exception002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -82,4 +82,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -89,1 +85,1 @@\n-        return new unmonitor001().runTest(argv, out);\n+        new unmonitor001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unmonitor\/unmonitor001\/unmonitor001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -80,4 +80,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -87,1 +83,1 @@\n-        return new untrace001().runTest(argv, out);\n+        new untrace001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/untrace\/untrace001\/untrace001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -76,4 +76,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -83,1 +79,1 @@\n-        return new unwatch001().runTest(argv, out);\n+        new unwatch001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unwatch\/unwatch001\/unwatch001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -77,4 +77,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -84,1 +80,1 @@\n-        return new unwatch002().runTest(argv, out);\n+        new unwatch002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unwatch\/unwatch002\/unwatch002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -69,4 +69,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -76,1 +72,1 @@\n-        return new up002().runTest(argv, out);\n+        new up002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/up\/up002\/up002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -70,4 +70,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -77,1 +73,1 @@\n-        return new use001().runTest(argv, out);\n+        new use001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/use\/use001\/use001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -82,1 +78,1 @@\n-        return new watch001().runTest(argv, out);\n+        new watch001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/watch\/watch001\/watch001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -74,4 +74,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -82,1 +78,1 @@\n-        return new watch002().runTest(argv, out);\n+        new watch002().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/watch\/watch002\/watch002.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -67,4 +67,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -74,1 +70,1 @@\n-        return new where004().runTest(argv, out);\n+        new where004().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where004\/where004.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -68,4 +68,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new where005(true).runTest(argv, out);\n+        new where005(true).runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where005\/where005.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -68,4 +68,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -75,1 +71,1 @@\n-        return new where006().runTest(argv, out);\n+        new where006().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where006\/where006.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @run main\/othervm\n+ * @run driver\n@@ -63,4 +63,0 @@\n-        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n@@ -70,1 +66,1 @@\n-        return new wherei001().runTest(argv, out);\n+        new wherei001().runTest(argv);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/wherei\/wherei001\/wherei001.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -128,1 +128,2 @@\n-    protected int runTest(String argv[], PrintStream out) {\n+    protected void runTest(String argv[]) {\n+        PrintStream out = System.out;\n@@ -135,1 +136,1 @@\n-                return PASSED;\n+                return;\n@@ -229,1 +230,1 @@\n-                return FAILED;\n+                throw new RuntimeException(\"TEST FAILED\");\n@@ -235,2 +236,1 @@\n-            out.println(\"TEST FAILED\");\n-            return FAILED;\n+            throw new RuntimeException(\"TEST FAILED\", t);\n@@ -239,1 +239,0 @@\n-        return PASSED;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/JdbTest.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -183,0 +183,4 @@\n+                connect.append(\",options=\");\n+                connect.append(\" \\\"-cp\\\"\");\n+                connect.append(\" \\\"\" + System.getProperty(\"test.class.path\") + \"\\\"\");\n+\n@@ -185,2 +189,0 @@\n-                    \/\/connect.append(\",options=\" + debuggeeOpts.trim());\n-                    connect.append(\",options=\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/Launcher.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -378,1 +378,1 @@\n-java\/awt\/Mouse\/EnterExitEvents\/ResizingFrameTest.java 8005021 macosx-all\n+java\/awt\/Mouse\/EnterExitEvents\/ResizingFrameTest.java 8005021,8332158 macosx-all,linux-x64\n@@ -476,0 +476,5 @@\n+# Wayland related\n+\n+java\/awt\/FullScreen\/FullscreenWindowProps\/FullscreenWindowProps.java 8280991 linux-x64\n+java\/awt\/FullScreen\/SetFullScreenTest.java 8332155 linux-x64\n+\n@@ -741,1 +746,0 @@\n-jdk\/jfr\/event\/compiler\/TestCodeSweeper.java                     8225209 generic-all\n@@ -743,2 +747,0 @@\n-jdk\/jfr\/startupargs\/TestStartName.java                          8214685 windows-x64\n-jdk\/jfr\/startupargs\/TestStartDuration.java                      8214685 windows-x64\n","filename":"test\/jdk\/ProblemList.txt","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,176 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Map;\n+\n+import jdk.test.lib.dcmd.PidJcmdExecutor;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+import com.sun.jdi.Bootstrap;\n+import com.sun.jdi.ClassType;\n+import com.sun.jdi.VirtualMachine;\n+import com.sun.jdi.VMDisconnectedException;\n+import com.sun.jdi.connect.AttachingConnector;\n+import com.sun.jdi.connect.Connector;\n+import com.sun.jdi.connect.IllegalConnectorArgumentsException;\n+import com.sun.jdi.event.ClassPrepareEvent;\n+import com.sun.jdi.event.Event;\n+import com.sun.jdi.event.EventSet;\n+import com.sun.jdi.request.EventRequest;\n+import com.sun.jdi.request.ClassPrepareRequest;\n+\n+\/**\n+ * @test\n+ * @bug  8332488\n+ * @summary Unit test for testing debug agent support for JVMTI.data_dump jcmd.\n+ *\n+ * @library \/test\/lib\n+ * @modules jdk.jdi\n+ * @run driver DataDumpTest\n+ *\/\n+\n+class DataDumpTestTarg {\n+    public static void main(String args[]) throws Exception {\n+        \/\/ Write something that can be read by the driver\n+        System.out.println(\"Debuggee started\");\n+    }\n+}\n+\n+public class DataDumpTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        System.out.println(\"Test 1: Debuggee start with datadump=y\");\n+        runTest(\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,datadump=y\");\n+    }\n+\n+    private static void sleep(long ms) {\n+        try {\n+            Thread.sleep(ms);\n+        } catch (InterruptedException e) {\n+        }\n+    }\n+\n+    private static void runTest(String jdwpArg) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                jdwpArg,\n+                \/\/ Probably not required by this test, but best to include when using datadump\n+                \"-XX:+StartAttachListener\",\n+                \"DataDumpTestTarg\");\n+        Process p = null;\n+        OutputAnalyzer out = null;\n+        try {\n+            p = pb.start();\n+            InputStream is = p.getInputStream();\n+            out = new OutputAnalyzer(p);\n+\n+            \/\/ Attach a debugger and do the data dump. The data dump output will appear\n+            \/\/ in the debuggee output.\n+            attachAndDump(p.pid());\n+\n+            out.waitFor(); \/\/ Wait for the debuggee to exit\n+\n+            System.out.println(\"Deuggee output:\");\n+            System.out.println(out.getOutput());\n+\n+            \/\/ All these strings are part of the debug agent data dump output.\n+            out.shouldHaveExitValue(0);\n+            out.shouldContain(\"Debuggee started\");\n+            out.shouldContain(\"Debug Agent Data Dump\");\n+            out.shouldContain(\"suspendAllCount: 0\");\n+            out.shouldContain(\"ClassMatch: classPattern(DataDumpTestTarg)\");\n+            out.shouldContain(\"Handlers for EI_VM_DEATH\");\n+        } finally {\n+            if (p != null) {\n+                p.destroyForcibly();\n+            }\n+        }\n+    }\n+\n+    private static void attachAndDump(long pid) throws IOException,\n+            IllegalConnectorArgumentsException {\n+        \/\/ Get the ProcessAttachingConnector, which can attach using the pid of the debuggee.\n+        AttachingConnector ac = Bootstrap.virtualMachineManager().attachingConnectors()\n+                .stream()\n+                .filter(c -> c.name().equals(\"com.sun.jdi.ProcessAttach\"))\n+                .findFirst()\n+                .orElseThrow(() -> new RuntimeException(\"Unable to locate ProcessAttachingConnector\"));\n+\n+        \/\/ Set the connector's \"pid\" argument to the pid of the debuggee.\n+        Map<String, Connector.Argument> args = ac.defaultArguments();\n+        Connector.StringArgument arg = (Connector.StringArgument)args.get(\"pid\");\n+        arg.setValue(\"\" + pid);\n+\n+        \/\/ Attach to the debuggee.\n+        System.out.println(\"Debugger is attaching to: \" + pid + \" ...\");\n+        VirtualMachine vm = ac.attach(args);\n+\n+        \/\/ List all threads as a sanity check.\n+        System.out.println(\"Attached! Now listing threads ...\");\n+        vm.allThreads().stream().forEach(System.out::println);\n+\n+        \/\/ Request VM to trigger ClassPrepareRequest when DataDumpTestTarg class is prepared.\n+        ClassPrepareRequest classPrepareRequest = vm.eventRequestManager().createClassPrepareRequest();\n+        classPrepareRequest.addClassFilter(\"DataDumpTestTarg\");\n+        \/\/ Don't use SUSPEND_ALL here. That might prevent the data dump because the\n+        \/\/ Signal Dispatcher and Attach Listener threads will be suspended, and they\n+        \/\/ may be needed by the jcmd support.\n+        classPrepareRequest.setSuspendPolicy(EventRequest.SUSPEND_EVENT_THREAD);\n+        classPrepareRequest.enable();\n+\n+        try {\n+            while (true) { \/\/ Exit when we get VMDisconnectedException\n+                EventSet eventSet = vm.eventQueue().remove();\n+                if (eventSet == null) {\n+                    continue;\n+                }\n+                for (Event event : eventSet) {\n+                    System.out.println(\"Received event: \" + event);\n+                    if (event instanceof ClassPrepareEvent) {\n+                        ClassPrepareEvent evt = (ClassPrepareEvent) event;\n+                        ClassType classType = (ClassType) evt.referenceType();\n+\n+                        \/\/ Run JVMTI.data_dump jcmd.\n+                        OutputAnalyzer out = new PidJcmdExecutor(\"\" + pid).execute(\"JVMTI.data_dump\");\n+                        out.waitFor();\n+\n+                        \/\/ Verify the output of the jcmd. Note the actual dump is in the debuggee\n+                        \/\/ output, not in the jcmd output, so we don't check it here.\n+                        System.out.println(\"JVMTI.data_dump output:\");\n+                        System.out.println(out.getOutput());\n+                        out.shouldContain(\"Command executed successfully\");\n+                        out.shouldHaveExitValue(0);\n+                    }\n+                }\n+                eventSet.resume();\n+            }\n+        } catch (VMDisconnectedException e) {\n+            System.out.println(\"VM is now disconnected.\");\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            throw new RuntimeException(e);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/jdi\/DataDumpTest.java","additions":176,"deletions":0,"binary":false,"changes":176,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020 SAP SE. All rights reserved.\n+ * Copyright (c) 2020, 2024 SAP SE. All rights reserved.\n@@ -291,0 +291,1 @@\n+        new EARelockingWithManyLightweightLocksTarget()                                     .run();\n@@ -416,0 +417,1 @@\n+        new EARelockingWithManyLightweightLocks()                                     .run(this);\n@@ -1800,0 +1802,79 @@\n+\/**\n+ * Like {@link EARelockingSimple}. The difference is that there are many\n+ * lightweight locked objects when the relocking is done. With\n+ * <code>-XX:LockingMode=2<\/code> the lock stack of the thread will be full\n+ * because of this.\n+ *\/\n+\n+class EARelockingWithManyLightweightLocks extends EATestCaseBaseDebugger {\n+\n+    public void runTestCase() throws Exception {\n+        BreakpointEvent bpe = resumeTo(TARGET_TESTCASE_BASE_NAME, \"dontinline_brkpt\", \"()V\");\n+        printStack(bpe.thread());\n+        @SuppressWarnings(\"unused\")\n+        ObjectReference o = getLocalRef(bpe.thread().frame(1), XYVAL_NAME, \"l1\");\n+    }\n+}\n+\n+class EARelockingWithManyLightweightLocksTarget extends EATestCaseBaseTarget {\n+\n+    static class Lock {\n+    }\n+\n+    public static Lock L0, L1, L2, L3, L4, L5, L6, L7, L8, L9;\n+\n+    void allocateLocks() {\n+        L0 = new Lock();\n+        L1 = new Lock();\n+        L2 = new Lock();\n+        L3 = new Lock();\n+        L4 = new Lock();\n+        L5 = new Lock();\n+        L6 = new Lock();\n+        L7 = new Lock();\n+        L8 = new Lock();\n+        L9 = new Lock();\n+    }\n+\n+    @Override\n+    public void setUp() {\n+        super.setUp();\n+        allocateLocks();\n+    }\n+\n+    @Override\n+    public void warmupDone() {\n+        super.warmupDone();\n+        allocateLocks();    \/\/ get rid of already inflated ones\n+    }\n+\n+    public void dontinline_testMethod() {\n+        XYVal l1 = new XYVal(4, 2);\n+        synchronized(L0) {\n+            synchronized(L1) {\n+                synchronized(L2) {\n+                    synchronized(L3) {\n+                        synchronized(L4) {\n+                            synchronized(L5) {\n+                                synchronized(L6) {\n+                                    synchronized(L7) {\n+                                        synchronized(L8) {\n+                                            synchronized(L9) {\n+                                                synchronized (l1) {\n+                                                    dontinline_brkpt();\n+                                                }\n+                                            }\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\n","filename":"test\/jdk\/com\/sun\/jdi\/EATests.java","additions":82,"deletions":1,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Checkbox;\n+import java.awt.Color;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8233068\n+ * @summary Tests checkbox checker on scaling\n+ * @requires (os.family == \"linux\")\n+ * @run main CheckboxCheckerScalingTest\n+ *\/\n+\n+public class CheckboxCheckerScalingTest {\n+    private static Frame frame;\n+    private static Checkbox checkbox;\n+    private static BufferedImage imageAfterChecked;\n+    private static volatile boolean checkmarkFound = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        System.setProperty(\"sun.java2d.uiScale\", \"2\");\n+        Robot robot = new Robot();\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                frame = new Frame(\"ComboBox checker scaling test\");\n+                checkbox = new Checkbox(\"one\");\n+                checkbox.setState(true);\n+                frame.add(checkbox);\n+                frame.pack();\n+                frame.setVisible(true);\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(100);\n+            EventQueue.invokeAndWait(() -> {\n+                Point point = checkbox.getLocationOnScreen();\n+                Rectangle rect = new Rectangle(point.x + 5, point.y + 7, 8, 8);\n+                imageAfterChecked = robot.createScreenCapture(rect);\n+\n+                check: {\n+                    for (int i = 0; i < imageAfterChecked.getHeight(); i++) {\n+                        for (int j = 0; j < imageAfterChecked.getWidth(); j++) {\n+                            if (Color.black.getRGB() == imageAfterChecked.getRGB(i, j)) {\n+                                checkmarkFound = true;\n+                                break check;\n+                            }\n+                        }\n+                    }\n+                }\n+            });\n+\n+            if (!checkmarkFound) {\n+                throw new RuntimeException(\"Checkmark not scaled\");\n+            }\n+            System.out.println(\"Test Passed\");\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Checkbox\/CheckboxCheckerScalingTest.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,2 +48,3 @@\n-        test(\"2\", \"2\");\n-        test(\"2.2\", \"2\");\n+\/\/        GTK 2 is removed, but the test can still be useful.\n+\/\/        test(\"2\", \"2\");\n+\/\/        test(\"2.2\", \"2\");\n","filename":"test\/jdk\/java\/awt\/Gtk\/GtkVersionTest\/GtkVersionTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @summary  Verifies Robot screen capture capabilities with different\n+ * @summary  Verifies Robot screen capture capabilities with available\n@@ -47,1 +47,0 @@\n- * @run main\/othervm -Djdk.gtk.version=2 -Dsun.java2d.uiScale=1 ScreenCaptureGtkTest\n@@ -56,6 +55,0 @@\n-        if (\"2\".equals(System.getProperty(\"jdk.gtk.version\"))\n-                && System.getenv(\"WAYLAND_DISPLAY\") != null) {\n-            \/\/ screen capture is not supported with gtk2 on Wayland\n-            return;\n-        }\n-\n","filename":"test\/jdk\/java\/awt\/Robot\/HiDPIScreenCapture\/ScreenCaptureGtkTest.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,336 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.net.URI;\n+import java.net.http.HttpClient;\n+import java.net.http.HttpRequest;\n+import java.net.http.HttpResponse;\n+import java.net.http.HttpResponse.BodyHandlers;\n+import java.util.ArrayList;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Random;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.net.ssl.SSLContext;\n+\n+import jdk.httpclient.test.lib.common.HttpServerAdapters.HttpTestExchange;\n+import jdk.httpclient.test.lib.common.HttpServerAdapters.HttpTestHandler;\n+import jdk.httpclient.test.lib.common.HttpServerAdapters.HttpTestServer;\n+import jdk.test.lib.net.SimpleSSLContext;\n+import jdk.test.lib.net.URIBuilder;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+\/*\n+ * @test\n+ * @bug 8335181\n+ * @summary verify that the HttpClient correctly handles incoming GOAWAY frames and\n+ *          retries any unprocessed requests on a new connection\n+ * @library \/test\/lib \/test\/jdk\/java\/net\/httpclient\/lib\n+ * @build jdk.httpclient.test.lib.common.HttpServerAdapters\n+ *        jdk.test.lib.net.SimpleSSLContext\n+ * @run junit H2GoAwayTest\n+ *\/\n+public class H2GoAwayTest {\n+    private static final String REQ_PATH = \"\/test\";\n+    private static HttpTestServer server;\n+    private static String REQ_URI_BASE;\n+    private static SSLContext sslCtx;\n+\n+    @BeforeAll\n+    static void beforeAll() throws Exception {\n+        sslCtx = new SimpleSSLContext().get();\n+        assertNotNull(sslCtx, \"SSLContext couldn't be created\");\n+        server = HttpTestServer.create(HTTP_2, sslCtx);\n+        server.addHandler(new Handler(), REQ_PATH);\n+        server.start();\n+        System.out.println(\"Server started at \" + server.getAddress());\n+        REQ_URI_BASE = URIBuilder.newBuilder().scheme(\"https\")\n+                .loopback()\n+                .port(server.getAddress().getPort())\n+                .path(REQ_PATH)\n+                .build().toString();\n+    }\n+\n+    @AfterAll\n+    static void afterAll() {\n+        if (server != null) {\n+            System.out.println(\"Stopping server at \" + server.getAddress());\n+            server.stop();\n+        }\n+    }\n+\n+    \/**\n+     * Verifies that when several requests are sent using send() and the server\n+     * connection is configured to send a GOAWAY after processing only a few requests, then\n+     * the remaining requests are retried on a different connection\n+     *\/\n+    @Test\n+    public void testSequential() throws Exception {\n+        final LimitedPerConnRequestApprover reqApprover = new LimitedPerConnRequestApprover();\n+        server.setRequestApprover(reqApprover::allowNewRequest);\n+        try (final HttpClient client = HttpClient.newBuilder().version(HTTP_2)\n+                .sslContext(sslCtx).build()) {\n+            final String[] reqMethods = {\"HEAD\", \"GET\", \"POST\"};\n+            for (final String reqMethod : reqMethods) {\n+                final int numReqs = LimitedPerConnRequestApprover.MAX_REQS_PER_CONN + 3;\n+                final Set<String> connectionKeys = new LinkedHashSet<>();\n+                for (int i = 1; i <= numReqs; i++) {\n+                    final URI reqURI = new URI(REQ_URI_BASE + \"?seq&\" + reqMethod + \"=\" + i);\n+                    final HttpRequest req = HttpRequest.newBuilder()\n+                            .uri(reqURI)\n+                            .method(reqMethod, HttpRequest.BodyPublishers.noBody())\n+                            .build();\n+                    System.out.println(\"initiating request \" + req);\n+                    final HttpResponse<String> resp = client.send(req, BodyHandlers.ofString());\n+                    final String respBody = resp.body();\n+                    System.out.println(\"received response: \" + respBody);\n+                    assertEquals(200, resp.statusCode(),\n+                            \"unexpected status code for request \" + resp.request());\n+                    \/\/ response body is the logical key of the connection on which the\n+                    \/\/ request was handled\n+                    connectionKeys.add(respBody);\n+                }\n+                System.out.println(\"connections involved in handling the requests: \"\n+                        + connectionKeys);\n+                \/\/ all requests have finished, we now just do a basic check that\n+                \/\/ more than one connection was involved in processing these requests\n+                assertEquals(2, connectionKeys.size(),\n+                        \"unexpected number of connections \" + connectionKeys);\n+            }\n+        } finally {\n+            server.setRequestApprover(null); \/\/ reset\n+        }\n+    }\n+\n+    \/**\n+     * Verifies that when a server responds with a GOAWAY and then never processes the new retried\n+     * requests on a new connection too, then the application code receives the request failure.\n+     * This tests the send() API of the HttpClient.\n+     *\/\n+    @Test\n+    public void testUnprocessedRaisesException() throws Exception {\n+        try (final HttpClient client = HttpClient.newBuilder().version(HTTP_2)\n+                .sslContext(sslCtx).build()) {\n+            final Random random = new Random();\n+            final String[] reqMethods = {\"HEAD\", \"GET\", \"POST\"};\n+            for (final String reqMethod : reqMethods) {\n+                final int maxAllowedReqs = 2;\n+                final int numReqs = maxAllowedReqs + 3; \/\/ 3 more requests than max allowed\n+                \/\/ configure the approver\n+                final LimitedRequestApprover reqApprover = new LimitedRequestApprover(maxAllowedReqs);\n+                server.setRequestApprover(reqApprover::allowNewRequest);\n+                try {\n+                    int numSuccess = 0;\n+                    int numFailed = 0;\n+                    for (int i = 1; i <= numReqs; i++) {\n+                        final String reqQueryPart = \"?sync&\" + reqMethod + \"=\" + i;\n+                        final URI reqURI = new URI(REQ_URI_BASE + reqQueryPart);\n+                        final HttpRequest req = HttpRequest.newBuilder()\n+                                .uri(reqURI)\n+                                .method(reqMethod, HttpRequest.BodyPublishers.noBody())\n+                                .build();\n+                        System.out.println(\"initiating request \" + req);\n+                        if (i <= maxAllowedReqs) {\n+                            \/\/ expected to successfully complete\n+                            numSuccess++;\n+                            final HttpResponse<String> resp = client.send(req, BodyHandlers.ofString());\n+                            final String respBody = resp.body();\n+                            System.out.println(\"received response: \" + respBody);\n+                            assertEquals(200, resp.statusCode(),\n+                                    \"unexpected status code for request \" + resp.request());\n+                        } else {\n+                            \/\/ expected to fail as unprocessed\n+                            try {\n+                                final HttpResponse<String> resp = client.send(req, BodyHandlers.ofString());\n+                                fail(\"Request was expected to fail as unprocessed,\"\n+                                        + \" but got response: \" + resp.body() + \", status code: \"\n+                                        + resp.statusCode());\n+                            } catch (IOException ioe) {\n+                                \/\/ verify it failed for the right reason\n+                                if (ioe.getMessage() == null\n+                                        || !ioe.getMessage().contains(\"request not processed by peer\")) {\n+                                    \/\/ propagate the original failure\n+                                    throw ioe;\n+                                }\n+                                numFailed++; \/\/ failed due to right reason\n+                                System.out.println(\"received expected failure: \" + ioe\n+                                        + \", for request \" + reqURI);\n+                            }\n+                        }\n+                    }\n+                    \/\/ verify the correct number of requests succeeded\/failed\n+                    assertEquals(maxAllowedReqs, numSuccess, \"unexpected number of requests succeeded\");\n+                    assertEquals((numReqs - maxAllowedReqs), numFailed, \"unexpected number of requests failed\");\n+                } finally {\n+                    server.setRequestApprover(null); \/\/ reset\n+                }\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Verifies that when a server responds with a GOAWAY and then never processes the new retried\n+     * requests on a new connection too, then the application code receives the request failure.\n+     * This tests the sendAsync() API of the HttpClient.\n+     *\/\n+    @Test\n+    public void testUnprocessedRaisesExceptionAsync() throws Throwable {\n+        try (final HttpClient client = HttpClient.newBuilder().version(HTTP_2)\n+                .sslContext(sslCtx).build()) {\n+            final Random random = new Random();\n+            final String[] reqMethods = {\"HEAD\", \"GET\", \"POST\"};\n+            for (final String reqMethod : reqMethods) {\n+                final int maxAllowedReqs = 2;\n+                final int numReqs = maxAllowedReqs + 3; \/\/ 3 more requests than max allowed\n+                \/\/ configure the approver\n+                final LimitedRequestApprover reqApprover = new LimitedRequestApprover(maxAllowedReqs);\n+                server.setRequestApprover(reqApprover::allowNewRequest);\n+                try {\n+                    final List<Future<HttpResponse<String>>> futures = new ArrayList<>();\n+                    for (int i = 1; i <= numReqs; i++) {\n+                        final URI reqURI = new URI(REQ_URI_BASE + \"?async&\" + reqMethod + \"=\" + i);\n+                        final HttpRequest req = HttpRequest.newBuilder()\n+                                .uri(reqURI)\n+                                .method(reqMethod, HttpRequest.BodyPublishers.noBody())\n+                                .build();\n+                        System.out.println(\"initiating request \" + req);\n+                        final Future<HttpResponse<String>> f = client.sendAsync(req, BodyHandlers.ofString());\n+                        futures.add(f);\n+                    }\n+                    \/\/ wait for responses\n+                    int numFailed = 0;\n+                    int numSuccess = 0;\n+                    for (int i = 1; i <= numReqs; i++) {\n+                        final String reqQueryPart = \"?async&\" + reqMethod + \"=\" + i;\n+                        try {\n+                            System.out.println(\"waiting response of request \"\n+                                    + REQ_URI_BASE + reqQueryPart);\n+                            final HttpResponse<String> resp = futures.get(i - 1).get();\n+                            numSuccess++;\n+                            final String respBody = resp.body();\n+                            System.out.println(\"request: \" + resp.request()\n+                                    + \", received response: \" + respBody);\n+                            assertEquals(200, resp.statusCode(),\n+                                    \"unexpected status code for request \" + resp.request());\n+                        } catch (ExecutionException ee) {\n+                            final Throwable cause = ee.getCause();\n+                            if (!(cause instanceof IOException ioe)) {\n+                                throw cause;\n+                            }\n+                            \/\/ verify it failed for the right reason\n+                            if (ioe.getMessage() == null\n+                                    || !ioe.getMessage().contains(\"request not processed by peer\")) {\n+                                \/\/ propagate the original failure\n+                                throw ioe;\n+                            }\n+                            numFailed++; \/\/ failed due to the right reason\n+                            System.out.println(\"received expected failure: \" + ioe\n+                                    + \", for request \" + REQ_URI_BASE + reqQueryPart);\n+                        }\n+                    }\n+                    \/\/ verify the correct number of requests succeeded\/failed\n+                    assertEquals(maxAllowedReqs, numSuccess, \"unexpected number of requests succeeded\");\n+                    assertEquals((numReqs - maxAllowedReqs), numFailed, \"unexpected number of requests failed\");\n+                } finally {\n+                    server.setRequestApprover(null); \/\/ reset\n+                }\n+            }\n+        }\n+    }\n+\n+    \/\/ only allows fixed number of requests, irrespective of which server connection handles\n+    \/\/ it. requests that are rejected will either be sent a GOAWAY on the connection\n+    \/\/ or a RST_FRAME with a REFUSED_STREAM on the stream\n+    private static final class LimitedRequestApprover {\n+        private final int maxAllowedReqs;\n+        private final AtomicInteger numApproved = new AtomicInteger();\n+\n+        private LimitedRequestApprover(final int maxAllowedReqs) {\n+            this.maxAllowedReqs = maxAllowedReqs;\n+        }\n+\n+        public boolean allowNewRequest(final String serverConnKey) {\n+            final int approved = numApproved.incrementAndGet();\n+            return approved <= maxAllowedReqs;\n+        }\n+    }\n+\n+    \/\/ allows a certain number of requests per server connection.\n+    \/\/ requests that are rejected will either be sent a GOAWAY on the connection\n+    \/\/ or a RST_FRAME with a REFUSED_STREAM on the stream\n+    private static final class LimitedPerConnRequestApprover {\n+        private static final int MAX_REQS_PER_CONN = 6;\n+        private final Map<String, AtomicInteger> numApproved =\n+                new ConcurrentHashMap<>();\n+        private final Map<String, AtomicInteger> numDisapproved =\n+                new ConcurrentHashMap<>();\n+\n+        public boolean allowNewRequest(final String serverConnKey) {\n+            final AtomicInteger approved = numApproved.computeIfAbsent(serverConnKey,\n+                    (k) -> new AtomicInteger());\n+            int curr = approved.get();\n+            while (curr < MAX_REQS_PER_CONN) {\n+                if (approved.compareAndSet(curr, curr + 1)) {\n+                    return true; \/\/ new request allowed\n+                }\n+                curr = approved.get();\n+            }\n+            final AtomicInteger disapproved = numDisapproved.computeIfAbsent(serverConnKey,\n+                    (k) -> new AtomicInteger());\n+            final int numUnprocessed = disapproved.incrementAndGet();\n+            System.out.println(approved.get() + \" processed, \"\n+                    + numUnprocessed + \" unprocessed requests on connection \" + serverConnKey);\n+            return false;\n+        }\n+    }\n+\n+    private static final class Handler implements HttpTestHandler {\n+\n+        @Override\n+        public void handle(final HttpTestExchange exchange) throws IOException {\n+            final String connectionKey = exchange.getConnectionKey();\n+            System.out.println(\"responding to request: \" + exchange.getRequestURI()\n+                    + \" on connection \" + connectionKey);\n+            final byte[] response = connectionKey.getBytes(UTF_8);\n+            exchange.sendResponseHeaders(200, response.length);\n+            try (final OutputStream os = exchange.getResponseBody()) {\n+                os.write(response);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/H2GoAwayTest.java","additions":336,"deletions":0,"binary":false,"changes":336,"status":"added"},{"patch":"@@ -61,0 +61,1 @@\n+import java.util.function.Predicate;\n@@ -242,0 +243,1 @@\n+        public abstract String getConnectionKey();\n@@ -256,1 +258,1 @@\n-            return new Http2TestExchangeImpl(exchange);\n+            return new H2ExchangeImpl(exchange);\n@@ -309,0 +311,6 @@\n+\n+            @Override\n+            public String getConnectionKey() {\n+                return exchange.getLocalAddress() + \"->\" + exchange.getRemoteAddress();\n+            }\n+\n@@ -315,1 +323,1 @@\n-        private static final class Http2TestExchangeImpl extends HttpTestExchange {\n+        private static final class H2ExchangeImpl extends HttpTestExchange {\n@@ -317,1 +325,1 @@\n-            Http2TestExchangeImpl(Http2TestExchange exch) {\n+            H2ExchangeImpl(Http2TestExchange exch) {\n@@ -366,0 +374,5 @@\n+            @Override\n+            public String getConnectionKey() {\n+                return exchange.getConnectionKey();\n+            }\n+\n@@ -711,0 +724,1 @@\n+        public abstract void setRequestApprover(final Predicate<String> approver);\n@@ -859,0 +873,5 @@\n+\n+            @Override\n+            public void setRequestApprover(final Predicate<String> approver) {\n+                throw new UnsupportedOperationException(\"not supported\");\n+            }\n@@ -910,0 +929,5 @@\n+\n+            @Override\n+            public void setRequestApprover(final Predicate<String> approver) {\n+                this.impl.setRequestApprover(approver);\n+            }\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/common\/HttpServerAdapters.java","additions":27,"deletions":3,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,0 +74,6 @@\n+\n+    \/**\n+     * {@return the identification of the connection on which this exchange is being\n+     * processed}\n+     *\/\n+    String getConnectionKey();\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestExchange.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -223,0 +223,5 @@\n+    @Override\n+    public String getConnectionKey() {\n+        return conn.connectionKey();\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestExchangeImpl.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+import java.util.function.Predicate;\n+\n@@ -62,0 +64,2 @@\n+    \/\/ request approver which takes the server connection key as the input\n+    private volatile Predicate<String> newRequestApprover;\n@@ -288,0 +292,8 @@\n+    public void setRequestApprover(final Predicate<String> approver) {\n+        this.newRequestApprover = approver;\n+    }\n+\n+    Predicate<String> getRequestApprover() {\n+        return this.newRequestApprover;\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestServer.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,0 +78,1 @@\n+import java.util.Set;\n@@ -81,0 +82,2 @@\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.BiPredicate;\n@@ -82,0 +85,1 @@\n+import java.util.function.Predicate;\n@@ -85,0 +89,1 @@\n+import static jdk.internal.net.http.frame.ErrorFrame.REFUSED_STREAM;\n@@ -113,0 +118,4 @@\n+    \/\/ the max stream id of a processed H2 request. -1 implies none were processed.\n+    private final AtomicInteger maxProcessedRequestStreamId = new AtomicInteger(-1);\n+    \/\/ the stream id that was sent in a GOAWAY frame. -1 implies no GOAWAY frame was sent.\n+    private final AtomicInteger goAwayRequestStreamId = new AtomicInteger(-1);\n@@ -237,5 +246,23 @@\n-    void goAway(int error) throws IOException {\n-        int laststream = nextstream >= 3 ? nextstream - 2 : 1;\n-\n-        GoAwayFrame go = new GoAwayFrame(laststream, error);\n-        outputQ.put(go);\n+    private void sendGoAway(final int error) throws IOException {\n+        int maxProcessedStreamId = maxProcessedRequestStreamId.get();\n+        if (maxProcessedStreamId == -1) {\n+            maxProcessedStreamId = 0;\n+        }\n+        boolean send = false;\n+        int currentGoAwayReqStrmId = goAwayRequestStreamId.get();\n+        \/\/ update the last processed stream id and send a goaway frame if the new last processed\n+        \/\/ stream id is lesser than the last processed stream id sent in\n+        \/\/ a previous goaway frame (if any)\n+        while (currentGoAwayReqStrmId == -1 || maxProcessedStreamId < currentGoAwayReqStrmId) {\n+            if (goAwayRequestStreamId.compareAndSet(currentGoAwayReqStrmId, maxProcessedStreamId)) {\n+                send = true;\n+                break;\n+            }\n+            currentGoAwayReqStrmId = goAwayRequestStreamId.get();\n+        }\n+        if (!send) {\n+            return;\n+        }\n+        final GoAwayFrame frame = new GoAwayFrame(maxProcessedStreamId, error);\n+        outputQ.put(frame);\n+        System.err.println(\"Sending GOAWAY frame \" + frame + \" from server connection \" + this);\n@@ -334,2 +361,3 @@\n-            if (error != -1)\n-                goAway(error);\n+            if (error != -1) {\n+                sendGoAway(error);\n+            }\n@@ -615,0 +643,8 @@\n+        \/\/ skip processing the request if configured to do so\n+        final String connKey = connectionKey();\n+        if (!shouldProcessNewHTTPRequest(connKey)) {\n+            System.err.println(\"Rejecting primordial stream 1 and sending GOAWAY\" +\n+                    \" on server connection \" + connKey + \", for request: \" + path);\n+            sendGoAway(ErrorFrame.NO_ERROR);\n+            return;\n+        }\n@@ -623,0 +659,1 @@\n+        maxProcessedRequestStreamId.set(1);\n@@ -628,0 +665,12 @@\n+    private boolean shouldProcessNewHTTPRequest(final String serverConnKey) {\n+        final Predicate<String> approver = this.server.getRequestApprover();\n+        if (approver == null) {\n+            return true; \/\/ process the request\n+        }\n+        return approver.test(serverConnKey);\n+    }\n+\n+    final String connectionKey() {\n+        return this.server.getAddress() + \"->\" + this.socket.getRemoteSocketAddress();\n+    }\n+\n@@ -635,1 +684,1 @@\n-            throw new IOException(\"unexpected stream id\");\n+            throw new IOException(\"unexpected stream id: \" + streamid);\n@@ -666,1 +715,1 @@\n-        if (disallowedHeader.isPresent())\n+        if (disallowedHeader.isPresent()) {\n@@ -668,0 +717,1 @@\n+        }\n@@ -669,1 +719,10 @@\n-\n+        \/\/ skip processing the request if the server is configured to do so\n+        final String connKey = connectionKey();\n+        final String path = headers.firstValue(\":path\").orElse(\"\");\n+        if (!shouldProcessNewHTTPRequest(connKey)) {\n+            System.err.println(\"Rejecting stream \" + streamid\n+                    + \" and sending GOAWAY on server connection \"\n+                    + connKey + \", for request: \" + path);\n+            sendGoAway(ErrorFrame.NO_ERROR);\n+            return;\n+        }\n@@ -672,0 +731,8 @@\n+        \/\/ keep track of the largest request id that we have processed\n+        int currentLargest = maxProcessedRequestStreamId.get();\n+        while (streamid > currentLargest) {\n+            if (maxProcessedRequestStreamId.compareAndSet(currentLargest, streamid)) {\n+                break;\n+            }\n+            currentLargest = maxProcessedRequestStreamId.get();\n+        }\n@@ -766,0 +833,2 @@\n+                    System.err.println(\"EOF reached on connection \" + connectionKey()\n+                            + \", will no longer accept incoming frames\");\n@@ -789,0 +858,11 @@\n+                            final int streamId = frame.streamid();\n+                            final int finalProcessedStreamId = goAwayRequestStreamId.get();\n+                            \/\/ if we already sent a goaway, then don't create new streams with\n+                            \/\/ higher stream ids.\n+                            if (finalProcessedStreamId != -1 && streamId > finalProcessedStreamId) {\n+                                System.err.println(connectionKey() + \" resetting stream \" + streamId\n+                                        + \" as REFUSED_STREAM\");\n+                                final ResetFrame rst = new ResetFrame(streamId, REFUSED_STREAM);\n+                                outputQ.put(rst);\n+                                continue;\n+                            }\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestServerConnection.java","additions":91,"deletions":11,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -0,0 +1,182 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8337681\n+ * @summary Test that raster use optimization does not cause any regressions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Graphics2D;\n+import java.awt.geom.AffineTransform;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.RenderedImage;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import javax.imageio.IIOImage;\n+import javax.imageio.ImageIO;\n+import javax.imageio.ImageReader;\n+import javax.imageio.ImageWriteParam;\n+import javax.imageio.ImageWriter;\n+import javax.imageio.stream.ImageInputStream;\n+import javax.imageio.stream.ImageOutputStream;\n+import javax.imageio.stream.MemoryCacheImageOutputStream;\n+\n+public class RasterReuseWriteTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        test(BufferedImage.TYPE_INT_RGB);\n+        test(BufferedImage.TYPE_INT_ARGB);\n+        test(BufferedImage.TYPE_INT_ARGB_PRE);\n+        test(BufferedImage.TYPE_4BYTE_ABGR);\n+        test(BufferedImage.TYPE_4BYTE_ABGR_PRE);\n+    }\n+\n+    private static void test(int type) throws Exception {\n+\n+        \/\/ swaps blue and red\n+        int bands = (type == BufferedImage.TYPE_INT_RGB ? 3 : 4);\n+        int[] sourceBands = bands == 3 ? new int[] { 2, 1, 0 } :\n+                                         new int[] { 2, 1, 0, 3 };\n+\n+        \/\/ test writing a BufferedImage without source bands\n+        BufferedImage img1 = createImage(256, 256, type);\n+        byte[] bytes1 = writePng(img1, null);\n+        BufferedImage img2 = ImageIO.read(new ByteArrayInputStream(bytes1));\n+        compare(img1, img2, false);\n+\n+        \/\/ test writing a BufferedImage with source bands\n+        BufferedImage img3 = createImage(256, 256, type);\n+        byte[] bytes3 = writePng(img3, sourceBands);\n+        BufferedImage img4 = ImageIO.read(new ByteArrayInputStream(bytes3));\n+        compare(img3, img4, true);\n+\n+        \/\/ test writing a non-BufferedImage with source bands and one tile\n+        RenderedImage img5 = toTiledImage(img1, 256);\n+        byte[] bytes5 = writePng(img5, sourceBands);\n+        BufferedImage img6 = ImageIO.read(new ByteArrayInputStream(bytes5));\n+        compare(img5, img6, true);\n+\n+        \/\/ test writing a non-BufferedImage with source bands and multiple tiles\n+        RenderedImage img7 = toTiledImage(img1, 128);\n+        byte[] bytes7 = writePng(img7, sourceBands);\n+        BufferedImage img8 = ImageIO.read(new ByteArrayInputStream(bytes7));\n+        compare(img7, img8, true);\n+    }\n+\n+    private static BufferedImage createImage(int w, int h, int type) throws Exception {\n+        BufferedImage img = new BufferedImage(w, h, type);\n+        Graphics2D g2d = img.createGraphics();\n+        g2d.setColor(Color.WHITE);\n+        g2d.fillRect(0, 0, w, h);\n+        g2d.setColor(Color.GREEN);\n+        g2d.drawRect(20, 20, 100, 50);\n+        g2d.setColor(Color.RED);\n+        g2d.drawRect(80, 10, 100, 40);\n+        g2d.setColor(Color.BLUE);\n+        g2d.fillRect(40, 60, 120, 30);\n+        g2d.dispose();\n+        return img;\n+    }\n+\n+    private static byte[] writePng(RenderedImage img, int[] sourceBands) throws Exception {\n+        ImageWriter writer = ImageIO.getImageWritersByFormatName(\"png\").next();\n+        ImageWriteParam param = writer.getDefaultWriteParam();\n+        param.setSourceBands(sourceBands);\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        ImageOutputStream stream = new MemoryCacheImageOutputStream(baos);\n+        writer.setOutput(stream);\n+        writer.write(null, new IIOImage(img, null, null), param);\n+        writer.dispose();\n+        stream.flush();\n+        return baos.toByteArray();\n+    }\n+\n+    private static void compare(RenderedImage img1, RenderedImage img2, boolean blueAndRedSwapped) {\n+        int[] pixels1 = getRgbPixels(img1);\n+        int[] pixels2 = getRgbPixels(img2);\n+        for (int i = 0; i < pixels1.length; i++) {\n+            int expected;\n+            if (blueAndRedSwapped && pixels1[i] == 0xFFFF0000) {\n+                expected = 0xFF0000FF; \/\/ red -> blue\n+            } else if (blueAndRedSwapped && pixels1[i] == 0xFF0000FF) {\n+                expected = 0xFFFF0000; \/\/ blue -> red\n+            } else {\n+                expected = pixels1[i]; \/\/ no change\n+            }\n+            int actual = pixels2[i];\n+            if (actual != expected) {\n+                throw new RuntimeException(\"Pixel \" + i + \": expected \" +\n+                    Integer.toHexString(expected) + \", but got \" +\n+                    Integer.toHexString(actual));\n+            }\n+        }\n+    }\n+\n+    private static int[] getRgbPixels(RenderedImage img) {\n+        int w = img.getWidth();\n+        int h = img.getHeight();\n+        if (img instanceof BufferedImage bi) {\n+            return bi.getRGB(0, 0, w, h, null, 0, w);\n+        } else {\n+            BufferedImage bi = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);\n+            Graphics2D g2d = bi.createGraphics();\n+            g2d.drawRenderedImage(img, new AffineTransform());\n+            g2d.dispose();\n+            return bi.getRGB(0, 0, w, h, null, 0, w);\n+        }\n+    }\n+\n+    private static RenderedImage toTiledImage(BufferedImage img, int tileSize) throws Exception {\n+\n+        \/\/ write to TIFF\n+        ImageWriter writer = ImageIO.getImageWritersByFormatName(\"tiff\").next();\n+        ImageWriteParam param = writer.getDefaultWriteParam();\n+        param.setTilingMode(ImageWriteParam.MODE_EXPLICIT);\n+        param.setTiling(tileSize, tileSize, 0, 0);\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        ImageOutputStream stream = new MemoryCacheImageOutputStream(baos);\n+        writer.setOutput(stream);\n+        writer.write(null, new IIOImage(img, null, null), param);\n+        writer.dispose();\n+        stream.flush();\n+        byte[] bytes = baos.toByteArray();\n+\n+        \/\/ read from TIFF\n+        ImageReader reader = ImageIO.getImageReadersByFormatName(\"tiff\").next();\n+        ImageInputStream input = ImageIO.createImageInputStream(new ByteArrayInputStream(bytes));\n+        reader.setInput(input);\n+        RenderedImage ri = reader.readAsRenderedImage(0, null);\n+        if (ri instanceof BufferedImage) {\n+            throw new RuntimeException(\"Unexpected BufferedImage\");\n+        }\n+        int tw = ri.getTileWidth();\n+        int th = ri.getTileHeight();\n+        if (tw != tileSize || th != tileSize) {\n+            throw new RuntimeException(\"Expected tile size \" + tileSize +\n+                \", but found \" + tw + \"x\" + th);\n+        }\n+        return ri;\n+    }\n+}\n","filename":"test\/jdk\/javax\/imageio\/plugins\/png\/RasterReuseWriteTest.java","additions":182,"deletions":0,"binary":false,"changes":182,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-  @run main\/othervm -Djdk.gtk.version=2 DemandGTK\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/8145547\/DemandGTK.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,91 +0,0 @@\n-#!\/bin\/ksh -p\n-\n-#\n-# Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#   @test\n-#   @summary  Try to force GTK2. We must bail out to GTK3 (if any) if no 2 available.\n-#\n-#   @key headful\n-#   @bug 8156128 8212903\n-#   @compile ProvokeGTK.java\n-#   @requires os.family == \"linux\"\n-#   @run shell\/timeout=400 DemandGTK2.sh\n-\n-#\n-# Note that we depend on\n-# strace in the PATH\n-# \/sbin\/ldconfig (which may be not in PATH)\n-# It is true for OEL 7 and Ubuntu 14, 16\n-# but may fail in future. Save tomorrow for tomorrow.\n-#\n-# Read DemandGTK2.txt how to prepare GTK2-less machine.\n-#\n-\n-which strace\n-if [ $?  -ne 0 ]\n-then\n-    echo \"Please provide strace: \\\"which strace\\\" failed.\"\n-    exit 1\n-fi\n-\n-HAVE_2=`\/sbin\/ldconfig -v 2>\/dev\/null | grep libgtk-x11-2 | wc -l`\n-HAVE_3=`\/sbin\/ldconfig -v 2>\/dev\/null | grep libgtk-3.so | wc -l`\n-\n-\n-if [ \"${HAVE_2}\" = \"0\" ]\n-then\n-    \n-    if [ \"${HAVE_3}\" = \"0\" ]\n-    then\n-        echo \"Neither GTK2 nor GTK3 found: system misconfiguration. Exit.\"\n-        exit 1\n-    fi\n-    echo \"No GTK 2 library found: we should bail out to 3\"\n-    strace -o strace.log -fe open,openat ${TESTJAVA}\/bin\/java  -cp ${TESTCLASSPATH}  -Djdk.gtk.version=2 ProvokeGTK\n-    EXECRES=$?\n-    grep  'libgtk-3.*=\\ *[0-9]*$' strace.log > logg\n-else\n-    echo \"There is GTK 2 library: we should use it\"\n-    strace -o strace.log -fe open,openat ${TESTJAVA}\/bin\/java  -cp ${TESTCLASSPATH}  -Djdk.gtk.version=2 ProvokeGTK\n-    EXECRES=$?\n-    grep  'libgtk-x11.*=\\ *[0-9]*$' strace.log > logg\n-fi\n-\n-if [ ${EXECRES}  -ne 0 ]\n-then\n-    echo \"java execution failed for unknown reason, see logs\"\n-    exit 2\n-fi\n-\n-cat logg\n-if [ -s logg ]\n-then\n-    echo \"Success.\"\n-    exit 0\n-else\n-    echo \"Failed. Examine logs.\"\n-    exit 3\n-fi\n-\n-\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/8145547\/DemandGTK2.sh","additions":0,"deletions":91,"binary":false,"changes":91,"status":"deleted"},{"patch":"@@ -1,36 +0,0 @@\n-How to prepare an Ubuntu machine for GTK-2-less test run.\n-\n-The test DemandGTK2.sh should work well without GTK-2 switching to version 3\n-if there's no GTK-2 library available. \n-At the moment, it's not easy to find a system with GTK-3 and without GTK-2:\n-many programs still depend on version 2.\n-We can, however, rename GTK-2 library for a single test run and then restore\n-it back.\n-\n-(1) Find GTK2 library: run\n-  \/sbin\/ldconfig -v 2>\/dev\/null |  grep libgtk-x11-2\n-\n-It will output one or two lines like \n-libgtk-x11-2.0.so.0 -> libgtk-x11-2.0.so.0.2400.23\n-Search for the target of that symlink for instance with locate:\n-locate libgtk-x11-2.0.so.0.2400.23\n-Finally, you'll find the libraries. On my current machine they are\n-\/usr\/lib\/i386-linux-gnu\/libgtk-x11-2.0.so.0.2400.23\n-\/usr\/lib\/x86_64-linux-gnu\/libgtk-x11-2.0.so.0.2400.23\n-\n-I'm running 64-bit JDK and need to tamper with x86_64 copy only.\n-\n-(2) Find running programs depending on this library. They probably would crash\n-if you rename it. Stop them for this test run.\n-That said, I'm afraid it would be impossible to do on a system older than Ubuntu 16.04.\n-On my Ubuntu 16.04 I have only hud-service using this library, and that's OK, it will restart\n-after a crash, if any.\n-To find these programs, run\n-lsof \/usr\/lib\/x86_64-linux-gnu\/libgtk-x11-2.0.so.0.2400.23\n-\n-(3) Now,\n-sudo mv  \/usr\/lib\/x86_64-linux-gnu\/libgtk-x11-2.0.so.0.2400.23  \/usr\/lib\/x86_64-linux-gnu\/bak.libgtk-x11-2.0.so.0.2400.23\n-jtreg DemandGTK2.sh \n-sudo mv  \/usr\/lib\/x86_64-linux-gnu\/bak.libgtk-x11-2.0.so.0.2400.23  \/usr\/lib\/x86_64-linux-gnu\/libgtk-x11-2.0.so.0.2400.23\n-\n-Needless to say, you should substitute your own library path and however you run jtreg.\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/8145547\/DemandGTK2.txt","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -4,1 +4,1 @@\n-# Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#   @summary  Try to force GTK3. We must bail out to GTK2 if no 3 available.\n+#   @summary  Try to force GTK3.\n@@ -56,5 +56,2 @@\n-    \n-    echo \"No GTK 3 library found: we should bail out to 2\"\n-    strace -o strace.log -fe open,openat ${TESTJAVA}\/bin\/java  -cp ${TESTCLASSPATH}  -Djdk.gtk.version=3 ProvokeGTK\n-    EXECRES=$?\n-    grep  'libgtk-x11.*=\\ *[0-9]*$' strace.log > logg\n+    echo \"No GTK 3 library found, do nothing\"\n+    exit 0\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/8145547\/DemandGTK3.sh","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+\n+import java.lang.constant.ConstantDesc;\n@@ -42,0 +44,2 @@\n+import java.util.stream.Stream;\n+\n@@ -56,1 +60,2 @@\n-    private static Map<String, Object> constants\n+    \/\/ name -> (value, poolValue)\n+    private static final Map<String, Map.Entry<Object, ConstantDesc>> constants\n@@ -58,12 +63,9 @@\n-            new AbstractMap.SimpleImmutableEntry<>(\"i\", 1),\n-            new AbstractMap.SimpleImmutableEntry<>(\"j\", 1L),\n-            new AbstractMap.SimpleImmutableEntry<>(\"s\", 1),\n-            new AbstractMap.SimpleImmutableEntry<>(\"b\", 1),\n-            new AbstractMap.SimpleImmutableEntry<>(\"f\", 1.0f),\n-            new AbstractMap.SimpleImmutableEntry<>(\"d\", 1.0d),\n-            new AbstractMap.SimpleImmutableEntry<>(\"z\", 1),\n-            new AbstractMap.SimpleImmutableEntry<>(\"c\", (int) '1'),\n-            new AbstractMap.SimpleImmutableEntry<>(\"st\", \"1\"),\n-            new AbstractMap.SimpleImmutableEntry<>(\"cl\", ClassDesc.of(\"foo.Bar\")),\n-            new AbstractMap.SimpleImmutableEntry<>(\"en\", E.C),\n-            new AbstractMap.SimpleImmutableEntry<>(\"arr\", new Object[] {1, \"1\", 1.0f})\n+            Map.entry(\"i\", Map.entry(1, 1)),\n+            Map.entry(\"j\", Map.entry(1L, 1L)),\n+            Map.entry(\"s\", Map.entry((short) 1, 1)),\n+            Map.entry(\"b\", Map.entry((byte) 1, 1)),\n+            Map.entry(\"f\", Map.entry(1.0f, 1.0f)),\n+            Map.entry(\"d\", Map.entry(1.0d, 1.0d)),\n+            Map.entry(\"z\", Map.entry(true, 1)),\n+            Map.entry(\"c\", Map.entry('1', (int) '1')),\n+            Map.entry(\"st\", Map.entry(\"1\", \"1\"))\n@@ -72,1 +74,1 @@\n-    private static final List<AnnotationElement> constantElements =\n+    private static final List<AnnotationElement> constantElements = Stream.concat(\n@@ -74,2 +76,8 @@\n-                    .map(e -> AnnotationElement.of(e.getKey(), AnnotationValue.of(e.getValue())))\n-                    .toList();\n+                    .map(e -> Map.entry(e.getKey(), e.getValue().getKey())),\n+            Stream.of(\n+                    Map.entry(\"cl\", ClassDesc.of(\"foo.Bar\")),\n+                    Map.entry(\"en\", E.C),\n+                    Map.entry(\"arr\", new Object[] {1, \"1\", 1.0f})\n+            ))\n+            .map(e -> AnnotationElement.of(e.getKey(), AnnotationValue.of(e.getValue())))\n+            .toList();\n@@ -91,3 +99,6 @@\n-                    assertTrue (evp.value() instanceof AnnotationValue.OfConstant c);\n-                    assertEquals(((AnnotationValue.OfConstant) evp.value()).constantValue(),\n-                                 constants.get(evp.name().stringValue()));\n+                    if (!(evp.value() instanceof AnnotationValue.OfConstant c))\n+                        return fail();\n+                    assertEquals(c.resolvedValue(),\n+                                 constants.get(evp.name().stringValue()).getKey());\n+                    assertEquals(c.constant().constantValue(),\n+                                 constants.get(evp.name().stringValue()).getValue());\n@@ -108,2 +119,3 @@\n-                    assertTrue (evp.value() instanceof AnnotationValue.OfArray);\n-                    List<AnnotationValue> values = ((AnnotationValue.OfArray) evp.value()).values();\n+                    if (!(evp.value() instanceof AnnotationValue.OfArray arr))\n+                        return fail();\n+                    List<AnnotationValue> values = arr.values();\n","filename":"test\/jdk\/jdk\/classfile\/AnnotationTest.java","additions":33,"deletions":21,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @bug 8335927\n@@ -252,1 +253,1 @@\n-                        annotation default: {array: [{boolean: true}, {byte: 12}, {char: 99}, {class: LPhee;}, {double: 1.3}, {enum class: LBoo;, constant name: BOO}, {float: 3.7}, {int: 33}, {long: 3333}, {short: 25}, {string: BOO}, {annotation class: LPhoo;}]}\n+                        annotation default: {array: [{boolean: true}, {byte: 12}, {char: c}, {class: LPhee;}, {double: 1.3}, {enum class: LBoo;, constant name: BOO}, {float: 3.7}, {int: 33}, {long: 3333}, {short: 25}, {string: BOO}, {annotation class: LPhoo;}]}\n@@ -503,1 +504,1 @@\n-                            \"annotation default\": {\"array\": [{\"boolean\": \"true\"}, {\"byte\": \"12\"}, {\"char\": \"99\"}, {\"class\": \"LPhee;\"}, {\"double\": \"1.3\"}, {\"enum class\": \"LBoo;\", \"constant name\": \"BOO\"}, {\"float\": \"3.7\"}, {\"int\": \"33\"}, {\"long\": \"3333\"}, {\"short\": \"25\"}, {\"string\": \"BOO\"}, {\"annotation class\": \"LPhoo;\"}]},\n+                            \"annotation default\": {\"array\": [{\"boolean\": \"true\"}, {\"byte\": \"12\"}, {\"char\": \"c\"}, {\"class\": \"LPhee;\"}, {\"double\": \"1.3\"}, {\"enum class\": \"LBoo;\", \"constant name\": \"BOO\"}, {\"float\": \"3.7\"}, {\"int\": \"33\"}, {\"long\": \"3333\"}, {\"short\": \"25\"}, {\"string\": \"BOO\"}, {\"annotation class\": \"LPhoo;\"}]},\n@@ -759,1 +760,1 @@\n-                            <annotation_default><array><value><boolean>true<\/boolean><\/value><value><byte>12<\/byte><\/value><value><char>99<\/char><\/value><value><class>LPhee;<\/class><\/value><value><double>1.3<\/double><\/value><value><enum_class>LBoo;<\/enum_class><constant_name>BOO<\/constant_name><\/value><value><float>3.7<\/float><\/value><value><int>33<\/int><\/value><value><long>3333<\/long><\/value><value><short>25<\/short><\/value><value><string>BOO<\/string><\/value><value><annotation_class>LPhoo;<\/annotation_class><\/value><\/array><\/annotation_default>\n+                            <annotation_default><array><value><boolean>true<\/boolean><\/value><value><byte>12<\/byte><\/value><value><char>c<\/char><\/value><value><class>LPhee;<\/class><\/value><value><double>1.3<\/double><\/value><value><enum_class>LBoo;<\/enum_class><constant_name>BOO<\/constant_name><\/value><value><float>3.7<\/float><\/value><value><int>33<\/int><\/value><value><long>3333<\/long><\/value><value><short>25<\/short><\/value><value><string>BOO<\/string><\/value><value><annotation_class>LPhoo;<\/annotation_class><\/value><\/array><\/annotation_default>\n@@ -910,1 +911,1 @@\n-        assertArrayEquals(out.toString().trim().split(\" *\\r?\\n\"), expected.trim().split(\"\\n\"));\n+        assertArrayEquals(expected.trim().split(\"\\n\"), out.toString().trim().split(\" *\\r?\\n\"));\n","filename":"test\/jdk\/jdk\/classfile\/ClassPrinterTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-            case AnnotationValue.OfInteger v -> AnnotationValue.of(v.intValue());\n+            case AnnotationValue.OfInt v -> AnnotationValue.of(v.intValue());\n@@ -170,1 +170,1 @@\n-            case AnnotationValue.OfCharacter v -> AnnotationValue.of(v.charValue());\n+            case AnnotationValue.OfChar v -> AnnotationValue.of(v.charValue());\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/RebuildingTransformation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8285932 8310913\n+ * @bug 8285932 8310913 8336390 8338060\n@@ -39,0 +39,1 @@\n+import java.util.List;\n@@ -43,0 +44,1 @@\n+import java.util.function.Function;\n@@ -44,0 +46,1 @@\n+import java.util.stream.IntStream;\n@@ -46,1 +49,11 @@\n-    static long BASE_KEY = 10_000_000L;\n+    private static String BASE_KEY = \"BASEKEY-\";\n+\n+    \/\/ Return a String (identity object) that can be a key in WeakHashMap.\n+    private static String genKey(int i) {\n+        return BASE_KEY + i;\n+    }\n+\n+    \/\/ Return a String of the letter 'a' plus the integer (0..0xffff)\n+    private static String genValue(int i) {\n+        return String.valueOf((char) ('a' + i));\n+    }\n@@ -66,3 +79,7 @@\n-    static void mapTest(boolean isSoft, Supplier<Map<ReferenceKey<Long>, String>> supplier) {\n-        Map<Long, String> map = ReferencedKeyMap.create(isSoft, supplier);\n-        populate(map);\n+    static void mapTest(boolean isSoft, Supplier<Map<ReferenceKey<String>, String>> supplier) {\n+        Map<String, String> map = ReferencedKeyMap.create(isSoft, supplier);\n+        var strongKeys = populate(map);      \/\/ Retain references to the keys\n+        methods(map);\n+        Reference.reachabilityFence(strongKeys);\n+\n+        strongKeys = null;      \/\/ drop strong key references\n@@ -74,2 +91,0 @@\n-        populate(map);\n-        methods(map);\n@@ -78,3 +93,7 @@\n-    static void setTest(boolean isSoft, Supplier<Map<ReferenceKey<Long>, ReferenceKey<Long>>> supplier) {\n-        ReferencedKeySet<Long> set = ReferencedKeySet.create(isSoft, supplier);\n-        populate(set);\n+    static void setTest(boolean isSoft, Supplier<Map<ReferenceKey<String>, ReferenceKey<String>>> supplier) {\n+        ReferencedKeySet<String> set = ReferencedKeySet.create(isSoft, supplier);\n+        var strongKeys = populate(set);      \/\/ Retain references to the keys\n+        methods(set);\n+        Reference.reachabilityFence(strongKeys);\n+\n+        strongKeys = null;          \/\/ drop strong key references\n@@ -86,2 +105,0 @@\n-        populate(set);\n-        methods(set);\n@@ -90,1 +107,1 @@\n-    static void methods(Map<Long, String> map) {\n+    static void methods(Map<String, String> map) {\n@@ -92,2 +109,2 @@\n-        assertTrue(map.containsKey(BASE_KEY + 'a' -'a'), \"missing key\");\n-        assertTrue(map.get(BASE_KEY + 'b' -'a').equals(\"b\"), \"wrong key\");\n+        assertTrue(map.containsKey(genKey('a' -'a')), \"missing key\");\n+        assertTrue(map.get(genKey('b' -'a')).equals(\"b\"), \"wrong key\");\n@@ -95,5 +112,5 @@\n-        map.remove(BASE_KEY + 'd' -'a');\n-        assertTrue(map.get(BASE_KEY + 'd' -'a') == null, \"not removed\");\n-        map.putAll(Map.of(1L, \"A\", 2L, \"B\"));\n-        assertTrue(map.get(2L).equals(\"B\"), \"collection not added\");\n-        assertTrue(map.containsKey(1L), \"key missing\");\n+        map.remove(genKey('d' -'a'));\n+        assertTrue(map.get(genKey('d' -'a')) == null, \"not removed\");\n+        map.putAll(Map.of(genKey(1), \"A\", genKey(2), \"B\"));\n+        assertTrue(map.get(genKey(2)).equals(\"B\"), \"collection not added\");\n+        assertTrue(map.containsKey(genKey(1)), \"key missing\");\n@@ -101,11 +118,11 @@\n-        assertTrue(map.entrySet().contains(Map.entry(1L, \"A\")), \"key missing\");\n-        map.putIfAbsent(3L, \"C\");\n-        assertTrue(map.get(3L).equals(\"C\"), \"key missing\");\n-        map.putIfAbsent(2L, \"D\");\n-        assertTrue(map.get(2L).equals(\"B\"), \"key replaced\");\n-        map.remove(3L);\n-        assertTrue(map.get(3L) == null, \"key not removed\");\n-        map.replace(2L, \"D\");\n-        assertTrue(map.get(2L).equals(\"D\"), \"key not replaced\");\n-        map.replace(2L, \"B\", \"E\");\n-        assertTrue(map.get(2L).equals(\"D\"), \"key replaced\");\n+        assertTrue(map.entrySet().contains(Map.entry(genKey(1), \"A\")), \"key missing\");\n+        map.putIfAbsent(genKey(3), \"C\");\n+        assertTrue(map.get(genKey(3)).equals(\"C\"), \"key missing\");\n+        map.putIfAbsent(genKey(2), \"D\");\n+        assertTrue(map.get(genKey(2)).equals(\"B\"), \"key replaced\");\n+        map.remove(genKey(3));\n+        assertTrue(map.get(genKey(3)) == null, \"key not removed\");\n+        map.replace(genKey(2), \"D\");\n+        assertTrue(map.get(genKey(2)).equals(\"D\"), \"key not replaced\");\n+        map.replace(genKey(2), \"B\", \"E\");\n+        assertTrue(map.get(genKey(2)).equals(\"D\"), \"key replaced\");\n@@ -114,1 +131,1 @@\n-    static void methods(ReferencedKeySet<Long> set) {\n+    static void methods(ReferencedKeySet<String> set) {\n@@ -116,9 +133,9 @@\n-        assertTrue(set.contains(BASE_KEY + 3), \"missing key\");\n-        set.remove(BASE_KEY + 3);\n-        assertTrue(!set.contains(BASE_KEY + 3), \"not removed\");\n-        Long element1 = set.get(BASE_KEY + 2);\n-        Long element2 = set.get(BASE_KEY + 3);\n-        Long element3 = set.get(BASE_KEY + 4);\n-        Long intern1 = set.intern(BASE_KEY + 2);\n-        Long intern2 = set.intern(BASE_KEY + 3);\n-        Long intern3 = set.intern(BASE_KEY + 4, e -> e);\n+        assertTrue(set.contains(genKey(3)), \"missing key\");\n+        set.remove(genKey(3));\n+        assertTrue(!set.contains(genKey(3)), \"not removed\");\n+        String element1 = set.get(genKey(2));\n+        String element2 = set.get(genKey(3));\n+        String element3 = set.get(genKey(4));\n+        String intern1 = set.intern(genKey(2));\n+        String intern2 = set.intern(genKey(3));\n+        String intern3 = set.intern(genKey(4), e -> e);\n@@ -131,2 +148,2 @@\n-        Long value1 = Long.valueOf(BASE_KEY + 999);\n-        Long value2 = Long.valueOf(BASE_KEY + 999);\n+        String value1 = genKey(999);\n+        String value2 = genKey(999);\n@@ -167,5 +184,5 @@\n-    static void populate(Map<Long, String> map) {\n-        for (int i = 0; i < 26; i++) {\n-            Long key = BASE_KEY + i;\n-            String value = String.valueOf((char) ('a' + i));\n-            map.put(key, value);\n+    static List<String> populate(Map<String, String> map) {\n+        var keyRefs = genStrings(0, 26, ReferencedKeyTest::genKey);\n+        var valueRefs = genStrings(0, 26, ReferencedKeyTest::genValue);\n+        for (int i = 0; i < keyRefs.size(); i++) {\n+            map.put(keyRefs.get(i), valueRefs.get(i));\n@@ -173,0 +190,1 @@\n+        return keyRefs;\n@@ -175,5 +193,9 @@\n-    static void populate(Set<Long> set) {\n-        for (int i = 0; i < 26; i++) {\n-            Long value = BASE_KEY + i;\n-            set.add(value);\n-        }\n+    static List<String> populate(Set<String> set) {\n+        var keyRefs = genStrings(0, 26, ReferencedKeyTest::genKey);\n+        set.addAll(keyRefs);\n+        return keyRefs;\n+    }\n+\n+    \/\/ Generate a List of consecutive strings using a function int -> String\n+    static List<String> genStrings(int min, int maxExclusive, Function<Integer, String> genString) {\n+        return IntStream.range(min, maxExclusive).mapToObj(i -> genString.apply(i)).toList();\n","filename":"test\/jdk\/jdk\/internal\/util\/ReferencedKeyTest.java","additions":76,"deletions":54,"binary":false,"changes":130,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Collections;\n@@ -32,1 +33,2 @@\n-import jdk.jfr.Recording;\n+import jdk.jfr.Event;\n+import jdk.jfr.consumer.RecordingStream;\n@@ -42,1 +44,1 @@\n- * Test for events: vm\/code_cache\/full vm\/compiler\/failure\n+ * Test for events: jdk.CodeCacheFull jdk.CompilationFailure\n@@ -61,0 +63,2 @@\n+    static class ProvocationEvent extends Event {\n+    }\n@@ -66,2 +70,2 @@\n-    private static final String pathFull = EventNames.CodeCacheFull;\n-    private static final String pathFailure = EventNames.CompilationFailure;\n+    private static final String EVENT_CODE_CACHE_FULL = EventNames.CodeCacheFull;\n+    private static final String EVENT_COMPILATION_FAILURE = EventNames.CompilationFailure;\n@@ -80,7 +84,24 @@\n-\n-        Recording r = new Recording();\n-        r.enable(pathFull);\n-        r.enable(pathFailure);\n-        r.start();\n-        provokeEvents();\n-        r.stop();\n+        List<RecordedEvent> events = Collections.synchronizedList(new ArrayList<>());\n+        try (RecordingStream rs = new RecordingStream()) {\n+            rs.setReuse(false);\n+            rs.enable(EVENT_CODE_CACHE_FULL);\n+            rs.enable(EVENT_COMPILATION_FAILURE);\n+            rs.onEvent(EVENT_CODE_CACHE_FULL, events::add);\n+            rs.onEvent(EVENT_COMPILATION_FAILURE, events::add);\n+            rs.onEvent(ProvocationEvent.class.getName(), e -> {\n+                if (!events.isEmpty()) {\n+                    rs.close();\n+                    return;\n+                }\n+                \/\/ Retry if CodeCacheFull or CompilationFailure events weren't provoked\n+                try {\n+                    provokeEvents();\n+                } catch (Exception ex) {\n+                    ex.printStackTrace();\n+                    rs.close();\n+                }\n+            });\n+            rs.startAsync();\n+            provokeEvents();\n+            rs.awaitTermination();\n+        }\n@@ -90,2 +111,0 @@\n-\n-        List<RecordedEvent> events = Events.fromRecording(r);\n@@ -93,1 +112,1 @@\n-        for (RecordedEvent event : events) {\n+        for (RecordedEvent event : new ArrayList<>(events)) {\n@@ -95,1 +114,1 @@\n-            case pathFull:\n+            case EVENT_CODE_CACHE_FULL:\n@@ -99,1 +118,1 @@\n-            case pathFailure:\n+            case EVENT_COMPILATION_FAILURE:\n@@ -118,0 +137,2 @@\n+        System.out.println(\"provokeEvents()\");\n+        ProvocationEvent provocationEvent = new ProvocationEvent();\n@@ -162,0 +183,1 @@\n+        provocationEvent.commit();\n","filename":"test\/jdk\/jdk\/jfr\/event\/compiler\/TestCodeSweeper.java","additions":39,"deletions":17,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+ * Before this test set to manual, the original timeout\n+ * value if 180\n@@ -32,1 +34,1 @@\n- * @run main\/othervm\/manual\/timeout=180 -Djava.security.debug=certpath,ocsp\n+ * @run main\/othervm\/manual -Djava.security.debug=certpath,ocsp\n@@ -35,1 +37,1 @@\n- * @run main\/othervm\/manual\/timeout=180 -Djava.security.debug=certpath,ocsp\n+ * @run main\/othervm\/manual -Djava.security.debug=certpath,ocsp\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/CAInterop.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,1 +45,2 @@\n-    vm.continuations\n+    vm.continuations \\\n+    vm.debug\n","filename":"test\/langtools\/TEST.ROOT","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,0 @@\n-                    <hr>\n@@ -138,1 +137,0 @@\n-                    <hr>\n@@ -215,1 +213,0 @@\n-                    <hr>\n@@ -236,1 +233,0 @@\n-                    <hr>\n@@ -247,1 +243,0 @@\n-                    <hr>\n@@ -258,1 +253,0 @@\n-                    <hr>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDeprecatedDocs\/TestDeprecatedDocs.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,2 +157,2 @@\n-                <dd><code>E<\/code> - I2: first type parameter<\/dd>\n-                <dd><code>F<\/code> - I2: second type parameter<\/dd>\n+                <dd><span id=\"m(E)-type-param-E\"><code>E<\/code> - I2: first type parameter<\/span><\/dd>\n+                <dd><span id=\"m(E)-type-param-F\"><code>F<\/code> - I2: second type parameter<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDirectedInheritance\/TestDirectedInheritance.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-                <wbr>(<a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n+                <wbr>(<a href=\"#type-param-T\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n@@ -230,1 +230,1 @@\n-                method-summary-table-tab3\"><code>abstract <a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a><\/code><\/div>\n+                method-summary-table-tab3\"><code>abstract <a href=\"#type-param-T\" title=\"type parameter in Foo\">T<\/a><\/code><\/div>\n@@ -233,1 +233,1 @@\n-                <wbr>(<a href=\"Foo.html\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n+                <wbr>(<a href=\"#type-param-T\" title=\"type parameter in Foo\">T<\/a>&nbsp;arg)<\/code><\/div>\n@@ -388,1 +388,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testErasure\/TestErasure.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      8188248\n+ * @bug      8188248 8313931\n@@ -70,1 +70,1 @@\n-                    <a href=\"A.html\" title=\"class in pkg\"><code>A<\/code><\/a>\"\"\");\n+                    param <a href=\"#m1(T)-type-param-T\"><code>T<\/code><\/a>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testGenericMethodLinkTaglet\/TestGenericMethodLinkTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,2 @@\n-                \"Class C4&lt;E extends C4&lt;E&gt;&gt;<\/h1>\",\n+                \"\"\"\n+                    Class C4&lt;<span id=\"type-param-E\">E extends C4&lt;E&gt;<\/span>&gt;<\/h1>\"\"\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHref\/TestHref.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-                     href=\"Child.html\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code><\/dd>\"\"\",\n+                     href=\"#type-param-CE\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code><\/dd>\"\"\",\n@@ -107,1 +107,1 @@\n-                    ode><a href=\"Parent.html\" title=\"class in pkg\">Parent<\/a>&lt;<a href=\"Child.html\\\n+                    ode><a href=\"Parent.html\" title=\"class in pkg\">Parent<\/a>&lt;<a href=\"#type-param-CE\\\n@@ -193,1 +193,1 @@\n-                a href=\"Child.html\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code>\"\"\");\n+                a href=\"#type-param-CE\" title=\"type parameter in Child\">CE<\/a>&gt;<\/code>\"\"\");\n@@ -212,1 +212,1 @@\n-                ator.OfInt<\/a>&lt;<a href=\"Spliterator.OfInt.html\" title=\"type parameter in Spli\\\n+                ator.OfInt<\/a>&lt;<a href=\"Spliterator.OfInt.html#type-param-Integer\" title=\"type parameter in Spli\\\n@@ -215,3 +215,3 @@\n-                .html\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spl\\\n-                iterator.OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_C\\\n-                ONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in Spl\\\n+                .html#type-param-T\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spl\\\n+                iterator.OfPrimitive.html#type-param-T_CONS\" title=\"type parameter in Spliterator.OfPrimitive\">T_C\\\n+                ONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_SPLITR\" title=\"type parameter in Spl\\\n@@ -220,3 +220,3 @@\n-                OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><\\\n-                a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.OfPri\\\n-                mitive\">T_CONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\"type param\\\n+                OfPrimitive.html#type-param-T\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><\\\n+                a href=\"Spliterator.OfPrimitive.html#type-param-T_CONS\" title=\"type parameter in Spliterator.OfPri\\\n+                mitive\">T_CONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_SPLITR\" title=\"type param\\\n@@ -239,1 +239,1 @@\n-                Spliterator.OfInt.html\" title=\"type parameter in Spliterator.OfInt\">Integer<\/a>&\\\n+                Spliterator.OfInt.html#type-param-Integer\" title=\"type parameter in Spliterator.OfInt\">Integer<\/a>&\\\n@@ -245,2 +245,2 @@\n-                &lt;<a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.\\\n-                OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\"type param\\\n+                &lt;<a href=\"Spliterator.OfPrimitive.html#type-param-T\" title=\"type parameter in Spliterator.\\\n+                OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_CONS\" title=\"type param\\\n@@ -248,1 +248,1 @@\n-                e.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a> extends <\\\n+                e.html#type-param-T_SPLITR\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a> extends <\\\n@@ -250,2 +250,2 @@\n-                imitive<\/a>&lt;<a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in S\\\n-                pliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\\\n+                imitive<\/a>&lt;<a href=\"Spliterator.OfPrimitive.html#type-param-T\" title=\"type parameter in S\\\n+                pliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html#type-param-T_CONS\" title=\\\n@@ -253,1 +253,1 @@\n-                .OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a\\\n+                .OfPrimitive.html#type-param-T_SPLITR\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a\\\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testInterface\/TestInterface.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8313931\n+ * @summary  Javadoc: links to type parameters actually generate links to classes\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    toolbox.ToolBox javadoc.tester.*\n+ * @run main TestLinkTagletTypeParam\n+ *\/\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+public class TestLinkTagletTypeParam extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        var tester = new TestLinkTagletTypeParam();\n+        tester.runTests();\n+    }\n+\n+    ToolBox tb = new ToolBox();\n+\n+    @JavadocTester.Test\n+    public void testClassTypeParameterLink(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    \/**\n+                     * Link to {@link F}.\n+                     *\n+                     * @param <F> the first type param\n+                     * @param <APND> an Appendable\n+                     *\n+                     * @see APND the second type parameter\n+                     *\/\n+                    public class Test<F, APND extends Appendable> {\n+                        private Test() {}\n+                    }\n+                    \"\"\");\n+\n+        javadoc(\"-Xdoclint:none\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"Test.java\").toString());\n+        checkExit(JavadocTester.Exit.OK);\n+\n+        checkOrder(\"Test.html\",\n+                \"\"\"\n+                    <dt>Type Parameters:<\/dt>\n+                    <dd><span id=\"type-param-F\"><code>F<\/code> - the first type param<\/span><\/dd>\n+                    <dd><span id=\"type-param-APND\"><code>APND<\/code> - an Appendable<\/span><\/dd>\"\"\",\n+                \"\"\"\n+                    Link to <a href=\"#type-param-F\" title=\"type parameter in Test\"><code>F<\/code><\/a>.\"\"\",\n+                \"\"\"\n+                    <dt>See Also:<\/dt>\n+                    <dd>\n+                    <ul class=\"tag-list\">\n+                    <li><a href=\"#type-param-APND\" title=\"type parameter in Test\">the second type parameter<\/a><\/li>\n+                    <\/ul>\"\"\");\n+    }\n+\n+    @JavadocTester.Test\n+    public void testMethodTypeParameterLink(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src,\n+               \"\"\"\n+                    \/**\n+                     * Class comment.\n+                     *\/\n+                    public class Test {\n+                        \/**\n+                         * Link to {@link T} and {@linkplain T link with label}.\n+                         *\n+                         * @param <T> the T\n+                         * @param appendable the appendable\n+                         *\/\n+                        public <T extends Appendable> T append(final T appendable) {\n+                            return appendable;\n+                        }\n+                    }\n+                    \"\"\");\n+\n+        javadoc(\"-Xdoclint:reference\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"Test.java\").toString());\n+\n+        checkOutput(JavadocTester.Output.OUT, true,\n+                \"\");\n+\n+        checkOutput(\"Test.html\", true,\n+                \"\"\"\n+                    Link to <a href=\"#append(T)-type-param-T\"><code>T<\/code><\/a> and <a href=\"#appe\\\n+                    nd(T)-type-param-T\">link with label<\/a>.\"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLinkTaglet\/TestLinkTagletTypeParam.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,1 +123,0 @@\n-                    <div class=\"horizontal-scroll\">\n@@ -125,0 +124,1 @@\n+                    <div class=\"horizontal-scroll\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMemberInheritance\/TestMemberInheritance.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1363,1 +1363,0 @@\n-                    <div class=\"horizontal-scroll\">\n@@ -1365,0 +1364,1 @@\n+                    <div class=\"horizontal-scroll\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testModules\/TestModules.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,1 +120,1 @@\n-                    <dd><code>E<\/code> - the type parameter for this class.\"\"\",\n+                    <dd><span id=\"type-param-E\"><code>E<\/code> - the type parameter for this class.<\/span><\/dd>\"\"\",\n@@ -133,1 +133,1 @@\n-                    (<a href=\"TypeParameters.html\" title=\"type parameter in TypeParameters\">E<\/a>&nbsp;param)\"\"\",\n+                    (<a href=\"#type-param-E\" title=\"type parameter in TypeParameters\">E<\/a>&nbsp;param)\"\"\",\n@@ -137,2 +137,4 @@\n-                    <dd><code>T<\/code> - This is the first type parameter.<\/dd>\n-                    <dd><code>V<\/code> - This is the second type parameter.\"\"\",\n+                    <dd><span id=\"methodThatHasTypeParameters(T,V)-type-param-T\"><code>T<\/code> - Th\\\n+                    is is the first type parameter.<\/span><\/dd>\n+                    <dd><span id=\"methodThatHasTypeParameters(T,V)-type-param-V\"><code>V<\/code> - Th\\\n+                    is is the second type parameter.<\/span><\/dd>\"\"\",\n@@ -150,1 +152,1 @@\n-                    ab2 method-summary-table-tab4\"><code><a href=\"TypeParameters.html\" title=\"type p\\\n+                    ab2 method-summary-table-tab4\"><code><a href=\"#type-param-E\" title=\"type p\\\n@@ -155,1 +157,1 @@\n-                    ref=\"TypeParameters.html\" title=\"type parameter in TypeParameters\">E<\/a>[]&nbsp;\\\n+                    ref=\"#type-param-E\" title=\"type parameter in TypeParameters\">E<\/a>[]&nbsp;\\\n@@ -159,1 +161,1 @@\n-                    lass=\"return-type\"><a href=\"TypeParameters.html\" title=\"type parameter in TypePa\\\n+                    lass=\"return-type\"><a href=\"#type-param-E\" title=\"type parameter in TypePa\\\n@@ -161,1 +163,1 @@\n-                    rameterA<\/span><wbr><span class=\"parameters\">(<a href=\"TypeParameters.html\" titl\\\n+                    rameterA<\/span><wbr><span class=\"parameters\">(<a href=\"#type-param-E\" titl\\\n@@ -179,1 +181,1 @@\n-                    href=\"TypeParameters.html\" title=\"type parameter in TypeParameters\">E<\/a><\/code>\\\n+                    href=\"#type-param-E\" title=\"type parameter in TypeParameters\">E<\/a><\/code>\\\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNewLanguageFeatures\/TestNewLanguageFeatures.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-                    <dd><code>T2<\/code> - type 2<\/dd>\n+                    <dd><span id=\"genericMethod(T1,T2,T3)-type-param-T2\"><code>T2<\/code> - type 2<\/span><\/dd>\n@@ -95,1 +95,1 @@\n-                    <dd><code>T1<\/code> - type 1<\/dd>\n+                    <dd><span id=\"type-param-T1\"><code>T1<\/code> - type 1<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testParamTaglet\/TestParamTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-                    ctProperty<\/a>&lt;java.util.List&lt;<a href=\"MyClassT.html\" title=\"type paramete\\\n+                    ctProperty<\/a>&lt;java.util.List&lt;<a href=\"#type-param-T\" title=\"type paramete\\\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testProperty\/TestProperty.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-                    <dd><code>T<\/code> - This is a type parameter.<\/dd>\n+                    <dd><span id=\"type-param-T\"><code>T<\/code> - This is a type parameter.<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRecordTypes\/TestRecordTypes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -222,1 +222,2 @@\n-                    java.lang.Class&lt;<a href=\"pkg2\/Fields.html\" title=\"type parameter in Fields\">E<\/a>&gt; someClass\"\"\");\n+                    java.lang.Class&lt;<a href=\"pkg2\/Fields.html#type-param-E\" title=\"type paramete\\\n+                    r in Fields\">E<\/a>&gt; someClass\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSerializedForm\/TestSerializedForm.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-                     <dd><code>T<\/code> - the throwable<\/dd>\n+                     <dd><span id=\"m()-type-param-T\"><code>T<\/code> - the throwable<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrows\/TestThrows.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      4927167 4974929 6381729 7010344 8025633 8081854 8182765 8187288 8261976\n+ * @bug      4927167 4974929 6381729 7010344 8025633 8081854 8182765 8187288 8261976 8313931\n@@ -113,1 +113,2 @@\n-                    <div class=\"col-last even-row-color\">&nbsp;<\/div>\"\"\",\n+                    <div class=\"col-last even-row-color\">\n+                    <div class=\"block\">Generic constructor.<\/div>\"\"\",\n@@ -117,1 +118,12 @@\n-                    &nbsp;<span class=\"element-name\">CtorTypeParam<\/span>()<\/div>\"\"\");\n+                    &nbsp;<span class=\"element-name\">CtorTypeParam<\/span>()<\/div>\"\"\",\n+                \"\"\"\n+                    <a href=\"#%3Cinit%3E()-type-param-T\"><code>T<\/code><\/a>\"\"\",\n+                \"\"\"\n+                    <dt>Type Parameters:<\/dt>\n+                    <dd><span id=\"&lt;init&gt;()-type-param-T\"><code>T<\/code> - the type parameter<\/span><\/dd>\"\"\",\n+                \"\"\"\n+                    <dt>See Also:<\/dt>\n+                    <dd>\n+                    <ul class=\"tag-list\">\n+                    <li><a href=\"#%3Cinit%3E()-type-param-T\">link to type parameter<\/a><\/li>\n+                    <\/ul>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTypeParams\/TestTypeParameters.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -27,0 +27,6 @@\n+    \/**\n+     * Generic constructor. {@link T}\n+     *\n+     * @param <T> the type parameter\n+     * @see T link to type parameter\n+     *\/\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTypeParams\/pkg\/CtorTypeParam.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-                    <dd><code>##<\/code> - the ##<\/dd>\n+                    <dd><span id=\"type-param-##\"><code>##<\/code> - the ##<\/span><\/dd>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testUnicode\/TestUnicode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,2 @@\n- * @bug 7142086\n+ * @bug 7142086 8337334\n+ * @requires vm.debug == false\n@@ -32,0 +33,7 @@\n+\/*\n+ * @test\n+ * @requires vm.debug == true\n+ * @modules jdk.compiler\n+ * @run main\/timeout=20 T7142086\n+ *\/\n+\n","filename":"test\/langtools\/tools\/javac\/7142086\/T7142086.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2024, Alphabet LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8337998\n+ * @summary CompletionFailure in getEnclosingType attaching type annotations\n+ * @library \/tools\/javac\/lib \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *\/\n+\n+import toolbox.*;\n+import toolbox.Task.*;\n+\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+public class CompletionErrorOnEnclosingType {\n+    ToolBox tb = new ToolBox();\n+\n+    public static void main(String... args) throws Exception {\n+        CompletionErrorOnEnclosingType t = new CompletionErrorOnEnclosingType();\n+        t.testMissingEnclosingType();\n+    }\n+\n+    void testMissingEnclosingType() throws Exception {\n+        String annoSrc =\n+                \"\"\"\n+                import static java.lang.annotation.ElementType.TYPE_USE;\n+                import java.lang.annotation.Target;\n+                @Target(TYPE_USE)\n+                @interface Anno {}\n+\n+                class A<E> {}\n+\n+                class B {\n+                  private @Anno A<String> a;\n+                }\n+                \"\"\";\n+        String cSrc =\n+                \"\"\"\n+                class C {\n+                  B b;\n+                }\n+                \"\"\";\n+\n+        Path base = Paths.get(\".\");\n+        Path src = base.resolve(\"src\");\n+        tb.createDirectories(src);\n+        tb.writeJavaFiles(src, annoSrc, cSrc);\n+        Path out = base.resolve(\"out\");\n+        tb.createDirectories(out);\n+        new JavacTask(tb).outdir(out).files(tb.findJavaFiles(src)).run();\n+\n+        \/\/ now if we remove A.class there will be an error but javac should not crash\n+        tb.deleteFiles(out.resolve(\"A.class\"));\n+        List<String> log =\n+                new JavacTask(tb)\n+                        .outdir(out)\n+                        .classpath(out)\n+                        .options(\"-XDrawDiagnostics\")\n+                        .files(src.resolve(\"C.java\"))\n+                        .run(Expect.FAIL)\n+                        .writeAll()\n+                        .getOutputLines(Task.OutputKind.DIRECT);\n+\n+        var expectedOutput =\n+                List.of(\n+                        \"B.class:-:-: compiler.err.cant.attach.type.annotations: @Anno, B, a,\"\n+                            + \" (compiler.misc.class.file.not.found: A)\",\n+                        \"1 error\");\n+        if (!expectedOutput.equals(log)) {\n+            throw new Exception(\"expected output not found: \" + log);\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/CompletionErrorOnEnclosingType.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -249,1 +249,1 @@\n-            return Integer.toString(((AnnotationValue.OfInteger) value).intValue());\n+            return Integer.toString(((AnnotationValue.OfInt) value).intValue());\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/AnonymousClassTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-                case AnnotationValue.OfCharacter ev -> {\n+                case AnnotationValue.OfChar ev -> {\n@@ -116,1 +116,1 @@\n-                    testCase.checkEquals(((AnnotationValue.OfInteger) element_value).intValue(), Integer.parseInt(values[0]), \"const_value_index\");\n+                    testCase.checkEquals(((AnnotationValue.OfInt) element_value).intValue(), Integer.parseInt(values[0]), \"const_value_index\");\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/AnnotationDefault\/AnnotationDefaultVerifier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,1 +126,1 @@\n-                    testResult.checkEquals(((AnnotationValue.OfInteger) element_value).intValue(), value, \"const_value_index : \" + value);\n+                    testResult.checkEquals(((AnnotationValue.OfInt) element_value).intValue(), value, \"const_value_index : \" + value);\n@@ -172,2 +172,2 @@\n-            AnnotationValue.OfCharacter ev =\n-                    (AnnotationValue.OfCharacter) element_value;\n+            AnnotationValue.OfChar ev =\n+                    (AnnotationValue.OfChar) element_value;\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/TestAnnotationInfo.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+compiler.err.cant.attach.type.annotations               # bad class file\n","filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-package pkg;\n+\/\/ key: compiler.err.statement.not.expected\n@@ -26,3 +26,2 @@\n-public class CtorTypeParam {\n-    public <T extends Runnable> CtorTypeParam() {\n-    }\n+class StatementNotExpected {\n+    return null;\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/StatementNotExpected.java","additions":3,"deletions":4,"binary":false,"changes":7,"previous_filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTypeParams\/pkg\/CtorTypeParam.java","status":"copied"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8334466\n+ * @summary Ambiguous method call with generics may cause FunctionDescriptorLookupError\n+ * @compile\/fail\/ref=CrashWithFunctionDescriptorLookupErrorTest.out -XDrawDiagnostics CrashWithFunctionDescriptorLookupErrorTest.java\n+ *\/\n+\n+import java.util.List;\n+\n+class CrashWithFunctionDescriptorLookupErrorTest {\n+    void m() {\n+        List<X> list = List.of(new X());\n+        test(list.get(0));\n+    }\n+\n+    void test(A<?> a) { }\n+    void test(B<?> b) { }\n+\n+    interface A<T extends A<T>> { T a(); }\n+    interface B<T extends B<T>> { T b(); }\n+    class X implements A<X>, B<X> {\n+        public X a() { return null; }\n+        public X b() { return null; }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/CrashWithFunctionDescriptorLookupErrorTest.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+CrashWithFunctionDescriptorLookupErrorTest.java:13:9: compiler.err.ref.ambiguous: test, kindname.method, test(CrashWithFunctionDescriptorLookupErrorTest.A<?>), CrashWithFunctionDescriptorLookupErrorTest, kindname.method, test(CrashWithFunctionDescriptorLookupErrorTest.B<?>), CrashWithFunctionDescriptorLookupErrorTest\n+1 error\n","filename":"test\/langtools\/tools\/javac\/lambda\/CrashWithFunctionDescriptorLookupErrorTest.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436 8267221 8271928 8275097 8293897 8295401 8304671 8310326 8312093 8312204 8315452\n+ * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436 8267221 8271928 8275097 8293897 8295401 8304671 8310326 8312093 8312204 8315452 8337976\n@@ -2412,0 +2412,74 @@\n+    @Test \/\/JDK-8337976\n+    void testStatementsInClass() throws IOException {\n+        String code = \"\"\"\n+                      package test;\n+                      public class Test {\n+                          if (true);\n+                          while (true);\n+                          do {} while (true);\n+                          for ( ; ; );\n+                          switch (0) { default: }\n+                          assert true;\n+                          break;\n+                          continue;\n+                          return ;\n+                          throw new RuntimeException();\n+                          try {\n+                          } catch (RuntimeException ex) {}\n+                      }\n+                      \"\"\";\n+        DiagnosticCollector<JavaFileObject> coll =\n+                new DiagnosticCollector<>();\n+        JavacTaskImpl ct = (JavacTaskImpl) tool.getTask(null, fm, coll,\n+                List.of(\"--enable-preview\", \"--source\", SOURCE_VERSION),\n+                null, Arrays.asList(new MyFileObject(code)));\n+        CompilationUnitTree cut = ct.parse().iterator().next();\n+\n+        String result = toStringWithErrors(cut).replaceAll(\"\\\\R\", \"\\n\");\n+        System.out.println(\"RESULT\\n\" + result);\n+        assertEquals(\"incorrect AST\",\n+                     result,\n+                     \"\"\"\n+                     package test;\n+                     \\n\\\n+                     public class Test {\n+                         (ERROR: if (true) ;)\n+                         (ERROR: while (true) ;)\n+                         (ERROR: do {\n+                     } while (true);)\n+                         (ERROR: for (; ; ) ;)\n+                         (ERROR: switch (0) {\n+                     default:\n+\n+                     })\n+                         (ERROR: assert true;)\n+                         (ERROR: break;)\n+                         (ERROR: continue;)\n+                         (ERROR: return;)\n+                         (ERROR: throw new RuntimeException();)\n+                         (ERROR: try {\n+                     } catch (RuntimeException ex) {\n+                     })\n+                     }\"\"\");\n+\n+        List<String> codes = new LinkedList<>();\n+\n+        for (Diagnostic<? extends JavaFileObject> d : coll.getDiagnostics()) {\n+            codes.add(d.getLineNumber() + \":\" + d.getColumnNumber() + \":\" + d.getCode());\n+        }\n+\n+        assertEquals(\"testStatementsInClass: \" + codes,\n+                     List.of(\"3:5:compiler.err.statement.not.expected\",\n+                             \"4:5:compiler.err.statement.not.expected\",\n+                             \"5:5:compiler.err.statement.not.expected\",\n+                             \"6:5:compiler.err.statement.not.expected\",\n+                             \"7:5:compiler.err.statement.not.expected\",\n+                             \"8:5:compiler.err.statement.not.expected\",\n+                             \"9:5:compiler.err.statement.not.expected\",\n+                             \"10:5:compiler.err.statement.not.expected\",\n+                             \"11:5:compiler.err.statement.not.expected\",\n+                             \"12:5:compiler.err.statement.not.expected\",\n+                             \"13:5:compiler.err.statement.not.expected\"),\n+                     codes);\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/parser\/JavacParserTest.java","additions":76,"deletions":2,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -720,0 +720,4 @@\n+\n+    @Test(posn=1, annoType=TA.class, expect=\"130\")\n+    @Test(posn=23, annoType=TA.class, expect=\"131\")\n+    public Map<@TA(130) String, @TA(131) String> f130;\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/BasicAnnoTests.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1361,1 +1361,1 @@\n-            assertFail(\"compiler.err.illegal.start.of.type\",\n+            assertFail(\"compiler.err.statement.not.expected\",\n","filename":"test\/langtools\/tools\/javac\/records\/RecordCompilationTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,10 @@\n+\/**\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8337976\n+ * @summary Verify javac does not crash and produces nice errors for certain erroneous code.\n+ * @compile\/fail\/ref=T8337976.out -XDrawDiagnostics -XDshould-stop.at=FLOW -XDdev T8337976.java\n+ *\/\n+public class T8337976 {\n+    switch (0) { default: undefined u;}\n+    if (true) { undefined u; }\n+}\n","filename":"test\/langtools\/tools\/javac\/recovery\/T8337976.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+T8337976.java:8:5: compiler.err.statement.not.expected\n+T8337976.java:9:5: compiler.err.statement.not.expected\n+T8337976.java:8:27: compiler.err.cant.resolve.location: kindname.class, undefined, , , (compiler.misc.location: kindname.class, T8337976, null)\n+T8337976.java:9:17: compiler.err.cant.resolve.location: kindname.class, undefined, , , (compiler.misc.location: kindname.class, T8337976, null)\n+4 errors\n","filename":"test\/langtools\/tools\/javac\/recovery\/T8337976.out","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -0,0 +1,166 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.java.util.concurrent;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@State(Scope.Benchmark)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Fork(1)\n+@Warmup(iterations = 3, time = 1, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)\n+public class CopyOnWriteArrayListBenchmark {\n+\n+    private static byte[] getSerializedBytes(CopyOnWriteArrayList<?> list) throws IOException {\n+        ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();\n+        ObjectOutputStream objectOut = new ObjectOutputStream(bytesOut);\n+        objectOut.writeObject(list);\n+\n+        objectOut.close();\n+        return bytesOut.toByteArray();\n+    }\n+\n+    private Collection<Object> emptyCollection = new ArrayList<>();\n+    private Object[] emptyArray = new Object[0];\n+\n+    private Collection<Object> oneItemCollection = Arrays.asList(\"\");\n+    private Object[] oneItemArray = new Object[] { \"\" };\n+\n+    private CopyOnWriteArrayList<?> emptyInstance = new CopyOnWriteArrayList<>();\n+    private CopyOnWriteArrayList<?> oneItemInstance = new CopyOnWriteArrayList<>(oneItemArray);\n+\n+    private byte[] emptyInstanceBytes;\n+    private byte[] oneInstanceBytes;\n+\n+    public CopyOnWriteArrayListBenchmark() {\n+        try {\n+            emptyInstanceBytes = getSerializedBytes(emptyInstance);\n+            oneInstanceBytes = getSerializedBytes(oneItemInstance);\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void clear() {\n+        \/\/ have to create a new instance on each execution\n+        ((CopyOnWriteArrayList<?>) oneItemInstance.clone()).clear();\n+    }\n+\n+    @Benchmark\n+    public void clearEmpty() {\n+        emptyInstance.clear();\n+    }\n+\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> createInstanceArray() {\n+        return new CopyOnWriteArrayList<>(oneItemArray);\n+    }\n+\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> createInstanceArrayEmpty() {\n+        return new CopyOnWriteArrayList<>(emptyArray);\n+    }\n+\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> createInstanceCollection() {\n+        return new CopyOnWriteArrayList<>(oneItemCollection);\n+    }\n+\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> createInstanceCollectionEmpty() {\n+        return new CopyOnWriteArrayList<>(emptyCollection);\n+    }\n+\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> createInstanceDefault() {\n+        return new CopyOnWriteArrayList<Object>();\n+    }\n+\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> readInstance() throws IOException, ClassNotFoundException {\n+        try (ObjectInputStream objIn = new ObjectInputStream(new ByteArrayInputStream(oneInstanceBytes))) {\n+            return (CopyOnWriteArrayList<?>) objIn.readObject();\n+        }\n+    }\n+\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> readInstanceEmpty() throws IOException, ClassNotFoundException {\n+        try (ObjectInputStream objIn = new ObjectInputStream(new ByteArrayInputStream(emptyInstanceBytes))) {\n+            return (CopyOnWriteArrayList<?>) objIn.readObject();\n+        }\n+    }\n+\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> removeObjectLastRemaining() {\n+        CopyOnWriteArrayList<String> list = new CopyOnWriteArrayList<>();\n+        list.add(\"\");\n+        list.remove(\"\");\n+        return list;\n+    }\n+\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> removeIndexLastRemaining() {\n+        CopyOnWriteArrayList<String> list = new CopyOnWriteArrayList<>();\n+        list.add(\"\");\n+        list.remove(0);\n+        return list;\n+    }\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> removeObject() {\n+        CopyOnWriteArrayList<String> list = new CopyOnWriteArrayList<>();\n+        list.add(\"\");\n+        list.add(\"a\");\n+        list.remove(\"\");\n+        return list;\n+    }\n+\n+    @Benchmark\n+    public CopyOnWriteArrayList<?> remove() {\n+        CopyOnWriteArrayList<String> list = new CopyOnWriteArrayList<>();\n+        list.add(\"\");\n+        list.add(\"a\");\n+        list.remove(0);\n+        return list;\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/concurrent\/CopyOnWriteArrayListBenchmark.java","additions":166,"deletions":0,"binary":false,"changes":166,"status":"added"}]}