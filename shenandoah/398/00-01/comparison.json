{"files":[{"patch":"@@ -115,3 +115,0 @@\n-  if (heap->mode()->is_generational()) {\n-    ShenandoahGenerationalFullGC::handle_completion(heap);\n-  }\n@@ -1172,1 +1169,1 @@\n-      ShenandoahGenerationalFullGC::balance_old_generation(heap);\n+      ShenandoahGenerationalFullGC::balance_generations_before_rebuilding_free_set(heap);\n@@ -1200,1 +1197,1 @@\n-      ShenandoahGenerationalFullGC::balance_generations(heap);\n+      ShenandoahGenerationalFullGC::balance_generations_after_rebuilding_free_set(heap);\n@@ -1202,0 +1199,1 @@\n+      ShenandoahGenerationalFullGC::handle_completion(heap);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-  size_t used_and_wasted() const {\n+  size_t used_including_humongous_waste() const {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  assert(generation->used_and_wasted() <= generation->used_regions_size(),\n+  assert(generation->used_including_humongous_waste() <= generation->used_regions_size(),\n@@ -84,1 +84,1 @@\n-  old->set_live_bytes_after_last_mark(old->used_and_wasted());\n+  old->set_live_bytes_after_last_mark(old->used_including_humongous_waste());\n@@ -94,1 +94,1 @@\n-void ShenandoahGenerationalFullGC::balance_old_generation(ShenandoahHeap* heap) {\n+void ShenandoahGenerationalFullGC::balance_generations_before_rebuilding_free_set(ShenandoahHeap* heap) {\n@@ -114,1 +114,1 @@\n-void ShenandoahGenerationalFullGC::balance_generations(ShenandoahHeap* heap) {\n+void ShenandoahGenerationalFullGC::balance_generations_after_rebuilding_free_set(ShenandoahHeap* heap) {\n@@ -191,3 +191,0 @@\n-    \/\/ Pinned regions are not compacted so they may still hold unmarked objects with\n-    \/\/ reference to reclaimed memory. Remembered set scanning will crash if it attempts\n-    \/\/ to iterate the oops in these objects.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+  \/\/ Prepares the generational mode heap for a full collection.\n@@ -39,1 +40,2 @@\n-  static void handle_completion(ShenandoahHeap* heap);\n+\n+  \/\/ Full GC may have compacted objects in the old generation, so we need to rebuild the card tables.\n@@ -41,2 +43,11 @@\n-  static void balance_old_generation(ShenandoahHeap* heap);\n-  static void balance_generations(ShenandoahHeap* heap);\n+\n+  \/\/ Records end of cycle for young and old and establishes size of live bytes in old\n+  static void handle_completion(ShenandoahHeap* heap);\n+\n+  static void balance_generations_before_rebuilding_free_set(ShenandoahHeap* heap);\n+  static void balance_generations_after_rebuilding_free_set(ShenandoahHeap* heap);\n+\n+  \/\/ Logs the number of live bytes marked in the old generation. This is _not_ the same\n+  \/\/ value used as the baseline for the old generation _after_ the full gc is complete.\n+  \/\/ The value reported in the logs does not include objects and regions that may be\n+  \/\/ promoted during the full gc.\n@@ -44,0 +55,2 @@\n+\n+  \/\/ This is used to tally the number, usage and space wasted by humongous objects for each generation.\n@@ -45,0 +58,5 @@\n+\n+  \/\/ Regions which are scheduled for in-place promotion during evacuation temporarily\n+  \/\/ have their top set to their end to prevent new objects from being allocated in them\n+  \/\/ before they are promoted. If the full GC encounters such a region, it means the\n+  \/\/ in-place promotion did not happen, and we must restore the original value of top.\n@@ -46,0 +64,5 @@\n+\n+  \/\/ Pinned regions are not compacted, so they may still hold unmarked objects with\n+  \/\/ references to reclaimed memory. Remembered set scanning will crash if it attempts\n+  \/\/ to iterate the oops in these objects. This method fills in dead objects for pinned,\n+  \/\/ old regions.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.hpp","additions":26,"deletions":3,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -34,2 +34,4 @@\n-\n-class ShenandoahSetRememberedCardsToDirtyClosure : public BasicOopIterateClosure {\n+\/\/ A closure that takes an oop in the old generation and, if it's pointing\n+\/\/ into the young generation, dirties the corresponding remembered set entry.\n+\/\/ This is only used to rebuild the remembered set after a full GC.\n+class ShenandoahDirtyRememberedSetClosure : public BasicOopIterateClosure {\n@@ -41,1 +43,1 @@\n-  ShenandoahSetRememberedCardsToDirtyClosure() :\n+  ShenandoahDirtyRememberedSetClosure() :\n@@ -47,0 +49,1 @@\n+    assert(_heap->is_in_old(p), \"Expecting to get an old gen address\");\n@@ -51,1 +54,1 @@\n-        \/\/ Found interesting pointer.  Mark the containing card as dirty.\n+        \/\/ Dirty the card containing the cross-generational pointer.\n@@ -411,1 +414,1 @@\n-  ShenandoahSetRememberedCardsToDirtyClosure dirty_cards_for_interesting_pointers;\n+  ShenandoahDirtyRememberedSetClosure dirty_cards_for_cross_generational_pointers;\n@@ -435,1 +438,1 @@\n-        obj->oop_iterate(&dirty_cards_for_interesting_pointers);\n+        obj->oop_iterate(&dirty_cards_for_cross_generational_pointers);\n@@ -447,1 +450,1 @@\n-          obj_addr += obj->oop_iterate_size(&dirty_cards_for_interesting_pointers);\n+          obj_addr += obj->oop_iterate_size(&dirty_cards_for_cross_generational_pointers);\n@@ -452,1 +455,0 @@\n-    \/\/ TODO: Assert this.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1050,2 +1050,2 @@\n-\/\/ registering all objects between bottom() and top(), and setting remembered set cards to\n-\/\/ DIRTY if they hold interesting pointers.\n+\/\/ registering all objects between bottom() and top(), and dirtying the cards containing\n+\/\/ cross-generational pointers.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}