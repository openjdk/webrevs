{"files":[{"patch":"@@ -85,1 +85,1 @@\n-    ShenandoahHeapLocker locker(_heap->lock());\n+    _heap->lock()->lock(false);\n@@ -88,1 +88,2 @@\n-    _heap->old_generation()->set_evacuation_reserve(_heap->old_generation()->soft_max_capacity() \/ 4);\n+    _heap->old_generation()->set_capacity(ShenandoahHeapRegion::region_size_bytes() * 10);\n+    _heap->old_generation()->set_evacuation_reserve(ShenandoahHeapRegion::region_size_bytes() * 4);\n@@ -93,0 +94,4 @@\n+  ~ShenandoahOldHeuristicTest() override {\n+    _heap->lock()->unlock();\n+  }\n+\n@@ -98,1 +103,0 @@\n-    ShenandoahHeapLocker locker(_heap->lock());\n@@ -109,1 +113,1 @@\n-    size_t garbage_target = _heap->old_generation()->soft_max_capacity() \/ 2;\n+    size_t garbage_target = _heap->old_generation()->max_capacity() \/ 2;\n@@ -119,1 +123,0 @@\n-    ShenandoahHeapLocker locker(_heap->lock());\n@@ -126,1 +129,0 @@\n-    ShenandoahHeapLocker locker(_heap->lock());\n","filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"}]}