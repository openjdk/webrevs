{"files":[{"patch":"@@ -49,2 +49,0 @@\n-  _degenerated_cycles_in_a_row(0),\n-  _successful_cycles_in_a_row(0),\n@@ -214,1 +212,1 @@\n-  return _degenerated_cycles_in_a_row <= ShenandoahFullGCThreshold;\n+  return ShenandoahHeap::heap()->shenandoah_policy()->consecutive_degenerated_gc_count() <= ShenandoahFullGCThreshold;\n@@ -235,2 +233,0 @@\n-  _degenerated_cycles_in_a_row = 0;\n-  _successful_cycles_in_a_row++;\n@@ -247,3 +243,0 @@\n-  _degenerated_cycles_in_a_row++;\n-  _successful_cycles_in_a_row = 0;\n-\n@@ -254,3 +247,0 @@\n-  _degenerated_cycles_in_a_row = 0;\n-  _successful_cycles_in_a_row++;\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -100,3 +100,0 @@\n-  uint _degenerated_cycles_in_a_row;\n-  uint _successful_cycles_in_a_row;\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-  \/\/ Always fail to Degenerated GC, if enabled\n+  \/\/ Always fal to Degenerated GC, if enabled\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  _abbreviated_cycles(0),\n+  _abbreviated_gcs(0),\n@@ -42,0 +42,1 @@\n+  _consecutive_degenerated_gcs(0),\n@@ -85,0 +86,1 @@\n+  _consecutive_degenerated_gcs = 0;\n@@ -89,0 +91,1 @@\n+  _consecutive_degenerated_gcs = 0;\n@@ -102,1 +105,1 @@\n-  _abbreviated_cycles++;\n+  _abbreviated_gcs++;\n@@ -115,1 +118,4 @@\n-void ShenandoahCollectorPolicy::record_success_degenerated(bool is_young) {\n+void ShenandoahCollectorPolicy::record_success_degenerated(bool is_young, bool is_upgraded_to_full) {\n+  if (!is_upgraded_to_full) {\n+    _consecutive_degenerated_gcs++;\n+  }\n@@ -125,0 +131,1 @@\n+  _consecutive_degenerated_gcs = 0;\n@@ -145,1 +152,0 @@\n-\n@@ -175,1 +181,1 @@\n-  out->print_cr(SIZE_FORMAT_W(5) \" Abbreviated GCs\",                   _abbreviated_cycles);\n+  out->print_cr(SIZE_FORMAT_W(5) \" Abbreviated GCs\",                   _abbreviated_gcs);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.cpp","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  size_t _abbreviated_cycles;\n+  size_t _abbreviated_gcs;\n@@ -51,0 +51,1 @@\n+  uint _consecutive_degenerated_gcs;\n@@ -64,0 +65,1 @@\n+\n@@ -76,1 +78,1 @@\n-  void record_success_degenerated(bool is_young);\n+  void record_success_degenerated(bool is_young, bool is_upgraded_to_full);\n@@ -102,0 +104,4 @@\n+\n+  inline size_t consecutive_degenerated_gc_count() const {\n+    return _consecutive_degenerated_gcs;\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -831,1 +831,1 @@\n-  heap->shenandoah_policy()->record_success_degenerated(_degen_generation->is_young());\n+  heap->shenandoah_policy()->record_success_degenerated(_degen_generation->is_young(), gc.upgraded_to_full());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1021,5 +1021,0 @@\n-\n-void ShenandoahGeneration::record_success_degenerated() {\n-  heuristics()->record_success_degenerated();\n-  ShenandoahHeap::heap()->shenandoah_policy()->record_success_degenerated(is_young());\n-}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -216,1 +216,0 @@\n-  virtual void record_success_degenerated();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}