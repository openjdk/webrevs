{"files":[{"patch":"@@ -211,0 +211,4 @@\n+bool ShenandoahHeuristics::should_degenerate_cycle() {\n+  return ShenandoahHeap::heap()->shenandoah_policy()->consecutive_degenerated_gc_count() <= ShenandoahFullGCThreshold;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -142,0 +142,2 @@\n+  virtual bool should_degenerate_cycle();\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,0 +47,5 @@\n+bool ShenandoahPassiveHeuristics::should_degenerate_cycle() {\n+  \/\/ Always fal to Degenerated GC, if enabled\n+  return ShenandoahDegeneratedGC;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -47,0 +47,2 @@\n+  virtual bool should_degenerate_cycle();\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  _abbreviated_cycles(0),\n+  _abbreviated_gcs(0),\n@@ -42,0 +42,1 @@\n+  _consecutive_degenerated_gcs(0),\n@@ -49,2 +50,1 @@\n-  _cycle_counter(0),\n-  _degenerated_cycles_in_a_row(0) {\n+  _cycle_counter(0) {\n@@ -86,1 +86,1 @@\n-  _degenerated_cycles_in_a_row = 0;\n+  _consecutive_degenerated_gcs = 0;\n@@ -91,1 +91,1 @@\n-  _degenerated_cycles_in_a_row = 0;\n+  _consecutive_degenerated_gcs = 0;\n@@ -105,1 +105,1 @@\n-  _abbreviated_cycles++;\n+  _abbreviated_gcs++;\n@@ -120,1 +120,1 @@\n-    _degenerated_cycles_in_a_row++;\n+    _consecutive_degenerated_gcs++;\n@@ -131,1 +131,1 @@\n-  _degenerated_cycles_in_a_row = 0;\n+  _consecutive_degenerated_gcs = 0;\n@@ -152,6 +152,0 @@\n-bool ShenandoahCollectorPolicy::should_degenerate_cycle() {\n-  return _degenerated_cycles_in_a_row <= ShenandoahFullGCThreshold;\n-}\n-\n-\n-\n@@ -187,1 +181,1 @@\n-  out->print_cr(SIZE_FORMAT_W(5) \" Abbreviated GCs\",                   _abbreviated_cycles);\n+  out->print_cr(SIZE_FORMAT_W(5) \" Abbreviated GCs\",                   _abbreviated_gcs);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.cpp","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  size_t _abbreviated_cycles;\n+  size_t _abbreviated_gcs;\n@@ -51,0 +51,1 @@\n+  uint _consecutive_degenerated_gcs;\n@@ -64,1 +65,0 @@\n-  uint _degenerated_cycles_in_a_row;\n@@ -91,2 +91,0 @@\n-  bool should_degenerate_cycle();\n-\n@@ -106,0 +104,4 @@\n+\n+  inline size_t consecutive_degenerated_gc_count() const {\n+    return _consecutive_degenerated_gcs;\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.hpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-      if (ShenandoahDegeneratedGC && policy->should_degenerate_cycle() &&\n+      if (ShenandoahDegeneratedGC && heuristics->should_degenerate_cycle() &&\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}