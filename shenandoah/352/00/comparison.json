{"files":[{"patch":"@@ -49,2 +49,0 @@\n-  _degenerated_cycles_in_a_row(0),\n-  _successful_cycles_in_a_row(0),\n@@ -213,4 +211,0 @@\n-bool ShenandoahHeuristics::should_degenerate_cycle() {\n-  return _degenerated_cycles_in_a_row <= ShenandoahFullGCThreshold;\n-}\n-\n@@ -235,2 +229,0 @@\n-  _degenerated_cycles_in_a_row = 0;\n-  _successful_cycles_in_a_row++;\n@@ -247,3 +239,0 @@\n-  _degenerated_cycles_in_a_row++;\n-  _successful_cycles_in_a_row = 0;\n-\n@@ -254,3 +243,0 @@\n-  _degenerated_cycles_in_a_row = 0;\n-  _successful_cycles_in_a_row++;\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -100,3 +100,0 @@\n-  uint _degenerated_cycles_in_a_row;\n-  uint _successful_cycles_in_a_row;\n-\n@@ -145,2 +142,0 @@\n-  virtual bool should_degenerate_cycle();\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -47,5 +47,0 @@\n-bool ShenandoahPassiveHeuristics::should_degenerate_cycle() {\n-  \/\/ Always fail to Degenerated GC, if enabled\n-  return ShenandoahDegeneratedGC;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -47,2 +47,0 @@\n-  virtual bool should_degenerate_cycle();\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,2 @@\n-  _cycle_counter(0) {\n+  _cycle_counter(0),\n+  _degenerated_cycles_in_a_row(0) {\n@@ -85,0 +86,1 @@\n+  _degenerated_cycles_in_a_row = 0;\n@@ -89,0 +91,1 @@\n+  _degenerated_cycles_in_a_row = 0;\n@@ -115,1 +118,4 @@\n-void ShenandoahCollectorPolicy::record_success_degenerated(bool is_young) {\n+void ShenandoahCollectorPolicy::record_success_degenerated(bool is_young, bool is_upgraded_to_full) {\n+  if (!is_upgraded_to_full) {\n+    _degenerated_cycles_in_a_row++;\n+  }\n@@ -125,0 +131,1 @@\n+  _degenerated_cycles_in_a_row = 0;\n@@ -145,0 +152,5 @@\n+bool ShenandoahCollectorPolicy::should_degenerate_cycle() {\n+  return _degenerated_cycles_in_a_row <= ShenandoahFullGCThreshold;\n+}\n+\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.cpp","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -64,0 +64,2 @@\n+  uint _degenerated_cycles_in_a_row;\n+\n@@ -76,1 +78,1 @@\n-  void record_success_degenerated(bool is_young);\n+  void record_success_degenerated(bool is_young, bool is_upgraded_to_full);\n@@ -89,0 +91,2 @@\n+  bool should_degenerate_cycle();\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-      if (ShenandoahDegeneratedGC && heuristics->should_degenerate_cycle() &&\n+      if (ShenandoahDegeneratedGC && policy->should_degenerate_cycle() &&\n@@ -831,1 +831,1 @@\n-  heap->shenandoah_policy()->record_success_degenerated(_degen_generation->is_young());\n+  heap->shenandoah_policy()->record_success_degenerated(_degen_generation->is_young(), gc.upgraded_to_full());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1021,5 +1021,0 @@\n-\n-void ShenandoahGeneration::record_success_degenerated() {\n-  heuristics()->record_success_degenerated();\n-  ShenandoahHeap::heap()->shenandoah_policy()->record_success_degenerated(is_young());\n-}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -216,1 +216,0 @@\n-  virtual void record_success_degenerated();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}