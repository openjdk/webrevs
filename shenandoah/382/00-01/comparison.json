{"files":[{"patch":"@@ -95,1 +95,1 @@\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n+  ShenandoahHeap* const heap = ShenandoahHeap::heap();\n@@ -97,1 +97,1 @@\n-  GCMode default_mode = concurrent_normal;\n+  const GCMode default_mode = concurrent_normal;\n@@ -107,1 +107,1 @@\n-  double shrink_period = (double)ShenandoahUncommitDelay \/ 1000 \/ 10;\n+  const double shrink_period = (double)ShenandoahUncommitDelay \/ 1000 \/ 10;\n@@ -109,1 +109,1 @@\n-  ShenandoahCollectorPolicy* policy = heap->shenandoah_policy();\n+  ShenandoahCollectorPolicy* const policy = heap->shenandoah_policy();\n@@ -118,2 +118,3 @@\n-    bool alloc_failure_pending = _alloc_failure_gc.is_set();\n-    bool humongous_alloc_failure_pending = _humongous_alloc_failure_gc.is_set();\n+    const bool alloc_failure_pending = _alloc_failure_gc.is_set();\n+    const bool humongous_alloc_failure_pending = _humongous_alloc_failure_gc.is_set();\n+\n@@ -122,2 +123,2 @@\n-    bool explicit_gc_requested = is_explicit_gc(cause);\n-    bool implicit_gc_requested = is_implicit_gc(cause);\n+    const bool explicit_gc_requested = is_explicit_gc(cause);\n+    const bool implicit_gc_requested = is_implicit_gc(cause);\n@@ -126,1 +127,1 @@\n-    size_t allocs_seen = Atomic::xchg(&_allocs_seen, (size_t)0, memory_order_relaxed);\n+    const size_t allocs_seen = Atomic::xchg(&_allocs_seen, (size_t)0, memory_order_relaxed);\n@@ -129,1 +130,1 @@\n-    bool soft_max_changed = check_soft_max_changed();\n+    const bool soft_max_changed = check_soft_max_changed();\n@@ -247,1 +248,1 @@\n-    bool gc_requested = (gc_mode() != none);\n+    const bool gc_requested = (gc_mode() != none);\n@@ -274,1 +275,1 @@\n-      bool was_aging_cycle = heap->is_aging_cycle();\n+      const bool was_aging_cycle = heap->is_aging_cycle();\n@@ -388,1 +389,1 @@\n-    \/\/ Don't wait if there was an allocation failure or another request was made mid-cycle.\n+    \/\/ Wait for ShenandoahControlIntervalMax unless there was an allocation failure or another request was made mid-cycle.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"}]}