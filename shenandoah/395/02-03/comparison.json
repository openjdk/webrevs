{"files":[{"patch":"@@ -174,1 +174,1 @@\n-    bool need_to_finalize_piggyback = false;\n+    bool need_to_finalize_mixed = false;\n@@ -180,14 +180,1 @@\n-      heap->old_generation()->heuristics()->initialize_piggyback_evacs(collection_set,\n-                                                                       evacuated_old_bytes, collected_old_bytes,\n-                                                                       included_old_regions, old_evacuation_reserve,\n-                                                                       old_evacuation_budget, unfragmented_available,\n-                                                                       fragmented_available, excess_fragmented_available);\n-      need_to_finalize_piggyback =heap->old_generation()->heuristics()->prime_collection_set(collection_set,\n-                                                                                             evacuated_old_bytes,\n-                                                                                             collected_old_bytes,\n-                                                                                             included_old_regions,\n-                                                                                             old_evacuation_reserve,\n-                                                                                             old_evacuation_budget,\n-                                                                                             unfragmented_available,\n-                                                                                             fragmented_available,\n-                                                                                             excess_fragmented_available);\n+      need_to_finalize_mixed = heap->old_generation()->heuristics()->prime_collection_set(collection_set);\n@@ -204,11 +191,4 @@\n-      need_to_finalize_piggyback |=\n-        heap->old_generation()->heuristics()->top_off_collection_set(collection_set,\n-                                                                     evacuated_old_bytes, collected_old_bytes,\n-                                                                     included_old_regions, old_evacuation_reserve,\n-                                                                     old_evacuation_budget, unfragmented_available,\n-                                                                     fragmented_available, excess_fragmented_available);\n-      if (need_to_finalize_piggyback) {\n-        heap->old_generation()->heuristics()->finalize_piggyback_evacs(collection_set,\n-                                                                       evacuated_old_bytes, collected_old_bytes,\n-                                                                       included_old_regions, old_evacuation_reserve,\n-                                                                       old_evacuation_budget, unfragmented_available);\n+      need_to_finalize_mixed |=\n+        heap->old_generation()->heuristics()->top_off_collection_set();\n+      if (need_to_finalize_mixed) {\n+        heap->old_generation()->heuristics()->finalize_mixed_evacs();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp","additions":6,"deletions":26,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -96,7 +96,1 @@\n-bool ShenandoahOldHeuristics::add_old_regions_to_cset(ShenandoahCollectionSet* collection_set,\n-                                                      size_t &evacuated_old_bytes, size_t &collected_old_bytes,\n-                                                      uint &included_old_regions, const size_t old_evacuation_reserve,\n-                                                      const size_t old_evacuation_budget,\n-                                                      size_t &unfragmented_available,\n-                                                      size_t &fragmented_available,\n-                                                      size_t &excess_fragmented_available) {\n+bool ShenandoahOldHeuristics::add_old_regions_to_cset() {\n@@ -125,3 +119,3 @@\n-    if ((lost_available > 0) && (excess_fragmented_available > 0)) {\n-      if (lost_available < excess_fragmented_available) {\n-        excess_fragmented_available -= lost_available;\n+    if ((lost_available > 0) && (_excess_fragmented_available > 0)) {\n+      if (lost_available < _excess_fragmented_available) {\n+        _excess_fragmented_available -= lost_available;\n@@ -130,2 +124,2 @@\n-        lost_available -= excess_fragmented_available;\n-        excess_fragmented_available = 0;\n+        lost_available -= _excess_fragmented_available;\n+        _excess_fragmented_available = 0;\n@@ -137,1 +131,0 @@\n-\n@@ -139,3 +132,3 @@\n-    if ((lost_available > 0) && (fragmented_available > 0)) {\n-      if (scaled_loss < fragmented_available) {\n-        fragmented_available -= scaled_loss;\n+    if ((lost_available > 0) && (_fragmented_available > 0)) {\n+      if (scaled_loss < _fragmented_available) {\n+        _fragmented_available -= scaled_loss;\n@@ -145,3 +138,3 @@\n-        scaled_loss -= fragmented_available;\n-        fragmented_delta = -fragmented_available;\n-        fragmented_available = 0;\n+        scaled_loss -= _fragmented_available;\n+        fragmented_delta = -_fragmented_available;\n+        _fragmented_available = 0;\n@@ -152,2 +145,2 @@\n-    if (evacuation_need < unfragmented_available) {\n-      unfragmented_available -= evacuation_need;;\n+    if (evacuation_need < _unfragmented_available) {\n+      _unfragmented_available -= evacuation_need;;\n@@ -155,4 +148,4 @@\n-      if (unfragmented_available > 0) {\n-        evacuation_need -= unfragmented_available;\n-        unfragmented_delta = -unfragmented_available;\n-        unfragmented_available = 0;\n+      if (_unfragmented_available > 0) {\n+        evacuation_need -= _unfragmented_available;\n+        unfragmented_delta = -_unfragmented_available;\n+        _unfragmented_available = 0;\n@@ -161,2 +154,2 @@\n-      if (fragmented_available > evacuation_need) {\n-        fragmented_available -= evacuation_need;\n+      if (_fragmented_available > evacuation_need) {\n+        _fragmented_available -= evacuation_need;\n@@ -165,2 +158,2 @@\n-        fragmented_available -= fragmented_delta;\n-        unfragmented_available -= unfragmented_delta;\n+        _fragmented_available -= fragmented_delta;\n+        _unfragmented_available -= unfragmented_delta;\n@@ -170,4 +163,4 @@\n-    collection_set->add_region(r);\n-    included_old_regions++;\n-    evacuated_old_bytes += live_data_for_evacuation;\n-    collected_old_bytes += r->garbage();\n+    _mixed_evac_cset->add_region(r);\n+    _included_old_regions++;\n+    _evacuated_old_bytes += live_data_for_evacuation;\n+    _collected_old_bytes += r->garbage();\n@@ -179,60 +172,1 @@\n-void ShenandoahOldHeuristics::initialize_piggyback_evacs(ShenandoahCollectionSet* collection_set,\n-                                                         size_t &evacuated_old_bytes, size_t &collected_old_bytes,\n-                                                         uint &included_old_regions, size_t &old_evacuation_reserve,\n-                                                         size_t &old_evacuation_budget,\n-                                                         size_t &unfragmented_available,\n-                                                         size_t &fragmented_available,\n-                                                         size_t &excess_fragmented_available) {\n-  included_old_regions = 0;\n-  evacuated_old_bytes = 0;\n-  collected_old_bytes = 0;\n-\n-  \/\/ If a region is put into the collection set, then this region's free (not yet used) bytes are no longer\n-  \/\/ \"available\" to hold the results of other evacuations.  This may cause a decrease in the remaining amount\n-  \/\/ of memory that can still be evacuated.  We address this by reducing the evacuation budget by the amount\n-  \/\/ of live memory in that region and by the amount of unallocated memory in that region if the evacuation\n-  \/\/ budget is constrained by availability of free memory.\n-  old_evacuation_reserve = _old_generation->get_evacuation_reserve();\n-  old_evacuation_budget = (size_t) ((double) old_evacuation_reserve \/ ShenandoahOldEvacWaste);\n-\n-  \/\/ fragmented_available is the amount of memory within partially consumed old regions that may be required to\n-  \/\/ hold the results of old evacuations.  If all of the memory required by the old evacuation reserve is available\n-  \/\/ in unfragmented regions (unaffiliated old regions), then fragmented_available is zero because we do not need\n-  \/\/ to evacuate into the existing partially consumed old regions.\n-\n-  \/\/ if fragmented_available is non-zero, excess_fragmented_available represents the amount of fragmented memory\n-  \/\/ that is available within old, but is not required to hold the resuilts of old evacuation.  As old-gen regions\n-  \/\/ are added into the collection set, their free memory is subtracted from excess_fragmented_available until the\n-  \/\/ excess is exhausted.  For old-gen regions subsequently added to the collection set, their free memory is\n-  \/\/ subtracted from fragmented_available and from the old_evacuation_budget (since the budget decreases when this\n-  \/\/ fragmented_available memory decreases).  After fragmented_available has been exhausted, any further old regions\n-  \/\/ selected for the cset do not further decrease the old_evacuation_budget because all further evacuation is targeted\n-  \/\/ to unfragmented regions.\n-\n-  size_t unaffiliated_available = _old_generation->free_unaffiliated_regions() * ShenandoahHeapRegion::region_size_bytes();\n-  if (unaffiliated_available > old_evacuation_reserve) {\n-    unfragmented_available = old_evacuation_budget;\n-    fragmented_available = 0;\n-    excess_fragmented_available = 0;\n-  } else {\n-    assert(_old_generation->available() >= old_evacuation_reserve, \"Cannot reserve more than is available\");\n-    size_t affiliated_available = _old_generation->available() - unaffiliated_available;\n-    assert(affiliated_available + unaffiliated_available >= old_evacuation_reserve, \"Budgets do not add up\");\n-    if (affiliated_available + unaffiliated_available > old_evacuation_reserve) {\n-      excess_fragmented_available = (affiliated_available + unaffiliated_available) - old_evacuation_reserve;\n-      affiliated_available -= excess_fragmented_available;\n-    }\n-    fragmented_available = (size_t) ((double) affiliated_available \/ ShenandoahOldEvacWaste);\n-    unfragmented_available = (size_t) ((double) unaffiliated_available \/ ShenandoahOldEvacWaste);\n-  }\n-  log_info(gc)(\"Choose old regions for mixed collection: old evacuation budget: \" SIZE_FORMAT \"%s, candidates: %u\",\n-               byte_size_in_proper_unit(old_evacuation_budget), proper_unit_for_byte_size(old_evacuation_budget),\n-               unprocessed_old_collection_candidates());\n-}\n-\n-\n-bool ShenandoahOldHeuristics::finalize_piggyback_evacs(ShenandoahCollectionSet* collection_set,\n-                                                       const size_t evacuated_old_bytes, size_t collected_old_bytes,\n-                                                       const uint included_old_regions, const size_t old_evacuation_reserve,\n-                                                       const size_t old_evacuation_budget,\n-                                                       const size_t unfragmented_available) {\n+bool ShenandoahOldHeuristics::finalize_mixed_evacs() {\n@@ -243,6 +177,6 @@\n-  decrease_unprocessed_old_collection_candidates_live_memory(evacuated_old_bytes);\n-  if (included_old_regions > 0) {\n-    log_info(gc)(\"Old-gen piggyback evac (\" UINT32_FORMAT \" regions, evacuating \" SIZE_FORMAT \"%s, reclaiming: \" SIZE_FORMAT \"%s)\",\n-                 included_old_regions,\n-                 byte_size_in_proper_unit(evacuated_old_bytes), proper_unit_for_byte_size(evacuated_old_bytes),\n-                 byte_size_in_proper_unit(collected_old_bytes), proper_unit_for_byte_size(collected_old_bytes));\n+  decrease_unprocessed_old_collection_candidates_live_memory(_evacuated_old_bytes);\n+  if (_included_old_regions > 0) {\n+    log_info(gc)(\"Old-gen mixed evac (\" SIZE_FORMAT \" regions, evacuating \" SIZE_FORMAT \"%s, reclaiming: \" SIZE_FORMAT \"%s)\",\n+                 _included_old_regions,\n+                 byte_size_in_proper_unit(_evacuated_old_bytes), proper_unit_for_byte_size(_evacuated_old_bytes),\n+                 byte_size_in_proper_unit(_collected_old_bytes), proper_unit_for_byte_size(_collected_old_bytes));\n@@ -257,1 +191,1 @@\n-  } else if (included_old_regions == 0) {\n+  } else if (_included_old_regions == 0) {\n@@ -269,1 +203,1 @@\n-                   PROPERFMTARGS(old_evacuation_reserve),\n+                   PROPERFMTARGS(_old_evacuation_reserve),\n@@ -273,2 +207,1 @@\n-\n-  return (included_old_regions > 0);\n+  return (_included_old_regions > 0);\n@@ -277,10 +210,48 @@\n-bool ShenandoahOldHeuristics::prime_collection_set(ShenandoahCollectionSet* collection_set,\n-                                                   size_t &evacuated_old_bytes, size_t &collected_old_bytes,\n-                                                   uint &included_old_regions, size_t &old_evacuation_reserve,\n-                                                   size_t &old_evacuation_budget,\n-                                                   size_t &unfragmented_available,\n-                                                   size_t &fragmented_available,\n-                                                   size_t &excess_fragmented_available) {\n-  return add_old_regions_to_cset(collection_set, evacuated_old_bytes, collected_old_bytes, included_old_regions,\n-                                 old_evacuation_reserve, old_evacuation_budget, unfragmented_available, fragmented_available,\n-                                 excess_fragmented_available);\n+bool ShenandoahOldHeuristics::prime_collection_set(ShenandoahCollectionSet* collection_set) {\n+  _mixed_evac_cset = collection_set;\n+  _included_old_regions = 0;\n+  _evacuated_old_bytes = 0;\n+  _collected_old_bytes = 0;\n+\n+  \/\/ If a region is put into the collection set, then this region's free (not yet used) bytes are no longer\n+  \/\/ \"available\" to hold the results of other evacuations.  This may cause a decrease in the remaining amount\n+  \/\/ of memory that can still be evacuated.  We address this by reducing the evacuation budget by the amount\n+  \/\/ of live memory in that region and by the amount of unallocated memory in that region if the evacuation\n+  \/\/ budget is constrained by availability of free memory.\n+  _old_evacuation_reserve = _old_generation->get_evacuation_reserve();\n+  _old_evacuation_budget = (size_t) ((double) _old_evacuation_reserve \/ ShenandoahOldEvacWaste);\n+\n+  \/\/ fragmented_available is the amount of memory within partially consumed old regions that may be required to\n+  \/\/ hold the results of old evacuations.  If all of the memory required by the old evacuation reserve is available\n+  \/\/ in unfragmented regions (unaffiliated old regions), then fragmented_available is zero because we do not need\n+  \/\/ to evacuate into the existing partially consumed old regions.\n+\n+  \/\/ if fragmented_available is non-zero, excess_fragmented_available represents the amount of fragmented memory\n+  \/\/ that is available within old, but is not required to hold the resuilts of old evacuation.  As old-gen regions\n+  \/\/ are added into the collection set, their free memory is subtracted from excess_fragmented_available until the\n+  \/\/ excess is exhausted.  For old-gen regions subsequently added to the collection set, their free memory is\n+  \/\/ subtracted from fragmented_available and from the old_evacuation_budget (since the budget decreases when this\n+  \/\/ fragmented_available memory decreases).  After fragmented_available has been exhausted, any further old regions\n+  \/\/ selected for the cset do not further decrease the old_evacuation_budget because all further evacuation is targeted\n+  \/\/ to unfragmented regions.\n+\n+  size_t unaffiliated_available = _old_generation->free_unaffiliated_regions() * ShenandoahHeapRegion::region_size_bytes();\n+  if (unaffiliated_available > _old_evacuation_reserve) {\n+    _unfragmented_available = _old_evacuation_budget;\n+    _fragmented_available = 0;\n+    _excess_fragmented_available = 0;\n+  } else {\n+    assert(_old_generation->available() >= _old_evacuation_reserve, \"Cannot reserve more than is available\");\n+    size_t affiliated_available = _old_generation->available() - unaffiliated_available;\n+    assert(affiliated_available + unaffiliated_available >= _old_evacuation_reserve, \"Budgets do not add up\");\n+    if (affiliated_available + unaffiliated_available > _old_evacuation_reserve) {\n+      _excess_fragmented_available = (affiliated_available + unaffiliated_available) - _old_evacuation_reserve;\n+      affiliated_available -= _excess_fragmented_available;\n+    }\n+    _fragmented_available = (size_t) ((double) affiliated_available \/ ShenandoahOldEvacWaste);\n+    _unfragmented_available = (size_t) ((double) unaffiliated_available \/ ShenandoahOldEvacWaste);\n+  }\n+  log_info(gc)(\"Choose old regions for mixed collection: old evacuation budget: \" SIZE_FORMAT \"%s, candidates: %u\",\n+               byte_size_in_proper_unit(_old_evacuation_budget), proper_unit_for_byte_size(_old_evacuation_budget),\n+               unprocessed_old_collection_candidates());\n+  return add_old_regions_to_cset();\n@@ -289,7 +260,1 @@\n-bool ShenandoahOldHeuristics::top_off_collection_set(ShenandoahCollectionSet* collection_set,\n-                                                     size_t &evacuated_old_bytes, size_t &collected_old_bytes,\n-                                                     uint &included_old_regions, size_t &old_evacuation_reserve,\n-                                                     size_t &old_evacuation_budget,\n-                                                     size_t &unfragmented_available,\n-                                                     size_t &fragmented_available,\n-                                                     size_t &excess_fragmented_available) {\n+bool ShenandoahOldHeuristics::top_off_collection_set() {\n@@ -301,1 +266,0 @@\n-\n@@ -303,1 +267,1 @@\n-    size_t planned_young_evac = collection_set->get_young_bytes_reserved_for_evacuation();\n+    size_t planned_young_evac = _mixed_evac_cset->get_young_bytes_reserved_for_evacuation();\n@@ -320,2 +284,2 @@\n-      old_evacuation_budget += supplement_after_waste;\n-      unfragmented_available += supplement_after_waste;\n+      _old_evacuation_budget += supplement_after_waste;\n+      _unfragmented_available += supplement_after_waste;\n@@ -326,3 +290,1 @@\n-      return add_old_regions_to_cset(collection_set, evacuated_old_bytes, collected_old_bytes, included_old_regions,\n-                                     old_evacuation_reserve, old_evacuation_budget, unfragmented_available, fragmented_available,\n-                                     excess_fragmented_available);\n+      return add_old_regions_to_cset();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":89,"deletions":127,"binary":false,"changes":216,"status":"modified"},{"patch":"@@ -106,0 +106,11 @@\n+  \/\/ State variables involved in construction of a mixed-evacuation collection set\n+  ShenandoahCollectionSet* _mixed_evac_cset;\n+  size_t _evacuated_old_bytes;\n+  size_t _collected_old_bytes;\n+  size_t _included_old_regions;\n+  size_t _old_evacuation_reserve;\n+  size_t _old_evacuation_budget;\n+  size_t _unfragmented_available;\n+  size_t _fragmented_available;\n+  size_t _excess_fragmented_available;\n+\n@@ -130,8 +141,2 @@\n-\/\/ Return true iff we need to finalize piggyback evacs\n-bool add_old_regions_to_cset(ShenandoahCollectionSet* collection_set,\n-                             size_t &evacuated_old_bytes, size_t &collected_old_bytes,\n-                             uint &included_old_regions, const size_t old_evacuation_reserve,\n-                             const size_t old_evacuation_budget,\n-                             size_t &unfragmented_available,\n-                             size_t &fragmented_available,\n-                             size_t &excess_fragmented_available);\n+  \/\/ Return true iff we need to finalize mixed evacs\n+  bool add_old_regions_to_cset();\n@@ -145,25 +150,2 @@\n-  void initialize_piggyback_evacs(ShenandoahCollectionSet* collection_set,\n-                                  size_t &evacuated_old_bytes, size_t &collected_old_bytes,\n-                                  uint &included_old_regions, size_t &old_evacuation_reserve,\n-                                  size_t &old_evacuation_budget,\n-                                  size_t &unfragmented_available,\n-                                  size_t &fragmented_available,\n-                                  size_t &excess_fragmented_available);\n-\n-  \/\/ Return true iff we need to finalize piggyback evacs\n-  bool prime_collection_set(ShenandoahCollectionSet* set,\n-                            size_t &evacuated_old_bytes, size_t &collected_old_bytes,\n-                            uint &included_old_regions, size_t &old_evacuation_reserve,\n-                            size_t &old_evacuation_budget,\n-                            size_t &unfragmented_available,\n-                            size_t &fragmented_available,\n-                            size_t &excess_fragmented_available);\n-\n-  \/\/ Return true iff we need to finalize piggyback evacs\n-  bool top_off_collection_set(ShenandoahCollectionSet* collection_set,\n-                              size_t &evacuated_old_bytes, size_t &collected_old_bytes,\n-                              uint &included_old_regions, size_t &old_evacuation_reserve,\n-                              size_t &old_evacuation_budget,\n-                              size_t &unfragmented_available,\n-                              size_t &fragmented_available,\n-                              size_t &excess_fragmented_available);\n+  \/\/ Return true iff we need to finalize mixed evacs\n+  bool prime_collection_set(ShenandoahCollectionSet* collection_set);\n@@ -171,0 +153,2 @@\n+  \/\/ Return true iff we need to finalize mixed evacs\n+  bool top_off_collection_set();\n@@ -173,6 +157,1 @@\n-  bool finalize_piggyback_evacs(ShenandoahCollectionSet* collection_set,\n-                                const size_t evacuated_old_bytes, size_t collected_old_bytes,\n-                                const uint included_old_regions, const size_t old_evacuation_reserve,\n-                                const size_t old_evacuation_budget,\n-                                const size_t unfragmented_available);\n-\n+  bool finalize_mixed_evacs();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp","additions":18,"deletions":39,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -201,19 +201,2 @@\n-\n-  size_t evacuated_old_bytes, collected_old_bytes, old_evacuation_reserve, old_evacuation_budget, unfragmented_available,\n-    fragmented_available,excess_fragmented_available;\n-  uint included_old_regions;\n-\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                         evacuated_old_bytes, collected_old_bytes,\n-                                         included_old_regions, old_evacuation_reserve,\n-                                         old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -232,18 +215,2 @@\n-\n-  size_t evacuated_old_bytes, collected_old_bytes, old_evacuation_reserve, old_evacuation_budget, unfragmented_available,\n-    fragmented_available,excess_fragmented_available;\n-  uint included_old_regions;\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -261,18 +228,2 @@\n-\n-  size_t evacuated_old_bytes, collected_old_bytes, old_evacuation_reserve, old_evacuation_budget, unfragmented_available,\n-    fragmented_available,excess_fragmented_available;\n-  uint included_old_regions;\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -300,17 +251,2 @@\n-  size_t evacuated_old_bytes, collected_old_bytes, old_evacuation_reserve, old_evacuation_budget, unfragmented_available,\n-    fragmented_available,excess_fragmented_available;\n-  uint included_old_regions;\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -331,14 +267,2 @@\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -361,18 +285,2 @@\n-\n-  size_t evacuated_old_bytes, collected_old_bytes, old_evacuation_reserve, old_evacuation_budget, unfragmented_available,\n-    fragmented_available,excess_fragmented_available;\n-  uint included_old_regions;\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -386,15 +294,2 @@\n-\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -417,18 +312,2 @@\n-\n-  size_t evacuated_old_bytes, collected_old_bytes, old_evacuation_reserve, old_evacuation_budget, unfragmented_available,\n-    fragmented_available,excess_fragmented_available;\n-  uint included_old_regions;\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -442,15 +321,2 @@\n-\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -474,18 +340,2 @@\n-\n-  size_t evacuated_old_bytes, collected_old_bytes, old_evacuation_reserve, old_evacuation_budget, unfragmented_available,\n-    fragmented_available,excess_fragmented_available;\n-  uint included_old_regions;\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -500,15 +350,2 @@\n-\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n@@ -532,19 +369,2 @@\n-\n-\n-  size_t evacuated_old_bytes, collected_old_bytes, old_evacuation_reserve, old_evacuation_budget, unfragmented_available,\n-    fragmented_available,excess_fragmented_available;\n-  uint included_old_regions;\n-  _heuristics->initialize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available,\n-                                          fragmented_available, excess_fragmented_available);\n-  if (_heuristics->prime_collection_set(_collection_set,\n-                                        evacuated_old_bytes, collected_old_bytes,\n-                                        included_old_regions, old_evacuation_reserve,\n-                                        old_evacuation_budget, unfragmented_available,\n-                                        fragmented_available, excess_fragmented_available)) {\n-    _heuristics->finalize_piggyback_evacs(_collection_set,\n-                                          evacuated_old_bytes, collected_old_bytes,\n-                                          included_old_regions, old_evacuation_reserve,\n-                                          old_evacuation_budget, unfragmented_available);\n+  if (_heuristics->prime_collection_set(_collection_set)) {\n+    _heuristics->finalize_mixed_evacs();\n","filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp","additions":24,"deletions":204,"binary":false,"changes":228,"status":"modified"}]}