[{"commit":{"message":"Merge remote-tracking branch 'origin\/master' into share-collector-reserves"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"},{"filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp"}],"sha":"0e555e815b8e122ce564c44b547cc337faf607a8"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[],"sha":"ff99de75bc713a043fa49e5ae70306bc45138937"},{"commit":{"message":"Cleanups requested by code review"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"}],"sha":"699f40986119bb0ff217ad8d597b9e9f219551e7"},{"commit":{"message":"Simplify code to rebuild free set after abbreviated and old GC"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"}],"sha":"e009c35aaf94888e51e17760b2841fcc1e509060"},{"commit":{"message":"Remove incorrect and unnecessary comments"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"}],"sha":"7f01a7f32cd92628f1b281a5a14f3e8cdc83de04"},{"commit":{"message":"Simplify invocations of freeset rebuild when possible\n\nMost invocations do not need to resize generations between\nprepare_to_rebuild() and finish_rebuild(), so no need to make these two\nindependent invocations."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"105883798abe7153cd84ec86cf09b9aa7cfa67c5"},{"commit":{"message":"Better comments as requested by code review"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"}],"sha":"02ea5660e7faa8471de646985b464fc94918ccde"},{"commit":{"message":"Improve comment"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"21a5d328e35991bd8193900fb5e87bb344946fd8"},{"commit":{"message":"Remove unreferenced variables"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"}],"sha":"ee2ab01dcc37db71c959d30c836324b3f29fd24a"},{"commit":{"message":"Simplify arguments by using instance variables in ShenandoahOldHeuristics"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp"}],"sha":"406d347bde8ef481440e5a8436eed750132b036a"},{"commit":{"message":"Use mixed evac rather than piggyback to describe old-gen evacuations"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"}],"sha":"d05885ae8abf2a9c8ab9d3a8a02c102071b131dc"},{"commit":{"message":"Remove declaration of unused variables"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"}],"sha":"3e38c8a33c76ad9d8cc4be74ac35e8c4df9f2e97"},{"commit":{"message":"Remove unreferenced local variable"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"}],"sha":"33eacea7a90523f55a8b25a533101fb06b33d323"},{"commit":{"message":"Fix whitespace"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"9e148263d367a4ef31bd180f01ffdf1423c2db56"},{"commit":{"message":"Remove debug instrumentation and deprecated code"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"34704e4b8e6ab37744523d78f71e3e1c2e29fc5b"},{"commit":{"message":"Turn off instrumentation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"e5c1b69d53585d6a84f091101b6be20830442a19"},{"commit":{"message":"Verifier should only count non-trashed committed regions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"c73e723c6faf042ba503beb880f20dbc4865e1f4"},{"commit":{"message":"Ignore generation soft capacities when adjusting generation sizes\n\nSoft capacities are established, for example, by setting NewRatio or New size on the\nJVM command line.  GenShen, for now at least, does not honor these settings.  Better\nperformance is obtained by allowing GenShen to expand and shrink generation sizes\naccording to application behavior.\n\nThis commit also tidies up various aspects of the implementation to make adjustments\nto generation sizing more consistent:\n\n1. ShenandoahGlobalHeuristics::choose_global_collection_set(): share the reserves\n   between young and old collection to maximize evacuation of garbage-first\n   regions, regardless of whether most garbage is found in old or young\n2. ShenandoahConcurrentGC::entry_final_roots(): do not balance generations before\n   invoking finish_rebuild() because finish_rebuild will balance generations.\n3. ShenandoahFreeSet::flip_to_old_gc(): invoke force_transfer_to_young() instead\n   of transfer_to_young() so we can override soft-capacity limits\n4. ShenandoahFullGC::phase5_epilog(): Do not invoke compute_balances() or\n   balance_generations_after_rebuilding_free_set().  Allow the free-set\n   rebuild() implementation to do this work in a more consistent fashion.\n5. ShenandoahGeneration::adjust_evacuation_budgets(): replace transfer_to_youn()\n   with force_transfer_to_young() to avoid enforcement of soft capacity limits.\n6. ShenandoahGenerationSizer::force_transfer_to_young(): new method\n7. ShenandoahGenerationalFullGC::balance_generations_after_gc(): establish\n   reserves() so that free-set rebuild() can adjust balance.  Do not redundantly\n   force transfer of regions here.\n8. ShenandoahGenerationalFullGC::balance_generations_after_rebuilding_free_set():\n   deprecate this method.\n9. ShenandoahGenerationalFullGC::compute_balances(): deprecate this method.\n10. ShenandoahGenerationaStatsClosure::validate_usage() (part of Shenandoah\n    Verification): add consistency check for generation capacities"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"9ea1056a8124d9712076ccf429c9bc9e8b1bd22c"},{"commit":{"message":"Fix budgeting error during freeset rebuild\n\nLimit the size of old-gen by memory available in the OldCollector set\nfollowing find_regions_with_alloc_capacity() (rather than limiting the\nsize of old-gen by the total capacity of the OldCollector set, which\nincludes used memory)."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"c2dda1bbf3565ce4fb41c913560f93fb442754f3"},{"commit":{"message":"Fix whitespace"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"e69f9ac0b89a257810408a4752d794dcdca7f734"},{"commit":{"message":"Merge remote-tracking branch 'origin\/master' into share-collector-reserves"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"6e851cf3a17d5d745176a878e8ea88e3e4aec7c0"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"c076aa37a7e9b36c3b96cb3f1d1390ae356a8c09"},{"commit":{"message":"Fix multiple bugs detected after merge from master\n\n1. Some debug instrumetnation which will eventually be removed\n2. Disable assert_bounds for trashed OLD regions (until after they are recycled)\n3. When a trashed old region is recycled, adjust the old empty interval immediately\n   if assertions are enabled and the region is still in the OldCollector partition\n4. When rebuild freeset transfers regions between OLD and YOUNG, log the transfer\n   and clear the region balance so we do not redundantly adjust repeat the transfer\n5. In compute_young_and_old_reserves(), adjust young_available by xfer_bytes\n   if regions are being transferred between young and old generations"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"884c48ebdaf1b23e0a5481e74de5a004a03ffce9"},{"commit":{"message":"Do not top-off beyond available unaffiliated young regions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"}],"sha":"6cef4b407e71589d509c9380dfceecf6c8fe3f16"},{"commit":{"message":"Fix up some assertions\n\nAssertions should not have side effects.  Original assertion code was calling a function\nthat would cause adjustments to the partition bounds for empty regions."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"b61679a0740de52fce5d2bdd26314f0fe72acd4b"},{"commit":{"message":"Rebuild free set consistently following abbreviated and old mark cycles"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"}],"sha":"7ab343b9eb8f254e83eadc97124a00535c407fa6"},{"commit":{"message":"Reset live_bytes_in_unprocessed_candidates when abandon_collection_candidates()"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"}],"sha":"04d9c08cdb1bdc49cb04f47f090389c79157da3f"},{"commit":{"message":"Include old_cset regions in old_available when computing reserves"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"1378ef6b80bfcc83d023839063bc404c47ff6c4a"},{"commit":{"message":"reserve until available in partition is sufficient\n\nThis fixes a bug.  Previously, we had reserved only until max_capacity\nexceeded the requested reserve.  If there is memory in use within the\npartition, max_capacity will be greater than available."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"3f514af759848ff9df4f0812d1f5660eebd4e7af"},{"commit":{"message":"Remove reset_evacuation_reserves"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"}],"sha":"52a3b36982da83c74f436ef5038ab377d5f75d37"},{"commit":{"message":"Fix TestGCOldWithShenandoah#generational regression"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"}],"sha":"2b3afe7d046cc76216055c2c77fa3b843385af3c"},{"commit":{"message":"Merge remote-tracking branch 'origin\/master' into share-collector-reserves"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"}],"sha":"60a51cbf146152fcfb7f2647fa6d039fcc4b040a"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"25ee3f5747723840bd032282ece2e34362a8ba30"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"}],"sha":"56567b04abc2d31f9fd78896d15597f1b7533f16"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"5312029ca0625cddfac9fd80014b6ee9555c3d51"},{"commit":{"message":"Do not access young_gen or old_gen in non-generational mode\n\nAfter merge from openjdk\/shenandoah, some code on this branch was no\nlonger valid, resulting in assertion errors or SIGSEGV in release\nbuilds."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"54df079971d58d909ae67ccfb6cacac564aedf0d"},{"commit":{"message":"Fix argument list after manual merge conflict resolution"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"e1aa848b477ac7c0b872c691b432e30e5e8249c3"},{"commit":{"message":"Merge branch 'master' of https:\/\/git.openjdk.org\/shenandoah into share-collector-reserves"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationSizer.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"d02da9c1cb91054e372e83268aef56bd17dca059"},{"commit":{"message":"Fix white space"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"}],"sha":"39e02f17d5a629a928e78538d40f98e351beb0cd"},{"commit":{"message":"Adjust collector reserves downward when resources are insufficient\n\nPreviously, we reserved less than the request without updating the\nrequest size.  This resulted in assertion failures at the start of next\nevacuation, because reserved did not equal requested."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"c407dbd47e22f0376a7f6c3f56c8a80019d4b9c0"},{"commit":{"message":"A few more fixes to computation of old-gen sizes at end of gc"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"}],"sha":"4dcbdcebb154a2a535d465bcb95f6ebf85541cb7"},{"commit":{"message":"Fix over-zealous assertion and broken code surrounding it"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"}],"sha":"1c593941ea6a6f0efb31c5dcf1a267ea251e3ae4"},{"commit":{"message":"Fail faster with OOME if alloc fails following full gc\n\nOtherwise, we can find ourselves in an infinite retry loop, where fullgc\ncontinues to \"make progress\", but the progress is not sufficient to\nallow the allocation request to be successful."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"eb0ec643ccbc941d0ca7d32236ac187c98b6075a"},{"commit":{"message":"Set promo_reserve to max of existing fragmented old-gen and promo need\n\nPromo need is amount of live data in regions that have reached tenure\nage."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"}],"sha":"f87a5496f293b1f731a3a5a0eaec8e1314b30618"},{"commit":{"message":"Always allow promotions into fragmented old-gen\n\nBy accident, the previous implementation only allowed this if we\nhappened to be doing a mixed evacuation."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"}],"sha":"85a0d90f605ee1fafe496e2c06e046714a9409a3"},{"commit":{"message":"Performance improvements"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"f3c6e09d5848309046e66086e6b2ae1ff5dd5592"},{"commit":{"message":"Further adjustments to default Old\/Young Ratio"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"10d992dd3947077dc65b1df415027f9db0f8cf97"},{"commit":{"message":"Update default value and comment"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"786b27f0d681aec7d6dcc9bcf1fc10ec44c2b563"},{"commit":{"message":"Remove over-zealous assert and replace with comment"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"}],"sha":"1cd110576881adffb670d7c881923f31fa856ff6"},{"commit":{"message":"Change default old-gen ratio and comment"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"f90ea26e17ddc365711f0f8a82b5913fc02feb0f"},{"commit":{"message":"Change default percentage of old-gen evacuation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"8fbb0f5e6936b8cbae42bcb11400ff54810dd679"},{"commit":{"message":"Top off old evacuation regions for mixed evacuations"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp"}],"sha":"358d2f747f8aada30dea2a68eff2c2501885354c"},{"commit":{"message":"Merge remote-tracking branch 'origin\/master' into share-collector-reserves"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"6f5706812b0158dd1a06158f381b703b6667b03b"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"118f5b102dec0bdea3dbddf426d0e341be34d8e6"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"84f27d756df23f20afc295b4a192b8c74abf3cfa"},{"commit":{"message":"Remove debug instrumentation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"a57805fd07f11202c4a2bca24b1d7a6fca10d606"},{"commit":{"message":"Change default ratio of old vs young evacuation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"d32f4282f91cf6440a79bfcebde3d2ae410d7426"},{"commit":{"message":"Resolve regressions with TestThreadFailure"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"}],"sha":"fb259d30fe8f7ff6dac7992ab2f847f649b1548e"},{"commit":{"message":"Do not plan to xfer Collector reserves unless they are unaffiliated"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"}],"sha":"669be0b3eb96cfee4f61e8b57e2edc125a0cee78"},{"commit":{"message":"Fixup some conflicts introduced by merge from upstream"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"}],"sha":"fecd9a07c881a69b7232a1ca52b1fdc608d0cbad"},{"commit":{"message":"Merge remote-tracking branch 'origin\/master' into share-collector-reserves"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"44c0c418a662ad750a3b945eb1849ada67642732"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"bac08f0cc4ab2995b4dc2aff36ce893e97d2df7b"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp"}],"sha":"141fec1279221ca5f3ef125945bb035a614dbdf8"},{"commit":{"message":"Revert \"Change behavior of max_old and min_old\"\n\nThis reverts commit d88130000c764dacf08ec27723132dd2a3d968de."},"files":[],"sha":"c2cb1b768f18b6ec529dd63c5982b0e9f7e2c078"},{"commit":{"message":"Change behavior of max_old and min_old"},"files":[],"sha":"d88130000c764dacf08ec27723132dd2a3d968de"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp"}],"sha":"a43675a4ce71b2cf7d493891a0c9d4d955448f00"},{"commit":{"message":"Make satb-mode Info logging less verbose"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"}],"sha":"28a382bb90c4844e4899dd507a347619b6d74cba"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"}],"sha":"39c588529e805d47cfa83bd6e6926851288b2dd4"},{"commit":{"message":"Merge branch 'openjdk:master' into master"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"941d8aa9f0a52339fa561782c9ad56366e793e2b"},{"commit":{"message":"Revert \"Round LAB sizes down rather than up to force alignment\"\n\nThis reverts commit 99cce53b3e6e51cee2ed71e0b7c7caa016a8ed4f."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"11b26bb8ba77374eca8327fee956b575b294cbf3"},{"commit":{"message":"Round LAB sizes down rather than up to force alignment\n\nWhen we round up, we introduce the risk that the new size exceeds the\nmaximum LAB size, resulting in an assertion error."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"99cce53b3e6e51cee2ed71e0b7c7caa016a8ed4f"},{"commit":{"message":"Revert \"Remove dead code for inelastic plabs\"\n\nThis reverts commit 7bb1d386e00c41bde3a279b8ab2fc3a05ec1bd7f."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"8bc436704e90dfd9cb31b3bdb126a674708eca4e"},{"commit":{"message":"Remove dead code for inelastic plabs"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"7bb1d386e00c41bde3a279b8ab2fc3a05ec1bd7f"},{"commit":{"message":"Make evacuation reserve quantities always valid\n\nIn the previous implementaiton, reserve quantities were only sometimes\nestablished."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"f0b15acb1d8c936255a05536c2f9e6935f6a0347"},{"commit":{"message":"Fix multiple errors in impelmentation of freeset rebuild\n\n1. Always require that evacuation reserve quantities be established\n   before rebuilding free set\n\n2. Establish evacuation reserve quantities before initial rebuild of\n   free set\n\n3. Fix the calucation of old reserves during adjust generation sizes\n   for next gc cycle"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"}],"sha":"ce5d335db43a24a3da9fba408a719d757dd4cca3"},{"commit":{"message":"Turn off debug instrumentation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"c8e45554496c3a5fae5863c564d5b67c30826861"},{"commit":{"message":"Reduce default value of ShenandoahOldEvacRatioPercent\n\nGiven that mixed evacuation will sometimes borrow up to this amount of\nmemory from the young evacuation reserve for old evacuations, we reduce\nthe default value to reduce the impact on normal young GC."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"6509bde10000af475692e794844aa2eec5252c64"},{"commit":{"message":"Refine calculation of max_old_reserve"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"a794ca1e8aa24bf00e38250fad1b39c71197b13f"},{"commit":{"message":"Fix merge conflicts"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"c2cc3f69b60e5a5e41813658c02aed02bd975de6"},{"commit":{"message":"Allow old-gen to expand when mutator memory is available"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"d91bcefecdcaa7c4cd570e13ba8f54519e94273b"},{"commit":{"message":"Refinements and instrumentation to diagnose misbehavior"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"dd2a179c287ec00704b542d9f15d23c31e7d26c6"},{"commit":{"message":"Share reserves between Young Collector and Old Collector"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"c933d758231cf79989682898c3b4baf601d7788e"}]