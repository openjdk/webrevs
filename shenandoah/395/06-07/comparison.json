{"files":[{"patch":"@@ -363,5 +363,1 @@\n-    size_t young_cset_regions, old_cset_regions;\n-    size_t first_old, last_old, num_old;\n-    heap->free_set()->prepare_to_rebuild(young_cset_regions, old_cset_regions, first_old, last_old, num_old);\n-    assert((young_cset_regions == 0) && (old_cset_regions == 0), \"No ongoing evacuation after abbreviated cycle\");\n-    heap->free_set()->finish_rebuild(0, 0, num_old);\n+    heap->free_set()->rebuild();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1588,0 +1588,6 @@\n+void ShenandoahFreeSet::rebuild() {\n+  size_t young_cset_regions, old_cset_regions, first_old_region, last_old_region, old_region_count;\n+  prepare_to_rebuild(young_cset_regions, old_cset_regions, first_old_region, last_old_region, old_region_count);\n+  finish_rebuild(young_cset_regions, old_cset_regions, old_region_count);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -379,0 +379,6 @@\n+  \/\/ Rebuild the free set.  This combines the effects of prepare_to_rebuild() and finish_rebuild() with no intervening\n+  \/\/ efforts to rebalance generation sizes.  When the free set is rebuild, we reserve sufficient memory within the\n+  \/\/ collector partition (and, for generational mode, the old collector partition) based on the amount reserved\n+  \/\/ by heuristics to support the next planned evacuation effort.\n+  void rebuild();\n+\n@@ -390,1 +396,1 @@\n-   \/\/ hold the results of evacuating to young-gen and to old-gen.  These quantities, stored in reserves for their,\n+  \/\/ hold the results of evacuating to young-gen and to old-gen.  These quantities, stored in reserves for their,\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1180,4 +1180,0 @@\n-    size_t young_cset_regions, old_cset_regions;\n-    size_t first_old, last_old, num_old;\n-    heap->free_set()->prepare_to_rebuild(young_cset_regions, old_cset_regions, first_old, last_old, num_old);\n-\n@@ -1188,2 +1184,1 @@\n-    heap->free_set()->finish_rebuild(young_cset_regions, old_cset_regions, num_old);\n-\n+    heap->free_set()->rebuild();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -746,7 +746,1 @@\n-    size_t young_cset_regions, old_cset_regions;\n-\n-    \/\/ We are preparing for evacuation.  At this time, we ignore cset region tallies.\n-    size_t first_old, last_old, num_old;\n-    heap->free_set()->prepare_to_rebuild(young_cset_regions, old_cset_regions, first_old, last_old, num_old);\n-    \/\/ Free set construction uses reserve quantities, because they are known to be valid here\n-    heap->free_set()->finish_rebuild(young_cset_regions, old_cset_regions, num_old);\n+    heap->free_set()->rebuild();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -413,6 +413,1 @@\n-    size_t young_cset_regions, old_cset_regions;\n-\n-    \/\/ We are initializing free set.  We ignore cset region tallies.\n-    size_t first_old, last_old, num_old;\n-    _free_set->prepare_to_rebuild(young_cset_regions, old_cset_regions, first_old, last_old, num_old);\n-    _free_set->finish_rebuild(young_cset_regions, old_cset_regions, num_old);\n+    _free_set->rebuild();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"}]}