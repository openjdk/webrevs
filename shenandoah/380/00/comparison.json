{"files":[{"patch":"@@ -1,74 +0,0 @@\n-   \/*\n-    * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n-    * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-    *\n-    * This code is free software; you can redistribute it and\/or modify it\n-    * under the terms of the GNU General Public License version 2 only, as\n-    * published by the Free Software Foundation.\n-    *\n-    * This code is distributed in the hope that it will be useful, but WITHOUT\n-    * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-    * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-    * version 2 for more details (a copy is included in the LICENSE file that\n-    * accompanied this code).\n-    *\n-    * You should have received a copy of the GNU General Public License version\n-    * 2 along with this work; if not, write to the Free Software Foundation,\n-    * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-    *\n-    * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-    * or visit www.oracle.com if you need additional information or have any\n-    * questions.\n-    *\n-    *\/\n-\n-   \/*\n-    * @test id=rotation\n-    * @requires vm.gc.Shenandoah\n-    *\n-    * @run main\/othervm -Xmx1g -Xms1g -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions\n-    *      -XX:+ShenandoahRegionSampling -XX:+ShenandoahRegionSampling\n-    *      -Xlog:gc+region=trace:region-snapshots-%p.log::filesize=100,filecount=3\n-    *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=adaptive\n-    *      TestShenandoahLogRotation\n-    *\/\n-\n-   import java.io.File;\n-   import java.util.Arrays;\n-   import java.nio.file.Files;\n-\n-\n-\n-   public class TestShenandoahLogRotation {\n-\n-       static final long TARGET_MB = Long.getLong(\"target\", 1);\n-\n-       static volatile Object sink;\n-\n-       public static void main(String[] args) throws Exception {\n-           long count = TARGET_MB * 1024 * 1024 \/ 16;\n-           for (long c = 0; c < count; c++) {\n-               sink = new Object();\n-               Thread.sleep(1);\n-           }\n-\n-           File directory = new File(\".\");\n-           File[] files = directory.listFiles((dir, name) -> name.startsWith(\"region-snapshots\"));\n-           System.out.println(Arrays.toString(files));\n-           int smallFilesNumber = 0;\n-           for (File file : files) {\n-               if (file.length() < 100) {\n-                   smallFilesNumber++;\n-               }\n-           }\n-           \/\/ Expect one more log file since the ShenandoahLogFileCount doesn't include the active log file\n-           int expectedNumberOfFiles = 4;\n-           if (files.length != expectedNumberOfFiles) {\n-               throw new Error(\"There are \" + files.length + \" logs instead of the expected \" + expectedNumberOfFiles + \" \" + files[0].getAbsolutePath());\n-           }\n-           if (smallFilesNumber > 1) {\n-               throw new Error(\"There should maximum one log with size < \" + 100 + \"B\");\n-           }\n-       }\n-\n-   }\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestShenandoahLogRotation.java","additions":0,"deletions":74,"binary":false,"changes":74,"status":"deleted"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test id=rotation\n+ * @requires vm.gc.Shenandoah\n+ *\n+ * @run main\/othervm -Xmx1g -Xms1g -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions\n+ *      -XX:+ShenandoahRegionSampling\n+ *      -Xlog:gc+region=trace:region-snapshots-%p.log::filesize=100,filecount=3\n+ *      -XX:+UseShenandoahGC\n+ *      TestShenandoahRegionLogging\n+ *\/\n+import java.io.File;\n+import java.util.Arrays;\n+import java.nio.file.Files;\n+\n+public class TestShenandoahRegionLogging {\n+    private static final long TARGET_MB = Long.getLong(\"target\", 1);\n+    private static Object sink;\n+\n+    public static void main(String[] args) throws Exception {\n+        long count = TARGET_MB * 1024 * 1024 \/ 16;\n+        for (long c = 0; c < count; c++) {\n+            sink = new Object();\n+            Thread.sleep(1);\n+        }\n+        File directory = new File(\".\");\n+        File[] files = directory.listFiles((dir, name) -> name.startsWith(\"region-snapshots\"));\n+\n+        \/\/ Expect one or more log files when region logging is enabled\n+        if (files.length == 0) {\n+            throw new Error(\"Expected at least one log file for region sampling data.\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestShenandoahRegionLogging.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}