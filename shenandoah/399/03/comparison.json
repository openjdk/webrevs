{"files":[{"patch":"@@ -28,1 +28,1 @@\n-# \n+#\n@@ -57,1 +57,1 @@\n-\tAC_PATH_TOOL([PKG_CONFIG], [pkg-config])\n+        AC_PATH_TOOL([PKG_CONFIG], [pkg-config])\n@@ -60,9 +60,9 @@\n-\t_pkg_min_version=m4_default([$1], [0.9.0])\n-\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n-\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n-\t\tAC_MSG_RESULT([yes])\n-\telse\n-\t\tAC_MSG_RESULT([no])\n-\t\tPKG_CONFIG=\"\"\n-\tfi\n-\t\t\n+        _pkg_min_version=m4_default([$1], [0.9.0])\n+        AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n+        if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n+                AC_MSG_RESULT([yes])\n+        else\n+                AC_MSG_RESULT([no])\n+                PKG_CONFIG=\"\"\n+        fi\n+\n@@ -100,1 +100,1 @@\n-\t\t     [pkg_failed=yes])\n+                     [pkg_failed=yes])\n@@ -146,3 +146,3 @@\n-\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors \"$2\" 2>&1`\n-        else \n-\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors \"$2\" 2>&1`\n+                $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors \"$2\" 2>&1`\n+        else\n+                $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors \"$2\" 2>&1`\n@@ -150,2 +150,2 @@\n-\t# Put the nasty error message in config.log where it belongs\n-\techo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n+        # Put the nasty error message in config.log where it belongs\n+        echo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n@@ -153,1 +153,1 @@\n-\tifelse([$4], , [AC_MSG_ERROR(dnl\n+        ifelse([$4], , [AC_MSG_ERROR(dnl\n@@ -163,1 +163,1 @@\n-\t\t[AC_MSG_RESULT([no])\n+                [AC_MSG_RESULT([no])\n@@ -166,1 +166,1 @@\n-\tifelse([$4], , [AC_MSG_FAILURE(dnl\n+        ifelse([$4], , [AC_MSG_FAILURE(dnl\n@@ -174,1 +174,1 @@\n-\t\t[$4])\n+                [$4])\n@@ -176,2 +176,2 @@\n-\t$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n-\t$1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n+        $1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n+        $1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n@@ -179,1 +179,1 @@\n-\tifelse([$3], , :, [$3])\n+        ifelse([$3], , :, [$3])\n","filename":"make\/autoconf\/build-aux\/pkg.m4","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,0 +155,4 @@\n+  ifneq ($$(findstring $$(LOG_LEVEL), debug trace),)\n+    SHELL := $$(SHELL) -x\n+  endif\n+\n","filename":"make\/common\/MakeBase.gmk","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,3 +26,5 @@\n-# When you read this source. Remember that $(sort ...) has the side effect\n-# of removing duplicates. It is actually this side effect that is\n-# desired whenever sort is used below!\n+################################################################################\n+# This is the top-level entry point for our native compilation and linking.\n+# It contains the SetupNativeCompilation macro, but is supported by helper\n+# macros in the make\/common\/native directory.\n+################################################################################\n@@ -37,243 +39,6 @@\n-################################################################################\n-# Create exported symbols file for static libraries\n-################################################################################\n-\n-# get the exported symbols from mapfiles and if there\n-# is no mapfile, get them from the archive\n-define GetSymbols\n-  $(RM) $$(@D)\/$$(basename $$(@F)).symbols; \\\n-  if [ ! -z $$($1_MAPFILE) -a -e $$($1_MAPFILE) ]; then \\\n-    $(ECHO) \"Getting symbols from mapfile $$($1_MAPFILE)\"; \\\n-    $(AWK) '\/global:\/','\/local:\/' $$($1_MAPFILE) | \\\n-        $(SED) -e 's\/#.*\/\/;s\/global:\/\/;s\/local:\/\/;s\/\\;\/\/;s\/^[ \t]*\/_\/;\/^_$$$$\/d' | \\\n-        $(EGREP) -v \"JNI_OnLoad|JNI_OnUnload|Agent_OnLoad|Agent_OnUnload|Agent_OnAttach\" > \\\n-        $$(@D)\/$$(basename $$(@F)).symbols || true; \\\n-    $(NM) $(NMFLAGS) $$($1_TARGET) | $(GREP)  \" T \" | \\\n-        $(EGREP) \"JNI_OnLoad|JNI_OnUnload|Agent_OnLoad|Agent_OnUnload|Agent_OnAttach\" | \\\n-        $(CUT) -d ' ' -f 3 >>  $$(@D)\/$$(basename $$(@F)).symbols || true;\\\n-  else \\\n-    $(ECHO) \"Getting symbols from nm\"; \\\n-    $(NM) $(NMFLAGS) -m $$($1_TARGET) | $(GREP)  \"__TEXT\" | \\\n-        $(EGREP) -v \"non-external|private extern|__TEXT,__eh_frame\" | \\\n-        $(SED) -e  's\/.* \/\/' > $$(@D)\/$$(basename $$(@F)).symbols; \\\n-  fi\n-endef\n-\n-################################################################################\n-# Creates a recipe that creates a compile_commands.json fragment. Remove any\n-# occurrences of FIXPATH programs from the command to show the actual invocation.\n-#\n-# Param 1: Name of file to create\n-# Param 2: Working directory\n-# Param 3: Source file\n-# Param 4: Compile command\n-################################################################################\n-define WriteCompileCommandsFragment\n-  $(call LogInfo, Creating compile commands fragment for $(notdir $3))\n-  $(call MakeDir, $(dir $1))\n-  $(call WriteFile,{ \\\n-      \"directory\": \"$(strip $(call FixPath, $2))\"$(COMMA) \\\n-      \"file\": \"$(strip $(call FixPath, $3))\"$(COMMA) \\\n-      \"command\": \"$(strip $(subst $(DQUOTE),\\$(DQUOTE),$(subst \\,\\\\,\\\n-        $(subst $(FIXPATH),,$(call FixPath, $4)))))\" \\\n-    }$(COMMA), \\\n-    $1)\n-endef\n-\n-################################################################################\n-# Define a native toolchain configuration that can be used by\n-# SetupNativeCompilation calls\n-#\n-# Parameter 1 is the name of the toolchain definition\n-#\n-# Remaining parameters are named arguments:\n-#   EXTENDS - Optional parent definition to get defaults from\n-#   CC - The C compiler\n-#   CXX - The C++ compiler\n-#   LD - The Linker\n-#   AR - Static linker\n-#   AS - Assembler\n-#   MT - Windows MT tool\n-#   RC - Windows RC tool\n-#   OBJCOPY - The objcopy tool for debug symbol handling\n-#   STRIP - The tool to use for stripping debug symbols\n-#   SYSROOT_CFLAGS - Compiler flags for using the specific sysroot\n-#   SYSROOT_LDFLAGS - Linker flags for using the specific sysroot\n-DefineNativeToolchain = $(NamedParamsMacroTemplate)\n-define DefineNativeToolchainBody\n-  # If extending another definition, get default values from that,\n-  # otherwise, nothing more needs to be done as variable assignments\n-  # already happened in NamedParamsMacroTemplate.\n-  ifneq ($$($1_EXTENDS), )\n-    $$(call SetIfEmpty, $1_CC, $$($$($1_EXTENDS)_CC))\n-    $$(call SetIfEmpty, $1_CXX, $$($$($1_EXTENDS)_CXX))\n-    $$(call SetIfEmpty, $1_LD, $$($$($1_EXTENDS)_LD))\n-    $$(call SetIfEmpty, $1_AR, $$($$($1_EXTENDS)_AR))\n-    $$(call SetIfEmpty, $1_AS, $$($$($1_EXTENDS)_AS))\n-    $$(call SetIfEmpty, $1_MT, $$($$($1_EXTENDS)_MT))\n-    $$(call SetIfEmpty, $1_RC, $$($$($1_EXTENDS)_RC))\n-    $$(call SetIfEmpty, $1_OBJCOPY, $$($$($1_EXTENDS)_OBJCOPY))\n-    $$(call SetIfEmpty, $1_STRIP, $$($$($1_EXTENDS)_STRIP))\n-    $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $$($$($1_EXTENDS)_SYSROOT_CFLAGS))\n-    $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $$($$($1_EXTENDS)_SYSROOT_LDFLAGS))\n-  endif\n-endef\n-\n-# Create a default toolchain with the main compiler and linker\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_DEFAULT, \\\n-    CC := $(CC), \\\n-    CXX := $(CXX), \\\n-    LD := $(LD), \\\n-    AR := $(AR), \\\n-    AS := $(AS), \\\n-    MT := $(MT), \\\n-    RC := $(RC), \\\n-    OBJCOPY := $(OBJCOPY), \\\n-    STRIP := $(STRIP), \\\n-    SYSROOT_CFLAGS := $(SYSROOT_CFLAGS), \\\n-    SYSROOT_LDFLAGS := $(SYSROOT_LDFLAGS), \\\n-))\n-\n-# Create a toolchain where linking is done with the C++ linker\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_LINK_CXX, \\\n-    EXTENDS := TOOLCHAIN_DEFAULT, \\\n-    LD := $(LDCXX), \\\n-))\n-\n-# Create a toolchain with the BUILD compiler, used for build tools that\n-# are to be run during the build.\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_BUILD, \\\n-    CC := $(BUILD_CC), \\\n-    CXX := $(BUILD_CXX), \\\n-    LD := $(BUILD_LD), \\\n-    AR := $(BUILD_AR), \\\n-    AS := $(BUILD_AS), \\\n-    OBJCOPY := $(BUILD_OBJCOPY), \\\n-    STRIP := $(BUILD_STRIP), \\\n-    SYSROOT_CFLAGS := $(BUILD_SYSROOT_CFLAGS), \\\n-    SYSROOT_LDFLAGS := $(BUILD_SYSROOT_LDFLAGS), \\\n-))\n-\n-# BUILD toolchain with the C++ linker\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_BUILD_LINK_CXX, \\\n-    EXTENDS := TOOLCHAIN_BUILD, \\\n-    LD := $(BUILD_LDCXX), \\\n-))\n-\n-################################################################################\n-\n-# Extensions of files handled by this macro.\n-NATIVE_SOURCE_EXTENSIONS := %.S %.c %.cpp %.cc %.m %.mm\n-\n-# Replaces native source extensions with the object file extension in a string.\n-# Param 1: the string containing source file names with extensions\n-# The surrounding strip is needed to keep additional whitespace out\n-define replace_with_obj_extension\n-$(strip \\\n-  $(foreach extension, $(NATIVE_SOURCE_EXTENSIONS), \\\n-      $(patsubst $(extension),%$(OBJ_SUFFIX), $(filter $(extension), $1))) \\\n-)\n-endef\n-\n-# This pattern is used to transform the output of the microsoft CL compiler\n-# into a make syntax dependency file (.d)\n-WINDOWS_SHOWINCLUDE_SED_PATTERN := \\\n-    -e '\/^Note: including file:\/!d' \\\n-    -e 's|Note: including file: *||' \\\n-    -e 's|\\r||g' \\\n-    -e 's|\\\\|\/|g' \\\n-    -e 's|^\\([a-zA-Z]\\):|$(WINENV_PREFIX)\/\\1|g' \\\n-    -e '\\|$(TOPDIR)|I !d' \\\n-    -e 's|$$$$| \\\\|g' \\\n-    #\n-\n-# This pattern is used to transform a dependency file (.d) to a list\n-# of make targets for dependent files (.d.targets)\n-DEPENDENCY_TARGET_SED_PATTERN := \\\n-    -e 's\/\\#.*\/\/' \\\n-    -e 's\/^[^:]*: *\/\/' \\\n-    -e 's\/ *\\\\$$$$\/\/' \\\n-    -e 's\/^[\t ]*\/\/' \\\n-    -e '\/^$$$$\/ d' \\\n-    -e 's\/$$$$\/ :\/' \\\n-    #\n-\n-################################################################################\n-# When absolute paths are not allowed in the output, and the compiler does not\n-# support any options to avoid it, we need to rewrite compile commands to use\n-# relative paths. By doing this, the __FILE__ macro will resolve to relative\n-# paths. The relevant input paths on the command line are the -I flags and the\n-# path to the source file itself.\n-#\n-# The macro MakeCommandRelative is used to rewrite the command line like this:\n-# 'CD $(WORKSPACE_ROOT) && <cmd>'\n-# and changes all paths in cmd to be relative to the workspace root. This only\n-# works properly if the build dir is inside the workspace root. If it's not,\n-# relative paths are still calculated, but depending on the distance between the\n-# dirs, paths in the build dir may end up as essentially absolute anyway.\n-#\n-# The fix-deps-file macro is used to adjust the contents of the generated make\n-# dependency files to contain paths compatible with make.\n-#\n-REWRITE_PATHS_RELATIVE = false\n-ifeq ($(ALLOW_ABSOLUTE_PATHS_IN_OUTPUT)-$(FILE_MACRO_CFLAGS), false-)\n-  REWRITE_PATHS_RELATIVE = true\n-endif\n-\n-# CCACHE_BASEDIR needs fix-deps-file as makefiles use absolute filenames for\n-# object files while CCACHE_BASEDIR will make ccache relativize all paths for\n-# its compiler. The compiler then produces relative dependency files.\n-# make does not know a relative and absolute filename is the same so it will\n-# ignore such dependencies. This only applies when the OUTPUTDIR is inside\n-# the WORKSPACE_ROOT.\n-ifneq ($(CCACHE), )\n-  ifneq ($(filter $(WORKSPACE_ROOT)\/%, $(OUTPUTDIR)), )\n-    REWRITE_PATHS_RELATIVE = true\n-  endif\n-endif\n-\n-ifeq ($(REWRITE_PATHS_RELATIVE), true)\n-  # Need to handle -I flags as both '-Ifoo' and '-I foo'.\n-  MakeCommandRelative = \\\n-      $(CD) $(WORKSPACE_ROOT) && \\\n-      $(foreach o, $1, \\\n-        $(if $(filter $(WORKSPACE_ROOT)\/% $(OUTPUTDIR)\/%, $o), \\\n-          $(call RelativePath, $o, $(WORKSPACE_ROOT)) \\\n-        , \\\n-          $(if $(filter -I$(WORKSPACE_ROOT)\/%, $o), \\\n-            -I$(call RelativePath, $(patsubst -I%, %, $o), $(WORKSPACE_ROOT)) \\\n-          , \\\n-            $o \\\n-          ) \\\n-        ) \\\n-      )\n-\n-  # When compiling with relative paths, the deps file may come out with relative\n-  # paths, and that path may start with '.\/'. First remove any leading .\/, then\n-  # add WORKSPACE_ROOT to any line not starting with \/, while allowing for\n-  # leading spaces. There may also be multiple entries on the same line, so start\n-  # with splitting such lines.\n-  # Non GNU sed (BSD on macosx) cannot substitute in literal \\n using regex.\n-  # Instead use a bash escaped literal newline. To avoid having unmatched quotes\n-  # ruin the ability for an editor to properly syntax highlight this file, define\n-  # that newline sequence as a separate variable and add the closing quote behind\n-  # a comment.\n-  sed_newline := \\'$$'\\n''#'\n-  define fix-deps-file\n-\t$(SED) \\\n-\t    -e 's|\\([^ ]\\) \\{1,\\}\\([^\\\\:]\\)|\\1 \\\\$(sed_newline) \\2|g' \\\n-\t    $1.tmp \\\n-\t    | $(SED) \\\n-\t        -e 's|^\\([ ]*\\)\\.\/|\\1|' \\\n-\t        -e '\/^[ ]*[^\/ ]\/s|^\\([ ]*\\)|\\1$(WORKSPACE_ROOT)\/|' \\\n-\t        > $1\n-  endef\n-else\n-  # By default the MakeCommandRelative macro does nothing.\n-  MakeCommandRelative = $1\n-\n-  # No adjustment is needed.\n-  define fix-deps-file\n-\t$(MV) $1.tmp $1\n-  endef\n-endif\n+include native\/CompileFile.gmk\n+include native\/DebugSymbols.gmk\n+include native\/Flags.gmk\n+include native\/Link.gmk\n+include native\/Paths.gmk\n+include native\/ToolchainDefinitions.gmk\n@@ -282,212 +47,0 @@\n-# GetEntitlementsFile\n-# Find entitlements file for executable when signing on macosx. If no\n-# specialized file is found, returns the default file.\n-# $1 Executable to find entitlements file for.\n-ENTITLEMENTS_DIR := $(TOPDIR)\/make\/data\/macosxsigning\n-ifeq ($(MACOSX_CODESIGN_MODE), debug)\n-  CODESIGN_PLIST_SUFFIX := -debug\n-else\n-  CODESIGN_PLIST_SUFFIX :=\n-endif\n-DEFAULT_ENTITLEMENTS_FILE := $(ENTITLEMENTS_DIR)\/default$(CODESIGN_PLIST_SUFFIX).plist\n-\n-GetEntitlementsFile = \\\n-    $(foreach f, $(ENTITLEMENTS_DIR)\/$(strip $(notdir $1))$(CODESIGN_PLIST_SUFFIX).plist, \\\n-      $(if $(wildcard $f), $f, $(DEFAULT_ENTITLEMENTS_FILE)) \\\n-    )\n-\n-################################################################################\n-# Create the recipe needed to compile a single native source file.\n-#\n-# Parameter 1 is the name of the rule, based on the name of the library\/\n-# program being build and the name of the source code file, e.g.\n-# BUILD_LIBFOO_fooMain.cpp.\n-#\n-# Remaining parameters are named arguments:\n-#   FILE - The full path of the source file to compiler\n-#   BASE - The name of the rule for the entire binary to build ($1)\n-#\n-SetupCompileNativeFile = $(NamedParamsMacroTemplate)\n-define SetupCompileNativeFileBody\n-  $1_FILENAME := $$(notdir $$($1_FILE))\n-\n-  # The target file to be generated.\n-  $1_OBJ := $$($$($1_BASE)_OBJECT_DIR)\/$$(call replace_with_obj_extension, \\\n-      $$($1_FILENAME))\n-\n-  # Generate the corresponding compile_commands.json fragment.\n-  $1_OBJ_JSON = $$(MAKESUPPORT_OUTPUTDIR)\/compile-commands\/$$(subst \/,_,$$(subst \\\n-      $$(OUTPUTDIR)\/,,$$($1_OBJ))).json\n-  $$($1_BASE)_ALL_OBJS_JSON += $$($1_OBJ_JSON)\n-\n-  # Only continue if this object file hasn't been processed already. This lets\n-  # the first found source file override any other with the same name.\n-  ifeq ($$($1_OBJ_PROCESSED), )\n-    $1_OBJ_PROCESSED := true\n-    # This is the definite source file to use for $1_FILENAME.\n-    $1_SRC_FILE := $$($1_FILE)\n-\n-    ifeq ($$($1_OPTIMIZATION), )\n-      $1_OPT_CFLAGS := $$($$($1_BASE)_OPT_CFLAGS)\n-      $1_OPT_CXXFLAGS := $$($$($1_BASE)_OPT_CXXFLAGS)\n-    else\n-      ifeq ($$($1_OPTIMIZATION), NONE)\n-        $1_OPT_CFLAGS := $(C_O_FLAG_NONE)\n-        $1_OPT_CXXFLAGS := $(CXX_O_FLAG_NONE)\n-      else ifeq ($$($1_OPTIMIZATION), LOW)\n-        $1_OPT_CFLAGS := $(C_O_FLAG_NORM)\n-        $1_OPT_CXXFLAGS := $(CXX_O_FLAG_NORM)\n-      else ifeq ($$($1_OPTIMIZATION), HIGH)\n-        $1_OPT_CFLAGS := $(C_O_FLAG_HI)\n-        $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HI)\n-      else ifeq ($$($1_OPTIMIZATION), HIGHEST)\n-        $1_OPT_CFLAGS := $(C_O_FLAG_HIGHEST)\n-        $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HIGHEST)\n-      else ifeq ($$($1_OPTIMIZATION), HIGHEST_JVM)\n-        $1_OPT_CFLAGS := $(C_O_FLAG_HIGHEST_JVM)\n-        $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HIGHEST_JVM)\n-      else ifeq ($$($1_OPTIMIZATION), SIZE)\n-        $1_OPT_CFLAGS := $(C_O_FLAG_SIZE)\n-        $1_OPT_CXXFLAGS := $(CXX_O_FLAG_SIZE)\n-      else\n-        $$(error Unknown value for file OPTIMIZATION: $$($1_OPTIMIZATION))\n-      endif\n-    endif\n-\n-    ifneq ($$($$($1_BASE)_PRECOMPILED_HEADER), )\n-      ifeq ($$(filter $$($1_FILENAME), $$($$($1_BASE)_PRECOMPILED_HEADER_EXCLUDE)), )\n-        $1_USE_PCH_FLAGS := $$($$($1_BASE)_USE_PCH_FLAGS)\n-      endif\n-    endif\n-\n-    ifneq ($(DISABLE_WARNING_PREFIX), )\n-      $1_WARNINGS_FLAGS := $$(addprefix $(DISABLE_WARNING_PREFIX), \\\n-        $$($$($1_BASE)_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)_$$($1_FILENAME)) \\\n-        $$($$($1_BASE)_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS)_$$($1_FILENAME)))\n-    endif\n-\n-    $1_BASE_CFLAGS :=  $$($$($1_BASE)_CFLAGS) $$($$($1_BASE)_EXTRA_CFLAGS) \\\n-        $$($$($1_BASE)_SYSROOT_CFLAGS)\n-    $1_BASE_CXXFLAGS := $$($$($1_BASE)_CXXFLAGS) $$($$($1_BASE)_EXTRA_CXXFLAGS) \\\n-        $$($$($1_BASE)_SYSROOT_CFLAGS) $$($1_EXTRA_CXXFLAGS)\n-    $1_BASE_ASFLAGS := $$($$($1_BASE)_ASFLAGS) $$($$($1_BASE)_EXTRA_ASFLAGS)\n-\n-    ifneq ($$(filter %.c, $$($1_FILENAME)), )\n-      # Compile as a C file\n-      $1_CFLAGS += $$($1_WARNINGS_FLAGS)\n-      $1_FLAGS := $(CFLAGS_CCACHE) $$($1_USE_PCH_FLAGS) $$($1_BASE_CFLAGS) \\\n-          $$($1_OPT_CFLAGS) $$($1_CFLAGS) -c\n-      $1_COMPILER := $$($$($1_BASE)_CC)\n-    else ifneq ($$(filter %.m, $$($1_FILENAME)), )\n-      # Compile as an Objective-C file\n-      $1_CFLAGS += $$($1_WARNINGS_FLAGS)\n-      $1_FLAGS := -x objective-c $(CFLAGS_CCACHE) $$($1_USE_PCH_FLAGS) \\\n-          $$($1_BASE_CFLAGS) $$($1_OPT_CFLAGS) $$($1_CFLAGS) -c\n-      $1_COMPILER := $$($$($1_BASE)_CC)\n-    else ifneq ($$(filter %.S, $$($1_FILENAME)), )\n-      # Compile as preprocessed assembler file\n-      $1_FLAGS := $(BASIC_ASFLAGS) $$($1_BASE_ASFLAGS)\n-      $1_COMPILER := $(AS)\n-\n-      # gcc or clang assembly files must contain an appropriate relative .file\n-      # path for reproducible builds.\n-      ifneq ($(findstring $(TOOLCHAIN_TYPE), gcc clang), )\n-        # If no absolute paths allowed, work out relative source file path\n-        # for assembly .file substitution, otherwise use full file path\n-        ifeq ($(ALLOW_ABSOLUTE_PATHS_IN_OUTPUT), false)\n-          $1_REL_ASM_SRC := $$(call RelativePath, $$($1_FILE), $(WORKSPACE_ROOT))\n-        else\n-          $1_REL_ASM_SRC := $$($1_FILE)\n-        endif\n-        $1_FLAGS := $$($1_FLAGS) -DASSEMBLY_SRC_FILE='\"$$($1_REL_ASM_SRC)\"' \\\n-            -include $(TOPDIR)\/make\/data\/autoheaders\/assemblyprefix.h\n-      endif\n-    else ifneq ($$(filter %.cpp %.cc %.mm, $$($1_FILENAME)), )\n-      # Compile as a C++ or Objective-C++ file\n-      $1_CXXFLAGS += $$($1_WARNINGS_FLAGS)\n-      $1_FLAGS := $(CFLAGS_CCACHE) $$($1_USE_PCH_FLAGS) $$($1_BASE_CXXFLAGS) \\\n-          $$($1_OPT_CXXFLAGS) $$($1_CXXFLAGS) -c\n-      $1_COMPILER := $$($$($1_BASE)_CXX)\n-    else\n-      $$(error Internal error in NativeCompilation.gmk: no compiler for file $$($1_FILENAME))\n-    endif\n-\n-    # And this is the dependency file for this obj file.\n-    $1_DEPS_FILE := $$(patsubst %$(OBJ_SUFFIX),%.d,$$($1_OBJ))\n-    # The dependency target file lists all dependencies as empty targets to\n-    # avoid make error \"No rule to make target\" for removed files\n-    $1_DEPS_TARGETS_FILE := $$(patsubst %$(OBJ_SUFFIX),%.d.targets,$$($1_OBJ))\n-\n-    # Only try to load individual dependency information files if the global\n-    # file hasn't been loaded (could happen if make was interrupted).\n-    ifneq ($$($$($1_BASE)_DEPS_FILE_LOADED), true)\n-      # Include previously generated dependency information. (if it exists)\n-      -include $$($1_DEPS_FILE)\n-      -include $$($1_DEPS_TARGETS_FILE)\n-    endif\n-\n-    ifneq ($$(strip $$($1_CFLAGS) $$($1_CXXFLAGS) $$($1_OPTIMIZATION)), )\n-      $1_VARDEPS := $$($1_CFLAGS) $$($1_CXXFLAGS) $$($1_OPTIMIZATION)\n-      $1_VARDEPS_FILE := $$(call DependOnVariable, $1_VARDEPS, $$($1_OBJ).vardeps)\n-    endif\n-\n-    $1_OBJ_DEPS := $$($1_SRC_FILE) $$($$($1_BASE)_COMPILE_VARDEPS_FILE) \\\n-        $$($$($1_BASE)_EXTRA_DEPS) $$($1_VARDEPS_FILE)\n-    $1_COMPILE_OPTIONS := $$($1_FLAGS) $(CC_OUT_OPTION)$$($1_OBJ) $$($1_SRC_FILE)\n-    # For reproducible builds with gcc and clang ensure random symbol generation is\n-    # seeded deterministically\n-    ifneq ($(findstring $(TOOLCHAIN_TYPE), gcc clang), )\n-      $1_COMPILE_OPTIONS += -frandom-seed=\"$$($1_FILENAME)\"\n-    endif\n-\n-    $$($1_OBJ_JSON): $$($1_OBJ_DEPS)\n-\t$$(call WriteCompileCommandsFragment, $$@, $$(PWD), $$($1_SRC_FILE), \\\n-\t    $$($1_COMPILER) $$($1_COMPILE_OPTIONS))\n-\n-    $$($1_OBJ): $$($1_OBJ_DEPS) | $$($$($1_BASE)_BUILD_INFO)\n-\t$$(call LogInfo, Compiling $$($1_FILENAME) (for $$($$($1_BASE)_BASENAME)))\n-\t$$(call MakeDir, $$(@D))\n-        ifneq ($(TOOLCHAIN_TYPE), microsoft)\n-\t  $$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n-\t      $$($1_COMPILER) $$(GENDEPS_FLAGS) \\\n-\t      $$(addsuffix .tmp, $$($1_DEPS_FILE)) \\\n-\t      $$($1_COMPILE_OPTIONS)))\n-          ifneq ($$($1_DEPS_FILE), )\n-\t    $$(call fix-deps-file, $$($1_DEPS_FILE))\n-            # Create a dependency target file from the dependency file.\n-            # Solution suggested by:\n-            # http:\/\/make.mad-scientist.net\/papers\/advanced-auto-dependency-generation\/\n-\t    $(SED) $(DEPENDENCY_TARGET_SED_PATTERN) $$($1_DEPS_FILE) \\\n-\t        > $$($1_DEPS_TARGETS_FILE)\n-          endif\n-        else\n-          # The Visual Studio compiler lacks a feature for generating make\n-          # dependencies, but by setting -showIncludes, all included files are\n-          # printed. These are filtered out and parsed into make dependences.\n-          #\n-          # Keep as much as possible on one execution line for best performance\n-          # on Windows. No need to save exit code from compilation since\n-          # pipefail is always active on Windows.\n-          ifeq ($$(filter %.S, $$($1_FILENAME)), )\n-\t    $$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n-\t        $$($1_COMPILER) -showIncludes $$($1_COMPILE_OPTIONS))) \\\n-\t        | $(TR) -d '\\r' | $(GREP) -v -e \"^Note: including file:\" \\\n-\t            -e \"^$$($1_FILENAME)$$$$\" || test \"$$$$?\" = \"1\" ; \\\n-\t    $(ECHO) $$@: \\\\ > $$($1_DEPS_FILE) ; \\\n-\t    $(SED) $(WINDOWS_SHOWINCLUDE_SED_PATTERN) $$($1_OBJ).log \\\n-\t        | $(SORT) -u >> $$($1_DEPS_FILE) ; \\\n-\t    $(ECHO) >> $$($1_DEPS_FILE) ; \\\n-\t    $(SED) $(DEPENDENCY_TARGET_SED_PATTERN) $$($1_DEPS_FILE) > $$($1_DEPS_TARGETS_FILE)\n-          else\n-            # For assembler calls just create empty dependency lists\n-\t    $$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n-\t        $$($1_COMPILER) $$($1_FLAGS) \\\n-\t        $(CC_OUT_OPTION)$$($1_OBJ) -Ta $$($1_SRC_FILE))) \\\n-\t        | $(TR) -d '\\r' | $(GREP) -v -e \"Assembling:\" || test \"$$$$?\" = \"1\" ; \\\n-\t    $(ECHO) > $$($1_DEPS_FILE) ; \\\n-\t    $(ECHO) > $$($1_DEPS_TARGETS_FILE)\n-          endif\n-        endif\n-  endif\n-endef\n-\n@@ -576,0 +129,1 @@\n+#\n@@ -578,0 +132,4 @@\n+  # When reading this code, note that macros named Setup<Foo> are just setting\n+  # variables, and macros called Create<Foo> are setting up rules to create\n+  # files. Macros starting with any other verb are more complicated, and can do\n+  # all of the above, and also call directly to the shell.\n@@ -579,0 +137,102 @@\n+  ###\n+  ### Prepare for compilation and linking\n+  ###\n+\n+  $$(eval $$(call VerifyArguments,$1))\n+\n+  # Setup variables for the rest of this macro to work with\n+  $$(eval $$(call SetupBasicVariables,$1))\n+\n+  # Setup the toolchain to be used\n+  $$(eval $$(call SetupToolchain,$1))\n+\n+  # Find all source files to compile and determine the output object file names\n+  $$(eval $$(call SetupSourceFiles,$1))\n+  $$(eval $$(call SetupOutputFiles,$1))\n+\n+  # Setup CFLAGS\/CXXFLAGS based on warnings, optimizations, extra flags etc.\n+  $$(eval $$(call SetupCompilerFlags,$1))\n+\n+  # Machinery needed for the build to function properly\n+  $$(eval $$(call SetupBuildSystemSupport,$1))\n+\n+  $$(eval $$(call RemoveSuperfluousOutputFiles,$1))\n+\n+  # Need to make sure TARGET is first on list before starting to create files\n+  $1 := $$($1_TARGET)\n+\n+  # Have make print information about the library when we start compiling\n+  $$(eval $$(call PrintStartInfo,$1))\n+\n+  ###\n+  ### Compile all native source code files\n+  ###\n+\n+  # Create a PCH, if requested\n+  $$(eval $$(call CreatePrecompiledHeader,$1))\n+\n+  # Now call CreateCompiledNativeFile for each source file we are going to compile.\n+  $$(foreach file, $$($1_SRCS), \\\n+      $$(eval $$(call CreateCompiledNativeFile,$1_$$(notdir $$(file)),\\\n+          FILE := $$(file), \\\n+          BASE := $1, \\\n+      )) \\\n+  )\n+\n+  ifeq ($(call isTargetOs, windows), true)\n+    # On windows we need to create a resource file\n+    $$(eval $$(call CreateWindowsResourceFile,$1))\n+  endif\n+\n+  # Setup a library-wide dependency file from individual object file dependency\n+  # files, and import it in the makefile.\n+  $$(eval $$(call CreateDependencyFile,$1))\n+  $$(eval $$(call ImportDependencyFile,$1))\n+\n+  ###\n+  ### Link the object files into a native output library\/executable\n+  ###\n+\n+  # Handle native debug symbols\n+  $$(eval $$(call CreateDebugSymbols,$1))\n+\n+  # Prepare for linking\n+  $$(eval $$(call SetupLinkerFlags,$1))\n+  $$(eval $$(call SetupLinking,$1))\n+\n+  $$(eval $$(call SetupObjectFileList,$1))\n+\n+  # Link the individually compiled files into a single unit\n+  $$(eval $$(call CreateLinkedResult,$1))\n+\n+  ifeq ($(GENERATE_COMPILE_COMMANDS_ONLY), true)\n+    # Override all targets (this is a hack)\n+    $1 := $$($1_ALL_OBJS_JSON)\n+  endif\n+endef\n+\n+################################################################################\n+# Verify that user passed arguments are valid\n+define VerifyArguments\n+  ifneq ($$($1_NAME), $(basename $$($1_NAME)))\n+    $$(error NAME must not contain any directory path in $1)\n+  endif\n+  ifneq ($(findstring $$($1_SUFFIX), $$($1_NAME)), )\n+    $$(error NAME should be specified without suffix: $$($1_SUFFIX) in $1)\n+  endif\n+  ifneq ($(findstring $$($1_PREFIX), $$($1_NAME)), )\n+    $$(error NAME should be specified without prefix: $$($1_PREFIX) in $1)\n+  endif\n+  ifeq ($$($1_OUTPUT_DIR), )\n+    $$(error OUTPUT_DIR is missing in $1)\n+  endif\n+  ifneq ($$($1_MANIFEST), )\n+    ifeq ($$($1_MANIFEST_VERSION), )\n+      $$(error If MANIFEST is provided, then MANIFEST_VERSION is required in $1)\n+    endif\n+  endif\n+endef\n+\n+################################################################################\n+# Setup basic variables\n+define SetupBasicVariables\n@@ -592,2 +252,0 @@\n-  $$(call SetIfEmpty, $1_COMPILE_WITH_DEBUG_SYMBOLS, $$(COMPILE_WITH_DEBUG_SYMBOLS))\n-\n@@ -603,9 +261,0 @@\n-    # For release builds where debug symbols are configured to be moved to\n-    # separate debuginfo files, disable debug symbols for static libs instead.\n-    # We don't currently support this configuration and we don't want symbol\n-    # information in release builds unless explicitly asked to provide it.\n-    ifeq ($(DEBUG_LEVEL), release)\n-      ifeq ($(COPY_DEBUG_SYMBOLS), true)\n-        $1_COMPILE_WITH_DEBUG_SYMBOLS := false\n-      endif\n-    endif\n@@ -632,18 +281,0 @@\n-  ifneq ($$($1_NAME), $(basename $$($1_NAME)))\n-    $$(error NAME must not contain any directory path in $1)\n-  endif\n-  ifneq ($(findstring $$($1_SUFFIX), $$($1_NAME)), )\n-    $$(error NAME should be specified without suffix: $$($1_SUFFIX) in $1)\n-  endif\n-  ifneq ($(findstring $$($1_PREFIX), $$($1_NAME)), )\n-    $$(error NAME should be specified without prefix: $$($1_PREFIX) in $1)\n-  endif\n-  ifeq ($$($1_OUTPUT_DIR), )\n-    $$(error OUTPUT_DIR is missing in $1)\n-  endif\n-  ifneq ($$($1_MANIFEST), )\n-    ifeq ($$($1_MANIFEST_VERSION), )\n-      $$(error If MANIFEST is provided, then MANIFEST_VERSION is required in $1)\n-    endif\n-  endif\n-\n@@ -654,0 +285,1 @@\n+endef\n@@ -655,219 +287,3 @@\n-# Need to make sure TARGET is first on list\n-  $1 := $$($1_TARGET)\n-\n-  # Setup the toolchain to be used\n-  $$(call SetIfEmpty, $1_TOOLCHAIN, TOOLCHAIN_DEFAULT)\n-  $$(call SetIfEmpty, $1_CC, $$($$($1_TOOLCHAIN)_CC))\n-  $$(call SetIfEmpty, $1_CXX, $$($$($1_TOOLCHAIN)_CXX))\n-  $$(call SetIfEmpty, $1_LD, $$($$($1_TOOLCHAIN)_LD))\n-  $$(call SetIfEmpty, $1_AR, $$($$($1_TOOLCHAIN)_AR))\n-  $$(call SetIfEmpty, $1_AS, $$($$($1_TOOLCHAIN)_AS))\n-  $$(call SetIfEmpty, $1_MT, $$($$($1_TOOLCHAIN)_MT))\n-  $$(call SetIfEmpty, $1_RC, $$($$($1_TOOLCHAIN)_RC))\n-  $$(call SetIfEmpty, $1_OBJCOPY, $$($$($1_TOOLCHAIN)_OBJCOPY))\n-  $$(call SetIfEmpty, $1_STRIP, $$($$($1_TOOLCHAIN)_STRIP))\n-  $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $$($$($1_TOOLCHAIN)_SYSROOT_CFLAGS))\n-  $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $$($$($1_TOOLCHAIN)_SYSROOT_LDFLAGS))\n-\n-  $$(foreach d, $$($1_SRC), $$(if $$(wildcard $$d), , \\\n-      $$(error SRC specified to SetupNativeCompilation $1 contains missing directory $$d)))\n-\n-  $1_SRCS_RAW := $$(call FindFiles, $$($1_SRC))\n-  # Order src files according to the order of the src dirs\n-  $1_SRCS := $$(foreach d, $$($1_SRC), $$(filter $$d%, $$($1_SRCS_RAW)))\n-  $1_SRCS := $$(filter $$(NATIVE_SOURCE_EXTENSIONS), $$($1_SRCS))\n-  # Extract the C\/C++ files.\n-  ifneq ($$($1_EXCLUDE_PATTERNS), )\n-    # We must not match the exclude pattern against the src root(s).\n-    $1_SRCS_WITHOUT_ROOTS := $$($1_SRCS)\n-    $$(foreach i, $$($1_SRC), $$(eval $1_SRCS_WITHOUT_ROOTS := $$(patsubst \\\n-        $$i\/%,%, $$($1_SRCS_WITHOUT_ROOTS))))\n-    $1_ALL_EXCLUDE_FILES :=  $$(call containing, $$($1_EXCLUDE_PATTERNS), \\\n-        $$($1_SRCS_WITHOUT_ROOTS))\n-  endif\n-  ifneq ($$($1_EXCLUDE_FILES), )\n-    $1_ALL_EXCLUDE_FILES += $$($1_EXCLUDE_FILES)\n-  endif\n-  ifneq ($$($1_ALL_EXCLUDE_FILES), )\n-    $1_EXCLUDE_FILES_PAT := $$($1_ALL_EXCLUDE_FILES) \\\n-        $$(foreach i, $$($1_SRC), $$(addprefix $$i\/, $$($1_ALL_EXCLUDE_FILES)))\n-    $1_EXCLUDE_FILES_PAT := $$(addprefix %, $$($1_EXCLUDE_FILES_PAT))\n-    $1_SRCS := $$(filter-out $$($1_EXCLUDE_FILES_PAT), $$($1_SRCS))\n-  endif\n-  ifneq ($$($1_INCLUDE_FILES), )\n-    $1_INCLUDE_FILES_PAT := $$(foreach i, $$($1_SRC), $$(addprefix $$i\/, $$($1_INCLUDE_FILES)))\n-    $1_SRCS := $$(filter $$($1_INCLUDE_FILES_PAT), $$($1_SRCS))\n-  endif\n-  # There can be only a single bin dir root, no need to foreach over the roots.\n-  $1_BINS := $$(wildcard $$($1_OBJECT_DIR)\/*$(OBJ_SUFFIX))\n-  # Now we have a list of all c\/c++ files to compile: $$($1_SRCS)\n-  # and we have a list of all existing object files: $$($1_BINS)\n-\n-  # Prepend the source\/bin path to the filter expressions. Then do the filtering.\n-  ifneq ($$($1_INCLUDES), )\n-    $1_SRC_INCLUDES := $$(foreach i, $$($1_SRC), $$(addprefix $$i\/, $$(addsuffix \/%, $$($1_INCLUDES))))\n-    $1_SRCS := $$(filter $$($1_SRC_INCLUDES), $$($1_SRCS))\n-  endif\n-  ifneq ($$($1_EXCLUDES), )\n-    $1_SRC_EXCLUDES := $$(addsuffix \/%, $$($1_EXCLUDES))\n-    $1_SRC_EXCLUDES += $$(foreach i, $$($1_SRC), $$(addprefix $$i\/, $$(addsuffix \/%, $$($1_EXCLUDES))))\n-    $1_SRCS := $$(filter-out $$($1_SRC_EXCLUDES), $$($1_SRCS))\n-  endif\n-\n-  $1_SRCS += $$($1_EXTRA_FILES)\n-\n-  ifeq ($$($1_SRCS), )\n-    $$(error No sources found for $1 when looking inside the dirs $$($1_SRC))\n-  endif\n-\n-  ifeq ($$($1_TYPE), EXECUTABLE)\n-    ifeq ($(UBSAN_ENABLED), true)\n-      # We need to set the default options for UBSan. This needs to be included in every executable.\n-      # Rather than copy and paste code to everything with a main function, we add an additional\n-      # source file to every executable that exports __ubsan_default_options.\n-      ifneq ($$(filter %.cpp %.cc, $$($1_SRCS)), )\n-        $1_SRCS += $(TOPDIR)\/make\/data\/ubsan\/ubsan_default_options.cpp\n-      else\n-        $1_SRCS += $(TOPDIR)\/make\/data\/ubsan\/ubsan_default_options.c\n-      endif\n-    endif\n-  endif\n-\n-  # Calculate the expected output from compiling the sources\n-  $1_EXPECTED_OBJS_FILENAMES := $$(call replace_with_obj_extension, $$(notdir $$($1_SRCS)))\n-  $1_EXPECTED_OBJS := $$(addprefix $$($1_OBJECT_DIR)\/, $$($1_EXPECTED_OBJS_FILENAMES))\n-  # Are there too many object files on disk? Perhaps because some source file was removed?\n-  $1_SUPERFLOUS_OBJS := $$(sort $$(filter-out $$($1_EXPECTED_OBJS), $$($1_BINS)))\n-  # Clean out the superfluous object files.\n-  ifneq ($$($1_SUPERFLUOUS_OBJS), )\n-    $$(shell $(RM) -f $$($1_SUPERFLUOUS_OBJS))\n-  endif\n-  # Sort to remove duplicates and provide a reproducible order on the input files to the linker.\n-  $1_ALL_OBJS := $$(sort $$($1_EXPECTED_OBJS) $$($1_EXTRA_OBJECT_FILES))\n-  ifeq ($(STATIC_LIBS), true)\n-    # Exclude the object files that match with $1_STATIC_LIB_EXCLUDE_OBJS.\n-    ifneq ($$($1_STATIC_LIB_EXCLUDE_OBJS), )\n-      $1_ALL_OBJS := $$(call not-containing, $$($1_STATIC_LIB_EXCLUDE_OBJS), $$($1_ALL_OBJS))\n-    endif\n-  endif\n-\n-  # Pickup extra OPENJDK_TARGET_OS_TYPE, OPENJDK_TARGET_OS, TOOLCHAIN_TYPE and\n-  # OPENJDK_TARGET_OS plus OPENJDK_TARGET_CPU pair dependent variables for CFLAGS.\n-  $1_EXTRA_CFLAGS := $$($1_CFLAGS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_CFLAGS_$(OPENJDK_TARGET_OS)) \\\n-      $$($1_CFLAGS_$(TOOLCHAIN_TYPE)) \\\n-      $$($1_CFLAGS_$(OPENJDK_TARGET_OS)_$(OPENJDK_TARGET_CPU))\n-\n-  ifneq ($(DEBUG_LEVEL), release)\n-    # Pickup extra debug dependent variables for CFLAGS\n-    $1_EXTRA_CFLAGS += $$($1_CFLAGS_debug)\n-    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS_TYPE)_debug)\n-    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS)_debug)\n-    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS)_$(OPENJDK_TARGET_CPU)_debug)\n-  else\n-    $1_EXTRA_CFLAGS += $$($1_CFLAGS_release)\n-    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS_TYPE)_release)\n-    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS)_release)\n-    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS)_$(OPENJDK_TARGET_CPU)_release)\n-  endif\n-  ifeq ($(STATIC_LIBS), true)\n-    $1_EXTRA_CFLAGS += $$(STATIC_LIBS_CFLAGS)\n-  endif\n-\n-  # Pickup extra OPENJDK_TARGET_OS_TYPE, OPENJDK_TARGET_OS and\/or TOOLCHAIN_TYPE\n-  # dependent variables for CXXFLAGS.\n-  $1_EXTRA_CXXFLAGS := $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS)) \\\n-      $$($1_CXXFLAGS_$(TOOLCHAIN_TYPE))\n-\n-  ifneq ($(DEBUG_LEVEL), release)\n-    # Pickup extra debug dependent variables for CXXFLAGS\n-    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_debug)\n-    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS_TYPE)_debug)\n-    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS)_debug)\n-  else\n-    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_release)\n-    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS_TYPE)_release)\n-    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS)_release)\n-  endif\n-  ifeq ($(STATIC_LIBS), true)\n-    $1_EXTRA_CXXFLAGS += $$(STATIC_LIB_CFLAGS)\n-  endif\n-\n-  # If no C++ flags are explicitly set, default to using the C flags.\n-  # After that, we can set additional C++ flags that should not interfere\n-  # with the mechanism for copying the C flags by default.\n-  ifeq ($$($1_CXXFLAGS), )\n-    $1_CXXFLAGS := $$($1_CFLAGS)\n-  endif\n-  ifeq ($$(strip $$($1_EXTRA_CXXFLAGS)), )\n-    $1_EXTRA_CXXFLAGS := $$($1_EXTRA_CFLAGS)\n-  endif\n-\n-  ifeq ($$($1_COMPILE_WITH_DEBUG_SYMBOLS), true)\n-    $1_EXTRA_CFLAGS += $$(CFLAGS_DEBUG_SYMBOLS)\n-    $1_EXTRA_CXXFLAGS += $$(CFLAGS_DEBUG_SYMBOLS)\n-    $1_EXTRA_ASFLAGS += $$(ASFLAGS_DEBUG_SYMBOLS)\n-  endif\n-\n-  # Pass the library name for static JNI library naming\n-  ifeq ($$($1_TYPE), STATIC_LIBRARY)\n-    $1_EXTRA_CFLAGS += -DLIBRARY_NAME=$$($1_NAME)\n-    $1_EXTRA_CXXFLAGS += -DLIBRARY_NAME=$$($1_NAME)\n-  endif\n-\n-  # Pick up disabled warnings, if possible on this platform.\n-  ifneq ($(DISABLE_WARNING_PREFIX), )\n-    $1_EXTRA_CFLAGS += $$(addprefix $(DISABLE_WARNING_PREFIX), \\\n-        $$(DISABLED_WARNINGS) \\\n-        $$(DISABLED_WARNINGS_C) \\\n-        $$($1_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)) \\\n-        $$($1_DISABLED_WARNINGS_C_$(TOOLCHAIN_TYPE)) \\\n-        $$($1_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS)) \\\n-        $$($1_DISABLED_WARNINGS_C_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS)))\n-    $1_EXTRA_CXXFLAGS += $$(addprefix $(DISABLE_WARNING_PREFIX), \\\n-        $$(DISABLED_WARNINGS) \\\n-        $$(DISABLED_WARNINGS_CXX) \\\n-        $$($1_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)) \\\n-        $$($1_DISABLED_WARNINGS_CXX_$(TOOLCHAIN_TYPE)) \\\n-        $$($1_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS)) \\\n-        $$($1_DISABLED_WARNINGS_CXX_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS)))\n-  endif\n-\n-  # Check if warnings should be considered errors.\n-  # Pick first binary and toolchain specific, then binary specific, then general setting.\n-  ifeq ($$($1_WARNINGS_AS_ERRORS_$(TOOLCHAIN_TYPE)), )\n-    ifeq ($$($1_WARNINGS_AS_ERRORS), )\n-      $1_WARNINGS_AS_ERRORS_$(TOOLCHAIN_TYPE) := $$(WARNINGS_AS_ERRORS)\n-    else\n-      $1_WARNINGS_AS_ERRORS_$(TOOLCHAIN_TYPE) := $$($1_WARNINGS_AS_ERRORS)\n-    endif\n-  endif\n-\n-  ifeq ($$($1_WARNINGS_AS_ERRORS_$(TOOLCHAIN_TYPE)), true)\n-    $1_EXTRA_CFLAGS += $(CFLAGS_WARNINGS_ARE_ERRORS)\n-    $1_EXTRA_CXXFLAGS += $(CFLAGS_WARNINGS_ARE_ERRORS)\n-  endif\n-\n-  ifeq (NONE, $$($1_OPTIMIZATION))\n-    $1_OPT_CFLAGS := $(C_O_FLAG_NONE)\n-    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_NONE)\n-  else ifeq (LOW, $$($1_OPTIMIZATION))\n-    $1_OPT_CFLAGS := $(C_O_FLAG_NORM)\n-    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_NORM)\n-  else ifeq (HIGH, $$($1_OPTIMIZATION))\n-    $1_OPT_CFLAGS := $(C_O_FLAG_HI)\n-    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HI)\n-  else ifeq (HIGHEST, $$($1_OPTIMIZATION))\n-    $1_OPT_CFLAGS := $(C_O_FLAG_HIGHEST)\n-    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HIGHEST)\n-  else ifeq (HIGHEST_JVM, $$($1_OPTIMIZATION))\n-    $1_OPT_CFLAGS := $(C_O_FLAG_HIGHEST_JVM)\n-    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HIGHEST_JVM)\n-  else ifeq (SIZE, $$($1_OPTIMIZATION))\n-    $1_OPT_CFLAGS := $(C_O_FLAG_SIZE)\n-    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_SIZE)\n-  else ifneq (, $$($1_OPTIMIZATION))\n-    $$(error Unknown value for OPTIMIZATION: $$($1_OPTIMIZATION))\n-  endif\n-\n-  $1_BUILD_INFO := $$($1_OBJECT_DIR)\/_build-info.marker\n-\n+################################################################################\n+# Setup machinery needed by the build system\n+define SetupBuildSystemSupport\n@@ -882,0 +298,1 @@\n+endef\n@@ -883,74 +300,3 @@\n-  ifneq ($$($1_PRECOMPILED_HEADER), )\n-    ifeq ($(USE_PRECOMPILED_HEADER), true)\n-      ifeq ($(TOOLCHAIN_TYPE), microsoft)\n-        $1_PCH_FILE := $$($1_OBJECT_DIR)\/$1.pch\n-        $1_GENERATED_PCH_SRC := $$($1_OBJECT_DIR)\/$1_pch.cpp\n-        $1_GENERATED_PCH_OBJ := $$($1_OBJECT_DIR)\/$1_pch$(OBJ_SUFFIX)\n-\n-        $$(eval $$(call SetupCompileNativeFile, $1_$$(notdir $$($1_GENERATED_PCH_SRC)), \\\n-            FILE := $$($1_GENERATED_PCH_SRC), \\\n-            BASE := $1, \\\n-            EXTRA_CXXFLAGS := -Fp$$($1_PCH_FILE) -Yc$$(notdir $$($1_PRECOMPILED_HEADER)), \\\n-        ))\n-\n-        $1_USE_PCH_FLAGS := \\\n-            -Fp$$($1_PCH_FILE) -Yu$$(notdir $$($1_PRECOMPILED_HEADER))\n-\n-        $$($1_ALL_OBJS): $$($1_GENERATED_PCH_OBJ)\n-\n-        # Explicitly add the pch obj file first to ease comparing to old\n-        # hotspot build.\n-        $1_ALL_OBJS := $$($1_GENERATED_PCH_OBJ) $$($1_ALL_OBJS)\n-\n-        $$($1_GENERATED_PCH_SRC):\n-\t\t$(ECHO) \"#include \\\"$$(notdir $$($1_PRECOMPILED_HEADER))\\\"\" > $$@\n-\n-      else ifneq ($(findstring $(TOOLCHAIN_TYPE), gcc clang), )\n-        ifeq ($(TOOLCHAIN_TYPE), gcc)\n-          $1_PCH_FILE := $$($1_OBJECT_DIR)\/precompiled\/$$(notdir $$($1_PRECOMPILED_HEADER)).gch\n-          $1_USE_PCH_FLAGS := -I$$($1_OBJECT_DIR)\/precompiled\n-        else ifeq ($(TOOLCHAIN_TYPE), clang)\n-          $1_PCH_FILE := $$($1_OBJECT_DIR)\/precompiled\/$$(notdir $$($1_PRECOMPILED_HEADER)).pch\n-          $1_USE_PCH_FLAGS := -include-pch $$($1_PCH_FILE)\n-        endif\n-        $1_PCH_DEPS_FILE := $$($1_PCH_FILE).d\n-        $1_PCH_DEPS_TARGETS_FILE := $$($1_PCH_FILE).d.targets\n-\n-        -include $$($1_PCH_DEPS_FILE)\n-        -include $$($1_PCH_DEPS_TARGETS_FILE)\n-\n-        $1_PCH_COMMAND := $$($1_CC) $$($1_CFLAGS) $$($1_EXTRA_CFLAGS) $$($1_SYSROOT_CFLAGS) \\\n-            $$($1_OPT_CFLAGS) -x c++-header -c $(GENDEPS_FLAGS) \\\n-            $$(addsuffix .tmp, $$($1_PCH_DEPS_FILE))\n-\n-        $$($1_PCH_FILE): $$($1_PRECOMPILED_HEADER) $$($1_COMPILE_VARDEPS_FILE)\n-\t\t$$(call LogInfo, Generating precompiled header)\n-\t\t$$(call MakeDir, $$(@D))\n-\t\t$$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n-\t\t    $$($1_PCH_COMMAND) $$< -o $$@))\n-\t\t$$(call fix-deps-file, $$($1_PCH_DEPS_FILE))\n-\t\t$(SED) $(DEPENDENCY_TARGET_SED_PATTERN) $$($1_PCH_DEPS_FILE) \\\n-\t\t    > $$($1_PCH_DEPS_TARGETS_FILE)\n-\n-        $$($1_ALL_OBJS): $$($1_PCH_FILE)\n-\n-        # Generate the corresponding compile_commands.json fragment.\n-        $1_PCH_FILE_JSON := $$(MAKESUPPORT_OUTPUTDIR)\/compile-commands\/$$(subst \/,_,$$(subst \\\n-            $$(OUTPUTDIR)\/,,$$($1_PCH_FILE))).json\n-        $1_ALL_OBJS_JSON += $$($1_PCH_FILE_JSON)\n-\n-        $$($1_PCH_FILE_JSON): $$($1_PRECOMPILED_HEADER) $$($1_COMPILE_VARDEPS_FILE)\n-\t\t$$(call WriteCompileCommandsFragment, $$@, $$(PWD), $$<, \\\n-\t\t    $$($1_PCH_COMMAND) $$< -o $$($1_PCH_FILE))\n-      endif\n-    endif\n-  endif\n-\n-  # Now call SetupCompileNativeFile for each source file we are going to compile.\n-  $$(foreach file, $$($1_SRCS), \\\n-      $$(eval $$(call SetupCompileNativeFile, $1_$$(notdir $$(file)),\\\n-          FILE := $$(file), \\\n-          BASE := $1, \\\n-      )) \\\n-  )\n-\n+################################################################################\n+# Have make print information about the library when we start compiling\n+define PrintStartInfo\n@@ -963,0 +309,2 @@\n+  $1_BUILD_INFO := $$($1_OBJECT_DIR)\/_build-info.marker\n+\n@@ -976,0 +324,1 @@\n+endef\n@@ -977,40 +326,4 @@\n-  # On windows we need to create a resource file\n-  ifeq ($(call isTargetOs, windows), true)\n-    ifneq ($$($1_VERSIONINFO_RESOURCE), )\n-      $1_RES := $$($1_OBJECT_DIR)\/$$($1_BASENAME).res\n-      $1_RES_DEPS_FILE := $$($1_RES).d\n-      $1_RES_DEPS_TARGETS_FILE := $$($1_RES).d.targets\n-      -include $$($1_RES_DEPS_FILE)\n-      -include $$($1_RES_DEPS_TARGETS_FILE)\n-\n-      $1_RES_VARDEPS := $$($1_RC) $$($1_RCFLAGS)\n-      $1_RES_VARDEPS_FILE := $$(call DependOnVariable, $1_RES_VARDEPS, \\\n-          $$($1_RES).vardeps)\n-\n-      $$($1_RES): $$($1_VERSIONINFO_RESOURCE) $$($1_RES_VARDEPS_FILE)\n-\t\t$$(call LogInfo, Compiling resource $$(notdir $$($1_VERSIONINFO_RESOURCE)) (for $$($1_BASENAME)))\n-\t\t$$(call MakeDir, $$(@D) $$($1_OBJECT_DIR))\n-\t\t$$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n-\t\t    $$($1_RC) $$($1_RCFLAGS) $$($1_SYSROOT_CFLAGS) $(CC_OUT_OPTION)$$@ \\\n-\t\t    $$($1_VERSIONINFO_RESOURCE) 2>&1 ))\n-                # Windows RC compiler does not support -showIncludes, so we mis-use CL\n-                # for this. Filter out RC specific arguments that are unknown to CL.\n-                # For some unknown reason, in this case CL actually outputs the show\n-                # includes to stderr so need to redirect it to hide the output from the\n-                # main log.\n-\t\t$$(call ExecuteWithLog, $$($1_RES_DEPS_FILE)$(OBJ_SUFFIX), \\\n-\t\t    $$($1_CC) $$(filter-out -l%, $$($1_RCFLAGS)) \\\n-\t\t        $$($1_SYSROOT_CFLAGS) -showIncludes -nologo -TC \\\n-\t\t        $(CC_OUT_OPTION)$$($1_RES_DEPS_FILE)$(OBJ_SUFFIX) -P -Fi$$($1_RES_DEPS_FILE).pp \\\n-\t\t        $$($1_VERSIONINFO_RESOURCE)) 2>&1 \\\n-\t\t    | $(TR) -d '\\r' | $(GREP) -v -e \"^Note: including file:\" \\\n-\t\t        -e \"^$$(notdir $$($1_VERSIONINFO_RESOURCE))$$$$\" || test \"$$$$?\" = \"1\" ; \\\n-\t\t$(ECHO) $$($1_RES): \\\\ > $$($1_RES_DEPS_FILE) ; \\\n-\t\t$(SED) $(WINDOWS_SHOWINCLUDE_SED_PATTERN) $$($1_RES_DEPS_FILE)$(OBJ_SUFFIX).log \\\n-\t\t    >> $$($1_RES_DEPS_FILE) ; \\\n-\t\t$(ECHO) >> $$($1_RES_DEPS_FILE) ;\\\n-\t\t$(SED) $(DEPENDENCY_TARGET_SED_PATTERN) $$($1_RES_DEPS_FILE) \\\n-\t\t    > $$($1_RES_DEPS_TARGETS_FILE)\n-    endif\n-  endif\n-\n+################################################################################\n+# Setup a library-wide dependency file from individual object file dependency\n+# files\n+define CreateDependencyFile\n@@ -1034,0 +347,1 @@\n+endef\n@@ -1035,0 +349,3 @@\n+################################################################################\n+# Import the dependency file into the makefile\n+define ImportDependencyFile\n@@ -1044,322 +361,0 @@\n-\n-  ifneq ($(DISABLE_MAPFILES), true)\n-    $1_REAL_MAPFILE := $$($1_MAPFILE)\n-  endif\n-\n-  # Pickup extra OPENJDK_TARGET_OS_TYPE, OPENJDK_TARGET_OS and TOOLCHAIN_TYPE\n-  # dependent variables for LDFLAGS and LIBS, and additionally the pair dependent\n-  # TOOLCHAIN_TYPE plus OPENJDK_TARGET_OS\n-  $1_EXTRA_LDFLAGS += $$($1_LDFLAGS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_LDFLAGS_$(OPENJDK_TARGET_OS)) \\\n-      $$($1_LDFLAGS_$(TOOLCHAIN_TYPE)) $$($1_LDFLAGS_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS))\n-  $1_EXTRA_LIBS += $$($1_LIBS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_LIBS_$(OPENJDK_TARGET_OS)) \\\n-      $$($1_LIBS_$(TOOLCHAIN_TYPE)) $$($1_LIBS_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS))\n-\n-  ifneq ($$($1_REAL_MAPFILE), )\n-    $1_EXTRA_LDFLAGS += $(call SET_SHARED_LIBRARY_MAPFILE,$$($1_REAL_MAPFILE))\n-  endif\n-\n-  ifneq ($$($1_COPY_DEBUG_SYMBOLS), false)\n-    $1_COPY_DEBUG_SYMBOLS := $(COPY_DEBUG_SYMBOLS)\n-  endif\n-\n-  ifneq ($$($1_ZIP_EXTERNAL_DEBUG_SYMBOLS), false)\n-    $1_ZIP_EXTERNAL_DEBUG_SYMBOLS := $(ZIP_EXTERNAL_DEBUG_SYMBOLS)\n-  endif\n-\n-  ifeq ($$($1_COPY_DEBUG_SYMBOLS), true)\n-    ifneq ($$($1_DEBUG_SYMBOLS), false)\n-      $$(call SetIfEmpty, $1_SYMBOLS_DIR, $$($1_OUTPUT_DIR))\n-      # Only copy debug symbols for dynamic libraries and programs.\n-      ifneq ($$($1_TYPE), STATIC_LIBRARY)\n-        # Generate debuginfo files.\n-        ifeq ($(call isTargetOs, windows), true)\n-          $1_EXTRA_LDFLAGS += -debug \"-pdb:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).pdb\" \\\n-              \"-map:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).map\"\n-          ifeq ($(SHIP_DEBUG_SYMBOLS), public)\n-            $1_EXTRA_LDFLAGS += \"-pdbstripped:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).stripped.pdb\"\n-          endif\n-          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).pdb \\\n-              $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).map\n-\n-        else ifeq ($(call isTargetOs, linux), true)\n-          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).debuginfo\n-          # Setup the command line creating debuginfo files, to be run after linking.\n-          # It cannot be run separately since it updates the original target file\n-          # Creating the debuglink is done in another command rather than all at once\n-          # so we can run it after strip is called, since strip can sometimes mangle the\n-          # embedded debuglink, which we want to avoid.\n-          $1_CREATE_DEBUGINFO_CMDS := \\\n-              $$($1_OBJCOPY) --only-keep-debug $$($1_TARGET) $$($1_DEBUGINFO_FILES) $$(NEWLINE)\n-          $1_CREATE_DEBUGLINK_CMDS := $(CD) $$($1_SYMBOLS_DIR) && \\\n-              $$($1_OBJCOPY) --add-gnu-debuglink=$$($1_DEBUGINFO_FILES) $$($1_TARGET)\n-\n-        else ifeq ($(call isTargetOs, aix), true)\n-          # AIX does not provide the equivalent of OBJCOPY to extract debug symbols,\n-          # so we copy the compiled object with symbols to the .debuginfo file, which\n-          # happens prior to the STRIP_CMD on the original target object file.\n-          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).debuginfo\n-          $1_CREATE_DEBUGINFO_CMDS := $(CP) $$($1_TARGET) $$($1_DEBUGINFO_FILES)\n-\n-        else ifeq ($(call isTargetOs, macosx), true)\n-          $1_DEBUGINFO_FILES := \\\n-              $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).dSYM\/Contents\/Info.plist \\\n-              $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).dSYM\/Contents\/Resources\/DWARF\/$$($1_BASENAME)\n-          $1_CREATE_DEBUGINFO_CMDS := \\\n-              $(DSYMUTIL) --out $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).dSYM $$($1_TARGET)\n-        endif\n-\n-        # Since the link rule creates more than one file that we want to track,\n-        # we have to use some tricks to get make to cooperate. To properly\n-        # trigger downstream dependants of $$($1_DEBUGINFO_FILES), we must have\n-        # a recipe in the rule below. To avoid rerunning the recipe every time\n-        # have it touch the target. If a debuginfo file is deleted by something\n-        # external, explicitly delete the TARGET to trigger a rebuild of both.\n-        ifneq ($$(wildcard $$($1_DEBUGINFO_FILES)), $$($1_DEBUGINFO_FILES))\n-          $$(call LogDebug, Deleting $$($1_BASENAME) because debuginfo files are missing)\n-          $$(shell $(RM) $$($1_TARGET))\n-        endif\n-        $$($1_DEBUGINFO_FILES): $$($1_TARGET)\n-\t\t$$(if $$(CORRECT_FUNCTION_IN_RECIPE_EVALUATION), \\\n-\t\t  $$(if $$(wildcard $$@), , $$(error $$@ was not created for $$<)) \\\n-\t\t)\n-\t\t$(TOUCH) $$@\n-\n-        $1 += $$($1_DEBUGINFO_FILES)\n-\n-        ifeq ($$($1_ZIP_EXTERNAL_DEBUG_SYMBOLS), true)\n-          ifeq ($(call isTargetOs, windows), true)\n-            $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).diz\n-          else\n-            $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).diz\n-          endif\n-          $1 += $$($1_DEBUGINFO_ZIP)\n-\n-          # The dependency on TARGET is needed for debuginfo files\n-          # to be rebuilt properly.\n-          $$($1_DEBUGINFO_ZIP): $$($1_DEBUGINFO_FILES) $$($1_TARGET)\n-\t\t$(CD) $$($1_SYMBOLS_DIR) && \\\n-\t\t    $(ZIPEXE) -q -r $$@ $$(subst $$($1_SYMBOLS_DIR)\/,, $$($1_DEBUGINFO_FILES))\n-\n-        endif\n-       endif # !STATIC_LIBRARY\n-    endif # $1_DEBUG_SYMBOLS != false\n-  endif # COPY_DEBUG_SYMBOLS\n-\n-  # Unless specifically set, stripping should only happen if symbols are also\n-  # being copied.\n-  $$(call SetIfEmpty, $1_STRIP_SYMBOLS, $$($1_COPY_DEBUG_SYMBOLS))\n-\n-  ifneq ($$($1_STRIP_SYMBOLS), false)\n-    ifneq ($$($1_STRIP), )\n-      # Default to using the global STRIPFLAGS. Allow for overriding with an empty value\n-      $1_STRIPFLAGS ?= $(STRIPFLAGS)\n-      $1_STRIP_CMD := $$($1_STRIP) $$($1_STRIPFLAGS) $$($1_TARGET)\n-    endif\n-  endif\n-\n-  $1_LD_OBJ_ARG := $$($1_ALL_OBJS)\n-\n-  # If there are many object files, use an @-file...\n-  ifneq ($$(word 17, $$($1_ALL_OBJS)), )\n-    $1_OBJ_FILE_LIST := $$($1_OBJECT_DIR)\/_$1_objectfilenames.txt\n-    ifneq ($(COMPILER_COMMAND_FILE_FLAG), )\n-      $1_LD_OBJ_ARG := $(COMPILER_COMMAND_FILE_FLAG)$$($1_OBJ_FILE_LIST)\n-    else\n-      # ...except for toolchains which don't support them.\n-      $1_LD_OBJ_ARG := `cat $$($1_OBJ_FILE_LIST)`\n-    endif\n-\n-    # If we are building static library, 'AR' on macosx\/aix may not support @-file.\n-    ifeq ($$($1_TYPE), STATIC_LIBRARY)\n-      ifeq ($(call isTargetOs, macosx aix), true)\n-        $1_LD_OBJ_ARG := `cat $$($1_OBJ_FILE_LIST)`\n-      endif\n-    endif\n-  endif\n-\n-  # Unfortunately the @-file trick does not work reliably when using clang.\n-  # Clang does not propagate the @-file parameter to the ld sub process, but\n-  # instead puts the full content on the command line. At least the llvm ld\n-  # does not even support an @-file.\n-  #\n-  # When linking a large amount of object files, we risk hitting the limit\n-  # of the command line length even on posix systems if the path length of\n-  # the output dir is very long due to our use of absolute paths. To\n-  # mitigate this, use paths relative to the output dir when linking over\n-  # 500 files with clang and the output dir path is deep.\n-  ifneq ($$(word 500, $$($1_ALL_OBJS)), )\n-    ifeq ($$(TOOLCHAIN_TYPE), clang)\n-      # There is no strlen function in make, but checking path depth is a\n-      # reasonable approximation.\n-      ifneq ($$(word 10, $$(subst \/, ,$$(OUTPUTDIR))), )\n-        $1_LINK_OBJS_RELATIVE := true\n-        $1_ALL_OBJS_RELATIVE := $$(patsubst $$(OUTPUTDIR)\/%, %, $$($1_ALL_OBJS))\n-      endif\n-    endif\n-  endif\n-\n-  ifeq ($$($1_TYPE), STATIC_LIBRARY)\n-    # Include partial linking when building the static library with clang on linux.\n-    ifeq ($(call isTargetOs, linux), true)\n-      ifneq ($(findstring $(TOOLCHAIN_TYPE), clang), )\n-        $1_ENABLE_PARTIAL_LINKING := true\n-      endif\n-    endif\n-\n-    $1_VARDEPS := $$($1_AR) $$(ARFLAGS) $$($1_ARFLAGS) $$($1_LIBS) \\\n-        $$($1_EXTRA_LIBS)\n-    ifeq ($$($1_ENABLE_PARTIAL_LINKING), true)\n-      $1_VARDEPS += $$($1_LD) $$($1_SYSROOT_LDFLAGS)\n-    endif\n-    $1_VARDEPS_FILE := $$(call DependOnVariable, $1_VARDEPS, \\\n-        $$($1_OBJECT_DIR)\/$$($1_NOSUFFIX).vardeps)\n-\n-    # Generating a static library, ie object file archive.\n-    ifeq ($(STATIC_BUILD), true)\n-      ifeq ($$($1_USE_MAPFILE_FOR_SYMBOLS), true)\n-        STATIC_MAPFILE_DEP := $$($1_MAPFILE)\n-      endif\n-    endif\n-\n-    $1_TARGET_DEPS := $$($1_ALL_OBJS) $$($1_RES) $$($1_VARDEPS_FILE) $$(STATIC_MAPFILE_DEP)\n-\n-    $1_AR_OBJ_ARG := $$($1_LD_OBJ_ARG)\n-    # With clang on linux, partial linking is enabled and 'AR' takes the output\n-    # object from the partial linking step.\n-    ifeq ($$($1_ENABLE_PARTIAL_LINKING), true)\n-      $1_TARGET_RELOCATABLE := $$($1_OBJECT_DIR)\/$$($1_PREFIX)$$($1_NAME)_relocatable$(OBJ_SUFFIX)\n-      $1_AR_OBJ_ARG := $$($1_TARGET_RELOCATABLE)\n-    endif\n-\n-    $$($1_TARGET): $$($1_TARGET_DEPS)\n-        ifneq ($$($1_OBJ_FILE_LIST), )\n-          ifeq ($$($1_LINK_OBJS_RELATIVE), true)\n-\t    $$(eval $$(call ListPathsSafely, $1_ALL_OBJS_RELATIVE, $$($1_OBJ_FILE_LIST)))\n-          else\n-\t    $$(eval $$(call ListPathsSafely, $1_ALL_OBJS, $$($1_OBJ_FILE_LIST)))\n-          endif\n-        endif\n-\t$$(call LogInfo, Building static library $$($1_BASENAME))\n-\t$$(call MakeDir, $$($1_OUTPUT_DIR) $$($1_SYMBOLS_DIR))\n-        # Do partial linking.\n-        ifeq ($$($1_ENABLE_PARTIAL_LINKING), true)\n-\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_partial_link, \\\n-\t    $(if $$($1_LINK_OBJS_RELATIVE), $$(CD) $$(OUTPUTDIR) ; ) \\\n-\t      $$($1_LD) $(LDFLAGS_CXX_PARTIAL_LINKING) $$($1_SYSROOT_LDFLAGS) \\\n-\t        $(LD_OUT_OPTION)$$($1_TARGET_RELOCATABLE) \\\n-                $$($1_LD_OBJ_ARG))\n-        endif\n-\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n-\t  $(if $$($1_LINK_OBJS_RELATIVE), $$(CD) $$(OUTPUTDIR) ; ) \\\n-\t    $$($1_AR) $$(ARFLAGS) $$($1_ARFLAGS) $(AR_OUT_OPTION)$$($1_TARGET) $$($1_AR_OBJ_ARG) \\\n-\t        $$($1_RES))\n-        ifeq ($(STATIC_BUILD), true)\n-          ifeq ($$($1_USE_MAPFILE_FOR_SYMBOLS), true)\n-\t    $(CP) $$($1_MAPFILE) $$(@D)\/$$(basename $$(@F)).symbols\n-          else\n-\t    $(GetSymbols)\n-          endif\n-        endif\n-  else\n-    # A shared dynamic library or an executable binary has been specified\n-    ifeq ($$($1_TYPE), LIBRARY)\n-      # Generating a dynamic library.\n-      $1_EXTRA_LDFLAGS += $$(call SET_SHARED_LIBRARY_NAME,$$($1_BASENAME))\n-\n-      # Create loadmap on AIX. Helps in diagnosing some problems.\n-      ifneq ($(COMPILER_BINDCMD_FILE_FLAG), )\n-        $1_EXTRA_LDFLAGS += $(COMPILER_BINDCMD_FILE_FLAG)$$($1_OBJECT_DIR)\/$$($1_NOSUFFIX).loadmap\n-      endif\n-    endif\n-\n-    ifeq ($(call isTargetOs, windows), true)\n-      ifeq ($$($1_EMBED_MANIFEST), true)\n-        $1_EXTRA_LDFLAGS += -manifest:embed\n-      endif\n-\n-      $1_IMPORT_LIBRARY := $$($1_OBJECT_DIR)\/$$($1_NAME).lib\n-      $1_EXTRA_LDFLAGS += \"-implib:$$($1_IMPORT_LIBRARY)\"\n-      ifeq ($$($1_TYPE), LIBRARY)\n-        # To properly trigger downstream dependants of the import library, just as\n-        # for debug files, we must have a recipe in the rule. To avoid rerunning\n-        # the recipe every time have it touch the target. If an import library\n-        # file is deleted by something external, explicitly delete the target to\n-        # trigger a rebuild of both.\n-        ifneq ($$(wildcard $$($1_IMPORT_LIBRARY)), $$($1_IMPORT_LIBRARY))\n-          $$(call LogDebug, Deleting $$($1_BASENAME) because import library is missing)\n-          $$(shell $(RM) $$($1_TARGET))\n-        endif\n-        $$($1_IMPORT_LIBRARY): $$($1_TARGET)\n-\t\t$(TOUCH) $$@\n-\n-        $1 += $$($1_IMPORT_LIBRARY)\n-      endif\n-    endif\n-\n-    $1_VARDEPS := $$($1_LD) $$($1_SYSROOT_LDFLAGS) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) \\\n-        $$($1_LIBS) $$($1_EXTRA_LIBS) $$($1_MT) \\\n-        $$($1_CREATE_DEBUGINFO_CMDS) $$($1_MANIFEST_VERSION) \\\n-        $$($1_STRIP_CMD) $$($1_CREATE_DEBUGLINK_CMDS)\n-    $1_VARDEPS_FILE := $$(call DependOnVariable, $1_VARDEPS, \\\n-        $$($1_OBJECT_DIR)\/$$($1_NOSUFFIX).vardeps)\n-\n-    $1_TARGET_DEPS := $$($1_ALL_OBJS) $$($1_RES) $$($1_MANIFEST) \\\n-        $$($1_REAL_MAPFILE) $$($1_VARDEPS_FILE)\n-\n-    $$($1_TARGET): $$($1_TARGET_DEPS)\n-                ifneq ($$($1_OBJ_FILE_LIST), )\n-                  ifeq ($$($1_LINK_OBJS_RELATIVE), true)\n-\t\t    $$(eval $$(call ListPathsSafely, $1_ALL_OBJS_RELATIVE, $$($1_OBJ_FILE_LIST)))\n-                  else\n-\t\t    $$(eval $$(call ListPathsSafely, $1_ALL_OBJS, $$($1_OBJ_FILE_LIST)))\n-                  endif\n-                endif\n-                # Keep as much as possible on one execution line for best performance\n-                # on Windows\n-\t\t$$(call LogInfo, Linking $$($1_BASENAME))\n-\t\t$$(call MakeDir, $$($1_OUTPUT_DIR) $$($1_SYMBOLS_DIR))\n-                ifeq ($(call isTargetOs, windows), true)\n-\n-\t\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n-\t\t      $$($1_LD) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) $$($1_SYSROOT_LDFLAGS) \\\n-\t\t          $(LD_OUT_OPTION)$$($1_TARGET) $$($1_LD_OBJ_ARG) $$($1_RES) \\\n-\t\t          $$($1_LIBS) $$($1_EXTRA_LIBS)) \\\n-\t\t      | $(GREP) -v \"^   Creating library .*\\.lib and object .*\\.exp\" || \\\n-\t\t          test \"$$$$?\" = \"1\" ; \\\n-\t\t  $$($1_CREATE_DEBUGINFO_CMDS)\n-\t\t  $$($1_STRIP_CMD)\n-\t\t  $$($1_CREATE_DEBUGLINK_CMDS)\n-                 ifeq ($(call isBuildOsEnv, windows.wsl2), true)\n-\t\t    $$(CHMOD) +x $$($1_TARGET)\n-                 endif\n-                else\n-\t\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n-\t\t      $$(if $$($1_LINK_OBJS_RELATIVE), $$(CD) $$(OUTPUTDIR) ; ) \\\n-\t\t      $$($1_LD) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) $$($1_SYSROOT_LDFLAGS) \\\n-\t\t          $(LD_OUT_OPTION)$$($1_TARGET) $$($1_LD_OBJ_ARG) $$($1_RES) \\\n-\t\t          $$($1_LIBS) $$($1_EXTRA_LIBS)) ; \\\n-\t\t  $$($1_CREATE_DEBUGINFO_CMDS)\n-\t\t  $$($1_STRIP_CMD)\n-\t\t  $$($1_CREATE_DEBUGLINK_CMDS)\n-                endif\n-                ifeq ($(call isTargetOs, windows), true)\n-                  ifneq ($$($1_MANIFEST), )\n-\t\t    $$($1_MT) -nologo -manifest $$($1_MANIFEST) -identity:\"$$($1_NAME).exe, version=$$($1_MANIFEST_VERSION)\" -outputresource:$$@;#1\n-                  endif\n-                endif\n-                # On macosx, optionally run codesign on every binary.\n-                # Remove signature explicitly first to avoid warnings if the linker\n-                # added a default adhoc signature.\n-                ifeq ($(MACOSX_CODESIGN_MODE), hardened)\n-\t\t  $(CODESIGN) --remove-signature $$@\n-\t\t  $(CODESIGN) -f -s \"$(MACOSX_CODESIGN_IDENTITY)\" --timestamp --options runtime \\\n-\t\t      --entitlements $$(call GetEntitlementsFile, $$@) $$@\n-                else ifeq ($(MACOSX_CODESIGN_MODE), debug)\n-\t\t  $(CODESIGN) --remove-signature $$@\n-\t\t  $(CODESIGN) -f -s - --entitlements $$(call GetEntitlementsFile, $$@) $$@\n-                endif\n-  endif\n-\n-  ifeq ($(GENERATE_COMPILE_COMMANDS_ONLY), true)\n-    $1 := $$($1_ALL_OBJS_JSON)\n-  endif\n","filename":"make\/common\/NativeCompilation.gmk","additions":138,"deletions":1143,"binary":false,"changes":1281,"status":"modified"},{"patch":"@@ -0,0 +1,351 @@\n+#\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+################################################################################\n+# This file contains functionality related to compiling a single native source\n+# file (C, C++ or Objective-C) into an object file. It also harbours related\n+# functionality for generating PCH (precompiled headers) and Windows resource\n+# files.\n+\n+################################################################################\n+# Creates a recipe that creates a compile_commands.json fragment. Remove any\n+# occurrences of FIXPATH programs from the command to show the actual invocation.\n+#\n+# Param 1: Name of file to create\n+# Param 2: Working directory\n+# Param 3: Source file\n+# Param 4: Compile command\n+################################################################################\n+define WriteCompileCommandsFragment\n+  $(call LogInfo, Creating compile commands fragment for $(notdir $3))\n+  $(call MakeDir, $(dir $1))\n+  $(call WriteFile,{ \\\n+      \"directory\": \"$(strip $(call FixPath, $2))\"$(COMMA) \\\n+      \"file\": \"$(strip $(call FixPath, $3))\"$(COMMA) \\\n+      \"command\": \"$(strip $(subst $(DQUOTE),\\$(DQUOTE),$(subst \\,\\\\,\\\n+        $(subst $(FIXPATH),,$(call FixPath, $4)))))\" \\\n+    }$(COMMA), \\\n+    $1)\n+endef\n+\n+################################################################################\n+# Extensions of files handled by this macro.\n+NATIVE_SOURCE_EXTENSIONS := %.S %.c %.cpp %.cc %.m %.mm\n+\n+# Replaces native source extensions with the object file extension in a string.\n+# Param 1: the string containing source file names with extensions\n+# The surrounding strip is needed to keep additional whitespace out\n+define replace_with_obj_extension\n+$(strip \\\n+  $(foreach extension, $(NATIVE_SOURCE_EXTENSIONS), \\\n+      $(patsubst $(extension),%$(OBJ_SUFFIX), $(filter $(extension), $1))) \\\n+)\n+endef\n+\n+################################################################################\n+# This pattern is used to transform the output of the microsoft CL compiler\n+# into a make syntax dependency file (.d)\n+WINDOWS_SHOWINCLUDE_SED_PATTERN := \\\n+    -e '\/^Note: including file:\/!d' \\\n+    -e 's|Note: including file: *||' \\\n+    -e 's|\\r||g' \\\n+    -e 's|\\\\|\/|g' \\\n+    -e 's|^\\([a-zA-Z]\\):|$(WINENV_PREFIX)\/\\1|g' \\\n+    -e '\\|$(TOPDIR)|I !d' \\\n+    -e 's|$$$$| \\\\|g' \\\n+    #\n+\n+################################################################################\n+# This pattern is used to transform a dependency file (.d) to a list\n+# of make targets for dependent files (.d.targets)\n+DEPENDENCY_TARGET_SED_PATTERN := \\\n+    -e 's\/\\#.*\/\/' \\\n+    -e 's\/^[^:]*: *\/\/' \\\n+    -e 's\/ *\\\\$$$$\/\/' \\\n+    -e 's\/^[\t ]*\/\/' \\\n+    -e '\/^$$$$\/ d' \\\n+    -e 's\/$$$$\/ :\/' \\\n+    #\n+\n+################################################################################\n+# Create the recipe needed to compile a single native source file.\n+#\n+# Parameter 1 is the name of the rule, based on the name of the library\/\n+# program being build and the name of the source code file, e.g.\n+# BUILD_LIBFOO_fooMain.cpp.\n+#\n+# Remaining parameters are named arguments:\n+#   FILE - The full path of the source file to compiler\n+#   BASE - The name of the rule for the entire binary to build ($1)\n+#\n+CreateCompiledNativeFile = $(NamedParamsMacroTemplate)\n+define CreateCompiledNativeFileBody\n+  $1_FILENAME := $$(notdir $$($1_FILE))\n+\n+  # The target file to be generated.\n+  $1_OBJ := $$($$($1_BASE)_OBJECT_DIR)\/$$(call replace_with_obj_extension, \\\n+      $$($1_FILENAME))\n+\n+  # Generate the corresponding compile_commands.json fragment.\n+  $1_OBJ_JSON = $$(MAKESUPPORT_OUTPUTDIR)\/compile-commands\/$$(subst \/,_,$$(subst \\\n+      $$(OUTPUTDIR)\/,,$$($1_OBJ))).json\n+  $$($1_BASE)_ALL_OBJS_JSON += $$($1_OBJ_JSON)\n+\n+  # Only continue if this object file hasn't been processed already. This lets\n+  # the first found source file override any other with the same name.\n+  ifeq ($$($1_OBJ_PROCESSED), )\n+    $1_OBJ_PROCESSED := true\n+    # This is the definite source file to use for $1_FILENAME.\n+    $1_SRC_FILE := $$($1_FILE)\n+\n+    $$(eval $$(call SetupCompileFileFlags,$1,$$($1_BASE)))\n+\n+    ifneq ($$(filter %.c, $$($1_FILENAME)), )\n+      # Compile as a C file\n+      $1_CFLAGS += $$($1_WARNINGS_FLAGS)\n+      $1_FLAGS := $(CFLAGS_CCACHE) $$($1_USE_PCH_FLAGS) $$($1_BASE_CFLAGS) \\\n+          $$($1_OPT_CFLAGS) $$($1_CFLAGS) -c\n+      $1_COMPILER := $$($$($1_BASE)_CC)\n+    else ifneq ($$(filter %.m, $$($1_FILENAME)), )\n+      # Compile as an Objective-C file\n+      $1_CFLAGS += $$($1_WARNINGS_FLAGS)\n+      $1_FLAGS := -x objective-c $(CFLAGS_CCACHE) $$($1_USE_PCH_FLAGS) \\\n+          $$($1_BASE_CFLAGS) $$($1_OPT_CFLAGS) $$($1_CFLAGS) -c\n+      $1_COMPILER := $$($$($1_BASE)_CC)\n+    else ifneq ($$(filter %.S, $$($1_FILENAME)), )\n+      # Compile as preprocessed assembler file\n+      $1_FLAGS := $(BASIC_ASFLAGS) $$($1_BASE_ASFLAGS)\n+      $1_COMPILER := $(AS)\n+\n+      # gcc or clang assembly files must contain an appropriate relative .file\n+      # path for reproducible builds.\n+      ifneq ($(findstring $(TOOLCHAIN_TYPE), gcc clang), )\n+        # If no absolute paths allowed, work out relative source file path\n+        # for assembly .file substitution, otherwise use full file path\n+        ifeq ($(ALLOW_ABSOLUTE_PATHS_IN_OUTPUT), false)\n+          $1_REL_ASM_SRC := $$(call RelativePath, $$($1_FILE), $(WORKSPACE_ROOT))\n+        else\n+          $1_REL_ASM_SRC := $$($1_FILE)\n+        endif\n+        $1_FLAGS := $$($1_FLAGS) -DASSEMBLY_SRC_FILE='\"$$($1_REL_ASM_SRC)\"' \\\n+            -include $(TOPDIR)\/make\/data\/autoheaders\/assemblyprefix.h\n+      endif\n+    else ifneq ($$(filter %.cpp %.cc %.mm, $$($1_FILENAME)), )\n+      # Compile as a C++ or Objective-C++ file\n+      $1_CXXFLAGS += $$($1_WARNINGS_FLAGS)\n+      $1_FLAGS := $(CFLAGS_CCACHE) $$($1_USE_PCH_FLAGS) $$($1_BASE_CXXFLAGS) \\\n+          $$($1_OPT_CXXFLAGS) $$($1_CXXFLAGS) -c\n+      $1_COMPILER := $$($$($1_BASE)_CXX)\n+    else\n+      $$(error Internal error in NativeCompilation.gmk: no compiler for file $$($1_FILENAME))\n+    endif\n+\n+    # And this is the dependency file for this obj file.\n+    $1_DEPS_FILE := $$(patsubst %$(OBJ_SUFFIX),%.d,$$($1_OBJ))\n+    # The dependency target file lists all dependencies as empty targets to\n+    # avoid make error \"No rule to make target\" for removed files\n+    $1_DEPS_TARGETS_FILE := $$(patsubst %$(OBJ_SUFFIX),%.d.targets,$$($1_OBJ))\n+\n+    # Only try to load individual dependency information files if the global\n+    # file hasn't been loaded (could happen if make was interrupted).\n+    ifneq ($$($$($1_BASE)_DEPS_FILE_LOADED), true)\n+      # Include previously generated dependency information. (if it exists)\n+      -include $$($1_DEPS_FILE)\n+      -include $$($1_DEPS_TARGETS_FILE)\n+    endif\n+\n+    ifneq ($$(strip $$($1_CFLAGS) $$($1_CXXFLAGS) $$($1_OPTIMIZATION)), )\n+      $1_VARDEPS := $$($1_CFLAGS) $$($1_CXXFLAGS) $$($1_OPTIMIZATION)\n+      $1_VARDEPS_FILE := $$(call DependOnVariable, $1_VARDEPS, $$($1_OBJ).vardeps)\n+    endif\n+\n+    $1_OBJ_DEPS := $$($1_SRC_FILE) $$($$($1_BASE)_COMPILE_VARDEPS_FILE) \\\n+        $$($$($1_BASE)_EXTRA_DEPS) $$($1_VARDEPS_FILE)\n+    $1_COMPILE_OPTIONS := $$($1_FLAGS) $(CC_OUT_OPTION)$$($1_OBJ) $$($1_SRC_FILE)\n+    # For reproducible builds with gcc and clang ensure random symbol generation is\n+    # seeded deterministically\n+    ifneq ($(findstring $(TOOLCHAIN_TYPE), gcc clang), )\n+      $1_COMPILE_OPTIONS += -frandom-seed=\"$$($1_FILENAME)\"\n+    endif\n+\n+    $$($1_OBJ_JSON): $$($1_OBJ_DEPS)\n+\t$$(call WriteCompileCommandsFragment, $$@, $$(PWD), $$($1_SRC_FILE), \\\n+\t    $$($1_COMPILER) $$($1_COMPILE_OPTIONS))\n+\n+    $$($1_OBJ): $$($1_OBJ_DEPS) | $$($$($1_BASE)_BUILD_INFO)\n+\t$$(call LogInfo, Compiling $$($1_FILENAME) (for $$($$($1_BASE)_BASENAME)))\n+\t$$(call MakeDir, $$(@D))\n+        ifneq ($(TOOLCHAIN_TYPE), microsoft)\n+\t  $$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n+\t      $$($1_COMPILER) $$(GENDEPS_FLAGS) \\\n+\t      $$(addsuffix .tmp, $$($1_DEPS_FILE)) \\\n+\t      $$($1_COMPILE_OPTIONS)))\n+          ifneq ($$($1_DEPS_FILE), )\n+\t    $$(call fix-deps-file, $$($1_DEPS_FILE))\n+            # Create a dependency target file from the dependency file.\n+            # Solution suggested by:\n+            # http:\/\/make.mad-scientist.net\/papers\/advanced-auto-dependency-generation\/\n+\t    $(SED) $(DEPENDENCY_TARGET_SED_PATTERN) $$($1_DEPS_FILE) \\\n+\t        > $$($1_DEPS_TARGETS_FILE)\n+          endif\n+        else\n+          # The Visual Studio compiler lacks a feature for generating make\n+          # dependencies, but by setting -showIncludes, all included files are\n+          # printed. These are filtered out and parsed into make dependences.\n+          #\n+          # Keep as much as possible on one execution line for best performance\n+          # on Windows. No need to save exit code from compilation since\n+          # pipefail is always active on Windows.\n+          ifeq ($$(filter %.S, $$($1_FILENAME)), )\n+\t    $$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n+\t        $$($1_COMPILER) -showIncludes $$($1_COMPILE_OPTIONS))) \\\n+\t        | $(TR) -d '\\r' | $(GREP) -v -e \"^Note: including file:\" \\\n+\t            -e \"^$$($1_FILENAME)$$$$\" || test \"$$$$?\" = \"1\" ; \\\n+\t    $(ECHO) $$@: \\\\ > $$($1_DEPS_FILE) ; \\\n+\t    $(SED) $(WINDOWS_SHOWINCLUDE_SED_PATTERN) $$($1_OBJ).log \\\n+\t        | $(SORT) -u >> $$($1_DEPS_FILE) ; \\\n+\t    $(ECHO) >> $$($1_DEPS_FILE) ; \\\n+\t    $(SED) $(DEPENDENCY_TARGET_SED_PATTERN) $$($1_DEPS_FILE) > $$($1_DEPS_TARGETS_FILE)\n+          else\n+            # For assembler calls just create empty dependency lists\n+\t    $$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n+\t        $$($1_COMPILER) $$($1_FLAGS) \\\n+\t        $(CC_OUT_OPTION)$$($1_OBJ) -Ta $$($1_SRC_FILE))) \\\n+\t        | $(TR) -d '\\r' | $(GREP) -v -e \"Assembling:\" || test \"$$$$?\" = \"1\" ; \\\n+\t    $(ECHO) > $$($1_DEPS_FILE) ; \\\n+\t    $(ECHO) > $$($1_DEPS_TARGETS_FILE)\n+          endif\n+        endif\n+  endif\n+endef\n+\n+################################################################################\n+define CreatePrecompiledHeader\n+  ifneq ($$($1_PRECOMPILED_HEADER), )\n+    ifeq ($(USE_PRECOMPILED_HEADER), true)\n+      ifeq ($(TOOLCHAIN_TYPE), microsoft)\n+        $1_PCH_FILE := $$($1_OBJECT_DIR)\/$1.pch\n+        $1_GENERATED_PCH_SRC := $$($1_OBJECT_DIR)\/$1_pch.cpp\n+        $1_GENERATED_PCH_OBJ := $$($1_OBJECT_DIR)\/$1_pch$(OBJ_SUFFIX)\n+\n+        $$(eval $$(call CreateCompiledNativeFile, $1_$$(notdir $$($1_GENERATED_PCH_SRC)), \\\n+            FILE := $$($1_GENERATED_PCH_SRC), \\\n+            BASE := $1, \\\n+            EXTRA_CXXFLAGS := -Fp$$($1_PCH_FILE) -Yc$$(notdir $$($1_PRECOMPILED_HEADER)), \\\n+        ))\n+\n+        $1_USE_PCH_FLAGS := \\\n+            -Fp$$($1_PCH_FILE) -Yu$$(notdir $$($1_PRECOMPILED_HEADER))\n+\n+        $$($1_ALL_OBJS): $$($1_GENERATED_PCH_OBJ)\n+\n+        # Explicitly add the pch obj file first to ease comparing to old\n+        # hotspot build.\n+        $1_ALL_OBJS := $$($1_GENERATED_PCH_OBJ) $$($1_ALL_OBJS)\n+\n+        $$($1_GENERATED_PCH_SRC):\n+\t\t$(ECHO) \"#include \\\"$$(notdir $$($1_PRECOMPILED_HEADER))\\\"\" > $$@\n+\n+      else ifneq ($(findstring $(TOOLCHAIN_TYPE), gcc clang), )\n+        ifeq ($(TOOLCHAIN_TYPE), gcc)\n+          $1_PCH_FILE := $$($1_OBJECT_DIR)\/precompiled\/$$(notdir $$($1_PRECOMPILED_HEADER)).gch\n+          $1_USE_PCH_FLAGS := -I$$($1_OBJECT_DIR)\/precompiled\n+        else ifeq ($(TOOLCHAIN_TYPE), clang)\n+          $1_PCH_FILE := $$($1_OBJECT_DIR)\/precompiled\/$$(notdir $$($1_PRECOMPILED_HEADER)).pch\n+          $1_USE_PCH_FLAGS := -include-pch $$($1_PCH_FILE)\n+        endif\n+        $1_PCH_DEPS_FILE := $$($1_PCH_FILE).d\n+        $1_PCH_DEPS_TARGETS_FILE := $$($1_PCH_FILE).d.targets\n+\n+        -include $$($1_PCH_DEPS_FILE)\n+        -include $$($1_PCH_DEPS_TARGETS_FILE)\n+\n+        $1_PCH_COMMAND := $$($1_CC) $$($1_CFLAGS) $$($1_EXTRA_CFLAGS) $$($1_SYSROOT_CFLAGS) \\\n+            $$($1_OPT_CFLAGS) -x c++-header -c $(GENDEPS_FLAGS) \\\n+            $$(addsuffix .tmp, $$($1_PCH_DEPS_FILE))\n+\n+        $$($1_PCH_FILE): $$($1_PRECOMPILED_HEADER) $$($1_COMPILE_VARDEPS_FILE)\n+\t\t$$(call LogInfo, Generating precompiled header)\n+\t\t$$(call MakeDir, $$(@D))\n+\t\t$$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n+\t\t    $$($1_PCH_COMMAND) $$< -o $$@))\n+\t\t$$(call fix-deps-file, $$($1_PCH_DEPS_FILE))\n+\t\t$(SED) $(DEPENDENCY_TARGET_SED_PATTERN) $$($1_PCH_DEPS_FILE) \\\n+\t\t    > $$($1_PCH_DEPS_TARGETS_FILE)\n+\n+        $$($1_ALL_OBJS): $$($1_PCH_FILE)\n+\n+        # Generate the corresponding compile_commands.json fragment.\n+        $1_PCH_FILE_JSON := $$(MAKESUPPORT_OUTPUTDIR)\/compile-commands\/$$(subst \/,_,$$(subst \\\n+            $$(OUTPUTDIR)\/,,$$($1_PCH_FILE))).json\n+        $1_ALL_OBJS_JSON += $$($1_PCH_FILE_JSON)\n+\n+        $$($1_PCH_FILE_JSON): $$($1_PRECOMPILED_HEADER) $$($1_COMPILE_VARDEPS_FILE)\n+\t\t$$(call WriteCompileCommandsFragment, $$@, $$(PWD), $$<, \\\n+\t\t    $$($1_PCH_COMMAND) $$< -o $$($1_PCH_FILE))\n+      endif\n+    endif\n+  endif\n+endef\n+\n+################################################################################\n+define CreateWindowsResourceFile\n+  ifneq ($$($1_VERSIONINFO_RESOURCE), )\n+    $1_RES := $$($1_OBJECT_DIR)\/$$($1_BASENAME).res\n+    $1_RES_DEPS_FILE := $$($1_RES).d\n+    $1_RES_DEPS_TARGETS_FILE := $$($1_RES).d.targets\n+    -include $$($1_RES_DEPS_FILE)\n+    -include $$($1_RES_DEPS_TARGETS_FILE)\n+\n+    $1_RES_VARDEPS := $$($1_RC) $$($1_RCFLAGS)\n+    $1_RES_VARDEPS_FILE := $$(call DependOnVariable, $1_RES_VARDEPS, \\\n+        $$($1_RES).vardeps)\n+\n+    $$($1_RES): $$($1_VERSIONINFO_RESOURCE) $$($1_RES_VARDEPS_FILE)\n+\t\t$$(call LogInfo, Compiling resource $$(notdir $$($1_VERSIONINFO_RESOURCE)) (for $$($1_BASENAME)))\n+\t\t$$(call MakeDir, $$(@D) $$($1_OBJECT_DIR))\n+\t\t$$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n+\t\t    $$($1_RC) $$($1_RCFLAGS) $$($1_SYSROOT_CFLAGS) $(CC_OUT_OPTION)$$@ \\\n+\t\t    $$($1_VERSIONINFO_RESOURCE) 2>&1 ))\n+                # Windows RC compiler does not support -showIncludes, so we mis-use CL\n+                # for this. Filter out RC specific arguments that are unknown to CL.\n+                # For some unknown reason, in this case CL actually outputs the show\n+                # includes to stderr so need to redirect it to hide the output from the\n+                # main log.\n+\t\t$$(call ExecuteWithLog, $$($1_RES_DEPS_FILE)$(OBJ_SUFFIX), \\\n+\t\t    $$($1_CC) $$(filter-out -l%, $$($1_RCFLAGS)) \\\n+\t\t        $$($1_SYSROOT_CFLAGS) -showIncludes -nologo -TC \\\n+\t\t        $(CC_OUT_OPTION)$$($1_RES_DEPS_FILE)$(OBJ_SUFFIX) -P -Fi$$($1_RES_DEPS_FILE).pp \\\n+\t\t        $$($1_VERSIONINFO_RESOURCE)) 2>&1 \\\n+\t\t    | $(TR) -d '\\r' | $(GREP) -v -e \"^Note: including file:\" \\\n+\t\t        -e \"^$$(notdir $$($1_VERSIONINFO_RESOURCE))$$$$\" || test \"$$$$?\" = \"1\" ; \\\n+\t\t$(ECHO) $$($1_RES): \\\\ > $$($1_RES_DEPS_FILE) ; \\\n+\t\t$(SED) $(WINDOWS_SHOWINCLUDE_SED_PATTERN) $$($1_RES_DEPS_FILE)$(OBJ_SUFFIX).log \\\n+\t\t    >> $$($1_RES_DEPS_FILE) ; \\\n+\t\t$(ECHO) >> $$($1_RES_DEPS_FILE) ;\\\n+\t\t$(SED) $(DEPENDENCY_TARGET_SED_PATTERN) $$($1_RES_DEPS_FILE) \\\n+\t\t    > $$($1_RES_DEPS_TARGETS_FILE)\n+  endif\n+endef\n","filename":"make\/common\/native\/CompileFile.gmk","additions":351,"deletions":0,"binary":false,"changes":351,"status":"added"},{"patch":"@@ -0,0 +1,118 @@\n+#\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+################################################################################\n+# This file contains functionality related to native debug symbol handling.\n+\n+################################################################################\n+define CreateDebugSymbols\n+  ifneq ($$($1_COPY_DEBUG_SYMBOLS), false)\n+    $1_COPY_DEBUG_SYMBOLS := $(COPY_DEBUG_SYMBOLS)\n+  endif\n+\n+  ifneq ($$($1_ZIP_EXTERNAL_DEBUG_SYMBOLS), false)\n+    $1_ZIP_EXTERNAL_DEBUG_SYMBOLS := $(ZIP_EXTERNAL_DEBUG_SYMBOLS)\n+  endif\n+\n+  ifeq ($$($1_COPY_DEBUG_SYMBOLS), true)\n+    ifneq ($$($1_DEBUG_SYMBOLS), false)\n+      $$(call SetIfEmpty, $1_SYMBOLS_DIR, $$($1_OUTPUT_DIR))\n+      # Only copy debug symbols for dynamic libraries and programs.\n+      ifneq ($$($1_TYPE), STATIC_LIBRARY)\n+        # Generate debuginfo files.\n+        ifeq ($(call isTargetOs, windows), true)\n+          $1_EXTRA_LDFLAGS += -debug \"-pdb:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).pdb\" \\\n+              \"-map:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).map\"\n+          ifeq ($(SHIP_DEBUG_SYMBOLS), public)\n+            $1_EXTRA_LDFLAGS += \"-pdbstripped:$$($1_SYMBOLS_DIR)\/$$($1_BASENAME).stripped.pdb\"\n+          endif\n+          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).pdb \\\n+              $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).map\n+\n+        else ifeq ($(call isTargetOs, linux), true)\n+          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).debuginfo\n+          # Setup the command line creating debuginfo files, to be run after linking.\n+          # It cannot be run separately since it updates the original target file\n+          # Creating the debuglink is done in another command rather than all at once\n+          # so we can run it after strip is called, since strip can sometimes mangle the\n+          # embedded debuglink, which we want to avoid.\n+          $1_CREATE_DEBUGINFO_CMDS := \\\n+              $$($1_OBJCOPY) --only-keep-debug $$($1_TARGET) $$($1_DEBUGINFO_FILES) && \\\n+              $$(CHMOD) -x $$($1_DEBUGINFO_FILES)\n+          $1_CREATE_DEBUGLINK_CMDS := $(CD) $$($1_SYMBOLS_DIR) && \\\n+              $$($1_OBJCOPY) --add-gnu-debuglink=$$($1_DEBUGINFO_FILES) $$($1_TARGET)\n+\n+        else ifeq ($(call isTargetOs, aix), true)\n+          # AIX does not provide the equivalent of OBJCOPY to extract debug symbols,\n+          # so we copy the compiled object with symbols to the .debuginfo file, which\n+          # happens prior to the STRIP_CMD on the original target object file.\n+          $1_DEBUGINFO_FILES := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).debuginfo\n+          $1_CREATE_DEBUGINFO_CMDS := $(CP) $$($1_TARGET) $$($1_DEBUGINFO_FILES)\n+\n+        else ifeq ($(call isTargetOs, macosx), true)\n+          $1_DEBUGINFO_FILES := \\\n+              $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).dSYM\/Contents\/Info.plist \\\n+              $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).dSYM\/Contents\/Resources\/DWARF\/$$($1_BASENAME)\n+          $1_CREATE_DEBUGINFO_CMDS := \\\n+              $(DSYMUTIL) --out $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).dSYM $$($1_TARGET)\n+        endif\n+\n+        # Since the link rule creates more than one file that we want to track,\n+        # we have to use some tricks to get make to cooperate. To properly\n+        # trigger downstream dependants of $$($1_DEBUGINFO_FILES), we must have\n+        # a recipe in the rule below. To avoid rerunning the recipe every time\n+        # have it touch the target. If a debuginfo file is deleted by something\n+        # external, explicitly delete the TARGET to trigger a rebuild of both.\n+        ifneq ($$(wildcard $$($1_DEBUGINFO_FILES)), $$($1_DEBUGINFO_FILES))\n+          $$(call LogDebug, Deleting $$($1_BASENAME) because debuginfo files are missing)\n+          $$(shell $(RM) $$($1_TARGET))\n+        endif\n+        $$($1_DEBUGINFO_FILES): $$($1_TARGET)\n+\t\t$$(if $$(CORRECT_FUNCTION_IN_RECIPE_EVALUATION), \\\n+\t\t  $$(if $$(wildcard $$@), , $$(error $$@ was not created for $$<)) \\\n+\t\t)\n+\t\t$(TOUCH) $$@\n+\n+        $1 += $$($1_DEBUGINFO_FILES)\n+\n+        ifeq ($$($1_ZIP_EXTERNAL_DEBUG_SYMBOLS), true)\n+          ifeq ($(call isTargetOs, windows), true)\n+            $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_BASENAME).diz\n+          else\n+            $1_DEBUGINFO_ZIP := $$($1_SYMBOLS_DIR)\/$$($1_NOSUFFIX).diz\n+          endif\n+          $1 += $$($1_DEBUGINFO_ZIP)\n+\n+          # The dependency on TARGET is needed for debuginfo files\n+          # to be rebuilt properly.\n+          $$($1_DEBUGINFO_ZIP): $$($1_DEBUGINFO_FILES) $$($1_TARGET)\n+\t\t$(CD) $$($1_SYMBOLS_DIR) && \\\n+\t\t    $(ZIPEXE) -q -r $$@ $$(subst $$($1_SYMBOLS_DIR)\/,, $$($1_DEBUGINFO_FILES))\n+\n+        endif\n+       endif # !STATIC_LIBRARY\n+    endif # $1_DEBUG_SYMBOLS != false\n+  endif # COPY_DEBUG_SYMBOLS\n+endef\n","filename":"make\/common\/native\/DebugSymbols.gmk","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"},{"patch":"@@ -0,0 +1,225 @@\n+#\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+################################################################################\n+# This file contains functionality related to setting up compiler and linker\n+# flags, based on various more abstract sources of compilation description,\n+# like optimization level.\n+\n+################################################################################\n+# $1 is the prefix of the file to be compiled\n+# $2 is the prefix of the library, i.e. $$($1_BASE)\n+define SetupCompileFileFlags\n+  ifeq ($$($1_OPTIMIZATION), )\n+    $1_OPT_CFLAGS := $$($2_OPT_CFLAGS)\n+    $1_OPT_CXXFLAGS := $$($2_OPT_CXXFLAGS)\n+  else\n+    ifeq ($$($1_OPTIMIZATION), NONE)\n+      $1_OPT_CFLAGS := $(C_O_FLAG_NONE)\n+      $1_OPT_CXXFLAGS := $(CXX_O_FLAG_NONE)\n+    else ifeq ($$($1_OPTIMIZATION), LOW)\n+      $1_OPT_CFLAGS := $(C_O_FLAG_NORM)\n+      $1_OPT_CXXFLAGS := $(CXX_O_FLAG_NORM)\n+    else ifeq ($$($1_OPTIMIZATION), HIGH)\n+      $1_OPT_CFLAGS := $(C_O_FLAG_HI)\n+      $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HI)\n+    else ifeq ($$($1_OPTIMIZATION), HIGHEST)\n+      $1_OPT_CFLAGS := $(C_O_FLAG_HIGHEST)\n+      $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HIGHEST)\n+    else ifeq ($$($1_OPTIMIZATION), HIGHEST_JVM)\n+      $1_OPT_CFLAGS := $(C_O_FLAG_HIGHEST_JVM)\n+      $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HIGHEST_JVM)\n+    else ifeq ($$($1_OPTIMIZATION), SIZE)\n+      $1_OPT_CFLAGS := $(C_O_FLAG_SIZE)\n+      $1_OPT_CXXFLAGS := $(CXX_O_FLAG_SIZE)\n+    else\n+      $$(error Unknown value for file OPTIMIZATION: $$($1_OPTIMIZATION))\n+    endif\n+  endif\n+\n+  ifneq ($$($2_PRECOMPILED_HEADER), )\n+    ifeq ($$(filter $$($1_FILENAME), $$($2_PRECOMPILED_HEADER_EXCLUDE)), )\n+      $1_USE_PCH_FLAGS := $$($2_USE_PCH_FLAGS)\n+    endif\n+  endif\n+\n+  ifneq ($(DISABLE_WARNING_PREFIX), )\n+    $1_WARNINGS_FLAGS := $$(addprefix $(DISABLE_WARNING_PREFIX), \\\n+      $$($2_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)_$$($1_FILENAME)) \\\n+      $$($2_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS)_$$($1_FILENAME)))\n+  endif\n+\n+  $1_BASE_CFLAGS :=  $$($2_CFLAGS) $$($2_EXTRA_CFLAGS) \\\n+      $$($2_SYSROOT_CFLAGS)\n+  $1_BASE_CXXFLAGS := $$($2_CXXFLAGS) $$($2_EXTRA_CXXFLAGS) \\\n+      $$($2_SYSROOT_CFLAGS) $$($1_EXTRA_CXXFLAGS)\n+  $1_BASE_ASFLAGS := $$($2_ASFLAGS) $$($2_EXTRA_ASFLAGS)\n+endef\n+\n+################################################################################\n+define SetupCompilerFlags\n+  # Pickup extra OPENJDK_TARGET_OS_TYPE, OPENJDK_TARGET_OS, TOOLCHAIN_TYPE and\n+  # OPENJDK_TARGET_OS plus OPENJDK_TARGET_CPU pair dependent variables for CFLAGS.\n+  $1_EXTRA_CFLAGS := $$($1_CFLAGS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_CFLAGS_$(OPENJDK_TARGET_OS)) \\\n+      $$($1_CFLAGS_$(TOOLCHAIN_TYPE)) \\\n+      $$($1_CFLAGS_$(OPENJDK_TARGET_OS)_$(OPENJDK_TARGET_CPU))\n+\n+  ifneq ($(DEBUG_LEVEL), release)\n+    # Pickup extra debug dependent variables for CFLAGS\n+    $1_EXTRA_CFLAGS += $$($1_CFLAGS_debug)\n+    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS_TYPE)_debug)\n+    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS)_debug)\n+    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS)_$(OPENJDK_TARGET_CPU)_debug)\n+  else\n+    $1_EXTRA_CFLAGS += $$($1_CFLAGS_release)\n+    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS_TYPE)_release)\n+    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS)_release)\n+    $1_EXTRA_CFLAGS += $$($1_CFLAGS_$(OPENJDK_TARGET_OS)_$(OPENJDK_TARGET_CPU)_release)\n+  endif\n+  ifeq ($(STATIC_LIBS), true)\n+    $1_EXTRA_CFLAGS += $$(STATIC_LIBS_CFLAGS)\n+  endif\n+\n+  # Pickup extra OPENJDK_TARGET_OS_TYPE, OPENJDK_TARGET_OS and\/or TOOLCHAIN_TYPE\n+  # dependent variables for CXXFLAGS.\n+  $1_EXTRA_CXXFLAGS := $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS)) \\\n+      $$($1_CXXFLAGS_$(TOOLCHAIN_TYPE))\n+\n+  ifneq ($(DEBUG_LEVEL), release)\n+    # Pickup extra debug dependent variables for CXXFLAGS\n+    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_debug)\n+    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS_TYPE)_debug)\n+    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS)_debug)\n+  else\n+    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_release)\n+    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS_TYPE)_release)\n+    $1_EXTRA_CXXFLAGS += $$($1_CXXFLAGS_$(OPENJDK_TARGET_OS)_release)\n+  endif\n+  ifeq ($(STATIC_LIBS), true)\n+    $1_EXTRA_CXXFLAGS += $$(STATIC_LIB_CFLAGS)\n+  endif\n+\n+  # If no C++ flags are explicitly set, default to using the C flags.\n+  # After that, we can set additional C++ flags that should not interfere\n+  # with the mechanism for copying the C flags by default.\n+  ifeq ($$($1_CXXFLAGS), )\n+    $1_CXXFLAGS := $$($1_CFLAGS)\n+  endif\n+  ifeq ($$(strip $$($1_EXTRA_CXXFLAGS)), )\n+    $1_EXTRA_CXXFLAGS := $$($1_EXTRA_CFLAGS)\n+  endif\n+\n+  $$(call SetIfEmpty, $1_COMPILE_WITH_DEBUG_SYMBOLS, $$(COMPILE_WITH_DEBUG_SYMBOLS))\n+\n+  ifeq ($(STATIC_LIBS), true)\n+    # For release builds where debug symbols are configured to be moved to\n+    # separate debuginfo files, disable debug symbols for static libs instead.\n+    # We don't currently support this configuration and we don't want symbol\n+    # information in release builds unless explicitly asked to provide it.\n+    ifeq ($(DEBUG_LEVEL), release)\n+      ifeq ($(COPY_DEBUG_SYMBOLS), true)\n+        $1_COMPILE_WITH_DEBUG_SYMBOLS := false\n+      endif\n+    endif\n+  endif\n+\n+  ifeq ($$($1_COMPILE_WITH_DEBUG_SYMBOLS), true)\n+    $1_EXTRA_CFLAGS += $$(CFLAGS_DEBUG_SYMBOLS)\n+    $1_EXTRA_CXXFLAGS += $$(CFLAGS_DEBUG_SYMBOLS)\n+    $1_EXTRA_ASFLAGS += $$(ASFLAGS_DEBUG_SYMBOLS)\n+  endif\n+\n+  # Pass the library name for static JNI library naming\n+  ifeq ($$($1_TYPE), STATIC_LIBRARY)\n+    $1_EXTRA_CFLAGS += -DLIBRARY_NAME=$$($1_NAME)\n+    $1_EXTRA_CXXFLAGS += -DLIBRARY_NAME=$$($1_NAME)\n+  endif\n+\n+  # Pick up disabled warnings, if possible on this platform.\n+  ifneq ($(DISABLE_WARNING_PREFIX), )\n+    $1_EXTRA_CFLAGS += $$(addprefix $(DISABLE_WARNING_PREFIX), \\\n+        $$(DISABLED_WARNINGS) \\\n+        $$(DISABLED_WARNINGS_C) \\\n+        $$($1_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)) \\\n+        $$($1_DISABLED_WARNINGS_C_$(TOOLCHAIN_TYPE)) \\\n+        $$($1_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS)) \\\n+        $$($1_DISABLED_WARNINGS_C_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS)))\n+    $1_EXTRA_CXXFLAGS += $$(addprefix $(DISABLE_WARNING_PREFIX), \\\n+        $$(DISABLED_WARNINGS) \\\n+        $$(DISABLED_WARNINGS_CXX) \\\n+        $$($1_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)) \\\n+        $$($1_DISABLED_WARNINGS_CXX_$(TOOLCHAIN_TYPE)) \\\n+        $$($1_DISABLED_WARNINGS_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS)) \\\n+        $$($1_DISABLED_WARNINGS_CXX_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS)))\n+  endif\n+\n+  # Check if warnings should be considered errors.\n+  # Pick first binary and toolchain specific, then binary specific, then general setting.\n+  ifeq ($$($1_WARNINGS_AS_ERRORS_$(TOOLCHAIN_TYPE)), )\n+    ifeq ($$($1_WARNINGS_AS_ERRORS), )\n+      $1_WARNINGS_AS_ERRORS_$(TOOLCHAIN_TYPE) := $$(WARNINGS_AS_ERRORS)\n+    else\n+      $1_WARNINGS_AS_ERRORS_$(TOOLCHAIN_TYPE) := $$($1_WARNINGS_AS_ERRORS)\n+    endif\n+  endif\n+\n+  ifeq ($$($1_WARNINGS_AS_ERRORS_$(TOOLCHAIN_TYPE)), true)\n+    $1_EXTRA_CFLAGS += $(CFLAGS_WARNINGS_ARE_ERRORS)\n+    $1_EXTRA_CXXFLAGS += $(CFLAGS_WARNINGS_ARE_ERRORS)\n+  endif\n+\n+  ifeq (NONE, $$($1_OPTIMIZATION))\n+    $1_OPT_CFLAGS := $(C_O_FLAG_NONE)\n+    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_NONE)\n+  else ifeq (LOW, $$($1_OPTIMIZATION))\n+    $1_OPT_CFLAGS := $(C_O_FLAG_NORM)\n+    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_NORM)\n+  else ifeq (HIGH, $$($1_OPTIMIZATION))\n+    $1_OPT_CFLAGS := $(C_O_FLAG_HI)\n+    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HI)\n+  else ifeq (HIGHEST, $$($1_OPTIMIZATION))\n+    $1_OPT_CFLAGS := $(C_O_FLAG_HIGHEST)\n+    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HIGHEST)\n+  else ifeq (HIGHEST_JVM, $$($1_OPTIMIZATION))\n+    $1_OPT_CFLAGS := $(C_O_FLAG_HIGHEST_JVM)\n+    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_HIGHEST_JVM)\n+  else ifeq (SIZE, $$($1_OPTIMIZATION))\n+    $1_OPT_CFLAGS := $(C_O_FLAG_SIZE)\n+    $1_OPT_CXXFLAGS := $(CXX_O_FLAG_SIZE)\n+  else ifneq (, $$($1_OPTIMIZATION))\n+    $$(error Unknown value for OPTIMIZATION: $$($1_OPTIMIZATION))\n+  endif\n+endef\n+\n+################################################################################\n+define SetupLinkerFlags\n+  # Pickup extra OPENJDK_TARGET_OS_TYPE, OPENJDK_TARGET_OS and TOOLCHAIN_TYPE\n+  # dependent variables for LDFLAGS and LIBS, and additionally the pair dependent\n+  # TOOLCHAIN_TYPE plus OPENJDK_TARGET_OS\n+  $1_EXTRA_LDFLAGS += $$($1_LDFLAGS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_LDFLAGS_$(OPENJDK_TARGET_OS)) \\\n+      $$($1_LDFLAGS_$(TOOLCHAIN_TYPE)) $$($1_LDFLAGS_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS))\n+  $1_EXTRA_LIBS += $$($1_LIBS_$(OPENJDK_TARGET_OS_TYPE)) $$($1_LIBS_$(OPENJDK_TARGET_OS)) \\\n+      $$($1_LIBS_$(TOOLCHAIN_TYPE)) $$($1_LIBS_$(TOOLCHAIN_TYPE)_$(OPENJDK_TARGET_OS))\n+endef\n","filename":"make\/common\/native\/Flags.gmk","additions":225,"deletions":0,"binary":false,"changes":225,"status":"added"},{"patch":"@@ -0,0 +1,262 @@\n+#\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+################################################################################\n+# This file contains functionality related to linking a native binary;\n+# creating either a dynamic library, a static library or an executable.\n+\n+\n+################################################################################\n+# GetEntitlementsFile\n+# Find entitlements file for executable when signing on macosx. If no\n+# specialized file is found, returns the default file.\n+# This macro might be called from custom makefiles.\n+# $1 Executable to find entitlements file for.\n+ENTITLEMENTS_DIR := $(TOPDIR)\/make\/data\/macosxsigning\n+ifeq ($(MACOSX_CODESIGN_MODE), debug)\n+  CODESIGN_PLIST_SUFFIX := -debug\n+else\n+  CODESIGN_PLIST_SUFFIX :=\n+endif\n+DEFAULT_ENTITLEMENTS_FILE := $(ENTITLEMENTS_DIR)\/default$(CODESIGN_PLIST_SUFFIX).plist\n+\n+GetEntitlementsFile = \\\n+    $(foreach f, $(ENTITLEMENTS_DIR)\/$(strip $(notdir $1))$(CODESIGN_PLIST_SUFFIX).plist, \\\n+      $(if $(wildcard $f), $f, $(DEFAULT_ENTITLEMENTS_FILE)) \\\n+    )\n+\n+################################################################################\n+define SetupLinking\n+  ifneq ($(DISABLE_MAPFILES), true)\n+    $1_REAL_MAPFILE := $$($1_MAPFILE)\n+  endif\n+\n+  ifneq ($$($1_REAL_MAPFILE), )\n+    $1_EXTRA_LDFLAGS += $(call SET_SHARED_LIBRARY_MAPFILE,$$($1_REAL_MAPFILE))\n+  endif\n+\n+  # Unless specifically set, stripping should only happen if symbols are also\n+  # being copied.\n+  $$(call SetIfEmpty, $1_STRIP_SYMBOLS, $$($1_COPY_DEBUG_SYMBOLS))\n+\n+  ifneq ($$($1_STRIP_SYMBOLS), false)\n+    ifneq ($$($1_STRIP), )\n+      # Default to using the global STRIPFLAGS. Allow for overriding with an empty value\n+      $1_STRIPFLAGS ?= $(STRIPFLAGS)\n+      $1_STRIP_CMD := $$($1_STRIP) $$($1_STRIPFLAGS) $$($1_TARGET)\n+    endif\n+  endif\n+endef\n+\n+################################################################################\n+define CreateLinkedResult\n+  ifeq ($$($1_TYPE), STATIC_LIBRARY)\n+    $$(eval $$(call CreateStaticLibrary,$1))\n+  else\n+    $$(eval $$(call CreateDynamicLibraryOrExecutable,$1))\n+  endif\n+endef\n+\n+################################################################################\n+define CreateStaticLibrary\n+  # Include partial linking when building the static library with clang on linux.\n+  ifeq ($(call isTargetOs, linux), true)\n+    ifneq ($(findstring $(TOOLCHAIN_TYPE), clang), )\n+      $1_ENABLE_PARTIAL_LINKING := true\n+    endif\n+  endif\n+\n+  $1_VARDEPS := $$($1_AR) $$(ARFLAGS) $$($1_ARFLAGS) $$($1_LIBS) \\\n+      $$($1_EXTRA_LIBS)\n+  ifeq ($$($1_ENABLE_PARTIAL_LINKING), true)\n+    $1_VARDEPS += $$($1_LD) $$($1_SYSROOT_LDFLAGS)\n+  endif\n+  $1_VARDEPS_FILE := $$(call DependOnVariable, $1_VARDEPS, \\\n+      $$($1_OBJECT_DIR)\/$$($1_NOSUFFIX).vardeps)\n+\n+  # Generating a static library, ie object file archive.\n+  ifeq ($(STATIC_BUILD), true)\n+    ifeq ($$($1_USE_MAPFILE_FOR_SYMBOLS), true)\n+      STATIC_MAPFILE_DEP := $$($1_MAPFILE)\n+    endif\n+  endif\n+\n+  $1_TARGET_DEPS := $$($1_ALL_OBJS) $$($1_RES) $$($1_VARDEPS_FILE) $$(STATIC_MAPFILE_DEP)\n+\n+  $1_AR_OBJ_ARG := $$($1_LD_OBJ_ARG)\n+  # With clang on linux, partial linking is enabled and 'AR' takes the output\n+  # object from the partial linking step.\n+  ifeq ($$($1_ENABLE_PARTIAL_LINKING), true)\n+    $1_TARGET_RELOCATABLE := $$($1_OBJECT_DIR)\/$$($1_PREFIX)$$($1_NAME)_relocatable$(OBJ_SUFFIX)\n+    $1_AR_OBJ_ARG := $$($1_TARGET_RELOCATABLE)\n+  endif\n+\n+  $$($1_TARGET): $$($1_TARGET_DEPS)\n+        ifneq ($$($1_OBJ_FILE_LIST), )\n+          ifeq ($$($1_LINK_OBJS_RELATIVE), true)\n+\t    $$(eval $$(call ListPathsSafely, $1_ALL_OBJS_RELATIVE, $$($1_OBJ_FILE_LIST)))\n+          else\n+\t    $$(eval $$(call ListPathsSafely, $1_ALL_OBJS, $$($1_OBJ_FILE_LIST)))\n+          endif\n+        endif\n+\t$$(call LogInfo, Building static library $$($1_BASENAME))\n+\t$$(call MakeDir, $$($1_OUTPUT_DIR) $$($1_SYMBOLS_DIR))\n+        # Do partial linking.\n+        ifeq ($$($1_ENABLE_PARTIAL_LINKING), true)\n+\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_partial_link, \\\n+\t    $(if $$($1_LINK_OBJS_RELATIVE), $$(CD) $$(OUTPUTDIR) ; ) \\\n+\t      $$($1_LD) $(LDFLAGS_CXX_PARTIAL_LINKING) $$($1_SYSROOT_LDFLAGS) \\\n+\t        $(LD_OUT_OPTION)$$($1_TARGET_RELOCATABLE) \\\n+\t        $$($1_LD_OBJ_ARG))\n+        endif\n+\t$$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n+\t  $(if $$($1_LINK_OBJS_RELATIVE), $$(CD) $$(OUTPUTDIR) ; ) \\\n+\t    $$($1_AR) $$(ARFLAGS) $$($1_ARFLAGS) $(AR_OUT_OPTION)$$($1_TARGET) $$($1_AR_OBJ_ARG) \\\n+\t        $$($1_RES))\n+        ifeq ($(STATIC_BUILD), true)\n+          ifeq ($$($1_USE_MAPFILE_FOR_SYMBOLS), true)\n+\t    $(CP) $$($1_MAPFILE) $$(@D)\/$$(basename $$(@F)).symbols\n+          else\n+            # get the exported symbols from mapfiles and if there\n+            # is no mapfile, get them from the archive\n+\t    $(RM) $$(@D)\/$$(basename $$(@F)).symbols; \\\n+\t    if [ ! -z $$($1_MAPFILE) -a -e $$($1_MAPFILE) ]; then \\\n+\t      $(ECHO) \"Getting symbols from mapfile $$($1_MAPFILE)\"; \\\n+\t      $(AWK) '\/global:\/','\/local:\/' $$($1_MAPFILE) | \\\n+\t\t  $(SED) -e 's\/#.*\/\/;s\/global:\/\/;s\/local:\/\/;s\/\\;\/\/;s\/^[ \t]*\/_\/;\/^_$$$$\/d' | \\\n+\t\t  $(EGREP) -v \"JNI_OnLoad|JNI_OnUnload|Agent_OnLoad|Agent_OnUnload|Agent_OnAttach\" > \\\n+\t\t  $$(@D)\/$$(basename $$(@F)).symbols || true; \\\n+\t      $(NM) $(NMFLAGS) $$($1_TARGET) | $(GREP)  \" T \" | \\\n+\t\t  $(EGREP) \"JNI_OnLoad|JNI_OnUnload|Agent_OnLoad|Agent_OnUnload|Agent_OnAttach\" | \\\n+\t\t  $(CUT) -d ' ' -f 3 >>  $$(@D)\/$$(basename $$(@F)).symbols || true;\\\n+\t    else \\\n+\t      $(ECHO) \"Getting symbols from nm\"; \\\n+\t      $(NM) $(NMFLAGS) -m $$($1_TARGET) | $(GREP)  \"__TEXT\" | \\\n+\t\t  $(EGREP) -v \"non-external|private extern|__TEXT,__eh_frame\" | \\\n+\t\t  $(SED) -e  's\/.* \/\/' > $$(@D)\/$$(basename $$(@F)).symbols; \\\n+\t    fi\n+          endif\n+        endif\n+endef\n+\n+################################################################################\n+define CreateDynamicLibraryOrExecutable\n+  # A shared dynamic library or an executable binary has been specified\n+  ifeq ($$($1_TYPE), LIBRARY)\n+    # Generating a dynamic library.\n+    $1_EXTRA_LDFLAGS += $$(call SET_SHARED_LIBRARY_NAME,$$($1_BASENAME))\n+\n+    # Create loadmap on AIX. Helps in diagnosing some problems.\n+    ifneq ($(COMPILER_BINDCMD_FILE_FLAG), )\n+      $1_EXTRA_LDFLAGS += $(COMPILER_BINDCMD_FILE_FLAG)$$($1_OBJECT_DIR)\/$$($1_NOSUFFIX).loadmap\n+    endif\n+  endif\n+\n+  ifeq ($(call isTargetOs, windows), true)\n+    ifeq ($$($1_EMBED_MANIFEST), true)\n+      $1_EXTRA_LDFLAGS += -manifest:embed\n+    endif\n+\n+    $1_IMPORT_LIBRARY := $$($1_OBJECT_DIR)\/$$($1_NAME).lib\n+    $1_EXTRA_LDFLAGS += \"-implib:$$($1_IMPORT_LIBRARY)\"\n+    ifeq ($$($1_TYPE), LIBRARY)\n+      # To properly trigger downstream dependants of the import library, just as\n+      # for debug files, we must have a recipe in the rule. To avoid rerunning\n+      # the recipe every time have it touch the target. If an import library\n+      # file is deleted by something external, explicitly delete the target to\n+      # trigger a rebuild of both.\n+      ifneq ($$(wildcard $$($1_IMPORT_LIBRARY)), $$($1_IMPORT_LIBRARY))\n+        $$(call LogDebug, Deleting $$($1_BASENAME) because import library is missing)\n+        $$(shell $(RM) $$($1_TARGET))\n+      endif\n+      $$($1_IMPORT_LIBRARY): $$($1_TARGET)\n+\t$(TOUCH) $$@\n+\n+      $1 += $$($1_IMPORT_LIBRARY)\n+    endif\n+  endif\n+\n+  $1_VARDEPS := $$($1_LD) $$($1_SYSROOT_LDFLAGS) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) \\\n+      $$($1_LIBS) $$($1_EXTRA_LIBS) $$($1_MT) \\\n+      $$($1_CREATE_DEBUGINFO_CMDS) $$($1_MANIFEST_VERSION) \\\n+      $$($1_STRIP_CMD) $$($1_CREATE_DEBUGLINK_CMDS)\n+  $1_VARDEPS_FILE := $$(call DependOnVariable, $1_VARDEPS, \\\n+      $$($1_OBJECT_DIR)\/$$($1_NOSUFFIX).vardeps)\n+\n+  $1_TARGET_DEPS := $$($1_ALL_OBJS) $$($1_RES) $$($1_MANIFEST) \\\n+      $$($1_REAL_MAPFILE) $$($1_VARDEPS_FILE)\n+\n+  $$($1_TARGET): $$($1_TARGET_DEPS)\n+        ifneq ($$($1_OBJ_FILE_LIST), )\n+          ifeq ($$($1_LINK_OBJS_RELATIVE), true)\n+\t    $$(eval $$(call ListPathsSafely, $1_ALL_OBJS_RELATIVE, $$($1_OBJ_FILE_LIST)))\n+          else\n+\t    $$(eval $$(call ListPathsSafely, $1_ALL_OBJS, $$($1_OBJ_FILE_LIST)))\n+          endif\n+        endif\n+        # Keep as much as possible on one execution line for best performance\n+        # on Windows\n+\t$$(call LogInfo, Linking $$($1_BASENAME))\n+\t$$(call MakeDir, $$($1_OUTPUT_DIR) $$($1_SYMBOLS_DIR))\n+        ifeq ($(call isTargetOs, windows), true)\n+\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n+\t      $$($1_LD) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) $$($1_SYSROOT_LDFLAGS) \\\n+\t          $(LD_OUT_OPTION)$$($1_TARGET) $$($1_LD_OBJ_ARG) $$($1_RES) \\\n+\t          $$($1_LIBS) $$($1_EXTRA_LIBS)) \\\n+\t      | $(GREP) -v \"^   Creating library .*\\.lib and object .*\\.exp\" || \\\n+\t          test \"$$$$?\" = \"1\" ; \\\n+\t  $$($1_CREATE_DEBUGINFO_CMDS)\n+\t  $$($1_STRIP_CMD)\n+\t  $$($1_CREATE_DEBUGLINK_CMDS)\n+          ifeq ($(call isBuildOsEnv, windows.wsl2), true)\n+\t    $$(CHMOD) +x $$($1_TARGET)\n+          endif\n+        else\n+\t  $$(call ExecuteWithLog, $$($1_OBJECT_DIR)\/$$($1_SAFE_NAME)_link, \\\n+\t      $$(if $$($1_LINK_OBJS_RELATIVE), $$(CD) $$(OUTPUTDIR) ; ) \\\n+\t      $$($1_LD) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) $$($1_SYSROOT_LDFLAGS) \\\n+\t          $(LD_OUT_OPTION)$$($1_TARGET) $$($1_LD_OBJ_ARG) $$($1_RES) \\\n+\t          $$($1_LIBS) $$($1_EXTRA_LIBS)) ; \\\n+\t  $$($1_CREATE_DEBUGINFO_CMDS)\n+\t  $$($1_STRIP_CMD)\n+\t  $$($1_CREATE_DEBUGLINK_CMDS)\n+        endif\n+        ifeq ($(call isTargetOs, windows), true)\n+          ifneq ($$($1_MANIFEST), )\n+\t    $$($1_MT) -nologo -manifest $$($1_MANIFEST) -identity:\"$$($1_NAME).exe, version=$$($1_MANIFEST_VERSION)\" -outputresource:$$@;#1\n+          endif\n+        endif\n+        # On macosx, optionally run codesign on every binary.\n+        # Remove signature explicitly first to avoid warnings if the linker\n+        # added a default adhoc signature.\n+        ifeq ($(MACOSX_CODESIGN_MODE), hardened)\n+\t  $(CODESIGN) --remove-signature $$@\n+\t  $(CODESIGN) -f -s \"$(MACOSX_CODESIGN_IDENTITY)\" --timestamp --options runtime \\\n+\t      --entitlements $$(call GetEntitlementsFile, $$@) $$@\n+        else ifeq ($(MACOSX_CODESIGN_MODE), debug)\n+\t  $(CODESIGN) --remove-signature $$@\n+\t  $(CODESIGN) -f -s - --entitlements $$(call GetEntitlementsFile, $$@) $$@\n+        endif\n+endef\n","filename":"make\/common\/native\/Link.gmk","additions":262,"deletions":0,"binary":false,"changes":262,"status":"added"},{"patch":"@@ -0,0 +1,247 @@\n+#\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+################################################################################\n+# This file contains functionality related to handling paths for source files\n+# and object files. This is complicated by the fact that we usually, but not\n+# always, use absolute instead of relative paths. It is further complicated\n+# by the fact that not all tools allow inputting large lists of files as\n+# \"@-files\", which we normally use to avoid hitting command line length limits.\n+# Finally this file contains functionality for locating all source code files\n+# that should be included in the compilation.\n+\n+################################################################################\n+# When absolute paths are not allowed in the output, and the compiler does not\n+# support any options to avoid it, we need to rewrite compile commands to use\n+# relative paths. By doing this, the __FILE__ macro will resolve to relative\n+# paths. The relevant input paths on the command line are the -I flags and the\n+# path to the source file itself.\n+#\n+# The macro MakeCommandRelative is used to rewrite the command line like this:\n+# 'CD $(WORKSPACE_ROOT) && <cmd>'\n+# and changes all paths in cmd to be relative to the workspace root. This only\n+# works properly if the build dir is inside the workspace root. If it's not,\n+# relative paths are still calculated, but depending on the distance between the\n+# dirs, paths in the build dir may end up as essentially absolute anyway.\n+#\n+# The fix-deps-file macro is used to adjust the contents of the generated make\n+# dependency files to contain paths compatible with make.\n+#\n+REWRITE_PATHS_RELATIVE = false\n+ifeq ($(ALLOW_ABSOLUTE_PATHS_IN_OUTPUT)-$(FILE_MACRO_CFLAGS), false-)\n+  REWRITE_PATHS_RELATIVE = true\n+endif\n+\n+# CCACHE_BASEDIR needs fix-deps-file as makefiles use absolute filenames for\n+# object files while CCACHE_BASEDIR will make ccache relativize all paths for\n+# its compiler. The compiler then produces relative dependency files.\n+# make does not know a relative and absolute filename is the same so it will\n+# ignore such dependencies. This only applies when the OUTPUTDIR is inside\n+# the WORKSPACE_ROOT.\n+ifneq ($(CCACHE), )\n+  ifneq ($(filter $(WORKSPACE_ROOT)\/%, $(OUTPUTDIR)), )\n+    REWRITE_PATHS_RELATIVE = true\n+  endif\n+endif\n+\n+ifeq ($(REWRITE_PATHS_RELATIVE), true)\n+  # Need to handle -I flags as both '-Ifoo' and '-I foo'.\n+  MakeCommandRelative = \\\n+      $(CD) $(WORKSPACE_ROOT) && \\\n+      $(foreach o, $1, \\\n+        $(if $(filter $(WORKSPACE_ROOT)\/% $(OUTPUTDIR)\/%, $o), \\\n+          $(call RelativePath, $o, $(WORKSPACE_ROOT)) \\\n+        , \\\n+          $(if $(filter -I$(WORKSPACE_ROOT)\/%, $o), \\\n+            -I$(call RelativePath, $(patsubst -I%, %, $o), $(WORKSPACE_ROOT)) \\\n+          , \\\n+            $o \\\n+          ) \\\n+        ) \\\n+      )\n+\n+  # When compiling with relative paths, the deps file may come out with relative\n+  # paths, and that path may start with '.\/'. First remove any leading .\/, then\n+  # add WORKSPACE_ROOT to any line not starting with \/, while allowing for\n+  # leading spaces. There may also be multiple entries on the same line, so start\n+  # with splitting such lines.\n+  # Non GNU sed (BSD on macosx) cannot substitute in literal \\n using regex.\n+  # Instead use a bash escaped literal newline. To avoid having unmatched quotes\n+  # ruin the ability for an editor to properly syntax highlight this file, define\n+  # that newline sequence as a separate variable and add the closing quote behind\n+  # a comment.\n+  sed_newline := \\'$$'\\n''#'\n+  define fix-deps-file\n+\t$(SED) \\\n+\t    -e 's|\\([^ ]\\) \\{1,\\}\\([^\\\\:]\\)|\\1 \\\\$(sed_newline) \\2|g' \\\n+\t    $1.tmp \\\n+\t    | $(SED) \\\n+\t        -e 's|^\\([ ]*\\)\\.\/|\\1|' \\\n+\t        -e '\/^[ ]*[^\/ ]\/s|^\\([ ]*\\)|\\1$(WORKSPACE_ROOT)\/|' \\\n+\t        > $1\n+  endef\n+else\n+  # By default the MakeCommandRelative macro does nothing.\n+  MakeCommandRelative = $1\n+\n+  # No adjustment is needed.\n+  define fix-deps-file\n+\t$(MV) $1.tmp $1\n+  endef\n+endif\n+\n+################################################################################\n+define SetupSourceFiles\n+  $$(foreach d, $$($1_SRC), $$(if $$(wildcard $$d), , \\\n+      $$(error SRC specified to SetupNativeCompilation $1 contains missing directory $$d)))\n+\n+  $1_SRCS_RAW := $$(call FindFiles, $$($1_SRC))\n+  # Order src files according to the order of the src dirs\n+  $1_SRCS := $$(foreach d, $$($1_SRC), $$(filter $$d%, $$($1_SRCS_RAW)))\n+  $1_SRCS := $$(filter $$(NATIVE_SOURCE_EXTENSIONS), $$($1_SRCS))\n+  # Extract the C\/C++ files.\n+  ifneq ($$($1_EXCLUDE_PATTERNS), )\n+    # We must not match the exclude pattern against the src root(s).\n+    $1_SRCS_WITHOUT_ROOTS := $$($1_SRCS)\n+    $$(foreach i, $$($1_SRC), $$(eval $1_SRCS_WITHOUT_ROOTS := $$(patsubst \\\n+        $$i\/%,%, $$($1_SRCS_WITHOUT_ROOTS))))\n+    $1_ALL_EXCLUDE_FILES :=  $$(call containing, $$($1_EXCLUDE_PATTERNS), \\\n+        $$($1_SRCS_WITHOUT_ROOTS))\n+  endif\n+  ifneq ($$($1_EXCLUDE_FILES), )\n+    $1_ALL_EXCLUDE_FILES += $$($1_EXCLUDE_FILES)\n+  endif\n+  ifneq ($$($1_ALL_EXCLUDE_FILES), )\n+    $1_EXCLUDE_FILES_PAT := $$($1_ALL_EXCLUDE_FILES) \\\n+        $$(foreach i, $$($1_SRC), $$(addprefix $$i\/, $$($1_ALL_EXCLUDE_FILES)))\n+    $1_EXCLUDE_FILES_PAT := $$(addprefix %, $$($1_EXCLUDE_FILES_PAT))\n+    $1_SRCS := $$(filter-out $$($1_EXCLUDE_FILES_PAT), $$($1_SRCS))\n+  endif\n+  ifneq ($$($1_INCLUDE_FILES), )\n+    $1_INCLUDE_FILES_PAT := $$(foreach i, $$($1_SRC), $$(addprefix $$i\/, $$($1_INCLUDE_FILES)))\n+    $1_SRCS := $$(filter $$($1_INCLUDE_FILES_PAT), $$($1_SRCS))\n+  endif\n+  # Now we have a list of all c\/c++ files to compile: $$($1_SRCS)\n+\n+  # Prepend the source\/bin path to the filter expressions. Then do the filtering.\n+  ifneq ($$($1_INCLUDES), )\n+    $1_SRC_INCLUDES := $$(foreach i, $$($1_SRC), $$(addprefix $$i\/, $$(addsuffix \/%, $$($1_INCLUDES))))\n+    $1_SRCS := $$(filter $$($1_SRC_INCLUDES), $$($1_SRCS))\n+  endif\n+  ifneq ($$($1_EXCLUDES), )\n+    $1_SRC_EXCLUDES := $$(addsuffix \/%, $$($1_EXCLUDES))\n+    $1_SRC_EXCLUDES += $$(foreach i, $$($1_SRC), $$(addprefix $$i\/, $$(addsuffix \/%, $$($1_EXCLUDES))))\n+    $1_SRCS := $$(filter-out $$($1_SRC_EXCLUDES), $$($1_SRCS))\n+  endif\n+\n+  $1_SRCS += $$($1_EXTRA_FILES)\n+\n+  ifeq ($$($1_SRCS), )\n+    $$(error No sources found for $1 when looking inside the dirs $$($1_SRC))\n+  endif\n+\n+  ifeq ($$($1_TYPE), EXECUTABLE)\n+    ifeq ($(UBSAN_ENABLED), true)\n+      # We need to set the default options for UBSan. This needs to be included in every executable.\n+      # Rather than copy and paste code to everything with a main function, we add an additional\n+      # source file to every executable that exports __ubsan_default_options.\n+      ifneq ($$(filter %.cpp %.cc, $$($1_SRCS)), )\n+        $1_SRCS += $(TOPDIR)\/make\/data\/ubsan\/ubsan_default_options.cpp\n+      else\n+        $1_SRCS += $(TOPDIR)\/make\/data\/ubsan\/ubsan_default_options.c\n+      endif\n+    endif\n+  endif\n+endef\n+\n+################################################################################\n+define SetupOutputFiles\n+  # Calculate the expected output from compiling the sources\n+  $1_EXPECTED_OBJS_FILENAMES := $$(call replace_with_obj_extension, $$(notdir $$($1_SRCS)))\n+  $1_EXPECTED_OBJS := $$(addprefix $$($1_OBJECT_DIR)\/, $$($1_EXPECTED_OBJS_FILENAMES))\n+  # Sort to remove duplicates and provide a reproducible order on the input files to the linker.\n+  $1_ALL_OBJS := $$(sort $$($1_EXPECTED_OBJS) $$($1_EXTRA_OBJECT_FILES))\n+  ifeq ($(STATIC_LIBS), true)\n+    # Exclude the object files that match with $1_STATIC_LIB_EXCLUDE_OBJS.\n+    ifneq ($$($1_STATIC_LIB_EXCLUDE_OBJS), )\n+      $1_ALL_OBJS := $$(call not-containing, $$($1_STATIC_LIB_EXCLUDE_OBJS), $$($1_ALL_OBJS))\n+    endif\n+  endif\n+endef\n+\n+################################################################################\n+define RemoveSuperfluousOutputFiles\n+  # Are there too many object files on disk? Perhaps because some source file was removed?\n+  $1_BINS := $$(wildcard $$($1_OBJECT_DIR)\/*$(OBJ_SUFFIX))\n+  $1_SUPERFLOUS_OBJS := $$(sort $$(filter-out $$($1_EXPECTED_OBJS), $$($1_BINS)))\n+  # Clean out the superfluous object files.\n+  ifneq ($$($1_SUPERFLUOUS_OBJS), )\n+    $$(shell $(RM) -f $$($1_SUPERFLUOUS_OBJS))\n+  endif\n+endef\n+\n+################################################################################\n+define SetupObjectFileList\n+  $1_LD_OBJ_ARG := $$($1_ALL_OBJS)\n+\n+  # If there are many object files, use an @-file...\n+  ifneq ($$(word 17, $$($1_ALL_OBJS)), )\n+    $1_OBJ_FILE_LIST := $$($1_OBJECT_DIR)\/_$1_objectfilenames.txt\n+    ifneq ($(COMPILER_COMMAND_FILE_FLAG), )\n+      $1_LD_OBJ_ARG := $(COMPILER_COMMAND_FILE_FLAG)$$($1_OBJ_FILE_LIST)\n+    else\n+      # ...except for toolchains which don't support them.\n+      $1_LD_OBJ_ARG := `cat $$($1_OBJ_FILE_LIST)`\n+    endif\n+\n+    # If we are building static library, 'AR' on macosx\/aix may not support @-file.\n+    ifeq ($$($1_TYPE), STATIC_LIBRARY)\n+      ifeq ($(call isTargetOs, macosx aix), true)\n+        $1_LD_OBJ_ARG := `cat $$($1_OBJ_FILE_LIST)`\n+      endif\n+    endif\n+  endif\n+\n+  # Unfortunately the @-file trick does not work reliably when using clang.\n+  # Clang does not propagate the @-file parameter to the ld sub process, but\n+  # instead puts the full content on the command line. At least the llvm ld\n+  # does not even support an @-file.\n+  #\n+  # When linking a large amount of object files, we risk hitting the limit\n+  # of the command line length even on posix systems if the path length of\n+  # the output dir is very long due to our use of absolute paths. To\n+  # mitigate this, use paths relative to the output dir when linking over\n+  # 500 files with clang and the output dir path is deep.\n+  ifneq ($$(word 500, $$($1_ALL_OBJS)), )\n+    ifeq ($$(TOOLCHAIN_TYPE), clang)\n+      # There is no strlen function in make, but checking path depth is a\n+      # reasonable approximation.\n+      ifneq ($$(word 10, $$(subst \/, ,$$(OUTPUTDIR))), )\n+        $1_LINK_OBJS_RELATIVE := true\n+        $1_ALL_OBJS_RELATIVE := $$(patsubst $$(OUTPUTDIR)\/%, %, $$($1_ALL_OBJS))\n+      endif\n+    endif\n+  endif\n+endef\n","filename":"make\/common\/native\/Paths.gmk","additions":247,"deletions":0,"binary":false,"changes":247,"status":"added"},{"patch":"@@ -0,0 +1,125 @@\n+#\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+################################################################################\n+# This file contains functionality related to setting up our toolchain\n+# definition variables.\n+\n+################################################################################\n+# Define a native toolchain configuration that can be used by\n+# SetupNativeCompilation calls\n+#\n+# Parameter 1 is the name of the toolchain definition\n+#\n+# Remaining parameters are named arguments:\n+#   EXTENDS - Optional parent definition to get defaults from\n+#   CC - The C compiler\n+#   CXX - The C++ compiler\n+#   LD - The Linker\n+#   AR - Static linker\n+#   AS - Assembler\n+#   MT - Windows MT tool\n+#   RC - Windows RC tool\n+#   OBJCOPY - The objcopy tool for debug symbol handling\n+#   STRIP - The tool to use for stripping debug symbols\n+#   SYSROOT_CFLAGS - Compiler flags for using the specific sysroot\n+#   SYSROOT_LDFLAGS - Linker flags for using the specific sysroot\n+DefineNativeToolchain = $(NamedParamsMacroTemplate)\n+define DefineNativeToolchainBody\n+  # If extending another definition, get default values from that,\n+  # otherwise, nothing more needs to be done as variable assignments\n+  # already happened in NamedParamsMacroTemplate.\n+  ifneq ($$($1_EXTENDS), )\n+    $$(call SetIfEmpty, $1_CC, $$($$($1_EXTENDS)_CC))\n+    $$(call SetIfEmpty, $1_CXX, $$($$($1_EXTENDS)_CXX))\n+    $$(call SetIfEmpty, $1_LD, $$($$($1_EXTENDS)_LD))\n+    $$(call SetIfEmpty, $1_AR, $$($$($1_EXTENDS)_AR))\n+    $$(call SetIfEmpty, $1_AS, $$($$($1_EXTENDS)_AS))\n+    $$(call SetIfEmpty, $1_MT, $$($$($1_EXTENDS)_MT))\n+    $$(call SetIfEmpty, $1_RC, $$($$($1_EXTENDS)_RC))\n+    $$(call SetIfEmpty, $1_OBJCOPY, $$($$($1_EXTENDS)_OBJCOPY))\n+    $$(call SetIfEmpty, $1_STRIP, $$($$($1_EXTENDS)_STRIP))\n+    $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $$($$($1_EXTENDS)_SYSROOT_CFLAGS))\n+    $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $$($$($1_EXTENDS)_SYSROOT_LDFLAGS))\n+  endif\n+endef\n+\n+# Create a default toolchain with the main compiler and linker\n+$(eval $(call DefineNativeToolchain, TOOLCHAIN_DEFAULT, \\\n+    CC := $(CC), \\\n+    CXX := $(CXX), \\\n+    LD := $(LD), \\\n+    AR := $(AR), \\\n+    AS := $(AS), \\\n+    MT := $(MT), \\\n+    RC := $(RC), \\\n+    OBJCOPY := $(OBJCOPY), \\\n+    STRIP := $(STRIP), \\\n+    SYSROOT_CFLAGS := $(SYSROOT_CFLAGS), \\\n+    SYSROOT_LDFLAGS := $(SYSROOT_LDFLAGS), \\\n+))\n+\n+# Create a toolchain where linking is done with the C++ linker\n+$(eval $(call DefineNativeToolchain, TOOLCHAIN_LINK_CXX, \\\n+    EXTENDS := TOOLCHAIN_DEFAULT, \\\n+    LD := $(LDCXX), \\\n+))\n+\n+# Create a toolchain with the BUILD compiler, used for build tools that\n+# are to be run during the build.\n+$(eval $(call DefineNativeToolchain, TOOLCHAIN_BUILD, \\\n+    CC := $(BUILD_CC), \\\n+    CXX := $(BUILD_CXX), \\\n+    LD := $(BUILD_LD), \\\n+    AR := $(BUILD_AR), \\\n+    AS := $(BUILD_AS), \\\n+    OBJCOPY := $(BUILD_OBJCOPY), \\\n+    STRIP := $(BUILD_STRIP), \\\n+    SYSROOT_CFLAGS := $(BUILD_SYSROOT_CFLAGS), \\\n+    SYSROOT_LDFLAGS := $(BUILD_SYSROOT_LDFLAGS), \\\n+))\n+\n+# BUILD toolchain with the C++ linker\n+$(eval $(call DefineNativeToolchain, TOOLCHAIN_BUILD_LINK_CXX, \\\n+    EXTENDS := TOOLCHAIN_BUILD, \\\n+    LD := $(BUILD_LDCXX), \\\n+))\n+\n+################################################################################\n+# Setup the toolchain to be used\n+define SetupToolchain\n+  $$(call SetIfEmpty, $1_TOOLCHAIN, TOOLCHAIN_DEFAULT)\n+  $$(call SetIfEmpty, $1_CC, $$($$($1_TOOLCHAIN)_CC))\n+  $$(call SetIfEmpty, $1_CXX, $$($$($1_TOOLCHAIN)_CXX))\n+  $$(call SetIfEmpty, $1_LD, $$($$($1_TOOLCHAIN)_LD))\n+  $$(call SetIfEmpty, $1_AR, $$($$($1_TOOLCHAIN)_AR))\n+  $$(call SetIfEmpty, $1_AS, $$($$($1_TOOLCHAIN)_AS))\n+  $$(call SetIfEmpty, $1_MT, $$($$($1_TOOLCHAIN)_MT))\n+  $$(call SetIfEmpty, $1_RC, $$($$($1_TOOLCHAIN)_RC))\n+  $$(call SetIfEmpty, $1_OBJCOPY, $$($$($1_TOOLCHAIN)_OBJCOPY))\n+  $$(call SetIfEmpty, $1_STRIP, $$($$($1_TOOLCHAIN)_STRIP))\n+  $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $$($$($1_TOOLCHAIN)_SYSROOT_CFLAGS))\n+  $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $$($$($1_TOOLCHAIN)_SYSROOT_LDFLAGS))\n+endef\n","filename":"make\/common\/native\/ToolchainDefinitions.gmk","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"},{"patch":"@@ -509,0 +509,1 @@\n+   # calloc-transposed-args required for GCC 14 builds. (fixed upstream in Harfbuzz 032c931e1c0cfb20f18e5acb8ba005775242bd92)\n@@ -510,1 +511,2 @@\n-       expansion-to-defined dangling-reference maybe-uninitialized\n+       expansion-to-defined dangling-reference maybe-uninitialized \\\n+       calloc-transposed-args\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,4 +63,8 @@\n-COMPARE_EXCEPTIONS_INCLUDE=\"$TOPDIR\/make\/scripts\/compare_exceptions.sh.incl\"\n-if [ ! -e \"$COMPARE_EXCEPTIONS_INCLUDE\" ]; then\n-    echo \"Error: Cannot locate the exceptions file, it should have been here: $COMPARE_EXCEPTIONS_INCLUDE\"\n-    exit 1\n+\n+if [ \"$OPENJDK_TARGET_OS\" = \"windows\" ]; then\n+  # We ship a pdb file inside a published zip. Such files can never be built\n+  # reproducibly, so ignore it.\n+  ACCEPTED_JARZIP_CONTENTS=\"\/modules_libs\/java.security.jgss\/w2k_lsa_auth.dll.pdb\"\n+elif [ \"$OPENJDK_TARGET_OS\" = \"macosx\" ]; then\n+  # Due to signing, we can never get a byte-by-byte identical build on macOS\n+  STRIP_TESTS_BEFORE_COMPARE=\"true\"\n@@ -68,2 +72,0 @@\n-# Include exception definitions\n-. \"$COMPARE_EXCEPTIONS_INCLUDE\"\n@@ -120,29 +122,0 @@\n-    if test \"x$SUFFIX\" = \"xclass\"; then\n-        if [ \"$NAME\" = \"SystemModules\\$all.class\" ] \\\n-           || [ \"$NAME\" = \"SystemModules\\$default.class\" ]; then\n-            # The SystemModules\\$*.classes are not comparable as they contain the\n-            # module hashes which would require a whole other level of\n-            # reproducible builds to get reproducible. There is also random\n-            # order of map initialization.\n-            TMP=\"\"\n-        elif [ \"$NAME\" = \"module-info.class\" ]; then\n-            # The module-info.class have several issues with random ordering of\n-            # elements in HashSets.\n-            MODULES_CLASS_FILTER=\"$SED \\\n-                -e 's\/,$\/\/' \\\n-                -e 's\/;$\/\/' \\\n-                -e 's\/^ *[0-9]*:\/\/' \\\n-                -e 's\/#[0-9]* *\/#\/' \\\n-                -e 's\/ *\\\/\\\/\/ \\\/\\\/\/' \\\n-                -e 's\/aload *[0-9]*\/aload X\/' \\\n-                -e 's\/ldc_w\/ldc  \/' \\\n-                | $SORT \\\n-                \"\n-            $JAVAP -c -constants -l -p \"${OTHER_FILE}\" \\\n-                | eval \"$MODULES_CLASS_FILTER\" >  ${OTHER_FILE}.javap &\n-            $JAVAP -c -constants -l -p \"${THIS_FILE}\" \\\n-                | eval \"$MODULES_CLASS_FILTER\" > ${THIS_FILE}.javap &\n-            wait\n-            TMP=$($DIFF ${OTHER_FILE}.javap ${THIS_FILE}.javap)\n-        fi\n-    fi\n@@ -315,1 +288,1 @@\n-# Compare the rest of the files\n+# Find all files to compare and separate them into different categories\n@@ -317,1 +290,1 @@\n-compare_general_files() {\n+locate_files() {\n@@ -319,2 +292,2 @@\n-    OTHER_DIR=$2\n-    WORK_DIR=$3\n+    TEMP_DIR=$COMPARE_ROOT\/support\n+    $MKDIR -p $TEMP_DIR\n@@ -322,9 +295,2 @@\n-    GENERAL_FILES=$(cd $THIS_DIR && $FIND . -type f ! -name \"*.so\" ! -name \"*.jar\" \\\n-        ! -name \"*.zip\" ! -name \"*.debuginfo\" ! -name \"*.dylib\" ! -name \"jexec\" \\\n-        ! -name \"modules\" ! -name \"ct.sym\" ! -name \"*.diz\" ! -name \"*.dll\" \\\n-        ! -name \"*.cpl\" ! -name \"*.pdb\" ! -name \"*.exp\" ! -name \"*.ilk\" \\\n-        ! -name \"*.lib\" ! -name \"*.jmod\" ! -name \"*.exe\" \\\n-        ! -name \"*.obj\" ! -name \"*.o\" ! -name \"jspawnhelper\" ! -name \"*.a\" \\\n-        ! -name \"*.tar.gz\" ! -name \"gtestLauncher\" \\\n-        ! -name \"*.map\" \\\n-        | $GREP -v \".\/bin\/\"  | $SORT | $FILTER)\n+    ALL_FILES_PATH=$TEMP_DIR\/all_files.txt\n+    cd $THIS_DIR && $FIND . -type f | $SORT | $FILTER > $ALL_FILES_PATH\n@@ -332,50 +298,18 @@\n-    echo Other files with binary differences...\n-    for f in $GENERAL_FILES\n-    do\n-        # Skip all files in test\/*\/native\n-        if [[ \"$f\" == *\/native\/* ]]; then\n-            continue\n-        fi\n-        if [ -e $OTHER_DIR\/$f ]; then\n-            SUFFIX=\"${f##*.}\"\n-            if [ \"$(basename $f)\" = \"release\" ]; then\n-                # In release file, ignore differences in source rev numbers\n-                OTHER_FILE=$WORK_DIR\/$f.other\n-                THIS_FILE=$WORK_DIR\/$f.this\n-                $MKDIR -p $(dirname $OTHER_FILE)\n-                $MKDIR -p $(dirname $THIS_FILE)\n-                RELEASE_FILTER=\"$SED -e 's\/SOURCE=\".*\"\/SOURCE=<src-rev>\/g'\"\n-                $CAT $OTHER_DIR\/$f | eval \"$RELEASE_FILTER\" > $OTHER_FILE\n-                $CAT $THIS_DIR\/$f  | eval \"$RELEASE_FILTER\" > $THIS_FILE\n-            elif [ \"$SUFFIX\" = \"svg\" ]; then\n-                # GraphViz has non-determinism when generating svg files\n-                OTHER_FILE=$WORK_DIR\/$f.other\n-                THIS_FILE=$WORK_DIR\/$f.this\n-                $MKDIR -p $(dirname $OTHER_FILE) $(dirname $THIS_FILE)\n-                SVG_FILTER=\"$SED \\\n-                    -e 's\/edge[0-9][0-9]*\/edgeX\/g'\n-                    \"\n-                $CAT $OTHER_DIR\/$f | eval \"$SVG_FILTER\" > $OTHER_FILE\n-                $CAT $THIS_DIR\/$f | eval \"$SVG_FILTER\" > $THIS_FILE\n-            elif [ \"$SUFFIX\" = \"jar_contents\" ]; then\n-                # The jar_contents files may have some lines in random order\n-                OTHER_FILE=$WORK_DIR\/$f.other\n-                THIS_FILE=$WORK_DIR\/$f.this\n-                $MKDIR -p $(dirname $OTHER_FILE) $(dirname $THIS_FILE)\n-                $RM $OTHER_FILE $THIS_FILE\n-                $CAT $OTHER_DIR\/$f | $SORT > $OTHER_FILE\n-                $CAT $THIS_DIR\/$f  | $SORT > $THIS_FILE\n-            else\n-                OTHER_FILE=$OTHER_DIR\/$f\n-                THIS_FILE=$THIS_DIR\/$f\n-            fi\n-            DIFF_OUT=$($DIFF $OTHER_FILE $THIS_FILE 2>&1)\n-            if [ -n \"$DIFF_OUT\" ]; then\n-                echo $f\n-                REGRESSIONS=true\n-                if [ \"$SHOW_DIFFS\" = \"true\" ]; then\n-                    echo \"$DIFF_OUT\"\n-                fi\n-            fi\n-        fi\n-    done\n+    ZIP_FILES_PATH=$TEMP_DIR\/zip_files.txt\n+    ZIP_FILTER=\"-e '\\.zip$' -e '\\.tar.gz$'\"\n+    $CAT \"$ALL_FILES_PATH\" | eval $GREP $ZIP_FILTER > $ZIP_FILES_PATH\n+\n+    JMOD_FILES_PATH=$TEMP_DIR\/jmod_files.txt\n+    JMOD_FILTER=\"-e '\\.jmod$'\"\n+    $CAT \"$ALL_FILES_PATH\" | eval $GREP $JMOD_FILTER > $JMOD_FILES_PATH\n+\n+    JAR_FILES_PATH=$TEMP_DIR\/jar_files.txt\n+    JAR_FILTER=\"-e '\\.jar$' -e '\\.war$' -e '\/module$'\"\n+    $CAT \"$ALL_FILES_PATH\" | eval $GREP $JAR_FILTER > $JAR_FILES_PATH\n+\n+    LIB_FILES_PATH=$TEMP_DIR\/lib_files.txt\n+    LIB_FILTER=\"-e '\\.dylib$' -e '\/lib.*\\.so$' -e '\\.dll$' -e '\\.obj$' -e '\\.o$' -e '\\.a$' -e '\\.cpl$'\"\n+    # On macos, filter out the dSYM debug symbols files. They are identically named .dylib files that reside\n+    # under a *.dSYM directory\n+    LIB_EXCLUDE=\"-e '\/lib.*\\.dSYM\/'\"\n+    $CAT \"$ALL_FILES_PATH\" | eval $GREP $LIB_FILTER | eval $GREP -v $LIB_EXCLUDE > $LIB_FILES_PATH\n@@ -383,0 +317,12 @@\n+    DEBUG_FILES_PATH=$TEMP_DIR\/debug_files.txt\n+    DEBUG_FILTER=\"-e '\\.dSYM\/' -e '\\.debuginfo$' -e '\\.diz$' -e '\\.pdb$' -e '\\.map$'\"\n+    $CAT \"$ALL_FILES_PATH\" | eval $GREP $DEBUG_FILTER > $DEBUG_FILES_PATH\n+\n+    EXEC_FILES_PATH=$TEMP_DIR\/exec_files.txt\n+    if [ \"$OPENJDK_TARGET_OS\" = \"windows\" ]; then\n+      EXEC_FILTER=\"-e '\\.exe$'\"\n+      $CAT \"$ALL_FILES_PATH\" | eval $GREP $EXEC_FILTER > $EXEC_FILES_PATH\n+    else\n+      # Find all files with the executable bit set\n+      cd $THIS_DIR && $FIND . -type f -perm -100 | $SORT | $FILTER > $EXEC_FILES_PATH\n+    fi\n@@ -384,0 +330,12 @@\n+    OTHER_FILES_PATH=$TEMP_DIR\/other_files.txt\n+    ACCOUNTED_FILES_PATH=$TEMP_DIR\/accounted_files.txt\n+    $CAT $ZIP_FILES_PATH $JMOD_FILES_PATH $JAR_FILES_PATH $LIB_FILES_PATH $DEBUG_FILES_PATH $EXEC_FILES_PATH > $ACCOUNTED_FILES_PATH\n+    $CAT $ACCOUNTED_FILES_PATH $ALL_FILES_PATH | $SORT | $UNIQ -u > $OTHER_FILES_PATH\n+\n+    ALL_ZIP_FILES=$($CAT $ZIP_FILES_PATH)\n+    ALL_JMOD_FILES=$($CAT $JMOD_FILES_PATH)\n+    ALL_JAR_FILES=$($CAT $JAR_FILES_PATH)\n+    ALL_LIB_FILES=$($CAT $LIB_FILES_PATH)\n+    ALL_DEBUG_FILES=$($CAT $DEBUG_FILES_PATH)\n+    ALL_EXEC_FILES=$($CAT $EXEC_FILES_PATH)\n+    ALL_OTHER_FILES=$($CAT $OTHER_FILES_PATH)\n@@ -453,0 +411,1 @@\n+        REGRESSIONS=true\n@@ -459,0 +418,1 @@\n+        REGRESSIONS=true\n@@ -487,0 +447,1 @@\n+            REGRESSIONS=true\n@@ -511,0 +472,1 @@\n+                REGRESSIONS=true\n@@ -550,0 +512,1 @@\n+        REGRESSIONS=true\n@@ -556,0 +519,1 @@\n+        REGRESSIONS=true\n@@ -570,2 +534,1 @@\n-    ZIPS=$(cd $THIS_DIR && $FIND . -type f -name \"*.zip\" -o -name \"*.tar.gz\" \\\n-        | $SORT | $FILTER )\n+    locate_files $THIS_DIR\n@@ -573,1 +536,1 @@\n-    if [ -n \"$ZIPS\" ]; then\n+    if [ -n \"$ALL_ZIP_FILES\" ]; then\n@@ -577,1 +540,1 @@\n-        for f in $ZIPS; do\n+        for f in $ALL_ZIP_FILES; do\n@@ -581,1 +544,0 @@\n-                    return_value=1\n@@ -583,0 +545,1 @@\n+                    return_value=1\n@@ -599,1 +562,1 @@\n-    JMODS=$(cd $THIS_DIR && $FIND . -type f -name \"*.jmod\" | $SORT | $FILTER )\n+    locate_files $THIS_DIR\n@@ -601,1 +564,1 @@\n-    if [ -n \"$JMODS\" ]; then\n+    if [ -n \"$ALL_JMOD_FILES\" ]; then\n@@ -605,1 +568,1 @@\n-        for f in $JMODS; do\n+        for f in $ALL_JMOD_FILES; do\n@@ -609,1 +572,0 @@\n-                    return_value=1\n@@ -611,0 +573,1 @@\n+                    return_value=1\n@@ -627,3 +590,1 @@\n-    # TODO filter?\n-    ZIPS=$(cd $THIS_DIR && $FIND . -type f -name \"*.jar\" -o -name \"*.war\" \\\n-        -o -name \"modules\" | $SORT | $FILTER)\n+    locate_files $THIS_DIR\n@@ -631,1 +592,1 @@\n-    if [ -n \"$ZIPS\" ]; then\n+    if [ -n \"$ALL_JAR_FILES\" ]; then\n@@ -635,1 +596,1 @@\n-        for f in $ZIPS; do\n+        for f in $ALL_JAR_FILES; do\n@@ -639,1 +600,0 @@\n-                    return_value=1\n@@ -641,0 +601,1 @@\n+                    return_value=1\n@@ -702,1 +663,3 @@\n-            OTHER=$(cygpath -msa $OTHER)\n+            if [ -n \"$OTHER\" ]; then\n+              OTHER=$(cygpath -msa $OTHER)\n+            fi\n@@ -709,1 +672,1 @@\n-            )\"\n+            2> \/dev\/null )\"\n@@ -1050,3 +1013,1 @@\n-    LIBS=$(cd $THIS_DIR && $FIND . -type f \\( -name 'lib*.so' -o -name '*.dylib' \\\n-        -o -name '*.dll' -o -name '*.obj' -o -name '*.o' -o -name '*.a' \\\n-        -o -name '*.cpl' \\) | $SORT | $FILTER)\n+    locate_files $THIS_DIR\n@@ -1054,7 +1015,1 @@\n-    # On macos, filter out the dSYM debug symbols files as they are also\n-    # named *.dylib.\n-    if [ \"$OPENJDK_TARGET_OS\" = \"macosx\" ]; then\n-        LIBS=$(echo \"$LIBS\" | $GREP -v '\\.dSYM\/')\n-    fi\n-\n-    if [ -n \"$LIBS\" ]; then\n+    if [ -n \"$ALL_LIB_FILES\" ]; then\n@@ -1063,1 +1018,1 @@\n-        for l in $LIBS; do\n+        for l in $ALL_LIB_FILES; do\n@@ -1067,0 +1022,1 @@\n+                    REGRESSIONS=true\n@@ -1084,19 +1040,1 @@\n-    if [ \"$OPENJDK_TARGET_OS\" = \"windows\" ]; then\n-        EXECS=$(cd $THIS_DIR && $FIND . -type f -name '*.exe' | $SORT | $FILTER)\n-    else\n-        EXECS=$(cd $THIS_DIR && $FIND . -name db -prune -o -type f -perm -100 \\! \\\n-            \\( -name '*.so' -o -name '*.dylib' -o -name '*.dll' -o -name '*.cgi' \\\n-            -o -name '*.jar' -o -name '*.diz' -o -name 'jcontrol' -o -name '*.properties' \\\n-            -o -name '*.data' -o -name '*.bfc' -o -name '*.src' -o -name '*.txt' \\\n-            -o -name '*.cfg' -o -name 'meta-index' -o -name '*.properties.ja' \\\n-            -o -name '*.xml' -o -name '*.html' -o -name '*.png' -o -name 'README' \\\n-            -o -name '*.zip' -o -name '*.jimage' -o -name '*.java' -o -name '*.mf' \\\n-            -o -name '*.jpg' -o -name '*.wsdl' -o -name '*.js' -o -name '*.sh' \\\n-            -o -name '*.bat' -o -name '*LICENSE' -o -name '*.d' -o -name '*store' \\\n-            -o -name 'blocked' -o -name '*certs' -o -name '*.ttf' \\\n-            -o -name '*.jfc' -o -name '*.dat'  -o -name 'release' -o -name '*.dir'\\\n-            -o -name '*.sym' -o -name '*.idl' -o -name '*.h' -o -name '*.access' \\\n-            -o -name '*.template' -o -name '*.policy' -o -name '*.security' \\\n-            -o -name 'COPYRIGHT' -o -name '*.1' -o -name '*.debuginfo' \\\n-            -o -name 'classlist' \\) | $SORT | $FILTER)\n-    fi\n+    locate_files $THIS_DIR\n@@ -1104,1 +1042,1 @@\n-    if [ -n \"$EXECS\" ]; then\n+    if [ -n \"$ALL_EXEC_FILES\" ]; then\n@@ -1107,1 +1045,1 @@\n-        for e in $EXECS; do\n+        for e in $ALL_EXEC_FILES; do\n@@ -1111,0 +1049,1 @@\n+                    REGRESSIONS=true\n@@ -1120,0 +1059,89 @@\n+################################################################################\n+# Compare native debug symbol files\n+\n+compare_all_debug_files() {\n+    THIS_DIR=$1\n+    OTHER_DIR=$2\n+    WORK_DIR=$3\n+\n+    locate_files $THIS_DIR\n+\n+    echo Debug symbol files with binary differences...\n+    for f in $ALL_DEBUG_FILES\n+    do\n+        if [ -e $OTHER_DIR\/$f ]; then\n+            SUFFIX=\"${f##*.}\"\n+            if [ \"$SUFFIX\" = \"pdb\" ]; then\n+              # pdb files are never reproducible\n+              DIFF_OUT=\"\"\n+            else\n+              OTHER_FILE=$OTHER_DIR\/$f\n+              THIS_FILE=$THIS_DIR\/$f\n+              DIFF_OUT=$($DIFF $OTHER_FILE $THIS_FILE 2>&1)\n+            fi\n+\n+            if [ -n \"$DIFF_OUT\" ]; then\n+                echo $f\n+                REGRESSIONS=true\n+                if [ \"$SHOW_DIFFS\" = \"true\" ]; then\n+                    echo \"$DIFF_OUT\"\n+                fi\n+            fi\n+        fi\n+    done\n+}\n+\n+################################################################################\n+# Compare the rest of the files\n+\n+compare_all_other_files() {\n+    THIS_DIR=$1\n+    OTHER_DIR=$2\n+    WORK_DIR=$3\n+\n+    locate_files $THIS_DIR\n+\n+    echo Other files with binary differences...\n+    for f in $ALL_OTHER_FILES\n+    do\n+        # Skip all files in test\/*\/native\n+        if [[ \"$f\" == *\/native\/* ]]; then\n+            continue\n+        fi\n+        if [ -e $OTHER_DIR\/$f ]; then\n+            SUFFIX=\"${f##*.}\"\n+            if [ \"$(basename $f)\" = \"release\" ]; then\n+                # In release file, ignore differences in source rev numbers\n+                OTHER_FILE=$WORK_DIR\/$f.other\n+                THIS_FILE=$WORK_DIR\/$f.this\n+                $MKDIR -p $(dirname $OTHER_FILE)\n+                $MKDIR -p $(dirname $THIS_FILE)\n+                RELEASE_FILTER=\"$SED -e 's\/SOURCE=\".*\"\/SOURCE=<src-rev>\/g'\"\n+                $CAT $OTHER_DIR\/$f | eval \"$RELEASE_FILTER\" > $OTHER_FILE\n+                $CAT $THIS_DIR\/$f  | eval \"$RELEASE_FILTER\" > $THIS_FILE\n+            elif [ \"$SUFFIX\" = \"jar_contents\" ]; then\n+                # The jar_contents files are generated by the build and may have\n+                # some lines in random order. They are only included for demos,\n+                # which they shouldn't really...\n+                OTHER_FILE=$WORK_DIR\/$f.other\n+                THIS_FILE=$WORK_DIR\/$f.this\n+                $MKDIR -p $(dirname $OTHER_FILE) $(dirname $THIS_FILE)\n+                $RM $OTHER_FILE $THIS_FILE\n+                $CAT $OTHER_DIR\/$f | $SORT > $OTHER_FILE\n+                $CAT $THIS_DIR\/$f  | $SORT > $THIS_FILE\n+            else\n+                OTHER_FILE=$OTHER_DIR\/$f\n+                THIS_FILE=$THIS_DIR\/$f\n+            fi\n+            DIFF_OUT=$($DIFF $OTHER_FILE $THIS_FILE 2>&1)\n+            if [ -n \"$DIFF_OUT\" ]; then\n+                echo $f\n+                REGRESSIONS=true\n+                if [ \"$SHOW_DIFFS\" = \"true\" ]; then\n+                    echo \"$DIFF_OUT\"\n+                fi\n+            fi\n+        fi\n+    done\n+}\n+\n@@ -1518,1 +1546,3 @@\n-        compare_general_files $THIS_JDK $OTHER_JDK $COMPARE_ROOT\/jdk\n+        compare_all_other_files $THIS_JDK $OTHER_JDK $COMPARE_ROOT\/jdk\n+        echo -n \"JDK \"\n+        compare_all_debug_files $THIS_JDK $OTHER_JDK $COMPARE_ROOT\/jdk\n@@ -1522,1 +1552,3 @@\n-        compare_general_files $THIS_JDK_BUNDLE $OTHER_JDK_BUNDLE $COMPARE_ROOT\/jdk-bundle\n+        compare_all_other_files $THIS_JDK_BUNDLE $OTHER_JDK_BUNDLE $COMPARE_ROOT\/jdk-bundle\n+        echo -n \"JDK Bundle \"\n+        compare_all_debug_files $THIS_JDK_BUNDLE $OTHER_JDK_BUNDLE $COMPARE_ROOT\/jdk-bundle\n@@ -1526,1 +1558,3 @@\n-        compare_general_files $THIS_DOCS $OTHER_DOCS $COMPARE_ROOT\/docs\n+        compare_all_other_files $THIS_DOCS $OTHER_DOCS $COMPARE_ROOT\/docs\n+        echo -n \"Docs \"\n+        compare_all_debug_files $THIS_DOCS $OTHER_DOCS $COMPARE_ROOT\/docs\n@@ -1530,1 +1564,3 @@\n-        compare_general_files $THIS_TEST $OTHER_TEST $COMPARE_ROOT\/test\n+        compare_all_other_files $THIS_TEST $OTHER_TEST $COMPARE_ROOT\/test\n+        echo -n \"Test \"\n+        compare_all_debug_files $THIS_TEST $OTHER_TEST $COMPARE_ROOT\/test\n@@ -1533,1 +1569,2 @@\n-        compare_general_files $THIS_BASE_DIR $OTHER_BASE_DIR $COMPARE_ROOT\/base_dir\n+        compare_all_other_files $THIS_BASE_DIR $OTHER_BASE_DIR $COMPARE_ROOT\/base_dir\n+        compare_all_debug_files $THIS_BASE_DIR $OTHER_BASE_DIR $COMPARE_ROOT\/base_dir\n","filename":"make\/scripts\/compare.sh","additions":190,"deletions":153,"binary":false,"changes":343,"status":"modified"},{"patch":"@@ -1,65 +0,0 @@\n-#!\/bin\/bash\n-#\n-# Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# This script is not to be run as stand-alone, it should be included from\n-# compare.sh.\n-\n-##########################################################################################\n-# Check that we are run via inclusion from compare.sh and not as stand-alone.\n-if [ -z \"$COMPARE_EXCEPTIONS_INCLUDE\" ]; then\n-    echo \"Error: This script should not be run as stand-alone. It is included by compare.sh\"\n-    exit 1\n-fi\n-\n-##########################################################################################\n-# Diff exceptions\n-\n-if [ \"$OPENJDK_TARGET_OS\" = \"linux\" ]; then\n-  if [ \"$USE_PRECOMPILED_HEADER\" = \"true\" ]; then\n-    ACCEPTED_BIN_DIFF=\"\n-        .\/lib\/server\/libjvm.so\n-        .\/hotspot\/gtest\/server\/libjvm.so\n-        \"\n-    STRIP_BEFORE_COMPARE=\"\n-        .\/hotspot\/gtest\/server\/libjvm.so\n-        \"\n-   fi\n-elif [ \"$OPENJDK_TARGET_OS\" = \"windows\" ]; then\n-  SKIP_BIN_DIFF=\"true\"\n-  SKIP_FULLDUMP_DIFF=\"true\"\n-  ACCEPTED_JARZIP_CONTENTS=\"\n-      \/modules_libs\/java.security.jgss\/w2k_lsa_auth.dll.pdb\n-      \/modules_libs\/java.security.jgss\/w2k_lsa_auth.dll.map\n-      \/modules_libs\/java.security.jgss\/w2k_lsa_auth.dll\n-      \"\n-elif [ \"$OPENJDK_TARGET_OS\" = \"macosx\" ]; then\n-  ACCEPTED_BIN_DIFF=\"\n-      .\/lib\/libawt_lwawt.dylib\n-      .\/lib\/libosxapp.dylib\n-      .\/lib\/libosxui.dylib\n-      .\/lib\/server\/libjvm.dylib\n-      .\/hotspot\/gtest\/server\/libjvm.dylib\n-      \"\n-  STRIP_TESTS_BEFORE_COMPARE=\"true\"\n-fi\n","filename":"make\/scripts\/compare_exceptions.sh.incl","additions":0,"deletions":65,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -32,0 +32,17 @@\n+\n+ifndef SOURCE\n+export SOURCE := 7\n+endif\n+ifndef TARGET\n+export TARGET := 7\n+endif\n+ifndef JAVAC\n+export JAVAC := javac\n+endif\n+ifndef JAVA\n+export JAVA := java\n+endif\n+ifndef JAR\n+export JAR := jar\n+endif\n+\n@@ -83,1 +100,1 @@\n-\tjava -jar $(DIST)\/J2DBench.jar\n+\t$(JAVA) -jar $(DIST)\/J2DBench.jar\n@@ -86,1 +103,1 @@\n-\tjava -jar $(DIST)\/J2DAnalyzer.jar\n+\t$(JAVA) -jar $(DIST)\/J2DAnalyzer.jar\n@@ -91,1 +108,1 @@\n-\tjar cvmf $(CLASSES)\/j2dbench.manifest $(DIST)\/J2DBench.jar -C $(CLASSES) j2dbench\n+\t$(JAR) cvmf $(CLASSES)\/j2dbench.manifest $(DIST)\/J2DBench.jar -C $(CLASSES) j2dbench\n@@ -94,1 +111,1 @@\n-\tjar cvmf $(CLASSES)\/j2danalyzer.manifest \\\n+\t$(JAR) cvmf $(CLASSES)\/j2danalyzer.manifest \\\n@@ -123,1 +140,1 @@\n-\tjavac -g:none -source 1.7 -target 1.7 -d $(CLASSES) -sourcepath $(SOURCEPATH) $<\n+\t$(JAVAC) -g:none -source $(SOURCE) -target $(TARGET) -d $(CLASSES) -sourcepath $(SOURCEPATH) $<\n","filename":"src\/demo\/share\/java2d\/J2DBench\/Makefile","additions":22,"deletions":5,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+Yo can use TARGET\/SOURCE of makefile and -Dtarget\/surce to set them up for your convinience.\n+Similarly you can set JAVA\/JAVAC\/JAR and -Djava\/javac to select diffferent java\/javac then is on yoru PATH\n+Unluckily in ant, you can not set jar, but ant should honor JAVA_HOME\n","filename":"src\/demo\/share\/java2d\/J2DBench\/README","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,0 +42,21 @@\n+  <condition property=\"source\" value=\"7\">\n+     <not>\n+        <isset property=\"source\"\/>\n+     <\/not>\n+  <\/condition>\n+  <condition property=\"target\" value=\"7\">\n+     <not>\n+        <isset property=\"target\"\/>\n+     <\/not>\n+  <\/condition>\n+  <condition property=\"java\" value=\"java\">\n+     <not>\n+        <isset property=\"java\"\/>\n+     <\/not>\n+  <\/condition>\n+  <condition property=\"javac\" value=\"javac\">\n+     <not>\n+        <isset property=\"javac\"\/>\n+     <\/not>\n+  <\/condition>\n+\n@@ -52,1 +73,1 @@\n-    <javac debug=\"off\" source=\"1.7\" target=\"1.7\" srcdir=\"${src}\" destdir=\"${build}\"\/>\n+    <javac debug=\"off\" source=\"${source}\" target=\"${target}\" srcdir=\"${src}\" destdir=\"${build}\" fork=\"true\" executable=\"${javac}\"\/>\n@@ -59,0 +80,1 @@\n+       jvm=\"${java}\"\n@@ -67,0 +89,1 @@\n+       jvm=\"${java}\"\n","filename":"src\/demo\/share\/java2d\/J2DBench\/build.xml","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -16436,0 +16436,1 @@\n+  predicate(LockingMode != LM_LIGHTWEIGHT);\n@@ -16439,2 +16440,0 @@\n-  \/\/ TODO\n-  \/\/ identify correct cost\n@@ -16442,1 +16441,1 @@\n-  format %{ \"fastlock $object,$box\\t! kills $tmp,$tmp2\" %}\n+  format %{ \"fastlock $object,$box\\t! kills $tmp,$tmp2,$tmp3\" %}\n@@ -16453,0 +16452,1 @@\n+  predicate(LockingMode != LM_LIGHTWEIGHT);\n@@ -16466,0 +16466,31 @@\n+instruct cmpFastLockLightweight(rFlagsReg cr, iRegP object, iRegP box, iRegPNoSp tmp, iRegPNoSp tmp2)\n+%{\n+  predicate(LockingMode == LM_LIGHTWEIGHT);\n+  match(Set cr (FastLock object box));\n+  effect(TEMP tmp, TEMP tmp2);\n+\n+  ins_cost(5 * INSN_COST);\n+  format %{ \"fastlock $object,$box\\t! kills $tmp,$tmp2\" %}\n+\n+  ins_encode %{\n+    __ fast_lock_lightweight($object$$Register, $box$$Register, $tmp$$Register, $tmp2$$Register);\n+  %}\n+\n+  ins_pipe(pipe_serial);\n+%}\n+\n+instruct cmpFastUnlockLightweight(rFlagsReg cr, iRegP object, iRegP box, iRegPNoSp tmp, iRegPNoSp tmp2)\n+%{\n+  predicate(LockingMode == LM_LIGHTWEIGHT);\n+  match(Set cr (FastUnlock object box));\n+  effect(TEMP tmp, TEMP tmp2);\n+\n+  ins_cost(5 * INSN_COST);\n+  format %{ \"fastunlock $object,$box\\t! kills $tmp, $tmp2\" %}\n+\n+  ins_encode %{\n+    __ fast_unlock_lightweight($object$$Register, $box$$Register, $tmp$$Register, $tmp2$$Register);\n+  %}\n+\n+  ins_pipe(pipe_serial);\n+%}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":34,"deletions":3,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-dnl \n+dnl\n@@ -93,1 +93,0 @@\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/ad_encode.m4","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,2 +83,0 @@\n-  \/\/ Load object header\n-  ldr(hdr, Address(obj, hdr_offset));\n@@ -89,0 +87,2 @@\n+    \/\/ Load object header\n+    ldr(hdr, Address(obj, hdr_offset));\n@@ -147,5 +147,0 @@\n-    ldr(hdr, Address(obj, oopDesc::mark_offset_in_bytes()));\n-    \/\/ We cannot use tbnz here, the target might be too far away and cannot\n-    \/\/ be encoded.\n-    tst(hdr, markWord::monitor_value);\n-    br(Assembler::NE, slow_case);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -58,0 +59,1 @@\n+  assert(LockingMode != LM_LIGHTWEIGHT, \"lightweight locking should use fast_lock_lightweight\");\n@@ -76,1 +78,2 @@\n-  } else if (LockingMode == LM_LEGACY) {\n+  } else {\n+    assert(LockingMode == LM_LEGACY, \"must be\");\n@@ -105,4 +108,0 @@\n-  } else {\n-    assert(LockingMode == LM_LIGHTWEIGHT, \"must be\");\n-    lightweight_lock(oop, disp_hdr, tmp, tmp3Reg, no_count);\n-    b(count);\n@@ -122,8 +121,7 @@\n-  if (LockingMode != LM_LIGHTWEIGHT) {\n-    \/\/ Store a non-null value into the box to avoid looking like a re-entrant\n-    \/\/ lock. The fast-path monitor unlock code checks for\n-    \/\/ markWord::monitor_value so use markWord::unused_mark which has the\n-    \/\/ relevant bit set, and also matches ObjectSynchronizer::enter.\n-    mov(tmp, (address)markWord::unused_mark().value());\n-    str(tmp, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n-  }\n+  \/\/ Store a non-null value into the box to avoid looking like a re-entrant\n+  \/\/ lock. The fast-path monitor unlock code checks for\n+  \/\/ markWord::monitor_value so use markWord::unused_mark which has the\n+  \/\/ relevant bit set, and also matches ObjectSynchronizer::enter.\n+  mov(tmp, (address)markWord::unused_mark().value());\n+  str(tmp, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n+\n@@ -160,0 +158,1 @@\n+  assert(LockingMode != LM_LIGHTWEIGHT, \"lightweight locking should use fast_unlock_lightweight\");\n@@ -178,1 +177,2 @@\n-  } else if (LockingMode == LM_LEGACY) {\n+  } else {\n+    assert(LockingMode == LM_LEGACY, \"must be\");\n@@ -186,4 +186,0 @@\n-  } else {\n-    assert(LockingMode == LM_LIGHTWEIGHT, \"must be\");\n-    lightweight_unlock(oop, tmp, box, disp_hdr, no_count);\n-    b(count);\n@@ -199,13 +195,0 @@\n-  if (LockingMode == LM_LIGHTWEIGHT) {\n-    \/\/ If the owner is anonymous, we need to fix it -- in an outline stub.\n-    Register tmp2 = disp_hdr;\n-    ldr(tmp2, Address(tmp, ObjectMonitor::owner_offset()));\n-    \/\/ We cannot use tbnz here, the target might be too far away and cannot\n-    \/\/ be encoded.\n-    tst(tmp2, (uint64_t)ObjectMonitor::ANONYMOUS_OWNER);\n-    C2HandleAnonOMOwnerStub* stub = new (Compile::current()->comp_arena()) C2HandleAnonOMOwnerStub(tmp, tmp2);\n-    Compile::current()->output()->add_stub(stub);\n-    br(Assembler::NE, stub->entry());\n-    bind(stub->continuation());\n-  }\n-\n@@ -244,0 +227,256 @@\n+void C2_MacroAssembler::fast_lock_lightweight(Register obj, Register t1,\n+                                              Register t2, Register t3) {\n+  assert(LockingMode == LM_LIGHTWEIGHT, \"must be\");\n+  assert_different_registers(obj, t1, t2, t3);\n+\n+  \/\/ Handle inflated monitor.\n+  Label inflated;\n+  \/\/ Finish fast lock successfully. MUST branch to with flag == EQ\n+  Label locked;\n+  \/\/ Finish fast lock unsuccessfully. MUST branch to with flag == NE\n+  Label slow_path;\n+\n+  if (DiagnoseSyncOnValueBasedClasses != 0) {\n+    load_klass(t1, obj);\n+    ldrw(t1, Address(t1, Klass::access_flags_offset()));\n+    tstw(t1, JVM_ACC_IS_VALUE_BASED_CLASS);\n+    br(Assembler::NE, slow_path);\n+  }\n+\n+  const Register t1_mark = t1;\n+\n+  { \/\/ Lightweight locking\n+\n+    \/\/ Push lock to the lock stack and finish successfully. MUST branch to with flag == EQ\n+    Label push;\n+\n+    const Register t2_top = t2;\n+    const Register t3_t = t3;\n+\n+    \/\/ Check if lock-stack is full.\n+    ldrw(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+    cmpw(t2_top, (unsigned)LockStack::end_offset() - 1);\n+    br(Assembler::GT, slow_path);\n+\n+    \/\/ Check if recursive.\n+    subw(t3_t, t2_top, oopSize);\n+    ldr(t3_t, Address(rthread, t3_t));\n+    cmp(obj, t3_t);\n+    br(Assembler::EQ, push);\n+\n+    \/\/ Relaxed normal load to check for monitor. Optimization for monitor case.\n+    ldr(t1_mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+    tbnz(t1_mark, exact_log2(markWord::monitor_value), inflated);\n+\n+    \/\/ Not inflated\n+    assert(oopDesc::mark_offset_in_bytes() == 0, \"required to avoid a lea\");\n+\n+    \/\/ Try to lock. Transition lock-bits 0b01 => 0b00\n+    orr(t1_mark, t1_mark, markWord::unlocked_value);\n+    eor(t3_t, t1_mark, markWord::unlocked_value);\n+    cmpxchg(\/*addr*\/ obj, \/*expected*\/ t1_mark, \/*new*\/ t3_t, Assembler::xword,\n+            \/*acquire*\/ true, \/*release*\/ false, \/*weak*\/ false, noreg);\n+    br(Assembler::NE, slow_path);\n+\n+    bind(push);\n+    \/\/ After successful lock, push object on lock-stack.\n+    str(obj, Address(rthread, t2_top));\n+    addw(t2_top, t2_top, oopSize);\n+    strw(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+    b(locked);\n+  }\n+\n+  { \/\/ Handle inflated monitor.\n+    bind(inflated);\n+\n+    \/\/ mark contains the tagged ObjectMonitor*.\n+    const Register t1_tagged_monitor = t1_mark;\n+    const uintptr_t monitor_tag = markWord::monitor_value;\n+    const Register t2_owner_addr = t2;\n+    const Register t3_owner = t3;\n+\n+    \/\/ Compute owner address.\n+    lea(t2_owner_addr, Address(t1_tagged_monitor, (in_bytes(ObjectMonitor::owner_offset()) - monitor_tag)));\n+\n+    \/\/ CAS owner (null => current thread).\n+    cmpxchg(t2_owner_addr, zr, rthread, Assembler::xword, \/*acquire*\/ true,\n+            \/*release*\/ false, \/*weak*\/ false, t3_owner);\n+    br(Assembler::EQ, locked);\n+\n+    \/\/ Check if recursive.\n+    cmp(t3_owner, rthread);\n+    br(Assembler::NE, slow_path);\n+\n+    \/\/ Recursive.\n+    increment(Address(t1_tagged_monitor, in_bytes(ObjectMonitor::recursions_offset()) - monitor_tag), 1);\n+  }\n+\n+  bind(locked);\n+  increment(Address(rthread, JavaThread::held_monitor_count_offset()));\n+\n+#ifdef ASSERT\n+  \/\/ Check that locked label is reached with Flags == EQ.\n+  Label flag_correct;\n+  br(Assembler::EQ, flag_correct);\n+  stop(\"Fast Lock Flag != EQ\");\n+#endif\n+\n+  bind(slow_path);\n+#ifdef ASSERT\n+  \/\/ Check that slow_path label is reached with Flags == NE.\n+  br(Assembler::NE, flag_correct);\n+  stop(\"Fast Lock Flag != NE\");\n+  bind(flag_correct);\n+#endif\n+  \/\/ C2 uses the value of Flags (NE vs EQ) to determine the continuation.\n+}\n+\n+void C2_MacroAssembler::fast_unlock_lightweight(Register obj, Register t1, Register t2,\n+                                                Register t3) {\n+  assert(LockingMode == LM_LIGHTWEIGHT, \"must be\");\n+  assert_different_registers(obj, t1, t2, t3);\n+\n+  \/\/ Handle inflated monitor.\n+  Label inflated, inflated_load_monitor;\n+  \/\/ Finish fast unlock successfully. MUST branch to with flag == EQ\n+  Label unlocked;\n+  \/\/ Finish fast unlock unsuccessfully. MUST branch to with flag == NE\n+  Label slow_path;\n+\n+  const Register t1_mark = t1;\n+  const Register t2_top = t2;\n+  const Register t3_t = t3;\n+\n+  { \/\/ Lightweight unlock\n+\n+    \/\/ Check if obj is top of lock-stack.\n+    ldrw(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+    subw(t2_top, t2_top, oopSize);\n+    ldr(t3_t, Address(rthread, t2_top));\n+    cmp(obj, t3_t);\n+    \/\/ Top of lock stack was not obj. Must be monitor.\n+    br(Assembler::NE, inflated_load_monitor);\n+\n+    \/\/ Pop lock-stack.\n+    DEBUG_ONLY(str(zr, Address(rthread, t2_top));)\n+    strw(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+\n+    \/\/ Check if recursive.\n+    subw(t3_t, t2_top, oopSize);\n+    ldr(t3_t, Address(rthread, t3_t));\n+    cmp(obj, t3_t);\n+    br(Assembler::EQ, unlocked);\n+\n+    \/\/ Not recursive.\n+    \/\/ Load Mark.\n+    ldr(t1_mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+\n+    \/\/ Check header for monitor (0b10).\n+    tbnz(t1_mark, exact_log2(markWord::monitor_value), inflated);\n+\n+    \/\/ Try to unlock. Transition lock bits 0b00 => 0b01\n+    assert(oopDesc::mark_offset_in_bytes() == 0, \"required to avoid lea\");\n+    orr(t3_t, t1_mark, markWord::unlocked_value);\n+    cmpxchg(\/*addr*\/ obj, \/*expected*\/ t1_mark, \/*new*\/ t3_t, Assembler::xword,\n+            \/*acquire*\/ false, \/*release*\/ true, \/*weak*\/ false, noreg);\n+    br(Assembler::EQ, unlocked);\n+\n+    \/\/ Compare and exchange failed.\n+    \/\/ Restore lock-stack and handle the unlock in runtime.\n+    DEBUG_ONLY(str(obj, Address(rthread, t2_top));)\n+    addw(t2_top, t2_top, oopSize);\n+    str(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+    b(slow_path);\n+  }\n+\n+\n+  { \/\/ Handle inflated monitor.\n+    bind(inflated_load_monitor);\n+    ldr(t1_mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+#ifdef ASSERT\n+    tbnz(t1_mark, exact_log2(markWord::monitor_value), inflated);\n+    stop(\"Fast Unlock not monitor\");\n+#endif\n+\n+    bind(inflated);\n+\n+#ifdef ASSERT\n+    Label check_done;\n+    subw(t2_top, t2_top, oopSize);\n+    cmpw(t2_top, in_bytes(JavaThread::lock_stack_base_offset()));\n+    br(Assembler::LT, check_done);\n+    ldr(t3_t, Address(rthread, t2_top));\n+    cmp(obj, t3_t);\n+    br(Assembler::NE, inflated);\n+    stop(\"Fast Unlock lock on stack\");\n+    bind(check_done);\n+#endif\n+\n+    \/\/ mark contains the tagged ObjectMonitor*.\n+    const Register t1_monitor = t1_mark;\n+    const uintptr_t monitor_tag = markWord::monitor_value;\n+\n+    \/\/ Untag the monitor.\n+    sub(t1_monitor, t1_mark, monitor_tag);\n+\n+    const Register t2_recursions = t2;\n+    Label not_recursive;\n+\n+    \/\/ Check if recursive.\n+    ldr(t2_recursions, Address(t1_monitor, ObjectMonitor::recursions_offset()));\n+    cbz(t2_recursions, not_recursive);\n+\n+    \/\/ Recursive unlock.\n+    sub(t2_recursions, t2_recursions, 1u);\n+    str(t2_recursions, Address(t1_monitor, ObjectMonitor::recursions_offset()));\n+    \/\/ Set flag == EQ\n+    cmp(t2_recursions, t2_recursions);\n+    b(unlocked);\n+\n+    bind(not_recursive);\n+\n+    Label release;\n+    const Register t2_owner_addr = t2;\n+\n+    \/\/ Compute owner address.\n+    lea(t2_owner_addr, Address(t1_monitor, ObjectMonitor::owner_offset()));\n+\n+    \/\/ Check if the entry lists are empty.\n+    ldr(rscratch1, Address(t1_monitor, ObjectMonitor::EntryList_offset()));\n+    ldr(t3_t, Address(t1_monitor, ObjectMonitor::cxq_offset()));\n+    orr(rscratch1, rscratch1, t3_t);\n+    cmp(rscratch1, zr);\n+    br(Assembler::EQ, release);\n+\n+    \/\/ The owner may be anonymous and we removed the last obj entry in\n+    \/\/ the lock-stack. This loses the information about the owner.\n+    \/\/ Write the thread to the owner field so the runtime knows the owner.\n+    str(rthread, Address(t2_owner_addr));\n+    b(slow_path);\n+\n+    bind(release);\n+    \/\/ Set owner to null.\n+    \/\/ Release to satisfy the JMM\n+    stlr(zr, t2_owner_addr);\n+  }\n+\n+  bind(unlocked);\n+  decrement(Address(rthread, JavaThread::held_monitor_count_offset()));\n+\n+#ifdef ASSERT\n+  \/\/ Check that unlocked label is reached with Flags == EQ.\n+  Label flag_correct;\n+  br(Assembler::EQ, flag_correct);\n+  stop(\"Fast Unlock Flag != EQ\");\n+#endif\n+\n+  bind(slow_path);\n+#ifdef ASSERT\n+  \/\/ Check that slow_path label is reached with Flags == NE.\n+  br(Assembler::NE, flag_correct);\n+  stop(\"Fast Unlock Flag != NE\");\n+  bind(flag_correct);\n+#endif\n+  \/\/ C2 uses the value of Flags (NE vs EQ) to determine the continuation.\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":270,"deletions":31,"binary":false,"changes":301,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-  \/\/ See full description in macroAssembler_aarch64.cpp.\n@@ -42,0 +41,3 @@\n+  \/\/ Code used by cmpFastLockLightweight and cmpFastUnlockLightweight mach instructions in .ad file.\n+  void fast_lock_lightweight(Register object, Register t1, Register t2, Register t3);\n+  void fast_unlock_lightweight(Register object, Register t1, Register t2, Register t3);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -704,1 +704,0 @@\n-      ldr(tmp, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n@@ -821,16 +820,0 @@\n-\n-      \/\/ Check for non-symmetric locking. This is allowed by the spec and the interpreter\n-      \/\/ must handle it.\n-      Register tmp = rscratch1;\n-      \/\/ First check for lock-stack underflow.\n-      ldrw(tmp, Address(rthread, JavaThread::lock_stack_top_offset()));\n-      cmpw(tmp, (unsigned)LockStack::start_offset());\n-      br(Assembler::LE, slow_case);\n-      \/\/ Then check if the top of the lock-stack matches the unlocked object.\n-      subw(tmp, tmp, oopSize);\n-      ldr(tmp, Address(rthread, tmp));\n-      cmpoop(tmp, obj_reg);\n-      br(Assembler::NE, slow_case);\n-\n-      ldr(header_reg, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n-      tbnz(header_reg, exact_log2(markWord::monitor_value), slow_case);\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":1,"deletions":18,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,0 @@\n-#include <sys\/types.h>\n-\n@@ -59,0 +57,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -70,0 +69,2 @@\n+#include <sys\/types.h>\n+\n@@ -6384,2 +6385,0 @@\n-\/\/ Branches to slow upon failure to lock the object, with ZF cleared.\n-\/\/ Falls through upon success with ZF set.\n@@ -6388,3 +6387,3 @@\n-\/\/  - hdr: the header, already loaded from obj, will be destroyed\n-\/\/  - t1, t2: temporary registers, will be destroyed\n-void MacroAssembler::lightweight_lock(Register obj, Register hdr, Register t1, Register t2, Label& slow) {\n+\/\/  - t1, t2, t3: temporary registers, will be destroyed\n+\/\/  - slow: branched to if locking fails, absolute offset may larger than 32KB (imm14 encoding).\n+void MacroAssembler::lightweight_lock(Register obj, Register t1, Register t2, Register t3, Label& slow) {\n@@ -6392,15 +6391,24 @@\n-  assert_different_registers(obj, hdr, t1, t2, rscratch1);\n-\n-  \/\/ Check if we would have space on lock-stack for the object.\n-  ldrw(t1, Address(rthread, JavaThread::lock_stack_top_offset()));\n-  cmpw(t1, (unsigned)LockStack::end_offset() - 1);\n-  br(Assembler::GT, slow);\n-\n-  \/\/ Load (object->mark() | 1) into hdr\n-  orr(hdr, hdr, markWord::unlocked_value);\n-  \/\/ Clear lock-bits, into t2\n-  eor(t2, hdr, markWord::unlocked_value);\n-  \/\/ Try to swing header from unlocked to locked\n-  \/\/ Clobbers rscratch1 when UseLSE is false\n-  cmpxchg(\/*addr*\/ obj, \/*expected*\/ hdr, \/*new*\/ t2, Assembler::xword,\n-          \/*acquire*\/ true, \/*release*\/ true, \/*weak*\/ false, t1);\n+  assert_different_registers(obj, t1, t2, t3, rscratch1);\n+\n+  Label push;\n+  const Register top = t1;\n+  const Register mark = t2;\n+  const Register t = t3;\n+\n+  \/\/ Preload the markWord. It is important that this is the first\n+  \/\/ instruction emitted as it is part of C1's null check semantics.\n+  ldr(mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+\n+  \/\/ Check if the lock-stack is full.\n+  ldrw(top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+  cmpw(top, (unsigned)LockStack::end_offset());\n+  br(Assembler::GE, slow);\n+\n+  \/\/ Check for recursion.\n+  subw(t, top, oopSize);\n+  ldr(t, Address(rthread, t));\n+  cmp(obj, t);\n+  br(Assembler::EQ, push);\n+\n+  \/\/ Check header for monitor (0b10).\n+  tst(mark, markWord::monitor_value);\n@@ -6409,5 +6417,13 @@\n-  \/\/ After successful lock, push object on lock-stack\n-  ldrw(t1, Address(rthread, JavaThread::lock_stack_top_offset()));\n-  str(obj, Address(rthread, t1));\n-  addw(t1, t1, oopSize);\n-  strw(t1, Address(rthread, JavaThread::lock_stack_top_offset()));\n+  \/\/ Try to lock. Transition lock bits 0b01 => 0b00\n+  assert(oopDesc::mark_offset_in_bytes() == 0, \"required to avoid lea\");\n+  orr(mark, mark, markWord::unlocked_value);\n+  eor(t, mark, markWord::unlocked_value);\n+  cmpxchg(\/*addr*\/ obj, \/*expected*\/ mark, \/*new*\/ t, Assembler::xword,\n+          \/*acquire*\/ true, \/*release*\/ false, \/*weak*\/ false, noreg);\n+  br(Assembler::NE, slow);\n+\n+  bind(push);\n+  \/\/ After successful lock, push object on lock-stack.\n+  str(obj, Address(rthread, top));\n+  addw(top, top, oopSize);\n+  strw(top, Address(rthread, JavaThread::lock_stack_top_offset()));\n@@ -6417,2 +6433,0 @@\n-\/\/ Branches to slow upon failure, with ZF cleared.\n-\/\/ Falls through upon success, with ZF set.\n@@ -6421,3 +6435,3 @@\n-\/\/ - hdr: the (pre-loaded) header of the object\n-\/\/ - t1, t2: temporary registers\n-void MacroAssembler::lightweight_unlock(Register obj, Register hdr, Register t1, Register t2, Label& slow) {\n+\/\/ - t1, t2, t3: temporary registers\n+\/\/ - slow: branched to if unlocking fails, absolute offset may larger than 32KB (imm14 encoding).\n+void MacroAssembler::lightweight_unlock(Register obj, Register t1, Register t2, Register t3, Label& slow) {\n@@ -6425,1 +6439,2 @@\n-  assert_different_registers(obj, hdr, t1, t2, rscratch1);\n+  \/\/ cmpxchg clobbers rscratch1.\n+  assert_different_registers(obj, t1, t2, t3, rscratch1);\n@@ -6429,4 +6444,0 @@\n-    \/\/ The following checks rely on the fact that LockStack is only ever modified by\n-    \/\/ its owning thread, even if the lock got inflated concurrently; removal of LockStack\n-    \/\/ entries after inflation will happen delayed in that case.\n-\n@@ -6437,1 +6448,1 @@\n-    br(Assembler::GT, stack_ok);\n+    br(Assembler::GE, stack_ok);\n@@ -6441,18 +6452,0 @@\n-  {\n-    \/\/ Check if the top of the lock-stack matches the unlocked object.\n-    Label tos_ok;\n-    subw(t1, t1, oopSize);\n-    ldr(t1, Address(rthread, t1));\n-    cmpoop(t1, obj);\n-    br(Assembler::EQ, tos_ok);\n-    STOP(\"Top of lock-stack does not match the unlocked object\");\n-    bind(tos_ok);\n-  }\n-  {\n-    \/\/ Check that hdr is fast-locked.\n-    Label hdr_ok;\n-    tst(hdr, markWord::lock_mask_in_place);\n-    br(Assembler::EQ, hdr_ok);\n-    STOP(\"Header is not fast-locked\");\n-    bind(hdr_ok);\n-  }\n@@ -6461,2 +6454,4 @@\n-  \/\/ Load the new header (unlocked) into t1\n-  orr(t1, hdr, markWord::unlocked_value);\n+  Label unlocked, push_and_slow;\n+  const Register top = t1;\n+  const Register mark = t2;\n+  const Register t = t3;\n@@ -6464,4 +6459,5 @@\n-  \/\/ Try to swing header from locked to unlocked\n-  \/\/ Clobbers rscratch1 when UseLSE is false\n-  cmpxchg(obj, hdr, t1, Assembler::xword,\n-          \/*acquire*\/ true, \/*release*\/ true, \/*weak*\/ false, t2);\n+  \/\/ Check if obj is top of lock-stack.\n+  ldrw(top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+  subw(top, top, oopSize);\n+  ldr(t, Address(rthread, top));\n+  cmp(obj, t);\n@@ -6470,3 +6466,14 @@\n-  \/\/ After successful unlock, pop object from lock-stack\n-  ldrw(t1, Address(rthread, JavaThread::lock_stack_top_offset()));\n-  subw(t1, t1, oopSize);\n+  \/\/ Pop lock-stack.\n+  DEBUG_ONLY(str(zr, Address(rthread, top));)\n+  strw(top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+\n+  \/\/ Check if recursive.\n+  subw(t, top, oopSize);\n+  ldr(t, Address(rthread, t));\n+  cmp(obj, t);\n+  br(Assembler::EQ, unlocked);\n+\n+  \/\/ Not recursive. Check header for monitor (0b10).\n+  ldr(mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+  tbnz(mark, log2i_exact(markWord::monitor_value), push_and_slow);\n+\n@@ -6474,1 +6481,5 @@\n-  str(zr, Address(rthread, t1));\n+  \/\/ Check header not unlocked (0b01).\n+  Label not_unlocked;\n+  tbz(mark, log2i_exact(markWord::unlocked_value), not_unlocked);\n+  stop(\"lightweight_unlock already unlocked\");\n+  bind(not_unlocked);\n@@ -6476,1 +6487,16 @@\n-  strw(t1, Address(rthread, JavaThread::lock_stack_top_offset()));\n+\n+  \/\/ Try to unlock. Transition lock bits 0b00 => 0b01\n+  assert(oopDesc::mark_offset_in_bytes() == 0, \"required to avoid lea\");\n+  orr(t, mark, markWord::unlocked_value);\n+  cmpxchg(obj, mark, t, Assembler::xword,\n+          \/*acquire*\/ false, \/*release*\/ true, \/*weak*\/ false, noreg);\n+  br(Assembler::EQ, unlocked);\n+\n+  bind(push_and_slow);\n+  \/\/ Restore lock-stack and handle the unlock in runtime.\n+  DEBUG_ONLY(str(obj, Address(rthread, top));)\n+  addw(top, top, oopSize);\n+  strw(top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+  b(slow);\n+\n+  bind(unlocked);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":94,"deletions":68,"binary":false,"changes":162,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1605,2 +1605,2 @@\n-  void lightweight_lock(Register obj, Register hdr, Register t1, Register t2, Label& slow);\n-  void lightweight_unlock(Register obj, Register hdr, Register t1, Register t2, Label& slow);\n+  void lightweight_lock(Register obj, Register t1, Register t2, Register t3, Label& slow);\n+  void lightweight_unlock(Register obj, Register t1, Register t2, Register t3, Label& slow);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1799,1 +1799,0 @@\n-      __ ldr(swap_reg, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n@@ -1942,2 +1941,0 @@\n-      __ ldr(old_hdr, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n-      __ tbnz(old_hdr, exact_log2(markWord::monitor_value), slow_path_unlock);\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,0 +172,1 @@\n+  constexpr static bool supports_recursive_lightweight_locking() { return true; }\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -459,0 +459,3 @@\n+  if (ce->compilation()->bailed_out()) {\n+    return; \/\/ CodeCache is full\n+  }\n","filename":"src\/hotspot\/cpu\/ppc\/c1_CodeStubs_ppc.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2030,1 +2030,4 @@\n-  if (base == nullptr) return 0; \/\/ CodeBuffer::expand failed\n+  if (base == nullptr) {\n+    ciEnv::current()->record_failure(\"CodeCache is full\");\n+    return 0;  \/\/ CodeBuffer::expand failed\n+  }\n@@ -2047,1 +2050,4 @@\n-  if (base == nullptr) return 0; \/\/ CodeBuffer::expand failed\n+  if (base == nullptr) {\n+    ciEnv::current()->record_failure(\"CodeCache is full\");\n+    return 0;  \/\/ CodeBuffer::expand failed\n+  }\n@@ -2769,0 +2775,1 @@\n+    RelocationHolder r; \/\/ Initializes type to none.\n@@ -2771,1 +2778,1 @@\n-      AddressLiteral a = __ allocate_oop_address((jobject)val);\n+      AddressLiteral a = __ constant_oop_address((jobject)val);\n@@ -2773,1 +2780,1 @@\n-      __ relocate(a.rspec());\n+      r = a.rspec();\n@@ -2775,0 +2782,1 @@\n+      \/\/ Notify OOP recorder (don't need the relocation)\n@@ -2777,1 +2785,0 @@\n-      __ relocate(a.rspec());\n@@ -2787,0 +2794,1 @@\n+    __ relocate(r); \/\/ If set above.\n@@ -2800,0 +2808,1 @@\n+      RelocationHolder r; \/\/ Initializes type to none.\n@@ -2802,1 +2811,1 @@\n-        AddressLiteral a = __ allocate_oop_address((jobject)val);\n+        AddressLiteral a = __ constant_oop_address((jobject)val);\n@@ -2804,1 +2813,1 @@\n-        __ relocate(a.rspec());\n+        r = a.rspec();\n@@ -2806,0 +2815,1 @@\n+        \/\/ Notify OOP recorder (don't need the relocation)\n@@ -2808,1 +2818,0 @@\n-        __ relocate(a.rspec());\n@@ -2818,0 +2827,1 @@\n+      __ relocate(r); \/\/ If set above.\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -53,0 +53,3 @@\n+\/\/ auipc useable for all cc -> cc calls and jumps\n+#define CODE_CACHE_SIZE_LIMIT ((2*G)-(2*K))\n+\n","filename":"src\/hotspot\/cpu\/riscv\/globalDefinitions_riscv.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016, 2018 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024 SAP SE. All rights reserved.\n@@ -431,0 +431,1 @@\n+  CHECK_BAILOUT();\n","filename":"src\/hotspot\/cpu\/s390\/c1_CodeStubs_s390.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-\/\/ Copyright (c) 2017, 2022 SAP SE. All rights reserved.\n+\/\/ Copyright (c) 2017, 2024 SAP SE. All rights reserved.\n@@ -1408,0 +1408,1 @@\n+    ciEnv::current()->record_failure(\"CodeCache is full\");\n@@ -1429,0 +1430,1 @@\n+    ciEnv::current()->record_failure(\"CodeCache is full\");\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -812,1 +812,1 @@\n-    _features = feature_flags(); \/\/ These can be changed by VM settings\n+    _features = _cpuid_info.feature_flags(); \/\/ These can be changed by VM settings\n@@ -2894,1 +2894,1 @@\n-uint64_t VM_Version::feature_flags() {\n+uint64_t VM_Version::CpuidInfo::feature_flags() const {\n@@ -2896,1 +2896,1 @@\n-  if (_cpuid_info.std_cpuid1_edx.bits.cmpxchg8 != 0)\n+  if (std_cpuid1_edx.bits.cmpxchg8 != 0)\n@@ -2898,1 +2898,1 @@\n-  if (_cpuid_info.std_cpuid1_edx.bits.cmov != 0)\n+  if (std_cpuid1_edx.bits.cmov != 0)\n@@ -2900,1 +2900,1 @@\n-  if (_cpuid_info.std_cpuid1_edx.bits.clflush != 0)\n+  if (std_cpuid1_edx.bits.clflush != 0)\n@@ -2908,2 +2908,2 @@\n-  if (_cpuid_info.std_cpuid1_edx.bits.fxsr != 0 || (is_amd_family() &&\n-      _cpuid_info.ext_cpuid1_edx.bits.fxsr != 0))\n+  if (std_cpuid1_edx.bits.fxsr != 0 || (is_amd_family() &&\n+      ext_cpuid1_edx.bits.fxsr != 0))\n@@ -2914,2 +2914,2 @@\n-  if (_cpuid_info.std_cpuid1_edx.bits.mmx != 0 || (is_amd_family() &&\n-      _cpuid_info.ext_cpuid1_edx.bits.mmx != 0))\n+  if (std_cpuid1_edx.bits.mmx != 0 || (is_amd_family() &&\n+      ext_cpuid1_edx.bits.mmx != 0))\n@@ -2917,1 +2917,1 @@\n-  if (_cpuid_info.std_cpuid1_edx.bits.sse != 0)\n+  if (std_cpuid1_edx.bits.sse != 0)\n@@ -2919,1 +2919,1 @@\n-  if (_cpuid_info.std_cpuid1_edx.bits.sse2 != 0)\n+  if (std_cpuid1_edx.bits.sse2 != 0)\n@@ -2921,1 +2921,1 @@\n-  if (_cpuid_info.std_cpuid1_ecx.bits.sse3 != 0)\n+  if (std_cpuid1_ecx.bits.sse3 != 0)\n@@ -2923,1 +2923,1 @@\n-  if (_cpuid_info.std_cpuid1_ecx.bits.ssse3 != 0)\n+  if (std_cpuid1_ecx.bits.ssse3 != 0)\n@@ -2925,1 +2925,1 @@\n-  if (_cpuid_info.std_cpuid1_ecx.bits.sse4_1 != 0)\n+  if (std_cpuid1_ecx.bits.sse4_1 != 0)\n@@ -2927,1 +2927,1 @@\n-  if (_cpuid_info.std_cpuid1_ecx.bits.sse4_2 != 0)\n+  if (std_cpuid1_ecx.bits.sse4_2 != 0)\n@@ -2929,1 +2929,1 @@\n-  if (_cpuid_info.std_cpuid1_ecx.bits.popcnt != 0)\n+  if (std_cpuid1_ecx.bits.popcnt != 0)\n@@ -2931,4 +2931,4 @@\n-  if (_cpuid_info.std_cpuid1_ecx.bits.avx != 0 &&\n-      _cpuid_info.std_cpuid1_ecx.bits.osxsave != 0 &&\n-      _cpuid_info.xem_xcr0_eax.bits.sse != 0 &&\n-      _cpuid_info.xem_xcr0_eax.bits.ymm != 0) {\n+  if (std_cpuid1_ecx.bits.avx != 0 &&\n+      std_cpuid1_ecx.bits.osxsave != 0 &&\n+      xem_xcr0_eax.bits.sse != 0 &&\n+      xem_xcr0_eax.bits.ymm != 0) {\n@@ -2937,1 +2937,1 @@\n-    if (_cpuid_info.std_cpuid1_ecx.bits.f16c != 0)\n+    if (std_cpuid1_ecx.bits.f16c != 0)\n@@ -2939,1 +2939,1 @@\n-    if (_cpuid_info.sef_cpuid7_ebx.bits.avx2 != 0)\n+    if (sef_cpuid7_ebx.bits.avx2 != 0)\n@@ -2941,4 +2941,4 @@\n-    if (_cpuid_info.sef_cpuid7_ebx.bits.avx512f != 0 &&\n-        _cpuid_info.xem_xcr0_eax.bits.opmask != 0 &&\n-        _cpuid_info.xem_xcr0_eax.bits.zmm512 != 0 &&\n-        _cpuid_info.xem_xcr0_eax.bits.zmm32 != 0) {\n+    if (sef_cpuid7_ebx.bits.avx512f != 0 &&\n+        xem_xcr0_eax.bits.opmask != 0 &&\n+        xem_xcr0_eax.bits.zmm512 != 0 &&\n+        xem_xcr0_eax.bits.zmm32 != 0) {\n@@ -2946,1 +2946,1 @@\n-      if (_cpuid_info.sef_cpuid7_ebx.bits.avx512cd != 0)\n+      if (sef_cpuid7_ebx.bits.avx512cd != 0)\n@@ -2948,1 +2948,1 @@\n-      if (_cpuid_info.sef_cpuid7_ebx.bits.avx512dq != 0)\n+      if (sef_cpuid7_ebx.bits.avx512dq != 0)\n@@ -2950,1 +2950,1 @@\n-      if (_cpuid_info.sef_cpuid7_ebx.bits.avx512ifma != 0)\n+      if (sef_cpuid7_ebx.bits.avx512ifma != 0)\n@@ -2952,1 +2952,1 @@\n-      if (_cpuid_info.sef_cpuid7_ebx.bits.avx512pf != 0)\n+      if (sef_cpuid7_ebx.bits.avx512pf != 0)\n@@ -2954,1 +2954,1 @@\n-      if (_cpuid_info.sef_cpuid7_ebx.bits.avx512er != 0)\n+      if (sef_cpuid7_ebx.bits.avx512er != 0)\n@@ -2956,1 +2956,1 @@\n-      if (_cpuid_info.sef_cpuid7_ebx.bits.avx512bw != 0)\n+      if (sef_cpuid7_ebx.bits.avx512bw != 0)\n@@ -2958,1 +2958,1 @@\n-      if (_cpuid_info.sef_cpuid7_ebx.bits.avx512vl != 0)\n+      if (sef_cpuid7_ebx.bits.avx512vl != 0)\n@@ -2960,1 +2960,1 @@\n-      if (_cpuid_info.sef_cpuid7_ecx.bits.avx512_vpopcntdq != 0)\n+      if (sef_cpuid7_ecx.bits.avx512_vpopcntdq != 0)\n@@ -2962,1 +2962,1 @@\n-      if (_cpuid_info.sef_cpuid7_ecx.bits.avx512_vpclmulqdq != 0)\n+      if (sef_cpuid7_ecx.bits.avx512_vpclmulqdq != 0)\n@@ -2964,1 +2964,1 @@\n-      if (_cpuid_info.sef_cpuid7_ecx.bits.vaes != 0)\n+      if (sef_cpuid7_ecx.bits.vaes != 0)\n@@ -2966,1 +2966,1 @@\n-      if (_cpuid_info.sef_cpuid7_ecx.bits.gfni != 0)\n+      if (sef_cpuid7_ecx.bits.gfni != 0)\n@@ -2968,1 +2968,1 @@\n-      if (_cpuid_info.sef_cpuid7_ecx.bits.avx512_vnni != 0)\n+      if (sef_cpuid7_ecx.bits.avx512_vnni != 0)\n@@ -2970,1 +2970,1 @@\n-      if (_cpuid_info.sef_cpuid7_ecx.bits.avx512_bitalg != 0)\n+      if (sef_cpuid7_ecx.bits.avx512_bitalg != 0)\n@@ -2972,1 +2972,1 @@\n-      if (_cpuid_info.sef_cpuid7_ecx.bits.avx512_vbmi != 0)\n+      if (sef_cpuid7_ecx.bits.avx512_vbmi != 0)\n@@ -2974,1 +2974,1 @@\n-      if (_cpuid_info.sef_cpuid7_ecx.bits.avx512_vbmi2 != 0)\n+      if (sef_cpuid7_ecx.bits.avx512_vbmi2 != 0)\n@@ -2978,1 +2978,1 @@\n-  if (_cpuid_info.std_cpuid1_ecx.bits.hv != 0)\n+  if (std_cpuid1_ecx.bits.hv != 0)\n@@ -2980,1 +2980,1 @@\n-  if (_cpuid_info.sef_cpuid7_ebx.bits.bmi1 != 0)\n+  if (sef_cpuid7_ebx.bits.bmi1 != 0)\n@@ -2982,1 +2982,1 @@\n-  if (_cpuid_info.std_cpuid1_edx.bits.tsc != 0)\n+  if (std_cpuid1_edx.bits.tsc != 0)\n@@ -2984,1 +2984,1 @@\n-  if (_cpuid_info.ext_cpuid7_edx.bits.tsc_invariance != 0)\n+  if (ext_cpuid7_edx.bits.tsc_invariance != 0)\n@@ -2986,1 +2986,1 @@\n-  if (_cpuid_info.std_cpuid1_ecx.bits.aes != 0)\n+  if (std_cpuid1_ecx.bits.aes != 0)\n@@ -2988,1 +2988,1 @@\n-  if (_cpuid_info.sef_cpuid7_ebx.bits.erms != 0)\n+  if (sef_cpuid7_ebx.bits.erms != 0)\n@@ -2990,1 +2990,1 @@\n-  if (_cpuid_info.sef_cpuid7_edx.bits.fast_short_rep_mov != 0)\n+  if (sef_cpuid7_edx.bits.fast_short_rep_mov != 0)\n@@ -2992,1 +2992,1 @@\n-  if (_cpuid_info.std_cpuid1_ecx.bits.clmul != 0)\n+  if (std_cpuid1_ecx.bits.clmul != 0)\n@@ -2994,1 +2994,1 @@\n-  if (_cpuid_info.sef_cpuid7_ebx.bits.rtm != 0)\n+  if (sef_cpuid7_ebx.bits.rtm != 0)\n@@ -2996,1 +2996,1 @@\n-  if (_cpuid_info.sef_cpuid7_ebx.bits.adx != 0)\n+  if (sef_cpuid7_ebx.bits.adx != 0)\n@@ -2998,1 +2998,1 @@\n-  if (_cpuid_info.sef_cpuid7_ebx.bits.bmi2 != 0)\n+  if (sef_cpuid7_ebx.bits.bmi2 != 0)\n@@ -3000,1 +3000,1 @@\n-  if (_cpuid_info.sef_cpuid7_ebx.bits.sha != 0)\n+  if (sef_cpuid7_ebx.bits.sha != 0)\n@@ -3002,1 +3002,1 @@\n-  if (_cpuid_info.std_cpuid1_ecx.bits.fma != 0)\n+  if (std_cpuid1_ecx.bits.fma != 0)\n@@ -3004,1 +3004,1 @@\n-  if (_cpuid_info.sef_cpuid7_ebx.bits.clflushopt != 0)\n+  if (sef_cpuid7_ebx.bits.clflushopt != 0)\n@@ -3006,1 +3006,1 @@\n-  if (_cpuid_info.ext_cpuid1_edx.bits.rdtscp != 0)\n+  if (ext_cpuid1_edx.bits.rdtscp != 0)\n@@ -3008,1 +3008,1 @@\n-  if (_cpuid_info.sef_cpuid7_ecx.bits.rdpid != 0)\n+  if (sef_cpuid7_ecx.bits.rdpid != 0)\n@@ -3013,2 +3013,2 @@\n-    if ((_cpuid_info.ext_cpuid1_edx.bits.tdnow != 0) ||\n-        (_cpuid_info.ext_cpuid1_ecx.bits.prefetchw != 0))\n+    if ((ext_cpuid1_edx.bits.tdnow != 0) ||\n+        (ext_cpuid1_ecx.bits.prefetchw != 0))\n@@ -3016,1 +3016,1 @@\n-    if (_cpuid_info.ext_cpuid1_ecx.bits.lzcnt != 0)\n+    if (ext_cpuid1_ecx.bits.lzcnt != 0)\n@@ -3018,1 +3018,1 @@\n-    if (_cpuid_info.ext_cpuid1_ecx.bits.sse4a != 0)\n+    if (ext_cpuid1_ecx.bits.sse4a != 0)\n@@ -3024,1 +3024,1 @@\n-    if (_cpuid_info.ext_cpuid1_ecx.bits.lzcnt != 0) {\n+    if (ext_cpuid1_ecx.bits.lzcnt != 0) {\n@@ -3027,1 +3027,1 @@\n-    if (_cpuid_info.ext_cpuid1_ecx.bits.prefetchw != 0) {\n+    if (ext_cpuid1_ecx.bits.prefetchw != 0) {\n@@ -3030,1 +3030,1 @@\n-    if (_cpuid_info.sef_cpuid7_ebx.bits.clwb != 0) {\n+    if (sef_cpuid7_ebx.bits.clwb != 0) {\n@@ -3033,1 +3033,1 @@\n-    if (_cpuid_info.sef_cpuid7_edx.bits.serialize != 0)\n+    if (sef_cpuid7_edx.bits.serialize != 0)\n@@ -3039,1 +3039,1 @@\n-    if (_cpuid_info.ext_cpuid1_ecx.bits.lzcnt != 0) {\n+    if (ext_cpuid1_ecx.bits.lzcnt != 0) {\n@@ -3042,1 +3042,1 @@\n-    if (_cpuid_info.ext_cpuid1_ecx.bits.prefetchw != 0) {\n+    if (ext_cpuid1_ecx.bits.prefetchw != 0) {\n@@ -3048,1 +3048,1 @@\n-  if (_cpuid_info.sef_cpuid7_ecx.bits.pku != 0) {\n+  if (sef_cpuid7_ecx.bits.pku != 0) {\n@@ -3051,1 +3051,1 @@\n-  if (_cpuid_info.sef_cpuid7_ecx.bits.ospke != 0) {\n+  if (sef_cpuid7_ecx.bits.ospke != 0) {\n@@ -3056,1 +3056,1 @@\n-  if (_cpuid_info.sef_cpuid7_ecx.bits.cet_ss != 0) {\n+  if (sef_cpuid7_ecx.bits.cet_ss != 0) {\n@@ -3059,1 +3059,1 @@\n-  if (_cpuid_info.sef_cpuid7_edx.bits.cet_ibt != 0) {\n+  if (sef_cpuid7_edx.bits.cet_ibt != 0) {\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":71,"deletions":71,"binary":false,"changes":142,"status":"modified"},{"patch":"@@ -431,1 +431,2 @@\n-  struct CpuidInfo {\n+  class CpuidInfo {\n+  public:\n@@ -525,0 +526,25 @@\n+\n+    uint64_t feature_flags() const;\n+\n+    \/\/ Asserts\n+    void assert_is_initialized() const {\n+      assert(std_cpuid1_eax.bits.family != 0, \"VM_Version not initialized\");\n+    }\n+\n+    \/\/ Extractors\n+    uint32_t extended_cpu_family() const {\n+      uint32_t result = std_cpuid1_eax.bits.family;\n+      result += std_cpuid1_eax.bits.ext_family;\n+      return result;\n+    }\n+\n+    uint32_t extended_cpu_model() const {\n+      uint32_t result = std_cpuid1_eax.bits.model;\n+      result |= std_cpuid1_eax.bits.ext_model << 4;\n+      return result;\n+    }\n+\n+    uint32_t cpu_stepping() const {\n+      uint32_t result = std_cpuid1_eax.bits.stepping;\n+      return result;\n+    }\n@@ -532,17 +558,0 @@\n-  static uint32_t extended_cpu_family() {\n-    uint32_t result = _cpuid_info.std_cpuid1_eax.bits.family;\n-    result += _cpuid_info.std_cpuid1_eax.bits.ext_family;\n-    return result;\n-  }\n-\n-  static uint32_t extended_cpu_model() {\n-    uint32_t result = _cpuid_info.std_cpuid1_eax.bits.model;\n-    result |= _cpuid_info.std_cpuid1_eax.bits.ext_model << 4;\n-    return result;\n-  }\n-\n-  static uint32_t cpu_stepping() {\n-    uint32_t result = _cpuid_info.std_cpuid1_eax.bits.stepping;\n-    return result;\n-  }\n-\n@@ -556,1 +565,0 @@\n-  static uint64_t feature_flags();\n@@ -597,5 +605,0 @@\n-  \/\/ Asserts\n-  static void assert_is_initialized() {\n-    assert(_cpuid_info.std_cpuid1_eax.bits.family != 0, \"VM_Version not initialized\");\n-  }\n-\n@@ -617,0 +620,4 @@\n+  static void     assert_is_initialized() { _cpuid_info.assert_is_initialized(); }\n+  static uint32_t extended_cpu_family()   { return _cpuid_info.extended_cpu_family(); }\n+  static uint32_t extended_cpu_model()    { return _cpuid_info.extended_cpu_model(); }\n+  static uint32_t cpu_stepping()          { return _cpuid_info.cpu_stepping(); }\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":31,"deletions":24,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -2611,50 +2611,0 @@\n-\/\/ Map a block of memory.\n-char* os::pd_map_memory(int fd, const char* file_name, size_t file_offset,\n-                        char *addr, size_t bytes, bool read_only,\n-                        bool allow_exec) {\n-  int prot;\n-  int flags = MAP_PRIVATE;\n-\n-  if (read_only) {\n-    prot = PROT_READ;\n-    flags = MAP_SHARED;\n-  } else {\n-    prot = PROT_READ | PROT_WRITE;\n-    flags = MAP_PRIVATE;\n-  }\n-\n-  if (allow_exec) {\n-    prot |= PROT_EXEC;\n-  }\n-\n-  if (addr != nullptr) {\n-    flags |= MAP_FIXED;\n-  }\n-\n-  \/\/ Allow anonymous mappings if 'fd' is -1.\n-  if (fd == -1) {\n-    flags |= MAP_ANONYMOUS;\n-  }\n-\n-  char* mapped_address = (char*)::mmap(addr, (size_t)bytes, prot, flags,\n-                                     fd, file_offset);\n-  if (mapped_address == MAP_FAILED) {\n-    return nullptr;\n-  }\n-  return mapped_address;\n-}\n-\n-\/\/ Remap a block of memory.\n-char* os::pd_remap_memory(int fd, const char* file_name, size_t file_offset,\n-                          char *addr, size_t bytes, bool read_only,\n-                          bool allow_exec) {\n-  \/\/ same as map_memory() on this OS\n-  return os::map_memory(fd, file_name, file_offset, addr, bytes, read_only,\n-                        allow_exec);\n-}\n-\n-\/\/ Unmap a block of memory.\n-bool os::pd_unmap_memory(char* addr, size_t bytes) {\n-  return munmap(addr, bytes) == 0;\n-}\n-\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":0,"deletions":50,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2348,47 +2348,0 @@\n-\/\/ Map a block of memory.\n-char* os::pd_map_memory(int fd, const char* file_name, size_t file_offset,\n-                        char *addr, size_t bytes, bool read_only,\n-                        bool allow_exec) {\n-  int prot;\n-  int flags;\n-\n-  if (read_only) {\n-    prot = PROT_READ;\n-    flags = MAP_SHARED;\n-  } else {\n-    prot = PROT_READ | PROT_WRITE;\n-    flags = MAP_PRIVATE;\n-  }\n-\n-  if (allow_exec) {\n-    prot |= PROT_EXEC;\n-  }\n-\n-  if (addr != nullptr) {\n-    flags |= MAP_FIXED;\n-  }\n-\n-  char* mapped_address = (char*)mmap(addr, (size_t)bytes, prot, flags,\n-                                     fd, file_offset);\n-  if (mapped_address == MAP_FAILED) {\n-    return nullptr;\n-  }\n-  return mapped_address;\n-}\n-\n-\n-\/\/ Remap a block of memory.\n-char* os::pd_remap_memory(int fd, const char* file_name, size_t file_offset,\n-                          char *addr, size_t bytes, bool read_only,\n-                          bool allow_exec) {\n-  \/\/ same as map_memory() on this OS\n-  return os::map_memory(fd, file_name, file_offset, addr, bytes, read_only,\n-                        allow_exec);\n-}\n-\n-\n-\/\/ Unmap a block of memory.\n-bool os::pd_unmap_memory(char* addr, size_t bytes) {\n-  return munmap(addr, bytes) == 0;\n-}\n-\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":0,"deletions":47,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -314,0 +314,13 @@\n+size_t HugePages::thp_pagesize_fallback() {\n+    \/\/ Older kernels won't publish the THP page size. Fall back to default explicit huge page size,\n+    \/\/ since that is likely to be the THP page size as well. Don't do it if the page size is considered\n+    \/\/ too large to avoid large alignment waste. If explicit huge page size is unknown, use educated guess.\n+    if (thp_pagesize() != 0) {\n+        return thp_pagesize();\n+    }\n+    if (supports_explicit_hugepages()) {\n+        return MIN2(default_explicit_hugepage_size(), 16 * M);\n+    }\n+    return 2 * M;\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/hugepages.cpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -141,0 +141,1 @@\n+  static size_t thp_pagesize_fallback();\n","filename":"src\/hotspot\/os\/linux\/hugepages.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -88,0 +88,2 @@\n+# include <ctype.h>\n+# include <stdlib.h>\n@@ -345,0 +347,23 @@\n+void os::Linux::kernel_version(long* major, long* minor) {\n+  *major = -1;\n+  *minor = -1;\n+\n+  struct utsname buffer;\n+  int ret = uname(&buffer);\n+  if (ret != 0) {\n+    log_warning(os)(\"uname(2) failed to get kernel version: %s\", os::errno_name(ret));\n+    return;\n+  }\n+\n+  char* walker = buffer.release;\n+  long* set_v = major;\n+  while (*minor == -1 && walker != nullptr) {\n+    if (isdigit(walker[0])) {\n+      *set_v = strtol(walker, &walker, 10);\n+      set_v = minor;\n+    } else {\n+      ++walker;\n+    }\n+  }\n+}\n+\n@@ -3938,1 +3963,0 @@\n-    assert(HugePages::thp_pagesize() > 0, \"Missing OS info\");\n@@ -3940,0 +3964,5 @@\n+    if (_large_page_size == 0) {\n+        log_info(pagesize) (\"Cannot determine THP page size (kernel < 4.10 ?)\");\n+        _large_page_size = HugePages::thp_pagesize_fallback();\n+        log_info(pagesize) (\"Assuming THP page size to be: \" EXACTFMT \" (heuristics)\", EXACTFMTARGS(_large_page_size));\n+    }\n@@ -5066,45 +5095,0 @@\n-\/\/ Map a block of memory.\n-char* os::pd_map_memory(int fd, const char* file_name, size_t file_offset,\n-                        char *addr, size_t bytes, bool read_only,\n-                        bool allow_exec) {\n-  int prot;\n-  int flags = MAP_PRIVATE;\n-\n-  if (read_only) {\n-    prot = PROT_READ;\n-  } else {\n-    prot = PROT_READ | PROT_WRITE;\n-  }\n-\n-  if (allow_exec) {\n-    prot |= PROT_EXEC;\n-  }\n-\n-  if (addr != nullptr) {\n-    flags |= MAP_FIXED;\n-  }\n-\n-  char* mapped_address = (char*)mmap(addr, (size_t)bytes, prot, flags,\n-                                     fd, file_offset);\n-  if (mapped_address == MAP_FAILED) {\n-    return nullptr;\n-  }\n-  return mapped_address;\n-}\n-\n-\n-\/\/ Remap a block of memory.\n-char* os::pd_remap_memory(int fd, const char* file_name, size_t file_offset,\n-                          char *addr, size_t bytes, bool read_only,\n-                          bool allow_exec) {\n-  \/\/ same as map_memory() on this OS\n-  return os::map_memory(fd, file_name, file_offset, addr, bytes, read_only,\n-                        allow_exec);\n-}\n-\n-\n-\/\/ Unmap a block of memory.\n-bool os::pd_unmap_memory(char* addr, size_t bytes) {\n-  return munmap(addr, bytes) == 0;\n-}\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":30,"deletions":46,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -96,0 +96,2 @@\n+  static void kernel_version(long* major, long* minor);\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"runtime\/os.hpp\"\n+#include \"os_linux.hpp\"\n@@ -64,0 +64,12 @@\n+#if defined(RISCV)\n+\/\/ RISCV port was introduced in kernel 4.4.\n+\/\/ 4.4 also made membar private expedited mandatory.\n+\/\/ But RISCV actually don't support it until 6.9.\n+  long major, minor;\n+  os::Linux::kernel_version(&major, &minor);\n+  if (!(major > 6 || (major == 6 && minor >= 9))) {\n+    log_info(os)(\"Linux kernel %ld.%ld does not support MEMBARRIER PRIVATE_EXPEDITED on RISC-V.\",\n+                 major, minor);\n+    return false;\n+  }\n+#endif\n","filename":"src\/hotspot\/os\/linux\/systemMemoryBarrier_linux.cpp","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2034,0 +2034,50 @@\n+\n+\/\/ Map file into memory; uses mmap().\n+\/\/ Notes:\n+\/\/ - if caller specifies addr, MAP_FIXED is used. That means existing\n+\/\/   mappings will be replaced.\n+\/\/ - The file descriptor must be valid (to create anonymous mappings, use\n+\/\/   os::reserve_memory()).\n+\/\/ Returns address to mapped memory, nullptr on error\n+char* os::pd_map_memory(int fd, const char* unused,\n+                        size_t file_offset, char *addr, size_t bytes,\n+                        bool read_only, bool allow_exec) {\n+\n+  assert(fd != -1, \"Specify a valid file descriptor\");\n+\n+  int prot;\n+  int flags = MAP_PRIVATE;\n+\n+  if (read_only) {\n+    prot = PROT_READ;\n+  } else {\n+    prot = PROT_READ | PROT_WRITE;\n+  }\n+\n+  if (allow_exec) {\n+    prot |= PROT_EXEC;\n+  }\n+\n+  if (addr != nullptr) {\n+    flags |= MAP_FIXED;\n+  }\n+\n+  char* mapped_address = (char*)mmap(addr, (size_t)bytes, prot, flags,\n+                                     fd, file_offset);\n+  if (mapped_address == MAP_FAILED) {\n+    return nullptr;\n+  }\n+\n+  \/\/ If we did specify an address, and the mapping succeeded, it should\n+  \/\/ have returned that address since we specify MAP_FIXED\n+  assert(addr == nullptr || addr == mapped_address,\n+         \"mmap+MAP_FIXED returned \" PTR_FORMAT \", expected \" PTR_FORMAT,\n+         p2i(mapped_address), p2i(addr));\n+\n+  return mapped_address;\n+}\n+\n+\/\/ Unmap a block of memory. Uses munmap.\n+bool os::pd_unmap_memory(char* addr, size_t bytes) {\n+  return munmap(addr, bytes) == 0;\n+}\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":50,"deletions":0,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -5170,16 +5170,0 @@\n-\n-\/\/ Remap a block of memory.\n-char* os::pd_remap_memory(int fd, const char* file_name, size_t file_offset,\n-                          char *addr, size_t bytes, bool read_only,\n-                          bool allow_exec) {\n-  \/\/ This OS does not allow existing memory maps to be remapped so we\n-  \/\/ would have to unmap the memory before we remap it.\n-\n-  \/\/ Because there is a small window between unmapping memory and mapping\n-  \/\/ it in again with different protections, CDS archives are mapped RW\n-  \/\/ on windows, so this function isn't called.\n-  ShouldNotReachHere();\n-  return nullptr;\n-}\n-\n-\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -847,3 +847,12 @@\n-    for (int i = 0; i < x->length(); i++) {\n-      if (v == x->key_at(i)) {\n-        sux = x->sux_at(i);\n+    int low = 0;\n+    int high = x->length() - 1;\n+    while (low <= high) {\n+      int mid = low + ((high - low) >> 1);\n+      int key = x->key_at(mid);\n+      if (key == v) {\n+        sux = x->sux_at(mid);\n+        break;\n+      } else if (key > v) {\n+        high = mid - 1;\n+      } else {\n+        low = mid + 1;\n","filename":"src\/hotspot\/share\/c1\/c1_Canonicalizer.cpp","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1693,3 +1693,6 @@\n-  char *base = os::remap_memory(_fd, _full_path, r->file_offset(),\n-                                addr, size, false \/* !read_only *\/,\n-                                r->allow_exec());\n+  \/\/ This path should not be reached for Windows; see JDK-8222379.\n+  assert(WINDOWS_ONLY(false) NOT_WINDOWS(true), \"Don't call on Windows\");\n+  \/\/ Replace old mapping with new one that is writable.\n+  char *base = os::map_memory(_fd, _full_path, r->file_offset(),\n+                              addr, size, false \/* !read_only *\/,\n+                              r->allow_exec());\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1033,1 +1033,1 @@\n-\/\/ Search either the patch-module or exploded build entries for class.\n+\/\/ Search the module list for the class file stream based on the file name and java package\n@@ -1036,1 +1036,1 @@\n-                                                    const char* const class_name,\n+                                                    PackageEntry* pkg_entry, \/\/ Java package entry derived from the class name\n@@ -1040,4 +1040,1 @@\n-  \/\/ Find the class' defining module in the boot loader's module entry table\n-  TempNewSymbol class_name_symbol = SymbolTable::new_symbol(class_name);\n-  TempNewSymbol pkg_name = package_from_class_name(class_name_symbol);\n-  PackageEntry* pkg_entry = get_package_entry(pkg_name, ClassLoaderData::the_null_class_loader_data());\n+  \/\/ Find the defining module in the boot loader's module entry table\n@@ -1088,1 +1085,1 @@\n-InstanceKlass* ClassLoader::load_class(Symbol* name, bool search_append_only, TRAPS) {\n+InstanceKlass* ClassLoader::load_class(Symbol* name, PackageEntry* pkg_entry, bool search_append_only, TRAPS) {\n@@ -1135,1 +1132,1 @@\n-      stream = search_module_entries(THREAD, _patch_mod_entries, class_name, file_name);\n+      stream = search_module_entries(THREAD, _patch_mod_entries, pkg_entry, file_name);\n@@ -1147,1 +1144,1 @@\n-      stream = search_module_entries(THREAD, _exploded_entries, class_name, file_name);\n+      stream = search_module_entries(THREAD, _exploded_entries, pkg_entry, file_name);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -295,1 +295,1 @@\n-  \/\/ Attempt load of individual class from either the patched or exploded modules build lists\n+  \/\/ Search the module list for the class file stream based on the file name and java package\n@@ -298,1 +298,1 @@\n-                                                const char* const class_name,\n+                                                PackageEntry* pkg_entry, \/\/ Java package entry derived from the class name\n@@ -302,1 +302,1 @@\n-  static InstanceKlass* load_class(Symbol* class_name, bool search_append_only, TRAPS);\n+  static InstanceKlass* load_class(Symbol* class_name, PackageEntry* pkg_entry, bool search_append_only, TRAPS);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -484,1 +484,1 @@\n-  JFR_ONLY(set_trace_id(0));\/\/ re-init at runtime\n+  JFR_ONLY(set_trace_id(0);) \/\/ re-init at runtime\n","filename":"src\/hotspot\/share\/classfile\/moduleEntry.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,1 +255,1 @@\n-  JFR_ONLY(set_trace_id(0)); \/\/ re-init at runtime\n+  JFR_ONLY(set_trace_id(0);) \/\/ re-init at runtime\n","filename":"src\/hotspot\/share\/classfile\/packageEntry.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1279,1 +1279,1 @@\n-      k = ClassLoader::load_class(class_name, search_only_bootloader_append, CHECK_NULL);\n+      k = ClassLoader::load_class(class_name, pkg_entry, search_only_bootloader_append, CHECK_NULL);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1733,0 +1733,4 @@\n+  julong total_used = 0;\n+  julong total_max_used = 0;\n+  julong total_free = 0;\n+  julong total_size = 0;\n@@ -1741,0 +1745,8 @@\n+    size_t size = total\/K;\n+    size_t used = (total - heap->unallocated_capacity())\/K;\n+    size_t max_used = heap->max_allocated_capacity()\/K;\n+    size_t free = heap->unallocated_capacity()\/K;\n+    total_size += size;\n+    total_used += used;\n+    total_max_used += max_used;\n+    total_free += free;\n@@ -1743,2 +1755,1 @@\n-                 total\/K, (total - heap->unallocated_capacity())\/K,\n-                 heap->max_allocated_capacity()\/K, heap->unallocated_capacity()\/K);\n+                 size, used, max_used, free);\n@@ -1757,4 +1768,11 @@\n-    st->print_cr(\" total_blobs=\" UINT32_FORMAT \" nmethods=\" UINT32_FORMAT\n-                       \" adapters=\" UINT32_FORMAT,\n-                       blob_count(), nmethod_count(), adapter_count());\n-    st->print_cr(\" compilation: %s\", CompileBroker::should_compile_new_jobs() ?\n+    if (SegmentedCodeCache) {\n+      st->print(\"CodeCache:\");\n+      st->print_cr(\" size=\" JULONG_FORMAT \"Kb, used=\" JULONG_FORMAT\n+                   \"Kb, max_used=\" JULONG_FORMAT \"Kb, free=\" JULONG_FORMAT \"Kb\",\n+                   total_size, total_used, total_max_used, total_free);\n+    }\n+    st->print_cr(\" total_blobs=\" UINT32_FORMAT \", nmethods=\" UINT32_FORMAT\n+                 \", adapters=\" UINT32_FORMAT \", full_count=\" UINT32_FORMAT,\n+                 blob_count(), nmethod_count(), adapter_count(), full_count);\n+    st->print_cr(\"Compilation: %s, stopped_count=%d, restarted_count=%d\",\n+                 CompileBroker::should_compile_new_jobs() ?\n@@ -1763,2 +1781,1 @@\n-                 \"disabled (not enough contiguous free space left)\");\n-    st->print_cr(\"              stopped_count=%d, restarted_count=%d\",\n+                 \"disabled (not enough contiguous free space left)\",\n@@ -1767,1 +1784,0 @@\n-    st->print_cr(\" full_count=%d\", full_count);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":25,"deletions":9,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -483,1 +483,0 @@\n-  _init_times(),\n@@ -488,1 +487,0 @@\n-  _total_cleanup_time(0.0),\n@@ -1552,3 +1550,1 @@\n-  double recent_cleanup_time = (os::elapsedTime() - start);\n-  _total_cleanup_time += recent_cleanup_time;\n-  _cleanup_times.add(recent_cleanup_time);\n+  _cleanup_times.add((os::elapsedTime() - start) * 1000.0);\n@@ -2120,1 +2116,0 @@\n-  print_ms_time_info(\"  \", \"init marks\", _init_times);\n@@ -2129,1 +2124,1 @@\n-            _total_cleanup_time, (_cleanup_times.num() > 0 ? _total_cleanup_time * 1000.0 \/ (double)_cleanup_times.num() : 0.0));\n+            _cleanup_times.sum() \/ 1000.0, _cleanup_times.avg());\n@@ -2131,1 +2126,1 @@\n-            (_init_times.sum() + _remark_times.sum() + _cleanup_times.sum())\/1000.0);\n+            (_remark_times.sum() + _cleanup_times.sum())\/1000.0);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -438,1 +438,0 @@\n-  NumberSeq _init_times;\n@@ -443,1 +442,0 @@\n-  double    _total_cleanup_time;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-  JFR_ONLY(register_jfr_type_constants());\n+  JFR_ONLY(register_jfr_type_constants();)\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Trace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -122,6 +122,0 @@\n-  \/\/ For use by VM operations\n-  enum CollectionType {\n-    Scavenge,\n-    MarkSweep\n-  };\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -204,3 +204,0 @@\n-  \/\/ DefNewGeneration cannot currently expand except at\n-  \/\/ a GC.\n-  virtual bool is_maximal_no_gc() const { return true; }\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -108,6 +108,0 @@\n-  \/\/ Returns true if this generation cannot be expanded further\n-  \/\/ without a GC. Override as appropriate.\n-  virtual bool is_maximal_no_gc() const {\n-    return _virtual_space.uncommitted_size() == 0;\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-  _rem_set = create_rem_set(heap_rs.region());\n+  _rem_set = new CardTableRS(heap_rs.region());\n@@ -209,5 +209,0 @@\n-\n-CardTableRS* SerialHeap::create_rem_set(const MemRegion& reserved_region) {\n-  return new CardTableRS(reserved_region);\n-}\n-\n@@ -524,1 +519,1 @@\n-    if (run_verification && VerifyGCLevel <= 0 && VerifyBeforeGC) {\n+    if (run_verification && VerifyBeforeGC) {\n@@ -536,1 +531,1 @@\n-                       run_verification && VerifyGCLevel <= 0,\n+                       run_verification,\n@@ -574,2 +569,1 @@\n-    if (!prepared_for_verification && run_verification &&\n-        VerifyGCLevel <= 1 && VerifyBeforeGC) {\n+    if (!prepared_for_verification && run_verification && VerifyBeforeGC) {\n@@ -601,1 +595,1 @@\n-                       run_verification && VerifyGCLevel <= 1,\n+                       run_verification,\n@@ -954,11 +948,0 @@\n-void SerialHeap::generation_iterate(GenClosure* cl,\n-                                    bool old_to_young) {\n-  if (old_to_young) {\n-    cl->do_generation(_old_gen);\n-    cl->do_generation(_young_gen);\n-  } else {\n-    cl->do_generation(_young_gen);\n-    cl->do_generation(_old_gen);\n-  }\n-}\n-\n@@ -966,1 +949,2 @@\n-  return _young_gen->is_maximal_no_gc() && _old_gen->is_maximal_no_gc();\n+  \/\/ We don't expand young-gen except at a GC.\n+  return _old_gen->is_maximal_no_gc();\n@@ -1061,8 +1045,0 @@\n-class GenGCSaveTopsBeforeGCClosure: public SerialHeap::GenClosure {\n- private:\n- public:\n-  void do_generation(Generation* gen) {\n-    gen->record_spaces_top();\n-  }\n-};\n-\n@@ -1071,2 +1047,2 @@\n-    GenGCSaveTopsBeforeGCClosure blk;\n-    generation_iterate(&blk, false);  \/\/ not old-to-young.\n+    _young_gen->record_spaces_top();\n+    _old_gen->record_spaces_top();\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":9,"deletions":33,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -144,1 +144,0 @@\n-  virtual CardTableRS* create_rem_set(const MemRegion& reserved_region);\n@@ -252,4 +251,0 @@\n-  \/\/ Apply \"cl.do_generation\" to all generations in the heap\n-  \/\/ If \"old_to_young\" determines the order.\n-  void generation_iterate(GenClosure* cl, bool old_to_young);\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -101,0 +101,6 @@\n+  \/\/ Returns true if this generation cannot be expanded further\n+  \/\/ without a GC.\n+  bool is_maximal_no_gc() const {\n+    return _virtual_space.uncommitted_size() == 0;\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,0 +35,7 @@\n+  nonstatic_field(Generation,                        _reserved,              MemRegion)                     \\\n+  nonstatic_field(Generation,                        _virtual_space,         VirtualSpace)                  \\\n+  nonstatic_field(Generation,                        _stat_record,           Generation::StatRecord)        \\\n+                                                                                                            \\\n+  nonstatic_field(Generation::StatRecord,            invocations,            int)                           \\\n+  nonstatic_field(Generation::StatRecord,            accumulated_time,       elapsedTimer)                  \\\n+                                                                                                            \\\n@@ -64,0 +71,2 @@\n+  declare_toplevel_type(Generation)                                           \\\n+  declare_toplevel_type(Generation::StatRecord)                               \\\n@@ -76,1 +85,3 @@\n-                                  declare_constant_with_value)\n+                                  declare_constant_with_value)                \\\n+  declare_constant(Generation::LogOfGenGrain)                                 \\\n+  declare_constant(Generation::GenGrain)\n","filename":"src\/hotspot\/share\/gc\/serial\/vmStructs_serial.hpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -620,4 +620,0 @@\n-  product(int, VerifyGCLevel,     0, DIAGNOSTIC,                            \\\n-          \"Generation level at which to start +VerifyBefore\/AfterGC\")       \\\n-          range(0, 1)                                                       \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/shared\/gc_globals.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -411,0 +412,1 @@\n+    mem_zap_end_padding(mem);\n@@ -416,0 +418,18 @@\n+#ifndef PRODUCT\n+void ObjArrayAllocator::mem_zap_end_padding(HeapWord* mem) const {\n+  const size_t length_in_bytes = static_cast<size_t>(_length) << ArrayKlass::cast(_klass)->log2_element_size();\n+  const BasicType element_type = ArrayKlass::cast(_klass)->element_type();\n+  const size_t base_offset_in_bytes = arrayOopDesc::base_offset_in_bytes(element_type);\n+  const size_t size_in_bytes = _word_size * BytesPerWord;\n+\n+  const address obj_end = reinterpret_cast<address>(mem) + size_in_bytes;\n+  const address base = reinterpret_cast<address>(mem) + base_offset_in_bytes;\n+  const address elements_end = base + length_in_bytes;\n+  assert(elements_end <= obj_end, \"payload must fit in object\");\n+  if (elements_end < obj_end) {\n+    const size_t padding_in_bytes = obj_end - elements_end;\n+    Copy::fill_to_bytes(elements_end, padding_in_bytes, heapPaddingByteVal);\n+  }\n+}\n+#endif\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,0 +101,2 @@\n+  void mem_zap_end_padding(HeapWord* mem) const PRODUCT_RETURN;\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -171,20 +171,0 @@\n-size_t ContiguousSpace::block_size(const HeapWord* p) const {\n-  assert(MemRegion(bottom(), end()).contains(p),\n-         \"p (\" PTR_FORMAT \") not in space [\" PTR_FORMAT \", \" PTR_FORMAT \")\",\n-         p2i(p), p2i(bottom()), p2i(end()));\n-  HeapWord* current_top = top();\n-  assert(p <= current_top,\n-         \"p > current top - p: \" PTR_FORMAT \", current top: \" PTR_FORMAT,\n-         p2i(p), p2i(current_top));\n-  assert(p == current_top || oopDesc::is_oop(cast_to_oop(p)),\n-         \"p (\" PTR_FORMAT \") is not a block start - \"\n-         \"current_top: \" PTR_FORMAT \", is_oop: %s\",\n-         p2i(p), p2i(current_top), BOOL_TO_STR(oopDesc::is_oop(cast_to_oop(p))));\n-  if (p < current_top) {\n-    return cast_to_oop(p)->size();\n-  } else {\n-    assert(p == current_top, \"just checking\");\n-    return pointer_delta(end(), (HeapWord*) p);\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -136,5 +136,0 @@\n-  \/\/ Requires \"addr\" to be the start of a chunk, and returns its size.\n-  \/\/ \"addr + size\" is required to be the start of a new chunk, or the end\n-  \/\/ of the active area of the heap.\n-  virtual size_t block_size(const HeapWord* addr) const = 0;\n-\n@@ -261,1 +256,0 @@\n-  size_t block_size(const HeapWord* p) const override;\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -104,7 +104,0 @@\n-  nonstatic_field(Generation,                  _reserved,                                     MemRegion)                             \\\n-  nonstatic_field(Generation,                  _virtual_space,                                VirtualSpace)                          \\\n-  nonstatic_field(Generation,                  _stat_record,                                  Generation::StatRecord)                \\\n-                                                                                                                                     \\\n-  nonstatic_field(Generation::StatRecord,      invocations,                                   int)                                   \\\n-  nonstatic_field(Generation::StatRecord,      accumulated_time,                              elapsedTimer)                          \\\n-                                                                                                                                     \\\n@@ -145,1 +138,0 @@\n-  declare_toplevel_type(Generation)                                       \\\n@@ -158,1 +150,0 @@\n-  declare_toplevel_type(Generation::StatRecord)                           \\\n@@ -215,3 +206,0 @@\n-                                                                            \\\n-  declare_constant(Generation::LogOfGenGrain)                               \\\n-  declare_constant(Generation::GenGrain)                                    \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -726,1 +726,1 @@\n-  JFR_ONLY(ShenandoahJFRSupport::register_jfr_type_serializers());\n+  JFR_ONLY(ShenandoahJFRSupport::register_jfr_type_serializers();)\n@@ -1491,1 +1491,6 @@\n-    ShenandoahHeapLocker locker(lock());\n+\n+    \/\/ If we are dealing with mutator allocation, then we may need to block for safepoint.\n+    \/\/ We cannot block for safepoint for GC allocations, because there is a high chance\n+    \/\/ we are already running at safepoint or from stack watermark machinery, and we cannot\n+    \/\/ block again.\n+    ShenandoahHeapLocker locker(lock(), req.is_mutator_alloc());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"runtime\/interfaceSupport.inline.hpp\"\n@@ -34,0 +35,37 @@\n+\/\/ These are inline variants of Thread::SpinAcquire with optional blocking in VM.\n+\n+class ShenandoahNoBlockOp : public StackObj {\n+public:\n+  ShenandoahNoBlockOp(JavaThread* java_thread) {\n+    assert(java_thread == nullptr, \"Should not pass anything\");\n+  }\n+};\n+\n+void ShenandoahLock::contended_lock(bool allow_block_for_safepoint) {\n+  Thread* thread = Thread::current();\n+  if (allow_block_for_safepoint && thread->is_Java_thread()) {\n+    contended_lock_internal<ThreadBlockInVM>(JavaThread::cast(thread));\n+  } else {\n+    contended_lock_internal<ShenandoahNoBlockOp>(nullptr);\n+  }\n+}\n+\n+template<typename BlockOp>\n+void ShenandoahLock::contended_lock_internal(JavaThread* java_thread) {\n+  int ctr = 0;\n+  int yields = 0;\n+  while (Atomic::cmpxchg(&_state, unlocked, locked) != unlocked) {\n+    if ((++ctr & 0xFFF) == 0) {\n+      BlockOp block(java_thread);\n+      if (yields > 5) {\n+        os::naked_short_sleep(1);\n+      } else {\n+        os::naked_yield();\n+        yields++;\n+      }\n+    } else {\n+      SpinPause();\n+    }\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahLock.cpp","additions":38,"deletions":0,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  volatile int _state;\n+  volatile LockState _state;\n@@ -43,0 +43,3 @@\n+  template<typename BlockOp>\n+  void contended_lock_internal(JavaThread* java_thread);\n+\n@@ -46,10 +49,11 @@\n-  void lock() {\n-#ifdef ASSERT\n-    assert(_owner != Thread::current(), \"reentrant locking attempt, would deadlock\");\n-#endif\n-    Thread::SpinAcquire(&_state, \"Shenandoah Heap Lock\");\n-#ifdef ASSERT\n-    assert(_state == locked, \"must be locked\");\n-    assert(_owner == nullptr, \"must not be owned\");\n-    _owner = Thread::current();\n-#endif\n+  void lock(bool allow_block_for_safepoint) {\n+    assert(Atomic::load(&_owner) != Thread::current(), \"reentrant locking attempt, would deadlock\");\n+\n+    \/\/ Try to lock fast, or dive into contended lock handling.\n+    if (Atomic::cmpxchg(&_state, unlocked, locked) != unlocked) {\n+      contended_lock(allow_block_for_safepoint);\n+    }\n+\n+    assert(Atomic::load(&_state) == locked, \"must be locked\");\n+    assert(Atomic::load(&_owner) == nullptr, \"must not be owned\");\n+    DEBUG_ONLY(Atomic::store(&_owner, Thread::current());)\n@@ -59,5 +63,4 @@\n-#ifdef ASSERT\n-    assert (_owner == Thread::current(), \"sanity\");\n-    _owner = nullptr;\n-#endif\n-    Thread::SpinRelease(&_state);\n+    assert(Atomic::load(&_owner) == Thread::current(), \"sanity\");\n+    DEBUG_ONLY(Atomic::store(&_owner, (Thread*)nullptr);)\n+    OrderAccess::fence();\n+    Atomic::store(&_state, unlocked);\n@@ -66,0 +69,2 @@\n+  void contended_lock(bool allow_block_for_safepoint);\n+\n@@ -80,1 +85,1 @@\n-  ShenandoahLocker(ShenandoahLock* lock) : _lock(lock) {\n+  ShenandoahLocker(ShenandoahLock* lock, bool allow_block_for_safepoint = false) : _lock(lock) {\n@@ -82,1 +87,1 @@\n-      _lock->lock();\n+      _lock->lock(allow_block_for_safepoint);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahLock.hpp","additions":23,"deletions":18,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-  JFR_ONLY(register_jfr_type_serializers());\n+  JFR_ONLY(register_jfr_type_serializers();)\n","filename":"src\/hotspot\/share\/gc\/x\/xTracer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-void ZBarrierSet::clone_obj_array(objArrayOop src_obj, objArrayOop dst_obj, size_t size) {\n+void ZBarrierSet::clone_obj_array(objArrayOop src_obj, objArrayOop dst_obj) {\n@@ -158,0 +158,1 @@\n+  const int length = src_obj->length();\n@@ -159,1 +160,1 @@\n-  for (const zpointer* const end = cast_from_oop<const zpointer*>(src_obj) + size; src < end; src++, dst++) {\n+  for (const volatile zpointer* const end = src + length; src < end; src++, dst++) {\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrierSet.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  static void clone_obj_array(objArrayOop src, objArrayOop dst, size_t size);\n+  static void clone_obj_array(objArrayOop src, objArrayOop dst);\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrierSet.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -442,1 +442,1 @@\n-    clone_obj_array(objArrayOop(src), objArrayOop(dst), size);\n+    clone_obj_array(objArrayOop(src), objArrayOop(dst));\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrierSet.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,0 +135,2 @@\n+  mem_zap_end_padding(mem);\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zObjArrayAllocator.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -122,1 +122,1 @@\n-  JFR_ONLY(register_jfr_type_serializers());\n+  JFR_ONLY(register_jfr_type_serializers();)\n","filename":"src\/hotspot\/share\/gc\/z\/zTracer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -406,0 +406,9 @@\n+JVM_ENTRY_NO_ENV(jlong, jfr_host_total_swap_memory(JNIEnv* env, jclass jvm))\n+#ifdef LINUX\n+  \/\/ We want the host swap memory, not the container value.\n+  return os::Linux::host_swap();\n+#else\n+  return os::total_swap_space();\n+#endif\n+JVM_END\n+\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -160,0 +160,2 @@\n+jlong JNICALL jfr_host_total_swap_memory(JNIEnv* env, jclass jvm);\n+\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,0 +100,1 @@\n+      (char*)\"hostTotalSwapMemory\", (char*)\"()J\", (void*) jfr_host_total_swap_memory,\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethodRegistration.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -226,3 +226,0 @@\n-  ~StackTraceBlobInstaller() {\n-    JfrStackTraceRepository::clear_leak_profiler();\n-  }\n@@ -283,5 +280,8 @@\n-  \/\/ can safepoint here\n-  ThreadInVMfromNative transition(thread);\n-  MutexLocker lock(ClassLoaderDataGraph_lock);\n-  \/\/ the lock is needed to ensure the unload lists do not grow in the middle of inspection.\n-  install_stack_traces(sampler);\n+  {\n+    \/\/ can safepoint here\n+    ThreadInVMfromNative transition(thread);\n+    MutexLocker lock(ClassLoaderDataGraph_lock);\n+    \/\/ the lock is needed to ensure the unload lists do not grow in the middle of inspection.\n+    install_stack_traces(sampler);\n+  }\n+  JfrStackTraceRepository::clear_leak_profiler();\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/objectSampleCheckpoint.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -576,3 +576,1 @@\n-  if (_stack_trace_repository.is_modified()) {\n-    write_stacktrace(_stack_trace_repository, _chunkwriter, false);\n-  }\n+  write_stacktrace(_stack_trace_repository, _chunkwriter, true);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrRecorderService.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -101,0 +101,1 @@\n+  MutexLocker lock(JfrStacktrace_lock, Mutex::_no_safepoint_check_flag);\n@@ -104,2 +105,0 @@\n-  MutexLocker lock(JfrStacktrace_lock, Mutex::_no_safepoint_check_flag);\n-  assert(_entries > 0, \"invariant\");\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTraceRepository.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-static bool add_to_unloaded_klass_set(traceid klass_id, bool current_epoch) {\n+static void add_to_unloaded_klass_set(traceid klass_id) {\n@@ -106,1 +106,1 @@\n-  GrowableArray<traceid>* const unload_set = current_epoch ? get_unload_set() : get_unload_set_previous_epoch();\n+  GrowableArray<traceid>* const unload_set = get_unload_set();\n@@ -110,1 +110,0 @@\n-  return true;\n@@ -132,1 +131,2 @@\n-  return USED_ANY_EPOCH(k) && add_to_unloaded_klass_set(JfrTraceId::load_raw(k), USED_THIS_EPOCH(k));\n+  add_to_unloaded_klass_set(JfrTraceId::load_raw(k));\n+  return USED_THIS_EPOCH(k);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrKlassUnloading.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1007,1 +1007,1 @@\n-    returned as <code>NULL<\/code>.\n+    returned as <code>nullptr<\/code>.\n@@ -1101,1 +1101,1 @@\n-            If <code>size<\/code> is zero, <code>NULL<\/code> is returned.\n+            If <code>size<\/code> is zero, <code>nullptr<\/code> is returned.\n@@ -1517,1 +1517,1 @@\n-        The function may return <code>NULL<\/code> in the start phase if the\n+        The function may return <code>nullptr<\/code> in the start phase if the\n@@ -1523,1 +1523,1 @@\n-        as an argument will accept <code>NULL<\/code> to mean\n+        as an argument will accept <code>nullptr<\/code> to mean\n@@ -1533,1 +1533,1 @@\n-             On return, points to the current thread, or <code>NULL<\/code>.\n+             On return, points to the current thread, or <code>nullptr<\/code>.\n@@ -1682,1 +1682,1 @@\n-          Both <paramlink id=\"except_list\"><\/paramlink> was <code>NULL<\/code>\n+          Both <paramlink id=\"except_list\"><\/paramlink> was <code>nullptr<\/code>\n@@ -1779,1 +1779,1 @@\n-          Both <paramlink id=\"except_list\"><\/paramlink> was <code>NULL<\/code>\n+          Both <paramlink id=\"except_list\"><\/paramlink> was <code>nullptr<\/code>\n@@ -1901,1 +1901,1 @@\n-          Both <paramlink id=\"except_list\"><\/paramlink> was <code>NULL<\/code>\n+          Both <paramlink id=\"except_list\"><\/paramlink> was <code>nullptr<\/code>\n@@ -1996,1 +1996,1 @@\n-            <code>NULL<\/code> if the thread has terminated.\n+            <code>nullptr<\/code> if the thread has terminated.\n@@ -2142,1 +2142,1 @@\n-              NULL if there is none.\n+              nullptr if there is none.\n@@ -2262,1 +2262,1 @@\n-            <nullok><code>NULL<\/code> is passed to the start function<\/nullok>\n+            <nullok><code>nullptr<\/code> is passed to the start function<\/nullok>\n@@ -2295,1 +2295,1 @@\n-        This value is <code>NULL<\/code> unless set with this function.\n+        This value is <code>nullptr<\/code> unless set with this function.\n@@ -2319,1 +2319,1 @@\n-            <nullok>value is set to <code>NULL<\/code><\/nullok>\n+            <nullok>value is set to <code>nullptr<\/code><\/nullok>\n@@ -2353,1 +2353,1 @@\n-            pointer is <code>NULL<\/code>.\n+            pointer is <code>nullptr<\/code>.\n@@ -2592,1 +2592,1 @@\n-                       &amp;methodName, NULL, NULL);\n+                       &amp;methodName, nullptr, nullptr);\n@@ -3149,1 +3149,1 @@\n-            An object or <code>NULL<\/code>.\n+            An object or <code>nullptr<\/code>.\n@@ -4277,1 +4277,1 @@\n-            Otherwise <code>NULL<\/code>.\n+            Otherwise <code>nullptr<\/code>.\n@@ -4322,1 +4322,1 @@\n-            <code>NULL<\/code> if the referrer in not an object (that is,\n+            <code>nullptr<\/code> if the referrer in not an object (that is,\n@@ -4624,1 +4624,1 @@\n-        Whether a callback is provided or is <code>NULL<\/code> only determines\n+        Whether a callback is provided or is <code>nullptr<\/code> only determines\n@@ -4769,1 +4769,1 @@\n-            <nullok><code>NULL<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n@@ -4815,1 +4815,1 @@\n-        Whether a callback is provided or is <code>NULL<\/code> only determines\n+        Whether a callback is provided or is <code>nullptr<\/code> only determines\n@@ -4945,1 +4945,1 @@\n-            <nullok><code>NULL<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n@@ -5593,1 +5593,1 @@\n-            <nullok><code>NULL<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n@@ -5637,1 +5637,1 @@\n-        specified as <code>NULL<\/code> then this function returns after\n+        specified as <code>nullptr<\/code> then this function returns after\n@@ -5691,1 +5691,1 @@\n-            <nullok><code>NULL<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n@@ -5750,1 +5750,1 @@\n-            <nullok><code>NULL<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n@@ -5818,1 +5818,1 @@\n-            <nullok><code>NULL<\/code> is passed as the user supplied data<\/nullok>\n+            <nullok><code>nullptr<\/code> is passed as the user supplied data<\/nullok>\n@@ -6770,1 +6770,1 @@\n-        otherwise <code>NULL<\/code> is returned.\n+        otherwise <code>nullptr<\/code> is returned.\n@@ -6784,1 +6784,1 @@\n-            If the <code>class_loader<\/code> is not <code>NULL<\/code>\n+            If the <code>class_loader<\/code> is not <code>nullptr<\/code>\n@@ -6803,1 +6803,1 @@\n-            or points to <code>NULL<\/code>.\n+            or points to <code>nullptr<\/code>.\n@@ -6809,1 +6809,1 @@\n-          If class loader is not <code>NULL<\/code> and is not a class loader object.\n+          If class loader is not <code>nullptr<\/code> and is not a class loader object.\n@@ -7264,1 +7264,1 @@\n-            on return, points to <code>NULL<\/code>.\n+            on return, points to <code>nullptr<\/code>.\n@@ -7794,1 +7794,1 @@\n-              points to <code>NULL<\/code>.\n+              points to <code>nullptr<\/code>.\n@@ -8117,1 +8117,1 @@\n-          One of <code>class_bytes<\/code> is <code>NULL<\/code>.\n+          One of <code>class_bytes<\/code> is <code>nullptr<\/code>.\n@@ -8252,1 +8252,1 @@\n-              The thread owning this monitor, or <code>NULL<\/code> if unused\n+              The thread owning this monitor, or <code>nullptr<\/code> if unused\n@@ -8414,1 +8414,1 @@\n-            on return, points to <code>NULL<\/code>.\n+            on return, points to <code>nullptr<\/code>.\n@@ -8607,1 +8607,1 @@\n-            on return, points to <code>NULL<\/code>.\n+            on return, points to <code>nullptr<\/code>.\n@@ -8905,1 +8905,1 @@\n-            The value of this field will be <code>NULL<\/code> for any local\n+            The value of this field will be <code>nullptr<\/code> for any local\n@@ -9243,1 +9243,1 @@\n-         <code>NULL<\/code> is the same as calling this function with\n+         <code>nullptr<\/code> is the same as calling this function with\n@@ -9663,1 +9663,1 @@\n-        When an entry is <code>NULL<\/code> or when the event is beyond\n+        When an entry is <code>nullptr<\/code> or when the event is beyond\n@@ -9711,1 +9711,1 @@\n-        If <code>event_thread<\/code> is <code>NULL<\/code>,\n+        If <code>event_thread<\/code> is <code>nullptr<\/code>,\n@@ -9776,1 +9776,1 @@\n-          <paramlink id=\"event_thread\"\/> is non-<code>NULL<\/code> and is not a valid thread.\n+          <paramlink id=\"event_thread\"\/> is non-<code>nullptr<\/code> and is not a valid thread.\n@@ -9779,1 +9779,1 @@\n-          <paramlink id=\"event_thread\"\/> is non-<code>NULL<\/code> and is not alive\n+          <paramlink id=\"event_thread\"\/> is non-<code>nullptr<\/code> and is not alive\n@@ -10000,1 +10000,1 @@\n-              Is a <code>NULL<\/code> argument permitted? Applies only to pointer and object types.\n+              Is a <code>nullptr<\/code> argument permitted? Applies only to pointer and object types.\n@@ -10228,1 +10228,1 @@\n-          enables the event. Or, if the callback is <code>NULL<\/code>, disables\n+          enables the event. Or, if the callback is <code>nullptr<\/code>, disables\n@@ -10252,1 +10252,1 @@\n-              If <code>callback<\/code> is non-<code>NULL<\/code>,\n+              If <code>callback<\/code> is non-<code>nullptr<\/code>,\n@@ -11046,1 +11046,1 @@\n-  GetThreadCpuTime(env, NULL, nanos_ptr)\n+  GetThreadCpuTime(env, nullptr, nanos_ptr)\n@@ -11639,1 +11639,1 @@\n-        This value is <code>NULL<\/code> unless set with this function.\n+        This value is <code>nullptr<\/code> unless set with this function.\n@@ -11657,1 +11657,1 @@\n-            <nullok>value is set to <code>NULL<\/code><\/nullok>\n+            <nullok>value is set to <code>nullptr<\/code><\/nullok>\n@@ -11685,1 +11685,1 @@\n-            pointer is <code>NULL<\/code>.\n+            pointer is <code>nullptr<\/code>.\n@@ -11951,1 +11951,1 @@\n-      Pointer is unexpectedly <code>NULL<\/code>.\n+      Pointer is unexpectedly <code>nullptr<\/code>.\n@@ -12458,1 +12458,1 @@\n-            instance field; <code>NULL<\/code> otherwise\n+            instance field; <code>nullptr<\/code> otherwise\n@@ -12528,1 +12528,1 @@\n-            instance field; <code>NULL<\/code> otherwise\n+            instance field; <code>nullptr<\/code> otherwise\n@@ -12762,1 +12762,1 @@\n-            Will be <code>NULL<\/code> if sent during the primordial\n+            Will be <code>nullptr<\/code> if sent during the primordial\n@@ -12879,1 +12879,1 @@\n-            Class that will catch the exception, or <code>NULL<\/code> if no known catch\n+            Class that will catch the exception, or <code>nullptr<\/code> if no known catch\n@@ -12885,1 +12885,1 @@\n-            Method that will catch the exception, or <code>NULL<\/code> if no known catch\n+            Method that will catch the exception, or <code>nullptr<\/code> if no known catch\n@@ -12917,1 +12917,1 @@\n-      to <code>NULL<\/code>.\n+      to <code>nullptr<\/code>.\n@@ -13350,1 +13350,1 @@\n-    <code>class_being_redefined<\/code> is non <code>NULL<\/code> and so\n+    <code>class_being_redefined<\/code> is non <code>nullptr<\/code> and so\n@@ -13397,1 +13397,1 @@\n-          <code>NULL<\/code> if sent by class load.\n+          <code>nullptr<\/code> if sent by class load.\n@@ -13404,1 +13404,1 @@\n-            <code>NULL<\/code> if the bootstrap class loader.\n+            <code>nullptr<\/code> if the bootstrap class loader.\n@@ -13413,2 +13413,2 @@\n-            Note: if the class is defined with a <code>NULL<\/code> name or\n-            without a name specified, <code>name<\/code> will be <code>NULL<\/code>.\n+            Note: if the class is defined with a <code>nullptr<\/code> name or\n+            without a name specified, <code>name<\/code> will be <code>nullptr<\/code>.\n@@ -13632,1 +13632,1 @@\n-          <code>NULL<\/code> if mapping information cannot be supplied.\n+          <code>nullptr<\/code> if mapping information cannot be supplied.\n@@ -14695,1 +14695,1 @@\n-    Allow NULL as RunAgentThread arg.\n+    Allow nullptr as RunAgentThread arg.\n@@ -14705,1 +14705,1 @@\n-    Change GetFieldName to allow NULLs like GetMethodName.\n+    Change GetFieldName to allow nullptr like GetMethodName.\n@@ -14814,1 +14814,1 @@\n-      <code>GetClassLoader<\/code> return NULL for the bootstrap class loader.\n+      <code>GetClassLoader<\/code> return nullptr for the bootstrap class loader.\n@@ -14824,1 +14824,1 @@\n-      Zero length allocations return NULL.\n+      Zero length allocations return nullptr.\n@@ -14846,1 +14846,1 @@\n-      NULL thread parameter on most functions is current\n+      nullptr thread parameter on most functions is current\n@@ -14883,1 +14883,1 @@\n-      to be set to NULL.\n+      to be set to nullptr.\n@@ -14923,1 +14923,1 @@\n-      Allow thread and environment local storage to be set to NULL.\n+      Allow thread and environment local storage to be set to nullptr.\n@@ -14955,1 +14955,1 @@\n-      Allow NULL (means bootstrap loader) for GetClassloaderClasses.\n+      Allow nullptr (means bootstrap loader) for GetClassloaderClasses.\n@@ -15054,1 +15054,1 @@\n-      Allow NULL user_data in heap iterators.\n+      Allow nullptr user_data in heap iterators.\n@@ -15202,1 +15202,1 @@\n-      Clarify that name in CFLH can be NULL.\n+      Clarify that name in CFLH can be nullptr.\n@@ -15215,1 +15215,1 @@\n-      disallow NULL for this parameter.\n+      disallow nullptr for this parameter.\n@@ -15410,1 +15410,1 @@\n-      The function may return NULL in the start phase if the\n+      The function may return nullptr in the start phase if the\n","filename":"src\/hotspot\/share\/prims\/jvmti.xml","additions":76,"deletions":76,"binary":false,"changes":152,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -424,1 +424,1 @@\n-        <xsl:value-of select=\"@const\"\/>, NULL)<\/code>\n+        <xsl:value-of select=\"@const\"\/>, nullptr)<\/code>\n@@ -1589,1 +1589,1 @@\n-  <code>NULL<\/code>\n+  <code>nullptr<\/code>\n","filename":"src\/hotspot\/share\/prims\/jvmti.xsl","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -142,1 +142,1 @@\n-  <xsl:text>  NULL\n+  <xsl:text>  nullptr\n@@ -288,1 +288,1 @@\n-      NULL<\/xsl:text>\n+      nullptr<\/xsl:text>\n@@ -321,1 +321,1 @@\n-      <xsl:text>  NULL<\/xsl:text>\n+      <xsl:text>  nullptr<\/xsl:text>\n@@ -408,1 +408,1 @@\n-      <xsl:text>if (this_thread == NULL || !this_thread->is_Java_thread()) {<\/xsl:text>\n+      <xsl:text>if (this_thread == nullptr || !this_thread->is_Java_thread()) {<\/xsl:text>\n@@ -413,1 +413,1 @@\n-\t  <xsl:text>if (this_thread == NULL || (!this_thread->is_Java_thread() &amp;&amp; !this_thread->is_Named_thread())) {<\/xsl:text>\n+\t  <xsl:text>if (this_thread == nullptr || (!this_thread->is_Java_thread() &amp;&amp; !this_thread->is_Named_thread())) {<\/xsl:text>\n@@ -576,1 +576,1 @@\n-\t  <xsl:text>  Thread* this_thread = NULL;\n+\t  <xsl:text>  Thread* this_thread = nullptr;\n@@ -582,1 +582,1 @@\n-    transition = ((this_thread != NULL) &amp;&amp; !this_thread->is_Named_thread());\n+    transition = ((this_thread != nullptr) &amp;&amp; !this_thread->is_Named_thread());\n@@ -643,2 +643,2 @@\n-  const char *func_name = NULL;\n-  const char *curr_thread_name = NULL;\n+  const char *func_name = nullptr;\n+  const char *curr_thread_name = nullptr;\n@@ -743,1 +743,1 @@\n-    <xsl:text> == NULL) {\n+    <xsl:text> == nullptr) {\n@@ -759,1 +759,1 @@\n-  if (rmonitor == NULL) {\n+  if (rmonitor == nullptr) {\n@@ -763,1 +763,1 @@\n-      <xsl:with-param name=\"comment\"> - raw monitor is NULL<\/xsl:with-param>\n+      <xsl:with-param name=\"comment\"> - raw monitor is nullptr<\/xsl:with-param>\n@@ -783,1 +783,1 @@\n-    <xsl:text>, &amp;java_thread, NULL);\n+    <xsl:text>, &amp;java_thread, nullptr);\n@@ -800,1 +800,1 @@\n-    <xsl:text>  JavaThread* java_thread = NULL;\n+    <xsl:text>  JavaThread* java_thread = nullptr;\n@@ -812,1 +812,1 @@\n-        <xsl:text> == NULL) {\n+        <xsl:text> == nullptr) {\n@@ -848,1 +848,1 @@\n-  if (k_mirror == NULL) {\n+  if (k_mirror == nullptr) {\n@@ -852,1 +852,1 @@\n-      <xsl:with-param name=\"comment\"> - resolved to NULL - jclass = \" PTR_FORMAT \"<\/xsl:with-param>\n+      <xsl:with-param name=\"comment\"> - resolved to nullptr - jclass = \" PTR_FORMAT \"<\/xsl:with-param>\n@@ -879,1 +879,1 @@\n-  if (k_oop == NULL) {\n+  if (k_oop == nullptr) {\n@@ -899,1 +899,1 @@\n-  <xsl:text>  if (checked_method == NULL) {&#xA;<\/xsl:text>\n+  <xsl:text>  if (checked_method == nullptr) {&#xA;<\/xsl:text>\n@@ -1161,2 +1161,2 @@\n-                    checked_method == NULL? \"NULL\" : checked_method->klass_name()->as_C_string(),\n-                    checked_method == NULL? \"NULL\" : checked_method->name()->as_C_string()\n+                    checked_method == nullptr? \"nullptr\" : checked_method->klass_name()->as_C_string(),\n+                    checked_method == nullptr? \"nullptr\" : checked_method->name()->as_C_string()\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnter.xsl","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-  if (k_oop == NULL) {\n+  if (k_oop == nullptr) {\n@@ -139,1 +139,1 @@\n-\/\/ method - pre-checked for validity, but may be NULL meaning obsolete method<\/xsl:text>\n+\/\/ method - pre-checked for validity, but may be nullptr meaning obsolete method<\/xsl:text>\n@@ -169,1 +169,1 @@\n-      <xsl:text> - pre-checked for NULL<\/xsl:text>\n+      <xsl:text> - pre-checked for nullptr<\/xsl:text>\n@@ -175,1 +175,1 @@\n-      <xsl:text> - NULL is a valid value, must be checked<\/xsl:text>\n+      <xsl:text> - nullptr is a valid value, must be checked<\/xsl:text>\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.xsl","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,1 +180,1 @@\n-  <code>NULL<\/code>, <xsl:apply-templates\/>.\n+  <code>nullptr<\/code>, <xsl:apply-templates\/>.\n@@ -381,1 +381,1 @@\n-    <code>NULL<\/code>, the current thread is used.\n+    <code>nullptr<\/code>, the current thread is used.\n@@ -1013,1 +1013,1 @@\n-  <xsl:text>NULL<\/xsl:text>\n+  <xsl:text>nullptr<\/xsl:text>\n","filename":"src\/hotspot\/share\/prims\/jvmtiLib.xsl","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1990,1 +1990,1 @@\n-  product(uint, TrimNativeHeapInterval, 0, EXPERIMENTAL,                    \\\n+  product(uint, TrimNativeHeapInterval, 0,                                  \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1452,1 +1452,1 @@\n-  JFR_ONLY(return vmSymbols::jfr_chunk_rotation_monitor() == monitor_klass->name());\n+  JFR_ONLY(return vmSymbols::jfr_chunk_rotation_monitor() == monitor_klass->name();)\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2161,7 +2161,0 @@\n-char* os::remap_memory(int fd, const char* file_name, size_t file_offset,\n-                             char *addr, size_t bytes, bool read_only,\n-                             bool allow_exec) {\n-  return pd_remap_memory(fd, file_name, file_offset, addr, bytes,\n-                    read_only, allow_exec);\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -220,3 +220,0 @@\n-  static char*  pd_remap_memory(int fd, const char* file_name, size_t file_offset,\n-                             char *addr, size_t bytes, bool read_only,\n-                             bool allow_exec);\n@@ -510,3 +507,0 @@\n-  static char*  remap_memory(int fd, const char* file_name, size_t file_offset,\n-                             char *addr, size_t bytes, bool read_only,\n-                             bool allow_exec);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -460,6 +460,0 @@\n-    \/\/ Ignore modules for -Xshare:dump because we do not have any package\n-    \/\/ or module information for modules other than java.base.\n-    if (CDSConfig::is_dumping_static_archive()) {\n-      return ACCESS_OK;\n-    }\n-\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1225,0 +1225,1 @@\n+  constexpr size_t batch_size = 128;\n@@ -1228,1 +1229,5 @@\n-  for (size_t bucket_it = 0; bucket_it < table->_size; bucket_it++) {\n+  size_t num_batches = table->_size \/ batch_size;\n+  for (size_t batch_start = 0; batch_start < _table->_size; batch_start += batch_size) {\n+    \/\/ We batch the use of ScopedCS here as it has been found to be quite expensive to\n+    \/\/ invoke it for every single bucket.\n+    size_t batch_end = MIN2(batch_start + batch_size, _table->_size);\n@@ -1230,10 +1235,13 @@\n-    size_t count = 0;\n-    Bucket* bucket = table->get_bucket(bucket_it);\n-    if (bucket->have_redirect() || bucket->is_locked()) {\n-      continue;\n-    }\n-    Node* current_node = bucket->first();\n-    while (current_node != nullptr) {\n-      ++count;\n-      literal_bytes += vs_f(current_node->value());\n-      current_node = current_node->next();\n+    for (size_t bucket_it = batch_start; bucket_it < batch_end; bucket_it++) {\n+      size_t count = 0;\n+      Bucket* bucket = table->get_bucket(bucket_it);\n+      if (bucket->have_redirect() || bucket->is_locked()) {\n+        continue;\n+      }\n+      Node* current_node = bucket->first();\n+      while (current_node != nullptr) {\n+        ++count;\n+        literal_bytes += vs_f(current_node->value());\n+        current_node = current_node->next();\n+      }\n+      summary.add((double)count);\n@@ -1241,1 +1249,0 @@\n-    summary.add((double)count);\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.inline.hpp","additions":19,"deletions":12,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -584,0 +584,2 @@\n+#include CPU_HEADER(globalDefinitions)\n+\n@@ -585,0 +587,1 @@\n+#ifndef CODE_CACHE_SIZE_LIMIT\n@@ -586,0 +589,2 @@\n+#endif\n+\n@@ -589,2 +594,0 @@\n-#include CPU_HEADER(globalDefinitions)\n-\n@@ -1028,13 +1031,14 @@\n-const jint     badInt           = -3;                       \/\/ generic \"bad int\" value\n-const intptr_t badAddressVal    = -2;                       \/\/ generic \"bad address\" value\n-const intptr_t badOopVal        = -1;                       \/\/ generic \"bad oop\" value\n-const intptr_t badHeapOopVal    = (intptr_t) CONST64(0x2BAD4B0BBAADBABE); \/\/ value used to zap heap after GC\n-const int      badStackSegVal   = 0xCA;                     \/\/ value used to zap stack segments\n-const int      badHandleValue   = 0xBC;                     \/\/ value used to zap vm handle area\n-const int      badResourceValue = 0xAB;                     \/\/ value used to zap resource area\n-const int      freeBlockPad     = 0xBA;                     \/\/ value used to pad freed blocks.\n-const int      uninitBlockPad   = 0xF1;                     \/\/ value used to zap newly malloc'd blocks.\n-const juint    uninitMetaWordVal= 0xf7f7f7f7;               \/\/ value used to zap newly allocated metachunk\n-const juint    badHeapWordVal   = 0xBAADBABE;               \/\/ value used to zap heap after GC\n-const juint    badMetaWordVal   = 0xBAADFADE;               \/\/ value used to zap metadata heap after GC\n-const int      badCodeHeapNewVal= 0xCC;                     \/\/ value used to zap Code heap at allocation\n+const jint     badInt             = -3;                     \/\/ generic \"bad int\" value\n+const intptr_t badAddressVal      = -2;                     \/\/ generic \"bad address\" value\n+const intptr_t badOopVal          = -1;                     \/\/ generic \"bad oop\" value\n+const intptr_t badHeapOopVal      = (intptr_t) CONST64(0x2BAD4B0BBAADBABE); \/\/ value used to zap heap after GC\n+const int      badStackSegVal     = 0xCA;                   \/\/ value used to zap stack segments\n+const int      badHandleValue     = 0xBC;                   \/\/ value used to zap vm handle area\n+const int      badResourceValue   = 0xAB;                   \/\/ value used to zap resource area\n+const int      freeBlockPad       = 0xBA;                   \/\/ value used to pad freed blocks.\n+const int      uninitBlockPad     = 0xF1;                   \/\/ value used to zap newly malloc'd blocks.\n+const juint    uninitMetaWordVal  = 0xf7f7f7f7;             \/\/ value used to zap newly allocated metachunk\n+const jubyte   heapPaddingByteVal = 0xBD;                   \/\/ value used to zap object padding in the heap\n+const juint    badHeapWordVal     = 0xBAADBABE;             \/\/ value used to zap heap after GC\n+const juint    badMetaWordVal     = 0xBAADFADE;             \/\/ value used to zap metadata heap after GC\n+const int      badCodeHeapNewVal  = 0xCC;                   \/\/ value used to zap Code heap at allocation\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":20,"deletions":16,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -1,146 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.crypto.provider;\n-\n-import java.io.IOException;\n-import java.security.AlgorithmParametersSpi;\n-import java.security.spec.AlgorithmParameterSpec;\n-import java.security.spec.InvalidParameterSpecException;\n-import javax.crypto.spec.GCMParameterSpec;\n-import sun.security.util.HexDumpEncoder;\n-import sun.security.util.*;\n-\n-\/**\n- * This class implements the parameter set used with\n- * GCM encryption, which is defined in RFC 5084 as follows:\n- *\n- * <pre>\n- *    GCMParameters ::= SEQUENCE {\n- *      aes-iv      OCTET STRING, -- recommended size is 12 octets\n- *      aes-tLen    AES-GCM-ICVlen DEFAULT 12 }\n- *\n- *    AES-GCM-ICVlen ::= INTEGER (12 | 13 | 14 | 15 | 16)\n- *\n- * <\/pre>\n- *\n- * @author Valerie Peng\n- * @since 1.8\n- *\/\n-public final class GCMParameters extends AlgorithmParametersSpi {\n-\n-    \/\/ the iv\n-    private byte[] iv;\n-    \/\/ the tag length in bytes\n-    private int tLen;\n-\n-    public GCMParameters() {}\n-\n-    protected void engineInit(AlgorithmParameterSpec paramSpec)\n-        throws InvalidParameterSpecException {\n-\n-        if (!(paramSpec instanceof GCMParameterSpec)) {\n-            throw new InvalidParameterSpecException\n-                (\"Inappropriate parameter specification\");\n-        }\n-        GCMParameterSpec gps = (GCMParameterSpec) paramSpec;\n-        \/\/ need to convert from bits to bytes for ASN.1 encoding\n-        this.tLen = gps.getTLen()\/8;\n-        this.iv = gps.getIV();\n-    }\n-\n-    protected void engineInit(byte[] encoded) throws IOException {\n-        DerValue val = new DerValue(encoded);\n-        \/\/ check if IV or params\n-        if (val.tag == DerValue.tag_Sequence) {\n-            byte[] iv = val.data.getOctetString();\n-            int tLen;\n-            if (val.data.available() != 0) {\n-                tLen = val.data.getInteger();\n-                if (tLen < 12 || tLen > 16 ) {\n-                    throw new IOException\n-                        (\"GCM parameter parsing error: unsupported tag len: \" +\n-                         tLen);\n-                }\n-                if (val.data.available() != 0) {\n-                    throw new IOException\n-                        (\"GCM parameter parsing error: extra data\");\n-                }\n-            } else {\n-                tLen = 12;\n-            }\n-            this.iv = iv.clone();\n-            this.tLen = tLen;\n-        } else {\n-            throw new IOException(\"GCM parameter parsing error: no SEQ tag\");\n-        }\n-    }\n-\n-    protected void engineInit(byte[] encoded, String decodingMethod)\n-        throws IOException {\n-        engineInit(encoded);\n-    }\n-\n-    protected <T extends AlgorithmParameterSpec>\n-            T engineGetParameterSpec(Class<T> paramSpec)\n-        throws InvalidParameterSpecException {\n-\n-        if (paramSpec.isAssignableFrom(GCMParameterSpec.class)) {\n-            return paramSpec.cast(new GCMParameterSpec(tLen * 8, iv));\n-        } else {\n-            throw new InvalidParameterSpecException\n-                (\"Inappropriate parameter specification\");\n-        }\n-    }\n-\n-    protected byte[] engineGetEncoded() throws IOException {\n-        DerOutputStream out = new DerOutputStream();\n-        DerOutputStream bytes = new DerOutputStream();\n-\n-        bytes.putOctetString(iv);\n-        bytes.putInteger(tLen);\n-        out.write(DerValue.tag_Sequence, bytes);\n-        return out.toByteArray();\n-    }\n-\n-    protected byte[] engineGetEncoded(String encodingMethod)\n-        throws IOException {\n-        return engineGetEncoded();\n-    }\n-\n-    \/*\n-     * Returns a formatted string describing the parameters.\n-     *\/\n-    protected String engineToString() {\n-        String LINE_SEP = System.lineSeparator();\n-        HexDumpEncoder encoder = new HexDumpEncoder();\n-        StringBuilder sb\n-            = new StringBuilder(LINE_SEP + \"    iv:\" + LINE_SEP + \"[\"\n-                + encoder.encodeBuffer(iv) + \"]\");\n-\n-        sb.append(LINE_SEP + \"tLen(bits):\" + LINE_SEP + tLen*8 + LINE_SEP);\n-        return sb.toString();\n-    }\n-}\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GCMParameters.java","additions":0,"deletions":146,"binary":false,"changes":146,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -552,1 +552,1 @@\n-                \"com.sun.crypto.provider.GCMParameters\");\n+                \"sun.security.util.GCMParameters\");\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/SunJCE.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n- *     code: \/\/ @replace substring=\"code:\" replacement=\"...\"\n+ *     ...\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -738,0 +738,3 @@\n+        if (length() == 0) {\n+            return \"\";\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringBuffer.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -474,0 +474,3 @@\n+        if (length() == 0) {\n+            return \"\";\n+        }\n@@ -475,1 +478,1 @@\n-        return new String(this);\n+        return new String(this, null);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringBuilder.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1705,0 +1705,5 @@\n+        }\n+\n+        \/\/ Setting the interrupt status must be done before reading nioBlocker.\n+        interrupted = true;\n+        interrupt0();  \/\/ inform VM of interrupt\n@@ -1706,1 +1711,2 @@\n-            \/\/ thread may be blocked in an I\/O operation\n+        \/\/ thread may be blocked in an I\/O operation\n+        if (this != Thread.currentThread()) {\n@@ -1711,2 +1717,0 @@\n-                    interrupted = true;\n-                    interrupt0();  \/\/ inform VM of interrupt\n@@ -1718,1 +1722,0 @@\n-                return;\n@@ -1721,2 +1724,0 @@\n-        interrupted = true;\n-        interrupt0();  \/\/ inform VM of interrupt\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -861,1 +861,1 @@\n-         *     int errno = (int) errnoHandle.get(capturedState);\n+         *     int errno = (int) errnoHandle.get(capturedState, 0L);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -373,1 +373,1 @@\n-     * The calculation rolls around the start of the year from Monday to Sunday.\n+     * The calculation rolls around the start of the week from Monday to Sunday.\n","filename":"src\/java.base\/share\/classes\/java\/time\/DayOfWeek.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2428,1 +2428,1 @@\n-     * code: \/\/ @replace substring=\"code:\" replacement=\"...\"\n+     * ...\n@@ -2497,1 +2497,1 @@\n-     * code: \/\/ @replace substring=\"code:\" replacement=\"...\"\n+     * ...\n@@ -2509,1 +2509,1 @@\n-     *         code: \/\/ @replace substring=\"code:\" replacement=\"...\"\n+     *         ...\n","filename":"src\/java.base\/share\/classes\/java\/util\/ResourceBundle.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -593,11 +593,6 @@\n-    static String getMainClassFromJar(String jarname) {\n-        String mainValue;\n-        try (JarFile jarFile = new JarFile(jarname)) {\n-            Manifest manifest = jarFile.getManifest();\n-            if (manifest == null) {\n-                abort(null, \"java.launcher.jar.error2\", jarname);\n-            }\n-            Attributes mainAttrs = manifest.getMainAttributes();\n-            if (mainAttrs == null) {\n-                abort(null, \"java.launcher.jar.error3\", jarname);\n-            }\n+    private static String getMainClassFromJar(JarFile jarFile) throws IOException {\n+        String jarname = jarFile.getName();\n+        Manifest manifest = jarFile.getManifest();\n+        if (manifest == null) {\n+            abort(null, \"java.launcher.jar.error2\", jarname);\n+        }\n@@ -605,5 +600,4 @@\n-            \/\/ Main-Class\n-            mainValue = mainAttrs.getValue(MAIN_CLASS);\n-            if (mainValue == null) {\n-                abort(null, \"java.launcher.jar.error3\", jarname);\n-            }\n+        Attributes mainAttrs = manifest.getMainAttributes();\n+        if (mainAttrs == null) {\n+            abort(null, \"java.launcher.jar.error3\", jarname);\n+        }\n@@ -611,15 +605,5 @@\n-            \/\/ Launcher-Agent-Class (only check for this when Main-Class present)\n-            String agentClass = mainAttrs.getValue(LAUNCHER_AGENT_CLASS);\n-            if (agentClass != null) {\n-                ModuleLayer.boot().findModule(\"java.instrument\").ifPresent(m -> {\n-                    try {\n-                        String cn = \"sun.instrument.InstrumentationImpl\";\n-                        Class<?> clazz = Class.forName(cn, false, null);\n-                        Method loadAgent = clazz.getMethod(\"loadAgent\", String.class);\n-                        loadAgent.invoke(null, jarname);\n-                    } catch (Throwable e) {\n-                        if (e instanceof InvocationTargetException) e = e.getCause();\n-                        abort(e, \"java.launcher.jar.error4\", jarname);\n-                    }\n-                });\n-            }\n+        \/\/ Main-Class\n+        String mainValue = mainAttrs.getValue(MAIN_CLASS);\n+        if (mainValue == null) {\n+            abort(null, \"java.launcher.jar.error3\", jarname);\n+        }\n@@ -627,13 +611,12 @@\n-            \/\/ Add-Exports and Add-Opens\n-            String exports = mainAttrs.getValue(ADD_EXPORTS);\n-            if (exports != null) {\n-                addExportsOrOpens(exports, false);\n-            }\n-            String opens = mainAttrs.getValue(ADD_OPENS);\n-            if (opens != null) {\n-                addExportsOrOpens(opens, true);\n-            }\n-            String enableNativeAccess = mainAttrs.getValue(ENABLE_NATIVE_ACCESS);\n-            if (enableNativeAccess != null) {\n-                if (!enableNativeAccess.equals(\"ALL-UNNAMED\")) {\n-                    abort(null, \"java.launcher.jar.error.illegal.ena.value\", enableNativeAccess);\n+        \/\/ Launcher-Agent-Class (only check for this when Main-Class present)\n+        String agentClass = mainAttrs.getValue(LAUNCHER_AGENT_CLASS);\n+        if (agentClass != null) {\n+            ModuleLayer.boot().findModule(\"java.instrument\").ifPresent(m -> {\n+                try {\n+                    String cn = \"sun.instrument.InstrumentationImpl\";\n+                    Class<?> clazz = Class.forName(cn, false, null);\n+                    Method loadAgent = clazz.getMethod(\"loadAgent\", String.class);\n+                    loadAgent.invoke(null, jarname);\n+                } catch (Throwable e) {\n+                    if (e instanceof InvocationTargetException) e = e.getCause();\n+                    abort(e, \"java.launcher.jar.error4\", jarname);\n@@ -641,2 +624,2 @@\n-                Modules.addEnableNativeAccessToAllUnnamed();\n-            }\n+            });\n+        }\n@@ -644,9 +627,13 @@\n-            \/*\n-             * Hand off to FXHelper if it detects a JavaFX application\n-             * This must be done after ensuring a Main-Class entry\n-             * exists to enforce compliance with the jar specification\n-             *\/\n-            if (mainAttrs.containsKey(\n-                    new Attributes.Name(JAVAFX_APPLICATION_MARKER))) {\n-                FXHelper.setFXLaunchParameters(jarname, LM_JAR);\n-                return FXHelper.class.getName();\n+        \/\/ Add-Exports and Add-Opens\n+        String exports = mainAttrs.getValue(ADD_EXPORTS);\n+        if (exports != null) {\n+            addExportsOrOpens(exports, false);\n+        }\n+        String opens = mainAttrs.getValue(ADD_OPENS);\n+        if (opens != null) {\n+            addExportsOrOpens(opens, true);\n+        }\n+        String enableNativeAccess = mainAttrs.getValue(ENABLE_NATIVE_ACCESS);\n+        if (enableNativeAccess != null) {\n+            if (!enableNativeAccess.equals(\"ALL-UNNAMED\")) {\n+                abort(null, \"java.launcher.jar.error.illegal.ena.value\", enableNativeAccess);\n@@ -654,0 +641,2 @@\n+            Modules.addEnableNativeAccessToAllUnnamed();\n+        }\n@@ -655,3 +644,9 @@\n-            return mainValue.trim();\n-        } catch (IOException ioe) {\n-            abort(ioe, \"java.launcher.jar.error1\", jarname);\n+        \/*\n+         * Hand off to FXHelper if it detects a JavaFX application\n+         * This must be done after ensuring a Main-Class entry\n+         * exists to enforce compliance with the jar specification\n+         *\/\n+        if (mainAttrs.containsKey(\n+                new Attributes.Name(JAVAFX_APPLICATION_MARKER))) {\n+            FXHelper.setFXLaunchParameters(jarname, LM_JAR);\n+            return FXHelper.class.getName();\n@@ -659,1 +654,2 @@\n-        return null;\n+\n+        return mainValue.trim();\n@@ -822,1 +818,6 @@\n-        String cn;\n+        String cn = null;\n+        \/\/ In LM_JAR mode, keep the underlying file open to retain it in\n+        \/\/ the JarFile\/ZipFile cache. This will avoid needing to re-parse\n+        \/\/ the central directory when the file is opened on the class path,\n+        \/\/ triggered by Class.forName below.\n+        JarFile jarFile = null;\n@@ -828,1 +829,6 @@\n-                cn = getMainClassFromJar(what);\n+                try {\n+                    jarFile = new JarFile(what);\n+                    cn = getMainClassFromJar(jarFile);\n+                } catch (IOException ioe) {\n+                    abort(ioe, \"java.launcher.jar.error1\", what);\n+                }\n@@ -864,0 +870,8 @@\n+        } finally {\n+            if (jarFile != null) {\n+                try {\n+                    jarFile.close();\n+                } catch (IOException ioe) {\n+                    abort(ioe, \"java.launcher.jar.error5\", what);\n+                }\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/LauncherHelper.java","additions":76,"deletions":62,"binary":false,"changes":138,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -264,0 +264,2 @@\n+java.launcher.jar.error5=\\\n+    Error: An unexpected error occurred while trying to close file {0}\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,3 @@\n-import java.util.Date;\n+import java.lang.reflect.Array;\n+import java.util.*;\n+import java.util.function.BiFunction;\n@@ -38,137 +40,0 @@\n- * <a name=\"classTable\"><h3>Type\/Class Table<\/h3><\/a>\n- * The following table shows the correspondence between\n- * PKCS9 attribute types and value component classes.\n- * For types not listed here, its name is the OID\n- * in string form, its value is a (single-valued)\n- * byte array that is the SET's encoding.\n- *\n- * <TABLE BORDER CELLPADDING=8 ALIGN=CENTER>\n- *\n- * <TR>\n- * <TH>Object Identifier<\/TH>\n- * <TH>Attribute Name<\/TH>\n- * <TH>Type<\/TH>\n- * <TH>Value Class<\/TH>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.1<\/TD>\n- * <TD>EmailAddress<\/TD>\n- * <TD>Multi-valued<\/TD>\n- * <TD><code>String[]<\/code><\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.2<\/TD>\n- * <TD>UnstructuredName<\/TD>\n- * <TD>Multi-valued<\/TD>\n- * <TD><code>String[]<\/code><\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.3<\/TD>\n- * <TD>ContentType<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD><code>ObjectIdentifier<\/code><\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.4<\/TD>\n- * <TD>MessageDigest<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD><code>byte[]<\/code><\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.5<\/TD>\n- * <TD>SigningTime<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD><code>Date<\/code><\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.6<\/TD>\n- * <TD>Countersignature<\/TD>\n- * <TD>Multi-valued<\/TD>\n- * <TD><code>SignerInfo[]<\/code><\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.7<\/TD>\n- * <TD>ChallengePassword<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD><code>String<\/code><\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.8<\/TD>\n- * <TD>UnstructuredAddress<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD><code>String<\/code><\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.9<\/TD>\n- * <TD>ExtendedCertificateAttributes<\/TD>\n- * <TD>Multi-valued<\/TD>\n- * <TD>(not supported)<\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.10<\/TD>\n- * <TD>IssuerAndSerialNumber<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD>(not supported)<\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.{11,12}<\/TD>\n- * <TD>RSA DSI proprietary<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD>(not supported)<\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.13<\/TD>\n- * <TD>S\/MIME unused assignment<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD>(not supported)<\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.14<\/TD>\n- * <TD>ExtensionRequest<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD>CertificateExtensions<\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.15<\/TD>\n- * <TD>SMIMECapability<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD>(not supported)<\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.16.2.12<\/TD>\n- * <TD>SigningCertificate<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD>SigningCertificateInfo<\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.16.2.14<\/TD>\n- * <TD>SignatureTimestampToken<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD>byte[]<\/TD>\n- * <\/TR>\n- *\n- * <TR>\n- * <TD>1.2.840.113549.1.9.16.2.52<\/TD>\n- * <TD>CMSAlgorithmProtection<\/TD>\n- * <TD>Single-valued<\/TD>\n- * <TD>byte[]<\/TD>\n- * <\/TR>\n- *\n- * <\/TABLE>\n- *\n@@ -182,31 +47,13 @@\n-    \/**\n-     * Array of attribute OIDs defined in PKCS9, by number.\n-     *\/\n-    static final ObjectIdentifier[] PKCS9_OIDS = new ObjectIdentifier[19];\n-\n-    private static final Class<?> BYTE_ARRAY_CLASS;\n-\n-    static {\n-        \/\/ set unused PKCS9_OIDS entries to null\n-        \/\/ rest are initialized with public constants\n-        PKCS9_OIDS[0] = PKCS9_OIDS[11] = PKCS9_OIDS[12] = PKCS9_OIDS[13] =\n-        PKCS9_OIDS[15] = null;\n-        try {\n-            BYTE_ARRAY_CLASS = Class.forName(\"[B\");\n-        } catch (ClassNotFoundException e) {\n-            throw new ExceptionInInitializerError(e.toString());\n-        }\n-    }\n-\n-    public static final ObjectIdentifier EMAIL_ADDRESS_OID = PKCS9_OIDS[1] =\n-            ObjectIdentifier.of(KnownOIDs.EmailAddress);\n-    public static final ObjectIdentifier UNSTRUCTURED_NAME_OID = PKCS9_OIDS[2] =\n-            ObjectIdentifier.of(KnownOIDs.UnstructuredName);\n-    public static final ObjectIdentifier CONTENT_TYPE_OID = PKCS9_OIDS[3] =\n-            ObjectIdentifier.of(KnownOIDs.ContentType);\n-    public static final ObjectIdentifier MESSAGE_DIGEST_OID = PKCS9_OIDS[4] =\n-            ObjectIdentifier.of(KnownOIDs.MessageDigest);\n-    public static final ObjectIdentifier SIGNING_TIME_OID = PKCS9_OIDS[5] =\n-            ObjectIdentifier.of(KnownOIDs.SigningTime);\n-    public static final ObjectIdentifier COUNTERSIGNATURE_OID = PKCS9_OIDS[6] =\n-            ObjectIdentifier.of(KnownOIDs.CounterSignature);\n+    \/* OID Constants *\/\n+    public static final ObjectIdentifier EMAIL_ADDRESS_OID =\n+        ObjectIdentifier.of(KnownOIDs.EmailAddress);\n+    public static final ObjectIdentifier UNSTRUCTURED_NAME_OID =\n+        ObjectIdentifier.of(KnownOIDs.UnstructuredName);\n+    public static final ObjectIdentifier CONTENT_TYPE_OID =\n+        ObjectIdentifier.of(KnownOIDs.ContentType);\n+    public static final ObjectIdentifier MESSAGE_DIGEST_OID =\n+        ObjectIdentifier.of(KnownOIDs.MessageDigest);\n+    public static final ObjectIdentifier SIGNING_TIME_OID =\n+        ObjectIdentifier.of(KnownOIDs.SigningTime);\n+    public static final ObjectIdentifier COUNTERSIGNATURE_OID =\n+        ObjectIdentifier.of(KnownOIDs.CounterSignature);\n@@ -214,1 +61,1 @@\n-            PKCS9_OIDS[7] = ObjectIdentifier.of(KnownOIDs.ChallengePassword);\n+        ObjectIdentifier.of(KnownOIDs.ChallengePassword);\n@@ -216,1 +63,1 @@\n-            PKCS9_OIDS[8] = ObjectIdentifier.of(KnownOIDs.UnstructuredAddress);\n+        ObjectIdentifier.of(KnownOIDs.UnstructuredAddress);\n@@ -218,2 +65,1 @@\n-            PKCS9_OIDS[9] =\n-            ObjectIdentifier.of(KnownOIDs.ExtendedCertificateAttributes);\n+        ObjectIdentifier.of(KnownOIDs.ExtendedCertificateAttributes);\n@@ -221,4 +67,1 @@\n-            PKCS9_OIDS[10] =\n-            ObjectIdentifier.of(KnownOIDs.IssuerAndSerialNumber);\n-    \/\/ [11], [12] are RSA DSI proprietary\n-    \/\/ [13] ==> signingDescription, S\/MIME, not used anymore\n+        ObjectIdentifier.of(KnownOIDs.IssuerAndSerialNumber);\n@@ -226,1 +69,1 @@\n-            PKCS9_OIDS[14] = ObjectIdentifier.of(KnownOIDs.ExtensionRequest);\n+        ObjectIdentifier.of(KnownOIDs.ExtensionRequest);\n@@ -228,1 +71,1 @@\n-            PKCS9_OIDS[16] = ObjectIdentifier.of(KnownOIDs.SigningCertificate);\n+        ObjectIdentifier.of(KnownOIDs.SigningCertificate);\n@@ -230,2 +73,1 @@\n-            PKCS9_OIDS[17] =\n-            ObjectIdentifier.of(KnownOIDs.SignatureTimestampToken);\n+        ObjectIdentifier.of(KnownOIDs.SignatureTimestampToken);\n@@ -233,2 +75,1 @@\n-            PKCS9_OIDS[18] =\n-            ObjectIdentifier.of(KnownOIDs.CMSAlgorithmProtection);\n+        ObjectIdentifier.of(KnownOIDs.CMSAlgorithmProtection);\n@@ -237,3 +78,2 @@\n-     * Acceptable ASN.1 tags for DER encodings of values of PKCS9\n-     * attributes, by index in <code>PKCS9_OIDS<\/code>.\n-     * Sets of acceptable tags are represented as arrays.\n+     * Contains information for encoding and getting the value\n+     * of a given PKCS9 attribute\n@@ -241,37 +81,12 @@\n-    private static final Byte[][] PKCS9_VALUE_TAGS = {\n-        null,\n-        {DerValue.tag_IA5String},   \/\/ EMailAddress\n-        {DerValue.tag_IA5String,\n-         DerValue.tag_PrintableString,\n-         DerValue.tag_T61String,\n-         DerValue.tag_BMPString,\n-         DerValue.tag_UniversalString,\n-         DerValue.tag_UTF8String},  \/\/ UnstructuredName\n-        {DerValue.tag_ObjectId},    \/\/ ContentType\n-        {DerValue.tag_OctetString}, \/\/ MessageDigest\n-        {DerValue.tag_UtcTime,\n-         DerValue.tag_GeneralizedTime}, \/\/ SigningTime\n-        {DerValue.tag_Sequence},    \/\/ Countersignature\n-        {DerValue.tag_PrintableString,\n-         DerValue.tag_T61String,\n-         DerValue.tag_BMPString,\n-         DerValue.tag_UniversalString,\n-         DerValue.tag_UTF8String},   \/\/ ChallengePassword\n-        {DerValue.tag_PrintableString,\n-         DerValue.tag_T61String,\n-         DerValue.tag_BMPString,\n-         DerValue.tag_UniversalString,\n-         DerValue.tag_UTF8String},   \/\/ UnstructuredAddress\n-        {DerValue.tag_SetOf},       \/\/ ExtendedCertificateAttributes\n-        {DerValue.tag_Sequence},    \/\/ issuerAndSerialNumber\n-        null,\n-        null,\n-        null,\n-        {DerValue.tag_Sequence},    \/\/ extensionRequest\n-        {DerValue.tag_Sequence},    \/\/ SMIMECapability\n-        {DerValue.tag_Sequence},    \/\/ SigningCertificate\n-        {DerValue.tag_Sequence},    \/\/ SignatureTimestampToken\n-        {DerValue.tag_Sequence}     \/\/ CMSAlgorithmProtection\n-    };\n-\n-    private static final Class<?>[] VALUE_CLASSES = new Class<?>[19];\n+    private record AttributeInfo<T>(boolean singleValued, Class<?> valueClass,\n+                                 Decoder<T> decoder,\n+                                 Encoder<T> encoder,\n+                                 byte... valueTags) {\n+\n+        @SuppressWarnings(\"unchecked\")\n+        DerOutputStream encode(Object o) {\n+            var d = new DerOutputStream();\n+            \/\/This type is checked in the PKCS9Attribute constructor\n+            encoder.encode(d, (T)o);\n+            return d;\n+        }\n@@ -279,29 +94,2 @@\n-    static {\n-        try {\n-            Class<?> str = Class.forName(\"[Ljava.lang.String;\");\n-\n-            VALUE_CLASSES[0] = null;  \/\/ not used\n-            VALUE_CLASSES[1] = str;   \/\/ EMailAddress\n-            VALUE_CLASSES[2] = str;   \/\/ UnstructuredName\n-            VALUE_CLASSES[3] =        \/\/ ContentType\n-                Class.forName(\"sun.security.util.ObjectIdentifier\");\n-            VALUE_CLASSES[4] = BYTE_ARRAY_CLASS; \/\/ MessageDigest (byte[])\n-            VALUE_CLASSES[5] = Class.forName(\"java.util.Date\"); \/\/ SigningTime\n-            VALUE_CLASSES[6] =        \/\/ Countersignature\n-                Class.forName(\"[Lsun.security.pkcs.SignerInfo;\");\n-            VALUE_CLASSES[7] =        \/\/ ChallengePassword\n-                Class.forName(\"java.lang.String\");\n-            VALUE_CLASSES[8] = str;   \/\/ UnstructuredAddress\n-            VALUE_CLASSES[9] = null;  \/\/ ExtendedCertificateAttributes\n-            VALUE_CLASSES[10] = null;  \/\/ IssuerAndSerialNumber\n-            VALUE_CLASSES[11] = null;  \/\/ not used\n-            VALUE_CLASSES[12] = null;  \/\/ not used\n-            VALUE_CLASSES[13] = null;  \/\/ not used\n-            VALUE_CLASSES[14] =        \/\/ ExtensionRequest\n-                Class.forName(\"sun.security.x509.CertificateExtensions\");\n-            VALUE_CLASSES[15] = null;  \/\/ not supported yet\n-            VALUE_CLASSES[16] = null;  \/\/ not supported yet\n-            VALUE_CLASSES[17] = BYTE_ARRAY_CLASS;  \/\/ SignatureTimestampToken\n-            VALUE_CLASSES[18] = BYTE_ARRAY_CLASS;  \/\/ CMSAlgorithmProtection\n-        } catch (ClassNotFoundException e) {\n-            throw new ExceptionInInitializerError(e.toString());\n+        T decode(DerValue d) throws IOException {\n+            return decoder.decode(d);\n@@ -311,0 +99,10 @@\n+    @FunctionalInterface\n+    public interface Decoder<R> {\n+        R decode(DerValue t) throws IOException;\n+    }\n+\n+    @FunctionalInterface\n+    public interface Encoder<R> {\n+        void encode(DerOutputStream t, R r);\n+    }\n+\n@@ -312,2 +110,1 @@\n-     * Array indicating which PKCS9 attributes are single-valued,\n-     * by index in <code>PKCS9_OIDS<\/code>.\n+     * Map containing the AttributeInfo for supported OIDs\n@@ -315,21 +112,93 @@\n-    private static final boolean[] SINGLE_VALUED = {\n-      false,\n-      false,   \/\/ EMailAddress\n-      false,   \/\/ UnstructuredName\n-      true,    \/\/ ContentType\n-      true,    \/\/ MessageDigest\n-      true,    \/\/ SigningTime\n-      false,   \/\/ Countersignature\n-      true,    \/\/ ChallengePassword\n-      false,   \/\/ UnstructuredAddress\n-      false,   \/\/ ExtendedCertificateAttributes\n-      true,    \/\/ IssuerAndSerialNumber - not supported yet\n-      false,   \/\/ not used\n-      false,   \/\/ not used\n-      false,   \/\/ not used\n-      true,    \/\/ ExtensionRequest\n-      true,    \/\/ SMIMECapability - not supported yet\n-      true,    \/\/ SigningCertificate\n-      true,    \/\/ SignatureTimestampToken\n-      true,    \/\/ CMSAlgorithmProtection\n-    };\n+    private static final Map<ObjectIdentifier, AttributeInfo<?>> infoMap = new HashMap<>();\n+\n+    \/* Helper function for building infoMap *\/\n+    private static <T> void add(ObjectIdentifier oid, boolean singleValued,\n+                                Class<T> valueClass,\n+                                Decoder<T> decoder,\n+                                Encoder<T> encoder,\n+                                byte... valueTags) {\n+\n+        AttributeInfo<T> info =\n+            new AttributeInfo<T>(singleValued, valueClass, decoder, encoder, valueTags);\n+\n+        if (infoMap.put(oid, info) != null) {\n+            throw new RuntimeException(\"Duplicate oid: \" + oid);\n+        }\n+    }\n+\n+    \/* Set AttributeInfo for supported PKCS9 attributes *\/\n+    static {\n+        add(EMAIL_ADDRESS_OID, false, String.class,\n+            DerValue::getAsString,\n+            DerOutputStream::putIA5String,\n+            DerValue.tag_IA5String);\n+\n+        add(UNSTRUCTURED_NAME_OID, false, String.class,\n+            DerValue::getAsString,\n+            DerOutputStream::putIA5String,\n+            DerValue.tag_IA5String,\n+            DerValue.tag_PrintableString,\n+            DerValue.tag_T61String,\n+            DerValue.tag_BMPString,\n+            DerValue.tag_UniversalString,\n+            DerValue.tag_UTF8String);\n+\n+        add(CONTENT_TYPE_OID, true, sun.security.util.ObjectIdentifier.class,\n+            DerValue::getOID,\n+            DerOutputStream::putOID,\n+            DerValue.tag_ObjectId);\n+\n+        add(MESSAGE_DIGEST_OID, true, byte[].class,\n+            DerValue::getOctetString,\n+            DerOutputStream::putOctetString,\n+            DerValue.tag_OctetString);\n+\n+        add(SIGNING_TIME_OID, true, java.util.Date.class,\n+            DerValue::getTime,\n+            DerOutputStream::putTime,\n+            DerValue.tag_UtcTime,\n+            DerValue.tag_GeneralizedTime);\n+\n+        add(COUNTERSIGNATURE_OID, false, sun.security.pkcs.SignerInfo.class,\n+            e -> new SignerInfo(e.toDerInputStream()),\n+            DerOutputStream::write,\n+            DerValue.tag_Sequence);\n+\n+        add(CHALLENGE_PASSWORD_OID, true, String.class,\n+            DerValue::getAsString,\n+            DerOutputStream::putPrintableString,\n+            DerValue.tag_PrintableString,\n+            DerValue.tag_T61String,\n+            DerValue.tag_BMPString,\n+            DerValue.tag_UniversalString,\n+            DerValue.tag_UTF8String);\n+\n+        add(UNSTRUCTURED_ADDRESS_OID, false, String.class,\n+            DerValue::getAsString,\n+            DerOutputStream::putPrintableString,\n+            DerValue.tag_PrintableString,\n+            DerValue.tag_T61String,\n+            DerValue.tag_BMPString,\n+            DerValue.tag_UniversalString,\n+            DerValue.tag_UTF8String);\n+\n+        add(EXTENSION_REQUEST_OID, true, sun.security.x509.CertificateExtensions.class,\n+            a -> new CertificateExtensions(new DerInputStream(a.toByteArray())),\n+            (t, v) -> v.encode(t, true),\n+            DerValue.tag_Sequence);\n+\n+        add(SIGNING_CERTIFICATE_OID, true, sun.security.pkcs.SigningCertificateInfo.class,\n+            a -> new SigningCertificateInfo(a.toByteArray()),\n+            (t, v) -> t.writeBytes(v.toByteArray()),\n+            DerValue.tag_Sequence);\n+\n+        add(SIGNATURE_TIMESTAMP_TOKEN_OID, true, byte[].class,\n+            DerValue::toByteArray,\n+            (t, v) -> t.writeBytes(v),\n+            DerValue.tag_Sequence);\n+\n+        add(CMS_ALGORITHM_PROTECTION_OID, true, byte[].class,\n+            DerValue::toByteArray,\n+            (t, v) -> t.writeBytes(v),\n+            DerValue.tag_Sequence);\n+    }\n@@ -340,1 +209,1 @@\n-    private ObjectIdentifier oid;\n+    private final ObjectIdentifier oid;\n@@ -343,2 +212,1 @@\n-     * The index of the OID of this attribute in <code>PKCS9_OIDS<\/code>,\n-     * or -1 if it's unknown.\n+     * The AttributeInfo of this attribute. Can be null if oid is unknown.\n@@ -346,1 +214,1 @@\n-    private int index;\n+    private final AttributeInfo<?> info;\n@@ -350,1 +218,1 @@\n-     * <code>VALUE_CLASSES[index]<\/code>. The SET itself\n+     * <code>AttributeInfo.valueClass<\/code>. The SET itself\n@@ -353,1 +221,1 @@\n-    private Object value;\n+    private final Object value;\n@@ -370,5 +238,0 @@\n-    throws IllegalArgumentException {\n-        init(oid, value);\n-    }\n-\n-    private void init(ObjectIdentifier oid, Object value)\n@@ -378,8 +241,4 @@\n-        index = indexOf(oid, PKCS9_OIDS, 1);\n-        Class<?> clazz = index == -1 ? BYTE_ARRAY_CLASS: VALUE_CLASSES[index];\n-        if (clazz == null) {\n-            throw new IllegalArgumentException(\n-                    \"No value class supported \" +\n-                            \" for attribute \" + oid +\n-                            \" constructing PKCS9Attribute\");\n-        }\n+        this.info = infoMap.get(oid);\n+        Class<?> clazz = info == null\n+            ? byte[].class\n+            : info.singleValued ? info.valueClass() : info.valueClass.arrayType();\n@@ -387,6 +246,6 @@\n-                throw new IllegalArgumentException(\n-                           \"Wrong value class \" +\n-                           \" for attribute \" + oid +\n-                           \" constructing PKCS9Attribute; was \" +\n-                           value.getClass().toString() + \", should be \" +\n-                           clazz.toString());\n+            throw new IllegalArgumentException(\n+                \"Wrong value class \" +\n+                    \" for attribute \" + oid +\n+                    \" constructing PKCS9Attribute; was \" +\n+                    value.getClass().toString() + \", should be \" +\n+                    clazz.toString());\n@@ -397,1 +256,0 @@\n-\n@@ -422,2 +280,2 @@\n-        index = indexOf(oid, PKCS9_OIDS, 1);\n-        if (index == -1) {\n+        info = infoMap.get(oid);\n+        if (info == null) {\n@@ -432,1 +290,1 @@\n-        if (SINGLE_VALUED[index] && elems.length > 1)\n+        if (info.singleValued() && elems.length > 1)\n@@ -436,1 +294,1 @@\n-        Byte tag;\n+        byte tag;\n@@ -439,1 +297,1 @@\n-            if (indexOf(tag, PKCS9_VALUE_TAGS[index], 0) == -1)\n+            if (indexOf(tag, info.valueTags(), 0) == -1)\n@@ -443,77 +301,7 @@\n-        switch (index) {\n-        case 1:     \/\/ email address\n-        case 2:     \/\/ unstructured name\n-        case 8:     \/\/ unstructured address\n-            { \/\/ open scope\n-                String[] values = new String[elems.length];\n-\n-                for (int i=0; i < elems.length; i++)\n-                    values[i] = elems[i].getAsString();\n-                value = values;\n-            } \/\/ close scope\n-            break;\n-\n-        case 3:     \/\/ content type\n-            value = elems[0].getOID();\n-            break;\n-\n-        case 4:     \/\/ message digest\n-            value = elems[0].getOctetString();\n-            break;\n-\n-        case 5:     \/\/ signing time\n-            byte elemTag = elems[0].getTag();\n-            DerInputStream dis = new DerInputStream(elems[0].toByteArray());\n-            value = dis.getTime();\n-            break;\n-\n-        case 6:     \/\/ countersignature\n-            { \/\/ open scope\n-                SignerInfo[] values = new SignerInfo[elems.length];\n-                for (int i=0; i < elems.length; i++)\n-                    values[i] =\n-                        new SignerInfo(elems[i].toDerInputStream());\n-                value = values;\n-            } \/\/ close scope\n-            break;\n-\n-        case 7:     \/\/ challenge password\n-            value = elems[0].getAsString();\n-            break;\n-\n-        case 9:     \/\/ extended-certificate attribute -- not supported\n-            throw new IOException(\"PKCS9 extended-certificate \" +\n-                                  \"attribute not supported.\");\n-            \/\/ break unnecessary\n-        case 10:    \/\/ issuerAndserialNumber attribute -- not supported\n-            throw new IOException(\"PKCS9 IssuerAndSerialNumber \" +\n-                                  \"attribute not supported.\");\n-            \/\/ break unnecessary\n-        case 11:    \/\/ RSA DSI proprietary\n-        case 12:    \/\/ RSA DSI proprietary\n-            throw new IOException(\"PKCS9 RSA DSI attributes \" +\n-                                  \"11 and 12, not supported.\");\n-            \/\/ break unnecessary\n-        case 13:    \/\/ S\/MIME unused attribute\n-            throw new IOException(\"PKCS9 attribute #13 not supported.\");\n-            \/\/ break unnecessary\n-\n-        case 14:     \/\/ ExtensionRequest\n-            value = new CertificateExtensions(\n-                       new DerInputStream(elems[0].toByteArray()));\n-            break;\n-\n-        case 15:     \/\/ SMIME-capability attribute -- not supported\n-            throw new IOException(\"PKCS9 SMIMECapability \" +\n-                                  \"attribute not supported.\");\n-            \/\/ break unnecessary\n-        case 16:     \/\/ SigningCertificate attribute\n-            value = new SigningCertificateInfo(elems[0].toByteArray());\n-            break;\n-\n-        case 17:     \/\/ SignatureTimestampToken attribute\n-        case 18:     \/\/ CMSAlgorithmProtection\n-            value = elems[0].toByteArray();\n-            break;\n-\n-        default: \/\/ can't happen\n+        if (info.singleValued) {\n+            value = info.decode(elems[0]);\n+        } else {\n+            value = Array.newInstance(info.valueClass, elems.length);\n+            for (int i = 0; i < elems.length; i++) {\n+                Array.set(value, i, info.decode(elems[i]));\n+            }\n@@ -535,26 +323,0 @@\n-        switch (index) {\n-        case -1:    \/\/ Unknown\n-            temp.writeBytes((byte[])value);\n-            break;\n-        case 1:     \/\/ email address\n-        case 2:     \/\/ unstructured name\n-            { \/\/ open scope\n-                String[] values = (String[]) value;\n-                DerOutputStream[] temps = new\n-                    DerOutputStream[values.length];\n-\n-                for (int i=0; i < values.length; i++) {\n-                    temps[i] = new DerOutputStream();\n-                    temps[i].putIA5String( values[i]);\n-                }\n-                temp.putOrderedSetOf(DerValue.tag_Set, temps);\n-            } \/\/ close scope\n-            break;\n-\n-        case 3:     \/\/ content type\n-            {\n-                DerOutputStream temp2 = new DerOutputStream();\n-                temp2.putOID((ObjectIdentifier) value);\n-                temp.write(DerValue.tag_Set, temp2.toByteArray());\n-            }\n-            break;\n@@ -562,15 +324,5 @@\n-        case 4:     \/\/ message digest\n-            {\n-                DerOutputStream temp2 = new DerOutputStream();\n-                temp2.putOctetString((byte[]) value);\n-                temp.write(DerValue.tag_Set, temp2.toByteArray());\n-            }\n-            break;\n-\n-        case 5:     \/\/ signing time\n-            {\n-                DerOutputStream temp2 = new DerOutputStream();\n-                temp2.putTime((Date) value);\n-                temp.write(DerValue.tag_Set, temp2.toByteArray());\n-            }\n-            break;\n+        if (info == null) {\n+            temp.writeBytes((byte[])value);\n+            out.write(DerValue.tag_Sequence, temp.toByteArray());\n+            return;\n+        }\n@@ -578,3 +330,6 @@\n-        case 6:     \/\/ countersignature\n-            temp.putOrderedSetOf(DerValue.tag_Set, (DerEncoder[]) value);\n-            break;\n+        if (info.singleValued) {\n+            temp.write(DerValue.tag_Set, info.encode(value));\n+        } else {\n+            Object[] values = (Object[]) value;\n+            DerOutputStream[] temps = new\n+                DerOutputStream[values.length];\n@@ -582,5 +337,2 @@\n-        case 7:     \/\/ challenge password\n-            {\n-                DerOutputStream temp2 = new DerOutputStream();\n-                temp2.putPrintableString((String) value);\n-                temp.write(DerValue.tag_Set, temp2.toByteArray());\n+            for (int i=0; i < values.length; i++) {\n+                temps[i] = info.encode(values[i]);\n@@ -588,59 +340,1 @@\n-            break;\n-\n-        case 8:     \/\/ unstructured address\n-            { \/\/ open scope\n-                String[] values = (String[]) value;\n-                DerOutputStream[] temps = new\n-                    DerOutputStream[values.length];\n-\n-                for (int i=0; i < values.length; i++) {\n-                    temps[i] = new DerOutputStream();\n-                    temps[i].putPrintableString(values[i]);\n-                }\n-                temp.putOrderedSetOf(DerValue.tag_Set, temps);\n-            } \/\/ close scope\n-            break;\n-\n-        case 9:     \/\/ extended-certificate attribute -- not supported\n-            throw new IllegalArgumentException(\"PKCS9 extended-certificate \" +\n-                                  \"attribute not supported.\");\n-            \/\/ break unnecessary\n-        case 10:    \/\/ issuerAndserialNumber attribute -- not supported\n-            throw new IllegalArgumentException(\"PKCS9 IssuerAndSerialNumber \" +\n-                                  \"attribute not supported.\");\n-            \/\/ break unnecessary\n-        case 11:    \/\/ RSA DSI proprietary\n-        case 12:    \/\/ RSA DSI proprietary\n-            throw new IllegalArgumentException(\"PKCS9 RSA DSI attributes \" +\n-                                  \"11 and 12, not supported.\");\n-            \/\/ break unnecessary\n-        case 13:    \/\/ S\/MIME unused attribute\n-            throw new IllegalArgumentException(\"PKCS9 attribute #13 not supported.\");\n-            \/\/ break unnecessary\n-\n-        case 14:     \/\/ ExtensionRequest\n-            {\n-                DerOutputStream temp2 = new DerOutputStream();\n-                CertificateExtensions exts = (CertificateExtensions)value;\n-                exts.encode(temp2, true);\n-                temp.write(DerValue.tag_Set, temp2.toByteArray());\n-            }\n-            break;\n-        case 15:    \/\/ SMIMECapability\n-            throw new IllegalArgumentException(\"PKCS9 attribute #15 not supported.\");\n-            \/\/ break unnecessary\n-\n-        case 16:    \/\/ SigningCertificate\n-            {\n-                DerOutputStream temp2 = new DerOutputStream();\n-                SigningCertificateInfo info = (SigningCertificateInfo)value;\n-                temp2.writeBytes(info.toByteArray());\n-                temp.write(DerValue.tag_Set, temp2.toByteArray());\n-            }\n-            break;\n-        case 17:    \/\/ SignatureTimestampToken\n-        case 18:    \/\/ CMSAlgorithmProtection\n-            temp.write(DerValue.tag_Set, (byte[])value);\n-            break;\n-\n-        default: \/\/ can't happen\n+            temp.putOrderedSetOf(DerValue.tag_Set, temps);\n@@ -657,1 +351,1 @@\n-        return index != -1;\n+        return info != null;\n@@ -678,1 +372,1 @@\n-        return index == -1 || SINGLE_VALUED[index];\n+        return info == null || info.singleValued();\n@@ -688,0 +382,2 @@\n+    public static Set<ObjectIdentifier> getOIDs() { return infoMap.keySet(); }\n+\n@@ -727,1 +423,1 @@\n-        if (index == -1) {\n+        if (info == null) {\n@@ -734,1 +430,1 @@\n-        if (index == -1 || SINGLE_VALUED[index]) {\n+        if (info == null || info.singleValued()) {\n@@ -763,3 +459,3 @@\n-    static int indexOf(Object obj, Object[] a, int start) {\n-        for (int i=start; i < a.length; i++) {\n-            if (obj.equals(a[i])) return i;\n+    static int indexOf(byte b, byte[] bs, int start) {\n+        for (int i=start; i < bs.length; i++) {\n+            if (b == bs[i]) return i;\n@@ -785,1 +481,1 @@\n-    private void throwTagException(Byte tag)\n+    private void throwTagException(byte tag)\n@@ -787,1 +483,1 @@\n-        Byte[] expectedTags = PKCS9_VALUE_TAGS[index];\n+        byte[] expectedTags = info.valueTags();\n@@ -794,1 +490,1 @@\n-        msg.append(tag.toString());\n+        msg.append(tag);\n@@ -797,1 +493,1 @@\n-        msg.append(expectedTags[0].toString());\n+        msg.append(expectedTags[0]);\n@@ -801,1 +497,1 @@\n-            msg.append(expectedTags[i].toString());\n+            msg.append(expectedTags[i]);\n@@ -806,1 +502,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":201,"deletions":505,"binary":false,"changes":706,"status":"modified"},{"patch":"@@ -270,21 +270,0 @@\n-\n-    \/**\n-     * Get an array of all attributes in this set, in order of OID.\n-     *\/\n-    public PKCS9Attribute[] getAttributes() {\n-        PKCS9Attribute[] attribs = new PKCS9Attribute[attributes.size()];\n-\n-        int j = 0;\n-        for (int i=1; i < PKCS9Attribute.PKCS9_OIDS.length &&\n-                      j < attribs.length; i++) {\n-            if (PKCS9Attribute.PKCS9_OIDS[i] == null) {\n-                continue;\n-            }\n-            attribs[j] = getAttribute(PKCS9Attribute.PKCS9_OIDS[i]);\n-\n-            if (attribs[j] != null)\n-                j++;\n-        }\n-        return attribs;\n-    }\n-\n@@ -321,0 +300,1 @@\n+    @Override\n@@ -328,5 +308,2 @@\n-        for (int i = 1; i < PKCS9Attribute.PKCS9_OIDS.length; i++) {\n-            if (PKCS9Attribute.PKCS9_OIDS[i] == null) {\n-                continue;\n-            }\n-            value = getAttribute(PKCS9Attribute.PKCS9_OIDS[i]);\n+        for (ObjectIdentifier oid : PKCS9Attribute.getOIDs()) {\n+            if (oid == null) continue;\n@@ -334,0 +311,1 @@\n+            value = getAttribute(oid);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attributes.java","additions":4,"deletions":26,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,19 +34,0 @@\n- *\n- * SunJSSE now supports an experimental FIPS compliant mode when used with an\n- * appropriate FIPS certified crypto provider. In FIPS mode, we:\n- *  . allow only TLS 1.0 or later\n- *  . allow only FIPS approved ciphersuites\n- *  . perform all crypto in the FIPS crypto provider\n- *\n- * It is currently not possible to use both FIPS compliant SunJSSE and\n- * standard JSSE at the same time because of the various static data structures\n- * we use.\n- *\n- * However, we do want to allow FIPS mode to be enabled at runtime and without\n- * editing the java.security file. That means we need to allow\n- * Security.removeProvider(\"SunJSSE\") to work, which creates an instance of\n- * this class in non-FIPS mode. That is why we delay the selection of the mode\n- * as long as possible. This is until we open an SSL\/TLS connection and the\n- * data structures need to be initialized or until SunJSSE is initialized in\n- * FIPS mode.\n- *\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SunJSSE.java","additions":1,"deletions":20,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -0,0 +1,20 @@\n+Owner: CN=Certainly Root E1, O=Certainly, C=US\n+Issuer: CN=Certainly Root E1, O=Certainly, C=US\n+Serial number: 62533b1470333275cf98d9ab9bfccf8\n+Valid from: Thu Apr 01 00:00:00 GMT 2021 until: Sun Apr 01 00:00:00 GMT 2046\n+Signature algorithm name: SHA384withECDSA\n+Subject Public Key Algorithm: 384-bit EC (secp384r1) key\n+Version: 3\n+-----BEGIN CERTIFICATE-----\n+MIIB9zCCAX2gAwIBAgIQBiUzsUcDMydc+Y2aub\/M+DAKBggqhkjOPQQDAzA9MQsw\n+CQYDVQQGEwJVUzESMBAGA1UEChMJQ2VydGFpbmx5MRowGAYDVQQDExFDZXJ0YWlu\n+bHkgUm9vdCBFMTAeFw0yMTA0MDEwMDAwMDBaFw00NjA0MDEwMDAwMDBaMD0xCzAJ\n+BgNVBAYTAlVTMRIwEAYDVQQKEwlDZXJ0YWlubHkxGjAYBgNVBAMTEUNlcnRhaW5s\n+eSBSb290IEUxMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE3m\/4fxzf7flHh4axpMCK\n++IKXgOqPyEpeKn2IaKcBYhSRJHpcnqMXfYqGITQYUBsQ3tA3SybHGWCA6TS9YBk2\n+QNYphwk8kXr2vBMj3VlOBF7PyAIcGFPBMdjaIOlEjeR2o0IwQDAOBgNVHQ8BAf8E\n+BAMCAQYwDwYDVR0TAQH\/BAUwAwEB\/zAdBgNVHQ4EFgQU8ygYy2R17ikq6+2uI1g4\n+hevIIgcwCgYIKoZIzj0EAwMDaAAwZQIxALGOWiDDshliTd6wT99u0nCK8Z9+aozm\n+ut6Dacpps6kFtZaSF4fC0urQe87YQVt8rgIwRt7qy12a7DLCZRawTDBcMPPaTnOG\n+BtjOiQRINzf43TNRnXCve1XYAS59BWQOhriR\n+-----END CERTIFICATE-----\n","filename":"src\/java.base\/share\/data\/cacerts\/certainlyroote1","additions":20,"deletions":0,"binary":false,"changes":20,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+Owner: CN=Certainly Root R1, O=Certainly, C=US\n+Issuer: CN=Certainly Root R1, O=Certainly, C=US\n+Serial number: 8e0ff94b907168653354f4d44439b7e0\n+Valid from: Thu Apr 01 00:00:00 GMT 2021 until: Sun Apr 01 00:00:00 GMT 2046\n+Signature algorithm name: SHA256withRSA\n+Subject Public Key Algorithm: 4096-bit RSA key\n+Version: 3\n+-----BEGIN CERTIFICATE-----\n+MIIFRzCCAy+gAwIBAgIRAI4P+UuQcWhlM1T01EQ5t+AwDQYJKoZIhvcNAQELBQAw\n+PTELMAkGA1UEBhMCVVMxEjAQBgNVBAoTCUNlcnRhaW5seTEaMBgGA1UEAxMRQ2Vy\n+dGFpbmx5IFJvb3QgUjEwHhcNMjEwNDAxMDAwMDAwWhcNNDYwNDAxMDAwMDAwWjA9\n+MQswCQYDVQQGEwJVUzESMBAGA1UEChMJQ2VydGFpbmx5MRowGAYDVQQDExFDZXJ0\n+YWlubHkgUm9vdCBSMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANA2\n+1B\/q3avk0bbm+yLA3RMNansiExyXPGhjZjKcA7WNpIGD2ngwEc\/csiu+kr+O5MQT\n+vqRoTNoCaBZ0vrLdBORrKt03H2As2\/X3oXyVtwxwhi7xOu9S98zTm\/mLvg7fMbed\n+aFySpvXl8wo0tf97ouSHocavFwDvA5HtqRxOcT3Si2yJ9HiG5mpJoM610rCrm\/b0\n+1C7jcvk2xusVtyWMOvwlDbMicyF0yEqWYZL1LwsYpfSt4u5BvQF5+paMjRcCMLT5\n+r3gajLQ2EBAHBXDQ9DGQilHFhiZ5shGIXsXwClTNSaa\/ApzSRKft43jvRl5tcdF5\n+cBxGX1HpyTfcX35pe0HfNEXgO4T0oYoKNp43zGJS4YkNKPl6I7ENPT2a\/Z2B7yyQ\n+wHtETrtJ4A5KVpK8y7XdeReJkd5hiXSSqOMyhb5OhaRLWcsrxXiOcVTQAjeZjOVJ\n+6uBUcqQRBi8LjMFbvrWhsFNunLhgkR9Za\/kt9JQKl7XsxXYDVBtlUrpMklZRNaBA\n+2CnbrlJ2Oy0wQJuK0EJWtLeIAaSHO1OWzaMWj\/Nmqhexx2DgwUMFDO6bW2BvBlyH\n+Wyf5QBGenDPBt+U1VwV\/J84XIIwc\/PH72jEpSe31C4SnT8H2TsIonPru4K8H+zMR\n+eiFPCyEQtkA6qyI6BJyLm4SGcprSp6XEtHWRqSsjAgMBAAGjQjBAMA4GA1UdDwEB\n+\/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH\/MB0GA1UdDgQWBBTgqj8ljZ9EXME66C6u\n+d0yEPmcM9DANBgkqhkiG9w0BAQsFAAOCAgEAuVevuBLaV4OPaAszHQNTVfSVcOQr\n+PbA56\/qJYv331hgELyE03fFo8NWWWt7CgKPBjcZq91l3rhVkz1t5BXdm6ozTaw3d\n+8VkswTOlMIAVRQdFGjEitpIAq5lNOo93r6kiyi9jyhXWx8bwPWz8HA2YEGGeEaIi\n+1wrykXprOQ4vMMM2SZ\/g6Q8CRFA3lFV96p\/2O7qUpUzpvD5RtOjKkjZUbVwlKNrd\n+rRT90+7iIgXr0PK3aBLXWopBGsaSpVo7Y0VPv+E6dyIvXL9G+VoDhRNCX8reU9di\n+taY1BMJH\/5n9hN9czulegChB8n3nHpDYT3Y+gjwN\/KUD+nsa2UUeYNrEjvn8K8l7\n+lcUq\/6qJ34IxD3L\/DCfXCh5WAFAeDJDBlrXYFIW7pw0WwfgHJBu6haEaBQmAupVj\n+yTrsJZ9\/nbqkRxWbRHDxakvWOF5D8xh+UG7pWijmZeZ3Gzr9Hb4DJqPb1OG7fpYn\n+Kx3upPvaJVQTA945xsMfTZDsjxtK0hzthZU4UHlG1sGQUDGpXJpuHfUzVounmdLy\n+yCwzk5Iwx06MZTMQZBf9JBeW0Y3COmor6xOLRPIh80oat3df1+2IpHLlOR+Vnb5n\n+wXARPbv0+Em34yaXOp\/SX3z7wJl8OSngex2\/DaeP0ik0biQVy96QXr8axGbqwua6\n+OV+KmalBWQewLK8=\n+-----END CERTIFICATE-----\n","filename":"src\/java.base\/share\/data\/cacerts\/certainlyrootr1","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -1,1 +1,1 @@\n-## zlib v1.2.13\n+## zlib v1.3.1\n@@ -6,1 +6,1 @@\n-Copyright (C) 1995-2022 Jean-loup Gailly and Mark Adler\n+Copyright (C) 1995-2024 Jean-loup Gailly and Mark Adler\n","filename":"src\/java.base\/share\/legal\/zlib.md","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-To launch a single source-file program:\n+To launch a source-file program:\n@@ -103,1 +103,1 @@\n-Only used to launch a single source-file program.\n+Only used to launch a source-file program.\n@@ -106,2 +106,1 @@\n-See \\f[B]Using Source-File Mode to Launch Single-File Source-Code\n-Programs\\f[R]\n+See \\f[B]Using Source-File Mode to Launch Source-Code Programs\\f[R]\n@@ -131,2 +130,2 @@\n-See \\f[B]Using Source-File Mode to Launch Single-File Source-Code\n-Programs\\f[R] for a description of using the source-file mode.\n+See \\f[B]Using Source-File Mode to Launch Source-Code Programs\\f[R] for\n+a description of using the source-file mode.\n@@ -160,1 +159,1 @@\n-.SH USING SOURCE-FILE MODE TO LAUNCH SINGLE-FILE SOURCE-CODE PROGRAMS\n+.SH USING SOURCE-FILE MODE TO LAUNCH SOURCE-CODE PROGRAMS\n@@ -208,1 +207,1 @@\n-contained a class named \\f[V]hello.World\\f[R], then the source-file mode\n+contained a class named \\f[V]HelloWorld\\f[R], then the source-file mode\n@@ -215,2 +214,0 @@\n-The example illustrates that the class can be in a named package, and\n-does not need to be in the unnamed package.\n@@ -218,2 +215,1 @@\n-following two commands where \\f[V]hello.World\\f[R] is the name of the\n-class in the package:\n+following two commands:\n@@ -223,2 +219,2 @@\n-javac -d <memory> HelloWorld.java\n-java -cp <memory> hello.World\n+javac -d <memory> --source-path <source-root> HelloWorld.java\n+java --class-path <memory> HelloWorld\n@@ -228,0 +224,2 @@\n+where \\f[V]<source-root>\\f[R] is computed\n+.PP\n@@ -256,3 +254,18 @@\n-.IP \\[bu] 2\n-No other source files are found and compiled, as if the source path is\n-set to an empty value.\n+These include:\n+\\f[V]--class-path\\f[R]\/\\f[V]-classpath\\f[R]\/\\f[V]-cp\\f[R],\n+\\f[V]--module-path\\f[R]\/\\f[V]-p\\f[R], \\f[V]--add-exports\\f[R],\n+\\f[V]--add-modules\\f[R], \\f[V]--limit-modules\\f[R],\n+\\f[V]--patch-module\\f[R], \\f[V]--upgrade-module-path\\f[R],\n+\\f[V]--enable-preview\\f[R].\n+.IP \\[bu] 2\n+The root of the source tree, \\f[V]<source-root>\\f[R] is computed from\n+the package of the class being launched.\n+For example, if \\f[V]HelloWorld.java\\f[R] declared its classes to be in\n+the \\f[V]hello\\f[R] package, then the file \\f[V]HelloWorld.java\\f[R] is\n+expected to reside in the directory \\f[V]somedir\/hello\/\\f[R].\n+In this case, \\f[V]somedir\\f[R] is computed to be the root of the source\n+tree.\n+.IP \\[bu] 2\n+The root of the source tree serves as the source-path for compilation,\n+so that other source files found in that tree and are needed by\n+\\f[V]HelloWorld\\f[R] could be compiled.\n@@ -269,1 +282,6 @@\n-The source file is compiled in the context of an unnamed module.\n+If a \\f[V]module-info.java\\f[R] file exists in the\n+\\f[V]<source-root>\\f[R] directory, its module declaration is used to\n+define a named module that will contain all the classes compiled from\n+\\f[V].java\\f[R] files in the source tree.\n+If \\f[V]module-info.java\\f[R] does not exist, all the classes compiled\n+from source files will be compiled in the context of the unnamed module.\n@@ -271,2 +289,2 @@\n-The source file should contain one or more top-level classes, the first\n-of which is taken as the class to be executed.\n+The source file that is launched should contain one or more top-level\n+classes, the first of which is taken as the class to be executed.\n@@ -274,4 +292,4 @@\n-The compiler does not enforce the optional restriction defined at the\n-end of JLS 7.6, that a type in a named package should exist in a file\n-whose name is composed from the type name followed by the\n-\\f[V].java\\f[R] extension.\n+For the source file that is launched, the compiler does not enforce the\n+optional restriction defined at the end of JLS 7.6, that a type in a\n+named package should exist in a file whose name is composed from the\n+type name followed by the \\f[V].java\\f[R] extension.\n@@ -279,3 +297,3 @@\n-If the source file contains errors, appropriate error messages are\n-written to the standard error stream, and the launcher exits with a\n-non-zero exit code.\n+If a source file contains errors, appropriate error messages are written\n+to the standard error stream, and the launcher exits with a non-zero\n+exit code.\n@@ -287,2 +305,1 @@\n-It must contain a declaration of the standard\n-\\f[V]public static void main(String[])\\f[R] method.\n+It must contain a declaration of an entry \\f[V]main\\f[R] method.\n@@ -293,4 +310,9 @@\n-refer to any classes declared in the source file.\n-.IP \\[bu] 2\n-The compiled classes are executed in the context of an unnamed module,\n-as though \\f[V]--add-modules=ALL-DEFAULT\\f[R] is in effect.\n+refer to any classes declared in source files.\n+.IP \\[bu] 2\n+If a \\f[V]module-info.java\\f[R] file exists in the\n+\\f[V]<source-root>\\f[R] directory, then all the classes compiled from\n+\\f[V].java\\f[R] files in the source tree will be in that module, which\n+will serve as the root module for the execution of the program.\n+If \\f[V]module-info.java\\f[R] does not exist, the compiled classes are\n+executed in the context of an unnamed module, as though\n+\\f[V]--add-modules=ALL-DEFAULT\\f[R] is in effect.\n@@ -301,1 +323,1 @@\n-are passed to the standard main method in the obvious way.\n+are passed to the main method in the obvious way.\n@@ -306,2 +328,2 @@\n-See \\f[B]JEP 330: Launch Single-File Source-Code Programs\\f[R]\n-[https:\/\/openjdk.org\/jeps\/330] for complete details.\n+See \\f[B]JEP 458: Launch Multi-File Source-Code Programs\\f[R]\n+[https:\/\/openjdk.org\/jeps\/458] for complete details.\n@@ -1463,0 +1485,11 @@\n+\\f[V]-XX:TrimNativeHeapInterval=\\f[R]\\f[I]millis\\f[R]\n+Interval, in ms, at which the JVM will trim the native heap.\n+Lower values will reclaim memory more eagerly at the cost of higher\n+overhead.\n+A value of 0 (default) disables native heap trimming.\n+Native heap trimming is performed in a dedicated thread.\n+.RS\n+.PP\n+This option is only supported on Linux with GNU C Library (glibc).\n+.RE\n+.TP\n","filename":"src\/java.base\/share\/man\/java.1","additions":70,"deletions":37,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,1 +168,1 @@\n-         * @implNote This implementation returns true if the name includes\n+         * @implSpec This implementation returns true if the name includes\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/JavaFileManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,0 +82,2 @@\n+     * {@inheritDoc FileObject}\n+     * @implSpec\n@@ -83,3 +85,1 @@\n-     * UnsupportedOperationException}.  Subclasses can change this\n-     * behavior as long as the contract of {@link FileObject} is\n-     * obeyed.\n+     * UnsupportedOperationException}.\n@@ -93,0 +93,2 @@\n+     * {@inheritDoc FileObject}\n+     * @implSpec\n@@ -94,3 +96,1 @@\n-     * UnsupportedOperationException}.  Subclasses can change this\n-     * behavior as long as the contract of {@link FileObject} is\n-     * obeyed.\n+     * UnsupportedOperationException}.\n@@ -104,3 +104,4 @@\n-     * Wraps the result of {@linkplain #getCharContent} in a Reader.\n-     * Subclasses can change this behavior as long as the contract of\n-     * {@link FileObject} is obeyed.\n+     * {@inheritDoc FileObject}\n+     * @implSpec\n+     * This implementation wraps the result of {@link #getCharContent}\n+     * in a {@link Reader}.\n@@ -126,0 +127,2 @@\n+     * {@inheritDoc FileObject}\n+     * @implSpec\n@@ -127,3 +130,1 @@\n-     * UnsupportedOperationException}.  Subclasses can change this\n-     * behavior as long as the contract of {@link FileObject} is\n-     * obeyed.\n+     * UnsupportedOperationException}.\n@@ -137,3 +138,4 @@\n-     * Wraps the result of openOutputStream in a Writer.  Subclasses\n-     * can change this behavior as long as the contract of {@link\n-     * FileObject} is obeyed.\n+     * {@inheritDoc FileObject}\n+     * @implSpec\n+     * This implementation wraps the result of {@link\n+     * #openOutputStream} in a {@link Writer}.\n@@ -152,3 +154,3 @@\n-     * This implementation returns {@code 0L}.  Subclasses can change\n-     * this behavior as long as the contract of {@link FileObject} is\n-     * obeyed.\n+     * {@inheritDoc FileObject}\n+     * @implSpec\n+     * This implementation returns {@code 0L}.\n@@ -164,3 +166,3 @@\n-     * This implementation does nothing.  Subclasses can change this\n-     * behavior as long as the contract of {@link FileObject} is\n-     * obeyed.\n+     * {@inheritDoc FileObject}\n+     * @implSpec\n+     * This implementation does nothing.\n@@ -184,0 +186,2 @@\n+     * {@inheritDoc JavaFileObject}\n+     * @implSpec\n@@ -193,3 +197,0 @@\n-     *\n-     * <p>Subclasses can change this behavior as long as the contract\n-     * of {@link JavaFileObject} is obeyed.\n@@ -206,3 +207,3 @@\n-     * This implementation returns {@code null}.  Subclasses can\n-     * change this behavior as long as the contract of\n-     * {@link JavaFileObject} is obeyed.\n+     * {@inheritDoc JavaFileObject}\n+     * @implSpec\n+     * This implementation returns {@code null}.\n@@ -214,3 +215,3 @@\n-     * This implementation returns {@code null}.  Subclasses can\n-     * change this behavior as long as the contract of\n-     * {@link JavaFileObject} is obeyed.\n+     * {@inheritDoc JavaFileObject}\n+     * @implSpec\n+     * This implementation returns {@code null}.\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/SimpleJavaFileObject.java","additions":32,"deletions":31,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-    jdk_message = (MidiMessage*) calloc(sizeof(MidiMessage), 1);\n+    jdk_message = (MidiMessage*) calloc(1, sizeof(MidiMessage));\n","filename":"src\/java.desktop\/linux\/native\/libjsound\/PLATFORM_API_LinuxOS_ALSA_MidiIn.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -386,1 +386,1 @@\n-    (*handle) = (MidiDeviceHandle*) calloc(sizeof(MidiDeviceHandle), 1);\n+    (*handle) = (MidiDeviceHandle*) calloc(1, sizeof(MidiDeviceHandle));\n","filename":"src\/java.desktop\/linux\/native\/libjsound\/PLATFORM_API_LinuxOS_ALSA_MidiUtils.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -246,0 +246,9 @@\n+\n+                if (!bufferComponent.isOpaque()) {\n+                    final SunGraphics2D g2d = (SunGraphics2D) bsg;\n+                    final Color oldBg = g2d.getBackground();\n+                    g2d.setBackground(paintingComponent.getBackground());\n+                    g2d.clearRect(x, y, w, h);\n+                    g2d.setBackground(oldBg);\n+                }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/BufferStrategyPaintManager.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1742,1 +1742,1 @@\n-     * value.  Subsequent calls to <code>getMaximumSize<\/code> will always\n+     * value.  Subsequent calls to {@code getMaximumSize} will always\n@@ -1744,1 +1744,1 @@\n-     * to compute it.  Setting the maximum size to <code>null<\/code>\n+     * to compute it. Setting the maximum size to {@code null}\n@@ -1746,0 +1746,3 @@\n+     * <p>\n+     * Subclasses may choose to override this by returning their own maximum size\n+     * in the {@code getMaximumSize} method.\n@@ -1783,1 +1786,1 @@\n-     * value.  Subsequent calls to <code>getMinimumSize<\/code> will always\n+     * value.  Subsequent calls to {@code getMinimumSize} will always\n@@ -1785,1 +1788,1 @@\n-     * to compute it.  Setting the minimum size to <code>null<\/code>\n+     * to compute it. Setting the minimum size to {@code null}\n@@ -1787,0 +1790,3 @@\n+     * <p>\n+     * Subclasses may choose to override this by returning their own minimum size\n+     * in the {@code getMinimumSize} method.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JComponent.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -756,1 +756,12 @@\n-    \/\/ PENDING(hmuller) - the next three methods should be removed\n+    \/**\n+     * Unlike most components, {@code JScrollBar} derives the minimum size from\n+     * the preferred size in one axis and a fixed minimum size in the other.\n+     * Thus, it overrides {@code JComponent.setMinimumSize} contract\n+     * that subsequent calls to {@code getMinimumSize} will return the\n+     * same value as set in {@code JComponent.setMinimumSize}.\n+     *\n+     * @param minimumSize the new minimum size of this component\n+     *\/\n+    public void setMinimumSize(Dimension minimumSize) {\n+        super.setMinimumSize(minimumSize);\n+    }\n@@ -759,1 +770,15 @@\n-     * The scrollbar is flexible along it's scrolling axis and\n+     * Unlike most components, {@code JScrollBar} derives the maximum size from\n+     * the preferred size in one axis and a fixed maximum size in the other.\n+     * Thus, it overrides {@code JComponent.setMaximumSize} contract\n+     * that subsequent calls to {@code getMaximumSize} will return the\n+     * same value as set in {@code JComponent.setMaximumSize}.\n+     *\n+     * @param maximumSize the desired maximum allowable size\n+     *\/\n+    public void setMaximumSize(Dimension maximumSize) {\n+        super.setMaximumSize(maximumSize);\n+    }\n+\n+    \/**\n+     * Returns the minimum size for the {@code JScrollBar}.\n+     * The scrollbar is flexible along its scrolling axis and\n@@ -761,0 +786,5 @@\n+     * As specified in {@code setMinimumSize} JScrollBar will derive the\n+     * minimum size from the preferred size in one axis and a\n+     * fixed minimum size in the other.\n+     *\n+     * @return the minimum size as specified above\n@@ -772,1 +802,2 @@\n-     * The scrollbar is flexible along it's scrolling axis and\n+     * Returns the maximum size for the {@code JScrollBar}.\n+     * The scrollbar is flexible along its scrolling axis and\n@@ -774,0 +805,5 @@\n+     * As specified in {@code setMaximumSize} JScrollBar will derive the\n+     * maximum size from the preferred size in one axis and a\n+     * fixed maximum size in the other.\n+     *\n+     * @return the maximum size as specified above\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JScrollBar.java","additions":40,"deletions":4,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import java.awt.IllegalComponentStateException;\n@@ -2340,1 +2341,6 @@\n-             Point parentLocation = parent.getLocationOnScreen();\n+             Point parentLocation;\n+             try {\n+                 parentLocation = parent.getLocationOnScreen();\n+             } catch (IllegalComponentStateException icse) {\n+                 return null;\n+             }\n@@ -2342,0 +2348,3 @@\n+             if (parentLocation == null || componentLocation == null) {\n+                 return null;\n+             }\n@@ -2348,1 +2357,1 @@\n-             return new Point(r.x, r.y);\n+             return r == null ? null : new Point(r.x, r.y);\n@@ -2365,1 +2374,1 @@\n-            return new Dimension(r.width, r.height);\n+            return r == null ? null : new Dimension(r.width, r.height);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTabbedPane.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n-import java.util.*;\n-import java.net.URL;\n+import java.io.IOException;\n+import java.io.StringReader;\n@@ -31,5 +31,32 @@\n-import java.io.*;\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.text.*;\n-import javax.swing.undo.*;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.Hashtable;\n+import java.util.Stack;\n+import java.util.Vector;\n+\n+import javax.swing.ButtonGroup;\n+import javax.swing.DefaultButtonModel;\n+import javax.swing.DefaultComboBoxModel;\n+import javax.swing.DefaultListModel;\n+import javax.swing.JToggleButton;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.EventListenerList;\n+import javax.swing.event.UndoableEditEvent;\n+import javax.swing.text.AbstractDocument;\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.DefaultEditorKit;\n+import javax.swing.text.DefaultStyledDocument;\n+import javax.swing.text.Document;\n+import javax.swing.text.Element;\n+import javax.swing.text.ElementIterator;\n+import javax.swing.text.GapContent;\n+import javax.swing.text.MutableAttributeSet;\n+import javax.swing.text.PlainDocument;\n+import javax.swing.text.SimpleAttributeSet;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.undo.UndoableEdit;\n+\n@@ -37,0 +64,1 @@\n+\n@@ -2476,1 +2504,1 @@\n-            tagMap.put(HTML.Tag.S, ca);\n+            tagMap.put(HTML.Tag.S, conv);\n@@ -3449,1 +3477,1 @@\n-                } else if (t == HTML.Tag.STRIKE) {\n+                } else if (t == HTML.Tag.STRIKE || t == HTML.Tag.S) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTMLDocument.java","additions":38,"deletions":10,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-#\t         Cursor.<name>.<geom>.Name=<localized name>\n+#                Cursor.<name>.<geom>.Name=<localized name>\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/resources\/cursors\/cursors.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2399,0 +2399,1 @@\n+                    bandGraphics.translate(-deviceAddressableX, deviceAddressableY);\n@@ -2421,1 +2422,1 @@\n-                        int bandX = deviceLeft - deviceAddressableX;\n+                        int bandX = deviceLeft;\n@@ -2426,1 +2427,1 @@\n-                        int bandY = deviceTop + bandTop - deviceAddressableY;\n+                        int bandY = deviceTop;\n@@ -2437,1 +2438,1 @@\n-                        printBand(data, bandX, bandY, bandWidth, bandHeight);\n+                        printBand(data, bandX, bandTop + bandY, bandWidth, bandHeight);\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/RasterPrinterJob.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#\tPostScript printer property file for Java 2D printing.\n+#       PostScript printer property file for Java 2D printing.\n","filename":"src\/java.desktop\/share\/conf\/psfontj2d.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -215,2 +215,2 @@\n-\t\t    GNU GENERAL PUBLIC LICENSE\n-\t\t       Version 2, June 1991\n+                    GNU GENERAL PUBLIC LICENSE\n+                       Version 2, June 1991\n@@ -223,1 +223,1 @@\n-\t\t\t    Preamble\n+                            Preamble\n@@ -273,1 +273,1 @@\n-\t\t    GNU GENERAL PUBLIC LICENSE\n+                    GNU GENERAL PUBLIC LICENSE\n@@ -472,1 +472,1 @@\n-\t\t\t    NO WARRANTY\n+                            NO WARRANTY\n@@ -494,1 +494,1 @@\n-\t\t     END OF TERMS AND CONDITIONS\n+                     END OF TERMS AND CONDITIONS\n@@ -496,1 +496,1 @@\n-\t    How to Apply These Terms to Your New Programs\n+            How to Apply These Terms to Your New Programs\n","filename":"src\/java.desktop\/share\/legal\/freetype.md","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    void *nullscaler = calloc(sizeof(GlyphInfo), 1);\n+    void *nullscaler = calloc(1, sizeof(GlyphInfo));\n","filename":"src\/java.desktop\/share\/native\/libfontmanager\/sunFont.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import static java.util.concurrent.TimeUnit.SECONDS;\n@@ -50,0 +51,3 @@\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n@@ -243,0 +247,66 @@\n+    private static volatile Boolean shouldDisableSystemTray = null;\n+\n+    \/**\n+     * There is an issue displaying the xembed icons in appIndicators\n+     * area with certain Gnome Shell versions.\n+     * To avoid any loss of quality of service, we are disabling\n+     * SystemTray support in such cases.\n+     *\n+     * @return true if system tray should be disabled\n+     *\/\n+    public boolean shouldDisableSystemTray() {\n+        Boolean result = shouldDisableSystemTray;\n+        if (result == null) {\n+            synchronized (GTK_LOCK) {\n+                result = shouldDisableSystemTray;\n+                if (result == null) {\n+                    if (\"gnome\".equals(getDesktop())) {\n+                        @SuppressWarnings(\"removal\")\n+                        Integer gnomeShellMajorVersion =\n+                                AccessController\n+                                        .doPrivileged((PrivilegedAction<Integer>)\n+                                                this::getGnomeShellMajorVersion);\n+\n+                        if (gnomeShellMajorVersion == null\n+                                || gnomeShellMajorVersion < 45) {\n+\n+                            return shouldDisableSystemTray = true;\n+                        }\n+                    }\n+                    shouldDisableSystemTray = result = false;\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+\n+    private Integer getGnomeShellMajorVersion() {\n+        try {\n+            Process process =\n+                new ProcessBuilder(\"\/usr\/bin\/gnome-shell\", \"--version\")\n+                        .start();\n+            try (InputStreamReader isr = new InputStreamReader(process.getInputStream());\n+                 BufferedReader reader = new BufferedReader(isr)) {\n+\n+                if (process.waitFor(2, SECONDS) &&  process.exitValue() == 0) {\n+                    String line = reader.readLine();\n+                    if (line != null) {\n+                        String[] versionComponents = line\n+                                .replaceAll(\"[^\\\\d.]\", \"\")\n+                                .split(\"\\\\.\");\n+\n+                        if (versionComponents.length >= 1) {\n+                            return Integer.parseInt(versionComponents[0]);\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (IOException\n+                 | InterruptedException\n+                 | IllegalThreadStateException\n+                 | NumberFormatException ignored) {\n+        }\n+\n+        return null;\n+    }\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/UNIXToolkit.java","additions":71,"deletions":1,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import sun.awt.UNIXToolkit;\n@@ -51,0 +52,1 @@\n+    private final boolean shouldDisableSystemTray;\n@@ -56,1 +58,2 @@\n-        selection.addSelectionListener(this);\n+        UNIXToolkit tk = (UNIXToolkit)Toolkit.getDefaultToolkit();\n+        shouldDisableSystemTray = tk.shouldDisableSystemTray();\n@@ -58,2 +61,2 @@\n-        long selection_owner = selection.getOwner(SCREEN);\n-        available = (selection_owner != XConstants.None);\n+        if (!shouldDisableSystemTray) {\n+            selection.addSelectionListener(this);\n@@ -61,2 +64,6 @@\n-        if (log.isLoggable(PlatformLogger.Level.FINE)) {\n-            log.fine(\" check if system tray is available. selection owner: \" + selection_owner);\n+            long selection_owner = selection.getOwner(SCREEN);\n+            available = (selection_owner != XConstants.None);\n+\n+            if (log.isLoggable(PlatformLogger.Level.FINE)) {\n+                log.fine(\" check if system tray is available. selection owner: \" + selection_owner);\n+            }\n@@ -67,0 +74,4 @@\n+        if (shouldDisableSystemTray) {\n+            return;\n+        }\n+\n@@ -80,0 +91,4 @@\n+        if (shouldDisableSystemTray) {\n+            return;\n+        }\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XSystemTrayPeer.java","additions":21,"deletions":6,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,2 +156,4 @@\n-    jclass graphicsEnvClass = env->FindClass(\n-        \"java\/awt\/GraphicsEnvironment\");\n+    \/\/ be on the safe side and avoid JNI warnings by calling ExceptionCheck\n+    \/\/ an accumulated exception is not cleared\n+    env->ExceptionCheck();\n+    jclass graphicsEnvClass = env->FindClass(\"java\/awt\/GraphicsEnvironment\");\n@@ -160,2 +162,1 @@\n-        headlessFn = env->GetStaticMethodID(\n-            graphicsEnvClass, \"isHeadless\", \"()Z\");\n+        headlessFn = env->GetStaticMethodID(graphicsEnvClass, \"isHeadless\", \"()Z\");\n@@ -163,2 +164,1 @@\n-            return env->CallStaticBooleanMethod(graphicsEnvClass,\n-                                                headlessFn);\n+            return env->CallStaticBooleanMethod(graphicsEnvClass, headlessFn);\n@@ -170,1 +170,0 @@\n-\n@@ -180,3 +179,3 @@\n-    DWORD   lastError = GetLastError();\n-    LPSTR       msgBuffer = NULL;\n-    int     ret = IDNO;\n+    DWORD lastError = GetLastError();\n+    LPSTR msgBuffer = NULL;\n+    int ret = IDNO;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Debug.cpp","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tDefault Logging Configuration File\n+#       Default Logging Configuration File\n@@ -10,1 +10,1 @@\n-#  \tGlobal properties\n+#       Global properties\n","filename":"src\/java.logging\/share\/conf\/logging.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n-# \t\tcorbaObject LDAP entry\n+#                corbaObject LDAP entry\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/jndiprovider.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -628,1 +628,6 @@\n-        p1.setNeedClientAuth(p.getNeedClientAuth());\n+        if (p.getNeedClientAuth()) {\n+            p1.setNeedClientAuth(true);\n+        }\n+        if (p.getWantClientAuth()) {\n+            p1.setWantClientAuth(true);\n+        }\n@@ -636,1 +641,0 @@\n-        p1.setWantClientAuth(p.getWantClientAuth());\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/Utils.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -496,0 +496,1 @@\n+            boolean explicitType = ref.qualifierExpression != null;\n@@ -498,1 +499,1 @@\n-                    : findMethod(sym, memberName, paramTypes, true);\n+                    : findMethod(sym, memberName, paramTypes, true, explicitType);\n@@ -503,1 +504,1 @@\n-                        : findMethod(sym, memberName, paramTypes, false);\n+                        : findMethod(sym, memberName, paramTypes, false, explicitType);\n@@ -511,1 +512,1 @@\n-            VarSymbol vsym = (ref.paramTypes != null) ? null : findField(sym, memberName);\n+            VarSymbol vsym = (ref.paramTypes != null) ? null : findField(sym, memberName, explicitType);\n@@ -553,2 +554,2 @@\n-    private VarSymbol findField(ClassSymbol tsym, Name fieldName) {\n-        return searchField(tsym, fieldName, new HashSet<>());\n+    private VarSymbol findField(ClassSymbol tsym, Name fieldName, boolean explicitType) {\n+        return searchField(tsym, fieldName, explicitType, new HashSet<>());\n@@ -557,1 +558,1 @@\n-    private VarSymbol searchField(ClassSymbol tsym, Name fieldName, Set<ClassSymbol> searched) {\n+    private VarSymbol searchField(ClassSymbol tsym, Name fieldName, boolean explicitType, Set<ClassSymbol> searched) {\n@@ -572,5 +573,7 @@\n-        ClassSymbol encl = tsym.owner.enclClass();\n-        if (encl != null) {\n-            VarSymbol vsym = searchField(encl, fieldName, searched);\n-            if (vsym != null) {\n-                return vsym;\n+        if (!explicitType) {\n+            ClassSymbol encl = tsym.owner.enclClass();\n+            if (encl != null) {\n+                VarSymbol vsym = searchField(encl, fieldName, explicitType, searched);\n+                if (vsym != null) {\n+                    return vsym;\n+                }\n@@ -583,1 +586,1 @@\n-            VarSymbol vsym = searchField((ClassSymbol) superclass.tsym, fieldName, searched);\n+            VarSymbol vsym = searchField((ClassSymbol) superclass.tsym, fieldName, explicitType, searched);\n@@ -594,1 +597,1 @@\n-            VarSymbol vsym = searchField((ClassSymbol) intf.tsym, fieldName, searched);\n+            VarSymbol vsym = searchField((ClassSymbol) intf.tsym, fieldName, explicitType, searched);\n@@ -614,2 +617,3 @@\n-    private MethodSymbol findMethod(ClassSymbol tsym, Name methodName, List<Type> paramTypes, boolean strict) {\n-        return searchMethod(tsym, methodName, paramTypes, strict, new HashSet<>());\n+    private MethodSymbol findMethod(ClassSymbol tsym, Name methodName, List<Type> paramTypes,\n+                                    boolean strict, boolean explicitType) {\n+        return searchMethod(tsym, methodName, paramTypes, strict, explicitType, new HashSet<>());\n@@ -618,3 +622,2 @@\n-    private MethodSymbol searchMethod(ClassSymbol tsym, Name methodName,\n-                                       List<Type> paramTypes, boolean strict,\n-                                       Set<ClassSymbol> searched) {\n+    private MethodSymbol searchMethod(ClassSymbol tsym, Name methodName, List<Type> paramTypes,\n+                                      boolean strict, boolean explicitType, Set<ClassSymbol> searched) {\n@@ -671,1 +674,2 @@\n-            MethodSymbol msym = searchMethod((ClassSymbol) superclass.tsym, methodName, paramTypes, strict, searched);\n+            MethodSymbol msym = searchMethod((ClassSymbol) superclass.tsym, methodName, paramTypes,\n+                    strict, explicitType, searched);\n@@ -682,1 +686,2 @@\n-            MethodSymbol msym = searchMethod((ClassSymbol) intf.tsym, methodName, paramTypes, strict, searched);\n+            MethodSymbol msym = searchMethod((ClassSymbol) intf.tsym, methodName, paramTypes,\n+                    strict, explicitType, searched);\n@@ -689,5 +694,8 @@\n-        ClassSymbol encl = tsym.owner.enclClass();\n-        if (encl != null) {\n-            MethodSymbol msym = searchMethod(encl, methodName, paramTypes, strict, searched);\n-            if (msym != null) {\n-                return msym;\n+        if (!explicitType) {\n+            ClassSymbol encl = tsym.owner.enclClass();\n+            if (encl != null) {\n+                MethodSymbol msym = searchMethod(encl, methodName, paramTypes, strict,\n+                        explicitType, searched);\n+                if (msym != null) {\n+                    return msym;\n+                }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/api\/JavacTrees.java","additions":33,"deletions":25,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -1082,12 +1082,6 @@\n-                          for (int i = 0; i < heap.nGens(); i++) {\n-                            if (heap.getGen(i).isIn(handle)) {\n-                              if (i == 0) {\n-                                anno = \"NewGen \";\n-                              } else if (i == 1) {\n-                                anno = \"OldGen \";\n-                              } else {\n-                                anno = \"Gen \" + i + \" \";\n-                              }\n-                              bad = false;\n-                              break;\n-                            }\n+                          if (heap.youngGen().isIn(handle)) {\n+                            anno = \"NewGen \";\n+                            bad = false;\n+                          } else if (heap.oldGen().isIn(handle)) {\n+                            anno = \"OldGen \";\n+                            bad = false;\n@@ -1095,1 +1089,0 @@\n-\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/HSDB.java","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -87,6 +87,6 @@\n-  public void spaceIterate(SpaceClosure blk, boolean usedOnly) {\n-    blk.doSpace(eden());\n-    blk.doSpace(from());\n-    if (!usedOnly) {\n-      blk.doSpace(to());\n-    }\n+  \/* Returns \"TRUE\" iff \"p\" points into an allocated object in young\n+     generation. *\/\n+  public boolean isIn(Address p) {\n+    return eden().contains(p)\n+        || from().contains(p)\n+        || to().contains(p);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/serial\/DefNewGeneration.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,141 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+package sun.jvm.hotspot.gc.serial;\n+\n+import java.io.*;\n+import java.util.*;\n+import sun.jvm.hotspot.debugger.*;\n+import sun.jvm.hotspot.gc.shared.*;\n+import sun.jvm.hotspot.memory.*;\n+import sun.jvm.hotspot.runtime.*;\n+import sun.jvm.hotspot.types.*;\n+import sun.jvm.hotspot.utilities.Observable;\n+import sun.jvm.hotspot.utilities.Observer;\n+\n+\/** <P> The (supported) Generation hierarchy currently looks like this: <\/P>\n+\n+    <ul>\n+    <li> Generation\n+      <ul>\n+      <li> TenuredGeneration\n+      <li> DefNewGeneration\n+      <\/ul>\n+    <\/ul>\n+*\/\n+\n+\n+public abstract class Generation extends VMObject {\n+  private static long          reservedFieldOffset;\n+  private static long          virtualSpaceFieldOffset;\n+  protected static final int  K = 1024;\n+  \/\/ Fields for class StatRecord\n+  private static Field         statRecordField;\n+  private static CIntegerField invocationField;\n+\n+  static {\n+    VM.registerVMInitializedObserver(new Observer() {\n+        public void update(Observable o, Object data) {\n+          initialize(VM.getVM().getTypeDataBase());\n+        }\n+      });\n+  }\n+\n+  private static synchronized void initialize(TypeDataBase db) {\n+    Type type = db.lookupType(\"Generation\");\n+\n+    reservedFieldOffset     = type.getField(\"_reserved\").getOffset();\n+    virtualSpaceFieldOffset = type.getField(\"_virtual_space\").getOffset();\n+    \/\/ StatRecord\n+    statRecordField         = type.getField(\"_stat_record\");\n+    type                    = db.lookupType(\"Generation::StatRecord\");\n+    invocationField         = type.getCIntegerField(\"invocations\");\n+  }\n+\n+  public Generation(Address addr) {\n+    super(addr);\n+  }\n+\n+  public int invocations() {\n+    return getStatRecord().getInvocations();\n+  }\n+\n+  \/** The maximum number of object bytes the generation can currently\n+      hold. *\/\n+  public abstract long capacity();\n+\n+  \/** The number of used bytes in the gen. *\/\n+  public abstract long used();\n+\n+  \/** The number of free bytes in the gen. *\/\n+  public abstract long free();\n+\n+  \/** The largest number of contiguous free words in the generation,\n+      including expansion. (VM's version assumes it is called at a\n+      safepoint.)  *\/\n+  public abstract long contiguousAvailable();\n+\n+  public MemRegion reserved() {\n+    return new MemRegion(addr.addOffsetTo(reservedFieldOffset));\n+  }\n+\n+  \/** Returns a region guaranteed to contain all the objects in the\n+      generation. *\/\n+  public MemRegion usedRegion() {\n+    return reserved();\n+  }\n+\n+  \/** Returns \"TRUE\" iff \"p\" points into the reserved area of the\n+     generation. *\/\n+  public boolean isInReserved(Address p) {\n+    return reserved().contains(p);\n+  }\n+\n+  protected VirtualSpace virtualSpace() {\n+    return VMObjectFactory.newObject(VirtualSpace.class, addr.addOffsetTo(virtualSpaceFieldOffset));\n+  }\n+\n+  public abstract String name();\n+\n+  \/** Iteration - do not use for time critical operations *\/\n+  public abstract void liveRegionsIterate(LiveRegionsClosure closure);\n+\n+  public void print() { printOn(System.out); }\n+  public abstract void printOn(PrintStream tty);\n+\n+  public static class StatRecord extends VMObject {\n+    public StatRecord(Address addr) {\n+      super(addr);\n+    }\n+\n+    public int getInvocations() {\n+      return (int) invocationField.getValue(addr);\n+    }\n+\n+  }\n+\n+  private StatRecord getStatRecord() {\n+    return VMObjectFactory.newObject(StatRecord.class, addr.addOffsetTo(statRecordField.getOffset()));\n+  }\n+}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/serial\/Generation.java","additions":141,"deletions":0,"binary":false,"changes":141,"status":"added"},{"patch":"@@ -31,0 +31,1 @@\n+import sun.jvm.hotspot.memory.MemRegion;\n@@ -67,2 +68,2 @@\n-  public int nGens() {\n-    return 2; \/\/ Young + Old\n+  public DefNewGeneration youngGen() {\n+    return VMObjectFactory.newObject(DefNewGeneration.class, youngGenField.getValue(addr));\n@@ -71,15 +72,2 @@\n-  public Generation getGen(int i) {\n-    if (Assert.ASSERTS_ENABLED) {\n-      Assert.that((i == 0) || (i == 1), \"Index \" + i +\n-                  \" out of range (should be 0 or 1)\");\n-    }\n-\n-    switch (i) {\n-    case 0:\n-      return genFactory.newObject(youngGenField.getValue(addr));\n-    case 1:\n-      return genFactory.newObject(oldGenField.getValue(addr));\n-    default:\n-      \/\/ no generation for i, and assertions disabled.\n-      return null;\n-    }\n+  public TenuredGeneration oldGen() {\n+    return VMObjectFactory.newObject(TenuredGeneration.class, oldGenField.getValue(addr));\n@@ -89,8 +77,1 @@\n-    for (int i = 0; i < nGens(); i++) {\n-      Generation gen = getGen(i);\n-      if (gen.isIn(a)) {\n-        return true;\n-      }\n-    }\n-\n-    return false;\n+    return youngGen().isIn(a) || oldGen().isIn(a);\n@@ -101,3 +82,2 @@\n-    for (int i = 0; i < nGens(); i++) {\n-      capacity += getGen(i).capacity();\n-    }\n+    capacity += youngGen().capacity();\n+    capacity += oldGen().capacity();\n@@ -109,3 +89,2 @@\n-    for (int i = 0; i < nGens(); i++) {\n-      used += getGen(i).used();\n-    }\n+    used += youngGen().used();\n+    used += oldGen().used();\n@@ -116,5 +95,2 @@\n-    \/\/ Run through all generations, obtaining bottom-top pairs.\n-    for (int i = 0; i < nGens(); i++) {\n-      Generation gen = getGen(i);\n-      gen.liveRegionsIterate(closure);\n-    }\n+    youngGen().liveRegionsIterate(closure);\n+    oldGen().liveRegionsIterate(closure);\n@@ -124,6 +100,9 @@\n-    for (int i = 0; i < nGens(); i++) {\n-      tty.print(\"Gen \" + i + \": \");\n-      getGen(i).printOn(tty);\n-      tty.println(\"Invocations: \" + getGen(i).invocations());\n-      tty.println();\n-    }\n+    tty.println(\"SerialHeap:\");\n+\n+    tty.println(\"Young Generation - Invocations: \" + youngGen().invocations());\n+    youngGen().printOn(tty);\n+    tty.println();\n+\n+    tty.println(\"Old Generation - Invocations: \" + oldGen().invocations());\n+    oldGen().printOn(tty);\n+    tty.println();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/serial\/SerialHeap.java","additions":21,"deletions":42,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -77,4 +77,0 @@\n-  public void spaceIterate(SpaceClosure blk, boolean usedOnly) {\n-    blk.doSpace(theSpace());\n-  }\n-\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/serial\/TenuredGeneration.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,154 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.gc.shared;\n-\n-import java.io.*;\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.memory.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-\/** <P> The (supported) Generation hierarchy currently looks like this: <\/P>\n-\n-    <ul>\n-    <li> Generation\n-      <ul>\n-      <li> TenuredGeneration\n-      <li> DefNewGeneration\n-      <\/ul>\n-    <\/ul>\n-*\/\n-\n-\n-public abstract class Generation extends VMObject {\n-  private static long          reservedFieldOffset;\n-  private static long          virtualSpaceFieldOffset;\n-  protected static final int  K = 1024;\n-  \/\/ Fields for class StatRecord\n-  private static Field         statRecordField;\n-  private static CIntegerField invocationField;\n-\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static synchronized void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"Generation\");\n-\n-    reservedFieldOffset     = type.getField(\"_reserved\").getOffset();\n-    virtualSpaceFieldOffset = type.getField(\"_virtual_space\").getOffset();\n-    \/\/ StatRecord\n-    statRecordField         = type.getField(\"_stat_record\");\n-    type                    = db.lookupType(\"Generation::StatRecord\");\n-    invocationField         = type.getCIntegerField(\"invocations\");\n-  }\n-\n-  public Generation(Address addr) {\n-    super(addr);\n-  }\n-\n-  public int invocations() {\n-    return getStatRecord().getInvocations();\n-  }\n-\n-  \/** The maximum number of object bytes the generation can currently\n-      hold. *\/\n-  public abstract long capacity();\n-\n-  \/** The number of used bytes in the gen. *\/\n-  public abstract long used();\n-\n-  \/** The number of free bytes in the gen. *\/\n-  public abstract long free();\n-\n-  \/** The largest number of contiguous free words in the generation,\n-      including expansion. (VM's version assumes it is called at a\n-      safepoint.)  *\/\n-  public abstract long contiguousAvailable();\n-\n-  public MemRegion reserved() {\n-    return new MemRegion(addr.addOffsetTo(reservedFieldOffset));\n-  }\n-\n-  \/** Returns a region guaranteed to contain all the objects in the\n-      generation. *\/\n-  public MemRegion usedRegion() {\n-    return reserved();\n-  }\n-\n-  \/* Returns \"TRUE\" iff \"p\" points into an allocated object in the\n-     generation. *\/\n-  public boolean isIn(Address p) {\n-    GenerationIsInClosure blk = new GenerationIsInClosure(p);\n-    spaceIterate(blk);\n-    return (blk.space() != null);\n-  }\n-\n-  \/** Returns \"TRUE\" iff \"p\" points into the reserved area of the\n-     generation. *\/\n-  public boolean isInReserved(Address p) {\n-    return reserved().contains(p);\n-  }\n-\n-  protected VirtualSpace virtualSpace() {\n-    return VMObjectFactory.newObject(VirtualSpace.class, addr.addOffsetTo(virtualSpaceFieldOffset));\n-  }\n-\n-  public abstract String name();\n-\n-  \/** Equivalent to spaceIterate(blk, false) *\/\n-  public void spaceIterate(SpaceClosure blk) {\n-    spaceIterate(blk, false);\n-  }\n-\n-  \/** Iteration - do not use for time critical operations *\/\n-  public abstract void spaceIterate(SpaceClosure blk, boolean usedOnly);\n-  public abstract void liveRegionsIterate(LiveRegionsClosure closure);\n-\n-  public void print() { printOn(System.out); }\n-  public abstract void printOn(PrintStream tty);\n-\n-  public static class StatRecord extends VMObject {\n-    public StatRecord(Address addr) {\n-      super(addr);\n-    }\n-\n-    public int getInvocations() {\n-      return (int) invocationField.getValue(addr);\n-    }\n-\n-  }\n-\n-  private StatRecord getStatRecord() {\n-    return VMObjectFactory.newObject(StatRecord.class, addr.addOffsetTo(statRecordField.getOffset()));\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/Generation.java","additions":0,"deletions":154,"binary":false,"changes":154,"status":"deleted"},{"patch":"@@ -1,48 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.gc.shared;\n-\n-import sun.jvm.hotspot.debugger.*;\n-\n-\/** Should only be used once *\/\n-\n-class GenerationIsInClosure implements SpaceClosure {\n-  private Address p;\n-  private Space sp;\n-\n-  GenerationIsInClosure(Address p) {\n-    this.p = p;\n-  }\n-\n-  public void doSpace(Space s) {\n-    if (s.contains(p)) {\n-      sp = s;\n-    }\n-  }\n-\n-  Space space() {\n-    return sp;\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/GenerationIsInClosure.java","additions":0,"deletions":48,"binary":false,"changes":48,"status":"deleted"},{"patch":"@@ -98,21 +98,24 @@\n-         for (int n = 0; n < sh.nGens(); n++) {\n-            Generation gen = sh.getGen(n);\n-            if (gen instanceof DefNewGeneration) {\n-               System.out.println(\"New Generation (Eden + 1 Survivor Space):\");\n-               printGen(gen);\n-\n-               ContiguousSpace eden = ((DefNewGeneration)gen).eden();\n-               System.out.println(\"Eden Space:\");\n-               printSpace(eden);\n-\n-               ContiguousSpace from = ((DefNewGeneration)gen).from();\n-               System.out.println(\"From Space:\");\n-               printSpace(from);\n-\n-               ContiguousSpace to = ((DefNewGeneration)gen).to();\n-               System.out.println(\"To Space:\");\n-               printSpace(to);\n-            } else {\n-               System.out.println(gen.name() + \":\");\n-               printGen(gen);\n-            }\n+         {\n+           \/\/ youngGen\n+           DefNewGeneration youngGen = sh.youngGen();\n+\n+           System.out.println(\"New Generation (Eden + 1 Survivor Space):\");\n+           printGen(youngGen);\n+\n+           ContiguousSpace eden = youngGen.eden();\n+           System.out.println(\"Eden Space:\");\n+           printSpace(eden);\n+\n+           ContiguousSpace from = youngGen.from();\n+           System.out.println(\"From Space:\");\n+           printSpace(from);\n+\n+           ContiguousSpace to = youngGen.to();\n+           System.out.println(\"To Space:\");\n+           printSpace(to);\n+         }\n+         {\n+           \/\/ oldGen\n+           TenuredGeneration oldGen = sh.oldGen();\n+           System.out.println(oldGen.name() + \":\");\n+           printGen(oldGen);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/HeapSummary.java","additions":24,"deletions":21,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -109,6 +109,4 @@\n-        for (int i = 0; i < sh.nGens(); i++) {\n-          Generation g = sh.getGen(i);\n-          if (g.isIn(a)) {\n-            loc.gen = g;\n-            break;\n-          }\n+        if (sh.youngGen().isIn(a)) {\n+          loc.gen = sh.youngGen();\n+        } else if (sh.oldGen().isIn(a)) {\n+          loc.gen = sh.oldGen();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerFinder.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-    return ((gen != null) && (gen.equals(((SerialHeap)heap).getGen(0))));\n+    return ((gen != null) && (gen.equals(((SerialHeap)heap).youngGen())));\n@@ -120,1 +120,1 @@\n-    return ((gen != null) && (gen.equals(((SerialHeap)heap).getGen(1))));\n+    return ((gen != null) && (gen.equals(((SerialHeap)heap).oldGen())));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerLocation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -323,12 +323,0 @@\n-    \/**\n-     * Adds the summary links to the subnavigation.\n-     *\n-     * @param target the content to which the subnavigation will be added\n-     *\/\n-    private void addSummaryLinks(Content target) {\n-        List<? extends Content> listContents = subNavLinks.stream().map(HtmlTree::LI).toList();\n-        if (!listContents.isEmpty()) {\n-            addListToNav(listContents, target);\n-        }\n-    }\n-\n@@ -363,10 +351,0 @@\n-    private void addListToNav(List<? extends Content> listContents, Content target) {\n-        int count = 0;\n-        for (Content item : listContents) {\n-            target.add(item);\n-            if (count++ < listContents.size() - 1) {\n-                target.add(Entity.NO_BREAK_SPACE).add(Entity.of(\"gt\")).add(Entity.NO_BREAK_SPACE);\n-            }\n-        }\n-    }\n-\n@@ -558,3 +536,3 @@\n-        var ulBreadcrumbNav = HtmlTree.OL(HtmlStyle.subNavList);\n-        addSummaryLinks(ulBreadcrumbNav);\n-        subNavContent.addUnchecked(ulBreadcrumbNav);\n+        var breadcrumbNav = HtmlTree.OL(HtmlStyle.subNavList);\n+        breadcrumbNav.addAll(subNavLinks, HtmlTree::LI);\n+        subNavContent.addUnchecked(breadcrumbNav);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":3,"deletions":25,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -260,0 +260,4 @@\n+ol.sub-nav-list li:not(:first-child) {\n+    list-style-type: \" > \";\n+    margin-left: 20px;\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/stylesheet.css","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-sun.font.FontUtilities=See java.awt.Font.textRequiresLayout\t@since 9\n+sun.font.FontUtilities=See java.awt.Font.textRequiresLayout @since 9\n@@ -67,3 +67,0 @@\n-\n-\n-\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdkinternals.properties","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, DataDog. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, DataDog. All rights reserved.\n@@ -83,0 +83,5 @@\n+\n+    @Label(\"Container Host Total Swap Memory\")\n+    @Description(\"Total swap memory of the host running the container\")\n+    @DataAmount\n+    public long hostTotalSwapMemory;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/events\/ContainerConfigurationEvent.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -630,0 +630,6 @@\n+    \/**\n+     * Returns the total amount of swap memory of the host system whether or not this\n+     * JVM runs in a container.\n+     *\/\n+    public static native long hostTotalSwapMemory();\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVM.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -190,0 +190,1 @@\n+            t.hostTotalSwapMemory = JVM.hostTotalSwapMemory();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/instrument\/JDKEvents.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = Error\n+agent.err.error                    = Error\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = Warning\n+agent.err.warning                  = Warning\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = Export of JMX connector address to instrumentation buffer failed\n+agent.err.exportaddress.failed     = Export of JMX connector address to instrumentation buffer failed\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = Invalid option specified\n+agent.err.invalid.option           = Invalid option specified\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = Fehler\n+agent.err.error                    = Fehler\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = Warnung\n+agent.err.warning                  = Warnung\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = Export der JMX-Connector-Adresse in Instrumentierungspuffer nicht erfolgreich\n+agent.err.exportaddress.failed     = Export der JMX-Connector-Adresse in Instrumentierungspuffer nicht erfolgreich\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = Ungültige Option angegeben\n+agent.err.invalid.option           = Ungültige Option angegeben\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent_de.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = Error\n+agent.err.error                    = Error\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = Advertencia\n+agent.err.warning                  = Advertencia\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = Fallo al exportar la dirección del conector JMX al buffer de instrumentación\n+agent.err.exportaddress.failed     = Fallo al exportar la dirección del conector JMX al buffer de instrumentación\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = Opción especificada no válida\n+agent.err.invalid.option           = Opción especificada no válida\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent_es.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = Erreur\n+agent.err.error                    = Erreur\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = Avertissement\n+agent.err.warning                  = Avertissement\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = Impossible d'exporter l'adresse du connecteur JMX dans le tampon d'instrumentation\n+agent.err.exportaddress.failed     = Impossible d'exporter l'adresse du connecteur JMX dans le tampon d'instrumentation\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = Option spécifiée non valide\n+agent.err.invalid.option           = Option spécifiée non valide\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent_fr.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = Errore\n+agent.err.error                    = Errore\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = Avvertenza\n+agent.err.warning                  = Avvertenza\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = Errore di esportazione dell'indirizzo connettore JMX nel buffer strumenti\n+agent.err.exportaddress.failed     = Errore di esportazione dell'indirizzo connettore JMX nel buffer strumenti\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = Specificata opzione non valida\n+agent.err.invalid.option           = Specificata opzione non valida\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent_it.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = エラー\n+agent.err.error                    = エラー\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = 警告\n+agent.err.warning                  = 警告\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = JMXコネクタ・アドレスの計測バッファへのエクスポートが失敗しました\n+agent.err.exportaddress.failed     = JMXコネクタ・アドレスの計測バッファへのエクスポートが失敗しました\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = 無効なオプションが指定されました\n+agent.err.invalid.option           = 無効なオプションが指定されました\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent_ja.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = 오류\n+agent.err.error                    = 오류\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = 경고\n+agent.err.warning                  = 경고\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = 기기 버퍼로 JMX 커넥터 주소 익스포트를 실패했습니다.\n+agent.err.exportaddress.failed     = 기기 버퍼로 JMX 커넥터 주소 익스포트를 실패했습니다.\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = 부적합한 옵션이 지정되었습니다.\n+agent.err.invalid.option           = 부적합한 옵션이 지정되었습니다.\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent_ko.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = Erro\n+agent.err.error                    = Erro\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = Advertência\n+agent.err.warning                  = Advertência\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = Falha na exportação do endereço do conector JMX para o buffer de instrumentação\n+agent.err.exportaddress.failed     = Falha na exportação do endereço do conector JMX para o buffer de instrumentação\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = Opção especificada inválida\n+agent.err.invalid.option           = Opção especificada inválida\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent_pt_BR.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = Fel\n+agent.err.error                    = Fel\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = Varning\n+agent.err.warning                  = Varning\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = Kunde inte exportera JMX-anslutningsadressen till instrumentbufferten\n+agent.err.exportaddress.failed     = Kunde inte exportera JMX-anslutningsadressen till instrumentbufferten\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = Det angivna alternativet är ogiltigt\n+agent.err.invalid.option           = Det angivna alternativet är ogiltigt\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent_sv.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = 错误\n+agent.err.error                    = 错误\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = 警告\n+agent.err.warning                  = 警告\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = 未能将 JMX 连接器地址导出到检测缓冲区\n+agent.err.exportaddress.failed     = 未能将 JMX 连接器地址导出到检测缓冲区\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = 指定的选项无效\n+agent.err.invalid.option           = 指定的选项无效\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent_zh_CN.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-agent.err.error\t\t\t   = 錯誤\n+agent.err.error                    = 錯誤\n@@ -28,1 +28,1 @@\n-agent.err.warning\t\t   = 警告\n+agent.err.warning                  = 警告\n@@ -35,1 +35,1 @@\n-agent.err.exportaddress.failed\t   = 將 JMX 連接器位址匯出至設備緩衝區失敗\n+agent.err.exportaddress.failed     = 將 JMX 連接器位址匯出至設備緩衝區失敗\n@@ -65,1 +65,1 @@\n-agent.err.invalid.option\t   = 指定的選項無效\n+agent.err.invalid.option           = 指定的選項無效\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/resources\/agent_zh_TW.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#\tDefault Configuration File for Java Platform Management\n+#       Default Configuration File for Java Platform Management\n@@ -52,1 +52,1 @@\n-#\t\t\tRMI Management Properties\n+#                       RMI Management Properties\n@@ -327,1 +327,0 @@\n-\n","filename":"src\/jdk.management.agent\/share\/conf\/management.properties","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-15\n+17\n","filename":"src\/utils\/IdealGraphVisualizer\/.java-version","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -103,1 +105,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -113,2 +115,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/Bytecodes\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -103,1 +105,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -113,2 +115,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -133,1 +135,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -143,2 +145,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -65,1 +67,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -82,2 +84,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -68,1 +70,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -83,2 +85,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/Difference\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -98,1 +100,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -113,2 +115,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -123,1 +125,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -133,2 +135,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -68,1 +70,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -84,2 +86,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -63,1 +65,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -78,2 +80,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -51,1 +53,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -66,2 +68,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -73,1 +75,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -88,2 +90,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/NetworkConnection\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -58,1 +60,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -73,2 +75,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/SelectionCoordinator\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -73,1 +75,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -83,2 +85,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -83,1 +85,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -98,2 +100,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/Settings\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -88,1 +90,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -103,2 +105,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/Util\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -168,1 +170,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -183,2 +185,1 @@\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n+                    <release>17<\/release>\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/pom.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import org.w3c.dom.DOMImplementation;\n@@ -91,3 +90,2 @@\n-        DOMImplementation dom = GenericDOMImplementation.getDOMImplementation();\n-        org.w3c.dom.Document document = dom.createDocument(\"http:\/\/www.w3.org\/2000\/svg\", \"svg\", null);\n-        SVGGeneratorContext ctx = SVGGeneratorContext.createDefault(document);\n+        SVGGeneratorContext ctx = SVGGeneratorContext.createDefault(GenericDOMImplementation.getDOMImplementation()\n+                .createDocument(\"http:\/\/www.w3.org\/2000\/svg\", \"svg\", null));\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/ExportGraph.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -44,0 +46,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -149,1 +152,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n@@ -175,1 +178,1 @@\n-                        <groupId>org.apache.netbeans.utilities<\/groupId>\n+                        <groupId>org.codehaus.mojo<\/groupId>\n","filename":"src\/utils\/IdealGraphVisualizer\/application\/pom.xml","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -40,1 +42,0 @@\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n@@ -46,0 +47,1 @@\n+        <maven.compiler.release>17<\/maven.compiler.release>\n@@ -51,1 +53,1 @@\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n+                <groupId>org.codehaus.mojo<\/groupId>\n","filename":"src\/utils\/IdealGraphVisualizer\/branding\/pom.xml","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n-<project xmlns=\"https:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"https:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"https:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+         xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 https:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n@@ -44,1 +46,1 @@\n-                    <groupId>org.apache.netbeans.utilities<\/groupId>\n+                    <groupId>org.codehaus.mojo<\/groupId>\n@@ -58,2 +60,1 @@\n-                        <source>1.8<\/source>\n-                        <target>1.8<\/target>\n+                        <release>17<\/release>\n@@ -114,2 +115,2 @@\n-        <nbmmvnplugin.version>14.0<\/nbmmvnplugin.version>\n-        <mvncompilerplugin.version>3.11.0<\/mvncompilerplugin.version>\n+        <nbmmvnplugin.version>3.7<\/nbmmvnplugin.version>\n+        <mvncompilerplugin.version>3.12.1<\/mvncompilerplugin.version>\n","filename":"src\/utils\/IdealGraphVisualizer\/pom.xml","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,2 @@\n+serviceability\/jvmti\/vthread\/SuspendWithInterruptLock\/SuspendWithInterruptLock.java#default 8312064 generic-all\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList-Xcomp.txt","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -116,0 +116,5 @@\n+applications\/jcstress\/accessAtomic.java 8325984 generic-all\n+applications\/jcstress\/acqrel.java 8325984 generic-all\n+applications\/jcstress\/atomicity.java 8325984 generic-all\n+applications\/jcstress\/coherence.java 8325984 generic-all\n+\n@@ -176,0 +181,1 @@\n+vmTestbase\/vm\/mlvm\/meth\/stress\/compiler\/deoptimize\/Test.java#id1 8325905 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,1 +54,0 @@\n-  \n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/JfrReporter.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -132,1 +132,2 @@\n-            .shouldContain(totalMem + \" = \" + hostTotalMemory);\n+            .shouldContain(totalMem + \" = \" + hostTotalMemory)\n+            .shouldContain(\"hostTotalSwapMemory\");\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestJFREvents.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @requires vm.gc.G1 & vm.opt.x.Xmx == null & vm.opt.x.Xms == null & vm.opt.MinHeapSize == null & vm.opt.MaxHeapSize == null & vm.opt.InitialHeapSize == null\n+ * @requires vm.gc.G1 & vm.opt.MinHeapSize == null & vm.opt.MaxHeapSize == null & vm.opt.InitialHeapSize == null\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1HeapSizeFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @requires vm.opt.x.Xminf == null & vm.opt.x.Xmaxf == null & vm.opt.MinHeapFreeRatio == null & vm.opt.MaxHeapFreeRatio == null\n+ * @requires vm.opt.MinHeapFreeRatio == null & vm.opt.MaxHeapFreeRatio == null\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestHeapFreeRatio.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @requires vm.gc.Serial & vm.opt.MaxNewSize == null & vm.opt.NewRatio == null & vm.opt.NewSize == null & vm.opt.OldSize == null & vm.opt.x.Xms == null & vm.opt.x.Xmx == null\n+ * @requires vm.gc.Serial & vm.opt.MaxNewSize == null & vm.opt.NewRatio == null & vm.opt.NewSize == null & vm.opt.OldSize == null\n@@ -47,1 +47,1 @@\n- * @requires vm.gc.Parallel & vm.opt.MaxNewSize == null & vm.opt.NewRatio == null & vm.opt.NewSize == null & vm.opt.OldSize == null & vm.opt.x.Xms == null & vm.opt.x.Xmx == null\n+ * @requires vm.gc.Parallel & vm.opt.MaxNewSize == null & vm.opt.NewRatio == null & vm.opt.NewSize == null & vm.opt.OldSize == null\n@@ -62,1 +62,1 @@\n- * @requires vm.gc.G1 & vm.opt.MaxNewSize == null & vm.opt.NewRatio == null & vm.opt.NewSize == null & vm.opt.OldSize == null & vm.opt.x.Xms == null & vm.opt.x.Xmx == null\n+ * @requires vm.gc.G1 & vm.opt.MaxNewSize == null & vm.opt.NewRatio == null & vm.opt.NewSize == null & vm.opt.OldSize == null\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxNewSize.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @requires vm.gc.Parallel & vm.opt.x.Xmx == null & vm.opt.x.Xms == null & vm.opt.MinHeapSize == null & vm.opt.MaxHeapSize == null & vm.opt.InitialHeapSize == null\n+ * @requires vm.gc.Parallel & vm.opt.MinHeapSize == null & vm.opt.MaxHeapSize == null & vm.opt.InitialHeapSize == null\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelHeapSizeFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @requires vm.gc.Serial & vm.opt.x.Xmx == null & vm.opt.x.Xms == null & vm.opt.MinHeapSize == null & vm.opt.MaxHeapSize == null & vm.opt.InitialHeapSize == null\n+ * @requires vm.gc.Serial & vm.opt.MinHeapSize == null & vm.opt.MaxHeapSize == null & vm.opt.InitialHeapSize == null\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSerialHeapSizeFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @requires !vm.flightRecorder\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/plab\/TestPLABPromotion.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @requires !vm.flightRecorder\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/plab\/TestPLABResize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023 Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @run main\/native GTestWrapper --gtest_filter=os.trim* -Xlog:trimnative -XX:+UnlockExperimentalVMOptions -XX:TrimNativeHeapInterval=100\n+ * @run main\/native GTestWrapper --gtest_filter=os.trim* -Xlog:trimnative -XX:TrimNativeHeapInterval=100\n","filename":"test\/hotspot\/jtreg\/gtest\/NativeHeapTrimmerGtest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -89,0 +89,14 @@\n+    \/\/ Returns the THP page size (if exposed by the kernel) or a guessed THP page size.\n+    \/\/ Mimics HugePages::thp_pagesize_fallback() method in hotspot (must be kept in sync with it).\n+    public long getThpPageSizeOrFallback() {\n+        long pageSize = getThpPageSize();\n+        if (pageSize != 0) {\n+            return pageSize;\n+        }\n+        pageSize = getExplicitDefaultHugePageSize();\n+        if (pageSize != 0) {\n+            return Math.min(pageSize, 16 * 1024 * 1024);\n+        }\n+        return 2 * 1024 * 1024;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/HugePageConfiguration.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -128,1 +128,2 @@\n-            String thpPageSizeString = buildSizeString(configuration.getThpPageSize());\n+            long thpPageSize = configuration.getThpPageSizeOrFallback();\n+            String thpPageSizeString = buildSizeString(thpPageSize);\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDecisionsAtVMStartup.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,2 +3,2 @@\n- * Copyright (c) 2023 Red Hat, Inc. All rights reserved.\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,1 +281,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=\" + trimInterval },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=\" + trimInterval },\n@@ -296,1 +296,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=\" + Integer.MAX_VALUE },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=\" + Integer.MAX_VALUE },\n@@ -308,1 +308,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=1\" },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=1\" },\n@@ -319,1 +319,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=1\" },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=1\" },\n@@ -330,1 +330,1 @@\n-                        new String[] { \"-XX:+UnlockExperimentalVMOptions\", \"-XX:TrimNativeHeapInterval=0\" },\n+                        new String[] { \"-XX:TrimNativeHeapInterval=0\" },\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTrimNative.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -58,4 +58,4 @@\n-     * CodeCache: size=245760Kb used=4680Kb max_used=4680Kb free=241079Kb\n-     * bounds [0x00007f5bd9000000, 0x00007f5bd94a0000, 0x00007f5be8000000]\n-     * total_blobs=575 nmethods=69 adapters=423\n-     * compilation: enabled\n+     * CodeCache: size=245760Kb used=1366Kb max_used=1935Kb free=244393Kb\n+     *  bounds [0x00007ff4d89f2000, 0x00007ff4d8c62000, 0x00007ff4e79f2000]\n+     *  total_blobs=474, nmethods=87, adapters=293, full_count=0\n+     * Compilation: enabled, stopped_count=0, restarted_count=0\n@@ -65,8 +65,9 @@\n-     * CodeHeap 'non-nmethods': size=5696Kb used=2236Kb max_used=2238Kb free=3459Kb\n-     *  bounds [0x00007fa0f0ffe000, 0x00007fa0f126e000, 0x00007fa0f158e000]\n-     * CodeHeap 'profiled nmethods': size=120036Kb used=8Kb max_used=8Kb free=120027Kb\n-     *  bounds [0x00007fa0f158e000, 0x00007fa0f17fe000, 0x00007fa0f8ac7000]\n-     * CodeHeap 'non-profiled nmethods': size=120036Kb used=2Kb max_used=2Kb free=120034Kb\n-     *  bounds [0x00007fa0f8ac7000, 0x00007fa0f8d37000, 0x00007fa100000000]\n-     * total_blobs=486 nmethods=8 adapters=399\n-     * compilation: enabled\n+     * CodeHeap 'non-profiled nmethods': size=118592Kb used=29Kb max_used=29Kb free=118562Kb\n+     *  bounds [0x00007f09f8622000, 0x00007f09f8892000, 0x00007f09ff9f2000]\n+     * CodeHeap 'profiled nmethods': size=118588Kb used=80Kb max_used=80Kb free=118507Kb\n+     *  bounds [0x00007f09f09f2000, 0x00007f09f0c62000, 0x00007f09f7dc1000]\n+     * CodeHeap 'non-nmethods': size=8580Kb used=1257Kb max_used=1833Kb free=7323Kb\n+     *  bounds [0x00007f09f7dc1000, 0x00007f09f8031000, 0x00007f09f8622000]\n+     * CodeCache: size=245760Kb, used=1366Kb, max_used=1942Kb, free=244392Kb\n+     *  total_blobs=474, nmethods=87, adapters=293, full_count=0\n+     * Compilation: enabled, stopped_count=0, restarted_count=0\n@@ -77,2 +78,2 @@\n-    static Pattern line3 = Pattern.compile(\" total_blobs=(\\\\p{Digit}*) nmethods=(\\\\p{Digit}*) adapters=(\\\\p{Digit}*)\");\n-    static Pattern line4 = Pattern.compile(\" compilation: (.*)\");\n+    static Pattern line3 = Pattern.compile(\" total_blobs=(\\\\p{Digit}*), nmethods=(\\\\p{Digit}*), adapters=(\\\\p{Digit}*), full_count=(\\\\p{Digit}*)\");\n+    static Pattern line4 = Pattern.compile(\"Compilation: (.*?), stopped_count=(\\\\p{Digit}*), restarted_count=(\\\\p{Digit}*)\");\n@@ -160,0 +161,4 @@\n+        if (segmentsCount != 1) {\n+            \/\/ Skip this line CodeCache: size=245760Kb, used=5698Kb, max_used=5735Kb, free=240059Kb\n+            line = lines.next();\n+        }\n@@ -185,1 +190,13 @@\n-        if (!m.matches()) {\n+        if (m.matches()) {\n+            if (!m.group(1).contains(\"enabled\") && !m.group(1).contains(\"disabled\")) {\n+                Assert.fail(\"Failed parsing dcmd codecache output\");\n+            }\n+            int stopped = Integer.parseInt(m.group(2));\n+            if (stopped < 0) {\n+                Assert.fail(\"Failed parsing dcmd codecache output\");\n+            }\n+            int restarted = Integer.parseInt(m.group(3));\n+            if (restarted < 0) {\n+                Assert.fail(\"Failed parsing dcmd codecache output\");\n+            }\n+        } else {\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/compiler\/CodeCacheTest.java","additions":32,"deletions":15,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,2 @@\n-            expStrings.add(\"Gen 1:   old\");\n+            expStrings.add(\"SerialHeap\");\n+            expStrings.add(\"eden\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestUniverse.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import java.util.Random;\n@@ -269,1 +270,1 @@\n-        var rng = Utils.getRandomInstance();\n+        Random rng = Utils.getRandomInstance();\n@@ -302,0 +303,1 @@\n+                \"-XX:+StressIncrementalInlining\",\n@@ -303,1 +305,1 @@\n-                \"-XX:StressSeed=\" + Math.abs(rng.nextInt())));\n+                \"-XX:StressSeed=\" + rng.nextInt(Integer.MAX_VALUE)));\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/src\/sun\/hotspot\/tools\/ctw\/CtwRunner.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002\/attach002Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002a\/attach002aAgent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach008\/attach008Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach009\/attach009Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach012\/attach012Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach014\/attach014Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach015\/attach015Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach015\/attach015Agent01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach015\/attach015Target.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach020\/attach020Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach021\/attach021Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach022\/attach022Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach037\/attach037Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach038\/attach038Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach039\/attach039Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach040\/attach040Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach041\/attach041Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach042\/attach042Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent02.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach045\/attach045Agent03.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach046\/attach046Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach050\/attach050Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/sharedAgents\/simpleAgent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include <jvmti_aod.h>\n+#include <jvmti_aod.hpp>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/aod\/jvmti_aod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,2 +23,2 @@\n-#ifndef NSK_SHARE_JVMTI_AOD_H\n-#define NSK_SHARE_JVMTI_AOD_H\n+#ifndef NSK_SHARE_JVMTI_AOD_HPP\n+#define NSK_SHARE_JVMTI_AOD_HPP\n@@ -71,2 +71,2 @@\n-#define nsk_jvmti_aod_enableEvent(X,Y)  NSK_JVMTI_VERIFY(X->SetEventNotificationMode(JVMTI_ENABLE, Y, NULL))\n-#define nsk_jvmti_aod_disableEvent(X,Y) NSK_JVMTI_VERIFY(X->SetEventNotificationMode(JVMTI_DISABLE, Y, NULL))\n+#define nsk_jvmti_aod_enableEvent(X,Y)  NSK_JVMTI_VERIFY(X->SetEventNotificationMode(JVMTI_ENABLE, Y, nullptr))\n+#define nsk_jvmti_aod_disableEvent(X,Y) NSK_JVMTI_VERIFY(X->SetEventNotificationMode(JVMTI_DISABLE, Y, nullptr))\n@@ -93,1 +93,1 @@\n-#endif \/* END OF NSK_SHARE_JVMTI_AOD_H *\/\n+#endif \/* END OF NSK_SHARE_JVMTI_AOD_HPP *\/\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/aod\/jvmti_aod.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/aod\/jvmti_aod.h","status":"renamed"},{"patch":"@@ -59,2 +59,3 @@\n-        String p3 = \" total_blobs=\\\\d+ nmethods=\\\\d+ adapters=\\\\d+\\\\n\";\n-        String p4 = \" compilation: enabled\\\\n\";\n+        String p3 = \"CodeCache:.*\\\\n\";\n+        String p4 = \" total_blobs=\\\\d+, nmethods=\\\\d+, adapters=\\\\d+, full_count=\\\\d+\\\\n\";\n+        String p5 = \"Compilation: enabled.*\\\\n\";\n@@ -65,2 +66,2 @@\n-        SEG_REGEXP = segPrefix + p3 + p4;\n-        NOSEG_REGEXP = nosegPrefix + p3 + p4;\n+        SEG_REGEXP = segPrefix + p3 + p4 + p5;\n+        NOSEG_REGEXP = nosegPrefix + p4 + p5;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/compiler\/CodeCacheInfo\/Test.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-sun\/java2d\/X11SurfaceData\/SharedMemoryPixmapsTest\/SharedMemoryPixmapsTest.sh 8221451 linux-all\n+sun\/java2d\/X11SurfaceData\/SharedMemoryPixmapsTest\/SharedMemoryPixmapsTest.sh 7184899,8221451 linux-all,macosx-aarch64\n@@ -578,2 +578,0 @@\n-jdk\/nio\/zipfs\/TestLocOffsetFromZip64EF.java                     8301183 linux-all\n-\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,4 @@\n-            oa.shouldContain(\"Done\").shouldNotContain(\"WARNING\").shouldHaveExitValue(0);\n+            oa.shouldContain(\"Done\")\n+                .shouldNotContain(\"WARNING\")\n+                .shouldNotContain(\"AWT Assertion\")\n+                .shouldHaveExitValue(0);\n@@ -57,2 +60,1 @@\n-        for (String ff : families)\n-        {\n+        for (String ff : families) {\n@@ -69,1 +71,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/font\/JNICheck\/FreeTypeScalerJNICheck.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,237 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BasicStroke;\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.print.Book;\n+import java.awt.print.PageFormat;\n+import java.awt.print.Paper;\n+import java.awt.print.Printable;\n+import java.awt.print.PrinterException;\n+import java.awt.print.PrinterJob;\n+import javax.print.attribute.HashPrintRequestAttributeSet;\n+import javax.print.attribute.PrintRequestAttributeSet;\n+import javax.print.attribute.standard.Sides;\n+import javax.swing.JFrame;\n+\n+import static java.awt.print.PageFormat.LANDSCAPE;\n+import static java.awt.print.PageFormat.PORTRAIT;\n+import static java.awt.print.PageFormat.REVERSE_LANDSCAPE;\n+\n+\/*\n+ * @test\n+ * @bug 8307246\n+ * @key printer\n+ * @library ..\/..\/..\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Test for comparing offsets of images drawn with opaque\n+ *          and translucent colors printed in all orientations\n+ * @run main\/manual AlphaPrintingOffsets\n+ *\/\n+\n+public class AlphaPrintingOffsets {\n+    private static final String INSTRUCTIONS =\n+                    \"Tested bug occurs only on-paper printing \" +\n+                    \"so you mustn't use PDF printer\\n\\n\" +\n+                    \"1. Java print dialog should appear.\\n\" +\n+                    \"2. Press the Print button on the Java Print dialog.\\n\" +\n+                    \"3. Please check the page margin rectangle are properly \" +\n+                    \"drawn and visible on all sides on all pages.\\n\" +\n+                    \"If so, press PASS, else press FAIL.\\n\\n\" +\n+                    \"Also you may run this test in paper-saving mode. Due \" +\n+                    \"to tested bug affects pages printed with transparency \" +\n+                    \"in LANDSCAPE and REVERSE_LANDSCAPE orientations there \" +\n+                    \"is an option to print only 2 pages affected. \" +\n+                    \"To do it pass PaperSavingMode parameter.\";\n+\n+    private static boolean isPaperSavingMode = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        if (PrinterJob.lookupPrintServices().length > 0) {\n+\n+            String instructionsHeader = \"This test prints 6 pages with page \" +\n+                    \"margin rectangle and a text message. \\n\";\n+            if (args.length > 0) {\n+                isPaperSavingMode = args[0].equals(\"PaperSavingMode\");\n+            }\n+            if (isPaperSavingMode) {\n+                instructionsHeader = \"This test prints 2 pages with page \" +\n+                        \"margin rectangle and a text message. \\n\";\n+            }\n+            PassFailJFrame.builder()\n+                    .instructions(instructionsHeader + INSTRUCTIONS)\n+                    .rows(15)\n+                    .testUI(() -> createTestUI())\n+                    .build()\n+                    .awaitAndCheck();\n+\n+        } else {\n+            throw new RuntimeException(\"Test failed : Printer not configured or available.\");\n+        }\n+\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame testUI = new JFrame(\"Print images\");\n+        testUI.setSize(1, 1);\n+        testUI.addWindowListener(new WindowAdapter() {\n+            @Override\n+            public void windowOpened(WindowEvent e) {\n+                super.windowOpened(e);\n+                print();\n+            }\n+\n+            @Override\n+            public void windowActivated(WindowEvent e) {\n+                super.windowActivated(e);\n+                testUI.setVisible(false);\n+            }\n+        });\n+\n+        return testUI;\n+    }\n+\n+    private static void print() {\n+        PrinterJob printerJob = PrinterJob.getPrinterJob();\n+        PageFormat pageFormatP = printerJob.defaultPage();\n+\n+        Paper paper = pageFormatP.getPaper();\n+        paper.setImageableArea(0, 0, paper.getWidth(), paper.getHeight());\n+        pageFormatP.setPaper(paper);\n+\n+        PageFormat pageFormatL = (PageFormat) pageFormatP.clone();\n+        PageFormat pageFormatRL = (PageFormat) pageFormatP.clone();\n+\n+        pageFormatL.setOrientation(LANDSCAPE);\n+        pageFormatRL.setOrientation(REVERSE_LANDSCAPE);\n+\n+        Printable printableTransparent = new CustomPrintable(254);\n+        if (isPaperSavingMode) {\n+            Book bookPageSavingTest = new Book();\n+            bookPageSavingTest.append(printableTransparent, pageFormatL);\n+            bookPageSavingTest.append(printableTransparent, pageFormatRL);\n+            printerJob.setPageable(bookPageSavingTest);\n+        } else {\n+            Printable printableOpaque = new CustomPrintable(255);\n+            Book bookDefaultTest = new Book();\n+            bookDefaultTest.append(printableOpaque, pageFormatP);\n+            bookDefaultTest.append(printableTransparent, pageFormatP);\n+            bookDefaultTest.append(printableOpaque, pageFormatL);\n+            bookDefaultTest.append(printableTransparent, pageFormatL);\n+            bookDefaultTest.append(printableOpaque, pageFormatRL);\n+            bookDefaultTest.append(printableTransparent, pageFormatRL);\n+            printerJob.setPageable(bookDefaultTest);\n+        }\n+        PrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();\n+        aset.add(Sides.ONE_SIDED);\n+\n+        if (printerJob.printDialog()) {\n+            try {\n+                printerJob.print(aset);\n+            } catch (PrinterException e) {\n+                e.printStackTrace();\n+                throw new RuntimeException(\"Exception whilst printing.\");\n+            }\n+        } else {\n+            throw new RuntimeException(\"Test failed : \" +\n+                    \"User selected 'Cancel' button on the print dialog\");\n+        }\n+    }\n+\n+    static class CustomPrintable implements Printable {\n+        private static final int THICKNESS = 10;\n+        private static final int MARGIN = 15;\n+        private static final int SMALL_RECTANGLE_SIZE = 5;\n+        private final int alphaValue;\n+\n+        public CustomPrintable(int alpha) {\n+            alphaValue = alpha;\n+        }\n+\n+        private String getOrientStr(int orient) {\n+            switch (orient) {\n+                case PORTRAIT:\n+                    return \"PORTRAIT\";\n+                case LANDSCAPE:\n+                    return \"LANDSCAPE\";\n+                case REVERSE_LANDSCAPE:\n+                    return \"REVERSE_LANDSCAPE\";\n+                default:\n+                    return \"BAD Orientation\";\n+            }\n+        }\n+\n+        @Override\n+        public int print(Graphics g, PageFormat pageFormat, int pageIndex) {\n+\n+            if (pageIndex > 5) {\n+                return Printable.NO_SUCH_PAGE;\n+            }\n+\n+            drawRectangle(g, pageFormat.getImageableX(), pageFormat.getImageableY(),\n+                    pageFormat.getImageableWidth(), pageFormat.getImageableHeight());\n+\n+            drawSmallRectangle(g, pageFormat.getImageableX(), pageFormat.getImageableY(),\n+                    pageFormat.getImageableWidth(), pageFormat.getImageableHeight());\n+\n+            drawMsg(g, 300, 300, pageFormat.getOrientation());\n+            return Printable.PAGE_EXISTS;\n+        }\n+\n+        private void drawRectangle(Graphics g, double x, double y, double width, double height) {\n+            Graphics2D g2d = (Graphics2D) g;\n+            g2d.setStroke(new BasicStroke(THICKNESS));\n+\n+            \/\/ Draw rectangle with thick border lines\n+            g2d.drawRect((int) x + MARGIN, (int) y + MARGIN,\n+                    (int) width - MARGIN * 2, (int) height - MARGIN * 2);\n+        }\n+\n+        private void drawSmallRectangle(Graphics g, double x, double y, double width, double height) {\n+            Graphics2D g2d = (Graphics2D) g;\n+            Color originalColor = g2d.getColor();\n+\n+            g2d.setColor(new Color(0, 0, 0, alphaValue));\n+            \/\/ Calculate the position to center the smaller rectangle\n+            double centerX = x + (width - SMALL_RECTANGLE_SIZE) \/ 2;\n+            double centerY = y + (height - SMALL_RECTANGLE_SIZE) \/ 2;\n+\n+            g2d.fillRect((int) centerX, (int) centerY, SMALL_RECTANGLE_SIZE, SMALL_RECTANGLE_SIZE);\n+\n+            g2d.setColor(originalColor);\n+        }\n+\n+        private void drawMsg(Graphics g, int x, int y, int orient) {\n+            Graphics2D g2d = (Graphics2D) g;\n+\n+            String msg = \"Orient= \" + getOrientStr(orient);\n+            msg += \" Color=\" + (alphaValue != 255 ? \" ALPHA\" : \" OPAQUE\");\n+            g2d.drawString(msg, x, y);\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/ImagePrinting\/AlphaPrintingOffsets.java","additions":237,"deletions":0,"binary":false,"changes":237,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,1 @@\n+import javax.swing.JSplitPane;\n@@ -117,0 +118,7 @@\n+ * For simple test UI, use {@code Builder.splitUI}, or explicitly\n+ * {@code Builder.splitUIRight} or {@code Builder.splitUIBottom} with\n+ * a {@code PanelCreator}. The framework will call the provided\n+ * {@code createUIPanel} to create the component with test UI and\n+ * will place it as the right or bottom component in a split pane\n+ * along with instruction UI.\n+ * <p>\n@@ -169,0 +177,8 @@\n+    \/**\n+     * List of windows or frames managed by the {@code PassFailJFrame}\n+     * framework. These windows are automatically disposed of when the\n+     * test is finished.\n+     * <p>\n+     * <b>Note:<\/b> access to this field has to be synchronized by\n+     * {@code PassFailJFrame.class}.\n+     *\/\n@@ -279,4 +295,27 @@\n-    private PassFailJFrame(Builder builder) throws InterruptedException,\n-            InvocationTargetException {\n-        this(builder.title, builder.instructions, builder.testTimeOut,\n-             builder.rows, builder.columns, builder.screenCapture);\n+    \/**\n+     * Configures {@code PassFailJFrame} using the builder.\n+     * It creates test UI specified using {@code testUI} or {@code splitUI}\n+     * methods on EDT.\n+     * @param builder the builder with the parameters\n+     * @throws InterruptedException if the current thread is interrupted while\n+     *              waiting for EDT to complete a task\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *              running a task on EDT\n+     *\/\n+    private PassFailJFrame(final Builder builder)\n+            throws InterruptedException, InvocationTargetException {\n+        invokeOnEDT(() -> createUI(builder));\n+\n+        if (!builder.splitUI && builder.panelCreator != null) {\n+            JComponent content = builder.panelCreator.createUIPanel();\n+            String title = content.getName();\n+            if (title == null) {\n+                title = \"Test UI\";\n+            }\n+            JDialog dialog = new JDialog(frame, title, false);\n+            dialog.addWindowListener(windowClosingHandler);\n+            dialog.add(content, BorderLayout.CENTER);\n+            dialog.pack();\n+            addTestWindow(dialog);\n+            positionTestWindow(dialog, builder.position);\n+        }\n@@ -302,5 +341,4 @@\n-                invokeOnEDT(() -> {\n-                    builder.positionWindows\n-                           .positionTestWindows(unmodifiableList(builder.testWindows),\n-                                                builder.instructionUIHandler);\n-                });\n+                invokeOnEDT(() ->\n+                        builder.positionWindows\n+                               .positionTestWindows(unmodifiableList(builder.testWindows),\n+                                                    builder.instructionUIHandler));\n@@ -344,0 +382,45 @@\n+        frame.addWindowListener(windowClosingHandler);\n+\n+        frame.add(createInstructionUIPanel(instructions,\n+                                           testTimeOut,\n+                                           rows, columns,\n+                                           enableScreenCapture),\n+                  BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        addTestWindow(frame);\n+    }\n+\n+    private static void createUI(Builder builder) {\n+        frame = new JFrame(builder.title);\n+        frame.setLayout(new BorderLayout());\n+\n+        frame.addWindowListener(windowClosingHandler);\n+\n+        JComponent instructionUI =\n+                createInstructionUIPanel(builder.instructions,\n+                                         builder.testTimeOut,\n+                                         builder.rows, builder.columns,\n+                                         builder.screenCapture);\n+\n+        if (builder.splitUI) {\n+            JSplitPane splitPane = new JSplitPane(\n+                    builder.splitUIOrientation,\n+                    instructionUI,\n+                    builder.panelCreator.createUIPanel());\n+            frame.add(splitPane, BorderLayout.CENTER);\n+        } else {\n+            frame.add(instructionUI, BorderLayout.CENTER);\n+        }\n+\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        addTestWindow(frame);\n+    }\n+\n+    private static JComponent createInstructionUIPanel(String instructions,\n+                                                       long testTimeOut,\n+                                                       int rows, int columns,\n+                                                       boolean enableScreenCapture) {\n+        JPanel main = new JPanel(new BorderLayout());\n+\n@@ -346,1 +429,1 @@\n-        frame.add(testTimeoutLabel, BorderLayout.NORTH);\n+        main.add(testTimeoutLabel, BorderLayout.NORTH);\n@@ -353,1 +436,1 @@\n-        frame.add(new JScrollPane(text), BorderLayout.CENTER);\n+        main.add(new JScrollPane(text), BorderLayout.CENTER);\n@@ -375,1 +458,2 @@\n-        frame.addWindowListener(windowClosingHandler);\n+        main.add(buttonsPanel, BorderLayout.SOUTH);\n+        main.setMinimumSize(main.getPreferredSize());\n@@ -377,4 +461,1 @@\n-        frame.add(buttonsPanel, BorderLayout.SOUTH);\n-        frame.pack();\n-        frame.setLocationRelativeTo(null);\n-        addTestWindow(frame);\n+        return main;\n@@ -436,0 +517,16 @@\n+    \/**\n+     * Creates a component (panel) with test UI\n+     * to be hosted in a split pane or a frame.\n+     *\/\n+    @FunctionalInterface\n+    public interface PanelCreator {\n+        \/**\n+         * Creates a component which hosts test UI. This component\n+         * is placed into a split pane or into a frame to display the UI.\n+         * <p>\n+         * This method is called by the framework on the EDT.\n+         * @return a component (panel) with test UI\n+         *\/\n+        JComponent createUIPanel();\n+    }\n+\n@@ -637,4 +734,6 @@\n-                windowList.stream()\n-                          .filter(Window::isShowing)\n-                          .map(Window::getBounds)\n-                          .forEach(PassFailJFrame::captureScreen);\n+                synchronized (PassFailJFrame.class) {\n+                    windowList.stream()\n+                              .filter(Window::isShowing)\n+                              .map(Window::getBounds)\n+                              .forEach(PassFailJFrame::captureScreen);\n+                }\n@@ -953,0 +1052,3 @@\n+        private PanelCreator panelCreator;\n+        private boolean splitUI;\n+        private int splitUIOrientation;\n@@ -1093,2 +1195,96 @@\n-        public Builder positionTestUI(PositionWindows positionWindows) {\n-            this.positionWindows = positionWindows;\n+        \/**\n+         * Adds a {@code PanelCreator} which the framework will use\n+         * to create a component and place it into a dialog.\n+         *\n+         * @param panelCreator a {@code PanelCreator} to create a component\n+         *                     with test UI\n+         * @return this builder\n+         * @throws IllegalStateException if split UI was enabled using\n+         *              a {@code splitUI} method\n+         *\/\n+        public Builder testUI(PanelCreator panelCreator) {\n+            if (splitUI) {\n+                throw new IllegalStateException(\"Can't combine splitUI and \"\n+                                                + \"testUI with panelCreator\");\n+            }\n+            this.panelCreator = panelCreator;\n+            return this;\n+        }\n+\n+        \/**\n+         * Adds a {@code PanelCreator} which the framework will use\n+         * to create a component with test UI and display it in a split pane.\n+         * <p>\n+         * By default, horizontal orientation is used,\n+         * and test UI is displayed to the right of the instruction UI.\n+         *\n+         * @param panelCreator a {@code PanelCreator} to create a component\n+         *                     with test UI\n+         * @return this builder\n+         *\n+         * @throws IllegalStateException if a {@code PanelCreator} is\n+         *              already set\n+         * @throws IllegalArgumentException if {panelCreator} is {@code null}\n+         *\/\n+        public Builder splitUI(PanelCreator panelCreator) {\n+            return splitUIRight(panelCreator);\n+        }\n+\n+        \/**\n+         * Adds a {@code PanelCreator} which the framework will use\n+         * to create a component with test UI and display it\n+         * to the right of instruction UI.\n+         *\n+         * @param panelCreator a {@code PanelCreator} to create a component\n+         *                     with test UI\n+         * @return this builder\n+         *\n+         * @throws IllegalStateException if a {@code PanelCreator} is\n+         *              already set\n+         * @throws IllegalArgumentException if {panelCreator} is {@code null}\n+         *\/\n+        public Builder splitUIRight(PanelCreator panelCreator) {\n+            return splitUI(panelCreator, JSplitPane.HORIZONTAL_SPLIT);\n+        }\n+\n+        \/**\n+         * Adds a {@code PanelCreator} which the framework will use\n+         * to create a component with test UI and display it\n+         * in the bottom of instruction UI.\n+         *\n+         * @param panelCreator a {@code PanelCreator} to create a component\n+         *                     with test UI\n+         * @return this builder\n+         *\n+         * @throws IllegalStateException if a {@code PanelCreator} is\n+         *              already set\n+         * @throws IllegalArgumentException if {panelCreator} is {@code null}\n+         *\/\n+        public Builder splitUIBottom(PanelCreator panelCreator) {\n+            return splitUI(panelCreator, JSplitPane.VERTICAL_SPLIT);\n+        }\n+\n+        \/**\n+         * Enables split UI and stores the orientation of the split pane.\n+         *\n+         * @param panelCreator a {@code PanelCreator} to create a component\n+         *                     with test UI\n+         * @param splitUIOrientation orientation of the split pane\n+         * @return this builder\n+         *\n+         * @throws IllegalStateException if a {@code PanelCreator} is\n+         *              already set\n+         * @throws IllegalArgumentException if {panelCreator} is {@code null}\n+         *\/\n+        private Builder splitUI(PanelCreator panelCreator,\n+                                int splitUIOrientation) {\n+            if (panelCreator == null) {\n+                throw new IllegalArgumentException(\"A PanelCreator cannot be null\");\n+            }\n+            if (this.panelCreator != null) {\n+                throw new IllegalStateException(\"A PanelCreator is already set\");\n+            }\n+\n+            splitUI = true;\n+            this.splitUIOrientation = splitUIOrientation;\n+            this.panelCreator = panelCreator;\n@@ -1132,1 +1328,2 @@\n-                && (testWindows != null || windowListCreator != null)) {\n+                && (testWindows != null || windowListCreator != null\n+                    || (!splitUI && panelCreator != null))) {\n@@ -1137,0 +1334,8 @@\n+            if (panelCreator != null) {\n+                if (splitUI && (testWindows != null || windowListCreator != null)) {\n+                    \/\/ TODO Is it required? We can support both\n+                    throw new IllegalStateException(\"Split UI is not allowed \"\n+                                                    + \"with additional windows\");\n+                }\n+            }\n+\n@@ -1140,1 +1345,1 @@\n-                            + \"provide an a list of windows to the builder\");\n+                            + \"provide a list of windows to the builder\");\n@@ -1179,0 +1384,5 @@\n+    \/**\n+     * Creates a builder for configuring {@code PassFailJFrame}.\n+     *\n+     * @return the builder for configuring {@code PassFailJFrame}\n+     *\/\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":235,"deletions":25,"binary":false,"changes":260,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -41,4 +41,5 @@\n-import jdk.internal.org.objectweb.asm.ClassReader;\n-import jdk.internal.org.objectweb.asm.ClassVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.MethodModel;\n+import java.lang.constant.MethodTypeDesc;\n+\n@@ -51,3 +52,5 @@\n-import static jdk.internal.org.objectweb.asm.ClassWriter.COMPUTE_FRAMES;\n-import static jdk.internal.org.objectweb.asm.ClassWriter.COMPUTE_MAXS;\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.CD_void;\n+import static java.lang.constant.ConstantDescs.INIT_NAME;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n@@ -206,27 +209,3 @@\n-        ClassReader reader = new ClassReader(classBytes);\n-        ClassWriter writer = new ClassWriter(reader, COMPUTE_MAXS | COMPUTE_FRAMES);\n-        reader.accept(new RemoveCanonicalCtrVisitor(writer), 0);\n-        return writer.toByteArray();\n-    }\n-\n-    \/** Removes the <init> method. *\/\n-    static class RemoveCanonicalCtrVisitor extends ClassVisitor {\n-        static final String CTR_NAME = \"<init>\";\n-        RemoveCanonicalCtrVisitor(ClassVisitor cv) {\n-            super(ASM8, cv);\n-        }\n-        volatile boolean foundCanonicalCtr;\n-        @Override\n-        public MethodVisitor visitMethod(final int access,\n-                                         final String name,\n-                                         final String descriptor,\n-                                         final String signature,\n-                                         final String[] exceptions) {\n-            if (name.equals(CTR_NAME)) {  \/\/ assume just a single constructor\n-                assert foundCanonicalCtr == false;\n-                foundCanonicalCtr = true;\n-                return null;\n-            } else {\n-                return cv.visitMethod(access, name, descriptor, signature, exceptions);\n-            }\n-        }\n+        var cf = ClassFile.of();\n+        return cf.transform(cf.parse(classBytes), ClassTransform.dropping(ce ->\n+                ce instanceof MethodModel mm && mm.methodName().equalsString(INIT_NAME)));\n@@ -240,50 +219,10 @@\n-        ClassReader reader = new ClassReader(classBytes);\n-        ClassWriter writer = new ClassWriter(reader, COMPUTE_MAXS | COMPUTE_FRAMES);\n-        reader.accept(new ModifyCanonicalCtrVisitor(writer), 0);\n-        return writer.toByteArray();\n-    }\n-\n-    \/** Replaces whatever <init> method it finds with <init>(Ljava\/lang\/Object;)V. *\/\n-    static class ModifyCanonicalCtrVisitor extends ClassVisitor {\n-        ModifyCanonicalCtrVisitor(ClassVisitor cv) {\n-            super(ASM8, cv);\n-        }\n-        boolean foundCanonicalCtr;\n-        String className;\n-        @Override\n-        public void visit(final int version,\n-                          final int access,\n-                          final String name,\n-                          final String signature,\n-                          final String superName,\n-                          final String[] interfaces) {\n-            this.className = name;\n-            cv.visit(version, access, name, signature, superName, interfaces);\n-        }\n-        @Override\n-        public MethodVisitor visitMethod(final int access,\n-                                         final String name,\n-                                         final String descriptor,\n-                                         final String signature,\n-                                         final String[] exceptions) {\n-            if (name.equals(\"<init>\")) {  \/\/ assume just a single constructor\n-                assert foundCanonicalCtr == false;\n-                foundCanonicalCtr = true;\n-                return null;\n-            } else {\n-                return cv.visitMethod(access, name, descriptor, signature, exceptions);\n-            }\n-        }\n-        @Override\n-        public void visitEnd() {\n-            \/\/ must have a signature that is not the same as the test record constructor\n-            MethodVisitor mv = cv.visitMethod(ACC_PUBLIC, \"<init>\", \"(Ljava\/lang\/Object;)V\", null, null);\n-            mv.visitCode();\n-            mv.visitVarInsn(ALOAD, 0);\n-            mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Record\", \"<init>\", \"()V\", false);\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(1, 1);\n-            mv.visitEnd();\n-\n-            cv.visitEnd();\n-        }\n+        var cf = ClassFile.of();\n+        return cf.transform(cf.parse(classBytes), ClassTransform.dropping(ce ->\n+                        ce instanceof MethodModel mm && mm.methodName().equalsString(INIT_NAME))\n+                .andThen(ClassTransform.endHandler(clb -> clb.withMethodBody(INIT_NAME,\n+                        MethodTypeDesc.of(CD_void, CD_Object), ACC_PUBLIC, cob -> {\n+                            cob.aload(0);\n+                            cob.invokespecial(Record.class.describeConstable().orElseThrow(),\n+                                    INIT_NAME, MTD_void);\n+                            cob.return_();\n+                        }))));\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/BadCanonicalCtrTest.java","additions":25,"deletions":86,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -44,0 +44,3 @@\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.MethodTypeDesc;\n@@ -47,5 +50,1 @@\n-import java.util.function.Function;\n-import jdk.internal.org.objectweb.asm.ClassReader;\n-import jdk.internal.org.objectweb.asm.ClassVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n+\n@@ -54,0 +53,1 @@\n+import org.testng.Assert;\n@@ -58,3 +58,3 @@\n-import static jdk.internal.org.objectweb.asm.ClassWriter.COMPUTE_FRAMES;\n-import static jdk.internal.org.objectweb.asm.ClassWriter.COMPUTE_MAXS;\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+import static java.lang.classfile.ClassFile.ACC_PRIVATE;\n+import static java.lang.constant.ConstantDescs.CD_String;\n+import static java.lang.constant.ConstantDescs.CD_void;\n@@ -222,0 +222,3 @@\n+    static final String WRITE_OBJECT_NAME = \"writeObject\";\n+    static final MethodTypeDesc WRITE_OBJECT_DESC = MethodTypeDesc.ofDescriptor(\"(Ljava\/io\/ObjectOutputStream;)V\");\n+\n@@ -223,1 +226,1 @@\n-        return addMethod(classBytes, cv -> new WriteObjectVisitor(cv));\n+        return addMethod(classBytes, WRITE_OBJECT_NAME, WRITE_OBJECT_DESC);\n@@ -226,0 +229,3 @@\n+    static final String READ_OBJECT_NAME = \"readObject\";\n+    static final MethodTypeDesc READ_OBJECT_DESC = MethodTypeDesc.ofDescriptor(\"(Ljava\/io\/ObjectInputStream;)V\");\n+\n@@ -227,1 +233,1 @@\n-        return addMethod(classBytes, cv -> new ReadObjectVisitor(cv));\n+        return addMethod(classBytes, READ_OBJECT_NAME, READ_OBJECT_DESC);\n@@ -230,0 +236,3 @@\n+    static final String READ_OBJECT_NO_DATA_NAME = \"readObjectNoData\";\n+    static final MethodTypeDesc READ_OBJECT_NO_DATA_DESC = MethodTypeDesc.of(CD_void);\n+\n@@ -231,1 +240,1 @@\n-        return addMethod(classBytes, cv -> new ReadObjectNoDataVisitor(cv));\n+        return addMethod(classBytes, READ_OBJECT_NO_DATA_NAME, READ_OBJECT_NO_DATA_DESC);\n@@ -235,84 +244,10 @@\n-                            Function<ClassVisitor,ClassVisitor> classVisitorCreator) {\n-        ClassReader reader = new ClassReader(classBytes);\n-        ClassWriter writer = new ClassWriter(reader, COMPUTE_MAXS | COMPUTE_FRAMES);\n-        reader.accept(classVisitorCreator.apply(writer), 0);\n-        return writer.toByteArray();\n-    }\n-\n-    static abstract class AbstractVisitor extends ClassVisitor {\n-        final String nameOfMethodToAdd;\n-        AbstractVisitor(ClassVisitor cv, String nameOfMethodToAdd) {\n-            super(ASM8, cv);\n-            this.nameOfMethodToAdd = nameOfMethodToAdd;\n-        }\n-        @Override\n-        public MethodVisitor visitMethod(final int access,\n-                                         final String name,\n-                                         final String descriptor,\n-                                         final String signature,\n-                                         final String[] exceptions) {\n-            \/\/ the method-to-be-added should not already exist\n-            assert !name.equals(nameOfMethodToAdd) : \"Unexpected \" + name + \" method\";\n-            return cv.visitMethod(access, name, descriptor, signature, exceptions);\n-        }\n-        @Override\n-        public void visitEnd() {\n-            throw new UnsupportedOperationException(\"implement me\");\n-        }\n-    }\n-\n-    \/** A visitor that generates and adds a writeObject method. *\/\n-    static final class WriteObjectVisitor extends AbstractVisitor {\n-        static final String WRITE_OBJECT_NAME = \"writeObject\";\n-        static final String WRITE_OBJECT_DESC = \"(Ljava\/io\/ObjectOutputStream;)V\";\n-        WriteObjectVisitor(ClassVisitor cv) { super(cv, WRITE_OBJECT_NAME); }\n-        @Override\n-        public void visitEnd() {\n-            MethodVisitor mv = cv.visitMethod(ACC_PRIVATE, WRITE_OBJECT_NAME, WRITE_OBJECT_DESC, null, null);\n-            mv.visitCode();\n-            mv.visitLdcInsn(WRITE_OBJECT_NAME + \" should not be invoked\");\n-            mv.visitMethodInsn(INVOKESTATIC, \"org\/testng\/Assert\", \"fail\", \"(Ljava\/lang\/String;)V\", false);\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n-\n-            cv.visitEnd();\n-        }\n-    }\n-\n-    \/** A visitor that generates and adds a readObject method. *\/\n-    static final class ReadObjectVisitor extends AbstractVisitor {\n-        static final String READ_OBJECT_NAME = \"readObject\";\n-        static final String READ_OBJECT_DESC = \"(Ljava\/io\/ObjectInputStream;)V\";\n-        ReadObjectVisitor(ClassVisitor cv) { super(cv, READ_OBJECT_NAME); }\n-        @Override\n-        public void visitEnd() {\n-            MethodVisitor mv = cv.visitMethod(ACC_PRIVATE, READ_OBJECT_NAME, READ_OBJECT_DESC, null, null);\n-            mv.visitCode();\n-            mv.visitLdcInsn(READ_OBJECT_NAME + \" should not be invoked\");\n-            mv.visitMethodInsn(INVOKESTATIC, \"org\/testng\/Assert\", \"fail\", \"(Ljava\/lang\/String;)V\", false);\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n-\n-            cv.visitEnd();\n-        }\n-    }\n-\n-    \/** A visitor that generates and adds a readObjectNoData method. *\/\n-    static final class ReadObjectNoDataVisitor extends AbstractVisitor {\n-        static final String READ_OBJECT_NO_DATA_NAME = \"readObjectNoData\";\n-        static final String READ_OBJECT_NO_DATA_DESC = \"()V\";\n-        ReadObjectNoDataVisitor(ClassVisitor cv) { super(cv, READ_OBJECT_NO_DATA_NAME); }\n-        @Override\n-        public void visitEnd() {\n-            MethodVisitor mv = cv.visitMethod(ACC_PRIVATE, READ_OBJECT_NO_DATA_NAME, READ_OBJECT_NO_DATA_DESC, null, null);\n-            mv.visitCode();\n-            mv.visitLdcInsn(READ_OBJECT_NO_DATA_NAME + \" should not be invoked\");\n-            mv.visitMethodInsn(INVOKESTATIC, \"org\/testng\/Assert\", \"fail\", \"(Ljava\/lang\/String;)V\", false);\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n-\n-            cv.visitEnd();\n-        }\n+                            String name, MethodTypeDesc desc) {\n+        var cf = ClassFile.of();\n+        return cf.transform(cf.parse(classBytes), ClassTransform.endHandler(clb -> {\n+            clb.withMethodBody(name, desc, ACC_PRIVATE, cob -> {\n+                cob.constantInstruction(name + \" should not be invoked\");\n+                cob.invokestatic(Assert.class.describeConstable().orElseThrow(), \"fail\",\n+                        MethodTypeDesc.of(CD_void, CD_String));\n+                cob.return_();\n+            });\n+        }));\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/ProhibitedMethods.java","additions":32,"deletions":97,"binary":false,"changes":129,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -41,0 +41,9 @@\n+import java.lang.classfile.ClassBuilder;\n+import java.lang.classfile.ClassElement;\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.FieldModel;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.ConstantDescs;\n+import java.lang.constant.DynamicConstantDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -44,6 +53,1 @@\n-import jdk.internal.org.objectweb.asm.ClassReader;\n-import jdk.internal.org.objectweb.asm.ClassVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.FieldVisitor;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.Type;\n+\n@@ -56,2 +60,9 @@\n-import static jdk.internal.org.objectweb.asm.ClassWriter.*;\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+import static java.lang.classfile.ClassFile.ACC_FINAL;\n+import static java.lang.classfile.ClassFile.ACC_PRIVATE;\n+import static java.lang.classfile.ClassFile.ACC_STATIC;\n+import static java.lang.constant.ConstantDescs.CD_Class;\n+import static java.lang.constant.ConstantDescs.CD_String;\n+import static java.lang.constant.ConstantDescs.CD_void;\n+import static java.lang.constant.ConstantDescs.CLASS_INIT_NAME;\n+import static java.lang.constant.ConstantDescs.INIT_NAME;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n@@ -221,4 +232,3 @@\n-        ClassReader reader = new ClassReader(classBytes);\n-        ClassWriter writer = new ClassWriter(reader, COMPUTE_MAXS | COMPUTE_FRAMES);\n-        reader.accept(new SerialPersistentFieldsVisitor(writer, spf), 0);\n-        return writer.toByteArray();\n+        var cf = ClassFile.of();\n+        var model = cf.parse(classBytes);\n+        return cf.transform(model, new SerialPersistentFieldsVisitor(model.thisClass().asSymbol(), spf));\n@@ -228,1 +238,1 @@\n-    static final class SerialPersistentFieldsVisitor extends ClassVisitor {\n+    static final class SerialPersistentFieldsVisitor implements ClassTransform {\n@@ -230,1 +240,2 @@\n-        static final String FIELD_DESC = \"[Ljava\/io\/ObjectStreamField;\";\n+        static final ClassDesc CD_ObjectStreamField = ObjectStreamField.class.describeConstable().orElseThrow();\n+        static final ClassDesc FIELD_DESC = CD_ObjectStreamField.arrayType();\n@@ -232,3 +243,3 @@\n-        String className;\n-        SerialPersistentFieldsVisitor(ClassVisitor cv, ObjectStreamField[] spf) {\n-            super(ASM8, cv);\n+        final ClassDesc className;\n+        SerialPersistentFieldsVisitor(ClassDesc className, ObjectStreamField[] spf) {\n+            this.className = className;\n@@ -237,0 +248,1 @@\n+\n@@ -238,18 +250,8 @@\n-        public void visit(final int version,\n-                          final int access,\n-                          final String name,\n-                          final String signature,\n-                          final String superName,\n-                          final String[] interfaces) {\n-            this.className = name;\n-            cv.visit(version, access, name, signature, superName, interfaces);\n-        }\n-        @Override\n-        public FieldVisitor visitField(final int access,\n-                                       final String name,\n-                                       final String descriptor,\n-                                       final String signature,\n-                                       final Object value) {\n-            \/\/ the field-to-be-added should not already exist\n-            assert !name.equals(\"serialPersistentFields\") : \"Unexpected \" + name + \" field\";\n-            return cv.visitField(access, name, descriptor, signature, value);\n+        public void accept(ClassBuilder builder, ClassElement element) {\n+            if (element instanceof FieldModel fieldModel) {\n+                var name = fieldModel.fieldName().stringValue();\n+                assert !name.equals(FIELD_NAME) : \"Unexpected \" + FIELD_NAME + \" field\";\n+                builder.accept(fieldModel);\n+            } else {\n+                builder.accept(element);\n+            }\n@@ -257,0 +259,1 @@\n+\n@@ -258,14 +261,5 @@\n-        public void visitEnd() {\n-            {\n-                FieldVisitor fv = cv.visitField(ACC_PRIVATE | ACC_STATIC | ACC_FINAL,\n-                                                FIELD_NAME,\n-                                                FIELD_DESC,\n-                                                null,\n-                                                null);\n-                fv.visitEnd();\n-            }\n-            {\n-                MethodVisitor mv = cv.visitMethod(ACC_STATIC, \"<clinit>\", \"()V\", null, null);\n-                mv.visitCode();\n-                mv.visitIntInsn(BIPUSH, spf.length);\n-                mv.visitTypeInsn(ANEWARRAY, \"java\/io\/ObjectStreamField\");\n+        public void atEnd(ClassBuilder builder) {\n+            builder.withField(FIELD_NAME, FIELD_DESC, ACC_PRIVATE | ACC_STATIC | ACC_FINAL);\n+            builder.withMethodBody(CLASS_INIT_NAME, MTD_void, ACC_STATIC, cob -> {\n+                cob.bipush(spf.length);\n+                cob.anewarray(CD_ObjectStreamField);\n@@ -275,7 +269,8 @@\n-                    mv.visitInsn(DUP);\n-                    mv.visitIntInsn(BIPUSH, i);\n-                    mv.visitTypeInsn(NEW, \"java\/io\/ObjectStreamField\");\n-                    mv.visitInsn(DUP);\n-                    mv.visitLdcInsn(osf.getName());\n-                    if (osf.getType().isPrimitive()) {\n-                        mv.visitFieldInsn(GETSTATIC,  getPrimitiveBoxClass(osf.getType()), \"TYPE\", \"Ljava\/lang\/Class;\");\n+                    cob.dup();\n+                    cob.bipush(i);\n+                    cob.new_(CD_ObjectStreamField);\n+                    cob.dup();\n+                    cob.constantInstruction(osf.getName());\n+                    if (osf.isPrimitive()) {\n+                        cob.constantInstruction(DynamicConstantDesc.ofNamed(\n+                                ConstantDescs.BSM_PRIMITIVE_CLASS, String.valueOf(osf.getTypeCode()), CD_Class));\n@@ -283,1 +278,2 @@\n-                        mv.visitLdcInsn(Type.getType(osf.getType()));\n+                        \/\/ Currently Classfile API cannot encode primitive classdescs as condy\n+                        cob.constantInstruction(osf.getType().describeConstable().orElseThrow());\n@@ -285,2 +281,2 @@\n-                    mv.visitMethodInsn(INVOKESPECIAL, \"java\/io\/ObjectStreamField\", \"<init>\", \"(Ljava\/lang\/String;Ljava\/lang\/Class;)V\", false);\n-                    mv.visitInsn(AASTORE);\n+                    cob.invokespecial(CD_ObjectStreamField, INIT_NAME, MethodTypeDesc.of(CD_void, CD_String, CD_Class));\n+                    cob.aastore();\n@@ -289,31 +285,3 @@\n-                mv.visitFieldInsn(PUTSTATIC, className, \"serialPersistentFields\", \"[Ljava\/io\/ObjectStreamField;\");\n-                mv.visitInsn(RETURN);\n-                mv.visitMaxs(0, 0);\n-                mv.visitEnd();\n-            }\n-            cv.visitEnd();\n-        }\n-\n-        static String getPrimitiveBoxClass(final Class<?> clazz) {\n-            if (!clazz.isPrimitive())\n-                throw new AssertionError(\"unexpected non-primitive:\" + clazz);\n-\n-            if (clazz == Integer.TYPE) {\n-                return \"java\/lang\/Integer\";\n-            } else if (clazz == Boolean.TYPE) {\n-                return \"java\/lang\/Boolean\";\n-            } else if (clazz == Byte.TYPE) {\n-                return \"java\/lang\/Byte\";\n-            } else if (clazz == Character.TYPE) {\n-                return \"java\/lang\/Character\";\n-            } else if (clazz == Short.TYPE) {\n-                return \"java\/lang\/Short\";\n-            } else if (clazz == Double.TYPE) {\n-                return \"java\/lang\/Double\";\n-            } else if (clazz == Float.TYPE) {\n-                return \"java\/lang\/Float\";\n-            } else if (clazz == Long.TYPE) {\n-                return \"java\/lang\/Long\";\n-            } else {\n-                throw new AssertionError(\"unknown:\" + clazz);\n-            }\n+                cob.putstatic(className, FIELD_NAME, FIELD_DESC);\n+                cob.return_();\n+            });\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/SerialPersistentFieldsTest.java","additions":60,"deletions":92,"binary":false,"changes":152,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tEnable logging of all serialization levels to the console\n+#       Enable logging of all serialization levels to the console\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/logging.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -29,2 +29,16 @@\n-import jdk.internal.org.objectweb.asm.*;\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+\n+import java.lang.classfile.ClassBuilder;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.CodeBuilder;\n+import java.lang.classfile.attribute.EnclosingMethodAttribute;\n+import java.lang.classfile.attribute.InnerClassInfo;\n+import java.lang.classfile.attribute.InnerClassesAttribute;\n+import java.lang.constant.ClassDesc;\n+import java.lang.reflect.AccessFlag;\n+import java.util.Optional;\n+\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n+import static java.lang.classfile.ClassFile.ACC_STATIC;\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.INIT_NAME;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n@@ -124,2 +138,2 @@\n-        final String innerName;\n-        final String outerName;\n+        final ClassDesc innerName;\n+        final ClassDesc outerName;\n@@ -129,2 +143,2 @@\n-            this.innerName = intl(innerName);\n-            this.outerName = intl(outerName);\n+            this.innerName = ClassDesc.of(innerName);\n+            this.outerName = ClassDesc.of(outerName);\n@@ -134,10 +148,6 @@\n-        static String intl(String name) { return name.replace('.', '\/'); }\n-\n-        static void makeDefaultCtor(ClassWriter cw) {\n-            MethodVisitor mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-            mv.visitCode();\n-            mv.visitVarInsn(ALOAD, 0);\n-            mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\", false);\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(1, 1);\n-            mv.visitEnd();\n+        static void makeDefaultCtor(ClassBuilder clb) {\n+            clb.withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC, cb -> {\n+                cb.aload(0);\n+                cb.invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                cb.return_();\n+            });\n@@ -146,1 +156,1 @@\n-        void makeCtxk(ClassWriter cw, boolean isInner) {\n+        void makeCtxk(ClassBuilder clb, boolean isInner) {\n@@ -148,1 +158,2 @@\n-                cw.visitOuterClass(outerName, \"f\", \"()V\");\n+                clb.with(EnclosingMethodAttribute.of(outerName,\n+                        Optional.of(\"f\"), Optional.of(MTD_void)));\n@@ -150,5 +161,2 @@\n-                MethodVisitor mv = cw.visitMethod(ACC_PUBLIC | ACC_STATIC, \"f\", \"()V\", null, null);\n-                mv.visitCode();\n-                mv.visitInsn(RETURN);\n-                mv.visitMaxs(0, 0);\n-                mv.visitEnd();\n+                clb.withMethodBody(\"f\", MTD_void, ACC_PUBLIC | ACC_STATIC,\n+                        CodeBuilder::return_);\n@@ -159,9 +167,10 @@\n-            String name = (isInner ? innerName : outerName);\n-            ClassWriter cw = new ClassWriter(0);\n-            cw.visit(V1_7, ACC_PUBLIC + ACC_SUPER, name, null, \"java\/lang\/Object\", null);\n-\n-            cw.visitInnerClass(innerName, outerName, simpleName, ACC_PUBLIC | ACC_STATIC);\n-\n-            makeDefaultCtor(cw);\n-            cw.visitEnd();\n-            return cw.toByteArray();\n+            var name = (isInner ? innerName : outerName);\n+            return ClassFile.of().build(name, clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+                clb.with(InnerClassesAttribute.of(\n+                        InnerClassInfo.of(innerName,\n+                                Optional.of(outerName),\n+                                Optional.of(simpleName))));\n+                makeDefaultCtor(clb);\n+            });\n@@ -171,9 +180,11 @@\n-            String name = (isInner ? innerName : outerName);\n-            ClassWriter cw = new ClassWriter(0);\n-            cw.visit(V1_7, ACC_PUBLIC + ACC_SUPER, name, null, \"java\/lang\/Object\", null);\n-\n-            cw.visitInnerClass(innerName, outerName, simpleName, ACC_PUBLIC);\n-\n-            makeDefaultCtor(cw);\n-            cw.visitEnd();\n-            return cw.toByteArray();\n+            var name = (isInner ? innerName : outerName);\n+            return ClassFile.of().build(name, clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+                clb.with(InnerClassesAttribute.of(\n+                        InnerClassInfo.of(innerName,\n+                                Optional.of(outerName),\n+                                Optional.of(simpleName),\n+                                AccessFlag.PUBLIC)));\n+                makeDefaultCtor(clb);\n+            });\n@@ -183,10 +194,12 @@\n-            String name = (isInner ? innerName : outerName);\n-            ClassWriter cw = new ClassWriter(0);\n-            cw.visit(V1_7, ACC_PUBLIC + ACC_SUPER, name, null, \"java\/lang\/Object\", null);\n-\n-            cw.visitInnerClass(innerName, null, simpleName, ACC_PUBLIC | ACC_STATIC);\n-            makeCtxk(cw, isInner);\n-\n-            makeDefaultCtor(cw);\n-            cw.visitEnd();\n-            return cw.toByteArray();\n+            var name = (isInner ? innerName : outerName);\n+            return ClassFile.of().build(name, clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+                clb.with(InnerClassesAttribute.of(\n+                        InnerClassInfo.of(innerName,\n+                                Optional.empty(),\n+                                Optional.of(simpleName),\n+                                AccessFlag.PUBLIC, AccessFlag.STATIC)));\n+                makeDefaultCtor(clb);\n+                makeCtxk(clb, isInner);\n+            });\n@@ -196,10 +209,12 @@\n-            String name = (isInner ? innerName : outerName);\n-            ClassWriter cw = new ClassWriter(0);\n-            cw.visit(V1_7, ACC_PUBLIC + ACC_SUPER, name, null, \"java\/lang\/Object\", null);\n-\n-            cw.visitInnerClass(innerName, null, null, ACC_PUBLIC | ACC_STATIC);\n-            makeCtxk(cw, isInner);\n-\n-            makeDefaultCtor(cw);\n-            cw.visitEnd();\n-            return cw.toByteArray();\n+            var name = (isInner ? innerName : outerName);\n+            return ClassFile.of().build(name, clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+                clb.with(InnerClassesAttribute.of(\n+                        InnerClassInfo.of(innerName,\n+                                Optional.empty(),\n+                                Optional.empty(),\n+                                AccessFlag.PUBLIC, AccessFlag.STATIC)));\n+                makeDefaultCtor(clb);\n+                makeCtxk(clb, isInner);\n+            });\n","filename":"test\/jdk\/java\/lang\/Class\/getSimpleName\/GetSimpleNameTest.java","additions":78,"deletions":63,"binary":false,"changes":141,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.io.InputStream;\n@@ -28,0 +27,7 @@\n+import java.lang.classfile.AnnotationElement;\n+import java.lang.classfile.AnnotationValue;\n+import java.lang.classfile.ClassBuilder;\n+import java.lang.classfile.ClassElement;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.attribute.RuntimeVisibleAnnotationsAttribute;\n@@ -39,7 +45,0 @@\n-import jdk.internal.org.objectweb.asm.AnnotationVisitor;\n-import jdk.internal.org.objectweb.asm.Attribute;\n-import jdk.internal.org.objectweb.asm.ClassReader;\n-import jdk.internal.org.objectweb.asm.ClassVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.commons.ModuleTargetAttribute;\n@@ -54,3 +53,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          java.base\/jdk.internal.org.objectweb.asm.commons\n- *          java.base\/jdk.internal.module\n+ * @modules java.base\/jdk.internal.module\n@@ -152,17 +149,33 @@\n-        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS\n-                                         + ClassWriter.COMPUTE_FRAMES);\n-\n-        ClassVisitor cv = new ClassVisitor(Opcodes.ASM6, cw) { };\n-\n-        ClassReader cr = new ClassReader(bytes);\n-        List<Attribute> attrs = new ArrayList<>();\n-        attrs.add(new ModuleTargetAttribute());\n-        cr.accept(cv, attrs.toArray(new Attribute[0]), 0);\n-\n-        AnnotationVisitor annotationVisitor\n-            = cv.visitAnnotation(\"Ljava\/lang\/Deprecated;\", true);\n-        annotationVisitor.visit(\"forRemoval\", forRemoval);\n-        annotationVisitor.visit(\"since\", since);\n-        annotationVisitor.visitEnd();\n-\n-        return cw.toByteArray();\n+        var cf = ClassFile.of();\n+        var oldModel = cf.parse(bytes);\n+        return cf.transform(oldModel, new ClassTransform() {\n+            boolean rvaaFound = false;\n+\n+            @Override\n+            public void accept(ClassBuilder builder, ClassElement element) {\n+                if (!rvaaFound && element instanceof RuntimeVisibleAnnotationsAttribute rvaa) {\n+                    rvaaFound = true;\n+                    var res = new ArrayList<java.lang.classfile.Annotation>(rvaa.annotations().size() + 1);\n+                    res.addAll(rvaa.annotations());\n+                    res.add(createDeprecated());\n+                    builder.accept(RuntimeVisibleAnnotationsAttribute.of(res));\n+                    return;\n+                }\n+                builder.accept(element);\n+            }\n+\n+            @Override\n+            public void atEnd(ClassBuilder builder) {\n+                if (!rvaaFound) {\n+                    builder.accept(RuntimeVisibleAnnotationsAttribute.of(List.of(createDeprecated())));\n+                }\n+            }\n+\n+            private java.lang.classfile.Annotation createDeprecated() {\n+                return java.lang.classfile.Annotation.of(\n+                        Deprecated.class.describeConstable().orElseThrow(),\n+                        AnnotationElement.of(\"forRemoval\", AnnotationValue.ofBoolean(forRemoval)),\n+                        AnnotationElement.of(\"since\", AnnotationValue.ofString(since))\n+                );\n+            }\n+        });\n","filename":"test\/jdk\/java\/lang\/ModuleTests\/AnnotationsTest.java","additions":41,"deletions":28,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tEnable logging java.lang.ProcessBuilder to the console\n+#       Enable logging java.lang.ProcessBuilder to the console\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/ProcessLogging-FINE.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tEnable logging java.lang.ProcessBuilder to the console\n+#       Enable logging java.lang.ProcessBuilder to the console\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/ProcessLogging-FINER.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tEnable logging java.lang.ProcessBuilder to the console\n+#       Enable logging java.lang.ProcessBuilder to the console\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/ProcessLogging-INFO.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tEnable logging java.lang.Runtime to the console\n+#       Enable logging java.lang.Runtime to the console\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/ExitLogging-FINE.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tEnable logging java.lang.Runtime to the console\n+#       Enable logging java.lang.Runtime to the console\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/ExitLogging-INFO.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tConfiguration file for log testing\n+#       Configuration file for log testing\n@@ -14,1 +14,0 @@\n-\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/SignedLoggerFinderTest\/logging.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -33,5 +33,0 @@\n-import jdk.internal.org.objectweb.asm.AnnotationVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.Type;\n-\n@@ -41,0 +36,8 @@\n+import java.lang.classfile.Annotation;\n+import java.lang.classfile.AnnotationElement;\n+import java.lang.classfile.AnnotationValue;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.attribute.RuntimeVisibleAnnotationsAttribute;\n+import java.lang.constant.ClassDesc;\n+\n+import static java.lang.constant.ConstantDescs.CD_Object;\n@@ -49,6 +52,9 @@\n-        ClassWriter writer = new ClassWriter(0);\n-        writer.visit(Opcodes.V1_8, 0, \"sample\/Carrier\", null, Type.getInternalName(Object.class), null);\n-        AnnotationVisitor v = writer.visitAnnotation(Type.getDescriptor(AnAnnotation.class), true);\n-        v.visitEnum(\"value\", Type.getDescriptor(AnEnum.class), \"VALUE\");\n-        writer.visitEnd();\n-        byte[] b = writer.toByteArray();\n+        byte[] b = ClassFile.of().build(ClassDesc.of(\"sample\", \"Carrier\"), clb -> {\n+            clb.withSuperclass(CD_Object);\n+            clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                    Annotation.of(\n+                            AnAnnotation.class.describeConstable().orElseThrow(),\n+                            AnnotationElement.of(\"value\", AnnotationValue.of(AnEnum.VALUE))\n+                    )\n+            ));\n+        });\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationTypeMismatchException\/AnnotationTypeMismatchTest.java","additions":19,"deletions":13,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -34,5 +34,0 @@\n-import jdk.internal.org.objectweb.asm.AnnotationVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.Type;\n-\n@@ -42,0 +37,8 @@\n+import java.lang.classfile.Annotation;\n+import java.lang.classfile.AnnotationElement;\n+import java.lang.classfile.AnnotationValue;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.attribute.RuntimeVisibleAnnotationsAttribute;\n+import java.lang.constant.ClassDesc;\n+\n+import static java.lang.constant.ConstantDescs.CD_Object;\n@@ -57,9 +60,9 @@\n-        ClassWriter writer = new ClassWriter(0);\n-        writer.visit(Opcodes.V1_8, 0, \"sample\/Carrier\", null, Type.getInternalName(Object.class), null);\n-        AnnotationVisitor v = writer.visitAnnotation(Type.getDescriptor(AnAnnotation.class), true);\n-        AnnotationVisitor v2 = v.visitArray(\"value\");\n-        v2.visit(null, \"v\");\n-        v2.visitEnd();\n-        v.visitEnd();\n-        writer.visitEnd();\n-        byte[] b = writer.toByteArray();\n+        byte[] b = ClassFile.of().build(ClassDesc.of(\"sample\", \"Carrier\"), clb -> {\n+            clb.withSuperclass(CD_Object);\n+            clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                    Annotation.of(\n+                            AnAnnotation.class.describeConstable().orElseThrow(),\n+                            AnnotationElement.of(\"value\", AnnotationValue.of(new String[] {\"v\"}))\n+                    )\n+            ));\n+        });\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationTypeMismatchException\/ArityTypeMismatchTest.java","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -33,5 +33,0 @@\n-import jdk.internal.org.objectweb.asm.AnnotationVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.Type;\n-\n@@ -42,0 +37,7 @@\n+import java.lang.classfile.AnnotationElement;\n+import java.lang.classfile.AnnotationValue;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.attribute.RuntimeVisibleAnnotationsAttribute;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n+import java.lang.reflect.AccessFlag;\n@@ -44,0 +46,4 @@\n+import static java.lang.classfile.ClassFile.ACC_ABSTRACT;\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+\n@@ -70,2 +76,1 @@\n-            if (cause instanceof AnnotationTypeMismatchException) {\n-                AnnotationTypeMismatchException e = ((AnnotationTypeMismatchException) cause);\n+            if (cause instanceof AnnotationTypeMismatchException e) {\n@@ -84,9 +89,12 @@\n-        ClassWriter writer = new ClassWriter(0);\n-        writer.visit(Opcodes.V1_8, 0, \"sample\/Carrier\", null, Type.getInternalName(Object.class), null);\n-        AnnotationVisitor v = writer.visitAnnotation(\"Lsample\/Host;\", true);\n-        AnnotationVisitor a = v.visitArray(\"value\");\n-        a.visitAnnotation(null, Type.getDescriptor(NoAnnotation.class)).visitEnd();\n-        a.visitEnd();\n-        v.visitEnd();\n-        writer.visitEnd();\n-        return writer.toByteArray();\n+        return ClassFile.of().build(ClassDesc.of(\"sample\", \"Carrier\"), clb -> {\n+            clb.withSuperclass(CD_Object);\n+            var badAnnotationArray = AnnotationValue.ofArray(AnnotationValue.ofAnnotation(\n+                    java.lang.classfile.Annotation.of(\n+                            NoAnnotation.class.describeConstable().orElseThrow()\n+                    )));\n+            clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                    java.lang.classfile.Annotation.of(ClassDesc.of(\"sample\", \"Host\"),\n+                            AnnotationElement.of(\"value\", badAnnotationArray)\n+                    )\n+            ));\n+        });\n@@ -96,16 +104,14 @@\n-        ClassWriter writer = new ClassWriter(0);\n-        writer.visit(Opcodes.V1_8,\n-                Opcodes.ACC_PUBLIC | Opcodes.ACC_ABSTRACT | Opcodes.ACC_INTERFACE | Opcodes.ACC_ANNOTATION,\n-                \"sample\/Host\",\n-                null,\n-                Type.getInternalName(Object.class),\n-                new String[]{Type.getInternalName(Annotation.class)});\n-        AnnotationVisitor a = writer.visitAnnotation(Type.getDescriptor(Retention.class), true);\n-        a.visitEnum(\"value\", Type.getDescriptor(RetentionPolicy.class), RetentionPolicy.RUNTIME.name());\n-        writer.visitMethod(Opcodes.ACC_PUBLIC | Opcodes.ACC_ABSTRACT,\n-                \"value\",\n-                Type.getMethodDescriptor(Type.getType(NoAnnotation[].class)),\n-                null,\n-                null).visitEnd();\n-        writer.visitEnd();\n-        return writer.toByteArray();\n+        return ClassFile.of().build(ClassDesc.of(\"sample\", \"Host\"), clb -> {\n+            clb.withSuperclass(CD_Object);\n+            clb.withInterfaceSymbols(Annotation.class.describeConstable().orElseThrow());\n+            clb.withFlags(AccessFlag.PUBLIC, AccessFlag.ABSTRACT, AccessFlag.INTERFACE,\n+                    AccessFlag.ANNOTATION);\n+            clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                    java.lang.classfile.Annotation.of(\n+                            Retention.class.describeConstable().orElseThrow(),\n+                            AnnotationElement.of(\"value\", AnnotationValue.of(RetentionPolicy.RUNTIME))\n+                    )\n+            ));\n+            clb.withMethod(\"value\", MethodTypeDesc.of(NoAnnotation[].class.describeConstable()\n+                    .orElseThrow()), ACC_PUBLIC | ACC_ABSTRACT, mb -> {});\n+        });\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationTypeMismatchException\/ArrayTypeMismatchTest.java","additions":40,"deletions":34,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -33,5 +33,0 @@\n-import jdk.internal.org.objectweb.asm.AnnotationVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.Type;\n-\n@@ -41,0 +36,8 @@\n+import java.lang.classfile.Annotation;\n+import java.lang.classfile.AnnotationElement;\n+import java.lang.classfile.AnnotationValue;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.attribute.RuntimeVisibleAnnotationsAttribute;\n+import java.lang.constant.ClassDesc;\n+\n+import static java.lang.constant.ConstantDescs.CD_Object;\n@@ -49,6 +52,8 @@\n-        ClassWriter writer = new ClassWriter(0);\n-        writer.visit(Opcodes.V1_8, 0, \"sample\/Carrier\", null, Type.getInternalName(Object.class), null);\n-        AnnotationVisitor v = writer.visitAnnotation(Type.getDescriptor(AnAnnotation.class), true);\n-        v.visitAnnotation(\"value\", Type.getDescriptor(AnAnnotation.class)).visitEnd();\n-        writer.visitEnd();\n-        byte[] b = writer.toByteArray();\n+        ClassDesc anAnnotationDesc = AnAnnotation.class.describeConstable().orElseThrow();\n+        byte[] b = ClassFile.of().build(ClassDesc.of(\"sample\", \"Carrier\"), clb -> {\n+            clb.withSuperclass(CD_Object);\n+            clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                    Annotation.of(anAnnotationDesc, AnnotationElement.of(\"value\",\n+                            AnnotationValue.ofAnnotation(Annotation.of(anAnnotationDesc))))\n+            ));\n+        });\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationTypeMismatchException\/EnumTypeMismatchTest.java","additions":18,"deletions":13,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,0 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n@@ -44,0 +43,1 @@\n+ * @enablePreview\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationVerifier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * Create class file using ASM, slightly modified the ASMifier output\n+ * Create class file using Class-File API, slightly modified the ASMifier output\n@@ -28,2 +28,0 @@\n-\n-\n@@ -33,2 +31,23 @@\n-import jdk.internal.org.objectweb.asm.*;\n-\n+import java.io.Serializable;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.classfile.Annotation;\n+import java.lang.classfile.AnnotationElement;\n+import java.lang.classfile.AnnotationValue;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.attribute.AnnotationDefaultAttribute;\n+import java.lang.classfile.attribute.ExceptionsAttribute;\n+import java.lang.classfile.attribute.RuntimeVisibleAnnotationsAttribute;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n+import java.lang.reflect.AccessFlag;\n+\n+import static java.lang.classfile.ClassFile.ACC_ABSTRACT;\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n+import static java.lang.constant.ConstantDescs.CD_Exception;\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.CD_int;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n+import static java.lang.reflect.AccessFlag.ABSTRACT;\n+import static java.lang.reflect.AccessFlag.INTERFACE;\n+import static java.lang.reflect.AccessFlag.PUBLIC;\n@@ -37,0 +56,2 @@\n+    private static final ClassDesc CD_Annotation = java.lang.annotation.Annotation.class.describeConstable().orElseThrow();\n+    private static final ClassDesc CD_Retention = Retention.class.describeConstable().orElseThrow();\n@@ -66,29 +87,13 @@\n-    private static class AnnotationWithVoidReturnDump implements Opcodes {\n-        public static byte[] dump() throws Exception {\n-            ClassWriter cw = new ClassWriter(0);\n-            MethodVisitor mv;\n-            AnnotationVisitor av0;\n-\n-            cw.visit(52, ACC_PUBLIC + ACC_ANNOTATION + ACC_ABSTRACT + ACC_INTERFACE,\n-                    \"AnnotationWithVoidReturn\", null,\n-                    \"java\/lang\/Object\", new String[]{\"java\/lang\/annotation\/Annotation\"});\n-\n-            {\n-                av0 = cw.visitAnnotation(\"Ljava\/lang\/annotation\/Retention;\", true);\n-                av0.visitEnum(\"value\", \"Ljava\/lang\/annotation\/RetentionPolicy;\",\n-                        \"RUNTIME\");\n-                av0.visitEnd();\n-            }\n-            {\n-                mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, \"m\", \"()V\", null, null);\n-                mv.visitEnd();\n-            }\n-            {\n-                av0 = mv.visitAnnotationDefault();\n-                av0.visit(null, new Integer(1));\n-                av0.visitEnd();\n-            }\n-            cw.visitEnd();\n-\n-            return cw.toByteArray();\n-\n+    private static class AnnotationWithVoidReturnDump {\n+        public static byte[] dump() {\n+            return ClassFile.of().build(ClassDesc.of(\"AnnotationWithVoidReturn\"), clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withInterfaceSymbols(CD_Annotation);\n+                clb.withFlags(PUBLIC, AccessFlag.ANNOTATION, ABSTRACT, AccessFlag.INTERFACE);\n+                clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                        Annotation.of(CD_Retention, AnnotationElement.of(\"value\",\n+                                AnnotationValue.of(RetentionPolicy.RUNTIME)))\n+                ));\n+                clb.withMethod(\"m\", MTD_void, ACC_PUBLIC | ACC_ABSTRACT,\n+                        mb -> mb.with(AnnotationDefaultAttribute.of(AnnotationValue.ofInt(1))));\n+            });\n@@ -107,32 +112,13 @@\n-    private static class AnnotationWithParameterDump implements Opcodes {\n-        public static byte[] dump() throws Exception {\n-\n-            ClassWriter cw = new ClassWriter(0);\n-            MethodVisitor mv;\n-            AnnotationVisitor av0;\n-\n-            cw.visit(52, ACC_PUBLIC + ACC_ANNOTATION + ACC_ABSTRACT + ACC_INTERFACE,\n-                    \"AnnotationWithParameter\", null,\n-                    \"java\/lang\/Object\", new String[]{\"java\/lang\/annotation\/Annotation\"});\n-\n-            {\n-                av0 = cw.visitAnnotation(\"Ljava\/lang\/annotation\/Retention;\", true);\n-                av0.visitEnum(\"value\", \"Ljava\/lang\/annotation\/RetentionPolicy;\",\n-                        \"RUNTIME\");\n-                av0.visitEnd();\n-            }\n-            {\n-                mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT,\n-                        \"badValue\",\n-                        \"(I)I\", \/\/ Bad method with a parameter\n-                        null, null);\n-                mv.visitEnd();\n-            }\n-            {\n-                av0 = mv.visitAnnotationDefault();\n-                av0.visit(null, new Integer(-1));\n-                av0.visitEnd();\n-            }\n-            cw.visitEnd();\n-\n-            return cw.toByteArray();\n+    private static class AnnotationWithParameterDump {\n+        public static byte[] dump() {\n+            return ClassFile.of().build(ClassDesc.of(\"AnnotationWithParameter\"), clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withInterfaceSymbols(CD_Annotation);\n+                clb.withFlags(PUBLIC, AccessFlag.ANNOTATION, ABSTRACT, AccessFlag.INTERFACE);\n+                clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                        Annotation.of(CD_Retention, AnnotationElement.of(\"value\",\n+                                AnnotationValue.of(RetentionPolicy.RUNTIME)))\n+                ));\n+                clb.withMethod(\"m\", MethodTypeDesc.of(CD_int, CD_int), ACC_PUBLIC | ACC_ABSTRACT,\n+                        mb -> mb.with(AnnotationDefaultAttribute.of(AnnotationValue.ofInt(-1))));\n+            });\n@@ -151,29 +137,13 @@\n-    private static class AnnotationWithExtraInterfaceDump implements Opcodes {\n-        public static byte[] dump() throws Exception {\n-            ClassWriter cw = new ClassWriter(0);\n-            MethodVisitor mv;\n-            AnnotationVisitor av0;\n-\n-            cw.visit(52, ACC_PUBLIC + ACC_ANNOTATION + ACC_ABSTRACT + ACC_INTERFACE,\n-                    \"AnnotationWithExtraInterface\", null,\n-                    \"java\/lang\/Object\", new String[]{\"java\/lang\/annotation\/Annotation\",\n-                                                     \"java\/io\/Serializable\"});\n-\n-            {\n-                av0 = cw.visitAnnotation(\"Ljava\/lang\/annotation\/Retention;\", true);\n-                av0.visitEnum(\"value\", \"Ljava\/lang\/annotation\/RetentionPolicy;\",\n-                        \"RUNTIME\");\n-                av0.visitEnd();\n-            }\n-            {\n-                mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, \"m\", \"()I\", null, null);\n-                mv.visitEnd();\n-            }\n-            {\n-                av0 = mv.visitAnnotationDefault();\n-                av0.visit(null, new Integer(1));\n-                av0.visitEnd();\n-            }\n-            cw.visitEnd();\n-\n-            return cw.toByteArray();\n+    private static class AnnotationWithExtraInterfaceDump {\n+        public static byte[] dump() {\n+            return ClassFile.of().build(ClassDesc.of(\"AnnotationWithExtraInterface\"), clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withInterfaceSymbols(CD_Annotation, Serializable.class.describeConstable().orElseThrow());\n+                clb.withFlags(PUBLIC, AccessFlag.ANNOTATION, ABSTRACT, AccessFlag.INTERFACE);\n+                clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                        Annotation.of(CD_Retention, AnnotationElement.of(\"value\",\n+                                AnnotationValue.of(RetentionPolicy.RUNTIME)))\n+                ));\n+                clb.withMethod(\"m\", MethodTypeDesc.of(CD_int), ACC_PUBLIC | ACC_ABSTRACT,\n+                        mb -> mb.with(AnnotationDefaultAttribute.of(AnnotationValue.ofInt(1))));\n+            });\n@@ -192,29 +162,15 @@\n-    private static class AnnotationWithExceptionDump implements Opcodes {\n-        public static byte[] dump() throws Exception {\n-            ClassWriter cw = new ClassWriter(0);\n-            MethodVisitor mv;\n-            AnnotationVisitor av0;\n-\n-            cw.visit(52, ACC_PUBLIC + ACC_ANNOTATION + ACC_ABSTRACT + ACC_INTERFACE,\n-                    \"AnnotationWithException\", null,\n-                    \"java\/lang\/Object\", new String[]{\"java\/lang\/annotation\/Annotation\"});\n-\n-            {\n-                av0 = cw.visitAnnotation(\"Ljava\/lang\/annotation\/Retention;\", true);\n-                av0.visitEnum(\"value\", \"Ljava\/lang\/annotation\/RetentionPolicy;\",\n-                        \"RUNTIME\");\n-                av0.visitEnd();\n-            }\n-            {\n-                mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, \"m\", \"()I\", null,\n-                                    new String[] {\"java\/lang\/Exception\"});\n-                mv.visitEnd();\n-            }\n-            {\n-                av0 = mv.visitAnnotationDefault();\n-                av0.visit(null, new Integer(1));\n-                av0.visitEnd();\n-            }\n-            cw.visitEnd();\n-\n-            return cw.toByteArray();\n+    private static class AnnotationWithExceptionDump {\n+        public static byte[] dump() {\n+            return ClassFile.of().build(ClassDesc.of(\"AnnotationWithException\"), clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withInterfaceSymbols(CD_Annotation);\n+                clb.withFlags(PUBLIC, AccessFlag.ANNOTATION, ABSTRACT, AccessFlag.INTERFACE);\n+                clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                        Annotation.of(CD_Retention, AnnotationElement.of(\"value\",\n+                                AnnotationValue.of(RetentionPolicy.RUNTIME)))\n+                ));\n+                clb.withMethod(\"m\", MethodTypeDesc.of(CD_int), ACC_PUBLIC | ACC_ABSTRACT, mb -> {\n+                    mb.with(AnnotationDefaultAttribute.of(AnnotationValue.ofInt(1)));\n+                    mb.with(ExceptionsAttribute.ofSymbols(CD_Exception));\n+                });\n+            });\n@@ -233,28 +189,13 @@\n-    private static class AnnotationWithHashCodeDump implements Opcodes {\n-        public static byte[] dump() throws Exception {\n-            ClassWriter cw = new ClassWriter(0);\n-            MethodVisitor mv;\n-            AnnotationVisitor av0;\n-\n-            cw.visit(52, ACC_PUBLIC + ACC_ANNOTATION + ACC_ABSTRACT + ACC_INTERFACE,\n-                    \"AnnotationWithHashCode\", null,\n-                    \"java\/lang\/Object\", new String[]{\"java\/lang\/annotation\/Annotation\"});\n-\n-            {\n-                av0 = cw.visitAnnotation(\"Ljava\/lang\/annotation\/Retention;\", true);\n-                av0.visitEnum(\"value\", \"Ljava\/lang\/annotation\/RetentionPolicy;\",\n-                        \"RUNTIME\");\n-                av0.visitEnd();\n-            }\n-            {\n-                mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, \"hashCode\", \"()I\", null, null);\n-                mv.visitEnd();\n-            }\n-            {\n-                av0 = mv.visitAnnotationDefault();\n-                av0.visit(null, new Integer(1));\n-                av0.visitEnd();\n-            }\n-            cw.visitEnd();\n-\n-            return cw.toByteArray();\n+    private static class AnnotationWithHashCodeDump {\n+        public static byte[] dump() {\n+            return ClassFile.of().build(ClassDesc.of(\"AnnotationWithHashCode\"), clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withInterfaceSymbols(CD_Annotation);\n+                clb.withFlags(PUBLIC, AccessFlag.ANNOTATION, ABSTRACT, AccessFlag.INTERFACE);\n+                clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                        Annotation.of(CD_Retention, AnnotationElement.of(\"value\",\n+                                AnnotationValue.of(RetentionPolicy.RUNTIME)))\n+                ));\n+                clb.withMethod(\"hashCode\", MethodTypeDesc.of(CD_int), ACC_PUBLIC | ACC_ABSTRACT,\n+                        mb -> mb.with(AnnotationDefaultAttribute.of(AnnotationValue.ofInt(1))));\n+            });\n@@ -274,1 +215,1 @@\n-    private static class AnnotationWithDefaultMemberDump implements Opcodes {\n+    private static class AnnotationWithDefaultMemberDump {\n@@ -276,39 +217,18 @@\n-            ClassWriter cw = new ClassWriter(0);\n-            MethodVisitor mv, dv;\n-            AnnotationVisitor av0;\n-\n-            cw.visit(52, ACC_PUBLIC + ACC_ANNOTATION + ACC_ABSTRACT + ACC_INTERFACE,\n-                    \"AnnotationWithDefaultMember\", null,\n-                    \"java\/lang\/Object\", new String[]{\"java\/lang\/annotation\/Annotation\"});\n-\n-            {\n-                av0 = cw.visitAnnotation(\"Ljava\/lang\/annotation\/Retention;\", true);\n-                av0.visitEnum(\"value\", \"Ljava\/lang\/annotation\/RetentionPolicy;\",\n-                        \"RUNTIME\");\n-                av0.visitEnd();\n-            }\n-            {\n-                mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, \"m\", \"()I\", null, null);\n-                mv.visitEnd();\n-            }\n-            {\n-                av0 = mv.visitAnnotationDefault();\n-                av0.visit(null, new Integer(1));\n-                av0.visitEnd();\n-            }\n-            {\n-                dv = cw.visitMethod(ACC_PUBLIC, \"d\", \"()I\", null, null);\n-                dv.visitMaxs(1, 1);\n-                dv.visitCode();\n-                dv.visitInsn(Opcodes.ICONST_2);\n-                dv.visitInsn(Opcodes.IRETURN);\n-                dv.visitEnd();\n-            }\n-            {\n-                av0 = dv.visitAnnotationDefault();\n-                av0.visit(null, new Integer(2));\n-                av0.visitEnd();\n-            }\n-            cw.visitEnd();\n-\n-            return cw.toByteArray();\n+            return ClassFile.of().build(ClassDesc.of(\"AnnotationWithDefaultMember\"), clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withInterfaceSymbols(CD_Annotation);\n+                clb.withFlags(PUBLIC, AccessFlag.ANNOTATION, ABSTRACT, AccessFlag.INTERFACE);\n+                clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                        Annotation.of(CD_Retention, AnnotationElement.of(\"value\",\n+                                AnnotationValue.of(RetentionPolicy.RUNTIME)))\n+                ));\n+                clb.withMethod(\"m\", MethodTypeDesc.of(CD_int), ACC_PUBLIC | ACC_ABSTRACT,\n+                        mb -> mb.with(AnnotationDefaultAttribute.of(AnnotationValue.ofInt(1))));\n+                clb.withMethod(\"d\", MethodTypeDesc.of(CD_int), ACC_PUBLIC, mb -> {\n+                    mb.with(AnnotationDefaultAttribute.of(AnnotationValue.ofInt(2)));\n+                    mb.withCode(cob -> {\n+                        cob.iconst_2();\n+                        cob.ireturn();\n+                    });\n+                });\n+            });\n@@ -327,28 +247,13 @@\n-    private static class AnnotationWithoutAnnotationAccessModifierDump implements Opcodes {\n-        public static byte[] dump() throws Exception {\n-            ClassWriter cw = new ClassWriter(0);\n-            MethodVisitor mv;\n-            AnnotationVisitor av0;\n-\n-            cw.visit(52, ACC_PUBLIC + \/* ACC_ANNOTATION +*\/ ACC_ABSTRACT + ACC_INTERFACE,\n-                    \"AnnotationWithoutAnnotationAccessModifier\", null,\n-                    \"java\/lang\/Object\", new String[]{\"java\/lang\/annotation\/Annotation\"});\n-\n-            {\n-                av0 = cw.visitAnnotation(\"Ljava\/lang\/annotation\/Retention;\", true);\n-                av0.visitEnum(\"value\", \"Ljava\/lang\/annotation\/RetentionPolicy;\",\n-                        \"RUNTIME\");\n-                av0.visitEnd();\n-            }\n-            {\n-                mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, \"m\", \"()I\", null, null);\n-                mv.visitEnd();\n-            }\n-            {\n-                av0 = mv.visitAnnotationDefault();\n-                av0.visit(null, new Integer(1));\n-                av0.visitEnd();\n-            }\n-            cw.visitEnd();\n-\n-            return cw.toByteArray();\n+    private static class AnnotationWithoutAnnotationAccessModifierDump {\n+        public static byte[] dump() {\n+            return ClassFile.of().build(ClassDesc.of(\"AnnotationWithoutAnnotationAccessModifier\"), clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withInterfaceSymbols(CD_Annotation);\n+                clb.withFlags(PUBLIC, \/*AccessFlag.ANNOTATION,*\/ ABSTRACT, AccessFlag.INTERFACE);\n+                clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                        Annotation.of(CD_Retention, AnnotationElement.of(\"value\",\n+                                AnnotationValue.of(RetentionPolicy.RUNTIME)))\n+                ));\n+                clb.withMethod(\"m\", MethodTypeDesc.of(CD_int), ACC_PUBLIC | ACC_ABSTRACT,\n+                        mb -> mb.with(AnnotationDefaultAttribute.of(AnnotationValue.ofInt(1))));\n+            });\n@@ -368,18 +273,10 @@\n-    private static class HolderXDump implements Opcodes {\n-        public static byte[] dump() throws Exception {\n-            ClassWriter cw = new ClassWriter(0);\n-\n-            cw.visit(52, ACC_PUBLIC + ACC_ABSTRACT + ACC_INTERFACE,\n-                    \"HolderX\", null,\n-                    \"java\/lang\/Object\", new String[0]);\n-\n-            {\n-                AnnotationVisitor av0;\n-                av0 = cw.visitAnnotation(\"LGoodAnnotation;\", true);\n-                av0.visitEnd();\n-                av0 = cw.visitAnnotation(\"LAnnotationWithoutAnnotationAccessModifier;\", true);\n-                av0.visitEnd();\n-            }\n-            cw.visitEnd();\n-\n-            return cw.toByteArray();\n+    private static class HolderXDump {\n+        public static byte[] dump() {\n+            return ClassFile.of().build(ClassDesc.of(\"HolderX\"), clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withFlags(PUBLIC, ABSTRACT, INTERFACE);\n+                clb.with(RuntimeVisibleAnnotationsAttribute.of(\n+                        Annotation.of(ClassDesc.of(\"GoodAnnotation\")),\n+                        Annotation.of(ClassDesc.of(\"ClassFileGenerator$AnnotationWithoutAnnotationAccessModifier\"))\n+                ));\n+            });\n","filename":"test\/jdk\/java\/lang\/annotation\/ClassFileGenerator.java","additions":136,"deletions":239,"binary":false,"changes":375,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-# Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,2 @@\n-    --add-exports java.base\/jdk.internal.org.objectweb.asm=ALL-UNNAMED ${AGENT}.java asmlib\/*.java\n+    --enable-preview --release 23 \\\n+    ${AGENT}.java asmlib\/*.java\n","filename":"test\/jdk\/java\/lang\/instrument\/MakeJAR2.sh","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -31,2 +31,2 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          java.management\n+ * @enablePreview\n+ * @modules java.management\n@@ -38,0 +38,4 @@\n+import asmlib.Instrumentor;\n+\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -42,1 +46,1 @@\n-import asmlib.*;\n+import static java.lang.constant.ConstantDescs.*;\n@@ -57,0 +61,2 @@\n+        private static final ClassDesc CD_StringIdCallbackReporter = ClassDesc.ofInternalName(\"bootreporter\/StringIdCallbackReporter\");\n+        private static final MethodTypeDesc MTD_void_String_int = MethodTypeDesc.of(CD_void, CD_String, CD_int);\n@@ -79,5 +85,7 @@\n-                                        \"wrapped_\" + trname + \"_\",\n-                                        (h)->{\n-                                            h.push(h.getName());\n-                                            h.push(transformId);\n-                                            h.invokeStatic(\"bootreporter\/StringIdCallbackReporter\", \"tracker\", \"(Ljava\/lang\/String;I)V\", false);\n+                                        \"wrapped_\" + trname + \"_\", (name, h) -> {\n+                                            h.constantInstruction(name);\n+                                            h.constantInstruction(transformId);\n+                                            h.invokestatic(\n+                                                    CD_StringIdCallbackReporter,\n+                                                    \"tracker\",\n+                                                    MTD_void_String_int);\n","filename":"test\/jdk\/java\/lang\/instrument\/NativeMethodPrefixAgent.java","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/lang\/instrument\/NegativeAgentRunner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,4 +42,2 @@\n-        String testArgs = String.format(\n-                \"-javaagent:%s\/Agent.jar -classpath %s DummyMain\",\n-                System.getProperty(\"test.src\"),\n-                System.getProperty(\"test.classes\", \".\"));\n+        String testArgs = String.format(\"-javaagent:%s\/Agent.jar\",\n+                System.getProperty(\"test.src\"));\n@@ -47,3 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n-                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n-        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(testArgs, \"DummyMain\");\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/PremainClassTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -30,2 +30,2 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          java.instrument\n+ * @enablePreview\n+ * @modules java.instrument\n@@ -36,0 +36,2 @@\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -41,0 +43,3 @@\n+import static java.lang.constant.ConstantDescs.CD_int;\n+import static java.lang.constant.ConstantDescs.CD_void;\n+\n@@ -51,0 +56,2 @@\n+        private static final ClassDesc CD_RetransformAgent = RetransformAgent.class.describeConstable().orElseThrow();\n+        private static final MethodTypeDesc MTD_void_int = MethodTypeDesc.of(CD_void, CD_int);\n@@ -86,3 +93,5 @@\n-                                        (h)->{\n-                                           h.push(fixedIndex);\n-                                           h.invokeStatic(\"RetransformAgent\", \"callTracker\", \"(I)V\", false);\n+                                        cb -> {\n+                                           cb.constantInstruction(fixedIndex);\n+                                           cb.invokestatic(\n+                                                   CD_RetransformAgent,\n+                                                   \"callTracker\", MTD_void_int);\n","filename":"test\/jdk\/java\/lang\/instrument\/RetransformAgent.java","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,18 @@\n-import java.io.PrintStream;\n+import java.lang.classfile.AccessFlags;\n+import java.lang.classfile.ClassBuilder;\n+import java.lang.classfile.ClassElement;\n+import java.lang.classfile.ClassModel;\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.CodeBuilder;\n+import java.lang.classfile.CodeElement;\n+import java.lang.classfile.CodeModel;\n+import java.lang.classfile.CodeTransform;\n+import java.lang.classfile.MethodBuilder;\n+import java.lang.classfile.MethodElement;\n+import java.lang.classfile.MethodModel;\n+import java.lang.classfile.MethodTransform;\n+import java.lang.classfile.Opcode;\n+import java.lang.classfile.TypeKind;\n+import java.lang.constant.MethodTypeDesc;\n+import java.lang.reflect.AccessFlag;\n@@ -29,7 +46,2 @@\n-import java.util.concurrent.atomic.AtomicInteger;\n-import jdk.internal.org.objectweb.asm.ClassReader;\n-import jdk.internal.org.objectweb.asm.ClassVisitor;\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.function.BiConsumer;\n@@ -37,39 +49,0 @@\n-import jdk.internal.org.objectweb.asm.Type;\n-\n-public class Instrumentor {\n-    public static class InstrHelper {\n-        private final MethodVisitor mv;\n-        private final String name;\n-\n-        InstrHelper(MethodVisitor mv, String name) {\n-            this.mv = mv;\n-            this.name = name;\n-        }\n-\n-        public String getName() {\n-            return this.name;\n-        }\n-\n-        public void invokeStatic(String owner, String name, String desc, boolean itf) {\n-            mv.visitMethodInsn(Opcodes.INVOKESTATIC, owner, name, desc, itf);\n-        }\n-\n-        public void invokeSpecial(String owner, String name, String desc) {\n-            mv.visitMethodInsn(Opcodes.INVOKESPECIAL, owner, name, desc, false);\n-        }\n-\n-        public void invokeVirtual(String owner, String name, String desc) {\n-            mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, owner, name, desc, false);\n-        }\n-\n-        public void push(int val) {\n-            if (val >= -1 && val <= 5) {\n-                mv.visitInsn(Opcodes.ICONST_0 + val);\n-            } else if (val >= Byte.MIN_VALUE && val <= Byte.MAX_VALUE) {\n-                mv.visitIntInsn(Opcodes.BIPUSH, val);\n-            } else if (val >= Short.MIN_VALUE && val <= Short.MAX_VALUE) {\n-                mv.visitIntInsn(Opcodes.SIPUSH, val);\n-            } else {\n-                mv.visitLdcInsn(val);\n-            }\n-        }\n@@ -77,3 +50,1 @@\n-        public void push(Object val) {\n-            mv.visitLdcInsn(val);\n-        }\n+import static java.lang.classfile.ClassFile.ACC_NATIVE;\n@@ -81,6 +52,1 @@\n-        public void println(String s) {\n-            mv.visitFieldInsn(Opcodes.GETSTATIC, Type.getInternalName(System.class), \"out\", Type.getDescriptor(PrintStream.class));\n-            mv.visitLdcInsn(s);\n-            mv.visitMethodInsn(Opcodes.INVOKEVIRTUAL, Type.getInternalName(PrintStream.class), \"println\", Type.getMethodDescriptor(Type.VOID_TYPE, Type.getType(String.class)), false);\n-        }\n-    }\n+public class Instrumentor {\n@@ -92,5 +58,3 @@\n-\n-    private final ClassReader cr;\n-    private final ClassWriter output;\n-    private ClassVisitor instrumentingVisitor = null;\n-    private final AtomicInteger matches = new AtomicInteger(0);\n+    private final ClassModel model;\n+    private ClassTransform transform = ClassTransform.ACCEPT_ALL;\n+    private final AtomicBoolean dirty = new AtomicBoolean(false);\n@@ -99,3 +63,1 @@\n-        cr = new ClassReader(classData);\n-        output = new ClassWriter(ClassWriter.COMPUTE_MAXS);\n-        instrumentingVisitor = output;\n+        model = ClassFile.of().parse(classData);\n@@ -104,2 +66,8 @@\n-    public synchronized Instrumentor addMethodEntryInjection(String methodName, Consumer<InstrHelper> injector) {\n-        instrumentingVisitor = new ClassVisitor(Opcodes.ASM7, instrumentingVisitor) {\n+    public synchronized Instrumentor addMethodEntryInjection(String methodName, Consumer<CodeBuilder> injector) {\n+        transform = transform.andThen(ClassTransform.transformingMethodBodies(mm -> {\n+            if (mm.methodName().equalsString(methodName)) {\n+                dirty.set(true);\n+                return true;\n+            }\n+            return false;\n+        }, new CodeTransform() {\n@@ -107,14 +75,2 @@\n-            public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {\n-                MethodVisitor mv = super.visitMethod(access, name, desc, signature, exceptions);\n-\n-                if (name.equals(methodName)) {\n-                    matches.getAndIncrement();\n-\n-                    mv = new MethodVisitor(Opcodes.ASM7, mv) {\n-                        @Override\n-                        public void visitCode() {\n-                            injector.accept(new InstrHelper(mv, name));\n-                        }\n-                    };\n-                }\n-                return mv;\n+            public void atStart(CodeBuilder builder) {\n+                injector.accept(builder);\n@@ -122,8 +78,0 @@\n-        };\n-        return this;\n-    }\n-\n-    public synchronized Instrumentor addNativeMethodTrackingInjection(String prefix, Consumer<InstrHelper> injector) {\n-        instrumentingVisitor = new ClassVisitor(Opcodes.ASM9, instrumentingVisitor) {\n-            private final Set<Consumer<ClassVisitor>> wmGenerators = new HashSet<>();\n-            private String className;\n@@ -132,3 +80,2 @@\n-            public void visit(int version, int access, String name, String signature, String superName, String[] interfaces) {\n-                this.className = name;\n-                super.visit(version, access, name, signature, superName, interfaces);\n+            public void accept(CodeBuilder builder, CodeElement element) {\n+                builder.accept(element);\n@@ -136,0 +83,3 @@\n+        }));\n+        return this;\n+    }\n@@ -137,0 +87,3 @@\n+    public synchronized Instrumentor addNativeMethodTrackingInjection(String prefix, BiConsumer<String, CodeBuilder> injector) {\n+        transform = transform.andThen(ClassTransform.ofStateful(() -> new ClassTransform() {\n+            private final Set<Consumer<ClassBuilder>> wmGenerators = new HashSet<>();\n@@ -139,3 +92,3 @@\n-            public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {\n-                if ((access & Opcodes.ACC_NATIVE) != 0) {\n-                    matches.getAndIncrement();\n+            public void accept(ClassBuilder builder, ClassElement element) {\n+                if (element instanceof MethodModel mm && mm.flags().has(AccessFlag.NATIVE)) {\n+                    dirty.set(true);\n@@ -143,0 +96,1 @@\n+                    String name = mm.methodName().stringValue();\n@@ -144,18 +98,8 @@\n-                    wmGenerators.add((v)->{\n-                        MethodVisitor mv = v.visitMethod(access & ~Opcodes.ACC_NATIVE, name, desc, signature, exceptions);\n-                        mv.visitCode();\n-                        injector.accept(new InstrHelper(mv, name));\n-                        Type[] argTypes = Type.getArgumentTypes(desc);\n-                        Type retType = Type.getReturnType(desc);\n-\n-                        boolean isStatic = (access & Opcodes.ACC_STATIC) != 0;\n-                        if (!isStatic) {\n-                            mv.visitIntInsn(Opcodes.ALOAD, 0); \/\/ load \"this\"\n-                        }\n-\n-                        \/\/ load the method parameters\n-                        if (argTypes.length > 0) {\n-                            int ptr = isStatic ? 0 : 1;\n-                            for(Type argType : argTypes) {\n-                                mv.visitIntInsn(argType.getOpcode(Opcodes.ILOAD), ptr);\n-                                ptr += argType.getSize();\n+                    MethodTypeDesc mt = mm.methodTypeSymbol();\n+                    wmGenerators.add(clb -> clb.transformMethod(mm, new MethodTransform() {\n+                        @Override\n+                        public void accept(MethodBuilder mb, MethodElement me) {\n+                            if (me instanceof AccessFlags flags) {\n+                                mb.withFlags(flags.flagsMask() & ~ACC_NATIVE);\n+                            } else if (!(me instanceof CodeModel)) {\n+                                mb.with(me);\n@@ -165,2 +109,26 @@\n-                        mv.visitMethodInsn(isStatic ? Opcodes.INVOKESTATIC : Opcodes.INVOKESPECIAL, className, newName, desc, false);\n-                        mv.visitInsn(retType.getOpcode(Opcodes.IRETURN));\n+                        @Override\n+                        public void atEnd(MethodBuilder mb) {\n+                            Consumer<CodeBuilder> injection = cb -> injector.accept(name, cb);\n+                            mb.withCode(injection.andThen(cb -> {\n+                                int ptr;\n+                                boolean isStatic = mm.flags().has(AccessFlag.STATIC);\n+                                if (!isStatic) {\n+                                    cb.aload(0); \/\/ load \"this\"\n+                                    ptr = 1;\n+                                } else {\n+                                    ptr = 0;\n+                                }\n+\n+                                \/\/ load method parameters\n+                                for (int i = 0; i < mt.parameterCount(); i++) {\n+                                    TypeKind kind = TypeKind.from(mt.parameterType(i));\n+                                    cb.loadInstruction(kind, ptr);\n+                                    ptr += kind.slotSize();\n+                                }\n+\n+                                cb.invokeInstruction(isStatic ? Opcode.INVOKESTATIC : Opcode.INVOKESPECIAL,\n+                                        model.thisClass().asSymbol(), newName, mt, false);\n+                                cb.returnInstruction(TypeKind.from(mt.returnType()));\n+                            }));\n+                        }\n+                    }));\n@@ -168,4 +136,3 @@\n-                        mv.visitMaxs(1, 1); \/\/ dummy call; let ClassWriter to deal with this\n-                        mv.visitEnd();\n-                    });\n-                    return super.visitMethod(access, newName, desc, signature, exceptions);\n+                    builder.withMethod(newName, mt, mm.flags().flagsMask(), mm::forEachElement);\n+                } else {\n+                    builder.accept(element);\n@@ -173,1 +140,0 @@\n-                return super.visitMethod(access, name, desc, signature, exceptions);\n@@ -177,5 +143,2 @@\n-            public void visitEnd() {\n-                wmGenerators.stream().forEach((e) -> {\n-                    e.accept(cv);\n-                });\n-                super.visitEnd();\n+            public void atEnd(ClassBuilder builder) {\n+                wmGenerators.forEach(e -> e.accept(builder));\n@@ -183,2 +146,1 @@\n-        };\n-\n+        }));\n@@ -189,1 +151,1 @@\n-        cr.accept(instrumentingVisitor, ClassReader.SKIP_DEBUG + ClassReader.EXPAND_FRAMES);\n+        var bytes = ClassFile.of().transform(model, transform);\n@@ -191,1 +153,1 @@\n-        return matches.get() == 0 ? null : output.toByteArray();\n+        return dirty.get() ? bytes : null;\n","filename":"test\/jdk\/java\/lang\/instrument\/asmlib\/Instrumentor.java","additions":91,"deletions":129,"binary":false,"changes":220,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.ClassFile;\n@@ -30,1 +32,0 @@\n-import jdk.internal.org.objectweb.asm.*;\n@@ -34,5 +35,0 @@\n-    static interface VisitorMaker {\n-    ClassVisitor make(ClassVisitor visitor);\n-    }\n-\n-\n@@ -58,1 +54,1 @@\n-    private Map<String, VisitorMaker> replaced;\n+    private Map<String, ClassTransform> replaced;\n@@ -70,1 +66,1 @@\n-    public BogoLoader(Set<String> non_system, Map<String, VisitorMaker> replaced) {\n+    public BogoLoader(Set<String> non_system, Map<String, ClassTransform> replaced) {\n@@ -129,5 +125,2 @@\n-                    ClassReader cr = new ClassReader(classData);\n-                    ClassWriter cw = new ClassWriter(0);\n-                    VisitorMaker vm = replaced.get(name);\n-                    cr.accept(vm.make(cw), 0);\n-                    classData = cw.toByteArray();\n+                    var cf = ClassFile.of();\n+                    classData = cf.transform(cf.parse(classData), replaced.get(name));\n","filename":"test\/jdk\/java\/lang\/invoke\/8022701\/BogoLoader.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -28,1 +28,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -33,0 +33,3 @@\n+import java.lang.classfile.AccessFlags;\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.MethodModel;\n@@ -36,4 +39,0 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.ClassVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n@@ -41,1 +40,5 @@\n-public class MHIllegalAccess implements Opcodes {\n+import static java.lang.classfile.ClassFile.ACC_PRIVATE;\n+import static java.lang.classfile.ClassFile.ACC_PROTECTED;\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n+\n+public class MHIllegalAccess {\n@@ -43,1 +46,1 @@\n-   public static void main(String args[]) throws Throwable  {\n+   public static void main(String[] args) throws Throwable {\n@@ -50,12 +53,7 @@\n-      BogoLoader.VisitorMaker privatize = new BogoLoader.VisitorMaker() {\n-           public ClassVisitor make(ClassVisitor cv) {\n-               return new ClassVisitor(Opcodes.ASM5, cv) {\n-                   public MethodVisitor visitMethod(int access, String name, String desc,\n-                           String signature, String[] exceptions) {\n-                       if (name.equals(\"m\"))\n-                           access = (access | ACC_PRIVATE) & ~ (ACC_PUBLIC | ACC_PROTECTED);\n-                           return super.visitMethod(access, name, desc, signature, exceptions);\n-                   }\n-               };\n-           }\n-       };\n+      var privatize = ClassTransform.transformingMethods(m -> m.methodName().equalsString(\"m\"), (mb, me) -> {\n+          if (me instanceof AccessFlags af) {\n+              mb.withFlags((af.flagsMask() | ACC_PRIVATE) & ~ (ACC_PUBLIC | ACC_PROTECTED));\n+          } else {\n+              mb.accept(me);\n+          }\n+      });\n@@ -66,12 +64,7 @@\n-     BogoLoader.VisitorMaker changeName = new BogoLoader.VisitorMaker() {\n-           public ClassVisitor make(ClassVisitor cv) {\n-               return new ClassVisitor(Opcodes.ASM5, cv) {\n-                   public MethodVisitor visitMethod(int access, String name, String desc,\n-                           String signature, String[] exceptions) {\n-                       if (name.equals(\"m\"))\n-                           name = \"nemo\";\n-                           return super.visitMethod(access, name, desc, signature, exceptions);\n-                   }\n-               };\n-           }\n-       };\n+     ClassTransform changeName = (cb, ce) -> {\n+         if (ce instanceof MethodModel mm && mm.methodName().equalsString(\"m\")) {\n+             cb.withMethod(\"nemo\", mm.methodTypeSymbol(), mm.flags().flagsMask(), mm::forEachElement);\n+         } else {\n+             cb.accept(ce);\n+         }\n+     };\n@@ -97,2 +90,2 @@\n-    private static int testOneError(BogoLoader.VisitorMaker vm, String[] args, Class expected) throws ClassNotFoundException, Throwable {\n-      HashMap<String, BogoLoader.VisitorMaker> replace = new HashMap<String, BogoLoader.VisitorMaker>();\n+    private static int testOneError(ClassTransform vm, String[] args, Class<?> expected) throws ClassNotFoundException, Throwable {\n+      var replace = new HashMap<String, ClassTransform>();\n","filename":"test\/jdk\/java\/lang\/invoke\/8022701\/MHIllegalAccess.java","additions":28,"deletions":35,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- *          java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -33,0 +33,2 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n@@ -34,2 +36,1 @@\n-import static java.lang.invoke.MethodHandles.*;\n-import static java.lang.invoke.MethodHandles.Lookup.*;\n+import java.lang.reflect.AccessFlag;\n@@ -41,5 +42,0 @@\n-\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n-\n@@ -47,0 +43,9 @@\n+\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n+import static java.lang.classfile.ClassFile.ACC_STATIC;\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.CLASS_INIT_NAME;\n+import static java.lang.constant.ConstantDescs.INIT_NAME;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n+import static java.lang.invoke.MethodHandles.*;\n+import static java.lang.invoke.MethodHandles.Lookup.*;\n@@ -51,0 +56,2 @@\n+    private static final ClassDesc CD_Runnable = Runnable.class.describeConstable().orElseThrow();\n+    private static final ClassDesc CD_MissingSuperClass = ClassDesc.of(\"MissingSuperClass\");\n@@ -254,19 +261,9 @@\n-        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS\n-                                         + ClassWriter.COMPUTE_FRAMES);\n-        cw.visit(V9,\n-                ACC_PUBLIC + ACC_SUPER,\n-                className.replace(\".\", \"\/\"),\n-                null,\n-                \"java\/lang\/Object\",\n-                null);\n-\n-        \/\/ <init>\n-        MethodVisitor mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-        mv.visitVarInsn(ALOAD, 0);\n-        mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\", false);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(0, 0);\n-        mv.visitEnd();\n-\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(ClassDesc.of(className), clb -> {\n+            clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+            clb.withSuperclass(CD_Object);\n+            clb.withMethodBody(INIT_NAME, MTD_void, PUBLIC, cob -> {\n+                cob.aload(0);\n+                cob.invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                cob.return_();\n+            });\n+        });\n@@ -283,27 +280,13 @@\n-        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS\n-                                         + ClassWriter.COMPUTE_FRAMES);\n-        cw.visit(V9,\n-                ACC_PUBLIC + ACC_SUPER,\n-                className.replace(\".\", \"\/\"),\n-                null,\n-                \"java\/lang\/Object\",\n-                new String[] { \"java\/lang\/Runnable\" });\n-\n-        \/\/ <init>\n-        MethodVisitor mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-        mv.visitVarInsn(ALOAD, 0);\n-        mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\", false);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(0, 0);\n-        mv.visitEnd();\n-\n-        \/\/ run()\n-        String tc = targetClass.replace(\".\", \"\/\");\n-        mv = cw.visitMethod(ACC_PUBLIC, \"run\", \"()V\", null, null);\n-        mv.visitMethodInsn(INVOKESTATIC, tc, targetMethod, \"()V\", false);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(0, 0);\n-        mv.visitEnd();\n-\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(ClassDesc.of(className), clb -> {\n+            clb.withSuperclass(CD_Object);\n+            clb.withInterfaceSymbols(CD_Runnable);\n+            clb.withMethodBody(INIT_NAME, MTD_void, PUBLIC, cob -> {\n+                cob.aload(0);\n+                cob.invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                cob.return_();\n+            });\n+            clb.withMethodBody(\"run\", MTD_void, PUBLIC, cob -> {\n+                cob.invokestatic(ClassDesc.of(targetClass), targetMethod, MTD_void);\n+                cob.return_();\n+            });\n+        });\n@@ -320,27 +303,13 @@\n-        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS\n-                                         + ClassWriter.COMPUTE_FRAMES);\n-        cw.visit(V9,\n-                ACC_PUBLIC + ACC_SUPER,\n-                className.replace(\".\", \"\/\"),\n-                null,\n-                \"java\/lang\/Object\",\n-                null);\n-\n-        \/\/ <init>\n-        MethodVisitor mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-        mv.visitVarInsn(ALOAD, 0);\n-        mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\", false);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(0, 0);\n-        mv.visitEnd();\n-\n-        \/\/ <clinit>\n-        String tc = targetClass.replace(\".\", \"\/\");\n-        mv = cw.visitMethod(ACC_STATIC, \"<clinit>\", \"()V\", null, null);\n-        mv.visitMethodInsn(INVOKESTATIC, tc, targetMethod, \"()V\", false);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(0, 0);\n-        mv.visitEnd();\n-\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(ClassDesc.of(className), clb -> {\n+            clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+            clb.withSuperclass(CD_Object);\n+            clb.withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC, cob -> {\n+                cob.aload(0);\n+                cob.invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                cob.return_();\n+            });\n+            clb.withMethodBody(CLASS_INIT_NAME, MTD_void, ACC_STATIC, cob -> {\n+                cob.invokestatic(ClassDesc.of(targetClass), targetMethod, MTD_void);\n+                cob.return_();\n+            });\n+        });\n@@ -353,19 +322,9 @@\n-        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS\n-                + ClassWriter.COMPUTE_FRAMES);\n-        cw.visit(V14,\n-                ACC_PUBLIC + ACC_SUPER,\n-                className.replace(\".\", \"\/\"),\n-                null,\n-                \"MissingSuperClass\",\n-                null);\n-\n-        \/\/ <init>\n-        MethodVisitor mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-        mv.visitVarInsn(ALOAD, 0);\n-        mv.visitMethodInsn(INVOKESPECIAL, \"MissingSuperClass\", \"<init>\", \"()V\", false);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(0, 0);\n-        mv.visitEnd();\n-\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(ClassDesc.of(className), clb -> {\n+            clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+            clb.withSuperclass(CD_MissingSuperClass);\n+            clb.withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC, cob -> {\n+                cob.aload(0);\n+                cob.invokespecial(CD_MissingSuperClass, INIT_NAME, MTD_void);\n+                cob.return_();\n+            });\n+        });\n@@ -378,11 +337,1 @@\n-        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS\n-                + ClassWriter.COMPUTE_FRAMES);\n-        cw.visit(V14,\n-                ACC_MODULE,\n-                \"module-info\",\n-                null,\n-                null,\n-                null);\n-\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(ClassDesc.of(\"module-info\"), cb -> cb.withFlags(AccessFlag.MODULE));\n","filename":"test\/jdk\/java\/lang\/invoke\/DefineClassTest.java","additions":61,"deletions":112,"binary":false,"changes":173,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -35,0 +35,8 @@\n+import java.lang.classfile.ClassBuilder;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.TypeKind;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.ConstantDescs;\n+import java.lang.constant.DirectMethodHandleDesc;\n+import java.lang.constant.DynamicConstantDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -39,0 +47,1 @@\n+import java.lang.reflect.AccessFlag;\n@@ -46,0 +55,1 @@\n+import java.util.function.Consumer;\n@@ -48,1 +58,0 @@\n-import jdk.internal.org.objectweb.asm.*;\n@@ -52,0 +61,2 @@\n+import static java.lang.classfile.ClassFile.*;\n+import static java.lang.constant.ConstantDescs.*;\n@@ -53,1 +64,0 @@\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n@@ -58,0 +68,1 @@\n+    private static final ClassDesc CD_ClassDataTest = ClassDataTest.class.describeConstable().orElseThrow();\n@@ -297,3 +308,1 @@\n-        Handle bsm = new Handle(H_INVOKESTATIC, \"ClassDataTest\", \"getClassDataEntry\",\n-                \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/Class;)Ljava\/lang\/Object;\",\n-                false);\n+        DirectMethodHandleDesc bsm = ConstantDescs.ofConstantBootstrap(CD_ClassDataTest, \"getClassDataEntry\", CD_Object);\n@@ -303,1 +312,1 @@\n-                                         Class.class, new ConstantDynamic(\"class\", Type.getDescriptor(Class.class), bsm))\n+                                         Class.class, DynamicConstantDesc.ofNamed(bsm, \"class\", CD_Class))\n@@ -305,1 +314,1 @@\n-                                         MethodHandle.class, new ConstantDynamic(\"method\", Type.getDescriptor(MethodHandle.class), bsm))\n+                                         MethodHandle.class, DynamicConstantDesc.ofNamed(bsm, \"method\", CD_MethodHandle))\n@@ -345,2 +354,2 @@\n-        private final ClassWriter cw;\n-        private final String classname;\n+        private Consumer<ClassBuilder> cw;\n+        private final ClassDesc classname;\n@@ -353,10 +362,10 @@\n-            this.classname = classname;\n-            this.cw = new ClassWriter(ClassWriter.COMPUTE_FRAMES);\n-            cw.visit(V14, ACC_FINAL, classname, null, OBJECT_CLS, null);\n-            MethodVisitor mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-            mv.visitCode();\n-            mv.visitVarInsn(ALOAD, 0);\n-            mv.visitMethodInsn(INVOKESPECIAL, OBJECT_CLS, \"<init>\", \"()V\", false);\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n+            this.classname = ClassDesc.ofInternalName(classname);\n+            this.cw = clb -> {\n+                clb.withSuperclass(CD_Object);\n+                clb.withFlags(AccessFlag.FINAL);\n+                clb.withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC, cob -> {\n+                    cob.aload(0);\n+                    cob.invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                    cob.return_();\n+                });\n+            };\n@@ -366,2 +375,1 @@\n-            cw.visitEnd();\n-            byte[] bytes = cw.toByteArray();\n+            byte[] bytes = ClassFile.of().build(classname, cw);\n@@ -381,14 +389,8 @@\n-            MethodType mtype = MethodType.methodType(returnType);\n-            MethodVisitor mv = cw.visitMethod(accessFlags,\n-                                             \"classData\",\n-                                              mtype.descriptorString(), null, null);\n-            mv.visitCode();\n-            Handle bsm = new Handle(H_INVOKESTATIC, MHS_CLS, \"classData\",\n-                                    CLASS_DATA_BSM_DESCR,\n-                                    false);\n-            ConstantDynamic dynamic = new ConstantDynamic(\"_\", Type.getDescriptor(returnType), bsm);\n-            mv.visitLdcInsn(dynamic);\n-            mv.visitInsn(returnType == int.class ? IRETURN :\n-                            (returnType == float.class ? FRETURN : ARETURN));\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n+            ClassDesc returnDesc = returnType.describeConstable().orElseThrow();\n+            MethodTypeDesc mt = MethodTypeDesc.of(returnDesc);\n+            cw = cw.andThen(clb -> {\n+                clb.withMethodBody(\"classData\", mt, accessFlags, cob -> {\n+                    cob.constantInstruction(DynamicConstantDesc.ofNamed(BSM_CLASS_DATA, DEFAULT_NAME, returnDesc));\n+                    cob.returnInstruction(TypeKind.from(returnType));\n+                });\n+            });\n@@ -402,13 +404,8 @@\n-            MethodType mtype = MethodType.methodType(returnType);\n-            MethodVisitor mv = cw.visitMethod(accessFlags,\n-                                              \"classData\",\n-                                               mtype.descriptorString(), null, null);\n-            mv.visitCode();\n-            Handle bsm = new Handle(H_INVOKESTATIC, \"java\/lang\/invoke\/MethodHandles\", \"classDataAt\",\n-                        \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/Class;I)Ljava\/lang\/Object;\",\n-                        false);\n-            ConstantDynamic dynamic = new ConstantDynamic(\"_\", Type.getDescriptor(returnType), bsm, index);\n-            mv.visitLdcInsn(dynamic);\n-            mv.visitInsn(returnType == int.class? IRETURN : ARETURN);\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n+            ClassDesc returnDesc = returnType.describeConstable().orElseThrow();\n+            MethodTypeDesc mt = MethodTypeDesc.of(returnDesc);\n+            cw = cw.andThen(clb -> {\n+                clb.withMethodBody(\"classData\", mt, accessFlags, cob -> {\n+                    cob.constantInstruction(DynamicConstantDesc.ofNamed(BSM_CLASS_DATA_AT, DEFAULT_NAME, returnDesc, index));\n+                    cob.returnInstruction(TypeKind.from(returnType));\n+                });\n+            });\n@@ -418,10 +415,9 @@\n-        ClassByteBuilder classData(int accessFlags, String name, Class<?> returnType, ConstantDynamic dynamic) {\n-            MethodType mtype = MethodType.methodType(returnType);\n-            MethodVisitor mv = cw.visitMethod(accessFlags,\n-                                              name,\n-                                              mtype.descriptorString(), null, null);\n-            mv.visitCode();\n-            mv.visitLdcInsn(dynamic);\n-            mv.visitInsn(returnType == int.class? IRETURN : ARETURN);\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n+        ClassByteBuilder classData(int accessFlags, String name, Class<?> returnType, DynamicConstantDesc<?> dynamic) {\n+            ClassDesc returnDesc = returnType.describeConstable().orElseThrow();\n+            MethodTypeDesc mt = MethodTypeDesc.of(returnDesc);\n+            cw = cw.andThen(clb -> {\n+                clb.withMethodBody(name, mt, accessFlags, cob -> {\n+                    cob.constantInstruction(dynamic);\n+                    cob.returnInstruction(TypeKind.from(returnType));\n+                });\n+            });\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandles\/classData\/ClassDataTest.java","additions":56,"deletions":60,"binary":false,"changes":116,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.ClassFile;\n@@ -30,1 +32,1 @@\n-import jdk.internal.org.objectweb.asm.*;\n+\n@@ -35,5 +37,0 @@\n-    static interface VisitorMaker {\n-    ClassVisitor make(ClassVisitor visitor);\n-    }\n-\n-\n@@ -59,1 +56,1 @@\n-    private Map<String, VisitorMaker> replaced;\n+    private Map<String, ClassTransform> replaced;\n@@ -71,1 +68,1 @@\n-    public BogoLoader(Set<String> non_system, Map<String, VisitorMaker> replaced) {\n+    public BogoLoader(Set<String> non_system, Map<String, ClassTransform> replaced) {\n@@ -130,5 +127,2 @@\n-                    ClassReader cr = new ClassReader(classData);\n-                    ClassWriter cw = new ClassWriter(0);\n-                    VisitorMaker vm = replaced.get(name);\n-                    cr.accept(vm.make(cw), 0);\n-                    classData = cw.toByteArray();\n+                    var cf = ClassFile.of();\n+                    classData = cf.transform(cf.parse(classData), replaced.get(name));\n","filename":"test\/jdk\/java\/lang\/invoke\/accessProtectedSuper\/BogoLoader.java","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -28,1 +28,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -33,1 +33,5 @@\n-import java.lang.reflect.InvocationTargetException;\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.attribute.InnerClassInfo;\n+import java.lang.classfile.attribute.InnerClassesAttribute;\n+import java.lang.classfile.constantpool.ClassEntry;\n+import java.lang.classfile.constantpool.Utf8Entry;\n@@ -37,4 +41,4 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.ClassVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n+\n+import static java.lang.classfile.ClassFile.ACC_PRIVATE;\n+import static java.lang.classfile.ClassFile.ACC_PROTECTED;\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n@@ -47,11 +51,1 @@\n-class MakeProtected implements BogoLoader.VisitorMaker, Opcodes {\n-\n-    final boolean whenVisitInner;\n-\n-    MakeProtected(boolean when_visit_inner) {\n-        super();\n-        whenVisitInner = when_visit_inner;\n-    }\n-\n-    public ClassVisitor make(ClassVisitor cv) {\n-        return new ClassVisitor(Opcodes.ASM7, cv) {\n+public class Test {\n@@ -59,13 +53,16 @@\n-            @Override\n-            public void visitInnerClass(String name, String outerName,\n-                    String innerName, int access) {\n-                if (whenVisitInner) {\n-                    int access_ = (ACC_PROTECTED | access) & ~(ACC_PRIVATE | ACC_PUBLIC);\n-                    System.out.println(\"visitInnerClass: name = \" + name\n-                            + \", outerName = \" + outerName\n-                            + \", innerName = \" + innerName\n-                            + \", access original = 0x\" + Integer.toHexString(access)\n-                            + \", access modified to 0x\" + Integer.toHexString(access_));\n-                    access = access_;\n-                }\n-                super.visitInnerClass(name, outerName, innerName, access);\n+    public static void main(String[] argv) throws Throwable {\n+        ClassTransform makeProtectedNop = ClassTransform.ACCEPT_ALL;\n+        ClassTransform makeProtectedMod = (cb, ce) -> {\n+            if (ce instanceof InnerClassesAttribute ica) {\n+                cb.accept(InnerClassesAttribute.of(ica.classes().stream().map(ici -> {\n+                    \/\/ AccessFlags doesn't support inner class flags yet\n+                    var flags = (ACC_PROTECTED | ici.flagsMask()) & ~(ACC_PRIVATE | ACC_PUBLIC);\n+                    System.out.println(\"visitInnerClass: name = \" + ici.innerClass().asInternalName()\n+                            + \", outerName = \" + ici.outerClass().map(ClassEntry::asInternalName).orElse(\"null\")\n+                            + \", innerName = \" + ici.innerName().map(Utf8Entry::stringValue).orElse(\"null\")\n+                            + \", access original = 0x\" + Integer.toHexString(ici.flagsMask())\n+                            + \", access modified to 0x\" + Integer.toHexString(flags));\n+                    return InnerClassInfo.of(ici.innerClass(), ici.outerClass(), ici.innerName(), flags);\n+                }).toList()));\n+            } else {\n+                cb.accept(ce);\n@@ -74,8 +71,0 @@\n-    }\n-};\n-\n-public class Test {\n-\n-    public static void main(String argv[]) throws Exception, Throwable {\n-        BogoLoader.VisitorMaker makeProtectedNop = new MakeProtected(false);\n-        BogoLoader.VisitorMaker makeProtectedMod = new MakeProtected(true);\n@@ -92,4 +81,3 @@\n-    private static int tryModifiedInvocation(BogoLoader.VisitorMaker makeProtected)\n-            throws Throwable, ClassNotFoundException {\n-        HashMap<String, BogoLoader.VisitorMaker> replace\n-                = new HashMap<String, BogoLoader.VisitorMaker>();\n+    private static int tryModifiedInvocation(ClassTransform makeProtected)\n+            throws Throwable {\n+        var replace = new HashMap<String, ClassTransform>();\n@@ -97,1 +85,1 @@\n-        HashSet<String> in_bogus = new HashSet<String>();\n+        var in_bogus = new HashSet<String>();\n","filename":"test\/jdk\/java\/lang\/invoke\/accessProtectedSuper\/Test.java","additions":33,"deletions":45,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          jdk.compiler\n+ * @modules jdk.compiler\n@@ -29,0 +28,2 @@\n+ * @enablePreview\n+ * @comment Change enablePreview with the flag in setup's compileSources\n@@ -39,0 +40,2 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n@@ -40,4 +43,0 @@\n-\n-import static java.lang.invoke.MethodHandles.lookup;\n-import static java.lang.invoke.MethodHandles.Lookup.ClassOption.*;\n-\n@@ -54,2 +53,0 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Type;\n@@ -63,1 +60,5 @@\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+import static java.lang.classfile.ClassFile.*;\n+import static java.lang.constant.ConstantDescs.CD_Enum;\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.invoke.MethodHandles.lookup;\n+import static java.lang.invoke.MethodHandles.Lookup.ClassOption.*;\n@@ -80,1 +81,1 @@\n-        compileSources(SRC_DIR, CLASSES_DIR);\n+        compileSources(SRC_DIR, CLASSES_DIR, \"--enable-preview\", \"--release\", \"23\");\n@@ -267,2 +268,2 @@\n-        byte[] bytes = (accessFlags == ACC_ENUM) ? classBytes(name, Enum.class, accessFlags)\n-                                                 : classBytes(name, accessFlags);\n+        byte[] bytes = (accessFlags == ACC_ENUM) ? classBytes(name, CD_Enum, accessFlags)\n+                : classBytes(name, accessFlags);\n@@ -517,1 +518,1 @@\n-        return classBytes(classname, Object.class, accessFlags);\n+        return classBytes(classname, CD_Object, accessFlags);\n@@ -520,6 +521,5 @@\n-    private static byte[] classBytes(String classname, Class<?> supertType, int accessFlags) {\n-        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS + ClassWriter.COMPUTE_FRAMES);\n-        cw.visit(V14, ACC_PUBLIC|accessFlags, classname, null, Type.getInternalName(supertType), null);\n-        cw.visitEnd();\n-\n-        return cw.toByteArray();\n+    private static byte[] classBytes(String classname, ClassDesc superType, int accessFlags) {\n+        return ClassFile.of().build(ClassDesc.ofInternalName(classname), clb -> clb\n+                .withVersion(JAVA_14_VERSION, 0)\n+                .withFlags(accessFlags | ACC_PUBLIC)\n+                .withSuperclass(superType));\n","filename":"test\/jdk\/java\/lang\/invoke\/defineHiddenClass\/BasicTest.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -32,0 +32,3 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -34,0 +37,1 @@\n+import java.lang.reflect.AccessFlag;\n@@ -39,1 +43,0 @@\n-import jdk.internal.org.objectweb.asm.*;\n@@ -42,0 +45,4 @@\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.CD_int;\n+import static java.lang.constant.ConstantDescs.INIT_NAME;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n@@ -45,1 +52,0 @@\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n@@ -49,0 +55,1 @@\n+    private static final ClassDesc CD_HiddenNestmateTest = HiddenNestmateTest.class.describeConstable().orElseThrow();\n@@ -168,28 +175,14 @@\n-        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS + ClassWriter.COMPUTE_FRAMES);\n-        MethodVisitor mv;\n-\n-        cw.visit(V12, ACC_FINAL, classname, null, \"java\/lang\/Object\", null);\n-\n-        {\n-            mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-            mv.visitCode();\n-            mv.visitVarInsn(ALOAD, 0);\n-            mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\");\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n-        }\n-        {\n-            \/\/ access a private member of the nest host class\n-            mv = cw.visitMethod(ACC_PUBLIC, \"test\", \"(LHiddenNestmateTest;)I\", null, null);\n-            mv.visitCode();\n-            mv.visitVarInsn(ALOAD, 0);\n-            mv.visitVarInsn(ALOAD, 1);\n-            mv.visitMethodInsn(INVOKEVIRTUAL, \"HiddenNestmateTest\", \"privMethod\", \"()I\");\n-            mv.visitInsn(IRETURN);\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n-        }\n-        cw.visitEnd();\n-\n-        return cw.toByteArray();\n+        return ClassFile.of().build(ClassDesc.ofInternalName(classname), clb -> {\n+            clb.withSuperclass(CD_Object);\n+            clb.withFlags(AccessFlag.FINAL);\n+            clb.withMethodBody(INIT_NAME, MTD_void, PUBLIC, cob -> {\n+                cob.aload(0);\n+                cob.invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                cob.return_();\n+            });\n+            clb.withMethodBody(\"test\", MethodTypeDesc.of(CD_int, CD_HiddenNestmateTest), PUBLIC, cob -> {\n+                cob.aload(1);\n+                cob.invokevirtual(CD_HiddenNestmateTest, \"privMethod\", MethodTypeDesc.of(CD_int));\n+                cob.ireturn();\n+            });\n+        });\n","filename":"test\/jdk\/java\/lang\/invoke\/defineHiddenClass\/HiddenNestmateTest.java","additions":25,"deletions":32,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          jdk.compiler\n+ * @modules jdk.compiler\n@@ -35,0 +34,2 @@\n+ * @comment This test itself cannot enablePreview, or hidden class definition\n+ *         will pass\n@@ -37,0 +38,2 @@\n+import java.io.ByteArrayInputStream;\n+import java.io.DataInputStream;\n@@ -42,1 +45,0 @@\n-import jdk.internal.org.objectweb.asm.ClassReader;\n@@ -65,3 +67,3 @@\n-        ClassReader reader = new ClassReader(bytes);\n-        int minor = reader.readUnsignedShort(4);\n-        assertTrue(minor == 65535);\n+        var dis = new DataInputStream(new ByteArrayInputStream(bytes));\n+        dis.skipBytes(4); \/\/ 0xCAFEBABE\n+        assertEquals(dis.readUnsignedShort(), 65535); \/\/ Minor version\n","filename":"test\/jdk\/java\/lang\/invoke\/defineHiddenClass\/PreviewHiddenClass.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n- * @modules java.base\/jdk.internal.misc java.base\/jdk.internal.org.objectweb.asm\n+ * @modules java.base\/jdk.internal.misc\n+ * @enablePreview\n@@ -33,0 +34,3 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -37,1 +41,1 @@\n-import jdk.internal.org.objectweb.asm.*;\n+import java.lang.reflect.AccessFlag;\n@@ -40,1 +44,6 @@\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n+import static java.lang.classfile.ClassFile.ACC_STATIC;\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.CD_int;\n+import static java.lang.constant.ConstantDescs.INIT_NAME;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n@@ -109,23 +118,14 @@\n-        ClassWriter cw = new ClassWriter(0);\n-        MethodVisitor mv;\n-\n-        cw.visit(52, ACC_SUPER | ACC_PUBLIC, pkg+\"\/MyClass\", null, \"java\/lang\/Object\", null);\n-        {\n-            mv = cw.visitMethod(0, \"<init>\", \"()V\", null, null);\n-            mv.visitCode();\n-            mv.visitVarInsn(ALOAD, 0);\n-            mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\", false);\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(1, 1);\n-            mv.visitEnd();\n-        }\n-        {\n-            mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, \"get\", \"(I)Ljava\/lang\/Object;\", null, null);\n-            mv.visitCode();\n-            mv.visitInsn(ACONST_NULL);\n-            mv.visitInsn(ARETURN);\n-            mv.visitMaxs(1, 1);\n-            mv.visitEnd();\n-        }\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(ClassDesc.of(pkg.replace('\/', '.'), \"MyClass\"), clb -> {\n+            clb.withSuperclass(CD_Object);\n+            clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+            clb.withMethodBody(INIT_NAME, MTD_void, 0, cob -> {\n+                cob.aload(0);\n+                cob.invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                cob.return_();\n+            });\n+            clb.withMethodBody(\"get\", MethodTypeDesc.of(CD_Object, CD_int),\n+                    ACC_PUBLIC | ACC_STATIC, cob -> {\n+                cob.aconst_null();\n+                cob.areturn();\n+            });\n+        });\n","filename":"test\/jdk\/java\/lang\/invoke\/defineHiddenClass\/StaticInvocableTest.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -28,3 +28,2 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          jdk.jdeps\/com.sun.tools.classfile\n- *          jdk.zipfs\n+ * @modules jdk.zipfs\n+ * @enablePreview\n@@ -33,2 +32,2 @@\n- * @summary ensures that j.l.i.InvokerByteCodeGenerator and ASM visitMethodInsn\n- * generate  bytecodes with correct constant pool references\n+ * @summary ensures that j.l.i.InvokerByteCodeGenerator and Class-File API\n+ * generate bytecodes with correct constant pool references\n@@ -36,8 +35,0 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.Code_attribute;\n-import com.sun.tools.classfile.ConstantPool;\n-import com.sun.tools.classfile.ConstantPool.CPInfo;\n-import com.sun.tools.classfile.Instruction;\n-import com.sun.tools.classfile.Method;\n-import java.io.ByteArrayInputStream;\n@@ -45,0 +36,10 @@\n+import java.lang.classfile.Attributes;\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.ClassModel;\n+import java.lang.classfile.Opcode;\n+import java.lang.classfile.attribute.CodeAttribute;\n+import java.lang.classfile.constantpool.ConstantPool;\n+import java.lang.classfile.constantpool.MethodRefEntry;\n+import java.lang.classfile.instruction.InvokeInstruction;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -50,2 +51,0 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n@@ -55,0 +54,2 @@\n+import static java.lang.constant.ConstantDescs.*;\n+import static java.lang.classfile.ClassFile.*;\n@@ -56,1 +57,0 @@\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n@@ -102,6 +102,5 @@\n-            Code_attribute code) throws ConstantPool.InvalidIndex {\n-        for (Instruction i : code.getInstructions()) {\n-            String iname = i.getMnemonic();\n-            if (\"invokespecial\".equals(iname)\n-                    || \"invokestatic\".equals(iname)) {\n-                int idx = i.getByte(2);\n+            CodeAttribute code) throws IllegalArgumentException {\n+        for (var inst : code.elements()) {\n+            if (inst instanceof InvokeInstruction inv && (inv.opcode() == Opcode.INVOKESPECIAL\n+                    || inv.opcode() == Opcode.INVOKEINTERFACE)) {\n+                var ref = inv.method();\n@@ -109,3 +108,2 @@\n-                        \" instruction:\" + iname + \" index @\" + idx);\n-                CPInfo cpinfo = cp.get(idx);\n-                if (cpinfo instanceof ConstantPool.CONSTANT_Methodref_info) {\n+                        \" instruction:\" + inv.opcode() + \" index @\" + ref.index());\n+                if (ref instanceof MethodRefEntry) {\n@@ -120,2 +118,2 @@\n-    static int checkMethod(ClassFile cf, String mthd) throws Exception {\n-        if (cf.major_version < 52) {\n+    static int checkMethod(ClassModel cf, String mthd) throws Exception {\n+        if (cf.majorVersion() < 52) {\n@@ -123,1 +121,2 @@\n-                    + cf.getName() + \"expected 52, got \" + cf.major_version);\n+                    + cf.thisClass().asInternalName() + \"expected 52, got \"\n+                    + cf.majorVersion());\n@@ -126,2 +125,2 @@\n-        for (Method m : cf.methods) {\n-            String mname = m.getName(cf.constant_pool);\n+        for (var m : cf.methods()) {\n+            String mname = m.methodName().stringValue();\n@@ -129,6 +128,4 @@\n-                for (Attribute a : m.attributes) {\n-                    if (\"Code\".equals(a.getName(cf.constant_pool))) {\n-                        count++;\n-                        checkMethod(cf.getName(), mname, cf.constant_pool,\n-                                (Code_attribute) a);\n-                    }\n+                for (var a : m.findAttributes(Attributes.CODE)) {\n+                    count++;\n+                    checkMethod(cf.thisClass().asInternalName(), mname,\n+                            cf.constantPool(), a);\n@@ -149,1 +146,1 @@\n-                ClassFile cf = ClassFile.read(p.toFile());\n+                ClassModel cm = ClassFile.of().parse(p);\n@@ -151,1 +148,1 @@\n-                mcount += checkMethod(cf, \"get\");\n+                mcount += checkMethod(cm, \"get\");\n@@ -166,11 +163,9 @@\n-        ClassWriter cw = new ClassWriter(0);\n-        cw.visit(V1_8, ACC_PUBLIC, \"X\", null, \"java\/lang\/Object\", null);\n-        MethodVisitor mv = cw.visitMethod(ACC_STATIC, \"foo\",\n-                \"()V\", null, null);\n-        mv.visitMaxs(2, 1);\n-        mv.visitMethodInsn(INVOKESTATIC,\n-                \"java\/util\/function\/Function.class\",\n-                \"identity\", \"()Ljava\/util\/function\/Function;\", true);\n-        mv.visitInsn(RETURN);\n-        cw.visitEnd();\n-        byte[] carray = cw.toByteArray();\n+        var functionDesc = ClassDesc.ofInternalName(\"java\/util\/function\/Function\");\n+        byte[] carray = ClassFile.of().build(ClassDesc.of(\"X\"), clb -> clb\n+                .withVersion(JAVA_8_VERSION, 0)\n+                .withFlags(ACC_PUBLIC)\n+                .withSuperclass(CD_Object)\n+                .withMethodBody(\"foo\", MTD_void, ACC_STATIC, cob -> cob\n+                        .invokestatic(functionDesc, \"identity\", MethodTypeDesc.of(functionDesc), true)\n+                )\n+        );\n@@ -181,2 +176,2 @@\n-        ClassFile cf = ClassFile.read(new ByteArrayInputStream(carray));\n-        int mcount = checkMethod(cf, \"foo\");\n+        ClassModel cm = ClassFile.of().parse(carray);\n+        int mcount = checkMethod(cm, \"foo\");\n","filename":"test\/jdk\/java\/lang\/invoke\/lambda\/LambdaAsm.java","additions":46,"deletions":51,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          jdk.compiler\n+ * @modules jdk.compiler\n+ * @enablePreview\n@@ -35,1 +35,0 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n@@ -39,0 +38,3 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -46,4 +48,4 @@\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_ABSTRACT;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_INTERFACE;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_PUBLIC;\n-import static jdk.internal.org.objectweb.asm.Opcodes.V1_7;\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.CD_String;\n+import static java.lang.classfile.ClassFile.*;\n+\n@@ -135,6 +137,7 @@\n-        ClassWriter cw = new ClassWriter(0);\n-        cw.visit(V1_7, ACC_INTERFACE | ACC_ABSTRACT, \"Maker\", null, \"java\/lang\/Object\", null);\n-        cw.visitMethod(ACC_PUBLIC | ACC_ABSTRACT, \"make\",\n-                \"()Ljava\/lang\/Object;\", null, null);\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(ClassDesc.of(\"Maker\"), clb -> clb\n+                .withVersion(JAVA_7_VERSION, 0)\n+                .withFlags(ACC_INTERFACE | ACC_ABSTRACT)\n+                .withSuperclass(CD_Object)\n+                .withMethod(\"make\", MethodTypeDesc.of(CD_Object),\n+                        ACC_PUBLIC | ACC_ABSTRACT, mb -> {})\n+        );\n@@ -147,6 +150,8 @@\n-        ClassWriter cw = new ClassWriter(0);\n-        cw.visit(V1_7, ACC_INTERFACE | ACC_ABSTRACT, \"StringMaker\", null, \"java\/lang\/Object\", new String[]{\"Maker\"});\n-        cw.visitMethod(ACC_PUBLIC | ACC_ABSTRACT, \"make\",\n-                \"()Ljava\/lang\/String;\", null, null);\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(ClassDesc.of(\"StringMaker\"), clb -> clb\n+                .withVersion(JAVA_7_VERSION, 0)\n+                .withFlags(ACC_INTERFACE | ACC_ABSTRACT)\n+                .withSuperclass(CD_Object)\n+                .withInterfaceSymbols(ClassDesc.of(\"Maker\"))\n+                .withMethod(\"make\", MethodTypeDesc.of(CD_String),\n+                        ACC_PUBLIC | ACC_ABSTRACT, mb -> {})\n+        );\n","filename":"test\/jdk\/java\/lang\/invoke\/lambda\/LambdaStackTrace.java","additions":24,"deletions":19,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -33,0 +33,4 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodHandleDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -36,1 +40,2 @@\n-import jdk.internal.org.objectweb.asm.*;\n+import java.lang.reflect.AccessFlag;\n+\n@@ -38,1 +43,5 @@\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n+import static java.lang.classfile.ClassFile.ACC_STATIC;\n+import static java.lang.constant.ConstantDescs.*;\n+import static java.lang.constant.DirectMethodHandleDesc.Kind.SPECIAL;\n@@ -75,0 +84,6 @@\n+    private static final MethodTypeDesc MTD_int = MethodTypeDesc.of(CD_int);\n+    private static final MethodTypeDesc MTD_Lookup = MethodTypeDesc.of(CD_MethodHandles_Lookup);\n+    private static final String METHOD_NAME = \"m\";\n+    private static final ClassDesc CD_T1 = ClassDesc.of(\"T1\");\n+    private static final ClassDesc CD_T2 = ClassDesc.of(\"T2\");\n+    private static final ClassDesc CD_T3 = ClassDesc.of(\"T3\");\n@@ -106,22 +121,13 @@\n-        ClassWriter cw = new ClassWriter(0);\n-        MethodVisitor mv;\n-\n-        cw.visit(52, ACC_PUBLIC + ACC_SUPER, \"T1\", null, \"java\/lang\/Object\", null);\n-\n-        mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-        mv.visitCode();\n-        mv.visitVarInsn(ALOAD, 0);\n-        mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\", false);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(1, 1);\n-        mv.visitEnd();\n-\n-        mv = cw.visitMethod(ACC_PUBLIC, \"m\", \"()I\", null, null);\n-        mv.visitCode();\n-        mv.visitIntInsn(BIPUSH, 1);\n-        mv.visitInsn(IRETURN);\n-        mv.visitMaxs(1, 1);\n-        mv.visitEnd();\n-\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(CD_T1, clb -> {\n+            clb.withSuperclass(CD_Object);\n+            clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+            clb.withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC, cob -> {\n+                cob.aload(0);\n+                cob.invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                cob.return_();\n+            });\n+            clb.withMethodBody(METHOD_NAME, MTD_int, ACC_PUBLIC, cob -> {\n+                cob.bipush(1);\n+                cob.ireturn();\n+            });\n+        });\n@@ -131,22 +137,13 @@\n-        ClassWriter cw = new ClassWriter(0);\n-        MethodVisitor mv;\n-\n-        cw.visit(52, ACC_PUBLIC + ACC_SUPER, \"T2\", null, \"T1\", null);\n-\n-        mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-        mv.visitCode();\n-        mv.visitVarInsn(ALOAD, 0);\n-        mv.visitMethodInsn(INVOKESPECIAL, \"T1\", \"<init>\", \"()V\", false);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(1, 1);\n-        mv.visitEnd();\n-\n-        mv = cw.visitMethod(ACC_PUBLIC | ACC_STATIC, \"m\", \"()I\", null, null);\n-        mv.visitCode();\n-        mv.visitIntInsn(BIPUSH, 2);\n-        mv.visitInsn(IRETURN);\n-        mv.visitMaxs(1, 1);\n-        mv.visitEnd();\n-\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(CD_T2, clb -> {\n+            clb.withSuperclass(CD_T1);\n+            clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+            clb.withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC, cob -> {\n+                cob.aload(0);\n+                cob.invokespecial(CD_T1, INIT_NAME, MTD_void);\n+                cob.return_();\n+            });\n+            clb.withMethodBody(METHOD_NAME, MTD_int, ACC_PUBLIC | ACC_STATIC, cob -> {\n+                cob.bipush(2);\n+                cob.ireturn();\n+            });\n+        });\n@@ -156,38 +153,23 @@\n-        ClassWriter cw = new ClassWriter(0);\n-        MethodVisitor mv;\n-\n-        cw.visit(52, ACC_PUBLIC + ACC_SUPER, \"T3\", null, \"T2\", null);\n-\n-        mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-        mv.visitCode();\n-        mv.visitVarInsn(ALOAD, 0);\n-        mv.visitMethodInsn(INVOKESPECIAL, \"T2\", \"<init>\", \"()V\", false);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(1, 1);\n-        mv.visitEnd();\n-\n-        mv = cw.visitMethod(ACC_PUBLIC, \"m\", \"()I\", null, null);\n-        mv.visitCode();\n-        mv.visitIntInsn(BIPUSH, 3);\n-        mv.visitInsn(IRETURN);\n-        mv.visitMaxs(1, 1);\n-        mv.visitEnd();\n-\n-        \/\/ getMethodHandle\n-        mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, \"getMethodHandle\", \"()Ljava\/lang\/invoke\/MethodHandle;\", null, null);\n-        mv.visitCode();\n-        mv.visitLdcInsn(new Handle(H_INVOKESPECIAL, \"T1\", \"m\", \"()I\"));\n-        mv.visitInsn(ARETURN);\n-        mv.visitMaxs(1, 0);\n-        mv.visitEnd();\n-\n-        \/\/ getLookup\n-        mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, \"getLookup\", \"()Ljava\/lang\/invoke\/MethodHandles$Lookup;\", null, null);\n-        mv.visitCode();\n-        mv.visitMethodInsn(INVOKESTATIC, \"java\/lang\/invoke\/MethodHandles\", \"lookup\", \"()Ljava\/lang\/invoke\/MethodHandles$Lookup;\", false);\n-        mv.visitInsn(ARETURN);\n-        mv.visitMaxs(1, 0);\n-        mv.visitEnd();\n-\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+        return ClassFile.of().build(CD_T3, clb -> {\n+            clb.withSuperclass(CD_T2);\n+            clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+            clb.withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC, cob -> {\n+                cob.aload(0);\n+                cob.invokespecial(CD_T2, INIT_NAME, MTD_void);\n+                cob.return_();\n+            });\n+            clb.withMethodBody(METHOD_NAME, MTD_int, ACC_PUBLIC, cob -> {\n+                cob.bipush(3);\n+                cob.ireturn();\n+            });\n+            clb.withMethodBody(\"getMethodHandle\", MethodTypeDesc.of(CD_MethodHandle),\n+                    ACC_PUBLIC | ACC_STATIC, cob -> {\n+                cob.constantInstruction(MethodHandleDesc.ofMethod(SPECIAL, CD_T1, METHOD_NAME, MTD_int));\n+                cob.areturn();\n+            });\n+            clb.withMethodBody(\"getLookup\", MTD_Lookup,\n+                    ACC_PUBLIC | ACC_STATIC, cob -> {\n+                cob.invokestatic(CD_MethodHandles, \"lookup\", MTD_Lookup);\n+                cob.areturn();\n+            });\n+        });\n","filename":"test\/jdk\/java\/lang\/invoke\/lookup\/SpecialStatic.java","additions":68,"deletions":86,"binary":false,"changes":154,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -33,0 +33,3 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -35,3 +38,6 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n+import static java.lang.classfile.ClassFile.ACC_PRIVATE;\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.CD_int;\n+import static java.lang.constant.ConstantDescs.INIT_NAME;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n@@ -45,1 +51,1 @@\n-    static class TestClassLoader extends ClassLoader implements Opcodes {\n+    static class TestClassLoader extends ClassLoader {\n@@ -48,1 +54,1 @@\n-        public Class findClass(String name) throws ClassNotFoundException {\n+        public Class<?> findClass(String name) throws ClassNotFoundException {\n@@ -59,33 +65,22 @@\n-        private byte[] loadClassData(String name) throws Exception {\n-            ClassWriter cw = new ClassWriter(0);\n-            MethodVisitor mv;\n-            switch (name) {\n-                case INTERFACE_NAME:\n-                    cw.visit(V1_8, ACC_ABSTRACT | ACC_INTERFACE | ACC_PUBLIC, INTERFACE_NAME, null, \"java\/lang\/Object\", null);\n-                    {\n-                        mv = cw.visitMethod(ACC_PRIVATE, \"privInstance\", \"()I\", null, null);\n-                        mv.visitCode();\n-                        mv.visitLdcInsn(EXPECTED);\n-                        mv.visitInsn(IRETURN);\n-                        mv.visitMaxs(1, 1);\n-                        mv.visitEnd();\n-                    }\n-                    break;\n-                case CLASS_NAME:\n-                    cw.visit(52, ACC_SUPER | ACC_PUBLIC, CLASS_NAME, null, \"java\/lang\/Object\", new String[]{INTERFACE_NAME});\n-                    {\n-                        mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-                        mv.visitCode();\n-                        mv.visitVarInsn(ALOAD, 0);\n-                        mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\");\n-                        mv.visitInsn(RETURN);\n-                        mv.visitMaxs(1, 1);\n-                        mv.visitEnd();\n-                    }\n-                    break;\n-                default:\n-                    break;\n-            }\n-            cw.visitEnd();\n-\n-            return cw.toByteArray();\n+        private byte[] loadClassData(String name) {\n+            return switch (name) {\n+                case INTERFACE_NAME -> ClassFile.of().build(ClassDesc.ofInternalName(INTERFACE_NAME), clb -> {\n+                    clb.withFlags(AccessFlag.ABSTRACT, AccessFlag.INTERFACE, AccessFlag.PUBLIC);\n+                    clb.withSuperclass(CD_Object);\n+                    clb.withMethodBody(\"privInstance\", MethodTypeDesc.of(CD_int), ACC_PRIVATE, cob -> {\n+                        cob.constantInstruction(EXPECTED);\n+                        cob.ireturn();\n+                    });\n+                });\n+                case CLASS_NAME -> ClassFile.of().build(ClassDesc.of(CLASS_NAME), clb -> {\n+                    clb.withFlags(AccessFlag.PUBLIC);\n+                    clb.withSuperclass(CD_Object);\n+                    clb.withInterfaceSymbols(ClassDesc.ofInternalName(INTERFACE_NAME));\n+                    clb.withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC, cob -> {\n+                        cob.aload(0);\n+                        cob.invokespecial(CD_Object, INIT_NAME, MTD_void);\n+                        cob.return_();\n+                    });\n+                });\n+                default -> throw new IllegalArgumentException();\n+            };\n@@ -99,1 +94,1 @@\n-        Object inst = k.newInstance();\n+        Object inst = k.getDeclaredConstructor().newInstance();\n","filename":"test\/jdk\/java\/lang\/reflect\/Method\/invoke\/TestPrivateInterfaceMethodReflect.java","additions":36,"deletions":41,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n+ * @enablePreview\n@@ -34,2 +34,3 @@\n-import java.io.IOException;\n-import java.io.UncheckedIOException;\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.reflect.AccessFlag;\n@@ -38,2 +39,3 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n+\n+import java.lang.classfile.attribute.RecordAttribute;\n+import java.lang.classfile.attribute.RecordComponentInfo;\n@@ -44,1 +46,3 @@\n-import static jdk.internal.org.objectweb.asm.ClassWriter.*;\n+import static java.lang.classfile.ClassFile.ACC_ABSTRACT;\n+import static java.lang.classfile.ClassFile.ACC_FINAL;\n+import static java.lang.constant.ConstantDescs.CD_int;\n@@ -85,1 +89,1 @@\n-        List<RecordComponentEntry> rc = null;\n+        List<RecordComponentInfo> rc = null;\n@@ -87,1 +91,1 @@\n-            rc = List.of(new RecordComponentEntry(\"x\", \"I\"));\n+            rc = List.of(RecordComponentInfo.of(\"x\", CD_int));\n@@ -112,1 +116,1 @@\n-        List<RecordComponentEntry> rc = null;\n+        List<RecordComponentInfo> rc = null;\n@@ -114,1 +118,1 @@\n-            rc = List.of(new RecordComponentEntry(\"x\", \"I\"));\n+            rc = List.of(RecordComponentInfo.of(\"x\", CD_int));\n@@ -164,21 +168,12 @@\n-                              List<RecordComponentEntry> components) {\n-        ClassWriter cw = new ClassWriter(COMPUTE_MAXS | COMPUTE_FRAMES);\n-\n-        int access = 0;\n-        if (isFinal)\n-            access = access | Opcodes.ACC_FINAL;\n-        if (isAbstract)\n-            access = access | Opcodes.ACC_ABSTRACT;\n-\n-        cw.visit(Opcodes.V16,\n-                 access,\n-                 className,\n-                 null,\n-                 superName,\n-                 null);\n-\n-        if (components != null)\n-            components.forEach(rc -> cw.visitRecordComponent(rc.name(), rc.descriptor(), null));\n-\n-        cw.visitEnd();\n-        return cw.toByteArray();\n+                              List<RecordComponentInfo> components) {\n+        return ClassFile.of().build(ClassDesc.ofInternalName(className), clb -> {\n+            int access = 0;\n+            if (isFinal)\n+                access = access | ACC_FINAL;\n+            if (isAbstract)\n+                access = access | ACC_ABSTRACT;\n+            clb.withFlags(access);\n+            clb.withSuperclass(ClassDesc.ofInternalName(superName));\n+            if (components != null)\n+                clb.accept(RecordAttribute.of(components));\n+        });\n@@ -187,2 +182,0 @@\n-    record RecordComponentEntry (String name, String descriptor) { }\n-\n","filename":"test\/jdk\/java\/lang\/reflect\/records\/IsRecordTest.java","additions":27,"deletions":34,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,0 @@\n-import java.util.List;\n@@ -48,1 +47,0 @@\n-import jdk.test.lib.JDKToolFinder;\n@@ -50,0 +48,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -54,2 +53,0 @@\n-    private static final String CLASS_PATH = System.getProperty(\n-            \"test.class.path\");\n@@ -138,1 +135,0 @@\n-        String java = JDKToolFinder.getTestJDKTool(\"java\");\n@@ -140,4 +136,3 @@\n-        List<String> cmd = List.of(java, \"-Djava.net.preferIPv4Stack=true\",\n-                \"-cp\", CLASS_PATH, testClz);\n-        System.out.println(\"Executing: \" + cmd);\n-        return new OutputAnalyzer(new ProcessBuilder(cmd).start()).getOutput();\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                \"-Djava.net.preferIPv4Stack=true\", testClz);\n+        return new OutputAnalyzer(pb.start()).getOutput();\n@@ -147,1 +142,0 @@\n-        String java = JDKToolFinder.getTestJDKTool(\"java\");\n@@ -149,4 +143,3 @@\n-        List<String> cmd = List.of(java, \"-Djava.net.preferIPv4Stack=true\",\n-                                   \"-cp\", CLASS_PATH, testClz, \"reverse\", addr);\n-        System.out.println(\"Executing: \" + cmd);\n-        return new OutputAnalyzer(new ProcessBuilder(cmd).start()).getOutput();\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                \"-Djava.net.preferIPv4Stack=true\", testClz, \"reverse\", addr);\n+        return new OutputAnalyzer(pb.start()).getOutput();\n","filename":"test\/jdk\/java\/net\/InetAddress\/ptr\/Lookup.java","additions":8,"deletions":15,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,2 @@\n- * @requires (os.family != \"windows\")\n+ * @requires os.family != \"windows\"\n+ * @requires vm.flagless\n","filename":"test\/jdk\/java\/net\/ServerSocket\/AcceptCauseFileDescriptorLeak.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import java.util.Collections;\n@@ -41,0 +42,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -98,5 +100,1 @@\n-        commands.add(JAVA);\n-        for (String arg : jvmArgs)\n-            commands.add(arg);\n-        commands.add(\"-cp\");\n-        commands.add(CLASSPATH);\n+        Collections.addAll(commands, jvmArgs);\n@@ -107,1 +105,1 @@\n-        ProcessBuilder pb = new ProcessBuilder(commands);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(commands);\n","filename":"test\/jdk\/java\/net\/ServerSocket\/AcceptInheritHandle.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import jdk.test.lib.JDKToolFinder;\n@@ -56,1 +55,0 @@\n-        String java = JDKToolFinder.getTestJDKTool(\"java\");\n@@ -60,2 +58,3 @@\n-                new ProcessBuilder(\n-                        java, TEST_NAME, \".\/\" + ARCHIVE_NAME\n+                ProcessTools.createTestJavaProcessBuilder(\n+                        TEST_NAME,\n+                        \".\/\" + ARCHIVE_NAME\n@@ -63,2 +62,2 @@\n-                new ProcessBuilder(\n-                        java, \"-cp\", \".\",\n+                ProcessTools.createTestJavaProcessBuilder(\n+                        \"-cp\", \".\",\n@@ -69,2 +68,2 @@\n-                new ProcessBuilder(\n-                        java, \"-cp\", \".\",\n+                ProcessTools.createTestJavaProcessBuilder(\n+                        \"-cp\", \".\",\n@@ -75,2 +74,2 @@\n-                new ProcessBuilder(\n-                        java, \"-cp\", \"..\",\n+                ProcessTools.createTestJavaProcessBuilder(\n+                        \"-cp\", \"..\",\n@@ -81,2 +80,2 @@\n-                new ProcessBuilder(\n-                        java, \"-cp\", basename,\n+                ProcessTools.createTestJavaProcessBuilder(\n+                        \"-cp\", basename,\n","filename":"test\/jdk\/java\/net\/URLClassLoader\/getresourceasstream\/TestDriver.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,2 @@\n+import static jdk.test.lib.process.ProcessTools.createTestJavaProcessBuilder;\n+import static jdk.test.lib.process.ProcessTools.executeCommand;\n@@ -58,1 +60,0 @@\n-        String java = JDKToolFinder.getTestJDKTool(\"java\");\n@@ -65,0 +66,5 @@\n+\n+        \/\/ Compile\n+        ProcessTools.executeCommand(javac, \"-cp\", cp, \"-d\", \".\",\n+                srcDir + File.separator + TEST_NAME + \".java\");\n+\n@@ -66,5 +72,0 @@\n-                \/\/ Compile command\n-                new String[]{\n-                        javac, \"-cp\", cp, \"-d\", \".\",\n-                        srcDir + File.separator + TEST_NAME + \".java\"\n-                },\n@@ -73,1 +74,1 @@\n-                        java, \"-cp\", cp, TEST_NAME, \"1\"\n+                        \"-cp\", cp, TEST_NAME, \"1\"\n@@ -77,1 +78,1 @@\n-                        java, \"-cp\", cp, TEST_NAME, \"2\"\n+                        \"-cp\", cp, TEST_NAME, \"2\"\n@@ -82,1 +83,1 @@\n-            ProcessTools.executeCommand(cmd)\n+            executeCommand(createTestJavaProcessBuilder(cmd))\n","filename":"test\/jdk\/java\/net\/URLClassLoader\/sealing\/CheckSealedTest.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @requires vm.flagless\n","filename":"test\/jdk\/java\/net\/URLConnection\/6212146\/TestDriver.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+import jdk.test.lib.process.ProcessTools;\n+\n@@ -59,0 +61,1 @@\n+ * @library \/test\/lib\n@@ -271,5 +274,1 @@\n-        String java = getJDKTool(\"java\");\n-\n-        List<String> commands = new ArrayList<>();\n-        commands.add(java);\n-        commands.addAll(properties.entrySet()\n+        List<String> commands = properties.entrySet()\n@@ -278,1 +277,1 @@\n-                .collect(Collectors.toList()));\n+                .collect(Collectors.toList());\n@@ -288,1 +287,1 @@\n-        return run(new ProcessBuilder(commands));\n+        return run(ProcessTools.createTestJavaProcessBuilder(commands));\n","filename":"test\/jdk\/java\/net\/URLConnection\/ContentHandlers\/ContentHandlersTest.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n- * @bug 8209137\n+ * @bug 8209137 8326233\n@@ -274,0 +274,28 @@\n+        \/\/ test defaults for needClientAuth and wantClientAuth\n+        builder.sslParameters(new SSLParameters());\n+        try (var closer = closeable(builder)) {\n+            assertFalse(closer.build().sslParameters().getNeedClientAuth(),\n+                    \"needClientAuth() was expected to be false\");\n+            assertFalse(closer.build().sslParameters().getWantClientAuth(),\n+                    \"wantClientAuth() was expected to be false\");\n+        }\n+        \/\/ needClientAuth = true and thus wantClientAuth = false\n+        SSLParameters needClientAuthParams = new SSLParameters();\n+        needClientAuthParams.setNeedClientAuth(true);\n+        builder.sslParameters(needClientAuthParams);\n+        try (var closer = closeable(builder)) {\n+            assertTrue(closer.build().sslParameters().getNeedClientAuth(),\n+                    \"needClientAuth() was expected to be true\");\n+            assertFalse(closer.build().sslParameters().getWantClientAuth(),\n+                    \"wantClientAuth() was expected to be false\");\n+        }\n+        \/\/ wantClientAuth = true and thus needClientAuth = false\n+        SSLParameters wantClientAuthParams = new SSLParameters();\n+        wantClientAuthParams.setWantClientAuth(true);\n+        builder.sslParameters(wantClientAuthParams);\n+        try (var closer = closeable(builder)) {\n+            assertTrue(closer.build().sslParameters().getWantClientAuth(),\n+                    \"wantClientAuth() was expected to be true\");\n+            assertFalse(closer.build().sslParameters().getNeedClientAuth(),\n+                    \"needClientAuth() was expected to be false\");\n+        }\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpClientBuilderTest.java","additions":30,"deletions":2,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -129,1 +130,0 @@\n-        String javaCmd = testJdk + sep + \"bin\" + sep + \"java\";\n@@ -134,1 +134,0 @@\n-            cmd.add(javaCmd);\n@@ -153,1 +152,1 @@\n-            ProcessBuilder processBuilder = new ProcessBuilder(cmd)\n+            ProcessBuilder processBuilder = ProcessTools.createTestJavaProcessBuilder(cmd)\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/Driver.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,2 @@\n+\n+import jdk.test.lib.process.ProcessTools;\n@@ -237,1 +239,0 @@\n-        String java = getJDKTool(\"java\");\n@@ -239,4 +240,1 @@\n-        List<String> commands = new ArrayList<>();\n-        commands.add(java);\n-        for (String prop : sysProps)\n-            commands.add(prop);\n+        List<String> commands = new ArrayList<>(sysProps);\n@@ -252,1 +250,1 @@\n-        return run(new ProcessBuilder(commands));\n+        return run(ProcessTools.createTestJavaProcessBuilder(commands));\n","filename":"test\/jdk\/java\/net\/spi\/URLStreamHandlerProvider\/Basic.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test id=platform\n+ * @bug 8323782\n+ * @summary Stress test Thread.interrupt on a target Thread doing a selection operation\n+ * @run main LotsOfInterrupts 200000\n+ *\/\n+\n+\/*\n+ * @test id=virtual\n+ * @run main\/othervm -DthreadFactory=virtual LotsOfInterrupts 200000\n+ *\/\n+\n+import java.nio.channels.Selector;\n+import java.time.Instant;\n+import java.util.concurrent.Phaser;\n+import java.util.concurrent.ThreadFactory;\n+\n+public class LotsOfInterrupts {\n+\n+    public static void main(String[] args) throws Exception {\n+        int iterations;\n+        if (args.length > 0) {\n+            iterations = Integer.parseInt(args[0]);\n+        } else {\n+            iterations = 500_000;\n+        }\n+\n+        ThreadFactory factory;\n+        String value = System.getProperty(\"threadFactory\");\n+        if (\"virtual\".equals(value)) {\n+            factory = Thread.ofVirtual().factory();\n+        } else {\n+            factory = Thread.ofPlatform().factory();\n+        }\n+\n+        var phaser = new Phaser(2);\n+\n+        Thread thread = factory.newThread(() -> {\n+            try (Selector sel = Selector.open()) {\n+                for (int i = 0; i < iterations; i++) {\n+                    phaser.arriveAndAwaitAdvance();\n+                    sel.select();\n+\n+                    \/\/ clear interrupt status and consume wakeup\n+                    Thread.interrupted();\n+                    sel.selectNow();\n+                }\n+            } catch (Throwable ex) {\n+                ex.printStackTrace();\n+            }\n+        });\n+        thread.start();\n+\n+        long lastTimestamp = System.currentTimeMillis();\n+        for (int i = 0; i < iterations; i++) {\n+            phaser.arriveAndAwaitAdvance();\n+            thread.interrupt();\n+\n+            long currentTime = System.currentTimeMillis();\n+            if ((currentTime - lastTimestamp) > 500) {\n+                System.out.format(\"%s %d iterations remaining ...%n\", Instant.now(), (iterations - i));\n+                lastTimestamp = currentTime;\n+            }\n+        }\n+\n+        thread.join();\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/LotsOfInterrupts.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -65,0 +65,1 @@\n+    @Test\n@@ -87,0 +88,1 @@\n+    @Test\n@@ -115,0 +117,1 @@\n+    @Test\n@@ -154,0 +157,1 @@\n+    @Test\n@@ -193,0 +197,1 @@\n+    @Test\n@@ -222,0 +227,1 @@\n+    @Test\n","filename":"test\/jdk\/java\/text\/BreakIterator\/Bug4533872.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,7 +24,0 @@\n-\/*\n- * @test\n- * @library \/java\/text\/testlib\n- * @summary test Collation API\n- * @modules jdk.localedata\n- * @run junit APITest\n- *\/\n@@ -43,0 +36,8 @@\n+\/*\n+ * @test\n+ * @library \/java\/text\/testlib\n+ * @summary test Collation API\n+ * @modules jdk.localedata\n+ * @run junit APITest\n+ *\/\n+\n@@ -62,0 +63,1 @@\n+    @Test\n@@ -137,0 +139,1 @@\n+    @Test\n@@ -178,0 +181,1 @@\n+    @Test\n@@ -217,0 +221,1 @@\n+    @Test\n@@ -309,0 +314,1 @@\n+    @Test\n","filename":"test\/jdk\/java\/text\/Collator\/APITest.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @run junit\/othervm -Djava.locale.providers=COMPAT,SPI DateFormatRoundTripTest\n+ * @run main\/othervm -Djava.locale.providers=COMPAT,SPI DateFormatRoundTripTest\n@@ -31,2 +31,13 @@\n-import java.text.*;\n-import java.util.*;\n+import java.text.DateFormat;\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Random;\n+import java.util.SimpleTimeZone;\n+import java.util.TimeZone;\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/DateFormatRoundTripTest.java","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,5 @@\n-import java.text.*;\n-import java.util.*;\n+import java.text.DecimalFormat;\n+import java.text.FieldPosition;\n+import java.text.MessageFormat;\n+import java.text.NumberFormat;\n+import java.util.Locale;\n@@ -101,0 +104,1 @@\n+    @Test\n@@ -522,0 +526,1 @@\n+    @Test\n@@ -582,0 +587,1 @@\n+    @Test\n@@ -722,0 +728,1 @@\n+    @Test\n@@ -777,0 +784,1 @@\n+    @Test\n@@ -892,0 +900,1 @@\n+    @Test\n@@ -934,0 +943,1 @@\n+    @Test\n@@ -966,0 +976,1 @@\n+    @Test\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/BigDecimalFormat.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -33,2 +33,3 @@\n-import java.util.*;\n-import java.text.*;\n+import java.text.DecimalFormat;\n+import java.text.DecimalFormatSymbols;\n+import java.util.Locale;\n@@ -40,3 +41,1 @@\n-public class DFSExponential\n-{\n-\n+public class DFSExponential {\n@@ -44,1 +43,2 @@\n-   public void DFSExponenTest() throws Exception {\n+    @Test\n+    public void TestDFSExponential() {\n@@ -46,4 +46,3 @@\n-        String pat[] = { \"0.####E0\", \"00.000E00\", \"##0.####E000\", \"0.###E0;[0.###E0]\"  };\n-        double val[] = { 0.01234, 123456789, 1.23e300, -3.141592653e-271 };\n-        long lval[] = { 0, -1, 1, 123456789 };\n-        String valFormat[][] = {\n+        String[] pat = { \"0.####E0\", \"00.000E00\", \"##0.####E000\", \"0.###E0;[0.###E0]\"};\n+        double[] val = { 0.01234, 123456789, 1.23e300, -3.141592653e-271};\n+        String[][] valFormat = {\n@@ -55,3 +54,0 @@\n-\n-\n-        int ival = 0, ilval = 0;\n@@ -63,1 +59,0 @@\n-            throw new RuntimeException(\"Test Malfunction: null String was passed to set an exponent separator symbol\" );\n@@ -72,3 +67,0 @@\n-            \/\/fmt.applyLocalizedPattern(locPattern);\n-            \/\/System.out.println(\"      fmt.applyLocalizedPattern(): \"+fmt.toLocalizedPattern());\n-\n@@ -78,1 +70,1 @@\n-                if(valFormat[p][v].equals(s)){\n+                if (valFormat[p][v].equals(s)){\n@@ -80,1 +72,1 @@\n-                }else{\n+                } else{\n@@ -82,1 +74,0 @@\n-                   throw new RuntimeException(\" Failed: Should be formatted as \"+valFormat[p][v]+ \"but got \"+s);\n@@ -85,2 +76,2 @@\n-         } \/\/end of the first for loop\n-   }\n+         }\n+    }\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/DFSExponential.java","additions":15,"deletions":24,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,2 @@\n+\n+    @Test\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/DFSSerialization.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -18,1 +18,1 @@\n-ZZ\t=\tZZZ\t,\t999\t,\t3\n+ZZ\\t=\\tZZZ\\t,\\t999\\t,\\t3\n","filename":"test\/jdk\/java\/util\/Currency\/currency.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          jdk.compiler\n+ * @modules jdk.compiler\n+ * @enablePreview\n@@ -35,0 +35,3 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n@@ -37,0 +40,1 @@\n+import java.lang.reflect.AccessFlag;\n@@ -48,4 +52,0 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n-\n@@ -56,0 +56,7 @@\n+\n+import static java.lang.classfile.ClassFile.ACC_PUBLIC;\n+import static java.lang.classfile.ClassFile.ACC_STATIC;\n+import static java.lang.constant.ConstantDescs.CD_Object;\n+import static java.lang.constant.ConstantDescs.INIT_NAME;\n+import static java.lang.constant.ConstantDescs.MTD_void;\n+\n@@ -210,43 +217,24 @@\n-        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS\n-                                         + ClassWriter.COMPUTE_FRAMES);\n-        cw.visit(V9,\n-                ACC_PUBLIC + ACC_SUPER,\n-                \"p\/ProviderFactory\",\n-                null,\n-                \"java\/lang\/Object\",\n-                null);\n-\n-        \/\/ public static p.Service provider()\n-        MethodVisitor mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC,\n-                \"provider\",\n-                \"()Lp\/Service;\",\n-                null,\n-                null);\n-        mv.visitTypeInsn(NEW, \"p\/ProviderFactory$1\");\n-        mv.visitInsn(DUP);\n-        mv.visitMethodInsn(INVOKESPECIAL,\n-                \"p\/ProviderFactory$1\",\n-                \"<init>\", \"()V\",\n-                false);\n-        mv.visitInsn(ARETURN);\n-        mv.visitMaxs(0, 0);\n-        mv.visitEnd();\n-\n-        \/\/ public static p.ProviderFactory$1 provider()\n-        mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC,\n-                \"provider\",\n-                \"()Lp\/ProviderFactory$1;\",\n-                null,\n-                null);\n-        mv.visitTypeInsn(NEW, \"p\/ProviderFactory$1\");\n-        mv.visitInsn(DUP);\n-        mv.visitMethodInsn(INVOKESPECIAL,\n-                \"p\/ProviderFactory$1\",\n-                \"<init>\",\n-                \"()V\",\n-                false);\n-        mv.visitInsn(ARETURN);\n-        mv.visitMaxs(0, 0);\n-        mv.visitEnd();\n-\n-        cw.visitEnd();\n+        var bytes = ClassFile.of().build(ClassDesc.of(\"p\", \"ProviderFactory\"), clb -> {\n+            clb.withSuperclass(CD_Object);\n+            clb.withFlags(AccessFlag.PUBLIC, AccessFlag.SUPER);\n+\n+            var providerFactory$1 = ClassDesc.of(\"p\", \"ProviderFactory$1\");\n+\n+            \/\/ public static p.Service provider()\n+            clb.withMethodBody(\"provider\", MethodTypeDesc.of(ClassDesc.of(\"p\", \"Service\")),\n+                    ACC_PUBLIC | ACC_STATIC, cob -> {\n+                        cob.new_(providerFactory$1);\n+                        cob.dup();\n+                        cob.invokespecial(providerFactory$1, INIT_NAME, MTD_void);\n+                        cob.areturn();\n+                    });\n+\n+            \/\/ public static p.ProviderFactory$1 provider()\n+            clb.withMethodBody(\"provider\", MethodTypeDesc.of(providerFactory$1),\n+                    ACC_PUBLIC | ACC_STATIC, cob -> {\n+                        cob.new_(providerFactory$1);\n+                        cob.dup();\n+                        cob.invokespecial(providerFactory$1, INIT_NAME, MTD_void);\n+                        cob.areturn();\n+                    });\n+        });\n@@ -258,1 +246,1 @@\n-        Files.write(classFile, cw.toByteArray());\n+        Files.write(classFile, bytes);\n","filename":"test\/jdk\/java\/util\/ServiceLoader\/BadProvidersTest.java","additions":39,"deletions":51,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,3 +33,2 @@\n-import java.io.*;\n-import java.text.*;\n-import java.util.*;\n+import java.util.Locale;\n+import java.util.TimeZone;\n@@ -87,0 +86,1 @@\n+    @Test\n@@ -230,1 +230,0 @@\n-\n","filename":"test\/jdk\/java\/util\/TimeZone\/Bug4322313.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tConfiguration file for log testing\n+#       Configuration file for log testing\n","filename":"test\/jdk\/java\/util\/jar\/JarFile\/jarVerification\/logging.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tGlobal properties\n+#       Global properties\n@@ -19,1 +19,0 @@\n-\n","filename":"test\/jdk\/java\/util\/logging\/LogManager\/Configuration\/rootLoggerHandlers\/badglobal.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tGlobal properties\n+#       Global properties\n@@ -18,1 +18,0 @@\n-\n","filename":"test\/jdk\/java\/util\/logging\/LogManager\/Configuration\/rootLoggerHandlers\/badlogging.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tGlobal properties\n+#       Global properties\n@@ -20,1 +20,0 @@\n-\n","filename":"test\/jdk\/java\/util\/logging\/LogManager\/Configuration\/rootLoggerHandlers\/logging.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tGlobal properties\n+#       Global properties\n","filename":"test\/jdk\/java\/util\/logging\/modules\/LogManagerInModule\/logging.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,3 +98,3 @@\n-            System.out.printf(\"Deflater::getTotalOut:%s, Deflater::getAdler: %s,\" +\n-                            \" compressed length: %s%n\", deflater.getTotalOut(),\n-                    deflater.getTotalOut(), compressedDataLength);\n+            System.out.printf(\"Deflater::getBytesWritten:%d, Deflater::getAdler: %d,\" +\n+                            \" compressed length: %d%n\", deflater.getBytesWritten(),\n+                    deflater.getAdler(), compressedDataLength);\n@@ -115,1 +115,1 @@\n-            System.out.printf(\"Inflater::getAdler:%s, length: %s%n\",\n+            System.out.printf(\"Inflater::getAdler:%d, length: %d%n\",\n@@ -146,3 +146,3 @@\n-            System.out.printf(\"Deflater::getTotalOut:%s, Deflater::getAdler: %s,\" +\n-                            \" compressed length: %s%n\", deflater.getTotalOut(),\n-                    deflater.getTotalOut(), compressedDataLength);\n+            System.out.printf(\"Deflater::getBytesWritten:%d, Deflater::getAdler: %d,\" +\n+                            \" compressed length: %d%n\", deflater.getBytesWritten(),\n+                    deflater.getAdler(), compressedDataLength);\n@@ -163,1 +163,1 @@\n-            System.out.printf(\"Inflater::getAdler:%s, length: %s%n\",\n+            System.out.printf(\"Inflater::getAdler:%d, length: %d%n\",\n@@ -200,3 +200,3 @@\n-            System.out.printf(\"Deflater::getTotalOut:%s, Deflater::getAdler: %s,\" +\n-                            \" compressed length: %s%n\", deflater.getTotalOut(),\n-                    deflater.getTotalOut(), compressedDataLength);\n+            System.out.printf(\"Deflater::getBytesWritten:%d, Deflater::getAdler: %d,\" +\n+                            \" compressed length: %d%n\", deflater.getBytesWritten(),\n+                    deflater.getAdler(), compressedDataLength);\n@@ -217,1 +217,1 @@\n-            System.out.printf(\"Inflater::getAdler:%s, length: %s%n\",\n+            System.out.printf(\"Inflater::getAdler:%d, length: %d%n\",\n","filename":"test\/jdk\/java\/util\/zip\/DeflaterDictionaryTests.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -30,1 +31,0 @@\n-import java.nio.file.Path;\n@@ -90,1 +90,0 @@\n-                    Path.of(System.getProperty(\"java.home\"), \"bin\", \"java\").toString(),\n@@ -97,1 +96,1 @@\n-            ProcessBuilder builder = new ProcessBuilder(command);\n+            ProcessBuilder builder = ProcessTools.createTestJavaProcessBuilder(command);\n","filename":"test\/jdk\/javax\/net\/ssl\/DTLS\/DTLSWontNegotiateV10.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+import jdk.test.lib.process.ProcessTools;\n+\n@@ -28,1 +30,0 @@\n-import java.nio.file.Path;\n@@ -35,0 +36,1 @@\n+ * @library \/test\/lib\n@@ -45,0 +47,1 @@\n+ * @library \/test\/lib\n@@ -64,1 +67,0 @@\n-                        Path.of(System.getProperty(\"java.home\"), \"bin\", \"java\").toString(),\n@@ -70,1 +72,1 @@\n-                ProcessBuilder builder = new ProcessBuilder(command);\n+                ProcessBuilder builder = ProcessTools.createTestJavaProcessBuilder(command);\n","filename":"test\/jdk\/javax\/net\/ssl\/ciphersuites\/TLSWontNegotiateDisabledCipherAlgos.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,210 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.MouseInfo;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8187759\n+ * @summary Test to check if JFrame background is refreshed in Linux.\n+ * @requires (os.family == \"linux\")\n+ * @run main JFrameBackgroundRefreshTest\n+ *\/\n+\n+public class JFrameBackgroundRefreshTest {\n+    public static JFrame frame;\n+    private static final BufferedImage test = generateImage();\n+    private static Point p = new Point();\n+    private static Robot robot;\n+    private static JFrame whiteFrame;\n+    private static Point frameLocation;\n+    private static int frameCenterX, frameCenterY, awayX, awayY;\n+    private static int imageCenterX, imageCenterY;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                try {\n+                    JFrameBackgroundRefreshTest.initialize();\n+                } catch (Exception e) {\n+                    throw new RuntimeException(e);\n+                }\n+            });\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                frameLocation = whiteFrame.getLocationOnScreen();\n+                frameCenterX = frameLocation.x + whiteFrame.getWidth() \/ 2;\n+                frameCenterY = frameLocation.y + whiteFrame.getHeight() \/ 2;\n+                awayX = frameLocation.x + whiteFrame.getWidth() + 100;\n+                awayY = frameLocation.y + whiteFrame.getHeight() \/ 2;\n+                imageCenterX = p.x + test.getWidth() \/ 2;\n+                imageCenterY = p.y + test.getHeight() \/ 2;\n+            });\n+            robot.delay(100);\n+            robot.waitForIdle();\n+            robot.mouseMove(imageCenterX, imageCenterY);\n+            robot.delay(100);\n+            robot.waitForIdle();\n+            moveMouseSlowly(frameCenterX, frameCenterY);\n+            robot.delay(1000);\n+            robot.waitForIdle();\n+\n+            moveMouseSlowly(awayX, awayY);\n+            robot.delay(100);\n+            robot.waitForIdle();\n+            Rectangle screenCaptureRect = new Rectangle(frameCenterX - 50,\n+                    frameCenterY - 50, 100, 100);\n+            BufferedImage bufferedImage = robot.createScreenCapture(screenCaptureRect);\n+\n+            if (!compareImages(bufferedImage)) {\n+                try {\n+                    ImageIO.write(bufferedImage, \"png\",\n+                            new File(\"FailureImage.png\"));\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                }\n+                throw new RuntimeException(\"Test Failed!\");\n+            }\n+            System.out.println(\"Test Passed!\");\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+                if (whiteFrame != null) {\n+                    whiteFrame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void moveMouseSlowly( int targetX, int targetY) {\n+        Point currentMousePos = MouseInfo.getPointerInfo().getLocation();\n+        int currentX = currentMousePos.x;\n+        int currentY = currentMousePos.y;\n+        int deltaX = targetX - currentX;\n+        int deltaY = targetY - currentY;\n+        int steps = 50;\n+        double stepX = (double) deltaX \/ steps;\n+        double stepY = (double) deltaY \/ steps;\n+        for (int i = 1; i <= steps; i++) {\n+            int nextX = currentX + (int) Math.round(i * stepX);\n+            int nextY = currentY + (int) Math.round(i * stepY);\n+            robot.mouseMove(nextX, nextY);\n+            robot.delay(10);\n+        }\n+        robot.mouseMove(targetX, targetY);\n+    }\n+\n+    private static boolean compareImages(BufferedImage bufferedImage) {\n+        int sampleRGB = bufferedImage.getRGB(0,0);\n+        for (int x = 0; x < bufferedImage.getWidth(); x++) {\n+            for (int y = 0; y < bufferedImage.getHeight(); y++) {\n+                if (bufferedImage.getRGB(x, y) != sampleRGB) {\n+                    return false;\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+\n+    public static void initialize() throws Exception {\n+        frame = new JFrame(\"JFrame Background refresh test\");\n+        whiteFrame = new JFrame(\"White Frame\");\n+        robot = new Robot();\n+        whiteFrame.setSize(200, 200);\n+        whiteFrame.setBackground(Color.WHITE);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setUndecorated(true);\n+        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);\n+        frame.setBackground(new Color(0, 0, 0, 0));\n+        frame.setContentPane(new TranslucentPane());\n+        frame.addMouseMotionListener(new MouseDragListener());\n+        whiteFrame.setLocationRelativeTo(null);\n+        whiteFrame.setVisible(true);\n+        frame.setVisible(true);\n+        frame.setAlwaysOnTop(true);\n+    }\n+    private static class MouseDragListener extends MouseAdapter {\n+        @Override\n+        public void mouseMoved(MouseEvent e) {\n+            p = e.getPoint();\n+            frame.repaint();\n+        }\n+    }\n+\n+    \/** Capture an image of any component **\/\n+    private static BufferedImage getImage(Component c) {\n+        if (c == null) {\n+            return null;\n+        }\n+        BufferedImage image = new BufferedImage(c.getWidth(),\n+                c.getHeight(), BufferedImage.TYPE_INT_ARGB);\n+        Graphics2D g = image.createGraphics();\n+        c.printAll(g);\n+        g.dispose();\n+        return image;\n+    }\n+\n+    \/** Generates a dummy image to be painted on the frame **\/\n+    private static BufferedImage generateImage() {\n+        JLabel label = new JLabel(\"test\");\n+        label.setFont(new Font(\"Arial\", Font.BOLD, 24));\n+        label.setSize(label.getPreferredSize());\n+        return getImage(label);\n+    }\n+\n+    public static class TranslucentPane extends JPanel {\n+        public TranslucentPane() {\n+            setOpaque(false);\n+        }\n+        @Override\n+        protected void paintComponent(Graphics g) {\n+            super.paintComponent(g);\n+            Graphics2D g2d = (Graphics2D) g.create();\n+            g2d.setColor(new Color(0,0,0,0));\n+            g2d.fillRect(0, 0, getWidth(), getHeight());\n+            g2d.drawImage(test, p.x, p.y, this);\n+            g2d.dispose();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFrame\/JFrameBackgroundRefreshTest.java","additions":210,"deletions":0,"binary":false,"changes":210,"status":"added"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8322239\n+ * @summary [macos] a11y : java.lang.NullPointerException is thrown when\n+ *          focus is moved on the JTabbedPane\n+ * @key headful\n+ * @run main TabbedPaneNPECheck\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleComponent;\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTabbedPane;\n+import javax.swing.SwingUtilities;\n+\n+public class TabbedPaneNPECheck {\n+    JTabbedPane pane;\n+    JFrame mainFrame;\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        TabbedPaneNPECheck me = new TabbedPaneNPECheck();\n+        SwingUtilities.invokeAndWait(me::setupGUI);\n+        try {\n+            SwingUtilities.invokeAndWait(me::test);\n+        } finally {\n+            SwingUtilities.invokeAndWait(me::shutdownGUI);\n+        }\n+    }\n+\n+    public void setupGUI() {\n+        mainFrame = new JFrame(\"TabbedPaneNPECheck\");\n+        pane = new JTabbedPane();\n+        Dimension panelSize = new Dimension(200, 200);\n+        for (int i = 0; i < 25; i++) {\n+            JPanel p = new JPanel();\n+            p.setMinimumSize(panelSize);\n+            p.setMaximumSize(panelSize);\n+            p.setSize(panelSize);\n+            pane.addTab(\"Tab no.\" + i, p);\n+        }\n+        mainFrame.setLayout(new BorderLayout());\n+        mainFrame.add(pane, BorderLayout.CENTER);\n+        mainFrame.setLocationRelativeTo(null);\n+        mainFrame.setSize(250, 250);\n+        mainFrame.setVisible(true);\n+    }\n+\n+    public void test() {\n+        AccessibleContext context = pane.getAccessibleContext();\n+        int nChild = context.getAccessibleChildrenCount();\n+        for (int i = 0; i < nChild; i++) {\n+            Accessible accessible = context.getAccessibleChild(i);\n+            if (accessible instanceof AccessibleComponent) {\n+                try {\n+                    AccessibleComponent component = (AccessibleComponent) accessible;\n+                    Point p = component.getLocationOnScreen();\n+                    Rectangle r = component.getBounds();\n+                } catch (NullPointerException npe) {\n+                    throw new RuntimeException(\"Unexpected NullPointerException \" +\n+                            \"while getting accessible component bounds: \", npe);\n+                }\n+            }\n+        }\n+    }\n+\n+    public void shutdownGUI() {\n+        if (mainFrame != null) {\n+            mainFrame.setVisible(false);\n+            mainFrame.dispose();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/TabbedPaneNPECheck.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.StringReader;\n+\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.Element;\n+import javax.swing.text.html.CSS;\n+import javax.swing.text.html.HTMLDocument;\n+import javax.swing.text.html.HTMLEditorKit;\n+\n+\/*\n+ * @test\n+ * @bug 8323801\n+ * @summary Tests that '<u><s>' produce underlined and struck-through text\n+ *\/\n+public final class HTMLUnderlineStrike {\n+    private static final String HTML = \"\"\"\n+            <!DOCTYPE html>\n+            <html lang=\"en\">\n+            <head>\n+                <meta charset=\"UTF-8\">\n+                <title>Strike-through text<\/title>\n+            <\/head>\n+            <body>\n+            <p><u><s>struck?<\/s><\/u><\/p>\n+            <p><span style='text-decoration: underline'><s>struck?<\/s><\/span><\/p>\n+\n+            <p><u><strike>struck?<\/strike><\/u><\/p>\n+            <p><span style='text-decoration: underline'><strike>struck?<\/strike><\/span><\/p>\n+            <\/body>\n+            <\/html>\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        HTMLEditorKit kit = new HTMLEditorKit();\n+        HTMLDocument doc = new HTMLDocument();\n+\n+        try (StringReader reader = new StringReader(HTML)) {\n+            kit.read(reader, doc, 0);\n+        }\n+\n+        StringBuilder errors = new StringBuilder();\n+\n+        Element root = doc.getDefaultRootElement();\n+        Element body = root.getElement(1);\n+        for (int i = 0; i < body.getElementCount(); i++) {\n+            Element p = body.getElement(i);\n+            Element content = p.getElement(0);\n+            AttributeSet attr = content.getAttributes();\n+            Object decoration = attr.getAttribute(CSS.Attribute.TEXT_DECORATION);\n+            String strDecoration = decoration.toString();\n+            System.out.println(i + \": \" + decoration);\n+            if (!strDecoration.contains(\"line-through\")\n+                || !strDecoration.contains(\"underline\")) {\n+                errors.append(\"<p>[\")\n+                      .append(i)\n+                      .append(\"], \");\n+            }\n+        }\n+\n+        if (!errors.isEmpty()) {\n+            errors.delete(errors.length() - 2, errors.length());\n+            throw new RuntimeException(errors + \" must have both \"\n+                                       + \"'line-through' and 'underline' in \"\n+                                       + \"'text-decoration'\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/HTMLDocument\/HTMLUnderlineStrike.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,2 @@\n-            \"UnsignedIntFlag\", \"UnsignedIntFlagChanged\", \"DoubleFlagChanged\")\n+            \"UnsignedIntFlag\", \"UnsignedIntFlagChanged\", \"DoubleFlagChanged\",\n+            \"SafepointCleanupTask\")\n","filename":"test\/jdk\/jdk\/jfr\/event\/metadata\/TestLookForUntestedEvents.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,0 @@\n-        \/\/ EventNames.SafepointCleanupTask,\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestSafepointEvents.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,5 @@\n-import org.testng.Assert;\n-import org.testng.annotations.AfterClass;\n-import org.testng.annotations.BeforeClass;\n-import org.testng.annotations.DataProvider;\n-import org.testng.annotations.Test;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n@@ -30,1 +30,4 @@\n-import java.io.*;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n@@ -32,1 +35,0 @@\n-import java.nio.file.FileSystem;\n@@ -35,1 +37,3 @@\n-import java.util.List;\n+import java.nio.file.attribute.FileTime;\n+import java.time.Instant;\n+import java.util.HashSet;\n@@ -37,0 +41,4 @@\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.zip.ZipEntry;\n@@ -38,0 +46,3 @@\n+import java.util.zip.ZipOutputStream;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n@@ -39,1 +50,0 @@\n-import static java.lang.String.format;\n@@ -46,2 +56,1 @@\n- * @requires (os.family == \"linux\") | (os.family == \"mac\")\n- * @run testng\/manual TestLocOffsetFromZip64EF\n+ * @run junit TestLocOffsetFromZip64EF\n@@ -51,7 +60,21 @@\n-    private static final String ZIP_FILE_NAME = \"LargeZipTest.zip\";\n-    \/\/ File that will be created with a size greater than 0xFFFFFFFF\n-    private static final String LARGE_FILE_NAME = \"LargeZipEntry.txt\";\n-    \/\/ File that will be created with a size less than 0xFFFFFFFF\n-    private static final String SMALL_FILE_NAME = \"SmallZipEntry.txt\";\n-    \/\/ The size (4GB) of the large file to be created\n-    private static final long LARGE_FILE_SIZE = 4L * 1024L * 1024L * 1024L;\n+    private static final String ZIP_FILE_NAME = \"LocOffsetFromZip64.zip\";\n+\n+    \/\/ Size of the data block of a Zip64 extended information field with long\n+    \/\/ fields for 'uncompressed size', 'compressed size' and 'local header offset'\n+    private static short ZIP64_DATA_SIZE = (short) Long.BYTES \/\/ Uncompressed size\n+            + Long.BYTES     \/\/ Compressed size\n+            + Long.BYTES;    \/\/ Loc offset\n+\n+    \/\/ Size of the extra field header\n+    private static short EXTRA_HEADER_SIZE = Short.BYTES \/\/ tag\n+            + Short.BYTES; \/\/ data size\n+\n+    \/\/ Size of a Zip64 extended information field including the header\n+    private static final int ZIP64_SIZE = EXTRA_HEADER_SIZE + ZIP64_DATA_SIZE;\n+\n+    \/\/ The Zip64 Magic value for 32-bit fields\n+    private static final int ZIP64_MAGIC_VALUE = 0XFFFFFFFF;\n+    \/\/ The 'unknown' tag, see APPNOTE.txt\n+    private static final short UNKNOWN_TAG = (short) 0x9902;\n+    \/\/ The 'Zip64 extended information' tag, see APPNOTE.txt\n+    private static final short ZIP64_TAG = (short) 0x1;\n@@ -61,0 +84,1 @@\n+     *\n@@ -63,1 +87,1 @@\n-    @BeforeClass\n+    @BeforeEach\n@@ -65,1 +89,0 @@\n-        System.out.println(\"In setup\");\n@@ -67,1 +90,0 @@\n-        createFiles();\n@@ -75,1 +97,1 @@\n-    @AfterClass\n+    @AfterEach\n@@ -77,1 +99,0 @@\n-        System.out.println(\"In cleanup\");\n@@ -79,15 +100,0 @@\n-        Files.deleteIfExists(Path.of(LARGE_FILE_NAME));\n-        Files.deleteIfExists(Path.of(SMALL_FILE_NAME));\n-    }\n-\n-    \/**\n-     * Create a Zip file that will result in a Zip64 Extra (EXT) header\n-     * being added to the CEN entry in order to find the LOC offset for\n-     * SMALL_FILE_NAME.\n-     *\/\n-    public static void createZipWithZip64Ext() {\n-        System.out.println(\"Executing zip...\");\n-        List<String> commands = List.of(\"zip\", \"-0\", ZIP_FILE_NAME,\n-                LARGE_FILE_NAME, SMALL_FILE_NAME);\n-        Result rc = run(new ProcessBuilder(commands));\n-        rc.assertSuccess();\n@@ -97,1 +103,1 @@\n-     * DataProvider used to verify that a Zip file that contains a Zip64 Extra\n+     * MethodSource used to verify that a Zip file that contains a Zip64 Extra\n@@ -100,8 +106,7 @@\n-    @DataProvider(name = \"zipInfoTimeMap\")\n-    protected Object[][] zipInfoTimeMap() {\n-        return new Object[][]{\n-                {Map.of()},\n-                {Map.of(\"zipinfo-time\", \"False\")},\n-                {Map.of(\"zipinfo-time\", \"true\")},\n-                {Map.of(\"zipinfo-time\", \"false\")}\n-        };\n+    static Stream<Map<String, String>> zipInfoTimeMap() {\n+        return Stream.of(\n+                Map.of(),\n+                Map.of(\"zipinfo-time\", \"False\"),\n+                Map.of(\"zipinfo-time\", \"true\"),\n+                Map.of(\"zipinfo-time\", \"false\")\n+        );\n@@ -115,1 +120,2 @@\n-    @Test(dataProvider = \"zipInfoTimeMap\")\n+    @ParameterizedTest\n+    @MethodSource(\"zipInfoTimeMap\")\n@@ -117,0 +123,2 @@\n+        Set<String> entries = new HashSet<>();\n+\n@@ -124,0 +132,1 @@\n+                        entries.add(file.getFileName().toString());\n@@ -131,0 +140,2 @@\n+        \/\/ Sanity check that ZIP file had the expected entries\n+        assertEquals(Set.of(\"entry\", \"entry2\", \"entry3\"), entries);\n@@ -142,2 +153,0 @@\n-        }\n-    }\n@@ -145,11 +154,3 @@\n-    \/**\n-     * Create the files that will be added to the ZIP file\n-     * @throws IOException if there is a problem  creating the files\n-     *\/\n-    private static void createFiles() throws IOException {\n-        try (RandomAccessFile file = new RandomAccessFile(LARGE_FILE_NAME, \"rw\")\n-        ) {\n-            System.out.printf(\"Creating %s%n\", LARGE_FILE_NAME);\n-            file.setLength(LARGE_FILE_SIZE);\n-            System.out.printf(\"Creating %s%n\", SMALL_FILE_NAME);\n-            Files.writeString(Path.of(SMALL_FILE_NAME), \"Hello\");\n+            \/\/ Sanity check that ZIP file had the expected entries\n+            assertEquals(zip.stream().map(ZipEntry::getName).collect(Collectors.toSet()),\n+                    Set.of(\"entry\", \"entry2\", \"entry3\"));\n@@ -160,3 +161,16 @@\n-     * Utility method to execute a ProcessBuilder command\n-     * @param pb ProcessBuilder to execute\n-     * @return The Result(s) from the ProcessBuilder execution\n+     * This produces a ZIP with similar features as the one created by 'Info-ZIP' which\n+     * caused 'Extended timestamp' parsing to fail before JDK-8255380.\n+     *\n+     * The issue was sensitive to the ordering of 'Info-ZIP extended timestamp' fields and\n+     * 'Zip64 extended information' fields. ZipOutputStream and 'Info-ZIP' order these differently.\n+     *\n+     * ZipFileSystem tried to read the Local file header while parsing the extended timestamp,\n+     * but if the Zip64 extra field was not read yet, ZipFileSystem would incorrecly try to read\n+     * the Local File header from offset 0xFFFFFFFF.\n+     *\n+     * This method creates a ZIP file which includes a CEN with the following features:\n+     *\n+     * - Its extra field has a 'Info-ZIP extended timestamp' field followed by a\n+     *   'Zip64 extended information' field.\n+     * - The sizes and offset fields values of the CEN are set to 0xFFFFFFFF (Zip64 magic values)\n+     *\n@@ -164,9 +178,3 @@\n-    private static Result run(ProcessBuilder pb) {\n-        Process p;\n-        System.out.printf(\"Running: %s%n\", pb.command());\n-        try {\n-            p = pb.start();\n-        } catch (IOException e) {\n-            throw new RuntimeException(\n-                    format(\"Couldn't start process '%s'\", pb.command()), e);\n-        }\n+    public void createZipWithZip64Ext() throws IOException {\n+        ByteArrayOutputStream out = new ByteArrayOutputStream();\n+        try (ZipOutputStream zo = new ZipOutputStream(out)) {\n@@ -174,7 +182,19 @@\n-        String output;\n-        try {\n-            output = toString(p.getInputStream(), p.getErrorStream());\n-        } catch (IOException e) {\n-            throw new RuntimeException(\n-                    format(\"Couldn't read process output '%s'\", pb.command()), e);\n-        }\n+            ZipEntry e = new ZipEntry(\"entry\");\n+            \/\/ Add an entry, make it STORED and empty to simplify parsing\n+            e.setMethod(ZipEntry.STORED);\n+            e.setSize(0);\n+            e.setCrc(0);\n+            zo.putNextEntry(e);\n+\n+            \/\/ Add an additional entry as a sanity check that we can navigate past the first\n+            ZipEntry e2 = new ZipEntry(\"entry2\");\n+            e2.setMethod(ZipEntry.STORED);\n+            e2.setSize(0);\n+            e2.setCrc(0);\n+            zo.putNextEntry(e2);\n+\n+            \/\/ For good measure, add a third, DEFLATED entry with some content\n+            ZipEntry e3 = new ZipEntry(\"entry3\");\n+            e3.setMethod(ZipEntry.DEFLATED);\n+            zo.putNextEntry(e3);\n+            zo.write(\"Hello\".getBytes(StandardCharsets.UTF_8));\n@@ -182,5 +202,14 @@\n-        try {\n-            p.waitFor();\n-        } catch (InterruptedException e) {\n-            throw new RuntimeException(\n-                    format(\"Process hasn't finished '%s'\", pb.command()), e);\n+            zo.closeEntry(); \/\/ At this point, all LOC headers are written.\n+\n+            \/\/ We want the first CEN entry to have two extra fields:\n+            \/\/ 1: A 'Info-Zip extended timestamp' extra field, generated by ZipOutputStream\n+            \/\/       when the following date fields are set:\n+            e.setLastModifiedTime(FileTime.from(Instant.now()));\n+            e.setLastAccessTime(FileTime.from(Instant.now()));\n+\n+            \/\/ 2: An opaque extra field, right-sized for a Zip64 extended field,\n+            \/\/    to be updated below\n+            byte[] zip64 = makeOpaqueExtraField();\n+            e.setExtra(zip64);\n+\n+            zo.finish(); \/\/ Write out CEN and END records\n@@ -188,1 +217,7 @@\n-        return new Result(p.exitValue(), output);\n+\n+        byte[] zip = out.toByteArray();\n+\n+        \/\/ ZIP now has the right structure, but we need to update the CEN to Zip64 format\n+        updateToZip64(zip);\n+        \/\/ Write the ZIP to disk\n+        Files.write(Path.of(ZIP_FILE_NAME), zip);\n@@ -192,5 +227,4 @@\n-     * Utility Method for combining the output from a ProcessBuilder invocation\n-     * @param in1 ProccessBuilder.getInputStream\n-     * @param in2 ProcessBuilder.getErrorStream\n-     * @return The ProcessBuilder output\n-     * @throws IOException if an error occurs\n+     * Returns an opaque extra field with the tag 'unknown', which makes ZipEntry.setExtra ignore it.\n+     * The returned field has the expected field and data size of a Zip64 extended information field\n+     * including the fields 'uncompressed size' (8 bytes), 'compressed size' (8 bytes) and\n+     * 'local header offset' (8 bytes).\n@@ -198,6 +232,8 @@\n-    static String toString(InputStream in1, InputStream in2) throws IOException {\n-        try (ByteArrayOutputStream dst = new ByteArrayOutputStream();\n-             InputStream concatenated = new SequenceInputStream(in1, in2)) {\n-            concatenated.transferTo(dst);\n-            return new String(dst.toByteArray(), StandardCharsets.UTF_8);\n-        }\n+    private static byte[] makeOpaqueExtraField() {\n+        byte[] zip64 = new byte[ZIP64_SIZE];\n+        ByteBuffer buffer = ByteBuffer.wrap(zip64).order(ByteOrder.LITTLE_ENDIAN);\n+        \/\/ Using the 'unknown' tag makes ZipEntry.setExtra ignore it\n+        buffer.putShort(UNKNOWN_TAG);\n+        \/\/ Data size\n+        buffer.putShort(ZIP64_DATA_SIZE);\n+        return zip64;\n@@ -207,1 +243,1 @@\n-     * Utility class used to hold the results from  a ProcessBuilder execution\n+     * Update the CEN record to Zip64 format\n@@ -209,3 +245,1 @@\n-    static class Result {\n-        final int ec;\n-        final String output;\n+    private static void updateToZip64(byte[] bytes) throws IOException {\n@@ -213,8 +247,23 @@\n-        private Result(int ec, String output) {\n-            this.ec = ec;\n-            this.output = output;\n-        }\n-        Result assertSuccess() {\n-            assertTrue(ec == 0, \"Expected ec 0, got: \", ec, \" , output [\", output, \"]\");\n-            return this;\n-        }\n+        ByteBuffer buffer = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);\n+\n+        \/\/ Look up CEN offset from the End of central directory header\n+        int cenOff = getCenOffet(buffer);\n+\n+        \/\/ Read name, extra field and comment lengths from CEN\n+        short nlen = buffer.getShort(cenOff + ZipFile.CENNAM);\n+        short elen = buffer.getShort(cenOff + ZipFile.CENEXT);\n+\n+        \/\/ Update CEN sizes and loc offset to 0xFFFFFFFF, meaning\n+        \/\/ actual values should be read from the Zip64 field\n+        buffer.putInt(cenOff + ZipFile.CENLEN, ZIP64_MAGIC_VALUE);\n+        buffer.putInt(cenOff + ZipFile.CENSIZ, ZIP64_MAGIC_VALUE);\n+        buffer.putInt(cenOff + ZipFile.CENOFF, ZIP64_MAGIC_VALUE);\n+\n+        \/\/ Offset of the extra fields\n+        int extraOff = cenOff + ZipFile.CENHDR + nlen;\n+\n+        \/\/ Position at the start of the Zip64 extra field\n+        int zip64ExtraOff = extraOff + elen - ZIP64_SIZE;\n+\n+        \/\/ Update tag \/ Header ID to be the actual Zip64 tag instead of the 'unknown'\n+        buffer.putShort(zip64ExtraOff, ZIP64_TAG);\n@@ -222,7 +271,6 @@\n-    static void assertTrue(boolean cond, Object ... failedArgs) {\n-        if (cond)\n-            return;\n-        StringBuilder sb = new StringBuilder();\n-        for (Object o : failedArgs)\n-            sb.append(o);\n-        Assert.fail(sb.toString());\n+\n+    \/**\n+     * Look up the CEN offset field from the End of central directory header\n+     *\/\n+    private static int getCenOffet(ByteBuffer buffer) {\n+        return buffer.getInt(buffer.capacity() - ZipFile.ENDHDR + ZipFile.ENDOFF);\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/TestLocOffsetFromZip64EF.java","additions":165,"deletions":117,"binary":false,"changes":282,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tConfiguration file for log testing\n+#       Configuration file for log testing\n","filename":"test\/jdk\/jdk\/security\/logging\/logging.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2022, JetBrains s.r.o.. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, JetBrains s.r.o.. All rights reserved.\n@@ -27,0 +27,1 @@\n+import java.awt.AWTException;\n@@ -29,0 +30,1 @@\n+import java.awt.Composite;\n@@ -33,0 +35,3 @@\n+import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n@@ -34,0 +39,1 @@\n+import java.awt.Insets;\n@@ -35,0 +41,1 @@\n+import java.awt.Point;\n@@ -36,0 +43,1 @@\n+import java.awt.Rectangle;\n@@ -38,0 +46,2 @@\n+import java.awt.Toolkit;\n+import java.awt.Transparency;\n@@ -39,0 +49,2 @@\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n@@ -41,0 +53,1 @@\n+\n@@ -51,0 +64,1 @@\n+import java.awt.image.VolatileImage;\n@@ -52,0 +66,2 @@\n+import java.io.File;\n+import java.io.FileOutputStream;\n@@ -53,1 +69,3 @@\n-import java.lang.reflect.InvocationTargetException;\n+import java.io.PrintWriter;\n+import java.nio.charset.Charset;\n+\n@@ -55,0 +73,4 @@\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.HashMap;\n@@ -56,0 +78,5 @@\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n@@ -57,1 +84,1 @@\n-import java.util.concurrent.CountDownLatch;\n+import java.util.Set;\n@@ -59,0 +86,1 @@\n+import java.util.concurrent.CountDownLatch;\n@@ -61,0 +89,3 @@\n+import java.util.function.IntBinaryOperator;\n+import java.util.regex.Pattern;\n+\n@@ -63,0 +94,1 @@\n+import javax.swing.JLabel;\n@@ -67,2 +99,6 @@\n-public class RenderPerfTest {\n-    private static HashSet<String> ignoredTests = new HashSet<>();\n+\n+public final class RenderPerfTest {\n+\n+    private final static String VERSION = \"RenderPerfTest 2024.02\";\n+\n+    private static final HashSet<String> ignoredTests = new HashSet<>();\n@@ -71,2 +107,3 @@\n-       \/\/ add ignored tests here\n-       \/\/ ignoredTests.add(\"testMyIgnoredTest\");\n+        \/\/ add ignored tests here\n+        \/\/ ignoredTests.add(\"testMyIgnoredTest\");\n+        ignoredTests.add(\"testCalibration\"); \/\/ not from command line\n@@ -75,1 +112,47 @@\n-    private final static int N = 1000;\n+    private final static String EXEC_MODE_ROBOT = \"robot\";\n+    private final static String EXEC_MODE_BUFFER = \"buffer\";\n+    private final static String EXEC_MODE_VOLATILE = \"volatile\";\n+    private final static String EXEC_MODE_DEFAULT = EXEC_MODE_ROBOT;\n+\n+    public final static List<String> EXEC_MODES = Arrays.asList(EXEC_MODE_ROBOT, EXEC_MODE_BUFFER, EXEC_MODE_VOLATILE);\n+\n+    private static String EXEC_MODE = EXEC_MODE_DEFAULT;\n+\n+    private final static String GC_MODE_DEF = \"def\";\n+    private final static String GC_MODE_ALL = \"all\";\n+\n+    private static String GC_MODE = GC_MODE_DEF;\n+\n+    \/\/ System properties:\n+    private final static boolean CALIBRATION = \"true\".equalsIgnoreCase(System.getProperty(\"CALIBRATION\", \"false\"));\n+    private final static boolean REPORT_OVERALL_FPS = \"true\".equalsIgnoreCase(System.getProperty(\"REPORT_OVERALL_FPS\", \"false\"));\n+\n+    private final static boolean DUMP_SAMPLES = \"true\".equalsIgnoreCase(System.getProperty(\"DUMP_SAMPLES\", \"false\"));\n+    private final static boolean TRACE = \"true\".equalsIgnoreCase(System.getProperty(\"TRACE\", \"false\"));\n+    private final static boolean TRACE_CONFIGURE = \"true\".equalsIgnoreCase(System.getProperty(\"TRACE_CONFIGURE\", \"false\"));\n+    private final static boolean TRACE_SYNC = \"true\".equalsIgnoreCase(System.getProperty(\"TRACE_SYNC\", \"false\"));\n+\n+    private final static boolean DELAY_START = \"true\".equalsIgnoreCase(System.getProperty(\"DelayStart\", \"false\"));\n+    private final static boolean DELAY_TEST = \"true\".equalsIgnoreCase(System.getProperty(\"DelayTest\", \"false\"));\n+\n+    private final static boolean ROBOT_TIME_DELAY = \"true\".equalsIgnoreCase(System.getProperty(\"ROBOT_TIME_DELAY\", \"true\"));\n+    private final static boolean ROBOT_TIME_ROUND = \"true\".equalsIgnoreCase(System.getProperty(\"ROBOT_TIME_ROUND\", \"false\"));\n+\n+    private final static boolean TEXT_VERSION = \"true\".equalsIgnoreCase(System.getProperty(\"TEXT_VERSION\", \"true\"));\n+\n+    \/\/ time scale multiplier to get more samples so refined metrics:\n+    private final static int TIME_SCALE = Integer.getInteger(\"TIME_SCALE\", 1);\n+\n+    \/\/ default settings:\n+    private static boolean VERBOSE = false;\n+    private static boolean VERBOSE_FONT_CONFIG = false;\n+    private static boolean VERBOSE_GRAPHICS_CONFIG = false;\n+\n+    private static int REPEATS = 1;\n+\n+    private static boolean USE_FPS = true;\n+\n+    private static int NW = 1;\n+\n+    private final static int N_DEFAULT = 1000;\n+    private static int N = N_DEFAULT;\n@@ -81,3 +164,22 @@\n-    private final static int COUNT = 600;\n-    private final static int CYCLE_DELAY = 3;\n-    private final static int MAX_FRAME_CYCLES = 3000\/CYCLE_DELAY;\n+    private final static int IMAGE_W = (int) (WIDTH + BW);\n+    private final static int IMAGE_H = (int) (HEIGHT + BH);\n+\n+    \/\/ Test attributes:\n+    private static String TEXT_STR = TEXT_VERSION ? VERSION : \"The quick brown fox jumps over the lazy dog\";\n+\n+    private static String TEXT_FONT = Font.DIALOG;\n+    private static int TEXT_SIZE_DEFAULT = 12;\n+    private static int TEXT_SIZE_LARGE = 32;\n+\n+    private final static int COUNT = 600 * TIME_SCALE;\n+    private final static int MIN_COUNT = 20;\n+    private final static int MAX_SAMPLE_COUNT = 2 * COUNT;\n+\n+    private static int WARMUP_COUNT = MIN_COUNT;\n+\n+    private final static int DELAY = 1;\n+    private final static int CYCLE_DELAY = DELAY;\n+\n+    private final static long MIN_MEASURE_TIME_NS = 1000L * 1000 * 1000 * TIME_SCALE; \/\/ 1s min\n+    private final static long MAX_MEASURE_TIME_NS = 6000L * 1000 * 1000 * TIME_SCALE; \/\/ 6s max\n+    private final static int MAX_FRAME_CYCLES = 1000 * TIME_SCALE \/ CYCLE_DELAY;\n@@ -86,1 +188,0 @@\n-    private final static int MAX_MEASURE_CYCLES = 6000\/CYCLE_DELAY;\n@@ -88,1 +189,6 @@\n-    private final static Color[] marker = {Color.RED, Color.BLUE, Color.GREEN, Color.YELLOW, Color.ORANGE, Color.MAGENTA};\n+    private final static Color[] MARKER = {Color.RED, Color.BLUE, Color.GREEN};\n+\n+    private final static Toolkit TOOLKIT = Toolkit.getDefaultToolkit();\n+\n+    private final static long FRAME_MAX = 60;\n+    private final static long FRAME_PREC_IN_NANOS = (1000L * 1000 * 1000) \/ (2L * FRAME_MAX);\n@@ -91,1 +197,1 @@\n-        void configure(Graphics2D g2d);\n+        void configure(Graphics2D g2d, boolean enabled);\n@@ -94,4 +200,50 @@\n-    interface Renderable {\n-        void setup(Graphics2D g2d);\n-        void render(Graphics2D g2d);\n-        void update();\n+    final static class ConfigurableAA implements Configurable {\n+        @Override\n+        public void configure(final Graphics2D g2d, final boolean enabled) {\n+            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n+                    enabled ? RenderingHints.VALUE_ANTIALIAS_ON\n+                            : RenderingHints.VALUE_ANTIALIAS_OFF);\n+        }\n+    }\n+\n+    final static class ConfigurableTextAA implements Configurable {\n+        @Override\n+        public void configure(final Graphics2D g2d, final boolean enabled) {\n+            g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n+                    enabled ? RenderingHints.VALUE_TEXT_ANTIALIAS_ON\n+                            : RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);\n+        }\n+    }\n+\n+    final static class ConfigurableTextLCD implements Configurable {\n+        @Override\n+        public void configure(final Graphics2D g2d, final boolean enabled) {\n+            g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n+                    enabled ? RenderingHints.VALUE_TEXT_ANTIALIAS_LCD_HRGB\n+                            : RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);\n+        }\n+    }\n+\n+    final static class ConfigurableXORMode implements Configurable {\n+        @Override\n+        public void configure(final Graphics2D g2d, final boolean enabled) {\n+            if (enabled) {\n+                g2d.setXORMode(Color.WHITE);\n+            } else {\n+                g2d.setPaintMode();\n+            }\n+        }\n+    }\n+\n+    final static class ConfigurableXORModeTextLCD implements Configurable {\n+        @Override\n+        public void configure(final Graphics2D g2d, final boolean enabled) {\n+            if (enabled) {\n+                g2d.setXORMode(Color.WHITE);\n+            } else {\n+                g2d.setPaintMode();\n+            }\n+            g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n+                    enabled ? RenderingHints.VALUE_TEXT_ANTIALIAS_LCD_HRGB\n+                            : RenderingHints.VALUE_TEXT_ANTIALIAS_DEFAULT);\n+        }\n@@ -100,7 +252,7 @@\n-    static class Particles {\n-        private float[] bx;\n-        private float[] by;\n-        private float[] vx;\n-        private float[] vy;\n-        private float r;\n-        private int n;\n+    final static class Particles {\n+        private final float[] bx;\n+        private final float[] by;\n+        private final float[] vx;\n+        private final float[] vy;\n+        private final float r;\n+        private final int n;\n@@ -108,4 +260,4 @@\n-        private float x0;\n-        private float y0;\n-        private float width;\n-        private float height;\n+        private final float x0;\n+        private final float y0;\n+        private final float width;\n+        private final float height;\n@@ -146,1 +298,0 @@\n-\n@@ -148,1 +299,0 @@\n-\n@@ -151,2 +301,6 @@\n-    ParticleRenderable createPR(ParticleRenderer renderer) {\n-        return new ParticleRenderable(renderer);\n+    interface Renderable {\n+        void setup(Graphics2D g2d, boolean enabled);\n+\n+        void render(Graphics2D g2d);\n+\n+        void update();\n@@ -155,3 +309,4 @@\n-    static class ParticleRenderable implements Renderable {\n-        ParticleRenderer renderer;\n-        Configurable configure;\n+    final static class ParticleRenderable implements Renderable {\n+        final Particles balls;\n+        final ParticleRenderer renderer;\n+        Configurable configure = null;\n@@ -159,1 +314,2 @@\n-        ParticleRenderable(ParticleRenderer renderer, Configurable configure) {\n+        ParticleRenderable(final Particles balls, final ParticleRenderer renderer) {\n+            this.balls = balls;\n@@ -161,5 +317,0 @@\n-            this.configure = configure;\n-        }\n-\n-        ParticleRenderable(ParticleRenderer renderer) {\n-            this(renderer, null);\n@@ -169,2 +320,7 @@\n-        public void setup(Graphics2D g2d) {\n-            if (configure != null) configure.configure(g2d);\n+        public void setup(final Graphics2D g2d, final boolean enabled) {\n+            if (configure != null) {\n+                if (TRACE_CONFIGURE) {\n+                    System.out.println(\"configure(\" + configure.getClass().getSimpleName() + \"): \" + enabled);\n+                }\n+                configure.configure(g2d, enabled);\n+            }\n@@ -183,1 +339,1 @@\n-        public ParticleRenderable configure(Configurable configure) {\n+        public ParticleRenderable configure(final Configurable configure) {\n@@ -191,0 +347,30 @@\n+    }\n+\n+    final static class CalibrationParticleRenderer implements ParticleRenderer {\n+\n+        CalibrationParticleRenderer() {\n+        }\n+\n+        @Override\n+        public void render(Graphics2D g2d, int id, float[] x, float[] y, float[] vx, float[] vy) {\n+            \/\/ no-op\n+        }\n+    }\n+\n+    final static class MixedParticleRenderer implements ParticleRenderer {\n+\n+        private final ParticleRenderer[] renderers;\n+\n+        MixedParticleRenderer(ParticleRenderer... renderers) {\n+            this.renderers = renderers;\n+        }\n+\n+        @Override\n+        public void render(Graphics2D g2d, int id, float[] x, float[] y, float[] vx, float[] vy) {\n+            renderers[id % renderers.length].render(g2d, id, x, y, vx, vy);\n+        }\n+    }\n+\n+    final static class BatchedParticleRenderer implements ParticleRenderer {\n+\n+        private final ParticleRenderer[] renderers;\n@@ -192,0 +378,9 @@\n+        BatchedParticleRenderer(ParticleRenderer... renderers) {\n+            this.renderers = renderers;\n+        }\n+\n+        @Override\n+        public void render(Graphics2D g2d, int id, float[] x, float[] y, float[] vx, float[] vy) {\n+            final int step = N \/ renderers.length;\n+            renderers[(id \/ step) % renderers.length].render(g2d, id, x, y, vx, vy);\n+        }\n@@ -210,1 +405,1 @@\n-            g2d.fillOval((int)(x[id] - r), (int)(y[id] - r), (int)(2*r), (int)(2*r));\n+            g2d.fillOval((int) (x[id] - r), (int) (y[id] - r), (int) (2 * r), (int) (2 * r));\n@@ -231,0 +426,1 @@\n+\n@@ -232,1 +428,2 @@\n-        float r;\n+        final float r;\n+        final Font font;\n@@ -235,0 +432,4 @@\n+            this(r, TEXT_SIZE_DEFAULT);\n+        }\n+\n+        WhiteTextParticleRenderer(float r, int fontSize) {\n@@ -236,0 +437,1 @@\n+            font = new Font(TEXT_FONT, Font.PLAIN, fontSize);\n@@ -245,6 +447,4 @@\n-            g2d.drawString(\"The quick brown fox jumps over the lazy dog\",\n-                    (int)(x[id] - r), (int)(y[id] - r));\n-            g2d.drawString(\"The quick brown fox jumps over the lazy dog\",\n-                    (int)(x[id] - r), (int)y[id]);\n-            g2d.drawString(\"The quick brown fox jumps over the lazy dog\",\n-                    (int)(x[id] - r), (int)(y[id] + r));\n+            g2d.setFont(font);\n+            g2d.drawString(TEXT_STR, (int) (x[id] - r), (int) (y[id] - r));\n+            g2d.drawString(TEXT_STR, (int) (x[id] - r), (int) y[id]);\n+            g2d.drawString(TEXT_STR, (int) (x[id] - r), (int) (y[id] + r));\n@@ -260,1 +460,5 @@\n-            super(r);\n+            this(n,r, TEXT_SIZE_DEFAULT);\n+        }\n+\n+        TextParticleRenderer(int n, float r, int fontSize) {\n+            super(r, fontSize);\n@@ -277,1 +481,1 @@\n-            super(n, r);\n+            super(n, r, TEXT_SIZE_LARGE);\n@@ -282,1 +486,0 @@\n-            setPaint(g2d, id);\n@@ -284,8 +487,1 @@\n-            Font font = new Font(\"LucidaGrande\", Font.PLAIN, 32);\n-            g2d.setFont(font);\n-            g2d.drawString(\"The quick brown fox jumps over the lazy dog\",\n-                    (int)(x[id] - r), (int)(y[id] - r));\n-            g2d.drawString(\"The quick brown fox jumps over the lazy dog\",\n-                    (int)(x[id] - r), (int)y[id]);\n-            g2d.drawString(\"The quick brown fox jumps over the lazy dog\",\n-                    (int)(x[id] - r), (int)(y[id] + r));\n+            super.render(g2d, id, x, y, vx, vy);\n@@ -297,1 +493,0 @@\n-\n@@ -317,1 +512,1 @@\n-                g2d.fillOval(-(int)r, (int)(-0.5*r), (int) (2 * r), (int)r);\n+                g2d.fillOval(-(int) r, (int) (-0.5 * r), (int) (2 * r), (int) r);\n@@ -320,1 +515,1 @@\n-                g2d.fillOval((int)(x[id] - r), (int)(y[id] - 0.5*r),\n+                g2d.fillOval((int) (x[id] - r), (int) (y[id] - 0.5 * r),\n@@ -328,1 +523,0 @@\n-\n@@ -335,2 +529,2 @@\n-            Point2D start = new Point2D.Double(- r,  - 0.5*r);\n-            Point2D end = new Point2D.Double( 2 * r, r);\n+            Point2D start = new Point2D.Double(-r, -0.5 * r);\n+            Point2D end = new Point2D.Double(2 * r, r);\n@@ -338,3 +532,2 @@\n-            Color[] cls = {colors[id %colors.length], colors[(colors.length - id) %colors.length]};\n-            LinearGradientPaint p =\n-                    new LinearGradientPaint(start, end, dist, cls);\n+            Color[] cls = {colors[id % colors.length], colors[(colors.length - id) % colors.length]};\n+            LinearGradientPaint p = new LinearGradientPaint(start, end, dist, cls);\n@@ -347,1 +540,0 @@\n-\n@@ -354,2 +546,2 @@\n-            Point2D start = new Point2D.Double(- r,  - 0.5*r);\n-            Point2D end = new Point2D.Double( 2 * r, r);\n+            Point2D start = new Point2D.Double(-r, -0.5 * r);\n+            Point2D end = new Point2D.Double(2 * r, r);\n@@ -358,5 +550,4 @@\n-                colors[id %colors.length],\n-                colors[(colors.length - id) %colors.length],\n-                colors[(id*5) %colors.length]};\n-            LinearGradientPaint p =\n-                new LinearGradientPaint(start, end, dist, cls);\n+                    colors[id % colors.length],\n+                    colors[(colors.length - id) % colors.length],\n+                    colors[(id * 5) % colors.length]};\n+            LinearGradientPaint p = new LinearGradientPaint(start, end, dist, cls);\n@@ -369,1 +560,0 @@\n-\n@@ -379,5 +569,4 @@\n-                colors[id %colors.length],\n-                colors[(colors.length - id) %colors.length],\n-                colors[(id*5) %colors.length]};\n-            RadialGradientPaint p =\n-                new RadialGradientPaint(start, r, dist, cls);\n+                    colors[id % colors.length],\n+                    colors[(colors.length - id) % colors.length],\n+                    colors[(id * 5) % colors.length]};\n+            RadialGradientPaint p = new RadialGradientPaint(start, r, dist, cls);\n@@ -390,1 +579,0 @@\n-\n@@ -394,0 +582,1 @@\n+\n@@ -397,2 +586,1 @@\n-            g2d.fillRect((int)(x[id] - r), (int)(y[id] - r), (int)(2*r), (int)(2*r));\n-\n+            g2d.fillRect((int) (x[id] - r), (int) (y[id] - r), (int) (2 * r), (int) (2 * r));\n@@ -400,1 +588,0 @@\n-\n@@ -405,1 +592,0 @@\n-\n@@ -409,0 +595,1 @@\n+\n@@ -437,1 +624,1 @@\n-            g2d.drawImage(dukeImg, (int)(x[id] - r), (int)(y[id] - r), (int)(2*r), (int)(2*r), null);\n+            g2d.drawImage(dukeImg, (int) (x[id] - r), (int) (y[id] - r), (int) (2 * r), (int) (2 * r), null);\n@@ -442,1 +629,36 @@\n-    static class FlatBoxRotParticleRenderer extends FlatParticleRenderer {\n+    static class VolImgParticleRenderer extends ImgParticleRenderer {\n+        VolatileImage volImg;\n+\n+        VolImgParticleRenderer(int n, float r) {\n+            super(n, r);\n+        }\n+\n+        @Override\n+        public void render(Graphics2D g2d, int id, float[] x, float[] y, float[] vx, float[] vy) {\n+            GraphicsConfiguration config = g2d.getDeviceConfiguration();\n+            if (volImg == null) {\n+                volImg = config.createCompatibleVolatileImage(dukeImg.getWidth(), dukeImg.getHeight(),\n+                        Transparency.TRANSLUCENT);\n+                Graphics2D g = volImg.createGraphics();\n+                g.setComposite(AlphaComposite.Src);\n+                g.drawImage(dukeImg, null, null);\n+                g.dispose();\n+            } else {\n+                int status = volImg.validate(config);\n+                if (status == VolatileImage.IMAGE_INCOMPATIBLE) {\n+                    volImg = config.createCompatibleVolatileImage(dukeImg.getWidth(), dukeImg.getHeight(),\n+                            Transparency.TRANSLUCENT);\n+                }\n+                if (status != VolatileImage.IMAGE_OK) {\n+                    Graphics2D g = volImg.createGraphics();\n+                    g.setComposite(AlphaComposite.Src);\n+                    g.drawImage(dukeImg, null, null);\n+                    g.dispose();\n+                }\n+            }\n+            Composite savedComposite = g2d.getComposite();\n+            g2d.setComposite(AlphaComposite.SrcOver);\n+            g2d.drawImage(volImg, (int) (x[id] - r), (int) (y[id] - r), (int) (2 * r), (int) (2 * r), null);\n+            g2d.setComposite(savedComposite);\n+        }\n+    }\n@@ -444,0 +666,1 @@\n+    static class FlatBoxRotParticleRenderer extends FlatParticleRenderer {\n@@ -448,0 +671,1 @@\n+\n@@ -459,1 +683,1 @@\n-                g2d.fillRect(-(int)r, -(int)r, (int) (2 * r), (int) (2 * r));\n+                g2d.fillRect(-(int) r, -(int) r, (int) (2 * r), (int) (2 * r));\n@@ -462,1 +686,1 @@\n-                g2d.fillRect((int)(x[id] - r), (int)(y[id] - r),\n+                g2d.fillRect((int) (x[id] - r), (int) (y[id] - r),\n@@ -470,1 +694,0 @@\n-\n@@ -474,0 +697,1 @@\n+\n@@ -477,1 +701,1 @@\n-            g2d.drawOval((int)(x[id] - r), (int)(y[id] - r), (int)(2*r), (int)(2*r));\n+            g2d.drawOval((int) (x[id] - r), (int) (y[id] - r), (int) (2 * r), (int) (2 * r));\n@@ -479,1 +703,0 @@\n-\n@@ -481,0 +704,1 @@\n+\n@@ -490,1 +714,1 @@\n-            g2d.drawRect((int)(x[id] - r), (int)(y[id] - r), (int)(2*r), (int)(2*r));\n+            g2d.drawRect((int) (x[id] - r), (int) (y[id] - r), (int) (2 * r), (int) (2 * r));\n@@ -492,1 +716,0 @@\n-\n@@ -494,0 +717,1 @@\n+\n@@ -502,3 +726,3 @@\n-            double v = Math.sqrt(vx[id]*vx[id]+vy[id]*vy[id]);\n-            float nvx = (float) (vx[id]\/v);\n-            float nvy = (float) (vy[id]\/v);\n+            double v = Math.sqrt(vx[id] * vx[id] + vy[id] * vy[id]);\n+            float nvx = (float) (vx[id] \/ v);\n+            float nvy = (float) (vy[id] \/ v);\n@@ -506,2 +730,2 @@\n-            g2d.drawLine((int)(x[id] - r*nvx), (int)(y[id] - r*nvy),\n-                    (int)(x[id] + 2*r*nvx), (int)(y[id] + 2*r*nvy));\n+            g2d.drawLine((int) (x[id] - r * nvx), (int) (y[id] - r * nvy),\n+                    (int) (x[id] + 2 * r * nvx), (int) (y[id] + 2 * r * nvy));\n@@ -509,1 +733,0 @@\n-\n@@ -512,1 +735,0 @@\n-\n@@ -523,1 +745,1 @@\n-                g2d.draw(new QuadCurve2D.Float(x[id-3], y[id-3], x[id-2], y[id-2], x[id-1], y[id-1]));\n+                g2d.draw(new QuadCurve2D.Float(x[id - 3], y[id - 3], x[id - 2], y[id - 2], x[id - 1], y[id - 1]));\n@@ -525,1 +747,0 @@\n-\n@@ -539,1 +760,1 @@\n-                g2d.fill(new QuadCurve2D.Float(x[id-3], y[id-3], x[id-2], y[id-2], x[id-1], y[id-1]));\n+                g2d.fill(new QuadCurve2D.Float(x[id - 3], y[id - 3], x[id - 2], y[id - 2], x[id - 1], y[id - 1]));\n@@ -541,1 +762,0 @@\n-\n@@ -556,1 +776,1 @@\n-            g2d.drawImage(image, (int)(x[id] - r), (int)(y[id] - r), (int)(2*r), (int)(2*r), null);\n+            g2d.drawImage(image, (int) (x[id] - r), (int) (y[id] - r), (int) (2 * r), (int) (2 * r), null);\n@@ -568,1 +788,0 @@\n-\n@@ -605,2 +824,5 @@\n-    static class PerfMeter {\n-        private String name;\n+    final static class PerfMeter {\n+\n+        private final FrameHandler fh;\n+        private final String name;\n+        private final PerfMeterExecutor executor;\n@@ -608,0 +830,5 @@\n+        PerfMeter(final FrameHandler fh, String name) {\n+            this.fh = fh;\n+            this.name = name;\n+            executor = getExecutor();\n+        }\n@@ -609,1 +836,3 @@\n-        private JPanel panel;\n+        void exec(final Renderable renderable) throws Exception {\n+            executor.exec(name, renderable);\n+        }\n@@ -611,4 +840,14 @@\n-        private double execTime = 0;\n-        private AtomicInteger markerIdx = new AtomicInteger(0);\n-        private int renderedMarkerIdx = -1;\n-        private AtomicLong markerPaintTime = new AtomicLong(0);\n+        private PerfMeterExecutor getExecutor() {\n+            switch (EXEC_MODE) {\n+                default:\n+                case EXEC_MODE_ROBOT:\n+                    return new PerfMeterRobot(fh);\n+                case EXEC_MODE_BUFFER:\n+                    fh.prepareImageProvider(false);\n+                    return new PerfMeterImageProvider(fh);\n+                case EXEC_MODE_VOLATILE:\n+                    fh.prepareImageProvider(true);\n+                    return new PerfMeterImageProvider(fh);\n+            }\n+        }\n+    }\n@@ -616,2 +855,7 @@\n-        private double fps;\n-        private int skippedFrame = 0;\n+    static void paintTest(final Renderable renderable, final Graphics2D g2d,\n+                          final Color markerColor, final boolean doSync) {\n+        \/\/ clip to frame:\n+        g2d.setClip(0, 0, IMAGE_W, IMAGE_H);\n+        \/\/ clear background:\n+        g2d.setColor(Color.BLACK);\n+        g2d.fillRect(0, 0, IMAGE_W, IMAGE_H);\n@@ -619,2 +863,13 @@\n-        PerfMeter(String name) {\n-            this.name = name;\n+        \/\/ render test:\n+        renderable.setup(g2d, true);\n+        renderable.render(g2d);\n+        renderable.setup(g2d, false);\n+\n+        \/\/ draw marker at end:\n+        g2d.setClip(0, 0, BW, BH);\n+        g2d.setColor(markerColor);\n+        g2d.fillRect(0, 0, BW, BH);\n+\n+        if (doSync) {\n+            \/\/ synchronize toolkit:\n+            TOOLKIT.sync();\n@@ -622,0 +877,1 @@\n+    }\n@@ -623,2 +879,1 @@\n-        PerfMeter exec(final Renderable renderable) throws Exception {\n-            final CountDownLatch latchFrame = new CountDownLatch(1);\n+    final static class FrameHandler {\n@@ -626,7 +881,1 @@\n-            final JFrame f = new JFrame();\n-            f.addWindowListener(new WindowAdapter() {\n-                @Override\n-                public void windowClosed(WindowEvent e) {\n-                    latchFrame.countDown();\n-                }\n-            });\n+        private boolean calibrate = VERBOSE;\n@@ -634,3 +883,2 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                @Override\n-                public void run() {\n+        private int threadId = -1;\n+        private int frameId = -1;\n@@ -638,8 +886,1 @@\n-                    panel = new JPanel() {\n-                        @Override\n-                        protected void paintComponent(Graphics g) {\n-                            super.paintComponent(g);\n-                            int idx = markerIdx.get();\n-                            if (idx != renderedMarkerIdx) {\n-                                markerPaintTime.set(System.nanoTime());\n-                            }\n+        private final GraphicsConfiguration gc;\n@@ -647,10 +888,1 @@\n-                            Graphics2D g2d = (Graphics2D) g.create();\n-                            renderable.setup(g2d);\n-                            renderable.render(g2d);\n-                            g2d.setClip(null);\n-                            g2d.setPaintMode();\n-                            g2d.setColor(marker[idx]);\n-                            g2d.fillRect(0, 0, BW, BH);\n-                            renderedMarkerIdx = idx;\n-                        }\n-                    };\n+        private JFrame frame = null;\n@@ -658,8 +890,2 @@\n-                    panel.setPreferredSize(new Dimension((int) (WIDTH + BW), (int) (HEIGHT + BH)));\n-                    panel.setBackground(Color.BLACK);\n-                    f.add(panel);\n-                    f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n-                    f.pack();\n-                    f.setVisible(true);\n-                }\n-            });\n+        private final CountDownLatch latchShownFrame = new CountDownLatch(1);\n+        private final CountDownLatch latchClosedFrame = new CountDownLatch(1);\n@@ -667,11 +893,1 @@\n-            Robot robot = new Robot();\n-            int cycle = 0;\n-            int frame = 0;\n-            long paintTime = 0;\n-            int maxFrameCycle = -1;\n-            while (frame < COUNT) {\n-                long t;\n-                if ((t = markerPaintTime.getAndSet(0)) > 0) {\n-                    paintTime = t;\n-                    maxFrameCycle = cycle + MAX_FRAME_CYCLES;\n-                }\n+        private ImageProvider imageProvider = null;\n@@ -679,19 +895,17 @@\n-                if (paintTime > 0) {\n-                    Color c = robot.getPixelColor(\n-                            panel.getTopLevelAncestor().getX() + panel.getTopLevelAncestor().getInsets().left + BW \/ 2,\n-                            panel.getTopLevelAncestor().getY() + panel.getTopLevelAncestor().getInsets().top + BW \/ 2);\n-\n-                    if (isAlmostEqual(c, marker[markerIdx.get()])) {\n-                        execTime += System.nanoTime() - paintTime;\n-                        frame++;\n-                        paintTime = 0;\n-                        maxFrameCycle = -1;\n-                        markerIdx.accumulateAndGet(marker.length, (x, y) -> (x + 1) % y);\n-                        renderable.update();\n-                        panel.getParent().repaint();\n-                    } else if (cycle >= maxFrameCycle) {\n-                        skippedFrame++;\n-                        paintTime = 0;\n-                        maxFrameCycle = -1;\n-                        markerIdx.accumulateAndGet(marker.length, (x, y) -> (x + 1) % y);\n-                        panel.getParent().repaint();\n+        FrameHandler(GraphicsConfiguration gc) {\n+            this.gc = gc;\n+        }\n+\n+        void setIds(int threadId, int frameId) {\n+            this.threadId = threadId;\n+            this.frameId = frameId;\n+        }\n+\n+        void prepareFrameEDT(final String title) {\n+            if (frame == null) {\n+                frame = new JFrame(gc);\n+                frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n+                frame.addComponentListener(new ComponentAdapter() {\n+                    @Override\n+                    public void componentShown(ComponentEvent e) {\n+                        latchShownFrame.countDown();\n@@ -699,10 +913,7 @@\n-                }\n-                try {\n-                    Thread.sleep(CYCLE_DELAY);\n-                } catch (InterruptedException ex) {\n-                    ex.printStackTrace();\n-                }\n-                if (cycle >= MAX_MEASURE_CYCLES) {\n-                    break;\n-                }\n-                cycle++;\n+                });\n+                frame.addWindowListener(new WindowAdapter() {\n+                    @Override\n+                    public void windowClosed(WindowEvent e) {\n+                        latchClosedFrame.countDown();\n+                    }\n+                });\n@@ -710,4 +921,2 @@\n-            SwingUtilities.invokeAndWait(() -> {\n-                f.setVisible(false);\n-                f.dispose();\n-            });\n+            frame.setTitle(title);\n+        }\n@@ -715,5 +924,23 @@\n-            latchFrame.await();\n-            if (execTime != 0 && frame != 0) {\n-                fps = 1e9 \/ (execTime \/ frame);\n-            } else {\n-                fps = 0;\n+        void showFrameEDT(final JPanel panel) {\n+            if (frame != null) {\n+                panel.setPreferredSize(new Dimension(IMAGE_W, IMAGE_H));\n+                panel.setBackground(Color.BLACK);\n+\n+                frame.getContentPane().removeAll();\n+                frame.getContentPane().add(panel);\n+                frame.getContentPane().revalidate();\n+\n+                if (!frame.isVisible()) {\n+                    if (frameId != -1) {\n+                        final int off = (frameId - 1) * 100;\n+                        final Rectangle gcBounds = gc.getBounds();\n+                        final int xoff = gcBounds.x + off;\n+                        final int yoff = gcBounds.y + off;\n+\n+                        if ((xoff != 0) || (yoff != 0)) {\n+                            frame.setLocation(xoff, yoff);\n+                        }\n+                    }\n+                    frame.pack();\n+                    frame.setVisible(true);\n+                }\n@@ -721,0 +948,1 @@\n+        }\n@@ -722,1 +950,14 @@\n-            return this;\n+        void waitFrameShown() throws Exception {\n+            latchShownFrame.await();\n+        }\n+\n+        void resetFrame() throws Exception {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        frame.getContentPane().removeAll();\n+                        frame.getContentPane().revalidate();\n+                    }\n+                });\n+            }\n@@ -725,3 +966,8 @@\n-        private void report() {\n-            if (skippedFrame > 0) {\n-                System.err.println(skippedFrame + \" frame(s) skipped\");\n+        void repaintFrame() throws Exception {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        frame.repaint();\n+                    }\n+                });\n@@ -729,1 +975,0 @@\n-            System.err.println(name + \" : \" + String.format(\"%.2f FPS\", fps));\n@@ -732,4 +977,17 @@\n-        private boolean isAlmostEqual(Color c1, Color c2) {\n-            return Math.abs(c1.getRed() - c2.getRed()) < COLOR_TOLERANCE &&\n-                    Math.abs(c1.getGreen() - c2.getGreen()) < COLOR_TOLERANCE &&\n-                    Math.abs(c1.getBlue() - c2.getBlue()) < COLOR_TOLERANCE;\n+        private void waitFrameHidden() throws Exception {\n+            latchClosedFrame.await();\n+        }\n+\n+        void hideFrameAndWait() throws Exception {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        frame.setVisible(false);\n+                        frame.dispose();\n+                        frame = null;\n+                    }\n+                });\n+                waitFrameHidden();\n+            }\n+        }\n@@ -737,0 +995,4 @@\n+        void prepareImageProvider(final boolean useVolatile) {\n+            if (this.imageProvider == null) {\n+                this.imageProvider = new ImageProvider(useVolatile);\n+            }\n@@ -740,23 +1002,1 @@\n-    private static final Particles balls = new Particles(N, R, BW, BH, WIDTH, HEIGHT);\n-    private static final ParticleRenderer flatRenderer = new FlatParticleRenderer(N, R);\n-    private static final ParticleRenderer clipFlatRenderer = new ClipFlatParticleRenderer(N, R);\n-    private static final ParticleRenderer flatOvalRotRenderer = new FlatOvalRotParticleRenderer(N, R);\n-    private static final ParticleRenderer flatBoxRenderer = new FlatBoxParticleRenderer(N, R);\n-    private static final ParticleRenderer clipFlatBoxParticleRenderer = new ClipFlatBoxParticleRenderer(N, R);\n-    private static final ParticleRenderer flatBoxRotRenderer = new FlatBoxRotParticleRenderer(N, R);\n-    private static final ParticleRenderer linGradOvalRotRenderer = new LinGradOvalRotParticleRenderer(N, R);\n-    private static final ParticleRenderer linGrad3OvalRotRenderer = new LinGrad3OvalRotParticleRenderer(N, R);\n-    private static final ParticleRenderer radGrad3OvalRotRenderer = new RadGrad3OvalRotParticleRenderer(N, R);\n-    private static final ParticleRenderer wiredRenderer = new WiredParticleRenderer(N, R);\n-    private static final ParticleRenderer wiredBoxRenderer = new WiredBoxParticleRenderer(N, R);\n-    private static final ParticleRenderer segRenderer = new SegParticleRenderer(N, R);\n-    private static final ParticleRenderer flatQuadRenderer = new FlatQuadParticleRenderer(N, R);\n-    private static final ParticleRenderer wiredQuadRenderer = new WiredQuadParticleRenderer(N, R);\n-    private static final ParticleRenderer imgRenderer = new ImgParticleRenderer(N, R);\n-    private static final ParticleRenderer textRenderer = new TextParticleRenderer(N, R);\n-    private static final ParticleRenderer largeTextRenderer = new LargeTextParticleRenderer(N, R);\n-    private static final ParticleRenderer whiteTextRenderer = new WhiteTextParticleRenderer(R);\n-    private static final ParticleRenderer argbSwBlitImageRenderer = new SwBlitImageParticleRenderer(N, R, BufferedImage.TYPE_INT_ARGB);\n-    private static final ParticleRenderer bgrSwBlitImageRenderer = new SwBlitImageParticleRenderer(N, R, BufferedImage.TYPE_INT_BGR);\n-    private static final ParticleRenderer argbSurfaceBlitImageRenderer = new SurfaceBlitImageParticleRenderer(N, R, BufferedImage.TYPE_INT_ARGB);\n-    private static final ParticleRenderer bgrSurfaceBlitImageRenderer = new SurfaceBlitImageParticleRenderer(N, R, BufferedImage.TYPE_INT_BGR);\n+    static abstract class PerfMeterExecutor {\n@@ -764,3 +1004,3 @@\n-    private static final Configurable AA = (Graphics2D g2d) ->\n-        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n-            RenderingHints.VALUE_ANTIALIAS_ON);\n+        protected final static int SCORE_MAIN = 0;\n+        protected final static int SCORE_ERROR = 1;\n+        protected final static int SCORE_OTHER = 2;\n@@ -768,3 +1008,7 @@\n-    private static final Configurable TextLCD = (Graphics2D g2d) ->\n-        g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n-                RenderingHints.VALUE_TEXT_ANTIALIAS_LCD_HRGB);\n+        protected final static int PCT_00 = 0;\n+        protected final static int PCT_10 = 1;\n+        protected final static int PCT_25 = 2;\n+        protected final static int PCT_50 = 3;\n+        protected final static int PCT_75 = 4;\n+        protected final static int PCT_90 = 5;\n+        protected final static int PCT_100 = 6;\n@@ -772,3 +1016,5 @@\n-    private static final Configurable TextAA = (Graphics2D g2d) ->\n-        g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n-                RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\n+        private final static IntBinaryOperator INC_MOD_FUNC = new IntBinaryOperator() {\n+            public int applyAsInt(int x, int y) {\n+                return (x + 1) % y;\n+            }\n+        };\n@@ -776,2 +1022,1 @@\n-    private static final Configurable XORMode = (Graphics2D g2d) ->\n-        {g2d.setXORMode(Color.WHITE);};\n+        private static final AtomicInteger headerMark = new AtomicInteger(1);\n@@ -779,4 +1024,3 @@\n-    private static final Configurable XORModeLCDText = (Graphics2D g2d) ->\n-        {g2d.setXORMode(Color.WHITE);\n-         g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n-         RenderingHints.VALUE_TEXT_ANTIALIAS_LCD_HRGB);};\n+        \/* members *\/\n+        protected final FrameHandler fh;\n+        protected final boolean skipWait;\n@@ -784,0 +1028,4 @@\n+        protected final AtomicInteger paintIdx = new AtomicInteger(0);\n+        protected final AtomicInteger markerIdx = new AtomicInteger(0);\n+        protected final AtomicLong markerStartTime = new AtomicLong(0);\n+        protected final AtomicLong markerPaintTime = new AtomicLong(0);\n@@ -785,3 +1033,2 @@\n-    public void testFlatOval() throws Exception {\n-        (new PerfMeter(\"FlatOval\")).exec(createPR(flatRenderer)).report();\n-    }\n+        protected String name = null;\n+        protected int skippedFrames = 0;\n@@ -789,3 +1036,5 @@\n-    public void testFlatOvalAA() throws Exception {\n-        (new PerfMeter(\"FlatOvalAA\")).exec(createPR(flatRenderer).configure(AA)).report();\n-    }\n+        protected int frames = 0;\n+        \/\/ test timestamp data:\n+        protected long[] testTimestamp = new long[MAX_SAMPLE_COUNT];\n+        \/\/ test duration data (ns):\n+        protected long[] testTime = new long[MAX_SAMPLE_COUNT];\n@@ -793,3 +1042,2 @@\n-    public void testClipFlatOval() throws Exception {\n-        (new PerfMeter(\"ClipFlatOval\")).exec(createPR(clipFlatRenderer)).report();\n-    }\n+        protected final double[] scores = new double[SCORE_OTHER + 1];\n+        protected final double[] results = new double[PCT_100 + 1];\n@@ -797,3 +1045,4 @@\n-    public void testClipFlatOvalAA() throws Exception {\n-        (new PerfMeter(\"ClipFlatOvalAA\")).exec(createPR(clipFlatRenderer).configure(AA)).report();\n-    }\n+        protected PerfMeterExecutor(final boolean skipWait, final FrameHandler fh) {\n+            this.skipWait = skipWait;\n+            this.fh = fh;\n+        }\n@@ -801,3 +1050,2 @@\n-    public void testFlatBox() throws Exception {\n-        (new PerfMeter(\"FlatBox\")).exec(createPR(flatBoxRenderer)).report();\n-    }\n+        protected void beforeExec() {\n+        }\n@@ -805,3 +1053,2 @@\n-    public void testFlatBoxAA() throws Exception {\n-        (new PerfMeter(\"FlatBoxAA\")).exec(createPR(flatBoxRenderer).configure(AA)).report();\n-    }\n+        protected void afterExec() {\n+        }\n@@ -809,3 +1056,6 @@\n-    public void testClipFlatBox() throws Exception {\n-        (new PerfMeter(\"ClipFlatBox\")).exec(createPR(clipFlatBoxParticleRenderer)).report();\n-    }\n+        protected void reset() {\n+            paintIdx.set(0);\n+            markerIdx.set(0);\n+            markerStartTime.set(0);\n+            markerPaintTime.set(0);\n+        }\n@@ -813,3 +1063,3 @@\n-    public void testClipFlatBoxAA() throws Exception {\n-        (new PerfMeter(\"ClipFlatBoxAA\")).exec(createPR(clipFlatBoxParticleRenderer).configure(AA)).report();\n-    }\n+        protected void updateMarkerIdx() {\n+            markerIdx.accumulateAndGet(MARKER.length, INC_MOD_FUNC);\n+        }\n@@ -817,3 +1067,3 @@\n-    public void testImage() throws Exception {\n-        (new PerfMeter(\"Image\")).exec(createPR(imgRenderer)).report();\n-    }\n+        protected final void exec(final String testName, final Renderable renderable) throws Exception {\n+            if (TRACE) System.out.print(\"\\n!\");\n+            this.name = testName + (isMultiThreads() ? (\"-\" + fh.threadId) : \"\");\n@@ -821,3 +1071,6 @@\n-    public void testImageAA() throws Exception {\n-        (new PerfMeter(\"ImageAA\")).exec(createPR(imgRenderer).configure(AA)).report();\n-    }\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                @Override\n+                public void run() {\n+                    fh.prepareFrameEDT(name);\n+                    \/\/ call beforeExec() after frame is created:\n+                    beforeExec();\n@@ -825,3 +1078,12 @@\n-    public void testRotatedBox() throws Exception {\n-        (new PerfMeter(\"RotatedBox\")).exec(createPR(flatBoxRotRenderer)).report();\n-    }\n+                    final JPanel panel = new JPanel() {\n+                        @Override\n+                        protected void paintComponent(Graphics g) {\n+                            if (TRACE) System.out.print(\"P\");\n+                            paintPanel(renderable, g);\n+                            if (TRACE) System.out.print(\"Q\");\n+                        }\n+                    };\n+                    fh.showFrameEDT(panel);\n+                    if (TRACE) System.out.print(\">>\");\n+                }\n+            });\n@@ -829,3 +1091,2 @@\n-    public void testRotatedBoxAA() throws Exception {\n-        (new PerfMeter(\"RotatedBoxAA\")).exec(createPR(flatBoxRotRenderer).configure(AA)).report();\n-    }\n+            \/\/ Wait frame to be shown:\n+            fh.waitFrameShown();\n@@ -833,3 +1094,1 @@\n-    public void testRotatedOval() throws Exception {\n-        (new PerfMeter(\"RotatedOval\")).exec(createPR(flatOvalRotRenderer)).report();\n-    }\n+            if (TRACE) System.out.print(\":\");\n@@ -837,3 +1096,2 @@\n-    public void testRotatedOvalAA() throws Exception {\n-        (new PerfMeter(\"RotatedOvalAA\")).exec(createPR(flatOvalRotRenderer).configure(AA)).report();\n-    }\n+            \/\/ Reset before warmup:\n+            reset();\n@@ -841,3 +1099,17 @@\n-    public void testLinGrad3RotatedOval() throws Exception {\n-        (new PerfMeter(\"LinGrad3RotatedOval\")).exec(createPR(linGrad3OvalRotRenderer)).report();\n-    }\n+            if (WARMUP_COUNT > 0) {\n+                \/\/ Warmup to prepare frame synchronization:\n+                for (int i = 0; i < WARMUP_COUNT; i++) {\n+                    updateMarkerIdx();\n+                    renderable.update();\n+                    fh.repaintFrame();\n+                    sleep(10);\n+                    while (markerStartTime.get() == 0) {\n+                        if (TRACE) System.out.print(\"-\");\n+                        sleep(1);\n+                    }\n+                    markerStartTime.set(0);\n+                }\n+                \/\/ Reset before measurements:\n+                reset();\n+            }\n+            if (TRACE) System.out.print(\":>>\");\n@@ -845,3 +1117,3 @@\n-    public void testLinGrad3RotatedOvalAA() throws Exception {\n-        (new PerfMeter(\"LinGrad3RotatedOvalAA\")).exec(createPR(linGrad3OvalRotRenderer).configure(AA)).report();\n-    }\n+            \/\/ signal thread is ready for test\n+            readyCount.countDown();\n+            if (TRACE_SYNC) traceSync(name + \" ready => waiting start signal...\");\n@@ -849,3 +1121,4 @@\n-    public void testRadGrad3RotatedOval() throws Exception {\n-        (new PerfMeter(\"RadGrad3RotatedOval\")).exec(createPR(radGrad3OvalRotRenderer)).report();\n-    }\n+            \/\/ wait start signal:\n+            triggerStart.await();\n+            \/\/ Run Benchmark (all threads):\n+            if (TRACE_SYNC) traceSync(name + \" benchmark started\");\n@@ -853,3 +1126,5 @@\n-    public void testRadGrad3RotatedOvalAA() throws Exception {\n-        (new PerfMeter(\"RadGrad3RotatedOvalAA\")).exec(createPR(radGrad3OvalRotRenderer).configure(AA)).report();\n-    }\n+            int cycles = 0;\n+            frames = 0;\n+            long paintStartTime = 0L;\n+            long paintElapsedTime = 0L;\n+            long lastFrameTime = 0L;\n@@ -857,3 +1132,3 @@\n-    public void testLinGradRotatedOval() throws Exception {\n-        (new PerfMeter(\"LinGradRotatedOval\")).exec(createPR(linGradOvalRotRenderer)).report();\n-    }\n+            final long startTime = System.nanoTime();\n+            final long minTime = startTime + MIN_MEASURE_TIME_NS;\n+            final long endTime = startTime + MAX_MEASURE_TIME_NS;\n@@ -861,2 +1136,625 @@\n-    public void testLinGradRotatedOvalAA() throws Exception {\n-        (new PerfMeter(\"LinGradRotatedOvalAA\")).exec(createPR(linGradOvalRotRenderer).configure(AA)).report();\n+            \/\/ Start 1st measurement:\n+            fh.repaintFrame();\n+\n+            for (; ; ) {\n+                long t;\n+                if ((t = markerStartTime.getAndSet(0L)) > 0L) {\n+                    paintStartTime = t;\n+                    if (TRACE) System.out.print(\"|\");\n+                }\n+\n+                boolean wait = true;\n+\n+                if (paintStartTime > 0L) {\n+                    \/\/ get optional elapsed time:\n+                    paintElapsedTime = markerPaintTime.get();\n+\n+                    if (TRACE) System.out.print(\".\");\n+                    wait = !skipWait;\n+                    final Color c = getMarkerColor();\n+\n+                    if (isAlmostEqual(c, MARKER[markerIdx.get()])) {\n+                        final long durationNs = getElapsedTime((paintElapsedTime != 0L) ? paintElapsedTime : paintStartTime);\n+                        if ((durationNs > 0L) && (frames < MAX_SAMPLE_COUNT)) {\n+                            testTimestamp[frames] = paintStartTime - startTime;\n+                            testTime[frames] = durationNs;\n+                        }\n+                        if (REPORT_OVERALL_FPS) {\n+                            lastFrameTime = System.nanoTime();\n+                        }\n+                        if (TRACE) System.out.print(\"R\");\n+                        frames++;\n+                        paintStartTime = 0L;\n+                        paintElapsedTime = 0L;\n+                        cycles = 0;\n+                        updateMarkerIdx();\n+                        renderable.update();\n+                        fh.repaintFrame();\n+                    } else if (cycles >= MAX_FRAME_CYCLES) {\n+                        if (TRACE) System.out.print(\"M\");\n+                        skippedFrames++;\n+                        paintStartTime = 0L;\n+                        paintElapsedTime = 0L;\n+                        cycles = 0;\n+                        updateMarkerIdx();\n+                        fh.repaintFrame();\n+                    } else {\n+                        if (TRACE) System.out.print(\"-\");\n+                    }\n+                }\n+                final long currentTime = System.nanoTime();\n+                if ((frames >= MIN_COUNT) && (currentTime >= endTime)) {\n+                    break;\n+                }\n+                if ((frames >= COUNT) && (currentTime >= minTime)) {\n+                    break;\n+                }\n+                if (wait) {\n+                    sleep(CYCLE_DELAY);\n+                }\n+                cycles++;\n+            } \/\/ end measurements\n+\n+            \/\/ signal test completed:\n+            completedCount.countDown();\n+            if (TRACE_SYNC) traceSync(name + \" completed => waiting stop signal...\");\n+\n+            \/\/ wait stop signal:\n+            triggerStop.await();\n+            \/\/ Stop Benchmark (all threads):\n+            if (TRACE_SYNC) traceSync(name + \" stopped\");\n+\n+            if (DELAY_TEST) {\n+                sleep(1000);\n+            }\n+            fh.resetFrame();\n+\n+            \/\/ Process results:\n+            if (REPORT_OVERALL_FPS && (lastFrameTime != 0)) {\n+                final double elapsedTime = (lastFrameTime - startTime);\n+                final double elapsedFPS = 1000000000.0 * frames \/ elapsedTime;\n+\n+                System.err.println(frames + \" in \" + (elapsedTime \/ 1000000) + \" ms: ~ \" + elapsedFPS + \" FPS\");\n+            }\n+\n+            processTimes();\n+\n+            if (TRACE) System.out.print(\"<<\\n\");\n+            afterExec();\n+\n+            \/\/ Log header once:\n+            if (headerMark.getAndDecrement() == 1) {\n+                System.err.println(getHeader());\n+            }\n+\n+            \/\/ Log report:\n+            System.err.println(getResults());\n+\n+            \/\/ signal test done:\n+            doneCount.countDown();\n+            if (TRACE_SYNC) traceSync(name + \" done => waiting exit signal...\");\n+\n+            \/\/ wait exit signal:\n+            triggerExit.await();\n+            \/\/ Stop Benchmark (all threads):\n+            if (TRACE_SYNC) traceSync(name + \" exited\");\n+        }\n+\n+        protected abstract void paintPanel(final Renderable renderable, final Graphics g);\n+\n+        protected abstract long getElapsedTime(long paintTime);\n+\n+        protected abstract Color getMarkerColor() throws Exception;\n+\n+        protected boolean isAlmostEqual(Color c1, Color c2) {\n+            return (Math.abs(c1.getRed() - c2.getRed()) < COLOR_TOLERANCE) &&\n+                    (Math.abs(c1.getGreen() - c2.getGreen()) < COLOR_TOLERANCE) &&\n+                    (Math.abs(c1.getBlue() - c2.getBlue()) < COLOR_TOLERANCE);\n+        }\n+\n+        protected void processTimes() {\n+            if (frames != 0) {\n+                frames = Math.min(frames, MAX_SAMPLE_COUNT);\n+\n+                if (DUMP_SAMPLES) {\n+                    \/\/ Dump all results:\n+                    final File file = new File(\".\/rp-\" + replaceNonFileNameChars(name) + \"-samples.csv\");\n+                    System.out.println(\"Writing samples to : \" + file.getAbsolutePath());\n+\n+                    try (final PrintWriter w = new PrintWriter(file, Charset.forName(\"UTF-8\"))) {\n+                        w.write(\"# \");\n+                        w.write(VERSION);\n+                        w.write(\" - \");\n+                        w.write(\"Test: \");\n+                        w.write(name);\n+                        w.write('\\n');\n+\n+                        for (int i = 0; i < frames; i++) {\n+                            w.write(Double.toString(millis(testTimestamp[i])));\n+                            w.write(',');\n+                            w.write(Double.toString(millis(testTime[i])));\n+                            w.write('\\n');\n+                        }\n+                    } catch (IOException ioe) {\n+                        System.err.println(\"IO exception:\");\n+                        ioe.printStackTrace();\n+                    }\n+                }\n+                \/\/ Ignore first 10% (warmup at the beginning):\n+                final int first = (int) Math.floor(frames * 0.10);\n+                final int last = frames - 1;\n+\n+                \/\/ free testTimestamp to avoid any future usage:\n+                testTimestamp = null;\n+\n+                \/\/ note: testTime array is modified below:\n+                \/\/ Sort values to get percentiles:\n+                Arrays.sort(testTime, first, frames);\n+\n+                final long[] pcts = getPercentiles(testTime, first, last);\n+\n+                final long median = pcts[PCT_50];\n+\n+                if (USE_FPS) {\n+                    scores[SCORE_MAIN] = fps(median);\n+\n+                    results[PCT_100] = fps(pcts[PCT_00]);\n+                    results[PCT_90] = fps(pcts[PCT_10]);\n+                    results[PCT_75] = fps(pcts[PCT_25]);\n+                    results[PCT_50] = fps(pcts[PCT_50]);\n+                    results[PCT_25] = fps(pcts[PCT_75]);\n+                    results[PCT_10] = fps(pcts[PCT_90]);\n+                    results[PCT_00] = fps(pcts[PCT_100]);\n+\n+                    \/\/ STDDEV = IQR \/ 1.35 = (Q3 - Q1) * 20 \/ 27\n+                    scores[SCORE_ERROR] = (results[PCT_75] - results[PCT_25]) * 20L \/ 27L;\n+                    scores[SCORE_OTHER] = millis(median);\n+                } else {\n+                    scores[SCORE_MAIN] = millis(median);\n+\n+                    results[PCT_00] = millis(pcts[PCT_00]);\n+                    results[PCT_10] = millis(pcts[PCT_10]);\n+                    results[PCT_25] = millis(pcts[PCT_25]);\n+                    results[PCT_50] = millis(pcts[PCT_50]);\n+                    results[PCT_75] = millis(pcts[PCT_75]);\n+                    results[PCT_90] = millis(pcts[PCT_90]);\n+                    results[PCT_100] = millis(pcts[PCT_100]);\n+\n+                    \/\/ STDDEV = IQR \/ 1.35 = (Q3 - Q1) * 20 \/ 27 (normal distribution ?)\n+                    scores[SCORE_ERROR] = (results[PCT_75] - results[PCT_25]) * 20L \/ 27L;\n+                    scores[SCORE_OTHER] = fps(median);\n+\n+                    \/\/ System.out.println(\"stddev(IQR) = \" + scores[SCORE_ERROR]);\n+\n+                    \/\/ MAD = Median Absolute Deviation:\n+                    for (int i = first; i <= last; i++) {\n+                        testTime[i] = Math.abs(testTime[i] - median);\n+                    }\n+                    \/\/ Sort values to get percentiles:\n+                    Arrays.sort(testTime, first, frames);\n+\n+                    \/\/ STDDEV = 1.4826 * MAD (normal distribution ?)\n+                    scores[SCORE_ERROR] = 1.4826 * millis(testTime[pctIndex(first, last, 0.50)]); \/\/ 50% (median)\n+\n+                    \/\/ System.out.println(\"stddev(MAD) = \" + scores[SCORE_ERROR]);\n+                }\n+                \/\/ free testTime to avoid any future usage:\n+                testTime = null;\n+            }\n+        }\n+\n+        protected static String getHeader() {\n+            if (VERBOSE) {\n+                return String.format(\"%-25s : %s ± %s %s [%s] (p00: ... p10: ... p25: ... p50: ... p75: ... p90: ... p100: ... %s) (... frames)\",\n+                        \"Test Name\", (USE_FPS ? \"Median(FPS)\" : \"Median(TimeMs)\"), (USE_FPS ? \"Stddev(FPS)\" : \"Stddev(TimeMs)\"), \"Unit\",\n+                        (!USE_FPS ? \"Median(FPS)\" : \"Median(TimeMs)\"), \"Unit\");\n+            }\n+            return String.format(\"%-25s : %s ± %s %s\",\n+                    \"Test Name\", (USE_FPS ? \"Median(FPS)\" : \"Median(TimeMs)\"), (USE_FPS ? \"Stddev(FPS)\" : \"Stddev(TimeMs)\"), \"Unit\");\n+\n+        }\n+\n+        protected String getResults() {\n+            if (skippedFrames > 0) {\n+                System.err.println(name + \" : \" + skippedFrames + \" frame(s) skipped\");\n+            }\n+            if (VERBOSE) {\n+                return String.format(\"%-25s : %.3f ± %.3f %s [%.3f %s] (p00: %.3f p10: %.3f p25: %.3f p50: %.3f p75: %.3f p90: %.3f p100: %.3f %s) (%d frames)\",\n+                    name, scores[SCORE_MAIN], scores[SCORE_ERROR], (USE_FPS ? \"FPS\" : \"ms\"),\n+                    scores[SCORE_OTHER], (USE_FPS ? \"ms\" : \"FPS\"),\n+                    results[PCT_00], results[PCT_10], results[PCT_25], results[PCT_50], results[PCT_75], results[PCT_90], results[PCT_100],\n+                    (USE_FPS ? \"FPS\" : \"ms\"),\n+                    frames);\n+            }\n+            return String.format(\"%-25s : %.3f ± %.3f %s\",\n+                     name, scores[SCORE_MAIN], scores[SCORE_ERROR], (USE_FPS ? \"FPS\" : \"ms\"));\n+        }\n+\n+        protected double fps(long timeNs) {\n+            return 1e9 \/ timeNs;\n+        }\n+\n+        protected double millis(long timeNs) {\n+            return 1e-6 * timeNs;\n+        }\n+\n+        protected static long[] getPercentiles(final long[] data, final int first, final int last) {\n+            final long[] pcts = new long[PCT_100 + 1];\n+            pcts[PCT_00] = data[first]; \/\/ 0% (min)\n+            pcts[PCT_10] = data[pctIndex(first, last, 0.10)]; \/\/  10%\n+            pcts[PCT_25] = data[pctIndex(first, last, 0.25)]; \/\/  25% (Q1)\n+            pcts[PCT_50] = data[pctIndex(first, last, 0.50)]; \/\/  50% (Median)\n+            pcts[PCT_75] = data[pctIndex(first, last, 0.75)]; \/\/  75% (Q3)\n+            pcts[PCT_90] = data[pctIndex(first, last, 0.90)]; \/\/  90%\n+            pcts[PCT_100] = data[pctIndex(first, last, 1.00)]; \/\/ 100% (max)\n+            return pcts;\n+        }\n+\n+        protected static int pctIndex(final int min, final int last, final double pct) {\n+            return min + (int) Math.round((last - min) * pct);\n+        }\n+    }\n+\n+    final static class PerfMeterRobot extends PerfMeterExecutor {\n+\n+        private int nRobotTimes = 0;\n+        private long[] robotTime = (fh.calibrate) ? new long[COUNT] : null;\n+\n+        private int nDelayTimes = 0;\n+        private long[] delayTime = (ROBOT_TIME_DELAY) ? null : new long[COUNT];\n+\n+        private long lastPaintTime = 0L;\n+        private int renderedMarkerIdx = -1;\n+\n+        private Robot robot = null;\n+\n+        PerfMeterRobot(final FrameHandler fh) {\n+            super(true, fh);\n+        }\n+\n+        protected void beforeExec() {\n+            try {\n+                robot = new Robot();\n+            } catch (AWTException ae) {\n+                throw new RuntimeException(ae);\n+            }\n+        }\n+\n+        protected void reset() {\n+            super.reset();\n+            nRobotTimes = 0;\n+            nDelayTimes = 0;\n+            lastPaintTime = 0L;\n+            renderedMarkerIdx = -1;\n+        }\n+\n+        protected void paintPanel(final Renderable renderable, final Graphics g) {\n+            final int idx = markerIdx.get();\n+            final long start = System.nanoTime();\n+\n+            final Graphics2D g2d = (Graphics2D) g.create();\n+            try {\n+                paintTest(renderable, g2d, MARKER[idx], false);\n+            } finally {\n+                g2d.dispose();\n+            }\n+\n+            \/\/ Update paintIdx:\n+            paintIdx.incrementAndGet();\n+\n+            \/\/ publish start time:\n+            if (idx != renderedMarkerIdx) {\n+                renderedMarkerIdx = idx;\n+                markerStartTime.set(start);\n+            }\n+        }\n+\n+        protected long getElapsedTime(final long paintTime) {\n+            final long now = System.nanoTime();\n+            long duration = (!ROBOT_TIME_DELAY) ? roundDuration(now - paintTime) : 0L;\n+            if (lastPaintTime != 0L) {\n+                final long delay = roundDuration(now - lastPaintTime);\n+                if (ROBOT_TIME_DELAY) {\n+                    duration = delay;\n+                } else if (nDelayTimes < COUNT) {\n+                    delayTime[nDelayTimes++] = delay;\n+                }\n+            }\n+            lastPaintTime = now;\n+            return duration;\n+        }\n+\n+        private static long roundDuration(final long durationNs) {\n+            return (durationNs <= 0L) ? 0L : (\n+                    (ROBOT_TIME_ROUND) ?\n+                            FRAME_PREC_IN_NANOS * (long) Math.rint(((double) durationNs) \/ FRAME_PREC_IN_NANOS) : durationNs\n+            );\n+        }\n+\n+        protected Color getMarkerColor() {\n+            final Point frameOffset = fh.frame.getLocationOnScreen();\n+            final Insets insets = fh.frame.getInsets();\n+            final int px = frameOffset.x + insets.left + BW \/ 2;\n+            final int py = frameOffset.y + insets.top + BH \/ 2;\n+\n+            final long beforeRobot = (fh.calibrate) ? System.nanoTime() : 0L;\n+\n+            final Color c = robot.getPixelColor(px, py);\n+\n+            if ((fh.calibrate) && (nRobotTimes < COUNT)) {\n+                robotTime[nRobotTimes++] = System.nanoTime() - beforeRobot;\n+            }\n+            return c;\n+        }\n+\n+        protected String getResults() {\n+            if (fh.calibrate && (nRobotTimes != 0)) {\n+                fh.calibrate = false; \/\/ only first time\n+\n+                Arrays.sort(robotTime);\n+\n+                final long[] pcts = getPercentiles(robotTime, 0, nRobotTimes - 1);\n+\n+                \/\/ free testTime to avoid any future usage:\n+                testTime = null;\n+\n+                System.err.printf(\"%-25s : %.3f ms (p00: %.3f p10: %.3f p25: %.3f p50: %.3f p75: %.3f p90: %.3f p100: %.3f ms) (%d times)%n\",\n+                        \"Robot\" + (isMultiThreads() ? (\"-\" + fh.threadId) : \"\"), millis(pcts[PCT_50]),\n+                        millis(pcts[PCT_00]), millis(pcts[PCT_10]), millis(pcts[PCT_25]), millis(pcts[PCT_50]),\n+                        millis(pcts[PCT_75]), millis(pcts[PCT_90]), millis(pcts[PCT_100]), nRobotTimes);\n+            }\n+            if (nDelayTimes != 0) {\n+                Arrays.sort(delayTime);\n+\n+                final long[] pcts = getPercentiles(robotTime, 0, nDelayTimes - 1);\n+\n+                \/\/ free delayTime to avoid any future usage:\n+                delayTime = null;\n+\n+                System.err.printf(\"%-25s : %.3f ms [%.3f FPS] (p00: %.3f p10: %.3f p25: %.3f p50: %.3f p75: %.3f p90: %.3f p100: %.3f ms) (%d times)%n\",\n+                        \"DelayTime-\" + name + (isMultiThreads() ? (\"-\" + fh.threadId) : \"\"), millis(pcts[PCT_50]), fps(pcts[PCT_50]),\n+                        millis(pcts[PCT_00]), millis(pcts[PCT_10]), millis(pcts[PCT_25]), millis(pcts[PCT_50]),\n+                        millis(pcts[PCT_75]), millis(pcts[PCT_90]), millis(pcts[PCT_100]), nDelayTimes);\n+            }\n+            return super.getResults();\n+        }\n+    }\n+\n+    final static class PerfMeterImageProvider extends PerfMeterExecutor {\n+        private final ImageProvider imageProvider;\n+\n+        PerfMeterImageProvider(final FrameHandler fh) {\n+            super(false, fh);\n+            this.imageProvider = fh.imageProvider;\n+        }\n+\n+        protected void beforeExec() {\n+            imageProvider.create(fh.frame.getGraphicsConfiguration(), IMAGE_W, IMAGE_H);\n+        }\n+\n+        protected void afterExec() {\n+            imageProvider.reset();\n+        }\n+\n+        protected void paintPanel(final Renderable renderable, final Graphics g) {\n+            \/\/ suppose image provider is ready yet\n+            final int idx = markerIdx.get();\n+            long start = System.nanoTime();\n+\n+            \/\/ Get Graphics from image provider:\n+            final Graphics2D g2d = imageProvider.createGraphics();\n+            try {\n+                paintTest(renderable, g2d, MARKER[idx], true);\n+            } finally {\n+                g2d.dispose();\n+            }\n+\n+            final long now = System.nanoTime();\n+\n+            \/\/ Update paintIdx:\n+            paintIdx.incrementAndGet();\n+\n+            \/\/ publish start time:\n+            markerStartTime.set(start);\n+            \/\/ publish elapsed time:\n+            markerPaintTime.set(now - start);\n+\n+            \/\/ Draw image on screen:\n+            g.drawImage(imageProvider.getImage(), 0, 0, null);\n+        }\n+\n+        protected long getElapsedTime(long paintTime) {\n+            return paintTime;\n+        }\n+\n+        protected Color getMarkerColor() {\n+            final int px = BW \/ 2;\n+            final int py = BH \/ 2;\n+\n+            return new Color(imageProvider.getSnapshot().getRGB(px, py));\n+        }\n+    }\n+\n+    private final static class ImageProvider {\n+        private final static int TRANSPARENCY = Transparency.TRANSLUCENT;\n+\n+        private final boolean useVolatile;\n+        private Image image = null;\n+\n+        private ImageProvider(boolean useVolatile) {\n+            this.useVolatile = useVolatile;\n+        }\n+\n+        void create(GraphicsConfiguration gc, int width, int height) {\n+            this.image = (useVolatile) ? gc.createCompatibleVolatileImage(width, height, TRANSPARENCY)\n+                    : gc.createCompatibleImage(width, height, TRANSPARENCY);\n+        }\n+\n+        public void reset() {\n+            image = null;\n+        }\n+\n+        public Image getImage() {\n+            return image;\n+        }\n+\n+        public Graphics2D createGraphics() {\n+            return (useVolatile) ? ((VolatileImage) image).createGraphics()\n+                    : ((BufferedImage) image).createGraphics();\n+        }\n+\n+        public BufferedImage getSnapshot() {\n+            return (useVolatile) ? ((VolatileImage) image).getSnapshot()\n+                    : (BufferedImage) image;\n+        }\n+    }\n+\n+    private final FrameHandler fh;\n+\n+    private final Particles balls = new Particles(N, R, BW, BH, WIDTH, HEIGHT);\n+\n+    private final ParticleRenderer calibRenderer = new CalibrationParticleRenderer();\n+    private final ParticleRenderer flatRenderer = new FlatParticleRenderer(N, R);\n+    private final ParticleRenderer clipFlatRenderer = new ClipFlatParticleRenderer(N, R);\n+    private final ParticleRenderer flatOvalRotRenderer = new FlatOvalRotParticleRenderer(N, R);\n+    private final ParticleRenderer flatBoxRenderer = new FlatBoxParticleRenderer(N, R);\n+    private final ParticleRenderer clipFlatBoxParticleRenderer = new ClipFlatBoxParticleRenderer(N, R);\n+    private final ParticleRenderer flatBoxRotRenderer = new FlatBoxRotParticleRenderer(N, R);\n+    private final ParticleRenderer linGradOvalRotRenderer = new LinGradOvalRotParticleRenderer(N, R);\n+    private final ParticleRenderer linGrad3OvalRotRenderer = new LinGrad3OvalRotParticleRenderer(N, R);\n+    private final ParticleRenderer radGrad3OvalRotRenderer = new RadGrad3OvalRotParticleRenderer(N, R);\n+    private final ParticleRenderer wiredRenderer = new WiredParticleRenderer(N, R);\n+    private final ParticleRenderer wiredBoxRenderer = new WiredBoxParticleRenderer(N, R);\n+    private final ParticleRenderer segRenderer = new SegParticleRenderer(N, R);\n+    private final ParticleRenderer flatQuadRenderer = new FlatQuadParticleRenderer(N, R);\n+    private final ParticleRenderer wiredQuadRenderer = new WiredQuadParticleRenderer(N, R);\n+    private final ParticleRenderer imgRenderer = new ImgParticleRenderer(N, R);\n+    private final ParticleRenderer volImgRenderer = new VolImgParticleRenderer(N, R);\n+    private final ParticleRenderer textRenderer = new TextParticleRenderer(N, R);\n+    private final ParticleRenderer largeTextRenderer = new LargeTextParticleRenderer(N, R);\n+    private final ParticleRenderer whiteTextRenderer = new WhiteTextParticleRenderer(R);\n+    private final ParticleRenderer argbSwBlitImageRenderer = new SwBlitImageParticleRenderer(N, R, BufferedImage.TYPE_INT_ARGB);\n+    private final ParticleRenderer bgrSwBlitImageRenderer = new SwBlitImageParticleRenderer(N, R, BufferedImage.TYPE_INT_BGR);\n+    private final ParticleRenderer argbSurfaceBlitImageRenderer = new SurfaceBlitImageParticleRenderer(N, R, BufferedImage.TYPE_INT_ARGB);\n+    private final ParticleRenderer bgrSurfaceBlitImageRenderer = new SurfaceBlitImageParticleRenderer(N, R, BufferedImage.TYPE_INT_BGR);\n+\n+    private final ParticleRenderer textWiredQuadBatchedRenderer = new BatchedParticleRenderer(textRenderer, wiredQuadRenderer);\n+    private final ParticleRenderer textWiredQuadMixedRenderer = new MixedParticleRenderer(textRenderer, wiredQuadRenderer);\n+\n+    private final ParticleRenderer volImgFlatBoxBatchedRenderer = new BatchedParticleRenderer(volImgRenderer, flatBoxRenderer);\n+    private final ParticleRenderer volImgFlatBoxMixedRenderer = new MixedParticleRenderer(volImgRenderer, flatBoxRenderer);\n+\n+    private final ParticleRenderer volImgWiredQuadBatchedRenderer = new BatchedParticleRenderer(volImgRenderer, wiredQuadRenderer);\n+    private final ParticleRenderer volImgWiredQuadMixedRenderer = new MixedParticleRenderer(volImgRenderer, wiredQuadRenderer);\n+\n+    private final ParticleRenderer volImgTextBatchedRenderer = new BatchedParticleRenderer(volImgRenderer, textRenderer);\n+    private final ParticleRenderer volImgTextMixedRenderer = new MixedParticleRenderer(volImgRenderer, textRenderer);\n+\n+    private final static Configurable AA = new ConfigurableAA();\n+    private final static Configurable TextAA = new ConfigurableTextAA();\n+    private final static Configurable TextLCD = new ConfigurableTextLCD();\n+    private final static Configurable XORMode = new ConfigurableXORMode();\n+    private final static Configurable XORModeLCDText = new ConfigurableXORModeTextLCD();\n+\n+    RenderPerfTest(final GraphicsConfiguration gc) {\n+        fh = new FrameHandler(gc);\n+    }\n+\n+    ParticleRenderable createPR(final ParticleRenderer renderer) {\n+        return new ParticleRenderable(balls, renderer);\n+    }\n+\n+    PerfMeter createPerfMeter(final String name) {\n+        return new PerfMeter(fh, name);\n+    }\n+\n+    public void testCalibration() throws Exception {\n+        createPerfMeter(testName).exec(createPR(calibRenderer));\n+    }\n+\n+    public void testFlatOval() throws Exception {\n+        createPerfMeter(testName).exec(createPR(flatRenderer));\n+    }\n+\n+    public void testFlatOvalAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(flatRenderer).configure(AA));\n+    }\n+\n+    public void testClipFlatOval() throws Exception {\n+        createPerfMeter(testName).exec(createPR(clipFlatRenderer));\n+    }\n+\n+    public void testClipFlatOvalAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(clipFlatRenderer).configure(AA));\n+    }\n+\n+    public void testFlatBox() throws Exception {\n+        createPerfMeter(testName).exec(createPR(flatBoxRenderer));\n+    }\n+\n+    public void testFlatBoxAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(flatBoxRenderer).configure(AA));\n+    }\n+\n+    public void testClipFlatBox() throws Exception {\n+        createPerfMeter(testName).exec(createPR(clipFlatBoxParticleRenderer));\n+    }\n+\n+    public void testClipFlatBoxAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(clipFlatBoxParticleRenderer).configure(AA));\n+    }\n+\n+    public void testImage() throws Exception {\n+        createPerfMeter(testName).exec(createPR(imgRenderer));\n+    }\n+\n+    public void testImageAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(imgRenderer).configure(AA));\n+    }\n+\n+    public void testVolImage() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgRenderer));\n+    }\n+\n+    public void testVolImageAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgRenderer).configure(AA));\n+    }\n+\n+    public void testRotatedBox() throws Exception {\n+        createPerfMeter(testName).exec(createPR(flatBoxRotRenderer));\n+    }\n+\n+    public void testRotatedBoxAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(flatBoxRotRenderer).configure(AA));\n+    }\n+\n+    public void testRotatedOval() throws Exception {\n+        createPerfMeter(testName).exec(createPR(flatOvalRotRenderer));\n+    }\n+\n+    public void testRotatedOvalAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(flatOvalRotRenderer).configure(AA));\n+    }\n+\n+    public void testLinGrad3RotatedOval() throws Exception {\n+        createPerfMeter(testName).exec(createPR(linGrad3OvalRotRenderer));\n+    }\n+\n+    public void testLinGrad3RotatedOvalAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(linGrad3OvalRotRenderer).configure(AA));\n+    }\n+\n+    public void testRadGrad3RotatedOval() throws Exception {\n+        createPerfMeter(testName).exec(createPR(radGrad3OvalRotRenderer));\n+    }\n+\n+    public void testRadGrad3RotatedOvalAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(radGrad3OvalRotRenderer).configure(AA));\n+    }\n+\n+    public void testLinGradRotatedOval() throws Exception {\n+        createPerfMeter(testName).exec(createPR(linGradOvalRotRenderer));\n+    }\n+\n+    public void testLinGradRotatedOvalAA() throws Exception {\n+        createPerfMeter(testName).exec(createPR(linGradOvalRotRenderer).configure(AA));\n@@ -866,1 +1764,1 @@\n-        (new PerfMeter(\"WiredBubbles\")).exec(createPR(wiredRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(wiredRenderer));\n@@ -870,1 +1768,1 @@\n-        (new PerfMeter(\"WiredBubblesAA\")).exec(createPR(wiredRenderer).configure(AA)).report();\n+        createPerfMeter(testName).exec(createPR(wiredRenderer).configure(AA));\n@@ -874,1 +1772,1 @@\n-        (new PerfMeter(\"WiredBox\")).exec(createPR(wiredBoxRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(wiredBoxRenderer));\n@@ -878,1 +1776,1 @@\n-        (new PerfMeter(\"WiredBoxAA\")).exec(createPR(wiredBoxRenderer).configure(AA)).report();\n+        createPerfMeter(testName).exec(createPR(wiredBoxRenderer).configure(AA));\n@@ -882,1 +1780,1 @@\n-        (new PerfMeter(\"Lines\")).exec(createPR(segRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(segRenderer));\n@@ -886,1 +1784,1 @@\n-        (new PerfMeter(\"LinesAA\")).exec(createPR(segRenderer).configure(AA)).report();\n+        createPerfMeter(testName).exec(createPR(segRenderer).configure(AA));\n@@ -890,1 +1788,1 @@\n-        (new PerfMeter(\"FlatQuad\")).exec(createPR(flatQuadRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(flatQuadRenderer));\n@@ -894,1 +1792,1 @@\n-        (new PerfMeter(\"FlatQuadAA\")).exec(createPR(flatQuadRenderer).configure(AA)).report();\n+        createPerfMeter(testName).exec(createPR(flatQuadRenderer).configure(AA));\n@@ -898,1 +1796,1 @@\n-        (new PerfMeter(\"WiredQuad\")).exec(createPR(wiredQuadRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(wiredQuadRenderer));\n@@ -902,1 +1800,1 @@\n-        (new PerfMeter(\"WiredQuadAA\")).exec(createPR(wiredQuadRenderer).configure(AA)).report();\n+        createPerfMeter(testName).exec(createPR(wiredQuadRenderer).configure(AA));\n@@ -906,1 +1804,1 @@\n-        (new PerfMeter(\"TextNoAA\")).exec(createPR(textRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(textRenderer));\n@@ -910,1 +1808,1 @@\n-        (new PerfMeter(\"TextLCD\")).exec(createPR(textRenderer).configure(TextLCD)).report();\n+        createPerfMeter(testName).exec(createPR(textRenderer).configure(TextLCD));\n@@ -914,1 +1812,1 @@\n-        (new PerfMeter(\"TextGray\")).exec(createPR(textRenderer).configure(TextAA)).report();\n+        createPerfMeter(testName).exec(createPR(textRenderer).configure(TextAA));\n@@ -918,1 +1816,1 @@\n-        (new PerfMeter(\"LargeTextNoAA\")).exec(createPR(largeTextRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(largeTextRenderer));\n@@ -922,1 +1820,1 @@\n-        (new PerfMeter(\"LargeTextLCD\")).exec(createPR(largeTextRenderer).configure(TextLCD)).report();\n+        createPerfMeter(testName).exec(createPR(largeTextRenderer).configure(TextLCD));\n@@ -926,1 +1824,1 @@\n-        (new PerfMeter(\"LargeTextGray\")).exec(createPR(largeTextRenderer).configure(TextAA)).report();\n+        createPerfMeter(testName).exec(createPR(largeTextRenderer).configure(TextAA));\n@@ -928,0 +1826,1 @@\n+\n@@ -929,1 +1828,1 @@\n-        (new PerfMeter(\"WhiteTextNoAA\")).exec(createPR(whiteTextRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(whiteTextRenderer));\n@@ -933,1 +1832,1 @@\n-        (new PerfMeter(\"WhiteTextLCD\")).exec(createPR(whiteTextRenderer).configure(TextLCD)).report();\n+        createPerfMeter(testName).exec(createPR(whiteTextRenderer).configure(TextLCD));\n@@ -937,1 +1836,1 @@\n-        (new PerfMeter(\"WhiteTextGray\")).exec(createPR(whiteTextRenderer).configure(TextAA)).report();\n+        createPerfMeter(testName).exec(createPR(whiteTextRenderer).configure(TextAA));\n@@ -941,1 +1840,1 @@\n-        (new PerfMeter(\"ArgbSwBlitImage\")).exec(createPR(argbSwBlitImageRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(argbSwBlitImageRenderer));\n@@ -945,1 +1844,1 @@\n-        (new PerfMeter(\"BgrSwBlitImage\")).exec(createPR(bgrSwBlitImageRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(bgrSwBlitImageRenderer));\n@@ -949,1 +1848,1 @@\n-        (new PerfMeter(\"ArgbSurfaceBlitImageRenderer\")).exec(createPR(argbSurfaceBlitImageRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(argbSurfaceBlitImageRenderer));\n@@ -953,1 +1852,1 @@\n-        (new PerfMeter(\"BgrSurfaceBlitImage\")).exec(createPR(bgrSurfaceBlitImageRenderer)).report();\n+        createPerfMeter(testName).exec(createPR(bgrSurfaceBlitImageRenderer));\n@@ -956,0 +1855,1 @@\n+    \/\/ XOR mode:\n@@ -957,1 +1857,1 @@\n-        (new PerfMeter(\"FlatOval_XOR\")).exec(createPR(flatRenderer).configure(XORMode)).report();\n+        createPerfMeter(testName).exec(createPR(flatRenderer).configure(XORMode));\n@@ -961,1 +1861,1 @@\n-        (new PerfMeter(\"RotatedBox_XOR\")).exec(createPR(flatBoxRotRenderer).configure(XORMode)).report();\n+        createPerfMeter(testName).exec(createPR(flatBoxRotRenderer).configure(XORMode));\n@@ -965,1 +1865,1 @@\n-        (new PerfMeter(\"Lines_XOR\")).exec(createPR(segRenderer).configure(XORMode)).report();\n+        createPerfMeter(testName).exec(createPR(segRenderer).configure(XORMode));\n@@ -969,1 +1869,1 @@\n-        (new PerfMeter(\"Image_XOR\")).exec(createPR(imgRenderer).configure(XORMode)).report();\n+        createPerfMeter(testName).exec(createPR(imgRenderer).configure(XORMode));\n@@ -973,1 +1873,1 @@\n-        (new PerfMeter(\"TextNoAA_XOR\")).exec(createPR(textRenderer).configure(XORMode)).report();\n+        createPerfMeter(testName).exec(createPR(textRenderer).configure(XORMode));\n@@ -977,1 +1877,113 @@\n-        (new PerfMeter(\"TextLCD_XOR\")).exec(createPR(textRenderer).configure(XORModeLCDText)).report();\n+        createPerfMeter(testName).exec(createPR(textRenderer).configure(XORModeLCDText));\n+    }\n+\n+    \/\/ Mixed\/Batched mode:\n+    public void testTextWiredQuadBat() throws Exception {\n+        createPerfMeter(testName).exec(createPR(textWiredQuadBatchedRenderer));\n+    }\n+\n+    public void testTextWiredQuadMix() throws Exception {\n+        createPerfMeter(testName).exec(createPR(textWiredQuadMixedRenderer));\n+    }\n+\n+    public void testTextWiredQuadAABat() throws Exception {\n+        createPerfMeter(testName).exec(createPR(textWiredQuadBatchedRenderer).configure(AA));\n+    }\n+\n+    public void testTextWiredQuadAAMix() throws Exception {\n+        createPerfMeter(testName).exec(createPR(textWiredQuadMixedRenderer).configure(AA));\n+    }\n+\n+    public void testVolImageFlatBoxBat() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgFlatBoxBatchedRenderer));\n+    }\n+\n+    public void testVolImageFlatBoxMix() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgFlatBoxMixedRenderer));\n+    }\n+\n+    public void testVolImageFlatBoxAABat() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgFlatBoxBatchedRenderer).configure(AA));\n+    }\n+\n+    public void testVolImageFlatBoxAAMix() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgFlatBoxMixedRenderer).configure(AA));\n+    }\n+\n+    public void testVolImageWiredQuadBat() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgWiredQuadBatchedRenderer));\n+    }\n+\n+    public void testVolImageWiredQuadMix() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgWiredQuadMixedRenderer));\n+    }\n+\n+    public void testVolImageWiredQuadAABat() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgWiredQuadBatchedRenderer).configure(AA));\n+    }\n+\n+    public void testVolImageWiredQuadAAMix() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgWiredQuadMixedRenderer).configure(AA));\n+    }\n+\n+    public void testVolImageTextNoAABat() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgTextBatchedRenderer));\n+    }\n+\n+    public void testVolImageTextNoAAMix() throws Exception {\n+        createPerfMeter(testName).exec(createPR(volImgTextMixedRenderer));\n+    }\n+\n+    private static void help() {\n+        System.out.print(\"##############################################################\\n\");\n+        System.out.printf(\"# %s\\n\", VERSION);\n+        System.out.print(\"##############################################################\\n\");\n+        System.out.println(\"# java ... RenderPerfTest <args> <tests>\");\n+        System.out.println(\"#\");\n+        System.out.println(\"# Supported arguments <args>:\");\n+        System.out.println(\"# -h                        : display this help\");\n+        System.out.println(\"# -v                        : set verbose output\");\n+        System.out.println(\"#\");\n+        System.out.println(\"# -e=<mode>                  : set the execution mode (default: \" + EXEC_MODE_DEFAULT\n+                                + \") among \" + EXEC_MODES);\n+        System.out.println(\"#\");\n+        System.out.println(\"# -f                        : use FPS unit (default)\");\n+        System.out.println(\"# -t                        : use TIME(ms) unit\");\n+        System.out.println(\"#\");\n+        System.out.println(\"# -g=all|\\\"0-0,0-1...\\\"       : use 'all' or specific graphics configurations\");\n+        System.out.println(\"#\");\n+        System.out.println(\"# -font=\\\"<name>\\\"            : set the font name used by all text renderers\");\n+        System.out.println(\"# -fontSize=<number>        : set the font size used by Text renderers\");\n+        System.out.println(\"# -fontSizeLarge=<number>   : set the font size used by LargeText renderers\");\n+        System.out.println(\"# -text=\\\"<string>\\\"          : set the text drawn by all text renderers\");\n+        System.out.println(\"#\");\n+        System.out.println(\"# -lf                       : list available font names\");\n+        System.out.println(\"# -lg                       : list available graphics configurations\");\n+        System.out.println(\"#\");\n+        System.out.println(\"# -n=<number>               : set number of primitives (default: \" + N_DEFAULT + \")\");\n+        System.out.println(\"# -r=<number>               : set number of test repeats (default: 1)\");\n+        System.out.println(\"#\");\n+        System.out.println(\"#\");\n+        System.out.println(\"# -w=<number>               : use number of test frames (default: 1) per screen\");\n+        System.out.println(\"#\");\n+        System.out.println(\"# -u=<number>               : set number of warmup iterations (default: \" + MIN_COUNT + \")\");\n+        System.out.println(\"#\");\n+\n+        System.out.print(\"# Supported test arguments <tests>:\");\n+\n+        final ArrayList<Method> testCases = new ArrayList<>();\n+        for (Method m : RenderPerfTest.class.getDeclaredMethods()) {\n+            if (m.getName().startsWith(\"test\") && !ignoredTests.contains(m.getName())) {\n+                testCases.add(m);\n+            }\n+        }\n+        testCases.sort(Comparator.comparing(Method::getName));\n+        for (Method m : testCases) {\n+            System.out.print(extractTestName(m));\n+            System.out.print(\" \");\n+        }\n+        System.out.println();\n+    }\n+\n+    private static String extractTestName(final Method m) {\n+        return m.getName().substring(\"test\".length());\n@@ -981,12 +1993,95 @@\n-            throws InvocationTargetException, IllegalAccessException, NoSuchMethodException\n-    {\n-        RenderPerfTest test = new RenderPerfTest();\n-\n-        if (args.length > 0) {\n-            for (String testCase : args) {\n-                Method m = RenderPerfTest.class.getDeclaredMethod(\"test\" + testCase);\n-                m.invoke(test);\n-            }\n-        } else {\n-            Method[] methods = RenderPerfTest.class.getDeclaredMethods();\n-            for (Method m : methods) {\n+            throws NoSuchMethodException, NumberFormatException {\n+        \/\/ Set the default locale to en-US locale (for Numerical Fields \".\" \",\")\n+        Locale.setDefault(Locale.US);\n+\n+        boolean help = false;\n+        final ArrayList<Method> testCases = new ArrayList<>();\n+\n+        for (String arg : args) {\n+            if (arg.length() >= 2) {\n+                if (arg.startsWith(\"-\")) {\n+                    switch (arg.substring(1, 2)) {\n+                        case \"e\":\n+                            if (arg.length() >= 3) {\n+                                EXEC_MODE = arg.substring(3).toLowerCase();\n+                            }\n+                            break;\n+                        case \"f\":\n+                            if (arg.length() == 2) {\n+                                USE_FPS = true;\n+                            } else {\n+                                if ((arg.length() > 6) && \"font=\".equalsIgnoreCase(arg.substring(1, 6))) {\n+                                    TEXT_FONT = arg.substring(6);\n+                                    break;\n+                                }\n+                                if ((arg.length() > 10) && \"fontSize=\".equalsIgnoreCase(arg.substring(1, 10))) {\n+                                    TEXT_SIZE_DEFAULT = Integer.parseInt(arg.substring(10));\n+                                    break;\n+                                }\n+                                if ((arg.length() > 15) && \"fontSizeLarge=\".equalsIgnoreCase(arg.substring(1, 15))) {\n+                                    TEXT_SIZE_LARGE = Integer.parseInt(arg.substring(15));\n+                                    break;\n+                                }\n+                            }\n+                            break;\n+                        case \"g\":\n+                            if (arg.length() >= 3) {\n+                                GC_MODE = arg.substring(3).toLowerCase();\n+                            }\n+                            break;\n+                        case \"h\":\n+                            help = true;\n+                            break;\n+                        case \"l\":\n+                            if (arg.length() == 3) {\n+                                if (\"f\".equalsIgnoreCase(arg.substring(2, 3))) {\n+                                    VERBOSE_FONT_CONFIG = true;\n+                                } else if (\"g\".equalsIgnoreCase(arg.substring(2, 3))) {\n+                                    VERBOSE_GRAPHICS_CONFIG = true;\n+                                }\n+                            }\n+                            break;\n+                        case \"t\":\n+                            if (arg.length() == 2) {\n+                                USE_FPS = false;\n+                            } else {\n+                                if ((arg.length() > 6) && \"text=\".equalsIgnoreCase(arg.substring(1, 6))) {\n+                                    TEXT_STR = arg.substring(6);\n+                                }\n+                            }\n+                            break;\n+                        case \"n\":\n+                            if (arg.length() >= 3) {\n+                                N = Integer.parseInt(arg.substring(3));\n+                            }\n+                            break;\n+                        case \"r\":\n+                            if (arg.length() >= 3) {\n+                                REPEATS = Integer.parseInt(arg.substring(3));\n+                            }\n+                            break;\n+                        case \"v\":\n+                            VERBOSE = true;\n+                            break;\n+                        case \"w\":\n+                            if (arg.length() >= 3) {\n+                                NW = Integer.parseInt(arg.substring(3));\n+                            }\n+                            break;\n+                        case \"u\":\n+                            if (arg.length() >= 3) {\n+                                WARMUP_COUNT = Integer.parseInt(arg.substring(3));\n+                            }\n+                            break;\n+                        default:\n+                            System.err.println(\"Unsupported argument '\" + arg + \"' !\");\n+                            help = true;\n+                    }\n+                } else {\n+                    Method m = RenderPerfTest.class.getDeclaredMethod(\"test\" + arg);\n+                    testCases.add(m);\n+                }\n+            }\n+        }\n+        if (testCases.isEmpty()) {\n+            for (Method m : RenderPerfTest.class.getDeclaredMethods()) {\n@@ -994,1 +2089,1 @@\n-                    m.invoke(test);\n+                    testCases.add(m);\n@@ -997,0 +2092,52 @@\n+            testCases.sort(Comparator.comparing(Method::getName));\n+        }\n+\n+        if (help) {\n+            help();\n+        }\n+\n+        if (CALIBRATION) {\n+            Method m = RenderPerfTest.class.getDeclaredMethod(\"testCalibration\");\n+            testCases.add(0, m); \/\/ first\n+        }\n+\n+        if (VERBOSE) {\n+            System.out.print(\"##############################################################\\n\");\n+            System.out.printf(\"# %s\\n\", VERSION);\n+            System.out.print(\"##############################################################\\n\");\n+            System.out.printf(\"# Java: %s\\n\", System.getProperty(\"java.runtime.version\"));\n+            System.out.printf(\"#   VM: %s %s (%s)\\n\", System.getProperty(\"java.vm.name\"), System.getProperty(\"java.vm.version\"), System.getProperty(\"java.vm.info\"));\n+            System.out.printf(\"#   OS: %s %s (%s)\\n\", System.getProperty(\"os.name\"), System.getProperty(\"os.version\"), System.getProperty(\"os.arch\"));\n+            System.out.printf(\"# CPUs: %d (virtual)\\n\", Runtime.getRuntime().availableProcessors());\n+            System.out.print(\"##############################################################\\n\");\n+            System.out.printf(\"# AWT Toolkit:                %s \\n\", TOOLKIT.getClass().getSimpleName());\n+            System.out.printf(\"# Execution mode:             %s\\n\", EXEC_MODE);\n+            System.out.printf(\"# GraphicsConfiguration mode: %s\\n\", GC_MODE);\n+            System.out.print(\"##############################################################\\n\");\n+            System.out.printf(\"# Repeats:                    %d\\n\", REPEATS);\n+            System.out.printf(\"# NW:                         %d\\n\", NW);\n+            System.out.printf(\"# N:                          %d\\n\", N);\n+            System.out.printf(\"# WARMUP_COUNT:               %d\\n\", WARMUP_COUNT);\n+            System.out.printf(\"# Unit:                       %s\\n\", USE_FPS ? \"FPS\" : \"TIME(ms)\");\n+            System.out.print(\"##############################################################\\n\");\n+            System.out.printf(\"# Font:                      '%s'\\n\", TEXT_FONT);\n+            System.out.printf(\"# Text: '%s'\\n\", TEXT_STR);\n+            System.out.printf(\"# FontSize:                   %s\\n\", TEXT_SIZE_DEFAULT);\n+            System.out.printf(\"# FontSizeLarge:              %s\\n\", TEXT_SIZE_LARGE);\n+            System.out.print(\"##############################################################\\n\");\n+        }\n+\n+        \/\/ Graphics Configuration handling:\n+        final Set<String> fontNames = new LinkedHashSet<>();\n+        final Map<String, GraphicsConfiguration> gcByID = new LinkedHashMap<>();\n+        final Map<GraphicsConfiguration, String> idByGC = new HashMap<>();\n+\n+        final GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+\n+        for (String name : ge.getAvailableFontFamilyNames()) {\n+            fontNames.add(name);\n+        }\n+        \/\/ Check font:\n+        if (!fontNames.contains(TEXT_FONT)) {\n+            System.err.println(\"Bad font name: [\" + TEXT_FONT + \"] !\");\n+            VERBOSE_FONT_CONFIG = true;\n@@ -998,0 +2145,268 @@\n+\n+        if (VERBOSE_FONT_CONFIG) {\n+            System.out.print(\"# Available font names: \");\n+\n+            for (String name : fontNames) {\n+                System.out.print(\"'\");\n+                System.out.print(name);\n+                System.out.print(\"' \");\n+            }\n+            System.out.println();\n+        }\n+\n+        final GraphicsDevice[] gds = ge.getScreenDevices();\n+\n+        if (VERBOSE_GRAPHICS_CONFIG) {\n+            System.out.println(\"# Available GraphicsDevice(s) and their GraphicsConfiguration(s):\");\n+        }\n+\n+        for (int gdIdx = 0; gdIdx < gds.length; gdIdx++) {\n+            final GraphicsDevice gd = gds[gdIdx];\n+            if (VERBOSE_GRAPHICS_CONFIG) {\n+                System.out.println(\"# [\" + gdIdx + \"] = GraphicsDevice[\" + gd.getIDstring() + \"]\");\n+            }\n+\n+            final GraphicsConfiguration[] gcs = gd.getConfigurations();\n+\n+            for (int gcIdx = 0; gcIdx < gcs.length; gcIdx++) {\n+                final GraphicsConfiguration gc = gcs[gcIdx];\n+                final String gcId = gdIdx + \"-\" + gcIdx;\n+                gcByID.put(gcId, gc);\n+                idByGC.put(gc, gcId);\n+                if (VERBOSE_GRAPHICS_CONFIG) {\n+                    System.out.println(\"# - [\" + gcId + \"] = GraphicsConfiguration[\" + gc + \"] bounds:\" + gc.getBounds());\n+                }\n+            }\n+        }\n+\n+        final Set<GraphicsConfiguration> gcSet = new LinkedHashSet<>();\n+\n+        if (GC_MODE != null) {\n+            if (!GC_MODE_DEF.equals(GC_MODE)) {\n+                if (GC_MODE_ALL.equals(GC_MODE)) {\n+                    gcSet.addAll(gcByID.values());\n+                } else {\n+                    for (String gcKey : GC_MODE.split(\",\")) {\n+                        final GraphicsConfiguration gc = gcByID.get(gcKey);\n+                        if (gc != null) {\n+                            gcSet.add(gc);\n+                        } else {\n+                            System.err.println(\"Bad GraphicsConfiguration identifier 'x-y' where x is GraphicsDevice ID \" +\n+                                    \"and y GraphicsConfiguration ID : [\" + gcKey + \"] ! (available values: \" + gcByID.keySet() + \")\");\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        if (gcSet.isEmpty()) {\n+            final GraphicsDevice gdDef = ge.getDefaultScreenDevice();\n+            final GraphicsConfiguration gcDef = gdDef.getDefaultConfiguration();\n+            final String gcId = idByGC.get(gcDef);\n+\n+            if (VERBOSE_GRAPHICS_CONFIG) {\n+                System.out.println(\"# Using default [\" + gcId + \"] = GraphicsConfiguration[\" + gcDef + \"] bounds:\" + gcDef.getBounds());\n+            }\n+            gcSet.add(gcDef);\n+        }\n+\n+        final List<GraphicsConfiguration> gcList = new ArrayList<>(gcSet);\n+        final int NGC = gcList.size();\n+\n+        System.out.print(\"#  Using GraphicsConfiguration(s): \");\n+        for (GraphicsConfiguration gc : gcList) {\n+            final String gcId = idByGC.get(gc);\n+            System.out.print(\"[\" + gcId + \"][\" + gc + \"]\");\n+            System.out.print(\" \");\n+        }\n+        System.out.println();\n+\n+        final List<RenderPerfTest> instances = new ArrayList<>();\n+        int retCode = 0;\n+        try {\n+            if (!help) {\n+                final List<Thread> threads = new ArrayList<>();\n+\n+                for (int i = 0; i < NGC; i++) {\n+                    final GraphicsConfiguration gc = gcList.get(i);\n+\n+                    for (int j = 0; j < NW; j++) {\n+                        final RenderPerfTest rp = new RenderPerfTest(gc);\n+                        instances.add(rp);\n+                        threads.add(rp.createThreadTests(threads.size() + 1, j + 1, testCases));\n+                    }\n+                }\n+                if (TRACE_SYNC) traceSync(\"testCount: \" + testCount);\n+\n+                initThreads(threads.size());\n+                initBarrierStart();\n+\n+                for (Thread thread : threads) {\n+                    if (TRACE_SYNC) traceSync(thread.getName() + \" starting...\");\n+                    thread.start();\n+                }\n+\n+                for (int n = 0; n < testCount; n++) {\n+                    if (VERBOSE) {\n+                        final int k = n \/ REPEATS;\n+                        final String methodName = extractTestName(testCases.get(k));\n+                        System.out.println(\"# --- Test [\" + (n + 1) + \" \/ \" + testCount + \"] = \" + methodName + \" ---\");\n+                    }\n+\n+                    \/\/ reset stop barrier (to be ready):\n+                    initBarrierStop();\n+\n+                    if (TRACE_SYNC) traceSync(\"Waiting \" + threadCount + \" threads to be ready...\");\n+                    readyCount.await();\n+\n+                    if (TRACE_SYNC) traceSync(\"Threads are ready => starting benchmark on \" + threadCount + \" threads now\");\n+                    triggerStart.countDown();\n+\n+                    \/\/ reset done barrier (to be ready):\n+                    initBarrierDone();\n+\n+                    if (TRACE_SYNC) traceSync(\"Waiting \" + threadCount + \" threads to complete benchmark...\");\n+                    completedCount.await();\n+\n+                    if (TRACE_SYNC) traceSync(\"Test completed on \" + threadCount + \" threads => stopping benchmark on all threads now\");\n+                    triggerStop.countDown();\n+\n+                    \/\/ reset start barrier (to be ready):\n+                    initBarrierStart();\n+\n+                    if (TRACE_SYNC) traceSync(\"Waiting \" + threadCount + \" threads to exit test...\");\n+                    doneCount.await();\n+\n+                    if (TRACE_SYNC) traceSync(\"Test exited on \" + threadCount + \" threads => finalize benchmark on all threads now\");\n+                    triggerExit.countDown();\n+                }\n+\n+                for (Thread thread : threads) {\n+                    thread.join();\n+                    if (TRACE_SYNC) traceSync(thread.getName() + \" terminated\");\n+                }\n+            }\n+        } catch (Throwable th) {\n+            System.err.println(\"Exception occurred during :\");\n+            th.printStackTrace(System.err);\n+            retCode = 1;\n+        } finally {\n+            for (RenderPerfTest rp : instances) {\n+                try {\n+                    rp.fh.hideFrameAndWait();\n+                } catch (Throwable th) {\n+                    System.err.println(\"Exception occurred in hideFrameAndWait():\");\n+                    th.printStackTrace(System.err);\n+                    retCode = 1;\n+                }\n+            }\n+            \/\/ ensure jvm immediate shutdown:\n+            System.exit(retCode);\n+        }\n+    }\n+\n+    \/\/ thread synchronization\n+\n+    private static int threadCount = 0;\n+\n+    private static int testCount = 0;\n+    private static volatile String testName = null;\n+\n+    private static volatile CountDownLatch readyCount = null;\n+    private static volatile CountDownLatch triggerStart = null;\n+\n+    private static volatile CountDownLatch completedCount = null;\n+    private static volatile CountDownLatch triggerStop = null;\n+\n+    private static volatile CountDownLatch doneCount = null;\n+    private static volatile CountDownLatch triggerExit = null;\n+\n+    static void traceSync(final String msg) {\n+        System.out.println(\"[\" + System.nanoTime() + \"] \" + msg);\n+    }\n+\n+    private static void initThreads(int count) {\n+        threadCount = count;\n+        if (TRACE_SYNC) traceSync(\"initThreads(): threadCount: \" + threadCount);\n+    }\n+\n+    static boolean isMultiThreads() {\n+        return threadCount > 1;\n+    }\n+\n+    private static void initBarrierStart() {\n+        readyCount = new CountDownLatch(threadCount);\n+        triggerStart = new CountDownLatch(1);\n+    }\n+\n+    private static void initBarrierStop() {\n+        completedCount = new CountDownLatch(threadCount);\n+        triggerStop = new CountDownLatch(1);\n+    }\n+\n+    private static void initBarrierDone() {\n+        doneCount = new CountDownLatch(threadCount);\n+        triggerExit = new CountDownLatch(1);\n+    }\n+\n+    public Thread createThreadTests(final int threadId, final int frameId,\n+                                    final ArrayList<Method> testCases) throws Exception {\n+        fh.setIds(threadId, frameId);\n+\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            @Override\n+            public void run() {\n+                fh.prepareFrameEDT(VERSION + \" [\" + fh.threadId + \"]\");\n+\n+                final JLabel label = new JLabel((DELAY_START) ? \"Waiting 3s before starting benchmark...\" : \"Starting benchmark...\");\n+                label.setForeground(Color.WHITE);\n+\n+                final JPanel panel = new JPanel();\n+                panel.add(label);\n+\n+                fh.showFrameEDT(panel);\n+            }\n+        });\n+\n+        \/\/ Wait frame to be shown:\n+        fh.waitFrameShown();\n+\n+        \/\/ Set test count per thread:\n+        testCount = testCases.size() * REPEATS;\n+\n+        final RenderPerfTest rp = this;\n+        return new Thread(\"RenderPerfThread[\" + threadId + \"]\") {\n+            @Override\n+            public void run() {\n+                if (DELAY_START) {\n+                    RenderPerfTest.sleep(3000);\n+                }\n+                try {\n+                    for (Method m : testCases) {\n+                        for (int i = 0; i < REPEATS; i++) {\n+                            testName = extractTestName(m);\n+                            m.invoke(rp);\n+                        }\n+                    }\n+                } catch (Throwable th) {\n+                    System.err.println(\"Exception occurred in RenderPerfThread[\" + threadId + \"]:\");\n+                    th.printStackTrace(System.err);\n+                }\n+            }\n+        };\n+    }\n+\n+    private static void sleep(final long millis) {\n+        if (millis > 0) {\n+            try {\n+                Thread.sleep(millis);\n+            } catch (InterruptedException ie) {\n+                ie.printStackTrace(System.err);\n+            }\n+        }\n+    }\n+\n+    \/** regular expression used to match characters different than alpha\/numeric\/_\/-\/. (1..n) *\/\n+    private final static Pattern PATTERN_NON_FILE_NAME = Pattern.compile(\"[^a-zA-Z0-9\\\\-_\\\\.]\");\n+\n+    private static String replaceNonFileNameChars(final String value) {\n+        return PATTERN_NON_FILE_NAME.matcher(value).replaceAll(\"_\");\n","filename":"test\/jdk\/performance\/client\/RenderPerfTest\/src\/renderperf\/RenderPerfTest.java","additions":1776,"deletions":361,"binary":false,"changes":2137,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -454,0 +454,18 @@\n+\/*\n+ * @test id=certainlyrootr1\n+ * @bug 8321408\n+ * @summary Interoperability tests with Certainly Root R1\n+ * @library \/test\/lib\n+ * @build jtreg.SkippedException ValidatePathWithURL CAInterop\n+ * @run main\/othervm -Djava.security.debug=certpath,ocsp CAInterop certainlyrootr1 DEFAULT\n+ *\/\n+\n+\/*\n+ * @test id=certainlyroote1\n+ * @bug 8321408\n+ * @summary Interoperability tests with Certainly Root E1\n+ * @library \/test\/lib\n+ * @build jtreg.SkippedException ValidatePathWithURL CAInterop\n+ * @run main\/othervm -Djava.security.debug=certpath,ocsp CAInterop certainlyroote1 DEFAULT\n+ *\/\n+\n@@ -616,0 +634,7 @@\n+            case \"certainlyrootr1\" ->\n+                    new CATestURLs(\"https:\/\/valid.root-r1.certainly.com\",\n+                            \"https:\/\/revoked.root-r1.certainly.com\");\n+            case \"certainlyroote1\" ->\n+                    new CATestURLs(\"https:\/\/valid.root-e1.certainly.com\",\n+                            \"https:\/\/revoked.root-e1.certainly.com\");\n+\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/CAInterop.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  \tGlobal properties\n+#       Global properties\n","filename":"test\/jdk\/sun\/management\/LoggingTest\/logging.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#\tDefault Configuration File for Java Platform Management\n+#       Default Configuration File for Java Platform Management\n@@ -50,1 +50,1 @@\n-#\t\t\tRMI Management Properties\n+#                       RMI Management Properties\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/rmiregistry.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#\tDefault Configuration File for Java Platform Management\n+#       Default Configuration File for Java Platform Management\n@@ -50,1 +50,1 @@\n-#\t\t\tRMI Management Properties\n+#                       RMI Management Properties\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/rmiregistryssl.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- *          would return default \"content\/unknown\"\n+ *          return default \"content\/unknown\"\n@@ -40,1 +40,1 @@\n-import jdk.test.lib.JDKToolFinder;\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -52,3 +52,3 @@\n-        ProcessTools.executeCommand(\n-                JDKToolFinder.getTestJDKTool(\"java\"),\n-                \"-cp\", resJar + File.pathSeparator + classes, \"GetContentType\")\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                \"-cp\", resJar + File.pathSeparator + classes, \"GetContentType\");\n+        new OutputAnalyzer(pb.start())\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/jar\/GetContentTypeTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,1 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -84,1 +85,0 @@\n-        String java = JDKToolFinder.getTestJDKTool(\"java\");\n@@ -88,4 +88,5 @@\n-            ProcessTools.executeCommand(java, \"-cp\", cp, test)\n-                        .outputTo(System.out)\n-                        .errorTo(System.out)\n-                        .shouldHaveExitValue(0);\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-cp\", cp, test);\n+            new OutputAnalyzer(pb.start())\n+                    .outputTo(System.out)\n+                    .errorTo(System.out)\n+                    .shouldHaveExitValue(0);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/jar\/jarbug\/TestDriver.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,2 @@\n-import jdk.test.lib.JDKToolFinder;\n-import static jdk.test.lib.process.ProcessTools.executeCommand;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n@@ -42,6 +42,7 @@\n-        executeCommand(JDKToolFinder.getTestJDKTool(\"java\"),\n-                       \"--limit-modules\", \"java.base\",\n-                       \"-cp\", classes, \"OtherResources\")\n-                      .outputTo(System.out)\n-                      .errorTo(System.out)\n-                      .shouldHaveExitValue(0);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                \"--limit-modules\", \"java.base\",\n+                \"-cp\", classes, \"OtherResources\");\n+        new OutputAnalyzer(pb.start())\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .shouldHaveExitValue(0);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/jrt\/OtherResourcesTest.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+ *      8321408\n@@ -50,1 +51,1 @@\n-    private static final int COUNT = 106;\n+    private static final int COUNT = 108;\n@@ -55,1 +56,1 @@\n-            = \"C6:81:90:32:46:65:82:69:6B:BF:EE:C2:BE:AB:48:59:CB:2F:B6:7B:93:F2:B3:7E:A0:07:17:0C:79:F6:D9:AC\";\n+            = \"C4:A2:41:9E:B6:4D:77:26:AA:21:02:83:51:C7:88:21:66:1E:D8:88:4A:AC:84:D5:B0:15:0C:7C:C6:45:85:AF\";\n@@ -276,0 +277,4 @@\n+            put(\"certainlyrootr1 [jdk]\",\n+                    \"77:B8:2C:D8:64:4C:43:05:F7:AC:C5:CB:15:6B:45:67:50:04:03:3D:51:C6:0C:62:02:A8:E0:C3:34:67:D3:A0\");\n+            put(\"certainlyroote1 [jdk]\",\n+                    \"B4:58:5F:22:E4:AC:75:6A:4E:86:12:A1:36:1C:5D:9D:03:1A:93:FD:84:FE:BB:77:8F:A3:06:8B:0F:C4:2D:C2\");\n","filename":"test\/jdk\/sun\/security\/lib\/cacerts\/VerifyCACerts.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,135 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8265372\n+ * @summary checking PKCS#9 encoding and decoding\n+ * @modules java.base\/sun.security.pkcs:+open\n+ *          java.base\/sun.security.util\n+ *          java.base\/sun.security.x509\n+ *\/\n+import sun.security.pkcs.PKCS9Attribute;\n+import sun.security.pkcs.SignerInfo;\n+import sun.security.util.DerOutputStream;\n+import sun.security.util.DerValue;\n+import sun.security.util.KnownOIDs;\n+import sun.security.util.ObjectIdentifier;\n+import sun.security.x509.AlgorithmId;\n+import sun.security.x509.BasicConstraintsExtension;\n+import sun.security.x509.CertificateExtensions;\n+import sun.security.x509.X500Name;\n+\n+import java.math.BigInteger;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.HexFormat;\n+\n+import static sun.security.pkcs.PKCS9Attribute.*;\n+\n+public class EncodeDecode {\n+    public static void main(String[] args) throws Exception {\n+        test(EMAIL_ADDRESS_OID, new String[]{\"a@a.com\", \"b@b.org\"},\n+            \"301f06092a864886f70d010901311216076140612e636f6d16076240622e6f7267\");\n+        test(UNSTRUCTURED_NAME_OID, new String[]{\"a@a.com\", \"b@b.org\"},\n+            \"301f06092a864886f70d010902311216076140612e636f6d16076240622e6f7267\");\n+        test(CONTENT_TYPE_OID, CONTENT_TYPE_OID,\n+            \"301806092a864886f70d010903310b06092a864886f70d010903\");\n+        test(MESSAGE_DIGEST_OID, new byte[10],\n+            \"301906092a864886f70d010904310c040a00000000000000000000\");\n+        test(SIGNING_TIME_OID, new Date(0),\n+            \"301c06092a864886f70d010905310f170d3730303130313030303030305a\");\n+\n+        var sis = new SignerInfo[] {\n+            new SignerInfo(new X500Name(\"CN=x\"),\n+                BigInteger.ONE,\n+                AlgorithmId.get(\"SHA-256\"),\n+                AlgorithmId.get(\"Ed25519\"),\n+                new byte[10])\n+        };\n+        test(COUNTERSIGNATURE_OID, sis,\n+            \"304706092a864886f70d010906313a30380201013011300c310a30080603550403130178020101300d06096086480165030402010500300506032b6570040a00000000000000000000\");\n+\n+        test(CHALLENGE_PASSWORD_OID, \"password\",\n+            \"301706092a864886f70d010907310a130870617373776f7264\");\n+        test(UNSTRUCTURED_ADDRESS_OID, new String[]{\"a@a.com\", \"b@b.org\"},\n+            \"301f06092a864886f70d010908311213076140612e636f6d13076240622e6f7267\");\n+\n+        var exts = new CertificateExtensions();\n+        exts.setExtension(\"bc\", new BasicConstraintsExtension(true, true, 2));\n+        test(EXTENSION_REQUEST_OID, exts,\n+            \"302306092a864886f70d01090e3116301430120603551d130101ff040830060101ff020102\");\n+\n+        var c = Class.forName(\"sun.security.pkcs.SigningCertificateInfo\");\n+        var ctor = c.getDeclaredConstructor(byte[].class);\n+        ctor.setAccessible(true);\n+        \/\/ A SigningCertificateInfo with an empty ESSCertID\n+        var sci = ctor.newInstance((Object) new DerOutputStream()\n+            .write(DerValue.tag_Sequence, new DerOutputStream()\n+                .write(DerValue.tag_Sequence, new DerOutputStream()))\n+            .toByteArray());\n+        test(SIGNING_CERTIFICATE_OID, sci,\n+            \"3013060b2a864886f70d010910020c310430023000\");\n+\n+        var onev = new DerOutputStream().write(DerValue.tag_Sequence,\n+                new DerOutputStream().putOctetString(new byte[10]))\n+            .toByteArray();\n+\n+        test(SIGNATURE_TIMESTAMP_TOKEN_OID, onev,\n+            \"301d060b2a864886f70d010910020e310e300c040a00000000000000000000\");\n+        test(CMS_ALGORITHM_PROTECTION_OID, onev,\n+            \"301b06092a864886f70d010934310e300c040a00000000000000000000\");\n+\n+        \/\/Test whether unsupported OIDs are handled properly\n+        test(AlgorithmId.SHA_oid,\n+            new DerOutputStream().write(DerValue.tag_Set, new DerOutputStream().putBoolean(true)).toByteArray(),\n+            \"300c06052b0e03021a31030101ff\");\n+    }\n+\n+    static void test(ObjectIdentifier oid, Object value, String expected) throws Exception {\n+        System.out.println(\"---------- \" + KnownOIDs.findMatch(oid.toString()).name());\n+        var p9 = new PKCS9Attribute(oid, value);\n+        var enc = new DerOutputStream().write(p9).toByteArray();\n+        if (!HexFormat.of().formatHex(enc).equals(expected)) {\n+            throw new RuntimeException(\"encode unmatch\");\n+        }\n+        var nv = new PKCS9Attribute(new DerValue(enc)).getValue();\n+        boolean equals;\n+        if (value instanceof SignerInfo[] si) {\n+            \/\/ equals not defined for SignerInfo\n+            equals = Arrays.toString(si).equals(Arrays.toString((SignerInfo[])nv));\n+        } else if (value instanceof byte[] bb) {\n+            equals = Arrays.equals(bb, (byte[]) nv);\n+        } else if (value.getClass().isArray()) {\n+            equals = Arrays.equals((Object[]) value, (Object[]) nv);\n+        } else if (value.getClass().getName().equals(\"sun.security.pkcs.SigningCertificateInfo\")) {\n+            \/\/ equals not defined for SigningCertificateInfo\n+            equals = value.toString().equals(nv.toString());\n+        } else {\n+            equals = nv.equals(value);\n+        }\n+        if (!equals) {\n+            throw new RuntimeException(\"decode unmatch\");\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs9\/EncodeDecode.java","additions":135,"deletions":0,"binary":false,"changes":135,"status":"added"},{"patch":"@@ -68,1 +68,0 @@\n-        authed.getAttributes();\n","filename":"test\/jdk\/sun\/security\/x509\/AlgorithmId\/NonStandardNames.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    private static final String IGNORE = \"glob:{*.diz,jmc.ini}\";\n+    private static final String IGNORE = \"glob:{*.diz,jmc.ini,*.debuginfo}\";\n","filename":"test\/jdk\/tools\/jlink\/CheckExecutable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,0 @@\n-import java.util.stream.Collectors;\n@@ -87,4 +86,0 @@\n-\n-        public void putAll(Map<String, String> map) {\n-            map.entrySet().forEach(e -> put(e.getKey(), () -> e.getValue()));\n-        }\n@@ -143,1 +138,0 @@\n-        map.putAll(xOptFlags()); \/\/ -Xmx4g -> @requires vm.opt.x.Xmx == \"4g\" )\n@@ -722,21 +716,0 @@\n-    \/**\n-     * Parses extra options, options that start with -X excluding the\n-     * bare -X option (as it is not considered an extra option).\n-     * Ignores extra options not starting with -X\n-     *\n-     * This could be improved to handle extra options not starting\n-     * with -X as well as \"standard\" options.\n-     *\/\n-    private Map<String, String> xOptFlags() {\n-        return allFlags()\n-            .filter(s -> s.startsWith(\"-X\") && !s.startsWith(\"-XX:\") && !s.equals(\"-X\"))\n-            .map(s -> s.replaceFirst(\"-\", \"\"))\n-            .map(flag -> flag.splitWithDelimiters(\"[:0123456789]\", 2))\n-            .collect(Collectors.toMap(a -> \"vm.opt.x.\" + a[0],\n-                                      a -> (a.length == 1)\n-                                      ? \"true\" \/\/ -Xnoclassgc\n-                                      : (a[1].equals(\":\")\n-                                         ? a[2]            \/\/ [\"-XshowSettings\", \":\", \"system\"]\n-                                         : a[1] + a[2]))); \/\/ [\"-Xmx\", \"4\", \"g\"]\n-    }\n-\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":1,"deletions":28,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -156,1 +156,0 @@\n-                    &nbsp;&gt;&nbsp;\n@@ -164,1 +163,0 @@\n-                    &nbsp;&gt;&nbsp;\n@@ -172,1 +170,0 @@\n-                    &nbsp;&gt;&nbsp;\n@@ -174,1 +171,0 @@\n-                    &nbsp;&gt;&nbsp;\n@@ -182,1 +178,0 @@\n-                    &nbsp;&gt;&nbsp;\n@@ -184,1 +179,0 @@\n-                    &nbsp;&gt;&nbsp;\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testModules\/TestModulePackages.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -414,1 +414,0 @@\n-                    &nbsp;&gt;&nbsp;\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNavigation\/TestNavigation.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -147,1 +147,0 @@\n-                    &nbsp;&gt;&nbsp;\n@@ -154,1 +153,0 @@\n-                    &nbsp;&gt;&nbsp;\n@@ -156,1 +154,0 @@\n-                    &nbsp;&gt;&nbsp;\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/TestPreview.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 7021614 8278373\n+ * @bug 7021614 8278373 8164094\n@@ -133,0 +133,6 @@\n+            for (Element enc: e.getEnclosedElements()) {\n+                TreePath path = trees.getPath(enc);\n+                if (trees.getDocCommentTree(path) != null) {\n+                    new DocCommentScanner(path).scan();\n+                }\n+            }\n@@ -250,0 +256,4 @@\n+ *\n+ * @see Inner#X    Bad\n+ * @see Inner#X()  Bad\n+ * @see Inner#m    Bad\n@@ -279,0 +289,10 @@\n+\n+    \/**\n+     * @see #X         Field\n+     * @see #X()       Method\n+     * @see #m         Method\n+     * @see Inner#X    Bad\n+     * @see Inner#X()  Bad\n+     * @see Inner#m    Bad\n+     *\/\n+    interface Inner {}\n","filename":"test\/langtools\/tools\/javac\/doctree\/ReferenceTest.java","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,3 @@\n+        \/\/ always print hserr to stderr in the docker tests to avoid\n+        \/\/ trouble accessing it after a crash in the container\n+        this.addJavaOpts(\"-XX:+ErrorFileToStderr\");\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/docker\/DockerRunOptions.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,5 @@\n+        \/\/ Ubuntu 22.04 ppc started to crash in libz inflateReset on Power8 based host\n+        \/\/ those recent Ubuntu versions only work on Power9+\n+        if (Platform.isPPC()) {\n+            return \"20.04\";\n+        }\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/docker\/DockerfileConfig.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import org.openjdk.jmh.annotations.Setup;\n@@ -46,31 +45,1 @@\n-    private String name;\n-    private String blaha;\n-    private Sigurd sig;\n-\n-    @Setup\n-    public void setup() {\n-        name = \"joe\";\n-        blaha = \"sniglogigloienlitenapasomarengrodasjukadjavelhej\";\n-        sig = new Sigurd();\n-    }\n-\n-    @Benchmark\n-    public String appendAndToString() {\n-        return \"MyStringBuffer named:\" + ((name == null) ? \"unknown\" : name) + \".\";\n-    }\n-\n-    @Benchmark\n-    public String toStringComplex() {\n-        return sig.toString();\n-    }\n-\n-    static class Sigurd {\n-        int x;\n-        byte y;\n-        String z = \"yahoo\";\n-\n-        @Override\n-        public String toString() {\n-            return Integer.toString(x) + \"_\" + Integer.toString((int) y) + \"_\" + z + \"_\";\n-        }\n-    }\n+    StringBuffer sb = new StringBuffer();\n@@ -79,2 +48,2 @@\n-    public String substring() {\n-        return blaha.substring(30, 35);\n+    public String emptyToString() {\n+        return sb.toString();\n@@ -82,1 +51,0 @@\n-\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringBuffers.java","additions":4,"deletions":36,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -367,0 +367,5 @@\n+    @Benchmark\n+    public String emptyToString(Data data) {\n+        return data.sbEmpty.toString();\n+    }\n+\n@@ -383,0 +388,1 @@\n+        StringBuilder sbEmpty;\n@@ -401,0 +407,2 @@\n+            sbEmpty = new StringBuilder(length);\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringBuilders.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,149 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.bench.vm.runtime;\n+\n+import org.openjdk.bench.vm.lang.Throw;\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.BenchmarkParams;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.concurrent.TimeUnit;\n+import java.lang.*;\n+import java.util.*;\n+\n+import jdk.internal.misc.Unsafe;\n+import jdk.test.whitebox.WhiteBox;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.MILLISECONDS)\n+@State(Scope.Benchmark)\n+@Warmup(iterations = 1, time = 1, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)\n+public abstract class NMTBenchmark_wb {\n+\n+    @Param({\"2\", \"4\", \"8\", \"16\"})\n+    public int THREADS;\n+\n+    @Param({\"25\", \"50\", \"100\", \"200\", \"400\"})\n+    public int REGIONS;\n+\n+    @Param({\"25\", \"50\", \"100\"})\n+    public int SUB_REGIONS;\n+\n+    private static final int PAGE_SIZE = 1024 * 4;\n+\n+    \/\/ Need to wrap WhiteBox in a holder class so that it doesn't get initialized on the host VM (which won't\n+    \/\/ have WB enabled.\n+    private static class WhiteBoxHolder {\n+\n+        private static final WhiteBox WB;\n+\n+        static {\n+            System.out.println(\"Current user dir: \" + System.getProperty(\"user.dir\"));\n+            WhiteBox wb = null;\n+            try {\n+                wb = WhiteBox.getWhiteBox();\n+            } catch (Throwable t) {\n+                System.out.println(\"WhiteBox initialization failure: \" + t);\n+                t.printStackTrace();\n+                \/\/ Explicit exit to avoid initialization loops.\n+                System.exit(17);\n+            }\n+            WB = wb;\n+        }\n+    }\n+\n+    private static long reserve (long size           ) { return WhiteBoxHolder.WB.NMTReserveMemory (size                             ); }\n+    private static void commit  (long base, int pno  ) {        WhiteBoxHolder.WB.NMTCommitMemory  (base + pno * PAGE_SIZE, PAGE_SIZE); }\n+    private static void uncommit(long base, int pno  ) {        WhiteBoxHolder.WB.NMTUncommitMemory(base + pno * PAGE_SIZE, PAGE_SIZE); }\n+    private static void release (long base, long size) {        WhiteBoxHolder.WB.NMTReleaseMemory (base                  , size     ); }\n+\n+    public static void doAllMemoryOps(int reserved_regions_count, int committed_regions_count) {\n+        long region_size = committed_regions_count * PAGE_SIZE;\n+        long[] base_array = new long[reserved_regions_count];\n+\n+        for (int i = 0; i < reserved_regions_count; i++)\n+          base_array[i] = reserve(region_size);\n+\n+        for (int r = 0; r < reserved_regions_count; r++) {\n+          long base = base_array[r];\n+          for (int i = 0; i < committed_regions_count; i += 4) commit  (base, i    );\n+          for (int i = 1; i < committed_regions_count; i += 4) commit  (base, i    ); \/\/ causes merge from right\n+          for (int i = 4; i < committed_regions_count; i += 4) commit  (base, i - 1); \/\/ causes merge from left\n+          for (int i = 4; i < committed_regions_count; i += 4) uncommit(base, i - 1); \/\/ causes split from left\n+          for (int i = 1; i < committed_regions_count; i += 4) uncommit(base, i    ); \/\/ causes split from right\n+          for (int i = 0; i < committed_regions_count; i += 4) uncommit(base, i    ); \/\/ remove the regions\n+        }\n+\n+        for (int i = 0; i < reserved_regions_count; i++)\n+          release(base_array[i], region_size);\n+    }\n+\n+    public static void doTest(int reserved_regions_count, int threads_count, int committed_regions_count) throws InterruptedException{\n+        int regions_per_thread = reserved_regions_count \/ threads_count;\n+        Thread[] threads =  new Thread[threads_count];\n+        for (int t = 0; t < threads_count; t++) {\n+            threads[t] = new Thread(() -> doAllMemoryOps(regions_per_thread, committed_regions_count));\n+            threads[t].start();\n+        }\n+        for (Thread t: threads) t.join();\n+    }\n+\n+    @Benchmark\n+    public void virtualMemoryTests() {\n+        try { doTest(REGIONS, THREADS, SUB_REGIONS); }\n+        catch (Throwable t) {\n+            System.out.println(t.getMessage());\n+        }\n+    }\n+\n+    public static final String ADD_EXPORTS = \"--add-exports\";\n+\n+    public static final String MISC_PACKAGE = \"java.base\/jdk.internal.misc=ALL-UNNAMED\"; \/\/ used for Unsafe API\n+\n+    public static final String WB_UNLOCK_OPTION = \"-XX:+UnlockDiagnosticVMOptions\";\n+\n+    public static final String WB_API = \"-XX:+WhiteBoxAPI\";\n+\n+    public static final String WB_JAR_APPEND = \"-Xbootclasspath\/a:lib-test\/wb.jar\";\n+\n+    @Fork(value = 2, jvmArgsPrepend = { WB_JAR_APPEND, WB_UNLOCK_OPTION, WB_API, ADD_EXPORTS, MISC_PACKAGE, \"-XX:NativeMemoryTracking=off\"})\n+    public static class NMTOff extends NMTBenchmark_wb { }\n+\n+    @Fork(value = 2, jvmArgsPrepend = { WB_JAR_APPEND, WB_UNLOCK_OPTION, WB_API, ADD_EXPORTS, MISC_PACKAGE, \"-XX:NativeMemoryTracking=summary\"})\n+    public static class NMTSummary extends NMTBenchmark_wb { }\n+\n+    \/\/ @Fork(value = 2, jvmArgsPrepend = { WB_JAR_APPEND, WB_UNLOCK_OPTION, WB_API, ADD_EXPORTS, MISC_PACKAGE, \"-XX:NativeMemoryTracking=detail\"})\n+    \/\/ public static class NMTDetail extends NMTBenchmark_wb { }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/runtime\/NMTBenchmark_wb.java","additions":149,"deletions":0,"binary":false,"changes":149,"status":"added"}]}