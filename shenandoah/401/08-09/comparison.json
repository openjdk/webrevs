{"files":[{"patch":"@@ -224,6 +224,1 @@\n-    size_t MaxTLABSizeWords = ShenandoahHeapRegion::max_tlab_size_words();\n-    size_t min_plab_size = align_up(PLAB::min_size(), CardTable::card_size_in_words());\n-    size_t max_plab_size = (ShenandoahMaxEvacLABRatio > 0)?\n-      align_down(MIN2(MaxTLABSizeWords, PLAB::min_size() * ShenandoahMaxEvacLABRatio), CardTable::card_size_in_words()):\n-      align_down(MaxTLABSizeWords, CardTable::card_size_in_words());\n-    return new ShenandoahGenerationalHeap(new ShenandoahCollectorPolicy(), min_plab_size, max_plab_size);\n+    return new ShenandoahGenerationalHeap(new ShenandoahCollectorPolicy());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahArguments.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -75,1 +75,12 @@\n-ShenandoahGenerationalHeap::ShenandoahGenerationalHeap(ShenandoahCollectorPolicy* policy, size_t min_plab, size_t max_plab) :\n+size_t ShenandoahGenerationalHeap::calculate_min_plab() const {\n+  return align_up(PLAB::min_size(), CardTable::card_size_in_words());\n+}\n+\n+size_t ShenandoahGenerationalHeap::calculate_max_plab() const {\n+  size_t MaxTLABSizeWords = ShenandoahHeapRegion::max_tlab_size_words();\n+  return ((ShenandoahMaxEvacLABRatio > 0)?\n+          align_down(MIN2(MaxTLABSizeWords, PLAB::min_size() * ShenandoahMaxEvacLABRatio), CardTable::card_size_in_words()):\n+          align_down(MaxTLABSizeWords, CardTable::card_size_in_words()));\n+}\n+\n+ShenandoahGenerationalHeap::ShenandoahGenerationalHeap(ShenandoahCollectorPolicy* policy) :\n@@ -77,3 +88,4 @@\n-  _min_plab_size(min_plab),\n-  _max_plab_size(max_plab),\n-  _regulator_thread(nullptr) { }\n+  _min_plab_size(calculate_min_plab()),\n+  _max_plab_size(calculate_max_plab()),\n+  _regulator_thread(nullptr) {\n+ }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -38,0 +38,3 @@\n+  size_t calculate_min_plab() const;\n+  size_t calculate_max_plab() const;\n+\n@@ -39,1 +42,2 @@\n-  explicit ShenandoahGenerationalHeap(ShenandoahCollectorPolicy* policy, size_t min_plab, size_t max_plab);\n+  explicit ShenandoahGenerationalHeap(ShenandoahCollectorPolicy* policy);\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}