{"files":[{"patch":"@@ -1114,5 +1114,1 @@\n-\n-  size_t unalignment = future_size % CardTable::card_size_in_words();\n-  if (unalignment != 0) {\n-    future_size = future_size - unalignment + CardTable::card_size_in_words();\n-  }\n+  future_size = align_down(future_size, CardTable::card_size_in_words());\n@@ -1154,1 +1150,1 @@\n-    assert (size <= actual_size, \"allocation should fit\");\n+    \/\/ Since the allocated PLAB may have been down-sized for alignment, plab->allocate(size) below may still fail.\n@@ -1376,5 +1372,5 @@\n-  \/\/ Align requested sizes to card sized multiples\n-  size_t words_in_card = CardTable::card_size_in_words();\n-  size_t align_mask = ~(words_in_card - 1);\n-  min_size = (min_size + words_in_card - 1) & align_mask;\n-  word_size = (word_size + words_in_card - 1) & align_mask;\n+  \/\/ Align requested sizes to card-sized multiples.  Align down so that we don't violate max size of TLAB.\n+  min_size = align_down(min_size, CardTable::card_size_in_words());\n+  word_size = align_down(word_size, CardTable::card_size_in_words());\n+  assert(word_size >= min_size, \"Requested PLAB is too small\");\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -94,0 +94,4 @@\n+gc\/shenandoah\/TestHumongousThreshold.java#default 8327000 macosx-aarch64\n+gc\/shenandoah\/TestHumongousThreshold.java#16b 8327000 macosx-aarch64\n+gc\/shenandoah\/TestHumongousThreshold.java#generational 8327000 macosx-aarch64\n+gc\/shenandoah\/TestHumongousThreshold.java#generational-16b 8327000 macosx-aarch64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}