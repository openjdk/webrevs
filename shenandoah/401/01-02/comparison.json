{"files":[{"patch":"@@ -701,1 +701,1 @@\n-  assert(size % CardTable::card_size_in_words() == 0, \"size must be multiple of card table size, was \" SIZE_FORMAT, size);\n+  assert(is_aligned(size, CardTable::card_size_in_words()), \"Align by design\");\n@@ -707,1 +707,1 @@\n-  assert(((uintptr_t) result) % CardTable::card_size_in_words() == 0, \"PLAB start must align with card boundary\");\n+  assert(is_aligned(result, CardTable::card_size_in_words()), \"Align by design\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1117,1 +1117,1 @@\n-  assert (future_size % CardTable::card_size_in_words() == 0, \"Should align by design\");\n+  assert(is_aligned(future_size, CardTable::card_size_in_words()), \"Should align by design\");\n@@ -1167,3 +1167,1 @@\n-    assert (actual_size % CardTable::card_size_in_words() == 0,\n-            \"actual size \" SIZE_FORMAT_X \" should be aligned on card size \" SIZE_FORMAT_X,\n-            actual_size, (size_t) CardTable::card_size_in_words());\n+    assert(is_aligned(actual_size, CardTable::card_size_in_words()), \"Align by design\");\n@@ -1375,3 +1373,1 @@\n-HeapWord* ShenandoahHeap::allocate_new_plab(size_t min_size,\n-                                            size_t word_size,\n-                                            size_t* actual_size) {\n+HeapWord* ShenandoahHeap::allocate_new_plab(size_t min_size, size_t word_size, size_t* actual_size) {\n@@ -1379,2 +1375,2 @@\n-  min_size = align_down(min_size, CardTable::card_size_in_words());\n-  word_size = align_down(word_size, CardTable::card_size_in_words());\n+  assert(is_aligned(min_size, CardTable::card_size_in_words()), \"Align by design\");\n+  assert(is_aligned(word_size, CardTable::card_size_in_words()), \"Align by design\");\n@@ -1392,0 +1388,1 @@\n+  assert(is_aligned(res, CardTable::card_size_in_words()), \"Align by design\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -94,4 +94,4 @@\n-gc\/shenandoah\/TestHumongousThreshold.java#default 8327000 macosx-aarch64\n-gc\/shenandoah\/TestHumongousThreshold.java#16b 8327000 macosx-aarch64\n-gc\/shenandoah\/TestHumongousThreshold.java#generational 8327000 macosx-aarch64\n-gc\/shenandoah\/TestHumongousThreshold.java#generational-16b 8327000 macosx-aarch64\n+gc\/shenandoah\/TestHumongousThreshold.java#default 8327000 generic-all\n+gc\/shenandoah\/TestHumongousThreshold.java#16b 8327000 generic-all\n+gc\/shenandoah\/TestHumongousThreshold.java#generational 8327000 generic-all\n+gc\/shenandoah\/TestHumongousThreshold.java#generational-16b 8327000 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}