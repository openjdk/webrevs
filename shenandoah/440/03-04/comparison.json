{"files":[{"patch":"@@ -325,1 +325,1 @@\n-  ShenandoahHeapRegion* r;\n+  ShenandoahHeapRegion* r = ShenandoahHeap::heap()->get_region(idx);\n@@ -331,3 +331,2 @@\n-  assert ((r = ShenandoahHeap::heap()->get_region(idx)) &&\n-          ((r->is_trash() && (available == _region_size_bytes)) ||\n-           (r->used() + available == _region_size_bytes)),\n+  assert ((r != nullptr) && ((r->is_trash() && (available == _region_size_bytes)) ||\n+                             (r->used() + available == _region_size_bytes)),\n@@ -2078,0 +2077,1 @@\n+    index = _partitions.find_index_of_next_available_region(ShenandoahFreeSetPartitionId::Mutator, index + 1);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}