{"files":[{"patch":"@@ -985,1 +985,0 @@\n-\n@@ -987,3 +986,0 @@\n-      _heap->old_generation()->increment_affiliated_region_count();\n-    } else {\n-      _heap->young_generation()->increment_affiliated_region_count();\n@@ -991,0 +987,2 @@\n+    _heap->generation_for(r->affiliation())->increment_affiliated_region_count();\n+\n@@ -1122,0 +1120,1 @@\n+  ShenandoahGeneration* generation = _heap->generation_for(req.affiliation());\n@@ -1209,1 +1208,2 @@\n-  _heap->young_generation()->increase_affiliated_region_count(num);\n+  generation->increase_affiliated_region_count(num);\n+\n@@ -1254,1 +1254,2 @@\n-  size_t ac = alloc_capacity(r);\n+  ShenandoahGenerationalHeap* gen_heap = ShenandoahGenerationalHeap::heap();\n+  size_t region_capacity = alloc_capacity(r);\n@@ -1256,1 +1257,1 @@\n-                                               ShenandoahFreeSetPartitionId::OldCollector, ac);\n+                                               ShenandoahFreeSetPartitionId::OldCollector, region_capacity);\n@@ -1258,2 +1259,2 @@\n-  _heap->old_generation()->augment_evacuation_reserve(ac);\n-  bool transferred = _heap->generation_sizer()->transfer_to_old(1);\n+  _heap->old_generation()->augment_evacuation_reserve(region_capacity);\n+  bool transferred = gen_heap->generation_sizer()->transfer_to_old(1);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -130,0 +130,3 @@\n+\n+\n+\n@@ -131,5 +134,8 @@\n-       if (is_old()) {\n-         ShenandoahHeap::heap()->old_generation()->decrement_affiliated_region_count();\n-         ShenandoahHeap::heap()->old_generation()->decrease_capacity(region_size_bytes());\n-       } else {\n-         assert(!is_affiliated(), \"Don't make young unless OLD or not already affiliated\");\n+       ShenandoahHeap* heap = ShenandoahHeap::heap();\n+       if (heap->mode()->is_generational()) {\n+         if (is_old()) {\n+           heap->old_generation()->decrement_affiliated_region_count();\n+           heap->old_generation()->decrease_capacity(region_size_bytes());\n+         }\n+         heap->young_generation()->increment_affiliated_region_count();\n+         heap->young_generation()->increase_capacity(region_size_bytes());\n@@ -137,1 +143,0 @@\n-\n@@ -139,2 +144,0 @@\n-       ShenandoahHeap::heap()->young_generation()->increment_affiliated_region_count();\n-       ShenandoahHeap::heap()->young_generation()->increase_capacity(region_size_bytes());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"}]}