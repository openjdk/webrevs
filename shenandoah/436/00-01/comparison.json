{"files":[{"patch":"@@ -773,0 +773,1 @@\n+template<bool GENERATIONAL>\n@@ -776,1 +777,0 @@\n-\n@@ -778,3 +778,1 @@\n-  ShenandoahConcurrentEvacThreadClosure(OopClosure* oops);\n-  void do_thread(Thread* thread);\n-};\n+  explicit ShenandoahConcurrentEvacThreadClosure(OopClosure* oops) : _oops(oops) {}\n@@ -782,9 +780,6 @@\n-ShenandoahConcurrentEvacThreadClosure::ShenandoahConcurrentEvacThreadClosure(OopClosure* oops) :\n-  _oops(oops) {\n-}\n-\n-void ShenandoahConcurrentEvacThreadClosure::do_thread(Thread* thread) {\n-  JavaThread* const jt = JavaThread::cast(thread);\n-  StackWatermarkSet::finish_processing(jt, _oops, StackWatermarkKind::gc);\n-  if (ShenandoahHeap::heap()->mode()->is_generational()) {\n-    ShenandoahThreadLocalData::enable_plab_promotions(thread);\n+  void do_thread(Thread* thread) override {\n+    JavaThread* const jt = JavaThread::cast(thread);\n+    StackWatermarkSet::finish_processing(jt, _oops, StackWatermarkKind::gc);\n+    if (GENERATIONAL) {\n+      ShenandoahThreadLocalData::enable_plab_promotions(thread);\n+    }\n@@ -792,1 +787,1 @@\n-}\n+};\n@@ -794,0 +789,1 @@\n+template<bool GENERATIONAL>\n@@ -799,1 +795,1 @@\n-  ShenandoahConcurrentEvacUpdateThreadTask(uint n_workers) :\n+  explicit ShenandoahConcurrentEvacUpdateThreadTask(uint n_workers) :\n@@ -804,2 +800,2 @@\n-  void work(uint worker_id) {\n-    if (ShenandoahHeap::heap()->mode()->is_generational()) {\n+  void work(uint worker_id) override {\n+    if (GENERATIONAL) {\n@@ -813,1 +809,1 @@\n-    ShenandoahConcurrentEvacThreadClosure thr_cl(&oops_cl);\n+    ShenandoahConcurrentEvacThreadClosure<GENERATIONAL> thr_cl(&oops_cl);\n@@ -822,2 +818,7 @@\n-  ShenandoahConcurrentEvacUpdateThreadTask task(heap->workers()->active_workers());\n-  heap->workers()->run_task(&task);\n+  if (heap->mode()->is_generational()) {\n+    ShenandoahConcurrentEvacUpdateThreadTask<true> task(heap->workers()->active_workers());\n+    heap->workers()->run_task(&task);\n+  } else {\n+    ShenandoahConcurrentEvacUpdateThreadTask<false> task(heap->workers()->active_workers());\n+    heap->workers()->run_task(&task);\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -53,2 +53,2 @@\n-  \/\/ Age regions that haven't been used for allocations in the current cycle.\n-  \/\/ Reset ages for regions that have been used for allocations.\n+  \/\/ Ages regions that haven't been used for allocations in the current cycle.\n+  \/\/ Resets ages for regions that have been used for allocations.\n@@ -111,1 +111,1 @@\n-  \/\/ Balance generations, coalesce and fill old regions if necessary\n+  \/\/ Balances generations, coalesces and fills old regions if necessary\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}