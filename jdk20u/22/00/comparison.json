{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -904,1 +904,1 @@\n-                    } catch (InterruptedException e) {\n+                    } catch (InterruptedException | FileNotFoundException e) {\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/shell\/Win32ShellFolder2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,2 @@\n-            throws InterruptedException {\n+            throws InterruptedException, FileNotFoundException\n+    {\n@@ -116,0 +117,3 @@\n+                if (!parent.isDirectory()) {\n+                    throw new FileNotFoundException(\"not a directory\");\n+                }\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/shell\/Win32ShellFolderManager2.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4847375 8171363\n+ * @bug 4847375 8171363 8227257\n@@ -32,0 +32,2 @@\n+ * @run main\/othervm bug4847375\n+ * @run main\/othervm -ea -esa bug4847375\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/4847375\/bug4847375.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+\n+import javax.swing.filechooser.FileSystemView;\n+\n+\/*\n+ * @test\n+ * @bug 8227257\n+ * @requires (os.family == \"windows\")\n+ * @summary existing but inaccessible target for a link should be ignored\n+ * @run main\/othervm InaccessibleLink\n+ * @run main\/othervm -ea -esa InaccessibleLink\n+ *\/\n+public final class InaccessibleLink {\n+\n+    \/**\n+     * The link to the windows-update settings.\n+     *\/\n+    private static final byte[] bytes = {\n+            76, 0, 0, 0, 1, 20, 2, 0, 0, 0, 0, 0, -64, 0, 0, 0, 0, 0, 0, 70,\n+            -127, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n+            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 20, 0, 31, 104, -128, 83,\n+            28, -121, -96, 66, 105, 16, -94, -22, 8, 0, 43, 48, 48, -99, 62, 0,\n+            97, -128, 0, 0, 0, 0, 109, 0, 115, 0, 45, 0, 115, 0, 101, 0, 116, 0,\n+            116, 0, 105, 0, 110, 0, 103, 0, 115, 0, 58, 0, 119, 0, 105, 0, 110,\n+            0, 100, 0, 111, 0, 119, 0, 115, 0, 117, 0, 112, 0, 100, 0, 97, 0,\n+            116, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n+    };\n+\n+    public static void main(String[] args) throws IOException {\n+        File file = new File(\"inaccessible.lnk\");\n+        try {\n+            FileOutputStream fos = new FileOutputStream(file);\n+            fos.write(bytes);\n+            fos.close();\n+\n+            FileSystemView fsv = FileSystemView.getFileSystemView();\n+            if (!fsv.isLink(file)) {\n+                throw new RuntimeException(\"not a link\");\n+            }\n+            File linkLocation = fsv.getLinkLocation(file);\n+            if (linkLocation != null) {\n+                throw new RuntimeException(\n+                        \"location is not null: \" + linkLocation);\n+            }\n+        } finally {\n+            Files.deleteIfExists(file.toPath());\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/FileSystemView\/InaccessibleLink.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"}]}