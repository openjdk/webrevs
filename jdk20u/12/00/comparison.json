{"files":[{"patch":"@@ -324,1 +324,0 @@\n-#ifdef ASSERT\n@@ -327,1 +326,0 @@\n-#endif\n@@ -347,1 +345,0 @@\n-#ifdef ASSERT\n@@ -350,1 +347,0 @@\n-#endif\n@@ -370,1 +366,0 @@\n-#ifdef ASSERT\n@@ -373,1 +368,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/oops\/symbol.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,0 +121,7 @@\n+\n+TEST_VM_FATAL_ERROR_MSG(SymbolTable, test_symbol_underflow, \".*refcount has gone to zero.*\") {\n+  Symbol* my_symbol = SymbolTable::new_symbol(\"my_symbol2023\");\n+  EXPECT_TRUE(my_symbol->refcount() == 1) << \"Symbol refcount just created is 1\";\n+  my_symbol->decrement_refcount();\n+  my_symbol->increment_refcount();  \/\/ Should crash even in PRODUCT mode\n+}\n","filename":"test\/hotspot\/gtest\/classfile\/test_symbolTable.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}