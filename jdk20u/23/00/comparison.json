{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -4283,0 +4283,1 @@\n+    @SuppressWarnings(\"fallthrough\")\n@@ -4286,1 +4287,3 @@\n-        if (token.kind == TokenKind.IDENTIFIER && token.name() != enumName &&\n+        boolean ident = token.kind == TokenKind.IDENTIFIER ||\n+                        token.kind == TokenKind.UNDERSCORE;\n+        if (ident && token.name() != enumName &&\n@@ -4295,5 +4298,3 @@\n-            case IDENTIFIER: case MONKEYS_AT: case LT:\n-                if (token.kind == IDENTIFIER) {\n-                    if (allowRecords && isRecordStart()) {\n-                        return EnumeratorEstimate.MEMBER;\n-                    }\n+            case IDENTIFIER:\n+                if (allowRecords && isRecordStart()) {\n+                    return EnumeratorEstimate.MEMBER;\n@@ -4301,0 +4302,1 @@\n+            case MONKEYS_AT: case LT: case UNDERSCORE:\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436 8267221 8271928 8275097 8293897 8295401\n+ * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436 8267221 8271928 8275097 8293897 8295401 8304671\n@@ -2066,0 +2066,177 @@\n+    @Test \/\/JDK-8304671\n+    void testEnumConstantUnderscore() throws IOException {\n+        record TestCase(String code, String release, String ast, String errors) {}\n+        TestCase[] testCases = new TestCase[] {\n+            new TestCase(\"\"\"\n+                         package t;\n+                         enum Test {\n+                             _\n+                         }\n+                         \"\"\",\n+                         \"8\",\n+                         \"\"\"\n+                         package t;\n+                         \\n\\\n+                         enum Test {\n+                             \/*public static final*\/ _ \/* = new Test() *\/ \/*enum*\/ ;\n+                         } \"\"\",\n+                         \"\"\"\n+                         - compiler.warn.option.obsolete.source: 8\n+                         - compiler.warn.option.obsolete.target: 8\n+                         - compiler.warn.option.obsolete.suppression\n+                         Test.java:3:5: compiler.warn.underscore.as.identifier\n+                         \"\"\"),\n+            new TestCase(\"\"\"\n+                         package t;\n+                         enum Test {\n+                             _\n+                         }\n+                         \"\"\",\n+                         System.getProperty(\"java.specification.version\"),\n+                         \"\"\"\n+                         package t;\n+                         \\n\\\n+                         enum Test {\n+                             \/*public static final*\/ _ \/* = new Test() *\/ \/*enum*\/ ;\n+                         } \"\"\",\n+                         \"\"\"\n+                         Test.java:3:5: compiler.err.underscore.as.identifier\n+                         \"\"\"),\n+            new TestCase(\"\"\"\n+                         package t;\n+                         enum Test {\n+                             _;\n+                         }\n+                         \"\"\",\n+                         \"8\",\n+                         \"\"\"\n+                         package t;\n+                         \\n\\\n+                         enum Test {\n+                             \/*public static final*\/ _ \/* = new Test() *\/ \/*enum*\/ ;\n+                         } \"\"\",\n+                         \"\"\"\n+                         - compiler.warn.option.obsolete.source: 8\n+                         - compiler.warn.option.obsolete.target: 8\n+                         - compiler.warn.option.obsolete.suppression\n+                         Test.java:3:5: compiler.warn.underscore.as.identifier\n+                         \"\"\"),\n+            new TestCase(\"\"\"\n+                         package t;\n+                         enum Test {\n+                             _;\n+                         }\n+                         \"\"\",\n+                         System.getProperty(\"java.specification.version\"),\n+                         \"\"\"\n+                         package t;\n+                         \\n\\\n+                         enum Test {\n+                             \/*public static final*\/ _ \/* = new Test() *\/ \/*enum*\/ ;\n+                         } \"\"\",\n+                         \"\"\"\n+                         Test.java:3:5: compiler.err.underscore.as.identifier\n+                         \"\"\"),\n+            new TestCase(\"\"\"\n+                         package t;\n+                         enum Test {\n+                             A;\n+                             void t() {}\n+                             _;\n+                         }\n+                         \"\"\",\n+                         \"8\",\n+                         \"\"\"\n+                         package t;\n+                         \\n\\\n+                         enum Test {\n+                             \/*public static final*\/ A \/* = new Test() *\/ \/*enum*\/ ,\n+                             \/*public static final*\/ _ \/* = new Test() *\/ \/*enum*\/ ;\n+                             \\n\\\n+                             void t() {\n+                             }\n+                         } \"\"\",\n+                         \"\"\"\n+                         - compiler.warn.option.obsolete.source: 8\n+                         - compiler.warn.option.obsolete.target: 8\n+                         - compiler.warn.option.obsolete.suppression\n+                         Test.java:5:5: compiler.err.enum.constant.not.expected\n+                         Test.java:5:5: compiler.warn.underscore.as.identifier\n+                         \"\"\"),\n+            new TestCase(\"\"\"\n+                         package t;\n+                         enum Test {\n+                             A;\n+                             void t() {}\n+                             _;\n+                         }\n+                         \"\"\",\n+                         System.getProperty(\"java.specification.version\"),\n+                         \"\"\"\n+                         package t;\n+                         \\n\\\n+                         enum Test {\n+                             \/*public static final*\/ A \/* = new Test() *\/ \/*enum*\/ ,\n+                             \/*public static final*\/ _ \/* = new Test() *\/ \/*enum*\/ ;\n+                             \\n\\\n+                             void t() {\n+                             }\n+                         } \"\"\",\n+                         \"\"\"\n+                         Test.java:5:5: compiler.err.enum.constant.not.expected\n+                         \"\"\"),\n+            new TestCase(\"\"\"\n+                         package t;\n+                         enum Test {\n+                             _ {},\n+                             A;\n+                         }\n+                         \"\"\",\n+                         \"8\",\n+                         \"\"\"\n+                         package t;\n+                         \\n\\\n+                         enum Test {\n+                             \/*public static final*\/ _ \/* = new Test() *\/ \/*enum*\/  {\n+                             },\n+                             \/*public static final*\/ A \/* = new Test() *\/ \/*enum*\/ ;\n+                         } \"\"\",\n+                         \"\"\"\n+                         - compiler.warn.option.obsolete.source: 8\n+                         - compiler.warn.option.obsolete.target: 8\n+                         - compiler.warn.option.obsolete.suppression\n+                         Test.java:3:5: compiler.warn.underscore.as.identifier\n+                         \"\"\"),\n+            new TestCase(\"\"\"\n+                         package t;\n+                         enum Test {\n+                             _ {},\n+                             A;\n+                         }\n+                         \"\"\",\n+                         System.getProperty(\"java.specification.version\"),\n+                         \"\"\"\n+                         package t;\n+                         \\n\\\n+                         enum Test {\n+                             \/*public static final*\/ _ \/* = new Test() *\/ \/*enum*\/  {\n+                             },\n+                             \/*public static final*\/ A \/* = new Test() *\/ \/*enum*\/ ;\n+                         } \"\"\",\n+                         \"\"\"\n+                         Test.java:3:5: compiler.err.underscore.as.identifier\n+                         \"\"\"),\n+        };\n+        for (TestCase testCase : testCases) {\n+            StringWriter out = new StringWriter();\n+            JavacTaskImpl ct = (JavacTaskImpl) tool.getTask(out, fm, null,\n+                    List.of(\"-XDrawDiagnostics\", \"--release\", testCase.release),\n+                    null, Arrays.asList(new MyFileObject(testCase.code)));\n+            String ast = ct.parse().iterator().next().toString().replaceAll(\"\\\\R\", \"\\n\");\n+            assertEquals(\"Unexpected AST, got:\\n\" + ast, testCase.ast, ast);\n+            assertEquals(\"Unexpected errors, got:\\n\" + out.toString(),\n+                         out.toString().replaceAll(\"\\\\R\", \"\\n\"),\n+                         testCase.errors);\n+        }\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/parser\/JavacParserTest.java","additions":179,"deletions":2,"binary":false,"changes":181,"status":"modified"}]}