{"files":[{"patch":"@@ -1009,2 +1009,2 @@\n-    log_debug(gc)(\"Using new region (\" SIZE_FORMAT \") for %s (\" PTR_FORMAT \").\",\n-                       r->index(), ShenandoahAllocRequest::alloc_type_to_string(req.type()), p2i(&req));\n+    log_debug(gc, free)(\"Using new region (\" SIZE_FORMAT \") for %s (\" PTR_FORMAT \").\",\n+                        r->index(), ShenandoahAllocRequest::alloc_type_to_string(req.type()), p2i(&req));\n@@ -1030,2 +1030,2 @@\n-    log_debug(gc)(\"Using new region (\" SIZE_FORMAT \") for %s (\" PTR_FORMAT \").\",\n-                       r->index(), ShenandoahAllocRequest::alloc_type_to_string(req.type()), p2i(&req));\n+    log_debug(gc, free)(\"Using new region (\" SIZE_FORMAT \") for %s (\" PTR_FORMAT \").\",\n+                        r->index(), ShenandoahAllocRequest::alloc_type_to_string(req.type()), p2i(&req));\n@@ -1463,17 +1463,17 @@\n-  log_debug(gc)(\"  At end of prep_to_rebuild, mutator_leftmost: \" SIZE_FORMAT\n-                \", mutator_rightmost: \" SIZE_FORMAT\n-                \", mutator_leftmost_empty: \" SIZE_FORMAT\n-                \", mutator_rightmost_empty: \" SIZE_FORMAT\n-                \", mutator_regions: \" SIZE_FORMAT\n-                \", mutator_used: \" SIZE_FORMAT,\n-                mutator_leftmost, mutator_rightmost, mutator_leftmost_empty, mutator_rightmost_empty,\n-                mutator_regions, mutator_used);\n-\n-  log_debug(gc)(\"  old_collector_leftmost: \" SIZE_FORMAT\n-                \", old_collector_rightmost: \" SIZE_FORMAT\n-                \", old_collector_leftmost_empty: \" SIZE_FORMAT\n-                \", old_collector_rightmost_empty: \" SIZE_FORMAT\n-                \", old_collector_regions: \" SIZE_FORMAT\n-                \", old_collector_used: \" SIZE_FORMAT,\n-                old_collector_leftmost, old_collector_rightmost, old_collector_leftmost_empty, old_collector_rightmost_empty,\n-                old_collector_regions, old_collector_used);\n+  log_debug(gc, free)(\"  At end of prep_to_rebuild, mutator_leftmost: \" SIZE_FORMAT\n+                      \", mutator_rightmost: \" SIZE_FORMAT\n+                      \", mutator_leftmost_empty: \" SIZE_FORMAT\n+                      \", mutator_rightmost_empty: \" SIZE_FORMAT\n+                      \", mutator_regions: \" SIZE_FORMAT\n+                      \", mutator_used: \" SIZE_FORMAT,\n+                      mutator_leftmost, mutator_rightmost, mutator_leftmost_empty, mutator_rightmost_empty,\n+                      mutator_regions, mutator_used);\n+\n+  log_debug(gc, free)(\"  old_collector_leftmost: \" SIZE_FORMAT\n+                      \", old_collector_rightmost: \" SIZE_FORMAT\n+                      \", old_collector_leftmost_empty: \" SIZE_FORMAT\n+                      \", old_collector_rightmost_empty: \" SIZE_FORMAT\n+                      \", old_collector_regions: \" SIZE_FORMAT\n+                      \", old_collector_used: \" SIZE_FORMAT,\n+                      old_collector_leftmost, old_collector_rightmost, old_collector_leftmost_empty, old_collector_rightmost_empty,\n+                      old_collector_regions, old_collector_used);\n@@ -1489,6 +1489,6 @@\n-  log_debug(gc)(\"  After find_regions_with_alloc_capacity(), Mutator range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"],\"\n-                \"  Old Collector range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"]\",\n-                _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator),\n-                _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator),\n-                _partitions.leftmost(ShenandoahFreeSetPartitionId::OldCollector),\n-                _partitions.rightmost(ShenandoahFreeSetPartitionId::OldCollector));\n+  log_debug(gc, free)(\"  After find_regions_with_alloc_capacity(), Mutator range [%zd, %zd],\"\n+                      \"  Old Collector range [%zd, %zd]\",\n+                      _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator),\n+                      _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator),\n+                      _partitions.leftmost(ShenandoahFreeSetPartitionId::OldCollector),\n+                      _partitions.rightmost(ShenandoahFreeSetPartitionId::OldCollector));\n@@ -1505,1 +1505,0 @@\n-  idx_t rightmost = _partitions.rightmost_empty(which_collector);\n@@ -1751,7 +1750,7 @@\n-        log_debug(gc)(\"  Shifting region \" SIZE_FORMAT \" from mutator_free to old_collector_free\", idx);\n-        log_debug(gc)(\"  Shifted Mutator range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"],\"\n-                      \"  Old Collector range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"]\",\n-                      _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator),\n-                      _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator),\n-                      _partitions.leftmost(ShenandoahFreeSetPartitionId::OldCollector),\n-                      _partitions.rightmost(ShenandoahFreeSetPartitionId::OldCollector));\n+        log_trace(gc, free)(\"  Shifting region \" SIZE_FORMAT \" from mutator_free to old_collector_free\", idx);\n+        log_trace(gc, free)(\"  Shifted Mutator range [%zd, %zd],\"\n+                            \"  Old Collector range [%zd, %zd]\",\n+                            _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator),\n+                            _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator),\n+                            _partitions.leftmost(ShenandoahFreeSetPartitionId::OldCollector),\n+                            _partitions.rightmost(ShenandoahFreeSetPartitionId::OldCollector));\n@@ -1774,7 +1773,7 @@\n-      log_debug(gc)(\"  Shifting region \" SIZE_FORMAT \" from mutator_free to collector_free\", idx);\n-      log_debug(gc)(\"  Shifted Mutator range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"],\"\n-                    \"  Collector range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"]\",\n-                    _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator),\n-                    _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator),\n-                    _partitions.leftmost(ShenandoahFreeSetPartitionId::Collector),\n-                    _partitions.rightmost(ShenandoahFreeSetPartitionId::Collector));\n+      log_trace(gc, free)(\"  Shifting region \" SIZE_FORMAT \" from mutator_free to collector_free\", idx);\n+      log_trace(gc, free)(\"  Shifted Mutator range [%zd, %zd],\"\n+                          \"  Collector range [%zd, %zd]\",\n+                          _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator),\n+                          _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator),\n+                          _partitions.leftmost(ShenandoahFreeSetPartitionId::Collector),\n+                          _partitions.rightmost(ShenandoahFreeSetPartitionId::Collector));\n@@ -1792,2 +1791,2 @@\n-      log_debug(gc)(\"Wanted \" PROPERFMT \" for young reserve, but only reserved: \" PROPERFMT,\n-                    PROPERFMTARGS(to_reserve), PROPERFMTARGS(reserve));\n+      log_info(gc, free)(\"Wanted \" PROPERFMT \" for young reserve, but only reserved: \" PROPERFMT,\n+                          PROPERFMTARGS(to_reserve), PROPERFMTARGS(reserve));\n@@ -1844,1 +1843,2 @@\n-  if (LogTarget(Debug, gc, free)::is_enabled()) {\n+  LogTarget(Debug, gc, free) debug_free;\n+  if (debug_free.is_enabled()) {\n@@ -1846,0 +1846,1 @@\n+    LogStream ls(debug_free);\n@@ -1852,14 +1853,19 @@\n-    log_debug(gc)(\"FreeSet map legend:\"\n-                       \" M:mutator_free C:collector_free O:old_collector_free\"\n-                       \" H:humongous ~:retired old _:retired young\");\n-    log_debug(gc)(\" mutator free range [\" SIZE_FORMAT \"..\" SIZE_FORMAT \"] allocating from %s, \"\n-                  \" collector free range [\" SIZE_FORMAT \"..\" SIZE_FORMAT \"], \"\n-                  \"old collector free range [\" SIZE_FORMAT \"..\" SIZE_FORMAT \"] allocates from %s\",\n-                  _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator),\n-                  _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator),\n-                  _partitions.alloc_from_left_bias(ShenandoahFreeSetPartitionId::Mutator)? \"left to right\": \"right to left\",\n-                  _partitions.leftmost(ShenandoahFreeSetPartitionId::Collector),\n-                  _partitions.rightmost(ShenandoahFreeSetPartitionId::Collector),\n-                  _partitions.leftmost(ShenandoahFreeSetPartitionId::OldCollector),\n-                  _partitions.rightmost(ShenandoahFreeSetPartitionId::OldCollector),\n-                  _partitions.alloc_from_left_bias(ShenandoahFreeSetPartitionId::OldCollector)? \"left to right\": \"right to left\");\n+    ls.cr();\n+    ls.print_cr(\"Mutator free range [%zd..%zd] allocating from %s\",\n+                _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator),\n+                _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator),\n+                _partitions.alloc_from_left_bias(ShenandoahFreeSetPartitionId::Mutator)? \"left to right\": \"right to left\");\n+\n+    ls.print_cr(\"Collector free range [%zd..%zd] allocating from %s\",\n+                _partitions.leftmost(ShenandoahFreeSetPartitionId::Collector),\n+                _partitions.rightmost(ShenandoahFreeSetPartitionId::Collector),\n+                _partitions.alloc_from_left_bias(ShenandoahFreeSetPartitionId::Collector)? \"left to right\": \"right to left\");\n+\n+    ls.print_cr(\"Old collector free range [%zd..%zd] allocates from %s\",\n+                _partitions.leftmost(ShenandoahFreeSetPartitionId::OldCollector),\n+                _partitions.rightmost(ShenandoahFreeSetPartitionId::OldCollector),\n+                _partitions.alloc_from_left_bias(ShenandoahFreeSetPartitionId::OldCollector)? \"left to right\": \"right to left\");\n+    ls.cr();\n+    ls.print_cr(\"FreeSet map legend:\");\n+    ls.print_cr(\" M\/m:mutator, C\/c:collector O\/o:old_collector (Empty\/Occupied)\");\n+    ls.print_cr(\" H\/h:humongous, X\/x:no alloc capacity, ~\/_:retired (Old\/Young)\");\n@@ -1871,1 +1877,1 @@\n-        log_debug(gc)(\" %6u: %s\", i-64, buffer);\n+        ls.print_cr(\" %6u: %s\", i-64, buffer);\n@@ -1885,5 +1891,3 @@\n-        if (r->is_old()) {\n-          buffer[idx] = 'H';\n-        } else {\n-          buffer[idx] = 'h';\n-        }\n+        buffer[idx] = (r->is_old() ? 'H' : 'h');\n+      } else if (alloc_capacity(r) == 0) {\n+        buffer[idx] = (r->is_old() ? 'X' : 'x');\n@@ -1891,5 +1895,1 @@\n-        if (r->is_old()) {\n-          buffer[idx] = '~';\n-        } else {\n-          buffer[idx] = '_';\n-        }\n+        buffer[idx] = (r->is_old() ? '~' : '_');\n@@ -1904,1 +1904,1 @@\n-    log_debug(gc)(\" %6u: %s\", (uint) (_heap->num_regions() - remnant), buffer);\n+    ls.print_cr(\" %6u: %s\", (uint) (_heap->num_regions() - remnant), buffer);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":71,"deletions":71,"binary":false,"changes":142,"status":"modified"}]}