{"files":[{"patch":"@@ -620,5 +620,2 @@\n-    if (_generation->is_young() || (_generation->is_global() && ShenandoahVerify)) {\n-      \/\/ The current implementation of swap_remembered_set() copies the write-card-table\n-      \/\/ to the read-card-table. The remembered sets are also swapped for GLOBAL collections\n-      \/\/ so that the verifier works with the correct copy of the card table when verifying.\n-      \/\/ TODO: This path should not really depend on ShenandoahVerify.\n+    if (_generation->is_young()) {\n+      \/\/ The current implementation of swap_remembered_set() copies the write-card-table to the read-card-table.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -136,4 +136,2 @@\n-      if (heap->mode()->is_generational() &&\n-            (_generation->is_young() || (_generation->is_global() && ShenandoahVerify))) {\n-        \/\/ Swap remembered sets for young, or if the verifier will run during a global collect\n-        \/\/ TODO: This path should not depend on ShenandoahVerify\n+      if (heap->mode()->is_generational() && _generation->is_young()) {\n+        \/\/ Swap remembered sets for young\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}