{"files":[{"patch":"@@ -285,1 +285,4 @@\n-    Handshake::execute(&flush_satb);\n+    {\n+      ShenandoahTimingsTracker t(ShenandoahPhaseTimings::conc_mark_satb_flush, true);\n+      Handshake::execute(&flush_satb);\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -145,1 +145,5 @@\n-void ShenandoahPhaseTimings::set_cycle_data(Phase phase, double time) {\n+void ShenandoahPhaseTimings::set_cycle_data(Phase phase, double time, bool should_aggregate) {\n+  const double cycle_data = _cycle_data[phase];\n+  if (should_aggregate) {\n+    _cycle_data[phase] = (cycle_data == uninitialized()) ? time :  (cycle_data + time);\n+  } else {\n@@ -147,2 +151,1 @@\n-  double d = _cycle_data[phase];\n-  assert(d == uninitialized(), \"Should not be set yet: %s, current value: %lf\", phase_name(phase), d);\n+    assert(cycle_data == uninitialized(), \"Should not be set yet: %s, current value: %lf\", phase_name(phase), cycle_data);\n@@ -150,1 +153,2 @@\n-  _cycle_data[phase] = time;\n+    _cycle_data[phase] = time;\n+  }\n@@ -153,1 +157,1 @@\n-void ShenandoahPhaseTimings::record_phase_time(Phase phase, double time) {\n+void ShenandoahPhaseTimings::record_phase_time(Phase phase, double time, bool should_aggregate) {\n@@ -155,1 +159,1 @@\n-    set_cycle_data(phase, time);\n+    set_cycle_data(phase, time, should_aggregate);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+  f(conc_mark_satb_flush,                           \"  Flush SATB\")                    \\\n@@ -234,1 +235,1 @@\n-  void set_cycle_data(Phase phase, double time);\n+  void set_cycle_data(Phase phase, double time, bool should_aggregate = false);\n@@ -240,1 +241,1 @@\n-  void record_phase_time(Phase phase, double time);\n+  void record_phase_time(Phase phase, double time, bool should_aggregate = false);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -116,2 +116,2 @@\n-ShenandoahTimingsTracker::ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase) :\n-  _timings(ShenandoahHeap::heap()->phase_timings()), _phase(phase) {\n+ShenandoahTimingsTracker::ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase, bool should_aggregate) :\n+  _timings(ShenandoahHeap::heap()->phase_timings()), _phase(phase), _should_aggregate(should_aggregate) {\n@@ -126,1 +126,1 @@\n-  _timings->record_phase_time(_phase, os::elapsedTime() - _start);\n+  _timings->record_phase_time(_phase, os::elapsedTime() - _start, _should_aggregate);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -85,0 +85,1 @@\n+  const bool                            _should_aggregate;\n@@ -89,1 +90,1 @@\n-  ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase);\n+  ShenandoahTimingsTracker(ShenandoahPhaseTimings::Phase phase, bool should_aggregate = false);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}