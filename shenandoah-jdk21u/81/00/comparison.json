{"files":[{"patch":"@@ -34,0 +34,2 @@\n+#include \"gc\/shenandoah\/shenandoahEvacInfo.hpp\"\n+#include \"gc\/shenandoah\/shenandoahTrace.hpp\"\n@@ -76,0 +78,4 @@\n+  \/\/ This counts bytes of memory free in regular regions to be promoted in place.\n+  size_t regular_regions_promoted_free = 0;\n+  \/\/ This counts bytes of garbage memory in regular regions to be promoted in place.\n+  size_t regular_regions_promoted_garbage = 0;\n@@ -113,0 +119,2 @@\n+            regular_regions_promoted_free += region->free();\n+            regular_regions_promoted_garbage += region->garbage();\n@@ -220,0 +228,17 @@\n+\n+    ShenandoahEvacInfo evacInfo;\n+    evacInfo.set_collection_set_regions(collection_set->count());\n+    evacInfo.set_collection_set_used_before(collection_set->used());\n+    evacInfo.set_collection_set_used_after(collection_set->live());\n+    evacInfo.set_collected_old(old_evac_bytes);\n+    evacInfo.set_collected_promoted(promote_evac_bytes);\n+    evacInfo.set_collected_young(young_evac_bytes);\n+    evacInfo.set_regions_promoted_humongous(humongous_regions_promoted);\n+    evacInfo.set_regions_promoted_regular(regular_regions_promoted_in_place);\n+    evacInfo.set_regular_promoted_garbage(regular_regions_promoted_garbage);\n+    evacInfo.set_regular_promoted_free(regular_regions_promoted_free);\n+    evacInfo.set_regions_immediate(immediate_regions);\n+    evacInfo.set_immediate_size(immediate_garbage);\n+    evacInfo.set_regions_freed(free_regions);\n+\n+    ShenandoahTracer().report_evacuation_info(&evacInfo);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"gc\/shenandoah\/shenandoahTrace.hpp\"\n@@ -35,5 +36,0 @@\n-class ShenandoahTracer : public GCTracer, public CHeapObj<mtGC> {\n-public:\n-  ShenandoahTracer() : GCTracer(Shenandoah) {}\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -348,1 +348,1 @@\n-  static const char* msg = \"Pause Final Roots\";\n+  const char* msg = final_roots_event_message();\n@@ -361,1 +361,1 @@\n-    static const char* msg = \"Concurrent reset\";\n+    const char* msg = conc_reset_event_message();\n@@ -446,1 +446,1 @@\n-  static const char* msg = \"Concurrent weak references\";\n+  const char* msg = conc_weak_refs_event_message();\n@@ -461,1 +461,1 @@\n-  static const char* msg = \"Concurrent weak roots\";\n+  const char* msg = conc_weak_roots_event_message();\n@@ -508,1 +508,1 @@\n-  static const char* msg = \"Concurrent cleanup\";\n+  const char* msg = conc_cleanup_event_message();\n@@ -564,1 +564,1 @@\n-  static const char* msg = \"Concurrent cleanup\";\n+  const char* msg = conc_cleanup_event_message();\n@@ -1261,0 +1261,40 @@\n+\n+const char* ShenandoahConcurrentGC::conc_reset_event_message() const {\n+  if (ShenandoahHeap::heap()->unload_classes()) {\n+    SHENANDOAH_RETURN_EVENT_MESSAGE(_generation->type(), \"Concurrent reset\", \" (unload classes)\");\n+  } else {\n+    SHENANDOAH_RETURN_EVENT_MESSAGE(_generation->type(), \"Concurrent reset\", \"\");\n+  }\n+}\n+\n+const char* ShenandoahConcurrentGC::final_roots_event_message() const {\n+  if (ShenandoahHeap::heap()->unload_classes()) {\n+    SHENANDOAH_RETURN_EVENT_MESSAGE(_generation->type(), \"Pause Final Roots\", \" (unload classes)\");\n+  } else {\n+    SHENANDOAH_RETURN_EVENT_MESSAGE(_generation->type(), \"Pause Final Roots\", \"\");\n+  }\n+}\n+\n+const char* ShenandoahConcurrentGC::conc_weak_refs_event_message() const {\n+  if (ShenandoahHeap::heap()->unload_classes()) {\n+    SHENANDOAH_RETURN_EVENT_MESSAGE(_generation->type(), \"Concurrent weak references\", \" (unload classes)\");\n+  } else {\n+    SHENANDOAH_RETURN_EVENT_MESSAGE(_generation->type(), \"Concurrent weak references\", \"\");\n+  }\n+}\n+\n+const char* ShenandoahConcurrentGC::conc_weak_roots_event_message() const {\n+  if (ShenandoahHeap::heap()->unload_classes()) {\n+    SHENANDOAH_RETURN_EVENT_MESSAGE(_generation->type(), \"Concurrent weak roots\", \" (unload classes)\");\n+  } else {\n+    SHENANDOAH_RETURN_EVENT_MESSAGE(_generation->type(), \"Concurrent weak roots\", \"\");\n+  }\n+}\n+\n+const char* ShenandoahConcurrentGC::conc_cleanup_event_message() const {\n+  if (ShenandoahHeap::heap()->unload_classes()) {\n+    SHENANDOAH_RETURN_EVENT_MESSAGE(_generation->type(), \"Concurrent cleanup\", \" (unload classes)\");\n+  } else {\n+    SHENANDOAH_RETURN_EVENT_MESSAGE(_generation->type(), \"Concurrent cleanup\", \"\");\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":46,"deletions":6,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -142,0 +142,1 @@\n+  const char* final_roots_event_message() const;\n@@ -143,0 +144,4 @@\n+  const char* conc_reset_event_message() const;\n+  const char* conc_weak_refs_event_message() const;\n+  const char* conc_weak_roots_event_message() const;\n+  const char* conc_cleanup_event_message() const;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_GC_SHENANDOAH_SHENANDOAHEVACINFO_HPP\n+#define SHARE_GC_SHENANDOAH_SHENANDOAHEVACINFO_HPP\n+\n+#include \"memory\/allocation.hpp\"\n+\n+class ShenandoahEvacInfo : public StackObj {\n+  \/\/ Values for ShenandoahEvacInfo jfr event, sizes stored as bytes\n+  size_t _collection_set_regions;\n+  size_t _collection_set_used_before;\n+  size_t _collection_set_used_after;\n+  size_t _collected_old;\n+  size_t _collected_promoted;\n+  size_t _collected_young;\n+  size_t _regions_promoted_humongous;\n+  size_t _regions_promoted_regular;\n+  size_t _regular_promoted_garbage;\n+  size_t _regular_promoted_free;\n+  size_t _regions_freed;\n+  size_t _regions_immediate;\n+  size_t _immediate_size;\n+\n+public:\n+  ShenandoahEvacInfo() :\n+    _collection_set_regions(0), _collection_set_used_before(0), _collection_set_used_after(0),\n+    _collected_old(0), _collected_promoted(0), _collected_young(0), _regions_promoted_humongous(0),\n+    _regions_promoted_regular(0), _regular_promoted_garbage(0), _regular_promoted_free(0),\n+    _regions_freed(0), _regions_immediate(0), _immediate_size(0) { }\n+\n+  void set_collection_set_regions(size_t collection_set_regions) {\n+    _collection_set_regions = collection_set_regions;\n+  }\n+\n+  void set_collection_set_used_before(size_t used) {\n+    _collection_set_used_before = used;\n+  }\n+\n+  void set_collection_set_used_after(size_t used) {\n+    _collection_set_used_after = used;\n+  }\n+\n+  void set_collected_old(size_t collected) {\n+    _collected_old = collected;\n+  }\n+\n+  void set_collected_promoted(size_t collected) {\n+    _collected_promoted = collected;\n+  }\n+\n+  void set_collected_young(size_t collected) {\n+    _collected_young = collected;\n+  }\n+\n+  void set_regions_freed(size_t freed) {\n+    _regions_freed = freed;\n+  }\n+\n+  void set_regions_promoted_humongous(size_t humongous) {\n+    _regions_promoted_humongous = humongous;\n+  }\n+\n+  void set_regions_promoted_regular(size_t regular) {\n+    _regions_promoted_regular = regular;\n+  }\n+\n+  void set_regular_promoted_garbage(size_t garbage) {\n+    _regular_promoted_garbage = garbage;\n+  }\n+\n+  void set_regular_promoted_free(size_t free) {\n+    _regular_promoted_free = free;\n+  }\n+\n+  void set_regions_immediate(size_t immediate) {\n+    _regions_immediate = immediate;\n+  }\n+\n+  void set_immediate_size(size_t size) {\n+    _immediate_size = size;\n+  }\n+\n+  size_t collection_set_regions()     { return _collection_set_regions; }\n+  size_t collection_set_used_before() { return _collection_set_used_before; }\n+  size_t collection_set_used_after()  { return _collection_set_used_after; }\n+  size_t collected_old()              { return _collected_old; }\n+  size_t collected_promoted()         { return _collected_promoted; }\n+  size_t collected_young()            { return _collected_young; }\n+  size_t regions_promoted_humongous() { return _regions_promoted_humongous; }\n+  size_t regions_promoted_regular()   { return _regions_promoted_regular; }\n+  size_t regular_promoted_garbage()   { return _regular_promoted_garbage; }\n+  size_t regular_promoted_free()      { return _regular_promoted_free; }\n+  size_t regions_freed()              { return _regions_freed; }\n+  size_t regions_immediate()          { return _regions_immediate; }\n+  size_t immediate_size()             { return _immediate_size; }\n+};\n+\n+#endif \/\/ SHARE_GC_SHENANDOAH_SHENANDOAHEVACINFO_HPP\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahEvacInfo.hpp","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"gc\/shenandoah\/shenandoahEvacInfo.hpp\"\n+#include \"gc\/shenandoah\/shenandoahTrace.hpp\"\n+#include \"jfr\/jfrEvents.hpp\"\n+\n+void ShenandoahTracer::report_evacuation_info(ShenandoahEvacInfo* info) {\n+  send_evacuation_info_event(info);\n+}\n+\n+void ShenandoahTracer::send_evacuation_info_event(ShenandoahEvacInfo* info) {\n+  EventShenandoahEvacInfo e;\n+  if (e.should_commit()) {\n+    e.set_gcId(GCId::current());\n+    e.set_cSetRegions(info->collection_set_regions());\n+    e.set_cSetUsedBefore(info->collection_set_used_before());\n+    e.set_cSetUsedAfter(info->collection_set_used_after());\n+    e.set_collectedOld(info->collected_old());\n+    e.set_collectedPromoted(info->collected_promoted());\n+    e.set_collectedYoung(info->collected_young());\n+    e.set_regionsPromotedHumongous(info->regions_promoted_humongous());\n+    e.set_regionsPromotedRegular(info->regions_promoted_regular());\n+    e.set_regularPromotedGarbage(info->regular_promoted_garbage());\n+    e.set_regularPromotedFree(info->regular_promoted_free());\n+    e.set_regionsFreed(info->regions_freed());\n+    e.set_regionsImmediate(info->regions_immediate());\n+    e.set_immediateBytes(info->immediate_size());\n+\n+    e.commit();\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTrace.cpp","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_GC_SHENANDOAH_SHENANDOAHTRACE_HPP\n+#define SHARE_GC_SHENANDOAH_SHENANDOAHTRACE_HPP\n+\n+#include \"gc\/shared\/gcTrace.hpp\"\n+#include \"memory\/allocation.hpp\"\n+\n+class ShenandoahEvacInfo;\n+\n+class ShenandoahTracer : public GCTracer, public CHeapObj<mtGC> {\n+public:\n+  ShenandoahTracer() : GCTracer(Shenandoah) {}\n+  void report_evacuation_info(ShenandoahEvacInfo* info);\n+\n+private:\n+  void send_evacuation_info_event(ShenandoahEvacInfo* info);\n+};\n+\n+#endif\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTrace.hpp","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -1181,0 +1181,17 @@\n+  <Event name=\"ShenandoahEvacInfo\" category=\"Java Virtual Machine, GC, Detailed\" label=\"Shenandoah Evacuation Information\" startTime=\"false\">\n+    <Field type=\"uint\" name=\"gcId\" label=\"GC Identifier\" relation=\"GcId\" \/>\n+    <Field type=\"ulong\" name=\"cSetRegions\" label=\"Collection Set Regions\" \/>\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"cSetUsedBefore\" label=\"Collection Set Before\" description=\"Memory usage before GC in the collection set regions\" \/>\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"cSetUsedAfter\" label=\"Collection Set After\" description=\"Memory usage after GC in the collection set regions\" \/>\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"collectedOld\" label=\"Collected Old\" description=\"Memory collected from old generation\" \/>\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"collectedPromoted\" label=\"Collected Promoted\" description=\"Memory collected from generation promotion\" \/>\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"collectedYoung\" label=\"Collection Young\" description=\"Memory collected from young generation\" \/>\n+    <Field type=\"ulong\" name=\"regionsPromotedHumongous\" label=\"Regions Promoted Humongous\" \/>\n+    <Field type=\"ulong\" name=\"regionsPromotedRegular\" label=\"Regions Promoted Regular\" \/>\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"regularPromotedGarbage\" label=\"Regular Promoted Garbage\" description=\"Garbage memory of in place promoted regular regions\" \/>\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"regularPromotedFree\" label=\"Regular Promoted Free\" description=\"Free memory of in place promoted regular regions\" \/>\n+    <Field type=\"ulong\" name=\"regionsFreed\" label=\"Regions Freed\" description=\"Free regions prior to determining collection set\" \/>\n+    <Field type=\"ulong\" name=\"regionsImmediate\" label=\"Regions Immediate\" \/>\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"immediateBytes\" label=\"Immediate Bytes\" \/>\n+  <\/Event>\n+  \n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -529,0 +529,4 @@\n+    <event name=\"jdk.ShenandoahEvacInfo\">\n+      <setting name=\"enabled\" control=\"gc-enabled-high\">false<\/setting>\n+    <\/event>\n+\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -529,0 +529,4 @@\n+    <event name=\"jdk.ShenandoahEvacInfo\">\n+      <setting name=\"enabled\" control=\"gc-enabled-high\">false<\/setting>\n+    <\/event>\n+\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}