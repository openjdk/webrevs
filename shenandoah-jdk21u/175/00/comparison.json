{"files":[{"patch":"@@ -1231,5 +1231,3 @@\n-    \/\/ Resetting bitmaps of young gen when bootstrap old GC or there is preempted old GC\n-    \/\/ causes crash due to remembered set violation, hence condition is added to fix the crash.\n-    \/\/ Assuming bitmaps of young gen are not used at all after the cycle, the crash should not\n-    \/\/ have happend, it seems to tickle a bug in remembered set scan. Root causing and fixing of the bug\n-    \/\/ will be tracked via ticket https:\/\/bugs.openjdk.org\/browse\/JDK-8347371\n+    \/\/ If we are in the midst of an old gc bootstrap or an old marking, we want to leave the mark bit map of\n+    \/\/ the young generation intact. In particular, reference processing in the old generation may potentially\n+    \/\/ need the reachability of a young generation referent of a Reference object in the old generation.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}