{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,6 @@\n+        # If runner architecture is x64 set JAVA_HOME_17_X64 otherwise set to JAVA_HOME_17_arm64\n+        if [[ '${{ runner.arch }}' == 'X64' ]]; then\n+          JDK=\"$JAVA_HOME_17_X64\"\n+        else\n+          JDK=\"$JAVA_HOME_17_arm64\"\n+        fi\n@@ -60,1 +66,1 @@\n-        bash make\/build.sh --jdk \"$JAVA_HOME_17_X64\"\n+        bash make\/build.sh --jdk \"$JDK\"\n","filename":".github\/actions\/get-jtreg\/action.yml","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,3 @@\n+      runs-on:\n+        required: true\n+        type: string\n@@ -58,1 +61,1 @@\n-    runs-on: macos-11\n+    runs-on: ${{ inputs.runs-on }}\n@@ -77,1 +80,1 @@\n-          platform: macos-x64\n+          platform: ${{ inputs.platform }}\n@@ -90,1 +93,1 @@\n-          brew install make\n+          brew install autoconf make\n","filename":".github\/workflows\/build-macos.yml","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -230,1 +230,2 @@\n-      xcode-toolset-version: '12.5.1'\n+      runs-on: 'macos-13'\n+      xcode-toolset-version: '14.3.1'\n@@ -241,2 +242,2 @@\n-      xcode-toolset-version: '12.5.1'\n-      extra-conf-options: '--openjdk-target=aarch64-apple-darwin'\n+      runs-on: 'macos-14'\n+      xcode-toolset-version: '14.3.1'\n@@ -321,1 +322,11 @@\n-      runs-on: macos-11\n+      runs-on: macos-13\n+\n+  test-macos-aarch64:\n+    name: macos-aarch64\n+    needs:\n+      - build-macos-aarch64\n+    uses: .\/.github\/workflows\/test.yml\n+    with:\n+      platform: macos-aarch64\n+      bootjdk-platform: macos-aarch64\n+      runs-on: macos-14\n","filename":".github\/workflows\/main.yml","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -160,1 +160,1 @@\n-          sudo xcode-select --switch \/Applications\/Xcode_11.7.app\/Contents\/Developer\n+          sudo xcode-select --switch \/Applications\/Xcode_14.3.1.app\/Contents\/Developer\n","filename":".github\/workflows\/test.yml","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,0 +120,5 @@\n+        ],\n+        IF_TRUE: [\n+            # Add debug prefix map gcc system include paths, as they cause\n+            # non-deterministic debug paths depending on gcc path location.\n+            DEBUG_PREFIX_MAP_GCC_INCLUDE_PATHS\n@@ -161,0 +166,49 @@\n+# gcc will embed the full system include paths in the debug info\n+# resulting in non-deterministic debug symbol files and thus\n+# non-reproducible native libraries if gcc includes are located\n+# in different paths.\n+# Add -fdebug-prefix-map'ings for root and gcc include paths,\n+# pointing to a common set of folders so that the binaries are deterministic:\n+#  root include : \/usr\/include\n+#  gcc include  : \/usr\/local\/gcc_include\n+#  g++ include  : \/usr\/local\/gxx_include\n+AC_DEFUN([DEBUG_PREFIX_MAP_GCC_INCLUDE_PATHS],\n+[\n+    # Determine gcc system include paths.\n+    # Assume default roots to start with:\n+    GCC_ROOT_INCLUDE=\"\/usr\/include\"\n+\n+    # Determine is sysroot or devkit specified?\n+    if test \"x$SYSROOT\" != \"x\"; then\n+      GCC_ROOT_INCLUDE=\"${SYSROOT%\/}\/usr\/include\"\n+    fi\n+\n+    # Add root include mapping => \/usr\/include\n+    GCC_INCLUDE_DEBUG_MAP_FLAGS=\"-fdebug-prefix-map=${GCC_ROOT_INCLUDE}\/=\/usr\/include\/\"\n+\n+    # Add gcc system include mapping => \/usr\/local\/gcc_include\n+    #   Find location of stddef.h using build C compiler\n+    GCC_SYSTEM_INCLUDE=`$ECHO \"#include <stddef.h>\" | \\\n+                        $CC $CFLAGS -v -E - 2>&1 | \\\n+                        $GREP stddef | $TAIL -1 | $TR -s \" \" | $CUT -d'\"' -f2`\n+    if test \"x$GCC_SYSTEM_INCLUDE\" != \"x\"; then\n+      GCC_SYSTEM_INCLUDE=`$DIRNAME $GCC_SYSTEM_INCLUDE`\n+      GCC_INCLUDE_DEBUG_MAP_FLAGS=\"$GCC_INCLUDE_DEBUG_MAP_FLAGS \\\n+          -fdebug-prefix-map=${GCC_SYSTEM_INCLUDE}\/=\/usr\/local\/gcc_include\/\"\n+    fi\n+\n+    # Add g++ system include mapping => \/usr\/local\/gxx_include\n+    #   Find location of cstddef using build C++ compiler\n+    GXX_SYSTEM_INCLUDE=`$ECHO \"#include <cstddef>\" | \\\n+                        $CXX $CXXFLAGS -v -E -x c++ - 2>&1 | \\\n+                        $GREP cstddef | $TAIL -1 | $TR -s \" \" | $CUT -d'\"' -f2`\n+    if test \"x$GXX_SYSTEM_INCLUDE\" != \"x\"; then\n+      GXX_SYSTEM_INCLUDE=`$DIRNAME $GXX_SYSTEM_INCLUDE`\n+      GCC_INCLUDE_DEBUG_MAP_FLAGS=\"$GCC_INCLUDE_DEBUG_MAP_FLAGS \\\n+          -fdebug-prefix-map=${GXX_SYSTEM_INCLUDE}\/=\/usr\/local\/gxx_include\/\"\n+    fi\n+\n+    # Add to debug prefix cflags\n+    DEBUG_PREFIX_CFLAGS=\"$DEBUG_PREFIX_CFLAGS $GCC_INCLUDE_DEBUG_MAP_FLAGS\"\n+])\n+\n","filename":"make\/autoconf\/flags-cflags.m4","additions":55,"deletions":1,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,4 @@\n+MACOS_AARCH64_BOOT_JDK_EXT=tar.gz\n+MACOS_AARCH64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk20\/bdc68b4b9cbc4ebcb30745c85038d91d\/36\/GPL\/openjdk-20_macos-aarch64_bin.tar.gz\n+MACOS_AARCH64_BOOT_JDK_SHA256=d020f5c512c043cfb7119a591bc7e599a5bfd76d866d939f5562891d9db7c9b3\n+\n","filename":"make\/conf\/github-actions.conf","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -542,0 +542,1 @@\n+\t      --with-debug-prefix-map=$(OUTPUT_ROOT)=devkit \\\n","filename":"make\/devkit\/Tools.gmk","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -140,0 +140,6 @@\n+\n+  \/\/ Supports 8-byte cmpxchg with compiler built-ins.\n+  \/\/ These built-ins are supposed to be implemented on\n+  \/\/ all platforms (even if not natively), so we claim\n+  \/\/ the support unconditionally.\n+  _supports_cx8 = true;\n","filename":"src\/hotspot\/cpu\/zero\/vm_version_zero.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2018 SAP SE. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024 SAP SE. All rights reserved.\n@@ -52,5 +52,6 @@\n-  \/*  to the maximum C Heap consumption we expect.                             *\/   \\\n-  \/*  We need to know this because we need to leave \"breathing space\" for the  *\/   \\\n-  \/*  data segment when placing the java heap. If that space is too small, we  *\/   \\\n-  \/*  reduce our chance of getting a low heap address (needed for compressed   *\/   \\\n-  \/*  Oops).                                                                   *\/   \\\n+  \/*  maximum C Heap consumption we expect.                                    *\/   \\\n+  \/*  We need to leave \"breathing space\" for the data segment when             *\/   \\\n+  \/*  placing the java heap. If the MaxExpectedDataSegmentSize setting         *\/   \\\n+  \/*  is too small, we might run into resource issues creating many native     *\/   \\\n+  \/*  threads, if it is too large, we reduce our chance of getting a low heap  *\/   \\\n+  \/*  address (needed for compressed Oops).                                    *\/   \\\n","filename":"src\/hotspot\/os\/aix\/globals_aix.hpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -414,1 +414,1 @@\n-  return (julong)si.totalswap;\n+  return (julong)(si.totalswap * si.mem_unit);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -760,1 +760,1 @@\n-  return (jlong) ::lseek(fd, offset, whence);\n+  return (jlong) AIX_ONLY(::lseek64) NOT_AIX(::lseek)(fd, offset, whence);\n@@ -764,1 +764,1 @@\n-   return ::ftruncate(fd, length);\n+   return AIX_ONLY(::ftruncate64) NOT_AIX(::ftruncate)(fd, length);\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -156,0 +156,8 @@\n+\/\/ No direct support for 8-byte xchg; emulate using cmpxchg.\n+template<>\n+struct Atomic::PlatformXchg<8> : Atomic::XchgUsingCmpxchg<8> {};\n+\n+\/\/ No direct support for 8-byte add; emulate using cmpxchg.\n+template<>\n+struct Atomic::PlatformAdd<8> : Atomic::AddUsingCmpxchg<8> {};\n+\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/atomic_bsd_x86.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -131,0 +131,7 @@\n+\/\/ No direct support for 8-byte xchg; emulate using cmpxchg.\n+template<>\n+struct Atomic::PlatformXchg<8> : Atomic::XchgUsingCmpxchg<8> {};\n+\n+\/\/ No direct support for 8-byte add; emulate using cmpxchg.\n+template<>\n+struct Atomic::PlatformAdd<8> : Atomic::AddUsingCmpxchg<8> {};\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/atomic_linux_arm.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -156,0 +156,8 @@\n+\/\/ No direct support for 8-byte xchg; emulate using cmpxchg.\n+template<>\n+struct Atomic::PlatformXchg<8> : Atomic::XchgUsingCmpxchg<8> {};\n+\n+\/\/ No direct support for 8-byte add; emulate using cmpxchg.\n+template<>\n+struct Atomic::PlatformAdd<8> : Atomic::AddUsingCmpxchg<8> {};\n+\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/atomic_linux_x86.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -401,3 +401,3 @@\n-  \/\/ Support platforms that do not provide Read-Modify-Write\n-  \/\/ byte-level atomic access. To use, derive PlatformCmpxchg<1> from\n-  \/\/ this class.\n+  \/\/ Support platforms that do not provide Read-Modify-Write atomic\n+  \/\/ accesses for 1-byte and 8-byte widths. To use, derive PlatformCmpxchg<1>,\n+  \/\/ PlatformAdd<S>, PlatformXchg<S> from these classes.\n@@ -406,0 +406,4 @@\n+  template<size_t byte_size>\n+  struct XchgUsingCmpxchg;\n+  template<size_t byte_size>\n+  class AddUsingCmpxchg;\n@@ -680,0 +684,41 @@\n+\/\/ Define the class before including platform file, which may use this\n+\/\/ as a base class, requiring it be complete.  The definition is later\n+\/\/ in this file, near the other definitions related to xchg.\n+template<size_t byte_size>\n+struct Atomic::XchgUsingCmpxchg {\n+  template<typename T>\n+  T operator()(T volatile* dest,\n+               T exchange_value,\n+               atomic_memory_order order) const;\n+};\n+\n+\/\/ Define the class before including platform file, which may use this\n+\/\/ as a base class, requiring it be complete.\n+template<size_t byte_size>\n+class Atomic::AddUsingCmpxchg {\n+public:\n+  template<typename D, typename I>\n+  static inline D add_then_fetch(D volatile* dest,\n+                                 I add_value,\n+                                 atomic_memory_order order) {\n+    D addend = add_value;\n+    return fetch_then_add(dest, add_value, order) + add_value;\n+  }\n+\n+  template<typename D, typename I>\n+  static inline D fetch_then_add(D volatile* dest,\n+                          I add_value,\n+                          atomic_memory_order order) {\n+    STATIC_ASSERT(byte_size == sizeof(I));\n+    STATIC_ASSERT(byte_size == sizeof(D));\n+\n+    D old_value;\n+    D new_value;\n+    do {\n+      old_value = Atomic::load(dest);\n+      new_value = old_value + add_value;\n+    } while (old_value != Atomic::cmpxchg(dest, old_value, new_value, order));\n+    return old_value;\n+  }\n+};\n+\n@@ -1173,0 +1218,14 @@\n+template<size_t byte_size>\n+template<typename T>\n+inline T Atomic::XchgUsingCmpxchg<byte_size>::operator()(T volatile* dest,\n+                                             T exchange_value,\n+                                             atomic_memory_order order) const {\n+  STATIC_ASSERT(byte_size == sizeof(T));\n+\n+  T old_value;\n+  do {\n+    old_value = Atomic::load(dest);\n+  } while (old_value != Atomic::cmpxchg(dest, old_value, exchange_value, order));\n+  return old_value;\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/atomic.hpp","additions":62,"deletions":3,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Red Hat, Inc.\n+ * Copyright (c) 2020, 2024, Red Hat, Inc.\n@@ -57,1 +57,1 @@\n-    return (jlong)si.totalswap;\n+    return (jlong)(si.totalswap * si.mem_unit);\n","filename":"src\/java.base\/linux\/native\/libjava\/CgroupMetrics.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-tzdata2023d\n+tzdata2024a\n","filename":"src\/java.base\/share\/data\/tzdata\/VERSION","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,0 +56,4 @@\n+# For the 1911\/1912 establishment of standard time in French possessions, see:\n+# Société Française de Physique, Recueil de constantes physiques (1913),\n+# page 752, 18b.\n+#\n@@ -139,1 +143,1 @@\n-Zone\tAfrica\/Ndjamena\t1:00:12 -\tLMT\t1912        # N'Djamena\n+Zone\tAfrica\/Ndjamena\t1:00:12 -\tLMT\t1912 Jan  1 # N'Djamena\n@@ -165,1 +169,1 @@\n-Zone\tAfrica\/Abidjan\t-0:16:08 -\tLMT\t1912\n+Zone\tAfrica\/Abidjan\t-0:16:08 -\tLMT\t1912 Jan  1\n","filename":"src\/java.base\/share\/data\/tzdata\/africa","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2483,0 +2483,11 @@\n+# From Zhanbolat Raimbekov (2024-01-19):\n+# Kazakhstan (all parts) switching to UTC+5 on March 1, 2024\n+# https:\/\/www.gov.kz\/memleket\/entities\/mti\/press\/news\/details\/688998?lang=ru\n+# [in Russian]\n+# (2024-01-20): https:\/\/primeminister.kz\/ru\/decisions\/19012024-20\n+#\n+# From Alexander Krivenyshev (2024-01-19):\n+# According to a different news and the official web site for the Ministry of\n+# Trade and Integration of the Republic of Kazakhstan:\n+# https:\/\/en.inform.kz\/news\/kazakhstan-to-switch-to-single-hour-zone-mar-1-54ad0b\/\n+\n@@ -2486,2 +2497,5 @@\n-# This includes KZ-AKM, KZ-ALA, KZ-ALM, KZ-AST, KZ-BAY, KZ-VOS, KZ-ZHA,\n-# KZ-KAR, KZ-SEV, KZ-PAV, and KZ-YUZ.\n+# This includes Abai\/Abay (ISO 3166-2 code KZ-10), Aqmola\/Akmola (KZ-11),\n+# Almaty (KZ-19), Almaty city (KZ-75), Astana city (KZ-71),\n+# East Kazkhstan (KZ-63), Jambyl\/Zhambyl (KZ-31), Jetisu\/Zhetysu (KZ-33),\n+# Karaganda (KZ-35), North Kazakhstan (KZ-59), Pavlodar (KZ-55),\n+# Shyumkent city (KZ-79), Turkistan (KZ-61), and Ulytau (KZ-62).\n@@ -2493,2 +2507,3 @@\n-\t\t\t6:00\t-\t+06\n-# Qyzylorda (aka Kyzylorda, Kizilorda, Kzyl-Orda, etc.) (KZ-KZY)\n+\t\t\t6:00\t-\t+06\t2024 Mar  1  0:00\n+\t\t\t5:00\t-\t+05\n+# Qyzylorda (aka Kyzylorda, Kizilorda, Kzyl-Orda, etc.) (KZ-43)\n@@ -2507,2 +2522,1 @@\n-#\n-# Qostanay (aka Kostanay, Kustanay) (KZ-KUS)\n+# Qostanay (aka Kostanay, Kustanay) (KZ-39)\n@@ -2519,3 +2533,3 @@\n-\t\t\t6:00\t-\t+06\n-\n-# Aqtöbe (aka Aktobe, formerly Aktyubinsk) (KZ-AKT)\n+\t\t\t6:00\t-\t+06\t2024 Mar  1  0:00\n+\t\t\t5:00\t-\t+05\n+# Aqtöbe (aka Aktobe, formerly Aktyubinsk) (KZ-15)\n@@ -2531,1 +2545,1 @@\n-# Mangghystaū (KZ-MAN)\n+# Mangghystaū (KZ-47)\n@@ -2543,1 +2557,1 @@\n-# Atyraū (KZ-ATY) is like Mangghystaū except it switched from\n+# Atyraū (KZ-23) is like Mangghystaū except it switched from\n@@ -2554,1 +2568,1 @@\n-# West Kazakhstan (KZ-ZAP)\n+# West Kazakhstan (KZ-27)\n@@ -3456,1 +3470,8 @@\n-# From Paul Eggert (2023-03-22):\n+# From Heba Hamad (2024-01-25):\n+# the summer time for the years 2024,2025 will begin in Palestine\n+# from Saturday at 02:00 AM by 60 minutes forward as shown below:\n+# year date\n+# 2024 2024-04-20\n+# 2025 2025-04-12\n+#\n+# From Paul Eggert (2024-01-25):\n@@ -3460,1 +3481,1 @@\n-# to DST at 02:00 the first Saturday after Ramadan, and that\n+# to DST at 02:00 the second Saturday after Ramadan, and that\n@@ -3464,1 +3485,1 @@\n-# 2023 through 2086 by running the following program under GNU Emacs 28.2,\n+# 2026 through 2086 by running the following program under GNU Emacs 29.2,\n@@ -3468,1 +3489,1 @@\n-# (let ((islamic-year 1444))\n+# (let ((islamic-year 1447))\n@@ -3477,0 +3498,1 @@\n+#       (setq b (+ 7 b))\n@@ -3527,2 +3549,2 @@\n-Rule Palestine\t2024\tonly\t-\tApr\t13\t2:00\t1:00\tS\n-Rule Palestine\t2025\tonly\t-\tApr\t 5\t2:00\t1:00\tS\n+Rule Palestine\t2024\tonly\t-\tApr\t20\t2:00\t1:00\tS\n+Rule Palestine\t2025\tonly\t-\tApr\t12\t2:00\t1:00\tS\n@@ -3534,2 +3556,0 @@\n-Rule Palestine\t2039\tonly\t-\tOct\t22\t2:00\t1:00\tS\n-Rule Palestine\t2039\t2067\t-\tOct\tSat<=30\t2:00\t0\t-\n@@ -3537,1 +3557,2 @@\n-Rule Palestine\t2040\tonly\t-\tOct\t13\t2:00\t1:00\tS\n+Rule Palestine\t2040\tonly\t-\tOct\t20\t2:00\t1:00\tS\n+Rule Palestine\t2040\t2067\t-\tOct\tSat<=30\t2:00\t0\t-\n@@ -3539,1 +3560,1 @@\n-Rule Palestine\t2041\tonly\t-\tSep\t28\t2:00\t1:00\tS\n+Rule Palestine\t2041\tonly\t-\tOct\t 5\t2:00\t1:00\tS\n@@ -3541,1 +3562,1 @@\n-Rule Palestine\t2042\tonly\t-\tSep\t20\t2:00\t1:00\tS\n+Rule Palestine\t2042\tonly\t-\tSep\t27\t2:00\t1:00\tS\n@@ -3543,1 +3564,1 @@\n-Rule Palestine\t2043\tonly\t-\tSep\t12\t2:00\t1:00\tS\n+Rule Palestine\t2043\tonly\t-\tSep\t19\t2:00\t1:00\tS\n@@ -3545,1 +3566,1 @@\n-Rule Palestine\t2044\tonly\t-\tAug\t27\t2:00\t1:00\tS\n+Rule Palestine\t2044\tonly\t-\tSep\t 3\t2:00\t1:00\tS\n@@ -3547,1 +3568,1 @@\n-Rule Palestine\t2045\tonly\t-\tAug\t19\t2:00\t1:00\tS\n+Rule Palestine\t2045\tonly\t-\tAug\t26\t2:00\t1:00\tS\n@@ -3549,1 +3570,1 @@\n-Rule Palestine\t2046\tonly\t-\tAug\t11\t2:00\t1:00\tS\n+Rule Palestine\t2046\tonly\t-\tAug\t18\t2:00\t1:00\tS\n@@ -3551,1 +3572,1 @@\n-Rule Palestine\t2047\tonly\t-\tJul\t27\t2:00\t1:00\tS\n+Rule Palestine\t2047\tonly\t-\tAug\t 3\t2:00\t1:00\tS\n@@ -3553,1 +3574,1 @@\n-Rule Palestine\t2048\tonly\t-\tJul\t18\t2:00\t1:00\tS\n+Rule Palestine\t2048\tonly\t-\tJul\t25\t2:00\t1:00\tS\n@@ -3555,1 +3576,1 @@\n-Rule Palestine\t2049\tonly\t-\tJul\t 3\t2:00\t1:00\tS\n+Rule Palestine\t2049\tonly\t-\tJul\t10\t2:00\t1:00\tS\n@@ -3557,1 +3578,1 @@\n-Rule Palestine\t2050\tonly\t-\tJun\t25\t2:00\t1:00\tS\n+Rule Palestine\t2050\tonly\t-\tJul\t 2\t2:00\t1:00\tS\n@@ -3559,1 +3580,1 @@\n-Rule Palestine\t2051\tonly\t-\tJun\t17\t2:00\t1:00\tS\n+Rule Palestine\t2051\tonly\t-\tJun\t24\t2:00\t1:00\tS\n@@ -3561,1 +3582,1 @@\n-Rule Palestine\t2052\tonly\t-\tJun\t 1\t2:00\t1:00\tS\n+Rule Palestine\t2052\tonly\t-\tJun\t 8\t2:00\t1:00\tS\n@@ -3563,1 +3584,1 @@\n-Rule Palestine\t2053\tonly\t-\tMay\t24\t2:00\t1:00\tS\n+Rule Palestine\t2053\tonly\t-\tMay\t31\t2:00\t1:00\tS\n@@ -3565,5 +3586,6 @@\n-Rule Palestine\t2054\tonly\t-\tMay\t16\t2:00\t1:00\tS\n-Rule Palestine\t2055\tonly\t-\tMay\t 1\t2:00\t1:00\tS\n-Rule Palestine\t2056\tonly\t-\tApr\t22\t2:00\t1:00\tS\n-Rule Palestine\t2057\tonly\t-\tApr\t 7\t2:00\t1:00\tS\n-Rule Palestine\t2058\tmax\t-\tMar\tSat<=30\t2:00\t1:00\tS\n+Rule Palestine\t2054\tonly\t-\tMay\t23\t2:00\t1:00\tS\n+Rule Palestine\t2055\tonly\t-\tMay\t 8\t2:00\t1:00\tS\n+Rule Palestine\t2056\tonly\t-\tApr\t29\t2:00\t1:00\tS\n+Rule Palestine\t2057\tonly\t-\tApr\t14\t2:00\t1:00\tS\n+Rule Palestine\t2058\tonly\t-\tApr\t 6\t2:00\t1:00\tS\n+Rule Palestine\t2059\tmax\t-\tMar\tSat<=30\t2:00\t1:00\tS\n@@ -3575,1 +3597,1 @@\n-Rule Palestine\t2072\tonly\t-\tOct\t15\t2:00\t1:00\tS\n+Rule Palestine\t2072\tonly\t-\tOct\t22\t2:00\t1:00\tS\n@@ -3578,1 +3600,1 @@\n-Rule Palestine\t2073\tonly\t-\tOct\t 7\t2:00\t1:00\tS\n+Rule Palestine\t2073\tonly\t-\tOct\t14\t2:00\t1:00\tS\n@@ -3580,1 +3602,1 @@\n-Rule Palestine\t2074\tonly\t-\tSep\t29\t2:00\t1:00\tS\n+Rule Palestine\t2074\tonly\t-\tOct\t 6\t2:00\t1:00\tS\n@@ -3582,1 +3604,1 @@\n-Rule Palestine\t2075\tonly\t-\tSep\t14\t2:00\t1:00\tS\n+Rule Palestine\t2075\tonly\t-\tSep\t21\t2:00\t1:00\tS\n@@ -3584,1 +3606,1 @@\n-Rule Palestine\t2076\tonly\t-\tSep\t 5\t2:00\t1:00\tS\n+Rule Palestine\t2076\tonly\t-\tSep\t12\t2:00\t1:00\tS\n@@ -3586,1 +3608,1 @@\n-Rule Palestine\t2077\tonly\t-\tAug\t28\t2:00\t1:00\tS\n+Rule Palestine\t2077\tonly\t-\tSep\t 4\t2:00\t1:00\tS\n@@ -3588,1 +3610,1 @@\n-Rule Palestine\t2078\tonly\t-\tAug\t13\t2:00\t1:00\tS\n+Rule Palestine\t2078\tonly\t-\tAug\t20\t2:00\t1:00\tS\n@@ -3590,1 +3612,1 @@\n-Rule Palestine\t2079\tonly\t-\tAug\t 5\t2:00\t1:00\tS\n+Rule Palestine\t2079\tonly\t-\tAug\t12\t2:00\t1:00\tS\n@@ -3592,1 +3614,1 @@\n-Rule Palestine\t2080\tonly\t-\tJul\t20\t2:00\t1:00\tS\n+Rule Palestine\t2080\tonly\t-\tJul\t27\t2:00\t1:00\tS\n@@ -3594,1 +3616,1 @@\n-Rule Palestine\t2081\tonly\t-\tJul\t12\t2:00\t1:00\tS\n+Rule Palestine\t2081\tonly\t-\tJul\t19\t2:00\t1:00\tS\n@@ -3596,1 +3618,1 @@\n-Rule Palestine\t2082\tonly\t-\tJul\t 4\t2:00\t1:00\tS\n+Rule Palestine\t2082\tonly\t-\tJul\t11\t2:00\t1:00\tS\n@@ -3598,1 +3620,1 @@\n-Rule Palestine\t2083\tonly\t-\tJun\t19\t2:00\t1:00\tS\n+Rule Palestine\t2083\tonly\t-\tJun\t26\t2:00\t1:00\tS\n@@ -3600,1 +3622,1 @@\n-Rule Palestine\t2084\tonly\t-\tJun\t10\t2:00\t1:00\tS\n+Rule Palestine\t2084\tonly\t-\tJun\t17\t2:00\t1:00\tS\n@@ -3602,1 +3624,1 @@\n-Rule Palestine\t2085\tonly\t-\tJun\t 2\t2:00\t1:00\tS\n+Rule Palestine\t2085\tonly\t-\tJun\t 9\t2:00\t1:00\tS\n@@ -3604,1 +3626,1 @@\n-Rule Palestine\t2086\tonly\t-\tMay\t18\t2:00\t1:00\tS\n+Rule Palestine\t2086\tonly\t-\tMay\t25\t2:00\t1:00\tS\n@@ -3632,1 +3654,1 @@\n-# From Paul Eggert (2018-11-18):\n+# From Paul Eggert (2024-01-21):\n@@ -3640,1 +3662,1 @@\n-# https:\/\/www.staff.science.uu.nl\/~gent0113\/idl\/idl_philippines.htm\n+# https:\/\/webspace.science.uu.nl\/~gent0113\/idl\/idl_philippines.htm\n@@ -4067,1 +4089,2 @@\n-# From Paul Eggert (2022-07-27) after a 2014 heads-up from Trần Ngọc Quân:\n+# From Paul Eggert (2024-01-14) after a 2014 heads-up from Trần Ngọc Quân\n+# and a 2024-01-14 heads-up from Đoàn Trần Công Danh:\n@@ -4097,2 +4120,5 @@\n-# Hoàng Xuân Hãn: \"Lịch và lịch Việt Nam\". Tập san Khoa học Xã hội,\n-# No. 9, Paris, February 1982.\n+#   Hoàng Xuân Hãn: \"Lịch và lịch Việt Nam\". Tập san Khoa học Xã hội,\n+#   No. 9, Paris, February 1982.\n+#\n+#   Lê Thành Lân: \"Lịch và niên biểu lịch sử hai mươi thế kỷ (0001-2010)\",\n+#   NXB Thống kê, Hanoi, 2000.\n@@ -4100,2 +4126,2 @@\n-# Lê Thành Lân: \"Lịch và niên biểu lịch sử hai mươi thế kỷ (0001-2010)\",\n-# NXB Thống kê, Hanoi, 2000.\n+#   Lê Thành Lân: \"Lịch hai thế kỷ (1802-2010) và các lịch vĩnh cửu\",\n+#   NXB Thuận Hoá, Huế, 1995.\n@@ -4103,2 +4129,20 @@\n-# Lê Thành Lân: \"Lịch hai thế kỷ (1802-2010) và các lịch vĩnh cửu\",\n-# NXB Thuận Hoá, Huế, 1995.\n+# Here is the decision for the September 1945 transition:\n+# Võ Nguyên Giáp, Việt Nam Dân Quốc Công Báo, No. 1 (1945-09-29), page 13\n+# http:\/\/baochi.nlv.gov.vn\/baochi\/cgi-bin\/baochi?a=d&d=JwvzO19450929.2.5&dliv=none\n+# It says that on 1945-09-01 at 24:00, Vietnam moved back two hours, to +07.\n+# It also mentions a 1945-03-29 decree (by a Japanese Goveror-General)\n+# to set the time zone to +09, but does not say whether that decree\n+# merely legalized an earlier change to +09.\n+#\n+# July 1955 transition:\n+# Ngô Đình Diệm, Công Báo Việt Nam, No. 92 (1955-07-02), page 1780-1781\n+# Ordinance (Dụ) No. 46 (1955-06-25)\n+# http:\/\/ddsnext.crl.edu\/titles\/32341#?c=0&m=29&s=0&cv=4&r=0&xywh=-89%2C342%2C1724%2C1216\n+# It says that on 1955-07-01 at 01:00, South Vietnam moved back 1 hour (to +07).\n+#\n+# December 1959 transition:\n+# Ngô Đình Diệm, Công Báo Việt Nam Cộng Hòa, 1960 part 1 (1960-01-02), page 62\n+# Decree (Sắc lệnh) No. 362-TTP (1959-12-30)\n+# http:\/\/ddsnext.crl.edu\/titles\/32341#?c=0&m=138&s=0&cv=793&r=0&xywh=-54%2C1504%2C1705%2C1202\n+# It says that on 1959-12-31 at 23:00, South Vietnam moved forward 1 hour (to +08).\n+\n@@ -4112,1 +4156,1 @@\n-\t\t\t9:00\t-\t+09\t1945 Sep  2\n+\t\t\t9:00\t-\t+09\t1945 Sep  1 24:00\n@@ -4114,1 +4158,1 @@\n-\t\t\t8:00\t-\t+08\t1955 Jul  1\n+\t\t\t8:00\t-\t+08\t1955 Jul  1 01:00\n","filename":"src\/java.base\/share\/data\/tzdata\/asia","additions":109,"deletions":65,"binary":false,"changes":174,"status":"modified"},{"patch":"@@ -446,1 +446,1 @@\n-Zone\tPacific\/Gambier\t -8:59:48 -\tLMT\t1912 Oct # Rikitea\n+Zone\tPacific\/Gambier\t -8:59:48 -\tLMT\t1912 Oct  1 # Rikitea\n@@ -448,1 +448,1 @@\n-Zone\tPacific\/Marquesas -9:18:00 -\tLMT\t1912 Oct\n+Zone\tPacific\/Marquesas -9:18:00 -\tLMT\t1912 Oct  1\n@@ -450,1 +450,1 @@\n-Zone\tPacific\/Tahiti\t -9:58:16 -\tLMT\t1912 Oct # Papeete\n+Zone\tPacific\/Tahiti\t -9:58:16 -\tLMT\t1912 Oct  1 # Papeete\n@@ -828,1 +828,1 @@\n-Zone Pacific\/Guadalcanal 10:39:48 -\tLMT\t1912 Oct # Honiara\n+Zone Pacific\/Guadalcanal 10:39:48 -\tLMT\t1912 Oct  1 # Honiara\n@@ -989,0 +989,4 @@\n+# For the 1911\/1912 establishment of standard time in French possessions, see:\n+# Société Française de Physique, Recueil de constantes physiques (1913),\n+# page 752, 18b.\n+#\n@@ -2065,1 +2069,1 @@\n-# https:\/\/www.staff.science.uu.nl\/~gent0113\/idl\/idl.htm\n+# https:\/\/webspace.science.uu.nl\/~gent0113\/idl\/idl_alaska_samoa.htm\n","filename":"src\/java.base\/share\/data\/tzdata\/australasia","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-# support for POSIX-style TZ strings.  On such platforms these entries\n+# support for POSIX.1-2017-style TZ strings.  On such platforms these entries\n","filename":"src\/java.base\/share\/data\/tzdata\/etcetera","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1016,2 +1016,18 @@\n-# From Paul Eggert (2018-04-15):\n-# The source for Czech data is: Kdy začíná a končí letní čas. 2018-04-15.\n+# From Ivan Benovic (2024-01-30):\n+# https:\/\/www.slov-lex.sk\/pravne-predpisy\/SK\/ZZ\/1946\/54\/\n+# (This is an official link to the Czechoslovak Summer Time Act of\n+# March 8, 1946 that authorizes the Czechoslovak government to set the\n+# exact dates of change to summer time and back to Central European Time.\n+# The act also implicitly confirms Central European Time as the\n+# official time zone of Czechoslovakia and currently remains in force\n+# in both the Czech Republic and Slovakia.)\n+# https:\/\/www.psp.cz\/eknih\/1945pns\/tisky\/t0216_00.htm\n+# (This is a link to the original legislative proposal dating back to\n+# February 22, 1946. The accompanying memorandum to the proposal says\n+# that an advisory committee on European railroad transportation that\n+# met in Brussels in October 1945 decided that the change of time\n+# should be carried out in all participating countries in a strictly\n+# coordinated manner....)\n+#\n+# From Paul Eggert (2024-01-30):\n+# The source for Czech data is: Kdy začíná a končí letní čas.\n@@ -1019,0 +1035,9 @@\n+# Its main text disagrees with its quoted sources only in 1918,\n+# where the main text says spring and autumn transitions\n+# occurred at 02:00 and 03:00 respectively (as usual),\n+# whereas the 1918 source \"Oznámení o zavedení letního času v roce 1918\"\n+# says transitions were at 01:00 and 02:00 respectively.\n+# As the 1918 source appears to be a humorous piece, and it is\n+# unlikely that Prague would have disagreed with its neighbors by an hour,\n+# go with the main text for now.\n+#\n","filename":"src\/java.base\/share\/data\/tzdata\/europe","additions":27,"deletions":2,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -29,4 +29,1 @@\n-# NIST format leap-seconds.list file, which can be copied from\n-# <ftp:\/\/ftp.nist.gov\/pub\/time\/leap-seconds.list>\n-# or <ftp:\/\/ftp.boulder.nist.gov\/pub\/time\/leap-seconds.list>.\n-# The NIST file is used instead of its IERS upstream counterpart\n+# NIST\/IERS format leap-seconds.list file, which can be copied from\n@@ -34,2 +31,2 @@\n-# because under US law the NIST file is public domain\n-# whereas the IERS file's copyright and license status is unclear.\n+# or, in a variant with different comments, from\n+# <ftp:\/\/ftp.boulder.nist.gov\/pub\/time\/leap-seconds.list>.\n@@ -98,1 +95,1 @@\n-#Expires 2024\tJun\t28\t00:00:00\n+#Expires 2024\tDec\t28\t00:00:00\n@@ -101,2 +98,2 @@\n-#updated 1467936000 (2016-07-08 00:00:00 UTC)\n-#expires 1719532800 (2024-06-28 00:00:00 UTC)\n+#updated 1704708379 (2024-01-08 10:06:19 UTC)\n+#expires 1735344000 (2024-12-28 00:00:00 UTC)\n@@ -104,2 +101,2 @@\n-#\tUpdated through IERS Bulletin C66\n-#\tFile expires on:  28 June 2024\n+#\tUpdated through IERS Bulletin C (https:\/\/hpiers.obspm.fr\/iers\/bul\/bulc\/bulletinc.dat)\n+#\tFile expires on 28 December 2024\n","filename":"src\/java.base\/share\/data\/tzdata\/leapseconds","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1294,0 +1294,4 @@\n+# For the 1911\/1912 establishment of standard time in French possessions, see:\n+# Société Française de Physique, Recueil de constantes physiques (1913),\n+# page 752, 18b.\n+#\n@@ -1380,1 +1384,1 @@\n-# http:\/\/www.canadiangeographic.ca\/Magazine\/SO98\/alacarte.asp\n+# https:\/\/web.archive.org\/web\/19990827055050\/https:\/\/canadiangeographic.ca\/SO98\/geomap.htm\n@@ -1668,0 +1672,9 @@\n+# From Chris Walton (2024-01-09):\n+# The [Toronto] changes in 1947, 1948, and 1949 took place at 2:00 a.m. local\n+# time instead of midnight....  Toronto Daily Star - ...\n+# April 2, 1947 - Page 39 ... April 7, 1948 - Page 13 ...\n+# April 2, 1949 - Page 1 ... April 7, 1949 - Page 24 ...\n+# November 25, 1949 - Page 52 ... April 21, 1950 - Page 14 ...\n+# September 19, 1950 - Page 46 ... September 20, 1950 - Page 3 ...\n+# November 24, 1950 - Page 21\n+\n@@ -1729,7 +1742,3 @@\n-Rule\tToronto\t1945\t1946\t-\tSep\tlastSun\t2:00\t0\tS\n-Rule\tToronto\t1946\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\n-Rule\tToronto\t1947\t1949\t-\tApr\tlastSun\t0:00\t1:00\tD\n-Rule\tToronto\t1947\t1948\t-\tSep\tlastSun\t0:00\t0\tS\n-Rule\tToronto\t1949\tonly\t-\tNov\tlastSun\t0:00\t0\tS\n-Rule\tToronto\t1950\t1973\t-\tApr\tlastSun\t2:00\t1:00\tD\n-Rule\tToronto\t1950\tonly\t-\tNov\tlastSun\t2:00\t0\tS\n+Rule\tToronto\t1945\t1948\t-\tSep\tlastSun\t2:00\t0\tS\n+Rule\tToronto\t1946\t1973\t-\tApr\tlastSun\t2:00\t1:00\tD\n+Rule\tToronto\t1949\t1950\t-\tNov\tlastSun\t2:00\t0\tS\n@@ -3458,1 +3467,1 @@\n-\t\t\t-4:04:20 -\tFFMT\t1911 May    # Fort-de-France MT\n+\t\t\t-4:04:20 -\tFFMT\t1911 May  1 # Fort-de-France MT\n@@ -3565,1 +3574,1 @@\n-Zone America\/Miquelon\t-3:44:40 -\tLMT\t1911 May 15 # St Pierre\n+Zone America\/Miquelon\t-3:44:40 -\tLMT\t1911 Jun 15 # St Pierre\n","filename":"src\/java.base\/share\/data\/tzdata\/northamerica","additions":19,"deletions":10,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1596,0 +1596,3 @@\n+# For the 1911\/1912 establishment of standard time in French possessions, see:\n+# Société Française de Physique, Recueil de constantes physiques (1913),\n+# page 752, 18b.\n@@ -1597,1 +1600,1 @@\n-Zone America\/Cayenne\t-3:29:20 -\tLMT\t1911 Jul\n+Zone America\/Cayenne\t-3:29:20 -\tLMT\t1911 Jul  1\n","filename":"src\/java.base\/share\/data\/tzdata\/southamerica","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,0 +108,6 @@\n+#elif defined(_AIX)\n+    perfstat_memory_total_t memory_info;\n+    if (perfstat_memory_total(NULL, &memory_info, sizeof(perfstat_memory_total_t), 1) == -1) {\n+        throw_internal_error(env, \"perfstat_memory_total failed\");\n+    }\n+    return available ? (jlong)(memory_info.pgsp_free * 4L * 1024L) : (jlong)(memory_info.pgsp_total * 4L * 1024L);\n","filename":"src\/jdk.management\/unix\/native\/libmanagement_ext\/OperatingSystemImpl.c","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -62,2 +62,0 @@\n-\/\/ 64bit Atomic::add is only supported on 64bit platforms.\n-#ifdef _LP64\n@@ -65,0 +63,3 @@\n+  \/\/ Check if 64-bit atomics are available on the machine.\n+  if (!VM_Version::supports_cx8()) return;\n+\n@@ -69,1 +70,0 @@\n-#endif \/\/ _LP64\n@@ -111,2 +111,0 @@\n-\/\/ 64bit Atomic::xchg is only supported on 64bit platforms.\n-#ifdef _LP64\n@@ -114,0 +112,3 @@\n+  \/\/ Check if 64-bit atomics are available on the machine.\n+  if (!VM_Version::supports_cx8()) return;\n+\n@@ -117,1 +118,0 @@\n-#endif \/\/ _LP64\n@@ -145,0 +145,3 @@\n+  \/\/ Check if 64-bit atomics are available on the machine.\n+  if (!VM_Version::supports_cx8()) return;\n+\n@@ -348,1 +351,0 @@\n-#ifdef _LP64\n@@ -350,0 +352,3 @@\n+  \/\/ Check if 64-bit atomics are available on the machine.\n+  if (!VM_Version::supports_cx8()) return;\n+\n@@ -354,0 +359,3 @@\n+  \/\/ Check if 64-bit atomics are available on the machine.\n+  if (!VM_Version::supports_cx8()) return;\n+\n@@ -356,1 +364,0 @@\n-#endif \/\/ _LP64\n","filename":"test\/hotspot\/gtest\/runtime\/test_atomic.cpp","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -31,0 +31,4 @@\n+ * @requires os.arch == \"aarch64\" & os.family == \"mac\"\n+ * @comment sha3 is only implemented on AArch64 for now.\n+ *          UseSHA3Intrinsics is only auto-enabled on Apple silicon, because it\n+ *          may introduce performance regression on others. See JDK-8297092.\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/sha\/cli\/TestUseSHA3IntrinsicsOptionOnSupportedCPU.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @requires os.family != \"aix\"\n@@ -31,0 +32,8 @@\n+\/**\n+ * @test\n+ * @summary Stress test that reaches the process limit for thread count, or time limit.\n+ * @requires os.family == \"aix\"\n+ * @key stress\n+ * @run main\/othervm -Xmx1g -XX:MaxExpectedDataSegmentSize=16g ThreadCountLimit\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/ThreadCountLimit.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-tzdata2023d\n+tzdata2024a\n","filename":"test\/jdk\/java\/util\/TimeZone\/TimeZoneData\/VERSION","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}