{"files":[{"patch":"@@ -3965,2 +3965,3 @@\n-      \/\/ If the owner is anonymous, we need to fix it -- in the slow-path.\n-      __ ldr(disp_hdr, Address(tmp, ObjectMonitor::owner_offset_in_bytes()));\n+      \/\/ If the owner is anonymous, we need to fix it -- in an outline stub.\n+      Register tmp2 = disp_hdr;\n+      __ ldr(tmp2, Address(tmp, ObjectMonitor::owner_offset_in_bytes()));\n@@ -3969,2 +3970,2 @@\n-      __ tst(disp_hdr, (uint64_t)(intptr_t) ANONYMOUS_OWNER);\n-      C2FixAnonOMOwnerStub* stub = new (Compile::current()->comp_arena()) C2FixAnonOMOwnerStub(tmp, disp_hdr);\n+      __ tst(tmp2, (uint64_t)(intptr_t) ANONYMOUS_OWNER);\n+      C2HandleAnonOMOwnerStub* stub = new (Compile::current()->comp_arena()) C2HandleAnonOMOwnerStub(tmp, tmp2);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-int C2FixAnonOMOwnerStub::max_size() const {\n+int C2HandleAnonOMOwnerStub::max_size() const {\n@@ -68,1 +68,1 @@\n-void C2FixAnonOMOwnerStub::emit(C2_MacroAssembler& masm) {\n+void C2HandleAnonOMOwnerStub::emit(C2_MacroAssembler& masm) {\n@@ -72,0 +72,1 @@\n+  assert(t != noreg, \"need tmp register\");\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_CodeStubs_aarch64.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-int C2FixAnonOMOwnerStub::max_size() const {\n+int C2HandleAnonOMOwnerStub::max_size() const {\n@@ -82,1 +82,1 @@\n-void C2FixAnonOMOwnerStub::emit(C2_MacroAssembler& masm) {\n+void C2HandleAnonOMOwnerStub::emit(C2_MacroAssembler& masm) {\n","filename":"src\/hotspot\/cpu\/x86\/c2_CodeStubs_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -711,1 +711,1 @@\n-    C2FixAnonOMOwnerStub* stub = new (Compile::current()->comp_arena()) C2FixAnonOMOwnerStub(tmpReg);\n+    C2HandleAnonOMOwnerStub* stub = new (Compile::current()->comp_arena()) C2HandleAnonOMOwnerStub(tmpReg);\n@@ -716,0 +716,2 @@\n+    \/\/ We can't easily implement this optimization on 32 bit because we don't have a thread register.\n+    \/\/ Call the slow-path instead.\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-class C2FixAnonOMOwnerStub : public C2CodeStub {\n+class C2HandleAnonOMOwnerStub : public C2CodeStub {\n@@ -87,1 +87,1 @@\n-  C2FixAnonOMOwnerStub(Register monitor, Register tmp = noreg) : C2CodeStub(),\n+  C2HandleAnonOMOwnerStub(Register monitor, Register tmp = noreg) : C2CodeStub(),\n","filename":"src\/hotspot\/share\/opto\/c2_CodeStubs.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}