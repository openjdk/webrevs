{"files":[{"patch":"@@ -0,0 +1,114 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.tdk.jcov.report;\n+\n+import com.sun.tdk.jcov.Instr;\n+import com.sun.tdk.jcov.RepGen;\n+import com.sun.tdk.jcov.instrument.DataRoot;\n+import com.sun.tdk.jcov.instrument.InstrumentationOptions;\n+import com.sun.tdk.jcov.instrument.Util;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.testng.Assert.assertTrue;\n+\n+public class BasicReportTest {\n+    Path test_dir;\n+    Path template;\n+    Path result;\n+    int method_slot = -1;\n+\n+    @BeforeClass\n+    public void setup() throws Exception {\n+        System.setProperty(\"jcov.selftest\", \"true\");\n+\n+        Path data_dir = Paths.get(System.getProperty(\"user.dir\"));\n+\n+        \/\/clear\n+        test_dir = data_dir.resolve(\"instr_test\");\n+        System.out.println(\"test dir = \" + test_dir);\n+        Util.rmRF(test_dir);\n+\n+        \/\/prepare bytecode\n+        List<Path> classFiles = new Util(test_dir).copyBytecode(BasicUserCode.class.getName());\n+\n+        \/\/instrument\n+        template = test_dir.resolve(\"template.xml\");\n+        List<String> params = new ArrayList<>();\n+        params.add(\"-t\");\n+        params.add(template.toString());\n+        params.add(classFiles.get(0).toString());\n+        new Instr().run(params.toArray(new String[0]));\n+\n+        \/\/run\n+        new Util(test_dir).runClass(BasicUserCode.class, new String[] {});\n+\n+        \/\/save coverage\n+        result = test_dir.resolve(\"result.xml\");\n+        DataRoot.getInstance(0).write(result.toString(), InstrumentationOptions.MERGE.OVERWRITE);\n+    }\n+\n+    @Test\n+    void textReport() throws IOException {\n+        Path report = test_dir.resolve(\"report.txt\");\n+        List<String> params = new ArrayList<>();\n+        params.add(\"-format\");\n+        params.add(\"text\");\n+        params.add(\"-o\");\n+        params.add(report.toString());\n+        params.add(result.toString());\n+        new RepGen().run(params.toArray(new String[0]));\n+        assertTrue(Files.isRegularFile(report));\n+        assertTrue(Files.readAllLines(report).contains(\n+                \"MTH+: main([Ljava\/lang\/String;)V hits: 1 blocks:  75% (3\/4); branches:  50% (1\/2); lines:  75% (3\/4);\"\n+        ));\n+    }\n+\n+    @Test\n+    void htmlReport() throws IOException {\n+        Path report = test_dir.resolve(\"report.html\");\n+        List<String> params = new ArrayList<>();\n+        params.add(\"-o\");\n+        params.add(report.toString());\n+        params.add(result.toString());\n+        new RepGen().run(params.toArray(new String[0]));\n+        assertTrue(Files.isDirectory(report));\n+        Path classHtml = report.resolve(BasicUserCode.class.getName().replace('.', '\/') + \".html\");\n+        assertTrue(Files.readAllLines(classHtml).stream().anyMatch(l -> l.contains(\"<b>60<\/b>%(3\/5)\")));\n+    }\n+\n+    @AfterClass\n+    public void tearDown() throws IOException {\n+        Util.rmRF(test_dir);\n+    }\n+}\n","filename":"test\/unit\/com\/sun\/tdk\/jcov\/report\/BasicReportTest.java","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.tdk.jcov.report;\n+\n+public class BasicUserCode {\n+    public static void main(String[] args) {\n+        if (args.length % 2 == 0)\n+            System.out.println(\"even\");\n+        else\n+            System.out.println(\"odd\");\n+    }\n+}\n","filename":"test\/unit\/com\/sun\/tdk\/jcov\/report\/BasicUserCode.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"}]}