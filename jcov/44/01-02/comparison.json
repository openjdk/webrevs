{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.lang.classfile.Instruction;\n@@ -58,1 +59,1 @@\n-            var next = iter.next(i -> !isSimpleInstruction(i.opcode()));\n+            Instruction next = iter.next(i -> !isSimpleInstruction(i.opcode()));\n@@ -61,4 +62,5 @@\n-                String name;\n-                if (next instanceof InvokeInstruction ii) name = ii.name().toString();\n-                else if (next instanceof InvokeDynamicInstruction idi) name = idi.name().toString();\n-                else throw new IllegalStateException(STR.\"Unknown node type: \\{next.getClass().getName()}\");\n+                String name = switch (next) {\n+                    case InvokeInstruction ii -> ii.name().toString();\n+                    case InvokeDynamicInstruction idi -> idi.name().toString();\n+                    default -> throw new IllegalStateException(STR.\"Unknown node type: \\{next.getClass().getName()}\");\n+                };\n","filename":"plugins\/simple_methods_anc\/src\/openjdk\/jcov\/filter\/simplemethods\/Delegators.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.lang.classfile.Instruction;\n@@ -38,1 +39,1 @@\n-            var next = new InstructionIterator(m.code().get()).next(i -> !isSimpleInstruction(i.opcode()));\n+            Instruction next = new InstructionIterator(m.code().get()).next(i -> !isSimpleInstruction(i.opcode()));\n","filename":"plugins\/simple_methods_anc\/src\/openjdk\/jcov\/filter\/simplemethods\/EmptyMethods.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.lang.classfile.Instruction;\n@@ -42,1 +43,1 @@\n-            var next = new InstructionIterator(m.code().get()).next(i -> !isSimpleInstruction(i.opcode()));\n+            Instruction next = new InstructionIterator(m.code().get()).next(i -> !isSimpleInstruction(i.opcode()));\n","filename":"plugins\/simple_methods_anc\/src\/openjdk\/jcov\/filter\/simplemethods\/Getters.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-            var next = elements.next();\n+            CodeElement next = elements.next();\n","filename":"plugins\/simple_methods_anc\/src\/openjdk\/jcov\/filter\/simplemethods\/InstructionIterator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.lang.classfile.Instruction;\n@@ -44,1 +45,1 @@\n-            var next = iter.next(i -> !isSimpleInstruction(i.opcode()));\n+            Instruction next = iter.next(i -> !isSimpleInstruction(i.opcode()));\n","filename":"plugins\/simple_methods_anc\/src\/openjdk\/jcov\/filter\/simplemethods\/Setters.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.lang.classfile.Instruction;\n@@ -45,1 +46,1 @@\n-            var next = iter.next(i -> !isSimpleInstruction(i.opcode()));\n+            Instruction next = iter.next(i -> !isSimpleInstruction(i.opcode()));\n","filename":"plugins\/simple_methods_anc\/src\/openjdk\/jcov\/filter\/simplemethods\/Throwers.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}