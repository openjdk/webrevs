{"files":[{"patch":"@@ -27,1 +27,1 @@\n-    private final Map<Value, JCTree> valueToTree = new HashMap<>();\n+    private final Map<Value, Symbol.VarSymbol> valueToVarSym = new HashMap<>();\n@@ -209,1 +209,1 @@\n-            map(op.result(), varDef);\n+            map(op.result(), vs);\n@@ -217,7 +217,1 @@\n-        JCTree tree = valueToTree.get(v);\n-        if (tree instanceof JCTree.JCVariableDecl vd) {\n-            return treeMaker.Ident(vd);\n-        } else if (tree instanceof JCTree.JCExpression expr) {\n-            return expr;\n-        }\n-        throw new IllegalStateException(\"Value not mapped to VariableDeclaration nor to an ExpressionStatement\");\n+        return treeMaker.Ident(valueToVarSym.get(v));\n@@ -226,2 +220,2 @@\n-    private void map(Value v, JCTree t) {\n-        valueToTree.put(v, t);\n+    private void map(Value v, Symbol.VarSymbol vs) {\n+        valueToVarSym.put(v, vs);\n@@ -239,1 +233,1 @@\n-            map(funcOp.parameters().get(i), treeMaker.Ident(ms.params().get(i)));\n+            map(funcOp.parameters().get(i), ms.params().get(i));\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"}]}