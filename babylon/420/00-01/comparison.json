{"files":[{"patch":"@@ -93,0 +93,2 @@\n+    private static final String COMPILER_GENERATED_MODEL_FIELD_NAME = \"COMPILER_GENERATED_MODEL\";\n+    private static final ClassDesc FUNC_OP_CLASS_DESC = CodeReflectionSupport.FUNC_OP_CLASS.describeConstable().get();\n@@ -411,1 +413,1 @@\n-                    \/\/ if the lambda doesn't capture values we only have one instance\n+                    \/\/ if the lambda doesn't capture values we only have one instance, model shared anyway\n@@ -413,1 +415,1 @@\n-                    \/\/ those instances shares the same code model generated by the compiler\n+                    \/\/ those instances have the same code model generated by the compiler\n@@ -416,2 +418,0 @@\n-                    final String COMPILER_GENERATED_MODEL_FIELD_NAME = \"COMPILER_GENERATED_MODEL\";\n-                    final ClassDesc FUNC_OP_CLASS_DESC = CodeReflectionSupport.FUNC_OP_CLASS.describeConstable().get();\n@@ -499,2 +499,2 @@\n-           .ldc(cp.constantDynamicEntry(cp.bsmEntry(bsmDataAt, List.of(cp.intEntry(2))), natMH))\n-                .getstatic(lambdaClassEntry.asSymbol(), \"COMPILER_GENERATED_MODEL\", CodeReflectionSupport.FUNC_OP_CLASS.describeConstable().get());\n+                .ldc(cp.constantDynamicEntry(cp.bsmEntry(bsmDataAt, List.of(cp.intEntry(2))), natMH))\n+                .getstatic(lambdaClassEntry.asSymbol(), COMPILER_GENERATED_MODEL_FIELD_NAME, FUNC_OP_CLASS_DESC);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}