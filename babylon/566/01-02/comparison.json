{"files":[{"patch":"@@ -32,1 +32,1 @@\n-            Assertions.assertSame(codeModels[i], codeModels[i-1]);\n+            Assertions.assertSame(codeModels[i-1], codeModels[i]);\n","filename":"test\/langtools\/tools\/javac\/reflect\/CodeModelSameInstanceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-            Assertions.assertSame(quotedObjects[i], quotedObjects[i - 1]);\n+            Assertions.assertSame(quotedObjects[i-1], quotedObjects[i]);\n","filename":"test\/langtools\/tools\/javac\/reflect\/QuotedSameInstanceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-        Assertions.assertEquals(found, expected);\n+        Assertions.assertEquals(expected, found);\n","filename":"test\/langtools\/tools\/javac\/reflect\/TestLocalCapture.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,2 +58,2 @@\n-        assertEquals(quoted.capturedValues().size(), 1);\n-        assertEquals(((Var)quoted.capturedValues().values().iterator().next()).value(), x);\n+        assertEquals(1, quoted.capturedValues().size());\n+        assertEquals(x, ((Var)quoted.capturedValues().values().iterator().next()).value());\n@@ -65,1 +65,1 @@\n-        assertEquals(res, x + 1);\n+        assertEquals(x + 1, res);\n@@ -74,1 +74,1 @@\n-        assertEquals(quoted.capturedValues().size(), 3);\n+        assertEquals(3, quoted.capturedValues().size());\n@@ -76,3 +76,3 @@\n-        assertEquals(it.next(), this);\n-        assertEquals(((Var)it.next()).value(), hello);\n-        assertEquals(((Var)it.next()).value(), x);\n+        assertEquals(this, it.next());\n+        assertEquals(hello, ((Var)it.next()).value());\n+        assertEquals(x, ((Var)it.next()).value());\n@@ -84,1 +84,1 @@\n-        assertEquals(res, x + 1 + hashCode() + hello.length());\n+        assertEquals(x + 1 + hashCode() + hello.length(), res);\n@@ -91,1 +91,1 @@\n-        assertEquals(quoted.capturedValues().size(), 1);\n+        assertEquals(1, quoted.capturedValues().size());\n@@ -93,1 +93,1 @@\n-        assertEquals(it.next(), this);\n+        assertEquals(this, it.next());\n@@ -99,1 +99,1 @@\n-        assertEquals(res, 1 + hashCode());\n+        assertEquals(1 + hashCode(), res);\n@@ -108,1 +108,1 @@\n-        assertEquals(quoted.capturedValues().size(), 1);\n+        assertEquals(1, quoted.capturedValues().size());\n@@ -110,1 +110,1 @@\n-        assertEquals(it.next(), this);\n+        assertEquals(this, it.next());\n@@ -116,1 +116,1 @@\n-        assertEquals(res, 1 + hashCode());\n+        assertEquals(1 + hashCode(), res);\n@@ -133,2 +133,2 @@\n-        assertEquals(quoted.capturedValues().size(), ia.length);\n-        assertEquals(quoted.op().capturedValues(), new ArrayList<>(quoted.capturedValues().keySet()));\n+        assertEquals(ia.length, quoted.capturedValues().size());\n+        assertEquals(new ArrayList<>(quoted.capturedValues().keySet()), quoted.op().capturedValues());\n@@ -139,1 +139,1 @@\n-            assertEquals(actual, ia[i++]);\n+            assertEquals(ia[i++], actual);\n@@ -161,2 +161,2 @@\n-        assertEquals(quoted.capturedValues().size(), 1);\n-        assertEquals(quoted.capturedValues().values().iterator().next(), context);\n+        assertEquals(1, quoted.capturedValues().size());\n+        assertEquals(context, quoted.capturedValues().values().iterator().next());\n@@ -168,1 +168,1 @@\n-        assertEquals(res, x + 1);\n+        assertEquals(x + 1, res);\n@@ -181,3 +181,3 @@\n-        assertEquals(Box.count, prevCount + 1); \/\/ no duplicate receiver computation!\n-        assertEquals(quoted.capturedValues().size(), 1);\n-        assertEquals(((Box)((Var)quoted.capturedValues().values().iterator().next()).value()).i, i);\n+        assertEquals(prevCount + 1, Box.count); \/\/ no duplicate receiver computation!\n+        assertEquals(1, quoted.capturedValues().size());\n+        assertEquals(i, ((Box)((Var)quoted.capturedValues().values().iterator().next()).value()).i);\n@@ -189,1 +189,1 @@\n-        assertEquals(res, i + 1);\n+        assertEquals(i + 1, res);\n","filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -54,2 +54,2 @@\n-        assertEquals(quoted.capturedValues().size(), 1);\n-        assertEquals(((Var)quoted.capturedValues().values().iterator().next()).value(), x);\n+        assertEquals(1, quoted.capturedValues().size());\n+        assertEquals(x, ((Var)quoted.capturedValues().values().iterator().next()).value());\n@@ -61,1 +61,1 @@\n-        assertEquals(res, x + 1);\n+        assertEquals(x + 1, res);\n@@ -81,2 +81,2 @@\n-        assertEquals(quoted.capturedValues().size(), 1);\n-        assertEquals(quoted.capturedValues().values().iterator().next(), context);\n+        assertEquals(1, quoted.capturedValues().size());\n+        assertEquals(context, quoted.capturedValues().values().iterator().next());\n@@ -88,1 +88,1 @@\n-        assertEquals(res, x + 1);\n+        assertEquals(x + 1, res);\n@@ -96,1 +96,1 @@\n-        assertEquals(quoted.capturedValues().size(), 3);\n+        assertEquals(3, quoted.capturedValues().size());\n@@ -98,3 +98,3 @@\n-        assertEquals(it.next(), this);\n-        assertEquals(((Var)it.next()).value(), hello);\n-        assertEquals(((Var)it.next()).value(), x);\n+        assertEquals(this, it.next());\n+        assertEquals(hello, ((Var)it.next()).value());\n+        assertEquals(x, ((Var)it.next()).value());\n@@ -106,1 +106,1 @@\n-        assertEquals(res, x + 1 + hashCode() + hello.length());\n+        assertEquals(x + 1 + hashCode() + hello.length(), res);\n@@ -112,1 +112,1 @@\n-        assertEquals(quoted.capturedValues().size(), 1);\n+        assertEquals(1, quoted.capturedValues().size());\n@@ -114,1 +114,1 @@\n-        assertEquals(it.next(), this);\n+        assertEquals(this, it.next());\n@@ -120,1 +120,1 @@\n-        assertEquals(res, 1 + hashCode());\n+        assertEquals(1 + hashCode(), res);\n@@ -128,1 +128,1 @@\n-        assertEquals(quoted.capturedValues().size(), 1);\n+        assertEquals(1, quoted.capturedValues().size());\n@@ -130,1 +130,1 @@\n-        assertEquals(it.next(), this);\n+        assertEquals(this, it.next());\n@@ -136,1 +136,1 @@\n-        assertEquals(res, 1 + hashCode());\n+        assertEquals(1 + hashCode(), res);\n","filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuoted.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"}]}