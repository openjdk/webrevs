{"files":[{"patch":"@@ -2,2 +2,0 @@\n-import org.testng.Assert;\n-import org.testng.annotations.Test;\n@@ -7,0 +5,3 @@\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n@@ -15,1 +16,1 @@\n- * @run testng CodeModelSameInstanceTest\n+ * @run junit CodeModelSameInstanceTest\n@@ -25,1 +26,1 @@\n-    void test() {\n+    public void test() {\n@@ -31,1 +32,1 @@\n-            Assert.assertSame(codeModels[i], codeModels[i-1]);\n+            Assertions.assertSame(codeModels[i], codeModels[i-1]);\n","filename":"test\/langtools\/tools\/javac\/reflect\/CodeModelSameInstanceTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -4,2 +4,2 @@\n-import org.testng.Assert;\n-import org.testng.annotations.Test;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n@@ -14,1 +14,1 @@\n- * @run testng LambdaModelUniquenessTest\n+ * @run junit LambdaModelUniquenessTest\n@@ -25,1 +25,1 @@\n-    void testWithLambdaThatDoNotCapture() {\n+    public void testWithLambdaThatDoNotCapture() {\n@@ -30,1 +30,1 @@\n-        Assert.assertSame(quoted1.op(), quoted2.op());\n+        Assertions.assertSame(quoted1.op(), quoted2.op());\n@@ -34,1 +34,1 @@\n-    void testWithLambdaThatDoNotCapture2() {\n+    public void testWithLambdaThatDoNotCapture2() {\n@@ -38,1 +38,1 @@\n-        Assert.assertSame(ops.getFirst(), ops.getLast());\n+        Assertions.assertSame(ops.getFirst(), ops.getLast());\n@@ -46,1 +46,1 @@\n-    void testWithLambdaThatCapture() {\n+    public void testWithLambdaThatCapture() {\n@@ -51,1 +51,1 @@\n-        Assert.assertSame(quoted1.op(), quoted2.op());\n+        Assertions.assertSame(quoted1.op(), quoted2.op());\n@@ -55,1 +55,1 @@\n-    void testWithLambdaThatCapture2() {\n+    public void testWithLambdaThatCapture2() {\n@@ -59,1 +59,1 @@\n-        Assert.assertSame(ops.getFirst(), ops.getLast());\n+        Assertions.assertSame(ops.getFirst(), ops.getLast());\n","filename":"test\/langtools\/tools\/javac\/reflect\/LambdaModelUniquenessTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -4,2 +4,2 @@\n-import org.testng.Assert;\n-import org.testng.annotations.Test;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n@@ -12,1 +12,1 @@\n- * @run testng MethodModelUniquenessTest\n+ * @run junit MethodModelUniquenessTest\n@@ -25,1 +25,1 @@\n-    void testInstancesReflectSameMethodHaveSameModel() throws NoSuchMethodException {\n+    public void testInstancesReflectSameMethodHaveSameModel() throws NoSuchMethodException {\n@@ -30,1 +30,1 @@\n-        Assert.assertSame(fm, fm2);\n+        Assertions.assertSame(fm, fm2);\n@@ -34,1 +34,1 @@\n-    void testInstancesReflectDiffMethodsHaveDiffModels() throws NoSuchMethodException {\n+    public void testInstancesReflectDiffMethodsHaveDiffModels() throws NoSuchMethodException {\n@@ -41,1 +41,1 @@\n-        Assert.assertNotSame(gm, fm);\n+        Assertions.assertNotSame(gm, fm);\n","filename":"test\/langtools\/tools\/javac\/reflect\/MethodModelUniquenessTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -4,2 +4,0 @@\n-import org.testng.Assert;\n-import org.testng.annotations.Test;\n@@ -8,0 +6,2 @@\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n@@ -18,1 +18,1 @@\n- * @run testng QuotedSameInstanceTest\n+ * @run junit QuotedSameInstanceTest\n@@ -27,2 +27,2 @@\n-    void testWithOneThread() {\n-        Assert.assertSame(Op.ofQuotable(q1).get(), Op.ofQuotable(q1).get());\n+    public void testWithOneThread() {\n+        Assertions.assertSame(Op.ofQuotable(q1).get(), Op.ofQuotable(q1).get());\n@@ -35,1 +35,1 @@\n-    void testWithMultiThreads() {\n+    public void testWithMultiThreads() {\n@@ -38,1 +38,1 @@\n-            Assert.assertSame(quotedObjects[i], quotedObjects[i - 1]);\n+            Assertions.assertSame(quotedObjects[i], quotedObjects[i - 1]);\n@@ -50,1 +50,1 @@\n-    void testMultiThreadsViaInterpreter() throws NoSuchMethodException {\n+    public void testMultiThreadsViaInterpreter() throws NoSuchMethodException {\n@@ -56,1 +56,1 @@\n-            Assert.assertSame(quotedObjects[i], quotedObjects[i - 1]);\n+            Assertions.assertSame(quotedObjects[i], quotedObjects[i - 1]);\n","filename":"test\/langtools\/tools\/javac\/reflect\/QuotedSameInstanceTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -68,5 +68,5 @@\n-            \"TestLocalCapture.java\",            \/\/ plain testng test\n-            \"TestCaptureQuoted.java\",           \/\/ plain testng test\n-            \"TestCaptureQuotable.java\",         \/\/ plain testng test\n-            \"QuotedSameInstanceTest.java\",      \/\/ plain testng test\n-            \"CodeModelSameInstanceTest.java\"    \/\/ plain testng test\n+            \"TestLocalCapture.java\",            \/\/ plain junit test\n+            \"TestCaptureQuoted.java\",           \/\/ plain junit test\n+            \"TestCaptureQuotable.java\",         \/\/ plain junit test\n+            \"QuotedSameInstanceTest.java\",      \/\/ plain junit test\n+            \"CodeModelSameInstanceTest.java\"    \/\/ plain junit test\n","filename":"test\/langtools\/tools\/javac\/reflect\/TestIRFromAnnotation.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run testng TestLocalCapture\n+ * @run junit TestLocalCapture\n@@ -32,1 +32,0 @@\n-import org.testng.annotations.*;\n@@ -39,1 +38,3 @@\n-import java.util.stream.IntStream;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n@@ -41,1 +42,1 @@\n-import static org.testng.Assert.*;\n+import java.util.stream.IntStream;\n@@ -57,1 +58,2 @@\n-    @Test(dataProvider = \"ints\")\n+    @ParameterizedTest\n+    @MethodSource(\"ints\")\n@@ -63,1 +65,1 @@\n-        assertEquals(found, expected);\n+        Assertions.assertEquals(found, expected);\n@@ -66,5 +68,2 @@\n-    @DataProvider(name = \"ints\")\n-    public Object[][] ints() {\n-        return IntStream.range(0, 50)\n-                .mapToObj(i -> new Object[] { i })\n-                .toArray(Object[][]::new);\n+    public static IntStream ints() {\n+        return IntStream.range(0, 50);\n","filename":"test\/langtools\/tools\/javac\/reflect\/TestLocalCapture.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run testng TestCaptureQuotable\n+ * @run junit TestCaptureQuotable\n@@ -31,1 +31,3 @@\n-import org.testng.annotations.*;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n@@ -47,1 +49,1 @@\n-import static org.testng.Assert.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n@@ -51,1 +53,2 @@\n-    @Test(dataProvider = \"ints\")\n+    @ParameterizedTest\n+    @MethodSource(\"ints\")\n@@ -152,1 +155,2 @@\n-    @Test(dataProvider = \"ints\")\n+    @ParameterizedTest\n+    @MethodSource(\"ints\")\n@@ -167,5 +171,2 @@\n-    @DataProvider(name = \"ints\")\n-    public Object[][] ints() {\n-        return IntStream.range(0, 50)\n-                .mapToObj(i -> new Object[] { i })\n-                .toArray(Object[][]::new);\n+    public static IntStream ints() {\n+        return IntStream.range(0, 50);\n@@ -174,1 +175,2 @@\n-    @Test(dataProvider = \"ints\")\n+    @ParameterizedTest\n+    @MethodSource(\"ints\")\n","filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run testng TestCaptureQuoted\n+ * @run junit TestCaptureQuoted\n@@ -35,0 +35,4 @@\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n@@ -41,2 +45,2 @@\n-import org.testng.annotations.*;\n-import static org.testng.Assert.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n@@ -46,1 +50,2 @@\n-    @Test(dataProvider = \"ints\")\n+    @ParameterizedTest\n+    @MethodSource(\"ints\")\n@@ -71,1 +76,2 @@\n-    @Test(dataProvider = \"ints\")\n+    @ParameterizedTest\n+    @MethodSource(\"ints\")\n@@ -134,5 +140,2 @@\n-    @DataProvider(name = \"ints\")\n-    public Object[][] ints() {\n-        return IntStream.range(0, 50)\n-                .mapToObj(i -> new Object[] { i })\n-                .toArray(Object[][]::new);\n+    public static IntStream ints() {\n+        return IntStream.range(0, 50);\n","filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuoted.java","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"}]}