{"files":[{"patch":"@@ -60,6 +60,16 @@\n-    private static final WeakHashMap<Class<?>, CachedModel> MODEL_CACHE = WeakHashMap.newWeakHashMap(10);\n-\n-    public static <T> Tensor<T> execute(MethodHandles.Lookup l, OnnxFunction<Tensor<T>> codeLambda) {\n-        var quotable = Op.ofQuotable(codeLambda).orElseThrow();\n-\n-        var model = MODEL_CACHE.computeIfAbsent(codeLambda.getClass(), _ -> {\n+    static class CachedModelClassValue extends ClassValue<CachedModel> {\n+\n+        private MethodHandles.Lookup l;\n+        private Quoted q;\n+\n+        CachedModel computeIfAbsent(Class<?> lambdaClass, MethodHandles.Lookup l,  Quoted q) {\n+            try {\n+                this.l = l;\n+                this.q = q;\n+                \/\/ not very nice way to pass additional arguments to computeValue method\n+                return get(lambdaClass);\n+            } finally {\n+                this.l = null;\n+                this.q = null;\n+            }\n+        }\n@@ -67,1 +77,3 @@\n-            var lambda = (CoreOp.LambdaOp) quotable.op();\n+        @Override\n+        protected CachedModel computeValue(Class<?> type) {\n+            var lambda = (CoreOp.LambdaOp) q.op();\n@@ -86,1 +98,1 @@\n-                var captured = List.of(quotable.capturedValues().sequencedKeySet().toArray());\n+                var captured = q.capturedValues().sequencedKeySet().stream().toList();\n@@ -117,1 +129,9 @@\n-        });\n+        }\n+    }\n+\n+    private static final CachedModelClassValue MODEL_CACHE = new CachedModelClassValue();\n+\n+    public static <T> Tensor<T> execute(MethodHandles.Lookup l, OnnxFunction<Tensor<T>> codeLambda) {\n+        var q = Op.ofQuotable(codeLambda).orElseThrow();\n+\n+        var model = MODEL_CACHE.computeIfAbsent(codeLambda.getClass(), l, q);\n@@ -119,1 +139,1 @@\n-        var captured = quotable.capturedValues().sequencedValues().toArray();\n+        var captured = q.capturedValues().sequencedValues().toArray();\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxRuntime.java","additions":30,"deletions":10,"binary":false,"changes":40,"status":"modified"}]}