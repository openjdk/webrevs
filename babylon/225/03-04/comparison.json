{"files":[{"patch":"@@ -541,1 +541,2 @@\n-                            yield op(CoreOp.invoke(mDesc, operands.reversed()));\n+                            yield op(CoreOp.invoke(CoreOp.InvokeOp.InvokeKind.INSTANCE, false,\n+                                    mDesc.type().returnType(), mDesc, operands.reversed()));\n@@ -544,1 +545,2 @@\n-                            op(CoreOp.invoke(mDesc, operands.reversed()));\n+                                op(CoreOp.invoke(CoreOp.InvokeOp.InvokeKind.STATIC, false,\n+                                        mDesc.type().returnType(), mDesc, operands.reversed()));\n@@ -555,1 +557,2 @@\n-                                yield op(CoreOp.invokeSuper(mDesc.type().returnType(), mDesc, operands.reversed()));\n+                                yield op(CoreOp.invoke(CoreOp.InvokeOp.InvokeKind.SUPER, false,\n+                                        mDesc.type().returnType(), mDesc, operands.reversed()));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-                \/\/ InvokeSuperOp\n+                \/\/ InvokeOp when InvokeKind == SUPER\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}