{"files":[{"patch":"@@ -660,1 +660,1 @@\n-                Assert.assertEquals(invokeAndConvert(flift, receiver1, args), d.testMethod.invoke(receiver2, args)));\n+                    assertEquals(d.testMethod.invoke(receiver2, args), invokeAndConvert(flift, receiver1, args)));\n@@ -713,4 +713,4 @@\n-                    List argl = new ArrayList(args.length + 1);\n-                    if (receiver1 != null) argl.add(receiver1);\n-                    argl.addAll(Arrays.asList(args));\n-                    Assertions.assertEquals(d.testMethod.invoke(receiver2, args), mh.invokeWithArguments(argl));\n+                List argl = new ArrayList(args.length + 1);\n+                if (receiver1 != null) argl.add(receiver1);\n+                argl.addAll(Arrays.asList(args));\n+                assertEquals(d.testMethod.invoke(receiver2, args), mh.invokeWithArguments(argl));\n@@ -740,0 +740,8 @@\n+\n+    private static void assertEquals(Object expected, Object actual) {\n+        switch (expected) {\n+            case int[] expArr when actual instanceof int[] actArr -> Assertions.assertArrayEquals(expArr, actArr);\n+            case Object[] expArr when actual instanceof Object[] actArr -> Assertions.assertArrayEquals(expArr, actArr);\n+            case null, default -> Assertions.assertEquals(expected, actual);\n+        }\n+    }\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"}]}