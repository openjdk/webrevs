{"files":[{"patch":"@@ -113,0 +113,1 @@\n+    private final List<ExceptionCatch> ecs;\n@@ -131,0 +132,6 @@\n+        this.ecs = codeModel.exceptionHandlers();\n+        for (var ec : ecs.reversed()) {\n+            if (exceptionHandlers.indexOf(ec.handler()) < 0) {\n+                exceptionHandlers.add(ec.handler());\n+            }\n+        }\n@@ -199,1 +206,1 @@\n-        \/\/ fill exceptionHandlers and exceptionHandlersMap\n+        \/\/ fill exceptionHandlersMap\n@@ -201,1 +208,0 @@\n-        var ecs = new ArrayList<ExceptionCatch>();\n@@ -203,7 +209,1 @@\n-            if (e instanceof ExceptionCatch ec) {\n-                ecs.add(ec);\n-                \/\/ ecs are squashed by handler\n-                if (exceptionHandlers.indexOf(ec.handler()) < 0) {\n-                    exceptionHandlers.add(ec.handler());\n-                }\n-            } else if (e instanceof LabelTarget lt) {\n+            if (e instanceof LabelTarget lt) {\n@@ -871,1 +871,1 @@\n-        for (int ehi = ereStack.nextSetBit(0); ehi >= 0; ehi = ereStack.nextSetBit(ehi + 1)) {\n+        for (int ehi = ereStack.previousSetBit(Integer.MAX_VALUE); ehi >= 0; ehi = ereStack.previousSetBit(ehi - 1)) {\n@@ -877,1 +877,1 @@\n-        for (int ehi = ereStack.previousSetBit(Integer.MAX_VALUE); ehi >= 0; ehi = ereStack.previousSetBit(ehi - 1)) {\n+        for (int ehi = ereStack.nextSetBit(0); ehi >= 0; ehi = ereStack.nextSetBit(ehi + 1)) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}