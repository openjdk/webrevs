[{"commit":{"message":"use of IdentityHashMap where appropriate"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"f2ba92bfa40b61f4dab6b34080cff255bc67140d"},{"commit":{"message":"Var data moved from SlotOp to SlotToVarTransformer"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"}],"sha":"7f462ded8853d91d0a80f3936dfe0cb9833a30de"},{"commit":{"message":"Types resolution logic moved from UnresolvedType to UnresolvedTypesTransformer"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"4b3a239e78156d385d22cd770571d4b045f5ad5b"},{"commit":{"message":"removal of TypeWithComponent\nadded CoreOp.ArrayAccessOp.ArrayLoadOp::arrayLoadOp(Value array, Value index, TypeElement componentType) override"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOp.java"}],"sha":"05c258eb7a30460caa5349dba443e205e8115f07"},{"commit":{"message":"added javadoc to Value::isDominatedBy(Set<Value>)"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Value.java"}],"sha":"fc178e72dbd3f448a03466d2db823c8e205e4fc4"},{"commit":{"message":"Introduction of TypeWithComponent"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOp.java"}],"sha":"6591d7d864a93e41a8d89cb4750126dc454872d4"},{"commit":{"message":"TestSmallCorpus reached 3rd round 100% stability, no exceptions, no verification errors"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"55d82cc0fe9da49bb56e409e195241cf6e9acb94"},{"commit":{"message":"BytecodeLift fix of followup with unresolved array component types of unknown TypeKind"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"}],"sha":"8f98efca2d03d1366c4b35a0c8d92fb2749b1238"},{"commit":{"message":"fixed BytecodeLift exception handlers order of nested blocks"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"eda4efb0680f2c156c079ffe0fb58f5d4610167b"},{"commit":{"message":"adjustments to suport unitialized variables"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOp.java"}],"sha":"5ff6832fc02a70eaffc89f76ceac338f0fbb6dc9"},{"commit":{"message":"TestSmallCorpus update"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"4d43dec67adea220bf06b2912634970a9214986a"},{"commit":{"message":"Merge remote-tracking branch 'babylon\/code-reflection' into split-lifter\n\n# Conflicts:\n#\tsrc\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsToVarMapper.java"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOp.java"}],"sha":"ad565292fbd10213038e9d77521ef2769f65d927"},{"commit":{"message":"BytecodeLift fixed exception region transits"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"2db9de9f971bfd47105cc05b90cba880e41a78be"},{"commit":{"message":"BytecodeLift better dealing with exception regions transitions - work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"c0928f10aba1dab6c44ac283c198fb74429789f8"},{"commit":{"message":"BytecodeLift::targetBlockForExceptionHandler work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"0bf8d7f3d726f32f5c0230f0c380119ccb9337bf"},{"commit":{"message":"Verifier fix"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"17ec143d27866192e1eeb35482e8e97b8b374a75"},{"commit":{"message":"initial implementation of Verifier::verifyExceptionRegions"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"7a6fcf97c75d4461a02dac736087b1998a018ffa"},{"commit":{"message":"BytecodeGenerator trancking exception regions per catch block"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"f44360d9f3adb65455cfdaa24e20a9fc3fadf1a3"},{"commit":{"message":"fixed UnresolvedTypesTransformer"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"239bc8fc924189c9e8ef66cdd03bdbad4cc200d3"},{"commit":{"message":"UnresolvedTypesTransformer work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"a83fa495aa8b06bc82795363e86d79e328caad9c"},{"commit":{"message":"SlotToVarTransformer decoupled VarOp unresolved type from the initial value unresolved type"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"}],"sha":"9fc98a250ac7a269e14d54b0df398369ead6c853"},{"commit":{"message":"default TypeElement::componentType throws IllegalStateException"},"files":[],"sha":"c25af8f4c6541e833e153565a14e164f180b3733"},{"commit":{"message":"fixed self-dominance in SlotToVarTransformer::isDominatedByTheSameVar"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"}],"sha":"340ea7de60c4a3af9255cf2735ab5210518c518a"},{"commit":{"message":"UnresolvedTypesTransformer work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"cccc9fa4ca53da60af0faee58aa312fd47ac26a4"},{"commit":{"message":"SlotToVarTransformer work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"}],"sha":"b160f5076a381ef6ae699843152299d61443443d"},{"commit":{"message":"fixed BytecodeLift::isCategory1"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"e7ed7bc94a9790d449c91c9ce3fa983f777d75c1"},{"commit":{"message":"added default TypeElement::componentType to support 3rd party array types"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOp.java"}],"sha":"465ce1559e41cef6272325fc3fa111a17db475a9"},{"commit":{"message":"fixed UnresolvedTypesTransformer"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"ec48dfe60988b4e445924bcf4f14545e7415ed00"},{"commit":{"message":"fixed SlotToVarTransformer::isDominatedByTheSameVar"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"}],"sha":"e4fcc976d2ee4a3c38e2aea7fc6ad822eb0629a4"},{"commit":{"message":"test for dominant set moved to Value::isDominatedBy(Set<? extends Value> doms)"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Value.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"50847153d7992a23f95a7ed20dcb3d441f73b39c"},{"commit":{"message":"fixed SlotToVarTransformer and Verifier"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"3d5c8441a25cf4cdcf157e92b67571a9a0ab4610"},{"commit":{"message":"SlotToVarTransformer traversing exception handlers"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"}],"sha":"719c8ac83ed8b20c52b1e04d9367498910645331"},{"commit":{"message":"UnresolvedTypesTransformer work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"89b91ab336d9934f48b44284bab226dd18ff2678"},{"commit":{"message":"UnresolvedTypesTransformer work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"90ec742e359aafb432f6292847cb9364a46b3b81"},{"commit":{"message":"UnresolvedTypesTransformer work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"a8f88addeb9dc92fa29d2cf6b4167efc2a3d2757"},{"commit":{"message":"UnresolvedTypesTransformer work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"de7398b8a86d5a211c35898dea0a4eb0bf8af983"},{"commit":{"message":"BytecodeLift and SlotToVarTransformer fixes"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"}],"sha":"26bfef1ab0c784401b956e4dbaf4ade73a82f373"},{"commit":{"message":"Avoid ClassCastException when operand of CoreOp.ArrayLoadOp is not of an ArrayType"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOp.java"}],"sha":"2d05fc369f439ce2051458c66223817e0bfd7ccd"},{"commit":{"message":"new BytecodeLift work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"67d23b693d66c2e3777cfca8b901fdb9d1e73fea"},{"commit":{"message":"Initial work on UnresolvedTypesTransformer"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedTypesTransformer.java"}],"sha":"ce46d43dcddd9b17ebbc344a65423922fc4a5b84"},{"commit":{"message":"fixed TestBytecode"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java"}],"sha":"0230500c031dd0e90a42d38f3126408182017235"},{"commit":{"message":"switch to the new BytecodeLift, removal of LocalsToVarMapper"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsToVarMapper.java"}],"sha":"d5cb571caf42d2422dc35aabd3b6de0fd8598067"},{"commit":{"message":"Merge remote-tracking branch 'babylon\/code-reflection' into split-lifter"},"files":[],"sha":"1e03ecc83d6ed67093c1971ed3a7184c95c62171"},{"commit":{"message":"new BytecodeLift work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"}],"sha":"a2109de9d3030bb9c40e949dc3b64501b221ee41"},{"commit":{"message":"Merge branch 'new-lifter' into split-lifter"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"}],"sha":"a9c66086a2e5bd41f5a209ed46f1489323cb5ee6"},{"commit":{"message":"SlotToVarTransformer work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"}],"sha":"6d7cb6acca10b02b2c629bc6af1d16d0dbf3050e"},{"commit":{"message":"initial work on SlotToVarTransformer"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotToVarTransformer.java"}],"sha":"78206d1c247c38a77a97f7879a54af08dc6e4bcd"},{"commit":{"message":"new BytecodeLift work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"}],"sha":"7ad52eedc99aa79a434414658831f15d8760da50"},{"commit":{"message":"new BytecodeLift work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotOp.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/UnresolvedType.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java"}],"sha":"5a5d23b1ca58fa8c35fa1bccec2f2f6362aa8e17"},{"commit":{"message":"PostLiftTypesTransformer work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"f0d8d447c26dbec335943f8fc4aa6aa8d5982b70"},{"commit":{"message":"PostLiftTypesTransformer work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"7ceded437e229d0617789560cbf5e687a254ed87"},{"commit":{"message":"Revert \"relaxed verification of block parameters\"\n\nThis reverts commit 4950a8e1d59503a1d176da40a63655e1c4ab6473."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"f61bee86530d897b86fe03b8ef9b1b22ad951f92"},{"commit":{"message":"Revert \"Interpreter erase int types + added TestLiftCustomBytecode::testEraseInts\"\n\nThis reverts commit 104ef7dda29d8f580b6f3f330436365764d0b3c7."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"}],"sha":"68661ae96c5b432ff3cef5278ddd51a80aa27e4e"},{"commit":{"message":"Verifier.VerifyError not extending Error"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"2155ccb311a4174ca899fb1e344c9a287e629fd4"},{"commit":{"message":"Interpreter erase int types + added TestLiftCustomBytecode::testEraseInts"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"}],"sha":"104ef7dda29d8f580b6f3f330436365764d0b3c7"},{"commit":{"message":"relaxed verification of block parameters"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"4950a8e1d59503a1d176da40a63655e1c4ab6473"},{"commit":{"message":"reversion of NullTypeResolver"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"138e7db7a8f878d396f0970a6d65a91f3ac0f551"},{"commit":{"message":"NullTypeResolver work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"a71eef44601d976485be00f854f99e435dd2be38"},{"commit":{"message":"removed unused imports"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsToVarMapper.java"}],"sha":"ee8f9d522c986090d9bf3114c40050fb7e01e690"},{"commit":{"message":"fixed merge of boolean segments in LocalsToVarMapper"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsToVarMapper.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"}],"sha":"455f95f9dc47039390d7b8a5c8ccd35c3a971401"},{"commit":{"message":"Verifier work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"77c58fd7d7ee1540b27104c37584ae8b79c2557d"},{"commit":{"message":"intermediate NULL_TYPE is resolved as post-lift transformation\nremoved obsolete block parameters chaining"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"32fb8308617e4be68f16fdc309d9037a1dbaa4b5"},{"commit":{"message":"Draft of post-lift transform pulling null ConstantOp type from its uses"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"ea9f44a74266e710790ba5e0c108c7875b767fa4"},{"commit":{"message":"Verifier work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"7feddf6828cee9f1d51df45606fea58a5105b23b"},{"commit":{"message":"explicit conversions of booleans in the entry block parameters"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"92ca2569fb3c80f612407db1206bcaaab59395af"},{"commit":{"message":"removed tricky loops to fix sub-int stack map frames\nand replaced with explicit conversions of booleans in the entry block parameters"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsToVarMapper.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"764127ee5bb950087bdc2bf45082277096b422d6"},{"commit":{"message":"eager var type assignment from subsequent load segments"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsToVarMapper.java"}],"sha":"950b4e8b48bc0d7f0bf4102dce186504e657607e"},{"commit":{"message":"Verifier work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"d8e5244833ae8fd9808ef6a6878f69377c354e31"},{"commit":{"message":"fixed Interpreter to use provided lookup for method type resolution"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"}],"sha":"c3d330e6ac421fa3aaedd37b2ea5d710274d195c"},{"commit":{"message":"InvokableLeafOps added missing test operations handles for primitive types"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/InvokableLeafOps.java"}],"sha":"5e270886379ed040033cdfb28a9f984ba89d328b"},{"commit":{"message":"Verifier work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"5e55e3a671344150768501598e270be916c50565"},{"commit":{"message":"Merge remote-tracking branch 'babylon\/code-reflection' into model-verifier"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsToVarMapper.java"}],"sha":"1f078a1f40fb679a7d965f26341f9c82bbccfeae"},{"commit":{"message":"Verifier work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"}],"sha":"3ef1559fc56dd61d849902f51e4c4b4c1b28a585"},{"commit":{"message":"initial work in Verifier"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Verifier.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"84f17b38736bf54ceaa921e9253bb2a7b702224d"},{"commit":{"message":"exception.region.exit directly referencing to catch blocks"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"ae084f080940e8fe6e0ff6b5f31d06fd8749d546"},{"commit":{"message":"exception.region.exit directly referencing to catch blocks - work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOp.java"}],"sha":"961941e1eb934ee3893ce1fd360edc5c9c947aa4"}]