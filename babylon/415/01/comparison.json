{"files":[{"patch":"@@ -233,1 +233,1 @@\n-        Optional<?> localRef = codeModel;\n+        Optional<?> localRef = root.codeModel;\n@@ -236,1 +236,1 @@\n-                localRef = codeModel;\n+                localRef = root.codeModel;\n@@ -239,1 +239,1 @@\n-                    codeModel = localRef = op;\n+                    root.codeModel = localRef = op;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+import jdk.incubator.code.CodeReflection;\n+import jdk.incubator.code.Op;\n+import jdk.incubator.code.op.CoreOp;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.lang.reflect.Method;\n+\n+\/*\n+ * @test\n+ * @modules jdk.incubator.code\n+ * @run testng MethodModelTest\n+ *\/\n+\n+public class MethodModelTest {\n+\n+    @CodeReflection\n+    static void f() {\n+    }\n+    @CodeReflection\n+    static void g() {\n+    }\n+\n+    @Test\n+    void testInstancesReflectSameMethodHaveSameModel() throws NoSuchMethodException {\n+        Method f = this.getClass().getDeclaredMethod(\"f\");\n+        Method f2 = this.getClass().getDeclaredMethod(\"f\");\n+        CoreOp.FuncOp fm = Op.ofMethod(f).orElseThrow();\n+        CoreOp.FuncOp fm2 = Op.ofMethod(f2).orElseThrow();\n+        Assert.assertSame(fm, fm2);\n+    }\n+\n+    @Test\n+    void testInstancesReflectDiffMethodsHaveDiffModels() throws NoSuchMethodException {\n+        Method f = this.getClass().getDeclaredMethod(\"f\");\n+        CoreOp.FuncOp fm = Op.ofMethod(f).orElseThrow();\n+\n+        Method g = this.getClass().getDeclaredMethod(\"g\");\n+        CoreOp.FuncOp gm = Op.ofMethod(g).orElseThrow();\n+\n+        Assert.assertNotSame(gm, fm);\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/reflect\/MethodModelTest.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}