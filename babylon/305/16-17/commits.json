[{"commit":{"message":"Merge branch 'code-reflection' into code-model-storage-option"},"files":[],"sha":"966005ceabc8f881e6ab7e1d6a0b44f343071696"},{"commit":{"message":"Load OpFactory and TypeElementFactory before invocation of opMethod only if the opMethod has there params."},"files":[],"sha":"0e49cceb3eea20b541e1fe43adcdbea9564aec23"},{"commit":{"message":"Fix the remaining compiler tests failures"},"files":[],"sha":"ee0f906ef3f65cdd98d7a3197eed0066e8939b10"},{"commit":{"message":"Fix some of the test failures (3 remains)"},"files":[],"sha":"cd143c3774092d3e76840a93c0638e8df971e862"},{"commit":{"message":"Fix the remaining test failures of SwitchExpressionTest2"},"files":[],"sha":"c17be6b6eccf99ceed8bc11bba9525493bb0e347"},{"commit":{"message":"Fix almost all test failures of SwitchExpressionTest2 (one remaining)"},"files":[],"sha":"5f02f73eafa61b054fc94456c80245612c0fe019"},{"commit":{"message":"Pass arrayType instead of eleType in OpBuilder.buildArray"},"files":[],"sha":"a1d134c3c6ced2ac4810fe629899e2979aa52788"},{"commit":{"message":"Ensure that block params are inserted in the correct order"},"files":[],"sha":"c232366190dad1b82c14b0db571665df73ec62c4"},{"commit":{"message":"Add missing imports"},"files":[],"sha":"e9fcd8c7ebfe28c262e0d6043682f7293ebc991f"},{"commit":{"message":"Merge branch 'code-reflection' into code-model-storage-option"},"files":[],"sha":"f8327908fcbf0e8fed188d49b11ace7663c60433"},{"commit":{"message":"Add comment"},"files":[],"sha":"cd302fc9f8f9696da79375d062344af765695a54"},{"commit":{"message":"Support storing code that builds code model"},"files":[],"sha":"86a3959d594758b1d7d7b11afcad60a94e953e59"},{"commit":{"message":"Reformat code"},"files":[],"sha":"21c12cb36b7fdee86a09c8aebaca66b660e44b2b"},{"commit":{"message":"Apply fixes from Maurizio"},"files":[],"sha":"54e4c308cbc6c8b4547b5cd799053925cfde8bc7"},{"commit":{"message":"Define parsing code in the enum CodeModelStorageOption"},"files":[],"sha":"16b16087bc3dbf7a87c50757e70fbdfbaef8fa92"},{"commit":{"message":"Add a program to test storing code that builds code model"},"files":[],"sha":"d4d3a25cce09eb5dc8bda5398e5143494a55e14a"},{"commit":{"message":"Add JavaType -> Type mapping for Block.Parameter"},"files":[],"sha":"132fb5fcc8606120fff0447327ff3bc5e9c4403d"},{"commit":{"message":"Support storing code that builds code model"},"files":[],"sha":"c3a71f94fd27540a0445eded7eae9fe160c6298e"},{"commit":{"message":"Make TEXT the default storage mechanism for code models"},"files":[],"sha":"4cdc021e6c2b29b90bd9559710a29c0532957c01"},{"commit":{"message":"Add option to indicate how to store code model"},"files":[],"sha":"0d53ba1674b7c715aaf1f3d0ceacaa6cfcd03043"}]