{"files":[{"patch":"@@ -452,0 +452,7 @@\n+\/\/        ExtendedOp.FACTORY;\n+        cob.fieldAccess(Opcode.GETSTATIC, CodeReflectionSupport.EXTENDED_OP_CLASS.describeConstable().get(),\n+                \"FACTORY\", CodeReflectionSupport.OP_FACTORY_CLASS.describeConstable().get());\n+\/\/        CoreTypeFactory.CORE_TYPE_FACTORY\n+        cob.fieldAccess(Opcode.GETSTATIC, CodeReflectionSupport.CORE_TYPE_FACTORY_CLASS.describeConstable().get(),\n+                \"CORE_TYPE_FACTORY\",\n+                CodeReflectionSupport.TYPE_ELEMENT_FACTORY_CLASS.describeConstable().get());\n@@ -453,0 +460,1 @@\n+        cob.checkcast(CodeReflectionSupport.FUNC_OP_CLASS.describeConstable().get());\n@@ -479,0 +487,5 @@\n+        static final Class<?> EXTENDED_OP_CLASS;\n+        static final Class<?> OP_FACTORY_CLASS;\n+        static final Class<?> CORE_TYPE_FACTORY_CLASS;\n+        static final Class<?> TYPE_ELEMENT_FACTORY_CLASS;\n+        static final Class<?> FUNC_OP_CLASS;\n@@ -487,1 +500,1 @@\n-                Class<?> funcOp = cl.loadClass(\"jdk.incubator.code.op.CoreOp$FuncOp\");\n+                FUNC_OP_CLASS = cl.loadClass(\"jdk.incubator.code.op.CoreOp$FuncOp\");\n@@ -489,1 +502,1 @@\n-                        MethodType.methodType(QUOTED_CLASS, MethodHandles.Lookup.class, funcOp, Object[].class));\n+                        MethodType.methodType(QUOTED_CLASS, MethodHandles.Lookup.class, FUNC_OP_CLASS, Object[].class));\n@@ -491,0 +504,4 @@\n+                EXTENDED_OP_CLASS = cl.loadClass(\"jdk.incubator.code.op.ExtendedOp\");\n+                OP_FACTORY_CLASS = cl.loadClass(\"jdk.incubator.code.op.OpFactory\");\n+                CORE_TYPE_FACTORY_CLASS = cl.loadClass(\"jdk.incubator.code.type.CoreTypeFactory\");\n+                TYPE_ELEMENT_FACTORY_CLASS = cl.loadClass(\"jdk.incubator.code.type.TypeElementFactory\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"}]}