[{"commit":{"message":"Merge branch 'code-reflection' into code-model-storage-option"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java"}],"sha":"3e3095cb6b9db9fa492c8914336aa0903adb1695"},{"commit":{"message":"Make return type of opMethod the same for all storage options"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java"}],"sha":"f9432afc1f725464141b460f1b447ec5bfa20002"},{"commit":{"message":"Changes in code due to making opMethod signature uniform"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/Op.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"bf96a44a302a42c85870195bfdf514fbb8515b88"},{"commit":{"message":"Make opMethod descriptor consistent for both storage options."},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java"}],"sha":"2e30920ab6b0847f2d9afdf25b4b304c0c1c6845"},{"commit":{"message":"Don't rely on the assumption of 1d array"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java"}],"sha":"95f227ee029feff579fd47e08953f382a2022982"},{"commit":{"message":"Merge branch 'code-reflection' into code-model-storage-option"},"files":[],"sha":"966005ceabc8f881e6ab7e1d6a0b44f343071696"},{"commit":{"message":"Load OpFactory and TypeElementFactory before invocation of opMethod only if the opMethod has there params."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"}],"sha":"0e49cceb3eea20b541e1fe43adcdbea9564aec23"},{"commit":{"message":"Fix the remaining compiler tests failures"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeReflectionSymbols.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java"}],"sha":"ee0f906ef3f65cdd98d7a3197eed0066e8939b10"},{"commit":{"message":"Fix some of the test failures (3 remains)"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"}],"sha":"cd143c3774092d3e76840a93c0638e8df971e862"},{"commit":{"message":"Fix the remaining test failures of SwitchExpressionTest2"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/writer\/OpBuilder.java"}],"sha":"c17be6b6eccf99ceed8bc11bba9525493bb0e347"},{"commit":{"message":"Fix almost all test failures of SwitchExpressionTest2 (one remaining)"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java"}],"sha":"5f02f73eafa61b054fc94456c80245612c0fe019"},{"commit":{"message":"Pass arrayType instead of eleType in OpBuilder.buildArray"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/writer\/OpBuilder.java"}],"sha":"a1d134c3c6ced2ac4810fe629899e2979aa52788"},{"commit":{"message":"Ensure that block params are inserted in the correct order"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java"}],"sha":"c232366190dad1b82c14b0db571665df73ec62c4"},{"commit":{"message":"Add missing imports"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/Op.java"}],"sha":"e9fcd8c7ebfe28c262e0d6043682f7293ebc991f"},{"commit":{"message":"Merge branch 'code-reflection' into code-model-storage-option"},"files":[],"sha":"f8327908fcbf0e8fed188d49b11ace7663c60433"},{"commit":{"message":"Add comment"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java"}],"sha":"cd302fc9f8f9696da79375d062344af765695a54"},{"commit":{"message":"Support storing code that builds code model"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/Op.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java"}],"sha":"86a3959d594758b1d7d7b11afcad60a94e953e59"},{"commit":{"message":"Reformat code"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java"}],"sha":"21c12cb36b7fdee86a09c8aebaca66b660e44b2b"},{"commit":{"message":"Apply fixes from Maurizio"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java"}],"sha":"54e4c308cbc6c8b4547b5cd799053925cfde8bc7"},{"commit":{"message":"Define parsing code in the enum CodeModelStorageOption"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java"}],"sha":"16b16087bc3dbf7a87c50757e70fbdfbaef8fa92"},{"commit":{"message":"Add a program to test storing code that builds code model"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java"}],"sha":"d4d3a25cce09eb5dc8bda5398e5143494a55e14a"},{"commit":{"message":"Add JavaType -> Type mapping for Block.Parameter"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java"}],"sha":"132fb5fcc8606120fff0447327ff3bc5e9c4403d"},{"commit":{"message":"Support storing code that builds code model"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeReflectionSymbols.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestAddVarsWhenNecessary.java"}],"sha":"c3a71f94fd27540a0445eded7eae9fe160c6298e"},{"commit":{"message":"Make TEXT the default storage mechanism for code models"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java"}],"sha":"4cdc021e6c2b29b90bd9559710a29c0532957c01"},{"commit":{"message":"Add option to indicate how to store code model"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java"}],"sha":"0d53ba1674b7c715aaf1f3d0ceacaa6cfcd03043"}]