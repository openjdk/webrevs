{"files":[{"patch":"@@ -143,0 +143,8 @@\n+                if (newOp.resultType() instanceof ArrayType at) {\n+                    var elemType = treeMaker.Ident(typeElementToType(at.componentType()).tsym);\n+                    \/\/ @@@ we assume one dimension\n+                    var dims = List.of((JCTree.JCExpression) valueToTree.get(newOp.operands().getFirst()));\n+                    var na = treeMaker.NewArray(elemType, dims, null);\n+                    na.type = typeElementToType(at);\n+                    yield na;\n+                }\n@@ -187,0 +195,11 @@\n+            case CoreOp.ArrayAccessOp.ArrayStoreOp arrayStoreOp -> {\n+                var array = arrayStoreOp.operands().get(0);\n+                var val = arrayStoreOp.operands().get(1);\n+                var index = arrayStoreOp.operands().get(2);\n+                var as = treeMaker.Assign(\n+                        treeMaker.Indexed((JCTree.JCExpression) valueToTree.get(array), (JCTree.JCExpression) valueToTree.get(index)),\n+                        (JCTree.JCExpression) valueToTree.get(val)\n+                );\n+                yield treeMaker.Exec(as);\n+                \/\/ body builder are created but never passed when creating the op, why ?\n+            }\n@@ -203,0 +222,1 @@\n+        funcOp.writeTo(System.out);\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -908,1 +908,1 @@\n-    @CodeReflection\n+    \/\/@CodeReflection\n","filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}