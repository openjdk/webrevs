{"files":[{"patch":"@@ -319,1 +319,1 @@\n-    public OrtTensor loadTensorFromFlatMemoryMappedDataFile(String file, TensorShape shape, Tensor.ElementType elementType) throws IOException {\n+    public OrtTensor loadFlatTensorFromMemoryMappedDataFile(String file, Tensor.ElementType elementType) throws IOException {\n@@ -321,1 +321,1 @@\n-        return createTensor(f.getChannel().map(FileChannel.MapMode.READ_ONLY, 0, f.length(), arena), shape, elementType);\n+        return createFlatTensor(f.getChannel().map(FileChannel.MapMode.READ_ONLY, 0, f.length(), arena), elementType);\n@@ -325,1 +325,1 @@\n-        return createTensor(new TensorShape((long)elements.length), elements);\n+        return createFlatTensor(arena.allocateFrom(JAVA_FLOAT, elements), Tensor.ElementType.FLOAT);\n@@ -328,5 +328,2 @@\n-    OrtTensor createTensor(TensorShape shape, float... elements) {\n-        return createTensor(arena.allocateFrom(JAVA_FLOAT, elements), shape, Tensor.ElementType.FLOAT);\n-    }\n-\n-    private OrtTensor createTensor(MemorySegment flatData, TensorShape shape, Tensor.ElementType elementType) {\n+    private OrtTensor createFlatTensor(MemorySegment flatData, Tensor.ElementType elementType) {\n+        var flatShape = new TensorShape(flatData.byteSize() \/ elementType.size());\n@@ -335,1 +332,1 @@\n-            return new OrtTensor(retAddr(createTensorWithDataAsOrtValue.invokeExact(allocatorInfo, flatData, flatData.byteSize(), shape.dataAddress, shape.getDimensionsCount(), elementType.id, ret)));\n+            return new OrtTensor(retAddr(createTensorWithDataAsOrtValue.invokeExact(allocatorInfo, flatData, flatData.byteSize(), flatShape.dataAddress, 1l, elementType.id, ret)));\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxRuntime.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -25,2 +25,1 @@\n-            var inputShape = ((OnnxRuntime.OrtTensorTypeAndShapeInfo)absOp.getInputTypeInfo(0)).getShape();\n-            var inputTensor = ort.createTensor(inputShape, -1, 2, -3, 4, -5, 6);\n+            var inputTensor = ort.createFlatTensor(-1, 2, -3, 4, -5, 6);\n@@ -28,2 +27,1 @@\n-            var absExpectedShape = ((OnnxRuntime.OrtTensorTypeAndShapeInfo)absOp.getOutputTypeInfo(0)).getShape();\n-            var absExpectedTensor = ort.createTensor(absExpectedShape, 1, 2, 3, 4, 5, 6);\n+            var absExpectedTensor = ort.createFlatTensor(1, 2, 3, 4, 5, 6);\n@@ -45,2 +43,1 @@\n-            var addExpectedShape = ((OnnxRuntime.OrtTensorTypeAndShapeInfo)absOp.getOutputTypeInfo(0)).getShape();\n-            var addExpectedTensor = ort.createTensor(addExpectedShape, 0, 4, 0, 8, 0, 12);\n+            var addExpectedTensor = ort.createFlatTensor(0, 4, 0, 8, 0, 12);\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/RuntimeTest.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}