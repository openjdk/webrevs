{"files":[{"patch":"@@ -52,1 +52,1 @@\n-    \/\/ Weights\n+    \/\/ Weights (constant inputs)\n@@ -64,0 +64,1 @@\n+    \/\/ Constructed by the swing application\n@@ -79,1 +80,19 @@\n-    \/\/ The machine learning model, a convolutional neural network\n+    \/\/ Invoked every time to predict a number\n+    public float[] classify(float[] imageData) {\n+        \/\/ Manage per-execution data in a confined arena\n+        try (Arena arena = Arena.ofConfined()) {\n+            \/\/ Convert the image to an input tensor\n+            var imageTensor = Tensor.ofShape(arena, new long[]{1, 1, IMAGE_SIZE, IMAGE_SIZE}, imageData);\n+\n+            \/\/ Execute the machine learning model\n+            \/\/ Translate the Java code to an ONNX model and execute in the ONNX runtime\n+            var predictionTensor = OnnxRuntime.execute(arena, MethodHandles.lookup(),\n+                    () -> cnn(imageTensor));\n+\n+            \/\/ Convert the output predication tensor to float[]\n+            return predictionTensor.data().toArray(ValueLayout.JAVA_FLOAT);\n+        }\n+    }\n+\n+    \/\/ The machine learning model, a convolutional neural network,\n+    \/\/ which is a type of deep learning network.\n@@ -123,16 +142,0 @@\n-\n-    public float[] classify(float[] imageData) {\n-        \/\/ Manage per-execution data in a confined arena\n-        try (Arena arena = Arena.ofConfined()) {\n-            \/\/ Convert the image to an input tensor\n-            var imageTensor = Tensor.ofShape(arena, new long[]{1, 1, IMAGE_SIZE, IMAGE_SIZE}, imageData);\n-\n-            \/\/ Execute the machine learning model\n-            \/\/ Translate the Java code to an ONNX model and execute in the ONNX runtime\n-            var predictionTensor = OnnxRuntime.execute(arena, MethodHandles.lookup(),\n-                    () -> cnn(imageTensor));\n-\n-            \/\/ Convert the output predication to float[]\n-            return predictionTensor.data().toArray(ValueLayout.JAVA_FLOAT);\n-        }\n-    }\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/mnist\/MNISTModel.java","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"}]}