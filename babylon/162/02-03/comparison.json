{"files":[{"patch":"@@ -46,1 +46,0 @@\n-import java.io.CharArrayWriter;\n@@ -58,0 +57,1 @@\n+import java.lang.reflect.code.type.MethodRef;\n@@ -281,5 +281,1 @@\n-        CharArrayWriter sigB = new CharArrayWriter();\n-        for (var p : parameterTypes) {\n-            sigB.append(p.descriptorString());\n-        }\n-        char[] sig = sigB.toCharArray();\n+        char[] sig = MethodRef.method(this).toString().toCharArray();\n@@ -291,1 +287,1 @@\n-        String fieldName = getName() + \"$\" + new String(sig) + \"$\" + \"op\";\n+        String fieldName = new String(sig) + \"$\" + \"op\";\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -91,1 +91,0 @@\n-import java.io.CharArrayWriter;\n@@ -195,1 +194,1 @@\n-                classOps.add(opFieldDecl(methodName(tree), tree.getModifiers().flags, funcOp));\n+                classOps.add(opFieldDecl(methodName(bodyScanner.symbolToErasedMethodRef(tree.sym)), tree.getModifiers().flags, funcOp));\n@@ -358,20 +357,2 @@\n-    Name methodName(JCMethodDecl method) {\n-        CharArrayWriter sig = new CharArrayWriter();\n-        var sigGen = new Types.SignatureGenerator(types) {\n-            @Override\n-            protected void append(char ch) {\n-                sig.append(ch);\n-            }\n-            @Override\n-            protected void append(byte[] ba) {\n-                sig.append(new String(ba));\n-            }\n-            @Override\n-            protected void append(Name name) {\n-                sig.append(name.toString());\n-            }\n-        };\n-        for (var pt : method.sym.externalType(types).getParameterTypes()) {\n-            sigGen.assembleSig(types.erasure(pt));\n-        }\n-        char[] sigCh = sig.toCharArray();\n+    Name methodName(MethodRef method) {\n+        char[] sigCh = method.toString().toCharArray();\n@@ -383,1 +364,1 @@\n-        return method.name.append('$', names.fromChars(sigCh, 0, sigCh.length));\n+        return names.fromChars(sigCh, 0, sigCh.length);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java","additions":4,"deletions":23,"binary":false,"changes":27,"status":"modified"}]}