{"files":[{"patch":"@@ -111,1 +111,5 @@\n-                    case PrimitiveType pt -> pt.box().orElseThrow();\n+                    \/\/ @@@ Deconstruct and test what the var holds\n+                    case VarType _ -> JavaType.type(CoreOp.Var.class);\n+                    \/\/ Allow reflection to convert between primitive values\n+                    \/\/ @@@ Check conversion compatible\n+                    case PrimitiveType _ -> JavaType.J_L_OBJECT;\n@@ -116,1 +120,1 @@\n-                if (!c.isInstance(rv)) {\n+                if (rv != null && !c.isInstance(rv)) {\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/interpreter\/Interpreter.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,2 +61,0 @@\n-        Assert.assertThrows(() -> Interpreter.invoke(MethodHandles.lookup(), funcOp, null, 2));\n-\n@@ -64,1 +62,0 @@\n-\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/interpreter\/TestArgsTypesValidationWhenInterpreting.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}