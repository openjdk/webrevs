{"files":[{"patch":"@@ -76,1 +76,1 @@\n-    public void testDoubleRoundtripStability() throws Exception {\n+    public void testTripleRoundtripStability() throws Exception {\n@@ -95,2 +95,2 @@\n-        \/\/ Roundtrip is >94% stable, no exceptions, no verification errors\n-        Assert.assertTrue(stable > 61810 && unstable < 3480 && errorStats.isEmpty(), String.format(\"\"\"\n+        \/\/ Roundtrip is >98% stable, no exceptions, no verification errors\n+        Assert.assertTrue(stable > 64400 && unstable < 930 && errorStats.isEmpty(), String.format(\"\"\"\n@@ -123,11 +123,22 @@\n-                            \/\/ testing only methods passing through\n-                            var firstdNormalized = normalize(firstModel);\n-                            var secondNormalized = normalize(secondModel);\n-                            if (!secondNormalized.equals(firstdNormalized)) {\n-                                unstable++;\n-                                System.out.println(clm.thisClass().asInternalName() + \"::\" + originalModel.methodName().stringValue() + originalModel.methodTypeSymbol().displayDescriptor());\n-                                printInColumns(firstLift, secondLift);\n-                                printInColumns(firstdNormalized, secondNormalized);\n-                                System.out.println();\n-                            } else {\n-                                stable++;\n+                            try {\n+                                CoreOp.FuncOp thirdLift = lift(secondModel);\n+                                try {\n+                                    MethodModel thirdModel = lower(thirdLift);\n+                                    verify(\"third verify\", thirdModel);\n+                                    \/\/ testing only methods passing through\n+                                    var secondNormalized = normalize(secondModel);\n+                                    var thirdNormalized = normalize(thirdModel);\n+                                    if (!thirdNormalized.equals(secondNormalized)) {\n+                                        unstable++;\n+                                        System.out.println(clm.thisClass().asInternalName() + \"::\" + originalModel.methodName().stringValue() + originalModel.methodTypeSymbol().displayDescriptor());\n+                                        printInColumns(secondLift, thirdLift);\n+                                        printInColumns(secondNormalized, thirdNormalized);\n+                                        System.out.println();\n+                                    } else {\n+                                        stable++;\n+                                    }\n+                                } catch (Throwable t) {\n+                                    error(\"third lower\", t);\n+                                }\n+                            } catch (Throwable t) {\n+                                error(\"third lift\", t);\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java","additions":25,"deletions":14,"binary":false,"changes":39,"status":"modified"}]}