{"files":[{"patch":"@@ -157,1 +157,1 @@\n-     * @return a map of block to its immediate dominator\n+     * @return a map of block to its immediate dominator, as an unmodifiable map\n@@ -172,1 +172,4 @@\n-        Map<Block, Block> doms = idoms = new HashMap<>();\n+        \/\/ @@@ Compute the idoms as a block index mapping using int[]\n+        \/\/ and wrap and a specific map implementation\n+\n+        Map<Block, Block> doms = new HashMap<>();\n@@ -212,1 +215,1 @@\n-        return doms;\n+        return idoms = Collections.unmodifiableMap(doms);\n@@ -236,1 +239,1 @@\n-     * @return the dominance frontier of each block in the body\n+     * @return the dominance frontier of each block in the body, as a modifiable map\n@@ -250,1 +253,1 @@\n-                        df.computeIfAbsent(runner, k -> new LinkedHashSet<>()).add(b);\n+                        df.computeIfAbsent(runner, _ -> new LinkedHashSet<>()).add(b);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Body.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -52,0 +52,23 @@\n+    public void testUnmodifiableIdoms() {\n+        CoreOp.FuncOp f = func(\"f\", FunctionType.VOID).body(entry -> {\n+            Block.Builder ifBlock = entry.block();\n+            Block.Builder elseBlock = entry.block();\n+            Block.Builder end = entry.block();\n+\n+            Op.Result p = entry.op(constant(JavaType.BOOLEAN, true));\n+            entry.op(conditionalBranch(p, ifBlock.successor(), elseBlock.successor()));\n+\n+            ifBlock.op(branch(end.successor()));\n+\n+            elseBlock.op(branch(end.successor()));\n+\n+            end.op(_return());\n+        });\n+\n+        Map<Block, Block> idoms = f.body().immediateDominators();\n+        Assert.assertThrows(UnsupportedOperationException.class,\n+                () -> idoms.put(f.body().entryBlock(), f.body().entryBlock()));\n+        Assert.assertThrows(UnsupportedOperationException.class,\n+                idoms::clear);\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestDominate.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}