{"files":[{"patch":"@@ -215,0 +215,3 @@\n+                                    \/\/ @@@  The slot is reused with a different type\n+                                    \/\/ so we need to update the existing entry in the map.\n+                                    \/\/ This likely always connects to how to manage the map with conditional branching.\n@@ -226,1 +229,1 @@\n-                        case ConstantInstruction.LoadConstantInstruction inst -> {\n+                        case ConstantInstruction inst -> {\n@@ -239,4 +242,0 @@\n-                        case ConstantInstruction inst -> {\n-                            Op.Result result = b.op(CoreOps.constant(TypeDesc.INT, inst.constantValue()));\n-                            stack.push(result);\n-                        }\n@@ -393,1 +392,1 @@\n-                            stack.push(b.op(CoreOps.branch(sb)));\n+                            b.op(CoreOps.branch(sb));\n@@ -396,0 +395,1 @@\n+                            \/\/ Conditional branch\n@@ -417,1 +417,4 @@\n-                            stack.push(b.op(CoreOps.conditionalBranch(b.op(cop), c.blockMap.get(tslb).successor(), c.blockMap.get(fslb).successor())));\n+                            stack.push(b.op(CoreOps.conditionalBranch(\n+                                    b.op(cop),\n+                                    c.blockMap.get(tslb).successor(),\n+                                    c.blockMap.get(fslb).successor())));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"}]}