{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import java.lang.foreign.MemorySegment;\n@@ -34,1 +33,0 @@\n-import java.util.SequencedMap;\n@@ -38,6 +36,0 @@\n-    static List<MemorySegment> toTensors(List<Object> inputs) {\n-        return inputs.stream().takeWhile(i -> !(i instanceof Optional o && o.isEmpty()))\n-                              .map(i -> ((Tensor)(i instanceof Optional o ? o.get() : i)).tensorAddr)\n-                              .toList();\n-    }\n-\n@@ -64,1 +56,3 @@\n-                    toTensors(inputs),\n+                    inputs.stream().takeWhile(i -> !(i instanceof Optional o && o.isEmpty())) \/\/ @@@ assuming gaps in the optional inputs are not allowed\n+                              .map(i -> ((Tensor)(i instanceof Optional o ? o.get() : i)).tensorAddr)\n+                              .toList(),\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxInterpreter.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"}]}