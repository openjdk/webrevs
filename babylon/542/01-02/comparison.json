{"files":[{"patch":"@@ -200,1 +200,1 @@\n-            if (same.equals(user)) {\n+            if (same == user) {\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/analysis\/SSABraun.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -238,0 +238,23 @@\n+    @CodeReflection\n+    static int violaJonesTwo(int x, int maxX, int length, int integral) {\n+        int scale = 0, scale_extra = 1;\n+        scale++;\n+        int j = 9;\n+        while (x > scale && scale < length) {\n+            j = 1;\n+        }\n+        for (int i = 0; i < integral; i++) {\n+            scale--;\n+        }\n+        return scale + scale_extra + j;\n+    }\n+\n+    @Test\n+    public void testViolaJonesTwo() {\n+        CoreOp.FuncOp f = getFuncOp(\"violaJonesTwo\");\n+\n+        CoreOp.FuncOp lf = generate(f);\n+\n+        Assert.assertEquals((int) Interpreter.invoke(MethodHandles.lookup(), lf, 0, 1, 0, 0), violaJonesTwo(0, 1, 0, 0));\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestSSA.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}