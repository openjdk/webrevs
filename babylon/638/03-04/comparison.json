{"files":[{"patch":"@@ -26,1 +26,0 @@\n-import java.lang.foreign.ValueLayout;\n@@ -28,1 +27,0 @@\n-import java.util.HexFormat;\n@@ -59,2 +57,2 @@\n-        import foreign.Arena;\n-        import foreign.MemorySegment;\n+        import java.lang.foreign.Arena;\n+        import java.lang.foreign.MemorySegment;\n@@ -62,0 +60,1 @@\n+        import java.util.List;\n@@ -65,1 +64,1 @@\n-        import static Optional.*;\n+        import static java.util.Optional.*;\n@@ -207,7 +206,1 @@\n-            case Tensor t when t.shape().length == 0 && t.elementType() == Tensor.ElementType.BOOL -> \"Tensor.ofScalar(\" + t.data().get(ValueLayout.JAVA_BOOLEAN, 0) + \")\";\n-            case Tensor t when t.shape().length == 0 && t.elementType() == Tensor.ElementType.INT8 -> \"Tensor.ofScalar((byte)\" + t.data().get(ValueLayout.JAVA_BYTE, 0) + \")\";\n-            case Tensor t -> \"Tensor.ofShape(\" + toString(t.shape()) + \", \" + switch (t.elementType()) {\n-                case FLOAT -> toString(t.data().toArray(ValueLayout.JAVA_FLOAT));\n-                case INT64 -> toString(t.data().toArray(ValueLayout.JAVA_LONG));\n-                default -> \"HexFormat.of().parseHex(\\\"\" + HexFormat.of().formatHex(t.data().toArray(ValueLayout.JAVA_BYTE)) + \"\\\"), \" + t.elementType().name();\n-            } + \")\";\n+            case Tensor _ -> throw new UnsupportedOperationException();\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/lift\/JavaTemplate.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -357,1 +357,1 @@\n-                                default -> attributes.put(OnnxOps.Constant.Attribute.value.name(), t);\n+                                default -> throw new UnsupportedOperationException(t.elementType().name() + \" Constant attribute tensor type\");\n@@ -364,1 +364,1 @@\n-                                default -> attributes.put(OnnxOps.Constant.Attribute.value.name(), t);\n+                                default -> throw new UnsupportedOperationException(t.elementType().name() + \" Constant attribute tensor type\");\n@@ -367,1 +367,1 @@\n-                        default ->  attributes.put(OnnxOps.Constant.Attribute.value.name(), t);\n+                        default -> throw new UnsupportedOperationException(\"multidimensional Constant attribute tensor\");\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/lift\/OnnxLift.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}