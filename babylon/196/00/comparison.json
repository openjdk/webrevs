{"files":[{"patch":"@@ -8,2 +8,0 @@\n-import java.lang.foreign.GroupLayout;\n-import java.lang.foreign.MemoryLayout;\n@@ -25,0 +23,1 @@\n+\n@@ -42,1 +41,1 @@\n-    public T allocate(Accelerator accelerator,  int... boundLengths) {\n+    public T allocate(Accelerator accelerator, int... boundLengths) {\n@@ -44,1 +43,1 @@\n-        T instance = (T)boundSchema.allocate(accelerator.lookup, accelerator);\n+        T instance = (T) boundSchema.allocate(accelerator.lookup, accelerator);\n@@ -47,18 +46,16 @@\n-        boundSchema.rootBoundSchemaNode().fieldLayouts.forEach(fieldLayout -> {\n-                if (fieldLayout instanceof BoundSchema.BoundArrayFieldLayout boundArrayFieldLayout) {\n-                    boundArrayFieldLayout.dimFields.forEach(dimLayout -> {\n-                        long dimOffset = dimLayout.offset();\n-                        int dim = boundLengths[count[0]++];\n-                        if (dimLayout.field instanceof FieldNode.ArrayLen arrayLen){\n-                            if (arrayLen.key.accessorType.equals(AccessorInfo.AccessorType.GETTER_AND_SETTER)){\n-                                throw new IllegalStateException(\"You have a bound array dim field \"+dimLayout.field.name+\" controlling size of \"+boundArrayFieldLayout.field.name+\"[] which has a setter \");\n-                            }\n-                            if (arrayLen.type == Long.TYPE){\n-                                memorySegment.set(ValueLayout.JAVA_LONG,dimOffset,dim);\n-                            }else if (arrayLen.type == Integer.TYPE){\n-                                memorySegment.set(ValueLayout.JAVA_INT,dimOffset,dim);\n-                            }else{\n-                                throw new IllegalArgumentException(\"Unsupported array length type: \" + arrayLen.type);\n-                            }\n-                        }\n-                    });\n+\n+        boundSchema.boundArrayFields().forEach(boundArrayFieldLayout -> {\n+            boundArrayFieldLayout.dimFields.forEach(dimLayout -> {\n+                long dimOffset = dimLayout.offset();\n+                int dim = boundLengths[count[0]++];\n+                if (dimLayout.field instanceof FieldNode.ArrayLen arrayLen) {\n+                    if (arrayLen.key.accessorType.equals(AccessorInfo.AccessorType.GETTER_AND_SETTER)) {\n+                        throw new IllegalStateException(\"You have a bound array dim field \" + dimLayout.field.name + \" controlling size of \" + boundArrayFieldLayout.field.name + \"[] which has a setter \");\n+                    }\n+                    if (arrayLen.type == Long.TYPE) {\n+                        memorySegment.set(ValueLayout.JAVA_LONG, dimOffset, dim);\n+                    } else if (arrayLen.type == Integer.TYPE) {\n+                        memorySegment.set(ValueLayout.JAVA_INT, dimOffset, dim);\n+                    } else {\n+                        throw new IllegalArgumentException(\"Unsupported array length type: \" + arrayLen.type);\n+                    }\n@@ -66,0 +63,1 @@\n+            });\n@@ -68,0 +66,1 @@\n+\n","filename":"hat\/hat\/src\/main\/java\/hat\/ifacemapper\/Schema.java","additions":21,"deletions":22,"binary":false,"changes":43,"status":"modified"}]}