{"files":[{"patch":"@@ -46,0 +46,52 @@\n+    \/**\n+     * An operation that models a Java expression\n+     *\/\n+    sealed interface JavaExpression permits\n+            ArithmeticOperation,\n+            ArrayAccessOp.ArrayLoadOp,\n+            ArrayAccessOp.ArrayStoreOp,\n+            ArrayLengthOp,\n+            CastOp,\n+            ConvOp,\n+            ClosureOp,\n+            ConcatOp,\n+            ConstantOp,\n+            FieldAccessOp.FieldLoadOp,\n+            FieldAccessOp.FieldStoreOp,\n+            InstanceOfOp,\n+            InvokeOp,\n+            LambdaOp,\n+            NewOp,\n+            TestOperation,\n+            VarAccessOp.VarLoadOp,\n+            VarAccessOp.VarStoreOp,\n+            ExtendedOp.JavaConditionalExpressionOp,\n+            ExtendedOp.JavaConditionalOp,\n+            ExtendedOp.JavaSwitchExpressionOp {\n+    }\n+\n+    \/**\n+     * An operation that models a Java statement\n+     *\/\n+    sealed interface JavaStatement permits\n+            ArrayAccessOp.ArrayStoreOp,\n+            AssertOp,\n+            FieldAccessOp.FieldStoreOp,\n+            InvokeOp,\n+            NewOp,\n+            ReturnOp,\n+            ThrowOp,\n+            VarAccessOp.VarStoreOp,\n+            VarOp,\n+            ExtendedOp.JavaBlockOp,\n+            ExtendedOp.JavaDoWhileOp,\n+            ExtendedOp.JavaEnhancedForOp,\n+            ExtendedOp.JavaForOp,\n+            ExtendedOp.JavaIfOp,\n+            ExtendedOp.JavaLabelOp,\n+            ExtendedOp.JavaLabeledOp,\n+            ExtendedOp.JavaTryOp,\n+            ExtendedOp.JavaWhileOp,\n+            ExtendedOp.JavaYieldOp {\n+    }\n+\n@@ -64,1 +116,0 @@\n-\n@@ -66,1 +117,1 @@\n-     * The function operation, that can model a Java method.\n+     * The function operation, that can model a Java method declaration.\n@@ -69,1 +120,2 @@\n-    public static final class FuncOp extends CoreOp implements Op.Invokable, Op.Isolated, Op.Lowerable {\n+    public static final class FuncOp extends CoreOp\n+            implements Op.Invokable, Op.Isolated, Op.Lowerable {\n@@ -258,1 +310,2 @@\n-    public static final class ModuleOp extends CoreOp implements Op.Isolated {\n+    public static final class ModuleOp extends CoreOp\n+            implements Op.Isolated {\n@@ -342,1 +395,2 @@\n-    public static final class QuotedOp extends CoreOp implements Op.Nested, Op.Lowerable, Op.Pure {\n+    public static final class QuotedOp extends CoreOp\n+            implements Op.Nested, Op.Lowerable, Op.Pure {\n@@ -428,1 +482,2 @@\n-    public static final class LambdaOp extends CoreOp implements Op.Invokable, Op.Lowerable {\n+    public static final class LambdaOp extends CoreOp\n+            implements Op.Invokable, Op.Lowerable, JavaExpression {\n@@ -655,1 +710,2 @@\n-    public static final class ClosureOp extends CoreOp implements Op.Invokable, Op.Lowerable {\n+    public static final class ClosureOp extends CoreOp\n+            implements Op.Invokable, Op.Lowerable, JavaExpression {\n@@ -773,1 +829,2 @@\n-    public static final class ReturnOp extends CoreOp implements Op.BodyTerminating {\n+    public static final class ReturnOp extends CoreOp\n+            implements Op.BodyTerminating, JavaStatement {\n@@ -820,1 +877,2 @@\n-    public static final class ThrowOp extends CoreOp implements Op.BodyTerminating {\n+    public static final class ThrowOp extends CoreOp\n+            implements Op.BodyTerminating, JavaStatement {\n@@ -858,1 +916,2 @@\n-    public static final class AssertOp extends CoreOp implements Op.Nested {\n+    public static final class AssertOp extends CoreOp\n+            implements Op.Nested, JavaStatement {\n@@ -909,1 +968,2 @@\n-    public static final class UnreachableOp extends CoreOp implements Op.BodyTerminating {\n+    public static final class UnreachableOp extends CoreOp\n+            implements Op.BodyTerminating {\n@@ -946,1 +1006,2 @@\n-    public static final class YieldOp extends CoreOp implements Op.BodyTerminating {\n+    public static final class YieldOp extends CoreOp\n+            implements Op.BodyTerminating {\n@@ -995,1 +1056,2 @@\n-    public static final class BranchOp extends CoreOp implements Op.BlockTerminating {\n+    public static final class BranchOp extends CoreOp\n+            implements Op.BlockTerminating {\n@@ -1050,1 +1112,2 @@\n-    public static final class ConditionalBranchOp extends CoreOp implements Op.BlockTerminating {\n+    public static final class ConditionalBranchOp extends CoreOp\n+            implements Op.BlockTerminating {\n@@ -1113,1 +1176,2 @@\n-    public static final class ConstantOp extends CoreOp implements Op.Pure {\n+    public static final class ConstantOp extends CoreOp\n+            implements Op.Pure, JavaExpression {\n@@ -1248,1 +1312,2 @@\n-    public static final class InvokeOp extends CoreOp implements ReflectiveOp {\n+    public static final class InvokeOp extends CoreOp\n+            implements ReflectiveOp, JavaExpression, JavaStatement {\n@@ -1318,2 +1383,2 @@\n-     * The conversion operation, that can model Java language implicit and explicit\n-     * conversions such as widening and narrowing.\n+     * The conversion operation, that can model Java language cast expressions\n+     * for numerical conversion, or such implicit conversion.\n@@ -1322,1 +1387,2 @@\n-    public static final class ConvOp extends CoreOp implements Op.Pure {\n+    public static final class ConvOp extends CoreOp\n+            implements Op.Pure, JavaExpression {\n@@ -1360,1 +1426,2 @@\n-    public static final class NewOp extends CoreOp implements ReflectiveOp {\n+    public static final class NewOp extends CoreOp\n+            implements ReflectiveOp, JavaExpression, JavaStatement {\n@@ -1444,1 +1511,2 @@\n-    public sealed abstract static class FieldAccessOp extends CoreOp implements AccessOp, ReflectiveOp {\n+    public sealed abstract static class FieldAccessOp extends CoreOp\n+            implements AccessOp, ReflectiveOp {\n@@ -1484,1 +1552,2 @@\n-        public static final class FieldLoadOp extends FieldAccessOp implements Op.Pure {\n+        public static final class FieldLoadOp extends FieldAccessOp\n+                implements Op.Pure, JavaExpression {\n@@ -1546,1 +1615,2 @@\n-        public static final class FieldStoreOp extends FieldAccessOp {\n+        public static final class FieldStoreOp extends FieldAccessOp\n+                implements JavaExpression, JavaStatement {\n@@ -1601,1 +1671,2 @@\n-    public static final class ArrayLengthOp extends CoreOp implements ReflectiveOp {\n+    public static final class ArrayLengthOp extends CoreOp\n+            implements ReflectiveOp, JavaExpression {\n@@ -1630,1 +1701,2 @@\n-    public sealed abstract static class ArrayAccessOp extends CoreOp implements AccessOp, ReflectiveOp {\n+    public sealed abstract static class ArrayAccessOp extends CoreOp\n+            implements AccessOp, ReflectiveOp {\n@@ -1679,1 +1751,2 @@\n-        public static final class ArrayLoadOp extends ArrayAccessOp implements Op.Pure {\n+        public static final class ArrayLoadOp extends ArrayAccessOp\n+                implements Op.Pure, JavaExpression {\n@@ -1712,1 +1785,2 @@\n-        public static final class ArrayStoreOp extends ArrayAccessOp {\n+        public static final class ArrayStoreOp extends ArrayAccessOp\n+                implements JavaExpression, JavaStatement {\n@@ -1744,1 +1818,2 @@\n-    public static final class InstanceOfOp extends CoreOp implements Op.Pure, ReflectiveOp {\n+    public static final class InstanceOfOp extends CoreOp\n+            implements Op.Pure, ReflectiveOp, JavaExpression {\n@@ -1806,1 +1881,1 @@\n-     * The cast operation, that can model Java language cast expressions.\n+     * The cast operation, that can model Java language cast expressions for reference types.\n@@ -1809,1 +1884,2 @@\n-    public static final class CastOp extends CoreOp implements Op.Pure, ReflectiveOp {\n+    public static final class CastOp extends CoreOp\n+            implements Op.Pure, ReflectiveOp, JavaExpression {\n@@ -1904,1 +1980,2 @@\n-    public static final class VarOp extends CoreOp {\n+    public static final class VarOp extends CoreOp\n+            implements JavaStatement {\n@@ -1983,1 +2060,2 @@\n-    public sealed abstract static class VarAccessOp extends CoreOp implements AccessOp {\n+    public sealed abstract static class VarAccessOp extends CoreOp\n+            implements AccessOp {\n@@ -2015,1 +2093,2 @@\n-        public static final class VarLoadOp extends VarAccessOp {\n+        public static final class VarLoadOp extends VarAccessOp\n+                implements JavaExpression {\n@@ -2056,1 +2135,2 @@\n-        public static final class VarStoreOp extends VarAccessOp {\n+        public static final class VarStoreOp extends VarAccessOp\n+                implements JavaExpression, JavaStatement {\n@@ -2291,1 +2371,2 @@\n-    public static final class ExceptionRegionEnter extends CoreOp implements Op.BlockTerminating {\n+    public static final class ExceptionRegionEnter extends CoreOp\n+            implements Op.BlockTerminating {\n@@ -2354,1 +2435,2 @@\n-    public static final class ExceptionRegionExit extends CoreOp implements Op.BlockTerminating {\n+    public static final class ExceptionRegionExit extends CoreOp\n+            implements Op.BlockTerminating {\n@@ -2427,1 +2509,2 @@\n-    public static final class ConcatOp extends CoreOp implements Op.Pure {\n+    public static final class ConcatOp extends CoreOp\n+            implements Op.Pure, JavaExpression {\n@@ -2462,1 +2545,2 @@\n-    public sealed static abstract class ArithmeticOperation extends CoreOp implements Op.Pure {\n+    public sealed static abstract class ArithmeticOperation extends CoreOp\n+            implements Op.Pure, JavaExpression {\n@@ -2483,1 +2567,2 @@\n-    public sealed static abstract class TestOperation extends CoreOp implements Op.Pure {\n+    public sealed static abstract class TestOperation extends CoreOp\n+            implements Op.Pure, JavaExpression {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOp.java","additions":124,"deletions":39,"binary":false,"changes":163,"status":"modified"},{"patch":"@@ -87,1 +87,2 @@\n-    public sealed static abstract class JavaLabelOp extends ExtendedOp implements Op.Lowerable, Op.BodyTerminating {\n+    public sealed static abstract class JavaLabelOp extends ExtendedOp\n+            implements Op.Lowerable, Op.BodyTerminating, JavaStatement {\n@@ -260,1 +261,2 @@\n-    public static final class JavaYieldOp extends ExtendedOp implements Op.BodyTerminating {\n+    public static final class JavaYieldOp extends ExtendedOp\n+            implements Op.BodyTerminating, JavaStatement {\n@@ -305,1 +307,2 @@\n-    public static final class JavaBlockOp extends ExtendedOp implements Op.Nested, Op.Lowerable {\n+    public static final class JavaBlockOp extends ExtendedOp\n+            implements Op.Nested, Op.Lowerable, JavaStatement {\n@@ -386,1 +389,2 @@\n-    public static final class JavaLabeledOp extends ExtendedOp implements Op.Nested, Op.Lowerable {\n+    public static final class JavaLabeledOp extends ExtendedOp\n+            implements Op.Nested, Op.Lowerable, JavaStatement {\n@@ -477,1 +481,2 @@\n-    public static final class JavaIfOp extends ExtendedOp implements Op.Nested, Op.Lowerable {\n+    public static final class JavaIfOp extends ExtendedOp\n+            implements Op.Nested, Op.Lowerable, JavaStatement {\n@@ -702,1 +707,2 @@\n-    public static final class JavaSwitchExpressionOp extends ExtendedOp implements Op.Nested, Op.Lowerable {\n+    public static final class JavaSwitchExpressionOp extends ExtendedOp\n+            implements Op.Nested, Op.Lowerable, JavaExpression {\n@@ -769,1 +775,2 @@\n-    public static final class JavaSwitchFallthroughOp extends ExtendedOp implements Op.BodyTerminating {\n+    public static final class JavaSwitchFallthroughOp extends ExtendedOp\n+            implements Op.BodyTerminating {\n@@ -799,1 +806,2 @@\n-    public static final class JavaForOp extends ExtendedOp implements Op.Loop, Op.Lowerable {\n+    public static final class JavaForOp extends ExtendedOp\n+            implements Op.Loop, Op.Lowerable, JavaStatement {\n@@ -1058,1 +1066,2 @@\n-    public static final class JavaEnhancedForOp extends ExtendedOp implements Op.Loop, Op.Lowerable {\n+    public static final class JavaEnhancedForOp extends ExtendedOp\n+            implements Op.Loop, Op.Lowerable, JavaStatement {\n@@ -1318,1 +1327,2 @@\n-    public static final class JavaWhileOp extends ExtendedOp implements Op.Loop, Op.Lowerable {\n+    public static final class JavaWhileOp extends ExtendedOp\n+            implements Op.Loop, Op.Lowerable, JavaStatement {\n@@ -1463,1 +1473,2 @@\n-    public static final class JavaDoWhileOp extends ExtendedOp implements Op.Loop, Op.Lowerable {\n+    public static final class JavaDoWhileOp extends ExtendedOp\n+            implements Op.Loop, Op.Lowerable, JavaStatement {\n@@ -1605,1 +1616,2 @@\n-    public sealed static abstract class JavaConditionalOp extends ExtendedOp implements Op.Nested, Op.Lowerable {\n+    public sealed static abstract class JavaConditionalOp extends ExtendedOp\n+            implements Op.Nested, Op.Lowerable, JavaExpression {\n@@ -1828,1 +1840,2 @@\n-    public static final class JavaConditionalExpressionOp extends ExtendedOp implements Op.Nested, Op.Lowerable {\n+    public static final class JavaConditionalExpressionOp extends ExtendedOp\n+            implements Op.Nested, Op.Lowerable, JavaExpression {\n@@ -1933,1 +1946,2 @@\n-    public static final class JavaTryOp extends ExtendedOp implements Op.Nested, Op.Lowerable {\n+    public static final class JavaTryOp extends ExtendedOp\n+            implements Op.Nested, Op.Lowerable, JavaStatement {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"}]}