{"files":[{"patch":"@@ -89,1 +89,1 @@\n-    public record LoopReturn<T>(Tensor<Boolean> cond, T output) {}\n+    public record LoopResult<T>(Tensor<Boolean> cond, T output) {}\n@@ -91,1 +91,1 @@\n-        LoopReturn<T> invoke(Tensor<Long> i, Tensor<Boolean> cond, T input);\n+        LoopResult<T> invoke(Tensor<Long> i, Tensor<Boolean> cond, T input);\n@@ -97,1 +97,1 @@\n-            LoopReturn<T> ret = loopBody.invoke(i, cond, values);\n+            LoopResult<T> ret = loopBody.invoke(i, cond, values);\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/ExplicitOnnxOperators.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -91,0 +91,1 @@\n+            OnnxProtoPrinter.printModel(protobufModel);\n@@ -92,1 +93,0 @@\n-                System.out.println(func.toText());\n@@ -141,1 +141,1 @@\n-            } catch (ReflectiveOperationException e) {\n+            } catch (Exception e) {\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxRuntime.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -240,6 +240,0 @@\n-                \/\/ Transform record static construction\n-                \/\/ @@@ use of NewOp sometimes cause IOOBE from javac at jdk.incubator.code\/jdk.incubator.code.internal.ReflectMethods$BodyScanner.thisValue(ReflectMethods.java:689)\n-                case CoreOp.InvokeOp io when isRecord(l, io.resultType()) -> {\n-                    Op.Result result = bb.op(CoreOp.tuple(bb.context().getValues(io.operands())));\n-                    bb.context().mapValue(io.result(), result);\n-                }\n@@ -275,1 +269,1 @@\n-    \/\/ @@@ Ugly copy of Body::transform content to translate types\n+    \/\/ @@@ Copy of Body::transform content to translate types\n@@ -365,4 +359,4 @@\n-        if (type instanceof ClassType ct) try {\n-            var t = ct.resolve(l);\n-            while (t instanceof ParameterizedType pt) t = pt.getRawType();\n-            if (t instanceof Class c) return c.isRecord();\n+        try {\n+            return type instanceof ClassType ct &&\n+                    ct.erasure().resolve(l) instanceof Class c &&\n+                    c.isRecord();\n@@ -372,1 +366,0 @@\n-        return false;\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/compiler\/OnnxTransformer.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-        return Loop(max, TRUE, initialValue, (i, cond, v) -> new LoopReturn<>(cond, Add(v, v)));\n+        return Loop(max, TRUE, initialValue, (i, cond, v) -> new LoopResult<>(cond, Add(v, v)));\n@@ -262,1 +262,1 @@\n-        return Loop(max, TRUE, new SingleValueTuple<>(initialValue), (i, cond, v) -> new LoopReturn<>(cond, new SingleValueTuple<>(Add(v.val(), v.val()))));\n+        return Loop(max, TRUE, new SingleValueTuple<>(initialValue), (i, cond, v) -> new LoopResult<>(cond, new SingleValueTuple<>(Add(v.val(), v.val()))));\n@@ -277,8 +277,0 @@\n-    static Tuple newTuple(Tensor<Long> a, Tensor<Float> b) {\n-        return new Tuple(a, b);\n-    }\n-\n-    static LoopReturn<Tuple> newLoopReturn(Tensor<Boolean> b, Tuple t) {\n-        return new LoopReturn<>(b, t);\n-    }\n-\n@@ -290,1 +282,1 @@\n-        return Loop(c3, b, newTuple(c1, c2), (i, cond, v) -> newLoopReturn(Identity(cond), newTuple(Add(v.a(), v.a()), Identity(Add(v.b(), v.b())))));\n+        return Loop(c3, b, new Tuple(c1, c2), (i, cond, v) -> new LoopResult<>(Identity(cond), new Tuple(Add(v.a(), v.a()), Identity(Add(v.b(), v.b())))));\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/SimpleTest.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-                -> newLoopReturn(cond, turnLeft(d)));\n+                -> new LoopResult<>(cond, turnLeft(d)));\n@@ -126,1 +126,1 @@\n-                return newLoopReturn(isWallAt(posInFrontOfMe(pos, dir)), dir);\n+                return new LoopResult<>(isWallAt(posInFrontOfMe(pos, dir)), dir);\n@@ -146,1 +146,1 @@\n-            return new LoopReturn<>(Not(atHome(pos)), new LoopData(pos, direction, appendToPath(loopData.path(), direction)));\n+            return new LoopResult<>(Not(atHome(pos)), new LoopData(pos, direction, appendToPath(loopData.path(), direction)));\n@@ -158,5 +158,0 @@\n-\n-    \/\/ @@@ use of new LoopReturn may cause IOOBE from javac at jdk.incubator.code\/jdk.incubator.code.internal.ReflectMethods$BodyScanner.thisValue(ReflectMethods.java:689)\n-    static <T> LoopReturn<T> newLoopReturn(Tensor<Boolean> cond, T output) {\n-        return new LoopReturn<>(cond, output);\n-    }\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/WalkTheMazeTest.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"}]}