{"files":[{"patch":"@@ -63,0 +63,1 @@\n+        List<Tensor> arguments;\n@@ -64,1 +65,2 @@\n-        if (singleMethodInvocation(lambda) instanceof CoreOp.InvokeOp iop) {\n+        if (singleMethodInvocation(lambda) instanceof\n+                SingleMethod(CoreOp.InvokeOp iop, Map<Value, Value> valueMapping)) {\n@@ -74,0 +76,7 @@\n+\n+            arguments = iop.operands().stream().toList().stream()\n+                    .map(valueMapping::get)\n+                    .map(v -> quotable.capturedValues().get(v))\n+                    .map(val -> val instanceof CoreOp.Var<?> v ? v.value() : val)\n+                    .map(val -> (Tensor) val)\n+                    .toList();\n@@ -92,1 +101,0 @@\n-        }\n@@ -94,2 +102,1 @@\n-        try (var session = getInstance().createSession(OnnxProtoBuilder.build(onnxFunc.body().entryBlock()))) {\n-            List<Tensor> arguments = quotable.capturedValues().values().stream()\n+            arguments = quotable.capturedValues().values().stream()\n@@ -99,0 +106,3 @@\n+        }\n+\n+        try (var session = getInstance().createSession(OnnxProtoBuilder.build(onnxFunc.body().entryBlock()))) {\n@@ -103,1 +113,2 @@\n-    static CoreOp.InvokeOp singleMethodInvocation(CoreOp.LambdaOp lop) {\n+    record SingleMethod(CoreOp.InvokeOp iop, Map<Value, Value> valueMapping) {}\n+    static SingleMethod singleMethodInvocation(CoreOp.LambdaOp lop) {\n@@ -115,1 +126,1 @@\n-        return methodRefInvokeOp;\n+        return new SingleMethod(methodRefInvokeOp, valueMapping);\n@@ -128,1 +139,1 @@\n-                    Value v = varLoadOp.varOp().operands().getFirst();\n+                    Value v = varLoadOp.varOp().result();\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxRuntime.java","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"}]}