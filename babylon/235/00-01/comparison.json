{"files":[{"patch":"@@ -2183,1 +2183,1 @@\n-                        case null -> null;\n+                        case null -> \"\";\n@@ -2220,1 +2220,1 @@\n-            this.varName = varName == null || varName.isEmpty() ? null : varName;\n+            this.varName =  varName == null ? \"\" : varName;\n@@ -2226,1 +2226,1 @@\n-            if (varName == null) {\n+            if (isUnnamedVariable()) {\n@@ -2253,1 +2253,1 @@\n-            return varName == null;\n+            return varName.isEmpty();\n@@ -4031,1 +4031,1 @@\n-     * Creates a var operation.\n+     * Creates a var operation modeling an unnamed variable, either an unnamed local variable or an unnamed parameter.\n@@ -4041,1 +4041,1 @@\n-     * Creates a var operation.\n+     * Creates a var operation modeling a variable, either a local variable or a parameter.\n@@ -4043,1 +4043,1 @@\n-     * Null or empty string means unnamed variable\n+     * If the given name is {@code null} or an empty string then the variable is an unnamed variable.\n@@ -4054,1 +4054,1 @@\n-     * Creates a var operation.\n+     * Creates a var operation modeling a variable, either a local variable or a parameter.\n@@ -4056,1 +4056,1 @@\n-     * Null or empty string means unnamed variable\n+     * If the given name is {@code null} or an empty string then the variable is an unnamed variable.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOp.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-                .allMatch(vop -> vop.varName() == null);\n+                .allMatch(CoreOp.VarOp::isUnnamedVariable);\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestVarOp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}